Terminals unused in grammar

    "lexer error"
    "end of failed eader macro"
    LLPIPE


Grammar

    0 $accept: program $end

    1 program: %empty
    2        | program module_declaration
    3        | program structure_declaration
    4        | program enum_declaration
    5        | program global_let
    6        | program global_function_declaration
    7        | program expect_declaration
    8        | program require_declaration ';'
    9        | program options_declaration ';'
   10        | program alias_declaration
   11        | program variant_alias_declaration
   12        | program tuple_alias_declaration
   13        | program bitfield_alias_declaration
   14        | program top_level_reader_macro
   15        | program ';'

   16 top_level_reader_macro: expr_reader ';'

   17 optional_public_or_private_module: %empty
   18                                  | "public"
   19                                  | "private"

   20 module_name: '$'
   21            | "name"

   22 module_declaration: "module" module_name optional_shared optional_public_or_private_module

   23 character_sequence: STRING_CHARACTER
   24                   | STRING_CHARACTER_ESC
   25                   | character_sequence STRING_CHARACTER
   26                   | character_sequence STRING_CHARACTER_ESC

   27 string_constant: "start of the string" character_sequence "end of the string"
   28                | "start of the string" "end of the string"

   29 string_builder_body: %empty
   30                    | string_builder_body character_sequence
   31                    | string_builder_body "{" expr "}"

   32 string_builder: "start of the string" string_builder_body "end of the string"

   33 reader_character_sequence: STRING_CHARACTER
   34                          | reader_character_sequence STRING_CHARACTER

   35 $@1: %empty

   36 expr_reader: '%' name_in_namespace $@1 reader_character_sequence

   37 options_declaration: "options" annotation_argument_list

   38 require_declaration: "require" require_module

   39 require_module_name: "name"
   40                    | '%' require_module_name
   41                    | require_module_name '.' "name"
   42                    | require_module_name '/' "name"

   43 require_module: require_module_name is_public_module
   44               | require_module_name "as" "name" is_public_module

   45 is_public_module: %empty
   46                 | "public"

   47 expect_declaration: "expect" expect_list

   48 expect_list: expect_error
   49            | expect_list ',' expect_error

   50 expect_error: "integer constant"
   51             | "integer constant" ':' "integer constant"

   52 expression_label: "label" "integer constant" ':'

   53 expression_goto: "goto" "label" "integer constant"
   54                | "goto" expr

   55 elif_or_static_elif: "elif"
   56                    | "static_elif"

   57 expression_else: %empty
   58                | "else" optional_semis expression_block
   59                | elif_or_static_elif '(' expr ')' optional_semis expression_block expression_else

   60 if_or_static_if: "if"
   61                | "static_if"

   62 expression_else_one_liner: %empty
   63                          | "else" expression_if_one_liner

   64 expression_if_one_liner: expr
   65                        | expression_return
   66                        | expression_yield
   67                        | expression_break
   68                        | expression_continue

   69 semis: ';'
   70      | semis ';'

   71 optional_semis: %empty
   72               | semis

   73 $@2: %empty

   74 expression_if_then_else: $@2 if_or_static_if '(' expr ')' optional_semis expression_block expression_else

   75 expression_if_then_else_oneliner: expression_if_one_liner "if" '(' expr ')' expression_else_one_liner ';'

   76 $@3: %empty

   77 expression_for_loop: $@3 "for" '(' variable_name_with_pos_list "in" expr_list ')' optional_semis expression_block

   78 expression_unsafe: "unsafe" optional_semis expression_block

   79 $@4: %empty

   80 expression_while_loop: $@4 "while" '(' expr ')' optional_semis expression_block

   81 $@5: %empty

   82 expression_with: $@5 "with" '(' expr ')' optional_semis expression_block

   83 expression_with_alias: "assume" "name" '=' expr

   84 annotation_argument_value: string_constant
   85                          | "name"
   86                          | "integer constant"
   87                          | "floating point constant"
   88                          | "true"
   89                          | "false"

   90 annotation_argument_value_list: annotation_argument_value
   91                               | annotation_argument_value_list ',' annotation_argument_value

   92 annotation_argument_name: "name"
   93                         | "type"
   94                         | "in"

   95 annotation_argument: annotation_argument_name '=' string_constant
   96                    | annotation_argument_name '=' "name"
   97                    | annotation_argument_name '=' "integer constant"
   98                    | annotation_argument_name '=' "floating point constant"
   99                    | annotation_argument_name '=' "true"
  100                    | annotation_argument_name '=' "false"
  101                    | annotation_argument_name
  102                    | annotation_argument_name '=' '(' annotation_argument_value_list ')'

  103 annotation_argument_list: annotation_argument
  104                         | annotation_argument_list ',' annotation_argument

  105 metadata_argument_list: '@' annotation_argument
  106                       | metadata_argument_list '@' annotation_argument

  107 annotation_declaration_name: name_in_namespace
  108                            | "require"
  109                            | "private"

  110 annotation_declaration_basic: annotation_declaration_name
  111                             | annotation_declaration_name '(' annotation_argument_list ')'

  112 annotation_declaration: annotation_declaration_basic
  113                       | '!' annotation_declaration
  114                       | annotation_declaration "&&" annotation_declaration
  115                       | annotation_declaration "||" annotation_declaration
  116                       | annotation_declaration "^^" annotation_declaration
  117                       | '(' annotation_declaration ')'
  118                       | "|>" annotation_declaration

  119 annotation_list: annotation_declaration
  120                | annotation_list ',' annotation_declaration

  121 optional_annotation_list: %empty
  122                         | '[' annotation_list ']'

  123 optional_function_argument_list: %empty
  124                                | '(' ')'
  125                                | '(' function_argument_list ')'

  126 optional_function_type: %empty
  127                       | ':' type_declaration

  128 function_name: "name"
  129              | "operator" '!'
  130              | "operator" '~'
  131              | "operator" "+="
  132              | "operator" "-="
  133              | "operator" "*="
  134              | "operator" "/="
  135              | "operator" "%="
  136              | "operator" "&="
  137              | "operator" "|="
  138              | "operator" "^="
  139              | "operator" "&&="
  140              | "operator" "||="
  141              | "operator" "^^="
  142              | "operator" "&&"
  143              | "operator" "||"
  144              | "operator" "^^"
  145              | "operator" '+'
  146              | "operator" '-'
  147              | "operator" '*'
  148              | "operator" '/'
  149              | "operator" '%'
  150              | "operator" '<'
  151              | "operator" '>'
  152              | "operator" ".."
  153              | "operator" "=="
  154              | "operator" "!="
  155              | "operator" "<="
  156              | "operator" ">="
  157              | "operator" '&'
  158              | "operator" '|'
  159              | "operator" '^'
  160              | "++" "operator"
  161              | "--" "operator"
  162              | "operator" "++"
  163              | "operator" "--"
  164              | "operator" "<<"
  165              | "operator" ">>"
  166              | "operator" "<<="
  167              | "operator" ">>="
  168              | "operator" "<<<"
  169              | "operator" ">>>"
  170              | "operator" "<<<="
  171              | "operator" ">>>="
  172              | "operator" '[' ']'
  173              | "operator" "?[" ']'
  174              | "operator" '.'
  175              | "operator" "?."
  176              | "operator" '.' "name"
  177              | "operator" '.' "name" ":="
  178              | "operator" "?." "name"
  179              | "operator" ":="
  180              | "operator" "delete"
  181              | "operator" "??"
  182              | "operator" "is"
  183              | "operator" "as"
  184              | "operator" "is" "name"
  185              | "operator" "as" "name"
  186              | "operator" '?' "as"
  187              | "operator" '?' "as" "name"
  188              | "bool"
  189              | "string"
  190              | "int"
  191              | "int2"
  192              | "int3"
  193              | "int4"
  194              | "uint"
  195              | "uint2"
  196              | "uint3"
  197              | "uint4"
  198              | "float"
  199              | "float2"
  200              | "float3"
  201              | "float4"
  202              | "range"
  203              | "urange"
  204              | "range64"
  205              | "urange64"
  206              | "int64"
  207              | "uint64"
  208              | "double"
  209              | "int8"
  210              | "uint8"
  211              | "int16"
  212              | "uint16"

  213 global_function_declaration: optional_annotation_list "def" function_declaration

  214 optional_public_or_private_function: %empty
  215                                    | "private"
  216                                    | "public"

  217 function_declaration_header: function_name optional_function_argument_list optional_function_type

  218 $@6: %empty

  219 function_declaration: optional_public_or_private_function $@6 function_declaration_header expression_block

  220 expression_block_finally: %empty

  221 $@7: %empty

  222 $@8: %empty

  223 expression_block_finally: "finally" $@7 '{' expressions $@8 '}'

  224 $@9: %empty

  225 $@10: %empty

  226 expression_block: $@9 '{' expressions $@10 '}' expression_block_finally

  227 expr_call_pipe: expr_call expr_full_block_assumed_piped

  228 expression_any: ';'
  229               | expr_assign ';'
  230               | expression_delete ';'
  231               | expression_let
  232               | expression_while_loop
  233               | expression_unsafe
  234               | expression_with
  235               | expression_with_alias ';'
  236               | expression_for_loop
  237               | expression_break ';'
  238               | expression_continue ';'
  239               | expression_return ';'
  240               | expression_yield ';'
  241               | expression_if_then_else
  242               | expression_if_then_else_oneliner
  243               | expression_try_catch
  244               | expression_label ';'
  245               | expression_goto ';'
  246               | "pass" ';'

  247 expressions: %empty
  248            | expressions expression_any
  249            | expressions error

  250 optional_expr_list: %empty
  251                   | expr_list optional_comma

  252 optional_expr_map_tuple_list: %empty
  253                             | expr_map_tuple_list optional_comma

  254 type_declaration_no_options_list: type_declaration
  255                                 | type_declaration_no_options_list c_or_s type_declaration

  256 name_in_namespace: "name"
  257                  | "name" "::" "name"
  258                  | "::" "name"

  259 expression_delete: "delete" expr
  260                  | "delete" "explicit" expr

  261 $@11: %empty

  262 $@12: %empty

  263 new_type_declaration: '<' $@11 type_declaration '>' $@12
  264                     | structure_type_declaration

  265 expr_new: "new" new_type_declaration
  266         | "new" new_type_declaration '(' use_initializer ')'
  267         | "new" new_type_declaration '(' expr_list ')'
  268         | "new" new_type_declaration '(' make_struct_single ')'
  269         | "new" new_type_declaration '(' "uninitialized" make_struct_single ')'
  270         | "new" make_decl

  271 expression_break: "break"

  272 expression_continue: "continue"

  273 expression_return: "return"
  274                  | "return" expr
  275                  | "return" "<-" expr

  276 expression_yield: "yield" expr
  277                 | "yield" "<-" expr

  278 expression_try_catch: "try" expression_block "recover" expression_block

  279 kwd_let_var_or_nothing: "let"
  280                       | "var"
  281                       | %empty

  282 kwd_let: "let"
  283        | "var"

  284 optional_in_scope: "inscope"
  285                  | %empty

  286 tuple_expansion: "name"
  287                | tuple_expansion ',' "name"

  288 tuple_expansion_variable_declaration: '(' tuple_expansion ')' ':' type_declaration_no_options copy_or_move_or_clone expr ';'
  289                                     | '(' tuple_expansion ')' optional_ref copy_or_move_or_clone expr ';'

  290 expression_let: kwd_let optional_in_scope let_variable_declaration
  291               | kwd_let optional_in_scope tuple_expansion_variable_declaration
  292               | kwd_let optional_in_scope '{' variable_declaration_list '}'

  293 $@13: %empty

  294 $@14: %empty

  295 expr_cast: "cast" '<' $@13 type_declaration_no_options '>' $@14 expr

  296 $@15: %empty

  297 $@16: %empty

  298 expr_cast: "upcast" '<' $@15 type_declaration_no_options '>' $@16 expr

  299 $@17: %empty

  300 $@18: %empty

  301 expr_cast: "reinterpret" '<' $@17 type_declaration_no_options '>' $@18 expr

  302 $@19: %empty

  303 $@20: %empty

  304 expr_type_decl: "type" '<' $@19 type_declaration '>' $@20

  305 expr_type_info: "typeinfo" name_in_namespace '(' expr ')'
  306               | "typeinfo" name_in_namespace '<' "name" '>' '(' expr ')'
  307               | "typeinfo" name_in_namespace '<' "name" c_or_s "name" '>' '(' expr ')'

  308 expr_list: expr
  309          | expr_list ',' expr

  310 block_or_simple_block: expression_block
  311                      | "=>" expr
  312                      | "=>" "<-" expr

  313 block_or_lambda: '$'
  314                | '@'
  315                | '@' '@'

  316 capture_entry: '&' "name"
  317              | '=' "name"
  318              | "<-" "name"
  319              | ":=" "name"
  320              | "name" '(' "name" ')'

  321 capture_list: capture_entry
  322             | capture_list ',' capture_entry

  323 optional_capture_list: %empty
  324                      | "capture" '(' capture_list ')'

  325 expr_full_block: block_or_lambda optional_annotation_list optional_capture_list optional_function_argument_list optional_function_type optional_semis block_or_simple_block

  326 expr_full_block_assumed_piped: block_or_lambda optional_annotation_list optional_capture_list optional_function_argument_list optional_function_type optional_semis expression_block
  327                              | '{' expressions '}'

  328 expr_numeric_const: "integer constant"
  329                   | "unsigned integer constant"
  330                   | "long integer constant"
  331                   | "unsigned long integer constant"
  332                   | "unsigned int8 constant"
  333                   | "floating point constant"
  334                   | "double constant"

  335 expr_assign: expr
  336            | expr '=' expr
  337            | expr "<-" expr
  338            | expr ":=" expr
  339            | expr "&=" expr
  340            | expr "|=" expr
  341            | expr "^=" expr
  342            | expr "&&=" expr
  343            | expr "||=" expr
  344            | expr "^^=" expr
  345            | expr "+=" expr
  346            | expr "-=" expr
  347            | expr "*=" expr
  348            | expr "/=" expr
  349            | expr "%=" expr
  350            | expr "<<=" expr
  351            | expr ">>=" expr
  352            | expr "<<<=" expr
  353            | expr ">>>=" expr

  354 expr_named_call: name_in_namespace '(' '[' make_struct_fields ']' ')'
  355                | name_in_namespace '(' expr_list ',' '[' make_struct_fields ']' ')'

  356 expr_method_call: expr "->" "name" '(' ')'
  357                 | expr "->" "name" '(' expr_list ')'

  358 func_addr_name: name_in_namespace
  359               | "$i" '(' expr ')'

  360 func_addr_expr: '@' '@' func_addr_name

  361 $@21: %empty

  362 $@22: %empty

  363 func_addr_expr: '@' '@' '<' $@21 type_declaration_no_options '>' $@22 func_addr_name

  364 $@23: %empty

  365 $@24: %empty

  366 func_addr_expr: '@' '@' '<' $@23 optional_function_argument_list optional_function_type '>' $@24 func_addr_name

  367 expr_field: expr '.' "name"
  368           | expr '.' '.' "name"
  369           | expr '.' "name" '(' ')'
  370           | expr '.' "name" '(' expr_list ')'
  371           | expr '.' basic_type_declaration '(' ')'
  372           | expr '.' basic_type_declaration '(' expr_list ')'

  373 $@25: %empty

  374 $@26: %empty

  375 expr_field: expr '.' $@25 error $@26

  376 expr_call: name_in_namespace '(' ')'
  377          | name_in_namespace '(' "uninitialized" ')'
  378          | name_in_namespace '(' make_struct_single ')'
  379          | name_in_namespace '(' "uninitialized" make_struct_single ')'
  380          | name_in_namespace '(' expr_list ')'
  381          | basic_type_declaration '(' ')'
  382          | basic_type_declaration '(' expr_list ')'

  383 expr: "null"
  384     | name_in_namespace
  385     | expr_numeric_const
  386     | expr_reader
  387     | string_builder
  388     | make_decl
  389     | "true"
  390     | "false"
  391     | expr_field
  392     | expr_mtag
  393     | '!' expr
  394     | '~' expr
  395     | '+' expr
  396     | '-' expr
  397     | expr "<<" expr
  398     | expr ">>" expr
  399     | expr "<<<" expr
  400     | expr ">>>" expr
  401     | expr '+' expr
  402     | expr '-' expr
  403     | expr '*' expr
  404     | expr '/' expr
  405     | expr '%' expr
  406     | expr '<' expr
  407     | expr '>' expr
  408     | expr "==" expr
  409     | expr "!=" expr
  410     | expr "<=" expr
  411     | expr ">=" expr
  412     | expr '&' expr
  413     | expr '|' expr
  414     | expr '^' expr
  415     | expr "&&" expr
  416     | expr "||" expr
  417     | expr "^^" expr
  418     | expr ".." expr
  419     | "++" expr
  420     | "--" expr
  421     | expr "++"
  422     | expr "--"
  423     | '(' expr_list optional_comma ')'
  424     | expr '[' expr ']'
  425     | expr '.' '[' expr ']'
  426     | expr "?[" expr ']'
  427     | expr '.' "?[" expr ']'
  428     | expr "?." "name"
  429     | expr '.' "?." "name"
  430     | func_addr_expr
  431     | expr_call
  432     | '*' expr
  433     | "deref" '(' expr ')'
  434     | "addr" '(' expr ')'
  435     | expr_generator
  436     | expr "??" expr
  437     | expr '?' expr ':' expr

  438 $@27: %empty

  439 $@28: %empty

  440 expr: expr "is" "type" '<' $@27 type_declaration_no_options '>' $@28
  441     | expr "is" basic_type_declaration
  442     | expr "is" "name"
  443     | expr "as" "name"

  444 $@29: %empty

  445 $@30: %empty

  446 expr: expr "as" "type" '<' $@29 type_declaration '>' $@30
  447     | expr "as" basic_type_declaration
  448     | expr '?' "as" "name"

  449 $@31: %empty

  450 $@32: %empty

  451 expr: expr '?' "as" "type" '<' $@31 type_declaration '>' $@32
  452     | expr '?' "as" basic_type_declaration
  453     | expr_type_info
  454     | expr_type_decl
  455     | expr_cast
  456     | expr_new
  457     | expr_method_call
  458     | expr_named_call
  459     | expr_full_block
  460     | expr "<|" expr
  461     | expr "|>" expr
  462     | expr "|>" basic_type_declaration
  463     | expr_call_pipe
  464     | "unsafe" '(' expr ')'

  465 expr_generator: "generator" '<' type_declaration_no_options '>' optional_capture_list '(' ')'
  466               | "generator" '<' type_declaration_no_options '>' optional_capture_list '(' expr ')'
  467               | "generator" '<' type_declaration_no_options '>' optional_capture_list optional_semis expression_block

  468 expr_mtag: "$$" '(' expr ')'
  469          | "$i" '(' expr ')'
  470          | "$v" '(' expr ')'
  471          | "$b" '(' expr ')'
  472          | "$a" '(' expr ')'
  473          | "..."
  474          | "$c" '(' expr ')' '(' ')'
  475          | "$c" '(' expr ')' '(' expr_list ')'
  476          | expr '.' "$f" '(' expr ')'
  477          | expr "?." "$f" '(' expr ')'
  478          | expr '.' '.' "$f" '(' expr ')'
  479          | expr '.' "?." "$f" '(' expr ')'
  480          | expr "as" "$f" '(' expr ')'
  481          | expr '?' "as" "$f" '(' expr ')'
  482          | expr "is" "$f" '(' expr ')'
  483          | '@' '@' "$c" '(' expr ')'

  484 optional_field_annotation: %empty
  485                          | metadata_argument_list

  486 optional_override: %empty
  487                  | "override"
  488                  | "sealed"

  489 optional_constant: %empty
  490                  | "const"

  491 optional_public_or_private_member_variable: %empty
  492                                           | "public"
  493                                           | "private"

  494 optional_static_member_variable: %empty
  495                                | "static"

  496 structure_variable_declaration: optional_field_annotation optional_static_member_variable optional_override optional_public_or_private_member_variable variable_declaration

  497 struct_variable_declaration_list: %empty

  498 $@33: %empty

  499 struct_variable_declaration_list: struct_variable_declaration_list $@33 structure_variable_declaration ';'

  500 $@34: %empty

  501 struct_variable_declaration_list: struct_variable_declaration_list optional_annotation_list "def" optional_public_or_private_member_variable "abstract" optional_constant $@34 function_declaration_header ';'

  502 $@35: %empty

  503 struct_variable_declaration_list: struct_variable_declaration_list optional_annotation_list "def" optional_public_or_private_member_variable optional_static_member_variable optional_override optional_constant $@35 function_declaration_header expression_block

  504 function_argument_declaration: optional_field_annotation kwd_let_var_or_nothing variable_declaration
  505                              | "$a" '(' expr ')'

  506 function_argument_list: function_argument_declaration
  507                       | function_argument_list ';' function_argument_declaration

  508 tuple_type: type_declaration
  509           | "name" ':' type_declaration

  510 tuple_type_list: tuple_type
  511                | tuple_type_list c_or_s tuple_type

  512 tuple_alias_type_list: %empty
  513                      | tuple_type
  514                      | tuple_alias_type_list semis tuple_type

  515 variant_type: "name" ':' type_declaration

  516 variant_type_list: variant_type
  517                  | variant_type_list c_or_s variant_type

  518 variant_alias_type_list: %empty
  519                        | variant_type
  520                        | variant_alias_type_list semis variant_type

  521 copy_or_move: '='
  522             | "<-"

  523 variable_declaration: variable_name_with_pos_list
  524                     | variable_name_with_pos_list '&'
  525                     | variable_name_with_pos_list ':' type_declaration
  526                     | variable_name_with_pos_list ':' type_declaration copy_or_move expr
  527                     | variable_name_with_pos_list copy_or_move expr

  528 copy_or_move_or_clone: '='
  529                      | "<-"
  530                      | ":="

  531 optional_ref: %empty
  532             | '&'

  533 let_variable_name_with_pos_list: "name"
  534                                | "$i" '(' expr ')'
  535                                | "name" "aka" "name"
  536                                | let_variable_name_with_pos_list ',' "name"
  537                                | let_variable_name_with_pos_list ',' "name" "aka" "name"

  538 global_let_variable_name_with_pos_list: "name"
  539                                       | global_let_variable_name_with_pos_list ',' "name"

  540 variable_declaration_list: %empty
  541                          | variable_declaration_list ';'
  542                          | variable_declaration_list let_variable_declaration

  543 let_variable_declaration: let_variable_name_with_pos_list ':' type_declaration_no_options ';'
  544                         | let_variable_name_with_pos_list ':' type_declaration_no_options copy_or_move_or_clone expr ';'
  545                         | let_variable_name_with_pos_list optional_ref copy_or_move_or_clone expr ';'

  546 global_let_variable_declaration: global_let_variable_name_with_pos_list ':' type_declaration_no_options ';'
  547                                | global_let_variable_name_with_pos_list ':' type_declaration_no_options copy_or_move_or_clone expr ';'
  548                                | global_let_variable_name_with_pos_list optional_ref copy_or_move_or_clone expr ';'

  549 optional_shared: %empty
  550                | "shared"

  551 optional_public_or_private_variable: %empty
  552                                    | "private"
  553                                    | "public"

  554 global_variable_declaration_list: %empty
  555                                 | global_variable_declaration_list ';'

  556 $@36: %empty

  557 global_variable_declaration_list: global_variable_declaration_list $@36 optional_field_annotation let_variable_declaration

  558 global_let: kwd_let optional_shared optional_public_or_private_variable '{' global_variable_declaration_list '}'

  559 $@37: %empty

  560 global_let: kwd_let optional_shared optional_public_or_private_variable $@37 optional_field_annotation global_let_variable_declaration

  561 enum_expression: "name"
  562                | "name" '=' expr

  563 commas: ','
  564       | commas ','

  565 enum_list: %empty
  566          | enum_expression
  567          | enum_list commas enum_expression

  568 optional_public_or_private_alias: %empty
  569                                 | "private"
  570                                 | "public"

  571 $@38: %empty

  572 single_alias: optional_public_or_private_alias "name" $@38 '=' type_declaration

  573 alias_declaration: "typedef" single_alias ';'

  574 optional_public_or_private_enum: %empty
  575                                | "private"
  576                                | "public"

  577 enum_name: "name"

  578 optional_enum_basic_type_declaration: %empty
  579                                     | ':' enum_basic_type_declaration

  580 optional_commas: %empty
  581                | commas

  582 $@39: %empty

  583 $@40: %empty

  584 $@41: %empty

  585 enum_declaration: optional_annotation_list "enum" $@39 optional_public_or_private_enum enum_name optional_enum_basic_type_declaration optional_commas '{' $@40 enum_list optional_commas $@41 '}'

  586 optional_structure_parent: %empty
  587                          | ':' name_in_namespace

  588 optional_sealed: %empty
  589                | "sealed"

  590 structure_name: optional_sealed "name" optional_structure_parent

  591 class_or_struct: "class"
  592                | "struct"

  593 optional_public_or_private_structure: %empty
  594                                     | "private"
  595                                     | "public"

  596 optional_struct_variable_declaration_list: %empty
  597                                          | '{' struct_variable_declaration_list '}'

  598 $@42: %empty

  599 $@43: %empty

  600 structure_declaration: optional_annotation_list class_or_struct optional_public_or_private_structure $@42 structure_name $@43 optional_struct_variable_declaration_list

  601 variable_name_with_pos_list: "name"
  602                            | "$i" '(' expr ')'
  603                            | "name" "aka" "name"
  604                            | variable_name_with_pos_list ',' "name"
  605                            | variable_name_with_pos_list ',' "name" "aka" "name"

  606 basic_type_declaration: "bool"
  607                       | "string"
  608                       | "int"
  609                       | "int8"
  610                       | "int16"
  611                       | "int64"
  612                       | "int2"
  613                       | "int3"
  614                       | "int4"
  615                       | "uint"
  616                       | "uint8"
  617                       | "uint16"
  618                       | "uint64"
  619                       | "uint2"
  620                       | "uint3"
  621                       | "uint4"
  622                       | "float"
  623                       | "float2"
  624                       | "float3"
  625                       | "float4"
  626                       | "void"
  627                       | "range"
  628                       | "urange"
  629                       | "range64"
  630                       | "urange64"
  631                       | "double"
  632                       | "bitfield"

  633 enum_basic_type_declaration: "int"
  634                            | "int8"
  635                            | "int16"
  636                            | "uint"
  637                            | "uint8"
  638                            | "uint16"
  639                            | "int64"
  640                            | "uint64"

  641 structure_type_declaration: name_in_namespace

  642 auto_type_declaration: "auto"
  643                      | "auto" '(' "name" ')'
  644                      | "$t" '(' expr ')'

  645 bitfield_bits: "name"
  646              | bitfield_bits ';' "name"

  647 bitfield_alias_bits: %empty
  648                    | "name"
  649                    | bitfield_alias_bits commas "name"

  650 $@44: %empty

  651 $@45: %empty

  652 bitfield_type_declaration: "bitfield" '<' $@44 bitfield_bits '>' $@45

  653 c_or_s: ','
  654       | ';'

  655 table_type_pair: type_declaration
  656                | type_declaration c_or_s type_declaration

  657 dim_list: '[' expr ']'
  658         | '[' ']'
  659         | dim_list '[' expr ']'
  660         | dim_list '[' ']'

  661 type_declaration_no_options: type_declaration_no_options_no_dim
  662                            | type_declaration_no_options_no_dim dim_list

  663 type_declaration_no_options_no_dim: basic_type_declaration
  664                                   | auto_type_declaration
  665                                   | bitfield_type_declaration
  666                                   | structure_type_declaration

  667 $@46: %empty

  668 $@47: %empty

  669 type_declaration_no_options_no_dim: "type" '<' $@46 type_declaration '>' $@47
  670                                   | "typedecl" '(' expr ')'
  671                                   | '$' name_in_namespace '(' optional_expr_list ')'

  672 $@48: %empty

  673 type_declaration_no_options_no_dim: '$' name_in_namespace '<' $@48 type_declaration_no_options_list '>' '(' optional_expr_list ')'
  674                                   | type_declaration_no_options_no_dim '-' '[' ']'
  675                                   | type_declaration_no_options_no_dim "explicit"
  676                                   | type_declaration_no_options_no_dim "const"
  677                                   | type_declaration_no_options_no_dim '-' "const"
  678                                   | type_declaration_no_options_no_dim '&'
  679                                   | type_declaration_no_options_no_dim '-' '&'
  680                                   | type_declaration_no_options_no_dim '#'
  681                                   | type_declaration_no_options_no_dim "implicit"
  682                                   | type_declaration_no_options_no_dim '-' '#'
  683                                   | type_declaration_no_options_no_dim "==" "const"
  684                                   | type_declaration_no_options_no_dim "==" '&'
  685                                   | type_declaration_no_options_no_dim '?'

  686 $@49: %empty

  687 $@50: %empty

  688 type_declaration_no_options_no_dim: "smart_ptr" '<' $@49 type_declaration '>' $@50
  689                                   | type_declaration_no_options_no_dim "??"

  690 $@51: %empty

  691 $@52: %empty

  692 type_declaration_no_options_no_dim: "array" '<' $@51 type_declaration '>' $@52

  693 $@53: %empty

  694 $@54: %empty

  695 type_declaration_no_options_no_dim: "table" '<' $@53 table_type_pair '>' $@54

  696 $@55: %empty

  697 $@56: %empty

  698 type_declaration_no_options_no_dim: "iterator" '<' $@55 type_declaration '>' $@56
  699                                   | "block"

  700 $@57: %empty

  701 $@58: %empty

  702 type_declaration_no_options_no_dim: "block" '<' $@57 type_declaration '>' $@58

  703 $@59: %empty

  704 $@60: %empty

  705 type_declaration_no_options_no_dim: "block" '<' $@59 optional_function_argument_list optional_function_type '>' $@60
  706                                   | "function"

  707 $@61: %empty

  708 $@62: %empty

  709 type_declaration_no_options_no_dim: "function" '<' $@61 type_declaration '>' $@62

  710 $@63: %empty

  711 $@64: %empty

  712 type_declaration_no_options_no_dim: "function" '<' $@63 optional_function_argument_list optional_function_type '>' $@64
  713                                   | "lambda"

  714 $@65: %empty

  715 $@66: %empty

  716 type_declaration_no_options_no_dim: "lambda" '<' $@65 type_declaration '>' $@66

  717 $@67: %empty

  718 $@68: %empty

  719 type_declaration_no_options_no_dim: "lambda" '<' $@67 optional_function_argument_list optional_function_type '>' $@68

  720 $@69: %empty

  721 $@70: %empty

  722 type_declaration_no_options_no_dim: "tuple" '<' $@69 tuple_type_list '>' $@70

  723 $@71: %empty

  724 $@72: %empty

  725 type_declaration_no_options_no_dim: "variant" '<' $@71 variant_type_list '>' $@72

  726 type_declaration: type_declaration_no_options
  727                 | type_declaration '|' type_declaration_no_options
  728                 | type_declaration '|' '#'

  729 $@73: %empty

  730 $@74: %empty

  731 $@75: %empty

  732 $@76: %empty

  733 tuple_alias_declaration: "tuple" $@73 optional_public_or_private_alias "name" optional_semis $@74 '{' $@75 tuple_alias_type_list optional_semis $@76 '}'

  734 $@77: %empty

  735 $@78: %empty

  736 $@79: %empty

  737 $@80: %empty

  738 variant_alias_declaration: "variant" $@77 optional_public_or_private_alias "name" optional_semis $@78 '{' $@79 variant_alias_type_list optional_semis $@80 '}'

  739 $@81: %empty

  740 $@82: %empty

  741 $@83: %empty

  742 $@84: %empty

  743 bitfield_alias_declaration: "bitfield" $@81 optional_public_or_private_alias "name" optional_commas $@82 '{' $@83 bitfield_alias_bits optional_commas $@84 '}'

  744 make_decl: make_struct_decl
  745          | make_dim_decl
  746          | make_table_decl
  747          | array_comprehension
  748          | make_tuple_call

  749 make_struct_fields: "name" copy_or_move expr
  750                   | "name" ":=" expr
  751                   | make_struct_fields ',' "name" copy_or_move expr
  752                   | make_struct_fields ',' "name" ":=" expr
  753                   | "$f" '(' expr ')' copy_or_move expr
  754                   | "$f" '(' expr ')' ":=" expr
  755                   | make_struct_fields ',' "$f" '(' expr ')' copy_or_move expr
  756                   | make_struct_fields ',' "$f" '(' expr ')' ":=" expr

  757 make_variant_dim: make_struct_fields

  758 make_struct_single: make_struct_fields

  759 make_struct_dim_list: '(' make_struct_fields ')'
  760                     | make_struct_dim_list ',' '(' make_struct_fields ')'

  761 make_struct_dim_decl: make_struct_fields
  762                     | make_struct_dim_list optional_comma

  763 optional_make_struct_dim_decl: make_struct_dim_decl
  764                              | %empty

  765 use_initializer: %empty
  766                | "uninitialized"

  767 $@85: %empty

  768 $@86: %empty

  769 make_struct_decl: "struct" '<' $@85 type_declaration_no_options '>' $@86 '(' use_initializer optional_make_struct_dim_decl ')'

  770 $@87: %empty

  771 $@88: %empty

  772 make_struct_decl: "class" '<' $@87 type_declaration_no_options '>' $@88 '(' use_initializer optional_make_struct_dim_decl ')'

  773 $@89: %empty

  774 $@90: %empty

  775 make_struct_decl: "variant" '<' $@89 type_declaration_no_options '>' $@90 '(' make_variant_dim ')'

  776 $@91: %empty

  777 $@92: %empty

  778 make_struct_decl: "default" '<' $@91 type_declaration_no_options '>' $@92 use_initializer

  779 make_map_tuple: expr "=>" expr
  780               | expr

  781 make_tuple_call: "tuple" '(' expr_list optional_comma ')'

  782 $@93: %empty

  783 $@94: %empty

  784 make_tuple_call: "tuple" '<' $@93 type_declaration_no_options '>' $@94 '(' use_initializer optional_make_struct_dim_decl ')'

  785 make_dim_decl: '[' expr_list optional_comma ']'

  786 $@95: %empty

  787 $@96: %empty

  788 make_dim_decl: "array" "struct" '<' $@95 type_declaration_no_options '>' $@96 '(' use_initializer optional_make_struct_dim_decl ')'

  789 $@97: %empty

  790 $@98: %empty

  791 make_dim_decl: "array" "tuple" '<' $@97 type_declaration_no_options '>' $@98 '(' use_initializer optional_make_struct_dim_decl ')'

  792 $@99: %empty

  793 $@100: %empty

  794 make_dim_decl: "array" "variant" '<' $@99 type_declaration_no_options '>' $@100 '(' make_variant_dim ')'
  795              | "array" '(' expr_list optional_comma ')'

  796 $@101: %empty

  797 $@102: %empty

  798 make_dim_decl: "array" '<' $@101 type_declaration_no_options '>' $@102 '(' optional_expr_list ')'
  799              | "fixed_array" '(' expr_list optional_comma ')'

  800 $@103: %empty

  801 $@104: %empty

  802 make_dim_decl: "fixed_array" '<' $@103 type_declaration_no_options '>' $@104 '(' expr_list optional_comma ')'

  803 expr_map_tuple_list: make_map_tuple
  804                    | expr_map_tuple_list ',' make_map_tuple

  805 make_table_decl: '{' expr_map_tuple_list optional_comma '}'
  806                | "table" '(' expr_map_tuple_list optional_comma ')'
  807                | "table" '<' type_declaration_no_options '>' '(' optional_expr_map_tuple_list ')'
  808                | "table" '<' type_declaration_no_options c_or_s type_declaration_no_options '>' '(' optional_expr_map_tuple_list ')'

  809 array_comprehension_where: %empty
  810                          | ';' "where" expr

  811 optional_comma: %empty
  812               | ','

  813 array_comprehension: '[' "for" '(' variable_name_with_pos_list "in" expr_list ')' ';' expr array_comprehension_where ']'
  814                    | '[' "iterator" "for" '(' variable_name_with_pos_list "in" expr_list ')' ';' expr array_comprehension_where ']'
  815                    | '{' "for" '(' variable_name_with_pos_list "in" expr_list ')' ';' make_map_tuple array_comprehension_where '}'


Terminals, with rules where they appear

    $end (0) 0
    '!' (33) 113 129 393
    '#' (35) 680 682 728
    '$' (36) 20 313 671 673
    '%' (37) 36 40 149 405
    '&' (38) 157 316 412 524 532 678 679 684
    '(' (40) 59 74 75 77 80 82 102 111 117 124 125 266 267 268 269 288 289 305 306 307 320 324 354 355 356 357 359 369 370 371 372 376 377 378 379 380 381 382 423 433 434 464 465 466 468 469 470 471 472 474 475 476 477 478 479 480 481 482 483 505 534 602 643 644 670 671 673 753 754 755 756 759 760 769 772 775 781 784 788 791 794 795 798 799 802 806 807 808 813 814 815
    ')' (41) 59 74 75 77 80 82 102 111 117 124 125 266 267 268 269 288 289 305 306 307 320 324 354 355 356 357 359 369 370 371 372 376 377 378 379 380 381 382 423 433 434 464 465 466 468 469 470 471 472 474 475 476 477 478 479 480 481 482 483 505 534 602 643 644 670 671 673 753 754 755 756 759 760 769 772 775 781 784 788 791 794 795 798 799 802 806 807 808 813 814 815
    '*' (42) 147 403 432
    '+' (43) 145 395 401
    ',' (44) 49 91 104 120 287 309 322 355 536 537 539 563 564 604 605 653 751 752 755 756 760 804 812
    '-' (45) 146 396 402 674 677 679 682
    '.' (46) 41 174 176 177 367 368 369 370 371 372 375 425 427 429 476 478 479
    '/' (47) 42 148 404
    ':' (58) 51 52 127 288 437 509 515 525 526 543 544 546 547 579 587
    ';' (59) 8 9 15 16 69 70 75 228 229 230 235 237 238 239 240 244 245 246 288 289 499 501 507 541 543 544 545 546 547 548 555 573 646 654 810 813 814 815
    '<' (60) 150 263 295 298 301 304 306 307 363 366 406 440 446 451 465 466 467 652 669 673 688 692 695 698 702 705 709 712 716 719 722 725 769 772 775 778 784 788 791 794 798 802 807 808
    '=' (61) 83 95 96 97 98 99 100 102 317 336 521 528 562 572
    '>' (62) 151 263 295 298 301 304 306 307 363 366 407 440 446 451 465 466 467 652 669 673 688 692 695 698 702 705 709 712 716 719 722 725 769 772 775 778 784 788 791 794 798 802 807 808
    '?' (63) 186 187 437 448 451 452 481 685
    '@' (64) 105 106 314 315 360 363 366 483
    '[' (91) 122 172 354 355 424 425 657 658 659 660 674 785 813 814
    ']' (93) 122 172 173 354 355 424 425 426 427 657 658 659 660 674 785 813 814
    '^' (94) 159 414
    '{' (123) 223 226 292 327 558 585 597 733 738 743 805 815
    '|' (124) 158 413 727 728
    '}' (125) 223 226 292 327 558 585 597 733 738 743 805 815
    '~' (126) 130 394
    error (256) 249 375
    "lexer error" (258)
    "capture" (259) 324
    "struct" (260) 592 769 788
    "class" (261) 591 772
    "let" (262) 279 282
    "def" (263) 213 501 503
    "while" (264) 80
    "if" (265) 60 75
    "static_if" (266) 61
    "else" (267) 58 63
    "for" (268) 77 813 814 815
    "recover" (269) 278
    "true" (270) 88 99 389
    "false" (271) 89 100 390
    "new" (272) 265 266 267 268 269 270
    "typeinfo" (273) 305 306 307
    "type" (274) 93 304 440 446 451 669
    "in" (275) 77 94 813 814 815
    "is" (276) 182 184 440 441 442 482
    "as" (277) 44 183 185 186 187 443 446 447 448 451 452 480 481
    "elif" (278) 55
    "static_elif" (279) 56
    "array" (280) 692 788 791 794 795 798
    "return" (281) 273 274 275
    "null" (282) 383
    "break" (283) 271
    "try" (284) 278
    "options" (285) 37
    "table" (286) 695 806 807 808
    "expect" (287) 47
    "const" (288) 490 676 677 683
    "require" (289) 38 108
    "operator" (290) 129 130 131 132 133 134 135 136 137 138 139 140 141 142 143 144 145 146 147 148 149 150 151 152 153 154 155 156 157 158 159 160 161 162 163 164 165 166 167 168 169 170 171 172 173 174 175 176 177 178 179 180 181 182 183 184 185 186 187
    "enum" (291) 585
    "finally" (292) 223
    "delete" (293) 180 259 260
    "deref" (294) 433
    "typedef" (295) 573
    "typedecl" (296) 670
    "with" (297) 82
    "aka" (298) 535 537 603 605
    "assume" (299) 83
    "cast" (300) 295
    "override" (301) 487
    "abstract" (302) 501
    "upcast" (303) 298
    "iterator" (304) 698 814
    "var" (305) 280 283
    "addr" (306) 434
    "continue" (307) 272
    "where" (308) 810
    "pass" (309) 246
    "reinterpret" (310) 301
    "module" (311) 22
    "public" (312) 18 46 216 492 553 570 576 595
    "label" (313) 52 53
    "goto" (314) 53 54
    "implicit" (315) 681
    "explicit" (316) 260 675
    "shared" (317) 550
    "private" (318) 19 109 215 493 552 569 575 594
    "smart_ptr" (319) 688
    "unsafe" (320) 78 464
    "inscope" (321) 284
    "static" (322) 495
    "fixed_array" (323) 799 802
    "default" (324) 778
    "uninitialized" (325) 269 377 379 766
    "bool" (326) 188 606
    "void" (327) 626
    "string" (328) 189 607
    "auto" (329) 642 643
    "int" (330) 190 608 633
    "int2" (331) 191 612
    "int3" (332) 192 613
    "int4" (333) 193 614
    "uint" (334) 194 615 636
    "bitfield" (335) 632 652 743
    "uint2" (336) 195 619
    "uint3" (337) 196 620
    "uint4" (338) 197 621
    "float" (339) 198 622
    "float2" (340) 199 623
    "float3" (341) 200 624
    "float4" (342) 201 625
    "range" (343) 202 627
    "urange" (344) 203 628
    "range64" (345) 204 629
    "urange64" (346) 205 630
    "block" (347) 699 702 705
    "int64" (348) 206 611 639
    "uint64" (349) 207 618 640
    "double" (350) 208 631
    "function" (351) 706 709 712
    "lambda" (352) 713 716 719
    "int8" (353) 209 609 634
    "uint8" (354) 210 616 637
    "int16" (355) 211 610 635
    "uint16" (356) 212 617 638
    "tuple" (357) 722 733 781 784 791
    "variant" (358) 725 738 775 794
    "generator" (359) 465 466 467
    "yield" (360) 276 277
    "sealed" (361) 488 589
    "+=" (362) 131 345
    "-=" (363) 132 346
    "/=" (364) 134 348
    "*=" (365) 133 347
    "%=" (366) 135 349
    "&=" (367) 136 339
    "|=" (368) 137 340
    "^=" (369) 138 341
    "<<" (370) 164 397
    ">>" (371) 165 398
    "++" (372) 160 162 419 421
    "--" (373) 161 163 420 422
    "<=" (374) 155 410
    "<<=" (375) 166 350
    ">>=" (376) 167 351
    ">=" (377) 156 411
    "==" (378) 153 408 683 684
    "!=" (379) 154 409
    "->" (380) 356 357
    "<-" (381) 275 277 312 318 337 522 529
    "??" (382) 181 436 689
    "?." (383) 175 178 428 429 477 479
    "?[" (384) 173 426 427
    "<|" (385) 460
    "|>" (386) 118 461 462
    ":=" (387) 177 179 319 338 530 750 752 754 756
    "<<<" (388) 168 399
    ">>>" (389) 169 400
    "<<<=" (390) 170 352
    ">>>=" (391) 171 353
    "=>" (392) 311 312 779
    "::" (393) 257 258
    "&&" (394) 114 142 415
    "||" (395) 115 143 416
    "^^" (396) 116 144 417
    "&&=" (397) 139 342
    "||=" (398) 140 343
    "^^=" (399) 141 344
    ".." (400) 152 418
    "$$" (401) 468
    "$i" (402) 359 469 534 602
    "$v" (403) 470
    "$b" (404) 471
    "$a" (405) 472 505
    "$t" (406) 644
    "$c" (407) 474 475 483
    "$f" (408) 476 477 478 479 480 481 482 753 754 755 756
    "..." (409) 473
    "integer constant" <i> (410) 50 51 52 53 86 97 328
    "long integer constant" <i64> (411) 330
    "unsigned integer constant" <ui> (412) 329
    "unsigned long integer constant" <ui64> (413) 331
    "unsigned int8 constant" <ui> (414) 332
    "floating point constant" <fd> (415) 87 98 333
    "double constant" <d> (416) 334
    "name" <s> (417) 21 39 41 42 44 83 85 92 96 128 176 177 178 184 185 187 256 257 258 286 287 306 307 316 317 318 319 320 356 357 367 368 369 370 428 429 442 443 448 509 515 533 535 536 537 538 539 561 562 572 577 590 601 603 604 605 643 645 646 648 649 733 738 743 749 750 751 752
    "start of the string" (418) 27 28 32
    STRING_CHARACTER <ch> (419) 23 25 33 34
    STRING_CHARACTER_ESC (420) 24 26
    "end of the string" (421) 27 28 32
    "{" (422) 31
    "}" (423) 31
    "end of failed eader macro" (424)
    UNARY_MINUS (425)
    UNARY_PLUS (426)
    PRE_INC (427)
    PRE_DEC (428)
    LLPIPE (429)
    POST_INC (430)
    POST_DEC (431)
    DEREF (432)


Nonterminals, with rules where they appear

    $accept (205)
        on left: 0
    program (206)
        on left: 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15
        on right: 0 2 3 4 5 6 7 8 9 10 11 12 13 14 15
    top_level_reader_macro (207)
        on left: 16
        on right: 14
    optional_public_or_private_module <b> (208)
        on left: 17 18 19
        on right: 22
    module_name <s> (209)
        on left: 20 21
        on right: 22
    module_declaration (210)
        on left: 22
        on right: 2
    character_sequence <s> (211)
        on left: 23 24 25 26
        on right: 25 26 27 30
    string_constant <s> (212)
        on left: 27 28
        on right: 84 95
    string_builder_body <pExpression> (213)
        on left: 29 30 31
        on right: 30 31 32
    string_builder <pExpression> (214)
        on left: 32
        on right: 387
    reader_character_sequence (215)
        on left: 33 34
        on right: 34 36
    expr_reader <pExpression> (216)
        on left: 36
        on right: 16 386
    $@1 (217)
        on left: 35
        on right: 36
    options_declaration (218)
        on left: 37
        on right: 9
    require_declaration (219)
        on left: 38
        on right: 8
    require_module_name <s> (220)
        on left: 39 40 41 42
        on right: 40 41 42 43 44
    require_module (221)
        on left: 43 44
        on right: 38
    is_public_module <b> (222)
        on left: 45 46
        on right: 43 44
    expect_declaration (223)
        on left: 47
        on right: 7
    expect_list (224)
        on left: 48 49
        on right: 47 49
    expect_error (225)
        on left: 50 51
        on right: 48 49
    expression_label <pExpression> (226)
        on left: 52
        on right: 244
    expression_goto <pExpression> (227)
        on left: 53 54
        on right: 245
    elif_or_static_elif <b> (228)
        on left: 55 56
        on right: 59
    expression_else <pExpression> (229)
        on left: 57 58 59
        on right: 59 74
    if_or_static_if <b> (230)
        on left: 60 61
        on right: 74
    expression_else_one_liner <pExpression> (231)
        on left: 62 63
        on right: 75
    expression_if_one_liner <pExpression> (232)
        on left: 64 65 66 67 68
        on right: 63 75
    semis (233)
        on left: 69 70
        on right: 70 72 514 520
    optional_semis (234)
        on left: 71 72
        on right: 58 59 74 77 78 80 82 325 326 467 733 738
    expression_if_then_else <pExpression> (235)
        on left: 74
        on right: 241
    $@2 (236)
        on left: 73
        on right: 74
    expression_if_then_else_oneliner <pExpression> (237)
        on left: 75
        on right: 242
    expression_for_loop <pExpression> (238)
        on left: 77
        on right: 236
    $@3 (239)
        on left: 76
        on right: 77
    expression_unsafe <pExpression> (240)
        on left: 78
        on right: 233
    expression_while_loop <pExpression> (241)
        on left: 80
        on right: 232
    $@4 (242)
        on left: 79
        on right: 80
    expression_with <pExpression> (243)
        on left: 82
        on right: 234
    $@5 (244)
        on left: 81
        on right: 82
    expression_with_alias <pExpression> (245)
        on left: 83
        on right: 235
    annotation_argument_value <aa> (246)
        on left: 84 85 86 87 88 89
        on right: 90 91
    annotation_argument_value_list <aaList> (247)
        on left: 90 91
        on right: 91 102
    annotation_argument_name <s> (248)
        on left: 92 93 94
        on right: 95 96 97 98 99 100 101 102
    annotation_argument <aa> (249)
        on left: 95 96 97 98 99 100 101 102
        on right: 103 104 105 106
    annotation_argument_list <aaList> (250)
        on left: 103 104
        on right: 37 104 111
    metadata_argument_list <aaList> (251)
        on left: 105 106
        on right: 106 485
    annotation_declaration_name <s> (252)
        on left: 107 108 109
        on right: 110 111
    annotation_declaration_basic <fa> (253)
        on left: 110 111
        on right: 112
    annotation_declaration <fa> (254)
        on left: 112 113 114 115 116 117 118
        on right: 113 114 115 116 117 118 119 120
    annotation_list <faList> (255)
        on left: 119 120
        on right: 120 122
    optional_annotation_list <faList> (256)
        on left: 121 122
        on right: 213 325 326 501 503 585 600
    optional_function_argument_list <pVarDeclList> (257)
        on left: 123 124 125
        on right: 217 325 326 366 705 712 719
    optional_function_type <pTypeDecl> (258)
        on left: 126 127
        on right: 217 325 326 366 705 712 719
    function_name <s> (259)
        on left: 128 129 130 131 132 133 134 135 136 137 138 139 140 141 142 143 144 145 146 147 148 149 150 151 152 153 154 155 156 157 158 159 160 161 162 163 164 165 166 167 168 169 170 171 172 173 174 175 176 177 178 179 180 181 182 183 184 185 186 187 188 189 190 191 192 193 194 195 196 197 198 199 200 201 202 203 204 205 206 207 208 209 210 211 212
        on right: 217
    global_function_declaration (260)
        on left: 213
        on right: 6
    optional_public_or_private_function <b> (261)
        on left: 214 215 216
        on right: 219
    function_declaration_header <pFuncDecl> (262)
        on left: 217
        on right: 219 501 503
    function_declaration <pFuncDecl> (263)
        on left: 219
        on right: 213
    $@6 (264)
        on left: 218
        on right: 219
    expression_block_finally <pExpression> (265)
        on left: 220 223
        on right: 226
    $@7 (266)
        on left: 221
        on right: 223
    $@8 (267)
        on left: 222
        on right: 223
    expression_block <pExpression> (268)
        on left: 226
        on right: 58 59 74 77 78 80 82 219 278 310 326 467 503
    $@9 (269)
        on left: 224
        on right: 226
    $@10 (270)
        on left: 225
        on right: 226
    expr_call_pipe <pExpression> (271)
        on left: 227
        on right: 463
    expression_any <pExpression> (272)
        on left: 228 229 230 231 232 233 234 235 236 237 238 239 240 241 242 243 244 245 246
        on right: 248
    expressions <pExpression> (273)
        on left: 247 248 249
        on right: 223 226 248 249 327
    optional_expr_list <pExpression> (274)
        on left: 250 251
        on right: 671 673 798
    optional_expr_map_tuple_list <pExpression> (275)
        on left: 252 253
        on right: 807 808
    type_declaration_no_options_list <pTypeDeclList> (276)
        on left: 254 255
        on right: 255 673
    name_in_namespace <s> (277)
        on left: 256 257 258
        on right: 36 107 305 306 307 354 355 358 376 377 378 379 380 384 587 641 671 673
    expression_delete <pExpression> (278)
        on left: 259 260
        on right: 230
    new_type_declaration <pTypeDecl> (279)
        on left: 263 264
        on right: 265 266 267 268 269
    $@11 (280)
        on left: 261
        on right: 263
    $@12 (281)
        on left: 262
        on right: 263
    expr_new <pExpression> (282)
        on left: 265 266 267 268 269 270
        on right: 456
    expression_break <pExpression> (283)
        on left: 271
        on right: 67 237
    expression_continue <pExpression> (284)
        on left: 272
        on right: 68 238
    expression_return <pExpression> (285)
        on left: 273 274 275
        on right: 65 239
    expression_yield <pExpression> (286)
        on left: 276 277
        on right: 66 240
    expression_try_catch <pExpression> (287)
        on left: 278
        on right: 243
    kwd_let_var_or_nothing <b> (288)
        on left: 279 280 281
        on right: 504
    kwd_let <b> (289)
        on left: 282 283
        on right: 290 291 292 558 560
    optional_in_scope <b> (290)
        on left: 284 285
        on right: 290 291 292
    tuple_expansion <pNameList> (291)
        on left: 286 287
        on right: 287 288 289
    tuple_expansion_variable_declaration <pVarDecl> (292)
        on left: 288 289
        on right: 291
    expression_let <pExpression> (293)
        on left: 290 291 292
        on right: 231
    expr_cast <pExpression> (294)
        on left: 295 298 301
        on right: 455
    $@13 (295)
        on left: 293
        on right: 295
    $@14 (296)
        on left: 294
        on right: 295
    $@15 (297)
        on left: 296
        on right: 298
    $@16 (298)
        on left: 297
        on right: 298
    $@17 (299)
        on left: 299
        on right: 301
    $@18 (300)
        on left: 300
        on right: 301
    expr_type_decl <pExpression> (301)
        on left: 304
        on right: 454
    $@19 (302)
        on left: 302
        on right: 304
    $@20 (303)
        on left: 303
        on right: 304
    expr_type_info <pExpression> (304)
        on left: 305 306 307
        on right: 453
    expr_list <pExpression> (305)
        on left: 308 309
        on right: 77 251 267 309 355 357 370 372 380 382 423 475 781 785 795 799 802 813 814 815
    block_or_simple_block <pExpression> (306)
        on left: 310 311 312
        on right: 325
    block_or_lambda <i> (307)
        on left: 313 314 315
        on right: 325 326
    capture_entry <pCapt> (308)
        on left: 316 317 318 319 320
        on right: 321 322
    capture_list <pCaptList> (309)
        on left: 321 322
        on right: 322 324
    optional_capture_list <pCaptList> (310)
        on left: 323 324
        on right: 325 326 465 466 467
    expr_full_block <pExpression> (311)
        on left: 325
        on right: 459
    expr_full_block_assumed_piped <pExpression> (312)
        on left: 326 327
        on right: 227
    expr_numeric_const <pExpression> (313)
        on left: 328 329 330 331 332 333 334
        on right: 385
    expr_assign <pExpression> (314)
        on left: 335 336 337 338 339 340 341 342 343 344 345 346 347 348 349 350 351 352 353
        on right: 229
    expr_named_call <pExpression> (315)
        on left: 354 355
        on right: 458
    expr_method_call <pExpression> (316)
        on left: 356 357
        on right: 457
    func_addr_name <pExpression> (317)
        on left: 358 359
        on right: 360 363 366
    func_addr_expr <pExpression> (318)
        on left: 360 363 366
        on right: 430
    $@21 (319)
        on left: 361
        on right: 363
    $@22 (320)
        on left: 362
        on right: 363
    $@23 (321)
        on left: 364
        on right: 366
    $@24 (322)
        on left: 365
        on right: 366
    expr_field <pExpression> (323)
        on left: 367 368 369 370 371 372 375
        on right: 391
    $@25 (324)
        on left: 373
        on right: 375
    $@26 (325)
        on left: 374
        on right: 375
    expr_call <pExpression> (326)
        on left: 376 377 378 379 380 381 382
        on right: 227 431
    expr <pExpression> (327)
        on left: 383 384 385 386 387 388 389 390 391 392 393 394 395 396 397 398 399 400 401 402 403 404 405 406 407 408 409 410 411 412 413 414 415 416 417 418 419 420 421 422 423 424 425 426 427 428 429 430 431 432 433 434 435 436 437 440 441 442 443 446 447 448 451 452 453 454 455 456 457 458 459 460 461 462 463 464
        on right
    $@27 (328)
        on left: 438
        on right: 440
    $@28 (329)
        on left: 439
        on right: 440
    $@29 (330)
        on left: 444
        on right: 446
    $@30 (331)
        on left: 445
        on right: 446
    $@31 (332)
        on left: 449
        on right: 451
    $@32 (333)
        on left: 450
        on right: 451
    expr_generator <pExpression> (334)
        on left: 465 466 467
        on right: 435
    expr_mtag <pExpression> (335)
        on left: 468 469 470 471 472 473 474 475 476 477 478 479 480 481 482 483
        on right: 392
    optional_field_annotation <aaList> (336)
        on left: 484 485
        on right: 496 504 557 560
    optional_override <i> (337)
        on left: 486 487 488
        on right: 496 503
    optional_constant <b> (338)
        on left: 489 490
        on right: 501 503
    optional_public_or_private_member_variable <b> (339)
        on left: 491 492 493
        on right: 496 501 503
    optional_static_member_variable <b> (340)
        on left: 494 495
        on right: 496 503
    structure_variable_declaration <pVarDecl> (341)
        on left: 496
        on right: 499
    struct_variable_declaration_list <pVarDeclList> (342)
        on left: 497 499 501 503
        on right: 499 501 503 597
    $@33 (343)
        on left: 498
        on right: 499
    $@34 (344)
        on left: 500
        on right: 501
    $@35 (345)
        on left: 502
        on right: 503
    function_argument_declaration <pVarDecl> (346)
        on left: 504 505
        on right: 506 507
    function_argument_list <pVarDeclList> (347)
        on left: 506 507
        on right: 125 507
    tuple_type <pVarDecl> (348)
        on left: 508 509
        on right: 510 511 513 514
    tuple_type_list <pVarDeclList> (349)
        on left: 510 511
        on right: 511 722
    tuple_alias_type_list <pVarDeclList> (350)
        on left: 512 513 514
        on right: 514 733
    variant_type <pVarDecl> (351)
        on left: 515
        on right: 516 517 519 520
    variant_type_list <pVarDeclList> (352)
        on left: 516 517
        on right: 517 725
    variant_alias_type_list <pVarDeclList> (353)
        on left: 518 519 520
        on right: 520 738
    copy_or_move <b> (354)
        on left: 521 522
        on right: 526 527 749 751 753 755
    variable_declaration <pVarDecl> (355)
        on left: 523 524 525 526 527
        on right: 496 504
    copy_or_move_or_clone <i> (356)
        on left: 528 529 530
        on right: 288 289 544 545 547 548
    optional_ref <b> (357)
        on left: 531 532
        on right: 289 545 548
    let_variable_name_with_pos_list <pNameWithPosList> (358)
        on left: 533 534 535 536 537
        on right: 536 537 543 544 545
    global_let_variable_name_with_pos_list <pNameWithPosList> (359)
        on left: 538 539
        on right: 539 546 547 548
    variable_declaration_list <pVarDeclList> (360)
        on left: 540 541 542
        on right: 292 541 542
    let_variable_declaration <pVarDecl> (361)
        on left: 543 544 545
        on right: 290 542 557
    global_let_variable_declaration <pVarDecl> (362)
        on left: 546 547 548
        on right: 560
    optional_shared <b> (363)
        on left: 549 550
        on right: 22 558 560
    optional_public_or_private_variable <b> (364)
        on left: 551 552 553
        on right: 558 560
    global_variable_declaration_list <pVarDeclList> (365)
        on left: 554 555 557
        on right: 555 557 558
    $@36 (366)
        on left: 556
        on right: 557
    global_let (367)
        on left: 558 560
        on right: 5
    $@37 (368)
        on left: 559
        on right: 560
    enum_expression <pEnumPair> (369)
        on left: 561 562
        on right: 566 567
    commas (370)
        on left: 563 564
        on right: 564 567 581 649
    enum_list <pEnum> (371)
        on left: 565 566 567
        on right: 567 585
    optional_public_or_private_alias <b> (372)
        on left: 568 569 570
        on right: 572 733 738 743
    single_alias (373)
        on left: 572
        on right: 573
    $@38 (374)
        on left: 571
        on right: 572
    alias_declaration (375)
        on left: 573
        on right: 10
    optional_public_or_private_enum <b> (376)
        on left: 574 575 576
        on right: 585
    enum_name <pEnum> (377)
        on left: 577
        on right: 585
    optional_enum_basic_type_declaration <type> (378)
        on left: 578 579
        on right: 585
    optional_commas (379)
        on left: 580 581
        on right: 585 743
    enum_declaration (380)
        on left: 585
        on right: 4
    $@39 (381)
        on left: 582
        on right: 585
    $@40 (382)
        on left: 583
        on right: 585
    $@41 (383)
        on left: 584
        on right: 585
    optional_structure_parent <s> (384)
        on left: 586 587
        on right: 590
    optional_sealed <b> (385)
        on left: 588 589
        on right: 590
    structure_name <pStructure> (386)
        on left: 590
        on right: 600
    class_or_struct <b> (387)
        on left: 591 592
        on right: 600
    optional_public_or_private_structure <b> (388)
        on left: 593 594 595
        on right: 600
    optional_struct_variable_declaration_list <pVarDeclList> (389)
        on left: 596 597
        on right: 600
    structure_declaration (390)
        on left: 600
        on right: 3
    $@42 (391)
        on left: 598
        on right: 600
    $@43 (392)
        on left: 599
        on right: 600
    variable_name_with_pos_list <pNameWithPosList> (393)
        on left: 601 602 603 604 605
        on right: 77 523 524 525 526 527 604 605 813 814 815
    basic_type_declaration <type> (394)
        on left: 606 607 608 609 610 611 612 613 614 615 616 617 618 619 620 621 622 623 624 625 626 627 628 629 630 631 632
        on right: 371 372 381 382 441 447 452 462 663
    enum_basic_type_declaration <type> (395)
        on left: 633 634 635 636 637 638 639 640
        on right: 579
    structure_type_declaration <pTypeDecl> (396)
        on left: 641
        on right: 264 666
    auto_type_declaration <pTypeDecl> (397)
        on left: 642 643 644
        on right: 664
    bitfield_bits <pNameList> (398)
        on left: 645 646
        on right: 646 652
    bitfield_alias_bits <pNameList> (399)
        on left: 647 648 649
        on right: 649 743
    bitfield_type_declaration <pTypeDecl> (400)
        on left: 652
        on right: 665
    $@44 (401)
        on left: 650
        on right: 652
    $@45 (402)
        on left: 651
        on right: 652
    c_or_s (403)
        on left: 653 654
        on right: 255 307 511 517 656 808
    table_type_pair <aTypePair> (404)
        on left: 655 656
        on right: 695
    dim_list <pTypeDecl> (405)
        on left: 657 658 659 660
        on right: 659 660 662
    type_declaration_no_options <pTypeDecl> (406)
        on left: 661 662
        on right: 288 295 298 301 363 440 465 466 467 543 544 546 547 726 727 769 772 775 778 784 788 791 794 798 802 807 808
    type_declaration_no_options_no_dim <pTypeDecl> (407)
        on left: 663 664 665 666 669 670 671 673 674 675 676 677 678 679 680 681 682 683 684 685 688 689 692 695 698 699 702 705 706 709 712 713 716 719 722 725
        on right: 661 662 674 675 676 677 678 679 680 681 682 683 684 685 689
    $@46 (408)
        on left: 667
        on right: 669
    $@47 (409)
        on left: 668
        on right: 669
    $@48 (410)
        on left: 672
        on right: 673
    $@49 (411)
        on left: 686
        on right: 688
    $@50 (412)
        on left: 687
        on right: 688
    $@51 (413)
        on left: 690
        on right: 692
    $@52 (414)
        on left: 691
        on right: 692
    $@53 (415)
        on left: 693
        on right: 695
    $@54 (416)
        on left: 694
        on right: 695
    $@55 (417)
        on left: 696
        on right: 698
    $@56 (418)
        on left: 697
        on right: 698
    $@57 (419)
        on left: 700
        on right: 702
    $@58 (420)
        on left: 701
        on right: 702
    $@59 (421)
        on left: 703
        on right: 705
    $@60 (422)
        on left: 704
        on right: 705
    $@61 (423)
        on left: 707
        on right: 709
    $@62 (424)
        on left: 708
        on right: 709
    $@63 (425)
        on left: 710
        on right: 712
    $@64 (426)
        on left: 711
        on right: 712
    $@65 (427)
        on left: 714
        on right: 716
    $@66 (428)
        on left: 715
        on right: 716
    $@67 (429)
        on left: 717
        on right: 719
    $@68 (430)
        on left: 718
        on right: 719
    $@69 (431)
        on left: 720
        on right: 722
    $@70 (432)
        on left: 721
        on right: 722
    $@71 (433)
        on left: 723
        on right: 725
    $@72 (434)
        on left: 724
        on right: 725
    type_declaration <pTypeDecl> (435)
        on left: 726 727 728
        on right: 127 254 255 263 304 446 451 508 509 515 525 526 572 655 656 669 688 692 698 702 709 716 727 728
    tuple_alias_declaration (436)
        on left: 733
        on right: 12
    $@73 (437)
        on left: 729
        on right: 733
    $@74 (438)
        on left: 730
        on right: 733
    $@75 (439)
        on left: 731
        on right: 733
    $@76 (440)
        on left: 732
        on right: 733
    variant_alias_declaration (441)
        on left: 738
        on right: 11
    $@77 (442)
        on left: 734
        on right: 738
    $@78 (443)
        on left: 735
        on right: 738
    $@79 (444)
        on left: 736
        on right: 738
    $@80 (445)
        on left: 737
        on right: 738
    bitfield_alias_declaration (446)
        on left: 743
        on right: 13
    $@81 (447)
        on left: 739
        on right: 743
    $@82 (448)
        on left: 740
        on right: 743
    $@83 (449)
        on left: 741
        on right: 743
    $@84 (450)
        on left: 742
        on right: 743
    make_decl <pExpression> (451)
        on left: 744 745 746 747 748
        on right: 270 388
    make_struct_fields <pMakeStruct> (452)
        on left: 749 750 751 752 753 754 755 756
        on right: 354 355 751 752 755 756 757 758 759 760 761
    make_variant_dim <pExpression> (453)
        on left: 757
        on right: 775 794
    make_struct_single <pExpression> (454)
        on left: 758
        on right: 268 269 378 379
    make_struct_dim_list <pExpression> (455)
        on left: 759 760
        on right: 760 762
    make_struct_dim_decl <pExpression> (456)
        on left: 761 762
        on right: 763
    optional_make_struct_dim_decl <pExpression> (457)
        on left: 763 764
        on right: 769 772 784 788 791
    use_initializer <b> (458)
        on left: 765 766
        on right: 266 769 772 778 784 788 791
    make_struct_decl <pExpression> (459)
        on left: 769 772 775 778
        on right: 744
    $@85 (460)
        on left: 767
        on right: 769
    $@86 (461)
        on left: 768
        on right: 769
    $@87 (462)
        on left: 770
        on right: 772
    $@88 (463)
        on left: 771
        on right: 772
    $@89 (464)
        on left: 773
        on right: 775
    $@90 (465)
        on left: 774
        on right: 775
    $@91 (466)
        on left: 776
        on right: 778
    $@92 (467)
        on left: 777
        on right: 778
    make_map_tuple <pExpression> (468)
        on left: 779 780
        on right: 803 804 815
    make_tuple_call <pExpression> (469)
        on left: 781 784
        on right: 748
    $@93 (470)
        on left: 782
        on right: 784
    $@94 (471)
        on left: 783
        on right: 784
    make_dim_decl <pExpression> (472)
        on left: 785 788 791 794 795 798 799 802
        on right: 745
    $@95 (473)
        on left: 786
        on right: 788
    $@96 (474)
        on left: 787
        on right: 788
    $@97 (475)
        on left: 789
        on right: 791
    $@98 (476)
        on left: 790
        on right: 791
    $@99 (477)
        on left: 792
        on right: 794
    $@100 (478)
        on left: 793
        on right: 794
    $@101 (479)
        on left: 796
        on right: 798
    $@102 (480)
        on left: 797
        on right: 798
    $@103 (481)
        on left: 800
        on right: 802
    $@104 (482)
        on left: 801
        on right: 802
    expr_map_tuple_list <pExpression> (483)
        on left: 803 804
        on right: 253 804 805 806
    make_table_decl <pExpression> (484)
        on left: 805 806 807 808
        on right: 746
    array_comprehension_where <pExpression> (485)
        on left: 809 810
        on right: 813 814 815
    optional_comma <b> (486)
        on left: 811 812
        on right: 251 253 423 762 781 785 795 799 802 805 806
    array_comprehension <pExpression> (487)
        on left: 813 814 815
        on right: 747


State 0

    0 $accept: . program $end

    $default  reduce using rule 1 (program)

    program  go to state 1


State 1

    0 $accept: program . $end
    2 program: program . module_declaration
    3        | program . structure_declaration
    4        | program . enum_declaration
    5        | program . global_let
    6        | program . global_function_declaration
    7        | program . expect_declaration
    8        | program . require_declaration ';'
    9        | program . options_declaration ';'
   10        | program . alias_declaration
   11        | program . variant_alias_declaration
   12        | program . tuple_alias_declaration
   13        | program . bitfield_alias_declaration
   14        | program . top_level_reader_macro
   15        | program . ';'

    $end        shift, and go to state 2
    "let"       shift, and go to state 3
    "options"   shift, and go to state 4
    "expect"    shift, and go to state 5
    "require"   shift, and go to state 6
    "typedef"   shift, and go to state 7
    "var"       shift, and go to state 8
    "module"    shift, and go to state 9
    "bitfield"  shift, and go to state 10
    "tuple"     shift, and go to state 11
    "variant"   shift, and go to state 12
    '%'         shift, and go to state 13
    '['         shift, and go to state 14
    ';'         shift, and go to state 15

    $default  reduce using rule 121 (optional_annotation_list)

    top_level_reader_macro       go to state 16
    module_declaration           go to state 17
    expr_reader                  go to state 18
    options_declaration          go to state 19
    require_declaration          go to state 20
    expect_declaration           go to state 21
    optional_annotation_list     go to state 22
    global_function_declaration  go to state 23
    kwd_let                      go to state 24
    global_let                   go to state 25
    alias_declaration            go to state 26
    enum_declaration             go to state 27
    structure_declaration        go to state 28
    tuple_alias_declaration      go to state 29
    variant_alias_declaration    go to state 30
    bitfield_alias_declaration   go to state 31


State 2

    0 $accept: program $end .

    $default  accept


State 3

  282 kwd_let: "let" .

    $default  reduce using rule 282 (kwd_let)


State 4

   37 options_declaration: "options" . annotation_argument_list

    "type"  shift, and go to state 32
    "in"    shift, and go to state 33
    "name"  shift, and go to state 34

    annotation_argument_name  go to state 35
    annotation_argument       go to state 36
    annotation_argument_list  go to state 37


State 5

   47 expect_declaration: "expect" . expect_list

    "integer constant"  shift, and go to state 38

    expect_list   go to state 39
    expect_error  go to state 40


State 6

   38 require_declaration: "require" . require_module

    "name"  shift, and go to state 41
    '%'     shift, and go to state 42

    require_module_name  go to state 43
    require_module       go to state 44


State 7

  573 alias_declaration: "typedef" . single_alias ';'

    "public"   shift, and go to state 45
    "private"  shift, and go to state 46

    $default  reduce using rule 568 (optional_public_or_private_alias)

    optional_public_or_private_alias  go to state 47
    single_alias                      go to state 48


State 8

  283 kwd_let: "var" .

    $default  reduce using rule 283 (kwd_let)


State 9

   22 module_declaration: "module" . module_name optional_shared optional_public_or_private_module

    "name"  shift, and go to state 49
    '$'     shift, and go to state 50

    module_name  go to state 51


State 10

  743 bitfield_alias_declaration: "bitfield" . $@81 optional_public_or_private_alias "name" optional_commas $@82 '{' $@83 bitfield_alias_bits optional_commas $@84 '}'

    $default  reduce using rule 739 ($@81)

    $@81  go to state 52


State 11

  733 tuple_alias_declaration: "tuple" . $@73 optional_public_or_private_alias "name" optional_semis $@74 '{' $@75 tuple_alias_type_list optional_semis $@76 '}'

    $default  reduce using rule 729 ($@73)

    $@73  go to state 53


State 12

  738 variant_alias_declaration: "variant" . $@77 optional_public_or_private_alias "name" optional_semis $@78 '{' $@79 variant_alias_type_list optional_semis $@80 '}'

    $default  reduce using rule 734 ($@77)

    $@77  go to state 54


State 13

   36 expr_reader: '%' . name_in_namespace $@1 reader_character_sequence

    "::"    shift, and go to state 55
    "name"  shift, and go to state 56

    name_in_namespace  go to state 57


State 14

  122 optional_annotation_list: '[' . annotation_list ']'

    "require"  shift, and go to state 58
    "private"  shift, and go to state 59
    "|>"       shift, and go to state 60
    "::"       shift, and go to state 55
    "name"     shift, and go to state 56
    '!'        shift, and go to state 61
    '('        shift, and go to state 62

    annotation_declaration_name   go to state 63
    annotation_declaration_basic  go to state 64
    annotation_declaration        go to state 65
    annotation_list               go to state 66
    name_in_namespace             go to state 67


State 15

   15 program: program ';' .

    $default  reduce using rule 15 (program)


State 16

   14 program: program top_level_reader_macro .

    $default  reduce using rule 14 (program)


State 17

    2 program: program module_declaration .

    $default  reduce using rule 2 (program)


State 18

   16 top_level_reader_macro: expr_reader . ';'

    ';'  shift, and go to state 68


State 19

    9 program: program options_declaration . ';'

    ';'  shift, and go to state 69


State 20

    8 program: program require_declaration . ';'

    ';'  shift, and go to state 70


State 21

    7 program: program expect_declaration .

    $default  reduce using rule 7 (program)


State 22

  213 global_function_declaration: optional_annotation_list . "def" function_declaration
  585 enum_declaration: optional_annotation_list . "enum" $@39 optional_public_or_private_enum enum_name optional_enum_basic_type_declaration optional_commas '{' $@40 enum_list optional_commas $@41 '}'
  600 structure_declaration: optional_annotation_list . class_or_struct optional_public_or_private_structure $@42 structure_name $@43 optional_struct_variable_declaration_list

    "struct"  shift, and go to state 71
    "class"   shift, and go to state 72
    "def"     shift, and go to state 73
    "enum"    shift, and go to state 74

    class_or_struct  go to state 75


State 23

    6 program: program global_function_declaration .

    $default  reduce using rule 6 (program)


State 24

  558 global_let: kwd_let . optional_shared optional_public_or_private_variable '{' global_variable_declaration_list '}'
  560           | kwd_let . optional_shared optional_public_or_private_variable $@37 optional_field_annotation global_let_variable_declaration

    "shared"  shift, and go to state 76

    $default  reduce using rule 549 (optional_shared)

    optional_shared  go to state 77


State 25

    5 program: program global_let .

    $default  reduce using rule 5 (program)


State 26

   10 program: program alias_declaration .

    $default  reduce using rule 10 (program)


State 27

    4 program: program enum_declaration .

    $default  reduce using rule 4 (program)


State 28

    3 program: program structure_declaration .

    $default  reduce using rule 3 (program)


State 29

   12 program: program tuple_alias_declaration .

    $default  reduce using rule 12 (program)


State 30

   11 program: program variant_alias_declaration .

    $default  reduce using rule 11 (program)


State 31

   13 program: program bitfield_alias_declaration .

    $default  reduce using rule 13 (program)


State 32

   93 annotation_argument_name: "type" .

    $default  reduce using rule 93 (annotation_argument_name)


State 33

   94 annotation_argument_name: "in" .

    $default  reduce using rule 94 (annotation_argument_name)


State 34

   92 annotation_argument_name: "name" .

    $default  reduce using rule 92 (annotation_argument_name)


State 35

   95 annotation_argument: annotation_argument_name . '=' string_constant
   96                    | annotation_argument_name . '=' "name"
   97                    | annotation_argument_name . '=' "integer constant"
   98                    | annotation_argument_name . '=' "floating point constant"
   99                    | annotation_argument_name . '=' "true"
  100                    | annotation_argument_name . '=' "false"
  101                    | annotation_argument_name .
  102                    | annotation_argument_name . '=' '(' annotation_argument_value_list ')'

    '='  shift, and go to state 78

    $default  reduce using rule 101 (annotation_argument)


State 36

  103 annotation_argument_list: annotation_argument .

    $default  reduce using rule 103 (annotation_argument_list)


State 37

   37 options_declaration: "options" annotation_argument_list .
  104 annotation_argument_list: annotation_argument_list . ',' annotation_argument

    ','  shift, and go to state 79

    $default  reduce using rule 37 (options_declaration)


State 38

   50 expect_error: "integer constant" .
   51             | "integer constant" . ':' "integer constant"

    ':'  shift, and go to state 80

    $default  reduce using rule 50 (expect_error)


State 39

   47 expect_declaration: "expect" expect_list .
   49 expect_list: expect_list . ',' expect_error

    ','  shift, and go to state 81

    $default  reduce using rule 47 (expect_declaration)


State 40

   48 expect_list: expect_error .

    $default  reduce using rule 48 (expect_list)


State 41

   39 require_module_name: "name" .

    $default  reduce using rule 39 (require_module_name)


State 42

   40 require_module_name: '%' . require_module_name

    "name"  shift, and go to state 41
    '%'     shift, and go to state 42

    require_module_name  go to state 82


State 43

   41 require_module_name: require_module_name . '.' "name"
   42                    | require_module_name . '/' "name"
   43 require_module: require_module_name . is_public_module
   44               | require_module_name . "as" "name" is_public_module

    "as"      shift, and go to state 83
    "public"  shift, and go to state 84
    '/'       shift, and go to state 85
    '.'       shift, and go to state 86

    $default  reduce using rule 45 (is_public_module)

    is_public_module  go to state 87


State 44

   38 require_declaration: "require" require_module .

    $default  reduce using rule 38 (require_declaration)


State 45

  570 optional_public_or_private_alias: "public" .

    $default  reduce using rule 570 (optional_public_or_private_alias)


State 46

  569 optional_public_or_private_alias: "private" .

    $default  reduce using rule 569 (optional_public_or_private_alias)


State 47

  572 single_alias: optional_public_or_private_alias . "name" $@38 '=' type_declaration

    "name"  shift, and go to state 88


State 48

  573 alias_declaration: "typedef" single_alias . ';'

    ';'  shift, and go to state 89


State 49

   21 module_name: "name" .

    $default  reduce using rule 21 (module_name)


State 50

   20 module_name: '$' .

    $default  reduce using rule 20 (module_name)


State 51

   22 module_declaration: "module" module_name . optional_shared optional_public_or_private_module

    "shared"  shift, and go to state 76

    $default  reduce using rule 549 (optional_shared)

    optional_shared  go to state 90


State 52

  743 bitfield_alias_declaration: "bitfield" $@81 . optional_public_or_private_alias "name" optional_commas $@82 '{' $@83 bitfield_alias_bits optional_commas $@84 '}'

    "public"   shift, and go to state 45
    "private"  shift, and go to state 46

    $default  reduce using rule 568 (optional_public_or_private_alias)

    optional_public_or_private_alias  go to state 91


State 53

  733 tuple_alias_declaration: "tuple" $@73 . optional_public_or_private_alias "name" optional_semis $@74 '{' $@75 tuple_alias_type_list optional_semis $@76 '}'

    "public"   shift, and go to state 45
    "private"  shift, and go to state 46

    $default  reduce using rule 568 (optional_public_or_private_alias)

    optional_public_or_private_alias  go to state 92


State 54

  738 variant_alias_declaration: "variant" $@77 . optional_public_or_private_alias "name" optional_semis $@78 '{' $@79 variant_alias_type_list optional_semis $@80 '}'

    "public"   shift, and go to state 45
    "private"  shift, and go to state 46

    $default  reduce using rule 568 (optional_public_or_private_alias)

    optional_public_or_private_alias  go to state 93


State 55

  258 name_in_namespace: "::" . "name"

    "name"  shift, and go to state 94


State 56

  256 name_in_namespace: "name" .
  257                  | "name" . "::" "name"

    "::"  shift, and go to state 95

    $default  reduce using rule 256 (name_in_namespace)


State 57

   36 expr_reader: '%' name_in_namespace . $@1 reader_character_sequence

    $default  reduce using rule 35 ($@1)

    $@1  go to state 96


State 58

  108 annotation_declaration_name: "require" .

    $default  reduce using rule 108 (annotation_declaration_name)


State 59

  109 annotation_declaration_name: "private" .

    $default  reduce using rule 109 (annotation_declaration_name)


State 60

  118 annotation_declaration: "|>" . annotation_declaration

    "require"  shift, and go to state 58
    "private"  shift, and go to state 59
    "|>"       shift, and go to state 60
    "::"       shift, and go to state 55
    "name"     shift, and go to state 56
    '!'        shift, and go to state 61
    '('        shift, and go to state 62

    annotation_declaration_name   go to state 63
    annotation_declaration_basic  go to state 64
    annotation_declaration        go to state 97
    name_in_namespace             go to state 67


State 61

  113 annotation_declaration: '!' . annotation_declaration

    "require"  shift, and go to state 58
    "private"  shift, and go to state 59
    "|>"       shift, and go to state 60
    "::"       shift, and go to state 55
    "name"     shift, and go to state 56
    '!'        shift, and go to state 61
    '('        shift, and go to state 62

    annotation_declaration_name   go to state 63
    annotation_declaration_basic  go to state 64
    annotation_declaration        go to state 98
    name_in_namespace             go to state 67


State 62

  117 annotation_declaration: '(' . annotation_declaration ')'

    "require"  shift, and go to state 58
    "private"  shift, and go to state 59
    "|>"       shift, and go to state 60
    "::"       shift, and go to state 55
    "name"     shift, and go to state 56
    '!'        shift, and go to state 61
    '('        shift, and go to state 62

    annotation_declaration_name   go to state 63
    annotation_declaration_basic  go to state 64
    annotation_declaration        go to state 99
    name_in_namespace             go to state 67


State 63

  110 annotation_declaration_basic: annotation_declaration_name .
  111                             | annotation_declaration_name . '(' annotation_argument_list ')'

    '('  shift, and go to state 100

    $default  reduce using rule 110 (annotation_declaration_basic)


State 64

  112 annotation_declaration: annotation_declaration_basic .

    $default  reduce using rule 112 (annotation_declaration)


State 65

  114 annotation_declaration: annotation_declaration . "&&" annotation_declaration
  115                       | annotation_declaration . "||" annotation_declaration
  116                       | annotation_declaration . "^^" annotation_declaration
  119 annotation_list: annotation_declaration .

    "&&"  shift, and go to state 101
    "||"  shift, and go to state 102
    "^^"  shift, and go to state 103

    $default  reduce using rule 119 (annotation_list)


State 66

  120 annotation_list: annotation_list . ',' annotation_declaration
  122 optional_annotation_list: '[' annotation_list . ']'

    ','  shift, and go to state 104
    ']'  shift, and go to state 105


State 67

  107 annotation_declaration_name: name_in_namespace .

    $default  reduce using rule 107 (annotation_declaration_name)


State 68

   16 top_level_reader_macro: expr_reader ';' .

    $default  reduce using rule 16 (top_level_reader_macro)


State 69

    9 program: program options_declaration ';' .

    $default  reduce using rule 9 (program)


State 70

    8 program: program require_declaration ';' .

    $default  reduce using rule 8 (program)


State 71

  592 class_or_struct: "struct" .

    $default  reduce using rule 592 (class_or_struct)


State 72

  591 class_or_struct: "class" .

    $default  reduce using rule 591 (class_or_struct)


State 73

  213 global_function_declaration: optional_annotation_list "def" . function_declaration

    "public"   shift, and go to state 106
    "private"  shift, and go to state 107

    $default  reduce using rule 214 (optional_public_or_private_function)

    optional_public_or_private_function  go to state 108
    function_declaration                 go to state 109


State 74

  585 enum_declaration: optional_annotation_list "enum" . $@39 optional_public_or_private_enum enum_name optional_enum_basic_type_declaration optional_commas '{' $@40 enum_list optional_commas $@41 '}'

    $default  reduce using rule 582 ($@39)

    $@39  go to state 110


State 75

  600 structure_declaration: optional_annotation_list class_or_struct . optional_public_or_private_structure $@42 structure_name $@43 optional_struct_variable_declaration_list

    "public"   shift, and go to state 111
    "private"  shift, and go to state 112

    $default  reduce using rule 593 (optional_public_or_private_structure)

    optional_public_or_private_structure  go to state 113


State 76

  550 optional_shared: "shared" .

    $default  reduce using rule 550 (optional_shared)


State 77

  558 global_let: kwd_let optional_shared . optional_public_or_private_variable '{' global_variable_declaration_list '}'
  560           | kwd_let optional_shared . optional_public_or_private_variable $@37 optional_field_annotation global_let_variable_declaration

    "public"   shift, and go to state 114
    "private"  shift, and go to state 115

    $default  reduce using rule 551 (optional_public_or_private_variable)

    optional_public_or_private_variable  go to state 116


State 78

   95 annotation_argument: annotation_argument_name '=' . string_constant
   96                    | annotation_argument_name '=' . "name"
   97                    | annotation_argument_name '=' . "integer constant"
   98                    | annotation_argument_name '=' . "floating point constant"
   99                    | annotation_argument_name '=' . "true"
  100                    | annotation_argument_name '=' . "false"
  102                    | annotation_argument_name '=' . '(' annotation_argument_value_list ')'

    "true"                     shift, and go to state 117
    "false"                    shift, and go to state 118
    "integer constant"         shift, and go to state 119
    "floating point constant"  shift, and go to state 120
    "name"                     shift, and go to state 121
    "start of the string"      shift, and go to state 122
    '('                        shift, and go to state 123

    string_constant  go to state 124


State 79

  104 annotation_argument_list: annotation_argument_list ',' . annotation_argument

    "type"  shift, and go to state 32
    "in"    shift, and go to state 33
    "name"  shift, and go to state 34

    annotation_argument_name  go to state 35
    annotation_argument       go to state 125


State 80

   51 expect_error: "integer constant" ':' . "integer constant"

    "integer constant"  shift, and go to state 126


State 81

   49 expect_list: expect_list ',' . expect_error

    "integer constant"  shift, and go to state 38

    expect_error  go to state 127


State 82

   40 require_module_name: '%' require_module_name .
   41                    | require_module_name . '.' "name"
   42                    | require_module_name . '/' "name"

    '.'  shift, and go to state 86

    $default  reduce using rule 40 (require_module_name)


State 83

   44 require_module: require_module_name "as" . "name" is_public_module

    "name"  shift, and go to state 128


State 84

   46 is_public_module: "public" .

    $default  reduce using rule 46 (is_public_module)


State 85

   42 require_module_name: require_module_name '/' . "name"

    "name"  shift, and go to state 129


State 86

   41 require_module_name: require_module_name '.' . "name"

    "name"  shift, and go to state 130


State 87

   43 require_module: require_module_name is_public_module .

    $default  reduce using rule 43 (require_module)


State 88

  572 single_alias: optional_public_or_private_alias "name" . $@38 '=' type_declaration

    $default  reduce using rule 571 ($@38)

    $@38  go to state 131


State 89

  573 alias_declaration: "typedef" single_alias ';' .

    $default  reduce using rule 573 (alias_declaration)


State 90

   22 module_declaration: "module" module_name optional_shared . optional_public_or_private_module

    "public"   shift, and go to state 132
    "private"  shift, and go to state 133

    $default  reduce using rule 17 (optional_public_or_private_module)

    optional_public_or_private_module  go to state 134


State 91

  743 bitfield_alias_declaration: "bitfield" $@81 optional_public_or_private_alias . "name" optional_commas $@82 '{' $@83 bitfield_alias_bits optional_commas $@84 '}'

    "name"  shift, and go to state 135


State 92

  733 tuple_alias_declaration: "tuple" $@73 optional_public_or_private_alias . "name" optional_semis $@74 '{' $@75 tuple_alias_type_list optional_semis $@76 '}'

    "name"  shift, and go to state 136


State 93

  738 variant_alias_declaration: "variant" $@77 optional_public_or_private_alias . "name" optional_semis $@78 '{' $@79 variant_alias_type_list optional_semis $@80 '}'

    "name"  shift, and go to state 137


State 94

  258 name_in_namespace: "::" "name" .

    $default  reduce using rule 258 (name_in_namespace)


State 95

  257 name_in_namespace: "name" "::" . "name"

    "name"  shift, and go to state 138


State 96

   36 expr_reader: '%' name_in_namespace $@1 . reader_character_sequence

    STRING_CHARACTER  shift, and go to state 139

    reader_character_sequence  go to state 140


State 97

  114 annotation_declaration: annotation_declaration . "&&" annotation_declaration
  115                       | annotation_declaration . "||" annotation_declaration
  116                       | annotation_declaration . "^^" annotation_declaration
  118                       | "|>" annotation_declaration .

    $default  reduce using rule 118 (annotation_declaration)


State 98

  113 annotation_declaration: '!' annotation_declaration .
  114                       | annotation_declaration . "&&" annotation_declaration
  115                       | annotation_declaration . "||" annotation_declaration
  116                       | annotation_declaration . "^^" annotation_declaration

    $default  reduce using rule 113 (annotation_declaration)


State 99

  114 annotation_declaration: annotation_declaration . "&&" annotation_declaration
  115                       | annotation_declaration . "||" annotation_declaration
  116                       | annotation_declaration . "^^" annotation_declaration
  117                       | '(' annotation_declaration . ')'

    "&&"  shift, and go to state 101
    "||"  shift, and go to state 102
    "^^"  shift, and go to state 103
    ')'   shift, and go to state 141


State 100

  111 annotation_declaration_basic: annotation_declaration_name '(' . annotation_argument_list ')'

    "type"  shift, and go to state 32
    "in"    shift, and go to state 33
    "name"  shift, and go to state 34

    annotation_argument_name  go to state 35
    annotation_argument       go to state 36
    annotation_argument_list  go to state 142


State 101

  114 annotation_declaration: annotation_declaration "&&" . annotation_declaration

    "require"  shift, and go to state 58
    "private"  shift, and go to state 59
    "|>"       shift, and go to state 60
    "::"       shift, and go to state 55
    "name"     shift, and go to state 56
    '!'        shift, and go to state 61
    '('        shift, and go to state 62

    annotation_declaration_name   go to state 63
    annotation_declaration_basic  go to state 64
    annotation_declaration        go to state 143
    name_in_namespace             go to state 67


State 102

  115 annotation_declaration: annotation_declaration "||" . annotation_declaration

    "require"  shift, and go to state 58
    "private"  shift, and go to state 59
    "|>"       shift, and go to state 60
    "::"       shift, and go to state 55
    "name"     shift, and go to state 56
    '!'        shift, and go to state 61
    '('        shift, and go to state 62

    annotation_declaration_name   go to state 63
    annotation_declaration_basic  go to state 64
    annotation_declaration        go to state 144
    name_in_namespace             go to state 67


State 103

  116 annotation_declaration: annotation_declaration "^^" . annotation_declaration

    "require"  shift, and go to state 58
    "private"  shift, and go to state 59
    "|>"       shift, and go to state 60
    "::"       shift, and go to state 55
    "name"     shift, and go to state 56
    '!'        shift, and go to state 61
    '('        shift, and go to state 62

    annotation_declaration_name   go to state 63
    annotation_declaration_basic  go to state 64
    annotation_declaration        go to state 145
    name_in_namespace             go to state 67


State 104

  120 annotation_list: annotation_list ',' . annotation_declaration

    "require"  shift, and go to state 58
    "private"  shift, and go to state 59
    "|>"       shift, and go to state 60
    "::"       shift, and go to state 55
    "name"     shift, and go to state 56
    '!'        shift, and go to state 61
    '('        shift, and go to state 62

    annotation_declaration_name   go to state 63
    annotation_declaration_basic  go to state 64
    annotation_declaration        go to state 146
    name_in_namespace             go to state 67


State 105

  122 optional_annotation_list: '[' annotation_list ']' .

    $default  reduce using rule 122 (optional_annotation_list)


State 106

  216 optional_public_or_private_function: "public" .

    $default  reduce using rule 216 (optional_public_or_private_function)


State 107

  215 optional_public_or_private_function: "private" .

    $default  reduce using rule 215 (optional_public_or_private_function)


State 108

  219 function_declaration: optional_public_or_private_function . $@6 function_declaration_header expression_block

    $default  reduce using rule 218 ($@6)

    $@6  go to state 147


State 109

  213 global_function_declaration: optional_annotation_list "def" function_declaration .

    $default  reduce using rule 213 (global_function_declaration)


State 110

  585 enum_declaration: optional_annotation_list "enum" $@39 . optional_public_or_private_enum enum_name optional_enum_basic_type_declaration optional_commas '{' $@40 enum_list optional_commas $@41 '}'

    "public"   shift, and go to state 148
    "private"  shift, and go to state 149

    $default  reduce using rule 574 (optional_public_or_private_enum)

    optional_public_or_private_enum  go to state 150


State 111

  595 optional_public_or_private_structure: "public" .

    $default  reduce using rule 595 (optional_public_or_private_structure)


State 112

  594 optional_public_or_private_structure: "private" .

    $default  reduce using rule 594 (optional_public_or_private_structure)


State 113

  600 structure_declaration: optional_annotation_list class_or_struct optional_public_or_private_structure . $@42 structure_name $@43 optional_struct_variable_declaration_list

    $default  reduce using rule 598 ($@42)

    $@42  go to state 151


State 114

  553 optional_public_or_private_variable: "public" .

    $default  reduce using rule 553 (optional_public_or_private_variable)


State 115

  552 optional_public_or_private_variable: "private" .

    $default  reduce using rule 552 (optional_public_or_private_variable)


State 116

  558 global_let: kwd_let optional_shared optional_public_or_private_variable . '{' global_variable_declaration_list '}'
  560           | kwd_let optional_shared optional_public_or_private_variable . $@37 optional_field_annotation global_let_variable_declaration

    '{'  shift, and go to state 152

    $default  reduce using rule 559 ($@37)

    $@37  go to state 153


State 117

   99 annotation_argument: annotation_argument_name '=' "true" .

    $default  reduce using rule 99 (annotation_argument)


State 118

  100 annotation_argument: annotation_argument_name '=' "false" .

    $default  reduce using rule 100 (annotation_argument)


State 119

   97 annotation_argument: annotation_argument_name '=' "integer constant" .

    $default  reduce using rule 97 (annotation_argument)


State 120

   98 annotation_argument: annotation_argument_name '=' "floating point constant" .

    $default  reduce using rule 98 (annotation_argument)


State 121

   96 annotation_argument: annotation_argument_name '=' "name" .

    $default  reduce using rule 96 (annotation_argument)


State 122

   27 string_constant: "start of the string" . character_sequence "end of the string"
   28                | "start of the string" . "end of the string"

    STRING_CHARACTER      shift, and go to state 154
    STRING_CHARACTER_ESC  shift, and go to state 155
    "end of the string"   shift, and go to state 156

    character_sequence  go to state 157


State 123

  102 annotation_argument: annotation_argument_name '=' '(' . annotation_argument_value_list ')'

    "true"                     shift, and go to state 158
    "false"                    shift, and go to state 159
    "integer constant"         shift, and go to state 160
    "floating point constant"  shift, and go to state 161
    "name"                     shift, and go to state 162
    "start of the string"      shift, and go to state 122

    string_constant                 go to state 163
    annotation_argument_value       go to state 164
    annotation_argument_value_list  go to state 165


State 124

   95 annotation_argument: annotation_argument_name '=' string_constant .

    $default  reduce using rule 95 (annotation_argument)


State 125

  104 annotation_argument_list: annotation_argument_list ',' annotation_argument .

    $default  reduce using rule 104 (annotation_argument_list)


State 126

   51 expect_error: "integer constant" ':' "integer constant" .

    $default  reduce using rule 51 (expect_error)


State 127

   49 expect_list: expect_list ',' expect_error .

    $default  reduce using rule 49 (expect_list)


State 128

   44 require_module: require_module_name "as" "name" . is_public_module

    "public"  shift, and go to state 84

    $default  reduce using rule 45 (is_public_module)

    is_public_module  go to state 166


State 129

   42 require_module_name: require_module_name '/' "name" .

    $default  reduce using rule 42 (require_module_name)


State 130

   41 require_module_name: require_module_name '.' "name" .

    $default  reduce using rule 41 (require_module_name)


State 131

  572 single_alias: optional_public_or_private_alias "name" $@38 . '=' type_declaration

    '='  shift, and go to state 167


State 132

   18 optional_public_or_private_module: "public" .

    $default  reduce using rule 18 (optional_public_or_private_module)


State 133

   19 optional_public_or_private_module: "private" .

    $default  reduce using rule 19 (optional_public_or_private_module)


State 134

   22 module_declaration: "module" module_name optional_shared optional_public_or_private_module .

    $default  reduce using rule 22 (module_declaration)


State 135

  743 bitfield_alias_declaration: "bitfield" $@81 optional_public_or_private_alias "name" . optional_commas $@82 '{' $@83 bitfield_alias_bits optional_commas $@84 '}'

    ','  shift, and go to state 168

    $default  reduce using rule 580 (optional_commas)

    commas           go to state 169
    optional_commas  go to state 170


State 136

  733 tuple_alias_declaration: "tuple" $@73 optional_public_or_private_alias "name" . optional_semis $@74 '{' $@75 tuple_alias_type_list optional_semis $@76 '}'

    ';'  shift, and go to state 171

    $default  reduce using rule 71 (optional_semis)

    semis           go to state 172
    optional_semis  go to state 173


State 137

  738 variant_alias_declaration: "variant" $@77 optional_public_or_private_alias "name" . optional_semis $@78 '{' $@79 variant_alias_type_list optional_semis $@80 '}'

    ';'  shift, and go to state 171

    $default  reduce using rule 71 (optional_semis)

    semis           go to state 172
    optional_semis  go to state 174


State 138

  257 name_in_namespace: "name" "::" "name" .

    $default  reduce using rule 257 (name_in_namespace)


State 139

   33 reader_character_sequence: STRING_CHARACTER .

    $default  reduce using rule 33 (reader_character_sequence)


State 140

   34 reader_character_sequence: reader_character_sequence . STRING_CHARACTER
   36 expr_reader: '%' name_in_namespace $@1 reader_character_sequence .

    STRING_CHARACTER  shift, and go to state 175

    $default  reduce using rule 36 (expr_reader)


State 141

  117 annotation_declaration: '(' annotation_declaration ')' .

    $default  reduce using rule 117 (annotation_declaration)


State 142

  104 annotation_argument_list: annotation_argument_list . ',' annotation_argument
  111 annotation_declaration_basic: annotation_declaration_name '(' annotation_argument_list . ')'

    ','  shift, and go to state 79
    ')'  shift, and go to state 176


State 143

  114 annotation_declaration: annotation_declaration . "&&" annotation_declaration
  114                       | annotation_declaration "&&" annotation_declaration .
  115                       | annotation_declaration . "||" annotation_declaration
  116                       | annotation_declaration . "^^" annotation_declaration

    $default  reduce using rule 114 (annotation_declaration)


State 144

  114 annotation_declaration: annotation_declaration . "&&" annotation_declaration
  115                       | annotation_declaration . "||" annotation_declaration
  115                       | annotation_declaration "||" annotation_declaration .
  116                       | annotation_declaration . "^^" annotation_declaration

    "&&"  shift, and go to state 101
    "^^"  shift, and go to state 103

    $default  reduce using rule 115 (annotation_declaration)


State 145

  114 annotation_declaration: annotation_declaration . "&&" annotation_declaration
  115                       | annotation_declaration . "||" annotation_declaration
  116                       | annotation_declaration . "^^" annotation_declaration
  116                       | annotation_declaration "^^" annotation_declaration .

    "&&"  shift, and go to state 101

    $default  reduce using rule 116 (annotation_declaration)


State 146

  114 annotation_declaration: annotation_declaration . "&&" annotation_declaration
  115                       | annotation_declaration . "||" annotation_declaration
  116                       | annotation_declaration . "^^" annotation_declaration
  120 annotation_list: annotation_list ',' annotation_declaration .

    "&&"  shift, and go to state 101
    "||"  shift, and go to state 102
    "^^"  shift, and go to state 103

    $default  reduce using rule 120 (annotation_list)


State 147

  219 function_declaration: optional_public_or_private_function $@6 . function_declaration_header expression_block

    "operator"  shift, and go to state 177
    "bool"      shift, and go to state 178
    "string"    shift, and go to state 179
    "int"       shift, and go to state 180
    "int2"      shift, and go to state 181
    "int3"      shift, and go to state 182
    "int4"      shift, and go to state 183
    "uint"      shift, and go to state 184
    "uint2"     shift, and go to state 185
    "uint3"     shift, and go to state 186
    "uint4"     shift, and go to state 187
    "float"     shift, and go to state 188
    "float2"    shift, and go to state 189
    "float3"    shift, and go to state 190
    "float4"    shift, and go to state 191
    "range"     shift, and go to state 192
    "urange"    shift, and go to state 193
    "range64"   shift, and go to state 194
    "urange64"  shift, and go to state 195
    "int64"     shift, and go to state 196
    "uint64"    shift, and go to state 197
    "double"    shift, and go to state 198
    "int8"      shift, and go to state 199
    "uint8"     shift, and go to state 200
    "int16"     shift, and go to state 201
    "uint16"    shift, and go to state 202
    "++"        shift, and go to state 203
    "--"        shift, and go to state 204
    "name"      shift, and go to state 205

    function_name                go to state 206
    function_declaration_header  go to state 207


State 148

  576 optional_public_or_private_enum: "public" .

    $default  reduce using rule 576 (optional_public_or_private_enum)


State 149

  575 optional_public_or_private_enum: "private" .

    $default  reduce using rule 575 (optional_public_or_private_enum)


State 150

  585 enum_declaration: optional_annotation_list "enum" $@39 optional_public_or_private_enum . enum_name optional_enum_basic_type_declaration optional_commas '{' $@40 enum_list optional_commas $@41 '}'

    "name"  shift, and go to state 208

    enum_name  go to state 209


State 151

  600 structure_declaration: optional_annotation_list class_or_struct optional_public_or_private_structure $@42 . structure_name $@43 optional_struct_variable_declaration_list

    "sealed"  shift, and go to state 210

    $default  reduce using rule 588 (optional_sealed)

    optional_sealed  go to state 211
    structure_name   go to state 212


State 152

  558 global_let: kwd_let optional_shared optional_public_or_private_variable '{' . global_variable_declaration_list '}'

    $default  reduce using rule 554 (global_variable_declaration_list)

    global_variable_declaration_list  go to state 213


State 153

  560 global_let: kwd_let optional_shared optional_public_or_private_variable $@37 . optional_field_annotation global_let_variable_declaration

    '@'  shift, and go to state 214

    $default  reduce using rule 484 (optional_field_annotation)

    metadata_argument_list     go to state 215
    optional_field_annotation  go to state 216


State 154

   23 character_sequence: STRING_CHARACTER .

    $default  reduce using rule 23 (character_sequence)


State 155

   24 character_sequence: STRING_CHARACTER_ESC .

    $default  reduce using rule 24 (character_sequence)


State 156

   28 string_constant: "start of the string" "end of the string" .

    $default  reduce using rule 28 (string_constant)


State 157

   25 character_sequence: character_sequence . STRING_CHARACTER
   26                   | character_sequence . STRING_CHARACTER_ESC
   27 string_constant: "start of the string" character_sequence . "end of the string"

    STRING_CHARACTER      shift, and go to state 217
    STRING_CHARACTER_ESC  shift, and go to state 218
    "end of the string"   shift, and go to state 219


State 158

   88 annotation_argument_value: "true" .

    $default  reduce using rule 88 (annotation_argument_value)


State 159

   89 annotation_argument_value: "false" .

    $default  reduce using rule 89 (annotation_argument_value)


State 160

   86 annotation_argument_value: "integer constant" .

    $default  reduce using rule 86 (annotation_argument_value)


State 161

   87 annotation_argument_value: "floating point constant" .

    $default  reduce using rule 87 (annotation_argument_value)


State 162

   85 annotation_argument_value: "name" .

    $default  reduce using rule 85 (annotation_argument_value)


State 163

   84 annotation_argument_value: string_constant .

    $default  reduce using rule 84 (annotation_argument_value)


State 164

   90 annotation_argument_value_list: annotation_argument_value .

    $default  reduce using rule 90 (annotation_argument_value_list)


State 165

   91 annotation_argument_value_list: annotation_argument_value_list . ',' annotation_argument_value
  102 annotation_argument: annotation_argument_name '=' '(' annotation_argument_value_list . ')'

    ','  shift, and go to state 220
    ')'  shift, and go to state 221


State 166

   44 require_module: require_module_name "as" "name" is_public_module .

    $default  reduce using rule 44 (require_module)


State 167

  572 single_alias: optional_public_or_private_alias "name" $@38 '=' . type_declaration

    "type"       shift, and go to state 222
    "array"      shift, and go to state 223
    "table"      shift, and go to state 224
    "typedecl"   shift, and go to state 225
    "iterator"   shift, and go to state 226
    "smart_ptr"  shift, and go to state 227
    "bool"       shift, and go to state 228
    "void"       shift, and go to state 229
    "string"     shift, and go to state 230
    "auto"       shift, and go to state 231
    "int"        shift, and go to state 232
    "int2"       shift, and go to state 233
    "int3"       shift, and go to state 234
    "int4"       shift, and go to state 235
    "uint"       shift, and go to state 236
    "bitfield"   shift, and go to state 237
    "uint2"      shift, and go to state 238
    "uint3"      shift, and go to state 239
    "uint4"      shift, and go to state 240
    "float"      shift, and go to state 241
    "float2"     shift, and go to state 242
    "float3"     shift, and go to state 243
    "float4"     shift, and go to state 244
    "range"      shift, and go to state 245
    "urange"     shift, and go to state 246
    "range64"    shift, and go to state 247
    "urange64"   shift, and go to state 248
    "block"      shift, and go to state 249
    "int64"      shift, and go to state 250
    "uint64"     shift, and go to state 251
    "double"     shift, and go to state 252
    "function"   shift, and go to state 253
    "lambda"     shift, and go to state 254
    "int8"       shift, and go to state 255
    "uint8"      shift, and go to state 256
    "int16"      shift, and go to state 257
    "uint16"     shift, and go to state 258
    "tuple"      shift, and go to state 259
    "variant"    shift, and go to state 260
    "::"         shift, and go to state 55
    "$t"         shift, and go to state 261
    "name"       shift, and go to state 56
    '$'          shift, and go to state 262

    name_in_namespace                   go to state 263
    basic_type_declaration              go to state 264
    structure_type_declaration          go to state 265
    auto_type_declaration               go to state 266
    bitfield_type_declaration           go to state 267
    type_declaration_no_options         go to state 268
    type_declaration_no_options_no_dim  go to state 269
    type_declaration                    go to state 270


State 168

  563 commas: ',' .

    $default  reduce using rule 563 (commas)


State 169

  564 commas: commas . ','
  581 optional_commas: commas .

    ','  shift, and go to state 271

    $default  reduce using rule 581 (optional_commas)


State 170

  743 bitfield_alias_declaration: "bitfield" $@81 optional_public_or_private_alias "name" optional_commas . $@82 '{' $@83 bitfield_alias_bits optional_commas $@84 '}'

    $default  reduce using rule 740 ($@82)

    $@82  go to state 272


State 171

   69 semis: ';' .

    $default  reduce using rule 69 (semis)


State 172

   70 semis: semis . ';'
   72 optional_semis: semis .

    ';'  shift, and go to state 273

    $default  reduce using rule 72 (optional_semis)


State 173

  733 tuple_alias_declaration: "tuple" $@73 optional_public_or_private_alias "name" optional_semis . $@74 '{' $@75 tuple_alias_type_list optional_semis $@76 '}'

    $default  reduce using rule 730 ($@74)

    $@74  go to state 274


State 174

  738 variant_alias_declaration: "variant" $@77 optional_public_or_private_alias "name" optional_semis . $@78 '{' $@79 variant_alias_type_list optional_semis $@80 '}'

    $default  reduce using rule 735 ($@78)

    $@78  go to state 275


State 175

   34 reader_character_sequence: reader_character_sequence STRING_CHARACTER .

    $default  reduce using rule 34 (reader_character_sequence)


State 176

  111 annotation_declaration_basic: annotation_declaration_name '(' annotation_argument_list ')' .

    $default  reduce using rule 111 (annotation_declaration_basic)


State 177

  129 function_name: "operator" . '!'
  130              | "operator" . '~'
  131              | "operator" . "+="
  132              | "operator" . "-="
  133              | "operator" . "*="
  134              | "operator" . "/="
  135              | "operator" . "%="
  136              | "operator" . "&="
  137              | "operator" . "|="
  138              | "operator" . "^="
  139              | "operator" . "&&="
  140              | "operator" . "||="
  141              | "operator" . "^^="
  142              | "operator" . "&&"
  143              | "operator" . "||"
  144              | "operator" . "^^"
  145              | "operator" . '+'
  146              | "operator" . '-'
  147              | "operator" . '*'
  148              | "operator" . '/'
  149              | "operator" . '%'
  150              | "operator" . '<'
  151              | "operator" . '>'
  152              | "operator" . ".."
  153              | "operator" . "=="
  154              | "operator" . "!="
  155              | "operator" . "<="
  156              | "operator" . ">="
  157              | "operator" . '&'
  158              | "operator" . '|'
  159              | "operator" . '^'
  162              | "operator" . "++"
  163              | "operator" . "--"
  164              | "operator" . "<<"
  165              | "operator" . ">>"
  166              | "operator" . "<<="
  167              | "operator" . ">>="
  168              | "operator" . "<<<"
  169              | "operator" . ">>>"
  170              | "operator" . "<<<="
  171              | "operator" . ">>>="
  172              | "operator" . '[' ']'
  173              | "operator" . "?[" ']'
  174              | "operator" . '.'
  175              | "operator" . "?."
  176              | "operator" . '.' "name"
  177              | "operator" . '.' "name" ":="
  178              | "operator" . "?." "name"
  179              | "operator" . ":="
  180              | "operator" . "delete"
  181              | "operator" . "??"
  182              | "operator" . "is"
  183              | "operator" . "as"
  184              | "operator" . "is" "name"
  185              | "operator" . "as" "name"
  186              | "operator" . '?' "as"
  187              | "operator" . '?' "as" "name"

    "is"      shift, and go to state 276
    "as"      shift, and go to state 277
    "delete"  shift, and go to state 278
    "+="      shift, and go to state 279
    "-="      shift, and go to state 280
    "/="      shift, and go to state 281
    "*="      shift, and go to state 282
    "%="      shift, and go to state 283
    "&="      shift, and go to state 284
    "|="      shift, and go to state 285
    "^="      shift, and go to state 286
    "<<"      shift, and go to state 287
    ">>"      shift, and go to state 288
    "++"      shift, and go to state 289
    "--"      shift, and go to state 290
    "<="      shift, and go to state 291
    "<<="     shift, and go to state 292
    ">>="     shift, and go to state 293
    ">="      shift, and go to state 294
    "=="      shift, and go to state 295
    "!="      shift, and go to state 296
    "??"      shift, and go to state 297
    "?."      shift, and go to state 298
    "?["      shift, and go to state 299
    ":="      shift, and go to state 300
    "<<<"     shift, and go to state 301
    ">>>"     shift, and go to state 302
    "<<<="    shift, and go to state 303
    ">>>="    shift, and go to state 304
    "&&"      shift, and go to state 305
    "||"      shift, and go to state 306
    "^^"      shift, and go to state 307
    "&&="     shift, and go to state 308
    "||="     shift, and go to state 309
    "^^="     shift, and go to state 310
    ".."      shift, and go to state 311
    '?'       shift, and go to state 312
    '|'       shift, and go to state 313
    '^'       shift, and go to state 314
    '&'       shift, and go to state 315
    '<'       shift, and go to state 316
    '>'       shift, and go to state 317
    '-'       shift, and go to state 318
    '+'       shift, and go to state 319
    '*'       shift, and go to state 320
    '/'       shift, and go to state 321
    '%'       shift, and go to state 322
    '~'       shift, and go to state 323
    '!'       shift, and go to state 324
    '.'       shift, and go to state 325
    '['       shift, and go to state 326


State 178

  188 function_name: "bool" .

    $default  reduce using rule 188 (function_name)


State 179

  189 function_name: "string" .

    $default  reduce using rule 189 (function_name)


State 180

  190 function_name: "int" .

    $default  reduce using rule 190 (function_name)


State 181

  191 function_name: "int2" .

    $default  reduce using rule 191 (function_name)


State 182

  192 function_name: "int3" .

    $default  reduce using rule 192 (function_name)


State 183

  193 function_name: "int4" .

    $default  reduce using rule 193 (function_name)


State 184

  194 function_name: "uint" .

    $default  reduce using rule 194 (function_name)


State 185

  195 function_name: "uint2" .

    $default  reduce using rule 195 (function_name)


State 186

  196 function_name: "uint3" .

    $default  reduce using rule 196 (function_name)


State 187

  197 function_name: "uint4" .

    $default  reduce using rule 197 (function_name)


State 188

  198 function_name: "float" .

    $default  reduce using rule 198 (function_name)


State 189

  199 function_name: "float2" .

    $default  reduce using rule 199 (function_name)


State 190

  200 function_name: "float3" .

    $default  reduce using rule 200 (function_name)


State 191

  201 function_name: "float4" .

    $default  reduce using rule 201 (function_name)


State 192

  202 function_name: "range" .

    $default  reduce using rule 202 (function_name)


State 193

  203 function_name: "urange" .

    $default  reduce using rule 203 (function_name)


State 194

  204 function_name: "range64" .

    $default  reduce using rule 204 (function_name)


State 195

  205 function_name: "urange64" .

    $default  reduce using rule 205 (function_name)


State 196

  206 function_name: "int64" .

    $default  reduce using rule 206 (function_name)


State 197

  207 function_name: "uint64" .

    $default  reduce using rule 207 (function_name)


State 198

  208 function_name: "double" .

    $default  reduce using rule 208 (function_name)


State 199

  209 function_name: "int8" .

    $default  reduce using rule 209 (function_name)


State 200

  210 function_name: "uint8" .

    $default  reduce using rule 210 (function_name)


State 201

  211 function_name: "int16" .

    $default  reduce using rule 211 (function_name)


State 202

  212 function_name: "uint16" .

    $default  reduce using rule 212 (function_name)


State 203

  160 function_name: "++" . "operator"

    "operator"  shift, and go to state 327


State 204

  161 function_name: "--" . "operator"

    "operator"  shift, and go to state 328


State 205

  128 function_name: "name" .

    $default  reduce using rule 128 (function_name)


State 206

  217 function_declaration_header: function_name . optional_function_argument_list optional_function_type

    '('  shift, and go to state 329

    $default  reduce using rule 123 (optional_function_argument_list)

    optional_function_argument_list  go to state 330


State 207

  219 function_declaration: optional_public_or_private_function $@6 function_declaration_header . expression_block

    $default  reduce using rule 224 ($@9)

    expression_block  go to state 331
    $@9               go to state 332


State 208

  577 enum_name: "name" .

    $default  reduce using rule 577 (enum_name)


State 209

  585 enum_declaration: optional_annotation_list "enum" $@39 optional_public_or_private_enum enum_name . optional_enum_basic_type_declaration optional_commas '{' $@40 enum_list optional_commas $@41 '}'

    ':'  shift, and go to state 333

    $default  reduce using rule 578 (optional_enum_basic_type_declaration)

    optional_enum_basic_type_declaration  go to state 334


State 210

  589 optional_sealed: "sealed" .

    $default  reduce using rule 589 (optional_sealed)


State 211

  590 structure_name: optional_sealed . "name" optional_structure_parent

    "name"  shift, and go to state 335


State 212

  600 structure_declaration: optional_annotation_list class_or_struct optional_public_or_private_structure $@42 structure_name . $@43 optional_struct_variable_declaration_list

    $default  reduce using rule 599 ($@43)

    $@43  go to state 336


State 213

  555 global_variable_declaration_list: global_variable_declaration_list . ';'
  557                                 | global_variable_declaration_list . $@36 optional_field_annotation let_variable_declaration
  558 global_let: kwd_let optional_shared optional_public_or_private_variable '{' global_variable_declaration_list . '}'

    ';'  shift, and go to state 337
    '}'  shift, and go to state 338

    $default  reduce using rule 556 ($@36)

    $@36  go to state 339


State 214

  105 metadata_argument_list: '@' . annotation_argument

    "type"  shift, and go to state 32
    "in"    shift, and go to state 33
    "name"  shift, and go to state 34

    annotation_argument_name  go to state 35
    annotation_argument       go to state 340


State 215

  106 metadata_argument_list: metadata_argument_list . '@' annotation_argument
  485 optional_field_annotation: metadata_argument_list .

    '@'  shift, and go to state 341

    $default  reduce using rule 485 (optional_field_annotation)


State 216

  560 global_let: kwd_let optional_shared optional_public_or_private_variable $@37 optional_field_annotation . global_let_variable_declaration

    "name"  shift, and go to state 342

    global_let_variable_name_with_pos_list  go to state 343
    global_let_variable_declaration         go to state 344


State 217

   25 character_sequence: character_sequence STRING_CHARACTER .

    $default  reduce using rule 25 (character_sequence)


State 218

   26 character_sequence: character_sequence STRING_CHARACTER_ESC .

    $default  reduce using rule 26 (character_sequence)


State 219

   27 string_constant: "start of the string" character_sequence "end of the string" .

    $default  reduce using rule 27 (string_constant)


State 220

   91 annotation_argument_value_list: annotation_argument_value_list ',' . annotation_argument_value

    "true"                     shift, and go to state 158
    "false"                    shift, and go to state 159
    "integer constant"         shift, and go to state 160
    "floating point constant"  shift, and go to state 161
    "name"                     shift, and go to state 162
    "start of the string"      shift, and go to state 122

    string_constant            go to state 163
    annotation_argument_value  go to state 345


State 221

  102 annotation_argument: annotation_argument_name '=' '(' annotation_argument_value_list ')' .

    $default  reduce using rule 102 (annotation_argument)


State 222

  669 type_declaration_no_options_no_dim: "type" . '<' $@46 type_declaration '>' $@47

    '<'  shift, and go to state 346


State 223

  692 type_declaration_no_options_no_dim: "array" . '<' $@51 type_declaration '>' $@52

    '<'  shift, and go to state 347


State 224

  695 type_declaration_no_options_no_dim: "table" . '<' $@53 table_type_pair '>' $@54

    '<'  shift, and go to state 348


State 225

  670 type_declaration_no_options_no_dim: "typedecl" . '(' expr ')'

    '('  shift, and go to state 349


State 226

  698 type_declaration_no_options_no_dim: "iterator" . '<' $@55 type_declaration '>' $@56

    '<'  shift, and go to state 350


State 227

  688 type_declaration_no_options_no_dim: "smart_ptr" . '<' $@49 type_declaration '>' $@50

    '<'  shift, and go to state 351


State 228

  606 basic_type_declaration: "bool" .

    $default  reduce using rule 606 (basic_type_declaration)


State 229

  626 basic_type_declaration: "void" .

    $default  reduce using rule 626 (basic_type_declaration)


State 230

  607 basic_type_declaration: "string" .

    $default  reduce using rule 607 (basic_type_declaration)


State 231

  642 auto_type_declaration: "auto" .
  643                      | "auto" . '(' "name" ')'

    '('  shift, and go to state 352

    $default  reduce using rule 642 (auto_type_declaration)


State 232

  608 basic_type_declaration: "int" .

    $default  reduce using rule 608 (basic_type_declaration)


State 233

  612 basic_type_declaration: "int2" .

    $default  reduce using rule 612 (basic_type_declaration)


State 234

  613 basic_type_declaration: "int3" .

    $default  reduce using rule 613 (basic_type_declaration)


State 235

  614 basic_type_declaration: "int4" .

    $default  reduce using rule 614 (basic_type_declaration)


State 236

  615 basic_type_declaration: "uint" .

    $default  reduce using rule 615 (basic_type_declaration)


State 237

  632 basic_type_declaration: "bitfield" .
  652 bitfield_type_declaration: "bitfield" . '<' $@44 bitfield_bits '>' $@45

    '<'  shift, and go to state 353

    $default  reduce using rule 632 (basic_type_declaration)


State 238

  619 basic_type_declaration: "uint2" .

    $default  reduce using rule 619 (basic_type_declaration)


State 239

  620 basic_type_declaration: "uint3" .

    $default  reduce using rule 620 (basic_type_declaration)


State 240

  621 basic_type_declaration: "uint4" .

    $default  reduce using rule 621 (basic_type_declaration)


State 241

  622 basic_type_declaration: "float" .

    $default  reduce using rule 622 (basic_type_declaration)


State 242

  623 basic_type_declaration: "float2" .

    $default  reduce using rule 623 (basic_type_declaration)


State 243

  624 basic_type_declaration: "float3" .

    $default  reduce using rule 624 (basic_type_declaration)


State 244

  625 basic_type_declaration: "float4" .

    $default  reduce using rule 625 (basic_type_declaration)


State 245

  627 basic_type_declaration: "range" .

    $default  reduce using rule 627 (basic_type_declaration)


State 246

  628 basic_type_declaration: "urange" .

    $default  reduce using rule 628 (basic_type_declaration)


State 247

  629 basic_type_declaration: "range64" .

    $default  reduce using rule 629 (basic_type_declaration)


State 248

  630 basic_type_declaration: "urange64" .

    $default  reduce using rule 630 (basic_type_declaration)


State 249

  699 type_declaration_no_options_no_dim: "block" .
  702                                   | "block" . '<' $@57 type_declaration '>' $@58
  705                                   | "block" . '<' $@59 optional_function_argument_list optional_function_type '>' $@60

    '<'  shift, and go to state 354

    $default  reduce using rule 699 (type_declaration_no_options_no_dim)


State 250

  611 basic_type_declaration: "int64" .

    $default  reduce using rule 611 (basic_type_declaration)


State 251

  618 basic_type_declaration: "uint64" .

    $default  reduce using rule 618 (basic_type_declaration)


State 252

  631 basic_type_declaration: "double" .

    $default  reduce using rule 631 (basic_type_declaration)


State 253

  706 type_declaration_no_options_no_dim: "function" .
  709                                   | "function" . '<' $@61 type_declaration '>' $@62
  712                                   | "function" . '<' $@63 optional_function_argument_list optional_function_type '>' $@64

    '<'  shift, and go to state 355

    $default  reduce using rule 706 (type_declaration_no_options_no_dim)


State 254

  713 type_declaration_no_options_no_dim: "lambda" .
  716                                   | "lambda" . '<' $@65 type_declaration '>' $@66
  719                                   | "lambda" . '<' $@67 optional_function_argument_list optional_function_type '>' $@68

    '<'  shift, and go to state 356

    $default  reduce using rule 713 (type_declaration_no_options_no_dim)


State 255

  609 basic_type_declaration: "int8" .

    $default  reduce using rule 609 (basic_type_declaration)


State 256

  616 basic_type_declaration: "uint8" .

    $default  reduce using rule 616 (basic_type_declaration)


State 257

  610 basic_type_declaration: "int16" .

    $default  reduce using rule 610 (basic_type_declaration)


State 258

  617 basic_type_declaration: "uint16" .

    $default  reduce using rule 617 (basic_type_declaration)


State 259

  722 type_declaration_no_options_no_dim: "tuple" . '<' $@69 tuple_type_list '>' $@70

    '<'  shift, and go to state 357


State 260

  725 type_declaration_no_options_no_dim: "variant" . '<' $@71 variant_type_list '>' $@72

    '<'  shift, and go to state 358


State 261

  644 auto_type_declaration: "$t" . '(' expr ')'

    '('  shift, and go to state 359


State 262

  671 type_declaration_no_options_no_dim: '$' . name_in_namespace '(' optional_expr_list ')'
  673                                   | '$' . name_in_namespace '<' $@48 type_declaration_no_options_list '>' '(' optional_expr_list ')'

    "::"    shift, and go to state 55
    "name"  shift, and go to state 56

    name_in_namespace  go to state 360


State 263

  641 structure_type_declaration: name_in_namespace .

    $default  reduce using rule 641 (structure_type_declaration)


State 264

  663 type_declaration_no_options_no_dim: basic_type_declaration .

    $default  reduce using rule 663 (type_declaration_no_options_no_dim)


State 265

  666 type_declaration_no_options_no_dim: structure_type_declaration .

    $default  reduce using rule 666 (type_declaration_no_options_no_dim)


State 266

  664 type_declaration_no_options_no_dim: auto_type_declaration .

    $default  reduce using rule 664 (type_declaration_no_options_no_dim)


State 267

  665 type_declaration_no_options_no_dim: bitfield_type_declaration .

    $default  reduce using rule 665 (type_declaration_no_options_no_dim)


State 268

  726 type_declaration: type_declaration_no_options .

    $default  reduce using rule 726 (type_declaration)


State 269

  661 type_declaration_no_options: type_declaration_no_options_no_dim .
  662                            | type_declaration_no_options_no_dim . dim_list
  674 type_declaration_no_options_no_dim: type_declaration_no_options_no_dim . '-' '[' ']'
  675                                   | type_declaration_no_options_no_dim . "explicit"
  676                                   | type_declaration_no_options_no_dim . "const"
  677                                   | type_declaration_no_options_no_dim . '-' "const"
  678                                   | type_declaration_no_options_no_dim . '&'
  679                                   | type_declaration_no_options_no_dim . '-' '&'
  680                                   | type_declaration_no_options_no_dim . '#'
  681                                   | type_declaration_no_options_no_dim . "implicit"
  682                                   | type_declaration_no_options_no_dim . '-' '#'
  683                                   | type_declaration_no_options_no_dim . "==" "const"
  684                                   | type_declaration_no_options_no_dim . "==" '&'
  685                                   | type_declaration_no_options_no_dim . '?'
  689                                   | type_declaration_no_options_no_dim . "??"

    "const"     shift, and go to state 361
    "implicit"  shift, and go to state 362
    "explicit"  shift, and go to state 363
    "=="        shift, and go to state 364
    "??"        shift, and go to state 365
    '?'         shift, and go to state 366
    '&'         shift, and go to state 367
    '-'         shift, and go to state 368
    '['         shift, and go to state 369
    '#'         shift, and go to state 370

    $default  reduce using rule 661 (type_declaration_no_options)

    dim_list  go to state 371


State 270

  572 single_alias: optional_public_or_private_alias "name" $@38 '=' type_declaration .
  727 type_declaration: type_declaration . '|' type_declaration_no_options
  728                 | type_declaration . '|' '#'

    '|'  shift, and go to state 372

    $default  reduce using rule 572 (single_alias)


State 271

  564 commas: commas ',' .

    $default  reduce using rule 564 (commas)


State 272

  743 bitfield_alias_declaration: "bitfield" $@81 optional_public_or_private_alias "name" optional_commas $@82 . '{' $@83 bitfield_alias_bits optional_commas $@84 '}'

    '{'  shift, and go to state 373


State 273

   70 semis: semis ';' .

    $default  reduce using rule 70 (semis)


State 274

  733 tuple_alias_declaration: "tuple" $@73 optional_public_or_private_alias "name" optional_semis $@74 . '{' $@75 tuple_alias_type_list optional_semis $@76 '}'

    '{'  shift, and go to state 374


State 275

  738 variant_alias_declaration: "variant" $@77 optional_public_or_private_alias "name" optional_semis $@78 . '{' $@79 variant_alias_type_list optional_semis $@80 '}'

    '{'  shift, and go to state 375


State 276

  182 function_name: "operator" "is" .
  184              | "operator" "is" . "name"

    "name"  shift, and go to state 376

    $default  reduce using rule 182 (function_name)


State 277

  183 function_name: "operator" "as" .
  185              | "operator" "as" . "name"

    "name"  shift, and go to state 377

    $default  reduce using rule 183 (function_name)


State 278

  180 function_name: "operator" "delete" .

    $default  reduce using rule 180 (function_name)


State 279

  131 function_name: "operator" "+=" .

    $default  reduce using rule 131 (function_name)


State 280

  132 function_name: "operator" "-=" .

    $default  reduce using rule 132 (function_name)


State 281

  134 function_name: "operator" "/=" .

    $default  reduce using rule 134 (function_name)


State 282

  133 function_name: "operator" "*=" .

    $default  reduce using rule 133 (function_name)


State 283

  135 function_name: "operator" "%=" .

    $default  reduce using rule 135 (function_name)


State 284

  136 function_name: "operator" "&=" .

    $default  reduce using rule 136 (function_name)


State 285

  137 function_name: "operator" "|=" .

    $default  reduce using rule 137 (function_name)


State 286

  138 function_name: "operator" "^=" .

    $default  reduce using rule 138 (function_name)


State 287

  164 function_name: "operator" "<<" .

    $default  reduce using rule 164 (function_name)


State 288

  165 function_name: "operator" ">>" .

    $default  reduce using rule 165 (function_name)


State 289

  162 function_name: "operator" "++" .

    $default  reduce using rule 162 (function_name)


State 290

  163 function_name: "operator" "--" .

    $default  reduce using rule 163 (function_name)


State 291

  155 function_name: "operator" "<=" .

    $default  reduce using rule 155 (function_name)


State 292

  166 function_name: "operator" "<<=" .

    $default  reduce using rule 166 (function_name)


State 293

  167 function_name: "operator" ">>=" .

    $default  reduce using rule 167 (function_name)


State 294

  156 function_name: "operator" ">=" .

    $default  reduce using rule 156 (function_name)


State 295

  153 function_name: "operator" "==" .

    $default  reduce using rule 153 (function_name)


State 296

  154 function_name: "operator" "!=" .

    $default  reduce using rule 154 (function_name)


State 297

  181 function_name: "operator" "??" .

    $default  reduce using rule 181 (function_name)


State 298

  175 function_name: "operator" "?." .
  178              | "operator" "?." . "name"

    "name"  shift, and go to state 378

    $default  reduce using rule 175 (function_name)


State 299

  173 function_name: "operator" "?[" . ']'

    ']'  shift, and go to state 379


State 300

  179 function_name: "operator" ":=" .

    $default  reduce using rule 179 (function_name)


State 301

  168 function_name: "operator" "<<<" .

    $default  reduce using rule 168 (function_name)


State 302

  169 function_name: "operator" ">>>" .

    $default  reduce using rule 169 (function_name)


State 303

  170 function_name: "operator" "<<<=" .

    $default  reduce using rule 170 (function_name)


State 304

  171 function_name: "operator" ">>>=" .

    $default  reduce using rule 171 (function_name)


State 305

  142 function_name: "operator" "&&" .

    $default  reduce using rule 142 (function_name)


State 306

  143 function_name: "operator" "||" .

    $default  reduce using rule 143 (function_name)


State 307

  144 function_name: "operator" "^^" .

    $default  reduce using rule 144 (function_name)


State 308

  139 function_name: "operator" "&&=" .

    $default  reduce using rule 139 (function_name)


State 309

  140 function_name: "operator" "||=" .

    $default  reduce using rule 140 (function_name)


State 310

  141 function_name: "operator" "^^=" .

    $default  reduce using rule 141 (function_name)


State 311

  152 function_name: "operator" ".." .

    $default  reduce using rule 152 (function_name)


State 312

  186 function_name: "operator" '?' . "as"
  187              | "operator" '?' . "as" "name"

    "as"  shift, and go to state 380


State 313

  158 function_name: "operator" '|' .

    $default  reduce using rule 158 (function_name)


State 314

  159 function_name: "operator" '^' .

    $default  reduce using rule 159 (function_name)


State 315

  157 function_name: "operator" '&' .

    $default  reduce using rule 157 (function_name)


State 316

  150 function_name: "operator" '<' .

    $default  reduce using rule 150 (function_name)


State 317

  151 function_name: "operator" '>' .

    $default  reduce using rule 151 (function_name)


State 318

  146 function_name: "operator" '-' .

    $default  reduce using rule 146 (function_name)


State 319

  145 function_name: "operator" '+' .

    $default  reduce using rule 145 (function_name)


State 320

  147 function_name: "operator" '*' .

    $default  reduce using rule 147 (function_name)


State 321

  148 function_name: "operator" '/' .

    $default  reduce using rule 148 (function_name)


State 322

  149 function_name: "operator" '%' .

    $default  reduce using rule 149 (function_name)


State 323

  130 function_name: "operator" '~' .

    $default  reduce using rule 130 (function_name)


State 324

  129 function_name: "operator" '!' .

    $default  reduce using rule 129 (function_name)


State 325

  174 function_name: "operator" '.' .
  176              | "operator" '.' . "name"
  177              | "operator" '.' . "name" ":="

    "name"  shift, and go to state 381

    $default  reduce using rule 174 (function_name)


State 326

  172 function_name: "operator" '[' . ']'

    ']'  shift, and go to state 382


State 327

  160 function_name: "++" "operator" .

    $default  reduce using rule 160 (function_name)


State 328

  161 function_name: "--" "operator" .

    $default  reduce using rule 161 (function_name)


State 329

  124 optional_function_argument_list: '(' . ')'
  125                                | '(' . function_argument_list ')'

    "$a"  shift, and go to state 383
    ')'   shift, and go to state 384
    '@'   shift, and go to state 214

    $default  reduce using rule 484 (optional_field_annotation)

    metadata_argument_list         go to state 215
    optional_field_annotation      go to state 385
    function_argument_declaration  go to state 386
    function_argument_list         go to state 387


State 330

  217 function_declaration_header: function_name optional_function_argument_list . optional_function_type

    ':'  shift, and go to state 388

    $default  reduce using rule 126 (optional_function_type)

    optional_function_type  go to state 389


State 331

  219 function_declaration: optional_public_or_private_function $@6 function_declaration_header expression_block .

    $default  reduce using rule 219 (function_declaration)


State 332

  226 expression_block: $@9 . '{' expressions $@10 '}' expression_block_finally

    '{'  shift, and go to state 390


State 333

  579 optional_enum_basic_type_declaration: ':' . enum_basic_type_declaration

    "int"     shift, and go to state 391
    "uint"    shift, and go to state 392
    "int64"   shift, and go to state 393
    "uint64"  shift, and go to state 394
    "int8"    shift, and go to state 395
    "uint8"   shift, and go to state 396
    "int16"   shift, and go to state 397
    "uint16"  shift, and go to state 398

    enum_basic_type_declaration  go to state 399


State 334

  585 enum_declaration: optional_annotation_list "enum" $@39 optional_public_or_private_enum enum_name optional_enum_basic_type_declaration . optional_commas '{' $@40 enum_list optional_commas $@41 '}'

    ','  shift, and go to state 168

    $default  reduce using rule 580 (optional_commas)

    commas           go to state 169
    optional_commas  go to state 400


State 335

  590 structure_name: optional_sealed "name" . optional_structure_parent

    ':'  shift, and go to state 401

    $default  reduce using rule 586 (optional_structure_parent)

    optional_structure_parent  go to state 402


State 336

  600 structure_declaration: optional_annotation_list class_or_struct optional_public_or_private_structure $@42 structure_name $@43 . optional_struct_variable_declaration_list

    '{'  shift, and go to state 403

    $default  reduce using rule 596 (optional_struct_variable_declaration_list)

    optional_struct_variable_declaration_list  go to state 404


State 337

  555 global_variable_declaration_list: global_variable_declaration_list ';' .

    $default  reduce using rule 555 (global_variable_declaration_list)


State 338

  558 global_let: kwd_let optional_shared optional_public_or_private_variable '{' global_variable_declaration_list '}' .

    $default  reduce using rule 558 (global_let)


State 339

  557 global_variable_declaration_list: global_variable_declaration_list $@36 . optional_field_annotation let_variable_declaration

    '@'  shift, and go to state 214

    $default  reduce using rule 484 (optional_field_annotation)

    metadata_argument_list     go to state 215
    optional_field_annotation  go to state 405


State 340

  105 metadata_argument_list: '@' annotation_argument .

    $default  reduce using rule 105 (metadata_argument_list)


State 341

  106 metadata_argument_list: metadata_argument_list '@' . annotation_argument

    "type"  shift, and go to state 32
    "in"    shift, and go to state 33
    "name"  shift, and go to state 34

    annotation_argument_name  go to state 35
    annotation_argument       go to state 406


State 342

  538 global_let_variable_name_with_pos_list: "name" .

    $default  reduce using rule 538 (global_let_variable_name_with_pos_list)


State 343

  539 global_let_variable_name_with_pos_list: global_let_variable_name_with_pos_list . ',' "name"
  546 global_let_variable_declaration: global_let_variable_name_with_pos_list . ':' type_declaration_no_options ';'
  547                                | global_let_variable_name_with_pos_list . ':' type_declaration_no_options copy_or_move_or_clone expr ';'
  548                                | global_let_variable_name_with_pos_list . optional_ref copy_or_move_or_clone expr ';'

    ','  shift, and go to state 407
    ':'  shift, and go to state 408
    '&'  shift, and go to state 409

    $default  reduce using rule 531 (optional_ref)

    optional_ref  go to state 410


State 344

  560 global_let: kwd_let optional_shared optional_public_or_private_variable $@37 optional_field_annotation global_let_variable_declaration .

    $default  reduce using rule 560 (global_let)


State 345

   91 annotation_argument_value_list: annotation_argument_value_list ',' annotation_argument_value .

    $default  reduce using rule 91 (annotation_argument_value_list)


State 346

  669 type_declaration_no_options_no_dim: "type" '<' . $@46 type_declaration '>' $@47

    $default  reduce using rule 667 ($@46)

    $@46  go to state 411


State 347

  692 type_declaration_no_options_no_dim: "array" '<' . $@51 type_declaration '>' $@52

    $default  reduce using rule 690 ($@51)

    $@51  go to state 412


State 348

  695 type_declaration_no_options_no_dim: "table" '<' . $@53 table_type_pair '>' $@54

    $default  reduce using rule 693 ($@53)

    $@53  go to state 413


State 349

  670 type_declaration_no_options_no_dim: "typedecl" '(' . expr ')'

    "struct"                          shift, and go to state 414
    "class"                           shift, and go to state 415
    "true"                            shift, and go to state 416
    "false"                           shift, and go to state 417
    "new"                             shift, and go to state 418
    "typeinfo"                        shift, and go to state 419
    "type"                            shift, and go to state 420
    "array"                           shift, and go to state 421
    "null"                            shift, and go to state 422
    "table"                           shift, and go to state 423
    "deref"                           shift, and go to state 424
    "cast"                            shift, and go to state 425
    "upcast"                          shift, and go to state 426
    "addr"                            shift, and go to state 427
    "reinterpret"                     shift, and go to state 428
    "unsafe"                          shift, and go to state 429
    "fixed_array"                     shift, and go to state 430
    "default"                         shift, and go to state 431
    "bool"                            shift, and go to state 228
    "void"                            shift, and go to state 229
    "string"                          shift, and go to state 230
    "int"                             shift, and go to state 232
    "int2"                            shift, and go to state 233
    "int3"                            shift, and go to state 234
    "int4"                            shift, and go to state 235
    "uint"                            shift, and go to state 236
    "bitfield"                        shift, and go to state 432
    "uint2"                           shift, and go to state 238
    "uint3"                           shift, and go to state 239
    "uint4"                           shift, and go to state 240
    "float"                           shift, and go to state 241
    "float2"                          shift, and go to state 242
    "float3"                          shift, and go to state 243
    "float4"                          shift, and go to state 244
    "range"                           shift, and go to state 245
    "urange"                          shift, and go to state 246
    "range64"                         shift, and go to state 247
    "urange64"                        shift, and go to state 248
    "int64"                           shift, and go to state 250
    "uint64"                          shift, and go to state 251
    "double"                          shift, and go to state 252
    "int8"                            shift, and go to state 255
    "uint8"                           shift, and go to state 256
    "int16"                           shift, and go to state 257
    "uint16"                          shift, and go to state 258
    "tuple"                           shift, and go to state 433
    "variant"                         shift, and go to state 434
    "generator"                       shift, and go to state 435
    "++"                              shift, and go to state 436
    "--"                              shift, and go to state 437
    "::"                              shift, and go to state 55
    "$$"                              shift, and go to state 438
    "$i"                              shift, and go to state 439
    "$v"                              shift, and go to state 440
    "$b"                              shift, and go to state 441
    "$a"                              shift, and go to state 442
    "$c"                              shift, and go to state 443
    "..."                             shift, and go to state 444
    "integer constant"                shift, and go to state 445
    "long integer constant"           shift, and go to state 446
    "unsigned integer constant"       shift, and go to state 447
    "unsigned long integer constant"  shift, and go to state 448
    "unsigned int8 constant"          shift, and go to state 449
    "floating point constant"         shift, and go to state 450
    "double constant"                 shift, and go to state 451
    "name"                            shift, and go to state 56
    "start of the string"             shift, and go to state 452
    '-'                               shift, and go to state 453
    '+'                               shift, and go to state 454
    '*'                               shift, and go to state 455
    '%'                               shift, and go to state 13
    '~'                               shift, and go to state 456
    '!'                               shift, and go to state 457
    '['                               shift, and go to state 458
    '('                               shift, and go to state 459
    '$'                               shift, and go to state 460
    '@'                               shift, and go to state 461
    '{'                               shift, and go to state 462

    string_builder          go to state 463
    expr_reader             go to state 464
    expr_call_pipe          go to state 465
    name_in_namespace       go to state 466
    expr_new                go to state 467
    expr_cast               go to state 468
    expr_type_decl          go to state 469
    expr_type_info          go to state 470
    block_or_lambda         go to state 471
    expr_full_block         go to state 472
    expr_numeric_const      go to state 473
    expr_named_call         go to state 474
    expr_method_call        go to state 475
    func_addr_expr          go to state 476
    expr_field              go to state 477
    expr_call               go to state 478
    expr                    go to state 479
    expr_generator          go to state 480
    expr_mtag               go to state 481
    basic_type_declaration  go to state 482
    make_decl               go to state 483
    make_struct_decl        go to state 484
    make_tuple_call         go to state 485
    make_dim_decl           go to state 486
    make_table_decl         go to state 487
    array_comprehension     go to state 488


State 350

  698 type_declaration_no_options_no_dim: "iterator" '<' . $@55 type_declaration '>' $@56

    $default  reduce using rule 696 ($@55)

    $@55  go to state 489


State 351

  688 type_declaration_no_options_no_dim: "smart_ptr" '<' . $@49 type_declaration '>' $@50

    $default  reduce using rule 686 ($@49)

    $@49  go to state 490


State 352

  643 auto_type_declaration: "auto" '(' . "name" ')'

    "name"  shift, and go to state 491


State 353

  652 bitfield_type_declaration: "bitfield" '<' . $@44 bitfield_bits '>' $@45

    $default  reduce using rule 650 ($@44)

    $@44  go to state 492


State 354

  702 type_declaration_no_options_no_dim: "block" '<' . $@57 type_declaration '>' $@58
  705                                   | "block" '<' . $@59 optional_function_argument_list optional_function_type '>' $@60

    ':'       reduce using rule 703 ($@59)
    '>'       reduce using rule 703 ($@59)
    '('       reduce using rule 703 ($@59)
    $default  reduce using rule 700 ($@57)

    $@57  go to state 493
    $@59  go to state 494


State 355

  709 type_declaration_no_options_no_dim: "function" '<' . $@61 type_declaration '>' $@62
  712                                   | "function" '<' . $@63 optional_function_argument_list optional_function_type '>' $@64

    ':'       reduce using rule 710 ($@63)
    '>'       reduce using rule 710 ($@63)
    '('       reduce using rule 710 ($@63)
    $default  reduce using rule 707 ($@61)

    $@61  go to state 495
    $@63  go to state 496


State 356

  716 type_declaration_no_options_no_dim: "lambda" '<' . $@65 type_declaration '>' $@66
  719                                   | "lambda" '<' . $@67 optional_function_argument_list optional_function_type '>' $@68

    ':'       reduce using rule 717 ($@67)
    '>'       reduce using rule 717 ($@67)
    '('       reduce using rule 717 ($@67)
    $default  reduce using rule 714 ($@65)

    $@65  go to state 497
    $@67  go to state 498


State 357

  722 type_declaration_no_options_no_dim: "tuple" '<' . $@69 tuple_type_list '>' $@70

    $default  reduce using rule 720 ($@69)

    $@69  go to state 499


State 358

  725 type_declaration_no_options_no_dim: "variant" '<' . $@71 variant_type_list '>' $@72

    $default  reduce using rule 723 ($@71)

    $@71  go to state 500


State 359

  644 auto_type_declaration: "$t" '(' . expr ')'

    "struct"                          shift, and go to state 414
    "class"                           shift, and go to state 415
    "true"                            shift, and go to state 416
    "false"                           shift, and go to state 417
    "new"                             shift, and go to state 418
    "typeinfo"                        shift, and go to state 419
    "type"                            shift, and go to state 420
    "array"                           shift, and go to state 421
    "null"                            shift, and go to state 422
    "table"                           shift, and go to state 423
    "deref"                           shift, and go to state 424
    "cast"                            shift, and go to state 425
    "upcast"                          shift, and go to state 426
    "addr"                            shift, and go to state 427
    "reinterpret"                     shift, and go to state 428
    "unsafe"                          shift, and go to state 429
    "fixed_array"                     shift, and go to state 430
    "default"                         shift, and go to state 431
    "bool"                            shift, and go to state 228
    "void"                            shift, and go to state 229
    "string"                          shift, and go to state 230
    "int"                             shift, and go to state 232
    "int2"                            shift, and go to state 233
    "int3"                            shift, and go to state 234
    "int4"                            shift, and go to state 235
    "uint"                            shift, and go to state 236
    "bitfield"                        shift, and go to state 432
    "uint2"                           shift, and go to state 238
    "uint3"                           shift, and go to state 239
    "uint4"                           shift, and go to state 240
    "float"                           shift, and go to state 241
    "float2"                          shift, and go to state 242
    "float3"                          shift, and go to state 243
    "float4"                          shift, and go to state 244
    "range"                           shift, and go to state 245
    "urange"                          shift, and go to state 246
    "range64"                         shift, and go to state 247
    "urange64"                        shift, and go to state 248
    "int64"                           shift, and go to state 250
    "uint64"                          shift, and go to state 251
    "double"                          shift, and go to state 252
    "int8"                            shift, and go to state 255
    "uint8"                           shift, and go to state 256
    "int16"                           shift, and go to state 257
    "uint16"                          shift, and go to state 258
    "tuple"                           shift, and go to state 433
    "variant"                         shift, and go to state 434
    "generator"                       shift, and go to state 435
    "++"                              shift, and go to state 436
    "--"                              shift, and go to state 437
    "::"                              shift, and go to state 55
    "$$"                              shift, and go to state 438
    "$i"                              shift, and go to state 439
    "$v"                              shift, and go to state 440
    "$b"                              shift, and go to state 441
    "$a"                              shift, and go to state 442
    "$c"                              shift, and go to state 443
    "..."                             shift, and go to state 444
    "integer constant"                shift, and go to state 445
    "long integer constant"           shift, and go to state 446
    "unsigned integer constant"       shift, and go to state 447
    "unsigned long integer constant"  shift, and go to state 448
    "unsigned int8 constant"          shift, and go to state 449
    "floating point constant"         shift, and go to state 450
    "double constant"                 shift, and go to state 451
    "name"                            shift, and go to state 56
    "start of the string"             shift, and go to state 452
    '-'                               shift, and go to state 453
    '+'                               shift, and go to state 454
    '*'                               shift, and go to state 455
    '%'                               shift, and go to state 13
    '~'                               shift, and go to state 456
    '!'                               shift, and go to state 457
    '['                               shift, and go to state 458
    '('                               shift, and go to state 459
    '$'                               shift, and go to state 460
    '@'                               shift, and go to state 461
    '{'                               shift, and go to state 462

    string_builder          go to state 463
    expr_reader             go to state 464
    expr_call_pipe          go to state 465
    name_in_namespace       go to state 466
    expr_new                go to state 467
    expr_cast               go to state 468
    expr_type_decl          go to state 469
    expr_type_info          go to state 470
    block_or_lambda         go to state 471
    expr_full_block         go to state 472
    expr_numeric_const      go to state 473
    expr_named_call         go to state 474
    expr_method_call        go to state 475
    func_addr_expr          go to state 476
    expr_field              go to state 477
    expr_call               go to state 478
    expr                    go to state 501
    expr_generator          go to state 480
    expr_mtag               go to state 481
    basic_type_declaration  go to state 482
    make_decl               go to state 483
    make_struct_decl        go to state 484
    make_tuple_call         go to state 485
    make_dim_decl           go to state 486
    make_table_decl         go to state 487
    array_comprehension     go to state 488


State 360

  671 type_declaration_no_options_no_dim: '$' name_in_namespace . '(' optional_expr_list ')'
  673                                   | '$' name_in_namespace . '<' $@48 type_declaration_no_options_list '>' '(' optional_expr_list ')'

    '<'  shift, and go to state 502
    '('  shift, and go to state 503


State 361

  676 type_declaration_no_options_no_dim: type_declaration_no_options_no_dim "const" .

    $default  reduce using rule 676 (type_declaration_no_options_no_dim)


State 362

  681 type_declaration_no_options_no_dim: type_declaration_no_options_no_dim "implicit" .

    $default  reduce using rule 681 (type_declaration_no_options_no_dim)


State 363

  675 type_declaration_no_options_no_dim: type_declaration_no_options_no_dim "explicit" .

    $default  reduce using rule 675 (type_declaration_no_options_no_dim)


State 364

  683 type_declaration_no_options_no_dim: type_declaration_no_options_no_dim "==" . "const"
  684                                   | type_declaration_no_options_no_dim "==" . '&'

    "const"  shift, and go to state 504
    '&'      shift, and go to state 505


State 365

  689 type_declaration_no_options_no_dim: type_declaration_no_options_no_dim "??" .

    $default  reduce using rule 689 (type_declaration_no_options_no_dim)


State 366

  685 type_declaration_no_options_no_dim: type_declaration_no_options_no_dim '?' .

    $default  reduce using rule 685 (type_declaration_no_options_no_dim)


State 367

  678 type_declaration_no_options_no_dim: type_declaration_no_options_no_dim '&' .

    $default  reduce using rule 678 (type_declaration_no_options_no_dim)


State 368

  674 type_declaration_no_options_no_dim: type_declaration_no_options_no_dim '-' . '[' ']'
  677                                   | type_declaration_no_options_no_dim '-' . "const"
  679                                   | type_declaration_no_options_no_dim '-' . '&'
  682                                   | type_declaration_no_options_no_dim '-' . '#'

    "const"  shift, and go to state 506
    '&'      shift, and go to state 507
    '['      shift, and go to state 508
    '#'      shift, and go to state 509


State 369

  657 dim_list: '[' . expr ']'
  658         | '[' . ']'

    "struct"                          shift, and go to state 414
    "class"                           shift, and go to state 415
    "true"                            shift, and go to state 416
    "false"                           shift, and go to state 417
    "new"                             shift, and go to state 418
    "typeinfo"                        shift, and go to state 419
    "type"                            shift, and go to state 420
    "array"                           shift, and go to state 421
    "null"                            shift, and go to state 422
    "table"                           shift, and go to state 423
    "deref"                           shift, and go to state 424
    "cast"                            shift, and go to state 425
    "upcast"                          shift, and go to state 426
    "addr"                            shift, and go to state 427
    "reinterpret"                     shift, and go to state 428
    "unsafe"                          shift, and go to state 429
    "fixed_array"                     shift, and go to state 430
    "default"                         shift, and go to state 431
    "bool"                            shift, and go to state 228
    "void"                            shift, and go to state 229
    "string"                          shift, and go to state 230
    "int"                             shift, and go to state 232
    "int2"                            shift, and go to state 233
    "int3"                            shift, and go to state 234
    "int4"                            shift, and go to state 235
    "uint"                            shift, and go to state 236
    "bitfield"                        shift, and go to state 432
    "uint2"                           shift, and go to state 238
    "uint3"                           shift, and go to state 239
    "uint4"                           shift, and go to state 240
    "float"                           shift, and go to state 241
    "float2"                          shift, and go to state 242
    "float3"                          shift, and go to state 243
    "float4"                          shift, and go to state 244
    "range"                           shift, and go to state 245
    "urange"                          shift, and go to state 246
    "range64"                         shift, and go to state 247
    "urange64"                        shift, and go to state 248
    "int64"                           shift, and go to state 250
    "uint64"                          shift, and go to state 251
    "double"                          shift, and go to state 252
    "int8"                            shift, and go to state 255
    "uint8"                           shift, and go to state 256
    "int16"                           shift, and go to state 257
    "uint16"                          shift, and go to state 258
    "tuple"                           shift, and go to state 433
    "variant"                         shift, and go to state 434
    "generator"                       shift, and go to state 435
    "++"                              shift, and go to state 436
    "--"                              shift, and go to state 437
    "::"                              shift, and go to state 55
    "$$"                              shift, and go to state 438
    "$i"                              shift, and go to state 439
    "$v"                              shift, and go to state 440
    "$b"                              shift, and go to state 441
    "$a"                              shift, and go to state 442
    "$c"                              shift, and go to state 443
    "..."                             shift, and go to state 444
    "integer constant"                shift, and go to state 445
    "long integer constant"           shift, and go to state 446
    "unsigned integer constant"       shift, and go to state 447
    "unsigned long integer constant"  shift, and go to state 448
    "unsigned int8 constant"          shift, and go to state 449
    "floating point constant"         shift, and go to state 450
    "double constant"                 shift, and go to state 451
    "name"                            shift, and go to state 56
    "start of the string"             shift, and go to state 452
    '-'                               shift, and go to state 453
    '+'                               shift, and go to state 454
    '*'                               shift, and go to state 455
    '%'                               shift, and go to state 13
    '~'                               shift, and go to state 456
    '!'                               shift, and go to state 457
    '['                               shift, and go to state 458
    ']'                               shift, and go to state 510
    '('                               shift, and go to state 459
    '$'                               shift, and go to state 460
    '@'                               shift, and go to state 461
    '{'                               shift, and go to state 462

    string_builder          go to state 463
    expr_reader             go to state 464
    expr_call_pipe          go to state 465
    name_in_namespace       go to state 466
    expr_new                go to state 467
    expr_cast               go to state 468
    expr_type_decl          go to state 469
    expr_type_info          go to state 470
    block_or_lambda         go to state 471
    expr_full_block         go to state 472
    expr_numeric_const      go to state 473
    expr_named_call         go to state 474
    expr_method_call        go to state 475
    func_addr_expr          go to state 476
    expr_field              go to state 477
    expr_call               go to state 478
    expr                    go to state 511
    expr_generator          go to state 480
    expr_mtag               go to state 481
    basic_type_declaration  go to state 482
    make_decl               go to state 483
    make_struct_decl        go to state 484
    make_tuple_call         go to state 485
    make_dim_decl           go to state 486
    make_table_decl         go to state 487
    array_comprehension     go to state 488


State 370

  680 type_declaration_no_options_no_dim: type_declaration_no_options_no_dim '#' .

    $default  reduce using rule 680 (type_declaration_no_options_no_dim)


State 371

  659 dim_list: dim_list . '[' expr ']'
  660         | dim_list . '[' ']'
  662 type_declaration_no_options: type_declaration_no_options_no_dim dim_list .

    '['  shift, and go to state 512

    $default  reduce using rule 662 (type_declaration_no_options)


State 372

  727 type_declaration: type_declaration '|' . type_declaration_no_options
  728                 | type_declaration '|' . '#'

    "type"       shift, and go to state 222
    "array"      shift, and go to state 223
    "table"      shift, and go to state 224
    "typedecl"   shift, and go to state 225
    "iterator"   shift, and go to state 226
    "smart_ptr"  shift, and go to state 227
    "bool"       shift, and go to state 228
    "void"       shift, and go to state 229
    "string"     shift, and go to state 230
    "auto"       shift, and go to state 231
    "int"        shift, and go to state 232
    "int2"       shift, and go to state 233
    "int3"       shift, and go to state 234
    "int4"       shift, and go to state 235
    "uint"       shift, and go to state 236
    "bitfield"   shift, and go to state 237
    "uint2"      shift, and go to state 238
    "uint3"      shift, and go to state 239
    "uint4"      shift, and go to state 240
    "float"      shift, and go to state 241
    "float2"     shift, and go to state 242
    "float3"     shift, and go to state 243
    "float4"     shift, and go to state 244
    "range"      shift, and go to state 245
    "urange"     shift, and go to state 246
    "range64"    shift, and go to state 247
    "urange64"   shift, and go to state 248
    "block"      shift, and go to state 249
    "int64"      shift, and go to state 250
    "uint64"     shift, and go to state 251
    "double"     shift, and go to state 252
    "function"   shift, and go to state 253
    "lambda"     shift, and go to state 254
    "int8"       shift, and go to state 255
    "uint8"      shift, and go to state 256
    "int16"      shift, and go to state 257
    "uint16"     shift, and go to state 258
    "tuple"      shift, and go to state 259
    "variant"    shift, and go to state 260
    "::"         shift, and go to state 55
    "$t"         shift, and go to state 261
    "name"       shift, and go to state 56
    '$'          shift, and go to state 262
    '#'          shift, and go to state 513

    name_in_namespace                   go to state 263
    basic_type_declaration              go to state 264
    structure_type_declaration          go to state 265
    auto_type_declaration               go to state 266
    bitfield_type_declaration           go to state 267
    type_declaration_no_options         go to state 514
    type_declaration_no_options_no_dim  go to state 269


State 373

  743 bitfield_alias_declaration: "bitfield" $@81 optional_public_or_private_alias "name" optional_commas $@82 '{' . $@83 bitfield_alias_bits optional_commas $@84 '}'

    $default  reduce using rule 741 ($@83)

    $@83  go to state 515


State 374

  733 tuple_alias_declaration: "tuple" $@73 optional_public_or_private_alias "name" optional_semis $@74 '{' . $@75 tuple_alias_type_list optional_semis $@76 '}'

    $default  reduce using rule 731 ($@75)

    $@75  go to state 516


State 375

  738 variant_alias_declaration: "variant" $@77 optional_public_or_private_alias "name" optional_semis $@78 '{' . $@79 variant_alias_type_list optional_semis $@80 '}'

    $default  reduce using rule 736 ($@79)

    $@79  go to state 517


State 376

  184 function_name: "operator" "is" "name" .

    $default  reduce using rule 184 (function_name)


State 377

  185 function_name: "operator" "as" "name" .

    $default  reduce using rule 185 (function_name)


State 378

  178 function_name: "operator" "?." "name" .

    $default  reduce using rule 178 (function_name)


State 379

  173 function_name: "operator" "?[" ']' .

    $default  reduce using rule 173 (function_name)


State 380

  186 function_name: "operator" '?' "as" .
  187              | "operator" '?' "as" . "name"

    "name"  shift, and go to state 518

    $default  reduce using rule 186 (function_name)


State 381

  176 function_name: "operator" '.' "name" .
  177              | "operator" '.' "name" . ":="

    ":="  shift, and go to state 519

    $default  reduce using rule 176 (function_name)


State 382

  172 function_name: "operator" '[' ']' .

    $default  reduce using rule 172 (function_name)


State 383

  505 function_argument_declaration: "$a" . '(' expr ')'

    '('  shift, and go to state 520


State 384

  124 optional_function_argument_list: '(' ')' .

    $default  reduce using rule 124 (optional_function_argument_list)


State 385

  504 function_argument_declaration: optional_field_annotation . kwd_let_var_or_nothing variable_declaration

    "let"  shift, and go to state 521
    "var"  shift, and go to state 522

    $default  reduce using rule 281 (kwd_let_var_or_nothing)

    kwd_let_var_or_nothing  go to state 523


State 386

  506 function_argument_list: function_argument_declaration .

    $default  reduce using rule 506 (function_argument_list)


State 387

  125 optional_function_argument_list: '(' function_argument_list . ')'
  507 function_argument_list: function_argument_list . ';' function_argument_declaration

    ')'  shift, and go to state 524
    ';'  shift, and go to state 525


State 388

  127 optional_function_type: ':' . type_declaration

    "type"       shift, and go to state 222
    "array"      shift, and go to state 223
    "table"      shift, and go to state 224
    "typedecl"   shift, and go to state 225
    "iterator"   shift, and go to state 226
    "smart_ptr"  shift, and go to state 227
    "bool"       shift, and go to state 228
    "void"       shift, and go to state 229
    "string"     shift, and go to state 230
    "auto"       shift, and go to state 231
    "int"        shift, and go to state 232
    "int2"       shift, and go to state 233
    "int3"       shift, and go to state 234
    "int4"       shift, and go to state 235
    "uint"       shift, and go to state 236
    "bitfield"   shift, and go to state 237
    "uint2"      shift, and go to state 238
    "uint3"      shift, and go to state 239
    "uint4"      shift, and go to state 240
    "float"      shift, and go to state 241
    "float2"     shift, and go to state 242
    "float3"     shift, and go to state 243
    "float4"     shift, and go to state 244
    "range"      shift, and go to state 245
    "urange"     shift, and go to state 246
    "range64"    shift, and go to state 247
    "urange64"   shift, and go to state 248
    "block"      shift, and go to state 249
    "int64"      shift, and go to state 250
    "uint64"     shift, and go to state 251
    "double"     shift, and go to state 252
    "function"   shift, and go to state 253
    "lambda"     shift, and go to state 254
    "int8"       shift, and go to state 255
    "uint8"      shift, and go to state 256
    "int16"      shift, and go to state 257
    "uint16"     shift, and go to state 258
    "tuple"      shift, and go to state 259
    "variant"    shift, and go to state 260
    "::"         shift, and go to state 55
    "$t"         shift, and go to state 261
    "name"       shift, and go to state 56
    '$'          shift, and go to state 262

    name_in_namespace                   go to state 263
    basic_type_declaration              go to state 264
    structure_type_declaration          go to state 265
    auto_type_declaration               go to state 266
    bitfield_type_declaration           go to state 267
    type_declaration_no_options         go to state 268
    type_declaration_no_options_no_dim  go to state 269
    type_declaration                    go to state 526


State 389

  217 function_declaration_header: function_name optional_function_argument_list optional_function_type .

    $default  reduce using rule 217 (function_declaration_header)


State 390

  226 expression_block: $@9 '{' . expressions $@10 '}' expression_block_finally

    $default  reduce using rule 247 (expressions)

    expressions  go to state 527


State 391

  633 enum_basic_type_declaration: "int" .

    $default  reduce using rule 633 (enum_basic_type_declaration)


State 392

  636 enum_basic_type_declaration: "uint" .

    $default  reduce using rule 636 (enum_basic_type_declaration)


State 393

  639 enum_basic_type_declaration: "int64" .

    $default  reduce using rule 639 (enum_basic_type_declaration)


State 394

  640 enum_basic_type_declaration: "uint64" .

    $default  reduce using rule 640 (enum_basic_type_declaration)


State 395

  634 enum_basic_type_declaration: "int8" .

    $default  reduce using rule 634 (enum_basic_type_declaration)


State 396

  637 enum_basic_type_declaration: "uint8" .

    $default  reduce using rule 637 (enum_basic_type_declaration)


State 397

  635 enum_basic_type_declaration: "int16" .

    $default  reduce using rule 635 (enum_basic_type_declaration)


State 398

  638 enum_basic_type_declaration: "uint16" .

    $default  reduce using rule 638 (enum_basic_type_declaration)


State 399

  579 optional_enum_basic_type_declaration: ':' enum_basic_type_declaration .

    $default  reduce using rule 579 (optional_enum_basic_type_declaration)


State 400

  585 enum_declaration: optional_annotation_list "enum" $@39 optional_public_or_private_enum enum_name optional_enum_basic_type_declaration optional_commas . '{' $@40 enum_list optional_commas $@41 '}'

    '{'  shift, and go to state 528


State 401

  587 optional_structure_parent: ':' . name_in_namespace

    "::"    shift, and go to state 55
    "name"  shift, and go to state 56

    name_in_namespace  go to state 529


State 402

  590 structure_name: optional_sealed "name" optional_structure_parent .

    $default  reduce using rule 590 (structure_name)


State 403

  597 optional_struct_variable_declaration_list: '{' . struct_variable_declaration_list '}'

    $default  reduce using rule 497 (struct_variable_declaration_list)

    struct_variable_declaration_list  go to state 530


State 404

  600 structure_declaration: optional_annotation_list class_or_struct optional_public_or_private_structure $@42 structure_name $@43 optional_struct_variable_declaration_list .

    $default  reduce using rule 600 (structure_declaration)


State 405

  557 global_variable_declaration_list: global_variable_declaration_list $@36 optional_field_annotation . let_variable_declaration

    "$i"    shift, and go to state 531
    "name"  shift, and go to state 532

    let_variable_name_with_pos_list  go to state 533
    let_variable_declaration         go to state 534


State 406

  106 metadata_argument_list: metadata_argument_list '@' annotation_argument .

    $default  reduce using rule 106 (metadata_argument_list)


State 407

  539 global_let_variable_name_with_pos_list: global_let_variable_name_with_pos_list ',' . "name"

    "name"  shift, and go to state 535


State 408

  546 global_let_variable_declaration: global_let_variable_name_with_pos_list ':' . type_declaration_no_options ';'
  547                                | global_let_variable_name_with_pos_list ':' . type_declaration_no_options copy_or_move_or_clone expr ';'

    "type"       shift, and go to state 222
    "array"      shift, and go to state 223
    "table"      shift, and go to state 224
    "typedecl"   shift, and go to state 225
    "iterator"   shift, and go to state 226
    "smart_ptr"  shift, and go to state 227
    "bool"       shift, and go to state 228
    "void"       shift, and go to state 229
    "string"     shift, and go to state 230
    "auto"       shift, and go to state 231
    "int"        shift, and go to state 232
    "int2"       shift, and go to state 233
    "int3"       shift, and go to state 234
    "int4"       shift, and go to state 235
    "uint"       shift, and go to state 236
    "bitfield"   shift, and go to state 237
    "uint2"      shift, and go to state 238
    "uint3"      shift, and go to state 239
    "uint4"      shift, and go to state 240
    "float"      shift, and go to state 241
    "float2"     shift, and go to state 242
    "float3"     shift, and go to state 243
    "float4"     shift, and go to state 244
    "range"      shift, and go to state 245
    "urange"     shift, and go to state 246
    "range64"    shift, and go to state 247
    "urange64"   shift, and go to state 248
    "block"      shift, and go to state 249
    "int64"      shift, and go to state 250
    "uint64"     shift, and go to state 251
    "double"     shift, and go to state 252
    "function"   shift, and go to state 253
    "lambda"     shift, and go to state 254
    "int8"       shift, and go to state 255
    "uint8"      shift, and go to state 256
    "int16"      shift, and go to state 257
    "uint16"     shift, and go to state 258
    "tuple"      shift, and go to state 259
    "variant"    shift, and go to state 260
    "::"         shift, and go to state 55
    "$t"         shift, and go to state 261
    "name"       shift, and go to state 56
    '$'          shift, and go to state 262

    name_in_namespace                   go to state 263
    basic_type_declaration              go to state 264
    structure_type_declaration          go to state 265
    auto_type_declaration               go to state 266
    bitfield_type_declaration           go to state 267
    type_declaration_no_options         go to state 536
    type_declaration_no_options_no_dim  go to state 269


State 409

  532 optional_ref: '&' .

    $default  reduce using rule 532 (optional_ref)


State 410

  548 global_let_variable_declaration: global_let_variable_name_with_pos_list optional_ref . copy_or_move_or_clone expr ';'

    "<-"  shift, and go to state 537
    ":="  shift, and go to state 538
    '='   shift, and go to state 539

    copy_or_move_or_clone  go to state 540


State 411

  669 type_declaration_no_options_no_dim: "type" '<' $@46 . type_declaration '>' $@47

    "type"       shift, and go to state 222
    "array"      shift, and go to state 223
    "table"      shift, and go to state 224
    "typedecl"   shift, and go to state 225
    "iterator"   shift, and go to state 226
    "smart_ptr"  shift, and go to state 227
    "bool"       shift, and go to state 228
    "void"       shift, and go to state 229
    "string"     shift, and go to state 230
    "auto"       shift, and go to state 231
    "int"        shift, and go to state 232
    "int2"       shift, and go to state 233
    "int3"       shift, and go to state 234
    "int4"       shift, and go to state 235
    "uint"       shift, and go to state 236
    "bitfield"   shift, and go to state 237
    "uint2"      shift, and go to state 238
    "uint3"      shift, and go to state 239
    "uint4"      shift, and go to state 240
    "float"      shift, and go to state 241
    "float2"     shift, and go to state 242
    "float3"     shift, and go to state 243
    "float4"     shift, and go to state 244
    "range"      shift, and go to state 245
    "urange"     shift, and go to state 246
    "range64"    shift, and go to state 247
    "urange64"   shift, and go to state 248
    "block"      shift, and go to state 249
    "int64"      shift, and go to state 250
    "uint64"     shift, and go to state 251
    "double"     shift, and go to state 252
    "function"   shift, and go to state 253
    "lambda"     shift, and go to state 254
    "int8"       shift, and go to state 255
    "uint8"      shift, and go to state 256
    "int16"      shift, and go to state 257
    "uint16"     shift, and go to state 258
    "tuple"      shift, and go to state 259
    "variant"    shift, and go to state 260
    "::"         shift, and go to state 55
    "$t"         shift, and go to state 261
    "name"       shift, and go to state 56
    '$'          shift, and go to state 262

    name_in_namespace                   go to state 263
    basic_type_declaration              go to state 264
    structure_type_declaration          go to state 265
    auto_type_declaration               go to state 266
    bitfield_type_declaration           go to state 267
    type_declaration_no_options         go to state 268
    type_declaration_no_options_no_dim  go to state 269
    type_declaration                    go to state 541


State 412

  692 type_declaration_no_options_no_dim: "array" '<' $@51 . type_declaration '>' $@52

    "type"       shift, and go to state 222
    "array"      shift, and go to state 223
    "table"      shift, and go to state 224
    "typedecl"   shift, and go to state 225
    "iterator"   shift, and go to state 226
    "smart_ptr"  shift, and go to state 227
    "bool"       shift, and go to state 228
    "void"       shift, and go to state 229
    "string"     shift, and go to state 230
    "auto"       shift, and go to state 231
    "int"        shift, and go to state 232
    "int2"       shift, and go to state 233
    "int3"       shift, and go to state 234
    "int4"       shift, and go to state 235
    "uint"       shift, and go to state 236
    "bitfield"   shift, and go to state 237
    "uint2"      shift, and go to state 238
    "uint3"      shift, and go to state 239
    "uint4"      shift, and go to state 240
    "float"      shift, and go to state 241
    "float2"     shift, and go to state 242
    "float3"     shift, and go to state 243
    "float4"     shift, and go to state 244
    "range"      shift, and go to state 245
    "urange"     shift, and go to state 246
    "range64"    shift, and go to state 247
    "urange64"   shift, and go to state 248
    "block"      shift, and go to state 249
    "int64"      shift, and go to state 250
    "uint64"     shift, and go to state 251
    "double"     shift, and go to state 252
    "function"   shift, and go to state 253
    "lambda"     shift, and go to state 254
    "int8"       shift, and go to state 255
    "uint8"      shift, and go to state 256
    "int16"      shift, and go to state 257
    "uint16"     shift, and go to state 258
    "tuple"      shift, and go to state 259
    "variant"    shift, and go to state 260
    "::"         shift, and go to state 55
    "$t"         shift, and go to state 261
    "name"       shift, and go to state 56
    '$'          shift, and go to state 262

    name_in_namespace                   go to state 263
    basic_type_declaration              go to state 264
    structure_type_declaration          go to state 265
    auto_type_declaration               go to state 266
    bitfield_type_declaration           go to state 267
    type_declaration_no_options         go to state 268
    type_declaration_no_options_no_dim  go to state 269
    type_declaration                    go to state 542


State 413

  695 type_declaration_no_options_no_dim: "table" '<' $@53 . table_type_pair '>' $@54

    "type"       shift, and go to state 222
    "array"      shift, and go to state 223
    "table"      shift, and go to state 224
    "typedecl"   shift, and go to state 225
    "iterator"   shift, and go to state 226
    "smart_ptr"  shift, and go to state 227
    "bool"       shift, and go to state 228
    "void"       shift, and go to state 229
    "string"     shift, and go to state 230
    "auto"       shift, and go to state 231
    "int"        shift, and go to state 232
    "int2"       shift, and go to state 233
    "int3"       shift, and go to state 234
    "int4"       shift, and go to state 235
    "uint"       shift, and go to state 236
    "bitfield"   shift, and go to state 237
    "uint2"      shift, and go to state 238
    "uint3"      shift, and go to state 239
    "uint4"      shift, and go to state 240
    "float"      shift, and go to state 241
    "float2"     shift, and go to state 242
    "float3"     shift, and go to state 243
    "float4"     shift, and go to state 244
    "range"      shift, and go to state 245
    "urange"     shift, and go to state 246
    "range64"    shift, and go to state 247
    "urange64"   shift, and go to state 248
    "block"      shift, and go to state 249
    "int64"      shift, and go to state 250
    "uint64"     shift, and go to state 251
    "double"     shift, and go to state 252
    "function"   shift, and go to state 253
    "lambda"     shift, and go to state 254
    "int8"       shift, and go to state 255
    "uint8"      shift, and go to state 256
    "int16"      shift, and go to state 257
    "uint16"     shift, and go to state 258
    "tuple"      shift, and go to state 259
    "variant"    shift, and go to state 260
    "::"         shift, and go to state 55
    "$t"         shift, and go to state 261
    "name"       shift, and go to state 56
    '$'          shift, and go to state 262

    name_in_namespace                   go to state 263
    basic_type_declaration              go to state 264
    structure_type_declaration          go to state 265
    auto_type_declaration               go to state 266
    bitfield_type_declaration           go to state 267
    table_type_pair                     go to state 543
    type_declaration_no_options         go to state 268
    type_declaration_no_options_no_dim  go to state 269
    type_declaration                    go to state 544


State 414

  769 make_struct_decl: "struct" . '<' $@85 type_declaration_no_options '>' $@86 '(' use_initializer optional_make_struct_dim_decl ')'

    '<'  shift, and go to state 545


State 415

  772 make_struct_decl: "class" . '<' $@87 type_declaration_no_options '>' $@88 '(' use_initializer optional_make_struct_dim_decl ')'

    '<'  shift, and go to state 546


State 416

  389 expr: "true" .

    $default  reduce using rule 389 (expr)


State 417

  390 expr: "false" .

    $default  reduce using rule 390 (expr)


State 418

  265 expr_new: "new" . new_type_declaration
  266         | "new" . new_type_declaration '(' use_initializer ')'
  267         | "new" . new_type_declaration '(' expr_list ')'
  268         | "new" . new_type_declaration '(' make_struct_single ')'
  269         | "new" . new_type_declaration '(' "uninitialized" make_struct_single ')'
  270         | "new" . make_decl

    "struct"       shift, and go to state 414
    "class"        shift, and go to state 415
    "array"        shift, and go to state 421
    "table"        shift, and go to state 423
    "fixed_array"  shift, and go to state 430
    "default"      shift, and go to state 431
    "tuple"        shift, and go to state 433
    "variant"      shift, and go to state 434
    "::"           shift, and go to state 55
    "name"         shift, and go to state 56
    '<'            shift, and go to state 547
    '['            shift, and go to state 458
    '{'            shift, and go to state 462

    name_in_namespace           go to state 263
    new_type_declaration        go to state 548
    structure_type_declaration  go to state 549
    make_decl                   go to state 550
    make_struct_decl            go to state 484
    make_tuple_call             go to state 485
    make_dim_decl               go to state 486
    make_table_decl             go to state 487
    array_comprehension         go to state 488


State 419

  305 expr_type_info: "typeinfo" . name_in_namespace '(' expr ')'
  306               | "typeinfo" . name_in_namespace '<' "name" '>' '(' expr ')'
  307               | "typeinfo" . name_in_namespace '<' "name" c_or_s "name" '>' '(' expr ')'

    "::"    shift, and go to state 55
    "name"  shift, and go to state 56

    name_in_namespace  go to state 551


State 420

  304 expr_type_decl: "type" . '<' $@19 type_declaration '>' $@20

    '<'  shift, and go to state 552


State 421

  788 make_dim_decl: "array" . "struct" '<' $@95 type_declaration_no_options '>' $@96 '(' use_initializer optional_make_struct_dim_decl ')'
  791              | "array" . "tuple" '<' $@97 type_declaration_no_options '>' $@98 '(' use_initializer optional_make_struct_dim_decl ')'
  794              | "array" . "variant" '<' $@99 type_declaration_no_options '>' $@100 '(' make_variant_dim ')'
  795              | "array" . '(' expr_list optional_comma ')'
  798              | "array" . '<' $@101 type_declaration_no_options '>' $@102 '(' optional_expr_list ')'

    "struct"   shift, and go to state 553
    "tuple"    shift, and go to state 554
    "variant"  shift, and go to state 555
    '<'        shift, and go to state 556
    '('        shift, and go to state 557


State 422

  383 expr: "null" .

    $default  reduce using rule 383 (expr)


State 423

  806 make_table_decl: "table" . '(' expr_map_tuple_list optional_comma ')'
  807                | "table" . '<' type_declaration_no_options '>' '(' optional_expr_map_tuple_list ')'
  808                | "table" . '<' type_declaration_no_options c_or_s type_declaration_no_options '>' '(' optional_expr_map_tuple_list ')'

    '<'  shift, and go to state 558
    '('  shift, and go to state 559


State 424

  433 expr: "deref" . '(' expr ')'

    '('  shift, and go to state 560


State 425

  295 expr_cast: "cast" . '<' $@13 type_declaration_no_options '>' $@14 expr

    '<'  shift, and go to state 561


State 426

  298 expr_cast: "upcast" . '<' $@15 type_declaration_no_options '>' $@16 expr

    '<'  shift, and go to state 562


State 427

  434 expr: "addr" . '(' expr ')'

    '('  shift, and go to state 563


State 428

  301 expr_cast: "reinterpret" . '<' $@17 type_declaration_no_options '>' $@18 expr

    '<'  shift, and go to state 564


State 429

  464 expr: "unsafe" . '(' expr ')'

    '('  shift, and go to state 565


State 430

  799 make_dim_decl: "fixed_array" . '(' expr_list optional_comma ')'
  802              | "fixed_array" . '<' $@103 type_declaration_no_options '>' $@104 '(' expr_list optional_comma ')'

    '<'  shift, and go to state 566
    '('  shift, and go to state 567


State 431

  778 make_struct_decl: "default" . '<' $@91 type_declaration_no_options '>' $@92 use_initializer

    '<'  shift, and go to state 568


State 432

  632 basic_type_declaration: "bitfield" .

    $default  reduce using rule 632 (basic_type_declaration)


State 433

  781 make_tuple_call: "tuple" . '(' expr_list optional_comma ')'
  784                | "tuple" . '<' $@93 type_declaration_no_options '>' $@94 '(' use_initializer optional_make_struct_dim_decl ')'

    '<'  shift, and go to state 569
    '('  shift, and go to state 570


State 434

  775 make_struct_decl: "variant" . '<' $@89 type_declaration_no_options '>' $@90 '(' make_variant_dim ')'

    '<'  shift, and go to state 571


State 435

  465 expr_generator: "generator" . '<' type_declaration_no_options '>' optional_capture_list '(' ')'
  466               | "generator" . '<' type_declaration_no_options '>' optional_capture_list '(' expr ')'
  467               | "generator" . '<' type_declaration_no_options '>' optional_capture_list optional_semis expression_block

    '<'  shift, and go to state 572


State 436

  419 expr: "++" . expr

    "struct"                          shift, and go to state 414
    "class"                           shift, and go to state 415
    "true"                            shift, and go to state 416
    "false"                           shift, and go to state 417
    "new"                             shift, and go to state 418
    "typeinfo"                        shift, and go to state 419
    "type"                            shift, and go to state 420
    "array"                           shift, and go to state 421
    "null"                            shift, and go to state 422
    "table"                           shift, and go to state 423
    "deref"                           shift, and go to state 424
    "cast"                            shift, and go to state 425
    "upcast"                          shift, and go to state 426
    "addr"                            shift, and go to state 427
    "reinterpret"                     shift, and go to state 428
    "unsafe"                          shift, and go to state 429
    "fixed_array"                     shift, and go to state 430
    "default"                         shift, and go to state 431
    "bool"                            shift, and go to state 228
    "void"                            shift, and go to state 229
    "string"                          shift, and go to state 230
    "int"                             shift, and go to state 232
    "int2"                            shift, and go to state 233
    "int3"                            shift, and go to state 234
    "int4"                            shift, and go to state 235
    "uint"                            shift, and go to state 236
    "bitfield"                        shift, and go to state 432
    "uint2"                           shift, and go to state 238
    "uint3"                           shift, and go to state 239
    "uint4"                           shift, and go to state 240
    "float"                           shift, and go to state 241
    "float2"                          shift, and go to state 242
    "float3"                          shift, and go to state 243
    "float4"                          shift, and go to state 244
    "range"                           shift, and go to state 245
    "urange"                          shift, and go to state 246
    "range64"                         shift, and go to state 247
    "urange64"                        shift, and go to state 248
    "int64"                           shift, and go to state 250
    "uint64"                          shift, and go to state 251
    "double"                          shift, and go to state 252
    "int8"                            shift, and go to state 255
    "uint8"                           shift, and go to state 256
    "int16"                           shift, and go to state 257
    "uint16"                          shift, and go to state 258
    "tuple"                           shift, and go to state 433
    "variant"                         shift, and go to state 434
    "generator"                       shift, and go to state 435
    "++"                              shift, and go to state 436
    "--"                              shift, and go to state 437
    "::"                              shift, and go to state 55
    "$$"                              shift, and go to state 438
    "$i"                              shift, and go to state 439
    "$v"                              shift, and go to state 440
    "$b"                              shift, and go to state 441
    "$a"                              shift, and go to state 442
    "$c"                              shift, and go to state 443
    "..."                             shift, and go to state 444
    "integer constant"                shift, and go to state 445
    "long integer constant"           shift, and go to state 446
    "unsigned integer constant"       shift, and go to state 447
    "unsigned long integer constant"  shift, and go to state 448
    "unsigned int8 constant"          shift, and go to state 449
    "floating point constant"         shift, and go to state 450
    "double constant"                 shift, and go to state 451
    "name"                            shift, and go to state 56
    "start of the string"             shift, and go to state 452
    '-'                               shift, and go to state 453
    '+'                               shift, and go to state 454
    '*'                               shift, and go to state 455
    '%'                               shift, and go to state 13
    '~'                               shift, and go to state 456
    '!'                               shift, and go to state 457
    '['                               shift, and go to state 458
    '('                               shift, and go to state 459
    '$'                               shift, and go to state 460
    '@'                               shift, and go to state 461
    '{'                               shift, and go to state 462

    string_builder          go to state 463
    expr_reader             go to state 464
    expr_call_pipe          go to state 465
    name_in_namespace       go to state 466
    expr_new                go to state 467
    expr_cast               go to state 468
    expr_type_decl          go to state 469
    expr_type_info          go to state 470
    block_or_lambda         go to state 471
    expr_full_block         go to state 472
    expr_numeric_const      go to state 473
    expr_named_call         go to state 474
    expr_method_call        go to state 475
    func_addr_expr          go to state 476
    expr_field              go to state 477
    expr_call               go to state 478
    expr                    go to state 573
    expr_generator          go to state 480
    expr_mtag               go to state 481
    basic_type_declaration  go to state 482
    make_decl               go to state 483
    make_struct_decl        go to state 484
    make_tuple_call         go to state 485
    make_dim_decl           go to state 486
    make_table_decl         go to state 487
    array_comprehension     go to state 488


State 437

  420 expr: "--" . expr

    "struct"                          shift, and go to state 414
    "class"                           shift, and go to state 415
    "true"                            shift, and go to state 416
    "false"                           shift, and go to state 417
    "new"                             shift, and go to state 418
    "typeinfo"                        shift, and go to state 419
    "type"                            shift, and go to state 420
    "array"                           shift, and go to state 421
    "null"                            shift, and go to state 422
    "table"                           shift, and go to state 423
    "deref"                           shift, and go to state 424
    "cast"                            shift, and go to state 425
    "upcast"                          shift, and go to state 426
    "addr"                            shift, and go to state 427
    "reinterpret"                     shift, and go to state 428
    "unsafe"                          shift, and go to state 429
    "fixed_array"                     shift, and go to state 430
    "default"                         shift, and go to state 431
    "bool"                            shift, and go to state 228
    "void"                            shift, and go to state 229
    "string"                          shift, and go to state 230
    "int"                             shift, and go to state 232
    "int2"                            shift, and go to state 233
    "int3"                            shift, and go to state 234
    "int4"                            shift, and go to state 235
    "uint"                            shift, and go to state 236
    "bitfield"                        shift, and go to state 432
    "uint2"                           shift, and go to state 238
    "uint3"                           shift, and go to state 239
    "uint4"                           shift, and go to state 240
    "float"                           shift, and go to state 241
    "float2"                          shift, and go to state 242
    "float3"                          shift, and go to state 243
    "float4"                          shift, and go to state 244
    "range"                           shift, and go to state 245
    "urange"                          shift, and go to state 246
    "range64"                         shift, and go to state 247
    "urange64"                        shift, and go to state 248
    "int64"                           shift, and go to state 250
    "uint64"                          shift, and go to state 251
    "double"                          shift, and go to state 252
    "int8"                            shift, and go to state 255
    "uint8"                           shift, and go to state 256
    "int16"                           shift, and go to state 257
    "uint16"                          shift, and go to state 258
    "tuple"                           shift, and go to state 433
    "variant"                         shift, and go to state 434
    "generator"                       shift, and go to state 435
    "++"                              shift, and go to state 436
    "--"                              shift, and go to state 437
    "::"                              shift, and go to state 55
    "$$"                              shift, and go to state 438
    "$i"                              shift, and go to state 439
    "$v"                              shift, and go to state 440
    "$b"                              shift, and go to state 441
    "$a"                              shift, and go to state 442
    "$c"                              shift, and go to state 443
    "..."                             shift, and go to state 444
    "integer constant"                shift, and go to state 445
    "long integer constant"           shift, and go to state 446
    "unsigned integer constant"       shift, and go to state 447
    "unsigned long integer constant"  shift, and go to state 448
    "unsigned int8 constant"          shift, and go to state 449
    "floating point constant"         shift, and go to state 450
    "double constant"                 shift, and go to state 451
    "name"                            shift, and go to state 56
    "start of the string"             shift, and go to state 452
    '-'                               shift, and go to state 453
    '+'                               shift, and go to state 454
    '*'                               shift, and go to state 455
    '%'                               shift, and go to state 13
    '~'                               shift, and go to state 456
    '!'                               shift, and go to state 457
    '['                               shift, and go to state 458
    '('                               shift, and go to state 459
    '$'                               shift, and go to state 460
    '@'                               shift, and go to state 461
    '{'                               shift, and go to state 462

    string_builder          go to state 463
    expr_reader             go to state 464
    expr_call_pipe          go to state 465
    name_in_namespace       go to state 466
    expr_new                go to state 467
    expr_cast               go to state 468
    expr_type_decl          go to state 469
    expr_type_info          go to state 470
    block_or_lambda         go to state 471
    expr_full_block         go to state 472
    expr_numeric_const      go to state 473
    expr_named_call         go to state 474
    expr_method_call        go to state 475
    func_addr_expr          go to state 476
    expr_field              go to state 477
    expr_call               go to state 478
    expr                    go to state 574
    expr_generator          go to state 480
    expr_mtag               go to state 481
    basic_type_declaration  go to state 482
    make_decl               go to state 483
    make_struct_decl        go to state 484
    make_tuple_call         go to state 485
    make_dim_decl           go to state 486
    make_table_decl         go to state 487
    array_comprehension     go to state 488


State 438

  468 expr_mtag: "$$" . '(' expr ')'

    '('  shift, and go to state 575


State 439

  469 expr_mtag: "$i" . '(' expr ')'

    '('  shift, and go to state 576


State 440

  470 expr_mtag: "$v" . '(' expr ')'

    '('  shift, and go to state 577


State 441

  471 expr_mtag: "$b" . '(' expr ')'

    '('  shift, and go to state 578


State 442

  472 expr_mtag: "$a" . '(' expr ')'

    '('  shift, and go to state 579


State 443

  474 expr_mtag: "$c" . '(' expr ')' '(' ')'
  475          | "$c" . '(' expr ')' '(' expr_list ')'

    '('  shift, and go to state 580


State 444

  473 expr_mtag: "..." .

    $default  reduce using rule 473 (expr_mtag)


State 445

  328 expr_numeric_const: "integer constant" .

    $default  reduce using rule 328 (expr_numeric_const)


State 446

  330 expr_numeric_const: "long integer constant" .

    $default  reduce using rule 330 (expr_numeric_const)


State 447

  329 expr_numeric_const: "unsigned integer constant" .

    $default  reduce using rule 329 (expr_numeric_const)


State 448

  331 expr_numeric_const: "unsigned long integer constant" .

    $default  reduce using rule 331 (expr_numeric_const)


State 449

  332 expr_numeric_const: "unsigned int8 constant" .

    $default  reduce using rule 332 (expr_numeric_const)


State 450

  333 expr_numeric_const: "floating point constant" .

    $default  reduce using rule 333 (expr_numeric_const)


State 451

  334 expr_numeric_const: "double constant" .

    $default  reduce using rule 334 (expr_numeric_const)


State 452

   32 string_builder: "start of the string" . string_builder_body "end of the string"

    $default  reduce using rule 29 (string_builder_body)

    string_builder_body  go to state 581


State 453

  396 expr: '-' . expr

    "struct"                          shift, and go to state 414
    "class"                           shift, and go to state 415
    "true"                            shift, and go to state 416
    "false"                           shift, and go to state 417
    "new"                             shift, and go to state 418
    "typeinfo"                        shift, and go to state 419
    "type"                            shift, and go to state 420
    "array"                           shift, and go to state 421
    "null"                            shift, and go to state 422
    "table"                           shift, and go to state 423
    "deref"                           shift, and go to state 424
    "cast"                            shift, and go to state 425
    "upcast"                          shift, and go to state 426
    "addr"                            shift, and go to state 427
    "reinterpret"                     shift, and go to state 428
    "unsafe"                          shift, and go to state 429
    "fixed_array"                     shift, and go to state 430
    "default"                         shift, and go to state 431
    "bool"                            shift, and go to state 228
    "void"                            shift, and go to state 229
    "string"                          shift, and go to state 230
    "int"                             shift, and go to state 232
    "int2"                            shift, and go to state 233
    "int3"                            shift, and go to state 234
    "int4"                            shift, and go to state 235
    "uint"                            shift, and go to state 236
    "bitfield"                        shift, and go to state 432
    "uint2"                           shift, and go to state 238
    "uint3"                           shift, and go to state 239
    "uint4"                           shift, and go to state 240
    "float"                           shift, and go to state 241
    "float2"                          shift, and go to state 242
    "float3"                          shift, and go to state 243
    "float4"                          shift, and go to state 244
    "range"                           shift, and go to state 245
    "urange"                          shift, and go to state 246
    "range64"                         shift, and go to state 247
    "urange64"                        shift, and go to state 248
    "int64"                           shift, and go to state 250
    "uint64"                          shift, and go to state 251
    "double"                          shift, and go to state 252
    "int8"                            shift, and go to state 255
    "uint8"                           shift, and go to state 256
    "int16"                           shift, and go to state 257
    "uint16"                          shift, and go to state 258
    "tuple"                           shift, and go to state 433
    "variant"                         shift, and go to state 434
    "generator"                       shift, and go to state 435
    "++"                              shift, and go to state 436
    "--"                              shift, and go to state 437
    "::"                              shift, and go to state 55
    "$$"                              shift, and go to state 438
    "$i"                              shift, and go to state 439
    "$v"                              shift, and go to state 440
    "$b"                              shift, and go to state 441
    "$a"                              shift, and go to state 442
    "$c"                              shift, and go to state 443
    "..."                             shift, and go to state 444
    "integer constant"                shift, and go to state 445
    "long integer constant"           shift, and go to state 446
    "unsigned integer constant"       shift, and go to state 447
    "unsigned long integer constant"  shift, and go to state 448
    "unsigned int8 constant"          shift, and go to state 449
    "floating point constant"         shift, and go to state 450
    "double constant"                 shift, and go to state 451
    "name"                            shift, and go to state 56
    "start of the string"             shift, and go to state 452
    '-'                               shift, and go to state 453
    '+'                               shift, and go to state 454
    '*'                               shift, and go to state 455
    '%'                               shift, and go to state 13
    '~'                               shift, and go to state 456
    '!'                               shift, and go to state 457
    '['                               shift, and go to state 458
    '('                               shift, and go to state 459
    '$'                               shift, and go to state 460
    '@'                               shift, and go to state 461
    '{'                               shift, and go to state 462

    string_builder          go to state 463
    expr_reader             go to state 464
    expr_call_pipe          go to state 465
    name_in_namespace       go to state 466
    expr_new                go to state 467
    expr_cast               go to state 468
    expr_type_decl          go to state 469
    expr_type_info          go to state 470
    block_or_lambda         go to state 471
    expr_full_block         go to state 472
    expr_numeric_const      go to state 473
    expr_named_call         go to state 474
    expr_method_call        go to state 475
    func_addr_expr          go to state 476
    expr_field              go to state 477
    expr_call               go to state 478
    expr                    go to state 582
    expr_generator          go to state 480
    expr_mtag               go to state 481
    basic_type_declaration  go to state 482
    make_decl               go to state 483
    make_struct_decl        go to state 484
    make_tuple_call         go to state 485
    make_dim_decl           go to state 486
    make_table_decl         go to state 487
    array_comprehension     go to state 488


State 454

  395 expr: '+' . expr

    "struct"                          shift, and go to state 414
    "class"                           shift, and go to state 415
    "true"                            shift, and go to state 416
    "false"                           shift, and go to state 417
    "new"                             shift, and go to state 418
    "typeinfo"                        shift, and go to state 419
    "type"                            shift, and go to state 420
    "array"                           shift, and go to state 421
    "null"                            shift, and go to state 422
    "table"                           shift, and go to state 423
    "deref"                           shift, and go to state 424
    "cast"                            shift, and go to state 425
    "upcast"                          shift, and go to state 426
    "addr"                            shift, and go to state 427
    "reinterpret"                     shift, and go to state 428
    "unsafe"                          shift, and go to state 429
    "fixed_array"                     shift, and go to state 430
    "default"                         shift, and go to state 431
    "bool"                            shift, and go to state 228
    "void"                            shift, and go to state 229
    "string"                          shift, and go to state 230
    "int"                             shift, and go to state 232
    "int2"                            shift, and go to state 233
    "int3"                            shift, and go to state 234
    "int4"                            shift, and go to state 235
    "uint"                            shift, and go to state 236
    "bitfield"                        shift, and go to state 432
    "uint2"                           shift, and go to state 238
    "uint3"                           shift, and go to state 239
    "uint4"                           shift, and go to state 240
    "float"                           shift, and go to state 241
    "float2"                          shift, and go to state 242
    "float3"                          shift, and go to state 243
    "float4"                          shift, and go to state 244
    "range"                           shift, and go to state 245
    "urange"                          shift, and go to state 246
    "range64"                         shift, and go to state 247
    "urange64"                        shift, and go to state 248
    "int64"                           shift, and go to state 250
    "uint64"                          shift, and go to state 251
    "double"                          shift, and go to state 252
    "int8"                            shift, and go to state 255
    "uint8"                           shift, and go to state 256
    "int16"                           shift, and go to state 257
    "uint16"                          shift, and go to state 258
    "tuple"                           shift, and go to state 433
    "variant"                         shift, and go to state 434
    "generator"                       shift, and go to state 435
    "++"                              shift, and go to state 436
    "--"                              shift, and go to state 437
    "::"                              shift, and go to state 55
    "$$"                              shift, and go to state 438
    "$i"                              shift, and go to state 439
    "$v"                              shift, and go to state 440
    "$b"                              shift, and go to state 441
    "$a"                              shift, and go to state 442
    "$c"                              shift, and go to state 443
    "..."                             shift, and go to state 444
    "integer constant"                shift, and go to state 445
    "long integer constant"           shift, and go to state 446
    "unsigned integer constant"       shift, and go to state 447
    "unsigned long integer constant"  shift, and go to state 448
    "unsigned int8 constant"          shift, and go to state 449
    "floating point constant"         shift, and go to state 450
    "double constant"                 shift, and go to state 451
    "name"                            shift, and go to state 56
    "start of the string"             shift, and go to state 452
    '-'                               shift, and go to state 453
    '+'                               shift, and go to state 454
    '*'                               shift, and go to state 455
    '%'                               shift, and go to state 13
    '~'                               shift, and go to state 456
    '!'                               shift, and go to state 457
    '['                               shift, and go to state 458
    '('                               shift, and go to state 459
    '$'                               shift, and go to state 460
    '@'                               shift, and go to state 461
    '{'                               shift, and go to state 462

    string_builder          go to state 463
    expr_reader             go to state 464
    expr_call_pipe          go to state 465
    name_in_namespace       go to state 466
    expr_new                go to state 467
    expr_cast               go to state 468
    expr_type_decl          go to state 469
    expr_type_info          go to state 470
    block_or_lambda         go to state 471
    expr_full_block         go to state 472
    expr_numeric_const      go to state 473
    expr_named_call         go to state 474
    expr_method_call        go to state 475
    func_addr_expr          go to state 476
    expr_field              go to state 477
    expr_call               go to state 478
    expr                    go to state 583
    expr_generator          go to state 480
    expr_mtag               go to state 481
    basic_type_declaration  go to state 482
    make_decl               go to state 483
    make_struct_decl        go to state 484
    make_tuple_call         go to state 485
    make_dim_decl           go to state 486
    make_table_decl         go to state 487
    array_comprehension     go to state 488


State 455

  432 expr: '*' . expr

    "struct"                          shift, and go to state 414
    "class"                           shift, and go to state 415
    "true"                            shift, and go to state 416
    "false"                           shift, and go to state 417
    "new"                             shift, and go to state 418
    "typeinfo"                        shift, and go to state 419
    "type"                            shift, and go to state 420
    "array"                           shift, and go to state 421
    "null"                            shift, and go to state 422
    "table"                           shift, and go to state 423
    "deref"                           shift, and go to state 424
    "cast"                            shift, and go to state 425
    "upcast"                          shift, and go to state 426
    "addr"                            shift, and go to state 427
    "reinterpret"                     shift, and go to state 428
    "unsafe"                          shift, and go to state 429
    "fixed_array"                     shift, and go to state 430
    "default"                         shift, and go to state 431
    "bool"                            shift, and go to state 228
    "void"                            shift, and go to state 229
    "string"                          shift, and go to state 230
    "int"                             shift, and go to state 232
    "int2"                            shift, and go to state 233
    "int3"                            shift, and go to state 234
    "int4"                            shift, and go to state 235
    "uint"                            shift, and go to state 236
    "bitfield"                        shift, and go to state 432
    "uint2"                           shift, and go to state 238
    "uint3"                           shift, and go to state 239
    "uint4"                           shift, and go to state 240
    "float"                           shift, and go to state 241
    "float2"                          shift, and go to state 242
    "float3"                          shift, and go to state 243
    "float4"                          shift, and go to state 244
    "range"                           shift, and go to state 245
    "urange"                          shift, and go to state 246
    "range64"                         shift, and go to state 247
    "urange64"                        shift, and go to state 248
    "int64"                           shift, and go to state 250
    "uint64"                          shift, and go to state 251
    "double"                          shift, and go to state 252
    "int8"                            shift, and go to state 255
    "uint8"                           shift, and go to state 256
    "int16"                           shift, and go to state 257
    "uint16"                          shift, and go to state 258
    "tuple"                           shift, and go to state 433
    "variant"                         shift, and go to state 434
    "generator"                       shift, and go to state 435
    "++"                              shift, and go to state 436
    "--"                              shift, and go to state 437
    "::"                              shift, and go to state 55
    "$$"                              shift, and go to state 438
    "$i"                              shift, and go to state 439
    "$v"                              shift, and go to state 440
    "$b"                              shift, and go to state 441
    "$a"                              shift, and go to state 442
    "$c"                              shift, and go to state 443
    "..."                             shift, and go to state 444
    "integer constant"                shift, and go to state 445
    "long integer constant"           shift, and go to state 446
    "unsigned integer constant"       shift, and go to state 447
    "unsigned long integer constant"  shift, and go to state 448
    "unsigned int8 constant"          shift, and go to state 449
    "floating point constant"         shift, and go to state 450
    "double constant"                 shift, and go to state 451
    "name"                            shift, and go to state 56
    "start of the string"             shift, and go to state 452
    '-'                               shift, and go to state 453
    '+'                               shift, and go to state 454
    '*'                               shift, and go to state 455
    '%'                               shift, and go to state 13
    '~'                               shift, and go to state 456
    '!'                               shift, and go to state 457
    '['                               shift, and go to state 458
    '('                               shift, and go to state 459
    '$'                               shift, and go to state 460
    '@'                               shift, and go to state 461
    '{'                               shift, and go to state 462

    string_builder          go to state 463
    expr_reader             go to state 464
    expr_call_pipe          go to state 465
    name_in_namespace       go to state 466
    expr_new                go to state 467
    expr_cast               go to state 468
    expr_type_decl          go to state 469
    expr_type_info          go to state 470
    block_or_lambda         go to state 471
    expr_full_block         go to state 472
    expr_numeric_const      go to state 473
    expr_named_call         go to state 474
    expr_method_call        go to state 475
    func_addr_expr          go to state 476
    expr_field              go to state 477
    expr_call               go to state 478
    expr                    go to state 584
    expr_generator          go to state 480
    expr_mtag               go to state 481
    basic_type_declaration  go to state 482
    make_decl               go to state 483
    make_struct_decl        go to state 484
    make_tuple_call         go to state 485
    make_dim_decl           go to state 486
    make_table_decl         go to state 487
    array_comprehension     go to state 488


State 456

  394 expr: '~' . expr

    "struct"                          shift, and go to state 414
    "class"                           shift, and go to state 415
    "true"                            shift, and go to state 416
    "false"                           shift, and go to state 417
    "new"                             shift, and go to state 418
    "typeinfo"                        shift, and go to state 419
    "type"                            shift, and go to state 420
    "array"                           shift, and go to state 421
    "null"                            shift, and go to state 422
    "table"                           shift, and go to state 423
    "deref"                           shift, and go to state 424
    "cast"                            shift, and go to state 425
    "upcast"                          shift, and go to state 426
    "addr"                            shift, and go to state 427
    "reinterpret"                     shift, and go to state 428
    "unsafe"                          shift, and go to state 429
    "fixed_array"                     shift, and go to state 430
    "default"                         shift, and go to state 431
    "bool"                            shift, and go to state 228
    "void"                            shift, and go to state 229
    "string"                          shift, and go to state 230
    "int"                             shift, and go to state 232
    "int2"                            shift, and go to state 233
    "int3"                            shift, and go to state 234
    "int4"                            shift, and go to state 235
    "uint"                            shift, and go to state 236
    "bitfield"                        shift, and go to state 432
    "uint2"                           shift, and go to state 238
    "uint3"                           shift, and go to state 239
    "uint4"                           shift, and go to state 240
    "float"                           shift, and go to state 241
    "float2"                          shift, and go to state 242
    "float3"                          shift, and go to state 243
    "float4"                          shift, and go to state 244
    "range"                           shift, and go to state 245
    "urange"                          shift, and go to state 246
    "range64"                         shift, and go to state 247
    "urange64"                        shift, and go to state 248
    "int64"                           shift, and go to state 250
    "uint64"                          shift, and go to state 251
    "double"                          shift, and go to state 252
    "int8"                            shift, and go to state 255
    "uint8"                           shift, and go to state 256
    "int16"                           shift, and go to state 257
    "uint16"                          shift, and go to state 258
    "tuple"                           shift, and go to state 433
    "variant"                         shift, and go to state 434
    "generator"                       shift, and go to state 435
    "++"                              shift, and go to state 436
    "--"                              shift, and go to state 437
    "::"                              shift, and go to state 55
    "$$"                              shift, and go to state 438
    "$i"                              shift, and go to state 439
    "$v"                              shift, and go to state 440
    "$b"                              shift, and go to state 441
    "$a"                              shift, and go to state 442
    "$c"                              shift, and go to state 443
    "..."                             shift, and go to state 444
    "integer constant"                shift, and go to state 445
    "long integer constant"           shift, and go to state 446
    "unsigned integer constant"       shift, and go to state 447
    "unsigned long integer constant"  shift, and go to state 448
    "unsigned int8 constant"          shift, and go to state 449
    "floating point constant"         shift, and go to state 450
    "double constant"                 shift, and go to state 451
    "name"                            shift, and go to state 56
    "start of the string"             shift, and go to state 452
    '-'                               shift, and go to state 453
    '+'                               shift, and go to state 454
    '*'                               shift, and go to state 455
    '%'                               shift, and go to state 13
    '~'                               shift, and go to state 456
    '!'                               shift, and go to state 457
    '['                               shift, and go to state 458
    '('                               shift, and go to state 459
    '$'                               shift, and go to state 460
    '@'                               shift, and go to state 461
    '{'                               shift, and go to state 462

    string_builder          go to state 463
    expr_reader             go to state 464
    expr_call_pipe          go to state 465
    name_in_namespace       go to state 466
    expr_new                go to state 467
    expr_cast               go to state 468
    expr_type_decl          go to state 469
    expr_type_info          go to state 470
    block_or_lambda         go to state 471
    expr_full_block         go to state 472
    expr_numeric_const      go to state 473
    expr_named_call         go to state 474
    expr_method_call        go to state 475
    func_addr_expr          go to state 476
    expr_field              go to state 477
    expr_call               go to state 478
    expr                    go to state 585
    expr_generator          go to state 480
    expr_mtag               go to state 481
    basic_type_declaration  go to state 482
    make_decl               go to state 483
    make_struct_decl        go to state 484
    make_tuple_call         go to state 485
    make_dim_decl           go to state 486
    make_table_decl         go to state 487
    array_comprehension     go to state 488


State 457

  393 expr: '!' . expr

    "struct"                          shift, and go to state 414
    "class"                           shift, and go to state 415
    "true"                            shift, and go to state 416
    "false"                           shift, and go to state 417
    "new"                             shift, and go to state 418
    "typeinfo"                        shift, and go to state 419
    "type"                            shift, and go to state 420
    "array"                           shift, and go to state 421
    "null"                            shift, and go to state 422
    "table"                           shift, and go to state 423
    "deref"                           shift, and go to state 424
    "cast"                            shift, and go to state 425
    "upcast"                          shift, and go to state 426
    "addr"                            shift, and go to state 427
    "reinterpret"                     shift, and go to state 428
    "unsafe"                          shift, and go to state 429
    "fixed_array"                     shift, and go to state 430
    "default"                         shift, and go to state 431
    "bool"                            shift, and go to state 228
    "void"                            shift, and go to state 229
    "string"                          shift, and go to state 230
    "int"                             shift, and go to state 232
    "int2"                            shift, and go to state 233
    "int3"                            shift, and go to state 234
    "int4"                            shift, and go to state 235
    "uint"                            shift, and go to state 236
    "bitfield"                        shift, and go to state 432
    "uint2"                           shift, and go to state 238
    "uint3"                           shift, and go to state 239
    "uint4"                           shift, and go to state 240
    "float"                           shift, and go to state 241
    "float2"                          shift, and go to state 242
    "float3"                          shift, and go to state 243
    "float4"                          shift, and go to state 244
    "range"                           shift, and go to state 245
    "urange"                          shift, and go to state 246
    "range64"                         shift, and go to state 247
    "urange64"                        shift, and go to state 248
    "int64"                           shift, and go to state 250
    "uint64"                          shift, and go to state 251
    "double"                          shift, and go to state 252
    "int8"                            shift, and go to state 255
    "uint8"                           shift, and go to state 256
    "int16"                           shift, and go to state 257
    "uint16"                          shift, and go to state 258
    "tuple"                           shift, and go to state 433
    "variant"                         shift, and go to state 434
    "generator"                       shift, and go to state 435
    "++"                              shift, and go to state 436
    "--"                              shift, and go to state 437
    "::"                              shift, and go to state 55
    "$$"                              shift, and go to state 438
    "$i"                              shift, and go to state 439
    "$v"                              shift, and go to state 440
    "$b"                              shift, and go to state 441
    "$a"                              shift, and go to state 442
    "$c"                              shift, and go to state 443
    "..."                             shift, and go to state 444
    "integer constant"                shift, and go to state 445
    "long integer constant"           shift, and go to state 446
    "unsigned integer constant"       shift, and go to state 447
    "unsigned long integer constant"  shift, and go to state 448
    "unsigned int8 constant"          shift, and go to state 449
    "floating point constant"         shift, and go to state 450
    "double constant"                 shift, and go to state 451
    "name"                            shift, and go to state 56
    "start of the string"             shift, and go to state 452
    '-'                               shift, and go to state 453
    '+'                               shift, and go to state 454
    '*'                               shift, and go to state 455
    '%'                               shift, and go to state 13
    '~'                               shift, and go to state 456
    '!'                               shift, and go to state 457
    '['                               shift, and go to state 458
    '('                               shift, and go to state 459
    '$'                               shift, and go to state 460
    '@'                               shift, and go to state 461
    '{'                               shift, and go to state 462

    string_builder          go to state 463
    expr_reader             go to state 464
    expr_call_pipe          go to state 465
    name_in_namespace       go to state 466
    expr_new                go to state 467
    expr_cast               go to state 468
    expr_type_decl          go to state 469
    expr_type_info          go to state 470
    block_or_lambda         go to state 471
    expr_full_block         go to state 472
    expr_numeric_const      go to state 473
    expr_named_call         go to state 474
    expr_method_call        go to state 475
    func_addr_expr          go to state 476
    expr_field              go to state 477
    expr_call               go to state 478
    expr                    go to state 586
    expr_generator          go to state 480
    expr_mtag               go to state 481
    basic_type_declaration  go to state 482
    make_decl               go to state 483
    make_struct_decl        go to state 484
    make_tuple_call         go to state 485
    make_dim_decl           go to state 486
    make_table_decl         go to state 487
    array_comprehension     go to state 488


State 458

  785 make_dim_decl: '[' . expr_list optional_comma ']'
  813 array_comprehension: '[' . "for" '(' variable_name_with_pos_list "in" expr_list ')' ';' expr array_comprehension_where ']'
  814                    | '[' . "iterator" "for" '(' variable_name_with_pos_list "in" expr_list ')' ';' expr array_comprehension_where ']'

    "struct"                          shift, and go to state 414
    "class"                           shift, and go to state 415
    "for"                             shift, and go to state 587
    "true"                            shift, and go to state 416
    "false"                           shift, and go to state 417
    "new"                             shift, and go to state 418
    "typeinfo"                        shift, and go to state 419
    "type"                            shift, and go to state 420
    "array"                           shift, and go to state 421
    "null"                            shift, and go to state 422
    "table"                           shift, and go to state 423
    "deref"                           shift, and go to state 424
    "cast"                            shift, and go to state 425
    "upcast"                          shift, and go to state 426
    "iterator"                        shift, and go to state 588
    "addr"                            shift, and go to state 427
    "reinterpret"                     shift, and go to state 428
    "unsafe"                          shift, and go to state 429
    "fixed_array"                     shift, and go to state 430
    "default"                         shift, and go to state 431
    "bool"                            shift, and go to state 228
    "void"                            shift, and go to state 229
    "string"                          shift, and go to state 230
    "int"                             shift, and go to state 232
    "int2"                            shift, and go to state 233
    "int3"                            shift, and go to state 234
    "int4"                            shift, and go to state 235
    "uint"                            shift, and go to state 236
    "bitfield"                        shift, and go to state 432
    "uint2"                           shift, and go to state 238
    "uint3"                           shift, and go to state 239
    "uint4"                           shift, and go to state 240
    "float"                           shift, and go to state 241
    "float2"                          shift, and go to state 242
    "float3"                          shift, and go to state 243
    "float4"                          shift, and go to state 244
    "range"                           shift, and go to state 245
    "urange"                          shift, and go to state 246
    "range64"                         shift, and go to state 247
    "urange64"                        shift, and go to state 248
    "int64"                           shift, and go to state 250
    "uint64"                          shift, and go to state 251
    "double"                          shift, and go to state 252
    "int8"                            shift, and go to state 255
    "uint8"                           shift, and go to state 256
    "int16"                           shift, and go to state 257
    "uint16"                          shift, and go to state 258
    "tuple"                           shift, and go to state 433
    "variant"                         shift, and go to state 434
    "generator"                       shift, and go to state 435
    "++"                              shift, and go to state 436
    "--"                              shift, and go to state 437
    "::"                              shift, and go to state 55
    "$$"                              shift, and go to state 438
    "$i"                              shift, and go to state 439
    "$v"                              shift, and go to state 440
    "$b"                              shift, and go to state 441
    "$a"                              shift, and go to state 442
    "$c"                              shift, and go to state 443
    "..."                             shift, and go to state 444
    "integer constant"                shift, and go to state 445
    "long integer constant"           shift, and go to state 446
    "unsigned integer constant"       shift, and go to state 447
    "unsigned long integer constant"  shift, and go to state 448
    "unsigned int8 constant"          shift, and go to state 449
    "floating point constant"         shift, and go to state 450
    "double constant"                 shift, and go to state 451
    "name"                            shift, and go to state 56
    "start of the string"             shift, and go to state 452
    '-'                               shift, and go to state 453
    '+'                               shift, and go to state 454
    '*'                               shift, and go to state 455
    '%'                               shift, and go to state 13
    '~'                               shift, and go to state 456
    '!'                               shift, and go to state 457
    '['                               shift, and go to state 458
    '('                               shift, and go to state 459
    '$'                               shift, and go to state 460
    '@'                               shift, and go to state 461
    '{'                               shift, and go to state 462

    string_builder          go to state 463
    expr_reader             go to state 464
    expr_call_pipe          go to state 465
    name_in_namespace       go to state 466
    expr_new                go to state 467
    expr_cast               go to state 468
    expr_type_decl          go to state 469
    expr_type_info          go to state 470
    expr_list               go to state 589
    block_or_lambda         go to state 471
    expr_full_block         go to state 472
    expr_numeric_const      go to state 473
    expr_named_call         go to state 474
    expr_method_call        go to state 475
    func_addr_expr          go to state 476
    expr_field              go to state 477
    expr_call               go to state 478
    expr                    go to state 590
    expr_generator          go to state 480
    expr_mtag               go to state 481
    basic_type_declaration  go to state 482
    make_decl               go to state 483
    make_struct_decl        go to state 484
    make_tuple_call         go to state 485
    make_dim_decl           go to state 486
    make_table_decl         go to state 487
    array_comprehension     go to state 488


State 459

  423 expr: '(' . expr_list optional_comma ')'

    "struct"                          shift, and go to state 414
    "class"                           shift, and go to state 415
    "true"                            shift, and go to state 416
    "false"                           shift, and go to state 417
    "new"                             shift, and go to state 418
    "typeinfo"                        shift, and go to state 419
    "type"                            shift, and go to state 420
    "array"                           shift, and go to state 421
    "null"                            shift, and go to state 422
    "table"                           shift, and go to state 423
    "deref"                           shift, and go to state 424
    "cast"                            shift, and go to state 425
    "upcast"                          shift, and go to state 426
    "addr"                            shift, and go to state 427
    "reinterpret"                     shift, and go to state 428
    "unsafe"                          shift, and go to state 429
    "fixed_array"                     shift, and go to state 430
    "default"                         shift, and go to state 431
    "bool"                            shift, and go to state 228
    "void"                            shift, and go to state 229
    "string"                          shift, and go to state 230
    "int"                             shift, and go to state 232
    "int2"                            shift, and go to state 233
    "int3"                            shift, and go to state 234
    "int4"                            shift, and go to state 235
    "uint"                            shift, and go to state 236
    "bitfield"                        shift, and go to state 432
    "uint2"                           shift, and go to state 238
    "uint3"                           shift, and go to state 239
    "uint4"                           shift, and go to state 240
    "float"                           shift, and go to state 241
    "float2"                          shift, and go to state 242
    "float3"                          shift, and go to state 243
    "float4"                          shift, and go to state 244
    "range"                           shift, and go to state 245
    "urange"                          shift, and go to state 246
    "range64"                         shift, and go to state 247
    "urange64"                        shift, and go to state 248
    "int64"                           shift, and go to state 250
    "uint64"                          shift, and go to state 251
    "double"                          shift, and go to state 252
    "int8"                            shift, and go to state 255
    "uint8"                           shift, and go to state 256
    "int16"                           shift, and go to state 257
    "uint16"                          shift, and go to state 258
    "tuple"                           shift, and go to state 433
    "variant"                         shift, and go to state 434
    "generator"                       shift, and go to state 435
    "++"                              shift, and go to state 436
    "--"                              shift, and go to state 437
    "::"                              shift, and go to state 55
    "$$"                              shift, and go to state 438
    "$i"                              shift, and go to state 439
    "$v"                              shift, and go to state 440
    "$b"                              shift, and go to state 441
    "$a"                              shift, and go to state 442
    "$c"                              shift, and go to state 443
    "..."                             shift, and go to state 444
    "integer constant"                shift, and go to state 445
    "long integer constant"           shift, and go to state 446
    "unsigned integer constant"       shift, and go to state 447
    "unsigned long integer constant"  shift, and go to state 448
    "unsigned int8 constant"          shift, and go to state 449
    "floating point constant"         shift, and go to state 450
    "double constant"                 shift, and go to state 451
    "name"                            shift, and go to state 56
    "start of the string"             shift, and go to state 452
    '-'                               shift, and go to state 453
    '+'                               shift, and go to state 454
    '*'                               shift, and go to state 455
    '%'                               shift, and go to state 13
    '~'                               shift, and go to state 456
    '!'                               shift, and go to state 457
    '['                               shift, and go to state 458
    '('                               shift, and go to state 459
    '$'                               shift, and go to state 460
    '@'                               shift, and go to state 461
    '{'                               shift, and go to state 462

    string_builder          go to state 463
    expr_reader             go to state 464
    expr_call_pipe          go to state 465
    name_in_namespace       go to state 466
    expr_new                go to state 467
    expr_cast               go to state 468
    expr_type_decl          go to state 469
    expr_type_info          go to state 470
    expr_list               go to state 591
    block_or_lambda         go to state 471
    expr_full_block         go to state 472
    expr_numeric_const      go to state 473
    expr_named_call         go to state 474
    expr_method_call        go to state 475
    func_addr_expr          go to state 476
    expr_field              go to state 477
    expr_call               go to state 478
    expr                    go to state 590
    expr_generator          go to state 480
    expr_mtag               go to state 481
    basic_type_declaration  go to state 482
    make_decl               go to state 483
    make_struct_decl        go to state 484
    make_tuple_call         go to state 485
    make_dim_decl           go to state 486
    make_table_decl         go to state 487
    array_comprehension     go to state 488


State 460

  313 block_or_lambda: '$' .

    $default  reduce using rule 313 (block_or_lambda)


State 461

  314 block_or_lambda: '@' .
  315                | '@' . '@'
  360 func_addr_expr: '@' . '@' func_addr_name
  363               | '@' . '@' '<' $@21 type_declaration_no_options '>' $@22 func_addr_name
  366               | '@' . '@' '<' $@23 optional_function_argument_list optional_function_type '>' $@24 func_addr_name
  483 expr_mtag: '@' . '@' "$c" '(' expr ')'

    '@'  shift, and go to state 592

    $default  reduce using rule 314 (block_or_lambda)


State 462

  805 make_table_decl: '{' . expr_map_tuple_list optional_comma '}'
  815 array_comprehension: '{' . "for" '(' variable_name_with_pos_list "in" expr_list ')' ';' make_map_tuple array_comprehension_where '}'

    "struct"                          shift, and go to state 414
    "class"                           shift, and go to state 415
    "for"                             shift, and go to state 593
    "true"                            shift, and go to state 416
    "false"                           shift, and go to state 417
    "new"                             shift, and go to state 418
    "typeinfo"                        shift, and go to state 419
    "type"                            shift, and go to state 420
    "array"                           shift, and go to state 421
    "null"                            shift, and go to state 422
    "table"                           shift, and go to state 423
    "deref"                           shift, and go to state 424
    "cast"                            shift, and go to state 425
    "upcast"                          shift, and go to state 426
    "addr"                            shift, and go to state 427
    "reinterpret"                     shift, and go to state 428
    "unsafe"                          shift, and go to state 429
    "fixed_array"                     shift, and go to state 430
    "default"                         shift, and go to state 431
    "bool"                            shift, and go to state 228
    "void"                            shift, and go to state 229
    "string"                          shift, and go to state 230
    "int"                             shift, and go to state 232
    "int2"                            shift, and go to state 233
    "int3"                            shift, and go to state 234
    "int4"                            shift, and go to state 235
    "uint"                            shift, and go to state 236
    "bitfield"                        shift, and go to state 432
    "uint2"                           shift, and go to state 238
    "uint3"                           shift, and go to state 239
    "uint4"                           shift, and go to state 240
    "float"                           shift, and go to state 241
    "float2"                          shift, and go to state 242
    "float3"                          shift, and go to state 243
    "float4"                          shift, and go to state 244
    "range"                           shift, and go to state 245
    "urange"                          shift, and go to state 246
    "range64"                         shift, and go to state 247
    "urange64"                        shift, and go to state 248
    "int64"                           shift, and go to state 250
    "uint64"                          shift, and go to state 251
    "double"                          shift, and go to state 252
    "int8"                            shift, and go to state 255
    "uint8"                           shift, and go to state 256
    "int16"                           shift, and go to state 257
    "uint16"                          shift, and go to state 258
    "tuple"                           shift, and go to state 433
    "variant"                         shift, and go to state 434
    "generator"                       shift, and go to state 435
    "++"                              shift, and go to state 436
    "--"                              shift, and go to state 437
    "::"                              shift, and go to state 55
    "$$"                              shift, and go to state 438
    "$i"                              shift, and go to state 439
    "$v"                              shift, and go to state 440
    "$b"                              shift, and go to state 441
    "$a"                              shift, and go to state 442
    "$c"                              shift, and go to state 443
    "..."                             shift, and go to state 444
    "integer constant"                shift, and go to state 445
    "long integer constant"           shift, and go to state 446
    "unsigned integer constant"       shift, and go to state 447
    "unsigned long integer constant"  shift, and go to state 448
    "unsigned int8 constant"          shift, and go to state 449
    "floating point constant"         shift, and go to state 450
    "double constant"                 shift, and go to state 451
    "name"                            shift, and go to state 56
    "start of the string"             shift, and go to state 452
    '-'                               shift, and go to state 453
    '+'                               shift, and go to state 454
    '*'                               shift, and go to state 455
    '%'                               shift, and go to state 13
    '~'                               shift, and go to state 456
    '!'                               shift, and go to state 457
    '['                               shift, and go to state 458
    '('                               shift, and go to state 459
    '$'                               shift, and go to state 460
    '@'                               shift, and go to state 461
    '{'                               shift, and go to state 462

    string_builder          go to state 463
    expr_reader             go to state 464
    expr_call_pipe          go to state 465
    name_in_namespace       go to state 466
    expr_new                go to state 467
    expr_cast               go to state 468
    expr_type_decl          go to state 469
    expr_type_info          go to state 470
    block_or_lambda         go to state 471
    expr_full_block         go to state 472
    expr_numeric_const      go to state 473
    expr_named_call         go to state 474
    expr_method_call        go to state 475
    func_addr_expr          go to state 476
    expr_field              go to state 477
    expr_call               go to state 478
    expr                    go to state 594
    expr_generator          go to state 480
    expr_mtag               go to state 481
    basic_type_declaration  go to state 482
    make_decl               go to state 483
    make_struct_decl        go to state 484
    make_map_tuple          go to state 595
    make_tuple_call         go to state 485
    make_dim_decl           go to state 486
    expr_map_tuple_list     go to state 596
    make_table_decl         go to state 487
    array_comprehension     go to state 488


State 463

  387 expr: string_builder .

    $default  reduce using rule 387 (expr)


State 464

  386 expr: expr_reader .

    $default  reduce using rule 386 (expr)


State 465

  463 expr: expr_call_pipe .

    $default  reduce using rule 463 (expr)


State 466

  354 expr_named_call: name_in_namespace . '(' '[' make_struct_fields ']' ')'
  355                | name_in_namespace . '(' expr_list ',' '[' make_struct_fields ']' ')'
  376 expr_call: name_in_namespace . '(' ')'
  377          | name_in_namespace . '(' "uninitialized" ')'
  378          | name_in_namespace . '(' make_struct_single ')'
  379          | name_in_namespace . '(' "uninitialized" make_struct_single ')'
  380          | name_in_namespace . '(' expr_list ')'
  384 expr: name_in_namespace .

    '('  shift, and go to state 597

    $default  reduce using rule 384 (expr)


State 467

  456 expr: expr_new .

    $default  reduce using rule 456 (expr)


State 468

  455 expr: expr_cast .

    $default  reduce using rule 455 (expr)


State 469

  454 expr: expr_type_decl .

    $default  reduce using rule 454 (expr)


State 470

  453 expr: expr_type_info .

    $default  reduce using rule 453 (expr)


State 471

  325 expr_full_block: block_or_lambda . optional_annotation_list optional_capture_list optional_function_argument_list optional_function_type optional_semis block_or_simple_block

    '['  shift, and go to state 14

    $default  reduce using rule 121 (optional_annotation_list)

    optional_annotation_list  go to state 598


State 472

  459 expr: expr_full_block .

    $default  reduce using rule 459 (expr)


State 473

  385 expr: expr_numeric_const .

    $default  reduce using rule 385 (expr)


State 474

  458 expr: expr_named_call .

    $default  reduce using rule 458 (expr)


State 475

  457 expr: expr_method_call .

    $default  reduce using rule 457 (expr)


State 476

  430 expr: func_addr_expr .

    $default  reduce using rule 430 (expr)


State 477

  391 expr: expr_field .

    $default  reduce using rule 391 (expr)


State 478

  227 expr_call_pipe: expr_call . expr_full_block_assumed_piped
  431 expr: expr_call .

    '$'  shift, and go to state 460
    '@'  shift, and go to state 599
    '{'  shift, and go to state 600

    $default  reduce using rule 431 (expr)

    block_or_lambda                go to state 601
    expr_full_block_assumed_piped  go to state 602


State 479

  356 expr_method_call: expr . "->" "name" '(' ')'
  357                 | expr . "->" "name" '(' expr_list ')'
  367 expr_field: expr . '.' "name"
  368           | expr . '.' '.' "name"
  369           | expr . '.' "name" '(' ')'
  370           | expr . '.' "name" '(' expr_list ')'
  371           | expr . '.' basic_type_declaration '(' ')'
  372           | expr . '.' basic_type_declaration '(' expr_list ')'
  375           | expr . '.' $@25 error $@26
  397 expr: expr . "<<" expr
  398     | expr . ">>" expr
  399     | expr . "<<<" expr
  400     | expr . ">>>" expr
  401     | expr . '+' expr
  402     | expr . '-' expr
  403     | expr . '*' expr
  404     | expr . '/' expr
  405     | expr . '%' expr
  406     | expr . '<' expr
  407     | expr . '>' expr
  408     | expr . "==" expr
  409     | expr . "!=" expr
  410     | expr . "<=" expr
  411     | expr . ">=" expr
  412     | expr . '&' expr
  413     | expr . '|' expr
  414     | expr . '^' expr
  415     | expr . "&&" expr
  416     | expr . "||" expr
  417     | expr . "^^" expr
  418     | expr . ".." expr
  421     | expr . "++"
  422     | expr . "--"
  424     | expr . '[' expr ']'
  425     | expr . '.' '[' expr ']'
  426     | expr . "?[" expr ']'
  427     | expr . '.' "?[" expr ']'
  428     | expr . "?." "name"
  429     | expr . '.' "?." "name"
  436     | expr . "??" expr
  437     | expr . '?' expr ':' expr
  440     | expr . "is" "type" '<' $@27 type_declaration_no_options '>' $@28
  441     | expr . "is" basic_type_declaration
  442     | expr . "is" "name"
  443     | expr . "as" "name"
  446     | expr . "as" "type" '<' $@29 type_declaration '>' $@30
  447     | expr . "as" basic_type_declaration
  448     | expr . '?' "as" "name"
  451     | expr . '?' "as" "type" '<' $@31 type_declaration '>' $@32
  452     | expr . '?' "as" basic_type_declaration
  460     | expr . "<|" expr
  461     | expr . "|>" expr
  462     | expr . "|>" basic_type_declaration
  476 expr_mtag: expr . '.' "$f" '(' expr ')'
  477          | expr . "?." "$f" '(' expr ')'
  478          | expr . '.' '.' "$f" '(' expr ')'
  479          | expr . '.' "?." "$f" '(' expr ')'
  480          | expr . "as" "$f" '(' expr ')'
  481          | expr . '?' "as" "$f" '(' expr ')'
  482          | expr . "is" "$f" '(' expr ')'
  670 type_declaration_no_options_no_dim: "typedecl" '(' expr . ')'

    "is"   shift, and go to state 603
    "as"   shift, and go to state 604
    "<<"   shift, and go to state 605
    ">>"   shift, and go to state 606
    "++"   shift, and go to state 607
    "--"   shift, and go to state 608
    "<="   shift, and go to state 609
    ">="   shift, and go to state 610
    "=="   shift, and go to state 611
    "!="   shift, and go to state 612
    "->"   shift, and go to state 613
    "??"   shift, and go to state 614
    "?."   shift, and go to state 615
    "?["   shift, and go to state 616
    "<|"   shift, and go to state 617
    "|>"   shift, and go to state 618
    "<<<"  shift, and go to state 619
    ">>>"  shift, and go to state 620
    "&&"   shift, and go to state 621
    "||"   shift, and go to state 622
    "^^"   shift, and go to state 623
    ".."   shift, and go to state 624
    '?'    shift, and go to state 625
    '|'    shift, and go to state 626
    '^'    shift, and go to state 627
    '&'    shift, and go to state 628
    '<'    shift, and go to state 629
    '>'    shift, and go to state 630
    '-'    shift, and go to state 631
    '+'    shift, and go to state 632
    '*'    shift, and go to state 633
    '/'    shift, and go to state 634
    '%'    shift, and go to state 635
    '.'    shift, and go to state 636
    '['    shift, and go to state 637
    ')'    shift, and go to state 638


State 480

  435 expr: expr_generator .

    $default  reduce using rule 435 (expr)


State 481

  392 expr: expr_mtag .

    $default  reduce using rule 392 (expr)


State 482

  381 expr_call: basic_type_declaration . '(' ')'
  382          | basic_type_declaration . '(' expr_list ')'

    '('  shift, and go to state 639


State 483

  388 expr: make_decl .

    $default  reduce using rule 388 (expr)


State 484

  744 make_decl: make_struct_decl .

    $default  reduce using rule 744 (make_decl)


State 485

  748 make_decl: make_tuple_call .

    $default  reduce using rule 748 (make_decl)


State 486

  745 make_decl: make_dim_decl .

    $default  reduce using rule 745 (make_decl)


State 487

  746 make_decl: make_table_decl .

    $default  reduce using rule 746 (make_decl)


State 488

  747 make_decl: array_comprehension .

    $default  reduce using rule 747 (make_decl)


State 489

  698 type_declaration_no_options_no_dim: "iterator" '<' $@55 . type_declaration '>' $@56

    "type"       shift, and go to state 222
    "array"      shift, and go to state 223
    "table"      shift, and go to state 224
    "typedecl"   shift, and go to state 225
    "iterator"   shift, and go to state 226
    "smart_ptr"  shift, and go to state 227
    "bool"       shift, and go to state 228
    "void"       shift, and go to state 229
    "string"     shift, and go to state 230
    "auto"       shift, and go to state 231
    "int"        shift, and go to state 232
    "int2"       shift, and go to state 233
    "int3"       shift, and go to state 234
    "int4"       shift, and go to state 235
    "uint"       shift, and go to state 236
    "bitfield"   shift, and go to state 237
    "uint2"      shift, and go to state 238
    "uint3"      shift, and go to state 239
    "uint4"      shift, and go to state 240
    "float"      shift, and go to state 241
    "float2"     shift, and go to state 242
    "float3"     shift, and go to state 243
    "float4"     shift, and go to state 244
    "range"      shift, and go to state 245
    "urange"     shift, and go to state 246
    "range64"    shift, and go to state 247
    "urange64"   shift, and go to state 248
    "block"      shift, and go to state 249
    "int64"      shift, and go to state 250
    "uint64"     shift, and go to state 251
    "double"     shift, and go to state 252
    "function"   shift, and go to state 253
    "lambda"     shift, and go to state 254
    "int8"       shift, and go to state 255
    "uint8"      shift, and go to state 256
    "int16"      shift, and go to state 257
    "uint16"     shift, and go to state 258
    "tuple"      shift, and go to state 259
    "variant"    shift, and go to state 260
    "::"         shift, and go to state 55
    "$t"         shift, and go to state 261
    "name"       shift, and go to state 56
    '$'          shift, and go to state 262

    name_in_namespace                   go to state 263
    basic_type_declaration              go to state 264
    structure_type_declaration          go to state 265
    auto_type_declaration               go to state 266
    bitfield_type_declaration           go to state 267
    type_declaration_no_options         go to state 268
    type_declaration_no_options_no_dim  go to state 269
    type_declaration                    go to state 640


State 490

  688 type_declaration_no_options_no_dim: "smart_ptr" '<' $@49 . type_declaration '>' $@50

    "type"       shift, and go to state 222
    "array"      shift, and go to state 223
    "table"      shift, and go to state 224
    "typedecl"   shift, and go to state 225
    "iterator"   shift, and go to state 226
    "smart_ptr"  shift, and go to state 227
    "bool"       shift, and go to state 228
    "void"       shift, and go to state 229
    "string"     shift, and go to state 230
    "auto"       shift, and go to state 231
    "int"        shift, and go to state 232
    "int2"       shift, and go to state 233
    "int3"       shift, and go to state 234
    "int4"       shift, and go to state 235
    "uint"       shift, and go to state 236
    "bitfield"   shift, and go to state 237
    "uint2"      shift, and go to state 238
    "uint3"      shift, and go to state 239
    "uint4"      shift, and go to state 240
    "float"      shift, and go to state 241
    "float2"     shift, and go to state 242
    "float3"     shift, and go to state 243
    "float4"     shift, and go to state 244
    "range"      shift, and go to state 245
    "urange"     shift, and go to state 246
    "range64"    shift, and go to state 247
    "urange64"   shift, and go to state 248
    "block"      shift, and go to state 249
    "int64"      shift, and go to state 250
    "uint64"     shift, and go to state 251
    "double"     shift, and go to state 252
    "function"   shift, and go to state 253
    "lambda"     shift, and go to state 254
    "int8"       shift, and go to state 255
    "uint8"      shift, and go to state 256
    "int16"      shift, and go to state 257
    "uint16"     shift, and go to state 258
    "tuple"      shift, and go to state 259
    "variant"    shift, and go to state 260
    "::"         shift, and go to state 55
    "$t"         shift, and go to state 261
    "name"       shift, and go to state 56
    '$'          shift, and go to state 262

    name_in_namespace                   go to state 263
    basic_type_declaration              go to state 264
    structure_type_declaration          go to state 265
    auto_type_declaration               go to state 266
    bitfield_type_declaration           go to state 267
    type_declaration_no_options         go to state 268
    type_declaration_no_options_no_dim  go to state 269
    type_declaration                    go to state 641


State 491

  643 auto_type_declaration: "auto" '(' "name" . ')'

    ')'  shift, and go to state 642


State 492

  652 bitfield_type_declaration: "bitfield" '<' $@44 . bitfield_bits '>' $@45

    "name"  shift, and go to state 643

    bitfield_bits  go to state 644


State 493

  702 type_declaration_no_options_no_dim: "block" '<' $@57 . type_declaration '>' $@58

    "type"       shift, and go to state 222
    "array"      shift, and go to state 223
    "table"      shift, and go to state 224
    "typedecl"   shift, and go to state 225
    "iterator"   shift, and go to state 226
    "smart_ptr"  shift, and go to state 227
    "bool"       shift, and go to state 228
    "void"       shift, and go to state 229
    "string"     shift, and go to state 230
    "auto"       shift, and go to state 231
    "int"        shift, and go to state 232
    "int2"       shift, and go to state 233
    "int3"       shift, and go to state 234
    "int4"       shift, and go to state 235
    "uint"       shift, and go to state 236
    "bitfield"   shift, and go to state 237
    "uint2"      shift, and go to state 238
    "uint3"      shift, and go to state 239
    "uint4"      shift, and go to state 240
    "float"      shift, and go to state 241
    "float2"     shift, and go to state 242
    "float3"     shift, and go to state 243
    "float4"     shift, and go to state 244
    "range"      shift, and go to state 245
    "urange"     shift, and go to state 246
    "range64"    shift, and go to state 247
    "urange64"   shift, and go to state 248
    "block"      shift, and go to state 249
    "int64"      shift, and go to state 250
    "uint64"     shift, and go to state 251
    "double"     shift, and go to state 252
    "function"   shift, and go to state 253
    "lambda"     shift, and go to state 254
    "int8"       shift, and go to state 255
    "uint8"      shift, and go to state 256
    "int16"      shift, and go to state 257
    "uint16"     shift, and go to state 258
    "tuple"      shift, and go to state 259
    "variant"    shift, and go to state 260
    "::"         shift, and go to state 55
    "$t"         shift, and go to state 261
    "name"       shift, and go to state 56
    '$'          shift, and go to state 262

    name_in_namespace                   go to state 263
    basic_type_declaration              go to state 264
    structure_type_declaration          go to state 265
    auto_type_declaration               go to state 266
    bitfield_type_declaration           go to state 267
    type_declaration_no_options         go to state 268
    type_declaration_no_options_no_dim  go to state 269
    type_declaration                    go to state 645


State 494

  705 type_declaration_no_options_no_dim: "block" '<' $@59 . optional_function_argument_list optional_function_type '>' $@60

    '('  shift, and go to state 329

    $default  reduce using rule 123 (optional_function_argument_list)

    optional_function_argument_list  go to state 646


State 495

  709 type_declaration_no_options_no_dim: "function" '<' $@61 . type_declaration '>' $@62

    "type"       shift, and go to state 222
    "array"      shift, and go to state 223
    "table"      shift, and go to state 224
    "typedecl"   shift, and go to state 225
    "iterator"   shift, and go to state 226
    "smart_ptr"  shift, and go to state 227
    "bool"       shift, and go to state 228
    "void"       shift, and go to state 229
    "string"     shift, and go to state 230
    "auto"       shift, and go to state 231
    "int"        shift, and go to state 232
    "int2"       shift, and go to state 233
    "int3"       shift, and go to state 234
    "int4"       shift, and go to state 235
    "uint"       shift, and go to state 236
    "bitfield"   shift, and go to state 237
    "uint2"      shift, and go to state 238
    "uint3"      shift, and go to state 239
    "uint4"      shift, and go to state 240
    "float"      shift, and go to state 241
    "float2"     shift, and go to state 242
    "float3"     shift, and go to state 243
    "float4"     shift, and go to state 244
    "range"      shift, and go to state 245
    "urange"     shift, and go to state 246
    "range64"    shift, and go to state 247
    "urange64"   shift, and go to state 248
    "block"      shift, and go to state 249
    "int64"      shift, and go to state 250
    "uint64"     shift, and go to state 251
    "double"     shift, and go to state 252
    "function"   shift, and go to state 253
    "lambda"     shift, and go to state 254
    "int8"       shift, and go to state 255
    "uint8"      shift, and go to state 256
    "int16"      shift, and go to state 257
    "uint16"     shift, and go to state 258
    "tuple"      shift, and go to state 259
    "variant"    shift, and go to state 260
    "::"         shift, and go to state 55
    "$t"         shift, and go to state 261
    "name"       shift, and go to state 56
    '$'          shift, and go to state 262

    name_in_namespace                   go to state 263
    basic_type_declaration              go to state 264
    structure_type_declaration          go to state 265
    auto_type_declaration               go to state 266
    bitfield_type_declaration           go to state 267
    type_declaration_no_options         go to state 268
    type_declaration_no_options_no_dim  go to state 269
    type_declaration                    go to state 647


State 496

  712 type_declaration_no_options_no_dim: "function" '<' $@63 . optional_function_argument_list optional_function_type '>' $@64

    '('  shift, and go to state 329

    $default  reduce using rule 123 (optional_function_argument_list)

    optional_function_argument_list  go to state 648


State 497

  716 type_declaration_no_options_no_dim: "lambda" '<' $@65 . type_declaration '>' $@66

    "type"       shift, and go to state 222
    "array"      shift, and go to state 223
    "table"      shift, and go to state 224
    "typedecl"   shift, and go to state 225
    "iterator"   shift, and go to state 226
    "smart_ptr"  shift, and go to state 227
    "bool"       shift, and go to state 228
    "void"       shift, and go to state 229
    "string"     shift, and go to state 230
    "auto"       shift, and go to state 231
    "int"        shift, and go to state 232
    "int2"       shift, and go to state 233
    "int3"       shift, and go to state 234
    "int4"       shift, and go to state 235
    "uint"       shift, and go to state 236
    "bitfield"   shift, and go to state 237
    "uint2"      shift, and go to state 238
    "uint3"      shift, and go to state 239
    "uint4"      shift, and go to state 240
    "float"      shift, and go to state 241
    "float2"     shift, and go to state 242
    "float3"     shift, and go to state 243
    "float4"     shift, and go to state 244
    "range"      shift, and go to state 245
    "urange"     shift, and go to state 246
    "range64"    shift, and go to state 247
    "urange64"   shift, and go to state 248
    "block"      shift, and go to state 249
    "int64"      shift, and go to state 250
    "uint64"     shift, and go to state 251
    "double"     shift, and go to state 252
    "function"   shift, and go to state 253
    "lambda"     shift, and go to state 254
    "int8"       shift, and go to state 255
    "uint8"      shift, and go to state 256
    "int16"      shift, and go to state 257
    "uint16"     shift, and go to state 258
    "tuple"      shift, and go to state 259
    "variant"    shift, and go to state 260
    "::"         shift, and go to state 55
    "$t"         shift, and go to state 261
    "name"       shift, and go to state 56
    '$'          shift, and go to state 262

    name_in_namespace                   go to state 263
    basic_type_declaration              go to state 264
    structure_type_declaration          go to state 265
    auto_type_declaration               go to state 266
    bitfield_type_declaration           go to state 267
    type_declaration_no_options         go to state 268
    type_declaration_no_options_no_dim  go to state 269
    type_declaration                    go to state 649


State 498

  719 type_declaration_no_options_no_dim: "lambda" '<' $@67 . optional_function_argument_list optional_function_type '>' $@68

    '('  shift, and go to state 329

    $default  reduce using rule 123 (optional_function_argument_list)

    optional_function_argument_list  go to state 650


State 499

  722 type_declaration_no_options_no_dim: "tuple" '<' $@69 . tuple_type_list '>' $@70

    "type"       shift, and go to state 222
    "array"      shift, and go to state 223
    "table"      shift, and go to state 224
    "typedecl"   shift, and go to state 225
    "iterator"   shift, and go to state 226
    "smart_ptr"  shift, and go to state 227
    "bool"       shift, and go to state 228
    "void"       shift, and go to state 229
    "string"     shift, and go to state 230
    "auto"       shift, and go to state 231
    "int"        shift, and go to state 232
    "int2"       shift, and go to state 233
    "int3"       shift, and go to state 234
    "int4"       shift, and go to state 235
    "uint"       shift, and go to state 236
    "bitfield"   shift, and go to state 237
    "uint2"      shift, and go to state 238
    "uint3"      shift, and go to state 239
    "uint4"      shift, and go to state 240
    "float"      shift, and go to state 241
    "float2"     shift, and go to state 242
    "float3"     shift, and go to state 243
    "float4"     shift, and go to state 244
    "range"      shift, and go to state 245
    "urange"     shift, and go to state 246
    "range64"    shift, and go to state 247
    "urange64"   shift, and go to state 248
    "block"      shift, and go to state 249
    "int64"      shift, and go to state 250
    "uint64"     shift, and go to state 251
    "double"     shift, and go to state 252
    "function"   shift, and go to state 253
    "lambda"     shift, and go to state 254
    "int8"       shift, and go to state 255
    "uint8"      shift, and go to state 256
    "int16"      shift, and go to state 257
    "uint16"     shift, and go to state 258
    "tuple"      shift, and go to state 259
    "variant"    shift, and go to state 260
    "::"         shift, and go to state 55
    "$t"         shift, and go to state 261
    "name"       shift, and go to state 651
    '$'          shift, and go to state 262

    name_in_namespace                   go to state 263
    tuple_type                          go to state 652
    tuple_type_list                     go to state 653
    basic_type_declaration              go to state 264
    structure_type_declaration          go to state 265
    auto_type_declaration               go to state 266
    bitfield_type_declaration           go to state 267
    type_declaration_no_options         go to state 268
    type_declaration_no_options_no_dim  go to state 269
    type_declaration                    go to state 654


State 500

  725 type_declaration_no_options_no_dim: "variant" '<' $@71 . variant_type_list '>' $@72

    "name"  shift, and go to state 655

    variant_type       go to state 656
    variant_type_list  go to state 657


State 501

  356 expr_method_call: expr . "->" "name" '(' ')'
  357                 | expr . "->" "name" '(' expr_list ')'
  367 expr_field: expr . '.' "name"
  368           | expr . '.' '.' "name"
  369           | expr . '.' "name" '(' ')'
  370           | expr . '.' "name" '(' expr_list ')'
  371           | expr . '.' basic_type_declaration '(' ')'
  372           | expr . '.' basic_type_declaration '(' expr_list ')'
  375           | expr . '.' $@25 error $@26
  397 expr: expr . "<<" expr
  398     | expr . ">>" expr
  399     | expr . "<<<" expr
  400     | expr . ">>>" expr
  401     | expr . '+' expr
  402     | expr . '-' expr
  403     | expr . '*' expr
  404     | expr . '/' expr
  405     | expr . '%' expr
  406     | expr . '<' expr
  407     | expr . '>' expr
  408     | expr . "==" expr
  409     | expr . "!=" expr
  410     | expr . "<=" expr
  411     | expr . ">=" expr
  412     | expr . '&' expr
  413     | expr . '|' expr
  414     | expr . '^' expr
  415     | expr . "&&" expr
  416     | expr . "||" expr
  417     | expr . "^^" expr
  418     | expr . ".." expr
  421     | expr . "++"
  422     | expr . "--"
  424     | expr . '[' expr ']'
  425     | expr . '.' '[' expr ']'
  426     | expr . "?[" expr ']'
  427     | expr . '.' "?[" expr ']'
  428     | expr . "?." "name"
  429     | expr . '.' "?." "name"
  436     | expr . "??" expr
  437     | expr . '?' expr ':' expr
  440     | expr . "is" "type" '<' $@27 type_declaration_no_options '>' $@28
  441     | expr . "is" basic_type_declaration
  442     | expr . "is" "name"
  443     | expr . "as" "name"
  446     | expr . "as" "type" '<' $@29 type_declaration '>' $@30
  447     | expr . "as" basic_type_declaration
  448     | expr . '?' "as" "name"
  451     | expr . '?' "as" "type" '<' $@31 type_declaration '>' $@32
  452     | expr . '?' "as" basic_type_declaration
  460     | expr . "<|" expr
  461     | expr . "|>" expr
  462     | expr . "|>" basic_type_declaration
  476 expr_mtag: expr . '.' "$f" '(' expr ')'
  477          | expr . "?." "$f" '(' expr ')'
  478          | expr . '.' '.' "$f" '(' expr ')'
  479          | expr . '.' "?." "$f" '(' expr ')'
  480          | expr . "as" "$f" '(' expr ')'
  481          | expr . '?' "as" "$f" '(' expr ')'
  482          | expr . "is" "$f" '(' expr ')'
  644 auto_type_declaration: "$t" '(' expr . ')'

    "is"   shift, and go to state 603
    "as"   shift, and go to state 604
    "<<"   shift, and go to state 605
    ">>"   shift, and go to state 606
    "++"   shift, and go to state 607
    "--"   shift, and go to state 608
    "<="   shift, and go to state 609
    ">="   shift, and go to state 610
    "=="   shift, and go to state 611
    "!="   shift, and go to state 612
    "->"   shift, and go to state 613
    "??"   shift, and go to state 614
    "?."   shift, and go to state 615
    "?["   shift, and go to state 616
    "<|"   shift, and go to state 617
    "|>"   shift, and go to state 618
    "<<<"  shift, and go to state 619
    ">>>"  shift, and go to state 620
    "&&"   shift, and go to state 621
    "||"   shift, and go to state 622
    "^^"   shift, and go to state 623
    ".."   shift, and go to state 624
    '?'    shift, and go to state 625
    '|'    shift, and go to state 626
    '^'    shift, and go to state 627
    '&'    shift, and go to state 628
    '<'    shift, and go to state 629
    '>'    shift, and go to state 630
    '-'    shift, and go to state 631
    '+'    shift, and go to state 632
    '*'    shift, and go to state 633
    '/'    shift, and go to state 634
    '%'    shift, and go to state 635
    '.'    shift, and go to state 636
    '['    shift, and go to state 637
    ')'    shift, and go to state 658


State 502

  673 type_declaration_no_options_no_dim: '$' name_in_namespace '<' . $@48 type_declaration_no_options_list '>' '(' optional_expr_list ')'

    $default  reduce using rule 672 ($@48)

    $@48  go to state 659


State 503

  671 type_declaration_no_options_no_dim: '$' name_in_namespace '(' . optional_expr_list ')'

    "struct"                          shift, and go to state 414
    "class"                           shift, and go to state 415
    "true"                            shift, and go to state 416
    "false"                           shift, and go to state 417
    "new"                             shift, and go to state 418
    "typeinfo"                        shift, and go to state 419
    "type"                            shift, and go to state 420
    "array"                           shift, and go to state 421
    "null"                            shift, and go to state 422
    "table"                           shift, and go to state 423
    "deref"                           shift, and go to state 424
    "cast"                            shift, and go to state 425
    "upcast"                          shift, and go to state 426
    "addr"                            shift, and go to state 427
    "reinterpret"                     shift, and go to state 428
    "unsafe"                          shift, and go to state 429
    "fixed_array"                     shift, and go to state 430
    "default"                         shift, and go to state 431
    "bool"                            shift, and go to state 228
    "void"                            shift, and go to state 229
    "string"                          shift, and go to state 230
    "int"                             shift, and go to state 232
    "int2"                            shift, and go to state 233
    "int3"                            shift, and go to state 234
    "int4"                            shift, and go to state 235
    "uint"                            shift, and go to state 236
    "bitfield"                        shift, and go to state 432
    "uint2"                           shift, and go to state 238
    "uint3"                           shift, and go to state 239
    "uint4"                           shift, and go to state 240
    "float"                           shift, and go to state 241
    "float2"                          shift, and go to state 242
    "float3"                          shift, and go to state 243
    "float4"                          shift, and go to state 244
    "range"                           shift, and go to state 245
    "urange"                          shift, and go to state 246
    "range64"                         shift, and go to state 247
    "urange64"                        shift, and go to state 248
    "int64"                           shift, and go to state 250
    "uint64"                          shift, and go to state 251
    "double"                          shift, and go to state 252
    "int8"                            shift, and go to state 255
    "uint8"                           shift, and go to state 256
    "int16"                           shift, and go to state 257
    "uint16"                          shift, and go to state 258
    "tuple"                           shift, and go to state 433
    "variant"                         shift, and go to state 434
    "generator"                       shift, and go to state 435
    "++"                              shift, and go to state 436
    "--"                              shift, and go to state 437
    "::"                              shift, and go to state 55
    "$$"                              shift, and go to state 438
    "$i"                              shift, and go to state 439
    "$v"                              shift, and go to state 440
    "$b"                              shift, and go to state 441
    "$a"                              shift, and go to state 442
    "$c"                              shift, and go to state 443
    "..."                             shift, and go to state 444
    "integer constant"                shift, and go to state 445
    "long integer constant"           shift, and go to state 446
    "unsigned integer constant"       shift, and go to state 447
    "unsigned long integer constant"  shift, and go to state 448
    "unsigned int8 constant"          shift, and go to state 449
    "floating point constant"         shift, and go to state 450
    "double constant"                 shift, and go to state 451
    "name"                            shift, and go to state 56
    "start of the string"             shift, and go to state 452
    '-'                               shift, and go to state 453
    '+'                               shift, and go to state 454
    '*'                               shift, and go to state 455
    '%'                               shift, and go to state 13
    '~'                               shift, and go to state 456
    '!'                               shift, and go to state 457
    '['                               shift, and go to state 458
    '('                               shift, and go to state 459
    '$'                               shift, and go to state 460
    '@'                               shift, and go to state 461
    '{'                               shift, and go to state 462

    $default  reduce using rule 250 (optional_expr_list)

    string_builder          go to state 463
    expr_reader             go to state 464
    expr_call_pipe          go to state 465
    optional_expr_list      go to state 660
    name_in_namespace       go to state 466
    expr_new                go to state 467
    expr_cast               go to state 468
    expr_type_decl          go to state 469
    expr_type_info          go to state 470
    expr_list               go to state 661
    block_or_lambda         go to state 471
    expr_full_block         go to state 472
    expr_numeric_const      go to state 473
    expr_named_call         go to state 474
    expr_method_call        go to state 475
    func_addr_expr          go to state 476
    expr_field              go to state 477
    expr_call               go to state 478
    expr                    go to state 590
    expr_generator          go to state 480
    expr_mtag               go to state 481
    basic_type_declaration  go to state 482
    make_decl               go to state 483
    make_struct_decl        go to state 484
    make_tuple_call         go to state 485
    make_dim_decl           go to state 486
    make_table_decl         go to state 487
    array_comprehension     go to state 488


State 504

  683 type_declaration_no_options_no_dim: type_declaration_no_options_no_dim "==" "const" .

    $default  reduce using rule 683 (type_declaration_no_options_no_dim)


State 505

  684 type_declaration_no_options_no_dim: type_declaration_no_options_no_dim "==" '&' .

    $default  reduce using rule 684 (type_declaration_no_options_no_dim)


State 506

  677 type_declaration_no_options_no_dim: type_declaration_no_options_no_dim '-' "const" .

    $default  reduce using rule 677 (type_declaration_no_options_no_dim)


State 507

  679 type_declaration_no_options_no_dim: type_declaration_no_options_no_dim '-' '&' .

    $default  reduce using rule 679 (type_declaration_no_options_no_dim)


State 508

  674 type_declaration_no_options_no_dim: type_declaration_no_options_no_dim '-' '[' . ']'

    ']'  shift, and go to state 662


State 509

  682 type_declaration_no_options_no_dim: type_declaration_no_options_no_dim '-' '#' .

    $default  reduce using rule 682 (type_declaration_no_options_no_dim)


State 510

  658 dim_list: '[' ']' .

    $default  reduce using rule 658 (dim_list)


State 511

  356 expr_method_call: expr . "->" "name" '(' ')'
  357                 | expr . "->" "name" '(' expr_list ')'
  367 expr_field: expr . '.' "name"
  368           | expr . '.' '.' "name"
  369           | expr . '.' "name" '(' ')'
  370           | expr . '.' "name" '(' expr_list ')'
  371           | expr . '.' basic_type_declaration '(' ')'
  372           | expr . '.' basic_type_declaration '(' expr_list ')'
  375           | expr . '.' $@25 error $@26
  397 expr: expr . "<<" expr
  398     | expr . ">>" expr
  399     | expr . "<<<" expr
  400     | expr . ">>>" expr
  401     | expr . '+' expr
  402     | expr . '-' expr
  403     | expr . '*' expr
  404     | expr . '/' expr
  405     | expr . '%' expr
  406     | expr . '<' expr
  407     | expr . '>' expr
  408     | expr . "==" expr
  409     | expr . "!=" expr
  410     | expr . "<=" expr
  411     | expr . ">=" expr
  412     | expr . '&' expr
  413     | expr . '|' expr
  414     | expr . '^' expr
  415     | expr . "&&" expr
  416     | expr . "||" expr
  417     | expr . "^^" expr
  418     | expr . ".." expr
  421     | expr . "++"
  422     | expr . "--"
  424     | expr . '[' expr ']'
  425     | expr . '.' '[' expr ']'
  426     | expr . "?[" expr ']'
  427     | expr . '.' "?[" expr ']'
  428     | expr . "?." "name"
  429     | expr . '.' "?." "name"
  436     | expr . "??" expr
  437     | expr . '?' expr ':' expr
  440     | expr . "is" "type" '<' $@27 type_declaration_no_options '>' $@28
  441     | expr . "is" basic_type_declaration
  442     | expr . "is" "name"
  443     | expr . "as" "name"
  446     | expr . "as" "type" '<' $@29 type_declaration '>' $@30
  447     | expr . "as" basic_type_declaration
  448     | expr . '?' "as" "name"
  451     | expr . '?' "as" "type" '<' $@31 type_declaration '>' $@32
  452     | expr . '?' "as" basic_type_declaration
  460     | expr . "<|" expr
  461     | expr . "|>" expr
  462     | expr . "|>" basic_type_declaration
  476 expr_mtag: expr . '.' "$f" '(' expr ')'
  477          | expr . "?." "$f" '(' expr ')'
  478          | expr . '.' '.' "$f" '(' expr ')'
  479          | expr . '.' "?." "$f" '(' expr ')'
  480          | expr . "as" "$f" '(' expr ')'
  481          | expr . '?' "as" "$f" '(' expr ')'
  482          | expr . "is" "$f" '(' expr ')'
  657 dim_list: '[' expr . ']'

    "is"   shift, and go to state 603
    "as"   shift, and go to state 604
    "<<"   shift, and go to state 605
    ">>"   shift, and go to state 606
    "++"   shift, and go to state 607
    "--"   shift, and go to state 608
    "<="   shift, and go to state 609
    ">="   shift, and go to state 610
    "=="   shift, and go to state 611
    "!="   shift, and go to state 612
    "->"   shift, and go to state 613
    "??"   shift, and go to state 614
    "?."   shift, and go to state 615
    "?["   shift, and go to state 616
    "<|"   shift, and go to state 617
    "|>"   shift, and go to state 618
    "<<<"  shift, and go to state 619
    ">>>"  shift, and go to state 620
    "&&"   shift, and go to state 621
    "||"   shift, and go to state 622
    "^^"   shift, and go to state 623
    ".."   shift, and go to state 624
    '?'    shift, and go to state 625
    '|'    shift, and go to state 626
    '^'    shift, and go to state 627
    '&'    shift, and go to state 628
    '<'    shift, and go to state 629
    '>'    shift, and go to state 630
    '-'    shift, and go to state 631
    '+'    shift, and go to state 632
    '*'    shift, and go to state 633
    '/'    shift, and go to state 634
    '%'    shift, and go to state 635
    '.'    shift, and go to state 636
    '['    shift, and go to state 637
    ']'    shift, and go to state 663


State 512

  659 dim_list: dim_list '[' . expr ']'
  660         | dim_list '[' . ']'

    "struct"                          shift, and go to state 414
    "class"                           shift, and go to state 415
    "true"                            shift, and go to state 416
    "false"                           shift, and go to state 417
    "new"                             shift, and go to state 418
    "typeinfo"                        shift, and go to state 419
    "type"                            shift, and go to state 420
    "array"                           shift, and go to state 421
    "null"                            shift, and go to state 422
    "table"                           shift, and go to state 423
    "deref"                           shift, and go to state 424
    "cast"                            shift, and go to state 425
    "upcast"                          shift, and go to state 426
    "addr"                            shift, and go to state 427
    "reinterpret"                     shift, and go to state 428
    "unsafe"                          shift, and go to state 429
    "fixed_array"                     shift, and go to state 430
    "default"                         shift, and go to state 431
    "bool"                            shift, and go to state 228
    "void"                            shift, and go to state 229
    "string"                          shift, and go to state 230
    "int"                             shift, and go to state 232
    "int2"                            shift, and go to state 233
    "int3"                            shift, and go to state 234
    "int4"                            shift, and go to state 235
    "uint"                            shift, and go to state 236
    "bitfield"                        shift, and go to state 432
    "uint2"                           shift, and go to state 238
    "uint3"                           shift, and go to state 239
    "uint4"                           shift, and go to state 240
    "float"                           shift, and go to state 241
    "float2"                          shift, and go to state 242
    "float3"                          shift, and go to state 243
    "float4"                          shift, and go to state 244
    "range"                           shift, and go to state 245
    "urange"                          shift, and go to state 246
    "range64"                         shift, and go to state 247
    "urange64"                        shift, and go to state 248
    "int64"                           shift, and go to state 250
    "uint64"                          shift, and go to state 251
    "double"                          shift, and go to state 252
    "int8"                            shift, and go to state 255
    "uint8"                           shift, and go to state 256
    "int16"                           shift, and go to state 257
    "uint16"                          shift, and go to state 258
    "tuple"                           shift, and go to state 433
    "variant"                         shift, and go to state 434
    "generator"                       shift, and go to state 435
    "++"                              shift, and go to state 436
    "--"                              shift, and go to state 437
    "::"                              shift, and go to state 55
    "$$"                              shift, and go to state 438
    "$i"                              shift, and go to state 439
    "$v"                              shift, and go to state 440
    "$b"                              shift, and go to state 441
    "$a"                              shift, and go to state 442
    "$c"                              shift, and go to state 443
    "..."                             shift, and go to state 444
    "integer constant"                shift, and go to state 445
    "long integer constant"           shift, and go to state 446
    "unsigned integer constant"       shift, and go to state 447
    "unsigned long integer constant"  shift, and go to state 448
    "unsigned int8 constant"          shift, and go to state 449
    "floating point constant"         shift, and go to state 450
    "double constant"                 shift, and go to state 451
    "name"                            shift, and go to state 56
    "start of the string"             shift, and go to state 452
    '-'                               shift, and go to state 453
    '+'                               shift, and go to state 454
    '*'                               shift, and go to state 455
    '%'                               shift, and go to state 13
    '~'                               shift, and go to state 456
    '!'                               shift, and go to state 457
    '['                               shift, and go to state 458
    ']'                               shift, and go to state 664
    '('                               shift, and go to state 459
    '$'                               shift, and go to state 460
    '@'                               shift, and go to state 461
    '{'                               shift, and go to state 462

    string_builder          go to state 463
    expr_reader             go to state 464
    expr_call_pipe          go to state 465
    name_in_namespace       go to state 466
    expr_new                go to state 467
    expr_cast               go to state 468
    expr_type_decl          go to state 469
    expr_type_info          go to state 470
    block_or_lambda         go to state 471
    expr_full_block         go to state 472
    expr_numeric_const      go to state 473
    expr_named_call         go to state 474
    expr_method_call        go to state 475
    func_addr_expr          go to state 476
    expr_field              go to state 477
    expr_call               go to state 478
    expr                    go to state 665
    expr_generator          go to state 480
    expr_mtag               go to state 481
    basic_type_declaration  go to state 482
    make_decl               go to state 483
    make_struct_decl        go to state 484
    make_tuple_call         go to state 485
    make_dim_decl           go to state 486
    make_table_decl         go to state 487
    array_comprehension     go to state 488


State 513

  728 type_declaration: type_declaration '|' '#' .

    $default  reduce using rule 728 (type_declaration)


State 514

  727 type_declaration: type_declaration '|' type_declaration_no_options .

    $default  reduce using rule 727 (type_declaration)


State 515

  743 bitfield_alias_declaration: "bitfield" $@81 optional_public_or_private_alias "name" optional_commas $@82 '{' $@83 . bitfield_alias_bits optional_commas $@84 '}'

    "name"  shift, and go to state 666

    $default  reduce using rule 647 (bitfield_alias_bits)

    bitfield_alias_bits  go to state 667


State 516

  733 tuple_alias_declaration: "tuple" $@73 optional_public_or_private_alias "name" optional_semis $@74 '{' $@75 . tuple_alias_type_list optional_semis $@76 '}'

    "type"       shift, and go to state 222
    "array"      shift, and go to state 223
    "table"      shift, and go to state 224
    "typedecl"   shift, and go to state 225
    "iterator"   shift, and go to state 226
    "smart_ptr"  shift, and go to state 227
    "bool"       shift, and go to state 228
    "void"       shift, and go to state 229
    "string"     shift, and go to state 230
    "auto"       shift, and go to state 231
    "int"        shift, and go to state 232
    "int2"       shift, and go to state 233
    "int3"       shift, and go to state 234
    "int4"       shift, and go to state 235
    "uint"       shift, and go to state 236
    "bitfield"   shift, and go to state 237
    "uint2"      shift, and go to state 238
    "uint3"      shift, and go to state 239
    "uint4"      shift, and go to state 240
    "float"      shift, and go to state 241
    "float2"     shift, and go to state 242
    "float3"     shift, and go to state 243
    "float4"     shift, and go to state 244
    "range"      shift, and go to state 245
    "urange"     shift, and go to state 246
    "range64"    shift, and go to state 247
    "urange64"   shift, and go to state 248
    "block"      shift, and go to state 249
    "int64"      shift, and go to state 250
    "uint64"     shift, and go to state 251
    "double"     shift, and go to state 252
    "function"   shift, and go to state 253
    "lambda"     shift, and go to state 254
    "int8"       shift, and go to state 255
    "uint8"      shift, and go to state 256
    "int16"      shift, and go to state 257
    "uint16"     shift, and go to state 258
    "tuple"      shift, and go to state 259
    "variant"    shift, and go to state 260
    "::"         shift, and go to state 55
    "$t"         shift, and go to state 261
    "name"       shift, and go to state 651
    '$'          shift, and go to state 262

    $default  reduce using rule 512 (tuple_alias_type_list)

    name_in_namespace                   go to state 263
    tuple_type                          go to state 668
    tuple_alias_type_list               go to state 669
    basic_type_declaration              go to state 264
    structure_type_declaration          go to state 265
    auto_type_declaration               go to state 266
    bitfield_type_declaration           go to state 267
    type_declaration_no_options         go to state 268
    type_declaration_no_options_no_dim  go to state 269
    type_declaration                    go to state 654


State 517

  738 variant_alias_declaration: "variant" $@77 optional_public_or_private_alias "name" optional_semis $@78 '{' $@79 . variant_alias_type_list optional_semis $@80 '}'

    "name"  shift, and go to state 655

    $default  reduce using rule 518 (variant_alias_type_list)

    variant_type             go to state 670
    variant_alias_type_list  go to state 671


State 518

  187 function_name: "operator" '?' "as" "name" .

    $default  reduce using rule 187 (function_name)


State 519

  177 function_name: "operator" '.' "name" ":=" .

    $default  reduce using rule 177 (function_name)


State 520

  505 function_argument_declaration: "$a" '(' . expr ')'

    "struct"                          shift, and go to state 414
    "class"                           shift, and go to state 415
    "true"                            shift, and go to state 416
    "false"                           shift, and go to state 417
    "new"                             shift, and go to state 418
    "typeinfo"                        shift, and go to state 419
    "type"                            shift, and go to state 420
    "array"                           shift, and go to state 421
    "null"                            shift, and go to state 422
    "table"                           shift, and go to state 423
    "deref"                           shift, and go to state 424
    "cast"                            shift, and go to state 425
    "upcast"                          shift, and go to state 426
    "addr"                            shift, and go to state 427
    "reinterpret"                     shift, and go to state 428
    "unsafe"                          shift, and go to state 429
    "fixed_array"                     shift, and go to state 430
    "default"                         shift, and go to state 431
    "bool"                            shift, and go to state 228
    "void"                            shift, and go to state 229
    "string"                          shift, and go to state 230
    "int"                             shift, and go to state 232
    "int2"                            shift, and go to state 233
    "int3"                            shift, and go to state 234
    "int4"                            shift, and go to state 235
    "uint"                            shift, and go to state 236
    "bitfield"                        shift, and go to state 432
    "uint2"                           shift, and go to state 238
    "uint3"                           shift, and go to state 239
    "uint4"                           shift, and go to state 240
    "float"                           shift, and go to state 241
    "float2"                          shift, and go to state 242
    "float3"                          shift, and go to state 243
    "float4"                          shift, and go to state 244
    "range"                           shift, and go to state 245
    "urange"                          shift, and go to state 246
    "range64"                         shift, and go to state 247
    "urange64"                        shift, and go to state 248
    "int64"                           shift, and go to state 250
    "uint64"                          shift, and go to state 251
    "double"                          shift, and go to state 252
    "int8"                            shift, and go to state 255
    "uint8"                           shift, and go to state 256
    "int16"                           shift, and go to state 257
    "uint16"                          shift, and go to state 258
    "tuple"                           shift, and go to state 433
    "variant"                         shift, and go to state 434
    "generator"                       shift, and go to state 435
    "++"                              shift, and go to state 436
    "--"                              shift, and go to state 437
    "::"                              shift, and go to state 55
    "$$"                              shift, and go to state 438
    "$i"                              shift, and go to state 439
    "$v"                              shift, and go to state 440
    "$b"                              shift, and go to state 441
    "$a"                              shift, and go to state 442
    "$c"                              shift, and go to state 443
    "..."                             shift, and go to state 444
    "integer constant"                shift, and go to state 445
    "long integer constant"           shift, and go to state 446
    "unsigned integer constant"       shift, and go to state 447
    "unsigned long integer constant"  shift, and go to state 448
    "unsigned int8 constant"          shift, and go to state 449
    "floating point constant"         shift, and go to state 450
    "double constant"                 shift, and go to state 451
    "name"                            shift, and go to state 56
    "start of the string"             shift, and go to state 452
    '-'                               shift, and go to state 453
    '+'                               shift, and go to state 454
    '*'                               shift, and go to state 455
    '%'                               shift, and go to state 13
    '~'                               shift, and go to state 456
    '!'                               shift, and go to state 457
    '['                               shift, and go to state 458
    '('                               shift, and go to state 459
    '$'                               shift, and go to state 460
    '@'                               shift, and go to state 461
    '{'                               shift, and go to state 462

    string_builder          go to state 463
    expr_reader             go to state 464
    expr_call_pipe          go to state 465
    name_in_namespace       go to state 466
    expr_new                go to state 467
    expr_cast               go to state 468
    expr_type_decl          go to state 469
    expr_type_info          go to state 470
    block_or_lambda         go to state 471
    expr_full_block         go to state 472
    expr_numeric_const      go to state 473
    expr_named_call         go to state 474
    expr_method_call        go to state 475
    func_addr_expr          go to state 476
    expr_field              go to state 477
    expr_call               go to state 478
    expr                    go to state 672
    expr_generator          go to state 480
    expr_mtag               go to state 481
    basic_type_declaration  go to state 482
    make_decl               go to state 483
    make_struct_decl        go to state 484
    make_tuple_call         go to state 485
    make_dim_decl           go to state 486
    make_table_decl         go to state 487
    array_comprehension     go to state 488


State 521

  279 kwd_let_var_or_nothing: "let" .

    $default  reduce using rule 279 (kwd_let_var_or_nothing)


State 522

  280 kwd_let_var_or_nothing: "var" .

    $default  reduce using rule 280 (kwd_let_var_or_nothing)


State 523

  504 function_argument_declaration: optional_field_annotation kwd_let_var_or_nothing . variable_declaration

    "$i"    shift, and go to state 673
    "name"  shift, and go to state 674

    variable_declaration         go to state 675
    variable_name_with_pos_list  go to state 676


State 524

  125 optional_function_argument_list: '(' function_argument_list ')' .

    $default  reduce using rule 125 (optional_function_argument_list)


State 525

  507 function_argument_list: function_argument_list ';' . function_argument_declaration

    "$a"  shift, and go to state 383
    '@'   shift, and go to state 214

    $default  reduce using rule 484 (optional_field_annotation)

    metadata_argument_list         go to state 215
    optional_field_annotation      go to state 385
    function_argument_declaration  go to state 677


State 526

  127 optional_function_type: ':' type_declaration .
  727 type_declaration: type_declaration . '|' type_declaration_no_options
  728                 | type_declaration . '|' '#'

    '|'  shift, and go to state 372

    $default  reduce using rule 127 (optional_function_type)


State 527

  226 expression_block: $@9 '{' expressions . $@10 '}' expression_block_finally
  248 expressions: expressions . expression_any
  249            | expressions . error

    error                             shift, and go to state 678
    "struct"                          shift, and go to state 414
    "class"                           shift, and go to state 415
    "let"                             shift, and go to state 3
    "true"                            shift, and go to state 416
    "false"                           shift, and go to state 417
    "new"                             shift, and go to state 418
    "typeinfo"                        shift, and go to state 419
    "type"                            shift, and go to state 420
    "array"                           shift, and go to state 421
    "return"                          shift, and go to state 679
    "null"                            shift, and go to state 422
    "break"                           shift, and go to state 680
    "try"                             shift, and go to state 681
    "table"                           shift, and go to state 423
    "delete"                          shift, and go to state 682
    "deref"                           shift, and go to state 424
    "assume"                          shift, and go to state 683
    "cast"                            shift, and go to state 425
    "upcast"                          shift, and go to state 426
    "var"                             shift, and go to state 8
    "addr"                            shift, and go to state 427
    "continue"                        shift, and go to state 684
    "pass"                            shift, and go to state 685
    "reinterpret"                     shift, and go to state 428
    "label"                           shift, and go to state 686
    "goto"                            shift, and go to state 687
    "unsafe"                          shift, and go to state 688
    "fixed_array"                     shift, and go to state 430
    "default"                         shift, and go to state 431
    "bool"                            shift, and go to state 228
    "void"                            shift, and go to state 229
    "string"                          shift, and go to state 230
    "int"                             shift, and go to state 232
    "int2"                            shift, and go to state 233
    "int3"                            shift, and go to state 234
    "int4"                            shift, and go to state 235
    "uint"                            shift, and go to state 236
    "bitfield"                        shift, and go to state 432
    "uint2"                           shift, and go to state 238
    "uint3"                           shift, and go to state 239
    "uint4"                           shift, and go to state 240
    "float"                           shift, and go to state 241
    "float2"                          shift, and go to state 242
    "float3"                          shift, and go to state 243
    "float4"                          shift, and go to state 244
    "range"                           shift, and go to state 245
    "urange"                          shift, and go to state 246
    "range64"                         shift, and go to state 247
    "urange64"                        shift, and go to state 248
    "int64"                           shift, and go to state 250
    "uint64"                          shift, and go to state 251
    "double"                          shift, and go to state 252
    "int8"                            shift, and go to state 255
    "uint8"                           shift, and go to state 256
    "int16"                           shift, and go to state 257
    "uint16"                          shift, and go to state 258
    "tuple"                           shift, and go to state 433
    "variant"                         shift, and go to state 434
    "generator"                       shift, and go to state 435
    "yield"                           shift, and go to state 689
    "++"                              shift, and go to state 436
    "--"                              shift, and go to state 437
    "::"                              shift, and go to state 55
    "$$"                              shift, and go to state 438
    "$i"                              shift, and go to state 439
    "$v"                              shift, and go to state 440
    "$b"                              shift, and go to state 441
    "$a"                              shift, and go to state 442
    "$c"                              shift, and go to state 443
    "..."                             shift, and go to state 444
    "integer constant"                shift, and go to state 445
    "long integer constant"           shift, and go to state 446
    "unsigned integer constant"       shift, and go to state 447
    "unsigned long integer constant"  shift, and go to state 448
    "unsigned int8 constant"          shift, and go to state 449
    "floating point constant"         shift, and go to state 450
    "double constant"                 shift, and go to state 451
    "name"                            shift, and go to state 56
    "start of the string"             shift, and go to state 452
    '-'                               shift, and go to state 453
    '+'                               shift, and go to state 454
    '*'                               shift, and go to state 455
    '%'                               shift, and go to state 13
    '~'                               shift, and go to state 456
    '!'                               shift, and go to state 457
    '['                               shift, and go to state 458
    '('                               shift, and go to state 459
    '$'                               shift, and go to state 460
    '@'                               shift, and go to state 461
    ';'                               shift, and go to state 690
    '{'                               shift, and go to state 462

    "while"      reduce using rule 79 ($@4)
    "if"         reduce using rule 73 ($@2)
    "static_if"  reduce using rule 73 ($@2)
    "for"        reduce using rule 76 ($@3)
    "with"       reduce using rule 81 ($@5)
    '}'          reduce using rule 225 ($@10)

    string_builder                    go to state 463
    expr_reader                       go to state 464
    expression_label                  go to state 691
    expression_goto                   go to state 692
    expression_if_one_liner           go to state 693
    expression_if_then_else           go to state 694
    $@2                               go to state 695
    expression_if_then_else_oneliner  go to state 696
    expression_for_loop               go to state 697
    $@3                               go to state 698
    expression_unsafe                 go to state 699
    expression_while_loop             go to state 700
    $@4                               go to state 701
    expression_with                   go to state 702
    $@5                               go to state 703
    expression_with_alias             go to state 704
    $@10                              go to state 705
    expr_call_pipe                    go to state 465
    expression_any                    go to state 706
    name_in_namespace                 go to state 466
    expression_delete                 go to state 707
    expr_new                          go to state 467
    expression_break                  go to state 708
    expression_continue               go to state 709
    expression_return                 go to state 710
    expression_yield                  go to state 711
    expression_try_catch              go to state 712
    kwd_let                           go to state 713
    expression_let                    go to state 714
    expr_cast                         go to state 468
    expr_type_decl                    go to state 469
    expr_type_info                    go to state 470
    block_or_lambda                   go to state 471
    expr_full_block                   go to state 472
    expr_numeric_const                go to state 473
    expr_assign                       go to state 715
    expr_named_call                   go to state 474
    expr_method_call                  go to state 475
    func_addr_expr                    go to state 476
    expr_field                        go to state 477
    expr_call                         go to state 478
    expr                              go to state 716
    expr_generator                    go to state 480
    expr_mtag                         go to state 481
    basic_type_declaration            go to state 482
    make_decl                         go to state 483
    make_struct_decl                  go to state 484
    make_tuple_call                   go to state 485
    make_dim_decl                     go to state 486
    make_table_decl                   go to state 487
    array_comprehension               go to state 488


State 528

  585 enum_declaration: optional_annotation_list "enum" $@39 optional_public_or_private_enum enum_name optional_enum_basic_type_declaration optional_commas '{' . $@40 enum_list optional_commas $@41 '}'

    $default  reduce using rule 583 ($@40)

    $@40  go to state 717


State 529

  587 optional_structure_parent: ':' name_in_namespace .

    $default  reduce using rule 587 (optional_structure_parent)


State 530

  499 struct_variable_declaration_list: struct_variable_declaration_list . $@33 structure_variable_declaration ';'
  501                                 | struct_variable_declaration_list . optional_annotation_list "def" optional_public_or_private_member_variable "abstract" optional_constant $@34 function_declaration_header ';'
  503                                 | struct_variable_declaration_list . optional_annotation_list "def" optional_public_or_private_member_variable optional_static_member_variable optional_override optional_constant $@35 function_declaration_header expression_block
  597 optional_struct_variable_declaration_list: '{' struct_variable_declaration_list . '}'

    '['  shift, and go to state 14
    '}'  shift, and go to state 718

    "def"     reduce using rule 121 (optional_annotation_list)
    $default  reduce using rule 498 ($@33)

    optional_annotation_list  go to state 719
    $@33                      go to state 720


State 531

  534 let_variable_name_with_pos_list: "$i" . '(' expr ')'

    '('  shift, and go to state 721


State 532

  533 let_variable_name_with_pos_list: "name" .
  535                                | "name" . "aka" "name"

    "aka"  shift, and go to state 722

    $default  reduce using rule 533 (let_variable_name_with_pos_list)


State 533

  536 let_variable_name_with_pos_list: let_variable_name_with_pos_list . ',' "name"
  537                                | let_variable_name_with_pos_list . ',' "name" "aka" "name"
  543 let_variable_declaration: let_variable_name_with_pos_list . ':' type_declaration_no_options ';'
  544                         | let_variable_name_with_pos_list . ':' type_declaration_no_options copy_or_move_or_clone expr ';'
  545                         | let_variable_name_with_pos_list . optional_ref copy_or_move_or_clone expr ';'

    ','  shift, and go to state 723
    ':'  shift, and go to state 724
    '&'  shift, and go to state 409

    $default  reduce using rule 531 (optional_ref)

    optional_ref  go to state 725


State 534

  557 global_variable_declaration_list: global_variable_declaration_list $@36 optional_field_annotation let_variable_declaration .

    $default  reduce using rule 557 (global_variable_declaration_list)


State 535

  539 global_let_variable_name_with_pos_list: global_let_variable_name_with_pos_list ',' "name" .

    $default  reduce using rule 539 (global_let_variable_name_with_pos_list)


State 536

  546 global_let_variable_declaration: global_let_variable_name_with_pos_list ':' type_declaration_no_options . ';'
  547                                | global_let_variable_name_with_pos_list ':' type_declaration_no_options . copy_or_move_or_clone expr ';'

    "<-"  shift, and go to state 537
    ":="  shift, and go to state 538
    '='   shift, and go to state 539
    ';'   shift, and go to state 726

    copy_or_move_or_clone  go to state 727


State 537

  529 copy_or_move_or_clone: "<-" .

    $default  reduce using rule 529 (copy_or_move_or_clone)


State 538

  530 copy_or_move_or_clone: ":=" .

    $default  reduce using rule 530 (copy_or_move_or_clone)


State 539

  528 copy_or_move_or_clone: '=' .

    $default  reduce using rule 528 (copy_or_move_or_clone)


State 540

  548 global_let_variable_declaration: global_let_variable_name_with_pos_list optional_ref copy_or_move_or_clone . expr ';'

    "struct"                          shift, and go to state 414
    "class"                           shift, and go to state 415
    "true"                            shift, and go to state 416
    "false"                           shift, and go to state 417
    "new"                             shift, and go to state 418
    "typeinfo"                        shift, and go to state 419
    "type"                            shift, and go to state 420
    "array"                           shift, and go to state 421
    "null"                            shift, and go to state 422
    "table"                           shift, and go to state 423
    "deref"                           shift, and go to state 424
    "cast"                            shift, and go to state 425
    "upcast"                          shift, and go to state 426
    "addr"                            shift, and go to state 427
    "reinterpret"                     shift, and go to state 428
    "unsafe"                          shift, and go to state 429
    "fixed_array"                     shift, and go to state 430
    "default"                         shift, and go to state 431
    "bool"                            shift, and go to state 228
    "void"                            shift, and go to state 229
    "string"                          shift, and go to state 230
    "int"                             shift, and go to state 232
    "int2"                            shift, and go to state 233
    "int3"                            shift, and go to state 234
    "int4"                            shift, and go to state 235
    "uint"                            shift, and go to state 236
    "bitfield"                        shift, and go to state 432
    "uint2"                           shift, and go to state 238
    "uint3"                           shift, and go to state 239
    "uint4"                           shift, and go to state 240
    "float"                           shift, and go to state 241
    "float2"                          shift, and go to state 242
    "float3"                          shift, and go to state 243
    "float4"                          shift, and go to state 244
    "range"                           shift, and go to state 245
    "urange"                          shift, and go to state 246
    "range64"                         shift, and go to state 247
    "urange64"                        shift, and go to state 248
    "int64"                           shift, and go to state 250
    "uint64"                          shift, and go to state 251
    "double"                          shift, and go to state 252
    "int8"                            shift, and go to state 255
    "uint8"                           shift, and go to state 256
    "int16"                           shift, and go to state 257
    "uint16"                          shift, and go to state 258
    "tuple"                           shift, and go to state 433
    "variant"                         shift, and go to state 434
    "generator"                       shift, and go to state 435
    "++"                              shift, and go to state 436
    "--"                              shift, and go to state 437
    "::"                              shift, and go to state 55
    "$$"                              shift, and go to state 438
    "$i"                              shift, and go to state 439
    "$v"                              shift, and go to state 440
    "$b"                              shift, and go to state 441
    "$a"                              shift, and go to state 442
    "$c"                              shift, and go to state 443
    "..."                             shift, and go to state 444
    "integer constant"                shift, and go to state 445
    "long integer constant"           shift, and go to state 446
    "unsigned integer constant"       shift, and go to state 447
    "unsigned long integer constant"  shift, and go to state 448
    "unsigned int8 constant"          shift, and go to state 449
    "floating point constant"         shift, and go to state 450
    "double constant"                 shift, and go to state 451
    "name"                            shift, and go to state 56
    "start of the string"             shift, and go to state 452
    '-'                               shift, and go to state 453
    '+'                               shift, and go to state 454
    '*'                               shift, and go to state 455
    '%'                               shift, and go to state 13
    '~'                               shift, and go to state 456
    '!'                               shift, and go to state 457
    '['                               shift, and go to state 458
    '('                               shift, and go to state 459
    '$'                               shift, and go to state 460
    '@'                               shift, and go to state 461
    '{'                               shift, and go to state 462

    string_builder          go to state 463
    expr_reader             go to state 464
    expr_call_pipe          go to state 465
    name_in_namespace       go to state 466
    expr_new                go to state 467
    expr_cast               go to state 468
    expr_type_decl          go to state 469
    expr_type_info          go to state 470
    block_or_lambda         go to state 471
    expr_full_block         go to state 472
    expr_numeric_const      go to state 473
    expr_named_call         go to state 474
    expr_method_call        go to state 475
    func_addr_expr          go to state 476
    expr_field              go to state 477
    expr_call               go to state 478
    expr                    go to state 728
    expr_generator          go to state 480
    expr_mtag               go to state 481
    basic_type_declaration  go to state 482
    make_decl               go to state 483
    make_struct_decl        go to state 484
    make_tuple_call         go to state 485
    make_dim_decl           go to state 486
    make_table_decl         go to state 487
    array_comprehension     go to state 488


State 541

  669 type_declaration_no_options_no_dim: "type" '<' $@46 type_declaration . '>' $@47
  727 type_declaration: type_declaration . '|' type_declaration_no_options
  728                 | type_declaration . '|' '#'

    '|'  shift, and go to state 372
    '>'  shift, and go to state 729


State 542

  692 type_declaration_no_options_no_dim: "array" '<' $@51 type_declaration . '>' $@52
  727 type_declaration: type_declaration . '|' type_declaration_no_options
  728                 | type_declaration . '|' '#'

    '|'  shift, and go to state 372
    '>'  shift, and go to state 730


State 543

  695 type_declaration_no_options_no_dim: "table" '<' $@53 table_type_pair . '>' $@54

    '>'  shift, and go to state 731


State 544

  655 table_type_pair: type_declaration .
  656                | type_declaration . c_or_s type_declaration
  727 type_declaration: type_declaration . '|' type_declaration_no_options
  728                 | type_declaration . '|' '#'

    ','  shift, and go to state 732
    '|'  shift, and go to state 372
    ';'  shift, and go to state 733

    $default  reduce using rule 655 (table_type_pair)

    c_or_s  go to state 734


State 545

  769 make_struct_decl: "struct" '<' . $@85 type_declaration_no_options '>' $@86 '(' use_initializer optional_make_struct_dim_decl ')'

    $default  reduce using rule 767 ($@85)

    $@85  go to state 735


State 546

  772 make_struct_decl: "class" '<' . $@87 type_declaration_no_options '>' $@88 '(' use_initializer optional_make_struct_dim_decl ')'

    $default  reduce using rule 770 ($@87)

    $@87  go to state 736


State 547

  263 new_type_declaration: '<' . $@11 type_declaration '>' $@12

    $default  reduce using rule 261 ($@11)

    $@11  go to state 737


State 548

  265 expr_new: "new" new_type_declaration .
  266         | "new" new_type_declaration . '(' use_initializer ')'
  267         | "new" new_type_declaration . '(' expr_list ')'
  268         | "new" new_type_declaration . '(' make_struct_single ')'
  269         | "new" new_type_declaration . '(' "uninitialized" make_struct_single ')'

    '('  shift, and go to state 738

    $default  reduce using rule 265 (expr_new)


State 549

  264 new_type_declaration: structure_type_declaration .

    $default  reduce using rule 264 (new_type_declaration)


State 550

  270 expr_new: "new" make_decl .

    $default  reduce using rule 270 (expr_new)


State 551

  305 expr_type_info: "typeinfo" name_in_namespace . '(' expr ')'
  306               | "typeinfo" name_in_namespace . '<' "name" '>' '(' expr ')'
  307               | "typeinfo" name_in_namespace . '<' "name" c_or_s "name" '>' '(' expr ')'

    '<'  shift, and go to state 739
    '('  shift, and go to state 740


State 552

  304 expr_type_decl: "type" '<' . $@19 type_declaration '>' $@20

    $default  reduce using rule 302 ($@19)

    $@19  go to state 741


State 553

  788 make_dim_decl: "array" "struct" . '<' $@95 type_declaration_no_options '>' $@96 '(' use_initializer optional_make_struct_dim_decl ')'

    '<'  shift, and go to state 742


State 554

  791 make_dim_decl: "array" "tuple" . '<' $@97 type_declaration_no_options '>' $@98 '(' use_initializer optional_make_struct_dim_decl ')'

    '<'  shift, and go to state 743


State 555

  794 make_dim_decl: "array" "variant" . '<' $@99 type_declaration_no_options '>' $@100 '(' make_variant_dim ')'

    '<'  shift, and go to state 744


State 556

  798 make_dim_decl: "array" '<' . $@101 type_declaration_no_options '>' $@102 '(' optional_expr_list ')'

    $default  reduce using rule 796 ($@101)

    $@101  go to state 745


State 557

  795 make_dim_decl: "array" '(' . expr_list optional_comma ')'

    "struct"                          shift, and go to state 414
    "class"                           shift, and go to state 415
    "true"                            shift, and go to state 416
    "false"                           shift, and go to state 417
    "new"                             shift, and go to state 418
    "typeinfo"                        shift, and go to state 419
    "type"                            shift, and go to state 420
    "array"                           shift, and go to state 421
    "null"                            shift, and go to state 422
    "table"                           shift, and go to state 423
    "deref"                           shift, and go to state 424
    "cast"                            shift, and go to state 425
    "upcast"                          shift, and go to state 426
    "addr"                            shift, and go to state 427
    "reinterpret"                     shift, and go to state 428
    "unsafe"                          shift, and go to state 429
    "fixed_array"                     shift, and go to state 430
    "default"                         shift, and go to state 431
    "bool"                            shift, and go to state 228
    "void"                            shift, and go to state 229
    "string"                          shift, and go to state 230
    "int"                             shift, and go to state 232
    "int2"                            shift, and go to state 233
    "int3"                            shift, and go to state 234
    "int4"                            shift, and go to state 235
    "uint"                            shift, and go to state 236
    "bitfield"                        shift, and go to state 432
    "uint2"                           shift, and go to state 238
    "uint3"                           shift, and go to state 239
    "uint4"                           shift, and go to state 240
    "float"                           shift, and go to state 241
    "float2"                          shift, and go to state 242
    "float3"                          shift, and go to state 243
    "float4"                          shift, and go to state 244
    "range"                           shift, and go to state 245
    "urange"                          shift, and go to state 246
    "range64"                         shift, and go to state 247
    "urange64"                        shift, and go to state 248
    "int64"                           shift, and go to state 250
    "uint64"                          shift, and go to state 251
    "double"                          shift, and go to state 252
    "int8"                            shift, and go to state 255
    "uint8"                           shift, and go to state 256
    "int16"                           shift, and go to state 257
    "uint16"                          shift, and go to state 258
    "tuple"                           shift, and go to state 433
    "variant"                         shift, and go to state 434
    "generator"                       shift, and go to state 435
    "++"                              shift, and go to state 436
    "--"                              shift, and go to state 437
    "::"                              shift, and go to state 55
    "$$"                              shift, and go to state 438
    "$i"                              shift, and go to state 439
    "$v"                              shift, and go to state 440
    "$b"                              shift, and go to state 441
    "$a"                              shift, and go to state 442
    "$c"                              shift, and go to state 443
    "..."                             shift, and go to state 444
    "integer constant"                shift, and go to state 445
    "long integer constant"           shift, and go to state 446
    "unsigned integer constant"       shift, and go to state 447
    "unsigned long integer constant"  shift, and go to state 448
    "unsigned int8 constant"          shift, and go to state 449
    "floating point constant"         shift, and go to state 450
    "double constant"                 shift, and go to state 451
    "name"                            shift, and go to state 56
    "start of the string"             shift, and go to state 452
    '-'                               shift, and go to state 453
    '+'                               shift, and go to state 454
    '*'                               shift, and go to state 455
    '%'                               shift, and go to state 13
    '~'                               shift, and go to state 456
    '!'                               shift, and go to state 457
    '['                               shift, and go to state 458
    '('                               shift, and go to state 459
    '$'                               shift, and go to state 460
    '@'                               shift, and go to state 461
    '{'                               shift, and go to state 462

    string_builder          go to state 463
    expr_reader             go to state 464
    expr_call_pipe          go to state 465
    name_in_namespace       go to state 466
    expr_new                go to state 467
    expr_cast               go to state 468
    expr_type_decl          go to state 469
    expr_type_info          go to state 470
    expr_list               go to state 746
    block_or_lambda         go to state 471
    expr_full_block         go to state 472
    expr_numeric_const      go to state 473
    expr_named_call         go to state 474
    expr_method_call        go to state 475
    func_addr_expr          go to state 476
    expr_field              go to state 477
    expr_call               go to state 478
    expr                    go to state 590
    expr_generator          go to state 480
    expr_mtag               go to state 481
    basic_type_declaration  go to state 482
    make_decl               go to state 483
    make_struct_decl        go to state 484
    make_tuple_call         go to state 485
    make_dim_decl           go to state 486
    make_table_decl         go to state 487
    array_comprehension     go to state 488


State 558

  807 make_table_decl: "table" '<' . type_declaration_no_options '>' '(' optional_expr_map_tuple_list ')'
  808                | "table" '<' . type_declaration_no_options c_or_s type_declaration_no_options '>' '(' optional_expr_map_tuple_list ')'

    "type"       shift, and go to state 222
    "array"      shift, and go to state 223
    "table"      shift, and go to state 224
    "typedecl"   shift, and go to state 225
    "iterator"   shift, and go to state 226
    "smart_ptr"  shift, and go to state 227
    "bool"       shift, and go to state 228
    "void"       shift, and go to state 229
    "string"     shift, and go to state 230
    "auto"       shift, and go to state 231
    "int"        shift, and go to state 232
    "int2"       shift, and go to state 233
    "int3"       shift, and go to state 234
    "int4"       shift, and go to state 235
    "uint"       shift, and go to state 236
    "bitfield"   shift, and go to state 237
    "uint2"      shift, and go to state 238
    "uint3"      shift, and go to state 239
    "uint4"      shift, and go to state 240
    "float"      shift, and go to state 241
    "float2"     shift, and go to state 242
    "float3"     shift, and go to state 243
    "float4"     shift, and go to state 244
    "range"      shift, and go to state 245
    "urange"     shift, and go to state 246
    "range64"    shift, and go to state 247
    "urange64"   shift, and go to state 248
    "block"      shift, and go to state 249
    "int64"      shift, and go to state 250
    "uint64"     shift, and go to state 251
    "double"     shift, and go to state 252
    "function"   shift, and go to state 253
    "lambda"     shift, and go to state 254
    "int8"       shift, and go to state 255
    "uint8"      shift, and go to state 256
    "int16"      shift, and go to state 257
    "uint16"     shift, and go to state 258
    "tuple"      shift, and go to state 259
    "variant"    shift, and go to state 260
    "::"         shift, and go to state 55
    "$t"         shift, and go to state 261
    "name"       shift, and go to state 56
    '$'          shift, and go to state 262

    name_in_namespace                   go to state 263
    basic_type_declaration              go to state 264
    structure_type_declaration          go to state 265
    auto_type_declaration               go to state 266
    bitfield_type_declaration           go to state 267
    type_declaration_no_options         go to state 747
    type_declaration_no_options_no_dim  go to state 269


State 559

  806 make_table_decl: "table" '(' . expr_map_tuple_list optional_comma ')'

    "struct"                          shift, and go to state 414
    "class"                           shift, and go to state 415
    "true"                            shift, and go to state 416
    "false"                           shift, and go to state 417
    "new"                             shift, and go to state 418
    "typeinfo"                        shift, and go to state 419
    "type"                            shift, and go to state 420
    "array"                           shift, and go to state 421
    "null"                            shift, and go to state 422
    "table"                           shift, and go to state 423
    "deref"                           shift, and go to state 424
    "cast"                            shift, and go to state 425
    "upcast"                          shift, and go to state 426
    "addr"                            shift, and go to state 427
    "reinterpret"                     shift, and go to state 428
    "unsafe"                          shift, and go to state 429
    "fixed_array"                     shift, and go to state 430
    "default"                         shift, and go to state 431
    "bool"                            shift, and go to state 228
    "void"                            shift, and go to state 229
    "string"                          shift, and go to state 230
    "int"                             shift, and go to state 232
    "int2"                            shift, and go to state 233
    "int3"                            shift, and go to state 234
    "int4"                            shift, and go to state 235
    "uint"                            shift, and go to state 236
    "bitfield"                        shift, and go to state 432
    "uint2"                           shift, and go to state 238
    "uint3"                           shift, and go to state 239
    "uint4"                           shift, and go to state 240
    "float"                           shift, and go to state 241
    "float2"                          shift, and go to state 242
    "float3"                          shift, and go to state 243
    "float4"                          shift, and go to state 244
    "range"                           shift, and go to state 245
    "urange"                          shift, and go to state 246
    "range64"                         shift, and go to state 247
    "urange64"                        shift, and go to state 248
    "int64"                           shift, and go to state 250
    "uint64"                          shift, and go to state 251
    "double"                          shift, and go to state 252
    "int8"                            shift, and go to state 255
    "uint8"                           shift, and go to state 256
    "int16"                           shift, and go to state 257
    "uint16"                          shift, and go to state 258
    "tuple"                           shift, and go to state 433
    "variant"                         shift, and go to state 434
    "generator"                       shift, and go to state 435
    "++"                              shift, and go to state 436
    "--"                              shift, and go to state 437
    "::"                              shift, and go to state 55
    "$$"                              shift, and go to state 438
    "$i"                              shift, and go to state 439
    "$v"                              shift, and go to state 440
    "$b"                              shift, and go to state 441
    "$a"                              shift, and go to state 442
    "$c"                              shift, and go to state 443
    "..."                             shift, and go to state 444
    "integer constant"                shift, and go to state 445
    "long integer constant"           shift, and go to state 446
    "unsigned integer constant"       shift, and go to state 447
    "unsigned long integer constant"  shift, and go to state 448
    "unsigned int8 constant"          shift, and go to state 449
    "floating point constant"         shift, and go to state 450
    "double constant"                 shift, and go to state 451
    "name"                            shift, and go to state 56
    "start of the string"             shift, and go to state 452
    '-'                               shift, and go to state 453
    '+'                               shift, and go to state 454
    '*'                               shift, and go to state 455
    '%'                               shift, and go to state 13
    '~'                               shift, and go to state 456
    '!'                               shift, and go to state 457
    '['                               shift, and go to state 458
    '('                               shift, and go to state 459
    '$'                               shift, and go to state 460
    '@'                               shift, and go to state 461
    '{'                               shift, and go to state 462

    string_builder          go to state 463
    expr_reader             go to state 464
    expr_call_pipe          go to state 465
    name_in_namespace       go to state 466
    expr_new                go to state 467
    expr_cast               go to state 468
    expr_type_decl          go to state 469
    expr_type_info          go to state 470
    block_or_lambda         go to state 471
    expr_full_block         go to state 472
    expr_numeric_const      go to state 473
    expr_named_call         go to state 474
    expr_method_call        go to state 475
    func_addr_expr          go to state 476
    expr_field              go to state 477
    expr_call               go to state 478
    expr                    go to state 594
    expr_generator          go to state 480
    expr_mtag               go to state 481
    basic_type_declaration  go to state 482
    make_decl               go to state 483
    make_struct_decl        go to state 484
    make_map_tuple          go to state 595
    make_tuple_call         go to state 485
    make_dim_decl           go to state 486
    expr_map_tuple_list     go to state 748
    make_table_decl         go to state 487
    array_comprehension     go to state 488


State 560

  433 expr: "deref" '(' . expr ')'

    "struct"                          shift, and go to state 414
    "class"                           shift, and go to state 415
    "true"                            shift, and go to state 416
    "false"                           shift, and go to state 417
    "new"                             shift, and go to state 418
    "typeinfo"                        shift, and go to state 419
    "type"                            shift, and go to state 420
    "array"                           shift, and go to state 421
    "null"                            shift, and go to state 422
    "table"                           shift, and go to state 423
    "deref"                           shift, and go to state 424
    "cast"                            shift, and go to state 425
    "upcast"                          shift, and go to state 426
    "addr"                            shift, and go to state 427
    "reinterpret"                     shift, and go to state 428
    "unsafe"                          shift, and go to state 429
    "fixed_array"                     shift, and go to state 430
    "default"                         shift, and go to state 431
    "bool"                            shift, and go to state 228
    "void"                            shift, and go to state 229
    "string"                          shift, and go to state 230
    "int"                             shift, and go to state 232
    "int2"                            shift, and go to state 233
    "int3"                            shift, and go to state 234
    "int4"                            shift, and go to state 235
    "uint"                            shift, and go to state 236
    "bitfield"                        shift, and go to state 432
    "uint2"                           shift, and go to state 238
    "uint3"                           shift, and go to state 239
    "uint4"                           shift, and go to state 240
    "float"                           shift, and go to state 241
    "float2"                          shift, and go to state 242
    "float3"                          shift, and go to state 243
    "float4"                          shift, and go to state 244
    "range"                           shift, and go to state 245
    "urange"                          shift, and go to state 246
    "range64"                         shift, and go to state 247
    "urange64"                        shift, and go to state 248
    "int64"                           shift, and go to state 250
    "uint64"                          shift, and go to state 251
    "double"                          shift, and go to state 252
    "int8"                            shift, and go to state 255
    "uint8"                           shift, and go to state 256
    "int16"                           shift, and go to state 257
    "uint16"                          shift, and go to state 258
    "tuple"                           shift, and go to state 433
    "variant"                         shift, and go to state 434
    "generator"                       shift, and go to state 435
    "++"                              shift, and go to state 436
    "--"                              shift, and go to state 437
    "::"                              shift, and go to state 55
    "$$"                              shift, and go to state 438
    "$i"                              shift, and go to state 439
    "$v"                              shift, and go to state 440
    "$b"                              shift, and go to state 441
    "$a"                              shift, and go to state 442
    "$c"                              shift, and go to state 443
    "..."                             shift, and go to state 444
    "integer constant"                shift, and go to state 445
    "long integer constant"           shift, and go to state 446
    "unsigned integer constant"       shift, and go to state 447
    "unsigned long integer constant"  shift, and go to state 448
    "unsigned int8 constant"          shift, and go to state 449
    "floating point constant"         shift, and go to state 450
    "double constant"                 shift, and go to state 451
    "name"                            shift, and go to state 56
    "start of the string"             shift, and go to state 452
    '-'                               shift, and go to state 453
    '+'                               shift, and go to state 454
    '*'                               shift, and go to state 455
    '%'                               shift, and go to state 13
    '~'                               shift, and go to state 456
    '!'                               shift, and go to state 457
    '['                               shift, and go to state 458
    '('                               shift, and go to state 459
    '$'                               shift, and go to state 460
    '@'                               shift, and go to state 461
    '{'                               shift, and go to state 462

    string_builder          go to state 463
    expr_reader             go to state 464
    expr_call_pipe          go to state 465
    name_in_namespace       go to state 466
    expr_new                go to state 467
    expr_cast               go to state 468
    expr_type_decl          go to state 469
    expr_type_info          go to state 470
    block_or_lambda         go to state 471
    expr_full_block         go to state 472
    expr_numeric_const      go to state 473
    expr_named_call         go to state 474
    expr_method_call        go to state 475
    func_addr_expr          go to state 476
    expr_field              go to state 477
    expr_call               go to state 478
    expr                    go to state 749
    expr_generator          go to state 480
    expr_mtag               go to state 481
    basic_type_declaration  go to state 482
    make_decl               go to state 483
    make_struct_decl        go to state 484
    make_tuple_call         go to state 485
    make_dim_decl           go to state 486
    make_table_decl         go to state 487
    array_comprehension     go to state 488


State 561

  295 expr_cast: "cast" '<' . $@13 type_declaration_no_options '>' $@14 expr

    $default  reduce using rule 293 ($@13)

    $@13  go to state 750


State 562

  298 expr_cast: "upcast" '<' . $@15 type_declaration_no_options '>' $@16 expr

    $default  reduce using rule 296 ($@15)

    $@15  go to state 751


State 563

  434 expr: "addr" '(' . expr ')'

    "struct"                          shift, and go to state 414
    "class"                           shift, and go to state 415
    "true"                            shift, and go to state 416
    "false"                           shift, and go to state 417
    "new"                             shift, and go to state 418
    "typeinfo"                        shift, and go to state 419
    "type"                            shift, and go to state 420
    "array"                           shift, and go to state 421
    "null"                            shift, and go to state 422
    "table"                           shift, and go to state 423
    "deref"                           shift, and go to state 424
    "cast"                            shift, and go to state 425
    "upcast"                          shift, and go to state 426
    "addr"                            shift, and go to state 427
    "reinterpret"                     shift, and go to state 428
    "unsafe"                          shift, and go to state 429
    "fixed_array"                     shift, and go to state 430
    "default"                         shift, and go to state 431
    "bool"                            shift, and go to state 228
    "void"                            shift, and go to state 229
    "string"                          shift, and go to state 230
    "int"                             shift, and go to state 232
    "int2"                            shift, and go to state 233
    "int3"                            shift, and go to state 234
    "int4"                            shift, and go to state 235
    "uint"                            shift, and go to state 236
    "bitfield"                        shift, and go to state 432
    "uint2"                           shift, and go to state 238
    "uint3"                           shift, and go to state 239
    "uint4"                           shift, and go to state 240
    "float"                           shift, and go to state 241
    "float2"                          shift, and go to state 242
    "float3"                          shift, and go to state 243
    "float4"                          shift, and go to state 244
    "range"                           shift, and go to state 245
    "urange"                          shift, and go to state 246
    "range64"                         shift, and go to state 247
    "urange64"                        shift, and go to state 248
    "int64"                           shift, and go to state 250
    "uint64"                          shift, and go to state 251
    "double"                          shift, and go to state 252
    "int8"                            shift, and go to state 255
    "uint8"                           shift, and go to state 256
    "int16"                           shift, and go to state 257
    "uint16"                          shift, and go to state 258
    "tuple"                           shift, and go to state 433
    "variant"                         shift, and go to state 434
    "generator"                       shift, and go to state 435
    "++"                              shift, and go to state 436
    "--"                              shift, and go to state 437
    "::"                              shift, and go to state 55
    "$$"                              shift, and go to state 438
    "$i"                              shift, and go to state 439
    "$v"                              shift, and go to state 440
    "$b"                              shift, and go to state 441
    "$a"                              shift, and go to state 442
    "$c"                              shift, and go to state 443
    "..."                             shift, and go to state 444
    "integer constant"                shift, and go to state 445
    "long integer constant"           shift, and go to state 446
    "unsigned integer constant"       shift, and go to state 447
    "unsigned long integer constant"  shift, and go to state 448
    "unsigned int8 constant"          shift, and go to state 449
    "floating point constant"         shift, and go to state 450
    "double constant"                 shift, and go to state 451
    "name"                            shift, and go to state 56
    "start of the string"             shift, and go to state 452
    '-'                               shift, and go to state 453
    '+'                               shift, and go to state 454
    '*'                               shift, and go to state 455
    '%'                               shift, and go to state 13
    '~'                               shift, and go to state 456
    '!'                               shift, and go to state 457
    '['                               shift, and go to state 458
    '('                               shift, and go to state 459
    '$'                               shift, and go to state 460
    '@'                               shift, and go to state 461
    '{'                               shift, and go to state 462

    string_builder          go to state 463
    expr_reader             go to state 464
    expr_call_pipe          go to state 465
    name_in_namespace       go to state 466
    expr_new                go to state 467
    expr_cast               go to state 468
    expr_type_decl          go to state 469
    expr_type_info          go to state 470
    block_or_lambda         go to state 471
    expr_full_block         go to state 472
    expr_numeric_const      go to state 473
    expr_named_call         go to state 474
    expr_method_call        go to state 475
    func_addr_expr          go to state 476
    expr_field              go to state 477
    expr_call               go to state 478
    expr                    go to state 752
    expr_generator          go to state 480
    expr_mtag               go to state 481
    basic_type_declaration  go to state 482
    make_decl               go to state 483
    make_struct_decl        go to state 484
    make_tuple_call         go to state 485
    make_dim_decl           go to state 486
    make_table_decl         go to state 487
    array_comprehension     go to state 488


State 564

  301 expr_cast: "reinterpret" '<' . $@17 type_declaration_no_options '>' $@18 expr

    $default  reduce using rule 299 ($@17)

    $@17  go to state 753


State 565

  464 expr: "unsafe" '(' . expr ')'

    "struct"                          shift, and go to state 414
    "class"                           shift, and go to state 415
    "true"                            shift, and go to state 416
    "false"                           shift, and go to state 417
    "new"                             shift, and go to state 418
    "typeinfo"                        shift, and go to state 419
    "type"                            shift, and go to state 420
    "array"                           shift, and go to state 421
    "null"                            shift, and go to state 422
    "table"                           shift, and go to state 423
    "deref"                           shift, and go to state 424
    "cast"                            shift, and go to state 425
    "upcast"                          shift, and go to state 426
    "addr"                            shift, and go to state 427
    "reinterpret"                     shift, and go to state 428
    "unsafe"                          shift, and go to state 429
    "fixed_array"                     shift, and go to state 430
    "default"                         shift, and go to state 431
    "bool"                            shift, and go to state 228
    "void"                            shift, and go to state 229
    "string"                          shift, and go to state 230
    "int"                             shift, and go to state 232
    "int2"                            shift, and go to state 233
    "int3"                            shift, and go to state 234
    "int4"                            shift, and go to state 235
    "uint"                            shift, and go to state 236
    "bitfield"                        shift, and go to state 432
    "uint2"                           shift, and go to state 238
    "uint3"                           shift, and go to state 239
    "uint4"                           shift, and go to state 240
    "float"                           shift, and go to state 241
    "float2"                          shift, and go to state 242
    "float3"                          shift, and go to state 243
    "float4"                          shift, and go to state 244
    "range"                           shift, and go to state 245
    "urange"                          shift, and go to state 246
    "range64"                         shift, and go to state 247
    "urange64"                        shift, and go to state 248
    "int64"                           shift, and go to state 250
    "uint64"                          shift, and go to state 251
    "double"                          shift, and go to state 252
    "int8"                            shift, and go to state 255
    "uint8"                           shift, and go to state 256
    "int16"                           shift, and go to state 257
    "uint16"                          shift, and go to state 258
    "tuple"                           shift, and go to state 433
    "variant"                         shift, and go to state 434
    "generator"                       shift, and go to state 435
    "++"                              shift, and go to state 436
    "--"                              shift, and go to state 437
    "::"                              shift, and go to state 55
    "$$"                              shift, and go to state 438
    "$i"                              shift, and go to state 439
    "$v"                              shift, and go to state 440
    "$b"                              shift, and go to state 441
    "$a"                              shift, and go to state 442
    "$c"                              shift, and go to state 443
    "..."                             shift, and go to state 444
    "integer constant"                shift, and go to state 445
    "long integer constant"           shift, and go to state 446
    "unsigned integer constant"       shift, and go to state 447
    "unsigned long integer constant"  shift, and go to state 448
    "unsigned int8 constant"          shift, and go to state 449
    "floating point constant"         shift, and go to state 450
    "double constant"                 shift, and go to state 451
    "name"                            shift, and go to state 56
    "start of the string"             shift, and go to state 452
    '-'                               shift, and go to state 453
    '+'                               shift, and go to state 454
    '*'                               shift, and go to state 455
    '%'                               shift, and go to state 13
    '~'                               shift, and go to state 456
    '!'                               shift, and go to state 457
    '['                               shift, and go to state 458
    '('                               shift, and go to state 459
    '$'                               shift, and go to state 460
    '@'                               shift, and go to state 461
    '{'                               shift, and go to state 462

    string_builder          go to state 463
    expr_reader             go to state 464
    expr_call_pipe          go to state 465
    name_in_namespace       go to state 466
    expr_new                go to state 467
    expr_cast               go to state 468
    expr_type_decl          go to state 469
    expr_type_info          go to state 470
    block_or_lambda         go to state 471
    expr_full_block         go to state 472
    expr_numeric_const      go to state 473
    expr_named_call         go to state 474
    expr_method_call        go to state 475
    func_addr_expr          go to state 476
    expr_field              go to state 477
    expr_call               go to state 478
    expr                    go to state 754
    expr_generator          go to state 480
    expr_mtag               go to state 481
    basic_type_declaration  go to state 482
    make_decl               go to state 483
    make_struct_decl        go to state 484
    make_tuple_call         go to state 485
    make_dim_decl           go to state 486
    make_table_decl         go to state 487
    array_comprehension     go to state 488


State 566

  802 make_dim_decl: "fixed_array" '<' . $@103 type_declaration_no_options '>' $@104 '(' expr_list optional_comma ')'

    $default  reduce using rule 800 ($@103)

    $@103  go to state 755


State 567

  799 make_dim_decl: "fixed_array" '(' . expr_list optional_comma ')'

    "struct"                          shift, and go to state 414
    "class"                           shift, and go to state 415
    "true"                            shift, and go to state 416
    "false"                           shift, and go to state 417
    "new"                             shift, and go to state 418
    "typeinfo"                        shift, and go to state 419
    "type"                            shift, and go to state 420
    "array"                           shift, and go to state 421
    "null"                            shift, and go to state 422
    "table"                           shift, and go to state 423
    "deref"                           shift, and go to state 424
    "cast"                            shift, and go to state 425
    "upcast"                          shift, and go to state 426
    "addr"                            shift, and go to state 427
    "reinterpret"                     shift, and go to state 428
    "unsafe"                          shift, and go to state 429
    "fixed_array"                     shift, and go to state 430
    "default"                         shift, and go to state 431
    "bool"                            shift, and go to state 228
    "void"                            shift, and go to state 229
    "string"                          shift, and go to state 230
    "int"                             shift, and go to state 232
    "int2"                            shift, and go to state 233
    "int3"                            shift, and go to state 234
    "int4"                            shift, and go to state 235
    "uint"                            shift, and go to state 236
    "bitfield"                        shift, and go to state 432
    "uint2"                           shift, and go to state 238
    "uint3"                           shift, and go to state 239
    "uint4"                           shift, and go to state 240
    "float"                           shift, and go to state 241
    "float2"                          shift, and go to state 242
    "float3"                          shift, and go to state 243
    "float4"                          shift, and go to state 244
    "range"                           shift, and go to state 245
    "urange"                          shift, and go to state 246
    "range64"                         shift, and go to state 247
    "urange64"                        shift, and go to state 248
    "int64"                           shift, and go to state 250
    "uint64"                          shift, and go to state 251
    "double"                          shift, and go to state 252
    "int8"                            shift, and go to state 255
    "uint8"                           shift, and go to state 256
    "int16"                           shift, and go to state 257
    "uint16"                          shift, and go to state 258
    "tuple"                           shift, and go to state 433
    "variant"                         shift, and go to state 434
    "generator"                       shift, and go to state 435
    "++"                              shift, and go to state 436
    "--"                              shift, and go to state 437
    "::"                              shift, and go to state 55
    "$$"                              shift, and go to state 438
    "$i"                              shift, and go to state 439
    "$v"                              shift, and go to state 440
    "$b"                              shift, and go to state 441
    "$a"                              shift, and go to state 442
    "$c"                              shift, and go to state 443
    "..."                             shift, and go to state 444
    "integer constant"                shift, and go to state 445
    "long integer constant"           shift, and go to state 446
    "unsigned integer constant"       shift, and go to state 447
    "unsigned long integer constant"  shift, and go to state 448
    "unsigned int8 constant"          shift, and go to state 449
    "floating point constant"         shift, and go to state 450
    "double constant"                 shift, and go to state 451
    "name"                            shift, and go to state 56
    "start of the string"             shift, and go to state 452
    '-'                               shift, and go to state 453
    '+'                               shift, and go to state 454
    '*'                               shift, and go to state 455
    '%'                               shift, and go to state 13
    '~'                               shift, and go to state 456
    '!'                               shift, and go to state 457
    '['                               shift, and go to state 458
    '('                               shift, and go to state 459
    '$'                               shift, and go to state 460
    '@'                               shift, and go to state 461
    '{'                               shift, and go to state 462

    string_builder          go to state 463
    expr_reader             go to state 464
    expr_call_pipe          go to state 465
    name_in_namespace       go to state 466
    expr_new                go to state 467
    expr_cast               go to state 468
    expr_type_decl          go to state 469
    expr_type_info          go to state 470
    expr_list               go to state 756
    block_or_lambda         go to state 471
    expr_full_block         go to state 472
    expr_numeric_const      go to state 473
    expr_named_call         go to state 474
    expr_method_call        go to state 475
    func_addr_expr          go to state 476
    expr_field              go to state 477
    expr_call               go to state 478
    expr                    go to state 590
    expr_generator          go to state 480
    expr_mtag               go to state 481
    basic_type_declaration  go to state 482
    make_decl               go to state 483
    make_struct_decl        go to state 484
    make_tuple_call         go to state 485
    make_dim_decl           go to state 486
    make_table_decl         go to state 487
    array_comprehension     go to state 488


State 568

  778 make_struct_decl: "default" '<' . $@91 type_declaration_no_options '>' $@92 use_initializer

    $default  reduce using rule 776 ($@91)

    $@91  go to state 757


State 569

  784 make_tuple_call: "tuple" '<' . $@93 type_declaration_no_options '>' $@94 '(' use_initializer optional_make_struct_dim_decl ')'

    $default  reduce using rule 782 ($@93)

    $@93  go to state 758


State 570

  781 make_tuple_call: "tuple" '(' . expr_list optional_comma ')'

    "struct"                          shift, and go to state 414
    "class"                           shift, and go to state 415
    "true"                            shift, and go to state 416
    "false"                           shift, and go to state 417
    "new"                             shift, and go to state 418
    "typeinfo"                        shift, and go to state 419
    "type"                            shift, and go to state 420
    "array"                           shift, and go to state 421
    "null"                            shift, and go to state 422
    "table"                           shift, and go to state 423
    "deref"                           shift, and go to state 424
    "cast"                            shift, and go to state 425
    "upcast"                          shift, and go to state 426
    "addr"                            shift, and go to state 427
    "reinterpret"                     shift, and go to state 428
    "unsafe"                          shift, and go to state 429
    "fixed_array"                     shift, and go to state 430
    "default"                         shift, and go to state 431
    "bool"                            shift, and go to state 228
    "void"                            shift, and go to state 229
    "string"                          shift, and go to state 230
    "int"                             shift, and go to state 232
    "int2"                            shift, and go to state 233
    "int3"                            shift, and go to state 234
    "int4"                            shift, and go to state 235
    "uint"                            shift, and go to state 236
    "bitfield"                        shift, and go to state 432
    "uint2"                           shift, and go to state 238
    "uint3"                           shift, and go to state 239
    "uint4"                           shift, and go to state 240
    "float"                           shift, and go to state 241
    "float2"                          shift, and go to state 242
    "float3"                          shift, and go to state 243
    "float4"                          shift, and go to state 244
    "range"                           shift, and go to state 245
    "urange"                          shift, and go to state 246
    "range64"                         shift, and go to state 247
    "urange64"                        shift, and go to state 248
    "int64"                           shift, and go to state 250
    "uint64"                          shift, and go to state 251
    "double"                          shift, and go to state 252
    "int8"                            shift, and go to state 255
    "uint8"                           shift, and go to state 256
    "int16"                           shift, and go to state 257
    "uint16"                          shift, and go to state 258
    "tuple"                           shift, and go to state 433
    "variant"                         shift, and go to state 434
    "generator"                       shift, and go to state 435
    "++"                              shift, and go to state 436
    "--"                              shift, and go to state 437
    "::"                              shift, and go to state 55
    "$$"                              shift, and go to state 438
    "$i"                              shift, and go to state 439
    "$v"                              shift, and go to state 440
    "$b"                              shift, and go to state 441
    "$a"                              shift, and go to state 442
    "$c"                              shift, and go to state 443
    "..."                             shift, and go to state 444
    "integer constant"                shift, and go to state 445
    "long integer constant"           shift, and go to state 446
    "unsigned integer constant"       shift, and go to state 447
    "unsigned long integer constant"  shift, and go to state 448
    "unsigned int8 constant"          shift, and go to state 449
    "floating point constant"         shift, and go to state 450
    "double constant"                 shift, and go to state 451
    "name"                            shift, and go to state 56
    "start of the string"             shift, and go to state 452
    '-'                               shift, and go to state 453
    '+'                               shift, and go to state 454
    '*'                               shift, and go to state 455
    '%'                               shift, and go to state 13
    '~'                               shift, and go to state 456
    '!'                               shift, and go to state 457
    '['                               shift, and go to state 458
    '('                               shift, and go to state 459
    '$'                               shift, and go to state 460
    '@'                               shift, and go to state 461
    '{'                               shift, and go to state 462

    string_builder          go to state 463
    expr_reader             go to state 464
    expr_call_pipe          go to state 465
    name_in_namespace       go to state 466
    expr_new                go to state 467
    expr_cast               go to state 468
    expr_type_decl          go to state 469
    expr_type_info          go to state 470
    expr_list               go to state 759
    block_or_lambda         go to state 471
    expr_full_block         go to state 472
    expr_numeric_const      go to state 473
    expr_named_call         go to state 474
    expr_method_call        go to state 475
    func_addr_expr          go to state 476
    expr_field              go to state 477
    expr_call               go to state 478
    expr                    go to state 590
    expr_generator          go to state 480
    expr_mtag               go to state 481
    basic_type_declaration  go to state 482
    make_decl               go to state 483
    make_struct_decl        go to state 484
    make_tuple_call         go to state 485
    make_dim_decl           go to state 486
    make_table_decl         go to state 487
    array_comprehension     go to state 488


State 571

  775 make_struct_decl: "variant" '<' . $@89 type_declaration_no_options '>' $@90 '(' make_variant_dim ')'

    $default  reduce using rule 773 ($@89)

    $@89  go to state 760


State 572

  465 expr_generator: "generator" '<' . type_declaration_no_options '>' optional_capture_list '(' ')'
  466               | "generator" '<' . type_declaration_no_options '>' optional_capture_list '(' expr ')'
  467               | "generator" '<' . type_declaration_no_options '>' optional_capture_list optional_semis expression_block

    "type"       shift, and go to state 222
    "array"      shift, and go to state 223
    "table"      shift, and go to state 224
    "typedecl"   shift, and go to state 225
    "iterator"   shift, and go to state 226
    "smart_ptr"  shift, and go to state 227
    "bool"       shift, and go to state 228
    "void"       shift, and go to state 229
    "string"     shift, and go to state 230
    "auto"       shift, and go to state 231
    "int"        shift, and go to state 232
    "int2"       shift, and go to state 233
    "int3"       shift, and go to state 234
    "int4"       shift, and go to state 235
    "uint"       shift, and go to state 236
    "bitfield"   shift, and go to state 237
    "uint2"      shift, and go to state 238
    "uint3"      shift, and go to state 239
    "uint4"      shift, and go to state 240
    "float"      shift, and go to state 241
    "float2"     shift, and go to state 242
    "float3"     shift, and go to state 243
    "float4"     shift, and go to state 244
    "range"      shift, and go to state 245
    "urange"     shift, and go to state 246
    "range64"    shift, and go to state 247
    "urange64"   shift, and go to state 248
    "block"      shift, and go to state 249
    "int64"      shift, and go to state 250
    "uint64"     shift, and go to state 251
    "double"     shift, and go to state 252
    "function"   shift, and go to state 253
    "lambda"     shift, and go to state 254
    "int8"       shift, and go to state 255
    "uint8"      shift, and go to state 256
    "int16"      shift, and go to state 257
    "uint16"     shift, and go to state 258
    "tuple"      shift, and go to state 259
    "variant"    shift, and go to state 260
    "::"         shift, and go to state 55
    "$t"         shift, and go to state 261
    "name"       shift, and go to state 56
    '$'          shift, and go to state 262

    name_in_namespace                   go to state 263
    basic_type_declaration              go to state 264
    structure_type_declaration          go to state 265
    auto_type_declaration               go to state 266
    bitfield_type_declaration           go to state 267
    type_declaration_no_options         go to state 761
    type_declaration_no_options_no_dim  go to state 269


State 573

  356 expr_method_call: expr . "->" "name" '(' ')'
  357                 | expr . "->" "name" '(' expr_list ')'
  367 expr_field: expr . '.' "name"
  368           | expr . '.' '.' "name"
  369           | expr . '.' "name" '(' ')'
  370           | expr . '.' "name" '(' expr_list ')'
  371           | expr . '.' basic_type_declaration '(' ')'
  372           | expr . '.' basic_type_declaration '(' expr_list ')'
  375           | expr . '.' $@25 error $@26
  397 expr: expr . "<<" expr
  398     | expr . ">>" expr
  399     | expr . "<<<" expr
  400     | expr . ">>>" expr
  401     | expr . '+' expr
  402     | expr . '-' expr
  403     | expr . '*' expr
  404     | expr . '/' expr
  405     | expr . '%' expr
  406     | expr . '<' expr
  407     | expr . '>' expr
  408     | expr . "==" expr
  409     | expr . "!=" expr
  410     | expr . "<=" expr
  411     | expr . ">=" expr
  412     | expr . '&' expr
  413     | expr . '|' expr
  414     | expr . '^' expr
  415     | expr . "&&" expr
  416     | expr . "||" expr
  417     | expr . "^^" expr
  418     | expr . ".." expr
  419     | "++" expr .
  421     | expr . "++"
  422     | expr . "--"
  424     | expr . '[' expr ']'
  425     | expr . '.' '[' expr ']'
  426     | expr . "?[" expr ']'
  427     | expr . '.' "?[" expr ']'
  428     | expr . "?." "name"
  429     | expr . '.' "?." "name"
  436     | expr . "??" expr
  437     | expr . '?' expr ':' expr
  440     | expr . "is" "type" '<' $@27 type_declaration_no_options '>' $@28
  441     | expr . "is" basic_type_declaration
  442     | expr . "is" "name"
  443     | expr . "as" "name"
  446     | expr . "as" "type" '<' $@29 type_declaration '>' $@30
  447     | expr . "as" basic_type_declaration
  448     | expr . '?' "as" "name"
  451     | expr . '?' "as" "type" '<' $@31 type_declaration '>' $@32
  452     | expr . '?' "as" basic_type_declaration
  460     | expr . "<|" expr
  461     | expr . "|>" expr
  462     | expr . "|>" basic_type_declaration
  476 expr_mtag: expr . '.' "$f" '(' expr ')'
  477          | expr . "?." "$f" '(' expr ')'
  478          | expr . '.' '.' "$f" '(' expr ')'
  479          | expr . '.' "?." "$f" '(' expr ')'
  480          | expr . "as" "$f" '(' expr ')'
  481          | expr . '?' "as" "$f" '(' expr ')'
  482          | expr . "is" "$f" '(' expr ')'

    "is"  shift, and go to state 603
    "as"  shift, and go to state 604
    "++"  shift, and go to state 607
    "--"  shift, and go to state 608
    "->"  shift, and go to state 613
    "?."  shift, and go to state 615
    "?["  shift, and go to state 616
    "<|"  shift, and go to state 617
    "|>"  shift, and go to state 618
    '.'   shift, and go to state 636
    '['   shift, and go to state 637

    $default  reduce using rule 419 (expr)


State 574

  356 expr_method_call: expr . "->" "name" '(' ')'
  357                 | expr . "->" "name" '(' expr_list ')'
  367 expr_field: expr . '.' "name"
  368           | expr . '.' '.' "name"
  369           | expr . '.' "name" '(' ')'
  370           | expr . '.' "name" '(' expr_list ')'
  371           | expr . '.' basic_type_declaration '(' ')'
  372           | expr . '.' basic_type_declaration '(' expr_list ')'
  375           | expr . '.' $@25 error $@26
  397 expr: expr . "<<" expr
  398     | expr . ">>" expr
  399     | expr . "<<<" expr
  400     | expr . ">>>" expr
  401     | expr . '+' expr
  402     | expr . '-' expr
  403     | expr . '*' expr
  404     | expr . '/' expr
  405     | expr . '%' expr
  406     | expr . '<' expr
  407     | expr . '>' expr
  408     | expr . "==" expr
  409     | expr . "!=" expr
  410     | expr . "<=" expr
  411     | expr . ">=" expr
  412     | expr . '&' expr
  413     | expr . '|' expr
  414     | expr . '^' expr
  415     | expr . "&&" expr
  416     | expr . "||" expr
  417     | expr . "^^" expr
  418     | expr . ".." expr
  420     | "--" expr .
  421     | expr . "++"
  422     | expr . "--"
  424     | expr . '[' expr ']'
  425     | expr . '.' '[' expr ']'
  426     | expr . "?[" expr ']'
  427     | expr . '.' "?[" expr ']'
  428     | expr . "?." "name"
  429     | expr . '.' "?." "name"
  436     | expr . "??" expr
  437     | expr . '?' expr ':' expr
  440     | expr . "is" "type" '<' $@27 type_declaration_no_options '>' $@28
  441     | expr . "is" basic_type_declaration
  442     | expr . "is" "name"
  443     | expr . "as" "name"
  446     | expr . "as" "type" '<' $@29 type_declaration '>' $@30
  447     | expr . "as" basic_type_declaration
  448     | expr . '?' "as" "name"
  451     | expr . '?' "as" "type" '<' $@31 type_declaration '>' $@32
  452     | expr . '?' "as" basic_type_declaration
  460     | expr . "<|" expr
  461     | expr . "|>" expr
  462     | expr . "|>" basic_type_declaration
  476 expr_mtag: expr . '.' "$f" '(' expr ')'
  477          | expr . "?." "$f" '(' expr ')'
  478          | expr . '.' '.' "$f" '(' expr ')'
  479          | expr . '.' "?." "$f" '(' expr ')'
  480          | expr . "as" "$f" '(' expr ')'
  481          | expr . '?' "as" "$f" '(' expr ')'
  482          | expr . "is" "$f" '(' expr ')'

    "is"  shift, and go to state 603
    "as"  shift, and go to state 604
    "++"  shift, and go to state 607
    "--"  shift, and go to state 608
    "->"  shift, and go to state 613
    "?."  shift, and go to state 615
    "?["  shift, and go to state 616
    "<|"  shift, and go to state 617
    "|>"  shift, and go to state 618
    '.'   shift, and go to state 636
    '['   shift, and go to state 637

    $default  reduce using rule 420 (expr)


State 575

  468 expr_mtag: "$$" '(' . expr ')'

    "struct"                          shift, and go to state 414
    "class"                           shift, and go to state 415
    "true"                            shift, and go to state 416
    "false"                           shift, and go to state 417
    "new"                             shift, and go to state 418
    "typeinfo"                        shift, and go to state 419
    "type"                            shift, and go to state 420
    "array"                           shift, and go to state 421
    "null"                            shift, and go to state 422
    "table"                           shift, and go to state 423
    "deref"                           shift, and go to state 424
    "cast"                            shift, and go to state 425
    "upcast"                          shift, and go to state 426
    "addr"                            shift, and go to state 427
    "reinterpret"                     shift, and go to state 428
    "unsafe"                          shift, and go to state 429
    "fixed_array"                     shift, and go to state 430
    "default"                         shift, and go to state 431
    "bool"                            shift, and go to state 228
    "void"                            shift, and go to state 229
    "string"                          shift, and go to state 230
    "int"                             shift, and go to state 232
    "int2"                            shift, and go to state 233
    "int3"                            shift, and go to state 234
    "int4"                            shift, and go to state 235
    "uint"                            shift, and go to state 236
    "bitfield"                        shift, and go to state 432
    "uint2"                           shift, and go to state 238
    "uint3"                           shift, and go to state 239
    "uint4"                           shift, and go to state 240
    "float"                           shift, and go to state 241
    "float2"                          shift, and go to state 242
    "float3"                          shift, and go to state 243
    "float4"                          shift, and go to state 244
    "range"                           shift, and go to state 245
    "urange"                          shift, and go to state 246
    "range64"                         shift, and go to state 247
    "urange64"                        shift, and go to state 248
    "int64"                           shift, and go to state 250
    "uint64"                          shift, and go to state 251
    "double"                          shift, and go to state 252
    "int8"                            shift, and go to state 255
    "uint8"                           shift, and go to state 256
    "int16"                           shift, and go to state 257
    "uint16"                          shift, and go to state 258
    "tuple"                           shift, and go to state 433
    "variant"                         shift, and go to state 434
    "generator"                       shift, and go to state 435
    "++"                              shift, and go to state 436
    "--"                              shift, and go to state 437
    "::"                              shift, and go to state 55
    "$$"                              shift, and go to state 438
    "$i"                              shift, and go to state 439
    "$v"                              shift, and go to state 440
    "$b"                              shift, and go to state 441
    "$a"                              shift, and go to state 442
    "$c"                              shift, and go to state 443
    "..."                             shift, and go to state 444
    "integer constant"                shift, and go to state 445
    "long integer constant"           shift, and go to state 446
    "unsigned integer constant"       shift, and go to state 447
    "unsigned long integer constant"  shift, and go to state 448
    "unsigned int8 constant"          shift, and go to state 449
    "floating point constant"         shift, and go to state 450
    "double constant"                 shift, and go to state 451
    "name"                            shift, and go to state 56
    "start of the string"             shift, and go to state 452
    '-'                               shift, and go to state 453
    '+'                               shift, and go to state 454
    '*'                               shift, and go to state 455
    '%'                               shift, and go to state 13
    '~'                               shift, and go to state 456
    '!'                               shift, and go to state 457
    '['                               shift, and go to state 458
    '('                               shift, and go to state 459
    '$'                               shift, and go to state 460
    '@'                               shift, and go to state 461
    '{'                               shift, and go to state 462

    string_builder          go to state 463
    expr_reader             go to state 464
    expr_call_pipe          go to state 465
    name_in_namespace       go to state 466
    expr_new                go to state 467
    expr_cast               go to state 468
    expr_type_decl          go to state 469
    expr_type_info          go to state 470
    block_or_lambda         go to state 471
    expr_full_block         go to state 472
    expr_numeric_const      go to state 473
    expr_named_call         go to state 474
    expr_method_call        go to state 475
    func_addr_expr          go to state 476
    expr_field              go to state 477
    expr_call               go to state 478
    expr                    go to state 762
    expr_generator          go to state 480
    expr_mtag               go to state 481
    basic_type_declaration  go to state 482
    make_decl               go to state 483
    make_struct_decl        go to state 484
    make_tuple_call         go to state 485
    make_dim_decl           go to state 486
    make_table_decl         go to state 487
    array_comprehension     go to state 488


State 576

  469 expr_mtag: "$i" '(' . expr ')'

    "struct"                          shift, and go to state 414
    "class"                           shift, and go to state 415
    "true"                            shift, and go to state 416
    "false"                           shift, and go to state 417
    "new"                             shift, and go to state 418
    "typeinfo"                        shift, and go to state 419
    "type"                            shift, and go to state 420
    "array"                           shift, and go to state 421
    "null"                            shift, and go to state 422
    "table"                           shift, and go to state 423
    "deref"                           shift, and go to state 424
    "cast"                            shift, and go to state 425
    "upcast"                          shift, and go to state 426
    "addr"                            shift, and go to state 427
    "reinterpret"                     shift, and go to state 428
    "unsafe"                          shift, and go to state 429
    "fixed_array"                     shift, and go to state 430
    "default"                         shift, and go to state 431
    "bool"                            shift, and go to state 228
    "void"                            shift, and go to state 229
    "string"                          shift, and go to state 230
    "int"                             shift, and go to state 232
    "int2"                            shift, and go to state 233
    "int3"                            shift, and go to state 234
    "int4"                            shift, and go to state 235
    "uint"                            shift, and go to state 236
    "bitfield"                        shift, and go to state 432
    "uint2"                           shift, and go to state 238
    "uint3"                           shift, and go to state 239
    "uint4"                           shift, and go to state 240
    "float"                           shift, and go to state 241
    "float2"                          shift, and go to state 242
    "float3"                          shift, and go to state 243
    "float4"                          shift, and go to state 244
    "range"                           shift, and go to state 245
    "urange"                          shift, and go to state 246
    "range64"                         shift, and go to state 247
    "urange64"                        shift, and go to state 248
    "int64"                           shift, and go to state 250
    "uint64"                          shift, and go to state 251
    "double"                          shift, and go to state 252
    "int8"                            shift, and go to state 255
    "uint8"                           shift, and go to state 256
    "int16"                           shift, and go to state 257
    "uint16"                          shift, and go to state 258
    "tuple"                           shift, and go to state 433
    "variant"                         shift, and go to state 434
    "generator"                       shift, and go to state 435
    "++"                              shift, and go to state 436
    "--"                              shift, and go to state 437
    "::"                              shift, and go to state 55
    "$$"                              shift, and go to state 438
    "$i"                              shift, and go to state 439
    "$v"                              shift, and go to state 440
    "$b"                              shift, and go to state 441
    "$a"                              shift, and go to state 442
    "$c"                              shift, and go to state 443
    "..."                             shift, and go to state 444
    "integer constant"                shift, and go to state 445
    "long integer constant"           shift, and go to state 446
    "unsigned integer constant"       shift, and go to state 447
    "unsigned long integer constant"  shift, and go to state 448
    "unsigned int8 constant"          shift, and go to state 449
    "floating point constant"         shift, and go to state 450
    "double constant"                 shift, and go to state 451
    "name"                            shift, and go to state 56
    "start of the string"             shift, and go to state 452
    '-'                               shift, and go to state 453
    '+'                               shift, and go to state 454
    '*'                               shift, and go to state 455
    '%'                               shift, and go to state 13
    '~'                               shift, and go to state 456
    '!'                               shift, and go to state 457
    '['                               shift, and go to state 458
    '('                               shift, and go to state 459
    '$'                               shift, and go to state 460
    '@'                               shift, and go to state 461
    '{'                               shift, and go to state 462

    string_builder          go to state 463
    expr_reader             go to state 464
    expr_call_pipe          go to state 465
    name_in_namespace       go to state 466
    expr_new                go to state 467
    expr_cast               go to state 468
    expr_type_decl          go to state 469
    expr_type_info          go to state 470
    block_or_lambda         go to state 471
    expr_full_block         go to state 472
    expr_numeric_const      go to state 473
    expr_named_call         go to state 474
    expr_method_call        go to state 475
    func_addr_expr          go to state 476
    expr_field              go to state 477
    expr_call               go to state 478
    expr                    go to state 763
    expr_generator          go to state 480
    expr_mtag               go to state 481
    basic_type_declaration  go to state 482
    make_decl               go to state 483
    make_struct_decl        go to state 484
    make_tuple_call         go to state 485
    make_dim_decl           go to state 486
    make_table_decl         go to state 487
    array_comprehension     go to state 488


State 577

  470 expr_mtag: "$v" '(' . expr ')'

    "struct"                          shift, and go to state 414
    "class"                           shift, and go to state 415
    "true"                            shift, and go to state 416
    "false"                           shift, and go to state 417
    "new"                             shift, and go to state 418
    "typeinfo"                        shift, and go to state 419
    "type"                            shift, and go to state 420
    "array"                           shift, and go to state 421
    "null"                            shift, and go to state 422
    "table"                           shift, and go to state 423
    "deref"                           shift, and go to state 424
    "cast"                            shift, and go to state 425
    "upcast"                          shift, and go to state 426
    "addr"                            shift, and go to state 427
    "reinterpret"                     shift, and go to state 428
    "unsafe"                          shift, and go to state 429
    "fixed_array"                     shift, and go to state 430
    "default"                         shift, and go to state 431
    "bool"                            shift, and go to state 228
    "void"                            shift, and go to state 229
    "string"                          shift, and go to state 230
    "int"                             shift, and go to state 232
    "int2"                            shift, and go to state 233
    "int3"                            shift, and go to state 234
    "int4"                            shift, and go to state 235
    "uint"                            shift, and go to state 236
    "bitfield"                        shift, and go to state 432
    "uint2"                           shift, and go to state 238
    "uint3"                           shift, and go to state 239
    "uint4"                           shift, and go to state 240
    "float"                           shift, and go to state 241
    "float2"                          shift, and go to state 242
    "float3"                          shift, and go to state 243
    "float4"                          shift, and go to state 244
    "range"                           shift, and go to state 245
    "urange"                          shift, and go to state 246
    "range64"                         shift, and go to state 247
    "urange64"                        shift, and go to state 248
    "int64"                           shift, and go to state 250
    "uint64"                          shift, and go to state 251
    "double"                          shift, and go to state 252
    "int8"                            shift, and go to state 255
    "uint8"                           shift, and go to state 256
    "int16"                           shift, and go to state 257
    "uint16"                          shift, and go to state 258
    "tuple"                           shift, and go to state 433
    "variant"                         shift, and go to state 434
    "generator"                       shift, and go to state 435
    "++"                              shift, and go to state 436
    "--"                              shift, and go to state 437
    "::"                              shift, and go to state 55
    "$$"                              shift, and go to state 438
    "$i"                              shift, and go to state 439
    "$v"                              shift, and go to state 440
    "$b"                              shift, and go to state 441
    "$a"                              shift, and go to state 442
    "$c"                              shift, and go to state 443
    "..."                             shift, and go to state 444
    "integer constant"                shift, and go to state 445
    "long integer constant"           shift, and go to state 446
    "unsigned integer constant"       shift, and go to state 447
    "unsigned long integer constant"  shift, and go to state 448
    "unsigned int8 constant"          shift, and go to state 449
    "floating point constant"         shift, and go to state 450
    "double constant"                 shift, and go to state 451
    "name"                            shift, and go to state 56
    "start of the string"             shift, and go to state 452
    '-'                               shift, and go to state 453
    '+'                               shift, and go to state 454
    '*'                               shift, and go to state 455
    '%'                               shift, and go to state 13
    '~'                               shift, and go to state 456
    '!'                               shift, and go to state 457
    '['                               shift, and go to state 458
    '('                               shift, and go to state 459
    '$'                               shift, and go to state 460
    '@'                               shift, and go to state 461
    '{'                               shift, and go to state 462

    string_builder          go to state 463
    expr_reader             go to state 464
    expr_call_pipe          go to state 465
    name_in_namespace       go to state 466
    expr_new                go to state 467
    expr_cast               go to state 468
    expr_type_decl          go to state 469
    expr_type_info          go to state 470
    block_or_lambda         go to state 471
    expr_full_block         go to state 472
    expr_numeric_const      go to state 473
    expr_named_call         go to state 474
    expr_method_call        go to state 475
    func_addr_expr          go to state 476
    expr_field              go to state 477
    expr_call               go to state 478
    expr                    go to state 764
    expr_generator          go to state 480
    expr_mtag               go to state 481
    basic_type_declaration  go to state 482
    make_decl               go to state 483
    make_struct_decl        go to state 484
    make_tuple_call         go to state 485
    make_dim_decl           go to state 486
    make_table_decl         go to state 487
    array_comprehension     go to state 488


State 578

  471 expr_mtag: "$b" '(' . expr ')'

    "struct"                          shift, and go to state 414
    "class"                           shift, and go to state 415
    "true"                            shift, and go to state 416
    "false"                           shift, and go to state 417
    "new"                             shift, and go to state 418
    "typeinfo"                        shift, and go to state 419
    "type"                            shift, and go to state 420
    "array"                           shift, and go to state 421
    "null"                            shift, and go to state 422
    "table"                           shift, and go to state 423
    "deref"                           shift, and go to state 424
    "cast"                            shift, and go to state 425
    "upcast"                          shift, and go to state 426
    "addr"                            shift, and go to state 427
    "reinterpret"                     shift, and go to state 428
    "unsafe"                          shift, and go to state 429
    "fixed_array"                     shift, and go to state 430
    "default"                         shift, and go to state 431
    "bool"                            shift, and go to state 228
    "void"                            shift, and go to state 229
    "string"                          shift, and go to state 230
    "int"                             shift, and go to state 232
    "int2"                            shift, and go to state 233
    "int3"                            shift, and go to state 234
    "int4"                            shift, and go to state 235
    "uint"                            shift, and go to state 236
    "bitfield"                        shift, and go to state 432
    "uint2"                           shift, and go to state 238
    "uint3"                           shift, and go to state 239
    "uint4"                           shift, and go to state 240
    "float"                           shift, and go to state 241
    "float2"                          shift, and go to state 242
    "float3"                          shift, and go to state 243
    "float4"                          shift, and go to state 244
    "range"                           shift, and go to state 245
    "urange"                          shift, and go to state 246
    "range64"                         shift, and go to state 247
    "urange64"                        shift, and go to state 248
    "int64"                           shift, and go to state 250
    "uint64"                          shift, and go to state 251
    "double"                          shift, and go to state 252
    "int8"                            shift, and go to state 255
    "uint8"                           shift, and go to state 256
    "int16"                           shift, and go to state 257
    "uint16"                          shift, and go to state 258
    "tuple"                           shift, and go to state 433
    "variant"                         shift, and go to state 434
    "generator"                       shift, and go to state 435
    "++"                              shift, and go to state 436
    "--"                              shift, and go to state 437
    "::"                              shift, and go to state 55
    "$$"                              shift, and go to state 438
    "$i"                              shift, and go to state 439
    "$v"                              shift, and go to state 440
    "$b"                              shift, and go to state 441
    "$a"                              shift, and go to state 442
    "$c"                              shift, and go to state 443
    "..."                             shift, and go to state 444
    "integer constant"                shift, and go to state 445
    "long integer constant"           shift, and go to state 446
    "unsigned integer constant"       shift, and go to state 447
    "unsigned long integer constant"  shift, and go to state 448
    "unsigned int8 constant"          shift, and go to state 449
    "floating point constant"         shift, and go to state 450
    "double constant"                 shift, and go to state 451
    "name"                            shift, and go to state 56
    "start of the string"             shift, and go to state 452
    '-'                               shift, and go to state 453
    '+'                               shift, and go to state 454
    '*'                               shift, and go to state 455
    '%'                               shift, and go to state 13
    '~'                               shift, and go to state 456
    '!'                               shift, and go to state 457
    '['                               shift, and go to state 458
    '('                               shift, and go to state 459
    '$'                               shift, and go to state 460
    '@'                               shift, and go to state 461
    '{'                               shift, and go to state 462

    string_builder          go to state 463
    expr_reader             go to state 464
    expr_call_pipe          go to state 465
    name_in_namespace       go to state 466
    expr_new                go to state 467
    expr_cast               go to state 468
    expr_type_decl          go to state 469
    expr_type_info          go to state 470
    block_or_lambda         go to state 471
    expr_full_block         go to state 472
    expr_numeric_const      go to state 473
    expr_named_call         go to state 474
    expr_method_call        go to state 475
    func_addr_expr          go to state 476
    expr_field              go to state 477
    expr_call               go to state 478
    expr                    go to state 765
    expr_generator          go to state 480
    expr_mtag               go to state 481
    basic_type_declaration  go to state 482
    make_decl               go to state 483
    make_struct_decl        go to state 484
    make_tuple_call         go to state 485
    make_dim_decl           go to state 486
    make_table_decl         go to state 487
    array_comprehension     go to state 488


State 579

  472 expr_mtag: "$a" '(' . expr ')'

    "struct"                          shift, and go to state 414
    "class"                           shift, and go to state 415
    "true"                            shift, and go to state 416
    "false"                           shift, and go to state 417
    "new"                             shift, and go to state 418
    "typeinfo"                        shift, and go to state 419
    "type"                            shift, and go to state 420
    "array"                           shift, and go to state 421
    "null"                            shift, and go to state 422
    "table"                           shift, and go to state 423
    "deref"                           shift, and go to state 424
    "cast"                            shift, and go to state 425
    "upcast"                          shift, and go to state 426
    "addr"                            shift, and go to state 427
    "reinterpret"                     shift, and go to state 428
    "unsafe"                          shift, and go to state 429
    "fixed_array"                     shift, and go to state 430
    "default"                         shift, and go to state 431
    "bool"                            shift, and go to state 228
    "void"                            shift, and go to state 229
    "string"                          shift, and go to state 230
    "int"                             shift, and go to state 232
    "int2"                            shift, and go to state 233
    "int3"                            shift, and go to state 234
    "int4"                            shift, and go to state 235
    "uint"                            shift, and go to state 236
    "bitfield"                        shift, and go to state 432
    "uint2"                           shift, and go to state 238
    "uint3"                           shift, and go to state 239
    "uint4"                           shift, and go to state 240
    "float"                           shift, and go to state 241
    "float2"                          shift, and go to state 242
    "float3"                          shift, and go to state 243
    "float4"                          shift, and go to state 244
    "range"                           shift, and go to state 245
    "urange"                          shift, and go to state 246
    "range64"                         shift, and go to state 247
    "urange64"                        shift, and go to state 248
    "int64"                           shift, and go to state 250
    "uint64"                          shift, and go to state 251
    "double"                          shift, and go to state 252
    "int8"                            shift, and go to state 255
    "uint8"                           shift, and go to state 256
    "int16"                           shift, and go to state 257
    "uint16"                          shift, and go to state 258
    "tuple"                           shift, and go to state 433
    "variant"                         shift, and go to state 434
    "generator"                       shift, and go to state 435
    "++"                              shift, and go to state 436
    "--"                              shift, and go to state 437
    "::"                              shift, and go to state 55
    "$$"                              shift, and go to state 438
    "$i"                              shift, and go to state 439
    "$v"                              shift, and go to state 440
    "$b"                              shift, and go to state 441
    "$a"                              shift, and go to state 442
    "$c"                              shift, and go to state 443
    "..."                             shift, and go to state 444
    "integer constant"                shift, and go to state 445
    "long integer constant"           shift, and go to state 446
    "unsigned integer constant"       shift, and go to state 447
    "unsigned long integer constant"  shift, and go to state 448
    "unsigned int8 constant"          shift, and go to state 449
    "floating point constant"         shift, and go to state 450
    "double constant"                 shift, and go to state 451
    "name"                            shift, and go to state 56
    "start of the string"             shift, and go to state 452
    '-'                               shift, and go to state 453
    '+'                               shift, and go to state 454
    '*'                               shift, and go to state 455
    '%'                               shift, and go to state 13
    '~'                               shift, and go to state 456
    '!'                               shift, and go to state 457
    '['                               shift, and go to state 458
    '('                               shift, and go to state 459
    '$'                               shift, and go to state 460
    '@'                               shift, and go to state 461
    '{'                               shift, and go to state 462

    string_builder          go to state 463
    expr_reader             go to state 464
    expr_call_pipe          go to state 465
    name_in_namespace       go to state 466
    expr_new                go to state 467
    expr_cast               go to state 468
    expr_type_decl          go to state 469
    expr_type_info          go to state 470
    block_or_lambda         go to state 471
    expr_full_block         go to state 472
    expr_numeric_const      go to state 473
    expr_named_call         go to state 474
    expr_method_call        go to state 475
    func_addr_expr          go to state 476
    expr_field              go to state 477
    expr_call               go to state 478
    expr                    go to state 766
    expr_generator          go to state 480
    expr_mtag               go to state 481
    basic_type_declaration  go to state 482
    make_decl               go to state 483
    make_struct_decl        go to state 484
    make_tuple_call         go to state 485
    make_dim_decl           go to state 486
    make_table_decl         go to state 487
    array_comprehension     go to state 488


State 580

  474 expr_mtag: "$c" '(' . expr ')' '(' ')'
  475          | "$c" '(' . expr ')' '(' expr_list ')'

    "struct"                          shift, and go to state 414
    "class"                           shift, and go to state 415
    "true"                            shift, and go to state 416
    "false"                           shift, and go to state 417
    "new"                             shift, and go to state 418
    "typeinfo"                        shift, and go to state 419
    "type"                            shift, and go to state 420
    "array"                           shift, and go to state 421
    "null"                            shift, and go to state 422
    "table"                           shift, and go to state 423
    "deref"                           shift, and go to state 424
    "cast"                            shift, and go to state 425
    "upcast"                          shift, and go to state 426
    "addr"                            shift, and go to state 427
    "reinterpret"                     shift, and go to state 428
    "unsafe"                          shift, and go to state 429
    "fixed_array"                     shift, and go to state 430
    "default"                         shift, and go to state 431
    "bool"                            shift, and go to state 228
    "void"                            shift, and go to state 229
    "string"                          shift, and go to state 230
    "int"                             shift, and go to state 232
    "int2"                            shift, and go to state 233
    "int3"                            shift, and go to state 234
    "int4"                            shift, and go to state 235
    "uint"                            shift, and go to state 236
    "bitfield"                        shift, and go to state 432
    "uint2"                           shift, and go to state 238
    "uint3"                           shift, and go to state 239
    "uint4"                           shift, and go to state 240
    "float"                           shift, and go to state 241
    "float2"                          shift, and go to state 242
    "float3"                          shift, and go to state 243
    "float4"                          shift, and go to state 244
    "range"                           shift, and go to state 245
    "urange"                          shift, and go to state 246
    "range64"                         shift, and go to state 247
    "urange64"                        shift, and go to state 248
    "int64"                           shift, and go to state 250
    "uint64"                          shift, and go to state 251
    "double"                          shift, and go to state 252
    "int8"                            shift, and go to state 255
    "uint8"                           shift, and go to state 256
    "int16"                           shift, and go to state 257
    "uint16"                          shift, and go to state 258
    "tuple"                           shift, and go to state 433
    "variant"                         shift, and go to state 434
    "generator"                       shift, and go to state 435
    "++"                              shift, and go to state 436
    "--"                              shift, and go to state 437
    "::"                              shift, and go to state 55
    "$$"                              shift, and go to state 438
    "$i"                              shift, and go to state 439
    "$v"                              shift, and go to state 440
    "$b"                              shift, and go to state 441
    "$a"                              shift, and go to state 442
    "$c"                              shift, and go to state 443
    "..."                             shift, and go to state 444
    "integer constant"                shift, and go to state 445
    "long integer constant"           shift, and go to state 446
    "unsigned integer constant"       shift, and go to state 447
    "unsigned long integer constant"  shift, and go to state 448
    "unsigned int8 constant"          shift, and go to state 449
    "floating point constant"         shift, and go to state 450
    "double constant"                 shift, and go to state 451
    "name"                            shift, and go to state 56
    "start of the string"             shift, and go to state 452
    '-'                               shift, and go to state 453
    '+'                               shift, and go to state 454
    '*'                               shift, and go to state 455
    '%'                               shift, and go to state 13
    '~'                               shift, and go to state 456
    '!'                               shift, and go to state 457
    '['                               shift, and go to state 458
    '('                               shift, and go to state 459
    '$'                               shift, and go to state 460
    '@'                               shift, and go to state 461
    '{'                               shift, and go to state 462

    string_builder          go to state 463
    expr_reader             go to state 464
    expr_call_pipe          go to state 465
    name_in_namespace       go to state 466
    expr_new                go to state 467
    expr_cast               go to state 468
    expr_type_decl          go to state 469
    expr_type_info          go to state 470
    block_or_lambda         go to state 471
    expr_full_block         go to state 472
    expr_numeric_const      go to state 473
    expr_named_call         go to state 474
    expr_method_call        go to state 475
    func_addr_expr          go to state 476
    expr_field              go to state 477
    expr_call               go to state 478
    expr                    go to state 767
    expr_generator          go to state 480
    expr_mtag               go to state 481
    basic_type_declaration  go to state 482
    make_decl               go to state 483
    make_struct_decl        go to state 484
    make_tuple_call         go to state 485
    make_dim_decl           go to state 486
    make_table_decl         go to state 487
    array_comprehension     go to state 488


State 581

   30 string_builder_body: string_builder_body . character_sequence
   31                    | string_builder_body . "{" expr "}"
   32 string_builder: "start of the string" string_builder_body . "end of the string"

    STRING_CHARACTER      shift, and go to state 154
    STRING_CHARACTER_ESC  shift, and go to state 155
    "end of the string"   shift, and go to state 768
    "{"                   shift, and go to state 769

    character_sequence  go to state 770


State 582

  356 expr_method_call: expr . "->" "name" '(' ')'
  357                 | expr . "->" "name" '(' expr_list ')'
  367 expr_field: expr . '.' "name"
  368           | expr . '.' '.' "name"
  369           | expr . '.' "name" '(' ')'
  370           | expr . '.' "name" '(' expr_list ')'
  371           | expr . '.' basic_type_declaration '(' ')'
  372           | expr . '.' basic_type_declaration '(' expr_list ')'
  375           | expr . '.' $@25 error $@26
  396 expr: '-' expr .
  397     | expr . "<<" expr
  398     | expr . ">>" expr
  399     | expr . "<<<" expr
  400     | expr . ">>>" expr
  401     | expr . '+' expr
  402     | expr . '-' expr
  403     | expr . '*' expr
  404     | expr . '/' expr
  405     | expr . '%' expr
  406     | expr . '<' expr
  407     | expr . '>' expr
  408     | expr . "==" expr
  409     | expr . "!=" expr
  410     | expr . "<=" expr
  411     | expr . ">=" expr
  412     | expr . '&' expr
  413     | expr . '|' expr
  414     | expr . '^' expr
  415     | expr . "&&" expr
  416     | expr . "||" expr
  417     | expr . "^^" expr
  418     | expr . ".." expr
  421     | expr . "++"
  422     | expr . "--"
  424     | expr . '[' expr ']'
  425     | expr . '.' '[' expr ']'
  426     | expr . "?[" expr ']'
  427     | expr . '.' "?[" expr ']'
  428     | expr . "?." "name"
  429     | expr . '.' "?." "name"
  436     | expr . "??" expr
  437     | expr . '?' expr ':' expr
  440     | expr . "is" "type" '<' $@27 type_declaration_no_options '>' $@28
  441     | expr . "is" basic_type_declaration
  442     | expr . "is" "name"
  443     | expr . "as" "name"
  446     | expr . "as" "type" '<' $@29 type_declaration '>' $@30
  447     | expr . "as" basic_type_declaration
  448     | expr . '?' "as" "name"
  451     | expr . '?' "as" "type" '<' $@31 type_declaration '>' $@32
  452     | expr . '?' "as" basic_type_declaration
  460     | expr . "<|" expr
  461     | expr . "|>" expr
  462     | expr . "|>" basic_type_declaration
  476 expr_mtag: expr . '.' "$f" '(' expr ')'
  477          | expr . "?." "$f" '(' expr ')'
  478          | expr . '.' '.' "$f" '(' expr ')'
  479          | expr . '.' "?." "$f" '(' expr ')'
  480          | expr . "as" "$f" '(' expr ')'
  481          | expr . '?' "as" "$f" '(' expr ')'
  482          | expr . "is" "$f" '(' expr ')'

    "is"  shift, and go to state 603
    "as"  shift, and go to state 604
    "++"  shift, and go to state 607
    "--"  shift, and go to state 608
    "->"  shift, and go to state 613
    "?."  shift, and go to state 615
    "?["  shift, and go to state 616
    "<|"  shift, and go to state 617
    "|>"  shift, and go to state 618
    '.'   shift, and go to state 636
    '['   shift, and go to state 637

    $default  reduce using rule 396 (expr)


State 583

  356 expr_method_call: expr . "->" "name" '(' ')'
  357                 | expr . "->" "name" '(' expr_list ')'
  367 expr_field: expr . '.' "name"
  368           | expr . '.' '.' "name"
  369           | expr . '.' "name" '(' ')'
  370           | expr . '.' "name" '(' expr_list ')'
  371           | expr . '.' basic_type_declaration '(' ')'
  372           | expr . '.' basic_type_declaration '(' expr_list ')'
  375           | expr . '.' $@25 error $@26
  395 expr: '+' expr .
  397     | expr . "<<" expr
  398     | expr . ">>" expr
  399     | expr . "<<<" expr
  400     | expr . ">>>" expr
  401     | expr . '+' expr
  402     | expr . '-' expr
  403     | expr . '*' expr
  404     | expr . '/' expr
  405     | expr . '%' expr
  406     | expr . '<' expr
  407     | expr . '>' expr
  408     | expr . "==" expr
  409     | expr . "!=" expr
  410     | expr . "<=" expr
  411     | expr . ">=" expr
  412     | expr . '&' expr
  413     | expr . '|' expr
  414     | expr . '^' expr
  415     | expr . "&&" expr
  416     | expr . "||" expr
  417     | expr . "^^" expr
  418     | expr . ".." expr
  421     | expr . "++"
  422     | expr . "--"
  424     | expr . '[' expr ']'
  425     | expr . '.' '[' expr ']'
  426     | expr . "?[" expr ']'
  427     | expr . '.' "?[" expr ']'
  428     | expr . "?." "name"
  429     | expr . '.' "?." "name"
  436     | expr . "??" expr
  437     | expr . '?' expr ':' expr
  440     | expr . "is" "type" '<' $@27 type_declaration_no_options '>' $@28
  441     | expr . "is" basic_type_declaration
  442     | expr . "is" "name"
  443     | expr . "as" "name"
  446     | expr . "as" "type" '<' $@29 type_declaration '>' $@30
  447     | expr . "as" basic_type_declaration
  448     | expr . '?' "as" "name"
  451     | expr . '?' "as" "type" '<' $@31 type_declaration '>' $@32
  452     | expr . '?' "as" basic_type_declaration
  460     | expr . "<|" expr
  461     | expr . "|>" expr
  462     | expr . "|>" basic_type_declaration
  476 expr_mtag: expr . '.' "$f" '(' expr ')'
  477          | expr . "?." "$f" '(' expr ')'
  478          | expr . '.' '.' "$f" '(' expr ')'
  479          | expr . '.' "?." "$f" '(' expr ')'
  480          | expr . "as" "$f" '(' expr ')'
  481          | expr . '?' "as" "$f" '(' expr ')'
  482          | expr . "is" "$f" '(' expr ')'

    "is"  shift, and go to state 603
    "as"  shift, and go to state 604
    "++"  shift, and go to state 607
    "--"  shift, and go to state 608
    "->"  shift, and go to state 613
    "?."  shift, and go to state 615
    "?["  shift, and go to state 616
    "<|"  shift, and go to state 617
    "|>"  shift, and go to state 618
    '.'   shift, and go to state 636
    '['   shift, and go to state 637

    $default  reduce using rule 395 (expr)


State 584

  356 expr_method_call: expr . "->" "name" '(' ')'
  357                 | expr . "->" "name" '(' expr_list ')'
  367 expr_field: expr . '.' "name"
  368           | expr . '.' '.' "name"
  369           | expr . '.' "name" '(' ')'
  370           | expr . '.' "name" '(' expr_list ')'
  371           | expr . '.' basic_type_declaration '(' ')'
  372           | expr . '.' basic_type_declaration '(' expr_list ')'
  375           | expr . '.' $@25 error $@26
  397 expr: expr . "<<" expr
  398     | expr . ">>" expr
  399     | expr . "<<<" expr
  400     | expr . ">>>" expr
  401     | expr . '+' expr
  402     | expr . '-' expr
  403     | expr . '*' expr
  404     | expr . '/' expr
  405     | expr . '%' expr
  406     | expr . '<' expr
  407     | expr . '>' expr
  408     | expr . "==" expr
  409     | expr . "!=" expr
  410     | expr . "<=" expr
  411     | expr . ">=" expr
  412     | expr . '&' expr
  413     | expr . '|' expr
  414     | expr . '^' expr
  415     | expr . "&&" expr
  416     | expr . "||" expr
  417     | expr . "^^" expr
  418     | expr . ".." expr
  421     | expr . "++"
  422     | expr . "--"
  424     | expr . '[' expr ']'
  425     | expr . '.' '[' expr ']'
  426     | expr . "?[" expr ']'
  427     | expr . '.' "?[" expr ']'
  428     | expr . "?." "name"
  429     | expr . '.' "?." "name"
  432     | '*' expr .
  436     | expr . "??" expr
  437     | expr . '?' expr ':' expr
  440     | expr . "is" "type" '<' $@27 type_declaration_no_options '>' $@28
  441     | expr . "is" basic_type_declaration
  442     | expr . "is" "name"
  443     | expr . "as" "name"
  446     | expr . "as" "type" '<' $@29 type_declaration '>' $@30
  447     | expr . "as" basic_type_declaration
  448     | expr . '?' "as" "name"
  451     | expr . '?' "as" "type" '<' $@31 type_declaration '>' $@32
  452     | expr . '?' "as" basic_type_declaration
  460     | expr . "<|" expr
  461     | expr . "|>" expr
  462     | expr . "|>" basic_type_declaration
  476 expr_mtag: expr . '.' "$f" '(' expr ')'
  477          | expr . "?." "$f" '(' expr ')'
  478          | expr . '.' '.' "$f" '(' expr ')'
  479          | expr . '.' "?." "$f" '(' expr ')'
  480          | expr . "as" "$f" '(' expr ')'
  481          | expr . '?' "as" "$f" '(' expr ')'
  482          | expr . "is" "$f" '(' expr ')'

    "?."  shift, and go to state 615
    "?["  shift, and go to state 616
    '.'   shift, and go to state 636
    '['   shift, and go to state 637

    $default  reduce using rule 432 (expr)


State 585

  356 expr_method_call: expr . "->" "name" '(' ')'
  357                 | expr . "->" "name" '(' expr_list ')'
  367 expr_field: expr . '.' "name"
  368           | expr . '.' '.' "name"
  369           | expr . '.' "name" '(' ')'
  370           | expr . '.' "name" '(' expr_list ')'
  371           | expr . '.' basic_type_declaration '(' ')'
  372           | expr . '.' basic_type_declaration '(' expr_list ')'
  375           | expr . '.' $@25 error $@26
  394 expr: '~' expr .
  397     | expr . "<<" expr
  398     | expr . ">>" expr
  399     | expr . "<<<" expr
  400     | expr . ">>>" expr
  401     | expr . '+' expr
  402     | expr . '-' expr
  403     | expr . '*' expr
  404     | expr . '/' expr
  405     | expr . '%' expr
  406     | expr . '<' expr
  407     | expr . '>' expr
  408     | expr . "==" expr
  409     | expr . "!=" expr
  410     | expr . "<=" expr
  411     | expr . ">=" expr
  412     | expr . '&' expr
  413     | expr . '|' expr
  414     | expr . '^' expr
  415     | expr . "&&" expr
  416     | expr . "||" expr
  417     | expr . "^^" expr
  418     | expr . ".." expr
  421     | expr . "++"
  422     | expr . "--"
  424     | expr . '[' expr ']'
  425     | expr . '.' '[' expr ']'
  426     | expr . "?[" expr ']'
  427     | expr . '.' "?[" expr ']'
  428     | expr . "?." "name"
  429     | expr . '.' "?." "name"
  436     | expr . "??" expr
  437     | expr . '?' expr ':' expr
  440     | expr . "is" "type" '<' $@27 type_declaration_no_options '>' $@28
  441     | expr . "is" basic_type_declaration
  442     | expr . "is" "name"
  443     | expr . "as" "name"
  446     | expr . "as" "type" '<' $@29 type_declaration '>' $@30
  447     | expr . "as" basic_type_declaration
  448     | expr . '?' "as" "name"
  451     | expr . '?' "as" "type" '<' $@31 type_declaration '>' $@32
  452     | expr . '?' "as" basic_type_declaration
  460     | expr . "<|" expr
  461     | expr . "|>" expr
  462     | expr . "|>" basic_type_declaration
  476 expr_mtag: expr . '.' "$f" '(' expr ')'
  477          | expr . "?." "$f" '(' expr ')'
  478          | expr . '.' '.' "$f" '(' expr ')'
  479          | expr . '.' "?." "$f" '(' expr ')'
  480          | expr . "as" "$f" '(' expr ')'
  481          | expr . '?' "as" "$f" '(' expr ')'
  482          | expr . "is" "$f" '(' expr ')'

    "is"  shift, and go to state 603
    "as"  shift, and go to state 604
    "++"  shift, and go to state 607
    "--"  shift, and go to state 608
    "->"  shift, and go to state 613
    "?."  shift, and go to state 615
    "?["  shift, and go to state 616
    "<|"  shift, and go to state 617
    "|>"  shift, and go to state 618
    '.'   shift, and go to state 636
    '['   shift, and go to state 637

    $default  reduce using rule 394 (expr)


State 586

  356 expr_method_call: expr . "->" "name" '(' ')'
  357                 | expr . "->" "name" '(' expr_list ')'
  367 expr_field: expr . '.' "name"
  368           | expr . '.' '.' "name"
  369           | expr . '.' "name" '(' ')'
  370           | expr . '.' "name" '(' expr_list ')'
  371           | expr . '.' basic_type_declaration '(' ')'
  372           | expr . '.' basic_type_declaration '(' expr_list ')'
  375           | expr . '.' $@25 error $@26
  393 expr: '!' expr .
  397     | expr . "<<" expr
  398     | expr . ">>" expr
  399     | expr . "<<<" expr
  400     | expr . ">>>" expr
  401     | expr . '+' expr
  402     | expr . '-' expr
  403     | expr . '*' expr
  404     | expr . '/' expr
  405     | expr . '%' expr
  406     | expr . '<' expr
  407     | expr . '>' expr
  408     | expr . "==" expr
  409     | expr . "!=" expr
  410     | expr . "<=" expr
  411     | expr . ">=" expr
  412     | expr . '&' expr
  413     | expr . '|' expr
  414     | expr . '^' expr
  415     | expr . "&&" expr
  416     | expr . "||" expr
  417     | expr . "^^" expr
  418     | expr . ".." expr
  421     | expr . "++"
  422     | expr . "--"
  424     | expr . '[' expr ']'
  425     | expr . '.' '[' expr ']'
  426     | expr . "?[" expr ']'
  427     | expr . '.' "?[" expr ']'
  428     | expr . "?." "name"
  429     | expr . '.' "?." "name"
  436     | expr . "??" expr
  437     | expr . '?' expr ':' expr
  440     | expr . "is" "type" '<' $@27 type_declaration_no_options '>' $@28
  441     | expr . "is" basic_type_declaration
  442     | expr . "is" "name"
  443     | expr . "as" "name"
  446     | expr . "as" "type" '<' $@29 type_declaration '>' $@30
  447     | expr . "as" basic_type_declaration
  448     | expr . '?' "as" "name"
  451     | expr . '?' "as" "type" '<' $@31 type_declaration '>' $@32
  452     | expr . '?' "as" basic_type_declaration
  460     | expr . "<|" expr
  461     | expr . "|>" expr
  462     | expr . "|>" basic_type_declaration
  476 expr_mtag: expr . '.' "$f" '(' expr ')'
  477          | expr . "?." "$f" '(' expr ')'
  478          | expr . '.' '.' "$f" '(' expr ')'
  479          | expr . '.' "?." "$f" '(' expr ')'
  480          | expr . "as" "$f" '(' expr ')'
  481          | expr . '?' "as" "$f" '(' expr ')'
  482          | expr . "is" "$f" '(' expr ')'

    "is"  shift, and go to state 603
    "as"  shift, and go to state 604
    "++"  shift, and go to state 607
    "--"  shift, and go to state 608
    "->"  shift, and go to state 613
    "?."  shift, and go to state 615
    "?["  shift, and go to state 616
    "<|"  shift, and go to state 617
    "|>"  shift, and go to state 618
    '.'   shift, and go to state 636
    '['   shift, and go to state 637

    $default  reduce using rule 393 (expr)


State 587

  813 array_comprehension: '[' "for" . '(' variable_name_with_pos_list "in" expr_list ')' ';' expr array_comprehension_where ']'

    '('  shift, and go to state 771


State 588

  814 array_comprehension: '[' "iterator" . "for" '(' variable_name_with_pos_list "in" expr_list ')' ';' expr array_comprehension_where ']'

    "for"  shift, and go to state 772


State 589

  309 expr_list: expr_list . ',' expr
  785 make_dim_decl: '[' expr_list . optional_comma ']'

    ','  shift, and go to state 773

    $default  reduce using rule 811 (optional_comma)

    optional_comma  go to state 774


State 590

  308 expr_list: expr .
  356 expr_method_call: expr . "->" "name" '(' ')'
  357                 | expr . "->" "name" '(' expr_list ')'
  367 expr_field: expr . '.' "name"
  368           | expr . '.' '.' "name"
  369           | expr . '.' "name" '(' ')'
  370           | expr . '.' "name" '(' expr_list ')'
  371           | expr . '.' basic_type_declaration '(' ')'
  372           | expr . '.' basic_type_declaration '(' expr_list ')'
  375           | expr . '.' $@25 error $@26
  397 expr: expr . "<<" expr
  398     | expr . ">>" expr
  399     | expr . "<<<" expr
  400     | expr . ">>>" expr
  401     | expr . '+' expr
  402     | expr . '-' expr
  403     | expr . '*' expr
  404     | expr . '/' expr
  405     | expr . '%' expr
  406     | expr . '<' expr
  407     | expr . '>' expr
  408     | expr . "==" expr
  409     | expr . "!=" expr
  410     | expr . "<=" expr
  411     | expr . ">=" expr
  412     | expr . '&' expr
  413     | expr . '|' expr
  414     | expr . '^' expr
  415     | expr . "&&" expr
  416     | expr . "||" expr
  417     | expr . "^^" expr
  418     | expr . ".." expr
  421     | expr . "++"
  422     | expr . "--"
  424     | expr . '[' expr ']'
  425     | expr . '.' '[' expr ']'
  426     | expr . "?[" expr ']'
  427     | expr . '.' "?[" expr ']'
  428     | expr . "?." "name"
  429     | expr . '.' "?." "name"
  436     | expr . "??" expr
  437     | expr . '?' expr ':' expr
  440     | expr . "is" "type" '<' $@27 type_declaration_no_options '>' $@28
  441     | expr . "is" basic_type_declaration
  442     | expr . "is" "name"
  443     | expr . "as" "name"
  446     | expr . "as" "type" '<' $@29 type_declaration '>' $@30
  447     | expr . "as" basic_type_declaration
  448     | expr . '?' "as" "name"
  451     | expr . '?' "as" "type" '<' $@31 type_declaration '>' $@32
  452     | expr . '?' "as" basic_type_declaration
  460     | expr . "<|" expr
  461     | expr . "|>" expr
  462     | expr . "|>" basic_type_declaration
  476 expr_mtag: expr . '.' "$f" '(' expr ')'
  477          | expr . "?." "$f" '(' expr ')'
  478          | expr . '.' '.' "$f" '(' expr ')'
  479          | expr . '.' "?." "$f" '(' expr ')'
  480          | expr . "as" "$f" '(' expr ')'
  481          | expr . '?' "as" "$f" '(' expr ')'
  482          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 603
    "as"   shift, and go to state 604
    "<<"   shift, and go to state 605
    ">>"   shift, and go to state 606
    "++"   shift, and go to state 607
    "--"   shift, and go to state 608
    "<="   shift, and go to state 609
    ">="   shift, and go to state 610
    "=="   shift, and go to state 611
    "!="   shift, and go to state 612
    "->"   shift, and go to state 613
    "??"   shift, and go to state 614
    "?."   shift, and go to state 615
    "?["   shift, and go to state 616
    "<|"   shift, and go to state 617
    "|>"   shift, and go to state 618
    "<<<"  shift, and go to state 619
    ">>>"  shift, and go to state 620
    "&&"   shift, and go to state 621
    "||"   shift, and go to state 622
    "^^"   shift, and go to state 623
    ".."   shift, and go to state 624
    '?'    shift, and go to state 625
    '|'    shift, and go to state 626
    '^'    shift, and go to state 627
    '&'    shift, and go to state 628
    '<'    shift, and go to state 629
    '>'    shift, and go to state 630
    '-'    shift, and go to state 631
    '+'    shift, and go to state 632
    '*'    shift, and go to state 633
    '/'    shift, and go to state 634
    '%'    shift, and go to state 635
    '.'    shift, and go to state 636
    '['    shift, and go to state 637

    $default  reduce using rule 308 (expr_list)


State 591

  309 expr_list: expr_list . ',' expr
  423 expr: '(' expr_list . optional_comma ')'

    ','  shift, and go to state 773

    $default  reduce using rule 811 (optional_comma)

    optional_comma  go to state 775


State 592

  315 block_or_lambda: '@' '@' .
  360 func_addr_expr: '@' '@' . func_addr_name
  363               | '@' '@' . '<' $@21 type_declaration_no_options '>' $@22 func_addr_name
  366               | '@' '@' . '<' $@23 optional_function_argument_list optional_function_type '>' $@24 func_addr_name
  483 expr_mtag: '@' '@' . "$c" '(' expr ')'

    "::"    shift, and go to state 55
    "$i"    shift, and go to state 776
    "$c"    shift, and go to state 777
    "name"  shift, and go to state 56
    '<'     shift, and go to state 778

    $default  reduce using rule 315 (block_or_lambda)

    name_in_namespace  go to state 779
    func_addr_name     go to state 780


State 593

  815 array_comprehension: '{' "for" . '(' variable_name_with_pos_list "in" expr_list ')' ';' make_map_tuple array_comprehension_where '}'

    '('  shift, and go to state 781


State 594

  356 expr_method_call: expr . "->" "name" '(' ')'
  357                 | expr . "->" "name" '(' expr_list ')'
  367 expr_field: expr . '.' "name"
  368           | expr . '.' '.' "name"
  369           | expr . '.' "name" '(' ')'
  370           | expr . '.' "name" '(' expr_list ')'
  371           | expr . '.' basic_type_declaration '(' ')'
  372           | expr . '.' basic_type_declaration '(' expr_list ')'
  375           | expr . '.' $@25 error $@26
  397 expr: expr . "<<" expr
  398     | expr . ">>" expr
  399     | expr . "<<<" expr
  400     | expr . ">>>" expr
  401     | expr . '+' expr
  402     | expr . '-' expr
  403     | expr . '*' expr
  404     | expr . '/' expr
  405     | expr . '%' expr
  406     | expr . '<' expr
  407     | expr . '>' expr
  408     | expr . "==" expr
  409     | expr . "!=" expr
  410     | expr . "<=" expr
  411     | expr . ">=" expr
  412     | expr . '&' expr
  413     | expr . '|' expr
  414     | expr . '^' expr
  415     | expr . "&&" expr
  416     | expr . "||" expr
  417     | expr . "^^" expr
  418     | expr . ".." expr
  421     | expr . "++"
  422     | expr . "--"
  424     | expr . '[' expr ']'
  425     | expr . '.' '[' expr ']'
  426     | expr . "?[" expr ']'
  427     | expr . '.' "?[" expr ']'
  428     | expr . "?." "name"
  429     | expr . '.' "?." "name"
  436     | expr . "??" expr
  437     | expr . '?' expr ':' expr
  440     | expr . "is" "type" '<' $@27 type_declaration_no_options '>' $@28
  441     | expr . "is" basic_type_declaration
  442     | expr . "is" "name"
  443     | expr . "as" "name"
  446     | expr . "as" "type" '<' $@29 type_declaration '>' $@30
  447     | expr . "as" basic_type_declaration
  448     | expr . '?' "as" "name"
  451     | expr . '?' "as" "type" '<' $@31 type_declaration '>' $@32
  452     | expr . '?' "as" basic_type_declaration
  460     | expr . "<|" expr
  461     | expr . "|>" expr
  462     | expr . "|>" basic_type_declaration
  476 expr_mtag: expr . '.' "$f" '(' expr ')'
  477          | expr . "?." "$f" '(' expr ')'
  478          | expr . '.' '.' "$f" '(' expr ')'
  479          | expr . '.' "?." "$f" '(' expr ')'
  480          | expr . "as" "$f" '(' expr ')'
  481          | expr . '?' "as" "$f" '(' expr ')'
  482          | expr . "is" "$f" '(' expr ')'
  779 make_map_tuple: expr . "=>" expr
  780               | expr .

    "is"   shift, and go to state 603
    "as"   shift, and go to state 604
    "<<"   shift, and go to state 605
    ">>"   shift, and go to state 606
    "++"   shift, and go to state 607
    "--"   shift, and go to state 608
    "<="   shift, and go to state 609
    ">="   shift, and go to state 610
    "=="   shift, and go to state 611
    "!="   shift, and go to state 612
    "->"   shift, and go to state 613
    "??"   shift, and go to state 614
    "?."   shift, and go to state 615
    "?["   shift, and go to state 616
    "<|"   shift, and go to state 617
    "|>"   shift, and go to state 618
    "<<<"  shift, and go to state 619
    ">>>"  shift, and go to state 620
    "=>"   shift, and go to state 782
    "&&"   shift, and go to state 621
    "||"   shift, and go to state 622
    "^^"   shift, and go to state 623
    ".."   shift, and go to state 624
    '?'    shift, and go to state 625
    '|'    shift, and go to state 626
    '^'    shift, and go to state 627
    '&'    shift, and go to state 628
    '<'    shift, and go to state 629
    '>'    shift, and go to state 630
    '-'    shift, and go to state 631
    '+'    shift, and go to state 632
    '*'    shift, and go to state 633
    '/'    shift, and go to state 634
    '%'    shift, and go to state 635
    '.'    shift, and go to state 636
    '['    shift, and go to state 637

    $default  reduce using rule 780 (make_map_tuple)


State 595

  803 expr_map_tuple_list: make_map_tuple .

    $default  reduce using rule 803 (expr_map_tuple_list)


State 596

  804 expr_map_tuple_list: expr_map_tuple_list . ',' make_map_tuple
  805 make_table_decl: '{' expr_map_tuple_list . optional_comma '}'

    ','  shift, and go to state 783

    $default  reduce using rule 811 (optional_comma)

    optional_comma  go to state 784


State 597

  354 expr_named_call: name_in_namespace '(' . '[' make_struct_fields ']' ')'
  355                | name_in_namespace '(' . expr_list ',' '[' make_struct_fields ']' ')'
  376 expr_call: name_in_namespace '(' . ')'
  377          | name_in_namespace '(' . "uninitialized" ')'
  378          | name_in_namespace '(' . make_struct_single ')'
  379          | name_in_namespace '(' . "uninitialized" make_struct_single ')'
  380          | name_in_namespace '(' . expr_list ')'

    "struct"                          shift, and go to state 414
    "class"                           shift, and go to state 415
    "true"                            shift, and go to state 416
    "false"                           shift, and go to state 417
    "new"                             shift, and go to state 418
    "typeinfo"                        shift, and go to state 419
    "type"                            shift, and go to state 420
    "array"                           shift, and go to state 421
    "null"                            shift, and go to state 422
    "table"                           shift, and go to state 423
    "deref"                           shift, and go to state 424
    "cast"                            shift, and go to state 425
    "upcast"                          shift, and go to state 426
    "addr"                            shift, and go to state 427
    "reinterpret"                     shift, and go to state 428
    "unsafe"                          shift, and go to state 429
    "fixed_array"                     shift, and go to state 430
    "default"                         shift, and go to state 431
    "uninitialized"                   shift, and go to state 785
    "bool"                            shift, and go to state 228
    "void"                            shift, and go to state 229
    "string"                          shift, and go to state 230
    "int"                             shift, and go to state 232
    "int2"                            shift, and go to state 233
    "int3"                            shift, and go to state 234
    "int4"                            shift, and go to state 235
    "uint"                            shift, and go to state 236
    "bitfield"                        shift, and go to state 432
    "uint2"                           shift, and go to state 238
    "uint3"                           shift, and go to state 239
    "uint4"                           shift, and go to state 240
    "float"                           shift, and go to state 241
    "float2"                          shift, and go to state 242
    "float3"                          shift, and go to state 243
    "float4"                          shift, and go to state 244
    "range"                           shift, and go to state 245
    "urange"                          shift, and go to state 246
    "range64"                         shift, and go to state 247
    "urange64"                        shift, and go to state 248
    "int64"                           shift, and go to state 250
    "uint64"                          shift, and go to state 251
    "double"                          shift, and go to state 252
    "int8"                            shift, and go to state 255
    "uint8"                           shift, and go to state 256
    "int16"                           shift, and go to state 257
    "uint16"                          shift, and go to state 258
    "tuple"                           shift, and go to state 433
    "variant"                         shift, and go to state 434
    "generator"                       shift, and go to state 435
    "++"                              shift, and go to state 436
    "--"                              shift, and go to state 437
    "::"                              shift, and go to state 55
    "$$"                              shift, and go to state 438
    "$i"                              shift, and go to state 439
    "$v"                              shift, and go to state 440
    "$b"                              shift, and go to state 441
    "$a"                              shift, and go to state 442
    "$c"                              shift, and go to state 443
    "$f"                              shift, and go to state 786
    "..."                             shift, and go to state 444
    "integer constant"                shift, and go to state 445
    "long integer constant"           shift, and go to state 446
    "unsigned integer constant"       shift, and go to state 447
    "unsigned long integer constant"  shift, and go to state 448
    "unsigned int8 constant"          shift, and go to state 449
    "floating point constant"         shift, and go to state 450
    "double constant"                 shift, and go to state 451
    "name"                            shift, and go to state 787
    "start of the string"             shift, and go to state 452
    '-'                               shift, and go to state 453
    '+'                               shift, and go to state 454
    '*'                               shift, and go to state 455
    '%'                               shift, and go to state 13
    '~'                               shift, and go to state 456
    '!'                               shift, and go to state 457
    '['                               shift, and go to state 788
    '('                               shift, and go to state 459
    ')'                               shift, and go to state 789
    '$'                               shift, and go to state 460
    '@'                               shift, and go to state 461
    '{'                               shift, and go to state 462

    string_builder          go to state 463
    expr_reader             go to state 464
    expr_call_pipe          go to state 465
    name_in_namespace       go to state 466
    expr_new                go to state 467
    expr_cast               go to state 468
    expr_type_decl          go to state 469
    expr_type_info          go to state 470
    expr_list               go to state 790
    block_or_lambda         go to state 471
    expr_full_block         go to state 472
    expr_numeric_const      go to state 473
    expr_named_call         go to state 474
    expr_method_call        go to state 475
    func_addr_expr          go to state 476
    expr_field              go to state 477
    expr_call               go to state 478
    expr                    go to state 590
    expr_generator          go to state 480
    expr_mtag               go to state 481
    basic_type_declaration  go to state 482
    make_decl               go to state 483
    make_struct_fields      go to state 791
    make_struct_single      go to state 792
    make_struct_decl        go to state 484
    make_tuple_call         go to state 485
    make_dim_decl           go to state 486
    make_table_decl         go to state 487
    array_comprehension     go to state 488


State 598

  325 expr_full_block: block_or_lambda optional_annotation_list . optional_capture_list optional_function_argument_list optional_function_type optional_semis block_or_simple_block

    "capture"  shift, and go to state 793

    $default  reduce using rule 323 (optional_capture_list)

    optional_capture_list  go to state 794


State 599

  314 block_or_lambda: '@' .
  315                | '@' . '@'

    '@'  shift, and go to state 795

    $default  reduce using rule 314 (block_or_lambda)


State 600

  327 expr_full_block_assumed_piped: '{' . expressions '}'

    $default  reduce using rule 247 (expressions)

    expressions  go to state 796


State 601

  326 expr_full_block_assumed_piped: block_or_lambda . optional_annotation_list optional_capture_list optional_function_argument_list optional_function_type optional_semis expression_block

    '['  shift, and go to state 14

    $default  reduce using rule 121 (optional_annotation_list)

    optional_annotation_list  go to state 797


State 602

  227 expr_call_pipe: expr_call expr_full_block_assumed_piped .

    $default  reduce using rule 227 (expr_call_pipe)


State 603

  440 expr: expr "is" . "type" '<' $@27 type_declaration_no_options '>' $@28
  441     | expr "is" . basic_type_declaration
  442     | expr "is" . "name"
  482 expr_mtag: expr "is" . "$f" '(' expr ')'

    "type"      shift, and go to state 798
    "bool"      shift, and go to state 228
    "void"      shift, and go to state 229
    "string"    shift, and go to state 230
    "int"       shift, and go to state 232
    "int2"      shift, and go to state 233
    "int3"      shift, and go to state 234
    "int4"      shift, and go to state 235
    "uint"      shift, and go to state 236
    "bitfield"  shift, and go to state 432
    "uint2"     shift, and go to state 238
    "uint3"     shift, and go to state 239
    "uint4"     shift, and go to state 240
    "float"     shift, and go to state 241
    "float2"    shift, and go to state 242
    "float3"    shift, and go to state 243
    "float4"    shift, and go to state 244
    "range"     shift, and go to state 245
    "urange"    shift, and go to state 246
    "range64"   shift, and go to state 247
    "urange64"  shift, and go to state 248
    "int64"     shift, and go to state 250
    "uint64"    shift, and go to state 251
    "double"    shift, and go to state 252
    "int8"      shift, and go to state 255
    "uint8"     shift, and go to state 256
    "int16"     shift, and go to state 257
    "uint16"    shift, and go to state 258
    "$f"        shift, and go to state 799
    "name"      shift, and go to state 800

    basic_type_declaration  go to state 801


State 604

  443 expr: expr "as" . "name"
  446     | expr "as" . "type" '<' $@29 type_declaration '>' $@30
  447     | expr "as" . basic_type_declaration
  480 expr_mtag: expr "as" . "$f" '(' expr ')'

    "type"      shift, and go to state 802
    "bool"      shift, and go to state 228
    "void"      shift, and go to state 229
    "string"    shift, and go to state 230
    "int"       shift, and go to state 232
    "int2"      shift, and go to state 233
    "int3"      shift, and go to state 234
    "int4"      shift, and go to state 235
    "uint"      shift, and go to state 236
    "bitfield"  shift, and go to state 432
    "uint2"     shift, and go to state 238
    "uint3"     shift, and go to state 239
    "uint4"     shift, and go to state 240
    "float"     shift, and go to state 241
    "float2"    shift, and go to state 242
    "float3"    shift, and go to state 243
    "float4"    shift, and go to state 244
    "range"     shift, and go to state 245
    "urange"    shift, and go to state 246
    "range64"   shift, and go to state 247
    "urange64"  shift, and go to state 248
    "int64"     shift, and go to state 250
    "uint64"    shift, and go to state 251
    "double"    shift, and go to state 252
    "int8"      shift, and go to state 255
    "uint8"     shift, and go to state 256
    "int16"     shift, and go to state 257
    "uint16"    shift, and go to state 258
    "$f"        shift, and go to state 803
    "name"      shift, and go to state 804

    basic_type_declaration  go to state 805


State 605

  397 expr: expr "<<" . expr

    "struct"                          shift, and go to state 414
    "class"                           shift, and go to state 415
    "true"                            shift, and go to state 416
    "false"                           shift, and go to state 417
    "new"                             shift, and go to state 418
    "typeinfo"                        shift, and go to state 419
    "type"                            shift, and go to state 420
    "array"                           shift, and go to state 421
    "null"                            shift, and go to state 422
    "table"                           shift, and go to state 423
    "deref"                           shift, and go to state 424
    "cast"                            shift, and go to state 425
    "upcast"                          shift, and go to state 426
    "addr"                            shift, and go to state 427
    "reinterpret"                     shift, and go to state 428
    "unsafe"                          shift, and go to state 429
    "fixed_array"                     shift, and go to state 430
    "default"                         shift, and go to state 431
    "bool"                            shift, and go to state 228
    "void"                            shift, and go to state 229
    "string"                          shift, and go to state 230
    "int"                             shift, and go to state 232
    "int2"                            shift, and go to state 233
    "int3"                            shift, and go to state 234
    "int4"                            shift, and go to state 235
    "uint"                            shift, and go to state 236
    "bitfield"                        shift, and go to state 432
    "uint2"                           shift, and go to state 238
    "uint3"                           shift, and go to state 239
    "uint4"                           shift, and go to state 240
    "float"                           shift, and go to state 241
    "float2"                          shift, and go to state 242
    "float3"                          shift, and go to state 243
    "float4"                          shift, and go to state 244
    "range"                           shift, and go to state 245
    "urange"                          shift, and go to state 246
    "range64"                         shift, and go to state 247
    "urange64"                        shift, and go to state 248
    "int64"                           shift, and go to state 250
    "uint64"                          shift, and go to state 251
    "double"                          shift, and go to state 252
    "int8"                            shift, and go to state 255
    "uint8"                           shift, and go to state 256
    "int16"                           shift, and go to state 257
    "uint16"                          shift, and go to state 258
    "tuple"                           shift, and go to state 433
    "variant"                         shift, and go to state 434
    "generator"                       shift, and go to state 435
    "++"                              shift, and go to state 436
    "--"                              shift, and go to state 437
    "::"                              shift, and go to state 55
    "$$"                              shift, and go to state 438
    "$i"                              shift, and go to state 439
    "$v"                              shift, and go to state 440
    "$b"                              shift, and go to state 441
    "$a"                              shift, and go to state 442
    "$c"                              shift, and go to state 443
    "..."                             shift, and go to state 444
    "integer constant"                shift, and go to state 445
    "long integer constant"           shift, and go to state 446
    "unsigned integer constant"       shift, and go to state 447
    "unsigned long integer constant"  shift, and go to state 448
    "unsigned int8 constant"          shift, and go to state 449
    "floating point constant"         shift, and go to state 450
    "double constant"                 shift, and go to state 451
    "name"                            shift, and go to state 56
    "start of the string"             shift, and go to state 452
    '-'                               shift, and go to state 453
    '+'                               shift, and go to state 454
    '*'                               shift, and go to state 455
    '%'                               shift, and go to state 13
    '~'                               shift, and go to state 456
    '!'                               shift, and go to state 457
    '['                               shift, and go to state 458
    '('                               shift, and go to state 459
    '$'                               shift, and go to state 460
    '@'                               shift, and go to state 461
    '{'                               shift, and go to state 462

    string_builder          go to state 463
    expr_reader             go to state 464
    expr_call_pipe          go to state 465
    name_in_namespace       go to state 466
    expr_new                go to state 467
    expr_cast               go to state 468
    expr_type_decl          go to state 469
    expr_type_info          go to state 470
    block_or_lambda         go to state 471
    expr_full_block         go to state 472
    expr_numeric_const      go to state 473
    expr_named_call         go to state 474
    expr_method_call        go to state 475
    func_addr_expr          go to state 476
    expr_field              go to state 477
    expr_call               go to state 478
    expr                    go to state 806
    expr_generator          go to state 480
    expr_mtag               go to state 481
    basic_type_declaration  go to state 482
    make_decl               go to state 483
    make_struct_decl        go to state 484
    make_tuple_call         go to state 485
    make_dim_decl           go to state 486
    make_table_decl         go to state 487
    array_comprehension     go to state 488


State 606

  398 expr: expr ">>" . expr

    "struct"                          shift, and go to state 414
    "class"                           shift, and go to state 415
    "true"                            shift, and go to state 416
    "false"                           shift, and go to state 417
    "new"                             shift, and go to state 418
    "typeinfo"                        shift, and go to state 419
    "type"                            shift, and go to state 420
    "array"                           shift, and go to state 421
    "null"                            shift, and go to state 422
    "table"                           shift, and go to state 423
    "deref"                           shift, and go to state 424
    "cast"                            shift, and go to state 425
    "upcast"                          shift, and go to state 426
    "addr"                            shift, and go to state 427
    "reinterpret"                     shift, and go to state 428
    "unsafe"                          shift, and go to state 429
    "fixed_array"                     shift, and go to state 430
    "default"                         shift, and go to state 431
    "bool"                            shift, and go to state 228
    "void"                            shift, and go to state 229
    "string"                          shift, and go to state 230
    "int"                             shift, and go to state 232
    "int2"                            shift, and go to state 233
    "int3"                            shift, and go to state 234
    "int4"                            shift, and go to state 235
    "uint"                            shift, and go to state 236
    "bitfield"                        shift, and go to state 432
    "uint2"                           shift, and go to state 238
    "uint3"                           shift, and go to state 239
    "uint4"                           shift, and go to state 240
    "float"                           shift, and go to state 241
    "float2"                          shift, and go to state 242
    "float3"                          shift, and go to state 243
    "float4"                          shift, and go to state 244
    "range"                           shift, and go to state 245
    "urange"                          shift, and go to state 246
    "range64"                         shift, and go to state 247
    "urange64"                        shift, and go to state 248
    "int64"                           shift, and go to state 250
    "uint64"                          shift, and go to state 251
    "double"                          shift, and go to state 252
    "int8"                            shift, and go to state 255
    "uint8"                           shift, and go to state 256
    "int16"                           shift, and go to state 257
    "uint16"                          shift, and go to state 258
    "tuple"                           shift, and go to state 433
    "variant"                         shift, and go to state 434
    "generator"                       shift, and go to state 435
    "++"                              shift, and go to state 436
    "--"                              shift, and go to state 437
    "::"                              shift, and go to state 55
    "$$"                              shift, and go to state 438
    "$i"                              shift, and go to state 439
    "$v"                              shift, and go to state 440
    "$b"                              shift, and go to state 441
    "$a"                              shift, and go to state 442
    "$c"                              shift, and go to state 443
    "..."                             shift, and go to state 444
    "integer constant"                shift, and go to state 445
    "long integer constant"           shift, and go to state 446
    "unsigned integer constant"       shift, and go to state 447
    "unsigned long integer constant"  shift, and go to state 448
    "unsigned int8 constant"          shift, and go to state 449
    "floating point constant"         shift, and go to state 450
    "double constant"                 shift, and go to state 451
    "name"                            shift, and go to state 56
    "start of the string"             shift, and go to state 452
    '-'                               shift, and go to state 453
    '+'                               shift, and go to state 454
    '*'                               shift, and go to state 455
    '%'                               shift, and go to state 13
    '~'                               shift, and go to state 456
    '!'                               shift, and go to state 457
    '['                               shift, and go to state 458
    '('                               shift, and go to state 459
    '$'                               shift, and go to state 460
    '@'                               shift, and go to state 461
    '{'                               shift, and go to state 462

    string_builder          go to state 463
    expr_reader             go to state 464
    expr_call_pipe          go to state 465
    name_in_namespace       go to state 466
    expr_new                go to state 467
    expr_cast               go to state 468
    expr_type_decl          go to state 469
    expr_type_info          go to state 470
    block_or_lambda         go to state 471
    expr_full_block         go to state 472
    expr_numeric_const      go to state 473
    expr_named_call         go to state 474
    expr_method_call        go to state 475
    func_addr_expr          go to state 476
    expr_field              go to state 477
    expr_call               go to state 478
    expr                    go to state 807
    expr_generator          go to state 480
    expr_mtag               go to state 481
    basic_type_declaration  go to state 482
    make_decl               go to state 483
    make_struct_decl        go to state 484
    make_tuple_call         go to state 485
    make_dim_decl           go to state 486
    make_table_decl         go to state 487
    array_comprehension     go to state 488


State 607

  421 expr: expr "++" .

    $default  reduce using rule 421 (expr)


State 608

  422 expr: expr "--" .

    $default  reduce using rule 422 (expr)


State 609

  410 expr: expr "<=" . expr

    "struct"                          shift, and go to state 414
    "class"                           shift, and go to state 415
    "true"                            shift, and go to state 416
    "false"                           shift, and go to state 417
    "new"                             shift, and go to state 418
    "typeinfo"                        shift, and go to state 419
    "type"                            shift, and go to state 420
    "array"                           shift, and go to state 421
    "null"                            shift, and go to state 422
    "table"                           shift, and go to state 423
    "deref"                           shift, and go to state 424
    "cast"                            shift, and go to state 425
    "upcast"                          shift, and go to state 426
    "addr"                            shift, and go to state 427
    "reinterpret"                     shift, and go to state 428
    "unsafe"                          shift, and go to state 429
    "fixed_array"                     shift, and go to state 430
    "default"                         shift, and go to state 431
    "bool"                            shift, and go to state 228
    "void"                            shift, and go to state 229
    "string"                          shift, and go to state 230
    "int"                             shift, and go to state 232
    "int2"                            shift, and go to state 233
    "int3"                            shift, and go to state 234
    "int4"                            shift, and go to state 235
    "uint"                            shift, and go to state 236
    "bitfield"                        shift, and go to state 432
    "uint2"                           shift, and go to state 238
    "uint3"                           shift, and go to state 239
    "uint4"                           shift, and go to state 240
    "float"                           shift, and go to state 241
    "float2"                          shift, and go to state 242
    "float3"                          shift, and go to state 243
    "float4"                          shift, and go to state 244
    "range"                           shift, and go to state 245
    "urange"                          shift, and go to state 246
    "range64"                         shift, and go to state 247
    "urange64"                        shift, and go to state 248
    "int64"                           shift, and go to state 250
    "uint64"                          shift, and go to state 251
    "double"                          shift, and go to state 252
    "int8"                            shift, and go to state 255
    "uint8"                           shift, and go to state 256
    "int16"                           shift, and go to state 257
    "uint16"                          shift, and go to state 258
    "tuple"                           shift, and go to state 433
    "variant"                         shift, and go to state 434
    "generator"                       shift, and go to state 435
    "++"                              shift, and go to state 436
    "--"                              shift, and go to state 437
    "::"                              shift, and go to state 55
    "$$"                              shift, and go to state 438
    "$i"                              shift, and go to state 439
    "$v"                              shift, and go to state 440
    "$b"                              shift, and go to state 441
    "$a"                              shift, and go to state 442
    "$c"                              shift, and go to state 443
    "..."                             shift, and go to state 444
    "integer constant"                shift, and go to state 445
    "long integer constant"           shift, and go to state 446
    "unsigned integer constant"       shift, and go to state 447
    "unsigned long integer constant"  shift, and go to state 448
    "unsigned int8 constant"          shift, and go to state 449
    "floating point constant"         shift, and go to state 450
    "double constant"                 shift, and go to state 451
    "name"                            shift, and go to state 56
    "start of the string"             shift, and go to state 452
    '-'                               shift, and go to state 453
    '+'                               shift, and go to state 454
    '*'                               shift, and go to state 455
    '%'                               shift, and go to state 13
    '~'                               shift, and go to state 456
    '!'                               shift, and go to state 457
    '['                               shift, and go to state 458
    '('                               shift, and go to state 459
    '$'                               shift, and go to state 460
    '@'                               shift, and go to state 461
    '{'                               shift, and go to state 462

    string_builder          go to state 463
    expr_reader             go to state 464
    expr_call_pipe          go to state 465
    name_in_namespace       go to state 466
    expr_new                go to state 467
    expr_cast               go to state 468
    expr_type_decl          go to state 469
    expr_type_info          go to state 470
    block_or_lambda         go to state 471
    expr_full_block         go to state 472
    expr_numeric_const      go to state 473
    expr_named_call         go to state 474
    expr_method_call        go to state 475
    func_addr_expr          go to state 476
    expr_field              go to state 477
    expr_call               go to state 478
    expr                    go to state 808
    expr_generator          go to state 480
    expr_mtag               go to state 481
    basic_type_declaration  go to state 482
    make_decl               go to state 483
    make_struct_decl        go to state 484
    make_tuple_call         go to state 485
    make_dim_decl           go to state 486
    make_table_decl         go to state 487
    array_comprehension     go to state 488


State 610

  411 expr: expr ">=" . expr

    "struct"                          shift, and go to state 414
    "class"                           shift, and go to state 415
    "true"                            shift, and go to state 416
    "false"                           shift, and go to state 417
    "new"                             shift, and go to state 418
    "typeinfo"                        shift, and go to state 419
    "type"                            shift, and go to state 420
    "array"                           shift, and go to state 421
    "null"                            shift, and go to state 422
    "table"                           shift, and go to state 423
    "deref"                           shift, and go to state 424
    "cast"                            shift, and go to state 425
    "upcast"                          shift, and go to state 426
    "addr"                            shift, and go to state 427
    "reinterpret"                     shift, and go to state 428
    "unsafe"                          shift, and go to state 429
    "fixed_array"                     shift, and go to state 430
    "default"                         shift, and go to state 431
    "bool"                            shift, and go to state 228
    "void"                            shift, and go to state 229
    "string"                          shift, and go to state 230
    "int"                             shift, and go to state 232
    "int2"                            shift, and go to state 233
    "int3"                            shift, and go to state 234
    "int4"                            shift, and go to state 235
    "uint"                            shift, and go to state 236
    "bitfield"                        shift, and go to state 432
    "uint2"                           shift, and go to state 238
    "uint3"                           shift, and go to state 239
    "uint4"                           shift, and go to state 240
    "float"                           shift, and go to state 241
    "float2"                          shift, and go to state 242
    "float3"                          shift, and go to state 243
    "float4"                          shift, and go to state 244
    "range"                           shift, and go to state 245
    "urange"                          shift, and go to state 246
    "range64"                         shift, and go to state 247
    "urange64"                        shift, and go to state 248
    "int64"                           shift, and go to state 250
    "uint64"                          shift, and go to state 251
    "double"                          shift, and go to state 252
    "int8"                            shift, and go to state 255
    "uint8"                           shift, and go to state 256
    "int16"                           shift, and go to state 257
    "uint16"                          shift, and go to state 258
    "tuple"                           shift, and go to state 433
    "variant"                         shift, and go to state 434
    "generator"                       shift, and go to state 435
    "++"                              shift, and go to state 436
    "--"                              shift, and go to state 437
    "::"                              shift, and go to state 55
    "$$"                              shift, and go to state 438
    "$i"                              shift, and go to state 439
    "$v"                              shift, and go to state 440
    "$b"                              shift, and go to state 441
    "$a"                              shift, and go to state 442
    "$c"                              shift, and go to state 443
    "..."                             shift, and go to state 444
    "integer constant"                shift, and go to state 445
    "long integer constant"           shift, and go to state 446
    "unsigned integer constant"       shift, and go to state 447
    "unsigned long integer constant"  shift, and go to state 448
    "unsigned int8 constant"          shift, and go to state 449
    "floating point constant"         shift, and go to state 450
    "double constant"                 shift, and go to state 451
    "name"                            shift, and go to state 56
    "start of the string"             shift, and go to state 452
    '-'                               shift, and go to state 453
    '+'                               shift, and go to state 454
    '*'                               shift, and go to state 455
    '%'                               shift, and go to state 13
    '~'                               shift, and go to state 456
    '!'                               shift, and go to state 457
    '['                               shift, and go to state 458
    '('                               shift, and go to state 459
    '$'                               shift, and go to state 460
    '@'                               shift, and go to state 461
    '{'                               shift, and go to state 462

    string_builder          go to state 463
    expr_reader             go to state 464
    expr_call_pipe          go to state 465
    name_in_namespace       go to state 466
    expr_new                go to state 467
    expr_cast               go to state 468
    expr_type_decl          go to state 469
    expr_type_info          go to state 470
    block_or_lambda         go to state 471
    expr_full_block         go to state 472
    expr_numeric_const      go to state 473
    expr_named_call         go to state 474
    expr_method_call        go to state 475
    func_addr_expr          go to state 476
    expr_field              go to state 477
    expr_call               go to state 478
    expr                    go to state 809
    expr_generator          go to state 480
    expr_mtag               go to state 481
    basic_type_declaration  go to state 482
    make_decl               go to state 483
    make_struct_decl        go to state 484
    make_tuple_call         go to state 485
    make_dim_decl           go to state 486
    make_table_decl         go to state 487
    array_comprehension     go to state 488


State 611

  408 expr: expr "==" . expr

    "struct"                          shift, and go to state 414
    "class"                           shift, and go to state 415
    "true"                            shift, and go to state 416
    "false"                           shift, and go to state 417
    "new"                             shift, and go to state 418
    "typeinfo"                        shift, and go to state 419
    "type"                            shift, and go to state 420
    "array"                           shift, and go to state 421
    "null"                            shift, and go to state 422
    "table"                           shift, and go to state 423
    "deref"                           shift, and go to state 424
    "cast"                            shift, and go to state 425
    "upcast"                          shift, and go to state 426
    "addr"                            shift, and go to state 427
    "reinterpret"                     shift, and go to state 428
    "unsafe"                          shift, and go to state 429
    "fixed_array"                     shift, and go to state 430
    "default"                         shift, and go to state 431
    "bool"                            shift, and go to state 228
    "void"                            shift, and go to state 229
    "string"                          shift, and go to state 230
    "int"                             shift, and go to state 232
    "int2"                            shift, and go to state 233
    "int3"                            shift, and go to state 234
    "int4"                            shift, and go to state 235
    "uint"                            shift, and go to state 236
    "bitfield"                        shift, and go to state 432
    "uint2"                           shift, and go to state 238
    "uint3"                           shift, and go to state 239
    "uint4"                           shift, and go to state 240
    "float"                           shift, and go to state 241
    "float2"                          shift, and go to state 242
    "float3"                          shift, and go to state 243
    "float4"                          shift, and go to state 244
    "range"                           shift, and go to state 245
    "urange"                          shift, and go to state 246
    "range64"                         shift, and go to state 247
    "urange64"                        shift, and go to state 248
    "int64"                           shift, and go to state 250
    "uint64"                          shift, and go to state 251
    "double"                          shift, and go to state 252
    "int8"                            shift, and go to state 255
    "uint8"                           shift, and go to state 256
    "int16"                           shift, and go to state 257
    "uint16"                          shift, and go to state 258
    "tuple"                           shift, and go to state 433
    "variant"                         shift, and go to state 434
    "generator"                       shift, and go to state 435
    "++"                              shift, and go to state 436
    "--"                              shift, and go to state 437
    "::"                              shift, and go to state 55
    "$$"                              shift, and go to state 438
    "$i"                              shift, and go to state 439
    "$v"                              shift, and go to state 440
    "$b"                              shift, and go to state 441
    "$a"                              shift, and go to state 442
    "$c"                              shift, and go to state 443
    "..."                             shift, and go to state 444
    "integer constant"                shift, and go to state 445
    "long integer constant"           shift, and go to state 446
    "unsigned integer constant"       shift, and go to state 447
    "unsigned long integer constant"  shift, and go to state 448
    "unsigned int8 constant"          shift, and go to state 449
    "floating point constant"         shift, and go to state 450
    "double constant"                 shift, and go to state 451
    "name"                            shift, and go to state 56
    "start of the string"             shift, and go to state 452
    '-'                               shift, and go to state 453
    '+'                               shift, and go to state 454
    '*'                               shift, and go to state 455
    '%'                               shift, and go to state 13
    '~'                               shift, and go to state 456
    '!'                               shift, and go to state 457
    '['                               shift, and go to state 458
    '('                               shift, and go to state 459
    '$'                               shift, and go to state 460
    '@'                               shift, and go to state 461
    '{'                               shift, and go to state 462

    string_builder          go to state 463
    expr_reader             go to state 464
    expr_call_pipe          go to state 465
    name_in_namespace       go to state 466
    expr_new                go to state 467
    expr_cast               go to state 468
    expr_type_decl          go to state 469
    expr_type_info          go to state 470
    block_or_lambda         go to state 471
    expr_full_block         go to state 472
    expr_numeric_const      go to state 473
    expr_named_call         go to state 474
    expr_method_call        go to state 475
    func_addr_expr          go to state 476
    expr_field              go to state 477
    expr_call               go to state 478
    expr                    go to state 810
    expr_generator          go to state 480
    expr_mtag               go to state 481
    basic_type_declaration  go to state 482
    make_decl               go to state 483
    make_struct_decl        go to state 484
    make_tuple_call         go to state 485
    make_dim_decl           go to state 486
    make_table_decl         go to state 487
    array_comprehension     go to state 488


State 612

  409 expr: expr "!=" . expr

    "struct"                          shift, and go to state 414
    "class"                           shift, and go to state 415
    "true"                            shift, and go to state 416
    "false"                           shift, and go to state 417
    "new"                             shift, and go to state 418
    "typeinfo"                        shift, and go to state 419
    "type"                            shift, and go to state 420
    "array"                           shift, and go to state 421
    "null"                            shift, and go to state 422
    "table"                           shift, and go to state 423
    "deref"                           shift, and go to state 424
    "cast"                            shift, and go to state 425
    "upcast"                          shift, and go to state 426
    "addr"                            shift, and go to state 427
    "reinterpret"                     shift, and go to state 428
    "unsafe"                          shift, and go to state 429
    "fixed_array"                     shift, and go to state 430
    "default"                         shift, and go to state 431
    "bool"                            shift, and go to state 228
    "void"                            shift, and go to state 229
    "string"                          shift, and go to state 230
    "int"                             shift, and go to state 232
    "int2"                            shift, and go to state 233
    "int3"                            shift, and go to state 234
    "int4"                            shift, and go to state 235
    "uint"                            shift, and go to state 236
    "bitfield"                        shift, and go to state 432
    "uint2"                           shift, and go to state 238
    "uint3"                           shift, and go to state 239
    "uint4"                           shift, and go to state 240
    "float"                           shift, and go to state 241
    "float2"                          shift, and go to state 242
    "float3"                          shift, and go to state 243
    "float4"                          shift, and go to state 244
    "range"                           shift, and go to state 245
    "urange"                          shift, and go to state 246
    "range64"                         shift, and go to state 247
    "urange64"                        shift, and go to state 248
    "int64"                           shift, and go to state 250
    "uint64"                          shift, and go to state 251
    "double"                          shift, and go to state 252
    "int8"                            shift, and go to state 255
    "uint8"                           shift, and go to state 256
    "int16"                           shift, and go to state 257
    "uint16"                          shift, and go to state 258
    "tuple"                           shift, and go to state 433
    "variant"                         shift, and go to state 434
    "generator"                       shift, and go to state 435
    "++"                              shift, and go to state 436
    "--"                              shift, and go to state 437
    "::"                              shift, and go to state 55
    "$$"                              shift, and go to state 438
    "$i"                              shift, and go to state 439
    "$v"                              shift, and go to state 440
    "$b"                              shift, and go to state 441
    "$a"                              shift, and go to state 442
    "$c"                              shift, and go to state 443
    "..."                             shift, and go to state 444
    "integer constant"                shift, and go to state 445
    "long integer constant"           shift, and go to state 446
    "unsigned integer constant"       shift, and go to state 447
    "unsigned long integer constant"  shift, and go to state 448
    "unsigned int8 constant"          shift, and go to state 449
    "floating point constant"         shift, and go to state 450
    "double constant"                 shift, and go to state 451
    "name"                            shift, and go to state 56
    "start of the string"             shift, and go to state 452
    '-'                               shift, and go to state 453
    '+'                               shift, and go to state 454
    '*'                               shift, and go to state 455
    '%'                               shift, and go to state 13
    '~'                               shift, and go to state 456
    '!'                               shift, and go to state 457
    '['                               shift, and go to state 458
    '('                               shift, and go to state 459
    '$'                               shift, and go to state 460
    '@'                               shift, and go to state 461
    '{'                               shift, and go to state 462

    string_builder          go to state 463
    expr_reader             go to state 464
    expr_call_pipe          go to state 465
    name_in_namespace       go to state 466
    expr_new                go to state 467
    expr_cast               go to state 468
    expr_type_decl          go to state 469
    expr_type_info          go to state 470
    block_or_lambda         go to state 471
    expr_full_block         go to state 472
    expr_numeric_const      go to state 473
    expr_named_call         go to state 474
    expr_method_call        go to state 475
    func_addr_expr          go to state 476
    expr_field              go to state 477
    expr_call               go to state 478
    expr                    go to state 811
    expr_generator          go to state 480
    expr_mtag               go to state 481
    basic_type_declaration  go to state 482
    make_decl               go to state 483
    make_struct_decl        go to state 484
    make_tuple_call         go to state 485
    make_dim_decl           go to state 486
    make_table_decl         go to state 487
    array_comprehension     go to state 488


State 613

  356 expr_method_call: expr "->" . "name" '(' ')'
  357                 | expr "->" . "name" '(' expr_list ')'

    "name"  shift, and go to state 812


State 614

  436 expr: expr "??" . expr

    "struct"                          shift, and go to state 414
    "class"                           shift, and go to state 415
    "true"                            shift, and go to state 416
    "false"                           shift, and go to state 417
    "new"                             shift, and go to state 418
    "typeinfo"                        shift, and go to state 419
    "type"                            shift, and go to state 420
    "array"                           shift, and go to state 421
    "null"                            shift, and go to state 422
    "table"                           shift, and go to state 423
    "deref"                           shift, and go to state 424
    "cast"                            shift, and go to state 425
    "upcast"                          shift, and go to state 426
    "addr"                            shift, and go to state 427
    "reinterpret"                     shift, and go to state 428
    "unsafe"                          shift, and go to state 429
    "fixed_array"                     shift, and go to state 430
    "default"                         shift, and go to state 431
    "bool"                            shift, and go to state 228
    "void"                            shift, and go to state 229
    "string"                          shift, and go to state 230
    "int"                             shift, and go to state 232
    "int2"                            shift, and go to state 233
    "int3"                            shift, and go to state 234
    "int4"                            shift, and go to state 235
    "uint"                            shift, and go to state 236
    "bitfield"                        shift, and go to state 432
    "uint2"                           shift, and go to state 238
    "uint3"                           shift, and go to state 239
    "uint4"                           shift, and go to state 240
    "float"                           shift, and go to state 241
    "float2"                          shift, and go to state 242
    "float3"                          shift, and go to state 243
    "float4"                          shift, and go to state 244
    "range"                           shift, and go to state 245
    "urange"                          shift, and go to state 246
    "range64"                         shift, and go to state 247
    "urange64"                        shift, and go to state 248
    "int64"                           shift, and go to state 250
    "uint64"                          shift, and go to state 251
    "double"                          shift, and go to state 252
    "int8"                            shift, and go to state 255
    "uint8"                           shift, and go to state 256
    "int16"                           shift, and go to state 257
    "uint16"                          shift, and go to state 258
    "tuple"                           shift, and go to state 433
    "variant"                         shift, and go to state 434
    "generator"                       shift, and go to state 435
    "++"                              shift, and go to state 436
    "--"                              shift, and go to state 437
    "::"                              shift, and go to state 55
    "$$"                              shift, and go to state 438
    "$i"                              shift, and go to state 439
    "$v"                              shift, and go to state 440
    "$b"                              shift, and go to state 441
    "$a"                              shift, and go to state 442
    "$c"                              shift, and go to state 443
    "..."                             shift, and go to state 444
    "integer constant"                shift, and go to state 445
    "long integer constant"           shift, and go to state 446
    "unsigned integer constant"       shift, and go to state 447
    "unsigned long integer constant"  shift, and go to state 448
    "unsigned int8 constant"          shift, and go to state 449
    "floating point constant"         shift, and go to state 450
    "double constant"                 shift, and go to state 451
    "name"                            shift, and go to state 56
    "start of the string"             shift, and go to state 452
    '-'                               shift, and go to state 453
    '+'                               shift, and go to state 454
    '*'                               shift, and go to state 455
    '%'                               shift, and go to state 13
    '~'                               shift, and go to state 456
    '!'                               shift, and go to state 457
    '['                               shift, and go to state 458
    '('                               shift, and go to state 459
    '$'                               shift, and go to state 460
    '@'                               shift, and go to state 461
    '{'                               shift, and go to state 462

    string_builder          go to state 463
    expr_reader             go to state 464
    expr_call_pipe          go to state 465
    name_in_namespace       go to state 466
    expr_new                go to state 467
    expr_cast               go to state 468
    expr_type_decl          go to state 469
    expr_type_info          go to state 470
    block_or_lambda         go to state 471
    expr_full_block         go to state 472
    expr_numeric_const      go to state 473
    expr_named_call         go to state 474
    expr_method_call        go to state 475
    func_addr_expr          go to state 476
    expr_field              go to state 477
    expr_call               go to state 478
    expr                    go to state 813
    expr_generator          go to state 480
    expr_mtag               go to state 481
    basic_type_declaration  go to state 482
    make_decl               go to state 483
    make_struct_decl        go to state 484
    make_tuple_call         go to state 485
    make_dim_decl           go to state 486
    make_table_decl         go to state 487
    array_comprehension     go to state 488


State 615

  428 expr: expr "?." . "name"
  477 expr_mtag: expr "?." . "$f" '(' expr ')'

    "$f"    shift, and go to state 814
    "name"  shift, and go to state 815


State 616

  426 expr: expr "?[" . expr ']'

    "struct"                          shift, and go to state 414
    "class"                           shift, and go to state 415
    "true"                            shift, and go to state 416
    "false"                           shift, and go to state 417
    "new"                             shift, and go to state 418
    "typeinfo"                        shift, and go to state 419
    "type"                            shift, and go to state 420
    "array"                           shift, and go to state 421
    "null"                            shift, and go to state 422
    "table"                           shift, and go to state 423
    "deref"                           shift, and go to state 424
    "cast"                            shift, and go to state 425
    "upcast"                          shift, and go to state 426
    "addr"                            shift, and go to state 427
    "reinterpret"                     shift, and go to state 428
    "unsafe"                          shift, and go to state 429
    "fixed_array"                     shift, and go to state 430
    "default"                         shift, and go to state 431
    "bool"                            shift, and go to state 228
    "void"                            shift, and go to state 229
    "string"                          shift, and go to state 230
    "int"                             shift, and go to state 232
    "int2"                            shift, and go to state 233
    "int3"                            shift, and go to state 234
    "int4"                            shift, and go to state 235
    "uint"                            shift, and go to state 236
    "bitfield"                        shift, and go to state 432
    "uint2"                           shift, and go to state 238
    "uint3"                           shift, and go to state 239
    "uint4"                           shift, and go to state 240
    "float"                           shift, and go to state 241
    "float2"                          shift, and go to state 242
    "float3"                          shift, and go to state 243
    "float4"                          shift, and go to state 244
    "range"                           shift, and go to state 245
    "urange"                          shift, and go to state 246
    "range64"                         shift, and go to state 247
    "urange64"                        shift, and go to state 248
    "int64"                           shift, and go to state 250
    "uint64"                          shift, and go to state 251
    "double"                          shift, and go to state 252
    "int8"                            shift, and go to state 255
    "uint8"                           shift, and go to state 256
    "int16"                           shift, and go to state 257
    "uint16"                          shift, and go to state 258
    "tuple"                           shift, and go to state 433
    "variant"                         shift, and go to state 434
    "generator"                       shift, and go to state 435
    "++"                              shift, and go to state 436
    "--"                              shift, and go to state 437
    "::"                              shift, and go to state 55
    "$$"                              shift, and go to state 438
    "$i"                              shift, and go to state 439
    "$v"                              shift, and go to state 440
    "$b"                              shift, and go to state 441
    "$a"                              shift, and go to state 442
    "$c"                              shift, and go to state 443
    "..."                             shift, and go to state 444
    "integer constant"                shift, and go to state 445
    "long integer constant"           shift, and go to state 446
    "unsigned integer constant"       shift, and go to state 447
    "unsigned long integer constant"  shift, and go to state 448
    "unsigned int8 constant"          shift, and go to state 449
    "floating point constant"         shift, and go to state 450
    "double constant"                 shift, and go to state 451
    "name"                            shift, and go to state 56
    "start of the string"             shift, and go to state 452
    '-'                               shift, and go to state 453
    '+'                               shift, and go to state 454
    '*'                               shift, and go to state 455
    '%'                               shift, and go to state 13
    '~'                               shift, and go to state 456
    '!'                               shift, and go to state 457
    '['                               shift, and go to state 458
    '('                               shift, and go to state 459
    '$'                               shift, and go to state 460
    '@'                               shift, and go to state 461
    '{'                               shift, and go to state 462

    string_builder          go to state 463
    expr_reader             go to state 464
    expr_call_pipe          go to state 465
    name_in_namespace       go to state 466
    expr_new                go to state 467
    expr_cast               go to state 468
    expr_type_decl          go to state 469
    expr_type_info          go to state 470
    block_or_lambda         go to state 471
    expr_full_block         go to state 472
    expr_numeric_const      go to state 473
    expr_named_call         go to state 474
    expr_method_call        go to state 475
    func_addr_expr          go to state 476
    expr_field              go to state 477
    expr_call               go to state 478
    expr                    go to state 816
    expr_generator          go to state 480
    expr_mtag               go to state 481
    basic_type_declaration  go to state 482
    make_decl               go to state 483
    make_struct_decl        go to state 484
    make_tuple_call         go to state 485
    make_dim_decl           go to state 486
    make_table_decl         go to state 487
    array_comprehension     go to state 488


State 617

  460 expr: expr "<|" . expr

    "struct"                          shift, and go to state 414
    "class"                           shift, and go to state 415
    "true"                            shift, and go to state 416
    "false"                           shift, and go to state 417
    "new"                             shift, and go to state 418
    "typeinfo"                        shift, and go to state 419
    "type"                            shift, and go to state 420
    "array"                           shift, and go to state 421
    "null"                            shift, and go to state 422
    "table"                           shift, and go to state 423
    "deref"                           shift, and go to state 424
    "cast"                            shift, and go to state 425
    "upcast"                          shift, and go to state 426
    "addr"                            shift, and go to state 427
    "reinterpret"                     shift, and go to state 428
    "unsafe"                          shift, and go to state 429
    "fixed_array"                     shift, and go to state 430
    "default"                         shift, and go to state 431
    "bool"                            shift, and go to state 228
    "void"                            shift, and go to state 229
    "string"                          shift, and go to state 230
    "int"                             shift, and go to state 232
    "int2"                            shift, and go to state 233
    "int3"                            shift, and go to state 234
    "int4"                            shift, and go to state 235
    "uint"                            shift, and go to state 236
    "bitfield"                        shift, and go to state 432
    "uint2"                           shift, and go to state 238
    "uint3"                           shift, and go to state 239
    "uint4"                           shift, and go to state 240
    "float"                           shift, and go to state 241
    "float2"                          shift, and go to state 242
    "float3"                          shift, and go to state 243
    "float4"                          shift, and go to state 244
    "range"                           shift, and go to state 245
    "urange"                          shift, and go to state 246
    "range64"                         shift, and go to state 247
    "urange64"                        shift, and go to state 248
    "int64"                           shift, and go to state 250
    "uint64"                          shift, and go to state 251
    "double"                          shift, and go to state 252
    "int8"                            shift, and go to state 255
    "uint8"                           shift, and go to state 256
    "int16"                           shift, and go to state 257
    "uint16"                          shift, and go to state 258
    "tuple"                           shift, and go to state 433
    "variant"                         shift, and go to state 434
    "generator"                       shift, and go to state 435
    "++"                              shift, and go to state 436
    "--"                              shift, and go to state 437
    "::"                              shift, and go to state 55
    "$$"                              shift, and go to state 438
    "$i"                              shift, and go to state 439
    "$v"                              shift, and go to state 440
    "$b"                              shift, and go to state 441
    "$a"                              shift, and go to state 442
    "$c"                              shift, and go to state 443
    "..."                             shift, and go to state 444
    "integer constant"                shift, and go to state 445
    "long integer constant"           shift, and go to state 446
    "unsigned integer constant"       shift, and go to state 447
    "unsigned long integer constant"  shift, and go to state 448
    "unsigned int8 constant"          shift, and go to state 449
    "floating point constant"         shift, and go to state 450
    "double constant"                 shift, and go to state 451
    "name"                            shift, and go to state 56
    "start of the string"             shift, and go to state 452
    '-'                               shift, and go to state 453
    '+'                               shift, and go to state 454
    '*'                               shift, and go to state 455
    '%'                               shift, and go to state 13
    '~'                               shift, and go to state 456
    '!'                               shift, and go to state 457
    '['                               shift, and go to state 458
    '('                               shift, and go to state 459
    '$'                               shift, and go to state 460
    '@'                               shift, and go to state 461
    '{'                               shift, and go to state 462

    string_builder          go to state 463
    expr_reader             go to state 464
    expr_call_pipe          go to state 465
    name_in_namespace       go to state 466
    expr_new                go to state 467
    expr_cast               go to state 468
    expr_type_decl          go to state 469
    expr_type_info          go to state 470
    block_or_lambda         go to state 471
    expr_full_block         go to state 472
    expr_numeric_const      go to state 473
    expr_named_call         go to state 474
    expr_method_call        go to state 475
    func_addr_expr          go to state 476
    expr_field              go to state 477
    expr_call               go to state 478
    expr                    go to state 817
    expr_generator          go to state 480
    expr_mtag               go to state 481
    basic_type_declaration  go to state 482
    make_decl               go to state 483
    make_struct_decl        go to state 484
    make_tuple_call         go to state 485
    make_dim_decl           go to state 486
    make_table_decl         go to state 487
    array_comprehension     go to state 488


State 618

  461 expr: expr "|>" . expr
  462     | expr "|>" . basic_type_declaration

    "struct"                          shift, and go to state 414
    "class"                           shift, and go to state 415
    "true"                            shift, and go to state 416
    "false"                           shift, and go to state 417
    "new"                             shift, and go to state 418
    "typeinfo"                        shift, and go to state 419
    "type"                            shift, and go to state 420
    "array"                           shift, and go to state 421
    "null"                            shift, and go to state 422
    "table"                           shift, and go to state 423
    "deref"                           shift, and go to state 424
    "cast"                            shift, and go to state 425
    "upcast"                          shift, and go to state 426
    "addr"                            shift, and go to state 427
    "reinterpret"                     shift, and go to state 428
    "unsafe"                          shift, and go to state 429
    "fixed_array"                     shift, and go to state 430
    "default"                         shift, and go to state 431
    "bool"                            shift, and go to state 228
    "void"                            shift, and go to state 229
    "string"                          shift, and go to state 230
    "int"                             shift, and go to state 232
    "int2"                            shift, and go to state 233
    "int3"                            shift, and go to state 234
    "int4"                            shift, and go to state 235
    "uint"                            shift, and go to state 236
    "bitfield"                        shift, and go to state 432
    "uint2"                           shift, and go to state 238
    "uint3"                           shift, and go to state 239
    "uint4"                           shift, and go to state 240
    "float"                           shift, and go to state 241
    "float2"                          shift, and go to state 242
    "float3"                          shift, and go to state 243
    "float4"                          shift, and go to state 244
    "range"                           shift, and go to state 245
    "urange"                          shift, and go to state 246
    "range64"                         shift, and go to state 247
    "urange64"                        shift, and go to state 248
    "int64"                           shift, and go to state 250
    "uint64"                          shift, and go to state 251
    "double"                          shift, and go to state 252
    "int8"                            shift, and go to state 255
    "uint8"                           shift, and go to state 256
    "int16"                           shift, and go to state 257
    "uint16"                          shift, and go to state 258
    "tuple"                           shift, and go to state 433
    "variant"                         shift, and go to state 434
    "generator"                       shift, and go to state 435
    "++"                              shift, and go to state 436
    "--"                              shift, and go to state 437
    "::"                              shift, and go to state 55
    "$$"                              shift, and go to state 438
    "$i"                              shift, and go to state 439
    "$v"                              shift, and go to state 440
    "$b"                              shift, and go to state 441
    "$a"                              shift, and go to state 442
    "$c"                              shift, and go to state 443
    "..."                             shift, and go to state 444
    "integer constant"                shift, and go to state 445
    "long integer constant"           shift, and go to state 446
    "unsigned integer constant"       shift, and go to state 447
    "unsigned long integer constant"  shift, and go to state 448
    "unsigned int8 constant"          shift, and go to state 449
    "floating point constant"         shift, and go to state 450
    "double constant"                 shift, and go to state 451
    "name"                            shift, and go to state 56
    "start of the string"             shift, and go to state 452
    '-'                               shift, and go to state 453
    '+'                               shift, and go to state 454
    '*'                               shift, and go to state 455
    '%'                               shift, and go to state 13
    '~'                               shift, and go to state 456
    '!'                               shift, and go to state 457
    '['                               shift, and go to state 458
    '('                               shift, and go to state 459
    '$'                               shift, and go to state 460
    '@'                               shift, and go to state 461
    '{'                               shift, and go to state 462

    string_builder          go to state 463
    expr_reader             go to state 464
    expr_call_pipe          go to state 465
    name_in_namespace       go to state 466
    expr_new                go to state 467
    expr_cast               go to state 468
    expr_type_decl          go to state 469
    expr_type_info          go to state 470
    block_or_lambda         go to state 471
    expr_full_block         go to state 472
    expr_numeric_const      go to state 473
    expr_named_call         go to state 474
    expr_method_call        go to state 475
    func_addr_expr          go to state 476
    expr_field              go to state 477
    expr_call               go to state 478
    expr                    go to state 818
    expr_generator          go to state 480
    expr_mtag               go to state 481
    basic_type_declaration  go to state 819
    make_decl               go to state 483
    make_struct_decl        go to state 484
    make_tuple_call         go to state 485
    make_dim_decl           go to state 486
    make_table_decl         go to state 487
    array_comprehension     go to state 488


State 619

  399 expr: expr "<<<" . expr

    "struct"                          shift, and go to state 414
    "class"                           shift, and go to state 415
    "true"                            shift, and go to state 416
    "false"                           shift, and go to state 417
    "new"                             shift, and go to state 418
    "typeinfo"                        shift, and go to state 419
    "type"                            shift, and go to state 420
    "array"                           shift, and go to state 421
    "null"                            shift, and go to state 422
    "table"                           shift, and go to state 423
    "deref"                           shift, and go to state 424
    "cast"                            shift, and go to state 425
    "upcast"                          shift, and go to state 426
    "addr"                            shift, and go to state 427
    "reinterpret"                     shift, and go to state 428
    "unsafe"                          shift, and go to state 429
    "fixed_array"                     shift, and go to state 430
    "default"                         shift, and go to state 431
    "bool"                            shift, and go to state 228
    "void"                            shift, and go to state 229
    "string"                          shift, and go to state 230
    "int"                             shift, and go to state 232
    "int2"                            shift, and go to state 233
    "int3"                            shift, and go to state 234
    "int4"                            shift, and go to state 235
    "uint"                            shift, and go to state 236
    "bitfield"                        shift, and go to state 432
    "uint2"                           shift, and go to state 238
    "uint3"                           shift, and go to state 239
    "uint4"                           shift, and go to state 240
    "float"                           shift, and go to state 241
    "float2"                          shift, and go to state 242
    "float3"                          shift, and go to state 243
    "float4"                          shift, and go to state 244
    "range"                           shift, and go to state 245
    "urange"                          shift, and go to state 246
    "range64"                         shift, and go to state 247
    "urange64"                        shift, and go to state 248
    "int64"                           shift, and go to state 250
    "uint64"                          shift, and go to state 251
    "double"                          shift, and go to state 252
    "int8"                            shift, and go to state 255
    "uint8"                           shift, and go to state 256
    "int16"                           shift, and go to state 257
    "uint16"                          shift, and go to state 258
    "tuple"                           shift, and go to state 433
    "variant"                         shift, and go to state 434
    "generator"                       shift, and go to state 435
    "++"                              shift, and go to state 436
    "--"                              shift, and go to state 437
    "::"                              shift, and go to state 55
    "$$"                              shift, and go to state 438
    "$i"                              shift, and go to state 439
    "$v"                              shift, and go to state 440
    "$b"                              shift, and go to state 441
    "$a"                              shift, and go to state 442
    "$c"                              shift, and go to state 443
    "..."                             shift, and go to state 444
    "integer constant"                shift, and go to state 445
    "long integer constant"           shift, and go to state 446
    "unsigned integer constant"       shift, and go to state 447
    "unsigned long integer constant"  shift, and go to state 448
    "unsigned int8 constant"          shift, and go to state 449
    "floating point constant"         shift, and go to state 450
    "double constant"                 shift, and go to state 451
    "name"                            shift, and go to state 56
    "start of the string"             shift, and go to state 452
    '-'                               shift, and go to state 453
    '+'                               shift, and go to state 454
    '*'                               shift, and go to state 455
    '%'                               shift, and go to state 13
    '~'                               shift, and go to state 456
    '!'                               shift, and go to state 457
    '['                               shift, and go to state 458
    '('                               shift, and go to state 459
    '$'                               shift, and go to state 460
    '@'                               shift, and go to state 461
    '{'                               shift, and go to state 462

    string_builder          go to state 463
    expr_reader             go to state 464
    expr_call_pipe          go to state 465
    name_in_namespace       go to state 466
    expr_new                go to state 467
    expr_cast               go to state 468
    expr_type_decl          go to state 469
    expr_type_info          go to state 470
    block_or_lambda         go to state 471
    expr_full_block         go to state 472
    expr_numeric_const      go to state 473
    expr_named_call         go to state 474
    expr_method_call        go to state 475
    func_addr_expr          go to state 476
    expr_field              go to state 477
    expr_call               go to state 478
    expr                    go to state 820
    expr_generator          go to state 480
    expr_mtag               go to state 481
    basic_type_declaration  go to state 482
    make_decl               go to state 483
    make_struct_decl        go to state 484
    make_tuple_call         go to state 485
    make_dim_decl           go to state 486
    make_table_decl         go to state 487
    array_comprehension     go to state 488


State 620

  400 expr: expr ">>>" . expr

    "struct"                          shift, and go to state 414
    "class"                           shift, and go to state 415
    "true"                            shift, and go to state 416
    "false"                           shift, and go to state 417
    "new"                             shift, and go to state 418
    "typeinfo"                        shift, and go to state 419
    "type"                            shift, and go to state 420
    "array"                           shift, and go to state 421
    "null"                            shift, and go to state 422
    "table"                           shift, and go to state 423
    "deref"                           shift, and go to state 424
    "cast"                            shift, and go to state 425
    "upcast"                          shift, and go to state 426
    "addr"                            shift, and go to state 427
    "reinterpret"                     shift, and go to state 428
    "unsafe"                          shift, and go to state 429
    "fixed_array"                     shift, and go to state 430
    "default"                         shift, and go to state 431
    "bool"                            shift, and go to state 228
    "void"                            shift, and go to state 229
    "string"                          shift, and go to state 230
    "int"                             shift, and go to state 232
    "int2"                            shift, and go to state 233
    "int3"                            shift, and go to state 234
    "int4"                            shift, and go to state 235
    "uint"                            shift, and go to state 236
    "bitfield"                        shift, and go to state 432
    "uint2"                           shift, and go to state 238
    "uint3"                           shift, and go to state 239
    "uint4"                           shift, and go to state 240
    "float"                           shift, and go to state 241
    "float2"                          shift, and go to state 242
    "float3"                          shift, and go to state 243
    "float4"                          shift, and go to state 244
    "range"                           shift, and go to state 245
    "urange"                          shift, and go to state 246
    "range64"                         shift, and go to state 247
    "urange64"                        shift, and go to state 248
    "int64"                           shift, and go to state 250
    "uint64"                          shift, and go to state 251
    "double"                          shift, and go to state 252
    "int8"                            shift, and go to state 255
    "uint8"                           shift, and go to state 256
    "int16"                           shift, and go to state 257
    "uint16"                          shift, and go to state 258
    "tuple"                           shift, and go to state 433
    "variant"                         shift, and go to state 434
    "generator"                       shift, and go to state 435
    "++"                              shift, and go to state 436
    "--"                              shift, and go to state 437
    "::"                              shift, and go to state 55
    "$$"                              shift, and go to state 438
    "$i"                              shift, and go to state 439
    "$v"                              shift, and go to state 440
    "$b"                              shift, and go to state 441
    "$a"                              shift, and go to state 442
    "$c"                              shift, and go to state 443
    "..."                             shift, and go to state 444
    "integer constant"                shift, and go to state 445
    "long integer constant"           shift, and go to state 446
    "unsigned integer constant"       shift, and go to state 447
    "unsigned long integer constant"  shift, and go to state 448
    "unsigned int8 constant"          shift, and go to state 449
    "floating point constant"         shift, and go to state 450
    "double constant"                 shift, and go to state 451
    "name"                            shift, and go to state 56
    "start of the string"             shift, and go to state 452
    '-'                               shift, and go to state 453
    '+'                               shift, and go to state 454
    '*'                               shift, and go to state 455
    '%'                               shift, and go to state 13
    '~'                               shift, and go to state 456
    '!'                               shift, and go to state 457
    '['                               shift, and go to state 458
    '('                               shift, and go to state 459
    '$'                               shift, and go to state 460
    '@'                               shift, and go to state 461
    '{'                               shift, and go to state 462

    string_builder          go to state 463
    expr_reader             go to state 464
    expr_call_pipe          go to state 465
    name_in_namespace       go to state 466
    expr_new                go to state 467
    expr_cast               go to state 468
    expr_type_decl          go to state 469
    expr_type_info          go to state 470
    block_or_lambda         go to state 471
    expr_full_block         go to state 472
    expr_numeric_const      go to state 473
    expr_named_call         go to state 474
    expr_method_call        go to state 475
    func_addr_expr          go to state 476
    expr_field              go to state 477
    expr_call               go to state 478
    expr                    go to state 821
    expr_generator          go to state 480
    expr_mtag               go to state 481
    basic_type_declaration  go to state 482
    make_decl               go to state 483
    make_struct_decl        go to state 484
    make_tuple_call         go to state 485
    make_dim_decl           go to state 486
    make_table_decl         go to state 487
    array_comprehension     go to state 488


State 621

  415 expr: expr "&&" . expr

    "struct"                          shift, and go to state 414
    "class"                           shift, and go to state 415
    "true"                            shift, and go to state 416
    "false"                           shift, and go to state 417
    "new"                             shift, and go to state 418
    "typeinfo"                        shift, and go to state 419
    "type"                            shift, and go to state 420
    "array"                           shift, and go to state 421
    "null"                            shift, and go to state 422
    "table"                           shift, and go to state 423
    "deref"                           shift, and go to state 424
    "cast"                            shift, and go to state 425
    "upcast"                          shift, and go to state 426
    "addr"                            shift, and go to state 427
    "reinterpret"                     shift, and go to state 428
    "unsafe"                          shift, and go to state 429
    "fixed_array"                     shift, and go to state 430
    "default"                         shift, and go to state 431
    "bool"                            shift, and go to state 228
    "void"                            shift, and go to state 229
    "string"                          shift, and go to state 230
    "int"                             shift, and go to state 232
    "int2"                            shift, and go to state 233
    "int3"                            shift, and go to state 234
    "int4"                            shift, and go to state 235
    "uint"                            shift, and go to state 236
    "bitfield"                        shift, and go to state 432
    "uint2"                           shift, and go to state 238
    "uint3"                           shift, and go to state 239
    "uint4"                           shift, and go to state 240
    "float"                           shift, and go to state 241
    "float2"                          shift, and go to state 242
    "float3"                          shift, and go to state 243
    "float4"                          shift, and go to state 244
    "range"                           shift, and go to state 245
    "urange"                          shift, and go to state 246
    "range64"                         shift, and go to state 247
    "urange64"                        shift, and go to state 248
    "int64"                           shift, and go to state 250
    "uint64"                          shift, and go to state 251
    "double"                          shift, and go to state 252
    "int8"                            shift, and go to state 255
    "uint8"                           shift, and go to state 256
    "int16"                           shift, and go to state 257
    "uint16"                          shift, and go to state 258
    "tuple"                           shift, and go to state 433
    "variant"                         shift, and go to state 434
    "generator"                       shift, and go to state 435
    "++"                              shift, and go to state 436
    "--"                              shift, and go to state 437
    "::"                              shift, and go to state 55
    "$$"                              shift, and go to state 438
    "$i"                              shift, and go to state 439
    "$v"                              shift, and go to state 440
    "$b"                              shift, and go to state 441
    "$a"                              shift, and go to state 442
    "$c"                              shift, and go to state 443
    "..."                             shift, and go to state 444
    "integer constant"                shift, and go to state 445
    "long integer constant"           shift, and go to state 446
    "unsigned integer constant"       shift, and go to state 447
    "unsigned long integer constant"  shift, and go to state 448
    "unsigned int8 constant"          shift, and go to state 449
    "floating point constant"         shift, and go to state 450
    "double constant"                 shift, and go to state 451
    "name"                            shift, and go to state 56
    "start of the string"             shift, and go to state 452
    '-'                               shift, and go to state 453
    '+'                               shift, and go to state 454
    '*'                               shift, and go to state 455
    '%'                               shift, and go to state 13
    '~'                               shift, and go to state 456
    '!'                               shift, and go to state 457
    '['                               shift, and go to state 458
    '('                               shift, and go to state 459
    '$'                               shift, and go to state 460
    '@'                               shift, and go to state 461
    '{'                               shift, and go to state 462

    string_builder          go to state 463
    expr_reader             go to state 464
    expr_call_pipe          go to state 465
    name_in_namespace       go to state 466
    expr_new                go to state 467
    expr_cast               go to state 468
    expr_type_decl          go to state 469
    expr_type_info          go to state 470
    block_or_lambda         go to state 471
    expr_full_block         go to state 472
    expr_numeric_const      go to state 473
    expr_named_call         go to state 474
    expr_method_call        go to state 475
    func_addr_expr          go to state 476
    expr_field              go to state 477
    expr_call               go to state 478
    expr                    go to state 822
    expr_generator          go to state 480
    expr_mtag               go to state 481
    basic_type_declaration  go to state 482
    make_decl               go to state 483
    make_struct_decl        go to state 484
    make_tuple_call         go to state 485
    make_dim_decl           go to state 486
    make_table_decl         go to state 487
    array_comprehension     go to state 488


State 622

  416 expr: expr "||" . expr

    "struct"                          shift, and go to state 414
    "class"                           shift, and go to state 415
    "true"                            shift, and go to state 416
    "false"                           shift, and go to state 417
    "new"                             shift, and go to state 418
    "typeinfo"                        shift, and go to state 419
    "type"                            shift, and go to state 420
    "array"                           shift, and go to state 421
    "null"                            shift, and go to state 422
    "table"                           shift, and go to state 423
    "deref"                           shift, and go to state 424
    "cast"                            shift, and go to state 425
    "upcast"                          shift, and go to state 426
    "addr"                            shift, and go to state 427
    "reinterpret"                     shift, and go to state 428
    "unsafe"                          shift, and go to state 429
    "fixed_array"                     shift, and go to state 430
    "default"                         shift, and go to state 431
    "bool"                            shift, and go to state 228
    "void"                            shift, and go to state 229
    "string"                          shift, and go to state 230
    "int"                             shift, and go to state 232
    "int2"                            shift, and go to state 233
    "int3"                            shift, and go to state 234
    "int4"                            shift, and go to state 235
    "uint"                            shift, and go to state 236
    "bitfield"                        shift, and go to state 432
    "uint2"                           shift, and go to state 238
    "uint3"                           shift, and go to state 239
    "uint4"                           shift, and go to state 240
    "float"                           shift, and go to state 241
    "float2"                          shift, and go to state 242
    "float3"                          shift, and go to state 243
    "float4"                          shift, and go to state 244
    "range"                           shift, and go to state 245
    "urange"                          shift, and go to state 246
    "range64"                         shift, and go to state 247
    "urange64"                        shift, and go to state 248
    "int64"                           shift, and go to state 250
    "uint64"                          shift, and go to state 251
    "double"                          shift, and go to state 252
    "int8"                            shift, and go to state 255
    "uint8"                           shift, and go to state 256
    "int16"                           shift, and go to state 257
    "uint16"                          shift, and go to state 258
    "tuple"                           shift, and go to state 433
    "variant"                         shift, and go to state 434
    "generator"                       shift, and go to state 435
    "++"                              shift, and go to state 436
    "--"                              shift, and go to state 437
    "::"                              shift, and go to state 55
    "$$"                              shift, and go to state 438
    "$i"                              shift, and go to state 439
    "$v"                              shift, and go to state 440
    "$b"                              shift, and go to state 441
    "$a"                              shift, and go to state 442
    "$c"                              shift, and go to state 443
    "..."                             shift, and go to state 444
    "integer constant"                shift, and go to state 445
    "long integer constant"           shift, and go to state 446
    "unsigned integer constant"       shift, and go to state 447
    "unsigned long integer constant"  shift, and go to state 448
    "unsigned int8 constant"          shift, and go to state 449
    "floating point constant"         shift, and go to state 450
    "double constant"                 shift, and go to state 451
    "name"                            shift, and go to state 56
    "start of the string"             shift, and go to state 452
    '-'                               shift, and go to state 453
    '+'                               shift, and go to state 454
    '*'                               shift, and go to state 455
    '%'                               shift, and go to state 13
    '~'                               shift, and go to state 456
    '!'                               shift, and go to state 457
    '['                               shift, and go to state 458
    '('                               shift, and go to state 459
    '$'                               shift, and go to state 460
    '@'                               shift, and go to state 461
    '{'                               shift, and go to state 462

    string_builder          go to state 463
    expr_reader             go to state 464
    expr_call_pipe          go to state 465
    name_in_namespace       go to state 466
    expr_new                go to state 467
    expr_cast               go to state 468
    expr_type_decl          go to state 469
    expr_type_info          go to state 470
    block_or_lambda         go to state 471
    expr_full_block         go to state 472
    expr_numeric_const      go to state 473
    expr_named_call         go to state 474
    expr_method_call        go to state 475
    func_addr_expr          go to state 476
    expr_field              go to state 477
    expr_call               go to state 478
    expr                    go to state 823
    expr_generator          go to state 480
    expr_mtag               go to state 481
    basic_type_declaration  go to state 482
    make_decl               go to state 483
    make_struct_decl        go to state 484
    make_tuple_call         go to state 485
    make_dim_decl           go to state 486
    make_table_decl         go to state 487
    array_comprehension     go to state 488


State 623

  417 expr: expr "^^" . expr

    "struct"                          shift, and go to state 414
    "class"                           shift, and go to state 415
    "true"                            shift, and go to state 416
    "false"                           shift, and go to state 417
    "new"                             shift, and go to state 418
    "typeinfo"                        shift, and go to state 419
    "type"                            shift, and go to state 420
    "array"                           shift, and go to state 421
    "null"                            shift, and go to state 422
    "table"                           shift, and go to state 423
    "deref"                           shift, and go to state 424
    "cast"                            shift, and go to state 425
    "upcast"                          shift, and go to state 426
    "addr"                            shift, and go to state 427
    "reinterpret"                     shift, and go to state 428
    "unsafe"                          shift, and go to state 429
    "fixed_array"                     shift, and go to state 430
    "default"                         shift, and go to state 431
    "bool"                            shift, and go to state 228
    "void"                            shift, and go to state 229
    "string"                          shift, and go to state 230
    "int"                             shift, and go to state 232
    "int2"                            shift, and go to state 233
    "int3"                            shift, and go to state 234
    "int4"                            shift, and go to state 235
    "uint"                            shift, and go to state 236
    "bitfield"                        shift, and go to state 432
    "uint2"                           shift, and go to state 238
    "uint3"                           shift, and go to state 239
    "uint4"                           shift, and go to state 240
    "float"                           shift, and go to state 241
    "float2"                          shift, and go to state 242
    "float3"                          shift, and go to state 243
    "float4"                          shift, and go to state 244
    "range"                           shift, and go to state 245
    "urange"                          shift, and go to state 246
    "range64"                         shift, and go to state 247
    "urange64"                        shift, and go to state 248
    "int64"                           shift, and go to state 250
    "uint64"                          shift, and go to state 251
    "double"                          shift, and go to state 252
    "int8"                            shift, and go to state 255
    "uint8"                           shift, and go to state 256
    "int16"                           shift, and go to state 257
    "uint16"                          shift, and go to state 258
    "tuple"                           shift, and go to state 433
    "variant"                         shift, and go to state 434
    "generator"                       shift, and go to state 435
    "++"                              shift, and go to state 436
    "--"                              shift, and go to state 437
    "::"                              shift, and go to state 55
    "$$"                              shift, and go to state 438
    "$i"                              shift, and go to state 439
    "$v"                              shift, and go to state 440
    "$b"                              shift, and go to state 441
    "$a"                              shift, and go to state 442
    "$c"                              shift, and go to state 443
    "..."                             shift, and go to state 444
    "integer constant"                shift, and go to state 445
    "long integer constant"           shift, and go to state 446
    "unsigned integer constant"       shift, and go to state 447
    "unsigned long integer constant"  shift, and go to state 448
    "unsigned int8 constant"          shift, and go to state 449
    "floating point constant"         shift, and go to state 450
    "double constant"                 shift, and go to state 451
    "name"                            shift, and go to state 56
    "start of the string"             shift, and go to state 452
    '-'                               shift, and go to state 453
    '+'                               shift, and go to state 454
    '*'                               shift, and go to state 455
    '%'                               shift, and go to state 13
    '~'                               shift, and go to state 456
    '!'                               shift, and go to state 457
    '['                               shift, and go to state 458
    '('                               shift, and go to state 459
    '$'                               shift, and go to state 460
    '@'                               shift, and go to state 461
    '{'                               shift, and go to state 462

    string_builder          go to state 463
    expr_reader             go to state 464
    expr_call_pipe          go to state 465
    name_in_namespace       go to state 466
    expr_new                go to state 467
    expr_cast               go to state 468
    expr_type_decl          go to state 469
    expr_type_info          go to state 470
    block_or_lambda         go to state 471
    expr_full_block         go to state 472
    expr_numeric_const      go to state 473
    expr_named_call         go to state 474
    expr_method_call        go to state 475
    func_addr_expr          go to state 476
    expr_field              go to state 477
    expr_call               go to state 478
    expr                    go to state 824
    expr_generator          go to state 480
    expr_mtag               go to state 481
    basic_type_declaration  go to state 482
    make_decl               go to state 483
    make_struct_decl        go to state 484
    make_tuple_call         go to state 485
    make_dim_decl           go to state 486
    make_table_decl         go to state 487
    array_comprehension     go to state 488


State 624

  418 expr: expr ".." . expr

    "struct"                          shift, and go to state 414
    "class"                           shift, and go to state 415
    "true"                            shift, and go to state 416
    "false"                           shift, and go to state 417
    "new"                             shift, and go to state 418
    "typeinfo"                        shift, and go to state 419
    "type"                            shift, and go to state 420
    "array"                           shift, and go to state 421
    "null"                            shift, and go to state 422
    "table"                           shift, and go to state 423
    "deref"                           shift, and go to state 424
    "cast"                            shift, and go to state 425
    "upcast"                          shift, and go to state 426
    "addr"                            shift, and go to state 427
    "reinterpret"                     shift, and go to state 428
    "unsafe"                          shift, and go to state 429
    "fixed_array"                     shift, and go to state 430
    "default"                         shift, and go to state 431
    "bool"                            shift, and go to state 228
    "void"                            shift, and go to state 229
    "string"                          shift, and go to state 230
    "int"                             shift, and go to state 232
    "int2"                            shift, and go to state 233
    "int3"                            shift, and go to state 234
    "int4"                            shift, and go to state 235
    "uint"                            shift, and go to state 236
    "bitfield"                        shift, and go to state 432
    "uint2"                           shift, and go to state 238
    "uint3"                           shift, and go to state 239
    "uint4"                           shift, and go to state 240
    "float"                           shift, and go to state 241
    "float2"                          shift, and go to state 242
    "float3"                          shift, and go to state 243
    "float4"                          shift, and go to state 244
    "range"                           shift, and go to state 245
    "urange"                          shift, and go to state 246
    "range64"                         shift, and go to state 247
    "urange64"                        shift, and go to state 248
    "int64"                           shift, and go to state 250
    "uint64"                          shift, and go to state 251
    "double"                          shift, and go to state 252
    "int8"                            shift, and go to state 255
    "uint8"                           shift, and go to state 256
    "int16"                           shift, and go to state 257
    "uint16"                          shift, and go to state 258
    "tuple"                           shift, and go to state 433
    "variant"                         shift, and go to state 434
    "generator"                       shift, and go to state 435
    "++"                              shift, and go to state 436
    "--"                              shift, and go to state 437
    "::"                              shift, and go to state 55
    "$$"                              shift, and go to state 438
    "$i"                              shift, and go to state 439
    "$v"                              shift, and go to state 440
    "$b"                              shift, and go to state 441
    "$a"                              shift, and go to state 442
    "$c"                              shift, and go to state 443
    "..."                             shift, and go to state 444
    "integer constant"                shift, and go to state 445
    "long integer constant"           shift, and go to state 446
    "unsigned integer constant"       shift, and go to state 447
    "unsigned long integer constant"  shift, and go to state 448
    "unsigned int8 constant"          shift, and go to state 449
    "floating point constant"         shift, and go to state 450
    "double constant"                 shift, and go to state 451
    "name"                            shift, and go to state 56
    "start of the string"             shift, and go to state 452
    '-'                               shift, and go to state 453
    '+'                               shift, and go to state 454
    '*'                               shift, and go to state 455
    '%'                               shift, and go to state 13
    '~'                               shift, and go to state 456
    '!'                               shift, and go to state 457
    '['                               shift, and go to state 458
    '('                               shift, and go to state 459
    '$'                               shift, and go to state 460
    '@'                               shift, and go to state 461
    '{'                               shift, and go to state 462

    string_builder          go to state 463
    expr_reader             go to state 464
    expr_call_pipe          go to state 465
    name_in_namespace       go to state 466
    expr_new                go to state 467
    expr_cast               go to state 468
    expr_type_decl          go to state 469
    expr_type_info          go to state 470
    block_or_lambda         go to state 471
    expr_full_block         go to state 472
    expr_numeric_const      go to state 473
    expr_named_call         go to state 474
    expr_method_call        go to state 475
    func_addr_expr          go to state 476
    expr_field              go to state 477
    expr_call               go to state 478
    expr                    go to state 825
    expr_generator          go to state 480
    expr_mtag               go to state 481
    basic_type_declaration  go to state 482
    make_decl               go to state 483
    make_struct_decl        go to state 484
    make_tuple_call         go to state 485
    make_dim_decl           go to state 486
    make_table_decl         go to state 487
    array_comprehension     go to state 488


State 625

  437 expr: expr '?' . expr ':' expr
  448     | expr '?' . "as" "name"
  451     | expr '?' . "as" "type" '<' $@31 type_declaration '>' $@32
  452     | expr '?' . "as" basic_type_declaration
  481 expr_mtag: expr '?' . "as" "$f" '(' expr ')'

    "struct"                          shift, and go to state 414
    "class"                           shift, and go to state 415
    "true"                            shift, and go to state 416
    "false"                           shift, and go to state 417
    "new"                             shift, and go to state 418
    "typeinfo"                        shift, and go to state 419
    "type"                            shift, and go to state 420
    "as"                              shift, and go to state 826
    "array"                           shift, and go to state 421
    "null"                            shift, and go to state 422
    "table"                           shift, and go to state 423
    "deref"                           shift, and go to state 424
    "cast"                            shift, and go to state 425
    "upcast"                          shift, and go to state 426
    "addr"                            shift, and go to state 427
    "reinterpret"                     shift, and go to state 428
    "unsafe"                          shift, and go to state 429
    "fixed_array"                     shift, and go to state 430
    "default"                         shift, and go to state 431
    "bool"                            shift, and go to state 228
    "void"                            shift, and go to state 229
    "string"                          shift, and go to state 230
    "int"                             shift, and go to state 232
    "int2"                            shift, and go to state 233
    "int3"                            shift, and go to state 234
    "int4"                            shift, and go to state 235
    "uint"                            shift, and go to state 236
    "bitfield"                        shift, and go to state 432
    "uint2"                           shift, and go to state 238
    "uint3"                           shift, and go to state 239
    "uint4"                           shift, and go to state 240
    "float"                           shift, and go to state 241
    "float2"                          shift, and go to state 242
    "float3"                          shift, and go to state 243
    "float4"                          shift, and go to state 244
    "range"                           shift, and go to state 245
    "urange"                          shift, and go to state 246
    "range64"                         shift, and go to state 247
    "urange64"                        shift, and go to state 248
    "int64"                           shift, and go to state 250
    "uint64"                          shift, and go to state 251
    "double"                          shift, and go to state 252
    "int8"                            shift, and go to state 255
    "uint8"                           shift, and go to state 256
    "int16"                           shift, and go to state 257
    "uint16"                          shift, and go to state 258
    "tuple"                           shift, and go to state 433
    "variant"                         shift, and go to state 434
    "generator"                       shift, and go to state 435
    "++"                              shift, and go to state 436
    "--"                              shift, and go to state 437
    "::"                              shift, and go to state 55
    "$$"                              shift, and go to state 438
    "$i"                              shift, and go to state 439
    "$v"                              shift, and go to state 440
    "$b"                              shift, and go to state 441
    "$a"                              shift, and go to state 442
    "$c"                              shift, and go to state 443
    "..."                             shift, and go to state 444
    "integer constant"                shift, and go to state 445
    "long integer constant"           shift, and go to state 446
    "unsigned integer constant"       shift, and go to state 447
    "unsigned long integer constant"  shift, and go to state 448
    "unsigned int8 constant"          shift, and go to state 449
    "floating point constant"         shift, and go to state 450
    "double constant"                 shift, and go to state 451
    "name"                            shift, and go to state 56
    "start of the string"             shift, and go to state 452
    '-'                               shift, and go to state 453
    '+'                               shift, and go to state 454
    '*'                               shift, and go to state 455
    '%'                               shift, and go to state 13
    '~'                               shift, and go to state 456
    '!'                               shift, and go to state 457
    '['                               shift, and go to state 458
    '('                               shift, and go to state 459
    '$'                               shift, and go to state 460
    '@'                               shift, and go to state 461
    '{'                               shift, and go to state 462

    string_builder          go to state 463
    expr_reader             go to state 464
    expr_call_pipe          go to state 465
    name_in_namespace       go to state 466
    expr_new                go to state 467
    expr_cast               go to state 468
    expr_type_decl          go to state 469
    expr_type_info          go to state 470
    block_or_lambda         go to state 471
    expr_full_block         go to state 472
    expr_numeric_const      go to state 473
    expr_named_call         go to state 474
    expr_method_call        go to state 475
    func_addr_expr          go to state 476
    expr_field              go to state 477
    expr_call               go to state 478
    expr                    go to state 827
    expr_generator          go to state 480
    expr_mtag               go to state 481
    basic_type_declaration  go to state 482
    make_decl               go to state 483
    make_struct_decl        go to state 484
    make_tuple_call         go to state 485
    make_dim_decl           go to state 486
    make_table_decl         go to state 487
    array_comprehension     go to state 488


State 626

  413 expr: expr '|' . expr

    "struct"                          shift, and go to state 414
    "class"                           shift, and go to state 415
    "true"                            shift, and go to state 416
    "false"                           shift, and go to state 417
    "new"                             shift, and go to state 418
    "typeinfo"                        shift, and go to state 419
    "type"                            shift, and go to state 420
    "array"                           shift, and go to state 421
    "null"                            shift, and go to state 422
    "table"                           shift, and go to state 423
    "deref"                           shift, and go to state 424
    "cast"                            shift, and go to state 425
    "upcast"                          shift, and go to state 426
    "addr"                            shift, and go to state 427
    "reinterpret"                     shift, and go to state 428
    "unsafe"                          shift, and go to state 429
    "fixed_array"                     shift, and go to state 430
    "default"                         shift, and go to state 431
    "bool"                            shift, and go to state 228
    "void"                            shift, and go to state 229
    "string"                          shift, and go to state 230
    "int"                             shift, and go to state 232
    "int2"                            shift, and go to state 233
    "int3"                            shift, and go to state 234
    "int4"                            shift, and go to state 235
    "uint"                            shift, and go to state 236
    "bitfield"                        shift, and go to state 432
    "uint2"                           shift, and go to state 238
    "uint3"                           shift, and go to state 239
    "uint4"                           shift, and go to state 240
    "float"                           shift, and go to state 241
    "float2"                          shift, and go to state 242
    "float3"                          shift, and go to state 243
    "float4"                          shift, and go to state 244
    "range"                           shift, and go to state 245
    "urange"                          shift, and go to state 246
    "range64"                         shift, and go to state 247
    "urange64"                        shift, and go to state 248
    "int64"                           shift, and go to state 250
    "uint64"                          shift, and go to state 251
    "double"                          shift, and go to state 252
    "int8"                            shift, and go to state 255
    "uint8"                           shift, and go to state 256
    "int16"                           shift, and go to state 257
    "uint16"                          shift, and go to state 258
    "tuple"                           shift, and go to state 433
    "variant"                         shift, and go to state 434
    "generator"                       shift, and go to state 435
    "++"                              shift, and go to state 436
    "--"                              shift, and go to state 437
    "::"                              shift, and go to state 55
    "$$"                              shift, and go to state 438
    "$i"                              shift, and go to state 439
    "$v"                              shift, and go to state 440
    "$b"                              shift, and go to state 441
    "$a"                              shift, and go to state 442
    "$c"                              shift, and go to state 443
    "..."                             shift, and go to state 444
    "integer constant"                shift, and go to state 445
    "long integer constant"           shift, and go to state 446
    "unsigned integer constant"       shift, and go to state 447
    "unsigned long integer constant"  shift, and go to state 448
    "unsigned int8 constant"          shift, and go to state 449
    "floating point constant"         shift, and go to state 450
    "double constant"                 shift, and go to state 451
    "name"                            shift, and go to state 56
    "start of the string"             shift, and go to state 452
    '-'                               shift, and go to state 453
    '+'                               shift, and go to state 454
    '*'                               shift, and go to state 455
    '%'                               shift, and go to state 13
    '~'                               shift, and go to state 456
    '!'                               shift, and go to state 457
    '['                               shift, and go to state 458
    '('                               shift, and go to state 459
    '$'                               shift, and go to state 460
    '@'                               shift, and go to state 461
    '{'                               shift, and go to state 462

    string_builder          go to state 463
    expr_reader             go to state 464
    expr_call_pipe          go to state 465
    name_in_namespace       go to state 466
    expr_new                go to state 467
    expr_cast               go to state 468
    expr_type_decl          go to state 469
    expr_type_info          go to state 470
    block_or_lambda         go to state 471
    expr_full_block         go to state 472
    expr_numeric_const      go to state 473
    expr_named_call         go to state 474
    expr_method_call        go to state 475
    func_addr_expr          go to state 476
    expr_field              go to state 477
    expr_call               go to state 478
    expr                    go to state 828
    expr_generator          go to state 480
    expr_mtag               go to state 481
    basic_type_declaration  go to state 482
    make_decl               go to state 483
    make_struct_decl        go to state 484
    make_tuple_call         go to state 485
    make_dim_decl           go to state 486
    make_table_decl         go to state 487
    array_comprehension     go to state 488


State 627

  414 expr: expr '^' . expr

    "struct"                          shift, and go to state 414
    "class"                           shift, and go to state 415
    "true"                            shift, and go to state 416
    "false"                           shift, and go to state 417
    "new"                             shift, and go to state 418
    "typeinfo"                        shift, and go to state 419
    "type"                            shift, and go to state 420
    "array"                           shift, and go to state 421
    "null"                            shift, and go to state 422
    "table"                           shift, and go to state 423
    "deref"                           shift, and go to state 424
    "cast"                            shift, and go to state 425
    "upcast"                          shift, and go to state 426
    "addr"                            shift, and go to state 427
    "reinterpret"                     shift, and go to state 428
    "unsafe"                          shift, and go to state 429
    "fixed_array"                     shift, and go to state 430
    "default"                         shift, and go to state 431
    "bool"                            shift, and go to state 228
    "void"                            shift, and go to state 229
    "string"                          shift, and go to state 230
    "int"                             shift, and go to state 232
    "int2"                            shift, and go to state 233
    "int3"                            shift, and go to state 234
    "int4"                            shift, and go to state 235
    "uint"                            shift, and go to state 236
    "bitfield"                        shift, and go to state 432
    "uint2"                           shift, and go to state 238
    "uint3"                           shift, and go to state 239
    "uint4"                           shift, and go to state 240
    "float"                           shift, and go to state 241
    "float2"                          shift, and go to state 242
    "float3"                          shift, and go to state 243
    "float4"                          shift, and go to state 244
    "range"                           shift, and go to state 245
    "urange"                          shift, and go to state 246
    "range64"                         shift, and go to state 247
    "urange64"                        shift, and go to state 248
    "int64"                           shift, and go to state 250
    "uint64"                          shift, and go to state 251
    "double"                          shift, and go to state 252
    "int8"                            shift, and go to state 255
    "uint8"                           shift, and go to state 256
    "int16"                           shift, and go to state 257
    "uint16"                          shift, and go to state 258
    "tuple"                           shift, and go to state 433
    "variant"                         shift, and go to state 434
    "generator"                       shift, and go to state 435
    "++"                              shift, and go to state 436
    "--"                              shift, and go to state 437
    "::"                              shift, and go to state 55
    "$$"                              shift, and go to state 438
    "$i"                              shift, and go to state 439
    "$v"                              shift, and go to state 440
    "$b"                              shift, and go to state 441
    "$a"                              shift, and go to state 442
    "$c"                              shift, and go to state 443
    "..."                             shift, and go to state 444
    "integer constant"                shift, and go to state 445
    "long integer constant"           shift, and go to state 446
    "unsigned integer constant"       shift, and go to state 447
    "unsigned long integer constant"  shift, and go to state 448
    "unsigned int8 constant"          shift, and go to state 449
    "floating point constant"         shift, and go to state 450
    "double constant"                 shift, and go to state 451
    "name"                            shift, and go to state 56
    "start of the string"             shift, and go to state 452
    '-'                               shift, and go to state 453
    '+'                               shift, and go to state 454
    '*'                               shift, and go to state 455
    '%'                               shift, and go to state 13
    '~'                               shift, and go to state 456
    '!'                               shift, and go to state 457
    '['                               shift, and go to state 458
    '('                               shift, and go to state 459
    '$'                               shift, and go to state 460
    '@'                               shift, and go to state 461
    '{'                               shift, and go to state 462

    string_builder          go to state 463
    expr_reader             go to state 464
    expr_call_pipe          go to state 465
    name_in_namespace       go to state 466
    expr_new                go to state 467
    expr_cast               go to state 468
    expr_type_decl          go to state 469
    expr_type_info          go to state 470
    block_or_lambda         go to state 471
    expr_full_block         go to state 472
    expr_numeric_const      go to state 473
    expr_named_call         go to state 474
    expr_method_call        go to state 475
    func_addr_expr          go to state 476
    expr_field              go to state 477
    expr_call               go to state 478
    expr                    go to state 829
    expr_generator          go to state 480
    expr_mtag               go to state 481
    basic_type_declaration  go to state 482
    make_decl               go to state 483
    make_struct_decl        go to state 484
    make_tuple_call         go to state 485
    make_dim_decl           go to state 486
    make_table_decl         go to state 487
    array_comprehension     go to state 488


State 628

  412 expr: expr '&' . expr

    "struct"                          shift, and go to state 414
    "class"                           shift, and go to state 415
    "true"                            shift, and go to state 416
    "false"                           shift, and go to state 417
    "new"                             shift, and go to state 418
    "typeinfo"                        shift, and go to state 419
    "type"                            shift, and go to state 420
    "array"                           shift, and go to state 421
    "null"                            shift, and go to state 422
    "table"                           shift, and go to state 423
    "deref"                           shift, and go to state 424
    "cast"                            shift, and go to state 425
    "upcast"                          shift, and go to state 426
    "addr"                            shift, and go to state 427
    "reinterpret"                     shift, and go to state 428
    "unsafe"                          shift, and go to state 429
    "fixed_array"                     shift, and go to state 430
    "default"                         shift, and go to state 431
    "bool"                            shift, and go to state 228
    "void"                            shift, and go to state 229
    "string"                          shift, and go to state 230
    "int"                             shift, and go to state 232
    "int2"                            shift, and go to state 233
    "int3"                            shift, and go to state 234
    "int4"                            shift, and go to state 235
    "uint"                            shift, and go to state 236
    "bitfield"                        shift, and go to state 432
    "uint2"                           shift, and go to state 238
    "uint3"                           shift, and go to state 239
    "uint4"                           shift, and go to state 240
    "float"                           shift, and go to state 241
    "float2"                          shift, and go to state 242
    "float3"                          shift, and go to state 243
    "float4"                          shift, and go to state 244
    "range"                           shift, and go to state 245
    "urange"                          shift, and go to state 246
    "range64"                         shift, and go to state 247
    "urange64"                        shift, and go to state 248
    "int64"                           shift, and go to state 250
    "uint64"                          shift, and go to state 251
    "double"                          shift, and go to state 252
    "int8"                            shift, and go to state 255
    "uint8"                           shift, and go to state 256
    "int16"                           shift, and go to state 257
    "uint16"                          shift, and go to state 258
    "tuple"                           shift, and go to state 433
    "variant"                         shift, and go to state 434
    "generator"                       shift, and go to state 435
    "++"                              shift, and go to state 436
    "--"                              shift, and go to state 437
    "::"                              shift, and go to state 55
    "$$"                              shift, and go to state 438
    "$i"                              shift, and go to state 439
    "$v"                              shift, and go to state 440
    "$b"                              shift, and go to state 441
    "$a"                              shift, and go to state 442
    "$c"                              shift, and go to state 443
    "..."                             shift, and go to state 444
    "integer constant"                shift, and go to state 445
    "long integer constant"           shift, and go to state 446
    "unsigned integer constant"       shift, and go to state 447
    "unsigned long integer constant"  shift, and go to state 448
    "unsigned int8 constant"          shift, and go to state 449
    "floating point constant"         shift, and go to state 450
    "double constant"                 shift, and go to state 451
    "name"                            shift, and go to state 56
    "start of the string"             shift, and go to state 452
    '-'                               shift, and go to state 453
    '+'                               shift, and go to state 454
    '*'                               shift, and go to state 455
    '%'                               shift, and go to state 13
    '~'                               shift, and go to state 456
    '!'                               shift, and go to state 457
    '['                               shift, and go to state 458
    '('                               shift, and go to state 459
    '$'                               shift, and go to state 460
    '@'                               shift, and go to state 461
    '{'                               shift, and go to state 462

    string_builder          go to state 463
    expr_reader             go to state 464
    expr_call_pipe          go to state 465
    name_in_namespace       go to state 466
    expr_new                go to state 467
    expr_cast               go to state 468
    expr_type_decl          go to state 469
    expr_type_info          go to state 470
    block_or_lambda         go to state 471
    expr_full_block         go to state 472
    expr_numeric_const      go to state 473
    expr_named_call         go to state 474
    expr_method_call        go to state 475
    func_addr_expr          go to state 476
    expr_field              go to state 477
    expr_call               go to state 478
    expr                    go to state 830
    expr_generator          go to state 480
    expr_mtag               go to state 481
    basic_type_declaration  go to state 482
    make_decl               go to state 483
    make_struct_decl        go to state 484
    make_tuple_call         go to state 485
    make_dim_decl           go to state 486
    make_table_decl         go to state 487
    array_comprehension     go to state 488


State 629

  406 expr: expr '<' . expr

    "struct"                          shift, and go to state 414
    "class"                           shift, and go to state 415
    "true"                            shift, and go to state 416
    "false"                           shift, and go to state 417
    "new"                             shift, and go to state 418
    "typeinfo"                        shift, and go to state 419
    "type"                            shift, and go to state 420
    "array"                           shift, and go to state 421
    "null"                            shift, and go to state 422
    "table"                           shift, and go to state 423
    "deref"                           shift, and go to state 424
    "cast"                            shift, and go to state 425
    "upcast"                          shift, and go to state 426
    "addr"                            shift, and go to state 427
    "reinterpret"                     shift, and go to state 428
    "unsafe"                          shift, and go to state 429
    "fixed_array"                     shift, and go to state 430
    "default"                         shift, and go to state 431
    "bool"                            shift, and go to state 228
    "void"                            shift, and go to state 229
    "string"                          shift, and go to state 230
    "int"                             shift, and go to state 232
    "int2"                            shift, and go to state 233
    "int3"                            shift, and go to state 234
    "int4"                            shift, and go to state 235
    "uint"                            shift, and go to state 236
    "bitfield"                        shift, and go to state 432
    "uint2"                           shift, and go to state 238
    "uint3"                           shift, and go to state 239
    "uint4"                           shift, and go to state 240
    "float"                           shift, and go to state 241
    "float2"                          shift, and go to state 242
    "float3"                          shift, and go to state 243
    "float4"                          shift, and go to state 244
    "range"                           shift, and go to state 245
    "urange"                          shift, and go to state 246
    "range64"                         shift, and go to state 247
    "urange64"                        shift, and go to state 248
    "int64"                           shift, and go to state 250
    "uint64"                          shift, and go to state 251
    "double"                          shift, and go to state 252
    "int8"                            shift, and go to state 255
    "uint8"                           shift, and go to state 256
    "int16"                           shift, and go to state 257
    "uint16"                          shift, and go to state 258
    "tuple"                           shift, and go to state 433
    "variant"                         shift, and go to state 434
    "generator"                       shift, and go to state 435
    "++"                              shift, and go to state 436
    "--"                              shift, and go to state 437
    "::"                              shift, and go to state 55
    "$$"                              shift, and go to state 438
    "$i"                              shift, and go to state 439
    "$v"                              shift, and go to state 440
    "$b"                              shift, and go to state 441
    "$a"                              shift, and go to state 442
    "$c"                              shift, and go to state 443
    "..."                             shift, and go to state 444
    "integer constant"                shift, and go to state 445
    "long integer constant"           shift, and go to state 446
    "unsigned integer constant"       shift, and go to state 447
    "unsigned long integer constant"  shift, and go to state 448
    "unsigned int8 constant"          shift, and go to state 449
    "floating point constant"         shift, and go to state 450
    "double constant"                 shift, and go to state 451
    "name"                            shift, and go to state 56
    "start of the string"             shift, and go to state 452
    '-'                               shift, and go to state 453
    '+'                               shift, and go to state 454
    '*'                               shift, and go to state 455
    '%'                               shift, and go to state 13
    '~'                               shift, and go to state 456
    '!'                               shift, and go to state 457
    '['                               shift, and go to state 458
    '('                               shift, and go to state 459
    '$'                               shift, and go to state 460
    '@'                               shift, and go to state 461
    '{'                               shift, and go to state 462

    string_builder          go to state 463
    expr_reader             go to state 464
    expr_call_pipe          go to state 465
    name_in_namespace       go to state 466
    expr_new                go to state 467
    expr_cast               go to state 468
    expr_type_decl          go to state 469
    expr_type_info          go to state 470
    block_or_lambda         go to state 471
    expr_full_block         go to state 472
    expr_numeric_const      go to state 473
    expr_named_call         go to state 474
    expr_method_call        go to state 475
    func_addr_expr          go to state 476
    expr_field              go to state 477
    expr_call               go to state 478
    expr                    go to state 831
    expr_generator          go to state 480
    expr_mtag               go to state 481
    basic_type_declaration  go to state 482
    make_decl               go to state 483
    make_struct_decl        go to state 484
    make_tuple_call         go to state 485
    make_dim_decl           go to state 486
    make_table_decl         go to state 487
    array_comprehension     go to state 488


State 630

  407 expr: expr '>' . expr

    "struct"                          shift, and go to state 414
    "class"                           shift, and go to state 415
    "true"                            shift, and go to state 416
    "false"                           shift, and go to state 417
    "new"                             shift, and go to state 418
    "typeinfo"                        shift, and go to state 419
    "type"                            shift, and go to state 420
    "array"                           shift, and go to state 421
    "null"                            shift, and go to state 422
    "table"                           shift, and go to state 423
    "deref"                           shift, and go to state 424
    "cast"                            shift, and go to state 425
    "upcast"                          shift, and go to state 426
    "addr"                            shift, and go to state 427
    "reinterpret"                     shift, and go to state 428
    "unsafe"                          shift, and go to state 429
    "fixed_array"                     shift, and go to state 430
    "default"                         shift, and go to state 431
    "bool"                            shift, and go to state 228
    "void"                            shift, and go to state 229
    "string"                          shift, and go to state 230
    "int"                             shift, and go to state 232
    "int2"                            shift, and go to state 233
    "int3"                            shift, and go to state 234
    "int4"                            shift, and go to state 235
    "uint"                            shift, and go to state 236
    "bitfield"                        shift, and go to state 432
    "uint2"                           shift, and go to state 238
    "uint3"                           shift, and go to state 239
    "uint4"                           shift, and go to state 240
    "float"                           shift, and go to state 241
    "float2"                          shift, and go to state 242
    "float3"                          shift, and go to state 243
    "float4"                          shift, and go to state 244
    "range"                           shift, and go to state 245
    "urange"                          shift, and go to state 246
    "range64"                         shift, and go to state 247
    "urange64"                        shift, and go to state 248
    "int64"                           shift, and go to state 250
    "uint64"                          shift, and go to state 251
    "double"                          shift, and go to state 252
    "int8"                            shift, and go to state 255
    "uint8"                           shift, and go to state 256
    "int16"                           shift, and go to state 257
    "uint16"                          shift, and go to state 258
    "tuple"                           shift, and go to state 433
    "variant"                         shift, and go to state 434
    "generator"                       shift, and go to state 435
    "++"                              shift, and go to state 436
    "--"                              shift, and go to state 437
    "::"                              shift, and go to state 55
    "$$"                              shift, and go to state 438
    "$i"                              shift, and go to state 439
    "$v"                              shift, and go to state 440
    "$b"                              shift, and go to state 441
    "$a"                              shift, and go to state 442
    "$c"                              shift, and go to state 443
    "..."                             shift, and go to state 444
    "integer constant"                shift, and go to state 445
    "long integer constant"           shift, and go to state 446
    "unsigned integer constant"       shift, and go to state 447
    "unsigned long integer constant"  shift, and go to state 448
    "unsigned int8 constant"          shift, and go to state 449
    "floating point constant"         shift, and go to state 450
    "double constant"                 shift, and go to state 451
    "name"                            shift, and go to state 56
    "start of the string"             shift, and go to state 452
    '-'                               shift, and go to state 453
    '+'                               shift, and go to state 454
    '*'                               shift, and go to state 455
    '%'                               shift, and go to state 13
    '~'                               shift, and go to state 456
    '!'                               shift, and go to state 457
    '['                               shift, and go to state 458
    '('                               shift, and go to state 459
    '$'                               shift, and go to state 460
    '@'                               shift, and go to state 461
    '{'                               shift, and go to state 462

    string_builder          go to state 463
    expr_reader             go to state 464
    expr_call_pipe          go to state 465
    name_in_namespace       go to state 466
    expr_new                go to state 467
    expr_cast               go to state 468
    expr_type_decl          go to state 469
    expr_type_info          go to state 470
    block_or_lambda         go to state 471
    expr_full_block         go to state 472
    expr_numeric_const      go to state 473
    expr_named_call         go to state 474
    expr_method_call        go to state 475
    func_addr_expr          go to state 476
    expr_field              go to state 477
    expr_call               go to state 478
    expr                    go to state 832
    expr_generator          go to state 480
    expr_mtag               go to state 481
    basic_type_declaration  go to state 482
    make_decl               go to state 483
    make_struct_decl        go to state 484
    make_tuple_call         go to state 485
    make_dim_decl           go to state 486
    make_table_decl         go to state 487
    array_comprehension     go to state 488


State 631

  402 expr: expr '-' . expr

    "struct"                          shift, and go to state 414
    "class"                           shift, and go to state 415
    "true"                            shift, and go to state 416
    "false"                           shift, and go to state 417
    "new"                             shift, and go to state 418
    "typeinfo"                        shift, and go to state 419
    "type"                            shift, and go to state 420
    "array"                           shift, and go to state 421
    "null"                            shift, and go to state 422
    "table"                           shift, and go to state 423
    "deref"                           shift, and go to state 424
    "cast"                            shift, and go to state 425
    "upcast"                          shift, and go to state 426
    "addr"                            shift, and go to state 427
    "reinterpret"                     shift, and go to state 428
    "unsafe"                          shift, and go to state 429
    "fixed_array"                     shift, and go to state 430
    "default"                         shift, and go to state 431
    "bool"                            shift, and go to state 228
    "void"                            shift, and go to state 229
    "string"                          shift, and go to state 230
    "int"                             shift, and go to state 232
    "int2"                            shift, and go to state 233
    "int3"                            shift, and go to state 234
    "int4"                            shift, and go to state 235
    "uint"                            shift, and go to state 236
    "bitfield"                        shift, and go to state 432
    "uint2"                           shift, and go to state 238
    "uint3"                           shift, and go to state 239
    "uint4"                           shift, and go to state 240
    "float"                           shift, and go to state 241
    "float2"                          shift, and go to state 242
    "float3"                          shift, and go to state 243
    "float4"                          shift, and go to state 244
    "range"                           shift, and go to state 245
    "urange"                          shift, and go to state 246
    "range64"                         shift, and go to state 247
    "urange64"                        shift, and go to state 248
    "int64"                           shift, and go to state 250
    "uint64"                          shift, and go to state 251
    "double"                          shift, and go to state 252
    "int8"                            shift, and go to state 255
    "uint8"                           shift, and go to state 256
    "int16"                           shift, and go to state 257
    "uint16"                          shift, and go to state 258
    "tuple"                           shift, and go to state 433
    "variant"                         shift, and go to state 434
    "generator"                       shift, and go to state 435
    "++"                              shift, and go to state 436
    "--"                              shift, and go to state 437
    "::"                              shift, and go to state 55
    "$$"                              shift, and go to state 438
    "$i"                              shift, and go to state 439
    "$v"                              shift, and go to state 440
    "$b"                              shift, and go to state 441
    "$a"                              shift, and go to state 442
    "$c"                              shift, and go to state 443
    "..."                             shift, and go to state 444
    "integer constant"                shift, and go to state 445
    "long integer constant"           shift, and go to state 446
    "unsigned integer constant"       shift, and go to state 447
    "unsigned long integer constant"  shift, and go to state 448
    "unsigned int8 constant"          shift, and go to state 449
    "floating point constant"         shift, and go to state 450
    "double constant"                 shift, and go to state 451
    "name"                            shift, and go to state 56
    "start of the string"             shift, and go to state 452
    '-'                               shift, and go to state 453
    '+'                               shift, and go to state 454
    '*'                               shift, and go to state 455
    '%'                               shift, and go to state 13
    '~'                               shift, and go to state 456
    '!'                               shift, and go to state 457
    '['                               shift, and go to state 458
    '('                               shift, and go to state 459
    '$'                               shift, and go to state 460
    '@'                               shift, and go to state 461
    '{'                               shift, and go to state 462

    string_builder          go to state 463
    expr_reader             go to state 464
    expr_call_pipe          go to state 465
    name_in_namespace       go to state 466
    expr_new                go to state 467
    expr_cast               go to state 468
    expr_type_decl          go to state 469
    expr_type_info          go to state 470
    block_or_lambda         go to state 471
    expr_full_block         go to state 472
    expr_numeric_const      go to state 473
    expr_named_call         go to state 474
    expr_method_call        go to state 475
    func_addr_expr          go to state 476
    expr_field              go to state 477
    expr_call               go to state 478
    expr                    go to state 833
    expr_generator          go to state 480
    expr_mtag               go to state 481
    basic_type_declaration  go to state 482
    make_decl               go to state 483
    make_struct_decl        go to state 484
    make_tuple_call         go to state 485
    make_dim_decl           go to state 486
    make_table_decl         go to state 487
    array_comprehension     go to state 488


State 632

  401 expr: expr '+' . expr

    "struct"                          shift, and go to state 414
    "class"                           shift, and go to state 415
    "true"                            shift, and go to state 416
    "false"                           shift, and go to state 417
    "new"                             shift, and go to state 418
    "typeinfo"                        shift, and go to state 419
    "type"                            shift, and go to state 420
    "array"                           shift, and go to state 421
    "null"                            shift, and go to state 422
    "table"                           shift, and go to state 423
    "deref"                           shift, and go to state 424
    "cast"                            shift, and go to state 425
    "upcast"                          shift, and go to state 426
    "addr"                            shift, and go to state 427
    "reinterpret"                     shift, and go to state 428
    "unsafe"                          shift, and go to state 429
    "fixed_array"                     shift, and go to state 430
    "default"                         shift, and go to state 431
    "bool"                            shift, and go to state 228
    "void"                            shift, and go to state 229
    "string"                          shift, and go to state 230
    "int"                             shift, and go to state 232
    "int2"                            shift, and go to state 233
    "int3"                            shift, and go to state 234
    "int4"                            shift, and go to state 235
    "uint"                            shift, and go to state 236
    "bitfield"                        shift, and go to state 432
    "uint2"                           shift, and go to state 238
    "uint3"                           shift, and go to state 239
    "uint4"                           shift, and go to state 240
    "float"                           shift, and go to state 241
    "float2"                          shift, and go to state 242
    "float3"                          shift, and go to state 243
    "float4"                          shift, and go to state 244
    "range"                           shift, and go to state 245
    "urange"                          shift, and go to state 246
    "range64"                         shift, and go to state 247
    "urange64"                        shift, and go to state 248
    "int64"                           shift, and go to state 250
    "uint64"                          shift, and go to state 251
    "double"                          shift, and go to state 252
    "int8"                            shift, and go to state 255
    "uint8"                           shift, and go to state 256
    "int16"                           shift, and go to state 257
    "uint16"                          shift, and go to state 258
    "tuple"                           shift, and go to state 433
    "variant"                         shift, and go to state 434
    "generator"                       shift, and go to state 435
    "++"                              shift, and go to state 436
    "--"                              shift, and go to state 437
    "::"                              shift, and go to state 55
    "$$"                              shift, and go to state 438
    "$i"                              shift, and go to state 439
    "$v"                              shift, and go to state 440
    "$b"                              shift, and go to state 441
    "$a"                              shift, and go to state 442
    "$c"                              shift, and go to state 443
    "..."                             shift, and go to state 444
    "integer constant"                shift, and go to state 445
    "long integer constant"           shift, and go to state 446
    "unsigned integer constant"       shift, and go to state 447
    "unsigned long integer constant"  shift, and go to state 448
    "unsigned int8 constant"          shift, and go to state 449
    "floating point constant"         shift, and go to state 450
    "double constant"                 shift, and go to state 451
    "name"                            shift, and go to state 56
    "start of the string"             shift, and go to state 452
    '-'                               shift, and go to state 453
    '+'                               shift, and go to state 454
    '*'                               shift, and go to state 455
    '%'                               shift, and go to state 13
    '~'                               shift, and go to state 456
    '!'                               shift, and go to state 457
    '['                               shift, and go to state 458
    '('                               shift, and go to state 459
    '$'                               shift, and go to state 460
    '@'                               shift, and go to state 461
    '{'                               shift, and go to state 462

    string_builder          go to state 463
    expr_reader             go to state 464
    expr_call_pipe          go to state 465
    name_in_namespace       go to state 466
    expr_new                go to state 467
    expr_cast               go to state 468
    expr_type_decl          go to state 469
    expr_type_info          go to state 470
    block_or_lambda         go to state 471
    expr_full_block         go to state 472
    expr_numeric_const      go to state 473
    expr_named_call         go to state 474
    expr_method_call        go to state 475
    func_addr_expr          go to state 476
    expr_field              go to state 477
    expr_call               go to state 478
    expr                    go to state 834
    expr_generator          go to state 480
    expr_mtag               go to state 481
    basic_type_declaration  go to state 482
    make_decl               go to state 483
    make_struct_decl        go to state 484
    make_tuple_call         go to state 485
    make_dim_decl           go to state 486
    make_table_decl         go to state 487
    array_comprehension     go to state 488


State 633

  403 expr: expr '*' . expr

    "struct"                          shift, and go to state 414
    "class"                           shift, and go to state 415
    "true"                            shift, and go to state 416
    "false"                           shift, and go to state 417
    "new"                             shift, and go to state 418
    "typeinfo"                        shift, and go to state 419
    "type"                            shift, and go to state 420
    "array"                           shift, and go to state 421
    "null"                            shift, and go to state 422
    "table"                           shift, and go to state 423
    "deref"                           shift, and go to state 424
    "cast"                            shift, and go to state 425
    "upcast"                          shift, and go to state 426
    "addr"                            shift, and go to state 427
    "reinterpret"                     shift, and go to state 428
    "unsafe"                          shift, and go to state 429
    "fixed_array"                     shift, and go to state 430
    "default"                         shift, and go to state 431
    "bool"                            shift, and go to state 228
    "void"                            shift, and go to state 229
    "string"                          shift, and go to state 230
    "int"                             shift, and go to state 232
    "int2"                            shift, and go to state 233
    "int3"                            shift, and go to state 234
    "int4"                            shift, and go to state 235
    "uint"                            shift, and go to state 236
    "bitfield"                        shift, and go to state 432
    "uint2"                           shift, and go to state 238
    "uint3"                           shift, and go to state 239
    "uint4"                           shift, and go to state 240
    "float"                           shift, and go to state 241
    "float2"                          shift, and go to state 242
    "float3"                          shift, and go to state 243
    "float4"                          shift, and go to state 244
    "range"                           shift, and go to state 245
    "urange"                          shift, and go to state 246
    "range64"                         shift, and go to state 247
    "urange64"                        shift, and go to state 248
    "int64"                           shift, and go to state 250
    "uint64"                          shift, and go to state 251
    "double"                          shift, and go to state 252
    "int8"                            shift, and go to state 255
    "uint8"                           shift, and go to state 256
    "int16"                           shift, and go to state 257
    "uint16"                          shift, and go to state 258
    "tuple"                           shift, and go to state 433
    "variant"                         shift, and go to state 434
    "generator"                       shift, and go to state 435
    "++"                              shift, and go to state 436
    "--"                              shift, and go to state 437
    "::"                              shift, and go to state 55
    "$$"                              shift, and go to state 438
    "$i"                              shift, and go to state 439
    "$v"                              shift, and go to state 440
    "$b"                              shift, and go to state 441
    "$a"                              shift, and go to state 442
    "$c"                              shift, and go to state 443
    "..."                             shift, and go to state 444
    "integer constant"                shift, and go to state 445
    "long integer constant"           shift, and go to state 446
    "unsigned integer constant"       shift, and go to state 447
    "unsigned long integer constant"  shift, and go to state 448
    "unsigned int8 constant"          shift, and go to state 449
    "floating point constant"         shift, and go to state 450
    "double constant"                 shift, and go to state 451
    "name"                            shift, and go to state 56
    "start of the string"             shift, and go to state 452
    '-'                               shift, and go to state 453
    '+'                               shift, and go to state 454
    '*'                               shift, and go to state 455
    '%'                               shift, and go to state 13
    '~'                               shift, and go to state 456
    '!'                               shift, and go to state 457
    '['                               shift, and go to state 458
    '('                               shift, and go to state 459
    '$'                               shift, and go to state 460
    '@'                               shift, and go to state 461
    '{'                               shift, and go to state 462

    string_builder          go to state 463
    expr_reader             go to state 464
    expr_call_pipe          go to state 465
    name_in_namespace       go to state 466
    expr_new                go to state 467
    expr_cast               go to state 468
    expr_type_decl          go to state 469
    expr_type_info          go to state 470
    block_or_lambda         go to state 471
    expr_full_block         go to state 472
    expr_numeric_const      go to state 473
    expr_named_call         go to state 474
    expr_method_call        go to state 475
    func_addr_expr          go to state 476
    expr_field              go to state 477
    expr_call               go to state 478
    expr                    go to state 835
    expr_generator          go to state 480
    expr_mtag               go to state 481
    basic_type_declaration  go to state 482
    make_decl               go to state 483
    make_struct_decl        go to state 484
    make_tuple_call         go to state 485
    make_dim_decl           go to state 486
    make_table_decl         go to state 487
    array_comprehension     go to state 488


State 634

  404 expr: expr '/' . expr

    "struct"                          shift, and go to state 414
    "class"                           shift, and go to state 415
    "true"                            shift, and go to state 416
    "false"                           shift, and go to state 417
    "new"                             shift, and go to state 418
    "typeinfo"                        shift, and go to state 419
    "type"                            shift, and go to state 420
    "array"                           shift, and go to state 421
    "null"                            shift, and go to state 422
    "table"                           shift, and go to state 423
    "deref"                           shift, and go to state 424
    "cast"                            shift, and go to state 425
    "upcast"                          shift, and go to state 426
    "addr"                            shift, and go to state 427
    "reinterpret"                     shift, and go to state 428
    "unsafe"                          shift, and go to state 429
    "fixed_array"                     shift, and go to state 430
    "default"                         shift, and go to state 431
    "bool"                            shift, and go to state 228
    "void"                            shift, and go to state 229
    "string"                          shift, and go to state 230
    "int"                             shift, and go to state 232
    "int2"                            shift, and go to state 233
    "int3"                            shift, and go to state 234
    "int4"                            shift, and go to state 235
    "uint"                            shift, and go to state 236
    "bitfield"                        shift, and go to state 432
    "uint2"                           shift, and go to state 238
    "uint3"                           shift, and go to state 239
    "uint4"                           shift, and go to state 240
    "float"                           shift, and go to state 241
    "float2"                          shift, and go to state 242
    "float3"                          shift, and go to state 243
    "float4"                          shift, and go to state 244
    "range"                           shift, and go to state 245
    "urange"                          shift, and go to state 246
    "range64"                         shift, and go to state 247
    "urange64"                        shift, and go to state 248
    "int64"                           shift, and go to state 250
    "uint64"                          shift, and go to state 251
    "double"                          shift, and go to state 252
    "int8"                            shift, and go to state 255
    "uint8"                           shift, and go to state 256
    "int16"                           shift, and go to state 257
    "uint16"                          shift, and go to state 258
    "tuple"                           shift, and go to state 433
    "variant"                         shift, and go to state 434
    "generator"                       shift, and go to state 435
    "++"                              shift, and go to state 436
    "--"                              shift, and go to state 437
    "::"                              shift, and go to state 55
    "$$"                              shift, and go to state 438
    "$i"                              shift, and go to state 439
    "$v"                              shift, and go to state 440
    "$b"                              shift, and go to state 441
    "$a"                              shift, and go to state 442
    "$c"                              shift, and go to state 443
    "..."                             shift, and go to state 444
    "integer constant"                shift, and go to state 445
    "long integer constant"           shift, and go to state 446
    "unsigned integer constant"       shift, and go to state 447
    "unsigned long integer constant"  shift, and go to state 448
    "unsigned int8 constant"          shift, and go to state 449
    "floating point constant"         shift, and go to state 450
    "double constant"                 shift, and go to state 451
    "name"                            shift, and go to state 56
    "start of the string"             shift, and go to state 452
    '-'                               shift, and go to state 453
    '+'                               shift, and go to state 454
    '*'                               shift, and go to state 455
    '%'                               shift, and go to state 13
    '~'                               shift, and go to state 456
    '!'                               shift, and go to state 457
    '['                               shift, and go to state 458
    '('                               shift, and go to state 459
    '$'                               shift, and go to state 460
    '@'                               shift, and go to state 461
    '{'                               shift, and go to state 462

    string_builder          go to state 463
    expr_reader             go to state 464
    expr_call_pipe          go to state 465
    name_in_namespace       go to state 466
    expr_new                go to state 467
    expr_cast               go to state 468
    expr_type_decl          go to state 469
    expr_type_info          go to state 470
    block_or_lambda         go to state 471
    expr_full_block         go to state 472
    expr_numeric_const      go to state 473
    expr_named_call         go to state 474
    expr_method_call        go to state 475
    func_addr_expr          go to state 476
    expr_field              go to state 477
    expr_call               go to state 478
    expr                    go to state 836
    expr_generator          go to state 480
    expr_mtag               go to state 481
    basic_type_declaration  go to state 482
    make_decl               go to state 483
    make_struct_decl        go to state 484
    make_tuple_call         go to state 485
    make_dim_decl           go to state 486
    make_table_decl         go to state 487
    array_comprehension     go to state 488


State 635

  405 expr: expr '%' . expr

    "struct"                          shift, and go to state 414
    "class"                           shift, and go to state 415
    "true"                            shift, and go to state 416
    "false"                           shift, and go to state 417
    "new"                             shift, and go to state 418
    "typeinfo"                        shift, and go to state 419
    "type"                            shift, and go to state 420
    "array"                           shift, and go to state 421
    "null"                            shift, and go to state 422
    "table"                           shift, and go to state 423
    "deref"                           shift, and go to state 424
    "cast"                            shift, and go to state 425
    "upcast"                          shift, and go to state 426
    "addr"                            shift, and go to state 427
    "reinterpret"                     shift, and go to state 428
    "unsafe"                          shift, and go to state 429
    "fixed_array"                     shift, and go to state 430
    "default"                         shift, and go to state 431
    "bool"                            shift, and go to state 228
    "void"                            shift, and go to state 229
    "string"                          shift, and go to state 230
    "int"                             shift, and go to state 232
    "int2"                            shift, and go to state 233
    "int3"                            shift, and go to state 234
    "int4"                            shift, and go to state 235
    "uint"                            shift, and go to state 236
    "bitfield"                        shift, and go to state 432
    "uint2"                           shift, and go to state 238
    "uint3"                           shift, and go to state 239
    "uint4"                           shift, and go to state 240
    "float"                           shift, and go to state 241
    "float2"                          shift, and go to state 242
    "float3"                          shift, and go to state 243
    "float4"                          shift, and go to state 244
    "range"                           shift, and go to state 245
    "urange"                          shift, and go to state 246
    "range64"                         shift, and go to state 247
    "urange64"                        shift, and go to state 248
    "int64"                           shift, and go to state 250
    "uint64"                          shift, and go to state 251
    "double"                          shift, and go to state 252
    "int8"                            shift, and go to state 255
    "uint8"                           shift, and go to state 256
    "int16"                           shift, and go to state 257
    "uint16"                          shift, and go to state 258
    "tuple"                           shift, and go to state 433
    "variant"                         shift, and go to state 434
    "generator"                       shift, and go to state 435
    "++"                              shift, and go to state 436
    "--"                              shift, and go to state 437
    "::"                              shift, and go to state 55
    "$$"                              shift, and go to state 438
    "$i"                              shift, and go to state 439
    "$v"                              shift, and go to state 440
    "$b"                              shift, and go to state 441
    "$a"                              shift, and go to state 442
    "$c"                              shift, and go to state 443
    "..."                             shift, and go to state 444
    "integer constant"                shift, and go to state 445
    "long integer constant"           shift, and go to state 446
    "unsigned integer constant"       shift, and go to state 447
    "unsigned long integer constant"  shift, and go to state 448
    "unsigned int8 constant"          shift, and go to state 449
    "floating point constant"         shift, and go to state 450
    "double constant"                 shift, and go to state 451
    "name"                            shift, and go to state 56
    "start of the string"             shift, and go to state 452
    '-'                               shift, and go to state 453
    '+'                               shift, and go to state 454
    '*'                               shift, and go to state 455
    '%'                               shift, and go to state 13
    '~'                               shift, and go to state 456
    '!'                               shift, and go to state 457
    '['                               shift, and go to state 458
    '('                               shift, and go to state 459
    '$'                               shift, and go to state 460
    '@'                               shift, and go to state 461
    '{'                               shift, and go to state 462

    string_builder          go to state 463
    expr_reader             go to state 464
    expr_call_pipe          go to state 465
    name_in_namespace       go to state 466
    expr_new                go to state 467
    expr_cast               go to state 468
    expr_type_decl          go to state 469
    expr_type_info          go to state 470
    block_or_lambda         go to state 471
    expr_full_block         go to state 472
    expr_numeric_const      go to state 473
    expr_named_call         go to state 474
    expr_method_call        go to state 475
    func_addr_expr          go to state 476
    expr_field              go to state 477
    expr_call               go to state 478
    expr                    go to state 837
    expr_generator          go to state 480
    expr_mtag               go to state 481
    basic_type_declaration  go to state 482
    make_decl               go to state 483
    make_struct_decl        go to state 484
    make_tuple_call         go to state 485
    make_dim_decl           go to state 486
    make_table_decl         go to state 487
    array_comprehension     go to state 488


State 636

  367 expr_field: expr '.' . "name"
  368           | expr '.' . '.' "name"
  369           | expr '.' . "name" '(' ')'
  370           | expr '.' . "name" '(' expr_list ')'
  371           | expr '.' . basic_type_declaration '(' ')'
  372           | expr '.' . basic_type_declaration '(' expr_list ')'
  375           | expr '.' . $@25 error $@26
  425 expr: expr '.' . '[' expr ']'
  427     | expr '.' . "?[" expr ']'
  429     | expr '.' . "?." "name"
  476 expr_mtag: expr '.' . "$f" '(' expr ')'
  478          | expr '.' . '.' "$f" '(' expr ')'
  479          | expr '.' . "?." "$f" '(' expr ')'

    "bool"      shift, and go to state 228
    "void"      shift, and go to state 229
    "string"    shift, and go to state 230
    "int"       shift, and go to state 232
    "int2"      shift, and go to state 233
    "int3"      shift, and go to state 234
    "int4"      shift, and go to state 235
    "uint"      shift, and go to state 236
    "bitfield"  shift, and go to state 432
    "uint2"     shift, and go to state 238
    "uint3"     shift, and go to state 239
    "uint4"     shift, and go to state 240
    "float"     shift, and go to state 241
    "float2"    shift, and go to state 242
    "float3"    shift, and go to state 243
    "float4"    shift, and go to state 244
    "range"     shift, and go to state 245
    "urange"    shift, and go to state 246
    "range64"   shift, and go to state 247
    "urange64"  shift, and go to state 248
    "int64"     shift, and go to state 250
    "uint64"    shift, and go to state 251
    "double"    shift, and go to state 252
    "int8"      shift, and go to state 255
    "uint8"     shift, and go to state 256
    "int16"     shift, and go to state 257
    "uint16"    shift, and go to state 258
    "?."        shift, and go to state 838
    "?["        shift, and go to state 839
    "$f"        shift, and go to state 840
    "name"      shift, and go to state 841
    '.'         shift, and go to state 842
    '['         shift, and go to state 843

    $default  reduce using rule 373 ($@25)

    $@25                    go to state 844
    basic_type_declaration  go to state 845


State 637

  424 expr: expr '[' . expr ']'

    "struct"                          shift, and go to state 414
    "class"                           shift, and go to state 415
    "true"                            shift, and go to state 416
    "false"                           shift, and go to state 417
    "new"                             shift, and go to state 418
    "typeinfo"                        shift, and go to state 419
    "type"                            shift, and go to state 420
    "array"                           shift, and go to state 421
    "null"                            shift, and go to state 422
    "table"                           shift, and go to state 423
    "deref"                           shift, and go to state 424
    "cast"                            shift, and go to state 425
    "upcast"                          shift, and go to state 426
    "addr"                            shift, and go to state 427
    "reinterpret"                     shift, and go to state 428
    "unsafe"                          shift, and go to state 429
    "fixed_array"                     shift, and go to state 430
    "default"                         shift, and go to state 431
    "bool"                            shift, and go to state 228
    "void"                            shift, and go to state 229
    "string"                          shift, and go to state 230
    "int"                             shift, and go to state 232
    "int2"                            shift, and go to state 233
    "int3"                            shift, and go to state 234
    "int4"                            shift, and go to state 235
    "uint"                            shift, and go to state 236
    "bitfield"                        shift, and go to state 432
    "uint2"                           shift, and go to state 238
    "uint3"                           shift, and go to state 239
    "uint4"                           shift, and go to state 240
    "float"                           shift, and go to state 241
    "float2"                          shift, and go to state 242
    "float3"                          shift, and go to state 243
    "float4"                          shift, and go to state 244
    "range"                           shift, and go to state 245
    "urange"                          shift, and go to state 246
    "range64"                         shift, and go to state 247
    "urange64"                        shift, and go to state 248
    "int64"                           shift, and go to state 250
    "uint64"                          shift, and go to state 251
    "double"                          shift, and go to state 252
    "int8"                            shift, and go to state 255
    "uint8"                           shift, and go to state 256
    "int16"                           shift, and go to state 257
    "uint16"                          shift, and go to state 258
    "tuple"                           shift, and go to state 433
    "variant"                         shift, and go to state 434
    "generator"                       shift, and go to state 435
    "++"                              shift, and go to state 436
    "--"                              shift, and go to state 437
    "::"                              shift, and go to state 55
    "$$"                              shift, and go to state 438
    "$i"                              shift, and go to state 439
    "$v"                              shift, and go to state 440
    "$b"                              shift, and go to state 441
    "$a"                              shift, and go to state 442
    "$c"                              shift, and go to state 443
    "..."                             shift, and go to state 444
    "integer constant"                shift, and go to state 445
    "long integer constant"           shift, and go to state 446
    "unsigned integer constant"       shift, and go to state 447
    "unsigned long integer constant"  shift, and go to state 448
    "unsigned int8 constant"          shift, and go to state 449
    "floating point constant"         shift, and go to state 450
    "double constant"                 shift, and go to state 451
    "name"                            shift, and go to state 56
    "start of the string"             shift, and go to state 452
    '-'                               shift, and go to state 453
    '+'                               shift, and go to state 454
    '*'                               shift, and go to state 455
    '%'                               shift, and go to state 13
    '~'                               shift, and go to state 456
    '!'                               shift, and go to state 457
    '['                               shift, and go to state 458
    '('                               shift, and go to state 459
    '$'                               shift, and go to state 460
    '@'                               shift, and go to state 461
    '{'                               shift, and go to state 462

    string_builder          go to state 463
    expr_reader             go to state 464
    expr_call_pipe          go to state 465
    name_in_namespace       go to state 466
    expr_new                go to state 467
    expr_cast               go to state 468
    expr_type_decl          go to state 469
    expr_type_info          go to state 470
    block_or_lambda         go to state 471
    expr_full_block         go to state 472
    expr_numeric_const      go to state 473
    expr_named_call         go to state 474
    expr_method_call        go to state 475
    func_addr_expr          go to state 476
    expr_field              go to state 477
    expr_call               go to state 478
    expr                    go to state 846
    expr_generator          go to state 480
    expr_mtag               go to state 481
    basic_type_declaration  go to state 482
    make_decl               go to state 483
    make_struct_decl        go to state 484
    make_tuple_call         go to state 485
    make_dim_decl           go to state 486
    make_table_decl         go to state 487
    array_comprehension     go to state 488


State 638

  670 type_declaration_no_options_no_dim: "typedecl" '(' expr ')' .

    $default  reduce using rule 670 (type_declaration_no_options_no_dim)


State 639

  381 expr_call: basic_type_declaration '(' . ')'
  382          | basic_type_declaration '(' . expr_list ')'

    "struct"                          shift, and go to state 414
    "class"                           shift, and go to state 415
    "true"                            shift, and go to state 416
    "false"                           shift, and go to state 417
    "new"                             shift, and go to state 418
    "typeinfo"                        shift, and go to state 419
    "type"                            shift, and go to state 420
    "array"                           shift, and go to state 421
    "null"                            shift, and go to state 422
    "table"                           shift, and go to state 423
    "deref"                           shift, and go to state 424
    "cast"                            shift, and go to state 425
    "upcast"                          shift, and go to state 426
    "addr"                            shift, and go to state 427
    "reinterpret"                     shift, and go to state 428
    "unsafe"                          shift, and go to state 429
    "fixed_array"                     shift, and go to state 430
    "default"                         shift, and go to state 431
    "bool"                            shift, and go to state 228
    "void"                            shift, and go to state 229
    "string"                          shift, and go to state 230
    "int"                             shift, and go to state 232
    "int2"                            shift, and go to state 233
    "int3"                            shift, and go to state 234
    "int4"                            shift, and go to state 235
    "uint"                            shift, and go to state 236
    "bitfield"                        shift, and go to state 432
    "uint2"                           shift, and go to state 238
    "uint3"                           shift, and go to state 239
    "uint4"                           shift, and go to state 240
    "float"                           shift, and go to state 241
    "float2"                          shift, and go to state 242
    "float3"                          shift, and go to state 243
    "float4"                          shift, and go to state 244
    "range"                           shift, and go to state 245
    "urange"                          shift, and go to state 246
    "range64"                         shift, and go to state 247
    "urange64"                        shift, and go to state 248
    "int64"                           shift, and go to state 250
    "uint64"                          shift, and go to state 251
    "double"                          shift, and go to state 252
    "int8"                            shift, and go to state 255
    "uint8"                           shift, and go to state 256
    "int16"                           shift, and go to state 257
    "uint16"                          shift, and go to state 258
    "tuple"                           shift, and go to state 433
    "variant"                         shift, and go to state 434
    "generator"                       shift, and go to state 435
    "++"                              shift, and go to state 436
    "--"                              shift, and go to state 437
    "::"                              shift, and go to state 55
    "$$"                              shift, and go to state 438
    "$i"                              shift, and go to state 439
    "$v"                              shift, and go to state 440
    "$b"                              shift, and go to state 441
    "$a"                              shift, and go to state 442
    "$c"                              shift, and go to state 443
    "..."                             shift, and go to state 444
    "integer constant"                shift, and go to state 445
    "long integer constant"           shift, and go to state 446
    "unsigned integer constant"       shift, and go to state 447
    "unsigned long integer constant"  shift, and go to state 448
    "unsigned int8 constant"          shift, and go to state 449
    "floating point constant"         shift, and go to state 450
    "double constant"                 shift, and go to state 451
    "name"                            shift, and go to state 56
    "start of the string"             shift, and go to state 452
    '-'                               shift, and go to state 453
    '+'                               shift, and go to state 454
    '*'                               shift, and go to state 455
    '%'                               shift, and go to state 13
    '~'                               shift, and go to state 456
    '!'                               shift, and go to state 457
    '['                               shift, and go to state 458
    '('                               shift, and go to state 459
    ')'                               shift, and go to state 847
    '$'                               shift, and go to state 460
    '@'                               shift, and go to state 461
    '{'                               shift, and go to state 462

    string_builder          go to state 463
    expr_reader             go to state 464
    expr_call_pipe          go to state 465
    name_in_namespace       go to state 466
    expr_new                go to state 467
    expr_cast               go to state 468
    expr_type_decl          go to state 469
    expr_type_info          go to state 470
    expr_list               go to state 848
    block_or_lambda         go to state 471
    expr_full_block         go to state 472
    expr_numeric_const      go to state 473
    expr_named_call         go to state 474
    expr_method_call        go to state 475
    func_addr_expr          go to state 476
    expr_field              go to state 477
    expr_call               go to state 478
    expr                    go to state 590
    expr_generator          go to state 480
    expr_mtag               go to state 481
    basic_type_declaration  go to state 482
    make_decl               go to state 483
    make_struct_decl        go to state 484
    make_tuple_call         go to state 485
    make_dim_decl           go to state 486
    make_table_decl         go to state 487
    array_comprehension     go to state 488


State 640

  698 type_declaration_no_options_no_dim: "iterator" '<' $@55 type_declaration . '>' $@56
  727 type_declaration: type_declaration . '|' type_declaration_no_options
  728                 | type_declaration . '|' '#'

    '|'  shift, and go to state 372
    '>'  shift, and go to state 849


State 641

  688 type_declaration_no_options_no_dim: "smart_ptr" '<' $@49 type_declaration . '>' $@50
  727 type_declaration: type_declaration . '|' type_declaration_no_options
  728                 | type_declaration . '|' '#'

    '|'  shift, and go to state 372
    '>'  shift, and go to state 850


State 642

  643 auto_type_declaration: "auto" '(' "name" ')' .

    $default  reduce using rule 643 (auto_type_declaration)


State 643

  645 bitfield_bits: "name" .

    $default  reduce using rule 645 (bitfield_bits)


State 644

  646 bitfield_bits: bitfield_bits . ';' "name"
  652 bitfield_type_declaration: "bitfield" '<' $@44 bitfield_bits . '>' $@45

    '>'  shift, and go to state 851
    ';'  shift, and go to state 852


State 645

  702 type_declaration_no_options_no_dim: "block" '<' $@57 type_declaration . '>' $@58
  727 type_declaration: type_declaration . '|' type_declaration_no_options
  728                 | type_declaration . '|' '#'

    '|'  shift, and go to state 372
    '>'  shift, and go to state 853


State 646

  705 type_declaration_no_options_no_dim: "block" '<' $@59 optional_function_argument_list . optional_function_type '>' $@60

    ':'  shift, and go to state 388

    $default  reduce using rule 126 (optional_function_type)

    optional_function_type  go to state 854


State 647

  709 type_declaration_no_options_no_dim: "function" '<' $@61 type_declaration . '>' $@62
  727 type_declaration: type_declaration . '|' type_declaration_no_options
  728                 | type_declaration . '|' '#'

    '|'  shift, and go to state 372
    '>'  shift, and go to state 855


State 648

  712 type_declaration_no_options_no_dim: "function" '<' $@63 optional_function_argument_list . optional_function_type '>' $@64

    ':'  shift, and go to state 388

    $default  reduce using rule 126 (optional_function_type)

    optional_function_type  go to state 856


State 649

  716 type_declaration_no_options_no_dim: "lambda" '<' $@65 type_declaration . '>' $@66
  727 type_declaration: type_declaration . '|' type_declaration_no_options
  728                 | type_declaration . '|' '#'

    '|'  shift, and go to state 372
    '>'  shift, and go to state 857


State 650

  719 type_declaration_no_options_no_dim: "lambda" '<' $@67 optional_function_argument_list . optional_function_type '>' $@68

    ':'  shift, and go to state 388

    $default  reduce using rule 126 (optional_function_type)

    optional_function_type  go to state 858


State 651

  256 name_in_namespace: "name" .
  257                  | "name" . "::" "name"
  509 tuple_type: "name" . ':' type_declaration

    "::"  shift, and go to state 95
    ':'   shift, and go to state 859

    $default  reduce using rule 256 (name_in_namespace)


State 652

  510 tuple_type_list: tuple_type .

    $default  reduce using rule 510 (tuple_type_list)


State 653

  511 tuple_type_list: tuple_type_list . c_or_s tuple_type
  722 type_declaration_no_options_no_dim: "tuple" '<' $@69 tuple_type_list . '>' $@70

    ','  shift, and go to state 732
    '>'  shift, and go to state 860
    ';'  shift, and go to state 733

    c_or_s  go to state 861


State 654

  508 tuple_type: type_declaration .
  727 type_declaration: type_declaration . '|' type_declaration_no_options
  728                 | type_declaration . '|' '#'

    '|'  shift, and go to state 372

    $default  reduce using rule 508 (tuple_type)


State 655

  515 variant_type: "name" . ':' type_declaration

    ':'  shift, and go to state 862


State 656

  516 variant_type_list: variant_type .

    $default  reduce using rule 516 (variant_type_list)


State 657

  517 variant_type_list: variant_type_list . c_or_s variant_type
  725 type_declaration_no_options_no_dim: "variant" '<' $@71 variant_type_list . '>' $@72

    ','  shift, and go to state 732
    '>'  shift, and go to state 863
    ';'  shift, and go to state 733

    c_or_s  go to state 864


State 658

  644 auto_type_declaration: "$t" '(' expr ')' .

    $default  reduce using rule 644 (auto_type_declaration)


State 659

  673 type_declaration_no_options_no_dim: '$' name_in_namespace '<' $@48 . type_declaration_no_options_list '>' '(' optional_expr_list ')'

    "type"       shift, and go to state 222
    "array"      shift, and go to state 223
    "table"      shift, and go to state 224
    "typedecl"   shift, and go to state 225
    "iterator"   shift, and go to state 226
    "smart_ptr"  shift, and go to state 227
    "bool"       shift, and go to state 228
    "void"       shift, and go to state 229
    "string"     shift, and go to state 230
    "auto"       shift, and go to state 231
    "int"        shift, and go to state 232
    "int2"       shift, and go to state 233
    "int3"       shift, and go to state 234
    "int4"       shift, and go to state 235
    "uint"       shift, and go to state 236
    "bitfield"   shift, and go to state 237
    "uint2"      shift, and go to state 238
    "uint3"      shift, and go to state 239
    "uint4"      shift, and go to state 240
    "float"      shift, and go to state 241
    "float2"     shift, and go to state 242
    "float3"     shift, and go to state 243
    "float4"     shift, and go to state 244
    "range"      shift, and go to state 245
    "urange"     shift, and go to state 246
    "range64"    shift, and go to state 247
    "urange64"   shift, and go to state 248
    "block"      shift, and go to state 249
    "int64"      shift, and go to state 250
    "uint64"     shift, and go to state 251
    "double"     shift, and go to state 252
    "function"   shift, and go to state 253
    "lambda"     shift, and go to state 254
    "int8"       shift, and go to state 255
    "uint8"      shift, and go to state 256
    "int16"      shift, and go to state 257
    "uint16"     shift, and go to state 258
    "tuple"      shift, and go to state 259
    "variant"    shift, and go to state 260
    "::"         shift, and go to state 55
    "$t"         shift, and go to state 261
    "name"       shift, and go to state 56
    '$'          shift, and go to state 262

    type_declaration_no_options_list    go to state 865
    name_in_namespace                   go to state 263
    basic_type_declaration              go to state 264
    structure_type_declaration          go to state 265
    auto_type_declaration               go to state 266
    bitfield_type_declaration           go to state 267
    type_declaration_no_options         go to state 268
    type_declaration_no_options_no_dim  go to state 269
    type_declaration                    go to state 866


State 660

  671 type_declaration_no_options_no_dim: '$' name_in_namespace '(' optional_expr_list . ')'

    ')'  shift, and go to state 867


State 661

  251 optional_expr_list: expr_list . optional_comma
  309 expr_list: expr_list . ',' expr

    ','  shift, and go to state 773

    $default  reduce using rule 811 (optional_comma)

    optional_comma  go to state 868


State 662

  674 type_declaration_no_options_no_dim: type_declaration_no_options_no_dim '-' '[' ']' .

    $default  reduce using rule 674 (type_declaration_no_options_no_dim)


State 663

  657 dim_list: '[' expr ']' .

    $default  reduce using rule 657 (dim_list)


State 664

  660 dim_list: dim_list '[' ']' .

    $default  reduce using rule 660 (dim_list)


State 665

  356 expr_method_call: expr . "->" "name" '(' ')'
  357                 | expr . "->" "name" '(' expr_list ')'
  367 expr_field: expr . '.' "name"
  368           | expr . '.' '.' "name"
  369           | expr . '.' "name" '(' ')'
  370           | expr . '.' "name" '(' expr_list ')'
  371           | expr . '.' basic_type_declaration '(' ')'
  372           | expr . '.' basic_type_declaration '(' expr_list ')'
  375           | expr . '.' $@25 error $@26
  397 expr: expr . "<<" expr
  398     | expr . ">>" expr
  399     | expr . "<<<" expr
  400     | expr . ">>>" expr
  401     | expr . '+' expr
  402     | expr . '-' expr
  403     | expr . '*' expr
  404     | expr . '/' expr
  405     | expr . '%' expr
  406     | expr . '<' expr
  407     | expr . '>' expr
  408     | expr . "==" expr
  409     | expr . "!=" expr
  410     | expr . "<=" expr
  411     | expr . ">=" expr
  412     | expr . '&' expr
  413     | expr . '|' expr
  414     | expr . '^' expr
  415     | expr . "&&" expr
  416     | expr . "||" expr
  417     | expr . "^^" expr
  418     | expr . ".." expr
  421     | expr . "++"
  422     | expr . "--"
  424     | expr . '[' expr ']'
  425     | expr . '.' '[' expr ']'
  426     | expr . "?[" expr ']'
  427     | expr . '.' "?[" expr ']'
  428     | expr . "?." "name"
  429     | expr . '.' "?." "name"
  436     | expr . "??" expr
  437     | expr . '?' expr ':' expr
  440     | expr . "is" "type" '<' $@27 type_declaration_no_options '>' $@28
  441     | expr . "is" basic_type_declaration
  442     | expr . "is" "name"
  443     | expr . "as" "name"
  446     | expr . "as" "type" '<' $@29 type_declaration '>' $@30
  447     | expr . "as" basic_type_declaration
  448     | expr . '?' "as" "name"
  451     | expr . '?' "as" "type" '<' $@31 type_declaration '>' $@32
  452     | expr . '?' "as" basic_type_declaration
  460     | expr . "<|" expr
  461     | expr . "|>" expr
  462     | expr . "|>" basic_type_declaration
  476 expr_mtag: expr . '.' "$f" '(' expr ')'
  477          | expr . "?." "$f" '(' expr ')'
  478          | expr . '.' '.' "$f" '(' expr ')'
  479          | expr . '.' "?." "$f" '(' expr ')'
  480          | expr . "as" "$f" '(' expr ')'
  481          | expr . '?' "as" "$f" '(' expr ')'
  482          | expr . "is" "$f" '(' expr ')'
  659 dim_list: dim_list '[' expr . ']'

    "is"   shift, and go to state 603
    "as"   shift, and go to state 604
    "<<"   shift, and go to state 605
    ">>"   shift, and go to state 606
    "++"   shift, and go to state 607
    "--"   shift, and go to state 608
    "<="   shift, and go to state 609
    ">="   shift, and go to state 610
    "=="   shift, and go to state 611
    "!="   shift, and go to state 612
    "->"   shift, and go to state 613
    "??"   shift, and go to state 614
    "?."   shift, and go to state 615
    "?["   shift, and go to state 616
    "<|"   shift, and go to state 617
    "|>"   shift, and go to state 618
    "<<<"  shift, and go to state 619
    ">>>"  shift, and go to state 620
    "&&"   shift, and go to state 621
    "||"   shift, and go to state 622
    "^^"   shift, and go to state 623
    ".."   shift, and go to state 624
    '?'    shift, and go to state 625
    '|'    shift, and go to state 626
    '^'    shift, and go to state 627
    '&'    shift, and go to state 628
    '<'    shift, and go to state 629
    '>'    shift, and go to state 630
    '-'    shift, and go to state 631
    '+'    shift, and go to state 632
    '*'    shift, and go to state 633
    '/'    shift, and go to state 634
    '%'    shift, and go to state 635
    '.'    shift, and go to state 636
    '['    shift, and go to state 637
    ']'    shift, and go to state 869


State 666

  648 bitfield_alias_bits: "name" .

    $default  reduce using rule 648 (bitfield_alias_bits)


State 667

  649 bitfield_alias_bits: bitfield_alias_bits . commas "name"
  743 bitfield_alias_declaration: "bitfield" $@81 optional_public_or_private_alias "name" optional_commas $@82 '{' $@83 bitfield_alias_bits . optional_commas $@84 '}'

    ','  shift, and go to state 168

    $default  reduce using rule 580 (optional_commas)

    commas           go to state 870
    optional_commas  go to state 871


State 668

  513 tuple_alias_type_list: tuple_type .

    $default  reduce using rule 513 (tuple_alias_type_list)


State 669

  514 tuple_alias_type_list: tuple_alias_type_list . semis tuple_type
  733 tuple_alias_declaration: "tuple" $@73 optional_public_or_private_alias "name" optional_semis $@74 '{' $@75 tuple_alias_type_list . optional_semis $@76 '}'

    ';'  shift, and go to state 171

    $default  reduce using rule 71 (optional_semis)

    semis           go to state 872
    optional_semis  go to state 873


State 670

  519 variant_alias_type_list: variant_type .

    $default  reduce using rule 519 (variant_alias_type_list)


State 671

  520 variant_alias_type_list: variant_alias_type_list . semis variant_type
  738 variant_alias_declaration: "variant" $@77 optional_public_or_private_alias "name" optional_semis $@78 '{' $@79 variant_alias_type_list . optional_semis $@80 '}'

    ';'  shift, and go to state 171

    $default  reduce using rule 71 (optional_semis)

    semis           go to state 874
    optional_semis  go to state 875


State 672

  356 expr_method_call: expr . "->" "name" '(' ')'
  357                 | expr . "->" "name" '(' expr_list ')'
  367 expr_field: expr . '.' "name"
  368           | expr . '.' '.' "name"
  369           | expr . '.' "name" '(' ')'
  370           | expr . '.' "name" '(' expr_list ')'
  371           | expr . '.' basic_type_declaration '(' ')'
  372           | expr . '.' basic_type_declaration '(' expr_list ')'
  375           | expr . '.' $@25 error $@26
  397 expr: expr . "<<" expr
  398     | expr . ">>" expr
  399     | expr . "<<<" expr
  400     | expr . ">>>" expr
  401     | expr . '+' expr
  402     | expr . '-' expr
  403     | expr . '*' expr
  404     | expr . '/' expr
  405     | expr . '%' expr
  406     | expr . '<' expr
  407     | expr . '>' expr
  408     | expr . "==" expr
  409     | expr . "!=" expr
  410     | expr . "<=" expr
  411     | expr . ">=" expr
  412     | expr . '&' expr
  413     | expr . '|' expr
  414     | expr . '^' expr
  415     | expr . "&&" expr
  416     | expr . "||" expr
  417     | expr . "^^" expr
  418     | expr . ".." expr
  421     | expr . "++"
  422     | expr . "--"
  424     | expr . '[' expr ']'
  425     | expr . '.' '[' expr ']'
  426     | expr . "?[" expr ']'
  427     | expr . '.' "?[" expr ']'
  428     | expr . "?." "name"
  429     | expr . '.' "?." "name"
  436     | expr . "??" expr
  437     | expr . '?' expr ':' expr
  440     | expr . "is" "type" '<' $@27 type_declaration_no_options '>' $@28
  441     | expr . "is" basic_type_declaration
  442     | expr . "is" "name"
  443     | expr . "as" "name"
  446     | expr . "as" "type" '<' $@29 type_declaration '>' $@30
  447     | expr . "as" basic_type_declaration
  448     | expr . '?' "as" "name"
  451     | expr . '?' "as" "type" '<' $@31 type_declaration '>' $@32
  452     | expr . '?' "as" basic_type_declaration
  460     | expr . "<|" expr
  461     | expr . "|>" expr
  462     | expr . "|>" basic_type_declaration
  476 expr_mtag: expr . '.' "$f" '(' expr ')'
  477          | expr . "?." "$f" '(' expr ')'
  478          | expr . '.' '.' "$f" '(' expr ')'
  479          | expr . '.' "?." "$f" '(' expr ')'
  480          | expr . "as" "$f" '(' expr ')'
  481          | expr . '?' "as" "$f" '(' expr ')'
  482          | expr . "is" "$f" '(' expr ')'
  505 function_argument_declaration: "$a" '(' expr . ')'

    "is"   shift, and go to state 603
    "as"   shift, and go to state 604
    "<<"   shift, and go to state 605
    ">>"   shift, and go to state 606
    "++"   shift, and go to state 607
    "--"   shift, and go to state 608
    "<="   shift, and go to state 609
    ">="   shift, and go to state 610
    "=="   shift, and go to state 611
    "!="   shift, and go to state 612
    "->"   shift, and go to state 613
    "??"   shift, and go to state 614
    "?."   shift, and go to state 615
    "?["   shift, and go to state 616
    "<|"   shift, and go to state 617
    "|>"   shift, and go to state 618
    "<<<"  shift, and go to state 619
    ">>>"  shift, and go to state 620
    "&&"   shift, and go to state 621
    "||"   shift, and go to state 622
    "^^"   shift, and go to state 623
    ".."   shift, and go to state 624
    '?'    shift, and go to state 625
    '|'    shift, and go to state 626
    '^'    shift, and go to state 627
    '&'    shift, and go to state 628
    '<'    shift, and go to state 629
    '>'    shift, and go to state 630
    '-'    shift, and go to state 631
    '+'    shift, and go to state 632
    '*'    shift, and go to state 633
    '/'    shift, and go to state 634
    '%'    shift, and go to state 635
    '.'    shift, and go to state 636
    '['    shift, and go to state 637
    ')'    shift, and go to state 876


State 673

  602 variable_name_with_pos_list: "$i" . '(' expr ')'

    '('  shift, and go to state 877


State 674

  601 variable_name_with_pos_list: "name" .
  603                            | "name" . "aka" "name"

    "aka"  shift, and go to state 878

    $default  reduce using rule 601 (variable_name_with_pos_list)


State 675

  504 function_argument_declaration: optional_field_annotation kwd_let_var_or_nothing variable_declaration .

    $default  reduce using rule 504 (function_argument_declaration)


State 676

  523 variable_declaration: variable_name_with_pos_list .
  524                     | variable_name_with_pos_list . '&'
  525                     | variable_name_with_pos_list . ':' type_declaration
  526                     | variable_name_with_pos_list . ':' type_declaration copy_or_move expr
  527                     | variable_name_with_pos_list . copy_or_move expr
  604 variable_name_with_pos_list: variable_name_with_pos_list . ',' "name"
  605                            | variable_name_with_pos_list . ',' "name" "aka" "name"

    "<-"  shift, and go to state 879
    ','   shift, and go to state 880
    '='   shift, and go to state 881
    ':'   shift, and go to state 882
    '&'   shift, and go to state 883

    $default  reduce using rule 523 (variable_declaration)

    copy_or_move  go to state 884


State 677

  507 function_argument_list: function_argument_list ';' function_argument_declaration .

    $default  reduce using rule 507 (function_argument_list)


State 678

  249 expressions: expressions error .

    $default  reduce using rule 249 (expressions)


State 679

  273 expression_return: "return" .
  274                  | "return" . expr
  275                  | "return" . "<-" expr

    "struct"                          shift, and go to state 414
    "class"                           shift, and go to state 415
    "true"                            shift, and go to state 416
    "false"                           shift, and go to state 417
    "new"                             shift, and go to state 418
    "typeinfo"                        shift, and go to state 419
    "type"                            shift, and go to state 420
    "array"                           shift, and go to state 421
    "null"                            shift, and go to state 422
    "table"                           shift, and go to state 423
    "deref"                           shift, and go to state 424
    "cast"                            shift, and go to state 425
    "upcast"                          shift, and go to state 426
    "addr"                            shift, and go to state 427
    "reinterpret"                     shift, and go to state 428
    "unsafe"                          shift, and go to state 429
    "fixed_array"                     shift, and go to state 430
    "default"                         shift, and go to state 431
    "bool"                            shift, and go to state 228
    "void"                            shift, and go to state 229
    "string"                          shift, and go to state 230
    "int"                             shift, and go to state 232
    "int2"                            shift, and go to state 233
    "int3"                            shift, and go to state 234
    "int4"                            shift, and go to state 235
    "uint"                            shift, and go to state 236
    "bitfield"                        shift, and go to state 432
    "uint2"                           shift, and go to state 238
    "uint3"                           shift, and go to state 239
    "uint4"                           shift, and go to state 240
    "float"                           shift, and go to state 241
    "float2"                          shift, and go to state 242
    "float3"                          shift, and go to state 243
    "float4"                          shift, and go to state 244
    "range"                           shift, and go to state 245
    "urange"                          shift, and go to state 246
    "range64"                         shift, and go to state 247
    "urange64"                        shift, and go to state 248
    "int64"                           shift, and go to state 250
    "uint64"                          shift, and go to state 251
    "double"                          shift, and go to state 252
    "int8"                            shift, and go to state 255
    "uint8"                           shift, and go to state 256
    "int16"                           shift, and go to state 257
    "uint16"                          shift, and go to state 258
    "tuple"                           shift, and go to state 433
    "variant"                         shift, and go to state 434
    "generator"                       shift, and go to state 435
    "++"                              shift, and go to state 436
    "--"                              shift, and go to state 437
    "<-"                              shift, and go to state 885
    "::"                              shift, and go to state 55
    "$$"                              shift, and go to state 438
    "$i"                              shift, and go to state 439
    "$v"                              shift, and go to state 440
    "$b"                              shift, and go to state 441
    "$a"                              shift, and go to state 442
    "$c"                              shift, and go to state 443
    "..."                             shift, and go to state 444
    "integer constant"                shift, and go to state 445
    "long integer constant"           shift, and go to state 446
    "unsigned integer constant"       shift, and go to state 447
    "unsigned long integer constant"  shift, and go to state 448
    "unsigned int8 constant"          shift, and go to state 449
    "floating point constant"         shift, and go to state 450
    "double constant"                 shift, and go to state 451
    "name"                            shift, and go to state 56
    "start of the string"             shift, and go to state 452
    '-'                               shift, and go to state 453
    '+'                               shift, and go to state 454
    '*'                               shift, and go to state 455
    '%'                               shift, and go to state 13
    '~'                               shift, and go to state 456
    '!'                               shift, and go to state 457
    '['                               shift, and go to state 458
    '('                               shift, and go to state 459
    '$'                               shift, and go to state 460
    '@'                               shift, and go to state 461
    '{'                               shift, and go to state 462

    $default  reduce using rule 273 (expression_return)

    string_builder          go to state 463
    expr_reader             go to state 464
    expr_call_pipe          go to state 465
    name_in_namespace       go to state 466
    expr_new                go to state 467
    expr_cast               go to state 468
    expr_type_decl          go to state 469
    expr_type_info          go to state 470
    block_or_lambda         go to state 471
    expr_full_block         go to state 472
    expr_numeric_const      go to state 473
    expr_named_call         go to state 474
    expr_method_call        go to state 475
    func_addr_expr          go to state 476
    expr_field              go to state 477
    expr_call               go to state 478
    expr                    go to state 886
    expr_generator          go to state 480
    expr_mtag               go to state 481
    basic_type_declaration  go to state 482
    make_decl               go to state 483
    make_struct_decl        go to state 484
    make_tuple_call         go to state 485
    make_dim_decl           go to state 486
    make_table_decl         go to state 487
    array_comprehension     go to state 488


State 680

  271 expression_break: "break" .

    $default  reduce using rule 271 (expression_break)


State 681

  278 expression_try_catch: "try" . expression_block "recover" expression_block

    $default  reduce using rule 224 ($@9)

    expression_block  go to state 887
    $@9               go to state 332


State 682

  259 expression_delete: "delete" . expr
  260                  | "delete" . "explicit" expr

    "struct"                          shift, and go to state 414
    "class"                           shift, and go to state 415
    "true"                            shift, and go to state 416
    "false"                           shift, and go to state 417
    "new"                             shift, and go to state 418
    "typeinfo"                        shift, and go to state 419
    "type"                            shift, and go to state 420
    "array"                           shift, and go to state 421
    "null"                            shift, and go to state 422
    "table"                           shift, and go to state 423
    "deref"                           shift, and go to state 424
    "cast"                            shift, and go to state 425
    "upcast"                          shift, and go to state 426
    "addr"                            shift, and go to state 427
    "reinterpret"                     shift, and go to state 428
    "explicit"                        shift, and go to state 888
    "unsafe"                          shift, and go to state 429
    "fixed_array"                     shift, and go to state 430
    "default"                         shift, and go to state 431
    "bool"                            shift, and go to state 228
    "void"                            shift, and go to state 229
    "string"                          shift, and go to state 230
    "int"                             shift, and go to state 232
    "int2"                            shift, and go to state 233
    "int3"                            shift, and go to state 234
    "int4"                            shift, and go to state 235
    "uint"                            shift, and go to state 236
    "bitfield"                        shift, and go to state 432
    "uint2"                           shift, and go to state 238
    "uint3"                           shift, and go to state 239
    "uint4"                           shift, and go to state 240
    "float"                           shift, and go to state 241
    "float2"                          shift, and go to state 242
    "float3"                          shift, and go to state 243
    "float4"                          shift, and go to state 244
    "range"                           shift, and go to state 245
    "urange"                          shift, and go to state 246
    "range64"                         shift, and go to state 247
    "urange64"                        shift, and go to state 248
    "int64"                           shift, and go to state 250
    "uint64"                          shift, and go to state 251
    "double"                          shift, and go to state 252
    "int8"                            shift, and go to state 255
    "uint8"                           shift, and go to state 256
    "int16"                           shift, and go to state 257
    "uint16"                          shift, and go to state 258
    "tuple"                           shift, and go to state 433
    "variant"                         shift, and go to state 434
    "generator"                       shift, and go to state 435
    "++"                              shift, and go to state 436
    "--"                              shift, and go to state 437
    "::"                              shift, and go to state 55
    "$$"                              shift, and go to state 438
    "$i"                              shift, and go to state 439
    "$v"                              shift, and go to state 440
    "$b"                              shift, and go to state 441
    "$a"                              shift, and go to state 442
    "$c"                              shift, and go to state 443
    "..."                             shift, and go to state 444
    "integer constant"                shift, and go to state 445
    "long integer constant"           shift, and go to state 446
    "unsigned integer constant"       shift, and go to state 447
    "unsigned long integer constant"  shift, and go to state 448
    "unsigned int8 constant"          shift, and go to state 449
    "floating point constant"         shift, and go to state 450
    "double constant"                 shift, and go to state 451
    "name"                            shift, and go to state 56
    "start of the string"             shift, and go to state 452
    '-'                               shift, and go to state 453
    '+'                               shift, and go to state 454
    '*'                               shift, and go to state 455
    '%'                               shift, and go to state 13
    '~'                               shift, and go to state 456
    '!'                               shift, and go to state 457
    '['                               shift, and go to state 458
    '('                               shift, and go to state 459
    '$'                               shift, and go to state 460
    '@'                               shift, and go to state 461
    '{'                               shift, and go to state 462

    string_builder          go to state 463
    expr_reader             go to state 464
    expr_call_pipe          go to state 465
    name_in_namespace       go to state 466
    expr_new                go to state 467
    expr_cast               go to state 468
    expr_type_decl          go to state 469
    expr_type_info          go to state 470
    block_or_lambda         go to state 471
    expr_full_block         go to state 472
    expr_numeric_const      go to state 473
    expr_named_call         go to state 474
    expr_method_call        go to state 475
    func_addr_expr          go to state 476
    expr_field              go to state 477
    expr_call               go to state 478
    expr                    go to state 889
    expr_generator          go to state 480
    expr_mtag               go to state 481
    basic_type_declaration  go to state 482
    make_decl               go to state 483
    make_struct_decl        go to state 484
    make_tuple_call         go to state 485
    make_dim_decl           go to state 486
    make_table_decl         go to state 487
    array_comprehension     go to state 488


State 683

   83 expression_with_alias: "assume" . "name" '=' expr

    "name"  shift, and go to state 890


State 684

  272 expression_continue: "continue" .

    $default  reduce using rule 272 (expression_continue)


State 685

  246 expression_any: "pass" . ';'

    ';'  shift, and go to state 891


State 686

   52 expression_label: "label" . "integer constant" ':'

    "integer constant"  shift, and go to state 892


State 687

   53 expression_goto: "goto" . "label" "integer constant"
   54                | "goto" . expr

    "struct"                          shift, and go to state 414
    "class"                           shift, and go to state 415
    "true"                            shift, and go to state 416
    "false"                           shift, and go to state 417
    "new"                             shift, and go to state 418
    "typeinfo"                        shift, and go to state 419
    "type"                            shift, and go to state 420
    "array"                           shift, and go to state 421
    "null"                            shift, and go to state 422
    "table"                           shift, and go to state 423
    "deref"                           shift, and go to state 424
    "cast"                            shift, and go to state 425
    "upcast"                          shift, and go to state 426
    "addr"                            shift, and go to state 427
    "reinterpret"                     shift, and go to state 428
    "label"                           shift, and go to state 893
    "unsafe"                          shift, and go to state 429
    "fixed_array"                     shift, and go to state 430
    "default"                         shift, and go to state 431
    "bool"                            shift, and go to state 228
    "void"                            shift, and go to state 229
    "string"                          shift, and go to state 230
    "int"                             shift, and go to state 232
    "int2"                            shift, and go to state 233
    "int3"                            shift, and go to state 234
    "int4"                            shift, and go to state 235
    "uint"                            shift, and go to state 236
    "bitfield"                        shift, and go to state 432
    "uint2"                           shift, and go to state 238
    "uint3"                           shift, and go to state 239
    "uint4"                           shift, and go to state 240
    "float"                           shift, and go to state 241
    "float2"                          shift, and go to state 242
    "float3"                          shift, and go to state 243
    "float4"                          shift, and go to state 244
    "range"                           shift, and go to state 245
    "urange"                          shift, and go to state 246
    "range64"                         shift, and go to state 247
    "urange64"                        shift, and go to state 248
    "int64"                           shift, and go to state 250
    "uint64"                          shift, and go to state 251
    "double"                          shift, and go to state 252
    "int8"                            shift, and go to state 255
    "uint8"                           shift, and go to state 256
    "int16"                           shift, and go to state 257
    "uint16"                          shift, and go to state 258
    "tuple"                           shift, and go to state 433
    "variant"                         shift, and go to state 434
    "generator"                       shift, and go to state 435
    "++"                              shift, and go to state 436
    "--"                              shift, and go to state 437
    "::"                              shift, and go to state 55
    "$$"                              shift, and go to state 438
    "$i"                              shift, and go to state 439
    "$v"                              shift, and go to state 440
    "$b"                              shift, and go to state 441
    "$a"                              shift, and go to state 442
    "$c"                              shift, and go to state 443
    "..."                             shift, and go to state 444
    "integer constant"                shift, and go to state 445
    "long integer constant"           shift, and go to state 446
    "unsigned integer constant"       shift, and go to state 447
    "unsigned long integer constant"  shift, and go to state 448
    "unsigned int8 constant"          shift, and go to state 449
    "floating point constant"         shift, and go to state 450
    "double constant"                 shift, and go to state 451
    "name"                            shift, and go to state 56
    "start of the string"             shift, and go to state 452
    '-'                               shift, and go to state 453
    '+'                               shift, and go to state 454
    '*'                               shift, and go to state 455
    '%'                               shift, and go to state 13
    '~'                               shift, and go to state 456
    '!'                               shift, and go to state 457
    '['                               shift, and go to state 458
    '('                               shift, and go to state 459
    '$'                               shift, and go to state 460
    '@'                               shift, and go to state 461
    '{'                               shift, and go to state 462

    string_builder          go to state 463
    expr_reader             go to state 464
    expr_call_pipe          go to state 465
    name_in_namespace       go to state 466
    expr_new                go to state 467
    expr_cast               go to state 468
    expr_type_decl          go to state 469
    expr_type_info          go to state 470
    block_or_lambda         go to state 471
    expr_full_block         go to state 472
    expr_numeric_const      go to state 473
    expr_named_call         go to state 474
    expr_method_call        go to state 475
    func_addr_expr          go to state 476
    expr_field              go to state 477
    expr_call               go to state 478
    expr                    go to state 894
    expr_generator          go to state 480
    expr_mtag               go to state 481
    basic_type_declaration  go to state 482
    make_decl               go to state 483
    make_struct_decl        go to state 484
    make_tuple_call         go to state 485
    make_dim_decl           go to state 486
    make_table_decl         go to state 487
    array_comprehension     go to state 488


State 688

   78 expression_unsafe: "unsafe" . optional_semis expression_block
  464 expr: "unsafe" . '(' expr ')'

    '('  shift, and go to state 565
    ';'  shift, and go to state 171

    $default  reduce using rule 71 (optional_semis)

    semis           go to state 172
    optional_semis  go to state 895


State 689

  276 expression_yield: "yield" . expr
  277                 | "yield" . "<-" expr

    "struct"                          shift, and go to state 414
    "class"                           shift, and go to state 415
    "true"                            shift, and go to state 416
    "false"                           shift, and go to state 417
    "new"                             shift, and go to state 418
    "typeinfo"                        shift, and go to state 419
    "type"                            shift, and go to state 420
    "array"                           shift, and go to state 421
    "null"                            shift, and go to state 422
    "table"                           shift, and go to state 423
    "deref"                           shift, and go to state 424
    "cast"                            shift, and go to state 425
    "upcast"                          shift, and go to state 426
    "addr"                            shift, and go to state 427
    "reinterpret"                     shift, and go to state 428
    "unsafe"                          shift, and go to state 429
    "fixed_array"                     shift, and go to state 430
    "default"                         shift, and go to state 431
    "bool"                            shift, and go to state 228
    "void"                            shift, and go to state 229
    "string"                          shift, and go to state 230
    "int"                             shift, and go to state 232
    "int2"                            shift, and go to state 233
    "int3"                            shift, and go to state 234
    "int4"                            shift, and go to state 235
    "uint"                            shift, and go to state 236
    "bitfield"                        shift, and go to state 432
    "uint2"                           shift, and go to state 238
    "uint3"                           shift, and go to state 239
    "uint4"                           shift, and go to state 240
    "float"                           shift, and go to state 241
    "float2"                          shift, and go to state 242
    "float3"                          shift, and go to state 243
    "float4"                          shift, and go to state 244
    "range"                           shift, and go to state 245
    "urange"                          shift, and go to state 246
    "range64"                         shift, and go to state 247
    "urange64"                        shift, and go to state 248
    "int64"                           shift, and go to state 250
    "uint64"                          shift, and go to state 251
    "double"                          shift, and go to state 252
    "int8"                            shift, and go to state 255
    "uint8"                           shift, and go to state 256
    "int16"                           shift, and go to state 257
    "uint16"                          shift, and go to state 258
    "tuple"                           shift, and go to state 433
    "variant"                         shift, and go to state 434
    "generator"                       shift, and go to state 435
    "++"                              shift, and go to state 436
    "--"                              shift, and go to state 437
    "<-"                              shift, and go to state 896
    "::"                              shift, and go to state 55
    "$$"                              shift, and go to state 438
    "$i"                              shift, and go to state 439
    "$v"                              shift, and go to state 440
    "$b"                              shift, and go to state 441
    "$a"                              shift, and go to state 442
    "$c"                              shift, and go to state 443
    "..."                             shift, and go to state 444
    "integer constant"                shift, and go to state 445
    "long integer constant"           shift, and go to state 446
    "unsigned integer constant"       shift, and go to state 447
    "unsigned long integer constant"  shift, and go to state 448
    "unsigned int8 constant"          shift, and go to state 449
    "floating point constant"         shift, and go to state 450
    "double constant"                 shift, and go to state 451
    "name"                            shift, and go to state 56
    "start of the string"             shift, and go to state 452
    '-'                               shift, and go to state 453
    '+'                               shift, and go to state 454
    '*'                               shift, and go to state 455
    '%'                               shift, and go to state 13
    '~'                               shift, and go to state 456
    '!'                               shift, and go to state 457
    '['                               shift, and go to state 458
    '('                               shift, and go to state 459
    '$'                               shift, and go to state 460
    '@'                               shift, and go to state 461
    '{'                               shift, and go to state 462

    string_builder          go to state 463
    expr_reader             go to state 464
    expr_call_pipe          go to state 465
    name_in_namespace       go to state 466
    expr_new                go to state 467
    expr_cast               go to state 468
    expr_type_decl          go to state 469
    expr_type_info          go to state 470
    block_or_lambda         go to state 471
    expr_full_block         go to state 472
    expr_numeric_const      go to state 473
    expr_named_call         go to state 474
    expr_method_call        go to state 475
    func_addr_expr          go to state 476
    expr_field              go to state 477
    expr_call               go to state 478
    expr                    go to state 897
    expr_generator          go to state 480
    expr_mtag               go to state 481
    basic_type_declaration  go to state 482
    make_decl               go to state 483
    make_struct_decl        go to state 484
    make_tuple_call         go to state 485
    make_dim_decl           go to state 486
    make_table_decl         go to state 487
    array_comprehension     go to state 488


State 690

  228 expression_any: ';' .

    $default  reduce using rule 228 (expression_any)


State 691

  244 expression_any: expression_label . ';'

    ';'  shift, and go to state 898


State 692

  245 expression_any: expression_goto . ';'

    ';'  shift, and go to state 899


State 693

   75 expression_if_then_else_oneliner: expression_if_one_liner . "if" '(' expr ')' expression_else_one_liner ';'

    "if"  shift, and go to state 900


State 694

  241 expression_any: expression_if_then_else .

    $default  reduce using rule 241 (expression_any)


State 695

   74 expression_if_then_else: $@2 . if_or_static_if '(' expr ')' optional_semis expression_block expression_else

    "if"         shift, and go to state 901
    "static_if"  shift, and go to state 902

    if_or_static_if  go to state 903


State 696

  242 expression_any: expression_if_then_else_oneliner .

    $default  reduce using rule 242 (expression_any)


State 697

  236 expression_any: expression_for_loop .

    $default  reduce using rule 236 (expression_any)


State 698

   77 expression_for_loop: $@3 . "for" '(' variable_name_with_pos_list "in" expr_list ')' optional_semis expression_block

    "for"  shift, and go to state 904


State 699

  233 expression_any: expression_unsafe .

    $default  reduce using rule 233 (expression_any)


State 700

  232 expression_any: expression_while_loop .

    $default  reduce using rule 232 (expression_any)


State 701

   80 expression_while_loop: $@4 . "while" '(' expr ')' optional_semis expression_block

    "while"  shift, and go to state 905


State 702

  234 expression_any: expression_with .

    $default  reduce using rule 234 (expression_any)


State 703

   82 expression_with: $@5 . "with" '(' expr ')' optional_semis expression_block

    "with"  shift, and go to state 906


State 704

  235 expression_any: expression_with_alias . ';'

    ';'  shift, and go to state 907


State 705

  226 expression_block: $@9 '{' expressions $@10 . '}' expression_block_finally

    '}'  shift, and go to state 908


State 706

  248 expressions: expressions expression_any .

    $default  reduce using rule 248 (expressions)


State 707

  230 expression_any: expression_delete . ';'

    ';'  shift, and go to state 909


State 708

   67 expression_if_one_liner: expression_break .
  237 expression_any: expression_break . ';'

    ';'  shift, and go to state 910

    $default  reduce using rule 67 (expression_if_one_liner)


State 709

   68 expression_if_one_liner: expression_continue .
  238 expression_any: expression_continue . ';'

    ';'  shift, and go to state 911

    $default  reduce using rule 68 (expression_if_one_liner)


State 710

   65 expression_if_one_liner: expression_return .
  239 expression_any: expression_return . ';'

    ';'  shift, and go to state 912

    $default  reduce using rule 65 (expression_if_one_liner)


State 711

   66 expression_if_one_liner: expression_yield .
  240 expression_any: expression_yield . ';'

    ';'  shift, and go to state 913

    $default  reduce using rule 66 (expression_if_one_liner)


State 712

  243 expression_any: expression_try_catch .

    $default  reduce using rule 243 (expression_any)


State 713

  290 expression_let: kwd_let . optional_in_scope let_variable_declaration
  291               | kwd_let . optional_in_scope tuple_expansion_variable_declaration
  292               | kwd_let . optional_in_scope '{' variable_declaration_list '}'

    "inscope"  shift, and go to state 914

    $default  reduce using rule 285 (optional_in_scope)

    optional_in_scope  go to state 915


State 714

  231 expression_any: expression_let .

    $default  reduce using rule 231 (expression_any)


State 715

  229 expression_any: expr_assign . ';'

    ';'  shift, and go to state 916


State 716

   64 expression_if_one_liner: expr .
  335 expr_assign: expr .
  336            | expr . '=' expr
  337            | expr . "<-" expr
  338            | expr . ":=" expr
  339            | expr . "&=" expr
  340            | expr . "|=" expr
  341            | expr . "^=" expr
  342            | expr . "&&=" expr
  343            | expr . "||=" expr
  344            | expr . "^^=" expr
  345            | expr . "+=" expr
  346            | expr . "-=" expr
  347            | expr . "*=" expr
  348            | expr . "/=" expr
  349            | expr . "%=" expr
  350            | expr . "<<=" expr
  351            | expr . ">>=" expr
  352            | expr . "<<<=" expr
  353            | expr . ">>>=" expr
  356 expr_method_call: expr . "->" "name" '(' ')'
  357                 | expr . "->" "name" '(' expr_list ')'
  367 expr_field: expr . '.' "name"
  368           | expr . '.' '.' "name"
  369           | expr . '.' "name" '(' ')'
  370           | expr . '.' "name" '(' expr_list ')'
  371           | expr . '.' basic_type_declaration '(' ')'
  372           | expr . '.' basic_type_declaration '(' expr_list ')'
  375           | expr . '.' $@25 error $@26
  397 expr: expr . "<<" expr
  398     | expr . ">>" expr
  399     | expr . "<<<" expr
  400     | expr . ">>>" expr
  401     | expr . '+' expr
  402     | expr . '-' expr
  403     | expr . '*' expr
  404     | expr . '/' expr
  405     | expr . '%' expr
  406     | expr . '<' expr
  407     | expr . '>' expr
  408     | expr . "==" expr
  409     | expr . "!=" expr
  410     | expr . "<=" expr
  411     | expr . ">=" expr
  412     | expr . '&' expr
  413     | expr . '|' expr
  414     | expr . '^' expr
  415     | expr . "&&" expr
  416     | expr . "||" expr
  417     | expr . "^^" expr
  418     | expr . ".." expr
  421     | expr . "++"
  422     | expr . "--"
  424     | expr . '[' expr ']'
  425     | expr . '.' '[' expr ']'
  426     | expr . "?[" expr ']'
  427     | expr . '.' "?[" expr ']'
  428     | expr . "?." "name"
  429     | expr . '.' "?." "name"
  436     | expr . "??" expr
  437     | expr . '?' expr ':' expr
  440     | expr . "is" "type" '<' $@27 type_declaration_no_options '>' $@28
  441     | expr . "is" basic_type_declaration
  442     | expr . "is" "name"
  443     | expr . "as" "name"
  446     | expr . "as" "type" '<' $@29 type_declaration '>' $@30
  447     | expr . "as" basic_type_declaration
  448     | expr . '?' "as" "name"
  451     | expr . '?' "as" "type" '<' $@31 type_declaration '>' $@32
  452     | expr . '?' "as" basic_type_declaration
  460     | expr . "<|" expr
  461     | expr . "|>" expr
  462     | expr . "|>" basic_type_declaration
  476 expr_mtag: expr . '.' "$f" '(' expr ')'
  477          | expr . "?." "$f" '(' expr ')'
  478          | expr . '.' '.' "$f" '(' expr ')'
  479          | expr . '.' "?." "$f" '(' expr ')'
  480          | expr . "as" "$f" '(' expr ')'
  481          | expr . '?' "as" "$f" '(' expr ')'
  482          | expr . "is" "$f" '(' expr ')'

    "is"    shift, and go to state 603
    "as"    shift, and go to state 604
    "+="    shift, and go to state 917
    "-="    shift, and go to state 918
    "/="    shift, and go to state 919
    "*="    shift, and go to state 920
    "%="    shift, and go to state 921
    "&="    shift, and go to state 922
    "|="    shift, and go to state 923
    "^="    shift, and go to state 924
    "<<"    shift, and go to state 605
    ">>"    shift, and go to state 606
    "++"    shift, and go to state 607
    "--"    shift, and go to state 608
    "<="    shift, and go to state 609
    "<<="   shift, and go to state 925
    ">>="   shift, and go to state 926
    ">="    shift, and go to state 610
    "=="    shift, and go to state 611
    "!="    shift, and go to state 612
    "->"    shift, and go to state 613
    "<-"    shift, and go to state 927
    "??"    shift, and go to state 614
    "?."    shift, and go to state 615
    "?["    shift, and go to state 616
    "<|"    shift, and go to state 617
    "|>"    shift, and go to state 618
    ":="    shift, and go to state 928
    "<<<"   shift, and go to state 619
    ">>>"   shift, and go to state 620
    "<<<="  shift, and go to state 929
    ">>>="  shift, and go to state 930
    "&&"    shift, and go to state 621
    "||"    shift, and go to state 622
    "^^"    shift, and go to state 623
    "&&="   shift, and go to state 931
    "||="   shift, and go to state 932
    "^^="   shift, and go to state 933
    ".."    shift, and go to state 624
    '='     shift, and go to state 934
    '?'     shift, and go to state 625
    '|'     shift, and go to state 626
    '^'     shift, and go to state 627
    '&'     shift, and go to state 628
    '<'     shift, and go to state 629
    '>'     shift, and go to state 630
    '-'     shift, and go to state 631
    '+'     shift, and go to state 632
    '*'     shift, and go to state 633
    '/'     shift, and go to state 634
    '%'     shift, and go to state 635
    '.'     shift, and go to state 636
    '['     shift, and go to state 637

    ';'       reduce using rule 335 (expr_assign)
    $default  reduce using rule 64 (expression_if_one_liner)


State 717

  585 enum_declaration: optional_annotation_list "enum" $@39 optional_public_or_private_enum enum_name optional_enum_basic_type_declaration optional_commas '{' $@40 . enum_list optional_commas $@41 '}'

    "name"  shift, and go to state 935

    $default  reduce using rule 565 (enum_list)

    enum_expression  go to state 936
    enum_list        go to state 937


State 718

  597 optional_struct_variable_declaration_list: '{' struct_variable_declaration_list '}' .

    $default  reduce using rule 597 (optional_struct_variable_declaration_list)


State 719

  501 struct_variable_declaration_list: struct_variable_declaration_list optional_annotation_list . "def" optional_public_or_private_member_variable "abstract" optional_constant $@34 function_declaration_header ';'
  503                                 | struct_variable_declaration_list optional_annotation_list . "def" optional_public_or_private_member_variable optional_static_member_variable optional_override optional_constant $@35 function_declaration_header expression_block

    "def"  shift, and go to state 938


State 720

  499 struct_variable_declaration_list: struct_variable_declaration_list $@33 . structure_variable_declaration ';'

    '@'  shift, and go to state 214

    $default  reduce using rule 484 (optional_field_annotation)

    metadata_argument_list          go to state 215
    optional_field_annotation       go to state 939
    structure_variable_declaration  go to state 940


State 721

  534 let_variable_name_with_pos_list: "$i" '(' . expr ')'

    "struct"                          shift, and go to state 414
    "class"                           shift, and go to state 415
    "true"                            shift, and go to state 416
    "false"                           shift, and go to state 417
    "new"                             shift, and go to state 418
    "typeinfo"                        shift, and go to state 419
    "type"                            shift, and go to state 420
    "array"                           shift, and go to state 421
    "null"                            shift, and go to state 422
    "table"                           shift, and go to state 423
    "deref"                           shift, and go to state 424
    "cast"                            shift, and go to state 425
    "upcast"                          shift, and go to state 426
    "addr"                            shift, and go to state 427
    "reinterpret"                     shift, and go to state 428
    "unsafe"                          shift, and go to state 429
    "fixed_array"                     shift, and go to state 430
    "default"                         shift, and go to state 431
    "bool"                            shift, and go to state 228
    "void"                            shift, and go to state 229
    "string"                          shift, and go to state 230
    "int"                             shift, and go to state 232
    "int2"                            shift, and go to state 233
    "int3"                            shift, and go to state 234
    "int4"                            shift, and go to state 235
    "uint"                            shift, and go to state 236
    "bitfield"                        shift, and go to state 432
    "uint2"                           shift, and go to state 238
    "uint3"                           shift, and go to state 239
    "uint4"                           shift, and go to state 240
    "float"                           shift, and go to state 241
    "float2"                          shift, and go to state 242
    "float3"                          shift, and go to state 243
    "float4"                          shift, and go to state 244
    "range"                           shift, and go to state 245
    "urange"                          shift, and go to state 246
    "range64"                         shift, and go to state 247
    "urange64"                        shift, and go to state 248
    "int64"                           shift, and go to state 250
    "uint64"                          shift, and go to state 251
    "double"                          shift, and go to state 252
    "int8"                            shift, and go to state 255
    "uint8"                           shift, and go to state 256
    "int16"                           shift, and go to state 257
    "uint16"                          shift, and go to state 258
    "tuple"                           shift, and go to state 433
    "variant"                         shift, and go to state 434
    "generator"                       shift, and go to state 435
    "++"                              shift, and go to state 436
    "--"                              shift, and go to state 437
    "::"                              shift, and go to state 55
    "$$"                              shift, and go to state 438
    "$i"                              shift, and go to state 439
    "$v"                              shift, and go to state 440
    "$b"                              shift, and go to state 441
    "$a"                              shift, and go to state 442
    "$c"                              shift, and go to state 443
    "..."                             shift, and go to state 444
    "integer constant"                shift, and go to state 445
    "long integer constant"           shift, and go to state 446
    "unsigned integer constant"       shift, and go to state 447
    "unsigned long integer constant"  shift, and go to state 448
    "unsigned int8 constant"          shift, and go to state 449
    "floating point constant"         shift, and go to state 450
    "double constant"                 shift, and go to state 451
    "name"                            shift, and go to state 56
    "start of the string"             shift, and go to state 452
    '-'                               shift, and go to state 453
    '+'                               shift, and go to state 454
    '*'                               shift, and go to state 455
    '%'                               shift, and go to state 13
    '~'                               shift, and go to state 456
    '!'                               shift, and go to state 457
    '['                               shift, and go to state 458
    '('                               shift, and go to state 459
    '$'                               shift, and go to state 460
    '@'                               shift, and go to state 461
    '{'                               shift, and go to state 462

    string_builder          go to state 463
    expr_reader             go to state 464
    expr_call_pipe          go to state 465
    name_in_namespace       go to state 466
    expr_new                go to state 467
    expr_cast               go to state 468
    expr_type_decl          go to state 469
    expr_type_info          go to state 470
    block_or_lambda         go to state 471
    expr_full_block         go to state 472
    expr_numeric_const      go to state 473
    expr_named_call         go to state 474
    expr_method_call        go to state 475
    func_addr_expr          go to state 476
    expr_field              go to state 477
    expr_call               go to state 478
    expr                    go to state 941
    expr_generator          go to state 480
    expr_mtag               go to state 481
    basic_type_declaration  go to state 482
    make_decl               go to state 483
    make_struct_decl        go to state 484
    make_tuple_call         go to state 485
    make_dim_decl           go to state 486
    make_table_decl         go to state 487
    array_comprehension     go to state 488


State 722

  535 let_variable_name_with_pos_list: "name" "aka" . "name"

    "name"  shift, and go to state 942


State 723

  536 let_variable_name_with_pos_list: let_variable_name_with_pos_list ',' . "name"
  537                                | let_variable_name_with_pos_list ',' . "name" "aka" "name"

    "name"  shift, and go to state 943


State 724

  543 let_variable_declaration: let_variable_name_with_pos_list ':' . type_declaration_no_options ';'
  544                         | let_variable_name_with_pos_list ':' . type_declaration_no_options copy_or_move_or_clone expr ';'

    "type"       shift, and go to state 222
    "array"      shift, and go to state 223
    "table"      shift, and go to state 224
    "typedecl"   shift, and go to state 225
    "iterator"   shift, and go to state 226
    "smart_ptr"  shift, and go to state 227
    "bool"       shift, and go to state 228
    "void"       shift, and go to state 229
    "string"     shift, and go to state 230
    "auto"       shift, and go to state 231
    "int"        shift, and go to state 232
    "int2"       shift, and go to state 233
    "int3"       shift, and go to state 234
    "int4"       shift, and go to state 235
    "uint"       shift, and go to state 236
    "bitfield"   shift, and go to state 237
    "uint2"      shift, and go to state 238
    "uint3"      shift, and go to state 239
    "uint4"      shift, and go to state 240
    "float"      shift, and go to state 241
    "float2"     shift, and go to state 242
    "float3"     shift, and go to state 243
    "float4"     shift, and go to state 244
    "range"      shift, and go to state 245
    "urange"     shift, and go to state 246
    "range64"    shift, and go to state 247
    "urange64"   shift, and go to state 248
    "block"      shift, and go to state 249
    "int64"      shift, and go to state 250
    "uint64"     shift, and go to state 251
    "double"     shift, and go to state 252
    "function"   shift, and go to state 253
    "lambda"     shift, and go to state 254
    "int8"       shift, and go to state 255
    "uint8"      shift, and go to state 256
    "int16"      shift, and go to state 257
    "uint16"     shift, and go to state 258
    "tuple"      shift, and go to state 259
    "variant"    shift, and go to state 260
    "::"         shift, and go to state 55
    "$t"         shift, and go to state 261
    "name"       shift, and go to state 56
    '$'          shift, and go to state 262

    name_in_namespace                   go to state 263
    basic_type_declaration              go to state 264
    structure_type_declaration          go to state 265
    auto_type_declaration               go to state 266
    bitfield_type_declaration           go to state 267
    type_declaration_no_options         go to state 944
    type_declaration_no_options_no_dim  go to state 269


State 725

  545 let_variable_declaration: let_variable_name_with_pos_list optional_ref . copy_or_move_or_clone expr ';'

    "<-"  shift, and go to state 537
    ":="  shift, and go to state 538
    '='   shift, and go to state 539

    copy_or_move_or_clone  go to state 945


State 726

  546 global_let_variable_declaration: global_let_variable_name_with_pos_list ':' type_declaration_no_options ';' .

    $default  reduce using rule 546 (global_let_variable_declaration)


State 727

  547 global_let_variable_declaration: global_let_variable_name_with_pos_list ':' type_declaration_no_options copy_or_move_or_clone . expr ';'

    "struct"                          shift, and go to state 414
    "class"                           shift, and go to state 415
    "true"                            shift, and go to state 416
    "false"                           shift, and go to state 417
    "new"                             shift, and go to state 418
    "typeinfo"                        shift, and go to state 419
    "type"                            shift, and go to state 420
    "array"                           shift, and go to state 421
    "null"                            shift, and go to state 422
    "table"                           shift, and go to state 423
    "deref"                           shift, and go to state 424
    "cast"                            shift, and go to state 425
    "upcast"                          shift, and go to state 426
    "addr"                            shift, and go to state 427
    "reinterpret"                     shift, and go to state 428
    "unsafe"                          shift, and go to state 429
    "fixed_array"                     shift, and go to state 430
    "default"                         shift, and go to state 431
    "bool"                            shift, and go to state 228
    "void"                            shift, and go to state 229
    "string"                          shift, and go to state 230
    "int"                             shift, and go to state 232
    "int2"                            shift, and go to state 233
    "int3"                            shift, and go to state 234
    "int4"                            shift, and go to state 235
    "uint"                            shift, and go to state 236
    "bitfield"                        shift, and go to state 432
    "uint2"                           shift, and go to state 238
    "uint3"                           shift, and go to state 239
    "uint4"                           shift, and go to state 240
    "float"                           shift, and go to state 241
    "float2"                          shift, and go to state 242
    "float3"                          shift, and go to state 243
    "float4"                          shift, and go to state 244
    "range"                           shift, and go to state 245
    "urange"                          shift, and go to state 246
    "range64"                         shift, and go to state 247
    "urange64"                        shift, and go to state 248
    "int64"                           shift, and go to state 250
    "uint64"                          shift, and go to state 251
    "double"                          shift, and go to state 252
    "int8"                            shift, and go to state 255
    "uint8"                           shift, and go to state 256
    "int16"                           shift, and go to state 257
    "uint16"                          shift, and go to state 258
    "tuple"                           shift, and go to state 433
    "variant"                         shift, and go to state 434
    "generator"                       shift, and go to state 435
    "++"                              shift, and go to state 436
    "--"                              shift, and go to state 437
    "::"                              shift, and go to state 55
    "$$"                              shift, and go to state 438
    "$i"                              shift, and go to state 439
    "$v"                              shift, and go to state 440
    "$b"                              shift, and go to state 441
    "$a"                              shift, and go to state 442
    "$c"                              shift, and go to state 443
    "..."                             shift, and go to state 444
    "integer constant"                shift, and go to state 445
    "long integer constant"           shift, and go to state 446
    "unsigned integer constant"       shift, and go to state 447
    "unsigned long integer constant"  shift, and go to state 448
    "unsigned int8 constant"          shift, and go to state 449
    "floating point constant"         shift, and go to state 450
    "double constant"                 shift, and go to state 451
    "name"                            shift, and go to state 56
    "start of the string"             shift, and go to state 452
    '-'                               shift, and go to state 453
    '+'                               shift, and go to state 454
    '*'                               shift, and go to state 455
    '%'                               shift, and go to state 13
    '~'                               shift, and go to state 456
    '!'                               shift, and go to state 457
    '['                               shift, and go to state 458
    '('                               shift, and go to state 459
    '$'                               shift, and go to state 460
    '@'                               shift, and go to state 461
    '{'                               shift, and go to state 462

    string_builder          go to state 463
    expr_reader             go to state 464
    expr_call_pipe          go to state 465
    name_in_namespace       go to state 466
    expr_new                go to state 467
    expr_cast               go to state 468
    expr_type_decl          go to state 469
    expr_type_info          go to state 470
    block_or_lambda         go to state 471
    expr_full_block         go to state 472
    expr_numeric_const      go to state 473
    expr_named_call         go to state 474
    expr_method_call        go to state 475
    func_addr_expr          go to state 476
    expr_field              go to state 477
    expr_call               go to state 478
    expr                    go to state 946
    expr_generator          go to state 480
    expr_mtag               go to state 481
    basic_type_declaration  go to state 482
    make_decl               go to state 483
    make_struct_decl        go to state 484
    make_tuple_call         go to state 485
    make_dim_decl           go to state 486
    make_table_decl         go to state 487
    array_comprehension     go to state 488


State 728

  356 expr_method_call: expr . "->" "name" '(' ')'
  357                 | expr . "->" "name" '(' expr_list ')'
  367 expr_field: expr . '.' "name"
  368           | expr . '.' '.' "name"
  369           | expr . '.' "name" '(' ')'
  370           | expr . '.' "name" '(' expr_list ')'
  371           | expr . '.' basic_type_declaration '(' ')'
  372           | expr . '.' basic_type_declaration '(' expr_list ')'
  375           | expr . '.' $@25 error $@26
  397 expr: expr . "<<" expr
  398     | expr . ">>" expr
  399     | expr . "<<<" expr
  400     | expr . ">>>" expr
  401     | expr . '+' expr
  402     | expr . '-' expr
  403     | expr . '*' expr
  404     | expr . '/' expr
  405     | expr . '%' expr
  406     | expr . '<' expr
  407     | expr . '>' expr
  408     | expr . "==" expr
  409     | expr . "!=" expr
  410     | expr . "<=" expr
  411     | expr . ">=" expr
  412     | expr . '&' expr
  413     | expr . '|' expr
  414     | expr . '^' expr
  415     | expr . "&&" expr
  416     | expr . "||" expr
  417     | expr . "^^" expr
  418     | expr . ".." expr
  421     | expr . "++"
  422     | expr . "--"
  424     | expr . '[' expr ']'
  425     | expr . '.' '[' expr ']'
  426     | expr . "?[" expr ']'
  427     | expr . '.' "?[" expr ']'
  428     | expr . "?." "name"
  429     | expr . '.' "?." "name"
  436     | expr . "??" expr
  437     | expr . '?' expr ':' expr
  440     | expr . "is" "type" '<' $@27 type_declaration_no_options '>' $@28
  441     | expr . "is" basic_type_declaration
  442     | expr . "is" "name"
  443     | expr . "as" "name"
  446     | expr . "as" "type" '<' $@29 type_declaration '>' $@30
  447     | expr . "as" basic_type_declaration
  448     | expr . '?' "as" "name"
  451     | expr . '?' "as" "type" '<' $@31 type_declaration '>' $@32
  452     | expr . '?' "as" basic_type_declaration
  460     | expr . "<|" expr
  461     | expr . "|>" expr
  462     | expr . "|>" basic_type_declaration
  476 expr_mtag: expr . '.' "$f" '(' expr ')'
  477          | expr . "?." "$f" '(' expr ')'
  478          | expr . '.' '.' "$f" '(' expr ')'
  479          | expr . '.' "?." "$f" '(' expr ')'
  480          | expr . "as" "$f" '(' expr ')'
  481          | expr . '?' "as" "$f" '(' expr ')'
  482          | expr . "is" "$f" '(' expr ')'
  548 global_let_variable_declaration: global_let_variable_name_with_pos_list optional_ref copy_or_move_or_clone expr . ';'

    "is"   shift, and go to state 603
    "as"   shift, and go to state 604
    "<<"   shift, and go to state 605
    ">>"   shift, and go to state 606
    "++"   shift, and go to state 607
    "--"   shift, and go to state 608
    "<="   shift, and go to state 609
    ">="   shift, and go to state 610
    "=="   shift, and go to state 611
    "!="   shift, and go to state 612
    "->"   shift, and go to state 613
    "??"   shift, and go to state 614
    "?."   shift, and go to state 615
    "?["   shift, and go to state 616
    "<|"   shift, and go to state 617
    "|>"   shift, and go to state 618
    "<<<"  shift, and go to state 619
    ">>>"  shift, and go to state 620
    "&&"   shift, and go to state 621
    "||"   shift, and go to state 622
    "^^"   shift, and go to state 623
    ".."   shift, and go to state 624
    '?'    shift, and go to state 625
    '|'    shift, and go to state 626
    '^'    shift, and go to state 627
    '&'    shift, and go to state 628
    '<'    shift, and go to state 629
    '>'    shift, and go to state 630
    '-'    shift, and go to state 631
    '+'    shift, and go to state 632
    '*'    shift, and go to state 633
    '/'    shift, and go to state 634
    '%'    shift, and go to state 635
    '.'    shift, and go to state 636
    '['    shift, and go to state 637
    ';'    shift, and go to state 947


State 729

  669 type_declaration_no_options_no_dim: "type" '<' $@46 type_declaration '>' . $@47

    $default  reduce using rule 668 ($@47)

    $@47  go to state 948


State 730

  692 type_declaration_no_options_no_dim: "array" '<' $@51 type_declaration '>' . $@52

    $default  reduce using rule 691 ($@52)

    $@52  go to state 949


State 731

  695 type_declaration_no_options_no_dim: "table" '<' $@53 table_type_pair '>' . $@54

    $default  reduce using rule 694 ($@54)

    $@54  go to state 950


State 732

  653 c_or_s: ',' .

    $default  reduce using rule 653 (c_or_s)


State 733

  654 c_or_s: ';' .

    $default  reduce using rule 654 (c_or_s)


State 734

  656 table_type_pair: type_declaration c_or_s . type_declaration

    "type"       shift, and go to state 222
    "array"      shift, and go to state 223
    "table"      shift, and go to state 224
    "typedecl"   shift, and go to state 225
    "iterator"   shift, and go to state 226
    "smart_ptr"  shift, and go to state 227
    "bool"       shift, and go to state 228
    "void"       shift, and go to state 229
    "string"     shift, and go to state 230
    "auto"       shift, and go to state 231
    "int"        shift, and go to state 232
    "int2"       shift, and go to state 233
    "int3"       shift, and go to state 234
    "int4"       shift, and go to state 235
    "uint"       shift, and go to state 236
    "bitfield"   shift, and go to state 237
    "uint2"      shift, and go to state 238
    "uint3"      shift, and go to state 239
    "uint4"      shift, and go to state 240
    "float"      shift, and go to state 241
    "float2"     shift, and go to state 242
    "float3"     shift, and go to state 243
    "float4"     shift, and go to state 244
    "range"      shift, and go to state 245
    "urange"     shift, and go to state 246
    "range64"    shift, and go to state 247
    "urange64"   shift, and go to state 248
    "block"      shift, and go to state 249
    "int64"      shift, and go to state 250
    "uint64"     shift, and go to state 251
    "double"     shift, and go to state 252
    "function"   shift, and go to state 253
    "lambda"     shift, and go to state 254
    "int8"       shift, and go to state 255
    "uint8"      shift, and go to state 256
    "int16"      shift, and go to state 257
    "uint16"     shift, and go to state 258
    "tuple"      shift, and go to state 259
    "variant"    shift, and go to state 260
    "::"         shift, and go to state 55
    "$t"         shift, and go to state 261
    "name"       shift, and go to state 56
    '$'          shift, and go to state 262

    name_in_namespace                   go to state 263
    basic_type_declaration              go to state 264
    structure_type_declaration          go to state 265
    auto_type_declaration               go to state 266
    bitfield_type_declaration           go to state 267
    type_declaration_no_options         go to state 268
    type_declaration_no_options_no_dim  go to state 269
    type_declaration                    go to state 951


State 735

  769 make_struct_decl: "struct" '<' $@85 . type_declaration_no_options '>' $@86 '(' use_initializer optional_make_struct_dim_decl ')'

    "type"       shift, and go to state 222
    "array"      shift, and go to state 223
    "table"      shift, and go to state 224
    "typedecl"   shift, and go to state 225
    "iterator"   shift, and go to state 226
    "smart_ptr"  shift, and go to state 227
    "bool"       shift, and go to state 228
    "void"       shift, and go to state 229
    "string"     shift, and go to state 230
    "auto"       shift, and go to state 231
    "int"        shift, and go to state 232
    "int2"       shift, and go to state 233
    "int3"       shift, and go to state 234
    "int4"       shift, and go to state 235
    "uint"       shift, and go to state 236
    "bitfield"   shift, and go to state 237
    "uint2"      shift, and go to state 238
    "uint3"      shift, and go to state 239
    "uint4"      shift, and go to state 240
    "float"      shift, and go to state 241
    "float2"     shift, and go to state 242
    "float3"     shift, and go to state 243
    "float4"     shift, and go to state 244
    "range"      shift, and go to state 245
    "urange"     shift, and go to state 246
    "range64"    shift, and go to state 247
    "urange64"   shift, and go to state 248
    "block"      shift, and go to state 249
    "int64"      shift, and go to state 250
    "uint64"     shift, and go to state 251
    "double"     shift, and go to state 252
    "function"   shift, and go to state 253
    "lambda"     shift, and go to state 254
    "int8"       shift, and go to state 255
    "uint8"      shift, and go to state 256
    "int16"      shift, and go to state 257
    "uint16"     shift, and go to state 258
    "tuple"      shift, and go to state 259
    "variant"    shift, and go to state 260
    "::"         shift, and go to state 55
    "$t"         shift, and go to state 261
    "name"       shift, and go to state 56
    '$'          shift, and go to state 262

    name_in_namespace                   go to state 263
    basic_type_declaration              go to state 264
    structure_type_declaration          go to state 265
    auto_type_declaration               go to state 266
    bitfield_type_declaration           go to state 267
    type_declaration_no_options         go to state 952
    type_declaration_no_options_no_dim  go to state 269


State 736

  772 make_struct_decl: "class" '<' $@87 . type_declaration_no_options '>' $@88 '(' use_initializer optional_make_struct_dim_decl ')'

    "type"       shift, and go to state 222
    "array"      shift, and go to state 223
    "table"      shift, and go to state 224
    "typedecl"   shift, and go to state 225
    "iterator"   shift, and go to state 226
    "smart_ptr"  shift, and go to state 227
    "bool"       shift, and go to state 228
    "void"       shift, and go to state 229
    "string"     shift, and go to state 230
    "auto"       shift, and go to state 231
    "int"        shift, and go to state 232
    "int2"       shift, and go to state 233
    "int3"       shift, and go to state 234
    "int4"       shift, and go to state 235
    "uint"       shift, and go to state 236
    "bitfield"   shift, and go to state 237
    "uint2"      shift, and go to state 238
    "uint3"      shift, and go to state 239
    "uint4"      shift, and go to state 240
    "float"      shift, and go to state 241
    "float2"     shift, and go to state 242
    "float3"     shift, and go to state 243
    "float4"     shift, and go to state 244
    "range"      shift, and go to state 245
    "urange"     shift, and go to state 246
    "range64"    shift, and go to state 247
    "urange64"   shift, and go to state 248
    "block"      shift, and go to state 249
    "int64"      shift, and go to state 250
    "uint64"     shift, and go to state 251
    "double"     shift, and go to state 252
    "function"   shift, and go to state 253
    "lambda"     shift, and go to state 254
    "int8"       shift, and go to state 255
    "uint8"      shift, and go to state 256
    "int16"      shift, and go to state 257
    "uint16"     shift, and go to state 258
    "tuple"      shift, and go to state 259
    "variant"    shift, and go to state 260
    "::"         shift, and go to state 55
    "$t"         shift, and go to state 261
    "name"       shift, and go to state 56
    '$'          shift, and go to state 262

    name_in_namespace                   go to state 263
    basic_type_declaration              go to state 264
    structure_type_declaration          go to state 265
    auto_type_declaration               go to state 266
    bitfield_type_declaration           go to state 267
    type_declaration_no_options         go to state 953
    type_declaration_no_options_no_dim  go to state 269


State 737

  263 new_type_declaration: '<' $@11 . type_declaration '>' $@12

    "type"       shift, and go to state 222
    "array"      shift, and go to state 223
    "table"      shift, and go to state 224
    "typedecl"   shift, and go to state 225
    "iterator"   shift, and go to state 226
    "smart_ptr"  shift, and go to state 227
    "bool"       shift, and go to state 228
    "void"       shift, and go to state 229
    "string"     shift, and go to state 230
    "auto"       shift, and go to state 231
    "int"        shift, and go to state 232
    "int2"       shift, and go to state 233
    "int3"       shift, and go to state 234
    "int4"       shift, and go to state 235
    "uint"       shift, and go to state 236
    "bitfield"   shift, and go to state 237
    "uint2"      shift, and go to state 238
    "uint3"      shift, and go to state 239
    "uint4"      shift, and go to state 240
    "float"      shift, and go to state 241
    "float2"     shift, and go to state 242
    "float3"     shift, and go to state 243
    "float4"     shift, and go to state 244
    "range"      shift, and go to state 245
    "urange"     shift, and go to state 246
    "range64"    shift, and go to state 247
    "urange64"   shift, and go to state 248
    "block"      shift, and go to state 249
    "int64"      shift, and go to state 250
    "uint64"     shift, and go to state 251
    "double"     shift, and go to state 252
    "function"   shift, and go to state 253
    "lambda"     shift, and go to state 254
    "int8"       shift, and go to state 255
    "uint8"      shift, and go to state 256
    "int16"      shift, and go to state 257
    "uint16"     shift, and go to state 258
    "tuple"      shift, and go to state 259
    "variant"    shift, and go to state 260
    "::"         shift, and go to state 55
    "$t"         shift, and go to state 261
    "name"       shift, and go to state 56
    '$'          shift, and go to state 262

    name_in_namespace                   go to state 263
    basic_type_declaration              go to state 264
    structure_type_declaration          go to state 265
    auto_type_declaration               go to state 266
    bitfield_type_declaration           go to state 267
    type_declaration_no_options         go to state 268
    type_declaration_no_options_no_dim  go to state 269
    type_declaration                    go to state 954


State 738

  266 expr_new: "new" new_type_declaration '(' . use_initializer ')'
  267         | "new" new_type_declaration '(' . expr_list ')'
  268         | "new" new_type_declaration '(' . make_struct_single ')'
  269         | "new" new_type_declaration '(' . "uninitialized" make_struct_single ')'

    "struct"                          shift, and go to state 414
    "class"                           shift, and go to state 415
    "true"                            shift, and go to state 416
    "false"                           shift, and go to state 417
    "new"                             shift, and go to state 418
    "typeinfo"                        shift, and go to state 419
    "type"                            shift, and go to state 420
    "array"                           shift, and go to state 421
    "null"                            shift, and go to state 422
    "table"                           shift, and go to state 423
    "deref"                           shift, and go to state 424
    "cast"                            shift, and go to state 425
    "upcast"                          shift, and go to state 426
    "addr"                            shift, and go to state 427
    "reinterpret"                     shift, and go to state 428
    "unsafe"                          shift, and go to state 429
    "fixed_array"                     shift, and go to state 430
    "default"                         shift, and go to state 431
    "uninitialized"                   shift, and go to state 955
    "bool"                            shift, and go to state 228
    "void"                            shift, and go to state 229
    "string"                          shift, and go to state 230
    "int"                             shift, and go to state 232
    "int2"                            shift, and go to state 233
    "int3"                            shift, and go to state 234
    "int4"                            shift, and go to state 235
    "uint"                            shift, and go to state 236
    "bitfield"                        shift, and go to state 432
    "uint2"                           shift, and go to state 238
    "uint3"                           shift, and go to state 239
    "uint4"                           shift, and go to state 240
    "float"                           shift, and go to state 241
    "float2"                          shift, and go to state 242
    "float3"                          shift, and go to state 243
    "float4"                          shift, and go to state 244
    "range"                           shift, and go to state 245
    "urange"                          shift, and go to state 246
    "range64"                         shift, and go to state 247
    "urange64"                        shift, and go to state 248
    "int64"                           shift, and go to state 250
    "uint64"                          shift, and go to state 251
    "double"                          shift, and go to state 252
    "int8"                            shift, and go to state 255
    "uint8"                           shift, and go to state 256
    "int16"                           shift, and go to state 257
    "uint16"                          shift, and go to state 258
    "tuple"                           shift, and go to state 433
    "variant"                         shift, and go to state 434
    "generator"                       shift, and go to state 435
    "++"                              shift, and go to state 436
    "--"                              shift, and go to state 437
    "::"                              shift, and go to state 55
    "$$"                              shift, and go to state 438
    "$i"                              shift, and go to state 439
    "$v"                              shift, and go to state 440
    "$b"                              shift, and go to state 441
    "$a"                              shift, and go to state 442
    "$c"                              shift, and go to state 443
    "$f"                              shift, and go to state 786
    "..."                             shift, and go to state 444
    "integer constant"                shift, and go to state 445
    "long integer constant"           shift, and go to state 446
    "unsigned integer constant"       shift, and go to state 447
    "unsigned long integer constant"  shift, and go to state 448
    "unsigned int8 constant"          shift, and go to state 449
    "floating point constant"         shift, and go to state 450
    "double constant"                 shift, and go to state 451
    "name"                            shift, and go to state 787
    "start of the string"             shift, and go to state 452
    '-'                               shift, and go to state 453
    '+'                               shift, and go to state 454
    '*'                               shift, and go to state 455
    '%'                               shift, and go to state 13
    '~'                               shift, and go to state 456
    '!'                               shift, and go to state 457
    '['                               shift, and go to state 458
    '('                               shift, and go to state 459
    '$'                               shift, and go to state 460
    '@'                               shift, and go to state 461
    '{'                               shift, and go to state 462

    $default  reduce using rule 765 (use_initializer)

    string_builder          go to state 463
    expr_reader             go to state 464
    expr_call_pipe          go to state 465
    name_in_namespace       go to state 466
    expr_new                go to state 467
    expr_cast               go to state 468
    expr_type_decl          go to state 469
    expr_type_info          go to state 470
    expr_list               go to state 956
    block_or_lambda         go to state 471
    expr_full_block         go to state 472
    expr_numeric_const      go to state 473
    expr_named_call         go to state 474
    expr_method_call        go to state 475
    func_addr_expr          go to state 476
    expr_field              go to state 477
    expr_call               go to state 478
    expr                    go to state 590
    expr_generator          go to state 480
    expr_mtag               go to state 481
    basic_type_declaration  go to state 482
    make_decl               go to state 483
    make_struct_fields      go to state 791
    make_struct_single      go to state 957
    use_initializer         go to state 958
    make_struct_decl        go to state 484
    make_tuple_call         go to state 485
    make_dim_decl           go to state 486
    make_table_decl         go to state 487
    array_comprehension     go to state 488


State 739

  306 expr_type_info: "typeinfo" name_in_namespace '<' . "name" '>' '(' expr ')'
  307               | "typeinfo" name_in_namespace '<' . "name" c_or_s "name" '>' '(' expr ')'

    "name"  shift, and go to state 959


State 740

  305 expr_type_info: "typeinfo" name_in_namespace '(' . expr ')'

    "struct"                          shift, and go to state 414
    "class"                           shift, and go to state 415
    "true"                            shift, and go to state 416
    "false"                           shift, and go to state 417
    "new"                             shift, and go to state 418
    "typeinfo"                        shift, and go to state 419
    "type"                            shift, and go to state 420
    "array"                           shift, and go to state 421
    "null"                            shift, and go to state 422
    "table"                           shift, and go to state 423
    "deref"                           shift, and go to state 424
    "cast"                            shift, and go to state 425
    "upcast"                          shift, and go to state 426
    "addr"                            shift, and go to state 427
    "reinterpret"                     shift, and go to state 428
    "unsafe"                          shift, and go to state 429
    "fixed_array"                     shift, and go to state 430
    "default"                         shift, and go to state 431
    "bool"                            shift, and go to state 228
    "void"                            shift, and go to state 229
    "string"                          shift, and go to state 230
    "int"                             shift, and go to state 232
    "int2"                            shift, and go to state 233
    "int3"                            shift, and go to state 234
    "int4"                            shift, and go to state 235
    "uint"                            shift, and go to state 236
    "bitfield"                        shift, and go to state 432
    "uint2"                           shift, and go to state 238
    "uint3"                           shift, and go to state 239
    "uint4"                           shift, and go to state 240
    "float"                           shift, and go to state 241
    "float2"                          shift, and go to state 242
    "float3"                          shift, and go to state 243
    "float4"                          shift, and go to state 244
    "range"                           shift, and go to state 245
    "urange"                          shift, and go to state 246
    "range64"                         shift, and go to state 247
    "urange64"                        shift, and go to state 248
    "int64"                           shift, and go to state 250
    "uint64"                          shift, and go to state 251
    "double"                          shift, and go to state 252
    "int8"                            shift, and go to state 255
    "uint8"                           shift, and go to state 256
    "int16"                           shift, and go to state 257
    "uint16"                          shift, and go to state 258
    "tuple"                           shift, and go to state 433
    "variant"                         shift, and go to state 434
    "generator"                       shift, and go to state 435
    "++"                              shift, and go to state 436
    "--"                              shift, and go to state 437
    "::"                              shift, and go to state 55
    "$$"                              shift, and go to state 438
    "$i"                              shift, and go to state 439
    "$v"                              shift, and go to state 440
    "$b"                              shift, and go to state 441
    "$a"                              shift, and go to state 442
    "$c"                              shift, and go to state 443
    "..."                             shift, and go to state 444
    "integer constant"                shift, and go to state 445
    "long integer constant"           shift, and go to state 446
    "unsigned integer constant"       shift, and go to state 447
    "unsigned long integer constant"  shift, and go to state 448
    "unsigned int8 constant"          shift, and go to state 449
    "floating point constant"         shift, and go to state 450
    "double constant"                 shift, and go to state 451
    "name"                            shift, and go to state 56
    "start of the string"             shift, and go to state 452
    '-'                               shift, and go to state 453
    '+'                               shift, and go to state 454
    '*'                               shift, and go to state 455
    '%'                               shift, and go to state 13
    '~'                               shift, and go to state 456
    '!'                               shift, and go to state 457
    '['                               shift, and go to state 458
    '('                               shift, and go to state 459
    '$'                               shift, and go to state 460
    '@'                               shift, and go to state 461
    '{'                               shift, and go to state 462

    string_builder          go to state 463
    expr_reader             go to state 464
    expr_call_pipe          go to state 465
    name_in_namespace       go to state 466
    expr_new                go to state 467
    expr_cast               go to state 468
    expr_type_decl          go to state 469
    expr_type_info          go to state 470
    block_or_lambda         go to state 471
    expr_full_block         go to state 472
    expr_numeric_const      go to state 473
    expr_named_call         go to state 474
    expr_method_call        go to state 475
    func_addr_expr          go to state 476
    expr_field              go to state 477
    expr_call               go to state 478
    expr                    go to state 960
    expr_generator          go to state 480
    expr_mtag               go to state 481
    basic_type_declaration  go to state 482
    make_decl               go to state 483
    make_struct_decl        go to state 484
    make_tuple_call         go to state 485
    make_dim_decl           go to state 486
    make_table_decl         go to state 487
    array_comprehension     go to state 488


State 741

  304 expr_type_decl: "type" '<' $@19 . type_declaration '>' $@20

    "type"       shift, and go to state 222
    "array"      shift, and go to state 223
    "table"      shift, and go to state 224
    "typedecl"   shift, and go to state 225
    "iterator"   shift, and go to state 226
    "smart_ptr"  shift, and go to state 227
    "bool"       shift, and go to state 228
    "void"       shift, and go to state 229
    "string"     shift, and go to state 230
    "auto"       shift, and go to state 231
    "int"        shift, and go to state 232
    "int2"       shift, and go to state 233
    "int3"       shift, and go to state 234
    "int4"       shift, and go to state 235
    "uint"       shift, and go to state 236
    "bitfield"   shift, and go to state 237
    "uint2"      shift, and go to state 238
    "uint3"      shift, and go to state 239
    "uint4"      shift, and go to state 240
    "float"      shift, and go to state 241
    "float2"     shift, and go to state 242
    "float3"     shift, and go to state 243
    "float4"     shift, and go to state 244
    "range"      shift, and go to state 245
    "urange"     shift, and go to state 246
    "range64"    shift, and go to state 247
    "urange64"   shift, and go to state 248
    "block"      shift, and go to state 249
    "int64"      shift, and go to state 250
    "uint64"     shift, and go to state 251
    "double"     shift, and go to state 252
    "function"   shift, and go to state 253
    "lambda"     shift, and go to state 254
    "int8"       shift, and go to state 255
    "uint8"      shift, and go to state 256
    "int16"      shift, and go to state 257
    "uint16"     shift, and go to state 258
    "tuple"      shift, and go to state 259
    "variant"    shift, and go to state 260
    "::"         shift, and go to state 55
    "$t"         shift, and go to state 261
    "name"       shift, and go to state 56
    '$'          shift, and go to state 262

    name_in_namespace                   go to state 263
    basic_type_declaration              go to state 264
    structure_type_declaration          go to state 265
    auto_type_declaration               go to state 266
    bitfield_type_declaration           go to state 267
    type_declaration_no_options         go to state 268
    type_declaration_no_options_no_dim  go to state 269
    type_declaration                    go to state 961


State 742

  788 make_dim_decl: "array" "struct" '<' . $@95 type_declaration_no_options '>' $@96 '(' use_initializer optional_make_struct_dim_decl ')'

    $default  reduce using rule 786 ($@95)

    $@95  go to state 962


State 743

  791 make_dim_decl: "array" "tuple" '<' . $@97 type_declaration_no_options '>' $@98 '(' use_initializer optional_make_struct_dim_decl ')'

    $default  reduce using rule 789 ($@97)

    $@97  go to state 963


State 744

  794 make_dim_decl: "array" "variant" '<' . $@99 type_declaration_no_options '>' $@100 '(' make_variant_dim ')'

    $default  reduce using rule 792 ($@99)

    $@99  go to state 964


State 745

  798 make_dim_decl: "array" '<' $@101 . type_declaration_no_options '>' $@102 '(' optional_expr_list ')'

    "type"       shift, and go to state 222
    "array"      shift, and go to state 223
    "table"      shift, and go to state 224
    "typedecl"   shift, and go to state 225
    "iterator"   shift, and go to state 226
    "smart_ptr"  shift, and go to state 227
    "bool"       shift, and go to state 228
    "void"       shift, and go to state 229
    "string"     shift, and go to state 230
    "auto"       shift, and go to state 231
    "int"        shift, and go to state 232
    "int2"       shift, and go to state 233
    "int3"       shift, and go to state 234
    "int4"       shift, and go to state 235
    "uint"       shift, and go to state 236
    "bitfield"   shift, and go to state 237
    "uint2"      shift, and go to state 238
    "uint3"      shift, and go to state 239
    "uint4"      shift, and go to state 240
    "float"      shift, and go to state 241
    "float2"     shift, and go to state 242
    "float3"     shift, and go to state 243
    "float4"     shift, and go to state 244
    "range"      shift, and go to state 245
    "urange"     shift, and go to state 246
    "range64"    shift, and go to state 247
    "urange64"   shift, and go to state 248
    "block"      shift, and go to state 249
    "int64"      shift, and go to state 250
    "uint64"     shift, and go to state 251
    "double"     shift, and go to state 252
    "function"   shift, and go to state 253
    "lambda"     shift, and go to state 254
    "int8"       shift, and go to state 255
    "uint8"      shift, and go to state 256
    "int16"      shift, and go to state 257
    "uint16"     shift, and go to state 258
    "tuple"      shift, and go to state 259
    "variant"    shift, and go to state 260
    "::"         shift, and go to state 55
    "$t"         shift, and go to state 261
    "name"       shift, and go to state 56
    '$'          shift, and go to state 262

    name_in_namespace                   go to state 263
    basic_type_declaration              go to state 264
    structure_type_declaration          go to state 265
    auto_type_declaration               go to state 266
    bitfield_type_declaration           go to state 267
    type_declaration_no_options         go to state 965
    type_declaration_no_options_no_dim  go to state 269


State 746

  309 expr_list: expr_list . ',' expr
  795 make_dim_decl: "array" '(' expr_list . optional_comma ')'

    ','  shift, and go to state 773

    $default  reduce using rule 811 (optional_comma)

    optional_comma  go to state 966


State 747

  807 make_table_decl: "table" '<' type_declaration_no_options . '>' '(' optional_expr_map_tuple_list ')'
  808                | "table" '<' type_declaration_no_options . c_or_s type_declaration_no_options '>' '(' optional_expr_map_tuple_list ')'

    ','  shift, and go to state 732
    '>'  shift, and go to state 967
    ';'  shift, and go to state 733

    c_or_s  go to state 968


State 748

  804 expr_map_tuple_list: expr_map_tuple_list . ',' make_map_tuple
  806 make_table_decl: "table" '(' expr_map_tuple_list . optional_comma ')'

    ','  shift, and go to state 783

    $default  reduce using rule 811 (optional_comma)

    optional_comma  go to state 969


State 749

  356 expr_method_call: expr . "->" "name" '(' ')'
  357                 | expr . "->" "name" '(' expr_list ')'
  367 expr_field: expr . '.' "name"
  368           | expr . '.' '.' "name"
  369           | expr . '.' "name" '(' ')'
  370           | expr . '.' "name" '(' expr_list ')'
  371           | expr . '.' basic_type_declaration '(' ')'
  372           | expr . '.' basic_type_declaration '(' expr_list ')'
  375           | expr . '.' $@25 error $@26
  397 expr: expr . "<<" expr
  398     | expr . ">>" expr
  399     | expr . "<<<" expr
  400     | expr . ">>>" expr
  401     | expr . '+' expr
  402     | expr . '-' expr
  403     | expr . '*' expr
  404     | expr . '/' expr
  405     | expr . '%' expr
  406     | expr . '<' expr
  407     | expr . '>' expr
  408     | expr . "==" expr
  409     | expr . "!=" expr
  410     | expr . "<=" expr
  411     | expr . ">=" expr
  412     | expr . '&' expr
  413     | expr . '|' expr
  414     | expr . '^' expr
  415     | expr . "&&" expr
  416     | expr . "||" expr
  417     | expr . "^^" expr
  418     | expr . ".." expr
  421     | expr . "++"
  422     | expr . "--"
  424     | expr . '[' expr ']'
  425     | expr . '.' '[' expr ']'
  426     | expr . "?[" expr ']'
  427     | expr . '.' "?[" expr ']'
  428     | expr . "?." "name"
  429     | expr . '.' "?." "name"
  433     | "deref" '(' expr . ')'
  436     | expr . "??" expr
  437     | expr . '?' expr ':' expr
  440     | expr . "is" "type" '<' $@27 type_declaration_no_options '>' $@28
  441     | expr . "is" basic_type_declaration
  442     | expr . "is" "name"
  443     | expr . "as" "name"
  446     | expr . "as" "type" '<' $@29 type_declaration '>' $@30
  447     | expr . "as" basic_type_declaration
  448     | expr . '?' "as" "name"
  451     | expr . '?' "as" "type" '<' $@31 type_declaration '>' $@32
  452     | expr . '?' "as" basic_type_declaration
  460     | expr . "<|" expr
  461     | expr . "|>" expr
  462     | expr . "|>" basic_type_declaration
  476 expr_mtag: expr . '.' "$f" '(' expr ')'
  477          | expr . "?." "$f" '(' expr ')'
  478          | expr . '.' '.' "$f" '(' expr ')'
  479          | expr . '.' "?." "$f" '(' expr ')'
  480          | expr . "as" "$f" '(' expr ')'
  481          | expr . '?' "as" "$f" '(' expr ')'
  482          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 603
    "as"   shift, and go to state 604
    "<<"   shift, and go to state 605
    ">>"   shift, and go to state 606
    "++"   shift, and go to state 607
    "--"   shift, and go to state 608
    "<="   shift, and go to state 609
    ">="   shift, and go to state 610
    "=="   shift, and go to state 611
    "!="   shift, and go to state 612
    "->"   shift, and go to state 613
    "??"   shift, and go to state 614
    "?."   shift, and go to state 615
    "?["   shift, and go to state 616
    "<|"   shift, and go to state 617
    "|>"   shift, and go to state 618
    "<<<"  shift, and go to state 619
    ">>>"  shift, and go to state 620
    "&&"   shift, and go to state 621
    "||"   shift, and go to state 622
    "^^"   shift, and go to state 623
    ".."   shift, and go to state 624
    '?'    shift, and go to state 625
    '|'    shift, and go to state 626
    '^'    shift, and go to state 627
    '&'    shift, and go to state 628
    '<'    shift, and go to state 629
    '>'    shift, and go to state 630
    '-'    shift, and go to state 631
    '+'    shift, and go to state 632
    '*'    shift, and go to state 633
    '/'    shift, and go to state 634
    '%'    shift, and go to state 635
    '.'    shift, and go to state 636
    '['    shift, and go to state 637
    ')'    shift, and go to state 970


State 750

  295 expr_cast: "cast" '<' $@13 . type_declaration_no_options '>' $@14 expr

    "type"       shift, and go to state 222
    "array"      shift, and go to state 223
    "table"      shift, and go to state 224
    "typedecl"   shift, and go to state 225
    "iterator"   shift, and go to state 226
    "smart_ptr"  shift, and go to state 227
    "bool"       shift, and go to state 228
    "void"       shift, and go to state 229
    "string"     shift, and go to state 230
    "auto"       shift, and go to state 231
    "int"        shift, and go to state 232
    "int2"       shift, and go to state 233
    "int3"       shift, and go to state 234
    "int4"       shift, and go to state 235
    "uint"       shift, and go to state 236
    "bitfield"   shift, and go to state 237
    "uint2"      shift, and go to state 238
    "uint3"      shift, and go to state 239
    "uint4"      shift, and go to state 240
    "float"      shift, and go to state 241
    "float2"     shift, and go to state 242
    "float3"     shift, and go to state 243
    "float4"     shift, and go to state 244
    "range"      shift, and go to state 245
    "urange"     shift, and go to state 246
    "range64"    shift, and go to state 247
    "urange64"   shift, and go to state 248
    "block"      shift, and go to state 249
    "int64"      shift, and go to state 250
    "uint64"     shift, and go to state 251
    "double"     shift, and go to state 252
    "function"   shift, and go to state 253
    "lambda"     shift, and go to state 254
    "int8"       shift, and go to state 255
    "uint8"      shift, and go to state 256
    "int16"      shift, and go to state 257
    "uint16"     shift, and go to state 258
    "tuple"      shift, and go to state 259
    "variant"    shift, and go to state 260
    "::"         shift, and go to state 55
    "$t"         shift, and go to state 261
    "name"       shift, and go to state 56
    '$'          shift, and go to state 262

    name_in_namespace                   go to state 263
    basic_type_declaration              go to state 264
    structure_type_declaration          go to state 265
    auto_type_declaration               go to state 266
    bitfield_type_declaration           go to state 267
    type_declaration_no_options         go to state 971
    type_declaration_no_options_no_dim  go to state 269


State 751

  298 expr_cast: "upcast" '<' $@15 . type_declaration_no_options '>' $@16 expr

    "type"       shift, and go to state 222
    "array"      shift, and go to state 223
    "table"      shift, and go to state 224
    "typedecl"   shift, and go to state 225
    "iterator"   shift, and go to state 226
    "smart_ptr"  shift, and go to state 227
    "bool"       shift, and go to state 228
    "void"       shift, and go to state 229
    "string"     shift, and go to state 230
    "auto"       shift, and go to state 231
    "int"        shift, and go to state 232
    "int2"       shift, and go to state 233
    "int3"       shift, and go to state 234
    "int4"       shift, and go to state 235
    "uint"       shift, and go to state 236
    "bitfield"   shift, and go to state 237
    "uint2"      shift, and go to state 238
    "uint3"      shift, and go to state 239
    "uint4"      shift, and go to state 240
    "float"      shift, and go to state 241
    "float2"     shift, and go to state 242
    "float3"     shift, and go to state 243
    "float4"     shift, and go to state 244
    "range"      shift, and go to state 245
    "urange"     shift, and go to state 246
    "range64"    shift, and go to state 247
    "urange64"   shift, and go to state 248
    "block"      shift, and go to state 249
    "int64"      shift, and go to state 250
    "uint64"     shift, and go to state 251
    "double"     shift, and go to state 252
    "function"   shift, and go to state 253
    "lambda"     shift, and go to state 254
    "int8"       shift, and go to state 255
    "uint8"      shift, and go to state 256
    "int16"      shift, and go to state 257
    "uint16"     shift, and go to state 258
    "tuple"      shift, and go to state 259
    "variant"    shift, and go to state 260
    "::"         shift, and go to state 55
    "$t"         shift, and go to state 261
    "name"       shift, and go to state 56
    '$'          shift, and go to state 262

    name_in_namespace                   go to state 263
    basic_type_declaration              go to state 264
    structure_type_declaration          go to state 265
    auto_type_declaration               go to state 266
    bitfield_type_declaration           go to state 267
    type_declaration_no_options         go to state 972
    type_declaration_no_options_no_dim  go to state 269


State 752

  356 expr_method_call: expr . "->" "name" '(' ')'
  357                 | expr . "->" "name" '(' expr_list ')'
  367 expr_field: expr . '.' "name"
  368           | expr . '.' '.' "name"
  369           | expr . '.' "name" '(' ')'
  370           | expr . '.' "name" '(' expr_list ')'
  371           | expr . '.' basic_type_declaration '(' ')'
  372           | expr . '.' basic_type_declaration '(' expr_list ')'
  375           | expr . '.' $@25 error $@26
  397 expr: expr . "<<" expr
  398     | expr . ">>" expr
  399     | expr . "<<<" expr
  400     | expr . ">>>" expr
  401     | expr . '+' expr
  402     | expr . '-' expr
  403     | expr . '*' expr
  404     | expr . '/' expr
  405     | expr . '%' expr
  406     | expr . '<' expr
  407     | expr . '>' expr
  408     | expr . "==" expr
  409     | expr . "!=" expr
  410     | expr . "<=" expr
  411     | expr . ">=" expr
  412     | expr . '&' expr
  413     | expr . '|' expr
  414     | expr . '^' expr
  415     | expr . "&&" expr
  416     | expr . "||" expr
  417     | expr . "^^" expr
  418     | expr . ".." expr
  421     | expr . "++"
  422     | expr . "--"
  424     | expr . '[' expr ']'
  425     | expr . '.' '[' expr ']'
  426     | expr . "?[" expr ']'
  427     | expr . '.' "?[" expr ']'
  428     | expr . "?." "name"
  429     | expr . '.' "?." "name"
  434     | "addr" '(' expr . ')'
  436     | expr . "??" expr
  437     | expr . '?' expr ':' expr
  440     | expr . "is" "type" '<' $@27 type_declaration_no_options '>' $@28
  441     | expr . "is" basic_type_declaration
  442     | expr . "is" "name"
  443     | expr . "as" "name"
  446     | expr . "as" "type" '<' $@29 type_declaration '>' $@30
  447     | expr . "as" basic_type_declaration
  448     | expr . '?' "as" "name"
  451     | expr . '?' "as" "type" '<' $@31 type_declaration '>' $@32
  452     | expr . '?' "as" basic_type_declaration
  460     | expr . "<|" expr
  461     | expr . "|>" expr
  462     | expr . "|>" basic_type_declaration
  476 expr_mtag: expr . '.' "$f" '(' expr ')'
  477          | expr . "?." "$f" '(' expr ')'
  478          | expr . '.' '.' "$f" '(' expr ')'
  479          | expr . '.' "?." "$f" '(' expr ')'
  480          | expr . "as" "$f" '(' expr ')'
  481          | expr . '?' "as" "$f" '(' expr ')'
  482          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 603
    "as"   shift, and go to state 604
    "<<"   shift, and go to state 605
    ">>"   shift, and go to state 606
    "++"   shift, and go to state 607
    "--"   shift, and go to state 608
    "<="   shift, and go to state 609
    ">="   shift, and go to state 610
    "=="   shift, and go to state 611
    "!="   shift, and go to state 612
    "->"   shift, and go to state 613
    "??"   shift, and go to state 614
    "?."   shift, and go to state 615
    "?["   shift, and go to state 616
    "<|"   shift, and go to state 617
    "|>"   shift, and go to state 618
    "<<<"  shift, and go to state 619
    ">>>"  shift, and go to state 620
    "&&"   shift, and go to state 621
    "||"   shift, and go to state 622
    "^^"   shift, and go to state 623
    ".."   shift, and go to state 624
    '?'    shift, and go to state 625
    '|'    shift, and go to state 626
    '^'    shift, and go to state 627
    '&'    shift, and go to state 628
    '<'    shift, and go to state 629
    '>'    shift, and go to state 630
    '-'    shift, and go to state 631
    '+'    shift, and go to state 632
    '*'    shift, and go to state 633
    '/'    shift, and go to state 634
    '%'    shift, and go to state 635
    '.'    shift, and go to state 636
    '['    shift, and go to state 637
    ')'    shift, and go to state 973


State 753

  301 expr_cast: "reinterpret" '<' $@17 . type_declaration_no_options '>' $@18 expr

    "type"       shift, and go to state 222
    "array"      shift, and go to state 223
    "table"      shift, and go to state 224
    "typedecl"   shift, and go to state 225
    "iterator"   shift, and go to state 226
    "smart_ptr"  shift, and go to state 227
    "bool"       shift, and go to state 228
    "void"       shift, and go to state 229
    "string"     shift, and go to state 230
    "auto"       shift, and go to state 231
    "int"        shift, and go to state 232
    "int2"       shift, and go to state 233
    "int3"       shift, and go to state 234
    "int4"       shift, and go to state 235
    "uint"       shift, and go to state 236
    "bitfield"   shift, and go to state 237
    "uint2"      shift, and go to state 238
    "uint3"      shift, and go to state 239
    "uint4"      shift, and go to state 240
    "float"      shift, and go to state 241
    "float2"     shift, and go to state 242
    "float3"     shift, and go to state 243
    "float4"     shift, and go to state 244
    "range"      shift, and go to state 245
    "urange"     shift, and go to state 246
    "range64"    shift, and go to state 247
    "urange64"   shift, and go to state 248
    "block"      shift, and go to state 249
    "int64"      shift, and go to state 250
    "uint64"     shift, and go to state 251
    "double"     shift, and go to state 252
    "function"   shift, and go to state 253
    "lambda"     shift, and go to state 254
    "int8"       shift, and go to state 255
    "uint8"      shift, and go to state 256
    "int16"      shift, and go to state 257
    "uint16"     shift, and go to state 258
    "tuple"      shift, and go to state 259
    "variant"    shift, and go to state 260
    "::"         shift, and go to state 55
    "$t"         shift, and go to state 261
    "name"       shift, and go to state 56
    '$'          shift, and go to state 262

    name_in_namespace                   go to state 263
    basic_type_declaration              go to state 264
    structure_type_declaration          go to state 265
    auto_type_declaration               go to state 266
    bitfield_type_declaration           go to state 267
    type_declaration_no_options         go to state 974
    type_declaration_no_options_no_dim  go to state 269


State 754

  356 expr_method_call: expr . "->" "name" '(' ')'
  357                 | expr . "->" "name" '(' expr_list ')'
  367 expr_field: expr . '.' "name"
  368           | expr . '.' '.' "name"
  369           | expr . '.' "name" '(' ')'
  370           | expr . '.' "name" '(' expr_list ')'
  371           | expr . '.' basic_type_declaration '(' ')'
  372           | expr . '.' basic_type_declaration '(' expr_list ')'
  375           | expr . '.' $@25 error $@26
  397 expr: expr . "<<" expr
  398     | expr . ">>" expr
  399     | expr . "<<<" expr
  400     | expr . ">>>" expr
  401     | expr . '+' expr
  402     | expr . '-' expr
  403     | expr . '*' expr
  404     | expr . '/' expr
  405     | expr . '%' expr
  406     | expr . '<' expr
  407     | expr . '>' expr
  408     | expr . "==" expr
  409     | expr . "!=" expr
  410     | expr . "<=" expr
  411     | expr . ">=" expr
  412     | expr . '&' expr
  413     | expr . '|' expr
  414     | expr . '^' expr
  415     | expr . "&&" expr
  416     | expr . "||" expr
  417     | expr . "^^" expr
  418     | expr . ".." expr
  421     | expr . "++"
  422     | expr . "--"
  424     | expr . '[' expr ']'
  425     | expr . '.' '[' expr ']'
  426     | expr . "?[" expr ']'
  427     | expr . '.' "?[" expr ']'
  428     | expr . "?." "name"
  429     | expr . '.' "?." "name"
  436     | expr . "??" expr
  437     | expr . '?' expr ':' expr
  440     | expr . "is" "type" '<' $@27 type_declaration_no_options '>' $@28
  441     | expr . "is" basic_type_declaration
  442     | expr . "is" "name"
  443     | expr . "as" "name"
  446     | expr . "as" "type" '<' $@29 type_declaration '>' $@30
  447     | expr . "as" basic_type_declaration
  448     | expr . '?' "as" "name"
  451     | expr . '?' "as" "type" '<' $@31 type_declaration '>' $@32
  452     | expr . '?' "as" basic_type_declaration
  460     | expr . "<|" expr
  461     | expr . "|>" expr
  462     | expr . "|>" basic_type_declaration
  464     | "unsafe" '(' expr . ')'
  476 expr_mtag: expr . '.' "$f" '(' expr ')'
  477          | expr . "?." "$f" '(' expr ')'
  478          | expr . '.' '.' "$f" '(' expr ')'
  479          | expr . '.' "?." "$f" '(' expr ')'
  480          | expr . "as" "$f" '(' expr ')'
  481          | expr . '?' "as" "$f" '(' expr ')'
  482          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 603
    "as"   shift, and go to state 604
    "<<"   shift, and go to state 605
    ">>"   shift, and go to state 606
    "++"   shift, and go to state 607
    "--"   shift, and go to state 608
    "<="   shift, and go to state 609
    ">="   shift, and go to state 610
    "=="   shift, and go to state 611
    "!="   shift, and go to state 612
    "->"   shift, and go to state 613
    "??"   shift, and go to state 614
    "?."   shift, and go to state 615
    "?["   shift, and go to state 616
    "<|"   shift, and go to state 617
    "|>"   shift, and go to state 618
    "<<<"  shift, and go to state 619
    ">>>"  shift, and go to state 620
    "&&"   shift, and go to state 621
    "||"   shift, and go to state 622
    "^^"   shift, and go to state 623
    ".."   shift, and go to state 624
    '?'    shift, and go to state 625
    '|'    shift, and go to state 626
    '^'    shift, and go to state 627
    '&'    shift, and go to state 628
    '<'    shift, and go to state 629
    '>'    shift, and go to state 630
    '-'    shift, and go to state 631
    '+'    shift, and go to state 632
    '*'    shift, and go to state 633
    '/'    shift, and go to state 634
    '%'    shift, and go to state 635
    '.'    shift, and go to state 636
    '['    shift, and go to state 637
    ')'    shift, and go to state 975


State 755

  802 make_dim_decl: "fixed_array" '<' $@103 . type_declaration_no_options '>' $@104 '(' expr_list optional_comma ')'

    "type"       shift, and go to state 222
    "array"      shift, and go to state 223
    "table"      shift, and go to state 224
    "typedecl"   shift, and go to state 225
    "iterator"   shift, and go to state 226
    "smart_ptr"  shift, and go to state 227
    "bool"       shift, and go to state 228
    "void"       shift, and go to state 229
    "string"     shift, and go to state 230
    "auto"       shift, and go to state 231
    "int"        shift, and go to state 232
    "int2"       shift, and go to state 233
    "int3"       shift, and go to state 234
    "int4"       shift, and go to state 235
    "uint"       shift, and go to state 236
    "bitfield"   shift, and go to state 237
    "uint2"      shift, and go to state 238
    "uint3"      shift, and go to state 239
    "uint4"      shift, and go to state 240
    "float"      shift, and go to state 241
    "float2"     shift, and go to state 242
    "float3"     shift, and go to state 243
    "float4"     shift, and go to state 244
    "range"      shift, and go to state 245
    "urange"     shift, and go to state 246
    "range64"    shift, and go to state 247
    "urange64"   shift, and go to state 248
    "block"      shift, and go to state 249
    "int64"      shift, and go to state 250
    "uint64"     shift, and go to state 251
    "double"     shift, and go to state 252
    "function"   shift, and go to state 253
    "lambda"     shift, and go to state 254
    "int8"       shift, and go to state 255
    "uint8"      shift, and go to state 256
    "int16"      shift, and go to state 257
    "uint16"     shift, and go to state 258
    "tuple"      shift, and go to state 259
    "variant"    shift, and go to state 260
    "::"         shift, and go to state 55
    "$t"         shift, and go to state 261
    "name"       shift, and go to state 56
    '$'          shift, and go to state 262

    name_in_namespace                   go to state 263
    basic_type_declaration              go to state 264
    structure_type_declaration          go to state 265
    auto_type_declaration               go to state 266
    bitfield_type_declaration           go to state 267
    type_declaration_no_options         go to state 976
    type_declaration_no_options_no_dim  go to state 269


State 756

  309 expr_list: expr_list . ',' expr
  799 make_dim_decl: "fixed_array" '(' expr_list . optional_comma ')'

    ','  shift, and go to state 773

    $default  reduce using rule 811 (optional_comma)

    optional_comma  go to state 977


State 757

  778 make_struct_decl: "default" '<' $@91 . type_declaration_no_options '>' $@92 use_initializer

    "type"       shift, and go to state 222
    "array"      shift, and go to state 223
    "table"      shift, and go to state 224
    "typedecl"   shift, and go to state 225
    "iterator"   shift, and go to state 226
    "smart_ptr"  shift, and go to state 227
    "bool"       shift, and go to state 228
    "void"       shift, and go to state 229
    "string"     shift, and go to state 230
    "auto"       shift, and go to state 231
    "int"        shift, and go to state 232
    "int2"       shift, and go to state 233
    "int3"       shift, and go to state 234
    "int4"       shift, and go to state 235
    "uint"       shift, and go to state 236
    "bitfield"   shift, and go to state 237
    "uint2"      shift, and go to state 238
    "uint3"      shift, and go to state 239
    "uint4"      shift, and go to state 240
    "float"      shift, and go to state 241
    "float2"     shift, and go to state 242
    "float3"     shift, and go to state 243
    "float4"     shift, and go to state 244
    "range"      shift, and go to state 245
    "urange"     shift, and go to state 246
    "range64"    shift, and go to state 247
    "urange64"   shift, and go to state 248
    "block"      shift, and go to state 249
    "int64"      shift, and go to state 250
    "uint64"     shift, and go to state 251
    "double"     shift, and go to state 252
    "function"   shift, and go to state 253
    "lambda"     shift, and go to state 254
    "int8"       shift, and go to state 255
    "uint8"      shift, and go to state 256
    "int16"      shift, and go to state 257
    "uint16"     shift, and go to state 258
    "tuple"      shift, and go to state 259
    "variant"    shift, and go to state 260
    "::"         shift, and go to state 55
    "$t"         shift, and go to state 261
    "name"       shift, and go to state 56
    '$'          shift, and go to state 262

    name_in_namespace                   go to state 263
    basic_type_declaration              go to state 264
    structure_type_declaration          go to state 265
    auto_type_declaration               go to state 266
    bitfield_type_declaration           go to state 267
    type_declaration_no_options         go to state 978
    type_declaration_no_options_no_dim  go to state 269


State 758

  784 make_tuple_call: "tuple" '<' $@93 . type_declaration_no_options '>' $@94 '(' use_initializer optional_make_struct_dim_decl ')'

    "type"       shift, and go to state 222
    "array"      shift, and go to state 223
    "table"      shift, and go to state 224
    "typedecl"   shift, and go to state 225
    "iterator"   shift, and go to state 226
    "smart_ptr"  shift, and go to state 227
    "bool"       shift, and go to state 228
    "void"       shift, and go to state 229
    "string"     shift, and go to state 230
    "auto"       shift, and go to state 231
    "int"        shift, and go to state 232
    "int2"       shift, and go to state 233
    "int3"       shift, and go to state 234
    "int4"       shift, and go to state 235
    "uint"       shift, and go to state 236
    "bitfield"   shift, and go to state 237
    "uint2"      shift, and go to state 238
    "uint3"      shift, and go to state 239
    "uint4"      shift, and go to state 240
    "float"      shift, and go to state 241
    "float2"     shift, and go to state 242
    "float3"     shift, and go to state 243
    "float4"     shift, and go to state 244
    "range"      shift, and go to state 245
    "urange"     shift, and go to state 246
    "range64"    shift, and go to state 247
    "urange64"   shift, and go to state 248
    "block"      shift, and go to state 249
    "int64"      shift, and go to state 250
    "uint64"     shift, and go to state 251
    "double"     shift, and go to state 252
    "function"   shift, and go to state 253
    "lambda"     shift, and go to state 254
    "int8"       shift, and go to state 255
    "uint8"      shift, and go to state 256
    "int16"      shift, and go to state 257
    "uint16"     shift, and go to state 258
    "tuple"      shift, and go to state 259
    "variant"    shift, and go to state 260
    "::"         shift, and go to state 55
    "$t"         shift, and go to state 261
    "name"       shift, and go to state 56
    '$'          shift, and go to state 262

    name_in_namespace                   go to state 263
    basic_type_declaration              go to state 264
    structure_type_declaration          go to state 265
    auto_type_declaration               go to state 266
    bitfield_type_declaration           go to state 267
    type_declaration_no_options         go to state 979
    type_declaration_no_options_no_dim  go to state 269


State 759

  309 expr_list: expr_list . ',' expr
  781 make_tuple_call: "tuple" '(' expr_list . optional_comma ')'

    ','  shift, and go to state 773

    $default  reduce using rule 811 (optional_comma)

    optional_comma  go to state 980


State 760

  775 make_struct_decl: "variant" '<' $@89 . type_declaration_no_options '>' $@90 '(' make_variant_dim ')'

    "type"       shift, and go to state 222
    "array"      shift, and go to state 223
    "table"      shift, and go to state 224
    "typedecl"   shift, and go to state 225
    "iterator"   shift, and go to state 226
    "smart_ptr"  shift, and go to state 227
    "bool"       shift, and go to state 228
    "void"       shift, and go to state 229
    "string"     shift, and go to state 230
    "auto"       shift, and go to state 231
    "int"        shift, and go to state 232
    "int2"       shift, and go to state 233
    "int3"       shift, and go to state 234
    "int4"       shift, and go to state 235
    "uint"       shift, and go to state 236
    "bitfield"   shift, and go to state 237
    "uint2"      shift, and go to state 238
    "uint3"      shift, and go to state 239
    "uint4"      shift, and go to state 240
    "float"      shift, and go to state 241
    "float2"     shift, and go to state 242
    "float3"     shift, and go to state 243
    "float4"     shift, and go to state 244
    "range"      shift, and go to state 245
    "urange"     shift, and go to state 246
    "range64"    shift, and go to state 247
    "urange64"   shift, and go to state 248
    "block"      shift, and go to state 249
    "int64"      shift, and go to state 250
    "uint64"     shift, and go to state 251
    "double"     shift, and go to state 252
    "function"   shift, and go to state 253
    "lambda"     shift, and go to state 254
    "int8"       shift, and go to state 255
    "uint8"      shift, and go to state 256
    "int16"      shift, and go to state 257
    "uint16"     shift, and go to state 258
    "tuple"      shift, and go to state 259
    "variant"    shift, and go to state 260
    "::"         shift, and go to state 55
    "$t"         shift, and go to state 261
    "name"       shift, and go to state 56
    '$'          shift, and go to state 262

    name_in_namespace                   go to state 263
    basic_type_declaration              go to state 264
    structure_type_declaration          go to state 265
    auto_type_declaration               go to state 266
    bitfield_type_declaration           go to state 267
    type_declaration_no_options         go to state 981
    type_declaration_no_options_no_dim  go to state 269


State 761

  465 expr_generator: "generator" '<' type_declaration_no_options . '>' optional_capture_list '(' ')'
  466               | "generator" '<' type_declaration_no_options . '>' optional_capture_list '(' expr ')'
  467               | "generator" '<' type_declaration_no_options . '>' optional_capture_list optional_semis expression_block

    '>'  shift, and go to state 982


State 762

  356 expr_method_call: expr . "->" "name" '(' ')'
  357                 | expr . "->" "name" '(' expr_list ')'
  367 expr_field: expr . '.' "name"
  368           | expr . '.' '.' "name"
  369           | expr . '.' "name" '(' ')'
  370           | expr . '.' "name" '(' expr_list ')'
  371           | expr . '.' basic_type_declaration '(' ')'
  372           | expr . '.' basic_type_declaration '(' expr_list ')'
  375           | expr . '.' $@25 error $@26
  397 expr: expr . "<<" expr
  398     | expr . ">>" expr
  399     | expr . "<<<" expr
  400     | expr . ">>>" expr
  401     | expr . '+' expr
  402     | expr . '-' expr
  403     | expr . '*' expr
  404     | expr . '/' expr
  405     | expr . '%' expr
  406     | expr . '<' expr
  407     | expr . '>' expr
  408     | expr . "==" expr
  409     | expr . "!=" expr
  410     | expr . "<=" expr
  411     | expr . ">=" expr
  412     | expr . '&' expr
  413     | expr . '|' expr
  414     | expr . '^' expr
  415     | expr . "&&" expr
  416     | expr . "||" expr
  417     | expr . "^^" expr
  418     | expr . ".." expr
  421     | expr . "++"
  422     | expr . "--"
  424     | expr . '[' expr ']'
  425     | expr . '.' '[' expr ']'
  426     | expr . "?[" expr ']'
  427     | expr . '.' "?[" expr ']'
  428     | expr . "?." "name"
  429     | expr . '.' "?." "name"
  436     | expr . "??" expr
  437     | expr . '?' expr ':' expr
  440     | expr . "is" "type" '<' $@27 type_declaration_no_options '>' $@28
  441     | expr . "is" basic_type_declaration
  442     | expr . "is" "name"
  443     | expr . "as" "name"
  446     | expr . "as" "type" '<' $@29 type_declaration '>' $@30
  447     | expr . "as" basic_type_declaration
  448     | expr . '?' "as" "name"
  451     | expr . '?' "as" "type" '<' $@31 type_declaration '>' $@32
  452     | expr . '?' "as" basic_type_declaration
  460     | expr . "<|" expr
  461     | expr . "|>" expr
  462     | expr . "|>" basic_type_declaration
  468 expr_mtag: "$$" '(' expr . ')'
  476          | expr . '.' "$f" '(' expr ')'
  477          | expr . "?." "$f" '(' expr ')'
  478          | expr . '.' '.' "$f" '(' expr ')'
  479          | expr . '.' "?." "$f" '(' expr ')'
  480          | expr . "as" "$f" '(' expr ')'
  481          | expr . '?' "as" "$f" '(' expr ')'
  482          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 603
    "as"   shift, and go to state 604
    "<<"   shift, and go to state 605
    ">>"   shift, and go to state 606
    "++"   shift, and go to state 607
    "--"   shift, and go to state 608
    "<="   shift, and go to state 609
    ">="   shift, and go to state 610
    "=="   shift, and go to state 611
    "!="   shift, and go to state 612
    "->"   shift, and go to state 613
    "??"   shift, and go to state 614
    "?."   shift, and go to state 615
    "?["   shift, and go to state 616
    "<|"   shift, and go to state 617
    "|>"   shift, and go to state 618
    "<<<"  shift, and go to state 619
    ">>>"  shift, and go to state 620
    "&&"   shift, and go to state 621
    "||"   shift, and go to state 622
    "^^"   shift, and go to state 623
    ".."   shift, and go to state 624
    '?'    shift, and go to state 625
    '|'    shift, and go to state 626
    '^'    shift, and go to state 627
    '&'    shift, and go to state 628
    '<'    shift, and go to state 629
    '>'    shift, and go to state 630
    '-'    shift, and go to state 631
    '+'    shift, and go to state 632
    '*'    shift, and go to state 633
    '/'    shift, and go to state 634
    '%'    shift, and go to state 635
    '.'    shift, and go to state 636
    '['    shift, and go to state 637
    ')'    shift, and go to state 983


State 763

  356 expr_method_call: expr . "->" "name" '(' ')'
  357                 | expr . "->" "name" '(' expr_list ')'
  367 expr_field: expr . '.' "name"
  368           | expr . '.' '.' "name"
  369           | expr . '.' "name" '(' ')'
  370           | expr . '.' "name" '(' expr_list ')'
  371           | expr . '.' basic_type_declaration '(' ')'
  372           | expr . '.' basic_type_declaration '(' expr_list ')'
  375           | expr . '.' $@25 error $@26
  397 expr: expr . "<<" expr
  398     | expr . ">>" expr
  399     | expr . "<<<" expr
  400     | expr . ">>>" expr
  401     | expr . '+' expr
  402     | expr . '-' expr
  403     | expr . '*' expr
  404     | expr . '/' expr
  405     | expr . '%' expr
  406     | expr . '<' expr
  407     | expr . '>' expr
  408     | expr . "==" expr
  409     | expr . "!=" expr
  410     | expr . "<=" expr
  411     | expr . ">=" expr
  412     | expr . '&' expr
  413     | expr . '|' expr
  414     | expr . '^' expr
  415     | expr . "&&" expr
  416     | expr . "||" expr
  417     | expr . "^^" expr
  418     | expr . ".." expr
  421     | expr . "++"
  422     | expr . "--"
  424     | expr . '[' expr ']'
  425     | expr . '.' '[' expr ']'
  426     | expr . "?[" expr ']'
  427     | expr . '.' "?[" expr ']'
  428     | expr . "?." "name"
  429     | expr . '.' "?." "name"
  436     | expr . "??" expr
  437     | expr . '?' expr ':' expr
  440     | expr . "is" "type" '<' $@27 type_declaration_no_options '>' $@28
  441     | expr . "is" basic_type_declaration
  442     | expr . "is" "name"
  443     | expr . "as" "name"
  446     | expr . "as" "type" '<' $@29 type_declaration '>' $@30
  447     | expr . "as" basic_type_declaration
  448     | expr . '?' "as" "name"
  451     | expr . '?' "as" "type" '<' $@31 type_declaration '>' $@32
  452     | expr . '?' "as" basic_type_declaration
  460     | expr . "<|" expr
  461     | expr . "|>" expr
  462     | expr . "|>" basic_type_declaration
  469 expr_mtag: "$i" '(' expr . ')'
  476          | expr . '.' "$f" '(' expr ')'
  477          | expr . "?." "$f" '(' expr ')'
  478          | expr . '.' '.' "$f" '(' expr ')'
  479          | expr . '.' "?." "$f" '(' expr ')'
  480          | expr . "as" "$f" '(' expr ')'
  481          | expr . '?' "as" "$f" '(' expr ')'
  482          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 603
    "as"   shift, and go to state 604
    "<<"   shift, and go to state 605
    ">>"   shift, and go to state 606
    "++"   shift, and go to state 607
    "--"   shift, and go to state 608
    "<="   shift, and go to state 609
    ">="   shift, and go to state 610
    "=="   shift, and go to state 611
    "!="   shift, and go to state 612
    "->"   shift, and go to state 613
    "??"   shift, and go to state 614
    "?."   shift, and go to state 615
    "?["   shift, and go to state 616
    "<|"   shift, and go to state 617
    "|>"   shift, and go to state 618
    "<<<"  shift, and go to state 619
    ">>>"  shift, and go to state 620
    "&&"   shift, and go to state 621
    "||"   shift, and go to state 622
    "^^"   shift, and go to state 623
    ".."   shift, and go to state 624
    '?'    shift, and go to state 625
    '|'    shift, and go to state 626
    '^'    shift, and go to state 627
    '&'    shift, and go to state 628
    '<'    shift, and go to state 629
    '>'    shift, and go to state 630
    '-'    shift, and go to state 631
    '+'    shift, and go to state 632
    '*'    shift, and go to state 633
    '/'    shift, and go to state 634
    '%'    shift, and go to state 635
    '.'    shift, and go to state 636
    '['    shift, and go to state 637
    ')'    shift, and go to state 984


State 764

  356 expr_method_call: expr . "->" "name" '(' ')'
  357                 | expr . "->" "name" '(' expr_list ')'
  367 expr_field: expr . '.' "name"
  368           | expr . '.' '.' "name"
  369           | expr . '.' "name" '(' ')'
  370           | expr . '.' "name" '(' expr_list ')'
  371           | expr . '.' basic_type_declaration '(' ')'
  372           | expr . '.' basic_type_declaration '(' expr_list ')'
  375           | expr . '.' $@25 error $@26
  397 expr: expr . "<<" expr
  398     | expr . ">>" expr
  399     | expr . "<<<" expr
  400     | expr . ">>>" expr
  401     | expr . '+' expr
  402     | expr . '-' expr
  403     | expr . '*' expr
  404     | expr . '/' expr
  405     | expr . '%' expr
  406     | expr . '<' expr
  407     | expr . '>' expr
  408     | expr . "==" expr
  409     | expr . "!=" expr
  410     | expr . "<=" expr
  411     | expr . ">=" expr
  412     | expr . '&' expr
  413     | expr . '|' expr
  414     | expr . '^' expr
  415     | expr . "&&" expr
  416     | expr . "||" expr
  417     | expr . "^^" expr
  418     | expr . ".." expr
  421     | expr . "++"
  422     | expr . "--"
  424     | expr . '[' expr ']'
  425     | expr . '.' '[' expr ']'
  426     | expr . "?[" expr ']'
  427     | expr . '.' "?[" expr ']'
  428     | expr . "?." "name"
  429     | expr . '.' "?." "name"
  436     | expr . "??" expr
  437     | expr . '?' expr ':' expr
  440     | expr . "is" "type" '<' $@27 type_declaration_no_options '>' $@28
  441     | expr . "is" basic_type_declaration
  442     | expr . "is" "name"
  443     | expr . "as" "name"
  446     | expr . "as" "type" '<' $@29 type_declaration '>' $@30
  447     | expr . "as" basic_type_declaration
  448     | expr . '?' "as" "name"
  451     | expr . '?' "as" "type" '<' $@31 type_declaration '>' $@32
  452     | expr . '?' "as" basic_type_declaration
  460     | expr . "<|" expr
  461     | expr . "|>" expr
  462     | expr . "|>" basic_type_declaration
  470 expr_mtag: "$v" '(' expr . ')'
  476          | expr . '.' "$f" '(' expr ')'
  477          | expr . "?." "$f" '(' expr ')'
  478          | expr . '.' '.' "$f" '(' expr ')'
  479          | expr . '.' "?." "$f" '(' expr ')'
  480          | expr . "as" "$f" '(' expr ')'
  481          | expr . '?' "as" "$f" '(' expr ')'
  482          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 603
    "as"   shift, and go to state 604
    "<<"   shift, and go to state 605
    ">>"   shift, and go to state 606
    "++"   shift, and go to state 607
    "--"   shift, and go to state 608
    "<="   shift, and go to state 609
    ">="   shift, and go to state 610
    "=="   shift, and go to state 611
    "!="   shift, and go to state 612
    "->"   shift, and go to state 613
    "??"   shift, and go to state 614
    "?."   shift, and go to state 615
    "?["   shift, and go to state 616
    "<|"   shift, and go to state 617
    "|>"   shift, and go to state 618
    "<<<"  shift, and go to state 619
    ">>>"  shift, and go to state 620
    "&&"   shift, and go to state 621
    "||"   shift, and go to state 622
    "^^"   shift, and go to state 623
    ".."   shift, and go to state 624
    '?'    shift, and go to state 625
    '|'    shift, and go to state 626
    '^'    shift, and go to state 627
    '&'    shift, and go to state 628
    '<'    shift, and go to state 629
    '>'    shift, and go to state 630
    '-'    shift, and go to state 631
    '+'    shift, and go to state 632
    '*'    shift, and go to state 633
    '/'    shift, and go to state 634
    '%'    shift, and go to state 635
    '.'    shift, and go to state 636
    '['    shift, and go to state 637
    ')'    shift, and go to state 985


State 765

  356 expr_method_call: expr . "->" "name" '(' ')'
  357                 | expr . "->" "name" '(' expr_list ')'
  367 expr_field: expr . '.' "name"
  368           | expr . '.' '.' "name"
  369           | expr . '.' "name" '(' ')'
  370           | expr . '.' "name" '(' expr_list ')'
  371           | expr . '.' basic_type_declaration '(' ')'
  372           | expr . '.' basic_type_declaration '(' expr_list ')'
  375           | expr . '.' $@25 error $@26
  397 expr: expr . "<<" expr
  398     | expr . ">>" expr
  399     | expr . "<<<" expr
  400     | expr . ">>>" expr
  401     | expr . '+' expr
  402     | expr . '-' expr
  403     | expr . '*' expr
  404     | expr . '/' expr
  405     | expr . '%' expr
  406     | expr . '<' expr
  407     | expr . '>' expr
  408     | expr . "==" expr
  409     | expr . "!=" expr
  410     | expr . "<=" expr
  411     | expr . ">=" expr
  412     | expr . '&' expr
  413     | expr . '|' expr
  414     | expr . '^' expr
  415     | expr . "&&" expr
  416     | expr . "||" expr
  417     | expr . "^^" expr
  418     | expr . ".." expr
  421     | expr . "++"
  422     | expr . "--"
  424     | expr . '[' expr ']'
  425     | expr . '.' '[' expr ']'
  426     | expr . "?[" expr ']'
  427     | expr . '.' "?[" expr ']'
  428     | expr . "?." "name"
  429     | expr . '.' "?." "name"
  436     | expr . "??" expr
  437     | expr . '?' expr ':' expr
  440     | expr . "is" "type" '<' $@27 type_declaration_no_options '>' $@28
  441     | expr . "is" basic_type_declaration
  442     | expr . "is" "name"
  443     | expr . "as" "name"
  446     | expr . "as" "type" '<' $@29 type_declaration '>' $@30
  447     | expr . "as" basic_type_declaration
  448     | expr . '?' "as" "name"
  451     | expr . '?' "as" "type" '<' $@31 type_declaration '>' $@32
  452     | expr . '?' "as" basic_type_declaration
  460     | expr . "<|" expr
  461     | expr . "|>" expr
  462     | expr . "|>" basic_type_declaration
  471 expr_mtag: "$b" '(' expr . ')'
  476          | expr . '.' "$f" '(' expr ')'
  477          | expr . "?." "$f" '(' expr ')'
  478          | expr . '.' '.' "$f" '(' expr ')'
  479          | expr . '.' "?." "$f" '(' expr ')'
  480          | expr . "as" "$f" '(' expr ')'
  481          | expr . '?' "as" "$f" '(' expr ')'
  482          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 603
    "as"   shift, and go to state 604
    "<<"   shift, and go to state 605
    ">>"   shift, and go to state 606
    "++"   shift, and go to state 607
    "--"   shift, and go to state 608
    "<="   shift, and go to state 609
    ">="   shift, and go to state 610
    "=="   shift, and go to state 611
    "!="   shift, and go to state 612
    "->"   shift, and go to state 613
    "??"   shift, and go to state 614
    "?."   shift, and go to state 615
    "?["   shift, and go to state 616
    "<|"   shift, and go to state 617
    "|>"   shift, and go to state 618
    "<<<"  shift, and go to state 619
    ">>>"  shift, and go to state 620
    "&&"   shift, and go to state 621
    "||"   shift, and go to state 622
    "^^"   shift, and go to state 623
    ".."   shift, and go to state 624
    '?'    shift, and go to state 625
    '|'    shift, and go to state 626
    '^'    shift, and go to state 627
    '&'    shift, and go to state 628
    '<'    shift, and go to state 629
    '>'    shift, and go to state 630
    '-'    shift, and go to state 631
    '+'    shift, and go to state 632
    '*'    shift, and go to state 633
    '/'    shift, and go to state 634
    '%'    shift, and go to state 635
    '.'    shift, and go to state 636
    '['    shift, and go to state 637
    ')'    shift, and go to state 986


State 766

  356 expr_method_call: expr . "->" "name" '(' ')'
  357                 | expr . "->" "name" '(' expr_list ')'
  367 expr_field: expr . '.' "name"
  368           | expr . '.' '.' "name"
  369           | expr . '.' "name" '(' ')'
  370           | expr . '.' "name" '(' expr_list ')'
  371           | expr . '.' basic_type_declaration '(' ')'
  372           | expr . '.' basic_type_declaration '(' expr_list ')'
  375           | expr . '.' $@25 error $@26
  397 expr: expr . "<<" expr
  398     | expr . ">>" expr
  399     | expr . "<<<" expr
  400     | expr . ">>>" expr
  401     | expr . '+' expr
  402     | expr . '-' expr
  403     | expr . '*' expr
  404     | expr . '/' expr
  405     | expr . '%' expr
  406     | expr . '<' expr
  407     | expr . '>' expr
  408     | expr . "==" expr
  409     | expr . "!=" expr
  410     | expr . "<=" expr
  411     | expr . ">=" expr
  412     | expr . '&' expr
  413     | expr . '|' expr
  414     | expr . '^' expr
  415     | expr . "&&" expr
  416     | expr . "||" expr
  417     | expr . "^^" expr
  418     | expr . ".." expr
  421     | expr . "++"
  422     | expr . "--"
  424     | expr . '[' expr ']'
  425     | expr . '.' '[' expr ']'
  426     | expr . "?[" expr ']'
  427     | expr . '.' "?[" expr ']'
  428     | expr . "?." "name"
  429     | expr . '.' "?." "name"
  436     | expr . "??" expr
  437     | expr . '?' expr ':' expr
  440     | expr . "is" "type" '<' $@27 type_declaration_no_options '>' $@28
  441     | expr . "is" basic_type_declaration
  442     | expr . "is" "name"
  443     | expr . "as" "name"
  446     | expr . "as" "type" '<' $@29 type_declaration '>' $@30
  447     | expr . "as" basic_type_declaration
  448     | expr . '?' "as" "name"
  451     | expr . '?' "as" "type" '<' $@31 type_declaration '>' $@32
  452     | expr . '?' "as" basic_type_declaration
  460     | expr . "<|" expr
  461     | expr . "|>" expr
  462     | expr . "|>" basic_type_declaration
  472 expr_mtag: "$a" '(' expr . ')'
  476          | expr . '.' "$f" '(' expr ')'
  477          | expr . "?." "$f" '(' expr ')'
  478          | expr . '.' '.' "$f" '(' expr ')'
  479          | expr . '.' "?." "$f" '(' expr ')'
  480          | expr . "as" "$f" '(' expr ')'
  481          | expr . '?' "as" "$f" '(' expr ')'
  482          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 603
    "as"   shift, and go to state 604
    "<<"   shift, and go to state 605
    ">>"   shift, and go to state 606
    "++"   shift, and go to state 607
    "--"   shift, and go to state 608
    "<="   shift, and go to state 609
    ">="   shift, and go to state 610
    "=="   shift, and go to state 611
    "!="   shift, and go to state 612
    "->"   shift, and go to state 613
    "??"   shift, and go to state 614
    "?."   shift, and go to state 615
    "?["   shift, and go to state 616
    "<|"   shift, and go to state 617
    "|>"   shift, and go to state 618
    "<<<"  shift, and go to state 619
    ">>>"  shift, and go to state 620
    "&&"   shift, and go to state 621
    "||"   shift, and go to state 622
    "^^"   shift, and go to state 623
    ".."   shift, and go to state 624
    '?'    shift, and go to state 625
    '|'    shift, and go to state 626
    '^'    shift, and go to state 627
    '&'    shift, and go to state 628
    '<'    shift, and go to state 629
    '>'    shift, and go to state 630
    '-'    shift, and go to state 631
    '+'    shift, and go to state 632
    '*'    shift, and go to state 633
    '/'    shift, and go to state 634
    '%'    shift, and go to state 635
    '.'    shift, and go to state 636
    '['    shift, and go to state 637
    ')'    shift, and go to state 987


State 767

  356 expr_method_call: expr . "->" "name" '(' ')'
  357                 | expr . "->" "name" '(' expr_list ')'
  367 expr_field: expr . '.' "name"
  368           | expr . '.' '.' "name"
  369           | expr . '.' "name" '(' ')'
  370           | expr . '.' "name" '(' expr_list ')'
  371           | expr . '.' basic_type_declaration '(' ')'
  372           | expr . '.' basic_type_declaration '(' expr_list ')'
  375           | expr . '.' $@25 error $@26
  397 expr: expr . "<<" expr
  398     | expr . ">>" expr
  399     | expr . "<<<" expr
  400     | expr . ">>>" expr
  401     | expr . '+' expr
  402     | expr . '-' expr
  403     | expr . '*' expr
  404     | expr . '/' expr
  405     | expr . '%' expr
  406     | expr . '<' expr
  407     | expr . '>' expr
  408     | expr . "==" expr
  409     | expr . "!=" expr
  410     | expr . "<=" expr
  411     | expr . ">=" expr
  412     | expr . '&' expr
  413     | expr . '|' expr
  414     | expr . '^' expr
  415     | expr . "&&" expr
  416     | expr . "||" expr
  417     | expr . "^^" expr
  418     | expr . ".." expr
  421     | expr . "++"
  422     | expr . "--"
  424     | expr . '[' expr ']'
  425     | expr . '.' '[' expr ']'
  426     | expr . "?[" expr ']'
  427     | expr . '.' "?[" expr ']'
  428     | expr . "?." "name"
  429     | expr . '.' "?." "name"
  436     | expr . "??" expr
  437     | expr . '?' expr ':' expr
  440     | expr . "is" "type" '<' $@27 type_declaration_no_options '>' $@28
  441     | expr . "is" basic_type_declaration
  442     | expr . "is" "name"
  443     | expr . "as" "name"
  446     | expr . "as" "type" '<' $@29 type_declaration '>' $@30
  447     | expr . "as" basic_type_declaration
  448     | expr . '?' "as" "name"
  451     | expr . '?' "as" "type" '<' $@31 type_declaration '>' $@32
  452     | expr . '?' "as" basic_type_declaration
  460     | expr . "<|" expr
  461     | expr . "|>" expr
  462     | expr . "|>" basic_type_declaration
  474 expr_mtag: "$c" '(' expr . ')' '(' ')'
  475          | "$c" '(' expr . ')' '(' expr_list ')'
  476          | expr . '.' "$f" '(' expr ')'
  477          | expr . "?." "$f" '(' expr ')'
  478          | expr . '.' '.' "$f" '(' expr ')'
  479          | expr . '.' "?." "$f" '(' expr ')'
  480          | expr . "as" "$f" '(' expr ')'
  481          | expr . '?' "as" "$f" '(' expr ')'
  482          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 603
    "as"   shift, and go to state 604
    "<<"   shift, and go to state 605
    ">>"   shift, and go to state 606
    "++"   shift, and go to state 607
    "--"   shift, and go to state 608
    "<="   shift, and go to state 609
    ">="   shift, and go to state 610
    "=="   shift, and go to state 611
    "!="   shift, and go to state 612
    "->"   shift, and go to state 613
    "??"   shift, and go to state 614
    "?."   shift, and go to state 615
    "?["   shift, and go to state 616
    "<|"   shift, and go to state 617
    "|>"   shift, and go to state 618
    "<<<"  shift, and go to state 619
    ">>>"  shift, and go to state 620
    "&&"   shift, and go to state 621
    "||"   shift, and go to state 622
    "^^"   shift, and go to state 623
    ".."   shift, and go to state 624
    '?'    shift, and go to state 625
    '|'    shift, and go to state 626
    '^'    shift, and go to state 627
    '&'    shift, and go to state 628
    '<'    shift, and go to state 629
    '>'    shift, and go to state 630
    '-'    shift, and go to state 631
    '+'    shift, and go to state 632
    '*'    shift, and go to state 633
    '/'    shift, and go to state 634
    '%'    shift, and go to state 635
    '.'    shift, and go to state 636
    '['    shift, and go to state 637
    ')'    shift, and go to state 988


State 768

   32 string_builder: "start of the string" string_builder_body "end of the string" .

    $default  reduce using rule 32 (string_builder)


State 769

   31 string_builder_body: string_builder_body "{" . expr "}"

    "struct"                          shift, and go to state 414
    "class"                           shift, and go to state 415
    "true"                            shift, and go to state 416
    "false"                           shift, and go to state 417
    "new"                             shift, and go to state 418
    "typeinfo"                        shift, and go to state 419
    "type"                            shift, and go to state 420
    "array"                           shift, and go to state 421
    "null"                            shift, and go to state 422
    "table"                           shift, and go to state 423
    "deref"                           shift, and go to state 424
    "cast"                            shift, and go to state 425
    "upcast"                          shift, and go to state 426
    "addr"                            shift, and go to state 427
    "reinterpret"                     shift, and go to state 428
    "unsafe"                          shift, and go to state 429
    "fixed_array"                     shift, and go to state 430
    "default"                         shift, and go to state 431
    "bool"                            shift, and go to state 228
    "void"                            shift, and go to state 229
    "string"                          shift, and go to state 230
    "int"                             shift, and go to state 232
    "int2"                            shift, and go to state 233
    "int3"                            shift, and go to state 234
    "int4"                            shift, and go to state 235
    "uint"                            shift, and go to state 236
    "bitfield"                        shift, and go to state 432
    "uint2"                           shift, and go to state 238
    "uint3"                           shift, and go to state 239
    "uint4"                           shift, and go to state 240
    "float"                           shift, and go to state 241
    "float2"                          shift, and go to state 242
    "float3"                          shift, and go to state 243
    "float4"                          shift, and go to state 244
    "range"                           shift, and go to state 245
    "urange"                          shift, and go to state 246
    "range64"                         shift, and go to state 247
    "urange64"                        shift, and go to state 248
    "int64"                           shift, and go to state 250
    "uint64"                          shift, and go to state 251
    "double"                          shift, and go to state 252
    "int8"                            shift, and go to state 255
    "uint8"                           shift, and go to state 256
    "int16"                           shift, and go to state 257
    "uint16"                          shift, and go to state 258
    "tuple"                           shift, and go to state 433
    "variant"                         shift, and go to state 434
    "generator"                       shift, and go to state 435
    "++"                              shift, and go to state 436
    "--"                              shift, and go to state 437
    "::"                              shift, and go to state 55
    "$$"                              shift, and go to state 438
    "$i"                              shift, and go to state 439
    "$v"                              shift, and go to state 440
    "$b"                              shift, and go to state 441
    "$a"                              shift, and go to state 442
    "$c"                              shift, and go to state 443
    "..."                             shift, and go to state 444
    "integer constant"                shift, and go to state 445
    "long integer constant"           shift, and go to state 446
    "unsigned integer constant"       shift, and go to state 447
    "unsigned long integer constant"  shift, and go to state 448
    "unsigned int8 constant"          shift, and go to state 449
    "floating point constant"         shift, and go to state 450
    "double constant"                 shift, and go to state 451
    "name"                            shift, and go to state 56
    "start of the string"             shift, and go to state 452
    '-'                               shift, and go to state 453
    '+'                               shift, and go to state 454
    '*'                               shift, and go to state 455
    '%'                               shift, and go to state 13
    '~'                               shift, and go to state 456
    '!'                               shift, and go to state 457
    '['                               shift, and go to state 458
    '('                               shift, and go to state 459
    '$'                               shift, and go to state 460
    '@'                               shift, and go to state 461
    '{'                               shift, and go to state 462

    string_builder          go to state 463
    expr_reader             go to state 464
    expr_call_pipe          go to state 465
    name_in_namespace       go to state 466
    expr_new                go to state 467
    expr_cast               go to state 468
    expr_type_decl          go to state 469
    expr_type_info          go to state 470
    block_or_lambda         go to state 471
    expr_full_block         go to state 472
    expr_numeric_const      go to state 473
    expr_named_call         go to state 474
    expr_method_call        go to state 475
    func_addr_expr          go to state 476
    expr_field              go to state 477
    expr_call               go to state 478
    expr                    go to state 989
    expr_generator          go to state 480
    expr_mtag               go to state 481
    basic_type_declaration  go to state 482
    make_decl               go to state 483
    make_struct_decl        go to state 484
    make_tuple_call         go to state 485
    make_dim_decl           go to state 486
    make_table_decl         go to state 487
    array_comprehension     go to state 488


State 770

   25 character_sequence: character_sequence . STRING_CHARACTER
   26                   | character_sequence . STRING_CHARACTER_ESC
   30 string_builder_body: string_builder_body character_sequence .

    STRING_CHARACTER      shift, and go to state 217
    STRING_CHARACTER_ESC  shift, and go to state 218

    $default  reduce using rule 30 (string_builder_body)


State 771

  813 array_comprehension: '[' "for" '(' . variable_name_with_pos_list "in" expr_list ')' ';' expr array_comprehension_where ']'

    "$i"    shift, and go to state 673
    "name"  shift, and go to state 674

    variable_name_with_pos_list  go to state 990


State 772

  814 array_comprehension: '[' "iterator" "for" . '(' variable_name_with_pos_list "in" expr_list ')' ';' expr array_comprehension_where ']'

    '('  shift, and go to state 991


State 773

  309 expr_list: expr_list ',' . expr
  812 optional_comma: ',' .

    "struct"                          shift, and go to state 414
    "class"                           shift, and go to state 415
    "true"                            shift, and go to state 416
    "false"                           shift, and go to state 417
    "new"                             shift, and go to state 418
    "typeinfo"                        shift, and go to state 419
    "type"                            shift, and go to state 420
    "array"                           shift, and go to state 421
    "null"                            shift, and go to state 422
    "table"                           shift, and go to state 423
    "deref"                           shift, and go to state 424
    "cast"                            shift, and go to state 425
    "upcast"                          shift, and go to state 426
    "addr"                            shift, and go to state 427
    "reinterpret"                     shift, and go to state 428
    "unsafe"                          shift, and go to state 429
    "fixed_array"                     shift, and go to state 430
    "default"                         shift, and go to state 431
    "bool"                            shift, and go to state 228
    "void"                            shift, and go to state 229
    "string"                          shift, and go to state 230
    "int"                             shift, and go to state 232
    "int2"                            shift, and go to state 233
    "int3"                            shift, and go to state 234
    "int4"                            shift, and go to state 235
    "uint"                            shift, and go to state 236
    "bitfield"                        shift, and go to state 432
    "uint2"                           shift, and go to state 238
    "uint3"                           shift, and go to state 239
    "uint4"                           shift, and go to state 240
    "float"                           shift, and go to state 241
    "float2"                          shift, and go to state 242
    "float3"                          shift, and go to state 243
    "float4"                          shift, and go to state 244
    "range"                           shift, and go to state 245
    "urange"                          shift, and go to state 246
    "range64"                         shift, and go to state 247
    "urange64"                        shift, and go to state 248
    "int64"                           shift, and go to state 250
    "uint64"                          shift, and go to state 251
    "double"                          shift, and go to state 252
    "int8"                            shift, and go to state 255
    "uint8"                           shift, and go to state 256
    "int16"                           shift, and go to state 257
    "uint16"                          shift, and go to state 258
    "tuple"                           shift, and go to state 433
    "variant"                         shift, and go to state 434
    "generator"                       shift, and go to state 435
    "++"                              shift, and go to state 436
    "--"                              shift, and go to state 437
    "::"                              shift, and go to state 55
    "$$"                              shift, and go to state 438
    "$i"                              shift, and go to state 439
    "$v"                              shift, and go to state 440
    "$b"                              shift, and go to state 441
    "$a"                              shift, and go to state 442
    "$c"                              shift, and go to state 443
    "..."                             shift, and go to state 444
    "integer constant"                shift, and go to state 445
    "long integer constant"           shift, and go to state 446
    "unsigned integer constant"       shift, and go to state 447
    "unsigned long integer constant"  shift, and go to state 448
    "unsigned int8 constant"          shift, and go to state 449
    "floating point constant"         shift, and go to state 450
    "double constant"                 shift, and go to state 451
    "name"                            shift, and go to state 56
    "start of the string"             shift, and go to state 452
    '-'                               shift, and go to state 453
    '+'                               shift, and go to state 454
    '*'                               shift, and go to state 455
    '%'                               shift, and go to state 13
    '~'                               shift, and go to state 456
    '!'                               shift, and go to state 457
    '['                               shift, and go to state 458
    '('                               shift, and go to state 459
    '$'                               shift, and go to state 460
    '@'                               shift, and go to state 461
    '{'                               shift, and go to state 462

    $default  reduce using rule 812 (optional_comma)

    string_builder          go to state 463
    expr_reader             go to state 464
    expr_call_pipe          go to state 465
    name_in_namespace       go to state 466
    expr_new                go to state 467
    expr_cast               go to state 468
    expr_type_decl          go to state 469
    expr_type_info          go to state 470
    block_or_lambda         go to state 471
    expr_full_block         go to state 472
    expr_numeric_const      go to state 473
    expr_named_call         go to state 474
    expr_method_call        go to state 475
    func_addr_expr          go to state 476
    expr_field              go to state 477
    expr_call               go to state 478
    expr                    go to state 992
    expr_generator          go to state 480
    expr_mtag               go to state 481
    basic_type_declaration  go to state 482
    make_decl               go to state 483
    make_struct_decl        go to state 484
    make_tuple_call         go to state 485
    make_dim_decl           go to state 486
    make_table_decl         go to state 487
    array_comprehension     go to state 488


State 774

  785 make_dim_decl: '[' expr_list optional_comma . ']'

    ']'  shift, and go to state 993


State 775

  423 expr: '(' expr_list optional_comma . ')'

    ')'  shift, and go to state 994


State 776

  359 func_addr_name: "$i" . '(' expr ')'

    '('  shift, and go to state 995


State 777

  483 expr_mtag: '@' '@' "$c" . '(' expr ')'

    '('  shift, and go to state 996


State 778

  363 func_addr_expr: '@' '@' '<' . $@21 type_declaration_no_options '>' $@22 func_addr_name
  366               | '@' '@' '<' . $@23 optional_function_argument_list optional_function_type '>' $@24 func_addr_name

    ':'       reduce using rule 364 ($@23)
    '>'       reduce using rule 364 ($@23)
    '('       reduce using rule 364 ($@23)
    $default  reduce using rule 361 ($@21)

    $@21  go to state 997
    $@23  go to state 998


State 779

  358 func_addr_name: name_in_namespace .

    $default  reduce using rule 358 (func_addr_name)


State 780

  360 func_addr_expr: '@' '@' func_addr_name .

    $default  reduce using rule 360 (func_addr_expr)


State 781

  815 array_comprehension: '{' "for" '(' . variable_name_with_pos_list "in" expr_list ')' ';' make_map_tuple array_comprehension_where '}'

    "$i"    shift, and go to state 673
    "name"  shift, and go to state 674

    variable_name_with_pos_list  go to state 999


State 782

  779 make_map_tuple: expr "=>" . expr

    "struct"                          shift, and go to state 414
    "class"                           shift, and go to state 415
    "true"                            shift, and go to state 416
    "false"                           shift, and go to state 417
    "new"                             shift, and go to state 418
    "typeinfo"                        shift, and go to state 419
    "type"                            shift, and go to state 420
    "array"                           shift, and go to state 421
    "null"                            shift, and go to state 422
    "table"                           shift, and go to state 423
    "deref"                           shift, and go to state 424
    "cast"                            shift, and go to state 425
    "upcast"                          shift, and go to state 426
    "addr"                            shift, and go to state 427
    "reinterpret"                     shift, and go to state 428
    "unsafe"                          shift, and go to state 429
    "fixed_array"                     shift, and go to state 430
    "default"                         shift, and go to state 431
    "bool"                            shift, and go to state 228
    "void"                            shift, and go to state 229
    "string"                          shift, and go to state 230
    "int"                             shift, and go to state 232
    "int2"                            shift, and go to state 233
    "int3"                            shift, and go to state 234
    "int4"                            shift, and go to state 235
    "uint"                            shift, and go to state 236
    "bitfield"                        shift, and go to state 432
    "uint2"                           shift, and go to state 238
    "uint3"                           shift, and go to state 239
    "uint4"                           shift, and go to state 240
    "float"                           shift, and go to state 241
    "float2"                          shift, and go to state 242
    "float3"                          shift, and go to state 243
    "float4"                          shift, and go to state 244
    "range"                           shift, and go to state 245
    "urange"                          shift, and go to state 246
    "range64"                         shift, and go to state 247
    "urange64"                        shift, and go to state 248
    "int64"                           shift, and go to state 250
    "uint64"                          shift, and go to state 251
    "double"                          shift, and go to state 252
    "int8"                            shift, and go to state 255
    "uint8"                           shift, and go to state 256
    "int16"                           shift, and go to state 257
    "uint16"                          shift, and go to state 258
    "tuple"                           shift, and go to state 433
    "variant"                         shift, and go to state 434
    "generator"                       shift, and go to state 435
    "++"                              shift, and go to state 436
    "--"                              shift, and go to state 437
    "::"                              shift, and go to state 55
    "$$"                              shift, and go to state 438
    "$i"                              shift, and go to state 439
    "$v"                              shift, and go to state 440
    "$b"                              shift, and go to state 441
    "$a"                              shift, and go to state 442
    "$c"                              shift, and go to state 443
    "..."                             shift, and go to state 444
    "integer constant"                shift, and go to state 445
    "long integer constant"           shift, and go to state 446
    "unsigned integer constant"       shift, and go to state 447
    "unsigned long integer constant"  shift, and go to state 448
    "unsigned int8 constant"          shift, and go to state 449
    "floating point constant"         shift, and go to state 450
    "double constant"                 shift, and go to state 451
    "name"                            shift, and go to state 56
    "start of the string"             shift, and go to state 452
    '-'                               shift, and go to state 453
    '+'                               shift, and go to state 454
    '*'                               shift, and go to state 455
    '%'                               shift, and go to state 13
    '~'                               shift, and go to state 456
    '!'                               shift, and go to state 457
    '['                               shift, and go to state 458
    '('                               shift, and go to state 459
    '$'                               shift, and go to state 460
    '@'                               shift, and go to state 461
    '{'                               shift, and go to state 462

    string_builder          go to state 463
    expr_reader             go to state 464
    expr_call_pipe          go to state 465
    name_in_namespace       go to state 466
    expr_new                go to state 467
    expr_cast               go to state 468
    expr_type_decl          go to state 469
    expr_type_info          go to state 470
    block_or_lambda         go to state 471
    expr_full_block         go to state 472
    expr_numeric_const      go to state 473
    expr_named_call         go to state 474
    expr_method_call        go to state 475
    func_addr_expr          go to state 476
    expr_field              go to state 477
    expr_call               go to state 478
    expr                    go to state 1000
    expr_generator          go to state 480
    expr_mtag               go to state 481
    basic_type_declaration  go to state 482
    make_decl               go to state 483
    make_struct_decl        go to state 484
    make_tuple_call         go to state 485
    make_dim_decl           go to state 486
    make_table_decl         go to state 487
    array_comprehension     go to state 488


State 783

  804 expr_map_tuple_list: expr_map_tuple_list ',' . make_map_tuple
  812 optional_comma: ',' .

    "struct"                          shift, and go to state 414
    "class"                           shift, and go to state 415
    "true"                            shift, and go to state 416
    "false"                           shift, and go to state 417
    "new"                             shift, and go to state 418
    "typeinfo"                        shift, and go to state 419
    "type"                            shift, and go to state 420
    "array"                           shift, and go to state 421
    "null"                            shift, and go to state 422
    "table"                           shift, and go to state 423
    "deref"                           shift, and go to state 424
    "cast"                            shift, and go to state 425
    "upcast"                          shift, and go to state 426
    "addr"                            shift, and go to state 427
    "reinterpret"                     shift, and go to state 428
    "unsafe"                          shift, and go to state 429
    "fixed_array"                     shift, and go to state 430
    "default"                         shift, and go to state 431
    "bool"                            shift, and go to state 228
    "void"                            shift, and go to state 229
    "string"                          shift, and go to state 230
    "int"                             shift, and go to state 232
    "int2"                            shift, and go to state 233
    "int3"                            shift, and go to state 234
    "int4"                            shift, and go to state 235
    "uint"                            shift, and go to state 236
    "bitfield"                        shift, and go to state 432
    "uint2"                           shift, and go to state 238
    "uint3"                           shift, and go to state 239
    "uint4"                           shift, and go to state 240
    "float"                           shift, and go to state 241
    "float2"                          shift, and go to state 242
    "float3"                          shift, and go to state 243
    "float4"                          shift, and go to state 244
    "range"                           shift, and go to state 245
    "urange"                          shift, and go to state 246
    "range64"                         shift, and go to state 247
    "urange64"                        shift, and go to state 248
    "int64"                           shift, and go to state 250
    "uint64"                          shift, and go to state 251
    "double"                          shift, and go to state 252
    "int8"                            shift, and go to state 255
    "uint8"                           shift, and go to state 256
    "int16"                           shift, and go to state 257
    "uint16"                          shift, and go to state 258
    "tuple"                           shift, and go to state 433
    "variant"                         shift, and go to state 434
    "generator"                       shift, and go to state 435
    "++"                              shift, and go to state 436
    "--"                              shift, and go to state 437
    "::"                              shift, and go to state 55
    "$$"                              shift, and go to state 438
    "$i"                              shift, and go to state 439
    "$v"                              shift, and go to state 440
    "$b"                              shift, and go to state 441
    "$a"                              shift, and go to state 442
    "$c"                              shift, and go to state 443
    "..."                             shift, and go to state 444
    "integer constant"                shift, and go to state 445
    "long integer constant"           shift, and go to state 446
    "unsigned integer constant"       shift, and go to state 447
    "unsigned long integer constant"  shift, and go to state 448
    "unsigned int8 constant"          shift, and go to state 449
    "floating point constant"         shift, and go to state 450
    "double constant"                 shift, and go to state 451
    "name"                            shift, and go to state 56
    "start of the string"             shift, and go to state 452
    '-'                               shift, and go to state 453
    '+'                               shift, and go to state 454
    '*'                               shift, and go to state 455
    '%'                               shift, and go to state 13
    '~'                               shift, and go to state 456
    '!'                               shift, and go to state 457
    '['                               shift, and go to state 458
    '('                               shift, and go to state 459
    '$'                               shift, and go to state 460
    '@'                               shift, and go to state 461
    '{'                               shift, and go to state 462

    $default  reduce using rule 812 (optional_comma)

    string_builder          go to state 463
    expr_reader             go to state 464
    expr_call_pipe          go to state 465
    name_in_namespace       go to state 466
    expr_new                go to state 467
    expr_cast               go to state 468
    expr_type_decl          go to state 469
    expr_type_info          go to state 470
    block_or_lambda         go to state 471
    expr_full_block         go to state 472
    expr_numeric_const      go to state 473
    expr_named_call         go to state 474
    expr_method_call        go to state 475
    func_addr_expr          go to state 476
    expr_field              go to state 477
    expr_call               go to state 478
    expr                    go to state 594
    expr_generator          go to state 480
    expr_mtag               go to state 481
    basic_type_declaration  go to state 482
    make_decl               go to state 483
    make_struct_decl        go to state 484
    make_map_tuple          go to state 1001
    make_tuple_call         go to state 485
    make_dim_decl           go to state 486
    make_table_decl         go to state 487
    array_comprehension     go to state 488


State 784

  805 make_table_decl: '{' expr_map_tuple_list optional_comma . '}'

    '}'  shift, and go to state 1002


State 785

  377 expr_call: name_in_namespace '(' "uninitialized" . ')'
  379          | name_in_namespace '(' "uninitialized" . make_struct_single ')'

    "$f"    shift, and go to state 786
    "name"  shift, and go to state 1003
    ')'     shift, and go to state 1004

    make_struct_fields  go to state 791
    make_struct_single  go to state 1005


State 786

  753 make_struct_fields: "$f" . '(' expr ')' copy_or_move expr
  754                   | "$f" . '(' expr ')' ":=" expr

    '('  shift, and go to state 1006


State 787

  256 name_in_namespace: "name" .
  257                  | "name" . "::" "name"
  749 make_struct_fields: "name" . copy_or_move expr
  750                   | "name" . ":=" expr

    "<-"  shift, and go to state 879
    ":="  shift, and go to state 1007
    "::"  shift, and go to state 95
    '='   shift, and go to state 881

    $default  reduce using rule 256 (name_in_namespace)

    copy_or_move  go to state 1008


State 788

  354 expr_named_call: name_in_namespace '(' '[' . make_struct_fields ']' ')'
  785 make_dim_decl: '[' . expr_list optional_comma ']'
  813 array_comprehension: '[' . "for" '(' variable_name_with_pos_list "in" expr_list ')' ';' expr array_comprehension_where ']'
  814                    | '[' . "iterator" "for" '(' variable_name_with_pos_list "in" expr_list ')' ';' expr array_comprehension_where ']'

    "struct"                          shift, and go to state 414
    "class"                           shift, and go to state 415
    "for"                             shift, and go to state 587
    "true"                            shift, and go to state 416
    "false"                           shift, and go to state 417
    "new"                             shift, and go to state 418
    "typeinfo"                        shift, and go to state 419
    "type"                            shift, and go to state 420
    "array"                           shift, and go to state 421
    "null"                            shift, and go to state 422
    "table"                           shift, and go to state 423
    "deref"                           shift, and go to state 424
    "cast"                            shift, and go to state 425
    "upcast"                          shift, and go to state 426
    "iterator"                        shift, and go to state 588
    "addr"                            shift, and go to state 427
    "reinterpret"                     shift, and go to state 428
    "unsafe"                          shift, and go to state 429
    "fixed_array"                     shift, and go to state 430
    "default"                         shift, and go to state 431
    "bool"                            shift, and go to state 228
    "void"                            shift, and go to state 229
    "string"                          shift, and go to state 230
    "int"                             shift, and go to state 232
    "int2"                            shift, and go to state 233
    "int3"                            shift, and go to state 234
    "int4"                            shift, and go to state 235
    "uint"                            shift, and go to state 236
    "bitfield"                        shift, and go to state 432
    "uint2"                           shift, and go to state 238
    "uint3"                           shift, and go to state 239
    "uint4"                           shift, and go to state 240
    "float"                           shift, and go to state 241
    "float2"                          shift, and go to state 242
    "float3"                          shift, and go to state 243
    "float4"                          shift, and go to state 244
    "range"                           shift, and go to state 245
    "urange"                          shift, and go to state 246
    "range64"                         shift, and go to state 247
    "urange64"                        shift, and go to state 248
    "int64"                           shift, and go to state 250
    "uint64"                          shift, and go to state 251
    "double"                          shift, and go to state 252
    "int8"                            shift, and go to state 255
    "uint8"                           shift, and go to state 256
    "int16"                           shift, and go to state 257
    "uint16"                          shift, and go to state 258
    "tuple"                           shift, and go to state 433
    "variant"                         shift, and go to state 434
    "generator"                       shift, and go to state 435
    "++"                              shift, and go to state 436
    "--"                              shift, and go to state 437
    "::"                              shift, and go to state 55
    "$$"                              shift, and go to state 438
    "$i"                              shift, and go to state 439
    "$v"                              shift, and go to state 440
    "$b"                              shift, and go to state 441
    "$a"                              shift, and go to state 442
    "$c"                              shift, and go to state 443
    "$f"                              shift, and go to state 786
    "..."                             shift, and go to state 444
    "integer constant"                shift, and go to state 445
    "long integer constant"           shift, and go to state 446
    "unsigned integer constant"       shift, and go to state 447
    "unsigned long integer constant"  shift, and go to state 448
    "unsigned int8 constant"          shift, and go to state 449
    "floating point constant"         shift, and go to state 450
    "double constant"                 shift, and go to state 451
    "name"                            shift, and go to state 787
    "start of the string"             shift, and go to state 452
    '-'                               shift, and go to state 453
    '+'                               shift, and go to state 454
    '*'                               shift, and go to state 455
    '%'                               shift, and go to state 13
    '~'                               shift, and go to state 456
    '!'                               shift, and go to state 457
    '['                               shift, and go to state 458
    '('                               shift, and go to state 459
    '$'                               shift, and go to state 460
    '@'                               shift, and go to state 461
    '{'                               shift, and go to state 462

    string_builder          go to state 463
    expr_reader             go to state 464
    expr_call_pipe          go to state 465
    name_in_namespace       go to state 466
    expr_new                go to state 467
    expr_cast               go to state 468
    expr_type_decl          go to state 469
    expr_type_info          go to state 470
    expr_list               go to state 589
    block_or_lambda         go to state 471
    expr_full_block         go to state 472
    expr_numeric_const      go to state 473
    expr_named_call         go to state 474
    expr_method_call        go to state 475
    func_addr_expr          go to state 476
    expr_field              go to state 477
    expr_call               go to state 478
    expr                    go to state 590
    expr_generator          go to state 480
    expr_mtag               go to state 481
    basic_type_declaration  go to state 482
    make_decl               go to state 483
    make_struct_fields      go to state 1009
    make_struct_decl        go to state 484
    make_tuple_call         go to state 485
    make_dim_decl           go to state 486
    make_table_decl         go to state 487
    array_comprehension     go to state 488


State 789

  376 expr_call: name_in_namespace '(' ')' .

    $default  reduce using rule 376 (expr_call)


State 790

  309 expr_list: expr_list . ',' expr
  355 expr_named_call: name_in_namespace '(' expr_list . ',' '[' make_struct_fields ']' ')'
  380 expr_call: name_in_namespace '(' expr_list . ')'

    ','  shift, and go to state 1010
    ')'  shift, and go to state 1011


State 791

  751 make_struct_fields: make_struct_fields . ',' "name" copy_or_move expr
  752                   | make_struct_fields . ',' "name" ":=" expr
  755                   | make_struct_fields . ',' "$f" '(' expr ')' copy_or_move expr
  756                   | make_struct_fields . ',' "$f" '(' expr ')' ":=" expr
  758 make_struct_single: make_struct_fields .

    ','  shift, and go to state 1012

    $default  reduce using rule 758 (make_struct_single)


State 792

  378 expr_call: name_in_namespace '(' make_struct_single . ')'

    ')'  shift, and go to state 1013


State 793

  324 optional_capture_list: "capture" . '(' capture_list ')'

    '('  shift, and go to state 1014


State 794

  325 expr_full_block: block_or_lambda optional_annotation_list optional_capture_list . optional_function_argument_list optional_function_type optional_semis block_or_simple_block

    '('  shift, and go to state 329

    $default  reduce using rule 123 (optional_function_argument_list)

    optional_function_argument_list  go to state 1015


State 795

  315 block_or_lambda: '@' '@' .

    $default  reduce using rule 315 (block_or_lambda)


State 796

  248 expressions: expressions . expression_any
  249            | expressions . error
  327 expr_full_block_assumed_piped: '{' expressions . '}'

    error                             shift, and go to state 678
    "struct"                          shift, and go to state 414
    "class"                           shift, and go to state 415
    "let"                             shift, and go to state 3
    "true"                            shift, and go to state 416
    "false"                           shift, and go to state 417
    "new"                             shift, and go to state 418
    "typeinfo"                        shift, and go to state 419
    "type"                            shift, and go to state 420
    "array"                           shift, and go to state 421
    "return"                          shift, and go to state 679
    "null"                            shift, and go to state 422
    "break"                           shift, and go to state 680
    "try"                             shift, and go to state 681
    "table"                           shift, and go to state 423
    "delete"                          shift, and go to state 682
    "deref"                           shift, and go to state 424
    "assume"                          shift, and go to state 683
    "cast"                            shift, and go to state 425
    "upcast"                          shift, and go to state 426
    "var"                             shift, and go to state 8
    "addr"                            shift, and go to state 427
    "continue"                        shift, and go to state 684
    "pass"                            shift, and go to state 685
    "reinterpret"                     shift, and go to state 428
    "label"                           shift, and go to state 686
    "goto"                            shift, and go to state 687
    "unsafe"                          shift, and go to state 688
    "fixed_array"                     shift, and go to state 430
    "default"                         shift, and go to state 431
    "bool"                            shift, and go to state 228
    "void"                            shift, and go to state 229
    "string"                          shift, and go to state 230
    "int"                             shift, and go to state 232
    "int2"                            shift, and go to state 233
    "int3"                            shift, and go to state 234
    "int4"                            shift, and go to state 235
    "uint"                            shift, and go to state 236
    "bitfield"                        shift, and go to state 432
    "uint2"                           shift, and go to state 238
    "uint3"                           shift, and go to state 239
    "uint4"                           shift, and go to state 240
    "float"                           shift, and go to state 241
    "float2"                          shift, and go to state 242
    "float3"                          shift, and go to state 243
    "float4"                          shift, and go to state 244
    "range"                           shift, and go to state 245
    "urange"                          shift, and go to state 246
    "range64"                         shift, and go to state 247
    "urange64"                        shift, and go to state 248
    "int64"                           shift, and go to state 250
    "uint64"                          shift, and go to state 251
    "double"                          shift, and go to state 252
    "int8"                            shift, and go to state 255
    "uint8"                           shift, and go to state 256
    "int16"                           shift, and go to state 257
    "uint16"                          shift, and go to state 258
    "tuple"                           shift, and go to state 433
    "variant"                         shift, and go to state 434
    "generator"                       shift, and go to state 435
    "yield"                           shift, and go to state 689
    "++"                              shift, and go to state 436
    "--"                              shift, and go to state 437
    "::"                              shift, and go to state 55
    "$$"                              shift, and go to state 438
    "$i"                              shift, and go to state 439
    "$v"                              shift, and go to state 440
    "$b"                              shift, and go to state 441
    "$a"                              shift, and go to state 442
    "$c"                              shift, and go to state 443
    "..."                             shift, and go to state 444
    "integer constant"                shift, and go to state 445
    "long integer constant"           shift, and go to state 446
    "unsigned integer constant"       shift, and go to state 447
    "unsigned long integer constant"  shift, and go to state 448
    "unsigned int8 constant"          shift, and go to state 449
    "floating point constant"         shift, and go to state 450
    "double constant"                 shift, and go to state 451
    "name"                            shift, and go to state 56
    "start of the string"             shift, and go to state 452
    '-'                               shift, and go to state 453
    '+'                               shift, and go to state 454
    '*'                               shift, and go to state 455
    '%'                               shift, and go to state 13
    '~'                               shift, and go to state 456
    '!'                               shift, and go to state 457
    '['                               shift, and go to state 458
    '('                               shift, and go to state 459
    '$'                               shift, and go to state 460
    '@'                               shift, and go to state 461
    ';'                               shift, and go to state 690
    '{'                               shift, and go to state 462
    '}'                               shift, and go to state 1016

    "while"      reduce using rule 79 ($@4)
    "if"         reduce using rule 73 ($@2)
    "static_if"  reduce using rule 73 ($@2)
    "for"        reduce using rule 76 ($@3)
    "with"       reduce using rule 81 ($@5)

    string_builder                    go to state 463
    expr_reader                       go to state 464
    expression_label                  go to state 691
    expression_goto                   go to state 692
    expression_if_one_liner           go to state 693
    expression_if_then_else           go to state 694
    $@2                               go to state 695
    expression_if_then_else_oneliner  go to state 696
    expression_for_loop               go to state 697
    $@3                               go to state 698
    expression_unsafe                 go to state 699
    expression_while_loop             go to state 700
    $@4                               go to state 701
    expression_with                   go to state 702
    $@5                               go to state 703
    expression_with_alias             go to state 704
    expr_call_pipe                    go to state 465
    expression_any                    go to state 706
    name_in_namespace                 go to state 466
    expression_delete                 go to state 707
    expr_new                          go to state 467
    expression_break                  go to state 708
    expression_continue               go to state 709
    expression_return                 go to state 710
    expression_yield                  go to state 711
    expression_try_catch              go to state 712
    kwd_let                           go to state 713
    expression_let                    go to state 714
    expr_cast                         go to state 468
    expr_type_decl                    go to state 469
    expr_type_info                    go to state 470
    block_or_lambda                   go to state 471
    expr_full_block                   go to state 472
    expr_numeric_const                go to state 473
    expr_assign                       go to state 715
    expr_named_call                   go to state 474
    expr_method_call                  go to state 475
    func_addr_expr                    go to state 476
    expr_field                        go to state 477
    expr_call                         go to state 478
    expr                              go to state 716
    expr_generator                    go to state 480
    expr_mtag                         go to state 481
    basic_type_declaration            go to state 482
    make_decl                         go to state 483
    make_struct_decl                  go to state 484
    make_tuple_call                   go to state 485
    make_dim_decl                     go to state 486
    make_table_decl                   go to state 487
    array_comprehension               go to state 488


State 797

  326 expr_full_block_assumed_piped: block_or_lambda optional_annotation_list . optional_capture_list optional_function_argument_list optional_function_type optional_semis expression_block

    "capture"  shift, and go to state 793

    $default  reduce using rule 323 (optional_capture_list)

    optional_capture_list  go to state 1017


State 798

  440 expr: expr "is" "type" . '<' $@27 type_declaration_no_options '>' $@28

    '<'  shift, and go to state 1018


State 799

  482 expr_mtag: expr "is" "$f" . '(' expr ')'

    '('  shift, and go to state 1019


State 800

  442 expr: expr "is" "name" .

    $default  reduce using rule 442 (expr)


State 801

  441 expr: expr "is" basic_type_declaration .

    $default  reduce using rule 441 (expr)


State 802

  446 expr: expr "as" "type" . '<' $@29 type_declaration '>' $@30

    '<'  shift, and go to state 1020


State 803

  480 expr_mtag: expr "as" "$f" . '(' expr ')'

    '('  shift, and go to state 1021


State 804

  443 expr: expr "as" "name" .

    $default  reduce using rule 443 (expr)


State 805

  447 expr: expr "as" basic_type_declaration .

    $default  reduce using rule 447 (expr)


State 806

  356 expr_method_call: expr . "->" "name" '(' ')'
  357                 | expr . "->" "name" '(' expr_list ')'
  367 expr_field: expr . '.' "name"
  368           | expr . '.' '.' "name"
  369           | expr . '.' "name" '(' ')'
  370           | expr . '.' "name" '(' expr_list ')'
  371           | expr . '.' basic_type_declaration '(' ')'
  372           | expr . '.' basic_type_declaration '(' expr_list ')'
  375           | expr . '.' $@25 error $@26
  397 expr: expr . "<<" expr
  397     | expr "<<" expr .
  398     | expr . ">>" expr
  399     | expr . "<<<" expr
  400     | expr . ">>>" expr
  401     | expr . '+' expr
  402     | expr . '-' expr
  403     | expr . '*' expr
  404     | expr . '/' expr
  405     | expr . '%' expr
  406     | expr . '<' expr
  407     | expr . '>' expr
  408     | expr . "==" expr
  409     | expr . "!=" expr
  410     | expr . "<=" expr
  411     | expr . ">=" expr
  412     | expr . '&' expr
  413     | expr . '|' expr
  414     | expr . '^' expr
  415     | expr . "&&" expr
  416     | expr . "||" expr
  417     | expr . "^^" expr
  418     | expr . ".." expr
  421     | expr . "++"
  422     | expr . "--"
  424     | expr . '[' expr ']'
  425     | expr . '.' '[' expr ']'
  426     | expr . "?[" expr ']'
  427     | expr . '.' "?[" expr ']'
  428     | expr . "?." "name"
  429     | expr . '.' "?." "name"
  436     | expr . "??" expr
  437     | expr . '?' expr ':' expr
  440     | expr . "is" "type" '<' $@27 type_declaration_no_options '>' $@28
  441     | expr . "is" basic_type_declaration
  442     | expr . "is" "name"
  443     | expr . "as" "name"
  446     | expr . "as" "type" '<' $@29 type_declaration '>' $@30
  447     | expr . "as" basic_type_declaration
  448     | expr . '?' "as" "name"
  451     | expr . '?' "as" "type" '<' $@31 type_declaration '>' $@32
  452     | expr . '?' "as" basic_type_declaration
  460     | expr . "<|" expr
  461     | expr . "|>" expr
  462     | expr . "|>" basic_type_declaration
  476 expr_mtag: expr . '.' "$f" '(' expr ')'
  477          | expr . "?." "$f" '(' expr ')'
  478          | expr . '.' '.' "$f" '(' expr ')'
  479          | expr . '.' "?." "$f" '(' expr ')'
  480          | expr . "as" "$f" '(' expr ')'
  481          | expr . '?' "as" "$f" '(' expr ')'
  482          | expr . "is" "$f" '(' expr ')'

    "is"  shift, and go to state 603
    "as"  shift, and go to state 604
    "++"  shift, and go to state 607
    "--"  shift, and go to state 608
    "->"  shift, and go to state 613
    "??"  shift, and go to state 614
    "?."  shift, and go to state 615
    "?["  shift, and go to state 616
    "<|"  shift, and go to state 617
    "|>"  shift, and go to state 618
    '-'   shift, and go to state 631
    '+'   shift, and go to state 632
    '*'   shift, and go to state 633
    '/'   shift, and go to state 634
    '%'   shift, and go to state 635
    '.'   shift, and go to state 636
    '['   shift, and go to state 637

    $default  reduce using rule 397 (expr)


State 807

  356 expr_method_call: expr . "->" "name" '(' ')'
  357                 | expr . "->" "name" '(' expr_list ')'
  367 expr_field: expr . '.' "name"
  368           | expr . '.' '.' "name"
  369           | expr . '.' "name" '(' ')'
  370           | expr . '.' "name" '(' expr_list ')'
  371           | expr . '.' basic_type_declaration '(' ')'
  372           | expr . '.' basic_type_declaration '(' expr_list ')'
  375           | expr . '.' $@25 error $@26
  397 expr: expr . "<<" expr
  398     | expr . ">>" expr
  398     | expr ">>" expr .
  399     | expr . "<<<" expr
  400     | expr . ">>>" expr
  401     | expr . '+' expr
  402     | expr . '-' expr
  403     | expr . '*' expr
  404     | expr . '/' expr
  405     | expr . '%' expr
  406     | expr . '<' expr
  407     | expr . '>' expr
  408     | expr . "==" expr
  409     | expr . "!=" expr
  410     | expr . "<=" expr
  411     | expr . ">=" expr
  412     | expr . '&' expr
  413     | expr . '|' expr
  414     | expr . '^' expr
  415     | expr . "&&" expr
  416     | expr . "||" expr
  417     | expr . "^^" expr
  418     | expr . ".." expr
  421     | expr . "++"
  422     | expr . "--"
  424     | expr . '[' expr ']'
  425     | expr . '.' '[' expr ']'
  426     | expr . "?[" expr ']'
  427     | expr . '.' "?[" expr ']'
  428     | expr . "?." "name"
  429     | expr . '.' "?." "name"
  436     | expr . "??" expr
  437     | expr . '?' expr ':' expr
  440     | expr . "is" "type" '<' $@27 type_declaration_no_options '>' $@28
  441     | expr . "is" basic_type_declaration
  442     | expr . "is" "name"
  443     | expr . "as" "name"
  446     | expr . "as" "type" '<' $@29 type_declaration '>' $@30
  447     | expr . "as" basic_type_declaration
  448     | expr . '?' "as" "name"
  451     | expr . '?' "as" "type" '<' $@31 type_declaration '>' $@32
  452     | expr . '?' "as" basic_type_declaration
  460     | expr . "<|" expr
  461     | expr . "|>" expr
  462     | expr . "|>" basic_type_declaration
  476 expr_mtag: expr . '.' "$f" '(' expr ')'
  477          | expr . "?." "$f" '(' expr ')'
  478          | expr . '.' '.' "$f" '(' expr ')'
  479          | expr . '.' "?." "$f" '(' expr ')'
  480          | expr . "as" "$f" '(' expr ')'
  481          | expr . '?' "as" "$f" '(' expr ')'
  482          | expr . "is" "$f" '(' expr ')'

    "is"  shift, and go to state 603
    "as"  shift, and go to state 604
    "++"  shift, and go to state 607
    "--"  shift, and go to state 608
    "->"  shift, and go to state 613
    "??"  shift, and go to state 614
    "?."  shift, and go to state 615
    "?["  shift, and go to state 616
    "<|"  shift, and go to state 617
    "|>"  shift, and go to state 618
    '-'   shift, and go to state 631
    '+'   shift, and go to state 632
    '*'   shift, and go to state 633
    '/'   shift, and go to state 634
    '%'   shift, and go to state 635
    '.'   shift, and go to state 636
    '['   shift, and go to state 637

    $default  reduce using rule 398 (expr)


State 808

  356 expr_method_call: expr . "->" "name" '(' ')'
  357                 | expr . "->" "name" '(' expr_list ')'
  367 expr_field: expr . '.' "name"
  368           | expr . '.' '.' "name"
  369           | expr . '.' "name" '(' ')'
  370           | expr . '.' "name" '(' expr_list ')'
  371           | expr . '.' basic_type_declaration '(' ')'
  372           | expr . '.' basic_type_declaration '(' expr_list ')'
  375           | expr . '.' $@25 error $@26
  397 expr: expr . "<<" expr
  398     | expr . ">>" expr
  399     | expr . "<<<" expr
  400     | expr . ">>>" expr
  401     | expr . '+' expr
  402     | expr . '-' expr
  403     | expr . '*' expr
  404     | expr . '/' expr
  405     | expr . '%' expr
  406     | expr . '<' expr
  407     | expr . '>' expr
  408     | expr . "==" expr
  409     | expr . "!=" expr
  410     | expr . "<=" expr
  410     | expr "<=" expr .
  411     | expr . ">=" expr
  412     | expr . '&' expr
  413     | expr . '|' expr
  414     | expr . '^' expr
  415     | expr . "&&" expr
  416     | expr . "||" expr
  417     | expr . "^^" expr
  418     | expr . ".." expr
  421     | expr . "++"
  422     | expr . "--"
  424     | expr . '[' expr ']'
  425     | expr . '.' '[' expr ']'
  426     | expr . "?[" expr ']'
  427     | expr . '.' "?[" expr ']'
  428     | expr . "?." "name"
  429     | expr . '.' "?." "name"
  436     | expr . "??" expr
  437     | expr . '?' expr ':' expr
  440     | expr . "is" "type" '<' $@27 type_declaration_no_options '>' $@28
  441     | expr . "is" basic_type_declaration
  442     | expr . "is" "name"
  443     | expr . "as" "name"
  446     | expr . "as" "type" '<' $@29 type_declaration '>' $@30
  447     | expr . "as" basic_type_declaration
  448     | expr . '?' "as" "name"
  451     | expr . '?' "as" "type" '<' $@31 type_declaration '>' $@32
  452     | expr . '?' "as" basic_type_declaration
  460     | expr . "<|" expr
  461     | expr . "|>" expr
  462     | expr . "|>" basic_type_declaration
  476 expr_mtag: expr . '.' "$f" '(' expr ')'
  477          | expr . "?." "$f" '(' expr ')'
  478          | expr . '.' '.' "$f" '(' expr ')'
  479          | expr . '.' "?." "$f" '(' expr ')'
  480          | expr . "as" "$f" '(' expr ')'
  481          | expr . '?' "as" "$f" '(' expr ')'
  482          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 603
    "as"   shift, and go to state 604
    "<<"   shift, and go to state 605
    ">>"   shift, and go to state 606
    "++"   shift, and go to state 607
    "--"   shift, and go to state 608
    "->"   shift, and go to state 613
    "??"   shift, and go to state 614
    "?."   shift, and go to state 615
    "?["   shift, and go to state 616
    "<|"   shift, and go to state 617
    "|>"   shift, and go to state 618
    "<<<"  shift, and go to state 619
    ">>>"  shift, and go to state 620
    '-'    shift, and go to state 631
    '+'    shift, and go to state 632
    '*'    shift, and go to state 633
    '/'    shift, and go to state 634
    '%'    shift, and go to state 635
    '.'    shift, and go to state 636
    '['    shift, and go to state 637

    $default  reduce using rule 410 (expr)


State 809

  356 expr_method_call: expr . "->" "name" '(' ')'
  357                 | expr . "->" "name" '(' expr_list ')'
  367 expr_field: expr . '.' "name"
  368           | expr . '.' '.' "name"
  369           | expr . '.' "name" '(' ')'
  370           | expr . '.' "name" '(' expr_list ')'
  371           | expr . '.' basic_type_declaration '(' ')'
  372           | expr . '.' basic_type_declaration '(' expr_list ')'
  375           | expr . '.' $@25 error $@26
  397 expr: expr . "<<" expr
  398     | expr . ">>" expr
  399     | expr . "<<<" expr
  400     | expr . ">>>" expr
  401     | expr . '+' expr
  402     | expr . '-' expr
  403     | expr . '*' expr
  404     | expr . '/' expr
  405     | expr . '%' expr
  406     | expr . '<' expr
  407     | expr . '>' expr
  408     | expr . "==" expr
  409     | expr . "!=" expr
  410     | expr . "<=" expr
  411     | expr . ">=" expr
  411     | expr ">=" expr .
  412     | expr . '&' expr
  413     | expr . '|' expr
  414     | expr . '^' expr
  415     | expr . "&&" expr
  416     | expr . "||" expr
  417     | expr . "^^" expr
  418     | expr . ".." expr
  421     | expr . "++"
  422     | expr . "--"
  424     | expr . '[' expr ']'
  425     | expr . '.' '[' expr ']'
  426     | expr . "?[" expr ']'
  427     | expr . '.' "?[" expr ']'
  428     | expr . "?." "name"
  429     | expr . '.' "?." "name"
  436     | expr . "??" expr
  437     | expr . '?' expr ':' expr
  440     | expr . "is" "type" '<' $@27 type_declaration_no_options '>' $@28
  441     | expr . "is" basic_type_declaration
  442     | expr . "is" "name"
  443     | expr . "as" "name"
  446     | expr . "as" "type" '<' $@29 type_declaration '>' $@30
  447     | expr . "as" basic_type_declaration
  448     | expr . '?' "as" "name"
  451     | expr . '?' "as" "type" '<' $@31 type_declaration '>' $@32
  452     | expr . '?' "as" basic_type_declaration
  460     | expr . "<|" expr
  461     | expr . "|>" expr
  462     | expr . "|>" basic_type_declaration
  476 expr_mtag: expr . '.' "$f" '(' expr ')'
  477          | expr . "?." "$f" '(' expr ')'
  478          | expr . '.' '.' "$f" '(' expr ')'
  479          | expr . '.' "?." "$f" '(' expr ')'
  480          | expr . "as" "$f" '(' expr ')'
  481          | expr . '?' "as" "$f" '(' expr ')'
  482          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 603
    "as"   shift, and go to state 604
    "<<"   shift, and go to state 605
    ">>"   shift, and go to state 606
    "++"   shift, and go to state 607
    "--"   shift, and go to state 608
    "->"   shift, and go to state 613
    "??"   shift, and go to state 614
    "?."   shift, and go to state 615
    "?["   shift, and go to state 616
    "<|"   shift, and go to state 617
    "|>"   shift, and go to state 618
    "<<<"  shift, and go to state 619
    ">>>"  shift, and go to state 620
    '-'    shift, and go to state 631
    '+'    shift, and go to state 632
    '*'    shift, and go to state 633
    '/'    shift, and go to state 634
    '%'    shift, and go to state 635
    '.'    shift, and go to state 636
    '['    shift, and go to state 637

    $default  reduce using rule 411 (expr)


State 810

  356 expr_method_call: expr . "->" "name" '(' ')'
  357                 | expr . "->" "name" '(' expr_list ')'
  367 expr_field: expr . '.' "name"
  368           | expr . '.' '.' "name"
  369           | expr . '.' "name" '(' ')'
  370           | expr . '.' "name" '(' expr_list ')'
  371           | expr . '.' basic_type_declaration '(' ')'
  372           | expr . '.' basic_type_declaration '(' expr_list ')'
  375           | expr . '.' $@25 error $@26
  397 expr: expr . "<<" expr
  398     | expr . ">>" expr
  399     | expr . "<<<" expr
  400     | expr . ">>>" expr
  401     | expr . '+' expr
  402     | expr . '-' expr
  403     | expr . '*' expr
  404     | expr . '/' expr
  405     | expr . '%' expr
  406     | expr . '<' expr
  407     | expr . '>' expr
  408     | expr . "==" expr
  408     | expr "==" expr .
  409     | expr . "!=" expr
  410     | expr . "<=" expr
  411     | expr . ">=" expr
  412     | expr . '&' expr
  413     | expr . '|' expr
  414     | expr . '^' expr
  415     | expr . "&&" expr
  416     | expr . "||" expr
  417     | expr . "^^" expr
  418     | expr . ".." expr
  421     | expr . "++"
  422     | expr . "--"
  424     | expr . '[' expr ']'
  425     | expr . '.' '[' expr ']'
  426     | expr . "?[" expr ']'
  427     | expr . '.' "?[" expr ']'
  428     | expr . "?." "name"
  429     | expr . '.' "?." "name"
  436     | expr . "??" expr
  437     | expr . '?' expr ':' expr
  440     | expr . "is" "type" '<' $@27 type_declaration_no_options '>' $@28
  441     | expr . "is" basic_type_declaration
  442     | expr . "is" "name"
  443     | expr . "as" "name"
  446     | expr . "as" "type" '<' $@29 type_declaration '>' $@30
  447     | expr . "as" basic_type_declaration
  448     | expr . '?' "as" "name"
  451     | expr . '?' "as" "type" '<' $@31 type_declaration '>' $@32
  452     | expr . '?' "as" basic_type_declaration
  460     | expr . "<|" expr
  461     | expr . "|>" expr
  462     | expr . "|>" basic_type_declaration
  476 expr_mtag: expr . '.' "$f" '(' expr ')'
  477          | expr . "?." "$f" '(' expr ')'
  478          | expr . '.' '.' "$f" '(' expr ')'
  479          | expr . '.' "?." "$f" '(' expr ')'
  480          | expr . "as" "$f" '(' expr ')'
  481          | expr . '?' "as" "$f" '(' expr ')'
  482          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 603
    "as"   shift, and go to state 604
    "<<"   shift, and go to state 605
    ">>"   shift, and go to state 606
    "++"   shift, and go to state 607
    "--"   shift, and go to state 608
    "<="   shift, and go to state 609
    ">="   shift, and go to state 610
    "->"   shift, and go to state 613
    "??"   shift, and go to state 614
    "?."   shift, and go to state 615
    "?["   shift, and go to state 616
    "<|"   shift, and go to state 617
    "|>"   shift, and go to state 618
    "<<<"  shift, and go to state 619
    ">>>"  shift, and go to state 620
    '<'    shift, and go to state 629
    '>'    shift, and go to state 630
    '-'    shift, and go to state 631
    '+'    shift, and go to state 632
    '*'    shift, and go to state 633
    '/'    shift, and go to state 634
    '%'    shift, and go to state 635
    '.'    shift, and go to state 636
    '['    shift, and go to state 637

    $default  reduce using rule 408 (expr)


State 811

  356 expr_method_call: expr . "->" "name" '(' ')'
  357                 | expr . "->" "name" '(' expr_list ')'
  367 expr_field: expr . '.' "name"
  368           | expr . '.' '.' "name"
  369           | expr . '.' "name" '(' ')'
  370           | expr . '.' "name" '(' expr_list ')'
  371           | expr . '.' basic_type_declaration '(' ')'
  372           | expr . '.' basic_type_declaration '(' expr_list ')'
  375           | expr . '.' $@25 error $@26
  397 expr: expr . "<<" expr
  398     | expr . ">>" expr
  399     | expr . "<<<" expr
  400     | expr . ">>>" expr
  401     | expr . '+' expr
  402     | expr . '-' expr
  403     | expr . '*' expr
  404     | expr . '/' expr
  405     | expr . '%' expr
  406     | expr . '<' expr
  407     | expr . '>' expr
  408     | expr . "==" expr
  409     | expr . "!=" expr
  409     | expr "!=" expr .
  410     | expr . "<=" expr
  411     | expr . ">=" expr
  412     | expr . '&' expr
  413     | expr . '|' expr
  414     | expr . '^' expr
  415     | expr . "&&" expr
  416     | expr . "||" expr
  417     | expr . "^^" expr
  418     | expr . ".." expr
  421     | expr . "++"
  422     | expr . "--"
  424     | expr . '[' expr ']'
  425     | expr . '.' '[' expr ']'
  426     | expr . "?[" expr ']'
  427     | expr . '.' "?[" expr ']'
  428     | expr . "?." "name"
  429     | expr . '.' "?." "name"
  436     | expr . "??" expr
  437     | expr . '?' expr ':' expr
  440     | expr . "is" "type" '<' $@27 type_declaration_no_options '>' $@28
  441     | expr . "is" basic_type_declaration
  442     | expr . "is" "name"
  443     | expr . "as" "name"
  446     | expr . "as" "type" '<' $@29 type_declaration '>' $@30
  447     | expr . "as" basic_type_declaration
  448     | expr . '?' "as" "name"
  451     | expr . '?' "as" "type" '<' $@31 type_declaration '>' $@32
  452     | expr . '?' "as" basic_type_declaration
  460     | expr . "<|" expr
  461     | expr . "|>" expr
  462     | expr . "|>" basic_type_declaration
  476 expr_mtag: expr . '.' "$f" '(' expr ')'
  477          | expr . "?." "$f" '(' expr ')'
  478          | expr . '.' '.' "$f" '(' expr ')'
  479          | expr . '.' "?." "$f" '(' expr ')'
  480          | expr . "as" "$f" '(' expr ')'
  481          | expr . '?' "as" "$f" '(' expr ')'
  482          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 603
    "as"   shift, and go to state 604
    "<<"   shift, and go to state 605
    ">>"   shift, and go to state 606
    "++"   shift, and go to state 607
    "--"   shift, and go to state 608
    "<="   shift, and go to state 609
    ">="   shift, and go to state 610
    "->"   shift, and go to state 613
    "??"   shift, and go to state 614
    "?."   shift, and go to state 615
    "?["   shift, and go to state 616
    "<|"   shift, and go to state 617
    "|>"   shift, and go to state 618
    "<<<"  shift, and go to state 619
    ">>>"  shift, and go to state 620
    '<'    shift, and go to state 629
    '>'    shift, and go to state 630
    '-'    shift, and go to state 631
    '+'    shift, and go to state 632
    '*'    shift, and go to state 633
    '/'    shift, and go to state 634
    '%'    shift, and go to state 635
    '.'    shift, and go to state 636
    '['    shift, and go to state 637

    $default  reduce using rule 409 (expr)


State 812

  356 expr_method_call: expr "->" "name" . '(' ')'
  357                 | expr "->" "name" . '(' expr_list ')'

    '('  shift, and go to state 1022


State 813

  356 expr_method_call: expr . "->" "name" '(' ')'
  357                 | expr . "->" "name" '(' expr_list ')'
  367 expr_field: expr . '.' "name"
  368           | expr . '.' '.' "name"
  369           | expr . '.' "name" '(' ')'
  370           | expr . '.' "name" '(' expr_list ')'
  371           | expr . '.' basic_type_declaration '(' ')'
  372           | expr . '.' basic_type_declaration '(' expr_list ')'
  375           | expr . '.' $@25 error $@26
  397 expr: expr . "<<" expr
  398     | expr . ">>" expr
  399     | expr . "<<<" expr
  400     | expr . ">>>" expr
  401     | expr . '+' expr
  402     | expr . '-' expr
  403     | expr . '*' expr
  404     | expr . '/' expr
  405     | expr . '%' expr
  406     | expr . '<' expr
  407     | expr . '>' expr
  408     | expr . "==" expr
  409     | expr . "!=" expr
  410     | expr . "<=" expr
  411     | expr . ">=" expr
  412     | expr . '&' expr
  413     | expr . '|' expr
  414     | expr . '^' expr
  415     | expr . "&&" expr
  416     | expr . "||" expr
  417     | expr . "^^" expr
  418     | expr . ".." expr
  421     | expr . "++"
  422     | expr . "--"
  424     | expr . '[' expr ']'
  425     | expr . '.' '[' expr ']'
  426     | expr . "?[" expr ']'
  427     | expr . '.' "?[" expr ']'
  428     | expr . "?." "name"
  429     | expr . '.' "?." "name"
  436     | expr . "??" expr
  436     | expr "??" expr .
  437     | expr . '?' expr ':' expr
  440     | expr . "is" "type" '<' $@27 type_declaration_no_options '>' $@28
  441     | expr . "is" basic_type_declaration
  442     | expr . "is" "name"
  443     | expr . "as" "name"
  446     | expr . "as" "type" '<' $@29 type_declaration '>' $@30
  447     | expr . "as" basic_type_declaration
  448     | expr . '?' "as" "name"
  451     | expr . '?' "as" "type" '<' $@31 type_declaration '>' $@32
  452     | expr . '?' "as" basic_type_declaration
  460     | expr . "<|" expr
  461     | expr . "|>" expr
  462     | expr . "|>" basic_type_declaration
  476 expr_mtag: expr . '.' "$f" '(' expr ')'
  477          | expr . "?." "$f" '(' expr ')'
  478          | expr . '.' '.' "$f" '(' expr ')'
  479          | expr . '.' "?." "$f" '(' expr ')'
  480          | expr . "as" "$f" '(' expr ')'
  481          | expr . '?' "as" "$f" '(' expr ')'
  482          | expr . "is" "$f" '(' expr ')'

    "is"  shift, and go to state 603
    "as"  shift, and go to state 604
    "++"  shift, and go to state 607
    "--"  shift, and go to state 608
    "->"  shift, and go to state 613
    "??"  shift, and go to state 614
    "?."  shift, and go to state 615
    "?["  shift, and go to state 616
    "<|"  shift, and go to state 617
    "|>"  shift, and go to state 618
    '.'   shift, and go to state 636
    '['   shift, and go to state 637

    $default  reduce using rule 436 (expr)


State 814

  477 expr_mtag: expr "?." "$f" . '(' expr ')'

    '('  shift, and go to state 1023


State 815

  428 expr: expr "?." "name" .

    $default  reduce using rule 428 (expr)


State 816

  356 expr_method_call: expr . "->" "name" '(' ')'
  357                 | expr . "->" "name" '(' expr_list ')'
  367 expr_field: expr . '.' "name"
  368           | expr . '.' '.' "name"
  369           | expr . '.' "name" '(' ')'
  370           | expr . '.' "name" '(' expr_list ')'
  371           | expr . '.' basic_type_declaration '(' ')'
  372           | expr . '.' basic_type_declaration '(' expr_list ')'
  375           | expr . '.' $@25 error $@26
  397 expr: expr . "<<" expr
  398     | expr . ">>" expr
  399     | expr . "<<<" expr
  400     | expr . ">>>" expr
  401     | expr . '+' expr
  402     | expr . '-' expr
  403     | expr . '*' expr
  404     | expr . '/' expr
  405     | expr . '%' expr
  406     | expr . '<' expr
  407     | expr . '>' expr
  408     | expr . "==" expr
  409     | expr . "!=" expr
  410     | expr . "<=" expr
  411     | expr . ">=" expr
  412     | expr . '&' expr
  413     | expr . '|' expr
  414     | expr . '^' expr
  415     | expr . "&&" expr
  416     | expr . "||" expr
  417     | expr . "^^" expr
  418     | expr . ".." expr
  421     | expr . "++"
  422     | expr . "--"
  424     | expr . '[' expr ']'
  425     | expr . '.' '[' expr ']'
  426     | expr . "?[" expr ']'
  426     | expr "?[" expr . ']'
  427     | expr . '.' "?[" expr ']'
  428     | expr . "?." "name"
  429     | expr . '.' "?." "name"
  436     | expr . "??" expr
  437     | expr . '?' expr ':' expr
  440     | expr . "is" "type" '<' $@27 type_declaration_no_options '>' $@28
  441     | expr . "is" basic_type_declaration
  442     | expr . "is" "name"
  443     | expr . "as" "name"
  446     | expr . "as" "type" '<' $@29 type_declaration '>' $@30
  447     | expr . "as" basic_type_declaration
  448     | expr . '?' "as" "name"
  451     | expr . '?' "as" "type" '<' $@31 type_declaration '>' $@32
  452     | expr . '?' "as" basic_type_declaration
  460     | expr . "<|" expr
  461     | expr . "|>" expr
  462     | expr . "|>" basic_type_declaration
  476 expr_mtag: expr . '.' "$f" '(' expr ')'
  477          | expr . "?." "$f" '(' expr ')'
  478          | expr . '.' '.' "$f" '(' expr ')'
  479          | expr . '.' "?." "$f" '(' expr ')'
  480          | expr . "as" "$f" '(' expr ')'
  481          | expr . '?' "as" "$f" '(' expr ')'
  482          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 603
    "as"   shift, and go to state 604
    "<<"   shift, and go to state 605
    ">>"   shift, and go to state 606
    "++"   shift, and go to state 607
    "--"   shift, and go to state 608
    "<="   shift, and go to state 609
    ">="   shift, and go to state 610
    "=="   shift, and go to state 611
    "!="   shift, and go to state 612
    "->"   shift, and go to state 613
    "??"   shift, and go to state 614
    "?."   shift, and go to state 615
    "?["   shift, and go to state 616
    "<|"   shift, and go to state 617
    "|>"   shift, and go to state 618
    "<<<"  shift, and go to state 619
    ">>>"  shift, and go to state 620
    "&&"   shift, and go to state 621
    "||"   shift, and go to state 622
    "^^"   shift, and go to state 623
    ".."   shift, and go to state 624
    '?'    shift, and go to state 625
    '|'    shift, and go to state 626
    '^'    shift, and go to state 627
    '&'    shift, and go to state 628
    '<'    shift, and go to state 629
    '>'    shift, and go to state 630
    '-'    shift, and go to state 631
    '+'    shift, and go to state 632
    '*'    shift, and go to state 633
    '/'    shift, and go to state 634
    '%'    shift, and go to state 635
    '.'    shift, and go to state 636
    '['    shift, and go to state 637
    ']'    shift, and go to state 1024


State 817

  356 expr_method_call: expr . "->" "name" '(' ')'
  357                 | expr . "->" "name" '(' expr_list ')'
  367 expr_field: expr . '.' "name"
  368           | expr . '.' '.' "name"
  369           | expr . '.' "name" '(' ')'
  370           | expr . '.' "name" '(' expr_list ')'
  371           | expr . '.' basic_type_declaration '(' ')'
  372           | expr . '.' basic_type_declaration '(' expr_list ')'
  375           | expr . '.' $@25 error $@26
  397 expr: expr . "<<" expr
  398     | expr . ">>" expr
  399     | expr . "<<<" expr
  400     | expr . ">>>" expr
  401     | expr . '+' expr
  402     | expr . '-' expr
  403     | expr . '*' expr
  404     | expr . '/' expr
  405     | expr . '%' expr
  406     | expr . '<' expr
  407     | expr . '>' expr
  408     | expr . "==" expr
  409     | expr . "!=" expr
  410     | expr . "<=" expr
  411     | expr . ">=" expr
  412     | expr . '&' expr
  413     | expr . '|' expr
  414     | expr . '^' expr
  415     | expr . "&&" expr
  416     | expr . "||" expr
  417     | expr . "^^" expr
  418     | expr . ".." expr
  421     | expr . "++"
  422     | expr . "--"
  424     | expr . '[' expr ']'
  425     | expr . '.' '[' expr ']'
  426     | expr . "?[" expr ']'
  427     | expr . '.' "?[" expr ']'
  428     | expr . "?." "name"
  429     | expr . '.' "?." "name"
  436     | expr . "??" expr
  437     | expr . '?' expr ':' expr
  440     | expr . "is" "type" '<' $@27 type_declaration_no_options '>' $@28
  441     | expr . "is" basic_type_declaration
  442     | expr . "is" "name"
  443     | expr . "as" "name"
  446     | expr . "as" "type" '<' $@29 type_declaration '>' $@30
  447     | expr . "as" basic_type_declaration
  448     | expr . '?' "as" "name"
  451     | expr . '?' "as" "type" '<' $@31 type_declaration '>' $@32
  452     | expr . '?' "as" basic_type_declaration
  460     | expr . "<|" expr
  460     | expr "<|" expr .
  461     | expr . "|>" expr
  462     | expr . "|>" basic_type_declaration
  476 expr_mtag: expr . '.' "$f" '(' expr ')'
  477          | expr . "?." "$f" '(' expr ')'
  478          | expr . '.' '.' "$f" '(' expr ')'
  479          | expr . '.' "?." "$f" '(' expr ')'
  480          | expr . "as" "$f" '(' expr ')'
  481          | expr . '?' "as" "$f" '(' expr ')'
  482          | expr . "is" "$f" '(' expr ')'

    "->"  shift, and go to state 613
    "?."  shift, and go to state 615
    "?["  shift, and go to state 616
    '.'   shift, and go to state 636
    '['   shift, and go to state 637

    $default  reduce using rule 460 (expr)


State 818

  356 expr_method_call: expr . "->" "name" '(' ')'
  357                 | expr . "->" "name" '(' expr_list ')'
  367 expr_field: expr . '.' "name"
  368           | expr . '.' '.' "name"
  369           | expr . '.' "name" '(' ')'
  370           | expr . '.' "name" '(' expr_list ')'
  371           | expr . '.' basic_type_declaration '(' ')'
  372           | expr . '.' basic_type_declaration '(' expr_list ')'
  375           | expr . '.' $@25 error $@26
  397 expr: expr . "<<" expr
  398     | expr . ">>" expr
  399     | expr . "<<<" expr
  400     | expr . ">>>" expr
  401     | expr . '+' expr
  402     | expr . '-' expr
  403     | expr . '*' expr
  404     | expr . '/' expr
  405     | expr . '%' expr
  406     | expr . '<' expr
  407     | expr . '>' expr
  408     | expr . "==" expr
  409     | expr . "!=" expr
  410     | expr . "<=" expr
  411     | expr . ">=" expr
  412     | expr . '&' expr
  413     | expr . '|' expr
  414     | expr . '^' expr
  415     | expr . "&&" expr
  416     | expr . "||" expr
  417     | expr . "^^" expr
  418     | expr . ".." expr
  421     | expr . "++"
  422     | expr . "--"
  424     | expr . '[' expr ']'
  425     | expr . '.' '[' expr ']'
  426     | expr . "?[" expr ']'
  427     | expr . '.' "?[" expr ']'
  428     | expr . "?." "name"
  429     | expr . '.' "?." "name"
  436     | expr . "??" expr
  437     | expr . '?' expr ':' expr
  440     | expr . "is" "type" '<' $@27 type_declaration_no_options '>' $@28
  441     | expr . "is" basic_type_declaration
  442     | expr . "is" "name"
  443     | expr . "as" "name"
  446     | expr . "as" "type" '<' $@29 type_declaration '>' $@30
  447     | expr . "as" basic_type_declaration
  448     | expr . '?' "as" "name"
  451     | expr . '?' "as" "type" '<' $@31 type_declaration '>' $@32
  452     | expr . '?' "as" basic_type_declaration
  460     | expr . "<|" expr
  461     | expr . "|>" expr
  461     | expr "|>" expr .
  462     | expr . "|>" basic_type_declaration
  476 expr_mtag: expr . '.' "$f" '(' expr ')'
  477          | expr . "?." "$f" '(' expr ')'
  478          | expr . '.' '.' "$f" '(' expr ')'
  479          | expr . '.' "?." "$f" '(' expr ')'
  480          | expr . "as" "$f" '(' expr ')'
  481          | expr . '?' "as" "$f" '(' expr ')'
  482          | expr . "is" "$f" '(' expr ')'

    "->"  shift, and go to state 613
    "?."  shift, and go to state 615
    "?["  shift, and go to state 616
    '.'   shift, and go to state 636
    '['   shift, and go to state 637

    $default  reduce using rule 461 (expr)


State 819

  381 expr_call: basic_type_declaration . '(' ')'
  382          | basic_type_declaration . '(' expr_list ')'
  462 expr: expr "|>" basic_type_declaration .

    '('  shift, and go to state 639

    $default  reduce using rule 462 (expr)


State 820

  356 expr_method_call: expr . "->" "name" '(' ')'
  357                 | expr . "->" "name" '(' expr_list ')'
  367 expr_field: expr . '.' "name"
  368           | expr . '.' '.' "name"
  369           | expr . '.' "name" '(' ')'
  370           | expr . '.' "name" '(' expr_list ')'
  371           | expr . '.' basic_type_declaration '(' ')'
  372           | expr . '.' basic_type_declaration '(' expr_list ')'
  375           | expr . '.' $@25 error $@26
  397 expr: expr . "<<" expr
  398     | expr . ">>" expr
  399     | expr . "<<<" expr
  399     | expr "<<<" expr .
  400     | expr . ">>>" expr
  401     | expr . '+' expr
  402     | expr . '-' expr
  403     | expr . '*' expr
  404     | expr . '/' expr
  405     | expr . '%' expr
  406     | expr . '<' expr
  407     | expr . '>' expr
  408     | expr . "==" expr
  409     | expr . "!=" expr
  410     | expr . "<=" expr
  411     | expr . ">=" expr
  412     | expr . '&' expr
  413     | expr . '|' expr
  414     | expr . '^' expr
  415     | expr . "&&" expr
  416     | expr . "||" expr
  417     | expr . "^^" expr
  418     | expr . ".." expr
  421     | expr . "++"
  422     | expr . "--"
  424     | expr . '[' expr ']'
  425     | expr . '.' '[' expr ']'
  426     | expr . "?[" expr ']'
  427     | expr . '.' "?[" expr ']'
  428     | expr . "?." "name"
  429     | expr . '.' "?." "name"
  436     | expr . "??" expr
  437     | expr . '?' expr ':' expr
  440     | expr . "is" "type" '<' $@27 type_declaration_no_options '>' $@28
  441     | expr . "is" basic_type_declaration
  442     | expr . "is" "name"
  443     | expr . "as" "name"
  446     | expr . "as" "type" '<' $@29 type_declaration '>' $@30
  447     | expr . "as" basic_type_declaration
  448     | expr . '?' "as" "name"
  451     | expr . '?' "as" "type" '<' $@31 type_declaration '>' $@32
  452     | expr . '?' "as" basic_type_declaration
  460     | expr . "<|" expr
  461     | expr . "|>" expr
  462     | expr . "|>" basic_type_declaration
  476 expr_mtag: expr . '.' "$f" '(' expr ')'
  477          | expr . "?." "$f" '(' expr ')'
  478          | expr . '.' '.' "$f" '(' expr ')'
  479          | expr . '.' "?." "$f" '(' expr ')'
  480          | expr . "as" "$f" '(' expr ')'
  481          | expr . '?' "as" "$f" '(' expr ')'
  482          | expr . "is" "$f" '(' expr ')'

    "is"  shift, and go to state 603
    "as"  shift, and go to state 604
    "++"  shift, and go to state 607
    "--"  shift, and go to state 608
    "->"  shift, and go to state 613
    "??"  shift, and go to state 614
    "?."  shift, and go to state 615
    "?["  shift, and go to state 616
    "<|"  shift, and go to state 617
    "|>"  shift, and go to state 618
    '-'   shift, and go to state 631
    '+'   shift, and go to state 632
    '*'   shift, and go to state 633
    '/'   shift, and go to state 634
    '%'   shift, and go to state 635
    '.'   shift, and go to state 636
    '['   shift, and go to state 637

    $default  reduce using rule 399 (expr)


State 821

  356 expr_method_call: expr . "->" "name" '(' ')'
  357                 | expr . "->" "name" '(' expr_list ')'
  367 expr_field: expr . '.' "name"
  368           | expr . '.' '.' "name"
  369           | expr . '.' "name" '(' ')'
  370           | expr . '.' "name" '(' expr_list ')'
  371           | expr . '.' basic_type_declaration '(' ')'
  372           | expr . '.' basic_type_declaration '(' expr_list ')'
  375           | expr . '.' $@25 error $@26
  397 expr: expr . "<<" expr
  398     | expr . ">>" expr
  399     | expr . "<<<" expr
  400     | expr . ">>>" expr
  400     | expr ">>>" expr .
  401     | expr . '+' expr
  402     | expr . '-' expr
  403     | expr . '*' expr
  404     | expr . '/' expr
  405     | expr . '%' expr
  406     | expr . '<' expr
  407     | expr . '>' expr
  408     | expr . "==" expr
  409     | expr . "!=" expr
  410     | expr . "<=" expr
  411     | expr . ">=" expr
  412     | expr . '&' expr
  413     | expr . '|' expr
  414     | expr . '^' expr
  415     | expr . "&&" expr
  416     | expr . "||" expr
  417     | expr . "^^" expr
  418     | expr . ".." expr
  421     | expr . "++"
  422     | expr . "--"
  424     | expr . '[' expr ']'
  425     | expr . '.' '[' expr ']'
  426     | expr . "?[" expr ']'
  427     | expr . '.' "?[" expr ']'
  428     | expr . "?." "name"
  429     | expr . '.' "?." "name"
  436     | expr . "??" expr
  437     | expr . '?' expr ':' expr
  440     | expr . "is" "type" '<' $@27 type_declaration_no_options '>' $@28
  441     | expr . "is" basic_type_declaration
  442     | expr . "is" "name"
  443     | expr . "as" "name"
  446     | expr . "as" "type" '<' $@29 type_declaration '>' $@30
  447     | expr . "as" basic_type_declaration
  448     | expr . '?' "as" "name"
  451     | expr . '?' "as" "type" '<' $@31 type_declaration '>' $@32
  452     | expr . '?' "as" basic_type_declaration
  460     | expr . "<|" expr
  461     | expr . "|>" expr
  462     | expr . "|>" basic_type_declaration
  476 expr_mtag: expr . '.' "$f" '(' expr ')'
  477          | expr . "?." "$f" '(' expr ')'
  478          | expr . '.' '.' "$f" '(' expr ')'
  479          | expr . '.' "?." "$f" '(' expr ')'
  480          | expr . "as" "$f" '(' expr ')'
  481          | expr . '?' "as" "$f" '(' expr ')'
  482          | expr . "is" "$f" '(' expr ')'

    "is"  shift, and go to state 603
    "as"  shift, and go to state 604
    "++"  shift, and go to state 607
    "--"  shift, and go to state 608
    "->"  shift, and go to state 613
    "??"  shift, and go to state 614
    "?."  shift, and go to state 615
    "?["  shift, and go to state 616
    "<|"  shift, and go to state 617
    "|>"  shift, and go to state 618
    '-'   shift, and go to state 631
    '+'   shift, and go to state 632
    '*'   shift, and go to state 633
    '/'   shift, and go to state 634
    '%'   shift, and go to state 635
    '.'   shift, and go to state 636
    '['   shift, and go to state 637

    $default  reduce using rule 400 (expr)


State 822

  356 expr_method_call: expr . "->" "name" '(' ')'
  357                 | expr . "->" "name" '(' expr_list ')'
  367 expr_field: expr . '.' "name"
  368           | expr . '.' '.' "name"
  369           | expr . '.' "name" '(' ')'
  370           | expr . '.' "name" '(' expr_list ')'
  371           | expr . '.' basic_type_declaration '(' ')'
  372           | expr . '.' basic_type_declaration '(' expr_list ')'
  375           | expr . '.' $@25 error $@26
  397 expr: expr . "<<" expr
  398     | expr . ">>" expr
  399     | expr . "<<<" expr
  400     | expr . ">>>" expr
  401     | expr . '+' expr
  402     | expr . '-' expr
  403     | expr . '*' expr
  404     | expr . '/' expr
  405     | expr . '%' expr
  406     | expr . '<' expr
  407     | expr . '>' expr
  408     | expr . "==" expr
  409     | expr . "!=" expr
  410     | expr . "<=" expr
  411     | expr . ">=" expr
  412     | expr . '&' expr
  413     | expr . '|' expr
  414     | expr . '^' expr
  415     | expr . "&&" expr
  415     | expr "&&" expr .
  416     | expr . "||" expr
  417     | expr . "^^" expr
  418     | expr . ".." expr
  421     | expr . "++"
  422     | expr . "--"
  424     | expr . '[' expr ']'
  425     | expr . '.' '[' expr ']'
  426     | expr . "?[" expr ']'
  427     | expr . '.' "?[" expr ']'
  428     | expr . "?." "name"
  429     | expr . '.' "?." "name"
  436     | expr . "??" expr
  437     | expr . '?' expr ':' expr
  440     | expr . "is" "type" '<' $@27 type_declaration_no_options '>' $@28
  441     | expr . "is" basic_type_declaration
  442     | expr . "is" "name"
  443     | expr . "as" "name"
  446     | expr . "as" "type" '<' $@29 type_declaration '>' $@30
  447     | expr . "as" basic_type_declaration
  448     | expr . '?' "as" "name"
  451     | expr . '?' "as" "type" '<' $@31 type_declaration '>' $@32
  452     | expr . '?' "as" basic_type_declaration
  460     | expr . "<|" expr
  461     | expr . "|>" expr
  462     | expr . "|>" basic_type_declaration
  476 expr_mtag: expr . '.' "$f" '(' expr ')'
  477          | expr . "?." "$f" '(' expr ')'
  478          | expr . '.' '.' "$f" '(' expr ')'
  479          | expr . '.' "?." "$f" '(' expr ')'
  480          | expr . "as" "$f" '(' expr ')'
  481          | expr . '?' "as" "$f" '(' expr ')'
  482          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 603
    "as"   shift, and go to state 604
    "<<"   shift, and go to state 605
    ">>"   shift, and go to state 606
    "++"   shift, and go to state 607
    "--"   shift, and go to state 608
    "<="   shift, and go to state 609
    ">="   shift, and go to state 610
    "=="   shift, and go to state 611
    "!="   shift, and go to state 612
    "->"   shift, and go to state 613
    "??"   shift, and go to state 614
    "?."   shift, and go to state 615
    "?["   shift, and go to state 616
    "<|"   shift, and go to state 617
    "|>"   shift, and go to state 618
    "<<<"  shift, and go to state 619
    ">>>"  shift, and go to state 620
    '|'    shift, and go to state 626
    '^'    shift, and go to state 627
    '&'    shift, and go to state 628
    '<'    shift, and go to state 629
    '>'    shift, and go to state 630
    '-'    shift, and go to state 631
    '+'    shift, and go to state 632
    '*'    shift, and go to state 633
    '/'    shift, and go to state 634
    '%'    shift, and go to state 635
    '.'    shift, and go to state 636
    '['    shift, and go to state 637

    $default  reduce using rule 415 (expr)


State 823

  356 expr_method_call: expr . "->" "name" '(' ')'
  357                 | expr . "->" "name" '(' expr_list ')'
  367 expr_field: expr . '.' "name"
  368           | expr . '.' '.' "name"
  369           | expr . '.' "name" '(' ')'
  370           | expr . '.' "name" '(' expr_list ')'
  371           | expr . '.' basic_type_declaration '(' ')'
  372           | expr . '.' basic_type_declaration '(' expr_list ')'
  375           | expr . '.' $@25 error $@26
  397 expr: expr . "<<" expr
  398     | expr . ">>" expr
  399     | expr . "<<<" expr
  400     | expr . ">>>" expr
  401     | expr . '+' expr
  402     | expr . '-' expr
  403     | expr . '*' expr
  404     | expr . '/' expr
  405     | expr . '%' expr
  406     | expr . '<' expr
  407     | expr . '>' expr
  408     | expr . "==" expr
  409     | expr . "!=" expr
  410     | expr . "<=" expr
  411     | expr . ">=" expr
  412     | expr . '&' expr
  413     | expr . '|' expr
  414     | expr . '^' expr
  415     | expr . "&&" expr
  416     | expr . "||" expr
  416     | expr "||" expr .
  417     | expr . "^^" expr
  418     | expr . ".." expr
  421     | expr . "++"
  422     | expr . "--"
  424     | expr . '[' expr ']'
  425     | expr . '.' '[' expr ']'
  426     | expr . "?[" expr ']'
  427     | expr . '.' "?[" expr ']'
  428     | expr . "?." "name"
  429     | expr . '.' "?." "name"
  436     | expr . "??" expr
  437     | expr . '?' expr ':' expr
  440     | expr . "is" "type" '<' $@27 type_declaration_no_options '>' $@28
  441     | expr . "is" basic_type_declaration
  442     | expr . "is" "name"
  443     | expr . "as" "name"
  446     | expr . "as" "type" '<' $@29 type_declaration '>' $@30
  447     | expr . "as" basic_type_declaration
  448     | expr . '?' "as" "name"
  451     | expr . '?' "as" "type" '<' $@31 type_declaration '>' $@32
  452     | expr . '?' "as" basic_type_declaration
  460     | expr . "<|" expr
  461     | expr . "|>" expr
  462     | expr . "|>" basic_type_declaration
  476 expr_mtag: expr . '.' "$f" '(' expr ')'
  477          | expr . "?." "$f" '(' expr ')'
  478          | expr . '.' '.' "$f" '(' expr ')'
  479          | expr . '.' "?." "$f" '(' expr ')'
  480          | expr . "as" "$f" '(' expr ')'
  481          | expr . '?' "as" "$f" '(' expr ')'
  482          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 603
    "as"   shift, and go to state 604
    "<<"   shift, and go to state 605
    ">>"   shift, and go to state 606
    "++"   shift, and go to state 607
    "--"   shift, and go to state 608
    "<="   shift, and go to state 609
    ">="   shift, and go to state 610
    "=="   shift, and go to state 611
    "!="   shift, and go to state 612
    "->"   shift, and go to state 613
    "??"   shift, and go to state 614
    "?."   shift, and go to state 615
    "?["   shift, and go to state 616
    "<|"   shift, and go to state 617
    "|>"   shift, and go to state 618
    "<<<"  shift, and go to state 619
    ">>>"  shift, and go to state 620
    "&&"   shift, and go to state 621
    "^^"   shift, and go to state 623
    '|'    shift, and go to state 626
    '^'    shift, and go to state 627
    '&'    shift, and go to state 628
    '<'    shift, and go to state 629
    '>'    shift, and go to state 630
    '-'    shift, and go to state 631
    '+'    shift, and go to state 632
    '*'    shift, and go to state 633
    '/'    shift, and go to state 634
    '%'    shift, and go to state 635
    '.'    shift, and go to state 636
    '['    shift, and go to state 637

    $default  reduce using rule 416 (expr)


State 824

  356 expr_method_call: expr . "->" "name" '(' ')'
  357                 | expr . "->" "name" '(' expr_list ')'
  367 expr_field: expr . '.' "name"
  368           | expr . '.' '.' "name"
  369           | expr . '.' "name" '(' ')'
  370           | expr . '.' "name" '(' expr_list ')'
  371           | expr . '.' basic_type_declaration '(' ')'
  372           | expr . '.' basic_type_declaration '(' expr_list ')'
  375           | expr . '.' $@25 error $@26
  397 expr: expr . "<<" expr
  398     | expr . ">>" expr
  399     | expr . "<<<" expr
  400     | expr . ">>>" expr
  401     | expr . '+' expr
  402     | expr . '-' expr
  403     | expr . '*' expr
  404     | expr . '/' expr
  405     | expr . '%' expr
  406     | expr . '<' expr
  407     | expr . '>' expr
  408     | expr . "==" expr
  409     | expr . "!=" expr
  410     | expr . "<=" expr
  411     | expr . ">=" expr
  412     | expr . '&' expr
  413     | expr . '|' expr
  414     | expr . '^' expr
  415     | expr . "&&" expr
  416     | expr . "||" expr
  417     | expr . "^^" expr
  417     | expr "^^" expr .
  418     | expr . ".." expr
  421     | expr . "++"
  422     | expr . "--"
  424     | expr . '[' expr ']'
  425     | expr . '.' '[' expr ']'
  426     | expr . "?[" expr ']'
  427     | expr . '.' "?[" expr ']'
  428     | expr . "?." "name"
  429     | expr . '.' "?." "name"
  436     | expr . "??" expr
  437     | expr . '?' expr ':' expr
  440     | expr . "is" "type" '<' $@27 type_declaration_no_options '>' $@28
  441     | expr . "is" basic_type_declaration
  442     | expr . "is" "name"
  443     | expr . "as" "name"
  446     | expr . "as" "type" '<' $@29 type_declaration '>' $@30
  447     | expr . "as" basic_type_declaration
  448     | expr . '?' "as" "name"
  451     | expr . '?' "as" "type" '<' $@31 type_declaration '>' $@32
  452     | expr . '?' "as" basic_type_declaration
  460     | expr . "<|" expr
  461     | expr . "|>" expr
  462     | expr . "|>" basic_type_declaration
  476 expr_mtag: expr . '.' "$f" '(' expr ')'
  477          | expr . "?." "$f" '(' expr ')'
  478          | expr . '.' '.' "$f" '(' expr ')'
  479          | expr . '.' "?." "$f" '(' expr ')'
  480          | expr . "as" "$f" '(' expr ')'
  481          | expr . '?' "as" "$f" '(' expr ')'
  482          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 603
    "as"   shift, and go to state 604
    "<<"   shift, and go to state 605
    ">>"   shift, and go to state 606
    "++"   shift, and go to state 607
    "--"   shift, and go to state 608
    "<="   shift, and go to state 609
    ">="   shift, and go to state 610
    "=="   shift, and go to state 611
    "!="   shift, and go to state 612
    "->"   shift, and go to state 613
    "??"   shift, and go to state 614
    "?."   shift, and go to state 615
    "?["   shift, and go to state 616
    "<|"   shift, and go to state 617
    "|>"   shift, and go to state 618
    "<<<"  shift, and go to state 619
    ">>>"  shift, and go to state 620
    "&&"   shift, and go to state 621
    '|'    shift, and go to state 626
    '^'    shift, and go to state 627
    '&'    shift, and go to state 628
    '<'    shift, and go to state 629
    '>'    shift, and go to state 630
    '-'    shift, and go to state 631
    '+'    shift, and go to state 632
    '*'    shift, and go to state 633
    '/'    shift, and go to state 634
    '%'    shift, and go to state 635
    '.'    shift, and go to state 636
    '['    shift, and go to state 637

    $default  reduce using rule 417 (expr)


State 825

  356 expr_method_call: expr . "->" "name" '(' ')'
  357                 | expr . "->" "name" '(' expr_list ')'
  367 expr_field: expr . '.' "name"
  368           | expr . '.' '.' "name"
  369           | expr . '.' "name" '(' ')'
  370           | expr . '.' "name" '(' expr_list ')'
  371           | expr . '.' basic_type_declaration '(' ')'
  372           | expr . '.' basic_type_declaration '(' expr_list ')'
  375           | expr . '.' $@25 error $@26
  397 expr: expr . "<<" expr
  398     | expr . ">>" expr
  399     | expr . "<<<" expr
  400     | expr . ">>>" expr
  401     | expr . '+' expr
  402     | expr . '-' expr
  403     | expr . '*' expr
  404     | expr . '/' expr
  405     | expr . '%' expr
  406     | expr . '<' expr
  407     | expr . '>' expr
  408     | expr . "==" expr
  409     | expr . "!=" expr
  410     | expr . "<=" expr
  411     | expr . ">=" expr
  412     | expr . '&' expr
  413     | expr . '|' expr
  414     | expr . '^' expr
  415     | expr . "&&" expr
  416     | expr . "||" expr
  417     | expr . "^^" expr
  418     | expr . ".." expr
  418     | expr ".." expr .
  421     | expr . "++"
  422     | expr . "--"
  424     | expr . '[' expr ']'
  425     | expr . '.' '[' expr ']'
  426     | expr . "?[" expr ']'
  427     | expr . '.' "?[" expr ']'
  428     | expr . "?." "name"
  429     | expr . '.' "?." "name"
  436     | expr . "??" expr
  437     | expr . '?' expr ':' expr
  440     | expr . "is" "type" '<' $@27 type_declaration_no_options '>' $@28
  441     | expr . "is" basic_type_declaration
  442     | expr . "is" "name"
  443     | expr . "as" "name"
  446     | expr . "as" "type" '<' $@29 type_declaration '>' $@30
  447     | expr . "as" basic_type_declaration
  448     | expr . '?' "as" "name"
  451     | expr . '?' "as" "type" '<' $@31 type_declaration '>' $@32
  452     | expr . '?' "as" basic_type_declaration
  460     | expr . "<|" expr
  461     | expr . "|>" expr
  462     | expr . "|>" basic_type_declaration
  476 expr_mtag: expr . '.' "$f" '(' expr ')'
  477          | expr . "?." "$f" '(' expr ')'
  478          | expr . '.' '.' "$f" '(' expr ')'
  479          | expr . '.' "?." "$f" '(' expr ')'
  480          | expr . "as" "$f" '(' expr ')'
  481          | expr . '?' "as" "$f" '(' expr ')'
  482          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 603
    "as"   shift, and go to state 604
    "<<"   shift, and go to state 605
    ">>"   shift, and go to state 606
    "++"   shift, and go to state 607
    "--"   shift, and go to state 608
    "<="   shift, and go to state 609
    ">="   shift, and go to state 610
    "=="   shift, and go to state 611
    "!="   shift, and go to state 612
    "->"   shift, and go to state 613
    "??"   shift, and go to state 614
    "?."   shift, and go to state 615
    "?["   shift, and go to state 616
    "<|"   shift, and go to state 617
    "|>"   shift, and go to state 618
    "<<<"  shift, and go to state 619
    ">>>"  shift, and go to state 620
    "&&"   shift, and go to state 621
    "||"   shift, and go to state 622
    "^^"   shift, and go to state 623
    '?'    shift, and go to state 625
    '|'    shift, and go to state 626
    '^'    shift, and go to state 627
    '&'    shift, and go to state 628
    '<'    shift, and go to state 629
    '>'    shift, and go to state 630
    '-'    shift, and go to state 631
    '+'    shift, and go to state 632
    '*'    shift, and go to state 633
    '/'    shift, and go to state 634
    '%'    shift, and go to state 635
    '.'    shift, and go to state 636
    '['    shift, and go to state 637

    ".."  error (nonassociative)

    $default  reduce using rule 418 (expr)


State 826

  448 expr: expr '?' "as" . "name"
  451     | expr '?' "as" . "type" '<' $@31 type_declaration '>' $@32
  452     | expr '?' "as" . basic_type_declaration
  481 expr_mtag: expr '?' "as" . "$f" '(' expr ')'

    "type"      shift, and go to state 1025
    "bool"      shift, and go to state 228
    "void"      shift, and go to state 229
    "string"    shift, and go to state 230
    "int"       shift, and go to state 232
    "int2"      shift, and go to state 233
    "int3"      shift, and go to state 234
    "int4"      shift, and go to state 235
    "uint"      shift, and go to state 236
    "bitfield"  shift, and go to state 432
    "uint2"     shift, and go to state 238
    "uint3"     shift, and go to state 239
    "uint4"     shift, and go to state 240
    "float"     shift, and go to state 241
    "float2"    shift, and go to state 242
    "float3"    shift, and go to state 243
    "float4"    shift, and go to state 244
    "range"     shift, and go to state 245
    "urange"    shift, and go to state 246
    "range64"   shift, and go to state 247
    "urange64"  shift, and go to state 248
    "int64"     shift, and go to state 250
    "uint64"    shift, and go to state 251
    "double"    shift, and go to state 252
    "int8"      shift, and go to state 255
    "uint8"     shift, and go to state 256
    "int16"     shift, and go to state 257
    "uint16"    shift, and go to state 258
    "$f"        shift, and go to state 1026
    "name"      shift, and go to state 1027

    basic_type_declaration  go to state 1028


State 827

  356 expr_method_call: expr . "->" "name" '(' ')'
  357                 | expr . "->" "name" '(' expr_list ')'
  367 expr_field: expr . '.' "name"
  368           | expr . '.' '.' "name"
  369           | expr . '.' "name" '(' ')'
  370           | expr . '.' "name" '(' expr_list ')'
  371           | expr . '.' basic_type_declaration '(' ')'
  372           | expr . '.' basic_type_declaration '(' expr_list ')'
  375           | expr . '.' $@25 error $@26
  397 expr: expr . "<<" expr
  398     | expr . ">>" expr
  399     | expr . "<<<" expr
  400     | expr . ">>>" expr
  401     | expr . '+' expr
  402     | expr . '-' expr
  403     | expr . '*' expr
  404     | expr . '/' expr
  405     | expr . '%' expr
  406     | expr . '<' expr
  407     | expr . '>' expr
  408     | expr . "==" expr
  409     | expr . "!=" expr
  410     | expr . "<=" expr
  411     | expr . ">=" expr
  412     | expr . '&' expr
  413     | expr . '|' expr
  414     | expr . '^' expr
  415     | expr . "&&" expr
  416     | expr . "||" expr
  417     | expr . "^^" expr
  418     | expr . ".." expr
  421     | expr . "++"
  422     | expr . "--"
  424     | expr . '[' expr ']'
  425     | expr . '.' '[' expr ']'
  426     | expr . "?[" expr ']'
  427     | expr . '.' "?[" expr ']'
  428     | expr . "?." "name"
  429     | expr . '.' "?." "name"
  436     | expr . "??" expr
  437     | expr . '?' expr ':' expr
  437     | expr '?' expr . ':' expr
  440     | expr . "is" "type" '<' $@27 type_declaration_no_options '>' $@28
  441     | expr . "is" basic_type_declaration
  442     | expr . "is" "name"
  443     | expr . "as" "name"
  446     | expr . "as" "type" '<' $@29 type_declaration '>' $@30
  447     | expr . "as" basic_type_declaration
  448     | expr . '?' "as" "name"
  451     | expr . '?' "as" "type" '<' $@31 type_declaration '>' $@32
  452     | expr . '?' "as" basic_type_declaration
  460     | expr . "<|" expr
  461     | expr . "|>" expr
  462     | expr . "|>" basic_type_declaration
  476 expr_mtag: expr . '.' "$f" '(' expr ')'
  477          | expr . "?." "$f" '(' expr ')'
  478          | expr . '.' '.' "$f" '(' expr ')'
  479          | expr . '.' "?." "$f" '(' expr ')'
  480          | expr . "as" "$f" '(' expr ')'
  481          | expr . '?' "as" "$f" '(' expr ')'
  482          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 603
    "as"   shift, and go to state 604
    "<<"   shift, and go to state 605
    ">>"   shift, and go to state 606
    "++"   shift, and go to state 607
    "--"   shift, and go to state 608
    "<="   shift, and go to state 609
    ">="   shift, and go to state 610
    "=="   shift, and go to state 611
    "!="   shift, and go to state 612
    "->"   shift, and go to state 613
    "??"   shift, and go to state 614
    "?."   shift, and go to state 615
    "?["   shift, and go to state 616
    "<|"   shift, and go to state 617
    "|>"   shift, and go to state 618
    "<<<"  shift, and go to state 619
    ">>>"  shift, and go to state 620
    "&&"   shift, and go to state 621
    "||"   shift, and go to state 622
    "^^"   shift, and go to state 623
    ".."   shift, and go to state 624
    '?'    shift, and go to state 625
    ':'    shift, and go to state 1029
    '|'    shift, and go to state 626
    '^'    shift, and go to state 627
    '&'    shift, and go to state 628
    '<'    shift, and go to state 629
    '>'    shift, and go to state 630
    '-'    shift, and go to state 631
    '+'    shift, and go to state 632
    '*'    shift, and go to state 633
    '/'    shift, and go to state 634
    '%'    shift, and go to state 635
    '.'    shift, and go to state 636
    '['    shift, and go to state 637


State 828

  356 expr_method_call: expr . "->" "name" '(' ')'
  357                 | expr . "->" "name" '(' expr_list ')'
  367 expr_field: expr . '.' "name"
  368           | expr . '.' '.' "name"
  369           | expr . '.' "name" '(' ')'
  370           | expr . '.' "name" '(' expr_list ')'
  371           | expr . '.' basic_type_declaration '(' ')'
  372           | expr . '.' basic_type_declaration '(' expr_list ')'
  375           | expr . '.' $@25 error $@26
  397 expr: expr . "<<" expr
  398     | expr . ">>" expr
  399     | expr . "<<<" expr
  400     | expr . ">>>" expr
  401     | expr . '+' expr
  402     | expr . '-' expr
  403     | expr . '*' expr
  404     | expr . '/' expr
  405     | expr . '%' expr
  406     | expr . '<' expr
  407     | expr . '>' expr
  408     | expr . "==" expr
  409     | expr . "!=" expr
  410     | expr . "<=" expr
  411     | expr . ">=" expr
  412     | expr . '&' expr
  413     | expr . '|' expr
  413     | expr '|' expr .
  414     | expr . '^' expr
  415     | expr . "&&" expr
  416     | expr . "||" expr
  417     | expr . "^^" expr
  418     | expr . ".." expr
  421     | expr . "++"
  422     | expr . "--"
  424     | expr . '[' expr ']'
  425     | expr . '.' '[' expr ']'
  426     | expr . "?[" expr ']'
  427     | expr . '.' "?[" expr ']'
  428     | expr . "?." "name"
  429     | expr . '.' "?." "name"
  436     | expr . "??" expr
  437     | expr . '?' expr ':' expr
  440     | expr . "is" "type" '<' $@27 type_declaration_no_options '>' $@28
  441     | expr . "is" basic_type_declaration
  442     | expr . "is" "name"
  443     | expr . "as" "name"
  446     | expr . "as" "type" '<' $@29 type_declaration '>' $@30
  447     | expr . "as" basic_type_declaration
  448     | expr . '?' "as" "name"
  451     | expr . '?' "as" "type" '<' $@31 type_declaration '>' $@32
  452     | expr . '?' "as" basic_type_declaration
  460     | expr . "<|" expr
  461     | expr . "|>" expr
  462     | expr . "|>" basic_type_declaration
  476 expr_mtag: expr . '.' "$f" '(' expr ')'
  477          | expr . "?." "$f" '(' expr ')'
  478          | expr . '.' '.' "$f" '(' expr ')'
  479          | expr . '.' "?." "$f" '(' expr ')'
  480          | expr . "as" "$f" '(' expr ')'
  481          | expr . '?' "as" "$f" '(' expr ')'
  482          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 603
    "as"   shift, and go to state 604
    "<<"   shift, and go to state 605
    ">>"   shift, and go to state 606
    "++"   shift, and go to state 607
    "--"   shift, and go to state 608
    "<="   shift, and go to state 609
    ">="   shift, and go to state 610
    "=="   shift, and go to state 611
    "!="   shift, and go to state 612
    "->"   shift, and go to state 613
    "??"   shift, and go to state 614
    "?."   shift, and go to state 615
    "?["   shift, and go to state 616
    "<|"   shift, and go to state 617
    "|>"   shift, and go to state 618
    "<<<"  shift, and go to state 619
    ">>>"  shift, and go to state 620
    '^'    shift, and go to state 627
    '&'    shift, and go to state 628
    '<'    shift, and go to state 629
    '>'    shift, and go to state 630
    '-'    shift, and go to state 631
    '+'    shift, and go to state 632
    '*'    shift, and go to state 633
    '/'    shift, and go to state 634
    '%'    shift, and go to state 635
    '.'    shift, and go to state 636
    '['    shift, and go to state 637

    $default  reduce using rule 413 (expr)


State 829

  356 expr_method_call: expr . "->" "name" '(' ')'
  357                 | expr . "->" "name" '(' expr_list ')'
  367 expr_field: expr . '.' "name"
  368           | expr . '.' '.' "name"
  369           | expr . '.' "name" '(' ')'
  370           | expr . '.' "name" '(' expr_list ')'
  371           | expr . '.' basic_type_declaration '(' ')'
  372           | expr . '.' basic_type_declaration '(' expr_list ')'
  375           | expr . '.' $@25 error $@26
  397 expr: expr . "<<" expr
  398     | expr . ">>" expr
  399     | expr . "<<<" expr
  400     | expr . ">>>" expr
  401     | expr . '+' expr
  402     | expr . '-' expr
  403     | expr . '*' expr
  404     | expr . '/' expr
  405     | expr . '%' expr
  406     | expr . '<' expr
  407     | expr . '>' expr
  408     | expr . "==" expr
  409     | expr . "!=" expr
  410     | expr . "<=" expr
  411     | expr . ">=" expr
  412     | expr . '&' expr
  413     | expr . '|' expr
  414     | expr . '^' expr
  414     | expr '^' expr .
  415     | expr . "&&" expr
  416     | expr . "||" expr
  417     | expr . "^^" expr
  418     | expr . ".." expr
  421     | expr . "++"
  422     | expr . "--"
  424     | expr . '[' expr ']'
  425     | expr . '.' '[' expr ']'
  426     | expr . "?[" expr ']'
  427     | expr . '.' "?[" expr ']'
  428     | expr . "?." "name"
  429     | expr . '.' "?." "name"
  436     | expr . "??" expr
  437     | expr . '?' expr ':' expr
  440     | expr . "is" "type" '<' $@27 type_declaration_no_options '>' $@28
  441     | expr . "is" basic_type_declaration
  442     | expr . "is" "name"
  443     | expr . "as" "name"
  446     | expr . "as" "type" '<' $@29 type_declaration '>' $@30
  447     | expr . "as" basic_type_declaration
  448     | expr . '?' "as" "name"
  451     | expr . '?' "as" "type" '<' $@31 type_declaration '>' $@32
  452     | expr . '?' "as" basic_type_declaration
  460     | expr . "<|" expr
  461     | expr . "|>" expr
  462     | expr . "|>" basic_type_declaration
  476 expr_mtag: expr . '.' "$f" '(' expr ')'
  477          | expr . "?." "$f" '(' expr ')'
  478          | expr . '.' '.' "$f" '(' expr ')'
  479          | expr . '.' "?." "$f" '(' expr ')'
  480          | expr . "as" "$f" '(' expr ')'
  481          | expr . '?' "as" "$f" '(' expr ')'
  482          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 603
    "as"   shift, and go to state 604
    "<<"   shift, and go to state 605
    ">>"   shift, and go to state 606
    "++"   shift, and go to state 607
    "--"   shift, and go to state 608
    "<="   shift, and go to state 609
    ">="   shift, and go to state 610
    "=="   shift, and go to state 611
    "!="   shift, and go to state 612
    "->"   shift, and go to state 613
    "??"   shift, and go to state 614
    "?."   shift, and go to state 615
    "?["   shift, and go to state 616
    "<|"   shift, and go to state 617
    "|>"   shift, and go to state 618
    "<<<"  shift, and go to state 619
    ">>>"  shift, and go to state 620
    '&'    shift, and go to state 628
    '<'    shift, and go to state 629
    '>'    shift, and go to state 630
    '-'    shift, and go to state 631
    '+'    shift, and go to state 632
    '*'    shift, and go to state 633
    '/'    shift, and go to state 634
    '%'    shift, and go to state 635
    '.'    shift, and go to state 636
    '['    shift, and go to state 637

    $default  reduce using rule 414 (expr)


State 830

  356 expr_method_call: expr . "->" "name" '(' ')'
  357                 | expr . "->" "name" '(' expr_list ')'
  367 expr_field: expr . '.' "name"
  368           | expr . '.' '.' "name"
  369           | expr . '.' "name" '(' ')'
  370           | expr . '.' "name" '(' expr_list ')'
  371           | expr . '.' basic_type_declaration '(' ')'
  372           | expr . '.' basic_type_declaration '(' expr_list ')'
  375           | expr . '.' $@25 error $@26
  397 expr: expr . "<<" expr
  398     | expr . ">>" expr
  399     | expr . "<<<" expr
  400     | expr . ">>>" expr
  401     | expr . '+' expr
  402     | expr . '-' expr
  403     | expr . '*' expr
  404     | expr . '/' expr
  405     | expr . '%' expr
  406     | expr . '<' expr
  407     | expr . '>' expr
  408     | expr . "==" expr
  409     | expr . "!=" expr
  410     | expr . "<=" expr
  411     | expr . ">=" expr
  412     | expr . '&' expr
  412     | expr '&' expr .
  413     | expr . '|' expr
  414     | expr . '^' expr
  415     | expr . "&&" expr
  416     | expr . "||" expr
  417     | expr . "^^" expr
  418     | expr . ".." expr
  421     | expr . "++"
  422     | expr . "--"
  424     | expr . '[' expr ']'
  425     | expr . '.' '[' expr ']'
  426     | expr . "?[" expr ']'
  427     | expr . '.' "?[" expr ']'
  428     | expr . "?." "name"
  429     | expr . '.' "?." "name"
  436     | expr . "??" expr
  437     | expr . '?' expr ':' expr
  440     | expr . "is" "type" '<' $@27 type_declaration_no_options '>' $@28
  441     | expr . "is" basic_type_declaration
  442     | expr . "is" "name"
  443     | expr . "as" "name"
  446     | expr . "as" "type" '<' $@29 type_declaration '>' $@30
  447     | expr . "as" basic_type_declaration
  448     | expr . '?' "as" "name"
  451     | expr . '?' "as" "type" '<' $@31 type_declaration '>' $@32
  452     | expr . '?' "as" basic_type_declaration
  460     | expr . "<|" expr
  461     | expr . "|>" expr
  462     | expr . "|>" basic_type_declaration
  476 expr_mtag: expr . '.' "$f" '(' expr ')'
  477          | expr . "?." "$f" '(' expr ')'
  478          | expr . '.' '.' "$f" '(' expr ')'
  479          | expr . '.' "?." "$f" '(' expr ')'
  480          | expr . "as" "$f" '(' expr ')'
  481          | expr . '?' "as" "$f" '(' expr ')'
  482          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 603
    "as"   shift, and go to state 604
    "<<"   shift, and go to state 605
    ">>"   shift, and go to state 606
    "++"   shift, and go to state 607
    "--"   shift, and go to state 608
    "<="   shift, and go to state 609
    ">="   shift, and go to state 610
    "=="   shift, and go to state 611
    "!="   shift, and go to state 612
    "->"   shift, and go to state 613
    "??"   shift, and go to state 614
    "?."   shift, and go to state 615
    "?["   shift, and go to state 616
    "<|"   shift, and go to state 617
    "|>"   shift, and go to state 618
    "<<<"  shift, and go to state 619
    ">>>"  shift, and go to state 620
    '<'    shift, and go to state 629
    '>'    shift, and go to state 630
    '-'    shift, and go to state 631
    '+'    shift, and go to state 632
    '*'    shift, and go to state 633
    '/'    shift, and go to state 634
    '%'    shift, and go to state 635
    '.'    shift, and go to state 636
    '['    shift, and go to state 637

    $default  reduce using rule 412 (expr)


State 831

  356 expr_method_call: expr . "->" "name" '(' ')'
  357                 | expr . "->" "name" '(' expr_list ')'
  367 expr_field: expr . '.' "name"
  368           | expr . '.' '.' "name"
  369           | expr . '.' "name" '(' ')'
  370           | expr . '.' "name" '(' expr_list ')'
  371           | expr . '.' basic_type_declaration '(' ')'
  372           | expr . '.' basic_type_declaration '(' expr_list ')'
  375           | expr . '.' $@25 error $@26
  397 expr: expr . "<<" expr
  398     | expr . ">>" expr
  399     | expr . "<<<" expr
  400     | expr . ">>>" expr
  401     | expr . '+' expr
  402     | expr . '-' expr
  403     | expr . '*' expr
  404     | expr . '/' expr
  405     | expr . '%' expr
  406     | expr . '<' expr
  406     | expr '<' expr .
  407     | expr . '>' expr
  408     | expr . "==" expr
  409     | expr . "!=" expr
  410     | expr . "<=" expr
  411     | expr . ">=" expr
  412     | expr . '&' expr
  413     | expr . '|' expr
  414     | expr . '^' expr
  415     | expr . "&&" expr
  416     | expr . "||" expr
  417     | expr . "^^" expr
  418     | expr . ".." expr
  421     | expr . "++"
  422     | expr . "--"
  424     | expr . '[' expr ']'
  425     | expr . '.' '[' expr ']'
  426     | expr . "?[" expr ']'
  427     | expr . '.' "?[" expr ']'
  428     | expr . "?." "name"
  429     | expr . '.' "?." "name"
  436     | expr . "??" expr
  437     | expr . '?' expr ':' expr
  440     | expr . "is" "type" '<' $@27 type_declaration_no_options '>' $@28
  441     | expr . "is" basic_type_declaration
  442     | expr . "is" "name"
  443     | expr . "as" "name"
  446     | expr . "as" "type" '<' $@29 type_declaration '>' $@30
  447     | expr . "as" basic_type_declaration
  448     | expr . '?' "as" "name"
  451     | expr . '?' "as" "type" '<' $@31 type_declaration '>' $@32
  452     | expr . '?' "as" basic_type_declaration
  460     | expr . "<|" expr
  461     | expr . "|>" expr
  462     | expr . "|>" basic_type_declaration
  476 expr_mtag: expr . '.' "$f" '(' expr ')'
  477          | expr . "?." "$f" '(' expr ')'
  478          | expr . '.' '.' "$f" '(' expr ')'
  479          | expr . '.' "?." "$f" '(' expr ')'
  480          | expr . "as" "$f" '(' expr ')'
  481          | expr . '?' "as" "$f" '(' expr ')'
  482          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 603
    "as"   shift, and go to state 604
    "<<"   shift, and go to state 605
    ">>"   shift, and go to state 606
    "++"   shift, and go to state 607
    "--"   shift, and go to state 608
    "->"   shift, and go to state 613
    "??"   shift, and go to state 614
    "?."   shift, and go to state 615
    "?["   shift, and go to state 616
    "<|"   shift, and go to state 617
    "|>"   shift, and go to state 618
    "<<<"  shift, and go to state 619
    ">>>"  shift, and go to state 620
    '-'    shift, and go to state 631
    '+'    shift, and go to state 632
    '*'    shift, and go to state 633
    '/'    shift, and go to state 634
    '%'    shift, and go to state 635
    '.'    shift, and go to state 636
    '['    shift, and go to state 637

    $default  reduce using rule 406 (expr)


State 832

  356 expr_method_call: expr . "->" "name" '(' ')'
  357                 | expr . "->" "name" '(' expr_list ')'
  367 expr_field: expr . '.' "name"
  368           | expr . '.' '.' "name"
  369           | expr . '.' "name" '(' ')'
  370           | expr . '.' "name" '(' expr_list ')'
  371           | expr . '.' basic_type_declaration '(' ')'
  372           | expr . '.' basic_type_declaration '(' expr_list ')'
  375           | expr . '.' $@25 error $@26
  397 expr: expr . "<<" expr
  398     | expr . ">>" expr
  399     | expr . "<<<" expr
  400     | expr . ">>>" expr
  401     | expr . '+' expr
  402     | expr . '-' expr
  403     | expr . '*' expr
  404     | expr . '/' expr
  405     | expr . '%' expr
  406     | expr . '<' expr
  407     | expr . '>' expr
  407     | expr '>' expr .
  408     | expr . "==" expr
  409     | expr . "!=" expr
  410     | expr . "<=" expr
  411     | expr . ">=" expr
  412     | expr . '&' expr
  413     | expr . '|' expr
  414     | expr . '^' expr
  415     | expr . "&&" expr
  416     | expr . "||" expr
  417     | expr . "^^" expr
  418     | expr . ".." expr
  421     | expr . "++"
  422     | expr . "--"
  424     | expr . '[' expr ']'
  425     | expr . '.' '[' expr ']'
  426     | expr . "?[" expr ']'
  427     | expr . '.' "?[" expr ']'
  428     | expr . "?." "name"
  429     | expr . '.' "?." "name"
  436     | expr . "??" expr
  437     | expr . '?' expr ':' expr
  440     | expr . "is" "type" '<' $@27 type_declaration_no_options '>' $@28
  441     | expr . "is" basic_type_declaration
  442     | expr . "is" "name"
  443     | expr . "as" "name"
  446     | expr . "as" "type" '<' $@29 type_declaration '>' $@30
  447     | expr . "as" basic_type_declaration
  448     | expr . '?' "as" "name"
  451     | expr . '?' "as" "type" '<' $@31 type_declaration '>' $@32
  452     | expr . '?' "as" basic_type_declaration
  460     | expr . "<|" expr
  461     | expr . "|>" expr
  462     | expr . "|>" basic_type_declaration
  476 expr_mtag: expr . '.' "$f" '(' expr ')'
  477          | expr . "?." "$f" '(' expr ')'
  478          | expr . '.' '.' "$f" '(' expr ')'
  479          | expr . '.' "?." "$f" '(' expr ')'
  480          | expr . "as" "$f" '(' expr ')'
  481          | expr . '?' "as" "$f" '(' expr ')'
  482          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 603
    "as"   shift, and go to state 604
    "<<"   shift, and go to state 605
    ">>"   shift, and go to state 606
    "++"   shift, and go to state 607
    "--"   shift, and go to state 608
    "->"   shift, and go to state 613
    "??"   shift, and go to state 614
    "?."   shift, and go to state 615
    "?["   shift, and go to state 616
    "<|"   shift, and go to state 617
    "|>"   shift, and go to state 618
    "<<<"  shift, and go to state 619
    ">>>"  shift, and go to state 620
    '-'    shift, and go to state 631
    '+'    shift, and go to state 632
    '*'    shift, and go to state 633
    '/'    shift, and go to state 634
    '%'    shift, and go to state 635
    '.'    shift, and go to state 636
    '['    shift, and go to state 637

    $default  reduce using rule 407 (expr)


State 833

  356 expr_method_call: expr . "->" "name" '(' ')'
  357                 | expr . "->" "name" '(' expr_list ')'
  367 expr_field: expr . '.' "name"
  368           | expr . '.' '.' "name"
  369           | expr . '.' "name" '(' ')'
  370           | expr . '.' "name" '(' expr_list ')'
  371           | expr . '.' basic_type_declaration '(' ')'
  372           | expr . '.' basic_type_declaration '(' expr_list ')'
  375           | expr . '.' $@25 error $@26
  397 expr: expr . "<<" expr
  398     | expr . ">>" expr
  399     | expr . "<<<" expr
  400     | expr . ">>>" expr
  401     | expr . '+' expr
  402     | expr . '-' expr
  402     | expr '-' expr .
  403     | expr . '*' expr
  404     | expr . '/' expr
  405     | expr . '%' expr
  406     | expr . '<' expr
  407     | expr . '>' expr
  408     | expr . "==" expr
  409     | expr . "!=" expr
  410     | expr . "<=" expr
  411     | expr . ">=" expr
  412     | expr . '&' expr
  413     | expr . '|' expr
  414     | expr . '^' expr
  415     | expr . "&&" expr
  416     | expr . "||" expr
  417     | expr . "^^" expr
  418     | expr . ".." expr
  421     | expr . "++"
  422     | expr . "--"
  424     | expr . '[' expr ']'
  425     | expr . '.' '[' expr ']'
  426     | expr . "?[" expr ']'
  427     | expr . '.' "?[" expr ']'
  428     | expr . "?." "name"
  429     | expr . '.' "?." "name"
  436     | expr . "??" expr
  437     | expr . '?' expr ':' expr
  440     | expr . "is" "type" '<' $@27 type_declaration_no_options '>' $@28
  441     | expr . "is" basic_type_declaration
  442     | expr . "is" "name"
  443     | expr . "as" "name"
  446     | expr . "as" "type" '<' $@29 type_declaration '>' $@30
  447     | expr . "as" basic_type_declaration
  448     | expr . '?' "as" "name"
  451     | expr . '?' "as" "type" '<' $@31 type_declaration '>' $@32
  452     | expr . '?' "as" basic_type_declaration
  460     | expr . "<|" expr
  461     | expr . "|>" expr
  462     | expr . "|>" basic_type_declaration
  476 expr_mtag: expr . '.' "$f" '(' expr ')'
  477          | expr . "?." "$f" '(' expr ')'
  478          | expr . '.' '.' "$f" '(' expr ')'
  479          | expr . '.' "?." "$f" '(' expr ')'
  480          | expr . "as" "$f" '(' expr ')'
  481          | expr . '?' "as" "$f" '(' expr ')'
  482          | expr . "is" "$f" '(' expr ')'

    "is"  shift, and go to state 603
    "as"  shift, and go to state 604
    "++"  shift, and go to state 607
    "--"  shift, and go to state 608
    "->"  shift, and go to state 613
    "??"  shift, and go to state 614
    "?."  shift, and go to state 615
    "?["  shift, and go to state 616
    "<|"  shift, and go to state 617
    "|>"  shift, and go to state 618
    '*'   shift, and go to state 633
    '/'   shift, and go to state 634
    '%'   shift, and go to state 635
    '.'   shift, and go to state 636
    '['   shift, and go to state 637

    $default  reduce using rule 402 (expr)


State 834

  356 expr_method_call: expr . "->" "name" '(' ')'
  357                 | expr . "->" "name" '(' expr_list ')'
  367 expr_field: expr . '.' "name"
  368           | expr . '.' '.' "name"
  369           | expr . '.' "name" '(' ')'
  370           | expr . '.' "name" '(' expr_list ')'
  371           | expr . '.' basic_type_declaration '(' ')'
  372           | expr . '.' basic_type_declaration '(' expr_list ')'
  375           | expr . '.' $@25 error $@26
  397 expr: expr . "<<" expr
  398     | expr . ">>" expr
  399     | expr . "<<<" expr
  400     | expr . ">>>" expr
  401     | expr . '+' expr
  401     | expr '+' expr .
  402     | expr . '-' expr
  403     | expr . '*' expr
  404     | expr . '/' expr
  405     | expr . '%' expr
  406     | expr . '<' expr
  407     | expr . '>' expr
  408     | expr . "==" expr
  409     | expr . "!=" expr
  410     | expr . "<=" expr
  411     | expr . ">=" expr
  412     | expr . '&' expr
  413     | expr . '|' expr
  414     | expr . '^' expr
  415     | expr . "&&" expr
  416     | expr . "||" expr
  417     | expr . "^^" expr
  418     | expr . ".." expr
  421     | expr . "++"
  422     | expr . "--"
  424     | expr . '[' expr ']'
  425     | expr . '.' '[' expr ']'
  426     | expr . "?[" expr ']'
  427     | expr . '.' "?[" expr ']'
  428     | expr . "?." "name"
  429     | expr . '.' "?." "name"
  436     | expr . "??" expr
  437     | expr . '?' expr ':' expr
  440     | expr . "is" "type" '<' $@27 type_declaration_no_options '>' $@28
  441     | expr . "is" basic_type_declaration
  442     | expr . "is" "name"
  443     | expr . "as" "name"
  446     | expr . "as" "type" '<' $@29 type_declaration '>' $@30
  447     | expr . "as" basic_type_declaration
  448     | expr . '?' "as" "name"
  451     | expr . '?' "as" "type" '<' $@31 type_declaration '>' $@32
  452     | expr . '?' "as" basic_type_declaration
  460     | expr . "<|" expr
  461     | expr . "|>" expr
  462     | expr . "|>" basic_type_declaration
  476 expr_mtag: expr . '.' "$f" '(' expr ')'
  477          | expr . "?." "$f" '(' expr ')'
  478          | expr . '.' '.' "$f" '(' expr ')'
  479          | expr . '.' "?." "$f" '(' expr ')'
  480          | expr . "as" "$f" '(' expr ')'
  481          | expr . '?' "as" "$f" '(' expr ')'
  482          | expr . "is" "$f" '(' expr ')'

    "is"  shift, and go to state 603
    "as"  shift, and go to state 604
    "++"  shift, and go to state 607
    "--"  shift, and go to state 608
    "->"  shift, and go to state 613
    "??"  shift, and go to state 614
    "?."  shift, and go to state 615
    "?["  shift, and go to state 616
    "<|"  shift, and go to state 617
    "|>"  shift, and go to state 618
    '*'   shift, and go to state 633
    '/'   shift, and go to state 634
    '%'   shift, and go to state 635
    '.'   shift, and go to state 636
    '['   shift, and go to state 637

    $default  reduce using rule 401 (expr)


State 835

  356 expr_method_call: expr . "->" "name" '(' ')'
  357                 | expr . "->" "name" '(' expr_list ')'
  367 expr_field: expr . '.' "name"
  368           | expr . '.' '.' "name"
  369           | expr . '.' "name" '(' ')'
  370           | expr . '.' "name" '(' expr_list ')'
  371           | expr . '.' basic_type_declaration '(' ')'
  372           | expr . '.' basic_type_declaration '(' expr_list ')'
  375           | expr . '.' $@25 error $@26
  397 expr: expr . "<<" expr
  398     | expr . ">>" expr
  399     | expr . "<<<" expr
  400     | expr . ">>>" expr
  401     | expr . '+' expr
  402     | expr . '-' expr
  403     | expr . '*' expr
  403     | expr '*' expr .
  404     | expr . '/' expr
  405     | expr . '%' expr
  406     | expr . '<' expr
  407     | expr . '>' expr
  408     | expr . "==" expr
  409     | expr . "!=" expr
  410     | expr . "<=" expr
  411     | expr . ">=" expr
  412     | expr . '&' expr
  413     | expr . '|' expr
  414     | expr . '^' expr
  415     | expr . "&&" expr
  416     | expr . "||" expr
  417     | expr . "^^" expr
  418     | expr . ".." expr
  421     | expr . "++"
  422     | expr . "--"
  424     | expr . '[' expr ']'
  425     | expr . '.' '[' expr ']'
  426     | expr . "?[" expr ']'
  427     | expr . '.' "?[" expr ']'
  428     | expr . "?." "name"
  429     | expr . '.' "?." "name"
  436     | expr . "??" expr
  437     | expr . '?' expr ':' expr
  440     | expr . "is" "type" '<' $@27 type_declaration_no_options '>' $@28
  441     | expr . "is" basic_type_declaration
  442     | expr . "is" "name"
  443     | expr . "as" "name"
  446     | expr . "as" "type" '<' $@29 type_declaration '>' $@30
  447     | expr . "as" basic_type_declaration
  448     | expr . '?' "as" "name"
  451     | expr . '?' "as" "type" '<' $@31 type_declaration '>' $@32
  452     | expr . '?' "as" basic_type_declaration
  460     | expr . "<|" expr
  461     | expr . "|>" expr
  462     | expr . "|>" basic_type_declaration
  476 expr_mtag: expr . '.' "$f" '(' expr ')'
  477          | expr . "?." "$f" '(' expr ')'
  478          | expr . '.' '.' "$f" '(' expr ')'
  479          | expr . '.' "?." "$f" '(' expr ')'
  480          | expr . "as" "$f" '(' expr ')'
  481          | expr . '?' "as" "$f" '(' expr ')'
  482          | expr . "is" "$f" '(' expr ')'

    "is"  shift, and go to state 603
    "as"  shift, and go to state 604
    "++"  shift, and go to state 607
    "--"  shift, and go to state 608
    "->"  shift, and go to state 613
    "??"  shift, and go to state 614
    "?."  shift, and go to state 615
    "?["  shift, and go to state 616
    "<|"  shift, and go to state 617
    "|>"  shift, and go to state 618
    '.'   shift, and go to state 636
    '['   shift, and go to state 637

    $default  reduce using rule 403 (expr)


State 836

  356 expr_method_call: expr . "->" "name" '(' ')'
  357                 | expr . "->" "name" '(' expr_list ')'
  367 expr_field: expr . '.' "name"
  368           | expr . '.' '.' "name"
  369           | expr . '.' "name" '(' ')'
  370           | expr . '.' "name" '(' expr_list ')'
  371           | expr . '.' basic_type_declaration '(' ')'
  372           | expr . '.' basic_type_declaration '(' expr_list ')'
  375           | expr . '.' $@25 error $@26
  397 expr: expr . "<<" expr
  398     | expr . ">>" expr
  399     | expr . "<<<" expr
  400     | expr . ">>>" expr
  401     | expr . '+' expr
  402     | expr . '-' expr
  403     | expr . '*' expr
  404     | expr . '/' expr
  404     | expr '/' expr .
  405     | expr . '%' expr
  406     | expr . '<' expr
  407     | expr . '>' expr
  408     | expr . "==" expr
  409     | expr . "!=" expr
  410     | expr . "<=" expr
  411     | expr . ">=" expr
  412     | expr . '&' expr
  413     | expr . '|' expr
  414     | expr . '^' expr
  415     | expr . "&&" expr
  416     | expr . "||" expr
  417     | expr . "^^" expr
  418     | expr . ".." expr
  421     | expr . "++"
  422     | expr . "--"
  424     | expr . '[' expr ']'
  425     | expr . '.' '[' expr ']'
  426     | expr . "?[" expr ']'
  427     | expr . '.' "?[" expr ']'
  428     | expr . "?." "name"
  429     | expr . '.' "?." "name"
  436     | expr . "??" expr
  437     | expr . '?' expr ':' expr
  440     | expr . "is" "type" '<' $@27 type_declaration_no_options '>' $@28
  441     | expr . "is" basic_type_declaration
  442     | expr . "is" "name"
  443     | expr . "as" "name"
  446     | expr . "as" "type" '<' $@29 type_declaration '>' $@30
  447     | expr . "as" basic_type_declaration
  448     | expr . '?' "as" "name"
  451     | expr . '?' "as" "type" '<' $@31 type_declaration '>' $@32
  452     | expr . '?' "as" basic_type_declaration
  460     | expr . "<|" expr
  461     | expr . "|>" expr
  462     | expr . "|>" basic_type_declaration
  476 expr_mtag: expr . '.' "$f" '(' expr ')'
  477          | expr . "?." "$f" '(' expr ')'
  478          | expr . '.' '.' "$f" '(' expr ')'
  479          | expr . '.' "?." "$f" '(' expr ')'
  480          | expr . "as" "$f" '(' expr ')'
  481          | expr . '?' "as" "$f" '(' expr ')'
  482          | expr . "is" "$f" '(' expr ')'

    "is"  shift, and go to state 603
    "as"  shift, and go to state 604
    "++"  shift, and go to state 607
    "--"  shift, and go to state 608
    "->"  shift, and go to state 613
    "??"  shift, and go to state 614
    "?."  shift, and go to state 615
    "?["  shift, and go to state 616
    "<|"  shift, and go to state 617
    "|>"  shift, and go to state 618
    '.'   shift, and go to state 636
    '['   shift, and go to state 637

    $default  reduce using rule 404 (expr)


State 837

  356 expr_method_call: expr . "->" "name" '(' ')'
  357                 | expr . "->" "name" '(' expr_list ')'
  367 expr_field: expr . '.' "name"
  368           | expr . '.' '.' "name"
  369           | expr . '.' "name" '(' ')'
  370           | expr . '.' "name" '(' expr_list ')'
  371           | expr . '.' basic_type_declaration '(' ')'
  372           | expr . '.' basic_type_declaration '(' expr_list ')'
  375           | expr . '.' $@25 error $@26
  397 expr: expr . "<<" expr
  398     | expr . ">>" expr
  399     | expr . "<<<" expr
  400     | expr . ">>>" expr
  401     | expr . '+' expr
  402     | expr . '-' expr
  403     | expr . '*' expr
  404     | expr . '/' expr
  405     | expr . '%' expr
  405     | expr '%' expr .
  406     | expr . '<' expr
  407     | expr . '>' expr
  408     | expr . "==" expr
  409     | expr . "!=" expr
  410     | expr . "<=" expr
  411     | expr . ">=" expr
  412     | expr . '&' expr
  413     | expr . '|' expr
  414     | expr . '^' expr
  415     | expr . "&&" expr
  416     | expr . "||" expr
  417     | expr . "^^" expr
  418     | expr . ".." expr
  421     | expr . "++"
  422     | expr . "--"
  424     | expr . '[' expr ']'
  425     | expr . '.' '[' expr ']'
  426     | expr . "?[" expr ']'
  427     | expr . '.' "?[" expr ']'
  428     | expr . "?." "name"
  429     | expr . '.' "?." "name"
  436     | expr . "??" expr
  437     | expr . '?' expr ':' expr
  440     | expr . "is" "type" '<' $@27 type_declaration_no_options '>' $@28
  441     | expr . "is" basic_type_declaration
  442     | expr . "is" "name"
  443     | expr . "as" "name"
  446     | expr . "as" "type" '<' $@29 type_declaration '>' $@30
  447     | expr . "as" basic_type_declaration
  448     | expr . '?' "as" "name"
  451     | expr . '?' "as" "type" '<' $@31 type_declaration '>' $@32
  452     | expr . '?' "as" basic_type_declaration
  460     | expr . "<|" expr
  461     | expr . "|>" expr
  462     | expr . "|>" basic_type_declaration
  476 expr_mtag: expr . '.' "$f" '(' expr ')'
  477          | expr . "?." "$f" '(' expr ')'
  478          | expr . '.' '.' "$f" '(' expr ')'
  479          | expr . '.' "?." "$f" '(' expr ')'
  480          | expr . "as" "$f" '(' expr ')'
  481          | expr . '?' "as" "$f" '(' expr ')'
  482          | expr . "is" "$f" '(' expr ')'

    "is"  shift, and go to state 603
    "as"  shift, and go to state 604
    "++"  shift, and go to state 607
    "--"  shift, and go to state 608
    "->"  shift, and go to state 613
    "??"  shift, and go to state 614
    "?."  shift, and go to state 615
    "?["  shift, and go to state 616
    "<|"  shift, and go to state 617
    "|>"  shift, and go to state 618
    '.'   shift, and go to state 636
    '['   shift, and go to state 637

    $default  reduce using rule 405 (expr)


State 838

  429 expr: expr '.' "?." . "name"
  479 expr_mtag: expr '.' "?." . "$f" '(' expr ')'

    "$f"    shift, and go to state 1030
    "name"  shift, and go to state 1031


State 839

  427 expr: expr '.' "?[" . expr ']'

    "struct"                          shift, and go to state 414
    "class"                           shift, and go to state 415
    "true"                            shift, and go to state 416
    "false"                           shift, and go to state 417
    "new"                             shift, and go to state 418
    "typeinfo"                        shift, and go to state 419
    "type"                            shift, and go to state 420
    "array"                           shift, and go to state 421
    "null"                            shift, and go to state 422
    "table"                           shift, and go to state 423
    "deref"                           shift, and go to state 424
    "cast"                            shift, and go to state 425
    "upcast"                          shift, and go to state 426
    "addr"                            shift, and go to state 427
    "reinterpret"                     shift, and go to state 428
    "unsafe"                          shift, and go to state 429
    "fixed_array"                     shift, and go to state 430
    "default"                         shift, and go to state 431
    "bool"                            shift, and go to state 228
    "void"                            shift, and go to state 229
    "string"                          shift, and go to state 230
    "int"                             shift, and go to state 232
    "int2"                            shift, and go to state 233
    "int3"                            shift, and go to state 234
    "int4"                            shift, and go to state 235
    "uint"                            shift, and go to state 236
    "bitfield"                        shift, and go to state 432
    "uint2"                           shift, and go to state 238
    "uint3"                           shift, and go to state 239
    "uint4"                           shift, and go to state 240
    "float"                           shift, and go to state 241
    "float2"                          shift, and go to state 242
    "float3"                          shift, and go to state 243
    "float4"                          shift, and go to state 244
    "range"                           shift, and go to state 245
    "urange"                          shift, and go to state 246
    "range64"                         shift, and go to state 247
    "urange64"                        shift, and go to state 248
    "int64"                           shift, and go to state 250
    "uint64"                          shift, and go to state 251
    "double"                          shift, and go to state 252
    "int8"                            shift, and go to state 255
    "uint8"                           shift, and go to state 256
    "int16"                           shift, and go to state 257
    "uint16"                          shift, and go to state 258
    "tuple"                           shift, and go to state 433
    "variant"                         shift, and go to state 434
    "generator"                       shift, and go to state 435
    "++"                              shift, and go to state 436
    "--"                              shift, and go to state 437
    "::"                              shift, and go to state 55
    "$$"                              shift, and go to state 438
    "$i"                              shift, and go to state 439
    "$v"                              shift, and go to state 440
    "$b"                              shift, and go to state 441
    "$a"                              shift, and go to state 442
    "$c"                              shift, and go to state 443
    "..."                             shift, and go to state 444
    "integer constant"                shift, and go to state 445
    "long integer constant"           shift, and go to state 446
    "unsigned integer constant"       shift, and go to state 447
    "unsigned long integer constant"  shift, and go to state 448
    "unsigned int8 constant"          shift, and go to state 449
    "floating point constant"         shift, and go to state 450
    "double constant"                 shift, and go to state 451
    "name"                            shift, and go to state 56
    "start of the string"             shift, and go to state 452
    '-'                               shift, and go to state 453
    '+'                               shift, and go to state 454
    '*'                               shift, and go to state 455
    '%'                               shift, and go to state 13
    '~'                               shift, and go to state 456
    '!'                               shift, and go to state 457
    '['                               shift, and go to state 458
    '('                               shift, and go to state 459
    '$'                               shift, and go to state 460
    '@'                               shift, and go to state 461
    '{'                               shift, and go to state 462

    string_builder          go to state 463
    expr_reader             go to state 464
    expr_call_pipe          go to state 465
    name_in_namespace       go to state 466
    expr_new                go to state 467
    expr_cast               go to state 468
    expr_type_decl          go to state 469
    expr_type_info          go to state 470
    block_or_lambda         go to state 471
    expr_full_block         go to state 472
    expr_numeric_const      go to state 473
    expr_named_call         go to state 474
    expr_method_call        go to state 475
    func_addr_expr          go to state 476
    expr_field              go to state 477
    expr_call               go to state 478
    expr                    go to state 1032
    expr_generator          go to state 480
    expr_mtag               go to state 481
    basic_type_declaration  go to state 482
    make_decl               go to state 483
    make_struct_decl        go to state 484
    make_tuple_call         go to state 485
    make_dim_decl           go to state 486
    make_table_decl         go to state 487
    array_comprehension     go to state 488


State 840

  476 expr_mtag: expr '.' "$f" . '(' expr ')'

    '('  shift, and go to state 1033


State 841

  367 expr_field: expr '.' "name" .
  369           | expr '.' "name" . '(' ')'
  370           | expr '.' "name" . '(' expr_list ')'

    '('  shift, and go to state 1034

    $default  reduce using rule 367 (expr_field)


State 842

  368 expr_field: expr '.' '.' . "name"
  478 expr_mtag: expr '.' '.' . "$f" '(' expr ')'

    "$f"    shift, and go to state 1035
    "name"  shift, and go to state 1036


State 843

  425 expr: expr '.' '[' . expr ']'

    "struct"                          shift, and go to state 414
    "class"                           shift, and go to state 415
    "true"                            shift, and go to state 416
    "false"                           shift, and go to state 417
    "new"                             shift, and go to state 418
    "typeinfo"                        shift, and go to state 419
    "type"                            shift, and go to state 420
    "array"                           shift, and go to state 421
    "null"                            shift, and go to state 422
    "table"                           shift, and go to state 423
    "deref"                           shift, and go to state 424
    "cast"                            shift, and go to state 425
    "upcast"                          shift, and go to state 426
    "addr"                            shift, and go to state 427
    "reinterpret"                     shift, and go to state 428
    "unsafe"                          shift, and go to state 429
    "fixed_array"                     shift, and go to state 430
    "default"                         shift, and go to state 431
    "bool"                            shift, and go to state 228
    "void"                            shift, and go to state 229
    "string"                          shift, and go to state 230
    "int"                             shift, and go to state 232
    "int2"                            shift, and go to state 233
    "int3"                            shift, and go to state 234
    "int4"                            shift, and go to state 235
    "uint"                            shift, and go to state 236
    "bitfield"                        shift, and go to state 432
    "uint2"                           shift, and go to state 238
    "uint3"                           shift, and go to state 239
    "uint4"                           shift, and go to state 240
    "float"                           shift, and go to state 241
    "float2"                          shift, and go to state 242
    "float3"                          shift, and go to state 243
    "float4"                          shift, and go to state 244
    "range"                           shift, and go to state 245
    "urange"                          shift, and go to state 246
    "range64"                         shift, and go to state 247
    "urange64"                        shift, and go to state 248
    "int64"                           shift, and go to state 250
    "uint64"                          shift, and go to state 251
    "double"                          shift, and go to state 252
    "int8"                            shift, and go to state 255
    "uint8"                           shift, and go to state 256
    "int16"                           shift, and go to state 257
    "uint16"                          shift, and go to state 258
    "tuple"                           shift, and go to state 433
    "variant"                         shift, and go to state 434
    "generator"                       shift, and go to state 435
    "++"                              shift, and go to state 436
    "--"                              shift, and go to state 437
    "::"                              shift, and go to state 55
    "$$"                              shift, and go to state 438
    "$i"                              shift, and go to state 439
    "$v"                              shift, and go to state 440
    "$b"                              shift, and go to state 441
    "$a"                              shift, and go to state 442
    "$c"                              shift, and go to state 443
    "..."                             shift, and go to state 444
    "integer constant"                shift, and go to state 445
    "long integer constant"           shift, and go to state 446
    "unsigned integer constant"       shift, and go to state 447
    "unsigned long integer constant"  shift, and go to state 448
    "unsigned int8 constant"          shift, and go to state 449
    "floating point constant"         shift, and go to state 450
    "double constant"                 shift, and go to state 451
    "name"                            shift, and go to state 56
    "start of the string"             shift, and go to state 452
    '-'                               shift, and go to state 453
    '+'                               shift, and go to state 454
    '*'                               shift, and go to state 455
    '%'                               shift, and go to state 13
    '~'                               shift, and go to state 456
    '!'                               shift, and go to state 457
    '['                               shift, and go to state 458
    '('                               shift, and go to state 459
    '$'                               shift, and go to state 460
    '@'                               shift, and go to state 461
    '{'                               shift, and go to state 462

    string_builder          go to state 463
    expr_reader             go to state 464
    expr_call_pipe          go to state 465
    name_in_namespace       go to state 466
    expr_new                go to state 467
    expr_cast               go to state 468
    expr_type_decl          go to state 469
    expr_type_info          go to state 470
    block_or_lambda         go to state 471
    expr_full_block         go to state 472
    expr_numeric_const      go to state 473
    expr_named_call         go to state 474
    expr_method_call        go to state 475
    func_addr_expr          go to state 476
    expr_field              go to state 477
    expr_call               go to state 478
    expr                    go to state 1037
    expr_generator          go to state 480
    expr_mtag               go to state 481
    basic_type_declaration  go to state 482
    make_decl               go to state 483
    make_struct_decl        go to state 484
    make_tuple_call         go to state 485
    make_dim_decl           go to state 486
    make_table_decl         go to state 487
    array_comprehension     go to state 488


State 844

  375 expr_field: expr '.' $@25 . error $@26

    error  shift, and go to state 1038


State 845

  371 expr_field: expr '.' basic_type_declaration . '(' ')'
  372           | expr '.' basic_type_declaration . '(' expr_list ')'

    '('  shift, and go to state 1039


State 846

  356 expr_method_call: expr . "->" "name" '(' ')'
  357                 | expr . "->" "name" '(' expr_list ')'
  367 expr_field: expr . '.' "name"
  368           | expr . '.' '.' "name"
  369           | expr . '.' "name" '(' ')'
  370           | expr . '.' "name" '(' expr_list ')'
  371           | expr . '.' basic_type_declaration '(' ')'
  372           | expr . '.' basic_type_declaration '(' expr_list ')'
  375           | expr . '.' $@25 error $@26
  397 expr: expr . "<<" expr
  398     | expr . ">>" expr
  399     | expr . "<<<" expr
  400     | expr . ">>>" expr
  401     | expr . '+' expr
  402     | expr . '-' expr
  403     | expr . '*' expr
  404     | expr . '/' expr
  405     | expr . '%' expr
  406     | expr . '<' expr
  407     | expr . '>' expr
  408     | expr . "==" expr
  409     | expr . "!=" expr
  410     | expr . "<=" expr
  411     | expr . ">=" expr
  412     | expr . '&' expr
  413     | expr . '|' expr
  414     | expr . '^' expr
  415     | expr . "&&" expr
  416     | expr . "||" expr
  417     | expr . "^^" expr
  418     | expr . ".." expr
  421     | expr . "++"
  422     | expr . "--"
  424     | expr . '[' expr ']'
  424     | expr '[' expr . ']'
  425     | expr . '.' '[' expr ']'
  426     | expr . "?[" expr ']'
  427     | expr . '.' "?[" expr ']'
  428     | expr . "?." "name"
  429     | expr . '.' "?." "name"
  436     | expr . "??" expr
  437     | expr . '?' expr ':' expr
  440     | expr . "is" "type" '<' $@27 type_declaration_no_options '>' $@28
  441     | expr . "is" basic_type_declaration
  442     | expr . "is" "name"
  443     | expr . "as" "name"
  446     | expr . "as" "type" '<' $@29 type_declaration '>' $@30
  447     | expr . "as" basic_type_declaration
  448     | expr . '?' "as" "name"
  451     | expr . '?' "as" "type" '<' $@31 type_declaration '>' $@32
  452     | expr . '?' "as" basic_type_declaration
  460     | expr . "<|" expr
  461     | expr . "|>" expr
  462     | expr . "|>" basic_type_declaration
  476 expr_mtag: expr . '.' "$f" '(' expr ')'
  477          | expr . "?." "$f" '(' expr ')'
  478          | expr . '.' '.' "$f" '(' expr ')'
  479          | expr . '.' "?." "$f" '(' expr ')'
  480          | expr . "as" "$f" '(' expr ')'
  481          | expr . '?' "as" "$f" '(' expr ')'
  482          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 603
    "as"   shift, and go to state 604
    "<<"   shift, and go to state 605
    ">>"   shift, and go to state 606
    "++"   shift, and go to state 607
    "--"   shift, and go to state 608
    "<="   shift, and go to state 609
    ">="   shift, and go to state 610
    "=="   shift, and go to state 611
    "!="   shift, and go to state 612
    "->"   shift, and go to state 613
    "??"   shift, and go to state 614
    "?."   shift, and go to state 615
    "?["   shift, and go to state 616
    "<|"   shift, and go to state 617
    "|>"   shift, and go to state 618
    "<<<"  shift, and go to state 619
    ">>>"  shift, and go to state 620
    "&&"   shift, and go to state 621
    "||"   shift, and go to state 622
    "^^"   shift, and go to state 623
    ".."   shift, and go to state 624
    '?'    shift, and go to state 625
    '|'    shift, and go to state 626
    '^'    shift, and go to state 627
    '&'    shift, and go to state 628
    '<'    shift, and go to state 629
    '>'    shift, and go to state 630
    '-'    shift, and go to state 631
    '+'    shift, and go to state 632
    '*'    shift, and go to state 633
    '/'    shift, and go to state 634
    '%'    shift, and go to state 635
    '.'    shift, and go to state 636
    '['    shift, and go to state 637
    ']'    shift, and go to state 1040


State 847

  381 expr_call: basic_type_declaration '(' ')' .

    $default  reduce using rule 381 (expr_call)


State 848

  309 expr_list: expr_list . ',' expr
  382 expr_call: basic_type_declaration '(' expr_list . ')'

    ','  shift, and go to state 1041
    ')'  shift, and go to state 1042


State 849

  698 type_declaration_no_options_no_dim: "iterator" '<' $@55 type_declaration '>' . $@56

    $default  reduce using rule 697 ($@56)

    $@56  go to state 1043


State 850

  688 type_declaration_no_options_no_dim: "smart_ptr" '<' $@49 type_declaration '>' . $@50

    $default  reduce using rule 687 ($@50)

    $@50  go to state 1044


State 851

  652 bitfield_type_declaration: "bitfield" '<' $@44 bitfield_bits '>' . $@45

    $default  reduce using rule 651 ($@45)

    $@45  go to state 1045


State 852

  646 bitfield_bits: bitfield_bits ';' . "name"

    "name"  shift, and go to state 1046


State 853

  702 type_declaration_no_options_no_dim: "block" '<' $@57 type_declaration '>' . $@58

    $default  reduce using rule 701 ($@58)

    $@58  go to state 1047


State 854

  705 type_declaration_no_options_no_dim: "block" '<' $@59 optional_function_argument_list optional_function_type . '>' $@60

    '>'  shift, and go to state 1048


State 855

  709 type_declaration_no_options_no_dim: "function" '<' $@61 type_declaration '>' . $@62

    $default  reduce using rule 708 ($@62)

    $@62  go to state 1049


State 856

  712 type_declaration_no_options_no_dim: "function" '<' $@63 optional_function_argument_list optional_function_type . '>' $@64

    '>'  shift, and go to state 1050


State 857

  716 type_declaration_no_options_no_dim: "lambda" '<' $@65 type_declaration '>' . $@66

    $default  reduce using rule 715 ($@66)

    $@66  go to state 1051


State 858

  719 type_declaration_no_options_no_dim: "lambda" '<' $@67 optional_function_argument_list optional_function_type . '>' $@68

    '>'  shift, and go to state 1052


State 859

  509 tuple_type: "name" ':' . type_declaration

    "type"       shift, and go to state 222
    "array"      shift, and go to state 223
    "table"      shift, and go to state 224
    "typedecl"   shift, and go to state 225
    "iterator"   shift, and go to state 226
    "smart_ptr"  shift, and go to state 227
    "bool"       shift, and go to state 228
    "void"       shift, and go to state 229
    "string"     shift, and go to state 230
    "auto"       shift, and go to state 231
    "int"        shift, and go to state 232
    "int2"       shift, and go to state 233
    "int3"       shift, and go to state 234
    "int4"       shift, and go to state 235
    "uint"       shift, and go to state 236
    "bitfield"   shift, and go to state 237
    "uint2"      shift, and go to state 238
    "uint3"      shift, and go to state 239
    "uint4"      shift, and go to state 240
    "float"      shift, and go to state 241
    "float2"     shift, and go to state 242
    "float3"     shift, and go to state 243
    "float4"     shift, and go to state 244
    "range"      shift, and go to state 245
    "urange"     shift, and go to state 246
    "range64"    shift, and go to state 247
    "urange64"   shift, and go to state 248
    "block"      shift, and go to state 249
    "int64"      shift, and go to state 250
    "uint64"     shift, and go to state 251
    "double"     shift, and go to state 252
    "function"   shift, and go to state 253
    "lambda"     shift, and go to state 254
    "int8"       shift, and go to state 255
    "uint8"      shift, and go to state 256
    "int16"      shift, and go to state 257
    "uint16"     shift, and go to state 258
    "tuple"      shift, and go to state 259
    "variant"    shift, and go to state 260
    "::"         shift, and go to state 55
    "$t"         shift, and go to state 261
    "name"       shift, and go to state 56
    '$'          shift, and go to state 262

    name_in_namespace                   go to state 263
    basic_type_declaration              go to state 264
    structure_type_declaration          go to state 265
    auto_type_declaration               go to state 266
    bitfield_type_declaration           go to state 267
    type_declaration_no_options         go to state 268
    type_declaration_no_options_no_dim  go to state 269
    type_declaration                    go to state 1053


State 860

  722 type_declaration_no_options_no_dim: "tuple" '<' $@69 tuple_type_list '>' . $@70

    $default  reduce using rule 721 ($@70)

    $@70  go to state 1054


State 861

  511 tuple_type_list: tuple_type_list c_or_s . tuple_type

    "type"       shift, and go to state 222
    "array"      shift, and go to state 223
    "table"      shift, and go to state 224
    "typedecl"   shift, and go to state 225
    "iterator"   shift, and go to state 226
    "smart_ptr"  shift, and go to state 227
    "bool"       shift, and go to state 228
    "void"       shift, and go to state 229
    "string"     shift, and go to state 230
    "auto"       shift, and go to state 231
    "int"        shift, and go to state 232
    "int2"       shift, and go to state 233
    "int3"       shift, and go to state 234
    "int4"       shift, and go to state 235
    "uint"       shift, and go to state 236
    "bitfield"   shift, and go to state 237
    "uint2"      shift, and go to state 238
    "uint3"      shift, and go to state 239
    "uint4"      shift, and go to state 240
    "float"      shift, and go to state 241
    "float2"     shift, and go to state 242
    "float3"     shift, and go to state 243
    "float4"     shift, and go to state 244
    "range"      shift, and go to state 245
    "urange"     shift, and go to state 246
    "range64"    shift, and go to state 247
    "urange64"   shift, and go to state 248
    "block"      shift, and go to state 249
    "int64"      shift, and go to state 250
    "uint64"     shift, and go to state 251
    "double"     shift, and go to state 252
    "function"   shift, and go to state 253
    "lambda"     shift, and go to state 254
    "int8"       shift, and go to state 255
    "uint8"      shift, and go to state 256
    "int16"      shift, and go to state 257
    "uint16"     shift, and go to state 258
    "tuple"      shift, and go to state 259
    "variant"    shift, and go to state 260
    "::"         shift, and go to state 55
    "$t"         shift, and go to state 261
    "name"       shift, and go to state 651
    '$'          shift, and go to state 262

    name_in_namespace                   go to state 263
    tuple_type                          go to state 1055
    basic_type_declaration              go to state 264
    structure_type_declaration          go to state 265
    auto_type_declaration               go to state 266
    bitfield_type_declaration           go to state 267
    type_declaration_no_options         go to state 268
    type_declaration_no_options_no_dim  go to state 269
    type_declaration                    go to state 654


State 862

  515 variant_type: "name" ':' . type_declaration

    "type"       shift, and go to state 222
    "array"      shift, and go to state 223
    "table"      shift, and go to state 224
    "typedecl"   shift, and go to state 225
    "iterator"   shift, and go to state 226
    "smart_ptr"  shift, and go to state 227
    "bool"       shift, and go to state 228
    "void"       shift, and go to state 229
    "string"     shift, and go to state 230
    "auto"       shift, and go to state 231
    "int"        shift, and go to state 232
    "int2"       shift, and go to state 233
    "int3"       shift, and go to state 234
    "int4"       shift, and go to state 235
    "uint"       shift, and go to state 236
    "bitfield"   shift, and go to state 237
    "uint2"      shift, and go to state 238
    "uint3"      shift, and go to state 239
    "uint4"      shift, and go to state 240
    "float"      shift, and go to state 241
    "float2"     shift, and go to state 242
    "float3"     shift, and go to state 243
    "float4"     shift, and go to state 244
    "range"      shift, and go to state 245
    "urange"     shift, and go to state 246
    "range64"    shift, and go to state 247
    "urange64"   shift, and go to state 248
    "block"      shift, and go to state 249
    "int64"      shift, and go to state 250
    "uint64"     shift, and go to state 251
    "double"     shift, and go to state 252
    "function"   shift, and go to state 253
    "lambda"     shift, and go to state 254
    "int8"       shift, and go to state 255
    "uint8"      shift, and go to state 256
    "int16"      shift, and go to state 257
    "uint16"     shift, and go to state 258
    "tuple"      shift, and go to state 259
    "variant"    shift, and go to state 260
    "::"         shift, and go to state 55
    "$t"         shift, and go to state 261
    "name"       shift, and go to state 56
    '$'          shift, and go to state 262

    name_in_namespace                   go to state 263
    basic_type_declaration              go to state 264
    structure_type_declaration          go to state 265
    auto_type_declaration               go to state 266
    bitfield_type_declaration           go to state 267
    type_declaration_no_options         go to state 268
    type_declaration_no_options_no_dim  go to state 269
    type_declaration                    go to state 1056


State 863

  725 type_declaration_no_options_no_dim: "variant" '<' $@71 variant_type_list '>' . $@72

    $default  reduce using rule 724 ($@72)

    $@72  go to state 1057


State 864

  517 variant_type_list: variant_type_list c_or_s . variant_type

    "name"  shift, and go to state 655

    variant_type  go to state 1058


State 865

  255 type_declaration_no_options_list: type_declaration_no_options_list . c_or_s type_declaration
  673 type_declaration_no_options_no_dim: '$' name_in_namespace '<' $@48 type_declaration_no_options_list . '>' '(' optional_expr_list ')'

    ','  shift, and go to state 732
    '>'  shift, and go to state 1059
    ';'  shift, and go to state 733

    c_or_s  go to state 1060


State 866

  254 type_declaration_no_options_list: type_declaration .
  727 type_declaration: type_declaration . '|' type_declaration_no_options
  728                 | type_declaration . '|' '#'

    '|'  shift, and go to state 372

    $default  reduce using rule 254 (type_declaration_no_options_list)


State 867

  671 type_declaration_no_options_no_dim: '$' name_in_namespace '(' optional_expr_list ')' .

    $default  reduce using rule 671 (type_declaration_no_options_no_dim)


State 868

  251 optional_expr_list: expr_list optional_comma .

    $default  reduce using rule 251 (optional_expr_list)


State 869

  659 dim_list: dim_list '[' expr ']' .

    $default  reduce using rule 659 (dim_list)


State 870

  564 commas: commas . ','
  581 optional_commas: commas .
  649 bitfield_alias_bits: bitfield_alias_bits commas . "name"

    "name"  shift, and go to state 1061
    ','     shift, and go to state 271

    $default  reduce using rule 581 (optional_commas)


State 871

  743 bitfield_alias_declaration: "bitfield" $@81 optional_public_or_private_alias "name" optional_commas $@82 '{' $@83 bitfield_alias_bits optional_commas . $@84 '}'

    $default  reduce using rule 742 ($@84)

    $@84  go to state 1062


State 872

   70 semis: semis . ';'
   72 optional_semis: semis .
  514 tuple_alias_type_list: tuple_alias_type_list semis . tuple_type

    "type"       shift, and go to state 222
    "array"      shift, and go to state 223
    "table"      shift, and go to state 224
    "typedecl"   shift, and go to state 225
    "iterator"   shift, and go to state 226
    "smart_ptr"  shift, and go to state 227
    "bool"       shift, and go to state 228
    "void"       shift, and go to state 229
    "string"     shift, and go to state 230
    "auto"       shift, and go to state 231
    "int"        shift, and go to state 232
    "int2"       shift, and go to state 233
    "int3"       shift, and go to state 234
    "int4"       shift, and go to state 235
    "uint"       shift, and go to state 236
    "bitfield"   shift, and go to state 237
    "uint2"      shift, and go to state 238
    "uint3"      shift, and go to state 239
    "uint4"      shift, and go to state 240
    "float"      shift, and go to state 241
    "float2"     shift, and go to state 242
    "float3"     shift, and go to state 243
    "float4"     shift, and go to state 244
    "range"      shift, and go to state 245
    "urange"     shift, and go to state 246
    "range64"    shift, and go to state 247
    "urange64"   shift, and go to state 248
    "block"      shift, and go to state 249
    "int64"      shift, and go to state 250
    "uint64"     shift, and go to state 251
    "double"     shift, and go to state 252
    "function"   shift, and go to state 253
    "lambda"     shift, and go to state 254
    "int8"       shift, and go to state 255
    "uint8"      shift, and go to state 256
    "int16"      shift, and go to state 257
    "uint16"     shift, and go to state 258
    "tuple"      shift, and go to state 259
    "variant"    shift, and go to state 260
    "::"         shift, and go to state 55
    "$t"         shift, and go to state 261
    "name"       shift, and go to state 651
    '$'          shift, and go to state 262
    ';'          shift, and go to state 273

    $default  reduce using rule 72 (optional_semis)

    name_in_namespace                   go to state 263
    tuple_type                          go to state 1063
    basic_type_declaration              go to state 264
    structure_type_declaration          go to state 265
    auto_type_declaration               go to state 266
    bitfield_type_declaration           go to state 267
    type_declaration_no_options         go to state 268
    type_declaration_no_options_no_dim  go to state 269
    type_declaration                    go to state 654


State 873

  733 tuple_alias_declaration: "tuple" $@73 optional_public_or_private_alias "name" optional_semis $@74 '{' $@75 tuple_alias_type_list optional_semis . $@76 '}'

    $default  reduce using rule 732 ($@76)

    $@76  go to state 1064


State 874

   70 semis: semis . ';'
   72 optional_semis: semis .
  520 variant_alias_type_list: variant_alias_type_list semis . variant_type

    "name"  shift, and go to state 655
    ';'     shift, and go to state 273

    $default  reduce using rule 72 (optional_semis)

    variant_type  go to state 1065


State 875

  738 variant_alias_declaration: "variant" $@77 optional_public_or_private_alias "name" optional_semis $@78 '{' $@79 variant_alias_type_list optional_semis . $@80 '}'

    $default  reduce using rule 737 ($@80)

    $@80  go to state 1066


State 876

  505 function_argument_declaration: "$a" '(' expr ')' .

    $default  reduce using rule 505 (function_argument_declaration)


State 877

  602 variable_name_with_pos_list: "$i" '(' . expr ')'

    "struct"                          shift, and go to state 414
    "class"                           shift, and go to state 415
    "true"                            shift, and go to state 416
    "false"                           shift, and go to state 417
    "new"                             shift, and go to state 418
    "typeinfo"                        shift, and go to state 419
    "type"                            shift, and go to state 420
    "array"                           shift, and go to state 421
    "null"                            shift, and go to state 422
    "table"                           shift, and go to state 423
    "deref"                           shift, and go to state 424
    "cast"                            shift, and go to state 425
    "upcast"                          shift, and go to state 426
    "addr"                            shift, and go to state 427
    "reinterpret"                     shift, and go to state 428
    "unsafe"                          shift, and go to state 429
    "fixed_array"                     shift, and go to state 430
    "default"                         shift, and go to state 431
    "bool"                            shift, and go to state 228
    "void"                            shift, and go to state 229
    "string"                          shift, and go to state 230
    "int"                             shift, and go to state 232
    "int2"                            shift, and go to state 233
    "int3"                            shift, and go to state 234
    "int4"                            shift, and go to state 235
    "uint"                            shift, and go to state 236
    "bitfield"                        shift, and go to state 432
    "uint2"                           shift, and go to state 238
    "uint3"                           shift, and go to state 239
    "uint4"                           shift, and go to state 240
    "float"                           shift, and go to state 241
    "float2"                          shift, and go to state 242
    "float3"                          shift, and go to state 243
    "float4"                          shift, and go to state 244
    "range"                           shift, and go to state 245
    "urange"                          shift, and go to state 246
    "range64"                         shift, and go to state 247
    "urange64"                        shift, and go to state 248
    "int64"                           shift, and go to state 250
    "uint64"                          shift, and go to state 251
    "double"                          shift, and go to state 252
    "int8"                            shift, and go to state 255
    "uint8"                           shift, and go to state 256
    "int16"                           shift, and go to state 257
    "uint16"                          shift, and go to state 258
    "tuple"                           shift, and go to state 433
    "variant"                         shift, and go to state 434
    "generator"                       shift, and go to state 435
    "++"                              shift, and go to state 436
    "--"                              shift, and go to state 437
    "::"                              shift, and go to state 55
    "$$"                              shift, and go to state 438
    "$i"                              shift, and go to state 439
    "$v"                              shift, and go to state 440
    "$b"                              shift, and go to state 441
    "$a"                              shift, and go to state 442
    "$c"                              shift, and go to state 443
    "..."                             shift, and go to state 444
    "integer constant"                shift, and go to state 445
    "long integer constant"           shift, and go to state 446
    "unsigned integer constant"       shift, and go to state 447
    "unsigned long integer constant"  shift, and go to state 448
    "unsigned int8 constant"          shift, and go to state 449
    "floating point constant"         shift, and go to state 450
    "double constant"                 shift, and go to state 451
    "name"                            shift, and go to state 56
    "start of the string"             shift, and go to state 452
    '-'                               shift, and go to state 453
    '+'                               shift, and go to state 454
    '*'                               shift, and go to state 455
    '%'                               shift, and go to state 13
    '~'                               shift, and go to state 456
    '!'                               shift, and go to state 457
    '['                               shift, and go to state 458
    '('                               shift, and go to state 459
    '$'                               shift, and go to state 460
    '@'                               shift, and go to state 461
    '{'                               shift, and go to state 462

    string_builder          go to state 463
    expr_reader             go to state 464
    expr_call_pipe          go to state 465
    name_in_namespace       go to state 466
    expr_new                go to state 467
    expr_cast               go to state 468
    expr_type_decl          go to state 469
    expr_type_info          go to state 470
    block_or_lambda         go to state 471
    expr_full_block         go to state 472
    expr_numeric_const      go to state 473
    expr_named_call         go to state 474
    expr_method_call        go to state 475
    func_addr_expr          go to state 476
    expr_field              go to state 477
    expr_call               go to state 478
    expr                    go to state 1067
    expr_generator          go to state 480
    expr_mtag               go to state 481
    basic_type_declaration  go to state 482
    make_decl               go to state 483
    make_struct_decl        go to state 484
    make_tuple_call         go to state 485
    make_dim_decl           go to state 486
    make_table_decl         go to state 487
    array_comprehension     go to state 488


State 878

  603 variable_name_with_pos_list: "name" "aka" . "name"

    "name"  shift, and go to state 1068


State 879

  522 copy_or_move: "<-" .

    $default  reduce using rule 522 (copy_or_move)


State 880

  604 variable_name_with_pos_list: variable_name_with_pos_list ',' . "name"
  605                            | variable_name_with_pos_list ',' . "name" "aka" "name"

    "name"  shift, and go to state 1069


State 881

  521 copy_or_move: '=' .

    $default  reduce using rule 521 (copy_or_move)


State 882

  525 variable_declaration: variable_name_with_pos_list ':' . type_declaration
  526                     | variable_name_with_pos_list ':' . type_declaration copy_or_move expr

    "type"       shift, and go to state 222
    "array"      shift, and go to state 223
    "table"      shift, and go to state 224
    "typedecl"   shift, and go to state 225
    "iterator"   shift, and go to state 226
    "smart_ptr"  shift, and go to state 227
    "bool"       shift, and go to state 228
    "void"       shift, and go to state 229
    "string"     shift, and go to state 230
    "auto"       shift, and go to state 231
    "int"        shift, and go to state 232
    "int2"       shift, and go to state 233
    "int3"       shift, and go to state 234
    "int4"       shift, and go to state 235
    "uint"       shift, and go to state 236
    "bitfield"   shift, and go to state 237
    "uint2"      shift, and go to state 238
    "uint3"      shift, and go to state 239
    "uint4"      shift, and go to state 240
    "float"      shift, and go to state 241
    "float2"     shift, and go to state 242
    "float3"     shift, and go to state 243
    "float4"     shift, and go to state 244
    "range"      shift, and go to state 245
    "urange"     shift, and go to state 246
    "range64"    shift, and go to state 247
    "urange64"   shift, and go to state 248
    "block"      shift, and go to state 249
    "int64"      shift, and go to state 250
    "uint64"     shift, and go to state 251
    "double"     shift, and go to state 252
    "function"   shift, and go to state 253
    "lambda"     shift, and go to state 254
    "int8"       shift, and go to state 255
    "uint8"      shift, and go to state 256
    "int16"      shift, and go to state 257
    "uint16"     shift, and go to state 258
    "tuple"      shift, and go to state 259
    "variant"    shift, and go to state 260
    "::"         shift, and go to state 55
    "$t"         shift, and go to state 261
    "name"       shift, and go to state 56
    '$'          shift, and go to state 262

    name_in_namespace                   go to state 263
    basic_type_declaration              go to state 264
    structure_type_declaration          go to state 265
    auto_type_declaration               go to state 266
    bitfield_type_declaration           go to state 267
    type_declaration_no_options         go to state 268
    type_declaration_no_options_no_dim  go to state 269
    type_declaration                    go to state 1070


State 883

  524 variable_declaration: variable_name_with_pos_list '&' .

    $default  reduce using rule 524 (variable_declaration)


State 884

  527 variable_declaration: variable_name_with_pos_list copy_or_move . expr

    "struct"                          shift, and go to state 414
    "class"                           shift, and go to state 415
    "true"                            shift, and go to state 416
    "false"                           shift, and go to state 417
    "new"                             shift, and go to state 418
    "typeinfo"                        shift, and go to state 419
    "type"                            shift, and go to state 420
    "array"                           shift, and go to state 421
    "null"                            shift, and go to state 422
    "table"                           shift, and go to state 423
    "deref"                           shift, and go to state 424
    "cast"                            shift, and go to state 425
    "upcast"                          shift, and go to state 426
    "addr"                            shift, and go to state 427
    "reinterpret"                     shift, and go to state 428
    "unsafe"                          shift, and go to state 429
    "fixed_array"                     shift, and go to state 430
    "default"                         shift, and go to state 431
    "bool"                            shift, and go to state 228
    "void"                            shift, and go to state 229
    "string"                          shift, and go to state 230
    "int"                             shift, and go to state 232
    "int2"                            shift, and go to state 233
    "int3"                            shift, and go to state 234
    "int4"                            shift, and go to state 235
    "uint"                            shift, and go to state 236
    "bitfield"                        shift, and go to state 432
    "uint2"                           shift, and go to state 238
    "uint3"                           shift, and go to state 239
    "uint4"                           shift, and go to state 240
    "float"                           shift, and go to state 241
    "float2"                          shift, and go to state 242
    "float3"                          shift, and go to state 243
    "float4"                          shift, and go to state 244
    "range"                           shift, and go to state 245
    "urange"                          shift, and go to state 246
    "range64"                         shift, and go to state 247
    "urange64"                        shift, and go to state 248
    "int64"                           shift, and go to state 250
    "uint64"                          shift, and go to state 251
    "double"                          shift, and go to state 252
    "int8"                            shift, and go to state 255
    "uint8"                           shift, and go to state 256
    "int16"                           shift, and go to state 257
    "uint16"                          shift, and go to state 258
    "tuple"                           shift, and go to state 433
    "variant"                         shift, and go to state 434
    "generator"                       shift, and go to state 435
    "++"                              shift, and go to state 436
    "--"                              shift, and go to state 437
    "::"                              shift, and go to state 55
    "$$"                              shift, and go to state 438
    "$i"                              shift, and go to state 439
    "$v"                              shift, and go to state 440
    "$b"                              shift, and go to state 441
    "$a"                              shift, and go to state 442
    "$c"                              shift, and go to state 443
    "..."                             shift, and go to state 444
    "integer constant"                shift, and go to state 445
    "long integer constant"           shift, and go to state 446
    "unsigned integer constant"       shift, and go to state 447
    "unsigned long integer constant"  shift, and go to state 448
    "unsigned int8 constant"          shift, and go to state 449
    "floating point constant"         shift, and go to state 450
    "double constant"                 shift, and go to state 451
    "name"                            shift, and go to state 56
    "start of the string"             shift, and go to state 452
    '-'                               shift, and go to state 453
    '+'                               shift, and go to state 454
    '*'                               shift, and go to state 455
    '%'                               shift, and go to state 13
    '~'                               shift, and go to state 456
    '!'                               shift, and go to state 457
    '['                               shift, and go to state 458
    '('                               shift, and go to state 459
    '$'                               shift, and go to state 460
    '@'                               shift, and go to state 461
    '{'                               shift, and go to state 462

    string_builder          go to state 463
    expr_reader             go to state 464
    expr_call_pipe          go to state 465
    name_in_namespace       go to state 466
    expr_new                go to state 467
    expr_cast               go to state 468
    expr_type_decl          go to state 469
    expr_type_info          go to state 470
    block_or_lambda         go to state 471
    expr_full_block         go to state 472
    expr_numeric_const      go to state 473
    expr_named_call         go to state 474
    expr_method_call        go to state 475
    func_addr_expr          go to state 476
    expr_field              go to state 477
    expr_call               go to state 478
    expr                    go to state 1071
    expr_generator          go to state 480
    expr_mtag               go to state 481
    basic_type_declaration  go to state 482
    make_decl               go to state 483
    make_struct_decl        go to state 484
    make_tuple_call         go to state 485
    make_dim_decl           go to state 486
    make_table_decl         go to state 487
    array_comprehension     go to state 488


State 885

  275 expression_return: "return" "<-" . expr

    "struct"                          shift, and go to state 414
    "class"                           shift, and go to state 415
    "true"                            shift, and go to state 416
    "false"                           shift, and go to state 417
    "new"                             shift, and go to state 418
    "typeinfo"                        shift, and go to state 419
    "type"                            shift, and go to state 420
    "array"                           shift, and go to state 421
    "null"                            shift, and go to state 422
    "table"                           shift, and go to state 423
    "deref"                           shift, and go to state 424
    "cast"                            shift, and go to state 425
    "upcast"                          shift, and go to state 426
    "addr"                            shift, and go to state 427
    "reinterpret"                     shift, and go to state 428
    "unsafe"                          shift, and go to state 429
    "fixed_array"                     shift, and go to state 430
    "default"                         shift, and go to state 431
    "bool"                            shift, and go to state 228
    "void"                            shift, and go to state 229
    "string"                          shift, and go to state 230
    "int"                             shift, and go to state 232
    "int2"                            shift, and go to state 233
    "int3"                            shift, and go to state 234
    "int4"                            shift, and go to state 235
    "uint"                            shift, and go to state 236
    "bitfield"                        shift, and go to state 432
    "uint2"                           shift, and go to state 238
    "uint3"                           shift, and go to state 239
    "uint4"                           shift, and go to state 240
    "float"                           shift, and go to state 241
    "float2"                          shift, and go to state 242
    "float3"                          shift, and go to state 243
    "float4"                          shift, and go to state 244
    "range"                           shift, and go to state 245
    "urange"                          shift, and go to state 246
    "range64"                         shift, and go to state 247
    "urange64"                        shift, and go to state 248
    "int64"                           shift, and go to state 250
    "uint64"                          shift, and go to state 251
    "double"                          shift, and go to state 252
    "int8"                            shift, and go to state 255
    "uint8"                           shift, and go to state 256
    "int16"                           shift, and go to state 257
    "uint16"                          shift, and go to state 258
    "tuple"                           shift, and go to state 433
    "variant"                         shift, and go to state 434
    "generator"                       shift, and go to state 435
    "++"                              shift, and go to state 436
    "--"                              shift, and go to state 437
    "::"                              shift, and go to state 55
    "$$"                              shift, and go to state 438
    "$i"                              shift, and go to state 439
    "$v"                              shift, and go to state 440
    "$b"                              shift, and go to state 441
    "$a"                              shift, and go to state 442
    "$c"                              shift, and go to state 443
    "..."                             shift, and go to state 444
    "integer constant"                shift, and go to state 445
    "long integer constant"           shift, and go to state 446
    "unsigned integer constant"       shift, and go to state 447
    "unsigned long integer constant"  shift, and go to state 448
    "unsigned int8 constant"          shift, and go to state 449
    "floating point constant"         shift, and go to state 450
    "double constant"                 shift, and go to state 451
    "name"                            shift, and go to state 56
    "start of the string"             shift, and go to state 452
    '-'                               shift, and go to state 453
    '+'                               shift, and go to state 454
    '*'                               shift, and go to state 455
    '%'                               shift, and go to state 13
    '~'                               shift, and go to state 456
    '!'                               shift, and go to state 457
    '['                               shift, and go to state 458
    '('                               shift, and go to state 459
    '$'                               shift, and go to state 460
    '@'                               shift, and go to state 461
    '{'                               shift, and go to state 462

    string_builder          go to state 463
    expr_reader             go to state 464
    expr_call_pipe          go to state 465
    name_in_namespace       go to state 466
    expr_new                go to state 467
    expr_cast               go to state 468
    expr_type_decl          go to state 469
    expr_type_info          go to state 470
    block_or_lambda         go to state 471
    expr_full_block         go to state 472
    expr_numeric_const      go to state 473
    expr_named_call         go to state 474
    expr_method_call        go to state 475
    func_addr_expr          go to state 476
    expr_field              go to state 477
    expr_call               go to state 478
    expr                    go to state 1072
    expr_generator          go to state 480
    expr_mtag               go to state 481
    basic_type_declaration  go to state 482
    make_decl               go to state 483
    make_struct_decl        go to state 484
    make_tuple_call         go to state 485
    make_dim_decl           go to state 486
    make_table_decl         go to state 487
    array_comprehension     go to state 488


State 886

  274 expression_return: "return" expr .
  356 expr_method_call: expr . "->" "name" '(' ')'
  357                 | expr . "->" "name" '(' expr_list ')'
  367 expr_field: expr . '.' "name"
  368           | expr . '.' '.' "name"
  369           | expr . '.' "name" '(' ')'
  370           | expr . '.' "name" '(' expr_list ')'
  371           | expr . '.' basic_type_declaration '(' ')'
  372           | expr . '.' basic_type_declaration '(' expr_list ')'
  375           | expr . '.' $@25 error $@26
  397 expr: expr . "<<" expr
  398     | expr . ">>" expr
  399     | expr . "<<<" expr
  400     | expr . ">>>" expr
  401     | expr . '+' expr
  402     | expr . '-' expr
  403     | expr . '*' expr
  404     | expr . '/' expr
  405     | expr . '%' expr
  406     | expr . '<' expr
  407     | expr . '>' expr
  408     | expr . "==" expr
  409     | expr . "!=" expr
  410     | expr . "<=" expr
  411     | expr . ">=" expr
  412     | expr . '&' expr
  413     | expr . '|' expr
  414     | expr . '^' expr
  415     | expr . "&&" expr
  416     | expr . "||" expr
  417     | expr . "^^" expr
  418     | expr . ".." expr
  421     | expr . "++"
  422     | expr . "--"
  424     | expr . '[' expr ']'
  425     | expr . '.' '[' expr ']'
  426     | expr . "?[" expr ']'
  427     | expr . '.' "?[" expr ']'
  428     | expr . "?." "name"
  429     | expr . '.' "?." "name"
  436     | expr . "??" expr
  437     | expr . '?' expr ':' expr
  440     | expr . "is" "type" '<' $@27 type_declaration_no_options '>' $@28
  441     | expr . "is" basic_type_declaration
  442     | expr . "is" "name"
  443     | expr . "as" "name"
  446     | expr . "as" "type" '<' $@29 type_declaration '>' $@30
  447     | expr . "as" basic_type_declaration
  448     | expr . '?' "as" "name"
  451     | expr . '?' "as" "type" '<' $@31 type_declaration '>' $@32
  452     | expr . '?' "as" basic_type_declaration
  460     | expr . "<|" expr
  461     | expr . "|>" expr
  462     | expr . "|>" basic_type_declaration
  476 expr_mtag: expr . '.' "$f" '(' expr ')'
  477          | expr . "?." "$f" '(' expr ')'
  478          | expr . '.' '.' "$f" '(' expr ')'
  479          | expr . '.' "?." "$f" '(' expr ')'
  480          | expr . "as" "$f" '(' expr ')'
  481          | expr . '?' "as" "$f" '(' expr ')'
  482          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 603
    "as"   shift, and go to state 604
    "<<"   shift, and go to state 605
    ">>"   shift, and go to state 606
    "++"   shift, and go to state 607
    "--"   shift, and go to state 608
    "<="   shift, and go to state 609
    ">="   shift, and go to state 610
    "=="   shift, and go to state 611
    "!="   shift, and go to state 612
    "->"   shift, and go to state 613
    "??"   shift, and go to state 614
    "?."   shift, and go to state 615
    "?["   shift, and go to state 616
    "<|"   shift, and go to state 617
    "|>"   shift, and go to state 618
    "<<<"  shift, and go to state 619
    ">>>"  shift, and go to state 620
    "&&"   shift, and go to state 621
    "||"   shift, and go to state 622
    "^^"   shift, and go to state 623
    ".."   shift, and go to state 624
    '?'    shift, and go to state 625
    '|'    shift, and go to state 626
    '^'    shift, and go to state 627
    '&'    shift, and go to state 628
    '<'    shift, and go to state 629
    '>'    shift, and go to state 630
    '-'    shift, and go to state 631
    '+'    shift, and go to state 632
    '*'    shift, and go to state 633
    '/'    shift, and go to state 634
    '%'    shift, and go to state 635
    '.'    shift, and go to state 636
    '['    shift, and go to state 637

    $default  reduce using rule 274 (expression_return)


State 887

  278 expression_try_catch: "try" expression_block . "recover" expression_block

    "recover"  shift, and go to state 1073


State 888

  260 expression_delete: "delete" "explicit" . expr

    "struct"                          shift, and go to state 414
    "class"                           shift, and go to state 415
    "true"                            shift, and go to state 416
    "false"                           shift, and go to state 417
    "new"                             shift, and go to state 418
    "typeinfo"                        shift, and go to state 419
    "type"                            shift, and go to state 420
    "array"                           shift, and go to state 421
    "null"                            shift, and go to state 422
    "table"                           shift, and go to state 423
    "deref"                           shift, and go to state 424
    "cast"                            shift, and go to state 425
    "upcast"                          shift, and go to state 426
    "addr"                            shift, and go to state 427
    "reinterpret"                     shift, and go to state 428
    "unsafe"                          shift, and go to state 429
    "fixed_array"                     shift, and go to state 430
    "default"                         shift, and go to state 431
    "bool"                            shift, and go to state 228
    "void"                            shift, and go to state 229
    "string"                          shift, and go to state 230
    "int"                             shift, and go to state 232
    "int2"                            shift, and go to state 233
    "int3"                            shift, and go to state 234
    "int4"                            shift, and go to state 235
    "uint"                            shift, and go to state 236
    "bitfield"                        shift, and go to state 432
    "uint2"                           shift, and go to state 238
    "uint3"                           shift, and go to state 239
    "uint4"                           shift, and go to state 240
    "float"                           shift, and go to state 241
    "float2"                          shift, and go to state 242
    "float3"                          shift, and go to state 243
    "float4"                          shift, and go to state 244
    "range"                           shift, and go to state 245
    "urange"                          shift, and go to state 246
    "range64"                         shift, and go to state 247
    "urange64"                        shift, and go to state 248
    "int64"                           shift, and go to state 250
    "uint64"                          shift, and go to state 251
    "double"                          shift, and go to state 252
    "int8"                            shift, and go to state 255
    "uint8"                           shift, and go to state 256
    "int16"                           shift, and go to state 257
    "uint16"                          shift, and go to state 258
    "tuple"                           shift, and go to state 433
    "variant"                         shift, and go to state 434
    "generator"                       shift, and go to state 435
    "++"                              shift, and go to state 436
    "--"                              shift, and go to state 437
    "::"                              shift, and go to state 55
    "$$"                              shift, and go to state 438
    "$i"                              shift, and go to state 439
    "$v"                              shift, and go to state 440
    "$b"                              shift, and go to state 441
    "$a"                              shift, and go to state 442
    "$c"                              shift, and go to state 443
    "..."                             shift, and go to state 444
    "integer constant"                shift, and go to state 445
    "long integer constant"           shift, and go to state 446
    "unsigned integer constant"       shift, and go to state 447
    "unsigned long integer constant"  shift, and go to state 448
    "unsigned int8 constant"          shift, and go to state 449
    "floating point constant"         shift, and go to state 450
    "double constant"                 shift, and go to state 451
    "name"                            shift, and go to state 56
    "start of the string"             shift, and go to state 452
    '-'                               shift, and go to state 453
    '+'                               shift, and go to state 454
    '*'                               shift, and go to state 455
    '%'                               shift, and go to state 13
    '~'                               shift, and go to state 456
    '!'                               shift, and go to state 457
    '['                               shift, and go to state 458
    '('                               shift, and go to state 459
    '$'                               shift, and go to state 460
    '@'                               shift, and go to state 461
    '{'                               shift, and go to state 462

    string_builder          go to state 463
    expr_reader             go to state 464
    expr_call_pipe          go to state 465
    name_in_namespace       go to state 466
    expr_new                go to state 467
    expr_cast               go to state 468
    expr_type_decl          go to state 469
    expr_type_info          go to state 470
    block_or_lambda         go to state 471
    expr_full_block         go to state 472
    expr_numeric_const      go to state 473
    expr_named_call         go to state 474
    expr_method_call        go to state 475
    func_addr_expr          go to state 476
    expr_field              go to state 477
    expr_call               go to state 478
    expr                    go to state 1074
    expr_generator          go to state 480
    expr_mtag               go to state 481
    basic_type_declaration  go to state 482
    make_decl               go to state 483
    make_struct_decl        go to state 484
    make_tuple_call         go to state 485
    make_dim_decl           go to state 486
    make_table_decl         go to state 487
    array_comprehension     go to state 488


State 889

  259 expression_delete: "delete" expr .
  356 expr_method_call: expr . "->" "name" '(' ')'
  357                 | expr . "->" "name" '(' expr_list ')'
  367 expr_field: expr . '.' "name"
  368           | expr . '.' '.' "name"
  369           | expr . '.' "name" '(' ')'
  370           | expr . '.' "name" '(' expr_list ')'
  371           | expr . '.' basic_type_declaration '(' ')'
  372           | expr . '.' basic_type_declaration '(' expr_list ')'
  375           | expr . '.' $@25 error $@26
  397 expr: expr . "<<" expr
  398     | expr . ">>" expr
  399     | expr . "<<<" expr
  400     | expr . ">>>" expr
  401     | expr . '+' expr
  402     | expr . '-' expr
  403     | expr . '*' expr
  404     | expr . '/' expr
  405     | expr . '%' expr
  406     | expr . '<' expr
  407     | expr . '>' expr
  408     | expr . "==" expr
  409     | expr . "!=" expr
  410     | expr . "<=" expr
  411     | expr . ">=" expr
  412     | expr . '&' expr
  413     | expr . '|' expr
  414     | expr . '^' expr
  415     | expr . "&&" expr
  416     | expr . "||" expr
  417     | expr . "^^" expr
  418     | expr . ".." expr
  421     | expr . "++"
  422     | expr . "--"
  424     | expr . '[' expr ']'
  425     | expr . '.' '[' expr ']'
  426     | expr . "?[" expr ']'
  427     | expr . '.' "?[" expr ']'
  428     | expr . "?." "name"
  429     | expr . '.' "?." "name"
  436     | expr . "??" expr
  437     | expr . '?' expr ':' expr
  440     | expr . "is" "type" '<' $@27 type_declaration_no_options '>' $@28
  441     | expr . "is" basic_type_declaration
  442     | expr . "is" "name"
  443     | expr . "as" "name"
  446     | expr . "as" "type" '<' $@29 type_declaration '>' $@30
  447     | expr . "as" basic_type_declaration
  448     | expr . '?' "as" "name"
  451     | expr . '?' "as" "type" '<' $@31 type_declaration '>' $@32
  452     | expr . '?' "as" basic_type_declaration
  460     | expr . "<|" expr
  461     | expr . "|>" expr
  462     | expr . "|>" basic_type_declaration
  476 expr_mtag: expr . '.' "$f" '(' expr ')'
  477          | expr . "?." "$f" '(' expr ')'
  478          | expr . '.' '.' "$f" '(' expr ')'
  479          | expr . '.' "?." "$f" '(' expr ')'
  480          | expr . "as" "$f" '(' expr ')'
  481          | expr . '?' "as" "$f" '(' expr ')'
  482          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 603
    "as"   shift, and go to state 604
    "<<"   shift, and go to state 605
    ">>"   shift, and go to state 606
    "++"   shift, and go to state 607
    "--"   shift, and go to state 608
    "<="   shift, and go to state 609
    ">="   shift, and go to state 610
    "=="   shift, and go to state 611
    "!="   shift, and go to state 612
    "->"   shift, and go to state 613
    "??"   shift, and go to state 614
    "?."   shift, and go to state 615
    "?["   shift, and go to state 616
    "<|"   shift, and go to state 617
    "|>"   shift, and go to state 618
    "<<<"  shift, and go to state 619
    ">>>"  shift, and go to state 620
    "&&"   shift, and go to state 621
    "||"   shift, and go to state 622
    "^^"   shift, and go to state 623
    ".."   shift, and go to state 624
    '?'    shift, and go to state 625
    '|'    shift, and go to state 626
    '^'    shift, and go to state 627
    '&'    shift, and go to state 628
    '<'    shift, and go to state 629
    '>'    shift, and go to state 630
    '-'    shift, and go to state 631
    '+'    shift, and go to state 632
    '*'    shift, and go to state 633
    '/'    shift, and go to state 634
    '%'    shift, and go to state 635
    '.'    shift, and go to state 636
    '['    shift, and go to state 637

    $default  reduce using rule 259 (expression_delete)


State 890

   83 expression_with_alias: "assume" "name" . '=' expr

    '='  shift, and go to state 1075


State 891

  246 expression_any: "pass" ';' .

    $default  reduce using rule 246 (expression_any)


State 892

   52 expression_label: "label" "integer constant" . ':'

    ':'  shift, and go to state 1076


State 893

   53 expression_goto: "goto" "label" . "integer constant"

    "integer constant"  shift, and go to state 1077


State 894

   54 expression_goto: "goto" expr .
  356 expr_method_call: expr . "->" "name" '(' ')'
  357                 | expr . "->" "name" '(' expr_list ')'
  367 expr_field: expr . '.' "name"
  368           | expr . '.' '.' "name"
  369           | expr . '.' "name" '(' ')'
  370           | expr . '.' "name" '(' expr_list ')'
  371           | expr . '.' basic_type_declaration '(' ')'
  372           | expr . '.' basic_type_declaration '(' expr_list ')'
  375           | expr . '.' $@25 error $@26
  397 expr: expr . "<<" expr
  398     | expr . ">>" expr
  399     | expr . "<<<" expr
  400     | expr . ">>>" expr
  401     | expr . '+' expr
  402     | expr . '-' expr
  403     | expr . '*' expr
  404     | expr . '/' expr
  405     | expr . '%' expr
  406     | expr . '<' expr
  407     | expr . '>' expr
  408     | expr . "==" expr
  409     | expr . "!=" expr
  410     | expr . "<=" expr
  411     | expr . ">=" expr
  412     | expr . '&' expr
  413     | expr . '|' expr
  414     | expr . '^' expr
  415     | expr . "&&" expr
  416     | expr . "||" expr
  417     | expr . "^^" expr
  418     | expr . ".." expr
  421     | expr . "++"
  422     | expr . "--"
  424     | expr . '[' expr ']'
  425     | expr . '.' '[' expr ']'
  426     | expr . "?[" expr ']'
  427     | expr . '.' "?[" expr ']'
  428     | expr . "?." "name"
  429     | expr . '.' "?." "name"
  436     | expr . "??" expr
  437     | expr . '?' expr ':' expr
  440     | expr . "is" "type" '<' $@27 type_declaration_no_options '>' $@28
  441     | expr . "is" basic_type_declaration
  442     | expr . "is" "name"
  443     | expr . "as" "name"
  446     | expr . "as" "type" '<' $@29 type_declaration '>' $@30
  447     | expr . "as" basic_type_declaration
  448     | expr . '?' "as" "name"
  451     | expr . '?' "as" "type" '<' $@31 type_declaration '>' $@32
  452     | expr . '?' "as" basic_type_declaration
  460     | expr . "<|" expr
  461     | expr . "|>" expr
  462     | expr . "|>" basic_type_declaration
  476 expr_mtag: expr . '.' "$f" '(' expr ')'
  477          | expr . "?." "$f" '(' expr ')'
  478          | expr . '.' '.' "$f" '(' expr ')'
  479          | expr . '.' "?." "$f" '(' expr ')'
  480          | expr . "as" "$f" '(' expr ')'
  481          | expr . '?' "as" "$f" '(' expr ')'
  482          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 603
    "as"   shift, and go to state 604
    "<<"   shift, and go to state 605
    ">>"   shift, and go to state 606
    "++"   shift, and go to state 607
    "--"   shift, and go to state 608
    "<="   shift, and go to state 609
    ">="   shift, and go to state 610
    "=="   shift, and go to state 611
    "!="   shift, and go to state 612
    "->"   shift, and go to state 613
    "??"   shift, and go to state 614
    "?."   shift, and go to state 615
    "?["   shift, and go to state 616
    "<|"   shift, and go to state 617
    "|>"   shift, and go to state 618
    "<<<"  shift, and go to state 619
    ">>>"  shift, and go to state 620
    "&&"   shift, and go to state 621
    "||"   shift, and go to state 622
    "^^"   shift, and go to state 623
    ".."   shift, and go to state 624
    '?'    shift, and go to state 625
    '|'    shift, and go to state 626
    '^'    shift, and go to state 627
    '&'    shift, and go to state 628
    '<'    shift, and go to state 629
    '>'    shift, and go to state 630
    '-'    shift, and go to state 631
    '+'    shift, and go to state 632
    '*'    shift, and go to state 633
    '/'    shift, and go to state 634
    '%'    shift, and go to state 635
    '.'    shift, and go to state 636
    '['    shift, and go to state 637

    $default  reduce using rule 54 (expression_goto)


State 895

   78 expression_unsafe: "unsafe" optional_semis . expression_block

    $default  reduce using rule 224 ($@9)

    expression_block  go to state 1078
    $@9               go to state 332


State 896

  277 expression_yield: "yield" "<-" . expr

    "struct"                          shift, and go to state 414
    "class"                           shift, and go to state 415
    "true"                            shift, and go to state 416
    "false"                           shift, and go to state 417
    "new"                             shift, and go to state 418
    "typeinfo"                        shift, and go to state 419
    "type"                            shift, and go to state 420
    "array"                           shift, and go to state 421
    "null"                            shift, and go to state 422
    "table"                           shift, and go to state 423
    "deref"                           shift, and go to state 424
    "cast"                            shift, and go to state 425
    "upcast"                          shift, and go to state 426
    "addr"                            shift, and go to state 427
    "reinterpret"                     shift, and go to state 428
    "unsafe"                          shift, and go to state 429
    "fixed_array"                     shift, and go to state 430
    "default"                         shift, and go to state 431
    "bool"                            shift, and go to state 228
    "void"                            shift, and go to state 229
    "string"                          shift, and go to state 230
    "int"                             shift, and go to state 232
    "int2"                            shift, and go to state 233
    "int3"                            shift, and go to state 234
    "int4"                            shift, and go to state 235
    "uint"                            shift, and go to state 236
    "bitfield"                        shift, and go to state 432
    "uint2"                           shift, and go to state 238
    "uint3"                           shift, and go to state 239
    "uint4"                           shift, and go to state 240
    "float"                           shift, and go to state 241
    "float2"                          shift, and go to state 242
    "float3"                          shift, and go to state 243
    "float4"                          shift, and go to state 244
    "range"                           shift, and go to state 245
    "urange"                          shift, and go to state 246
    "range64"                         shift, and go to state 247
    "urange64"                        shift, and go to state 248
    "int64"                           shift, and go to state 250
    "uint64"                          shift, and go to state 251
    "double"                          shift, and go to state 252
    "int8"                            shift, and go to state 255
    "uint8"                           shift, and go to state 256
    "int16"                           shift, and go to state 257
    "uint16"                          shift, and go to state 258
    "tuple"                           shift, and go to state 433
    "variant"                         shift, and go to state 434
    "generator"                       shift, and go to state 435
    "++"                              shift, and go to state 436
    "--"                              shift, and go to state 437
    "::"                              shift, and go to state 55
    "$$"                              shift, and go to state 438
    "$i"                              shift, and go to state 439
    "$v"                              shift, and go to state 440
    "$b"                              shift, and go to state 441
    "$a"                              shift, and go to state 442
    "$c"                              shift, and go to state 443
    "..."                             shift, and go to state 444
    "integer constant"                shift, and go to state 445
    "long integer constant"           shift, and go to state 446
    "unsigned integer constant"       shift, and go to state 447
    "unsigned long integer constant"  shift, and go to state 448
    "unsigned int8 constant"          shift, and go to state 449
    "floating point constant"         shift, and go to state 450
    "double constant"                 shift, and go to state 451
    "name"                            shift, and go to state 56
    "start of the string"             shift, and go to state 452
    '-'                               shift, and go to state 453
    '+'                               shift, and go to state 454
    '*'                               shift, and go to state 455
    '%'                               shift, and go to state 13
    '~'                               shift, and go to state 456
    '!'                               shift, and go to state 457
    '['                               shift, and go to state 458
    '('                               shift, and go to state 459
    '$'                               shift, and go to state 460
    '@'                               shift, and go to state 461
    '{'                               shift, and go to state 462

    string_builder          go to state 463
    expr_reader             go to state 464
    expr_call_pipe          go to state 465
    name_in_namespace       go to state 466
    expr_new                go to state 467
    expr_cast               go to state 468
    expr_type_decl          go to state 469
    expr_type_info          go to state 470
    block_or_lambda         go to state 471
    expr_full_block         go to state 472
    expr_numeric_const      go to state 473
    expr_named_call         go to state 474
    expr_method_call        go to state 475
    func_addr_expr          go to state 476
    expr_field              go to state 477
    expr_call               go to state 478
    expr                    go to state 1079
    expr_generator          go to state 480
    expr_mtag               go to state 481
    basic_type_declaration  go to state 482
    make_decl               go to state 483
    make_struct_decl        go to state 484
    make_tuple_call         go to state 485
    make_dim_decl           go to state 486
    make_table_decl         go to state 487
    array_comprehension     go to state 488


State 897

  276 expression_yield: "yield" expr .
  356 expr_method_call: expr . "->" "name" '(' ')'
  357                 | expr . "->" "name" '(' expr_list ')'
  367 expr_field: expr . '.' "name"
  368           | expr . '.' '.' "name"
  369           | expr . '.' "name" '(' ')'
  370           | expr . '.' "name" '(' expr_list ')'
  371           | expr . '.' basic_type_declaration '(' ')'
  372           | expr . '.' basic_type_declaration '(' expr_list ')'
  375           | expr . '.' $@25 error $@26
  397 expr: expr . "<<" expr
  398     | expr . ">>" expr
  399     | expr . "<<<" expr
  400     | expr . ">>>" expr
  401     | expr . '+' expr
  402     | expr . '-' expr
  403     | expr . '*' expr
  404     | expr . '/' expr
  405     | expr . '%' expr
  406     | expr . '<' expr
  407     | expr . '>' expr
  408     | expr . "==" expr
  409     | expr . "!=" expr
  410     | expr . "<=" expr
  411     | expr . ">=" expr
  412     | expr . '&' expr
  413     | expr . '|' expr
  414     | expr . '^' expr
  415     | expr . "&&" expr
  416     | expr . "||" expr
  417     | expr . "^^" expr
  418     | expr . ".." expr
  421     | expr . "++"
  422     | expr . "--"
  424     | expr . '[' expr ']'
  425     | expr . '.' '[' expr ']'
  426     | expr . "?[" expr ']'
  427     | expr . '.' "?[" expr ']'
  428     | expr . "?." "name"
  429     | expr . '.' "?." "name"
  436     | expr . "??" expr
  437     | expr . '?' expr ':' expr
  440     | expr . "is" "type" '<' $@27 type_declaration_no_options '>' $@28
  441     | expr . "is" basic_type_declaration
  442     | expr . "is" "name"
  443     | expr . "as" "name"
  446     | expr . "as" "type" '<' $@29 type_declaration '>' $@30
  447     | expr . "as" basic_type_declaration
  448     | expr . '?' "as" "name"
  451     | expr . '?' "as" "type" '<' $@31 type_declaration '>' $@32
  452     | expr . '?' "as" basic_type_declaration
  460     | expr . "<|" expr
  461     | expr . "|>" expr
  462     | expr . "|>" basic_type_declaration
  476 expr_mtag: expr . '.' "$f" '(' expr ')'
  477          | expr . "?." "$f" '(' expr ')'
  478          | expr . '.' '.' "$f" '(' expr ')'
  479          | expr . '.' "?." "$f" '(' expr ')'
  480          | expr . "as" "$f" '(' expr ')'
  481          | expr . '?' "as" "$f" '(' expr ')'
  482          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 603
    "as"   shift, and go to state 604
    "<<"   shift, and go to state 605
    ">>"   shift, and go to state 606
    "++"   shift, and go to state 607
    "--"   shift, and go to state 608
    "<="   shift, and go to state 609
    ">="   shift, and go to state 610
    "=="   shift, and go to state 611
    "!="   shift, and go to state 612
    "->"   shift, and go to state 613
    "??"   shift, and go to state 614
    "?."   shift, and go to state 615
    "?["   shift, and go to state 616
    "<|"   shift, and go to state 617
    "|>"   shift, and go to state 618
    "<<<"  shift, and go to state 619
    ">>>"  shift, and go to state 620
    "&&"   shift, and go to state 621
    "||"   shift, and go to state 622
    "^^"   shift, and go to state 623
    ".."   shift, and go to state 624
    '?'    shift, and go to state 625
    '|'    shift, and go to state 626
    '^'    shift, and go to state 627
    '&'    shift, and go to state 628
    '<'    shift, and go to state 629
    '>'    shift, and go to state 630
    '-'    shift, and go to state 631
    '+'    shift, and go to state 632
    '*'    shift, and go to state 633
    '/'    shift, and go to state 634
    '%'    shift, and go to state 635
    '.'    shift, and go to state 636
    '['    shift, and go to state 637

    $default  reduce using rule 276 (expression_yield)


State 898

  244 expression_any: expression_label ';' .

    $default  reduce using rule 244 (expression_any)


State 899

  245 expression_any: expression_goto ';' .

    $default  reduce using rule 245 (expression_any)


State 900

   75 expression_if_then_else_oneliner: expression_if_one_liner "if" . '(' expr ')' expression_else_one_liner ';'

    '('  shift, and go to state 1080


State 901

   60 if_or_static_if: "if" .

    $default  reduce using rule 60 (if_or_static_if)


State 902

   61 if_or_static_if: "static_if" .

    $default  reduce using rule 61 (if_or_static_if)


State 903

   74 expression_if_then_else: $@2 if_or_static_if . '(' expr ')' optional_semis expression_block expression_else

    '('  shift, and go to state 1081


State 904

   77 expression_for_loop: $@3 "for" . '(' variable_name_with_pos_list "in" expr_list ')' optional_semis expression_block

    '('  shift, and go to state 1082


State 905

   80 expression_while_loop: $@4 "while" . '(' expr ')' optional_semis expression_block

    '('  shift, and go to state 1083


State 906

   82 expression_with: $@5 "with" . '(' expr ')' optional_semis expression_block

    '('  shift, and go to state 1084


State 907

  235 expression_any: expression_with_alias ';' .

    $default  reduce using rule 235 (expression_any)


State 908

  226 expression_block: $@9 '{' expressions $@10 '}' . expression_block_finally

    "finally"  shift, and go to state 1085

    $default  reduce using rule 220 (expression_block_finally)

    expression_block_finally  go to state 1086


State 909

  230 expression_any: expression_delete ';' .

    $default  reduce using rule 230 (expression_any)


State 910

  237 expression_any: expression_break ';' .

    $default  reduce using rule 237 (expression_any)


State 911

  238 expression_any: expression_continue ';' .

    $default  reduce using rule 238 (expression_any)


State 912

  239 expression_any: expression_return ';' .

    $default  reduce using rule 239 (expression_any)


State 913

  240 expression_any: expression_yield ';' .

    $default  reduce using rule 240 (expression_any)


State 914

  284 optional_in_scope: "inscope" .

    $default  reduce using rule 284 (optional_in_scope)


State 915

  290 expression_let: kwd_let optional_in_scope . let_variable_declaration
  291               | kwd_let optional_in_scope . tuple_expansion_variable_declaration
  292               | kwd_let optional_in_scope . '{' variable_declaration_list '}'

    "$i"    shift, and go to state 531
    "name"  shift, and go to state 532
    '('     shift, and go to state 1087
    '{'     shift, and go to state 1088

    tuple_expansion_variable_declaration  go to state 1089
    let_variable_name_with_pos_list       go to state 533
    let_variable_declaration              go to state 1090


State 916

  229 expression_any: expr_assign ';' .

    $default  reduce using rule 229 (expression_any)


State 917

  345 expr_assign: expr "+=" . expr

    "struct"                          shift, and go to state 414
    "class"                           shift, and go to state 415
    "true"                            shift, and go to state 416
    "false"                           shift, and go to state 417
    "new"                             shift, and go to state 418
    "typeinfo"                        shift, and go to state 419
    "type"                            shift, and go to state 420
    "array"                           shift, and go to state 421
    "null"                            shift, and go to state 422
    "table"                           shift, and go to state 423
    "deref"                           shift, and go to state 424
    "cast"                            shift, and go to state 425
    "upcast"                          shift, and go to state 426
    "addr"                            shift, and go to state 427
    "reinterpret"                     shift, and go to state 428
    "unsafe"                          shift, and go to state 429
    "fixed_array"                     shift, and go to state 430
    "default"                         shift, and go to state 431
    "bool"                            shift, and go to state 228
    "void"                            shift, and go to state 229
    "string"                          shift, and go to state 230
    "int"                             shift, and go to state 232
    "int2"                            shift, and go to state 233
    "int3"                            shift, and go to state 234
    "int4"                            shift, and go to state 235
    "uint"                            shift, and go to state 236
    "bitfield"                        shift, and go to state 432
    "uint2"                           shift, and go to state 238
    "uint3"                           shift, and go to state 239
    "uint4"                           shift, and go to state 240
    "float"                           shift, and go to state 241
    "float2"                          shift, and go to state 242
    "float3"                          shift, and go to state 243
    "float4"                          shift, and go to state 244
    "range"                           shift, and go to state 245
    "urange"                          shift, and go to state 246
    "range64"                         shift, and go to state 247
    "urange64"                        shift, and go to state 248
    "int64"                           shift, and go to state 250
    "uint64"                          shift, and go to state 251
    "double"                          shift, and go to state 252
    "int8"                            shift, and go to state 255
    "uint8"                           shift, and go to state 256
    "int16"                           shift, and go to state 257
    "uint16"                          shift, and go to state 258
    "tuple"                           shift, and go to state 433
    "variant"                         shift, and go to state 434
    "generator"                       shift, and go to state 435
    "++"                              shift, and go to state 436
    "--"                              shift, and go to state 437
    "::"                              shift, and go to state 55
    "$$"                              shift, and go to state 438
    "$i"                              shift, and go to state 439
    "$v"                              shift, and go to state 440
    "$b"                              shift, and go to state 441
    "$a"                              shift, and go to state 442
    "$c"                              shift, and go to state 443
    "..."                             shift, and go to state 444
    "integer constant"                shift, and go to state 445
    "long integer constant"           shift, and go to state 446
    "unsigned integer constant"       shift, and go to state 447
    "unsigned long integer constant"  shift, and go to state 448
    "unsigned int8 constant"          shift, and go to state 449
    "floating point constant"         shift, and go to state 450
    "double constant"                 shift, and go to state 451
    "name"                            shift, and go to state 56
    "start of the string"             shift, and go to state 452
    '-'                               shift, and go to state 453
    '+'                               shift, and go to state 454
    '*'                               shift, and go to state 455
    '%'                               shift, and go to state 13
    '~'                               shift, and go to state 456
    '!'                               shift, and go to state 457
    '['                               shift, and go to state 458
    '('                               shift, and go to state 459
    '$'                               shift, and go to state 460
    '@'                               shift, and go to state 461
    '{'                               shift, and go to state 462

    string_builder          go to state 463
    expr_reader             go to state 464
    expr_call_pipe          go to state 465
    name_in_namespace       go to state 466
    expr_new                go to state 467
    expr_cast               go to state 468
    expr_type_decl          go to state 469
    expr_type_info          go to state 470
    block_or_lambda         go to state 471
    expr_full_block         go to state 472
    expr_numeric_const      go to state 473
    expr_named_call         go to state 474
    expr_method_call        go to state 475
    func_addr_expr          go to state 476
    expr_field              go to state 477
    expr_call               go to state 478
    expr                    go to state 1091
    expr_generator          go to state 480
    expr_mtag               go to state 481
    basic_type_declaration  go to state 482
    make_decl               go to state 483
    make_struct_decl        go to state 484
    make_tuple_call         go to state 485
    make_dim_decl           go to state 486
    make_table_decl         go to state 487
    array_comprehension     go to state 488


State 918

  346 expr_assign: expr "-=" . expr

    "struct"                          shift, and go to state 414
    "class"                           shift, and go to state 415
    "true"                            shift, and go to state 416
    "false"                           shift, and go to state 417
    "new"                             shift, and go to state 418
    "typeinfo"                        shift, and go to state 419
    "type"                            shift, and go to state 420
    "array"                           shift, and go to state 421
    "null"                            shift, and go to state 422
    "table"                           shift, and go to state 423
    "deref"                           shift, and go to state 424
    "cast"                            shift, and go to state 425
    "upcast"                          shift, and go to state 426
    "addr"                            shift, and go to state 427
    "reinterpret"                     shift, and go to state 428
    "unsafe"                          shift, and go to state 429
    "fixed_array"                     shift, and go to state 430
    "default"                         shift, and go to state 431
    "bool"                            shift, and go to state 228
    "void"                            shift, and go to state 229
    "string"                          shift, and go to state 230
    "int"                             shift, and go to state 232
    "int2"                            shift, and go to state 233
    "int3"                            shift, and go to state 234
    "int4"                            shift, and go to state 235
    "uint"                            shift, and go to state 236
    "bitfield"                        shift, and go to state 432
    "uint2"                           shift, and go to state 238
    "uint3"                           shift, and go to state 239
    "uint4"                           shift, and go to state 240
    "float"                           shift, and go to state 241
    "float2"                          shift, and go to state 242
    "float3"                          shift, and go to state 243
    "float4"                          shift, and go to state 244
    "range"                           shift, and go to state 245
    "urange"                          shift, and go to state 246
    "range64"                         shift, and go to state 247
    "urange64"                        shift, and go to state 248
    "int64"                           shift, and go to state 250
    "uint64"                          shift, and go to state 251
    "double"                          shift, and go to state 252
    "int8"                            shift, and go to state 255
    "uint8"                           shift, and go to state 256
    "int16"                           shift, and go to state 257
    "uint16"                          shift, and go to state 258
    "tuple"                           shift, and go to state 433
    "variant"                         shift, and go to state 434
    "generator"                       shift, and go to state 435
    "++"                              shift, and go to state 436
    "--"                              shift, and go to state 437
    "::"                              shift, and go to state 55
    "$$"                              shift, and go to state 438
    "$i"                              shift, and go to state 439
    "$v"                              shift, and go to state 440
    "$b"                              shift, and go to state 441
    "$a"                              shift, and go to state 442
    "$c"                              shift, and go to state 443
    "..."                             shift, and go to state 444
    "integer constant"                shift, and go to state 445
    "long integer constant"           shift, and go to state 446
    "unsigned integer constant"       shift, and go to state 447
    "unsigned long integer constant"  shift, and go to state 448
    "unsigned int8 constant"          shift, and go to state 449
    "floating point constant"         shift, and go to state 450
    "double constant"                 shift, and go to state 451
    "name"                            shift, and go to state 56
    "start of the string"             shift, and go to state 452
    '-'                               shift, and go to state 453
    '+'                               shift, and go to state 454
    '*'                               shift, and go to state 455
    '%'                               shift, and go to state 13
    '~'                               shift, and go to state 456
    '!'                               shift, and go to state 457
    '['                               shift, and go to state 458
    '('                               shift, and go to state 459
    '$'                               shift, and go to state 460
    '@'                               shift, and go to state 461
    '{'                               shift, and go to state 462

    string_builder          go to state 463
    expr_reader             go to state 464
    expr_call_pipe          go to state 465
    name_in_namespace       go to state 466
    expr_new                go to state 467
    expr_cast               go to state 468
    expr_type_decl          go to state 469
    expr_type_info          go to state 470
    block_or_lambda         go to state 471
    expr_full_block         go to state 472
    expr_numeric_const      go to state 473
    expr_named_call         go to state 474
    expr_method_call        go to state 475
    func_addr_expr          go to state 476
    expr_field              go to state 477
    expr_call               go to state 478
    expr                    go to state 1092
    expr_generator          go to state 480
    expr_mtag               go to state 481
    basic_type_declaration  go to state 482
    make_decl               go to state 483
    make_struct_decl        go to state 484
    make_tuple_call         go to state 485
    make_dim_decl           go to state 486
    make_table_decl         go to state 487
    array_comprehension     go to state 488


State 919

  348 expr_assign: expr "/=" . expr

    "struct"                          shift, and go to state 414
    "class"                           shift, and go to state 415
    "true"                            shift, and go to state 416
    "false"                           shift, and go to state 417
    "new"                             shift, and go to state 418
    "typeinfo"                        shift, and go to state 419
    "type"                            shift, and go to state 420
    "array"                           shift, and go to state 421
    "null"                            shift, and go to state 422
    "table"                           shift, and go to state 423
    "deref"                           shift, and go to state 424
    "cast"                            shift, and go to state 425
    "upcast"                          shift, and go to state 426
    "addr"                            shift, and go to state 427
    "reinterpret"                     shift, and go to state 428
    "unsafe"                          shift, and go to state 429
    "fixed_array"                     shift, and go to state 430
    "default"                         shift, and go to state 431
    "bool"                            shift, and go to state 228
    "void"                            shift, and go to state 229
    "string"                          shift, and go to state 230
    "int"                             shift, and go to state 232
    "int2"                            shift, and go to state 233
    "int3"                            shift, and go to state 234
    "int4"                            shift, and go to state 235
    "uint"                            shift, and go to state 236
    "bitfield"                        shift, and go to state 432
    "uint2"                           shift, and go to state 238
    "uint3"                           shift, and go to state 239
    "uint4"                           shift, and go to state 240
    "float"                           shift, and go to state 241
    "float2"                          shift, and go to state 242
    "float3"                          shift, and go to state 243
    "float4"                          shift, and go to state 244
    "range"                           shift, and go to state 245
    "urange"                          shift, and go to state 246
    "range64"                         shift, and go to state 247
    "urange64"                        shift, and go to state 248
    "int64"                           shift, and go to state 250
    "uint64"                          shift, and go to state 251
    "double"                          shift, and go to state 252
    "int8"                            shift, and go to state 255
    "uint8"                           shift, and go to state 256
    "int16"                           shift, and go to state 257
    "uint16"                          shift, and go to state 258
    "tuple"                           shift, and go to state 433
    "variant"                         shift, and go to state 434
    "generator"                       shift, and go to state 435
    "++"                              shift, and go to state 436
    "--"                              shift, and go to state 437
    "::"                              shift, and go to state 55
    "$$"                              shift, and go to state 438
    "$i"                              shift, and go to state 439
    "$v"                              shift, and go to state 440
    "$b"                              shift, and go to state 441
    "$a"                              shift, and go to state 442
    "$c"                              shift, and go to state 443
    "..."                             shift, and go to state 444
    "integer constant"                shift, and go to state 445
    "long integer constant"           shift, and go to state 446
    "unsigned integer constant"       shift, and go to state 447
    "unsigned long integer constant"  shift, and go to state 448
    "unsigned int8 constant"          shift, and go to state 449
    "floating point constant"         shift, and go to state 450
    "double constant"                 shift, and go to state 451
    "name"                            shift, and go to state 56
    "start of the string"             shift, and go to state 452
    '-'                               shift, and go to state 453
    '+'                               shift, and go to state 454
    '*'                               shift, and go to state 455
    '%'                               shift, and go to state 13
    '~'                               shift, and go to state 456
    '!'                               shift, and go to state 457
    '['                               shift, and go to state 458
    '('                               shift, and go to state 459
    '$'                               shift, and go to state 460
    '@'                               shift, and go to state 461
    '{'                               shift, and go to state 462

    string_builder          go to state 463
    expr_reader             go to state 464
    expr_call_pipe          go to state 465
    name_in_namespace       go to state 466
    expr_new                go to state 467
    expr_cast               go to state 468
    expr_type_decl          go to state 469
    expr_type_info          go to state 470
    block_or_lambda         go to state 471
    expr_full_block         go to state 472
    expr_numeric_const      go to state 473
    expr_named_call         go to state 474
    expr_method_call        go to state 475
    func_addr_expr          go to state 476
    expr_field              go to state 477
    expr_call               go to state 478
    expr                    go to state 1093
    expr_generator          go to state 480
    expr_mtag               go to state 481
    basic_type_declaration  go to state 482
    make_decl               go to state 483
    make_struct_decl        go to state 484
    make_tuple_call         go to state 485
    make_dim_decl           go to state 486
    make_table_decl         go to state 487
    array_comprehension     go to state 488


State 920

  347 expr_assign: expr "*=" . expr

    "struct"                          shift, and go to state 414
    "class"                           shift, and go to state 415
    "true"                            shift, and go to state 416
    "false"                           shift, and go to state 417
    "new"                             shift, and go to state 418
    "typeinfo"                        shift, and go to state 419
    "type"                            shift, and go to state 420
    "array"                           shift, and go to state 421
    "null"                            shift, and go to state 422
    "table"                           shift, and go to state 423
    "deref"                           shift, and go to state 424
    "cast"                            shift, and go to state 425
    "upcast"                          shift, and go to state 426
    "addr"                            shift, and go to state 427
    "reinterpret"                     shift, and go to state 428
    "unsafe"                          shift, and go to state 429
    "fixed_array"                     shift, and go to state 430
    "default"                         shift, and go to state 431
    "bool"                            shift, and go to state 228
    "void"                            shift, and go to state 229
    "string"                          shift, and go to state 230
    "int"                             shift, and go to state 232
    "int2"                            shift, and go to state 233
    "int3"                            shift, and go to state 234
    "int4"                            shift, and go to state 235
    "uint"                            shift, and go to state 236
    "bitfield"                        shift, and go to state 432
    "uint2"                           shift, and go to state 238
    "uint3"                           shift, and go to state 239
    "uint4"                           shift, and go to state 240
    "float"                           shift, and go to state 241
    "float2"                          shift, and go to state 242
    "float3"                          shift, and go to state 243
    "float4"                          shift, and go to state 244
    "range"                           shift, and go to state 245
    "urange"                          shift, and go to state 246
    "range64"                         shift, and go to state 247
    "urange64"                        shift, and go to state 248
    "int64"                           shift, and go to state 250
    "uint64"                          shift, and go to state 251
    "double"                          shift, and go to state 252
    "int8"                            shift, and go to state 255
    "uint8"                           shift, and go to state 256
    "int16"                           shift, and go to state 257
    "uint16"                          shift, and go to state 258
    "tuple"                           shift, and go to state 433
    "variant"                         shift, and go to state 434
    "generator"                       shift, and go to state 435
    "++"                              shift, and go to state 436
    "--"                              shift, and go to state 437
    "::"                              shift, and go to state 55
    "$$"                              shift, and go to state 438
    "$i"                              shift, and go to state 439
    "$v"                              shift, and go to state 440
    "$b"                              shift, and go to state 441
    "$a"                              shift, and go to state 442
    "$c"                              shift, and go to state 443
    "..."                             shift, and go to state 444
    "integer constant"                shift, and go to state 445
    "long integer constant"           shift, and go to state 446
    "unsigned integer constant"       shift, and go to state 447
    "unsigned long integer constant"  shift, and go to state 448
    "unsigned int8 constant"          shift, and go to state 449
    "floating point constant"         shift, and go to state 450
    "double constant"                 shift, and go to state 451
    "name"                            shift, and go to state 56
    "start of the string"             shift, and go to state 452
    '-'                               shift, and go to state 453
    '+'                               shift, and go to state 454
    '*'                               shift, and go to state 455
    '%'                               shift, and go to state 13
    '~'                               shift, and go to state 456
    '!'                               shift, and go to state 457
    '['                               shift, and go to state 458
    '('                               shift, and go to state 459
    '$'                               shift, and go to state 460
    '@'                               shift, and go to state 461
    '{'                               shift, and go to state 462

    string_builder          go to state 463
    expr_reader             go to state 464
    expr_call_pipe          go to state 465
    name_in_namespace       go to state 466
    expr_new                go to state 467
    expr_cast               go to state 468
    expr_type_decl          go to state 469
    expr_type_info          go to state 470
    block_or_lambda         go to state 471
    expr_full_block         go to state 472
    expr_numeric_const      go to state 473
    expr_named_call         go to state 474
    expr_method_call        go to state 475
    func_addr_expr          go to state 476
    expr_field              go to state 477
    expr_call               go to state 478
    expr                    go to state 1094
    expr_generator          go to state 480
    expr_mtag               go to state 481
    basic_type_declaration  go to state 482
    make_decl               go to state 483
    make_struct_decl        go to state 484
    make_tuple_call         go to state 485
    make_dim_decl           go to state 486
    make_table_decl         go to state 487
    array_comprehension     go to state 488


State 921

  349 expr_assign: expr "%=" . expr

    "struct"                          shift, and go to state 414
    "class"                           shift, and go to state 415
    "true"                            shift, and go to state 416
    "false"                           shift, and go to state 417
    "new"                             shift, and go to state 418
    "typeinfo"                        shift, and go to state 419
    "type"                            shift, and go to state 420
    "array"                           shift, and go to state 421
    "null"                            shift, and go to state 422
    "table"                           shift, and go to state 423
    "deref"                           shift, and go to state 424
    "cast"                            shift, and go to state 425
    "upcast"                          shift, and go to state 426
    "addr"                            shift, and go to state 427
    "reinterpret"                     shift, and go to state 428
    "unsafe"                          shift, and go to state 429
    "fixed_array"                     shift, and go to state 430
    "default"                         shift, and go to state 431
    "bool"                            shift, and go to state 228
    "void"                            shift, and go to state 229
    "string"                          shift, and go to state 230
    "int"                             shift, and go to state 232
    "int2"                            shift, and go to state 233
    "int3"                            shift, and go to state 234
    "int4"                            shift, and go to state 235
    "uint"                            shift, and go to state 236
    "bitfield"                        shift, and go to state 432
    "uint2"                           shift, and go to state 238
    "uint3"                           shift, and go to state 239
    "uint4"                           shift, and go to state 240
    "float"                           shift, and go to state 241
    "float2"                          shift, and go to state 242
    "float3"                          shift, and go to state 243
    "float4"                          shift, and go to state 244
    "range"                           shift, and go to state 245
    "urange"                          shift, and go to state 246
    "range64"                         shift, and go to state 247
    "urange64"                        shift, and go to state 248
    "int64"                           shift, and go to state 250
    "uint64"                          shift, and go to state 251
    "double"                          shift, and go to state 252
    "int8"                            shift, and go to state 255
    "uint8"                           shift, and go to state 256
    "int16"                           shift, and go to state 257
    "uint16"                          shift, and go to state 258
    "tuple"                           shift, and go to state 433
    "variant"                         shift, and go to state 434
    "generator"                       shift, and go to state 435
    "++"                              shift, and go to state 436
    "--"                              shift, and go to state 437
    "::"                              shift, and go to state 55
    "$$"                              shift, and go to state 438
    "$i"                              shift, and go to state 439
    "$v"                              shift, and go to state 440
    "$b"                              shift, and go to state 441
    "$a"                              shift, and go to state 442
    "$c"                              shift, and go to state 443
    "..."                             shift, and go to state 444
    "integer constant"                shift, and go to state 445
    "long integer constant"           shift, and go to state 446
    "unsigned integer constant"       shift, and go to state 447
    "unsigned long integer constant"  shift, and go to state 448
    "unsigned int8 constant"          shift, and go to state 449
    "floating point constant"         shift, and go to state 450
    "double constant"                 shift, and go to state 451
    "name"                            shift, and go to state 56
    "start of the string"             shift, and go to state 452
    '-'                               shift, and go to state 453
    '+'                               shift, and go to state 454
    '*'                               shift, and go to state 455
    '%'                               shift, and go to state 13
    '~'                               shift, and go to state 456
    '!'                               shift, and go to state 457
    '['                               shift, and go to state 458
    '('                               shift, and go to state 459
    '$'                               shift, and go to state 460
    '@'                               shift, and go to state 461
    '{'                               shift, and go to state 462

    string_builder          go to state 463
    expr_reader             go to state 464
    expr_call_pipe          go to state 465
    name_in_namespace       go to state 466
    expr_new                go to state 467
    expr_cast               go to state 468
    expr_type_decl          go to state 469
    expr_type_info          go to state 470
    block_or_lambda         go to state 471
    expr_full_block         go to state 472
    expr_numeric_const      go to state 473
    expr_named_call         go to state 474
    expr_method_call        go to state 475
    func_addr_expr          go to state 476
    expr_field              go to state 477
    expr_call               go to state 478
    expr                    go to state 1095
    expr_generator          go to state 480
    expr_mtag               go to state 481
    basic_type_declaration  go to state 482
    make_decl               go to state 483
    make_struct_decl        go to state 484
    make_tuple_call         go to state 485
    make_dim_decl           go to state 486
    make_table_decl         go to state 487
    array_comprehension     go to state 488


State 922

  339 expr_assign: expr "&=" . expr

    "struct"                          shift, and go to state 414
    "class"                           shift, and go to state 415
    "true"                            shift, and go to state 416
    "false"                           shift, and go to state 417
    "new"                             shift, and go to state 418
    "typeinfo"                        shift, and go to state 419
    "type"                            shift, and go to state 420
    "array"                           shift, and go to state 421
    "null"                            shift, and go to state 422
    "table"                           shift, and go to state 423
    "deref"                           shift, and go to state 424
    "cast"                            shift, and go to state 425
    "upcast"                          shift, and go to state 426
    "addr"                            shift, and go to state 427
    "reinterpret"                     shift, and go to state 428
    "unsafe"                          shift, and go to state 429
    "fixed_array"                     shift, and go to state 430
    "default"                         shift, and go to state 431
    "bool"                            shift, and go to state 228
    "void"                            shift, and go to state 229
    "string"                          shift, and go to state 230
    "int"                             shift, and go to state 232
    "int2"                            shift, and go to state 233
    "int3"                            shift, and go to state 234
    "int4"                            shift, and go to state 235
    "uint"                            shift, and go to state 236
    "bitfield"                        shift, and go to state 432
    "uint2"                           shift, and go to state 238
    "uint3"                           shift, and go to state 239
    "uint4"                           shift, and go to state 240
    "float"                           shift, and go to state 241
    "float2"                          shift, and go to state 242
    "float3"                          shift, and go to state 243
    "float4"                          shift, and go to state 244
    "range"                           shift, and go to state 245
    "urange"                          shift, and go to state 246
    "range64"                         shift, and go to state 247
    "urange64"                        shift, and go to state 248
    "int64"                           shift, and go to state 250
    "uint64"                          shift, and go to state 251
    "double"                          shift, and go to state 252
    "int8"                            shift, and go to state 255
    "uint8"                           shift, and go to state 256
    "int16"                           shift, and go to state 257
    "uint16"                          shift, and go to state 258
    "tuple"                           shift, and go to state 433
    "variant"                         shift, and go to state 434
    "generator"                       shift, and go to state 435
    "++"                              shift, and go to state 436
    "--"                              shift, and go to state 437
    "::"                              shift, and go to state 55
    "$$"                              shift, and go to state 438
    "$i"                              shift, and go to state 439
    "$v"                              shift, and go to state 440
    "$b"                              shift, and go to state 441
    "$a"                              shift, and go to state 442
    "$c"                              shift, and go to state 443
    "..."                             shift, and go to state 444
    "integer constant"                shift, and go to state 445
    "long integer constant"           shift, and go to state 446
    "unsigned integer constant"       shift, and go to state 447
    "unsigned long integer constant"  shift, and go to state 448
    "unsigned int8 constant"          shift, and go to state 449
    "floating point constant"         shift, and go to state 450
    "double constant"                 shift, and go to state 451
    "name"                            shift, and go to state 56
    "start of the string"             shift, and go to state 452
    '-'                               shift, and go to state 453
    '+'                               shift, and go to state 454
    '*'                               shift, and go to state 455
    '%'                               shift, and go to state 13
    '~'                               shift, and go to state 456
    '!'                               shift, and go to state 457
    '['                               shift, and go to state 458
    '('                               shift, and go to state 459
    '$'                               shift, and go to state 460
    '@'                               shift, and go to state 461
    '{'                               shift, and go to state 462

    string_builder          go to state 463
    expr_reader             go to state 464
    expr_call_pipe          go to state 465
    name_in_namespace       go to state 466
    expr_new                go to state 467
    expr_cast               go to state 468
    expr_type_decl          go to state 469
    expr_type_info          go to state 470
    block_or_lambda         go to state 471
    expr_full_block         go to state 472
    expr_numeric_const      go to state 473
    expr_named_call         go to state 474
    expr_method_call        go to state 475
    func_addr_expr          go to state 476
    expr_field              go to state 477
    expr_call               go to state 478
    expr                    go to state 1096
    expr_generator          go to state 480
    expr_mtag               go to state 481
    basic_type_declaration  go to state 482
    make_decl               go to state 483
    make_struct_decl        go to state 484
    make_tuple_call         go to state 485
    make_dim_decl           go to state 486
    make_table_decl         go to state 487
    array_comprehension     go to state 488


State 923

  340 expr_assign: expr "|=" . expr

    "struct"                          shift, and go to state 414
    "class"                           shift, and go to state 415
    "true"                            shift, and go to state 416
    "false"                           shift, and go to state 417
    "new"                             shift, and go to state 418
    "typeinfo"                        shift, and go to state 419
    "type"                            shift, and go to state 420
    "array"                           shift, and go to state 421
    "null"                            shift, and go to state 422
    "table"                           shift, and go to state 423
    "deref"                           shift, and go to state 424
    "cast"                            shift, and go to state 425
    "upcast"                          shift, and go to state 426
    "addr"                            shift, and go to state 427
    "reinterpret"                     shift, and go to state 428
    "unsafe"                          shift, and go to state 429
    "fixed_array"                     shift, and go to state 430
    "default"                         shift, and go to state 431
    "bool"                            shift, and go to state 228
    "void"                            shift, and go to state 229
    "string"                          shift, and go to state 230
    "int"                             shift, and go to state 232
    "int2"                            shift, and go to state 233
    "int3"                            shift, and go to state 234
    "int4"                            shift, and go to state 235
    "uint"                            shift, and go to state 236
    "bitfield"                        shift, and go to state 432
    "uint2"                           shift, and go to state 238
    "uint3"                           shift, and go to state 239
    "uint4"                           shift, and go to state 240
    "float"                           shift, and go to state 241
    "float2"                          shift, and go to state 242
    "float3"                          shift, and go to state 243
    "float4"                          shift, and go to state 244
    "range"                           shift, and go to state 245
    "urange"                          shift, and go to state 246
    "range64"                         shift, and go to state 247
    "urange64"                        shift, and go to state 248
    "int64"                           shift, and go to state 250
    "uint64"                          shift, and go to state 251
    "double"                          shift, and go to state 252
    "int8"                            shift, and go to state 255
    "uint8"                           shift, and go to state 256
    "int16"                           shift, and go to state 257
    "uint16"                          shift, and go to state 258
    "tuple"                           shift, and go to state 433
    "variant"                         shift, and go to state 434
    "generator"                       shift, and go to state 435
    "++"                              shift, and go to state 436
    "--"                              shift, and go to state 437
    "::"                              shift, and go to state 55
    "$$"                              shift, and go to state 438
    "$i"                              shift, and go to state 439
    "$v"                              shift, and go to state 440
    "$b"                              shift, and go to state 441
    "$a"                              shift, and go to state 442
    "$c"                              shift, and go to state 443
    "..."                             shift, and go to state 444
    "integer constant"                shift, and go to state 445
    "long integer constant"           shift, and go to state 446
    "unsigned integer constant"       shift, and go to state 447
    "unsigned long integer constant"  shift, and go to state 448
    "unsigned int8 constant"          shift, and go to state 449
    "floating point constant"         shift, and go to state 450
    "double constant"                 shift, and go to state 451
    "name"                            shift, and go to state 56
    "start of the string"             shift, and go to state 452
    '-'                               shift, and go to state 453
    '+'                               shift, and go to state 454
    '*'                               shift, and go to state 455
    '%'                               shift, and go to state 13
    '~'                               shift, and go to state 456
    '!'                               shift, and go to state 457
    '['                               shift, and go to state 458
    '('                               shift, and go to state 459
    '$'                               shift, and go to state 460
    '@'                               shift, and go to state 461
    '{'                               shift, and go to state 462

    string_builder          go to state 463
    expr_reader             go to state 464
    expr_call_pipe          go to state 465
    name_in_namespace       go to state 466
    expr_new                go to state 467
    expr_cast               go to state 468
    expr_type_decl          go to state 469
    expr_type_info          go to state 470
    block_or_lambda         go to state 471
    expr_full_block         go to state 472
    expr_numeric_const      go to state 473
    expr_named_call         go to state 474
    expr_method_call        go to state 475
    func_addr_expr          go to state 476
    expr_field              go to state 477
    expr_call               go to state 478
    expr                    go to state 1097
    expr_generator          go to state 480
    expr_mtag               go to state 481
    basic_type_declaration  go to state 482
    make_decl               go to state 483
    make_struct_decl        go to state 484
    make_tuple_call         go to state 485
    make_dim_decl           go to state 486
    make_table_decl         go to state 487
    array_comprehension     go to state 488


State 924

  341 expr_assign: expr "^=" . expr

    "struct"                          shift, and go to state 414
    "class"                           shift, and go to state 415
    "true"                            shift, and go to state 416
    "false"                           shift, and go to state 417
    "new"                             shift, and go to state 418
    "typeinfo"                        shift, and go to state 419
    "type"                            shift, and go to state 420
    "array"                           shift, and go to state 421
    "null"                            shift, and go to state 422
    "table"                           shift, and go to state 423
    "deref"                           shift, and go to state 424
    "cast"                            shift, and go to state 425
    "upcast"                          shift, and go to state 426
    "addr"                            shift, and go to state 427
    "reinterpret"                     shift, and go to state 428
    "unsafe"                          shift, and go to state 429
    "fixed_array"                     shift, and go to state 430
    "default"                         shift, and go to state 431
    "bool"                            shift, and go to state 228
    "void"                            shift, and go to state 229
    "string"                          shift, and go to state 230
    "int"                             shift, and go to state 232
    "int2"                            shift, and go to state 233
    "int3"                            shift, and go to state 234
    "int4"                            shift, and go to state 235
    "uint"                            shift, and go to state 236
    "bitfield"                        shift, and go to state 432
    "uint2"                           shift, and go to state 238
    "uint3"                           shift, and go to state 239
    "uint4"                           shift, and go to state 240
    "float"                           shift, and go to state 241
    "float2"                          shift, and go to state 242
    "float3"                          shift, and go to state 243
    "float4"                          shift, and go to state 244
    "range"                           shift, and go to state 245
    "urange"                          shift, and go to state 246
    "range64"                         shift, and go to state 247
    "urange64"                        shift, and go to state 248
    "int64"                           shift, and go to state 250
    "uint64"                          shift, and go to state 251
    "double"                          shift, and go to state 252
    "int8"                            shift, and go to state 255
    "uint8"                           shift, and go to state 256
    "int16"                           shift, and go to state 257
    "uint16"                          shift, and go to state 258
    "tuple"                           shift, and go to state 433
    "variant"                         shift, and go to state 434
    "generator"                       shift, and go to state 435
    "++"                              shift, and go to state 436
    "--"                              shift, and go to state 437
    "::"                              shift, and go to state 55
    "$$"                              shift, and go to state 438
    "$i"                              shift, and go to state 439
    "$v"                              shift, and go to state 440
    "$b"                              shift, and go to state 441
    "$a"                              shift, and go to state 442
    "$c"                              shift, and go to state 443
    "..."                             shift, and go to state 444
    "integer constant"                shift, and go to state 445
    "long integer constant"           shift, and go to state 446
    "unsigned integer constant"       shift, and go to state 447
    "unsigned long integer constant"  shift, and go to state 448
    "unsigned int8 constant"          shift, and go to state 449
    "floating point constant"         shift, and go to state 450
    "double constant"                 shift, and go to state 451
    "name"                            shift, and go to state 56
    "start of the string"             shift, and go to state 452
    '-'                               shift, and go to state 453
    '+'                               shift, and go to state 454
    '*'                               shift, and go to state 455
    '%'                               shift, and go to state 13
    '~'                               shift, and go to state 456
    '!'                               shift, and go to state 457
    '['                               shift, and go to state 458
    '('                               shift, and go to state 459
    '$'                               shift, and go to state 460
    '@'                               shift, and go to state 461
    '{'                               shift, and go to state 462

    string_builder          go to state 463
    expr_reader             go to state 464
    expr_call_pipe          go to state 465
    name_in_namespace       go to state 466
    expr_new                go to state 467
    expr_cast               go to state 468
    expr_type_decl          go to state 469
    expr_type_info          go to state 470
    block_or_lambda         go to state 471
    expr_full_block         go to state 472
    expr_numeric_const      go to state 473
    expr_named_call         go to state 474
    expr_method_call        go to state 475
    func_addr_expr          go to state 476
    expr_field              go to state 477
    expr_call               go to state 478
    expr                    go to state 1098
    expr_generator          go to state 480
    expr_mtag               go to state 481
    basic_type_declaration  go to state 482
    make_decl               go to state 483
    make_struct_decl        go to state 484
    make_tuple_call         go to state 485
    make_dim_decl           go to state 486
    make_table_decl         go to state 487
    array_comprehension     go to state 488


State 925

  350 expr_assign: expr "<<=" . expr

    "struct"                          shift, and go to state 414
    "class"                           shift, and go to state 415
    "true"                            shift, and go to state 416
    "false"                           shift, and go to state 417
    "new"                             shift, and go to state 418
    "typeinfo"                        shift, and go to state 419
    "type"                            shift, and go to state 420
    "array"                           shift, and go to state 421
    "null"                            shift, and go to state 422
    "table"                           shift, and go to state 423
    "deref"                           shift, and go to state 424
    "cast"                            shift, and go to state 425
    "upcast"                          shift, and go to state 426
    "addr"                            shift, and go to state 427
    "reinterpret"                     shift, and go to state 428
    "unsafe"                          shift, and go to state 429
    "fixed_array"                     shift, and go to state 430
    "default"                         shift, and go to state 431
    "bool"                            shift, and go to state 228
    "void"                            shift, and go to state 229
    "string"                          shift, and go to state 230
    "int"                             shift, and go to state 232
    "int2"                            shift, and go to state 233
    "int3"                            shift, and go to state 234
    "int4"                            shift, and go to state 235
    "uint"                            shift, and go to state 236
    "bitfield"                        shift, and go to state 432
    "uint2"                           shift, and go to state 238
    "uint3"                           shift, and go to state 239
    "uint4"                           shift, and go to state 240
    "float"                           shift, and go to state 241
    "float2"                          shift, and go to state 242
    "float3"                          shift, and go to state 243
    "float4"                          shift, and go to state 244
    "range"                           shift, and go to state 245
    "urange"                          shift, and go to state 246
    "range64"                         shift, and go to state 247
    "urange64"                        shift, and go to state 248
    "int64"                           shift, and go to state 250
    "uint64"                          shift, and go to state 251
    "double"                          shift, and go to state 252
    "int8"                            shift, and go to state 255
    "uint8"                           shift, and go to state 256
    "int16"                           shift, and go to state 257
    "uint16"                          shift, and go to state 258
    "tuple"                           shift, and go to state 433
    "variant"                         shift, and go to state 434
    "generator"                       shift, and go to state 435
    "++"                              shift, and go to state 436
    "--"                              shift, and go to state 437
    "::"                              shift, and go to state 55
    "$$"                              shift, and go to state 438
    "$i"                              shift, and go to state 439
    "$v"                              shift, and go to state 440
    "$b"                              shift, and go to state 441
    "$a"                              shift, and go to state 442
    "$c"                              shift, and go to state 443
    "..."                             shift, and go to state 444
    "integer constant"                shift, and go to state 445
    "long integer constant"           shift, and go to state 446
    "unsigned integer constant"       shift, and go to state 447
    "unsigned long integer constant"  shift, and go to state 448
    "unsigned int8 constant"          shift, and go to state 449
    "floating point constant"         shift, and go to state 450
    "double constant"                 shift, and go to state 451
    "name"                            shift, and go to state 56
    "start of the string"             shift, and go to state 452
    '-'                               shift, and go to state 453
    '+'                               shift, and go to state 454
    '*'                               shift, and go to state 455
    '%'                               shift, and go to state 13
    '~'                               shift, and go to state 456
    '!'                               shift, and go to state 457
    '['                               shift, and go to state 458
    '('                               shift, and go to state 459
    '$'                               shift, and go to state 460
    '@'                               shift, and go to state 461
    '{'                               shift, and go to state 462

    string_builder          go to state 463
    expr_reader             go to state 464
    expr_call_pipe          go to state 465
    name_in_namespace       go to state 466
    expr_new                go to state 467
    expr_cast               go to state 468
    expr_type_decl          go to state 469
    expr_type_info          go to state 470
    block_or_lambda         go to state 471
    expr_full_block         go to state 472
    expr_numeric_const      go to state 473
    expr_named_call         go to state 474
    expr_method_call        go to state 475
    func_addr_expr          go to state 476
    expr_field              go to state 477
    expr_call               go to state 478
    expr                    go to state 1099
    expr_generator          go to state 480
    expr_mtag               go to state 481
    basic_type_declaration  go to state 482
    make_decl               go to state 483
    make_struct_decl        go to state 484
    make_tuple_call         go to state 485
    make_dim_decl           go to state 486
    make_table_decl         go to state 487
    array_comprehension     go to state 488


State 926

  351 expr_assign: expr ">>=" . expr

    "struct"                          shift, and go to state 414
    "class"                           shift, and go to state 415
    "true"                            shift, and go to state 416
    "false"                           shift, and go to state 417
    "new"                             shift, and go to state 418
    "typeinfo"                        shift, and go to state 419
    "type"                            shift, and go to state 420
    "array"                           shift, and go to state 421
    "null"                            shift, and go to state 422
    "table"                           shift, and go to state 423
    "deref"                           shift, and go to state 424
    "cast"                            shift, and go to state 425
    "upcast"                          shift, and go to state 426
    "addr"                            shift, and go to state 427
    "reinterpret"                     shift, and go to state 428
    "unsafe"                          shift, and go to state 429
    "fixed_array"                     shift, and go to state 430
    "default"                         shift, and go to state 431
    "bool"                            shift, and go to state 228
    "void"                            shift, and go to state 229
    "string"                          shift, and go to state 230
    "int"                             shift, and go to state 232
    "int2"                            shift, and go to state 233
    "int3"                            shift, and go to state 234
    "int4"                            shift, and go to state 235
    "uint"                            shift, and go to state 236
    "bitfield"                        shift, and go to state 432
    "uint2"                           shift, and go to state 238
    "uint3"                           shift, and go to state 239
    "uint4"                           shift, and go to state 240
    "float"                           shift, and go to state 241
    "float2"                          shift, and go to state 242
    "float3"                          shift, and go to state 243
    "float4"                          shift, and go to state 244
    "range"                           shift, and go to state 245
    "urange"                          shift, and go to state 246
    "range64"                         shift, and go to state 247
    "urange64"                        shift, and go to state 248
    "int64"                           shift, and go to state 250
    "uint64"                          shift, and go to state 251
    "double"                          shift, and go to state 252
    "int8"                            shift, and go to state 255
    "uint8"                           shift, and go to state 256
    "int16"                           shift, and go to state 257
    "uint16"                          shift, and go to state 258
    "tuple"                           shift, and go to state 433
    "variant"                         shift, and go to state 434
    "generator"                       shift, and go to state 435
    "++"                              shift, and go to state 436
    "--"                              shift, and go to state 437
    "::"                              shift, and go to state 55
    "$$"                              shift, and go to state 438
    "$i"                              shift, and go to state 439
    "$v"                              shift, and go to state 440
    "$b"                              shift, and go to state 441
    "$a"                              shift, and go to state 442
    "$c"                              shift, and go to state 443
    "..."                             shift, and go to state 444
    "integer constant"                shift, and go to state 445
    "long integer constant"           shift, and go to state 446
    "unsigned integer constant"       shift, and go to state 447
    "unsigned long integer constant"  shift, and go to state 448
    "unsigned int8 constant"          shift, and go to state 449
    "floating point constant"         shift, and go to state 450
    "double constant"                 shift, and go to state 451
    "name"                            shift, and go to state 56
    "start of the string"             shift, and go to state 452
    '-'                               shift, and go to state 453
    '+'                               shift, and go to state 454
    '*'                               shift, and go to state 455
    '%'                               shift, and go to state 13
    '~'                               shift, and go to state 456
    '!'                               shift, and go to state 457
    '['                               shift, and go to state 458
    '('                               shift, and go to state 459
    '$'                               shift, and go to state 460
    '@'                               shift, and go to state 461
    '{'                               shift, and go to state 462

    string_builder          go to state 463
    expr_reader             go to state 464
    expr_call_pipe          go to state 465
    name_in_namespace       go to state 466
    expr_new                go to state 467
    expr_cast               go to state 468
    expr_type_decl          go to state 469
    expr_type_info          go to state 470
    block_or_lambda         go to state 471
    expr_full_block         go to state 472
    expr_numeric_const      go to state 473
    expr_named_call         go to state 474
    expr_method_call        go to state 475
    func_addr_expr          go to state 476
    expr_field              go to state 477
    expr_call               go to state 478
    expr                    go to state 1100
    expr_generator          go to state 480
    expr_mtag               go to state 481
    basic_type_declaration  go to state 482
    make_decl               go to state 483
    make_struct_decl        go to state 484
    make_tuple_call         go to state 485
    make_dim_decl           go to state 486
    make_table_decl         go to state 487
    array_comprehension     go to state 488


State 927

  337 expr_assign: expr "<-" . expr

    "struct"                          shift, and go to state 414
    "class"                           shift, and go to state 415
    "true"                            shift, and go to state 416
    "false"                           shift, and go to state 417
    "new"                             shift, and go to state 418
    "typeinfo"                        shift, and go to state 419
    "type"                            shift, and go to state 420
    "array"                           shift, and go to state 421
    "null"                            shift, and go to state 422
    "table"                           shift, and go to state 423
    "deref"                           shift, and go to state 424
    "cast"                            shift, and go to state 425
    "upcast"                          shift, and go to state 426
    "addr"                            shift, and go to state 427
    "reinterpret"                     shift, and go to state 428
    "unsafe"                          shift, and go to state 429
    "fixed_array"                     shift, and go to state 430
    "default"                         shift, and go to state 431
    "bool"                            shift, and go to state 228
    "void"                            shift, and go to state 229
    "string"                          shift, and go to state 230
    "int"                             shift, and go to state 232
    "int2"                            shift, and go to state 233
    "int3"                            shift, and go to state 234
    "int4"                            shift, and go to state 235
    "uint"                            shift, and go to state 236
    "bitfield"                        shift, and go to state 432
    "uint2"                           shift, and go to state 238
    "uint3"                           shift, and go to state 239
    "uint4"                           shift, and go to state 240
    "float"                           shift, and go to state 241
    "float2"                          shift, and go to state 242
    "float3"                          shift, and go to state 243
    "float4"                          shift, and go to state 244
    "range"                           shift, and go to state 245
    "urange"                          shift, and go to state 246
    "range64"                         shift, and go to state 247
    "urange64"                        shift, and go to state 248
    "int64"                           shift, and go to state 250
    "uint64"                          shift, and go to state 251
    "double"                          shift, and go to state 252
    "int8"                            shift, and go to state 255
    "uint8"                           shift, and go to state 256
    "int16"                           shift, and go to state 257
    "uint16"                          shift, and go to state 258
    "tuple"                           shift, and go to state 433
    "variant"                         shift, and go to state 434
    "generator"                       shift, and go to state 435
    "++"                              shift, and go to state 436
    "--"                              shift, and go to state 437
    "::"                              shift, and go to state 55
    "$$"                              shift, and go to state 438
    "$i"                              shift, and go to state 439
    "$v"                              shift, and go to state 440
    "$b"                              shift, and go to state 441
    "$a"                              shift, and go to state 442
    "$c"                              shift, and go to state 443
    "..."                             shift, and go to state 444
    "integer constant"                shift, and go to state 445
    "long integer constant"           shift, and go to state 446
    "unsigned integer constant"       shift, and go to state 447
    "unsigned long integer constant"  shift, and go to state 448
    "unsigned int8 constant"          shift, and go to state 449
    "floating point constant"         shift, and go to state 450
    "double constant"                 shift, and go to state 451
    "name"                            shift, and go to state 56
    "start of the string"             shift, and go to state 452
    '-'                               shift, and go to state 453
    '+'                               shift, and go to state 454
    '*'                               shift, and go to state 455
    '%'                               shift, and go to state 13
    '~'                               shift, and go to state 456
    '!'                               shift, and go to state 457
    '['                               shift, and go to state 458
    '('                               shift, and go to state 459
    '$'                               shift, and go to state 460
    '@'                               shift, and go to state 461
    '{'                               shift, and go to state 462

    string_builder          go to state 463
    expr_reader             go to state 464
    expr_call_pipe          go to state 465
    name_in_namespace       go to state 466
    expr_new                go to state 467
    expr_cast               go to state 468
    expr_type_decl          go to state 469
    expr_type_info          go to state 470
    block_or_lambda         go to state 471
    expr_full_block         go to state 472
    expr_numeric_const      go to state 473
    expr_named_call         go to state 474
    expr_method_call        go to state 475
    func_addr_expr          go to state 476
    expr_field              go to state 477
    expr_call               go to state 478
    expr                    go to state 1101
    expr_generator          go to state 480
    expr_mtag               go to state 481
    basic_type_declaration  go to state 482
    make_decl               go to state 483
    make_struct_decl        go to state 484
    make_tuple_call         go to state 485
    make_dim_decl           go to state 486
    make_table_decl         go to state 487
    array_comprehension     go to state 488


State 928

  338 expr_assign: expr ":=" . expr

    "struct"                          shift, and go to state 414
    "class"                           shift, and go to state 415
    "true"                            shift, and go to state 416
    "false"                           shift, and go to state 417
    "new"                             shift, and go to state 418
    "typeinfo"                        shift, and go to state 419
    "type"                            shift, and go to state 420
    "array"                           shift, and go to state 421
    "null"                            shift, and go to state 422
    "table"                           shift, and go to state 423
    "deref"                           shift, and go to state 424
    "cast"                            shift, and go to state 425
    "upcast"                          shift, and go to state 426
    "addr"                            shift, and go to state 427
    "reinterpret"                     shift, and go to state 428
    "unsafe"                          shift, and go to state 429
    "fixed_array"                     shift, and go to state 430
    "default"                         shift, and go to state 431
    "bool"                            shift, and go to state 228
    "void"                            shift, and go to state 229
    "string"                          shift, and go to state 230
    "int"                             shift, and go to state 232
    "int2"                            shift, and go to state 233
    "int3"                            shift, and go to state 234
    "int4"                            shift, and go to state 235
    "uint"                            shift, and go to state 236
    "bitfield"                        shift, and go to state 432
    "uint2"                           shift, and go to state 238
    "uint3"                           shift, and go to state 239
    "uint4"                           shift, and go to state 240
    "float"                           shift, and go to state 241
    "float2"                          shift, and go to state 242
    "float3"                          shift, and go to state 243
    "float4"                          shift, and go to state 244
    "range"                           shift, and go to state 245
    "urange"                          shift, and go to state 246
    "range64"                         shift, and go to state 247
    "urange64"                        shift, and go to state 248
    "int64"                           shift, and go to state 250
    "uint64"                          shift, and go to state 251
    "double"                          shift, and go to state 252
    "int8"                            shift, and go to state 255
    "uint8"                           shift, and go to state 256
    "int16"                           shift, and go to state 257
    "uint16"                          shift, and go to state 258
    "tuple"                           shift, and go to state 433
    "variant"                         shift, and go to state 434
    "generator"                       shift, and go to state 435
    "++"                              shift, and go to state 436
    "--"                              shift, and go to state 437
    "::"                              shift, and go to state 55
    "$$"                              shift, and go to state 438
    "$i"                              shift, and go to state 439
    "$v"                              shift, and go to state 440
    "$b"                              shift, and go to state 441
    "$a"                              shift, and go to state 442
    "$c"                              shift, and go to state 443
    "..."                             shift, and go to state 444
    "integer constant"                shift, and go to state 445
    "long integer constant"           shift, and go to state 446
    "unsigned integer constant"       shift, and go to state 447
    "unsigned long integer constant"  shift, and go to state 448
    "unsigned int8 constant"          shift, and go to state 449
    "floating point constant"         shift, and go to state 450
    "double constant"                 shift, and go to state 451
    "name"                            shift, and go to state 56
    "start of the string"             shift, and go to state 452
    '-'                               shift, and go to state 453
    '+'                               shift, and go to state 454
    '*'                               shift, and go to state 455
    '%'                               shift, and go to state 13
    '~'                               shift, and go to state 456
    '!'                               shift, and go to state 457
    '['                               shift, and go to state 458
    '('                               shift, and go to state 459
    '$'                               shift, and go to state 460
    '@'                               shift, and go to state 461
    '{'                               shift, and go to state 462

    string_builder          go to state 463
    expr_reader             go to state 464
    expr_call_pipe          go to state 465
    name_in_namespace       go to state 466
    expr_new                go to state 467
    expr_cast               go to state 468
    expr_type_decl          go to state 469
    expr_type_info          go to state 470
    block_or_lambda         go to state 471
    expr_full_block         go to state 472
    expr_numeric_const      go to state 473
    expr_named_call         go to state 474
    expr_method_call        go to state 475
    func_addr_expr          go to state 476
    expr_field              go to state 477
    expr_call               go to state 478
    expr                    go to state 1102
    expr_generator          go to state 480
    expr_mtag               go to state 481
    basic_type_declaration  go to state 482
    make_decl               go to state 483
    make_struct_decl        go to state 484
    make_tuple_call         go to state 485
    make_dim_decl           go to state 486
    make_table_decl         go to state 487
    array_comprehension     go to state 488


State 929

  352 expr_assign: expr "<<<=" . expr

    "struct"                          shift, and go to state 414
    "class"                           shift, and go to state 415
    "true"                            shift, and go to state 416
    "false"                           shift, and go to state 417
    "new"                             shift, and go to state 418
    "typeinfo"                        shift, and go to state 419
    "type"                            shift, and go to state 420
    "array"                           shift, and go to state 421
    "null"                            shift, and go to state 422
    "table"                           shift, and go to state 423
    "deref"                           shift, and go to state 424
    "cast"                            shift, and go to state 425
    "upcast"                          shift, and go to state 426
    "addr"                            shift, and go to state 427
    "reinterpret"                     shift, and go to state 428
    "unsafe"                          shift, and go to state 429
    "fixed_array"                     shift, and go to state 430
    "default"                         shift, and go to state 431
    "bool"                            shift, and go to state 228
    "void"                            shift, and go to state 229
    "string"                          shift, and go to state 230
    "int"                             shift, and go to state 232
    "int2"                            shift, and go to state 233
    "int3"                            shift, and go to state 234
    "int4"                            shift, and go to state 235
    "uint"                            shift, and go to state 236
    "bitfield"                        shift, and go to state 432
    "uint2"                           shift, and go to state 238
    "uint3"                           shift, and go to state 239
    "uint4"                           shift, and go to state 240
    "float"                           shift, and go to state 241
    "float2"                          shift, and go to state 242
    "float3"                          shift, and go to state 243
    "float4"                          shift, and go to state 244
    "range"                           shift, and go to state 245
    "urange"                          shift, and go to state 246
    "range64"                         shift, and go to state 247
    "urange64"                        shift, and go to state 248
    "int64"                           shift, and go to state 250
    "uint64"                          shift, and go to state 251
    "double"                          shift, and go to state 252
    "int8"                            shift, and go to state 255
    "uint8"                           shift, and go to state 256
    "int16"                           shift, and go to state 257
    "uint16"                          shift, and go to state 258
    "tuple"                           shift, and go to state 433
    "variant"                         shift, and go to state 434
    "generator"                       shift, and go to state 435
    "++"                              shift, and go to state 436
    "--"                              shift, and go to state 437
    "::"                              shift, and go to state 55
    "$$"                              shift, and go to state 438
    "$i"                              shift, and go to state 439
    "$v"                              shift, and go to state 440
    "$b"                              shift, and go to state 441
    "$a"                              shift, and go to state 442
    "$c"                              shift, and go to state 443
    "..."                             shift, and go to state 444
    "integer constant"                shift, and go to state 445
    "long integer constant"           shift, and go to state 446
    "unsigned integer constant"       shift, and go to state 447
    "unsigned long integer constant"  shift, and go to state 448
    "unsigned int8 constant"          shift, and go to state 449
    "floating point constant"         shift, and go to state 450
    "double constant"                 shift, and go to state 451
    "name"                            shift, and go to state 56
    "start of the string"             shift, and go to state 452
    '-'                               shift, and go to state 453
    '+'                               shift, and go to state 454
    '*'                               shift, and go to state 455
    '%'                               shift, and go to state 13
    '~'                               shift, and go to state 456
    '!'                               shift, and go to state 457
    '['                               shift, and go to state 458
    '('                               shift, and go to state 459
    '$'                               shift, and go to state 460
    '@'                               shift, and go to state 461
    '{'                               shift, and go to state 462

    string_builder          go to state 463
    expr_reader             go to state 464
    expr_call_pipe          go to state 465
    name_in_namespace       go to state 466
    expr_new                go to state 467
    expr_cast               go to state 468
    expr_type_decl          go to state 469
    expr_type_info          go to state 470
    block_or_lambda         go to state 471
    expr_full_block         go to state 472
    expr_numeric_const      go to state 473
    expr_named_call         go to state 474
    expr_method_call        go to state 475
    func_addr_expr          go to state 476
    expr_field              go to state 477
    expr_call               go to state 478
    expr                    go to state 1103
    expr_generator          go to state 480
    expr_mtag               go to state 481
    basic_type_declaration  go to state 482
    make_decl               go to state 483
    make_struct_decl        go to state 484
    make_tuple_call         go to state 485
    make_dim_decl           go to state 486
    make_table_decl         go to state 487
    array_comprehension     go to state 488


State 930

  353 expr_assign: expr ">>>=" . expr

    "struct"                          shift, and go to state 414
    "class"                           shift, and go to state 415
    "true"                            shift, and go to state 416
    "false"                           shift, and go to state 417
    "new"                             shift, and go to state 418
    "typeinfo"                        shift, and go to state 419
    "type"                            shift, and go to state 420
    "array"                           shift, and go to state 421
    "null"                            shift, and go to state 422
    "table"                           shift, and go to state 423
    "deref"                           shift, and go to state 424
    "cast"                            shift, and go to state 425
    "upcast"                          shift, and go to state 426
    "addr"                            shift, and go to state 427
    "reinterpret"                     shift, and go to state 428
    "unsafe"                          shift, and go to state 429
    "fixed_array"                     shift, and go to state 430
    "default"                         shift, and go to state 431
    "bool"                            shift, and go to state 228
    "void"                            shift, and go to state 229
    "string"                          shift, and go to state 230
    "int"                             shift, and go to state 232
    "int2"                            shift, and go to state 233
    "int3"                            shift, and go to state 234
    "int4"                            shift, and go to state 235
    "uint"                            shift, and go to state 236
    "bitfield"                        shift, and go to state 432
    "uint2"                           shift, and go to state 238
    "uint3"                           shift, and go to state 239
    "uint4"                           shift, and go to state 240
    "float"                           shift, and go to state 241
    "float2"                          shift, and go to state 242
    "float3"                          shift, and go to state 243
    "float4"                          shift, and go to state 244
    "range"                           shift, and go to state 245
    "urange"                          shift, and go to state 246
    "range64"                         shift, and go to state 247
    "urange64"                        shift, and go to state 248
    "int64"                           shift, and go to state 250
    "uint64"                          shift, and go to state 251
    "double"                          shift, and go to state 252
    "int8"                            shift, and go to state 255
    "uint8"                           shift, and go to state 256
    "int16"                           shift, and go to state 257
    "uint16"                          shift, and go to state 258
    "tuple"                           shift, and go to state 433
    "variant"                         shift, and go to state 434
    "generator"                       shift, and go to state 435
    "++"                              shift, and go to state 436
    "--"                              shift, and go to state 437
    "::"                              shift, and go to state 55
    "$$"                              shift, and go to state 438
    "$i"                              shift, and go to state 439
    "$v"                              shift, and go to state 440
    "$b"                              shift, and go to state 441
    "$a"                              shift, and go to state 442
    "$c"                              shift, and go to state 443
    "..."                             shift, and go to state 444
    "integer constant"                shift, and go to state 445
    "long integer constant"           shift, and go to state 446
    "unsigned integer constant"       shift, and go to state 447
    "unsigned long integer constant"  shift, and go to state 448
    "unsigned int8 constant"          shift, and go to state 449
    "floating point constant"         shift, and go to state 450
    "double constant"                 shift, and go to state 451
    "name"                            shift, and go to state 56
    "start of the string"             shift, and go to state 452
    '-'                               shift, and go to state 453
    '+'                               shift, and go to state 454
    '*'                               shift, and go to state 455
    '%'                               shift, and go to state 13
    '~'                               shift, and go to state 456
    '!'                               shift, and go to state 457
    '['                               shift, and go to state 458
    '('                               shift, and go to state 459
    '$'                               shift, and go to state 460
    '@'                               shift, and go to state 461
    '{'                               shift, and go to state 462

    string_builder          go to state 463
    expr_reader             go to state 464
    expr_call_pipe          go to state 465
    name_in_namespace       go to state 466
    expr_new                go to state 467
    expr_cast               go to state 468
    expr_type_decl          go to state 469
    expr_type_info          go to state 470
    block_or_lambda         go to state 471
    expr_full_block         go to state 472
    expr_numeric_const      go to state 473
    expr_named_call         go to state 474
    expr_method_call        go to state 475
    func_addr_expr          go to state 476
    expr_field              go to state 477
    expr_call               go to state 478
    expr                    go to state 1104
    expr_generator          go to state 480
    expr_mtag               go to state 481
    basic_type_declaration  go to state 482
    make_decl               go to state 483
    make_struct_decl        go to state 484
    make_tuple_call         go to state 485
    make_dim_decl           go to state 486
    make_table_decl         go to state 487
    array_comprehension     go to state 488


State 931

  342 expr_assign: expr "&&=" . expr

    "struct"                          shift, and go to state 414
    "class"                           shift, and go to state 415
    "true"                            shift, and go to state 416
    "false"                           shift, and go to state 417
    "new"                             shift, and go to state 418
    "typeinfo"                        shift, and go to state 419
    "type"                            shift, and go to state 420
    "array"                           shift, and go to state 421
    "null"                            shift, and go to state 422
    "table"                           shift, and go to state 423
    "deref"                           shift, and go to state 424
    "cast"                            shift, and go to state 425
    "upcast"                          shift, and go to state 426
    "addr"                            shift, and go to state 427
    "reinterpret"                     shift, and go to state 428
    "unsafe"                          shift, and go to state 429
    "fixed_array"                     shift, and go to state 430
    "default"                         shift, and go to state 431
    "bool"                            shift, and go to state 228
    "void"                            shift, and go to state 229
    "string"                          shift, and go to state 230
    "int"                             shift, and go to state 232
    "int2"                            shift, and go to state 233
    "int3"                            shift, and go to state 234
    "int4"                            shift, and go to state 235
    "uint"                            shift, and go to state 236
    "bitfield"                        shift, and go to state 432
    "uint2"                           shift, and go to state 238
    "uint3"                           shift, and go to state 239
    "uint4"                           shift, and go to state 240
    "float"                           shift, and go to state 241
    "float2"                          shift, and go to state 242
    "float3"                          shift, and go to state 243
    "float4"                          shift, and go to state 244
    "range"                           shift, and go to state 245
    "urange"                          shift, and go to state 246
    "range64"                         shift, and go to state 247
    "urange64"                        shift, and go to state 248
    "int64"                           shift, and go to state 250
    "uint64"                          shift, and go to state 251
    "double"                          shift, and go to state 252
    "int8"                            shift, and go to state 255
    "uint8"                           shift, and go to state 256
    "int16"                           shift, and go to state 257
    "uint16"                          shift, and go to state 258
    "tuple"                           shift, and go to state 433
    "variant"                         shift, and go to state 434
    "generator"                       shift, and go to state 435
    "++"                              shift, and go to state 436
    "--"                              shift, and go to state 437
    "::"                              shift, and go to state 55
    "$$"                              shift, and go to state 438
    "$i"                              shift, and go to state 439
    "$v"                              shift, and go to state 440
    "$b"                              shift, and go to state 441
    "$a"                              shift, and go to state 442
    "$c"                              shift, and go to state 443
    "..."                             shift, and go to state 444
    "integer constant"                shift, and go to state 445
    "long integer constant"           shift, and go to state 446
    "unsigned integer constant"       shift, and go to state 447
    "unsigned long integer constant"  shift, and go to state 448
    "unsigned int8 constant"          shift, and go to state 449
    "floating point constant"         shift, and go to state 450
    "double constant"                 shift, and go to state 451
    "name"                            shift, and go to state 56
    "start of the string"             shift, and go to state 452
    '-'                               shift, and go to state 453
    '+'                               shift, and go to state 454
    '*'                               shift, and go to state 455
    '%'                               shift, and go to state 13
    '~'                               shift, and go to state 456
    '!'                               shift, and go to state 457
    '['                               shift, and go to state 458
    '('                               shift, and go to state 459
    '$'                               shift, and go to state 460
    '@'                               shift, and go to state 461
    '{'                               shift, and go to state 462

    string_builder          go to state 463
    expr_reader             go to state 464
    expr_call_pipe          go to state 465
    name_in_namespace       go to state 466
    expr_new                go to state 467
    expr_cast               go to state 468
    expr_type_decl          go to state 469
    expr_type_info          go to state 470
    block_or_lambda         go to state 471
    expr_full_block         go to state 472
    expr_numeric_const      go to state 473
    expr_named_call         go to state 474
    expr_method_call        go to state 475
    func_addr_expr          go to state 476
    expr_field              go to state 477
    expr_call               go to state 478
    expr                    go to state 1105
    expr_generator          go to state 480
    expr_mtag               go to state 481
    basic_type_declaration  go to state 482
    make_decl               go to state 483
    make_struct_decl        go to state 484
    make_tuple_call         go to state 485
    make_dim_decl           go to state 486
    make_table_decl         go to state 487
    array_comprehension     go to state 488


State 932

  343 expr_assign: expr "||=" . expr

    "struct"                          shift, and go to state 414
    "class"                           shift, and go to state 415
    "true"                            shift, and go to state 416
    "false"                           shift, and go to state 417
    "new"                             shift, and go to state 418
    "typeinfo"                        shift, and go to state 419
    "type"                            shift, and go to state 420
    "array"                           shift, and go to state 421
    "null"                            shift, and go to state 422
    "table"                           shift, and go to state 423
    "deref"                           shift, and go to state 424
    "cast"                            shift, and go to state 425
    "upcast"                          shift, and go to state 426
    "addr"                            shift, and go to state 427
    "reinterpret"                     shift, and go to state 428
    "unsafe"                          shift, and go to state 429
    "fixed_array"                     shift, and go to state 430
    "default"                         shift, and go to state 431
    "bool"                            shift, and go to state 228
    "void"                            shift, and go to state 229
    "string"                          shift, and go to state 230
    "int"                             shift, and go to state 232
    "int2"                            shift, and go to state 233
    "int3"                            shift, and go to state 234
    "int4"                            shift, and go to state 235
    "uint"                            shift, and go to state 236
    "bitfield"                        shift, and go to state 432
    "uint2"                           shift, and go to state 238
    "uint3"                           shift, and go to state 239
    "uint4"                           shift, and go to state 240
    "float"                           shift, and go to state 241
    "float2"                          shift, and go to state 242
    "float3"                          shift, and go to state 243
    "float4"                          shift, and go to state 244
    "range"                           shift, and go to state 245
    "urange"                          shift, and go to state 246
    "range64"                         shift, and go to state 247
    "urange64"                        shift, and go to state 248
    "int64"                           shift, and go to state 250
    "uint64"                          shift, and go to state 251
    "double"                          shift, and go to state 252
    "int8"                            shift, and go to state 255
    "uint8"                           shift, and go to state 256
    "int16"                           shift, and go to state 257
    "uint16"                          shift, and go to state 258
    "tuple"                           shift, and go to state 433
    "variant"                         shift, and go to state 434
    "generator"                       shift, and go to state 435
    "++"                              shift, and go to state 436
    "--"                              shift, and go to state 437
    "::"                              shift, and go to state 55
    "$$"                              shift, and go to state 438
    "$i"                              shift, and go to state 439
    "$v"                              shift, and go to state 440
    "$b"                              shift, and go to state 441
    "$a"                              shift, and go to state 442
    "$c"                              shift, and go to state 443
    "..."                             shift, and go to state 444
    "integer constant"                shift, and go to state 445
    "long integer constant"           shift, and go to state 446
    "unsigned integer constant"       shift, and go to state 447
    "unsigned long integer constant"  shift, and go to state 448
    "unsigned int8 constant"          shift, and go to state 449
    "floating point constant"         shift, and go to state 450
    "double constant"                 shift, and go to state 451
    "name"                            shift, and go to state 56
    "start of the string"             shift, and go to state 452
    '-'                               shift, and go to state 453
    '+'                               shift, and go to state 454
    '*'                               shift, and go to state 455
    '%'                               shift, and go to state 13
    '~'                               shift, and go to state 456
    '!'                               shift, and go to state 457
    '['                               shift, and go to state 458
    '('                               shift, and go to state 459
    '$'                               shift, and go to state 460
    '@'                               shift, and go to state 461
    '{'                               shift, and go to state 462

    string_builder          go to state 463
    expr_reader             go to state 464
    expr_call_pipe          go to state 465
    name_in_namespace       go to state 466
    expr_new                go to state 467
    expr_cast               go to state 468
    expr_type_decl          go to state 469
    expr_type_info          go to state 470
    block_or_lambda         go to state 471
    expr_full_block         go to state 472
    expr_numeric_const      go to state 473
    expr_named_call         go to state 474
    expr_method_call        go to state 475
    func_addr_expr          go to state 476
    expr_field              go to state 477
    expr_call               go to state 478
    expr                    go to state 1106
    expr_generator          go to state 480
    expr_mtag               go to state 481
    basic_type_declaration  go to state 482
    make_decl               go to state 483
    make_struct_decl        go to state 484
    make_tuple_call         go to state 485
    make_dim_decl           go to state 486
    make_table_decl         go to state 487
    array_comprehension     go to state 488


State 933

  344 expr_assign: expr "^^=" . expr

    "struct"                          shift, and go to state 414
    "class"                           shift, and go to state 415
    "true"                            shift, and go to state 416
    "false"                           shift, and go to state 417
    "new"                             shift, and go to state 418
    "typeinfo"                        shift, and go to state 419
    "type"                            shift, and go to state 420
    "array"                           shift, and go to state 421
    "null"                            shift, and go to state 422
    "table"                           shift, and go to state 423
    "deref"                           shift, and go to state 424
    "cast"                            shift, and go to state 425
    "upcast"                          shift, and go to state 426
    "addr"                            shift, and go to state 427
    "reinterpret"                     shift, and go to state 428
    "unsafe"                          shift, and go to state 429
    "fixed_array"                     shift, and go to state 430
    "default"                         shift, and go to state 431
    "bool"                            shift, and go to state 228
    "void"                            shift, and go to state 229
    "string"                          shift, and go to state 230
    "int"                             shift, and go to state 232
    "int2"                            shift, and go to state 233
    "int3"                            shift, and go to state 234
    "int4"                            shift, and go to state 235
    "uint"                            shift, and go to state 236
    "bitfield"                        shift, and go to state 432
    "uint2"                           shift, and go to state 238
    "uint3"                           shift, and go to state 239
    "uint4"                           shift, and go to state 240
    "float"                           shift, and go to state 241
    "float2"                          shift, and go to state 242
    "float3"                          shift, and go to state 243
    "float4"                          shift, and go to state 244
    "range"                           shift, and go to state 245
    "urange"                          shift, and go to state 246
    "range64"                         shift, and go to state 247
    "urange64"                        shift, and go to state 248
    "int64"                           shift, and go to state 250
    "uint64"                          shift, and go to state 251
    "double"                          shift, and go to state 252
    "int8"                            shift, and go to state 255
    "uint8"                           shift, and go to state 256
    "int16"                           shift, and go to state 257
    "uint16"                          shift, and go to state 258
    "tuple"                           shift, and go to state 433
    "variant"                         shift, and go to state 434
    "generator"                       shift, and go to state 435
    "++"                              shift, and go to state 436
    "--"                              shift, and go to state 437
    "::"                              shift, and go to state 55
    "$$"                              shift, and go to state 438
    "$i"                              shift, and go to state 439
    "$v"                              shift, and go to state 440
    "$b"                              shift, and go to state 441
    "$a"                              shift, and go to state 442
    "$c"                              shift, and go to state 443
    "..."                             shift, and go to state 444
    "integer constant"                shift, and go to state 445
    "long integer constant"           shift, and go to state 446
    "unsigned integer constant"       shift, and go to state 447
    "unsigned long integer constant"  shift, and go to state 448
    "unsigned int8 constant"          shift, and go to state 449
    "floating point constant"         shift, and go to state 450
    "double constant"                 shift, and go to state 451
    "name"                            shift, and go to state 56
    "start of the string"             shift, and go to state 452
    '-'                               shift, and go to state 453
    '+'                               shift, and go to state 454
    '*'                               shift, and go to state 455
    '%'                               shift, and go to state 13
    '~'                               shift, and go to state 456
    '!'                               shift, and go to state 457
    '['                               shift, and go to state 458
    '('                               shift, and go to state 459
    '$'                               shift, and go to state 460
    '@'                               shift, and go to state 461
    '{'                               shift, and go to state 462

    string_builder          go to state 463
    expr_reader             go to state 464
    expr_call_pipe          go to state 465
    name_in_namespace       go to state 466
    expr_new                go to state 467
    expr_cast               go to state 468
    expr_type_decl          go to state 469
    expr_type_info          go to state 470
    block_or_lambda         go to state 471
    expr_full_block         go to state 472
    expr_numeric_const      go to state 473
    expr_named_call         go to state 474
    expr_method_call        go to state 475
    func_addr_expr          go to state 476
    expr_field              go to state 477
    expr_call               go to state 478
    expr                    go to state 1107
    expr_generator          go to state 480
    expr_mtag               go to state 481
    basic_type_declaration  go to state 482
    make_decl               go to state 483
    make_struct_decl        go to state 484
    make_tuple_call         go to state 485
    make_dim_decl           go to state 486
    make_table_decl         go to state 487
    array_comprehension     go to state 488


State 934

  336 expr_assign: expr '=' . expr

    "struct"                          shift, and go to state 414
    "class"                           shift, and go to state 415
    "true"                            shift, and go to state 416
    "false"                           shift, and go to state 417
    "new"                             shift, and go to state 418
    "typeinfo"                        shift, and go to state 419
    "type"                            shift, and go to state 420
    "array"                           shift, and go to state 421
    "null"                            shift, and go to state 422
    "table"                           shift, and go to state 423
    "deref"                           shift, and go to state 424
    "cast"                            shift, and go to state 425
    "upcast"                          shift, and go to state 426
    "addr"                            shift, and go to state 427
    "reinterpret"                     shift, and go to state 428
    "unsafe"                          shift, and go to state 429
    "fixed_array"                     shift, and go to state 430
    "default"                         shift, and go to state 431
    "bool"                            shift, and go to state 228
    "void"                            shift, and go to state 229
    "string"                          shift, and go to state 230
    "int"                             shift, and go to state 232
    "int2"                            shift, and go to state 233
    "int3"                            shift, and go to state 234
    "int4"                            shift, and go to state 235
    "uint"                            shift, and go to state 236
    "bitfield"                        shift, and go to state 432
    "uint2"                           shift, and go to state 238
    "uint3"                           shift, and go to state 239
    "uint4"                           shift, and go to state 240
    "float"                           shift, and go to state 241
    "float2"                          shift, and go to state 242
    "float3"                          shift, and go to state 243
    "float4"                          shift, and go to state 244
    "range"                           shift, and go to state 245
    "urange"                          shift, and go to state 246
    "range64"                         shift, and go to state 247
    "urange64"                        shift, and go to state 248
    "int64"                           shift, and go to state 250
    "uint64"                          shift, and go to state 251
    "double"                          shift, and go to state 252
    "int8"                            shift, and go to state 255
    "uint8"                           shift, and go to state 256
    "int16"                           shift, and go to state 257
    "uint16"                          shift, and go to state 258
    "tuple"                           shift, and go to state 433
    "variant"                         shift, and go to state 434
    "generator"                       shift, and go to state 435
    "++"                              shift, and go to state 436
    "--"                              shift, and go to state 437
    "::"                              shift, and go to state 55
    "$$"                              shift, and go to state 438
    "$i"                              shift, and go to state 439
    "$v"                              shift, and go to state 440
    "$b"                              shift, and go to state 441
    "$a"                              shift, and go to state 442
    "$c"                              shift, and go to state 443
    "..."                             shift, and go to state 444
    "integer constant"                shift, and go to state 445
    "long integer constant"           shift, and go to state 446
    "unsigned integer constant"       shift, and go to state 447
    "unsigned long integer constant"  shift, and go to state 448
    "unsigned int8 constant"          shift, and go to state 449
    "floating point constant"         shift, and go to state 450
    "double constant"                 shift, and go to state 451
    "name"                            shift, and go to state 56
    "start of the string"             shift, and go to state 452
    '-'                               shift, and go to state 453
    '+'                               shift, and go to state 454
    '*'                               shift, and go to state 455
    '%'                               shift, and go to state 13
    '~'                               shift, and go to state 456
    '!'                               shift, and go to state 457
    '['                               shift, and go to state 458
    '('                               shift, and go to state 459
    '$'                               shift, and go to state 460
    '@'                               shift, and go to state 461
    '{'                               shift, and go to state 462

    string_builder          go to state 463
    expr_reader             go to state 464
    expr_call_pipe          go to state 465
    name_in_namespace       go to state 466
    expr_new                go to state 467
    expr_cast               go to state 468
    expr_type_decl          go to state 469
    expr_type_info          go to state 470
    block_or_lambda         go to state 471
    expr_full_block         go to state 472
    expr_numeric_const      go to state 473
    expr_named_call         go to state 474
    expr_method_call        go to state 475
    func_addr_expr          go to state 476
    expr_field              go to state 477
    expr_call               go to state 478
    expr                    go to state 1108
    expr_generator          go to state 480
    expr_mtag               go to state 481
    basic_type_declaration  go to state 482
    make_decl               go to state 483
    make_struct_decl        go to state 484
    make_tuple_call         go to state 485
    make_dim_decl           go to state 486
    make_table_decl         go to state 487
    array_comprehension     go to state 488


State 935

  561 enum_expression: "name" .
  562                | "name" . '=' expr

    '='  shift, and go to state 1109

    $default  reduce using rule 561 (enum_expression)


State 936

  566 enum_list: enum_expression .

    $default  reduce using rule 566 (enum_list)


State 937

  567 enum_list: enum_list . commas enum_expression
  585 enum_declaration: optional_annotation_list "enum" $@39 optional_public_or_private_enum enum_name optional_enum_basic_type_declaration optional_commas '{' $@40 enum_list . optional_commas $@41 '}'

    ','  shift, and go to state 168

    $default  reduce using rule 580 (optional_commas)

    commas           go to state 1110
    optional_commas  go to state 1111


State 938

  501 struct_variable_declaration_list: struct_variable_declaration_list optional_annotation_list "def" . optional_public_or_private_member_variable "abstract" optional_constant $@34 function_declaration_header ';'
  503                                 | struct_variable_declaration_list optional_annotation_list "def" . optional_public_or_private_member_variable optional_static_member_variable optional_override optional_constant $@35 function_declaration_header expression_block

    "public"   shift, and go to state 1112
    "private"  shift, and go to state 1113

    $default  reduce using rule 491 (optional_public_or_private_member_variable)

    optional_public_or_private_member_variable  go to state 1114


State 939

  496 structure_variable_declaration: optional_field_annotation . optional_static_member_variable optional_override optional_public_or_private_member_variable variable_declaration

    "static"  shift, and go to state 1115

    $default  reduce using rule 494 (optional_static_member_variable)

    optional_static_member_variable  go to state 1116


State 940

  499 struct_variable_declaration_list: struct_variable_declaration_list $@33 structure_variable_declaration . ';'

    ';'  shift, and go to state 1117


State 941

  356 expr_method_call: expr . "->" "name" '(' ')'
  357                 | expr . "->" "name" '(' expr_list ')'
  367 expr_field: expr . '.' "name"
  368           | expr . '.' '.' "name"
  369           | expr . '.' "name" '(' ')'
  370           | expr . '.' "name" '(' expr_list ')'
  371           | expr . '.' basic_type_declaration '(' ')'
  372           | expr . '.' basic_type_declaration '(' expr_list ')'
  375           | expr . '.' $@25 error $@26
  397 expr: expr . "<<" expr
  398     | expr . ">>" expr
  399     | expr . "<<<" expr
  400     | expr . ">>>" expr
  401     | expr . '+' expr
  402     | expr . '-' expr
  403     | expr . '*' expr
  404     | expr . '/' expr
  405     | expr . '%' expr
  406     | expr . '<' expr
  407     | expr . '>' expr
  408     | expr . "==" expr
  409     | expr . "!=" expr
  410     | expr . "<=" expr
  411     | expr . ">=" expr
  412     | expr . '&' expr
  413     | expr . '|' expr
  414     | expr . '^' expr
  415     | expr . "&&" expr
  416     | expr . "||" expr
  417     | expr . "^^" expr
  418     | expr . ".." expr
  421     | expr . "++"
  422     | expr . "--"
  424     | expr . '[' expr ']'
  425     | expr . '.' '[' expr ']'
  426     | expr . "?[" expr ']'
  427     | expr . '.' "?[" expr ']'
  428     | expr . "?." "name"
  429     | expr . '.' "?." "name"
  436     | expr . "??" expr
  437     | expr . '?' expr ':' expr
  440     | expr . "is" "type" '<' $@27 type_declaration_no_options '>' $@28
  441     | expr . "is" basic_type_declaration
  442     | expr . "is" "name"
  443     | expr . "as" "name"
  446     | expr . "as" "type" '<' $@29 type_declaration '>' $@30
  447     | expr . "as" basic_type_declaration
  448     | expr . '?' "as" "name"
  451     | expr . '?' "as" "type" '<' $@31 type_declaration '>' $@32
  452     | expr . '?' "as" basic_type_declaration
  460     | expr . "<|" expr
  461     | expr . "|>" expr
  462     | expr . "|>" basic_type_declaration
  476 expr_mtag: expr . '.' "$f" '(' expr ')'
  477          | expr . "?." "$f" '(' expr ')'
  478          | expr . '.' '.' "$f" '(' expr ')'
  479          | expr . '.' "?." "$f" '(' expr ')'
  480          | expr . "as" "$f" '(' expr ')'
  481          | expr . '?' "as" "$f" '(' expr ')'
  482          | expr . "is" "$f" '(' expr ')'
  534 let_variable_name_with_pos_list: "$i" '(' expr . ')'

    "is"   shift, and go to state 603
    "as"   shift, and go to state 604
    "<<"   shift, and go to state 605
    ">>"   shift, and go to state 606
    "++"   shift, and go to state 607
    "--"   shift, and go to state 608
    "<="   shift, and go to state 609
    ">="   shift, and go to state 610
    "=="   shift, and go to state 611
    "!="   shift, and go to state 612
    "->"   shift, and go to state 613
    "??"   shift, and go to state 614
    "?."   shift, and go to state 615
    "?["   shift, and go to state 616
    "<|"   shift, and go to state 617
    "|>"   shift, and go to state 618
    "<<<"  shift, and go to state 619
    ">>>"  shift, and go to state 620
    "&&"   shift, and go to state 621
    "||"   shift, and go to state 622
    "^^"   shift, and go to state 623
    ".."   shift, and go to state 624
    '?'    shift, and go to state 625
    '|'    shift, and go to state 626
    '^'    shift, and go to state 627
    '&'    shift, and go to state 628
    '<'    shift, and go to state 629
    '>'    shift, and go to state 630
    '-'    shift, and go to state 631
    '+'    shift, and go to state 632
    '*'    shift, and go to state 633
    '/'    shift, and go to state 634
    '%'    shift, and go to state 635
    '.'    shift, and go to state 636
    '['    shift, and go to state 637
    ')'    shift, and go to state 1118


State 942

  535 let_variable_name_with_pos_list: "name" "aka" "name" .

    $default  reduce using rule 535 (let_variable_name_with_pos_list)


State 943

  536 let_variable_name_with_pos_list: let_variable_name_with_pos_list ',' "name" .
  537                                | let_variable_name_with_pos_list ',' "name" . "aka" "name"

    "aka"  shift, and go to state 1119

    $default  reduce using rule 536 (let_variable_name_with_pos_list)


State 944

  543 let_variable_declaration: let_variable_name_with_pos_list ':' type_declaration_no_options . ';'
  544                         | let_variable_name_with_pos_list ':' type_declaration_no_options . copy_or_move_or_clone expr ';'

    "<-"  shift, and go to state 537
    ":="  shift, and go to state 538
    '='   shift, and go to state 539
    ';'   shift, and go to state 1120

    copy_or_move_or_clone  go to state 1121


State 945

  545 let_variable_declaration: let_variable_name_with_pos_list optional_ref copy_or_move_or_clone . expr ';'

    "struct"                          shift, and go to state 414
    "class"                           shift, and go to state 415
    "true"                            shift, and go to state 416
    "false"                           shift, and go to state 417
    "new"                             shift, and go to state 418
    "typeinfo"                        shift, and go to state 419
    "type"                            shift, and go to state 420
    "array"                           shift, and go to state 421
    "null"                            shift, and go to state 422
    "table"                           shift, and go to state 423
    "deref"                           shift, and go to state 424
    "cast"                            shift, and go to state 425
    "upcast"                          shift, and go to state 426
    "addr"                            shift, and go to state 427
    "reinterpret"                     shift, and go to state 428
    "unsafe"                          shift, and go to state 429
    "fixed_array"                     shift, and go to state 430
    "default"                         shift, and go to state 431
    "bool"                            shift, and go to state 228
    "void"                            shift, and go to state 229
    "string"                          shift, and go to state 230
    "int"                             shift, and go to state 232
    "int2"                            shift, and go to state 233
    "int3"                            shift, and go to state 234
    "int4"                            shift, and go to state 235
    "uint"                            shift, and go to state 236
    "bitfield"                        shift, and go to state 432
    "uint2"                           shift, and go to state 238
    "uint3"                           shift, and go to state 239
    "uint4"                           shift, and go to state 240
    "float"                           shift, and go to state 241
    "float2"                          shift, and go to state 242
    "float3"                          shift, and go to state 243
    "float4"                          shift, and go to state 244
    "range"                           shift, and go to state 245
    "urange"                          shift, and go to state 246
    "range64"                         shift, and go to state 247
    "urange64"                        shift, and go to state 248
    "int64"                           shift, and go to state 250
    "uint64"                          shift, and go to state 251
    "double"                          shift, and go to state 252
    "int8"                            shift, and go to state 255
    "uint8"                           shift, and go to state 256
    "int16"                           shift, and go to state 257
    "uint16"                          shift, and go to state 258
    "tuple"                           shift, and go to state 433
    "variant"                         shift, and go to state 434
    "generator"                       shift, and go to state 435
    "++"                              shift, and go to state 436
    "--"                              shift, and go to state 437
    "::"                              shift, and go to state 55
    "$$"                              shift, and go to state 438
    "$i"                              shift, and go to state 439
    "$v"                              shift, and go to state 440
    "$b"                              shift, and go to state 441
    "$a"                              shift, and go to state 442
    "$c"                              shift, and go to state 443
    "..."                             shift, and go to state 444
    "integer constant"                shift, and go to state 445
    "long integer constant"           shift, and go to state 446
    "unsigned integer constant"       shift, and go to state 447
    "unsigned long integer constant"  shift, and go to state 448
    "unsigned int8 constant"          shift, and go to state 449
    "floating point constant"         shift, and go to state 450
    "double constant"                 shift, and go to state 451
    "name"                            shift, and go to state 56
    "start of the string"             shift, and go to state 452
    '-'                               shift, and go to state 453
    '+'                               shift, and go to state 454
    '*'                               shift, and go to state 455
    '%'                               shift, and go to state 13
    '~'                               shift, and go to state 456
    '!'                               shift, and go to state 457
    '['                               shift, and go to state 458
    '('                               shift, and go to state 459
    '$'                               shift, and go to state 460
    '@'                               shift, and go to state 461
    '{'                               shift, and go to state 462

    string_builder          go to state 463
    expr_reader             go to state 464
    expr_call_pipe          go to state 465
    name_in_namespace       go to state 466
    expr_new                go to state 467
    expr_cast               go to state 468
    expr_type_decl          go to state 469
    expr_type_info          go to state 470
    block_or_lambda         go to state 471
    expr_full_block         go to state 472
    expr_numeric_const      go to state 473
    expr_named_call         go to state 474
    expr_method_call        go to state 475
    func_addr_expr          go to state 476
    expr_field              go to state 477
    expr_call               go to state 478
    expr                    go to state 1122
    expr_generator          go to state 480
    expr_mtag               go to state 481
    basic_type_declaration  go to state 482
    make_decl               go to state 483
    make_struct_decl        go to state 484
    make_tuple_call         go to state 485
    make_dim_decl           go to state 486
    make_table_decl         go to state 487
    array_comprehension     go to state 488


State 946

  356 expr_method_call: expr . "->" "name" '(' ')'
  357                 | expr . "->" "name" '(' expr_list ')'
  367 expr_field: expr . '.' "name"
  368           | expr . '.' '.' "name"
  369           | expr . '.' "name" '(' ')'
  370           | expr . '.' "name" '(' expr_list ')'
  371           | expr . '.' basic_type_declaration '(' ')'
  372           | expr . '.' basic_type_declaration '(' expr_list ')'
  375           | expr . '.' $@25 error $@26
  397 expr: expr . "<<" expr
  398     | expr . ">>" expr
  399     | expr . "<<<" expr
  400     | expr . ">>>" expr
  401     | expr . '+' expr
  402     | expr . '-' expr
  403     | expr . '*' expr
  404     | expr . '/' expr
  405     | expr . '%' expr
  406     | expr . '<' expr
  407     | expr . '>' expr
  408     | expr . "==" expr
  409     | expr . "!=" expr
  410     | expr . "<=" expr
  411     | expr . ">=" expr
  412     | expr . '&' expr
  413     | expr . '|' expr
  414     | expr . '^' expr
  415     | expr . "&&" expr
  416     | expr . "||" expr
  417     | expr . "^^" expr
  418     | expr . ".." expr
  421     | expr . "++"
  422     | expr . "--"
  424     | expr . '[' expr ']'
  425     | expr . '.' '[' expr ']'
  426     | expr . "?[" expr ']'
  427     | expr . '.' "?[" expr ']'
  428     | expr . "?." "name"
  429     | expr . '.' "?." "name"
  436     | expr . "??" expr
  437     | expr . '?' expr ':' expr
  440     | expr . "is" "type" '<' $@27 type_declaration_no_options '>' $@28
  441     | expr . "is" basic_type_declaration
  442     | expr . "is" "name"
  443     | expr . "as" "name"
  446     | expr . "as" "type" '<' $@29 type_declaration '>' $@30
  447     | expr . "as" basic_type_declaration
  448     | expr . '?' "as" "name"
  451     | expr . '?' "as" "type" '<' $@31 type_declaration '>' $@32
  452     | expr . '?' "as" basic_type_declaration
  460     | expr . "<|" expr
  461     | expr . "|>" expr
  462     | expr . "|>" basic_type_declaration
  476 expr_mtag: expr . '.' "$f" '(' expr ')'
  477          | expr . "?." "$f" '(' expr ')'
  478          | expr . '.' '.' "$f" '(' expr ')'
  479          | expr . '.' "?." "$f" '(' expr ')'
  480          | expr . "as" "$f" '(' expr ')'
  481          | expr . '?' "as" "$f" '(' expr ')'
  482          | expr . "is" "$f" '(' expr ')'
  547 global_let_variable_declaration: global_let_variable_name_with_pos_list ':' type_declaration_no_options copy_or_move_or_clone expr . ';'

    "is"   shift, and go to state 603
    "as"   shift, and go to state 604
    "<<"   shift, and go to state 605
    ">>"   shift, and go to state 606
    "++"   shift, and go to state 607
    "--"   shift, and go to state 608
    "<="   shift, and go to state 609
    ">="   shift, and go to state 610
    "=="   shift, and go to state 611
    "!="   shift, and go to state 612
    "->"   shift, and go to state 613
    "??"   shift, and go to state 614
    "?."   shift, and go to state 615
    "?["   shift, and go to state 616
    "<|"   shift, and go to state 617
    "|>"   shift, and go to state 618
    "<<<"  shift, and go to state 619
    ">>>"  shift, and go to state 620
    "&&"   shift, and go to state 621
    "||"   shift, and go to state 622
    "^^"   shift, and go to state 623
    ".."   shift, and go to state 624
    '?'    shift, and go to state 625
    '|'    shift, and go to state 626
    '^'    shift, and go to state 627
    '&'    shift, and go to state 628
    '<'    shift, and go to state 629
    '>'    shift, and go to state 630
    '-'    shift, and go to state 631
    '+'    shift, and go to state 632
    '*'    shift, and go to state 633
    '/'    shift, and go to state 634
    '%'    shift, and go to state 635
    '.'    shift, and go to state 636
    '['    shift, and go to state 637
    ';'    shift, and go to state 1123


State 947

  548 global_let_variable_declaration: global_let_variable_name_with_pos_list optional_ref copy_or_move_or_clone expr ';' .

    $default  reduce using rule 548 (global_let_variable_declaration)


State 948

  669 type_declaration_no_options_no_dim: "type" '<' $@46 type_declaration '>' $@47 .

    $default  reduce using rule 669 (type_declaration_no_options_no_dim)


State 949

  692 type_declaration_no_options_no_dim: "array" '<' $@51 type_declaration '>' $@52 .

    $default  reduce using rule 692 (type_declaration_no_options_no_dim)


State 950

  695 type_declaration_no_options_no_dim: "table" '<' $@53 table_type_pair '>' $@54 .

    $default  reduce using rule 695 (type_declaration_no_options_no_dim)


State 951

  656 table_type_pair: type_declaration c_or_s type_declaration .
  727 type_declaration: type_declaration . '|' type_declaration_no_options
  728                 | type_declaration . '|' '#'

    '|'  shift, and go to state 372

    $default  reduce using rule 656 (table_type_pair)


State 952

  769 make_struct_decl: "struct" '<' $@85 type_declaration_no_options . '>' $@86 '(' use_initializer optional_make_struct_dim_decl ')'

    '>'  shift, and go to state 1124


State 953

  772 make_struct_decl: "class" '<' $@87 type_declaration_no_options . '>' $@88 '(' use_initializer optional_make_struct_dim_decl ')'

    '>'  shift, and go to state 1125


State 954

  263 new_type_declaration: '<' $@11 type_declaration . '>' $@12
  727 type_declaration: type_declaration . '|' type_declaration_no_options
  728                 | type_declaration . '|' '#'

    '|'  shift, and go to state 372
    '>'  shift, and go to state 1126


State 955

  269 expr_new: "new" new_type_declaration '(' "uninitialized" . make_struct_single ')'
  766 use_initializer: "uninitialized" .

    "$f"    shift, and go to state 786
    "name"  shift, and go to state 1003

    $default  reduce using rule 766 (use_initializer)

    make_struct_fields  go to state 791
    make_struct_single  go to state 1127


State 956

  267 expr_new: "new" new_type_declaration '(' expr_list . ')'
  309 expr_list: expr_list . ',' expr

    ','  shift, and go to state 1041
    ')'  shift, and go to state 1128


State 957

  268 expr_new: "new" new_type_declaration '(' make_struct_single . ')'

    ')'  shift, and go to state 1129


State 958

  266 expr_new: "new" new_type_declaration '(' use_initializer . ')'

    ')'  shift, and go to state 1130


State 959

  306 expr_type_info: "typeinfo" name_in_namespace '<' "name" . '>' '(' expr ')'
  307               | "typeinfo" name_in_namespace '<' "name" . c_or_s "name" '>' '(' expr ')'

    ','  shift, and go to state 732
    '>'  shift, and go to state 1131
    ';'  shift, and go to state 733

    c_or_s  go to state 1132


State 960

  305 expr_type_info: "typeinfo" name_in_namespace '(' expr . ')'
  356 expr_method_call: expr . "->" "name" '(' ')'
  357                 | expr . "->" "name" '(' expr_list ')'
  367 expr_field: expr . '.' "name"
  368           | expr . '.' '.' "name"
  369           | expr . '.' "name" '(' ')'
  370           | expr . '.' "name" '(' expr_list ')'
  371           | expr . '.' basic_type_declaration '(' ')'
  372           | expr . '.' basic_type_declaration '(' expr_list ')'
  375           | expr . '.' $@25 error $@26
  397 expr: expr . "<<" expr
  398     | expr . ">>" expr
  399     | expr . "<<<" expr
  400     | expr . ">>>" expr
  401     | expr . '+' expr
  402     | expr . '-' expr
  403     | expr . '*' expr
  404     | expr . '/' expr
  405     | expr . '%' expr
  406     | expr . '<' expr
  407     | expr . '>' expr
  408     | expr . "==" expr
  409     | expr . "!=" expr
  410     | expr . "<=" expr
  411     | expr . ">=" expr
  412     | expr . '&' expr
  413     | expr . '|' expr
  414     | expr . '^' expr
  415     | expr . "&&" expr
  416     | expr . "||" expr
  417     | expr . "^^" expr
  418     | expr . ".." expr
  421     | expr . "++"
  422     | expr . "--"
  424     | expr . '[' expr ']'
  425     | expr . '.' '[' expr ']'
  426     | expr . "?[" expr ']'
  427     | expr . '.' "?[" expr ']'
  428     | expr . "?." "name"
  429     | expr . '.' "?." "name"
  436     | expr . "??" expr
  437     | expr . '?' expr ':' expr
  440     | expr . "is" "type" '<' $@27 type_declaration_no_options '>' $@28
  441     | expr . "is" basic_type_declaration
  442     | expr . "is" "name"
  443     | expr . "as" "name"
  446     | expr . "as" "type" '<' $@29 type_declaration '>' $@30
  447     | expr . "as" basic_type_declaration
  448     | expr . '?' "as" "name"
  451     | expr . '?' "as" "type" '<' $@31 type_declaration '>' $@32
  452     | expr . '?' "as" basic_type_declaration
  460     | expr . "<|" expr
  461     | expr . "|>" expr
  462     | expr . "|>" basic_type_declaration
  476 expr_mtag: expr . '.' "$f" '(' expr ')'
  477          | expr . "?." "$f" '(' expr ')'
  478          | expr . '.' '.' "$f" '(' expr ')'
  479          | expr . '.' "?." "$f" '(' expr ')'
  480          | expr . "as" "$f" '(' expr ')'
  481          | expr . '?' "as" "$f" '(' expr ')'
  482          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 603
    "as"   shift, and go to state 604
    "<<"   shift, and go to state 605
    ">>"   shift, and go to state 606
    "++"   shift, and go to state 607
    "--"   shift, and go to state 608
    "<="   shift, and go to state 609
    ">="   shift, and go to state 610
    "=="   shift, and go to state 611
    "!="   shift, and go to state 612
    "->"   shift, and go to state 613
    "??"   shift, and go to state 614
    "?."   shift, and go to state 615
    "?["   shift, and go to state 616
    "<|"   shift, and go to state 617
    "|>"   shift, and go to state 618
    "<<<"  shift, and go to state 619
    ">>>"  shift, and go to state 620
    "&&"   shift, and go to state 621
    "||"   shift, and go to state 622
    "^^"   shift, and go to state 623
    ".."   shift, and go to state 624
    '?'    shift, and go to state 625
    '|'    shift, and go to state 626
    '^'    shift, and go to state 627
    '&'    shift, and go to state 628
    '<'    shift, and go to state 629
    '>'    shift, and go to state 630
    '-'    shift, and go to state 631
    '+'    shift, and go to state 632
    '*'    shift, and go to state 633
    '/'    shift, and go to state 634
    '%'    shift, and go to state 635
    '.'    shift, and go to state 636
    '['    shift, and go to state 637
    ')'    shift, and go to state 1133


State 961

  304 expr_type_decl: "type" '<' $@19 type_declaration . '>' $@20
  727 type_declaration: type_declaration . '|' type_declaration_no_options
  728                 | type_declaration . '|' '#'

    '|'  shift, and go to state 372
    '>'  shift, and go to state 1134


State 962

  788 make_dim_decl: "array" "struct" '<' $@95 . type_declaration_no_options '>' $@96 '(' use_initializer optional_make_struct_dim_decl ')'

    "type"       shift, and go to state 222
    "array"      shift, and go to state 223
    "table"      shift, and go to state 224
    "typedecl"   shift, and go to state 225
    "iterator"   shift, and go to state 226
    "smart_ptr"  shift, and go to state 227
    "bool"       shift, and go to state 228
    "void"       shift, and go to state 229
    "string"     shift, and go to state 230
    "auto"       shift, and go to state 231
    "int"        shift, and go to state 232
    "int2"       shift, and go to state 233
    "int3"       shift, and go to state 234
    "int4"       shift, and go to state 235
    "uint"       shift, and go to state 236
    "bitfield"   shift, and go to state 237
    "uint2"      shift, and go to state 238
    "uint3"      shift, and go to state 239
    "uint4"      shift, and go to state 240
    "float"      shift, and go to state 241
    "float2"     shift, and go to state 242
    "float3"     shift, and go to state 243
    "float4"     shift, and go to state 244
    "range"      shift, and go to state 245
    "urange"     shift, and go to state 246
    "range64"    shift, and go to state 247
    "urange64"   shift, and go to state 248
    "block"      shift, and go to state 249
    "int64"      shift, and go to state 250
    "uint64"     shift, and go to state 251
    "double"     shift, and go to state 252
    "function"   shift, and go to state 253
    "lambda"     shift, and go to state 254
    "int8"       shift, and go to state 255
    "uint8"      shift, and go to state 256
    "int16"      shift, and go to state 257
    "uint16"     shift, and go to state 258
    "tuple"      shift, and go to state 259
    "variant"    shift, and go to state 260
    "::"         shift, and go to state 55
    "$t"         shift, and go to state 261
    "name"       shift, and go to state 56
    '$'          shift, and go to state 262

    name_in_namespace                   go to state 263
    basic_type_declaration              go to state 264
    structure_type_declaration          go to state 265
    auto_type_declaration               go to state 266
    bitfield_type_declaration           go to state 267
    type_declaration_no_options         go to state 1135
    type_declaration_no_options_no_dim  go to state 269


State 963

  791 make_dim_decl: "array" "tuple" '<' $@97 . type_declaration_no_options '>' $@98 '(' use_initializer optional_make_struct_dim_decl ')'

    "type"       shift, and go to state 222
    "array"      shift, and go to state 223
    "table"      shift, and go to state 224
    "typedecl"   shift, and go to state 225
    "iterator"   shift, and go to state 226
    "smart_ptr"  shift, and go to state 227
    "bool"       shift, and go to state 228
    "void"       shift, and go to state 229
    "string"     shift, and go to state 230
    "auto"       shift, and go to state 231
    "int"        shift, and go to state 232
    "int2"       shift, and go to state 233
    "int3"       shift, and go to state 234
    "int4"       shift, and go to state 235
    "uint"       shift, and go to state 236
    "bitfield"   shift, and go to state 237
    "uint2"      shift, and go to state 238
    "uint3"      shift, and go to state 239
    "uint4"      shift, and go to state 240
    "float"      shift, and go to state 241
    "float2"     shift, and go to state 242
    "float3"     shift, and go to state 243
    "float4"     shift, and go to state 244
    "range"      shift, and go to state 245
    "urange"     shift, and go to state 246
    "range64"    shift, and go to state 247
    "urange64"   shift, and go to state 248
    "block"      shift, and go to state 249
    "int64"      shift, and go to state 250
    "uint64"     shift, and go to state 251
    "double"     shift, and go to state 252
    "function"   shift, and go to state 253
    "lambda"     shift, and go to state 254
    "int8"       shift, and go to state 255
    "uint8"      shift, and go to state 256
    "int16"      shift, and go to state 257
    "uint16"     shift, and go to state 258
    "tuple"      shift, and go to state 259
    "variant"    shift, and go to state 260
    "::"         shift, and go to state 55
    "$t"         shift, and go to state 261
    "name"       shift, and go to state 56
    '$'          shift, and go to state 262

    name_in_namespace                   go to state 263
    basic_type_declaration              go to state 264
    structure_type_declaration          go to state 265
    auto_type_declaration               go to state 266
    bitfield_type_declaration           go to state 267
    type_declaration_no_options         go to state 1136
    type_declaration_no_options_no_dim  go to state 269


State 964

  794 make_dim_decl: "array" "variant" '<' $@99 . type_declaration_no_options '>' $@100 '(' make_variant_dim ')'

    "type"       shift, and go to state 222
    "array"      shift, and go to state 223
    "table"      shift, and go to state 224
    "typedecl"   shift, and go to state 225
    "iterator"   shift, and go to state 226
    "smart_ptr"  shift, and go to state 227
    "bool"       shift, and go to state 228
    "void"       shift, and go to state 229
    "string"     shift, and go to state 230
    "auto"       shift, and go to state 231
    "int"        shift, and go to state 232
    "int2"       shift, and go to state 233
    "int3"       shift, and go to state 234
    "int4"       shift, and go to state 235
    "uint"       shift, and go to state 236
    "bitfield"   shift, and go to state 237
    "uint2"      shift, and go to state 238
    "uint3"      shift, and go to state 239
    "uint4"      shift, and go to state 240
    "float"      shift, and go to state 241
    "float2"     shift, and go to state 242
    "float3"     shift, and go to state 243
    "float4"     shift, and go to state 244
    "range"      shift, and go to state 245
    "urange"     shift, and go to state 246
    "range64"    shift, and go to state 247
    "urange64"   shift, and go to state 248
    "block"      shift, and go to state 249
    "int64"      shift, and go to state 250
    "uint64"     shift, and go to state 251
    "double"     shift, and go to state 252
    "function"   shift, and go to state 253
    "lambda"     shift, and go to state 254
    "int8"       shift, and go to state 255
    "uint8"      shift, and go to state 256
    "int16"      shift, and go to state 257
    "uint16"     shift, and go to state 258
    "tuple"      shift, and go to state 259
    "variant"    shift, and go to state 260
    "::"         shift, and go to state 55
    "$t"         shift, and go to state 261
    "name"       shift, and go to state 56
    '$'          shift, and go to state 262

    name_in_namespace                   go to state 263
    basic_type_declaration              go to state 264
    structure_type_declaration          go to state 265
    auto_type_declaration               go to state 266
    bitfield_type_declaration           go to state 267
    type_declaration_no_options         go to state 1137
    type_declaration_no_options_no_dim  go to state 269


State 965

  798 make_dim_decl: "array" '<' $@101 type_declaration_no_options . '>' $@102 '(' optional_expr_list ')'

    '>'  shift, and go to state 1138


State 966

  795 make_dim_decl: "array" '(' expr_list optional_comma . ')'

    ')'  shift, and go to state 1139


State 967

  807 make_table_decl: "table" '<' type_declaration_no_options '>' . '(' optional_expr_map_tuple_list ')'

    '('  shift, and go to state 1140


State 968

  808 make_table_decl: "table" '<' type_declaration_no_options c_or_s . type_declaration_no_options '>' '(' optional_expr_map_tuple_list ')'

    "type"       shift, and go to state 222
    "array"      shift, and go to state 223
    "table"      shift, and go to state 224
    "typedecl"   shift, and go to state 225
    "iterator"   shift, and go to state 226
    "smart_ptr"  shift, and go to state 227
    "bool"       shift, and go to state 228
    "void"       shift, and go to state 229
    "string"     shift, and go to state 230
    "auto"       shift, and go to state 231
    "int"        shift, and go to state 232
    "int2"       shift, and go to state 233
    "int3"       shift, and go to state 234
    "int4"       shift, and go to state 235
    "uint"       shift, and go to state 236
    "bitfield"   shift, and go to state 237
    "uint2"      shift, and go to state 238
    "uint3"      shift, and go to state 239
    "uint4"      shift, and go to state 240
    "float"      shift, and go to state 241
    "float2"     shift, and go to state 242
    "float3"     shift, and go to state 243
    "float4"     shift, and go to state 244
    "range"      shift, and go to state 245
    "urange"     shift, and go to state 246
    "range64"    shift, and go to state 247
    "urange64"   shift, and go to state 248
    "block"      shift, and go to state 249
    "int64"      shift, and go to state 250
    "uint64"     shift, and go to state 251
    "double"     shift, and go to state 252
    "function"   shift, and go to state 253
    "lambda"     shift, and go to state 254
    "int8"       shift, and go to state 255
    "uint8"      shift, and go to state 256
    "int16"      shift, and go to state 257
    "uint16"     shift, and go to state 258
    "tuple"      shift, and go to state 259
    "variant"    shift, and go to state 260
    "::"         shift, and go to state 55
    "$t"         shift, and go to state 261
    "name"       shift, and go to state 56
    '$'          shift, and go to state 262

    name_in_namespace                   go to state 263
    basic_type_declaration              go to state 264
    structure_type_declaration          go to state 265
    auto_type_declaration               go to state 266
    bitfield_type_declaration           go to state 267
    type_declaration_no_options         go to state 1141
    type_declaration_no_options_no_dim  go to state 269


State 969

  806 make_table_decl: "table" '(' expr_map_tuple_list optional_comma . ')'

    ')'  shift, and go to state 1142


State 970

  433 expr: "deref" '(' expr ')' .

    $default  reduce using rule 433 (expr)


State 971

  295 expr_cast: "cast" '<' $@13 type_declaration_no_options . '>' $@14 expr

    '>'  shift, and go to state 1143


State 972

  298 expr_cast: "upcast" '<' $@15 type_declaration_no_options . '>' $@16 expr

    '>'  shift, and go to state 1144


State 973

  434 expr: "addr" '(' expr ')' .

    $default  reduce using rule 434 (expr)


State 974

  301 expr_cast: "reinterpret" '<' $@17 type_declaration_no_options . '>' $@18 expr

    '>'  shift, and go to state 1145


State 975

  464 expr: "unsafe" '(' expr ')' .

    $default  reduce using rule 464 (expr)


State 976

  802 make_dim_decl: "fixed_array" '<' $@103 type_declaration_no_options . '>' $@104 '(' expr_list optional_comma ')'

    '>'  shift, and go to state 1146


State 977

  799 make_dim_decl: "fixed_array" '(' expr_list optional_comma . ')'

    ')'  shift, and go to state 1147


State 978

  778 make_struct_decl: "default" '<' $@91 type_declaration_no_options . '>' $@92 use_initializer

    '>'  shift, and go to state 1148


State 979

  784 make_tuple_call: "tuple" '<' $@93 type_declaration_no_options . '>' $@94 '(' use_initializer optional_make_struct_dim_decl ')'

    '>'  shift, and go to state 1149


State 980

  781 make_tuple_call: "tuple" '(' expr_list optional_comma . ')'

    ')'  shift, and go to state 1150


State 981

  775 make_struct_decl: "variant" '<' $@89 type_declaration_no_options . '>' $@90 '(' make_variant_dim ')'

    '>'  shift, and go to state 1151


State 982

  465 expr_generator: "generator" '<' type_declaration_no_options '>' . optional_capture_list '(' ')'
  466               | "generator" '<' type_declaration_no_options '>' . optional_capture_list '(' expr ')'
  467               | "generator" '<' type_declaration_no_options '>' . optional_capture_list optional_semis expression_block

    "capture"  shift, and go to state 793

    $default  reduce using rule 323 (optional_capture_list)

    optional_capture_list  go to state 1152


State 983

  468 expr_mtag: "$$" '(' expr ')' .

    $default  reduce using rule 468 (expr_mtag)


State 984

  469 expr_mtag: "$i" '(' expr ')' .

    $default  reduce using rule 469 (expr_mtag)


State 985

  470 expr_mtag: "$v" '(' expr ')' .

    $default  reduce using rule 470 (expr_mtag)


State 986

  471 expr_mtag: "$b" '(' expr ')' .

    $default  reduce using rule 471 (expr_mtag)


State 987

  472 expr_mtag: "$a" '(' expr ')' .

    $default  reduce using rule 472 (expr_mtag)


State 988

  474 expr_mtag: "$c" '(' expr ')' . '(' ')'
  475          | "$c" '(' expr ')' . '(' expr_list ')'

    '('  shift, and go to state 1153


State 989

   31 string_builder_body: string_builder_body "{" expr . "}"
  356 expr_method_call: expr . "->" "name" '(' ')'
  357                 | expr . "->" "name" '(' expr_list ')'
  367 expr_field: expr . '.' "name"
  368           | expr . '.' '.' "name"
  369           | expr . '.' "name" '(' ')'
  370           | expr . '.' "name" '(' expr_list ')'
  371           | expr . '.' basic_type_declaration '(' ')'
  372           | expr . '.' basic_type_declaration '(' expr_list ')'
  375           | expr . '.' $@25 error $@26
  397 expr: expr . "<<" expr
  398     | expr . ">>" expr
  399     | expr . "<<<" expr
  400     | expr . ">>>" expr
  401     | expr . '+' expr
  402     | expr . '-' expr
  403     | expr . '*' expr
  404     | expr . '/' expr
  405     | expr . '%' expr
  406     | expr . '<' expr
  407     | expr . '>' expr
  408     | expr . "==" expr
  409     | expr . "!=" expr
  410     | expr . "<=" expr
  411     | expr . ">=" expr
  412     | expr . '&' expr
  413     | expr . '|' expr
  414     | expr . '^' expr
  415     | expr . "&&" expr
  416     | expr . "||" expr
  417     | expr . "^^" expr
  418     | expr . ".." expr
  421     | expr . "++"
  422     | expr . "--"
  424     | expr . '[' expr ']'
  425     | expr . '.' '[' expr ']'
  426     | expr . "?[" expr ']'
  427     | expr . '.' "?[" expr ']'
  428     | expr . "?." "name"
  429     | expr . '.' "?." "name"
  436     | expr . "??" expr
  437     | expr . '?' expr ':' expr
  440     | expr . "is" "type" '<' $@27 type_declaration_no_options '>' $@28
  441     | expr . "is" basic_type_declaration
  442     | expr . "is" "name"
  443     | expr . "as" "name"
  446     | expr . "as" "type" '<' $@29 type_declaration '>' $@30
  447     | expr . "as" basic_type_declaration
  448     | expr . '?' "as" "name"
  451     | expr . '?' "as" "type" '<' $@31 type_declaration '>' $@32
  452     | expr . '?' "as" basic_type_declaration
  460     | expr . "<|" expr
  461     | expr . "|>" expr
  462     | expr . "|>" basic_type_declaration
  476 expr_mtag: expr . '.' "$f" '(' expr ')'
  477          | expr . "?." "$f" '(' expr ')'
  478          | expr . '.' '.' "$f" '(' expr ')'
  479          | expr . '.' "?." "$f" '(' expr ')'
  480          | expr . "as" "$f" '(' expr ')'
  481          | expr . '?' "as" "$f" '(' expr ')'
  482          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 603
    "as"   shift, and go to state 604
    "<<"   shift, and go to state 605
    ">>"   shift, and go to state 606
    "++"   shift, and go to state 607
    "--"   shift, and go to state 608
    "<="   shift, and go to state 609
    ">="   shift, and go to state 610
    "=="   shift, and go to state 611
    "!="   shift, and go to state 612
    "->"   shift, and go to state 613
    "??"   shift, and go to state 614
    "?."   shift, and go to state 615
    "?["   shift, and go to state 616
    "<|"   shift, and go to state 617
    "|>"   shift, and go to state 618
    "<<<"  shift, and go to state 619
    ">>>"  shift, and go to state 620
    "&&"   shift, and go to state 621
    "||"   shift, and go to state 622
    "^^"   shift, and go to state 623
    ".."   shift, and go to state 624
    "}"    shift, and go to state 1154
    '?'    shift, and go to state 625
    '|'    shift, and go to state 626
    '^'    shift, and go to state 627
    '&'    shift, and go to state 628
    '<'    shift, and go to state 629
    '>'    shift, and go to state 630
    '-'    shift, and go to state 631
    '+'    shift, and go to state 632
    '*'    shift, and go to state 633
    '/'    shift, and go to state 634
    '%'    shift, and go to state 635
    '.'    shift, and go to state 636
    '['    shift, and go to state 637


State 990

  604 variable_name_with_pos_list: variable_name_with_pos_list . ',' "name"
  605                            | variable_name_with_pos_list . ',' "name" "aka" "name"
  813 array_comprehension: '[' "for" '(' variable_name_with_pos_list . "in" expr_list ')' ';' expr array_comprehension_where ']'

    "in"  shift, and go to state 1155
    ','   shift, and go to state 880


State 991

  814 array_comprehension: '[' "iterator" "for" '(' . variable_name_with_pos_list "in" expr_list ')' ';' expr array_comprehension_where ']'

    "$i"    shift, and go to state 673
    "name"  shift, and go to state 674

    variable_name_with_pos_list  go to state 1156


State 992

  309 expr_list: expr_list ',' expr .
  356 expr_method_call: expr . "->" "name" '(' ')'
  357                 | expr . "->" "name" '(' expr_list ')'
  367 expr_field: expr . '.' "name"
  368           | expr . '.' '.' "name"
  369           | expr . '.' "name" '(' ')'
  370           | expr . '.' "name" '(' expr_list ')'
  371           | expr . '.' basic_type_declaration '(' ')'
  372           | expr . '.' basic_type_declaration '(' expr_list ')'
  375           | expr . '.' $@25 error $@26
  397 expr: expr . "<<" expr
  398     | expr . ">>" expr
  399     | expr . "<<<" expr
  400     | expr . ">>>" expr
  401     | expr . '+' expr
  402     | expr . '-' expr
  403     | expr . '*' expr
  404     | expr . '/' expr
  405     | expr . '%' expr
  406     | expr . '<' expr
  407     | expr . '>' expr
  408     | expr . "==" expr
  409     | expr . "!=" expr
  410     | expr . "<=" expr
  411     | expr . ">=" expr
  412     | expr . '&' expr
  413     | expr . '|' expr
  414     | expr . '^' expr
  415     | expr . "&&" expr
  416     | expr . "||" expr
  417     | expr . "^^" expr
  418     | expr . ".." expr
  421     | expr . "++"
  422     | expr . "--"
  424     | expr . '[' expr ']'
  425     | expr . '.' '[' expr ']'
  426     | expr . "?[" expr ']'
  427     | expr . '.' "?[" expr ']'
  428     | expr . "?." "name"
  429     | expr . '.' "?." "name"
  436     | expr . "??" expr
  437     | expr . '?' expr ':' expr
  440     | expr . "is" "type" '<' $@27 type_declaration_no_options '>' $@28
  441     | expr . "is" basic_type_declaration
  442     | expr . "is" "name"
  443     | expr . "as" "name"
  446     | expr . "as" "type" '<' $@29 type_declaration '>' $@30
  447     | expr . "as" basic_type_declaration
  448     | expr . '?' "as" "name"
  451     | expr . '?' "as" "type" '<' $@31 type_declaration '>' $@32
  452     | expr . '?' "as" basic_type_declaration
  460     | expr . "<|" expr
  461     | expr . "|>" expr
  462     | expr . "|>" basic_type_declaration
  476 expr_mtag: expr . '.' "$f" '(' expr ')'
  477          | expr . "?." "$f" '(' expr ')'
  478          | expr . '.' '.' "$f" '(' expr ')'
  479          | expr . '.' "?." "$f" '(' expr ')'
  480          | expr . "as" "$f" '(' expr ')'
  481          | expr . '?' "as" "$f" '(' expr ')'
  482          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 603
    "as"   shift, and go to state 604
    "<<"   shift, and go to state 605
    ">>"   shift, and go to state 606
    "++"   shift, and go to state 607
    "--"   shift, and go to state 608
    "<="   shift, and go to state 609
    ">="   shift, and go to state 610
    "=="   shift, and go to state 611
    "!="   shift, and go to state 612
    "->"   shift, and go to state 613
    "??"   shift, and go to state 614
    "?."   shift, and go to state 615
    "?["   shift, and go to state 616
    "<|"   shift, and go to state 617
    "|>"   shift, and go to state 618
    "<<<"  shift, and go to state 619
    ">>>"  shift, and go to state 620
    "&&"   shift, and go to state 621
    "||"   shift, and go to state 622
    "^^"   shift, and go to state 623
    ".."   shift, and go to state 624
    '?'    shift, and go to state 625
    '|'    shift, and go to state 626
    '^'    shift, and go to state 627
    '&'    shift, and go to state 628
    '<'    shift, and go to state 629
    '>'    shift, and go to state 630
    '-'    shift, and go to state 631
    '+'    shift, and go to state 632
    '*'    shift, and go to state 633
    '/'    shift, and go to state 634
    '%'    shift, and go to state 635
    '.'    shift, and go to state 636
    '['    shift, and go to state 637

    $default  reduce using rule 309 (expr_list)


State 993

  785 make_dim_decl: '[' expr_list optional_comma ']' .

    $default  reduce using rule 785 (make_dim_decl)


State 994

  423 expr: '(' expr_list optional_comma ')' .

    $default  reduce using rule 423 (expr)


State 995

  359 func_addr_name: "$i" '(' . expr ')'

    "struct"                          shift, and go to state 414
    "class"                           shift, and go to state 415
    "true"                            shift, and go to state 416
    "false"                           shift, and go to state 417
    "new"                             shift, and go to state 418
    "typeinfo"                        shift, and go to state 419
    "type"                            shift, and go to state 420
    "array"                           shift, and go to state 421
    "null"                            shift, and go to state 422
    "table"                           shift, and go to state 423
    "deref"                           shift, and go to state 424
    "cast"                            shift, and go to state 425
    "upcast"                          shift, and go to state 426
    "addr"                            shift, and go to state 427
    "reinterpret"                     shift, and go to state 428
    "unsafe"                          shift, and go to state 429
    "fixed_array"                     shift, and go to state 430
    "default"                         shift, and go to state 431
    "bool"                            shift, and go to state 228
    "void"                            shift, and go to state 229
    "string"                          shift, and go to state 230
    "int"                             shift, and go to state 232
    "int2"                            shift, and go to state 233
    "int3"                            shift, and go to state 234
    "int4"                            shift, and go to state 235
    "uint"                            shift, and go to state 236
    "bitfield"                        shift, and go to state 432
    "uint2"                           shift, and go to state 238
    "uint3"                           shift, and go to state 239
    "uint4"                           shift, and go to state 240
    "float"                           shift, and go to state 241
    "float2"                          shift, and go to state 242
    "float3"                          shift, and go to state 243
    "float4"                          shift, and go to state 244
    "range"                           shift, and go to state 245
    "urange"                          shift, and go to state 246
    "range64"                         shift, and go to state 247
    "urange64"                        shift, and go to state 248
    "int64"                           shift, and go to state 250
    "uint64"                          shift, and go to state 251
    "double"                          shift, and go to state 252
    "int8"                            shift, and go to state 255
    "uint8"                           shift, and go to state 256
    "int16"                           shift, and go to state 257
    "uint16"                          shift, and go to state 258
    "tuple"                           shift, and go to state 433
    "variant"                         shift, and go to state 434
    "generator"                       shift, and go to state 435
    "++"                              shift, and go to state 436
    "--"                              shift, and go to state 437
    "::"                              shift, and go to state 55
    "$$"                              shift, and go to state 438
    "$i"                              shift, and go to state 439
    "$v"                              shift, and go to state 440
    "$b"                              shift, and go to state 441
    "$a"                              shift, and go to state 442
    "$c"                              shift, and go to state 443
    "..."                             shift, and go to state 444
    "integer constant"                shift, and go to state 445
    "long integer constant"           shift, and go to state 446
    "unsigned integer constant"       shift, and go to state 447
    "unsigned long integer constant"  shift, and go to state 448
    "unsigned int8 constant"          shift, and go to state 449
    "floating point constant"         shift, and go to state 450
    "double constant"                 shift, and go to state 451
    "name"                            shift, and go to state 56
    "start of the string"             shift, and go to state 452
    '-'                               shift, and go to state 453
    '+'                               shift, and go to state 454
    '*'                               shift, and go to state 455
    '%'                               shift, and go to state 13
    '~'                               shift, and go to state 456
    '!'                               shift, and go to state 457
    '['                               shift, and go to state 458
    '('                               shift, and go to state 459
    '$'                               shift, and go to state 460
    '@'                               shift, and go to state 461
    '{'                               shift, and go to state 462

    string_builder          go to state 463
    expr_reader             go to state 464
    expr_call_pipe          go to state 465
    name_in_namespace       go to state 466
    expr_new                go to state 467
    expr_cast               go to state 468
    expr_type_decl          go to state 469
    expr_type_info          go to state 470
    block_or_lambda         go to state 471
    expr_full_block         go to state 472
    expr_numeric_const      go to state 473
    expr_named_call         go to state 474
    expr_method_call        go to state 475
    func_addr_expr          go to state 476
    expr_field              go to state 477
    expr_call               go to state 478
    expr                    go to state 1157
    expr_generator          go to state 480
    expr_mtag               go to state 481
    basic_type_declaration  go to state 482
    make_decl               go to state 483
    make_struct_decl        go to state 484
    make_tuple_call         go to state 485
    make_dim_decl           go to state 486
    make_table_decl         go to state 487
    array_comprehension     go to state 488


State 996

  483 expr_mtag: '@' '@' "$c" '(' . expr ')'

    "struct"                          shift, and go to state 414
    "class"                           shift, and go to state 415
    "true"                            shift, and go to state 416
    "false"                           shift, and go to state 417
    "new"                             shift, and go to state 418
    "typeinfo"                        shift, and go to state 419
    "type"                            shift, and go to state 420
    "array"                           shift, and go to state 421
    "null"                            shift, and go to state 422
    "table"                           shift, and go to state 423
    "deref"                           shift, and go to state 424
    "cast"                            shift, and go to state 425
    "upcast"                          shift, and go to state 426
    "addr"                            shift, and go to state 427
    "reinterpret"                     shift, and go to state 428
    "unsafe"                          shift, and go to state 429
    "fixed_array"                     shift, and go to state 430
    "default"                         shift, and go to state 431
    "bool"                            shift, and go to state 228
    "void"                            shift, and go to state 229
    "string"                          shift, and go to state 230
    "int"                             shift, and go to state 232
    "int2"                            shift, and go to state 233
    "int3"                            shift, and go to state 234
    "int4"                            shift, and go to state 235
    "uint"                            shift, and go to state 236
    "bitfield"                        shift, and go to state 432
    "uint2"                           shift, and go to state 238
    "uint3"                           shift, and go to state 239
    "uint4"                           shift, and go to state 240
    "float"                           shift, and go to state 241
    "float2"                          shift, and go to state 242
    "float3"                          shift, and go to state 243
    "float4"                          shift, and go to state 244
    "range"                           shift, and go to state 245
    "urange"                          shift, and go to state 246
    "range64"                         shift, and go to state 247
    "urange64"                        shift, and go to state 248
    "int64"                           shift, and go to state 250
    "uint64"                          shift, and go to state 251
    "double"                          shift, and go to state 252
    "int8"                            shift, and go to state 255
    "uint8"                           shift, and go to state 256
    "int16"                           shift, and go to state 257
    "uint16"                          shift, and go to state 258
    "tuple"                           shift, and go to state 433
    "variant"                         shift, and go to state 434
    "generator"                       shift, and go to state 435
    "++"                              shift, and go to state 436
    "--"                              shift, and go to state 437
    "::"                              shift, and go to state 55
    "$$"                              shift, and go to state 438
    "$i"                              shift, and go to state 439
    "$v"                              shift, and go to state 440
    "$b"                              shift, and go to state 441
    "$a"                              shift, and go to state 442
    "$c"                              shift, and go to state 443
    "..."                             shift, and go to state 444
    "integer constant"                shift, and go to state 445
    "long integer constant"           shift, and go to state 446
    "unsigned integer constant"       shift, and go to state 447
    "unsigned long integer constant"  shift, and go to state 448
    "unsigned int8 constant"          shift, and go to state 449
    "floating point constant"         shift, and go to state 450
    "double constant"                 shift, and go to state 451
    "name"                            shift, and go to state 56
    "start of the string"             shift, and go to state 452
    '-'                               shift, and go to state 453
    '+'                               shift, and go to state 454
    '*'                               shift, and go to state 455
    '%'                               shift, and go to state 13
    '~'                               shift, and go to state 456
    '!'                               shift, and go to state 457
    '['                               shift, and go to state 458
    '('                               shift, and go to state 459
    '$'                               shift, and go to state 460
    '@'                               shift, and go to state 461
    '{'                               shift, and go to state 462

    string_builder          go to state 463
    expr_reader             go to state 464
    expr_call_pipe          go to state 465
    name_in_namespace       go to state 466
    expr_new                go to state 467
    expr_cast               go to state 468
    expr_type_decl          go to state 469
    expr_type_info          go to state 470
    block_or_lambda         go to state 471
    expr_full_block         go to state 472
    expr_numeric_const      go to state 473
    expr_named_call         go to state 474
    expr_method_call        go to state 475
    func_addr_expr          go to state 476
    expr_field              go to state 477
    expr_call               go to state 478
    expr                    go to state 1158
    expr_generator          go to state 480
    expr_mtag               go to state 481
    basic_type_declaration  go to state 482
    make_decl               go to state 483
    make_struct_decl        go to state 484
    make_tuple_call         go to state 485
    make_dim_decl           go to state 486
    make_table_decl         go to state 487
    array_comprehension     go to state 488


State 997

  363 func_addr_expr: '@' '@' '<' $@21 . type_declaration_no_options '>' $@22 func_addr_name

    "type"       shift, and go to state 222
    "array"      shift, and go to state 223
    "table"      shift, and go to state 224
    "typedecl"   shift, and go to state 225
    "iterator"   shift, and go to state 226
    "smart_ptr"  shift, and go to state 227
    "bool"       shift, and go to state 228
    "void"       shift, and go to state 229
    "string"     shift, and go to state 230
    "auto"       shift, and go to state 231
    "int"        shift, and go to state 232
    "int2"       shift, and go to state 233
    "int3"       shift, and go to state 234
    "int4"       shift, and go to state 235
    "uint"       shift, and go to state 236
    "bitfield"   shift, and go to state 237
    "uint2"      shift, and go to state 238
    "uint3"      shift, and go to state 239
    "uint4"      shift, and go to state 240
    "float"      shift, and go to state 241
    "float2"     shift, and go to state 242
    "float3"     shift, and go to state 243
    "float4"     shift, and go to state 244
    "range"      shift, and go to state 245
    "urange"     shift, and go to state 246
    "range64"    shift, and go to state 247
    "urange64"   shift, and go to state 248
    "block"      shift, and go to state 249
    "int64"      shift, and go to state 250
    "uint64"     shift, and go to state 251
    "double"     shift, and go to state 252
    "function"   shift, and go to state 253
    "lambda"     shift, and go to state 254
    "int8"       shift, and go to state 255
    "uint8"      shift, and go to state 256
    "int16"      shift, and go to state 257
    "uint16"     shift, and go to state 258
    "tuple"      shift, and go to state 259
    "variant"    shift, and go to state 260
    "::"         shift, and go to state 55
    "$t"         shift, and go to state 261
    "name"       shift, and go to state 56
    '$'          shift, and go to state 262

    name_in_namespace                   go to state 263
    basic_type_declaration              go to state 264
    structure_type_declaration          go to state 265
    auto_type_declaration               go to state 266
    bitfield_type_declaration           go to state 267
    type_declaration_no_options         go to state 1159
    type_declaration_no_options_no_dim  go to state 269


State 998

  366 func_addr_expr: '@' '@' '<' $@23 . optional_function_argument_list optional_function_type '>' $@24 func_addr_name

    '('  shift, and go to state 329

    $default  reduce using rule 123 (optional_function_argument_list)

    optional_function_argument_list  go to state 1160


State 999

  604 variable_name_with_pos_list: variable_name_with_pos_list . ',' "name"
  605                            | variable_name_with_pos_list . ',' "name" "aka" "name"
  815 array_comprehension: '{' "for" '(' variable_name_with_pos_list . "in" expr_list ')' ';' make_map_tuple array_comprehension_where '}'

    "in"  shift, and go to state 1161
    ','   shift, and go to state 880


State 1000

  356 expr_method_call: expr . "->" "name" '(' ')'
  357                 | expr . "->" "name" '(' expr_list ')'
  367 expr_field: expr . '.' "name"
  368           | expr . '.' '.' "name"
  369           | expr . '.' "name" '(' ')'
  370           | expr . '.' "name" '(' expr_list ')'
  371           | expr . '.' basic_type_declaration '(' ')'
  372           | expr . '.' basic_type_declaration '(' expr_list ')'
  375           | expr . '.' $@25 error $@26
  397 expr: expr . "<<" expr
  398     | expr . ">>" expr
  399     | expr . "<<<" expr
  400     | expr . ">>>" expr
  401     | expr . '+' expr
  402     | expr . '-' expr
  403     | expr . '*' expr
  404     | expr . '/' expr
  405     | expr . '%' expr
  406     | expr . '<' expr
  407     | expr . '>' expr
  408     | expr . "==" expr
  409     | expr . "!=" expr
  410     | expr . "<=" expr
  411     | expr . ">=" expr
  412     | expr . '&' expr
  413     | expr . '|' expr
  414     | expr . '^' expr
  415     | expr . "&&" expr
  416     | expr . "||" expr
  417     | expr . "^^" expr
  418     | expr . ".." expr
  421     | expr . "++"
  422     | expr . "--"
  424     | expr . '[' expr ']'
  425     | expr . '.' '[' expr ']'
  426     | expr . "?[" expr ']'
  427     | expr . '.' "?[" expr ']'
  428     | expr . "?." "name"
  429     | expr . '.' "?." "name"
  436     | expr . "??" expr
  437     | expr . '?' expr ':' expr
  440     | expr . "is" "type" '<' $@27 type_declaration_no_options '>' $@28
  441     | expr . "is" basic_type_declaration
  442     | expr . "is" "name"
  443     | expr . "as" "name"
  446     | expr . "as" "type" '<' $@29 type_declaration '>' $@30
  447     | expr . "as" basic_type_declaration
  448     | expr . '?' "as" "name"
  451     | expr . '?' "as" "type" '<' $@31 type_declaration '>' $@32
  452     | expr . '?' "as" basic_type_declaration
  460     | expr . "<|" expr
  461     | expr . "|>" expr
  462     | expr . "|>" basic_type_declaration
  476 expr_mtag: expr . '.' "$f" '(' expr ')'
  477          | expr . "?." "$f" '(' expr ')'
  478          | expr . '.' '.' "$f" '(' expr ')'
  479          | expr . '.' "?." "$f" '(' expr ')'
  480          | expr . "as" "$f" '(' expr ')'
  481          | expr . '?' "as" "$f" '(' expr ')'
  482          | expr . "is" "$f" '(' expr ')'
  779 make_map_tuple: expr "=>" expr .

    "is"   shift, and go to state 603
    "as"   shift, and go to state 604
    "<<"   shift, and go to state 605
    ">>"   shift, and go to state 606
    "++"   shift, and go to state 607
    "--"   shift, and go to state 608
    "<="   shift, and go to state 609
    ">="   shift, and go to state 610
    "=="   shift, and go to state 611
    "!="   shift, and go to state 612
    "->"   shift, and go to state 613
    "??"   shift, and go to state 614
    "?."   shift, and go to state 615
    "?["   shift, and go to state 616
    "<|"   shift, and go to state 617
    "|>"   shift, and go to state 618
    "<<<"  shift, and go to state 619
    ">>>"  shift, and go to state 620
    "&&"   shift, and go to state 621
    "||"   shift, and go to state 622
    "^^"   shift, and go to state 623
    ".."   shift, and go to state 624
    '?'    shift, and go to state 625
    '|'    shift, and go to state 626
    '^'    shift, and go to state 627
    '&'    shift, and go to state 628
    '<'    shift, and go to state 629
    '>'    shift, and go to state 630
    '-'    shift, and go to state 631
    '+'    shift, and go to state 632
    '*'    shift, and go to state 633
    '/'    shift, and go to state 634
    '%'    shift, and go to state 635
    '.'    shift, and go to state 636
    '['    shift, and go to state 637

    $default  reduce using rule 779 (make_map_tuple)


State 1001

  804 expr_map_tuple_list: expr_map_tuple_list ',' make_map_tuple .

    $default  reduce using rule 804 (expr_map_tuple_list)


State 1002

  805 make_table_decl: '{' expr_map_tuple_list optional_comma '}' .

    $default  reduce using rule 805 (make_table_decl)


State 1003

  749 make_struct_fields: "name" . copy_or_move expr
  750                   | "name" . ":=" expr

    "<-"  shift, and go to state 879
    ":="  shift, and go to state 1007
    '='   shift, and go to state 881

    copy_or_move  go to state 1008


State 1004

  377 expr_call: name_in_namespace '(' "uninitialized" ')' .

    $default  reduce using rule 377 (expr_call)


State 1005

  379 expr_call: name_in_namespace '(' "uninitialized" make_struct_single . ')'

    ')'  shift, and go to state 1162


State 1006

  753 make_struct_fields: "$f" '(' . expr ')' copy_or_move expr
  754                   | "$f" '(' . expr ')' ":=" expr

    "struct"                          shift, and go to state 414
    "class"                           shift, and go to state 415
    "true"                            shift, and go to state 416
    "false"                           shift, and go to state 417
    "new"                             shift, and go to state 418
    "typeinfo"                        shift, and go to state 419
    "type"                            shift, and go to state 420
    "array"                           shift, and go to state 421
    "null"                            shift, and go to state 422
    "table"                           shift, and go to state 423
    "deref"                           shift, and go to state 424
    "cast"                            shift, and go to state 425
    "upcast"                          shift, and go to state 426
    "addr"                            shift, and go to state 427
    "reinterpret"                     shift, and go to state 428
    "unsafe"                          shift, and go to state 429
    "fixed_array"                     shift, and go to state 430
    "default"                         shift, and go to state 431
    "bool"                            shift, and go to state 228
    "void"                            shift, and go to state 229
    "string"                          shift, and go to state 230
    "int"                             shift, and go to state 232
    "int2"                            shift, and go to state 233
    "int3"                            shift, and go to state 234
    "int4"                            shift, and go to state 235
    "uint"                            shift, and go to state 236
    "bitfield"                        shift, and go to state 432
    "uint2"                           shift, and go to state 238
    "uint3"                           shift, and go to state 239
    "uint4"                           shift, and go to state 240
    "float"                           shift, and go to state 241
    "float2"                          shift, and go to state 242
    "float3"                          shift, and go to state 243
    "float4"                          shift, and go to state 244
    "range"                           shift, and go to state 245
    "urange"                          shift, and go to state 246
    "range64"                         shift, and go to state 247
    "urange64"                        shift, and go to state 248
    "int64"                           shift, and go to state 250
    "uint64"                          shift, and go to state 251
    "double"                          shift, and go to state 252
    "int8"                            shift, and go to state 255
    "uint8"                           shift, and go to state 256
    "int16"                           shift, and go to state 257
    "uint16"                          shift, and go to state 258
    "tuple"                           shift, and go to state 433
    "variant"                         shift, and go to state 434
    "generator"                       shift, and go to state 435
    "++"                              shift, and go to state 436
    "--"                              shift, and go to state 437
    "::"                              shift, and go to state 55
    "$$"                              shift, and go to state 438
    "$i"                              shift, and go to state 439
    "$v"                              shift, and go to state 440
    "$b"                              shift, and go to state 441
    "$a"                              shift, and go to state 442
    "$c"                              shift, and go to state 443
    "..."                             shift, and go to state 444
    "integer constant"                shift, and go to state 445
    "long integer constant"           shift, and go to state 446
    "unsigned integer constant"       shift, and go to state 447
    "unsigned long integer constant"  shift, and go to state 448
    "unsigned int8 constant"          shift, and go to state 449
    "floating point constant"         shift, and go to state 450
    "double constant"                 shift, and go to state 451
    "name"                            shift, and go to state 56
    "start of the string"             shift, and go to state 452
    '-'                               shift, and go to state 453
    '+'                               shift, and go to state 454
    '*'                               shift, and go to state 455
    '%'                               shift, and go to state 13
    '~'                               shift, and go to state 456
    '!'                               shift, and go to state 457
    '['                               shift, and go to state 458
    '('                               shift, and go to state 459
    '$'                               shift, and go to state 460
    '@'                               shift, and go to state 461
    '{'                               shift, and go to state 462

    string_builder          go to state 463
    expr_reader             go to state 464
    expr_call_pipe          go to state 465
    name_in_namespace       go to state 466
    expr_new                go to state 467
    expr_cast               go to state 468
    expr_type_decl          go to state 469
    expr_type_info          go to state 470
    block_or_lambda         go to state 471
    expr_full_block         go to state 472
    expr_numeric_const      go to state 473
    expr_named_call         go to state 474
    expr_method_call        go to state 475
    func_addr_expr          go to state 476
    expr_field              go to state 477
    expr_call               go to state 478
    expr                    go to state 1163
    expr_generator          go to state 480
    expr_mtag               go to state 481
    basic_type_declaration  go to state 482
    make_decl               go to state 483
    make_struct_decl        go to state 484
    make_tuple_call         go to state 485
    make_dim_decl           go to state 486
    make_table_decl         go to state 487
    array_comprehension     go to state 488


State 1007

  750 make_struct_fields: "name" ":=" . expr

    "struct"                          shift, and go to state 414
    "class"                           shift, and go to state 415
    "true"                            shift, and go to state 416
    "false"                           shift, and go to state 417
    "new"                             shift, and go to state 418
    "typeinfo"                        shift, and go to state 419
    "type"                            shift, and go to state 420
    "array"                           shift, and go to state 421
    "null"                            shift, and go to state 422
    "table"                           shift, and go to state 423
    "deref"                           shift, and go to state 424
    "cast"                            shift, and go to state 425
    "upcast"                          shift, and go to state 426
    "addr"                            shift, and go to state 427
    "reinterpret"                     shift, and go to state 428
    "unsafe"                          shift, and go to state 429
    "fixed_array"                     shift, and go to state 430
    "default"                         shift, and go to state 431
    "bool"                            shift, and go to state 228
    "void"                            shift, and go to state 229
    "string"                          shift, and go to state 230
    "int"                             shift, and go to state 232
    "int2"                            shift, and go to state 233
    "int3"                            shift, and go to state 234
    "int4"                            shift, and go to state 235
    "uint"                            shift, and go to state 236
    "bitfield"                        shift, and go to state 432
    "uint2"                           shift, and go to state 238
    "uint3"                           shift, and go to state 239
    "uint4"                           shift, and go to state 240
    "float"                           shift, and go to state 241
    "float2"                          shift, and go to state 242
    "float3"                          shift, and go to state 243
    "float4"                          shift, and go to state 244
    "range"                           shift, and go to state 245
    "urange"                          shift, and go to state 246
    "range64"                         shift, and go to state 247
    "urange64"                        shift, and go to state 248
    "int64"                           shift, and go to state 250
    "uint64"                          shift, and go to state 251
    "double"                          shift, and go to state 252
    "int8"                            shift, and go to state 255
    "uint8"                           shift, and go to state 256
    "int16"                           shift, and go to state 257
    "uint16"                          shift, and go to state 258
    "tuple"                           shift, and go to state 433
    "variant"                         shift, and go to state 434
    "generator"                       shift, and go to state 435
    "++"                              shift, and go to state 436
    "--"                              shift, and go to state 437
    "::"                              shift, and go to state 55
    "$$"                              shift, and go to state 438
    "$i"                              shift, and go to state 439
    "$v"                              shift, and go to state 440
    "$b"                              shift, and go to state 441
    "$a"                              shift, and go to state 442
    "$c"                              shift, and go to state 443
    "..."                             shift, and go to state 444
    "integer constant"                shift, and go to state 445
    "long integer constant"           shift, and go to state 446
    "unsigned integer constant"       shift, and go to state 447
    "unsigned long integer constant"  shift, and go to state 448
    "unsigned int8 constant"          shift, and go to state 449
    "floating point constant"         shift, and go to state 450
    "double constant"                 shift, and go to state 451
    "name"                            shift, and go to state 56
    "start of the string"             shift, and go to state 452
    '-'                               shift, and go to state 453
    '+'                               shift, and go to state 454
    '*'                               shift, and go to state 455
    '%'                               shift, and go to state 13
    '~'                               shift, and go to state 456
    '!'                               shift, and go to state 457
    '['                               shift, and go to state 458
    '('                               shift, and go to state 459
    '$'                               shift, and go to state 460
    '@'                               shift, and go to state 461
    '{'                               shift, and go to state 462

    string_builder          go to state 463
    expr_reader             go to state 464
    expr_call_pipe          go to state 465
    name_in_namespace       go to state 466
    expr_new                go to state 467
    expr_cast               go to state 468
    expr_type_decl          go to state 469
    expr_type_info          go to state 470
    block_or_lambda         go to state 471
    expr_full_block         go to state 472
    expr_numeric_const      go to state 473
    expr_named_call         go to state 474
    expr_method_call        go to state 475
    func_addr_expr          go to state 476
    expr_field              go to state 477
    expr_call               go to state 478
    expr                    go to state 1164
    expr_generator          go to state 480
    expr_mtag               go to state 481
    basic_type_declaration  go to state 482
    make_decl               go to state 483
    make_struct_decl        go to state 484
    make_tuple_call         go to state 485
    make_dim_decl           go to state 486
    make_table_decl         go to state 487
    array_comprehension     go to state 488


State 1008

  749 make_struct_fields: "name" copy_or_move . expr

    "struct"                          shift, and go to state 414
    "class"                           shift, and go to state 415
    "true"                            shift, and go to state 416
    "false"                           shift, and go to state 417
    "new"                             shift, and go to state 418
    "typeinfo"                        shift, and go to state 419
    "type"                            shift, and go to state 420
    "array"                           shift, and go to state 421
    "null"                            shift, and go to state 422
    "table"                           shift, and go to state 423
    "deref"                           shift, and go to state 424
    "cast"                            shift, and go to state 425
    "upcast"                          shift, and go to state 426
    "addr"                            shift, and go to state 427
    "reinterpret"                     shift, and go to state 428
    "unsafe"                          shift, and go to state 429
    "fixed_array"                     shift, and go to state 430
    "default"                         shift, and go to state 431
    "bool"                            shift, and go to state 228
    "void"                            shift, and go to state 229
    "string"                          shift, and go to state 230
    "int"                             shift, and go to state 232
    "int2"                            shift, and go to state 233
    "int3"                            shift, and go to state 234
    "int4"                            shift, and go to state 235
    "uint"                            shift, and go to state 236
    "bitfield"                        shift, and go to state 432
    "uint2"                           shift, and go to state 238
    "uint3"                           shift, and go to state 239
    "uint4"                           shift, and go to state 240
    "float"                           shift, and go to state 241
    "float2"                          shift, and go to state 242
    "float3"                          shift, and go to state 243
    "float4"                          shift, and go to state 244
    "range"                           shift, and go to state 245
    "urange"                          shift, and go to state 246
    "range64"                         shift, and go to state 247
    "urange64"                        shift, and go to state 248
    "int64"                           shift, and go to state 250
    "uint64"                          shift, and go to state 251
    "double"                          shift, and go to state 252
    "int8"                            shift, and go to state 255
    "uint8"                           shift, and go to state 256
    "int16"                           shift, and go to state 257
    "uint16"                          shift, and go to state 258
    "tuple"                           shift, and go to state 433
    "variant"                         shift, and go to state 434
    "generator"                       shift, and go to state 435
    "++"                              shift, and go to state 436
    "--"                              shift, and go to state 437
    "::"                              shift, and go to state 55
    "$$"                              shift, and go to state 438
    "$i"                              shift, and go to state 439
    "$v"                              shift, and go to state 440
    "$b"                              shift, and go to state 441
    "$a"                              shift, and go to state 442
    "$c"                              shift, and go to state 443
    "..."                             shift, and go to state 444
    "integer constant"                shift, and go to state 445
    "long integer constant"           shift, and go to state 446
    "unsigned integer constant"       shift, and go to state 447
    "unsigned long integer constant"  shift, and go to state 448
    "unsigned int8 constant"          shift, and go to state 449
    "floating point constant"         shift, and go to state 450
    "double constant"                 shift, and go to state 451
    "name"                            shift, and go to state 56
    "start of the string"             shift, and go to state 452
    '-'                               shift, and go to state 453
    '+'                               shift, and go to state 454
    '*'                               shift, and go to state 455
    '%'                               shift, and go to state 13
    '~'                               shift, and go to state 456
    '!'                               shift, and go to state 457
    '['                               shift, and go to state 458
    '('                               shift, and go to state 459
    '$'                               shift, and go to state 460
    '@'                               shift, and go to state 461
    '{'                               shift, and go to state 462

    string_builder          go to state 463
    expr_reader             go to state 464
    expr_call_pipe          go to state 465
    name_in_namespace       go to state 466
    expr_new                go to state 467
    expr_cast               go to state 468
    expr_type_decl          go to state 469
    expr_type_info          go to state 470
    block_or_lambda         go to state 471
    expr_full_block         go to state 472
    expr_numeric_const      go to state 473
    expr_named_call         go to state 474
    expr_method_call        go to state 475
    func_addr_expr          go to state 476
    expr_field              go to state 477
    expr_call               go to state 478
    expr                    go to state 1165
    expr_generator          go to state 480
    expr_mtag               go to state 481
    basic_type_declaration  go to state 482
    make_decl               go to state 483
    make_struct_decl        go to state 484
    make_tuple_call         go to state 485
    make_dim_decl           go to state 486
    make_table_decl         go to state 487
    array_comprehension     go to state 488


State 1009

  354 expr_named_call: name_in_namespace '(' '[' make_struct_fields . ']' ')'
  751 make_struct_fields: make_struct_fields . ',' "name" copy_or_move expr
  752                   | make_struct_fields . ',' "name" ":=" expr
  755                   | make_struct_fields . ',' "$f" '(' expr ')' copy_or_move expr
  756                   | make_struct_fields . ',' "$f" '(' expr ')' ":=" expr

    ','  shift, and go to state 1012
    ']'  shift, and go to state 1166


State 1010

  309 expr_list: expr_list ',' . expr
  355 expr_named_call: name_in_namespace '(' expr_list ',' . '[' make_struct_fields ']' ')'

    "struct"                          shift, and go to state 414
    "class"                           shift, and go to state 415
    "true"                            shift, and go to state 416
    "false"                           shift, and go to state 417
    "new"                             shift, and go to state 418
    "typeinfo"                        shift, and go to state 419
    "type"                            shift, and go to state 420
    "array"                           shift, and go to state 421
    "null"                            shift, and go to state 422
    "table"                           shift, and go to state 423
    "deref"                           shift, and go to state 424
    "cast"                            shift, and go to state 425
    "upcast"                          shift, and go to state 426
    "addr"                            shift, and go to state 427
    "reinterpret"                     shift, and go to state 428
    "unsafe"                          shift, and go to state 429
    "fixed_array"                     shift, and go to state 430
    "default"                         shift, and go to state 431
    "bool"                            shift, and go to state 228
    "void"                            shift, and go to state 229
    "string"                          shift, and go to state 230
    "int"                             shift, and go to state 232
    "int2"                            shift, and go to state 233
    "int3"                            shift, and go to state 234
    "int4"                            shift, and go to state 235
    "uint"                            shift, and go to state 236
    "bitfield"                        shift, and go to state 432
    "uint2"                           shift, and go to state 238
    "uint3"                           shift, and go to state 239
    "uint4"                           shift, and go to state 240
    "float"                           shift, and go to state 241
    "float2"                          shift, and go to state 242
    "float3"                          shift, and go to state 243
    "float4"                          shift, and go to state 244
    "range"                           shift, and go to state 245
    "urange"                          shift, and go to state 246
    "range64"                         shift, and go to state 247
    "urange64"                        shift, and go to state 248
    "int64"                           shift, and go to state 250
    "uint64"                          shift, and go to state 251
    "double"                          shift, and go to state 252
    "int8"                            shift, and go to state 255
    "uint8"                           shift, and go to state 256
    "int16"                           shift, and go to state 257
    "uint16"                          shift, and go to state 258
    "tuple"                           shift, and go to state 433
    "variant"                         shift, and go to state 434
    "generator"                       shift, and go to state 435
    "++"                              shift, and go to state 436
    "--"                              shift, and go to state 437
    "::"                              shift, and go to state 55
    "$$"                              shift, and go to state 438
    "$i"                              shift, and go to state 439
    "$v"                              shift, and go to state 440
    "$b"                              shift, and go to state 441
    "$a"                              shift, and go to state 442
    "$c"                              shift, and go to state 443
    "..."                             shift, and go to state 444
    "integer constant"                shift, and go to state 445
    "long integer constant"           shift, and go to state 446
    "unsigned integer constant"       shift, and go to state 447
    "unsigned long integer constant"  shift, and go to state 448
    "unsigned int8 constant"          shift, and go to state 449
    "floating point constant"         shift, and go to state 450
    "double constant"                 shift, and go to state 451
    "name"                            shift, and go to state 56
    "start of the string"             shift, and go to state 452
    '-'                               shift, and go to state 453
    '+'                               shift, and go to state 454
    '*'                               shift, and go to state 455
    '%'                               shift, and go to state 13
    '~'                               shift, and go to state 456
    '!'                               shift, and go to state 457
    '['                               shift, and go to state 1167
    '('                               shift, and go to state 459
    '$'                               shift, and go to state 460
    '@'                               shift, and go to state 461
    '{'                               shift, and go to state 462

    string_builder          go to state 463
    expr_reader             go to state 464
    expr_call_pipe          go to state 465
    name_in_namespace       go to state 466
    expr_new                go to state 467
    expr_cast               go to state 468
    expr_type_decl          go to state 469
    expr_type_info          go to state 470
    block_or_lambda         go to state 471
    expr_full_block         go to state 472
    expr_numeric_const      go to state 473
    expr_named_call         go to state 474
    expr_method_call        go to state 475
    func_addr_expr          go to state 476
    expr_field              go to state 477
    expr_call               go to state 478
    expr                    go to state 992
    expr_generator          go to state 480
    expr_mtag               go to state 481
    basic_type_declaration  go to state 482
    make_decl               go to state 483
    make_struct_decl        go to state 484
    make_tuple_call         go to state 485
    make_dim_decl           go to state 486
    make_table_decl         go to state 487
    array_comprehension     go to state 488


State 1011

  380 expr_call: name_in_namespace '(' expr_list ')' .

    $default  reduce using rule 380 (expr_call)


State 1012

  751 make_struct_fields: make_struct_fields ',' . "name" copy_or_move expr
  752                   | make_struct_fields ',' . "name" ":=" expr
  755                   | make_struct_fields ',' . "$f" '(' expr ')' copy_or_move expr
  756                   | make_struct_fields ',' . "$f" '(' expr ')' ":=" expr

    "$f"    shift, and go to state 1168
    "name"  shift, and go to state 1169


State 1013

  378 expr_call: name_in_namespace '(' make_struct_single ')' .

    $default  reduce using rule 378 (expr_call)


State 1014

  324 optional_capture_list: "capture" '(' . capture_list ')'

    "<-"    shift, and go to state 1170
    ":="    shift, and go to state 1171
    "name"  shift, and go to state 1172
    '='     shift, and go to state 1173
    '&'     shift, and go to state 1174

    capture_entry  go to state 1175
    capture_list   go to state 1176


State 1015

  325 expr_full_block: block_or_lambda optional_annotation_list optional_capture_list optional_function_argument_list . optional_function_type optional_semis block_or_simple_block

    ':'  shift, and go to state 388

    $default  reduce using rule 126 (optional_function_type)

    optional_function_type  go to state 1177


State 1016

  327 expr_full_block_assumed_piped: '{' expressions '}' .

    $default  reduce using rule 327 (expr_full_block_assumed_piped)


State 1017

  326 expr_full_block_assumed_piped: block_or_lambda optional_annotation_list optional_capture_list . optional_function_argument_list optional_function_type optional_semis expression_block

    '('  shift, and go to state 329

    $default  reduce using rule 123 (optional_function_argument_list)

    optional_function_argument_list  go to state 1178


State 1018

  440 expr: expr "is" "type" '<' . $@27 type_declaration_no_options '>' $@28

    $default  reduce using rule 438 ($@27)

    $@27  go to state 1179


State 1019

  482 expr_mtag: expr "is" "$f" '(' . expr ')'

    "struct"                          shift, and go to state 414
    "class"                           shift, and go to state 415
    "true"                            shift, and go to state 416
    "false"                           shift, and go to state 417
    "new"                             shift, and go to state 418
    "typeinfo"                        shift, and go to state 419
    "type"                            shift, and go to state 420
    "array"                           shift, and go to state 421
    "null"                            shift, and go to state 422
    "table"                           shift, and go to state 423
    "deref"                           shift, and go to state 424
    "cast"                            shift, and go to state 425
    "upcast"                          shift, and go to state 426
    "addr"                            shift, and go to state 427
    "reinterpret"                     shift, and go to state 428
    "unsafe"                          shift, and go to state 429
    "fixed_array"                     shift, and go to state 430
    "default"                         shift, and go to state 431
    "bool"                            shift, and go to state 228
    "void"                            shift, and go to state 229
    "string"                          shift, and go to state 230
    "int"                             shift, and go to state 232
    "int2"                            shift, and go to state 233
    "int3"                            shift, and go to state 234
    "int4"                            shift, and go to state 235
    "uint"                            shift, and go to state 236
    "bitfield"                        shift, and go to state 432
    "uint2"                           shift, and go to state 238
    "uint3"                           shift, and go to state 239
    "uint4"                           shift, and go to state 240
    "float"                           shift, and go to state 241
    "float2"                          shift, and go to state 242
    "float3"                          shift, and go to state 243
    "float4"                          shift, and go to state 244
    "range"                           shift, and go to state 245
    "urange"                          shift, and go to state 246
    "range64"                         shift, and go to state 247
    "urange64"                        shift, and go to state 248
    "int64"                           shift, and go to state 250
    "uint64"                          shift, and go to state 251
    "double"                          shift, and go to state 252
    "int8"                            shift, and go to state 255
    "uint8"                           shift, and go to state 256
    "int16"                           shift, and go to state 257
    "uint16"                          shift, and go to state 258
    "tuple"                           shift, and go to state 433
    "variant"                         shift, and go to state 434
    "generator"                       shift, and go to state 435
    "++"                              shift, and go to state 436
    "--"                              shift, and go to state 437
    "::"                              shift, and go to state 55
    "$$"                              shift, and go to state 438
    "$i"                              shift, and go to state 439
    "$v"                              shift, and go to state 440
    "$b"                              shift, and go to state 441
    "$a"                              shift, and go to state 442
    "$c"                              shift, and go to state 443
    "..."                             shift, and go to state 444
    "integer constant"                shift, and go to state 445
    "long integer constant"           shift, and go to state 446
    "unsigned integer constant"       shift, and go to state 447
    "unsigned long integer constant"  shift, and go to state 448
    "unsigned int8 constant"          shift, and go to state 449
    "floating point constant"         shift, and go to state 450
    "double constant"                 shift, and go to state 451
    "name"                            shift, and go to state 56
    "start of the string"             shift, and go to state 452
    '-'                               shift, and go to state 453
    '+'                               shift, and go to state 454
    '*'                               shift, and go to state 455
    '%'                               shift, and go to state 13
    '~'                               shift, and go to state 456
    '!'                               shift, and go to state 457
    '['                               shift, and go to state 458
    '('                               shift, and go to state 459
    '$'                               shift, and go to state 460
    '@'                               shift, and go to state 461
    '{'                               shift, and go to state 462

    string_builder          go to state 463
    expr_reader             go to state 464
    expr_call_pipe          go to state 465
    name_in_namespace       go to state 466
    expr_new                go to state 467
    expr_cast               go to state 468
    expr_type_decl          go to state 469
    expr_type_info          go to state 470
    block_or_lambda         go to state 471
    expr_full_block         go to state 472
    expr_numeric_const      go to state 473
    expr_named_call         go to state 474
    expr_method_call        go to state 475
    func_addr_expr          go to state 476
    expr_field              go to state 477
    expr_call               go to state 478
    expr                    go to state 1180
    expr_generator          go to state 480
    expr_mtag               go to state 481
    basic_type_declaration  go to state 482
    make_decl               go to state 483
    make_struct_decl        go to state 484
    make_tuple_call         go to state 485
    make_dim_decl           go to state 486
    make_table_decl         go to state 487
    array_comprehension     go to state 488


State 1020

  446 expr: expr "as" "type" '<' . $@29 type_declaration '>' $@30

    $default  reduce using rule 444 ($@29)

    $@29  go to state 1181


State 1021

  480 expr_mtag: expr "as" "$f" '(' . expr ')'

    "struct"                          shift, and go to state 414
    "class"                           shift, and go to state 415
    "true"                            shift, and go to state 416
    "false"                           shift, and go to state 417
    "new"                             shift, and go to state 418
    "typeinfo"                        shift, and go to state 419
    "type"                            shift, and go to state 420
    "array"                           shift, and go to state 421
    "null"                            shift, and go to state 422
    "table"                           shift, and go to state 423
    "deref"                           shift, and go to state 424
    "cast"                            shift, and go to state 425
    "upcast"                          shift, and go to state 426
    "addr"                            shift, and go to state 427
    "reinterpret"                     shift, and go to state 428
    "unsafe"                          shift, and go to state 429
    "fixed_array"                     shift, and go to state 430
    "default"                         shift, and go to state 431
    "bool"                            shift, and go to state 228
    "void"                            shift, and go to state 229
    "string"                          shift, and go to state 230
    "int"                             shift, and go to state 232
    "int2"                            shift, and go to state 233
    "int3"                            shift, and go to state 234
    "int4"                            shift, and go to state 235
    "uint"                            shift, and go to state 236
    "bitfield"                        shift, and go to state 432
    "uint2"                           shift, and go to state 238
    "uint3"                           shift, and go to state 239
    "uint4"                           shift, and go to state 240
    "float"                           shift, and go to state 241
    "float2"                          shift, and go to state 242
    "float3"                          shift, and go to state 243
    "float4"                          shift, and go to state 244
    "range"                           shift, and go to state 245
    "urange"                          shift, and go to state 246
    "range64"                         shift, and go to state 247
    "urange64"                        shift, and go to state 248
    "int64"                           shift, and go to state 250
    "uint64"                          shift, and go to state 251
    "double"                          shift, and go to state 252
    "int8"                            shift, and go to state 255
    "uint8"                           shift, and go to state 256
    "int16"                           shift, and go to state 257
    "uint16"                          shift, and go to state 258
    "tuple"                           shift, and go to state 433
    "variant"                         shift, and go to state 434
    "generator"                       shift, and go to state 435
    "++"                              shift, and go to state 436
    "--"                              shift, and go to state 437
    "::"                              shift, and go to state 55
    "$$"                              shift, and go to state 438
    "$i"                              shift, and go to state 439
    "$v"                              shift, and go to state 440
    "$b"                              shift, and go to state 441
    "$a"                              shift, and go to state 442
    "$c"                              shift, and go to state 443
    "..."                             shift, and go to state 444
    "integer constant"                shift, and go to state 445
    "long integer constant"           shift, and go to state 446
    "unsigned integer constant"       shift, and go to state 447
    "unsigned long integer constant"  shift, and go to state 448
    "unsigned int8 constant"          shift, and go to state 449
    "floating point constant"         shift, and go to state 450
    "double constant"                 shift, and go to state 451
    "name"                            shift, and go to state 56
    "start of the string"             shift, and go to state 452
    '-'                               shift, and go to state 453
    '+'                               shift, and go to state 454
    '*'                               shift, and go to state 455
    '%'                               shift, and go to state 13
    '~'                               shift, and go to state 456
    '!'                               shift, and go to state 457
    '['                               shift, and go to state 458
    '('                               shift, and go to state 459
    '$'                               shift, and go to state 460
    '@'                               shift, and go to state 461
    '{'                               shift, and go to state 462

    string_builder          go to state 463
    expr_reader             go to state 464
    expr_call_pipe          go to state 465
    name_in_namespace       go to state 466
    expr_new                go to state 467
    expr_cast               go to state 468
    expr_type_decl          go to state 469
    expr_type_info          go to state 470
    block_or_lambda         go to state 471
    expr_full_block         go to state 472
    expr_numeric_const      go to state 473
    expr_named_call         go to state 474
    expr_method_call        go to state 475
    func_addr_expr          go to state 476
    expr_field              go to state 477
    expr_call               go to state 478
    expr                    go to state 1182
    expr_generator          go to state 480
    expr_mtag               go to state 481
    basic_type_declaration  go to state 482
    make_decl               go to state 483
    make_struct_decl        go to state 484
    make_tuple_call         go to state 485
    make_dim_decl           go to state 486
    make_table_decl         go to state 487
    array_comprehension     go to state 488


State 1022

  356 expr_method_call: expr "->" "name" '(' . ')'
  357                 | expr "->" "name" '(' . expr_list ')'

    "struct"                          shift, and go to state 414
    "class"                           shift, and go to state 415
    "true"                            shift, and go to state 416
    "false"                           shift, and go to state 417
    "new"                             shift, and go to state 418
    "typeinfo"                        shift, and go to state 419
    "type"                            shift, and go to state 420
    "array"                           shift, and go to state 421
    "null"                            shift, and go to state 422
    "table"                           shift, and go to state 423
    "deref"                           shift, and go to state 424
    "cast"                            shift, and go to state 425
    "upcast"                          shift, and go to state 426
    "addr"                            shift, and go to state 427
    "reinterpret"                     shift, and go to state 428
    "unsafe"                          shift, and go to state 429
    "fixed_array"                     shift, and go to state 430
    "default"                         shift, and go to state 431
    "bool"                            shift, and go to state 228
    "void"                            shift, and go to state 229
    "string"                          shift, and go to state 230
    "int"                             shift, and go to state 232
    "int2"                            shift, and go to state 233
    "int3"                            shift, and go to state 234
    "int4"                            shift, and go to state 235
    "uint"                            shift, and go to state 236
    "bitfield"                        shift, and go to state 432
    "uint2"                           shift, and go to state 238
    "uint3"                           shift, and go to state 239
    "uint4"                           shift, and go to state 240
    "float"                           shift, and go to state 241
    "float2"                          shift, and go to state 242
    "float3"                          shift, and go to state 243
    "float4"                          shift, and go to state 244
    "range"                           shift, and go to state 245
    "urange"                          shift, and go to state 246
    "range64"                         shift, and go to state 247
    "urange64"                        shift, and go to state 248
    "int64"                           shift, and go to state 250
    "uint64"                          shift, and go to state 251
    "double"                          shift, and go to state 252
    "int8"                            shift, and go to state 255
    "uint8"                           shift, and go to state 256
    "int16"                           shift, and go to state 257
    "uint16"                          shift, and go to state 258
    "tuple"                           shift, and go to state 433
    "variant"                         shift, and go to state 434
    "generator"                       shift, and go to state 435
    "++"                              shift, and go to state 436
    "--"                              shift, and go to state 437
    "::"                              shift, and go to state 55
    "$$"                              shift, and go to state 438
    "$i"                              shift, and go to state 439
    "$v"                              shift, and go to state 440
    "$b"                              shift, and go to state 441
    "$a"                              shift, and go to state 442
    "$c"                              shift, and go to state 443
    "..."                             shift, and go to state 444
    "integer constant"                shift, and go to state 445
    "long integer constant"           shift, and go to state 446
    "unsigned integer constant"       shift, and go to state 447
    "unsigned long integer constant"  shift, and go to state 448
    "unsigned int8 constant"          shift, and go to state 449
    "floating point constant"         shift, and go to state 450
    "double constant"                 shift, and go to state 451
    "name"                            shift, and go to state 56
    "start of the string"             shift, and go to state 452
    '-'                               shift, and go to state 453
    '+'                               shift, and go to state 454
    '*'                               shift, and go to state 455
    '%'                               shift, and go to state 13
    '~'                               shift, and go to state 456
    '!'                               shift, and go to state 457
    '['                               shift, and go to state 458
    '('                               shift, and go to state 459
    ')'                               shift, and go to state 1183
    '$'                               shift, and go to state 460
    '@'                               shift, and go to state 461
    '{'                               shift, and go to state 462

    string_builder          go to state 463
    expr_reader             go to state 464
    expr_call_pipe          go to state 465
    name_in_namespace       go to state 466
    expr_new                go to state 467
    expr_cast               go to state 468
    expr_type_decl          go to state 469
    expr_type_info          go to state 470
    expr_list               go to state 1184
    block_or_lambda         go to state 471
    expr_full_block         go to state 472
    expr_numeric_const      go to state 473
    expr_named_call         go to state 474
    expr_method_call        go to state 475
    func_addr_expr          go to state 476
    expr_field              go to state 477
    expr_call               go to state 478
    expr                    go to state 590
    expr_generator          go to state 480
    expr_mtag               go to state 481
    basic_type_declaration  go to state 482
    make_decl               go to state 483
    make_struct_decl        go to state 484
    make_tuple_call         go to state 485
    make_dim_decl           go to state 486
    make_table_decl         go to state 487
    array_comprehension     go to state 488


State 1023

  477 expr_mtag: expr "?." "$f" '(' . expr ')'

    "struct"                          shift, and go to state 414
    "class"                           shift, and go to state 415
    "true"                            shift, and go to state 416
    "false"                           shift, and go to state 417
    "new"                             shift, and go to state 418
    "typeinfo"                        shift, and go to state 419
    "type"                            shift, and go to state 420
    "array"                           shift, and go to state 421
    "null"                            shift, and go to state 422
    "table"                           shift, and go to state 423
    "deref"                           shift, and go to state 424
    "cast"                            shift, and go to state 425
    "upcast"                          shift, and go to state 426
    "addr"                            shift, and go to state 427
    "reinterpret"                     shift, and go to state 428
    "unsafe"                          shift, and go to state 429
    "fixed_array"                     shift, and go to state 430
    "default"                         shift, and go to state 431
    "bool"                            shift, and go to state 228
    "void"                            shift, and go to state 229
    "string"                          shift, and go to state 230
    "int"                             shift, and go to state 232
    "int2"                            shift, and go to state 233
    "int3"                            shift, and go to state 234
    "int4"                            shift, and go to state 235
    "uint"                            shift, and go to state 236
    "bitfield"                        shift, and go to state 432
    "uint2"                           shift, and go to state 238
    "uint3"                           shift, and go to state 239
    "uint4"                           shift, and go to state 240
    "float"                           shift, and go to state 241
    "float2"                          shift, and go to state 242
    "float3"                          shift, and go to state 243
    "float4"                          shift, and go to state 244
    "range"                           shift, and go to state 245
    "urange"                          shift, and go to state 246
    "range64"                         shift, and go to state 247
    "urange64"                        shift, and go to state 248
    "int64"                           shift, and go to state 250
    "uint64"                          shift, and go to state 251
    "double"                          shift, and go to state 252
    "int8"                            shift, and go to state 255
    "uint8"                           shift, and go to state 256
    "int16"                           shift, and go to state 257
    "uint16"                          shift, and go to state 258
    "tuple"                           shift, and go to state 433
    "variant"                         shift, and go to state 434
    "generator"                       shift, and go to state 435
    "++"                              shift, and go to state 436
    "--"                              shift, and go to state 437
    "::"                              shift, and go to state 55
    "$$"                              shift, and go to state 438
    "$i"                              shift, and go to state 439
    "$v"                              shift, and go to state 440
    "$b"                              shift, and go to state 441
    "$a"                              shift, and go to state 442
    "$c"                              shift, and go to state 443
    "..."                             shift, and go to state 444
    "integer constant"                shift, and go to state 445
    "long integer constant"           shift, and go to state 446
    "unsigned integer constant"       shift, and go to state 447
    "unsigned long integer constant"  shift, and go to state 448
    "unsigned int8 constant"          shift, and go to state 449
    "floating point constant"         shift, and go to state 450
    "double constant"                 shift, and go to state 451
    "name"                            shift, and go to state 56
    "start of the string"             shift, and go to state 452
    '-'                               shift, and go to state 453
    '+'                               shift, and go to state 454
    '*'                               shift, and go to state 455
    '%'                               shift, and go to state 13
    '~'                               shift, and go to state 456
    '!'                               shift, and go to state 457
    '['                               shift, and go to state 458
    '('                               shift, and go to state 459
    '$'                               shift, and go to state 460
    '@'                               shift, and go to state 461
    '{'                               shift, and go to state 462

    string_builder          go to state 463
    expr_reader             go to state 464
    expr_call_pipe          go to state 465
    name_in_namespace       go to state 466
    expr_new                go to state 467
    expr_cast               go to state 468
    expr_type_decl          go to state 469
    expr_type_info          go to state 470
    block_or_lambda         go to state 471
    expr_full_block         go to state 472
    expr_numeric_const      go to state 473
    expr_named_call         go to state 474
    expr_method_call        go to state 475
    func_addr_expr          go to state 476
    expr_field              go to state 477
    expr_call               go to state 478
    expr                    go to state 1185
    expr_generator          go to state 480
    expr_mtag               go to state 481
    basic_type_declaration  go to state 482
    make_decl               go to state 483
    make_struct_decl        go to state 484
    make_tuple_call         go to state 485
    make_dim_decl           go to state 486
    make_table_decl         go to state 487
    array_comprehension     go to state 488


State 1024

  426 expr: expr "?[" expr ']' .

    $default  reduce using rule 426 (expr)


State 1025

  451 expr: expr '?' "as" "type" . '<' $@31 type_declaration '>' $@32

    '<'  shift, and go to state 1186


State 1026

  481 expr_mtag: expr '?' "as" "$f" . '(' expr ')'

    '('  shift, and go to state 1187


State 1027

  448 expr: expr '?' "as" "name" .

    $default  reduce using rule 448 (expr)


State 1028

  452 expr: expr '?' "as" basic_type_declaration .

    $default  reduce using rule 452 (expr)


State 1029

  437 expr: expr '?' expr ':' . expr

    "struct"                          shift, and go to state 414
    "class"                           shift, and go to state 415
    "true"                            shift, and go to state 416
    "false"                           shift, and go to state 417
    "new"                             shift, and go to state 418
    "typeinfo"                        shift, and go to state 419
    "type"                            shift, and go to state 420
    "array"                           shift, and go to state 421
    "null"                            shift, and go to state 422
    "table"                           shift, and go to state 423
    "deref"                           shift, and go to state 424
    "cast"                            shift, and go to state 425
    "upcast"                          shift, and go to state 426
    "addr"                            shift, and go to state 427
    "reinterpret"                     shift, and go to state 428
    "unsafe"                          shift, and go to state 429
    "fixed_array"                     shift, and go to state 430
    "default"                         shift, and go to state 431
    "bool"                            shift, and go to state 228
    "void"                            shift, and go to state 229
    "string"                          shift, and go to state 230
    "int"                             shift, and go to state 232
    "int2"                            shift, and go to state 233
    "int3"                            shift, and go to state 234
    "int4"                            shift, and go to state 235
    "uint"                            shift, and go to state 236
    "bitfield"                        shift, and go to state 432
    "uint2"                           shift, and go to state 238
    "uint3"                           shift, and go to state 239
    "uint4"                           shift, and go to state 240
    "float"                           shift, and go to state 241
    "float2"                          shift, and go to state 242
    "float3"                          shift, and go to state 243
    "float4"                          shift, and go to state 244
    "range"                           shift, and go to state 245
    "urange"                          shift, and go to state 246
    "range64"                         shift, and go to state 247
    "urange64"                        shift, and go to state 248
    "int64"                           shift, and go to state 250
    "uint64"                          shift, and go to state 251
    "double"                          shift, and go to state 252
    "int8"                            shift, and go to state 255
    "uint8"                           shift, and go to state 256
    "int16"                           shift, and go to state 257
    "uint16"                          shift, and go to state 258
    "tuple"                           shift, and go to state 433
    "variant"                         shift, and go to state 434
    "generator"                       shift, and go to state 435
    "++"                              shift, and go to state 436
    "--"                              shift, and go to state 437
    "::"                              shift, and go to state 55
    "$$"                              shift, and go to state 438
    "$i"                              shift, and go to state 439
    "$v"                              shift, and go to state 440
    "$b"                              shift, and go to state 441
    "$a"                              shift, and go to state 442
    "$c"                              shift, and go to state 443
    "..."                             shift, and go to state 444
    "integer constant"                shift, and go to state 445
    "long integer constant"           shift, and go to state 446
    "unsigned integer constant"       shift, and go to state 447
    "unsigned long integer constant"  shift, and go to state 448
    "unsigned int8 constant"          shift, and go to state 449
    "floating point constant"         shift, and go to state 450
    "double constant"                 shift, and go to state 451
    "name"                            shift, and go to state 56
    "start of the string"             shift, and go to state 452
    '-'                               shift, and go to state 453
    '+'                               shift, and go to state 454
    '*'                               shift, and go to state 455
    '%'                               shift, and go to state 13
    '~'                               shift, and go to state 456
    '!'                               shift, and go to state 457
    '['                               shift, and go to state 458
    '('                               shift, and go to state 459
    '$'                               shift, and go to state 460
    '@'                               shift, and go to state 461
    '{'                               shift, and go to state 462

    string_builder          go to state 463
    expr_reader             go to state 464
    expr_call_pipe          go to state 465
    name_in_namespace       go to state 466
    expr_new                go to state 467
    expr_cast               go to state 468
    expr_type_decl          go to state 469
    expr_type_info          go to state 470
    block_or_lambda         go to state 471
    expr_full_block         go to state 472
    expr_numeric_const      go to state 473
    expr_named_call         go to state 474
    expr_method_call        go to state 475
    func_addr_expr          go to state 476
    expr_field              go to state 477
    expr_call               go to state 478
    expr                    go to state 1188
    expr_generator          go to state 480
    expr_mtag               go to state 481
    basic_type_declaration  go to state 482
    make_decl               go to state 483
    make_struct_decl        go to state 484
    make_tuple_call         go to state 485
    make_dim_decl           go to state 486
    make_table_decl         go to state 487
    array_comprehension     go to state 488


State 1030

  479 expr_mtag: expr '.' "?." "$f" . '(' expr ')'

    '('  shift, and go to state 1189


State 1031

  429 expr: expr '.' "?." "name" .

    $default  reduce using rule 429 (expr)


State 1032

  356 expr_method_call: expr . "->" "name" '(' ')'
  357                 | expr . "->" "name" '(' expr_list ')'
  367 expr_field: expr . '.' "name"
  368           | expr . '.' '.' "name"
  369           | expr . '.' "name" '(' ')'
  370           | expr . '.' "name" '(' expr_list ')'
  371           | expr . '.' basic_type_declaration '(' ')'
  372           | expr . '.' basic_type_declaration '(' expr_list ')'
  375           | expr . '.' $@25 error $@26
  397 expr: expr . "<<" expr
  398     | expr . ">>" expr
  399     | expr . "<<<" expr
  400     | expr . ">>>" expr
  401     | expr . '+' expr
  402     | expr . '-' expr
  403     | expr . '*' expr
  404     | expr . '/' expr
  405     | expr . '%' expr
  406     | expr . '<' expr
  407     | expr . '>' expr
  408     | expr . "==" expr
  409     | expr . "!=" expr
  410     | expr . "<=" expr
  411     | expr . ">=" expr
  412     | expr . '&' expr
  413     | expr . '|' expr
  414     | expr . '^' expr
  415     | expr . "&&" expr
  416     | expr . "||" expr
  417     | expr . "^^" expr
  418     | expr . ".." expr
  421     | expr . "++"
  422     | expr . "--"
  424     | expr . '[' expr ']'
  425     | expr . '.' '[' expr ']'
  426     | expr . "?[" expr ']'
  427     | expr . '.' "?[" expr ']'
  427     | expr '.' "?[" expr . ']'
  428     | expr . "?." "name"
  429     | expr . '.' "?." "name"
  436     | expr . "??" expr
  437     | expr . '?' expr ':' expr
  440     | expr . "is" "type" '<' $@27 type_declaration_no_options '>' $@28
  441     | expr . "is" basic_type_declaration
  442     | expr . "is" "name"
  443     | expr . "as" "name"
  446     | expr . "as" "type" '<' $@29 type_declaration '>' $@30
  447     | expr . "as" basic_type_declaration
  448     | expr . '?' "as" "name"
  451     | expr . '?' "as" "type" '<' $@31 type_declaration '>' $@32
  452     | expr . '?' "as" basic_type_declaration
  460     | expr . "<|" expr
  461     | expr . "|>" expr
  462     | expr . "|>" basic_type_declaration
  476 expr_mtag: expr . '.' "$f" '(' expr ')'
  477          | expr . "?." "$f" '(' expr ')'
  478          | expr . '.' '.' "$f" '(' expr ')'
  479          | expr . '.' "?." "$f" '(' expr ')'
  480          | expr . "as" "$f" '(' expr ')'
  481          | expr . '?' "as" "$f" '(' expr ')'
  482          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 603
    "as"   shift, and go to state 604
    "<<"   shift, and go to state 605
    ">>"   shift, and go to state 606
    "++"   shift, and go to state 607
    "--"   shift, and go to state 608
    "<="   shift, and go to state 609
    ">="   shift, and go to state 610
    "=="   shift, and go to state 611
    "!="   shift, and go to state 612
    "->"   shift, and go to state 613
    "??"   shift, and go to state 614
    "?."   shift, and go to state 615
    "?["   shift, and go to state 616
    "<|"   shift, and go to state 617
    "|>"   shift, and go to state 618
    "<<<"  shift, and go to state 619
    ">>>"  shift, and go to state 620
    "&&"   shift, and go to state 621
    "||"   shift, and go to state 622
    "^^"   shift, and go to state 623
    ".."   shift, and go to state 624
    '?'    shift, and go to state 625
    '|'    shift, and go to state 626
    '^'    shift, and go to state 627
    '&'    shift, and go to state 628
    '<'    shift, and go to state 629
    '>'    shift, and go to state 630
    '-'    shift, and go to state 631
    '+'    shift, and go to state 632
    '*'    shift, and go to state 633
    '/'    shift, and go to state 634
    '%'    shift, and go to state 635
    '.'    shift, and go to state 636
    '['    shift, and go to state 637
    ']'    shift, and go to state 1190


State 1033

  476 expr_mtag: expr '.' "$f" '(' . expr ')'

    "struct"                          shift, and go to state 414
    "class"                           shift, and go to state 415
    "true"                            shift, and go to state 416
    "false"                           shift, and go to state 417
    "new"                             shift, and go to state 418
    "typeinfo"                        shift, and go to state 419
    "type"                            shift, and go to state 420
    "array"                           shift, and go to state 421
    "null"                            shift, and go to state 422
    "table"                           shift, and go to state 423
    "deref"                           shift, and go to state 424
    "cast"                            shift, and go to state 425
    "upcast"                          shift, and go to state 426
    "addr"                            shift, and go to state 427
    "reinterpret"                     shift, and go to state 428
    "unsafe"                          shift, and go to state 429
    "fixed_array"                     shift, and go to state 430
    "default"                         shift, and go to state 431
    "bool"                            shift, and go to state 228
    "void"                            shift, and go to state 229
    "string"                          shift, and go to state 230
    "int"                             shift, and go to state 232
    "int2"                            shift, and go to state 233
    "int3"                            shift, and go to state 234
    "int4"                            shift, and go to state 235
    "uint"                            shift, and go to state 236
    "bitfield"                        shift, and go to state 432
    "uint2"                           shift, and go to state 238
    "uint3"                           shift, and go to state 239
    "uint4"                           shift, and go to state 240
    "float"                           shift, and go to state 241
    "float2"                          shift, and go to state 242
    "float3"                          shift, and go to state 243
    "float4"                          shift, and go to state 244
    "range"                           shift, and go to state 245
    "urange"                          shift, and go to state 246
    "range64"                         shift, and go to state 247
    "urange64"                        shift, and go to state 248
    "int64"                           shift, and go to state 250
    "uint64"                          shift, and go to state 251
    "double"                          shift, and go to state 252
    "int8"                            shift, and go to state 255
    "uint8"                           shift, and go to state 256
    "int16"                           shift, and go to state 257
    "uint16"                          shift, and go to state 258
    "tuple"                           shift, and go to state 433
    "variant"                         shift, and go to state 434
    "generator"                       shift, and go to state 435
    "++"                              shift, and go to state 436
    "--"                              shift, and go to state 437
    "::"                              shift, and go to state 55
    "$$"                              shift, and go to state 438
    "$i"                              shift, and go to state 439
    "$v"                              shift, and go to state 440
    "$b"                              shift, and go to state 441
    "$a"                              shift, and go to state 442
    "$c"                              shift, and go to state 443
    "..."                             shift, and go to state 444
    "integer constant"                shift, and go to state 445
    "long integer constant"           shift, and go to state 446
    "unsigned integer constant"       shift, and go to state 447
    "unsigned long integer constant"  shift, and go to state 448
    "unsigned int8 constant"          shift, and go to state 449
    "floating point constant"         shift, and go to state 450
    "double constant"                 shift, and go to state 451
    "name"                            shift, and go to state 56
    "start of the string"             shift, and go to state 452
    '-'                               shift, and go to state 453
    '+'                               shift, and go to state 454
    '*'                               shift, and go to state 455
    '%'                               shift, and go to state 13
    '~'                               shift, and go to state 456
    '!'                               shift, and go to state 457
    '['                               shift, and go to state 458
    '('                               shift, and go to state 459
    '$'                               shift, and go to state 460
    '@'                               shift, and go to state 461
    '{'                               shift, and go to state 462

    string_builder          go to state 463
    expr_reader             go to state 464
    expr_call_pipe          go to state 465
    name_in_namespace       go to state 466
    expr_new                go to state 467
    expr_cast               go to state 468
    expr_type_decl          go to state 469
    expr_type_info          go to state 470
    block_or_lambda         go to state 471
    expr_full_block         go to state 472
    expr_numeric_const      go to state 473
    expr_named_call         go to state 474
    expr_method_call        go to state 475
    func_addr_expr          go to state 476
    expr_field              go to state 477
    expr_call               go to state 478
    expr                    go to state 1191
    expr_generator          go to state 480
    expr_mtag               go to state 481
    basic_type_declaration  go to state 482
    make_decl               go to state 483
    make_struct_decl        go to state 484
    make_tuple_call         go to state 485
    make_dim_decl           go to state 486
    make_table_decl         go to state 487
    array_comprehension     go to state 488


State 1034

  369 expr_field: expr '.' "name" '(' . ')'
  370           | expr '.' "name" '(' . expr_list ')'

    "struct"                          shift, and go to state 414
    "class"                           shift, and go to state 415
    "true"                            shift, and go to state 416
    "false"                           shift, and go to state 417
    "new"                             shift, and go to state 418
    "typeinfo"                        shift, and go to state 419
    "type"                            shift, and go to state 420
    "array"                           shift, and go to state 421
    "null"                            shift, and go to state 422
    "table"                           shift, and go to state 423
    "deref"                           shift, and go to state 424
    "cast"                            shift, and go to state 425
    "upcast"                          shift, and go to state 426
    "addr"                            shift, and go to state 427
    "reinterpret"                     shift, and go to state 428
    "unsafe"                          shift, and go to state 429
    "fixed_array"                     shift, and go to state 430
    "default"                         shift, and go to state 431
    "bool"                            shift, and go to state 228
    "void"                            shift, and go to state 229
    "string"                          shift, and go to state 230
    "int"                             shift, and go to state 232
    "int2"                            shift, and go to state 233
    "int3"                            shift, and go to state 234
    "int4"                            shift, and go to state 235
    "uint"                            shift, and go to state 236
    "bitfield"                        shift, and go to state 432
    "uint2"                           shift, and go to state 238
    "uint3"                           shift, and go to state 239
    "uint4"                           shift, and go to state 240
    "float"                           shift, and go to state 241
    "float2"                          shift, and go to state 242
    "float3"                          shift, and go to state 243
    "float4"                          shift, and go to state 244
    "range"                           shift, and go to state 245
    "urange"                          shift, and go to state 246
    "range64"                         shift, and go to state 247
    "urange64"                        shift, and go to state 248
    "int64"                           shift, and go to state 250
    "uint64"                          shift, and go to state 251
    "double"                          shift, and go to state 252
    "int8"                            shift, and go to state 255
    "uint8"                           shift, and go to state 256
    "int16"                           shift, and go to state 257
    "uint16"                          shift, and go to state 258
    "tuple"                           shift, and go to state 433
    "variant"                         shift, and go to state 434
    "generator"                       shift, and go to state 435
    "++"                              shift, and go to state 436
    "--"                              shift, and go to state 437
    "::"                              shift, and go to state 55
    "$$"                              shift, and go to state 438
    "$i"                              shift, and go to state 439
    "$v"                              shift, and go to state 440
    "$b"                              shift, and go to state 441
    "$a"                              shift, and go to state 442
    "$c"                              shift, and go to state 443
    "..."                             shift, and go to state 444
    "integer constant"                shift, and go to state 445
    "long integer constant"           shift, and go to state 446
    "unsigned integer constant"       shift, and go to state 447
    "unsigned long integer constant"  shift, and go to state 448
    "unsigned int8 constant"          shift, and go to state 449
    "floating point constant"         shift, and go to state 450
    "double constant"                 shift, and go to state 451
    "name"                            shift, and go to state 56
    "start of the string"             shift, and go to state 452
    '-'                               shift, and go to state 453
    '+'                               shift, and go to state 454
    '*'                               shift, and go to state 455
    '%'                               shift, and go to state 13
    '~'                               shift, and go to state 456
    '!'                               shift, and go to state 457
    '['                               shift, and go to state 458
    '('                               shift, and go to state 459
    ')'                               shift, and go to state 1192
    '$'                               shift, and go to state 460
    '@'                               shift, and go to state 461
    '{'                               shift, and go to state 462

    string_builder          go to state 463
    expr_reader             go to state 464
    expr_call_pipe          go to state 465
    name_in_namespace       go to state 466
    expr_new                go to state 467
    expr_cast               go to state 468
    expr_type_decl          go to state 469
    expr_type_info          go to state 470
    expr_list               go to state 1193
    block_or_lambda         go to state 471
    expr_full_block         go to state 472
    expr_numeric_const      go to state 473
    expr_named_call         go to state 474
    expr_method_call        go to state 475
    func_addr_expr          go to state 476
    expr_field              go to state 477
    expr_call               go to state 478
    expr                    go to state 590
    expr_generator          go to state 480
    expr_mtag               go to state 481
    basic_type_declaration  go to state 482
    make_decl               go to state 483
    make_struct_decl        go to state 484
    make_tuple_call         go to state 485
    make_dim_decl           go to state 486
    make_table_decl         go to state 487
    array_comprehension     go to state 488


State 1035

  478 expr_mtag: expr '.' '.' "$f" . '(' expr ')'

    '('  shift, and go to state 1194


State 1036

  368 expr_field: expr '.' '.' "name" .

    $default  reduce using rule 368 (expr_field)


State 1037

  356 expr_method_call: expr . "->" "name" '(' ')'
  357                 | expr . "->" "name" '(' expr_list ')'
  367 expr_field: expr . '.' "name"
  368           | expr . '.' '.' "name"
  369           | expr . '.' "name" '(' ')'
  370           | expr . '.' "name" '(' expr_list ')'
  371           | expr . '.' basic_type_declaration '(' ')'
  372           | expr . '.' basic_type_declaration '(' expr_list ')'
  375           | expr . '.' $@25 error $@26
  397 expr: expr . "<<" expr
  398     | expr . ">>" expr
  399     | expr . "<<<" expr
  400     | expr . ">>>" expr
  401     | expr . '+' expr
  402     | expr . '-' expr
  403     | expr . '*' expr
  404     | expr . '/' expr
  405     | expr . '%' expr
  406     | expr . '<' expr
  407     | expr . '>' expr
  408     | expr . "==" expr
  409     | expr . "!=" expr
  410     | expr . "<=" expr
  411     | expr . ">=" expr
  412     | expr . '&' expr
  413     | expr . '|' expr
  414     | expr . '^' expr
  415     | expr . "&&" expr
  416     | expr . "||" expr
  417     | expr . "^^" expr
  418     | expr . ".." expr
  421     | expr . "++"
  422     | expr . "--"
  424     | expr . '[' expr ']'
  425     | expr . '.' '[' expr ']'
  425     | expr '.' '[' expr . ']'
  426     | expr . "?[" expr ']'
  427     | expr . '.' "?[" expr ']'
  428     | expr . "?." "name"
  429     | expr . '.' "?." "name"
  436     | expr . "??" expr
  437     | expr . '?' expr ':' expr
  440     | expr . "is" "type" '<' $@27 type_declaration_no_options '>' $@28
  441     | expr . "is" basic_type_declaration
  442     | expr . "is" "name"
  443     | expr . "as" "name"
  446     | expr . "as" "type" '<' $@29 type_declaration '>' $@30
  447     | expr . "as" basic_type_declaration
  448     | expr . '?' "as" "name"
  451     | expr . '?' "as" "type" '<' $@31 type_declaration '>' $@32
  452     | expr . '?' "as" basic_type_declaration
  460     | expr . "<|" expr
  461     | expr . "|>" expr
  462     | expr . "|>" basic_type_declaration
  476 expr_mtag: expr . '.' "$f" '(' expr ')'
  477          | expr . "?." "$f" '(' expr ')'
  478          | expr . '.' '.' "$f" '(' expr ')'
  479          | expr . '.' "?." "$f" '(' expr ')'
  480          | expr . "as" "$f" '(' expr ')'
  481          | expr . '?' "as" "$f" '(' expr ')'
  482          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 603
    "as"   shift, and go to state 604
    "<<"   shift, and go to state 605
    ">>"   shift, and go to state 606
    "++"   shift, and go to state 607
    "--"   shift, and go to state 608
    "<="   shift, and go to state 609
    ">="   shift, and go to state 610
    "=="   shift, and go to state 611
    "!="   shift, and go to state 612
    "->"   shift, and go to state 613
    "??"   shift, and go to state 614
    "?."   shift, and go to state 615
    "?["   shift, and go to state 616
    "<|"   shift, and go to state 617
    "|>"   shift, and go to state 618
    "<<<"  shift, and go to state 619
    ">>>"  shift, and go to state 620
    "&&"   shift, and go to state 621
    "||"   shift, and go to state 622
    "^^"   shift, and go to state 623
    ".."   shift, and go to state 624
    '?'    shift, and go to state 625
    '|'    shift, and go to state 626
    '^'    shift, and go to state 627
    '&'    shift, and go to state 628
    '<'    shift, and go to state 629
    '>'    shift, and go to state 630
    '-'    shift, and go to state 631
    '+'    shift, and go to state 632
    '*'    shift, and go to state 633
    '/'    shift, and go to state 634
    '%'    shift, and go to state 635
    '.'    shift, and go to state 636
    '['    shift, and go to state 637
    ']'    shift, and go to state 1195


State 1038

  375 expr_field: expr '.' $@25 error . $@26

    $default  reduce using rule 374 ($@26)

    $@26  go to state 1196


State 1039

  371 expr_field: expr '.' basic_type_declaration '(' . ')'
  372           | expr '.' basic_type_declaration '(' . expr_list ')'

    "struct"                          shift, and go to state 414
    "class"                           shift, and go to state 415
    "true"                            shift, and go to state 416
    "false"                           shift, and go to state 417
    "new"                             shift, and go to state 418
    "typeinfo"                        shift, and go to state 419
    "type"                            shift, and go to state 420
    "array"                           shift, and go to state 421
    "null"                            shift, and go to state 422
    "table"                           shift, and go to state 423
    "deref"                           shift, and go to state 424
    "cast"                            shift, and go to state 425
    "upcast"                          shift, and go to state 426
    "addr"                            shift, and go to state 427
    "reinterpret"                     shift, and go to state 428
    "unsafe"                          shift, and go to state 429
    "fixed_array"                     shift, and go to state 430
    "default"                         shift, and go to state 431
    "bool"                            shift, and go to state 228
    "void"                            shift, and go to state 229
    "string"                          shift, and go to state 230
    "int"                             shift, and go to state 232
    "int2"                            shift, and go to state 233
    "int3"                            shift, and go to state 234
    "int4"                            shift, and go to state 235
    "uint"                            shift, and go to state 236
    "bitfield"                        shift, and go to state 432
    "uint2"                           shift, and go to state 238
    "uint3"                           shift, and go to state 239
    "uint4"                           shift, and go to state 240
    "float"                           shift, and go to state 241
    "float2"                          shift, and go to state 242
    "float3"                          shift, and go to state 243
    "float4"                          shift, and go to state 244
    "range"                           shift, and go to state 245
    "urange"                          shift, and go to state 246
    "range64"                         shift, and go to state 247
    "urange64"                        shift, and go to state 248
    "int64"                           shift, and go to state 250
    "uint64"                          shift, and go to state 251
    "double"                          shift, and go to state 252
    "int8"                            shift, and go to state 255
    "uint8"                           shift, and go to state 256
    "int16"                           shift, and go to state 257
    "uint16"                          shift, and go to state 258
    "tuple"                           shift, and go to state 433
    "variant"                         shift, and go to state 434
    "generator"                       shift, and go to state 435
    "++"                              shift, and go to state 436
    "--"                              shift, and go to state 437
    "::"                              shift, and go to state 55
    "$$"                              shift, and go to state 438
    "$i"                              shift, and go to state 439
    "$v"                              shift, and go to state 440
    "$b"                              shift, and go to state 441
    "$a"                              shift, and go to state 442
    "$c"                              shift, and go to state 443
    "..."                             shift, and go to state 444
    "integer constant"                shift, and go to state 445
    "long integer constant"           shift, and go to state 446
    "unsigned integer constant"       shift, and go to state 447
    "unsigned long integer constant"  shift, and go to state 448
    "unsigned int8 constant"          shift, and go to state 449
    "floating point constant"         shift, and go to state 450
    "double constant"                 shift, and go to state 451
    "name"                            shift, and go to state 56
    "start of the string"             shift, and go to state 452
    '-'                               shift, and go to state 453
    '+'                               shift, and go to state 454
    '*'                               shift, and go to state 455
    '%'                               shift, and go to state 13
    '~'                               shift, and go to state 456
    '!'                               shift, and go to state 457
    '['                               shift, and go to state 458
    '('                               shift, and go to state 459
    ')'                               shift, and go to state 1197
    '$'                               shift, and go to state 460
    '@'                               shift, and go to state 461
    '{'                               shift, and go to state 462

    string_builder          go to state 463
    expr_reader             go to state 464
    expr_call_pipe          go to state 465
    name_in_namespace       go to state 466
    expr_new                go to state 467
    expr_cast               go to state 468
    expr_type_decl          go to state 469
    expr_type_info          go to state 470
    expr_list               go to state 1198
    block_or_lambda         go to state 471
    expr_full_block         go to state 472
    expr_numeric_const      go to state 473
    expr_named_call         go to state 474
    expr_method_call        go to state 475
    func_addr_expr          go to state 476
    expr_field              go to state 477
    expr_call               go to state 478
    expr                    go to state 590
    expr_generator          go to state 480
    expr_mtag               go to state 481
    basic_type_declaration  go to state 482
    make_decl               go to state 483
    make_struct_decl        go to state 484
    make_tuple_call         go to state 485
    make_dim_decl           go to state 486
    make_table_decl         go to state 487
    array_comprehension     go to state 488


State 1040

  424 expr: expr '[' expr ']' .

    $default  reduce using rule 424 (expr)


State 1041

  309 expr_list: expr_list ',' . expr

    "struct"                          shift, and go to state 414
    "class"                           shift, and go to state 415
    "true"                            shift, and go to state 416
    "false"                           shift, and go to state 417
    "new"                             shift, and go to state 418
    "typeinfo"                        shift, and go to state 419
    "type"                            shift, and go to state 420
    "array"                           shift, and go to state 421
    "null"                            shift, and go to state 422
    "table"                           shift, and go to state 423
    "deref"                           shift, and go to state 424
    "cast"                            shift, and go to state 425
    "upcast"                          shift, and go to state 426
    "addr"                            shift, and go to state 427
    "reinterpret"                     shift, and go to state 428
    "unsafe"                          shift, and go to state 429
    "fixed_array"                     shift, and go to state 430
    "default"                         shift, and go to state 431
    "bool"                            shift, and go to state 228
    "void"                            shift, and go to state 229
    "string"                          shift, and go to state 230
    "int"                             shift, and go to state 232
    "int2"                            shift, and go to state 233
    "int3"                            shift, and go to state 234
    "int4"                            shift, and go to state 235
    "uint"                            shift, and go to state 236
    "bitfield"                        shift, and go to state 432
    "uint2"                           shift, and go to state 238
    "uint3"                           shift, and go to state 239
    "uint4"                           shift, and go to state 240
    "float"                           shift, and go to state 241
    "float2"                          shift, and go to state 242
    "float3"                          shift, and go to state 243
    "float4"                          shift, and go to state 244
    "range"                           shift, and go to state 245
    "urange"                          shift, and go to state 246
    "range64"                         shift, and go to state 247
    "urange64"                        shift, and go to state 248
    "int64"                           shift, and go to state 250
    "uint64"                          shift, and go to state 251
    "double"                          shift, and go to state 252
    "int8"                            shift, and go to state 255
    "uint8"                           shift, and go to state 256
    "int16"                           shift, and go to state 257
    "uint16"                          shift, and go to state 258
    "tuple"                           shift, and go to state 433
    "variant"                         shift, and go to state 434
    "generator"                       shift, and go to state 435
    "++"                              shift, and go to state 436
    "--"                              shift, and go to state 437
    "::"                              shift, and go to state 55
    "$$"                              shift, and go to state 438
    "$i"                              shift, and go to state 439
    "$v"                              shift, and go to state 440
    "$b"                              shift, and go to state 441
    "$a"                              shift, and go to state 442
    "$c"                              shift, and go to state 443
    "..."                             shift, and go to state 444
    "integer constant"                shift, and go to state 445
    "long integer constant"           shift, and go to state 446
    "unsigned integer constant"       shift, and go to state 447
    "unsigned long integer constant"  shift, and go to state 448
    "unsigned int8 constant"          shift, and go to state 449
    "floating point constant"         shift, and go to state 450
    "double constant"                 shift, and go to state 451
    "name"                            shift, and go to state 56
    "start of the string"             shift, and go to state 452
    '-'                               shift, and go to state 453
    '+'                               shift, and go to state 454
    '*'                               shift, and go to state 455
    '%'                               shift, and go to state 13
    '~'                               shift, and go to state 456
    '!'                               shift, and go to state 457
    '['                               shift, and go to state 458
    '('                               shift, and go to state 459
    '$'                               shift, and go to state 460
    '@'                               shift, and go to state 461
    '{'                               shift, and go to state 462

    string_builder          go to state 463
    expr_reader             go to state 464
    expr_call_pipe          go to state 465
    name_in_namespace       go to state 466
    expr_new                go to state 467
    expr_cast               go to state 468
    expr_type_decl          go to state 469
    expr_type_info          go to state 470
    block_or_lambda         go to state 471
    expr_full_block         go to state 472
    expr_numeric_const      go to state 473
    expr_named_call         go to state 474
    expr_method_call        go to state 475
    func_addr_expr          go to state 476
    expr_field              go to state 477
    expr_call               go to state 478
    expr                    go to state 992
    expr_generator          go to state 480
    expr_mtag               go to state 481
    basic_type_declaration  go to state 482
    make_decl               go to state 483
    make_struct_decl        go to state 484
    make_tuple_call         go to state 485
    make_dim_decl           go to state 486
    make_table_decl         go to state 487
    array_comprehension     go to state 488


State 1042

  382 expr_call: basic_type_declaration '(' expr_list ')' .

    $default  reduce using rule 382 (expr_call)


State 1043

  698 type_declaration_no_options_no_dim: "iterator" '<' $@55 type_declaration '>' $@56 .

    $default  reduce using rule 698 (type_declaration_no_options_no_dim)


State 1044

  688 type_declaration_no_options_no_dim: "smart_ptr" '<' $@49 type_declaration '>' $@50 .

    $default  reduce using rule 688 (type_declaration_no_options_no_dim)


State 1045

  652 bitfield_type_declaration: "bitfield" '<' $@44 bitfield_bits '>' $@45 .

    $default  reduce using rule 652 (bitfield_type_declaration)


State 1046

  646 bitfield_bits: bitfield_bits ';' "name" .

    $default  reduce using rule 646 (bitfield_bits)


State 1047

  702 type_declaration_no_options_no_dim: "block" '<' $@57 type_declaration '>' $@58 .

    $default  reduce using rule 702 (type_declaration_no_options_no_dim)


State 1048

  705 type_declaration_no_options_no_dim: "block" '<' $@59 optional_function_argument_list optional_function_type '>' . $@60

    $default  reduce using rule 704 ($@60)

    $@60  go to state 1199


State 1049

  709 type_declaration_no_options_no_dim: "function" '<' $@61 type_declaration '>' $@62 .

    $default  reduce using rule 709 (type_declaration_no_options_no_dim)


State 1050

  712 type_declaration_no_options_no_dim: "function" '<' $@63 optional_function_argument_list optional_function_type '>' . $@64

    $default  reduce using rule 711 ($@64)

    $@64  go to state 1200


State 1051

  716 type_declaration_no_options_no_dim: "lambda" '<' $@65 type_declaration '>' $@66 .

    $default  reduce using rule 716 (type_declaration_no_options_no_dim)


State 1052

  719 type_declaration_no_options_no_dim: "lambda" '<' $@67 optional_function_argument_list optional_function_type '>' . $@68

    $default  reduce using rule 718 ($@68)

    $@68  go to state 1201


State 1053

  509 tuple_type: "name" ':' type_declaration .
  727 type_declaration: type_declaration . '|' type_declaration_no_options
  728                 | type_declaration . '|' '#'

    '|'  shift, and go to state 372

    $default  reduce using rule 509 (tuple_type)


State 1054

  722 type_declaration_no_options_no_dim: "tuple" '<' $@69 tuple_type_list '>' $@70 .

    $default  reduce using rule 722 (type_declaration_no_options_no_dim)


State 1055

  511 tuple_type_list: tuple_type_list c_or_s tuple_type .

    $default  reduce using rule 511 (tuple_type_list)


State 1056

  515 variant_type: "name" ':' type_declaration .
  727 type_declaration: type_declaration . '|' type_declaration_no_options
  728                 | type_declaration . '|' '#'

    '|'  shift, and go to state 372

    $default  reduce using rule 515 (variant_type)


State 1057

  725 type_declaration_no_options_no_dim: "variant" '<' $@71 variant_type_list '>' $@72 .

    $default  reduce using rule 725 (type_declaration_no_options_no_dim)


State 1058

  517 variant_type_list: variant_type_list c_or_s variant_type .

    $default  reduce using rule 517 (variant_type_list)


State 1059

  673 type_declaration_no_options_no_dim: '$' name_in_namespace '<' $@48 type_declaration_no_options_list '>' . '(' optional_expr_list ')'

    '('  shift, and go to state 1202


State 1060

  255 type_declaration_no_options_list: type_declaration_no_options_list c_or_s . type_declaration

    "type"       shift, and go to state 222
    "array"      shift, and go to state 223
    "table"      shift, and go to state 224
    "typedecl"   shift, and go to state 225
    "iterator"   shift, and go to state 226
    "smart_ptr"  shift, and go to state 227
    "bool"       shift, and go to state 228
    "void"       shift, and go to state 229
    "string"     shift, and go to state 230
    "auto"       shift, and go to state 231
    "int"        shift, and go to state 232
    "int2"       shift, and go to state 233
    "int3"       shift, and go to state 234
    "int4"       shift, and go to state 235
    "uint"       shift, and go to state 236
    "bitfield"   shift, and go to state 237
    "uint2"      shift, and go to state 238
    "uint3"      shift, and go to state 239
    "uint4"      shift, and go to state 240
    "float"      shift, and go to state 241
    "float2"     shift, and go to state 242
    "float3"     shift, and go to state 243
    "float4"     shift, and go to state 244
    "range"      shift, and go to state 245
    "urange"     shift, and go to state 246
    "range64"    shift, and go to state 247
    "urange64"   shift, and go to state 248
    "block"      shift, and go to state 249
    "int64"      shift, and go to state 250
    "uint64"     shift, and go to state 251
    "double"     shift, and go to state 252
    "function"   shift, and go to state 253
    "lambda"     shift, and go to state 254
    "int8"       shift, and go to state 255
    "uint8"      shift, and go to state 256
    "int16"      shift, and go to state 257
    "uint16"     shift, and go to state 258
    "tuple"      shift, and go to state 259
    "variant"    shift, and go to state 260
    "::"         shift, and go to state 55
    "$t"         shift, and go to state 261
    "name"       shift, and go to state 56
    '$'          shift, and go to state 262

    name_in_namespace                   go to state 263
    basic_type_declaration              go to state 264
    structure_type_declaration          go to state 265
    auto_type_declaration               go to state 266
    bitfield_type_declaration           go to state 267
    type_declaration_no_options         go to state 268
    type_declaration_no_options_no_dim  go to state 269
    type_declaration                    go to state 1203


State 1061

  649 bitfield_alias_bits: bitfield_alias_bits commas "name" .

    $default  reduce using rule 649 (bitfield_alias_bits)


State 1062

  743 bitfield_alias_declaration: "bitfield" $@81 optional_public_or_private_alias "name" optional_commas $@82 '{' $@83 bitfield_alias_bits optional_commas $@84 . '}'

    '}'  shift, and go to state 1204


State 1063

  514 tuple_alias_type_list: tuple_alias_type_list semis tuple_type .

    $default  reduce using rule 514 (tuple_alias_type_list)


State 1064

  733 tuple_alias_declaration: "tuple" $@73 optional_public_or_private_alias "name" optional_semis $@74 '{' $@75 tuple_alias_type_list optional_semis $@76 . '}'

    '}'  shift, and go to state 1205


State 1065

  520 variant_alias_type_list: variant_alias_type_list semis variant_type .

    $default  reduce using rule 520 (variant_alias_type_list)


State 1066

  738 variant_alias_declaration: "variant" $@77 optional_public_or_private_alias "name" optional_semis $@78 '{' $@79 variant_alias_type_list optional_semis $@80 . '}'

    '}'  shift, and go to state 1206


State 1067

  356 expr_method_call: expr . "->" "name" '(' ')'
  357                 | expr . "->" "name" '(' expr_list ')'
  367 expr_field: expr . '.' "name"
  368           | expr . '.' '.' "name"
  369           | expr . '.' "name" '(' ')'
  370           | expr . '.' "name" '(' expr_list ')'
  371           | expr . '.' basic_type_declaration '(' ')'
  372           | expr . '.' basic_type_declaration '(' expr_list ')'
  375           | expr . '.' $@25 error $@26
  397 expr: expr . "<<" expr
  398     | expr . ">>" expr
  399     | expr . "<<<" expr
  400     | expr . ">>>" expr
  401     | expr . '+' expr
  402     | expr . '-' expr
  403     | expr . '*' expr
  404     | expr . '/' expr
  405     | expr . '%' expr
  406     | expr . '<' expr
  407     | expr . '>' expr
  408     | expr . "==" expr
  409     | expr . "!=" expr
  410     | expr . "<=" expr
  411     | expr . ">=" expr
  412     | expr . '&' expr
  413     | expr . '|' expr
  414     | expr . '^' expr
  415     | expr . "&&" expr
  416     | expr . "||" expr
  417     | expr . "^^" expr
  418     | expr . ".." expr
  421     | expr . "++"
  422     | expr . "--"
  424     | expr . '[' expr ']'
  425     | expr . '.' '[' expr ']'
  426     | expr . "?[" expr ']'
  427     | expr . '.' "?[" expr ']'
  428     | expr . "?." "name"
  429     | expr . '.' "?." "name"
  436     | expr . "??" expr
  437     | expr . '?' expr ':' expr
  440     | expr . "is" "type" '<' $@27 type_declaration_no_options '>' $@28
  441     | expr . "is" basic_type_declaration
  442     | expr . "is" "name"
  443     | expr . "as" "name"
  446     | expr . "as" "type" '<' $@29 type_declaration '>' $@30
  447     | expr . "as" basic_type_declaration
  448     | expr . '?' "as" "name"
  451     | expr . '?' "as" "type" '<' $@31 type_declaration '>' $@32
  452     | expr . '?' "as" basic_type_declaration
  460     | expr . "<|" expr
  461     | expr . "|>" expr
  462     | expr . "|>" basic_type_declaration
  476 expr_mtag: expr . '.' "$f" '(' expr ')'
  477          | expr . "?." "$f" '(' expr ')'
  478          | expr . '.' '.' "$f" '(' expr ')'
  479          | expr . '.' "?." "$f" '(' expr ')'
  480          | expr . "as" "$f" '(' expr ')'
  481          | expr . '?' "as" "$f" '(' expr ')'
  482          | expr . "is" "$f" '(' expr ')'
  602 variable_name_with_pos_list: "$i" '(' expr . ')'

    "is"   shift, and go to state 603
    "as"   shift, and go to state 604
    "<<"   shift, and go to state 605
    ">>"   shift, and go to state 606
    "++"   shift, and go to state 607
    "--"   shift, and go to state 608
    "<="   shift, and go to state 609
    ">="   shift, and go to state 610
    "=="   shift, and go to state 611
    "!="   shift, and go to state 612
    "->"   shift, and go to state 613
    "??"   shift, and go to state 614
    "?."   shift, and go to state 615
    "?["   shift, and go to state 616
    "<|"   shift, and go to state 617
    "|>"   shift, and go to state 618
    "<<<"  shift, and go to state 619
    ">>>"  shift, and go to state 620
    "&&"   shift, and go to state 621
    "||"   shift, and go to state 622
    "^^"   shift, and go to state 623
    ".."   shift, and go to state 624
    '?'    shift, and go to state 625
    '|'    shift, and go to state 626
    '^'    shift, and go to state 627
    '&'    shift, and go to state 628
    '<'    shift, and go to state 629
    '>'    shift, and go to state 630
    '-'    shift, and go to state 631
    '+'    shift, and go to state 632
    '*'    shift, and go to state 633
    '/'    shift, and go to state 634
    '%'    shift, and go to state 635
    '.'    shift, and go to state 636
    '['    shift, and go to state 637
    ')'    shift, and go to state 1207


State 1068

  603 variable_name_with_pos_list: "name" "aka" "name" .

    $default  reduce using rule 603 (variable_name_with_pos_list)


State 1069

  604 variable_name_with_pos_list: variable_name_with_pos_list ',' "name" .
  605                            | variable_name_with_pos_list ',' "name" . "aka" "name"

    "aka"  shift, and go to state 1208

    $default  reduce using rule 604 (variable_name_with_pos_list)


State 1070

  525 variable_declaration: variable_name_with_pos_list ':' type_declaration .
  526                     | variable_name_with_pos_list ':' type_declaration . copy_or_move expr
  727 type_declaration: type_declaration . '|' type_declaration_no_options
  728                 | type_declaration . '|' '#'

    "<-"  shift, and go to state 879
    '='   shift, and go to state 881
    '|'   shift, and go to state 372

    $default  reduce using rule 525 (variable_declaration)

    copy_or_move  go to state 1209


State 1071

  356 expr_method_call: expr . "->" "name" '(' ')'
  357                 | expr . "->" "name" '(' expr_list ')'
  367 expr_field: expr . '.' "name"
  368           | expr . '.' '.' "name"
  369           | expr . '.' "name" '(' ')'
  370           | expr . '.' "name" '(' expr_list ')'
  371           | expr . '.' basic_type_declaration '(' ')'
  372           | expr . '.' basic_type_declaration '(' expr_list ')'
  375           | expr . '.' $@25 error $@26
  397 expr: expr . "<<" expr
  398     | expr . ">>" expr
  399     | expr . "<<<" expr
  400     | expr . ">>>" expr
  401     | expr . '+' expr
  402     | expr . '-' expr
  403     | expr . '*' expr
  404     | expr . '/' expr
  405     | expr . '%' expr
  406     | expr . '<' expr
  407     | expr . '>' expr
  408     | expr . "==" expr
  409     | expr . "!=" expr
  410     | expr . "<=" expr
  411     | expr . ">=" expr
  412     | expr . '&' expr
  413     | expr . '|' expr
  414     | expr . '^' expr
  415     | expr . "&&" expr
  416     | expr . "||" expr
  417     | expr . "^^" expr
  418     | expr . ".." expr
  421     | expr . "++"
  422     | expr . "--"
  424     | expr . '[' expr ']'
  425     | expr . '.' '[' expr ']'
  426     | expr . "?[" expr ']'
  427     | expr . '.' "?[" expr ']'
  428     | expr . "?." "name"
  429     | expr . '.' "?." "name"
  436     | expr . "??" expr
  437     | expr . '?' expr ':' expr
  440     | expr . "is" "type" '<' $@27 type_declaration_no_options '>' $@28
  441     | expr . "is" basic_type_declaration
  442     | expr . "is" "name"
  443     | expr . "as" "name"
  446     | expr . "as" "type" '<' $@29 type_declaration '>' $@30
  447     | expr . "as" basic_type_declaration
  448     | expr . '?' "as" "name"
  451     | expr . '?' "as" "type" '<' $@31 type_declaration '>' $@32
  452     | expr . '?' "as" basic_type_declaration
  460     | expr . "<|" expr
  461     | expr . "|>" expr
  462     | expr . "|>" basic_type_declaration
  476 expr_mtag: expr . '.' "$f" '(' expr ')'
  477          | expr . "?." "$f" '(' expr ')'
  478          | expr . '.' '.' "$f" '(' expr ')'
  479          | expr . '.' "?." "$f" '(' expr ')'
  480          | expr . "as" "$f" '(' expr ')'
  481          | expr . '?' "as" "$f" '(' expr ')'
  482          | expr . "is" "$f" '(' expr ')'
  527 variable_declaration: variable_name_with_pos_list copy_or_move expr .

    "is"   shift, and go to state 603
    "as"   shift, and go to state 604
    "<<"   shift, and go to state 605
    ">>"   shift, and go to state 606
    "++"   shift, and go to state 607
    "--"   shift, and go to state 608
    "<="   shift, and go to state 609
    ">="   shift, and go to state 610
    "=="   shift, and go to state 611
    "!="   shift, and go to state 612
    "->"   shift, and go to state 613
    "??"   shift, and go to state 614
    "?."   shift, and go to state 615
    "?["   shift, and go to state 616
    "<|"   shift, and go to state 617
    "|>"   shift, and go to state 618
    "<<<"  shift, and go to state 619
    ">>>"  shift, and go to state 620
    "&&"   shift, and go to state 621
    "||"   shift, and go to state 622
    "^^"   shift, and go to state 623
    ".."   shift, and go to state 624
    '?'    shift, and go to state 625
    '|'    shift, and go to state 626
    '^'    shift, and go to state 627
    '&'    shift, and go to state 628
    '<'    shift, and go to state 629
    '>'    shift, and go to state 630
    '-'    shift, and go to state 631
    '+'    shift, and go to state 632
    '*'    shift, and go to state 633
    '/'    shift, and go to state 634
    '%'    shift, and go to state 635
    '.'    shift, and go to state 636
    '['    shift, and go to state 637

    $default  reduce using rule 527 (variable_declaration)


State 1072

  275 expression_return: "return" "<-" expr .
  356 expr_method_call: expr . "->" "name" '(' ')'
  357                 | expr . "->" "name" '(' expr_list ')'
  367 expr_field: expr . '.' "name"
  368           | expr . '.' '.' "name"
  369           | expr . '.' "name" '(' ')'
  370           | expr . '.' "name" '(' expr_list ')'
  371           | expr . '.' basic_type_declaration '(' ')'
  372           | expr . '.' basic_type_declaration '(' expr_list ')'
  375           | expr . '.' $@25 error $@26
  397 expr: expr . "<<" expr
  398     | expr . ">>" expr
  399     | expr . "<<<" expr
  400     | expr . ">>>" expr
  401     | expr . '+' expr
  402     | expr . '-' expr
  403     | expr . '*' expr
  404     | expr . '/' expr
  405     | expr . '%' expr
  406     | expr . '<' expr
  407     | expr . '>' expr
  408     | expr . "==" expr
  409     | expr . "!=" expr
  410     | expr . "<=" expr
  411     | expr . ">=" expr
  412     | expr . '&' expr
  413     | expr . '|' expr
  414     | expr . '^' expr
  415     | expr . "&&" expr
  416     | expr . "||" expr
  417     | expr . "^^" expr
  418     | expr . ".." expr
  421     | expr . "++"
  422     | expr . "--"
  424     | expr . '[' expr ']'
  425     | expr . '.' '[' expr ']'
  426     | expr . "?[" expr ']'
  427     | expr . '.' "?[" expr ']'
  428     | expr . "?." "name"
  429     | expr . '.' "?." "name"
  436     | expr . "??" expr
  437     | expr . '?' expr ':' expr
  440     | expr . "is" "type" '<' $@27 type_declaration_no_options '>' $@28
  441     | expr . "is" basic_type_declaration
  442     | expr . "is" "name"
  443     | expr . "as" "name"
  446     | expr . "as" "type" '<' $@29 type_declaration '>' $@30
  447     | expr . "as" basic_type_declaration
  448     | expr . '?' "as" "name"
  451     | expr . '?' "as" "type" '<' $@31 type_declaration '>' $@32
  452     | expr . '?' "as" basic_type_declaration
  460     | expr . "<|" expr
  461     | expr . "|>" expr
  462     | expr . "|>" basic_type_declaration
  476 expr_mtag: expr . '.' "$f" '(' expr ')'
  477          | expr . "?." "$f" '(' expr ')'
  478          | expr . '.' '.' "$f" '(' expr ')'
  479          | expr . '.' "?." "$f" '(' expr ')'
  480          | expr . "as" "$f" '(' expr ')'
  481          | expr . '?' "as" "$f" '(' expr ')'
  482          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 603
    "as"   shift, and go to state 604
    "<<"   shift, and go to state 605
    ">>"   shift, and go to state 606
    "++"   shift, and go to state 607
    "--"   shift, and go to state 608
    "<="   shift, and go to state 609
    ">="   shift, and go to state 610
    "=="   shift, and go to state 611
    "!="   shift, and go to state 612
    "->"   shift, and go to state 613
    "??"   shift, and go to state 614
    "?."   shift, and go to state 615
    "?["   shift, and go to state 616
    "<|"   shift, and go to state 617
    "|>"   shift, and go to state 618
    "<<<"  shift, and go to state 619
    ">>>"  shift, and go to state 620
    "&&"   shift, and go to state 621
    "||"   shift, and go to state 622
    "^^"   shift, and go to state 623
    ".."   shift, and go to state 624
    '?'    shift, and go to state 625
    '|'    shift, and go to state 626
    '^'    shift, and go to state 627
    '&'    shift, and go to state 628
    '<'    shift, and go to state 629
    '>'    shift, and go to state 630
    '-'    shift, and go to state 631
    '+'    shift, and go to state 632
    '*'    shift, and go to state 633
    '/'    shift, and go to state 634
    '%'    shift, and go to state 635
    '.'    shift, and go to state 636
    '['    shift, and go to state 637

    $default  reduce using rule 275 (expression_return)


State 1073

  278 expression_try_catch: "try" expression_block "recover" . expression_block

    $default  reduce using rule 224 ($@9)

    expression_block  go to state 1210
    $@9               go to state 332


State 1074

  260 expression_delete: "delete" "explicit" expr .
  356 expr_method_call: expr . "->" "name" '(' ')'
  357                 | expr . "->" "name" '(' expr_list ')'
  367 expr_field: expr . '.' "name"
  368           | expr . '.' '.' "name"
  369           | expr . '.' "name" '(' ')'
  370           | expr . '.' "name" '(' expr_list ')'
  371           | expr . '.' basic_type_declaration '(' ')'
  372           | expr . '.' basic_type_declaration '(' expr_list ')'
  375           | expr . '.' $@25 error $@26
  397 expr: expr . "<<" expr
  398     | expr . ">>" expr
  399     | expr . "<<<" expr
  400     | expr . ">>>" expr
  401     | expr . '+' expr
  402     | expr . '-' expr
  403     | expr . '*' expr
  404     | expr . '/' expr
  405     | expr . '%' expr
  406     | expr . '<' expr
  407     | expr . '>' expr
  408     | expr . "==" expr
  409     | expr . "!=" expr
  410     | expr . "<=" expr
  411     | expr . ">=" expr
  412     | expr . '&' expr
  413     | expr . '|' expr
  414     | expr . '^' expr
  415     | expr . "&&" expr
  416     | expr . "||" expr
  417     | expr . "^^" expr
  418     | expr . ".." expr
  421     | expr . "++"
  422     | expr . "--"
  424     | expr . '[' expr ']'
  425     | expr . '.' '[' expr ']'
  426     | expr . "?[" expr ']'
  427     | expr . '.' "?[" expr ']'
  428     | expr . "?." "name"
  429     | expr . '.' "?." "name"
  436     | expr . "??" expr
  437     | expr . '?' expr ':' expr
  440     | expr . "is" "type" '<' $@27 type_declaration_no_options '>' $@28
  441     | expr . "is" basic_type_declaration
  442     | expr . "is" "name"
  443     | expr . "as" "name"
  446     | expr . "as" "type" '<' $@29 type_declaration '>' $@30
  447     | expr . "as" basic_type_declaration
  448     | expr . '?' "as" "name"
  451     | expr . '?' "as" "type" '<' $@31 type_declaration '>' $@32
  452     | expr . '?' "as" basic_type_declaration
  460     | expr . "<|" expr
  461     | expr . "|>" expr
  462     | expr . "|>" basic_type_declaration
  476 expr_mtag: expr . '.' "$f" '(' expr ')'
  477          | expr . "?." "$f" '(' expr ')'
  478          | expr . '.' '.' "$f" '(' expr ')'
  479          | expr . '.' "?." "$f" '(' expr ')'
  480          | expr . "as" "$f" '(' expr ')'
  481          | expr . '?' "as" "$f" '(' expr ')'
  482          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 603
    "as"   shift, and go to state 604
    "<<"   shift, and go to state 605
    ">>"   shift, and go to state 606
    "++"   shift, and go to state 607
    "--"   shift, and go to state 608
    "<="   shift, and go to state 609
    ">="   shift, and go to state 610
    "=="   shift, and go to state 611
    "!="   shift, and go to state 612
    "->"   shift, and go to state 613
    "??"   shift, and go to state 614
    "?."   shift, and go to state 615
    "?["   shift, and go to state 616
    "<|"   shift, and go to state 617
    "|>"   shift, and go to state 618
    "<<<"  shift, and go to state 619
    ">>>"  shift, and go to state 620
    "&&"   shift, and go to state 621
    "||"   shift, and go to state 622
    "^^"   shift, and go to state 623
    ".."   shift, and go to state 624
    '?'    shift, and go to state 625
    '|'    shift, and go to state 626
    '^'    shift, and go to state 627
    '&'    shift, and go to state 628
    '<'    shift, and go to state 629
    '>'    shift, and go to state 630
    '-'    shift, and go to state 631
    '+'    shift, and go to state 632
    '*'    shift, and go to state 633
    '/'    shift, and go to state 634
    '%'    shift, and go to state 635
    '.'    shift, and go to state 636
    '['    shift, and go to state 637

    $default  reduce using rule 260 (expression_delete)


State 1075

   83 expression_with_alias: "assume" "name" '=' . expr

    "struct"                          shift, and go to state 414
    "class"                           shift, and go to state 415
    "true"                            shift, and go to state 416
    "false"                           shift, and go to state 417
    "new"                             shift, and go to state 418
    "typeinfo"                        shift, and go to state 419
    "type"                            shift, and go to state 420
    "array"                           shift, and go to state 421
    "null"                            shift, and go to state 422
    "table"                           shift, and go to state 423
    "deref"                           shift, and go to state 424
    "cast"                            shift, and go to state 425
    "upcast"                          shift, and go to state 426
    "addr"                            shift, and go to state 427
    "reinterpret"                     shift, and go to state 428
    "unsafe"                          shift, and go to state 429
    "fixed_array"                     shift, and go to state 430
    "default"                         shift, and go to state 431
    "bool"                            shift, and go to state 228
    "void"                            shift, and go to state 229
    "string"                          shift, and go to state 230
    "int"                             shift, and go to state 232
    "int2"                            shift, and go to state 233
    "int3"                            shift, and go to state 234
    "int4"                            shift, and go to state 235
    "uint"                            shift, and go to state 236
    "bitfield"                        shift, and go to state 432
    "uint2"                           shift, and go to state 238
    "uint3"                           shift, and go to state 239
    "uint4"                           shift, and go to state 240
    "float"                           shift, and go to state 241
    "float2"                          shift, and go to state 242
    "float3"                          shift, and go to state 243
    "float4"                          shift, and go to state 244
    "range"                           shift, and go to state 245
    "urange"                          shift, and go to state 246
    "range64"                         shift, and go to state 247
    "urange64"                        shift, and go to state 248
    "int64"                           shift, and go to state 250
    "uint64"                          shift, and go to state 251
    "double"                          shift, and go to state 252
    "int8"                            shift, and go to state 255
    "uint8"                           shift, and go to state 256
    "int16"                           shift, and go to state 257
    "uint16"                          shift, and go to state 258
    "tuple"                           shift, and go to state 433
    "variant"                         shift, and go to state 434
    "generator"                       shift, and go to state 435
    "++"                              shift, and go to state 436
    "--"                              shift, and go to state 437
    "::"                              shift, and go to state 55
    "$$"                              shift, and go to state 438
    "$i"                              shift, and go to state 439
    "$v"                              shift, and go to state 440
    "$b"                              shift, and go to state 441
    "$a"                              shift, and go to state 442
    "$c"                              shift, and go to state 443
    "..."                             shift, and go to state 444
    "integer constant"                shift, and go to state 445
    "long integer constant"           shift, and go to state 446
    "unsigned integer constant"       shift, and go to state 447
    "unsigned long integer constant"  shift, and go to state 448
    "unsigned int8 constant"          shift, and go to state 449
    "floating point constant"         shift, and go to state 450
    "double constant"                 shift, and go to state 451
    "name"                            shift, and go to state 56
    "start of the string"             shift, and go to state 452
    '-'                               shift, and go to state 453
    '+'                               shift, and go to state 454
    '*'                               shift, and go to state 455
    '%'                               shift, and go to state 13
    '~'                               shift, and go to state 456
    '!'                               shift, and go to state 457
    '['                               shift, and go to state 458
    '('                               shift, and go to state 459
    '$'                               shift, and go to state 460
    '@'                               shift, and go to state 461
    '{'                               shift, and go to state 462

    string_builder          go to state 463
    expr_reader             go to state 464
    expr_call_pipe          go to state 465
    name_in_namespace       go to state 466
    expr_new                go to state 467
    expr_cast               go to state 468
    expr_type_decl          go to state 469
    expr_type_info          go to state 470
    block_or_lambda         go to state 471
    expr_full_block         go to state 472
    expr_numeric_const      go to state 473
    expr_named_call         go to state 474
    expr_method_call        go to state 475
    func_addr_expr          go to state 476
    expr_field              go to state 477
    expr_call               go to state 478
    expr                    go to state 1211
    expr_generator          go to state 480
    expr_mtag               go to state 481
    basic_type_declaration  go to state 482
    make_decl               go to state 483
    make_struct_decl        go to state 484
    make_tuple_call         go to state 485
    make_dim_decl           go to state 486
    make_table_decl         go to state 487
    array_comprehension     go to state 488


State 1076

   52 expression_label: "label" "integer constant" ':' .

    $default  reduce using rule 52 (expression_label)


State 1077

   53 expression_goto: "goto" "label" "integer constant" .

    $default  reduce using rule 53 (expression_goto)


State 1078

   78 expression_unsafe: "unsafe" optional_semis expression_block .

    $default  reduce using rule 78 (expression_unsafe)


State 1079

  277 expression_yield: "yield" "<-" expr .
  356 expr_method_call: expr . "->" "name" '(' ')'
  357                 | expr . "->" "name" '(' expr_list ')'
  367 expr_field: expr . '.' "name"
  368           | expr . '.' '.' "name"
  369           | expr . '.' "name" '(' ')'
  370           | expr . '.' "name" '(' expr_list ')'
  371           | expr . '.' basic_type_declaration '(' ')'
  372           | expr . '.' basic_type_declaration '(' expr_list ')'
  375           | expr . '.' $@25 error $@26
  397 expr: expr . "<<" expr
  398     | expr . ">>" expr
  399     | expr . "<<<" expr
  400     | expr . ">>>" expr
  401     | expr . '+' expr
  402     | expr . '-' expr
  403     | expr . '*' expr
  404     | expr . '/' expr
  405     | expr . '%' expr
  406     | expr . '<' expr
  407     | expr . '>' expr
  408     | expr . "==" expr
  409     | expr . "!=" expr
  410     | expr . "<=" expr
  411     | expr . ">=" expr
  412     | expr . '&' expr
  413     | expr . '|' expr
  414     | expr . '^' expr
  415     | expr . "&&" expr
  416     | expr . "||" expr
  417     | expr . "^^" expr
  418     | expr . ".." expr
  421     | expr . "++"
  422     | expr . "--"
  424     | expr . '[' expr ']'
  425     | expr . '.' '[' expr ']'
  426     | expr . "?[" expr ']'
  427     | expr . '.' "?[" expr ']'
  428     | expr . "?." "name"
  429     | expr . '.' "?." "name"
  436     | expr . "??" expr
  437     | expr . '?' expr ':' expr
  440     | expr . "is" "type" '<' $@27 type_declaration_no_options '>' $@28
  441     | expr . "is" basic_type_declaration
  442     | expr . "is" "name"
  443     | expr . "as" "name"
  446     | expr . "as" "type" '<' $@29 type_declaration '>' $@30
  447     | expr . "as" basic_type_declaration
  448     | expr . '?' "as" "name"
  451     | expr . '?' "as" "type" '<' $@31 type_declaration '>' $@32
  452     | expr . '?' "as" basic_type_declaration
  460     | expr . "<|" expr
  461     | expr . "|>" expr
  462     | expr . "|>" basic_type_declaration
  476 expr_mtag: expr . '.' "$f" '(' expr ')'
  477          | expr . "?." "$f" '(' expr ')'
  478          | expr . '.' '.' "$f" '(' expr ')'
  479          | expr . '.' "?." "$f" '(' expr ')'
  480          | expr . "as" "$f" '(' expr ')'
  481          | expr . '?' "as" "$f" '(' expr ')'
  482          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 603
    "as"   shift, and go to state 604
    "<<"   shift, and go to state 605
    ">>"   shift, and go to state 606
    "++"   shift, and go to state 607
    "--"   shift, and go to state 608
    "<="   shift, and go to state 609
    ">="   shift, and go to state 610
    "=="   shift, and go to state 611
    "!="   shift, and go to state 612
    "->"   shift, and go to state 613
    "??"   shift, and go to state 614
    "?."   shift, and go to state 615
    "?["   shift, and go to state 616
    "<|"   shift, and go to state 617
    "|>"   shift, and go to state 618
    "<<<"  shift, and go to state 619
    ">>>"  shift, and go to state 620
    "&&"   shift, and go to state 621
    "||"   shift, and go to state 622
    "^^"   shift, and go to state 623
    ".."   shift, and go to state 624
    '?'    shift, and go to state 625
    '|'    shift, and go to state 626
    '^'    shift, and go to state 627
    '&'    shift, and go to state 628
    '<'    shift, and go to state 629
    '>'    shift, and go to state 630
    '-'    shift, and go to state 631
    '+'    shift, and go to state 632
    '*'    shift, and go to state 633
    '/'    shift, and go to state 634
    '%'    shift, and go to state 635
    '.'    shift, and go to state 636
    '['    shift, and go to state 637

    $default  reduce using rule 277 (expression_yield)


State 1080

   75 expression_if_then_else_oneliner: expression_if_one_liner "if" '(' . expr ')' expression_else_one_liner ';'

    "struct"                          shift, and go to state 414
    "class"                           shift, and go to state 415
    "true"                            shift, and go to state 416
    "false"                           shift, and go to state 417
    "new"                             shift, and go to state 418
    "typeinfo"                        shift, and go to state 419
    "type"                            shift, and go to state 420
    "array"                           shift, and go to state 421
    "null"                            shift, and go to state 422
    "table"                           shift, and go to state 423
    "deref"                           shift, and go to state 424
    "cast"                            shift, and go to state 425
    "upcast"                          shift, and go to state 426
    "addr"                            shift, and go to state 427
    "reinterpret"                     shift, and go to state 428
    "unsafe"                          shift, and go to state 429
    "fixed_array"                     shift, and go to state 430
    "default"                         shift, and go to state 431
    "bool"                            shift, and go to state 228
    "void"                            shift, and go to state 229
    "string"                          shift, and go to state 230
    "int"                             shift, and go to state 232
    "int2"                            shift, and go to state 233
    "int3"                            shift, and go to state 234
    "int4"                            shift, and go to state 235
    "uint"                            shift, and go to state 236
    "bitfield"                        shift, and go to state 432
    "uint2"                           shift, and go to state 238
    "uint3"                           shift, and go to state 239
    "uint4"                           shift, and go to state 240
    "float"                           shift, and go to state 241
    "float2"                          shift, and go to state 242
    "float3"                          shift, and go to state 243
    "float4"                          shift, and go to state 244
    "range"                           shift, and go to state 245
    "urange"                          shift, and go to state 246
    "range64"                         shift, and go to state 247
    "urange64"                        shift, and go to state 248
    "int64"                           shift, and go to state 250
    "uint64"                          shift, and go to state 251
    "double"                          shift, and go to state 252
    "int8"                            shift, and go to state 255
    "uint8"                           shift, and go to state 256
    "int16"                           shift, and go to state 257
    "uint16"                          shift, and go to state 258
    "tuple"                           shift, and go to state 433
    "variant"                         shift, and go to state 434
    "generator"                       shift, and go to state 435
    "++"                              shift, and go to state 436
    "--"                              shift, and go to state 437
    "::"                              shift, and go to state 55
    "$$"                              shift, and go to state 438
    "$i"                              shift, and go to state 439
    "$v"                              shift, and go to state 440
    "$b"                              shift, and go to state 441
    "$a"                              shift, and go to state 442
    "$c"                              shift, and go to state 443
    "..."                             shift, and go to state 444
    "integer constant"                shift, and go to state 445
    "long integer constant"           shift, and go to state 446
    "unsigned integer constant"       shift, and go to state 447
    "unsigned long integer constant"  shift, and go to state 448
    "unsigned int8 constant"          shift, and go to state 449
    "floating point constant"         shift, and go to state 450
    "double constant"                 shift, and go to state 451
    "name"                            shift, and go to state 56
    "start of the string"             shift, and go to state 452
    '-'                               shift, and go to state 453
    '+'                               shift, and go to state 454
    '*'                               shift, and go to state 455
    '%'                               shift, and go to state 13
    '~'                               shift, and go to state 456
    '!'                               shift, and go to state 457
    '['                               shift, and go to state 458
    '('                               shift, and go to state 459
    '$'                               shift, and go to state 460
    '@'                               shift, and go to state 461
    '{'                               shift, and go to state 462

    string_builder          go to state 463
    expr_reader             go to state 464
    expr_call_pipe          go to state 465
    name_in_namespace       go to state 466
    expr_new                go to state 467
    expr_cast               go to state 468
    expr_type_decl          go to state 469
    expr_type_info          go to state 470
    block_or_lambda         go to state 471
    expr_full_block         go to state 472
    expr_numeric_const      go to state 473
    expr_named_call         go to state 474
    expr_method_call        go to state 475
    func_addr_expr          go to state 476
    expr_field              go to state 477
    expr_call               go to state 478
    expr                    go to state 1212
    expr_generator          go to state 480
    expr_mtag               go to state 481
    basic_type_declaration  go to state 482
    make_decl               go to state 483
    make_struct_decl        go to state 484
    make_tuple_call         go to state 485
    make_dim_decl           go to state 486
    make_table_decl         go to state 487
    array_comprehension     go to state 488


State 1081

   74 expression_if_then_else: $@2 if_or_static_if '(' . expr ')' optional_semis expression_block expression_else

    "struct"                          shift, and go to state 414
    "class"                           shift, and go to state 415
    "true"                            shift, and go to state 416
    "false"                           shift, and go to state 417
    "new"                             shift, and go to state 418
    "typeinfo"                        shift, and go to state 419
    "type"                            shift, and go to state 420
    "array"                           shift, and go to state 421
    "null"                            shift, and go to state 422
    "table"                           shift, and go to state 423
    "deref"                           shift, and go to state 424
    "cast"                            shift, and go to state 425
    "upcast"                          shift, and go to state 426
    "addr"                            shift, and go to state 427
    "reinterpret"                     shift, and go to state 428
    "unsafe"                          shift, and go to state 429
    "fixed_array"                     shift, and go to state 430
    "default"                         shift, and go to state 431
    "bool"                            shift, and go to state 228
    "void"                            shift, and go to state 229
    "string"                          shift, and go to state 230
    "int"                             shift, and go to state 232
    "int2"                            shift, and go to state 233
    "int3"                            shift, and go to state 234
    "int4"                            shift, and go to state 235
    "uint"                            shift, and go to state 236
    "bitfield"                        shift, and go to state 432
    "uint2"                           shift, and go to state 238
    "uint3"                           shift, and go to state 239
    "uint4"                           shift, and go to state 240
    "float"                           shift, and go to state 241
    "float2"                          shift, and go to state 242
    "float3"                          shift, and go to state 243
    "float4"                          shift, and go to state 244
    "range"                           shift, and go to state 245
    "urange"                          shift, and go to state 246
    "range64"                         shift, and go to state 247
    "urange64"                        shift, and go to state 248
    "int64"                           shift, and go to state 250
    "uint64"                          shift, and go to state 251
    "double"                          shift, and go to state 252
    "int8"                            shift, and go to state 255
    "uint8"                           shift, and go to state 256
    "int16"                           shift, and go to state 257
    "uint16"                          shift, and go to state 258
    "tuple"                           shift, and go to state 433
    "variant"                         shift, and go to state 434
    "generator"                       shift, and go to state 435
    "++"                              shift, and go to state 436
    "--"                              shift, and go to state 437
    "::"                              shift, and go to state 55
    "$$"                              shift, and go to state 438
    "$i"                              shift, and go to state 439
    "$v"                              shift, and go to state 440
    "$b"                              shift, and go to state 441
    "$a"                              shift, and go to state 442
    "$c"                              shift, and go to state 443
    "..."                             shift, and go to state 444
    "integer constant"                shift, and go to state 445
    "long integer constant"           shift, and go to state 446
    "unsigned integer constant"       shift, and go to state 447
    "unsigned long integer constant"  shift, and go to state 448
    "unsigned int8 constant"          shift, and go to state 449
    "floating point constant"         shift, and go to state 450
    "double constant"                 shift, and go to state 451
    "name"                            shift, and go to state 56
    "start of the string"             shift, and go to state 452
    '-'                               shift, and go to state 453
    '+'                               shift, and go to state 454
    '*'                               shift, and go to state 455
    '%'                               shift, and go to state 13
    '~'                               shift, and go to state 456
    '!'                               shift, and go to state 457
    '['                               shift, and go to state 458
    '('                               shift, and go to state 459
    '$'                               shift, and go to state 460
    '@'                               shift, and go to state 461
    '{'                               shift, and go to state 462

    string_builder          go to state 463
    expr_reader             go to state 464
    expr_call_pipe          go to state 465
    name_in_namespace       go to state 466
    expr_new                go to state 467
    expr_cast               go to state 468
    expr_type_decl          go to state 469
    expr_type_info          go to state 470
    block_or_lambda         go to state 471
    expr_full_block         go to state 472
    expr_numeric_const      go to state 473
    expr_named_call         go to state 474
    expr_method_call        go to state 475
    func_addr_expr          go to state 476
    expr_field              go to state 477
    expr_call               go to state 478
    expr                    go to state 1213
    expr_generator          go to state 480
    expr_mtag               go to state 481
    basic_type_declaration  go to state 482
    make_decl               go to state 483
    make_struct_decl        go to state 484
    make_tuple_call         go to state 485
    make_dim_decl           go to state 486
    make_table_decl         go to state 487
    array_comprehension     go to state 488


State 1082

   77 expression_for_loop: $@3 "for" '(' . variable_name_with_pos_list "in" expr_list ')' optional_semis expression_block

    "$i"    shift, and go to state 673
    "name"  shift, and go to state 674

    variable_name_with_pos_list  go to state 1214


State 1083

   80 expression_while_loop: $@4 "while" '(' . expr ')' optional_semis expression_block

    "struct"                          shift, and go to state 414
    "class"                           shift, and go to state 415
    "true"                            shift, and go to state 416
    "false"                           shift, and go to state 417
    "new"                             shift, and go to state 418
    "typeinfo"                        shift, and go to state 419
    "type"                            shift, and go to state 420
    "array"                           shift, and go to state 421
    "null"                            shift, and go to state 422
    "table"                           shift, and go to state 423
    "deref"                           shift, and go to state 424
    "cast"                            shift, and go to state 425
    "upcast"                          shift, and go to state 426
    "addr"                            shift, and go to state 427
    "reinterpret"                     shift, and go to state 428
    "unsafe"                          shift, and go to state 429
    "fixed_array"                     shift, and go to state 430
    "default"                         shift, and go to state 431
    "bool"                            shift, and go to state 228
    "void"                            shift, and go to state 229
    "string"                          shift, and go to state 230
    "int"                             shift, and go to state 232
    "int2"                            shift, and go to state 233
    "int3"                            shift, and go to state 234
    "int4"                            shift, and go to state 235
    "uint"                            shift, and go to state 236
    "bitfield"                        shift, and go to state 432
    "uint2"                           shift, and go to state 238
    "uint3"                           shift, and go to state 239
    "uint4"                           shift, and go to state 240
    "float"                           shift, and go to state 241
    "float2"                          shift, and go to state 242
    "float3"                          shift, and go to state 243
    "float4"                          shift, and go to state 244
    "range"                           shift, and go to state 245
    "urange"                          shift, and go to state 246
    "range64"                         shift, and go to state 247
    "urange64"                        shift, and go to state 248
    "int64"                           shift, and go to state 250
    "uint64"                          shift, and go to state 251
    "double"                          shift, and go to state 252
    "int8"                            shift, and go to state 255
    "uint8"                           shift, and go to state 256
    "int16"                           shift, and go to state 257
    "uint16"                          shift, and go to state 258
    "tuple"                           shift, and go to state 433
    "variant"                         shift, and go to state 434
    "generator"                       shift, and go to state 435
    "++"                              shift, and go to state 436
    "--"                              shift, and go to state 437
    "::"                              shift, and go to state 55
    "$$"                              shift, and go to state 438
    "$i"                              shift, and go to state 439
    "$v"                              shift, and go to state 440
    "$b"                              shift, and go to state 441
    "$a"                              shift, and go to state 442
    "$c"                              shift, and go to state 443
    "..."                             shift, and go to state 444
    "integer constant"                shift, and go to state 445
    "long integer constant"           shift, and go to state 446
    "unsigned integer constant"       shift, and go to state 447
    "unsigned long integer constant"  shift, and go to state 448
    "unsigned int8 constant"          shift, and go to state 449
    "floating point constant"         shift, and go to state 450
    "double constant"                 shift, and go to state 451
    "name"                            shift, and go to state 56
    "start of the string"             shift, and go to state 452
    '-'                               shift, and go to state 453
    '+'                               shift, and go to state 454
    '*'                               shift, and go to state 455
    '%'                               shift, and go to state 13
    '~'                               shift, and go to state 456
    '!'                               shift, and go to state 457
    '['                               shift, and go to state 458
    '('                               shift, and go to state 459
    '$'                               shift, and go to state 460
    '@'                               shift, and go to state 461
    '{'                               shift, and go to state 462

    string_builder          go to state 463
    expr_reader             go to state 464
    expr_call_pipe          go to state 465
    name_in_namespace       go to state 466
    expr_new                go to state 467
    expr_cast               go to state 468
    expr_type_decl          go to state 469
    expr_type_info          go to state 470
    block_or_lambda         go to state 471
    expr_full_block         go to state 472
    expr_numeric_const      go to state 473
    expr_named_call         go to state 474
    expr_method_call        go to state 475
    func_addr_expr          go to state 476
    expr_field              go to state 477
    expr_call               go to state 478
    expr                    go to state 1215
    expr_generator          go to state 480
    expr_mtag               go to state 481
    basic_type_declaration  go to state 482
    make_decl               go to state 483
    make_struct_decl        go to state 484
    make_tuple_call         go to state 485
    make_dim_decl           go to state 486
    make_table_decl         go to state 487
    array_comprehension     go to state 488


State 1084

   82 expression_with: $@5 "with" '(' . expr ')' optional_semis expression_block

    "struct"                          shift, and go to state 414
    "class"                           shift, and go to state 415
    "true"                            shift, and go to state 416
    "false"                           shift, and go to state 417
    "new"                             shift, and go to state 418
    "typeinfo"                        shift, and go to state 419
    "type"                            shift, and go to state 420
    "array"                           shift, and go to state 421
    "null"                            shift, and go to state 422
    "table"                           shift, and go to state 423
    "deref"                           shift, and go to state 424
    "cast"                            shift, and go to state 425
    "upcast"                          shift, and go to state 426
    "addr"                            shift, and go to state 427
    "reinterpret"                     shift, and go to state 428
    "unsafe"                          shift, and go to state 429
    "fixed_array"                     shift, and go to state 430
    "default"                         shift, and go to state 431
    "bool"                            shift, and go to state 228
    "void"                            shift, and go to state 229
    "string"                          shift, and go to state 230
    "int"                             shift, and go to state 232
    "int2"                            shift, and go to state 233
    "int3"                            shift, and go to state 234
    "int4"                            shift, and go to state 235
    "uint"                            shift, and go to state 236
    "bitfield"                        shift, and go to state 432
    "uint2"                           shift, and go to state 238
    "uint3"                           shift, and go to state 239
    "uint4"                           shift, and go to state 240
    "float"                           shift, and go to state 241
    "float2"                          shift, and go to state 242
    "float3"                          shift, and go to state 243
    "float4"                          shift, and go to state 244
    "range"                           shift, and go to state 245
    "urange"                          shift, and go to state 246
    "range64"                         shift, and go to state 247
    "urange64"                        shift, and go to state 248
    "int64"                           shift, and go to state 250
    "uint64"                          shift, and go to state 251
    "double"                          shift, and go to state 252
    "int8"                            shift, and go to state 255
    "uint8"                           shift, and go to state 256
    "int16"                           shift, and go to state 257
    "uint16"                          shift, and go to state 258
    "tuple"                           shift, and go to state 433
    "variant"                         shift, and go to state 434
    "generator"                       shift, and go to state 435
    "++"                              shift, and go to state 436
    "--"                              shift, and go to state 437
    "::"                              shift, and go to state 55
    "$$"                              shift, and go to state 438
    "$i"                              shift, and go to state 439
    "$v"                              shift, and go to state 440
    "$b"                              shift, and go to state 441
    "$a"                              shift, and go to state 442
    "$c"                              shift, and go to state 443
    "..."                             shift, and go to state 444
    "integer constant"                shift, and go to state 445
    "long integer constant"           shift, and go to state 446
    "unsigned integer constant"       shift, and go to state 447
    "unsigned long integer constant"  shift, and go to state 448
    "unsigned int8 constant"          shift, and go to state 449
    "floating point constant"         shift, and go to state 450
    "double constant"                 shift, and go to state 451
    "name"                            shift, and go to state 56
    "start of the string"             shift, and go to state 452
    '-'                               shift, and go to state 453
    '+'                               shift, and go to state 454
    '*'                               shift, and go to state 455
    '%'                               shift, and go to state 13
    '~'                               shift, and go to state 456
    '!'                               shift, and go to state 457
    '['                               shift, and go to state 458
    '('                               shift, and go to state 459
    '$'                               shift, and go to state 460
    '@'                               shift, and go to state 461
    '{'                               shift, and go to state 462

    string_builder          go to state 463
    expr_reader             go to state 464
    expr_call_pipe          go to state 465
    name_in_namespace       go to state 466
    expr_new                go to state 467
    expr_cast               go to state 468
    expr_type_decl          go to state 469
    expr_type_info          go to state 470
    block_or_lambda         go to state 471
    expr_full_block         go to state 472
    expr_numeric_const      go to state 473
    expr_named_call         go to state 474
    expr_method_call        go to state 475
    func_addr_expr          go to state 476
    expr_field              go to state 477
    expr_call               go to state 478
    expr                    go to state 1216
    expr_generator          go to state 480
    expr_mtag               go to state 481
    basic_type_declaration  go to state 482
    make_decl               go to state 483
    make_struct_decl        go to state 484
    make_tuple_call         go to state 485
    make_dim_decl           go to state 486
    make_table_decl         go to state 487
    array_comprehension     go to state 488


State 1085

  223 expression_block_finally: "finally" . $@7 '{' expressions $@8 '}'

    $default  reduce using rule 221 ($@7)

    $@7  go to state 1217


State 1086

  226 expression_block: $@9 '{' expressions $@10 '}' expression_block_finally .

    $default  reduce using rule 226 (expression_block)


State 1087

  288 tuple_expansion_variable_declaration: '(' . tuple_expansion ')' ':' type_declaration_no_options copy_or_move_or_clone expr ';'
  289                                     | '(' . tuple_expansion ')' optional_ref copy_or_move_or_clone expr ';'

    "name"  shift, and go to state 1218

    tuple_expansion  go to state 1219


State 1088

  292 expression_let: kwd_let optional_in_scope '{' . variable_declaration_list '}'

    $default  reduce using rule 540 (variable_declaration_list)

    variable_declaration_list  go to state 1220


State 1089

  291 expression_let: kwd_let optional_in_scope tuple_expansion_variable_declaration .

    $default  reduce using rule 291 (expression_let)


State 1090

  290 expression_let: kwd_let optional_in_scope let_variable_declaration .

    $default  reduce using rule 290 (expression_let)


State 1091

  345 expr_assign: expr "+=" expr .
  356 expr_method_call: expr . "->" "name" '(' ')'
  357                 | expr . "->" "name" '(' expr_list ')'
  367 expr_field: expr . '.' "name"
  368           | expr . '.' '.' "name"
  369           | expr . '.' "name" '(' ')'
  370           | expr . '.' "name" '(' expr_list ')'
  371           | expr . '.' basic_type_declaration '(' ')'
  372           | expr . '.' basic_type_declaration '(' expr_list ')'
  375           | expr . '.' $@25 error $@26
  397 expr: expr . "<<" expr
  398     | expr . ">>" expr
  399     | expr . "<<<" expr
  400     | expr . ">>>" expr
  401     | expr . '+' expr
  402     | expr . '-' expr
  403     | expr . '*' expr
  404     | expr . '/' expr
  405     | expr . '%' expr
  406     | expr . '<' expr
  407     | expr . '>' expr
  408     | expr . "==" expr
  409     | expr . "!=" expr
  410     | expr . "<=" expr
  411     | expr . ">=" expr
  412     | expr . '&' expr
  413     | expr . '|' expr
  414     | expr . '^' expr
  415     | expr . "&&" expr
  416     | expr . "||" expr
  417     | expr . "^^" expr
  418     | expr . ".." expr
  421     | expr . "++"
  422     | expr . "--"
  424     | expr . '[' expr ']'
  425     | expr . '.' '[' expr ']'
  426     | expr . "?[" expr ']'
  427     | expr . '.' "?[" expr ']'
  428     | expr . "?." "name"
  429     | expr . '.' "?." "name"
  436     | expr . "??" expr
  437     | expr . '?' expr ':' expr
  440     | expr . "is" "type" '<' $@27 type_declaration_no_options '>' $@28
  441     | expr . "is" basic_type_declaration
  442     | expr . "is" "name"
  443     | expr . "as" "name"
  446     | expr . "as" "type" '<' $@29 type_declaration '>' $@30
  447     | expr . "as" basic_type_declaration
  448     | expr . '?' "as" "name"
  451     | expr . '?' "as" "type" '<' $@31 type_declaration '>' $@32
  452     | expr . '?' "as" basic_type_declaration
  460     | expr . "<|" expr
  461     | expr . "|>" expr
  462     | expr . "|>" basic_type_declaration
  476 expr_mtag: expr . '.' "$f" '(' expr ')'
  477          | expr . "?." "$f" '(' expr ')'
  478          | expr . '.' '.' "$f" '(' expr ')'
  479          | expr . '.' "?." "$f" '(' expr ')'
  480          | expr . "as" "$f" '(' expr ')'
  481          | expr . '?' "as" "$f" '(' expr ')'
  482          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 603
    "as"   shift, and go to state 604
    "<<"   shift, and go to state 605
    ">>"   shift, and go to state 606
    "++"   shift, and go to state 607
    "--"   shift, and go to state 608
    "<="   shift, and go to state 609
    ">="   shift, and go to state 610
    "=="   shift, and go to state 611
    "!="   shift, and go to state 612
    "->"   shift, and go to state 613
    "??"   shift, and go to state 614
    "?."   shift, and go to state 615
    "?["   shift, and go to state 616
    "<|"   shift, and go to state 617
    "|>"   shift, and go to state 618
    "<<<"  shift, and go to state 619
    ">>>"  shift, and go to state 620
    "&&"   shift, and go to state 621
    "||"   shift, and go to state 622
    "^^"   shift, and go to state 623
    ".."   shift, and go to state 624
    '?'    shift, and go to state 625
    '|'    shift, and go to state 626
    '^'    shift, and go to state 627
    '&'    shift, and go to state 628
    '<'    shift, and go to state 629
    '>'    shift, and go to state 630
    '-'    shift, and go to state 631
    '+'    shift, and go to state 632
    '*'    shift, and go to state 633
    '/'    shift, and go to state 634
    '%'    shift, and go to state 635
    '.'    shift, and go to state 636
    '['    shift, and go to state 637

    $default  reduce using rule 345 (expr_assign)


State 1092

  346 expr_assign: expr "-=" expr .
  356 expr_method_call: expr . "->" "name" '(' ')'
  357                 | expr . "->" "name" '(' expr_list ')'
  367 expr_field: expr . '.' "name"
  368           | expr . '.' '.' "name"
  369           | expr . '.' "name" '(' ')'
  370           | expr . '.' "name" '(' expr_list ')'
  371           | expr . '.' basic_type_declaration '(' ')'
  372           | expr . '.' basic_type_declaration '(' expr_list ')'
  375           | expr . '.' $@25 error $@26
  397 expr: expr . "<<" expr
  398     | expr . ">>" expr
  399     | expr . "<<<" expr
  400     | expr . ">>>" expr
  401     | expr . '+' expr
  402     | expr . '-' expr
  403     | expr . '*' expr
  404     | expr . '/' expr
  405     | expr . '%' expr
  406     | expr . '<' expr
  407     | expr . '>' expr
  408     | expr . "==" expr
  409     | expr . "!=" expr
  410     | expr . "<=" expr
  411     | expr . ">=" expr
  412     | expr . '&' expr
  413     | expr . '|' expr
  414     | expr . '^' expr
  415     | expr . "&&" expr
  416     | expr . "||" expr
  417     | expr . "^^" expr
  418     | expr . ".." expr
  421     | expr . "++"
  422     | expr . "--"
  424     | expr . '[' expr ']'
  425     | expr . '.' '[' expr ']'
  426     | expr . "?[" expr ']'
  427     | expr . '.' "?[" expr ']'
  428     | expr . "?." "name"
  429     | expr . '.' "?." "name"
  436     | expr . "??" expr
  437     | expr . '?' expr ':' expr
  440     | expr . "is" "type" '<' $@27 type_declaration_no_options '>' $@28
  441     | expr . "is" basic_type_declaration
  442     | expr . "is" "name"
  443     | expr . "as" "name"
  446     | expr . "as" "type" '<' $@29 type_declaration '>' $@30
  447     | expr . "as" basic_type_declaration
  448     | expr . '?' "as" "name"
  451     | expr . '?' "as" "type" '<' $@31 type_declaration '>' $@32
  452     | expr . '?' "as" basic_type_declaration
  460     | expr . "<|" expr
  461     | expr . "|>" expr
  462     | expr . "|>" basic_type_declaration
  476 expr_mtag: expr . '.' "$f" '(' expr ')'
  477          | expr . "?." "$f" '(' expr ')'
  478          | expr . '.' '.' "$f" '(' expr ')'
  479          | expr . '.' "?." "$f" '(' expr ')'
  480          | expr . "as" "$f" '(' expr ')'
  481          | expr . '?' "as" "$f" '(' expr ')'
  482          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 603
    "as"   shift, and go to state 604
    "<<"   shift, and go to state 605
    ">>"   shift, and go to state 606
    "++"   shift, and go to state 607
    "--"   shift, and go to state 608
    "<="   shift, and go to state 609
    ">="   shift, and go to state 610
    "=="   shift, and go to state 611
    "!="   shift, and go to state 612
    "->"   shift, and go to state 613
    "??"   shift, and go to state 614
    "?."   shift, and go to state 615
    "?["   shift, and go to state 616
    "<|"   shift, and go to state 617
    "|>"   shift, and go to state 618
    "<<<"  shift, and go to state 619
    ">>>"  shift, and go to state 620
    "&&"   shift, and go to state 621
    "||"   shift, and go to state 622
    "^^"   shift, and go to state 623
    ".."   shift, and go to state 624
    '?'    shift, and go to state 625
    '|'    shift, and go to state 626
    '^'    shift, and go to state 627
    '&'    shift, and go to state 628
    '<'    shift, and go to state 629
    '>'    shift, and go to state 630
    '-'    shift, and go to state 631
    '+'    shift, and go to state 632
    '*'    shift, and go to state 633
    '/'    shift, and go to state 634
    '%'    shift, and go to state 635
    '.'    shift, and go to state 636
    '['    shift, and go to state 637

    $default  reduce using rule 346 (expr_assign)


State 1093

  348 expr_assign: expr "/=" expr .
  356 expr_method_call: expr . "->" "name" '(' ')'
  357                 | expr . "->" "name" '(' expr_list ')'
  367 expr_field: expr . '.' "name"
  368           | expr . '.' '.' "name"
  369           | expr . '.' "name" '(' ')'
  370           | expr . '.' "name" '(' expr_list ')'
  371           | expr . '.' basic_type_declaration '(' ')'
  372           | expr . '.' basic_type_declaration '(' expr_list ')'
  375           | expr . '.' $@25 error $@26
  397 expr: expr . "<<" expr
  398     | expr . ">>" expr
  399     | expr . "<<<" expr
  400     | expr . ">>>" expr
  401     | expr . '+' expr
  402     | expr . '-' expr
  403     | expr . '*' expr
  404     | expr . '/' expr
  405     | expr . '%' expr
  406     | expr . '<' expr
  407     | expr . '>' expr
  408     | expr . "==" expr
  409     | expr . "!=" expr
  410     | expr . "<=" expr
  411     | expr . ">=" expr
  412     | expr . '&' expr
  413     | expr . '|' expr
  414     | expr . '^' expr
  415     | expr . "&&" expr
  416     | expr . "||" expr
  417     | expr . "^^" expr
  418     | expr . ".." expr
  421     | expr . "++"
  422     | expr . "--"
  424     | expr . '[' expr ']'
  425     | expr . '.' '[' expr ']'
  426     | expr . "?[" expr ']'
  427     | expr . '.' "?[" expr ']'
  428     | expr . "?." "name"
  429     | expr . '.' "?." "name"
  436     | expr . "??" expr
  437     | expr . '?' expr ':' expr
  440     | expr . "is" "type" '<' $@27 type_declaration_no_options '>' $@28
  441     | expr . "is" basic_type_declaration
  442     | expr . "is" "name"
  443     | expr . "as" "name"
  446     | expr . "as" "type" '<' $@29 type_declaration '>' $@30
  447     | expr . "as" basic_type_declaration
  448     | expr . '?' "as" "name"
  451     | expr . '?' "as" "type" '<' $@31 type_declaration '>' $@32
  452     | expr . '?' "as" basic_type_declaration
  460     | expr . "<|" expr
  461     | expr . "|>" expr
  462     | expr . "|>" basic_type_declaration
  476 expr_mtag: expr . '.' "$f" '(' expr ')'
  477          | expr . "?." "$f" '(' expr ')'
  478          | expr . '.' '.' "$f" '(' expr ')'
  479          | expr . '.' "?." "$f" '(' expr ')'
  480          | expr . "as" "$f" '(' expr ')'
  481          | expr . '?' "as" "$f" '(' expr ')'
  482          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 603
    "as"   shift, and go to state 604
    "<<"   shift, and go to state 605
    ">>"   shift, and go to state 606
    "++"   shift, and go to state 607
    "--"   shift, and go to state 608
    "<="   shift, and go to state 609
    ">="   shift, and go to state 610
    "=="   shift, and go to state 611
    "!="   shift, and go to state 612
    "->"   shift, and go to state 613
    "??"   shift, and go to state 614
    "?."   shift, and go to state 615
    "?["   shift, and go to state 616
    "<|"   shift, and go to state 617
    "|>"   shift, and go to state 618
    "<<<"  shift, and go to state 619
    ">>>"  shift, and go to state 620
    "&&"   shift, and go to state 621
    "||"   shift, and go to state 622
    "^^"   shift, and go to state 623
    ".."   shift, and go to state 624
    '?'    shift, and go to state 625
    '|'    shift, and go to state 626
    '^'    shift, and go to state 627
    '&'    shift, and go to state 628
    '<'    shift, and go to state 629
    '>'    shift, and go to state 630
    '-'    shift, and go to state 631
    '+'    shift, and go to state 632
    '*'    shift, and go to state 633
    '/'    shift, and go to state 634
    '%'    shift, and go to state 635
    '.'    shift, and go to state 636
    '['    shift, and go to state 637

    $default  reduce using rule 348 (expr_assign)


State 1094

  347 expr_assign: expr "*=" expr .
  356 expr_method_call: expr . "->" "name" '(' ')'
  357                 | expr . "->" "name" '(' expr_list ')'
  367 expr_field: expr . '.' "name"
  368           | expr . '.' '.' "name"
  369           | expr . '.' "name" '(' ')'
  370           | expr . '.' "name" '(' expr_list ')'
  371           | expr . '.' basic_type_declaration '(' ')'
  372           | expr . '.' basic_type_declaration '(' expr_list ')'
  375           | expr . '.' $@25 error $@26
  397 expr: expr . "<<" expr
  398     | expr . ">>" expr
  399     | expr . "<<<" expr
  400     | expr . ">>>" expr
  401     | expr . '+' expr
  402     | expr . '-' expr
  403     | expr . '*' expr
  404     | expr . '/' expr
  405     | expr . '%' expr
  406     | expr . '<' expr
  407     | expr . '>' expr
  408     | expr . "==" expr
  409     | expr . "!=" expr
  410     | expr . "<=" expr
  411     | expr . ">=" expr
  412     | expr . '&' expr
  413     | expr . '|' expr
  414     | expr . '^' expr
  415     | expr . "&&" expr
  416     | expr . "||" expr
  417     | expr . "^^" expr
  418     | expr . ".." expr
  421     | expr . "++"
  422     | expr . "--"
  424     | expr . '[' expr ']'
  425     | expr . '.' '[' expr ']'
  426     | expr . "?[" expr ']'
  427     | expr . '.' "?[" expr ']'
  428     | expr . "?." "name"
  429     | expr . '.' "?." "name"
  436     | expr . "??" expr
  437     | expr . '?' expr ':' expr
  440     | expr . "is" "type" '<' $@27 type_declaration_no_options '>' $@28
  441     | expr . "is" basic_type_declaration
  442     | expr . "is" "name"
  443     | expr . "as" "name"
  446     | expr . "as" "type" '<' $@29 type_declaration '>' $@30
  447     | expr . "as" basic_type_declaration
  448     | expr . '?' "as" "name"
  451     | expr . '?' "as" "type" '<' $@31 type_declaration '>' $@32
  452     | expr . '?' "as" basic_type_declaration
  460     | expr . "<|" expr
  461     | expr . "|>" expr
  462     | expr . "|>" basic_type_declaration
  476 expr_mtag: expr . '.' "$f" '(' expr ')'
  477          | expr . "?." "$f" '(' expr ')'
  478          | expr . '.' '.' "$f" '(' expr ')'
  479          | expr . '.' "?." "$f" '(' expr ')'
  480          | expr . "as" "$f" '(' expr ')'
  481          | expr . '?' "as" "$f" '(' expr ')'
  482          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 603
    "as"   shift, and go to state 604
    "<<"   shift, and go to state 605
    ">>"   shift, and go to state 606
    "++"   shift, and go to state 607
    "--"   shift, and go to state 608
    "<="   shift, and go to state 609
    ">="   shift, and go to state 610
    "=="   shift, and go to state 611
    "!="   shift, and go to state 612
    "->"   shift, and go to state 613
    "??"   shift, and go to state 614
    "?."   shift, and go to state 615
    "?["   shift, and go to state 616
    "<|"   shift, and go to state 617
    "|>"   shift, and go to state 618
    "<<<"  shift, and go to state 619
    ">>>"  shift, and go to state 620
    "&&"   shift, and go to state 621
    "||"   shift, and go to state 622
    "^^"   shift, and go to state 623
    ".."   shift, and go to state 624
    '?'    shift, and go to state 625
    '|'    shift, and go to state 626
    '^'    shift, and go to state 627
    '&'    shift, and go to state 628
    '<'    shift, and go to state 629
    '>'    shift, and go to state 630
    '-'    shift, and go to state 631
    '+'    shift, and go to state 632
    '*'    shift, and go to state 633
    '/'    shift, and go to state 634
    '%'    shift, and go to state 635
    '.'    shift, and go to state 636
    '['    shift, and go to state 637

    $default  reduce using rule 347 (expr_assign)


State 1095

  349 expr_assign: expr "%=" expr .
  356 expr_method_call: expr . "->" "name" '(' ')'
  357                 | expr . "->" "name" '(' expr_list ')'
  367 expr_field: expr . '.' "name"
  368           | expr . '.' '.' "name"
  369           | expr . '.' "name" '(' ')'
  370           | expr . '.' "name" '(' expr_list ')'
  371           | expr . '.' basic_type_declaration '(' ')'
  372           | expr . '.' basic_type_declaration '(' expr_list ')'
  375           | expr . '.' $@25 error $@26
  397 expr: expr . "<<" expr
  398     | expr . ">>" expr
  399     | expr . "<<<" expr
  400     | expr . ">>>" expr
  401     | expr . '+' expr
  402     | expr . '-' expr
  403     | expr . '*' expr
  404     | expr . '/' expr
  405     | expr . '%' expr
  406     | expr . '<' expr
  407     | expr . '>' expr
  408     | expr . "==" expr
  409     | expr . "!=" expr
  410     | expr . "<=" expr
  411     | expr . ">=" expr
  412     | expr . '&' expr
  413     | expr . '|' expr
  414     | expr . '^' expr
  415     | expr . "&&" expr
  416     | expr . "||" expr
  417     | expr . "^^" expr
  418     | expr . ".." expr
  421     | expr . "++"
  422     | expr . "--"
  424     | expr . '[' expr ']'
  425     | expr . '.' '[' expr ']'
  426     | expr . "?[" expr ']'
  427     | expr . '.' "?[" expr ']'
  428     | expr . "?." "name"
  429     | expr . '.' "?." "name"
  436     | expr . "??" expr
  437     | expr . '?' expr ':' expr
  440     | expr . "is" "type" '<' $@27 type_declaration_no_options '>' $@28
  441     | expr . "is" basic_type_declaration
  442     | expr . "is" "name"
  443     | expr . "as" "name"
  446     | expr . "as" "type" '<' $@29 type_declaration '>' $@30
  447     | expr . "as" basic_type_declaration
  448     | expr . '?' "as" "name"
  451     | expr . '?' "as" "type" '<' $@31 type_declaration '>' $@32
  452     | expr . '?' "as" basic_type_declaration
  460     | expr . "<|" expr
  461     | expr . "|>" expr
  462     | expr . "|>" basic_type_declaration
  476 expr_mtag: expr . '.' "$f" '(' expr ')'
  477          | expr . "?." "$f" '(' expr ')'
  478          | expr . '.' '.' "$f" '(' expr ')'
  479          | expr . '.' "?." "$f" '(' expr ')'
  480          | expr . "as" "$f" '(' expr ')'
  481          | expr . '?' "as" "$f" '(' expr ')'
  482          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 603
    "as"   shift, and go to state 604
    "<<"   shift, and go to state 605
    ">>"   shift, and go to state 606
    "++"   shift, and go to state 607
    "--"   shift, and go to state 608
    "<="   shift, and go to state 609
    ">="   shift, and go to state 610
    "=="   shift, and go to state 611
    "!="   shift, and go to state 612
    "->"   shift, and go to state 613
    "??"   shift, and go to state 614
    "?."   shift, and go to state 615
    "?["   shift, and go to state 616
    "<|"   shift, and go to state 617
    "|>"   shift, and go to state 618
    "<<<"  shift, and go to state 619
    ">>>"  shift, and go to state 620
    "&&"   shift, and go to state 621
    "||"   shift, and go to state 622
    "^^"   shift, and go to state 623
    ".."   shift, and go to state 624
    '?'    shift, and go to state 625
    '|'    shift, and go to state 626
    '^'    shift, and go to state 627
    '&'    shift, and go to state 628
    '<'    shift, and go to state 629
    '>'    shift, and go to state 630
    '-'    shift, and go to state 631
    '+'    shift, and go to state 632
    '*'    shift, and go to state 633
    '/'    shift, and go to state 634
    '%'    shift, and go to state 635
    '.'    shift, and go to state 636
    '['    shift, and go to state 637

    $default  reduce using rule 349 (expr_assign)


State 1096

  339 expr_assign: expr "&=" expr .
  356 expr_method_call: expr . "->" "name" '(' ')'
  357                 | expr . "->" "name" '(' expr_list ')'
  367 expr_field: expr . '.' "name"
  368           | expr . '.' '.' "name"
  369           | expr . '.' "name" '(' ')'
  370           | expr . '.' "name" '(' expr_list ')'
  371           | expr . '.' basic_type_declaration '(' ')'
  372           | expr . '.' basic_type_declaration '(' expr_list ')'
  375           | expr . '.' $@25 error $@26
  397 expr: expr . "<<" expr
  398     | expr . ">>" expr
  399     | expr . "<<<" expr
  400     | expr . ">>>" expr
  401     | expr . '+' expr
  402     | expr . '-' expr
  403     | expr . '*' expr
  404     | expr . '/' expr
  405     | expr . '%' expr
  406     | expr . '<' expr
  407     | expr . '>' expr
  408     | expr . "==" expr
  409     | expr . "!=" expr
  410     | expr . "<=" expr
  411     | expr . ">=" expr
  412     | expr . '&' expr
  413     | expr . '|' expr
  414     | expr . '^' expr
  415     | expr . "&&" expr
  416     | expr . "||" expr
  417     | expr . "^^" expr
  418     | expr . ".." expr
  421     | expr . "++"
  422     | expr . "--"
  424     | expr . '[' expr ']'
  425     | expr . '.' '[' expr ']'
  426     | expr . "?[" expr ']'
  427     | expr . '.' "?[" expr ']'
  428     | expr . "?." "name"
  429     | expr . '.' "?." "name"
  436     | expr . "??" expr
  437     | expr . '?' expr ':' expr
  440     | expr . "is" "type" '<' $@27 type_declaration_no_options '>' $@28
  441     | expr . "is" basic_type_declaration
  442     | expr . "is" "name"
  443     | expr . "as" "name"
  446     | expr . "as" "type" '<' $@29 type_declaration '>' $@30
  447     | expr . "as" basic_type_declaration
  448     | expr . '?' "as" "name"
  451     | expr . '?' "as" "type" '<' $@31 type_declaration '>' $@32
  452     | expr . '?' "as" basic_type_declaration
  460     | expr . "<|" expr
  461     | expr . "|>" expr
  462     | expr . "|>" basic_type_declaration
  476 expr_mtag: expr . '.' "$f" '(' expr ')'
  477          | expr . "?." "$f" '(' expr ')'
  478          | expr . '.' '.' "$f" '(' expr ')'
  479          | expr . '.' "?." "$f" '(' expr ')'
  480          | expr . "as" "$f" '(' expr ')'
  481          | expr . '?' "as" "$f" '(' expr ')'
  482          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 603
    "as"   shift, and go to state 604
    "<<"   shift, and go to state 605
    ">>"   shift, and go to state 606
    "++"   shift, and go to state 607
    "--"   shift, and go to state 608
    "<="   shift, and go to state 609
    ">="   shift, and go to state 610
    "=="   shift, and go to state 611
    "!="   shift, and go to state 612
    "->"   shift, and go to state 613
    "??"   shift, and go to state 614
    "?."   shift, and go to state 615
    "?["   shift, and go to state 616
    "<|"   shift, and go to state 617
    "|>"   shift, and go to state 618
    "<<<"  shift, and go to state 619
    ">>>"  shift, and go to state 620
    "&&"   shift, and go to state 621
    "||"   shift, and go to state 622
    "^^"   shift, and go to state 623
    ".."   shift, and go to state 624
    '?'    shift, and go to state 625
    '|'    shift, and go to state 626
    '^'    shift, and go to state 627
    '&'    shift, and go to state 628
    '<'    shift, and go to state 629
    '>'    shift, and go to state 630
    '-'    shift, and go to state 631
    '+'    shift, and go to state 632
    '*'    shift, and go to state 633
    '/'    shift, and go to state 634
    '%'    shift, and go to state 635
    '.'    shift, and go to state 636
    '['    shift, and go to state 637

    $default  reduce using rule 339 (expr_assign)


State 1097

  340 expr_assign: expr "|=" expr .
  356 expr_method_call: expr . "->" "name" '(' ')'
  357                 | expr . "->" "name" '(' expr_list ')'
  367 expr_field: expr . '.' "name"
  368           | expr . '.' '.' "name"
  369           | expr . '.' "name" '(' ')'
  370           | expr . '.' "name" '(' expr_list ')'
  371           | expr . '.' basic_type_declaration '(' ')'
  372           | expr . '.' basic_type_declaration '(' expr_list ')'
  375           | expr . '.' $@25 error $@26
  397 expr: expr . "<<" expr
  398     | expr . ">>" expr
  399     | expr . "<<<" expr
  400     | expr . ">>>" expr
  401     | expr . '+' expr
  402     | expr . '-' expr
  403     | expr . '*' expr
  404     | expr . '/' expr
  405     | expr . '%' expr
  406     | expr . '<' expr
  407     | expr . '>' expr
  408     | expr . "==" expr
  409     | expr . "!=" expr
  410     | expr . "<=" expr
  411     | expr . ">=" expr
  412     | expr . '&' expr
  413     | expr . '|' expr
  414     | expr . '^' expr
  415     | expr . "&&" expr
  416     | expr . "||" expr
  417     | expr . "^^" expr
  418     | expr . ".." expr
  421     | expr . "++"
  422     | expr . "--"
  424     | expr . '[' expr ']'
  425     | expr . '.' '[' expr ']'
  426     | expr . "?[" expr ']'
  427     | expr . '.' "?[" expr ']'
  428     | expr . "?." "name"
  429     | expr . '.' "?." "name"
  436     | expr . "??" expr
  437     | expr . '?' expr ':' expr
  440     | expr . "is" "type" '<' $@27 type_declaration_no_options '>' $@28
  441     | expr . "is" basic_type_declaration
  442     | expr . "is" "name"
  443     | expr . "as" "name"
  446     | expr . "as" "type" '<' $@29 type_declaration '>' $@30
  447     | expr . "as" basic_type_declaration
  448     | expr . '?' "as" "name"
  451     | expr . '?' "as" "type" '<' $@31 type_declaration '>' $@32
  452     | expr . '?' "as" basic_type_declaration
  460     | expr . "<|" expr
  461     | expr . "|>" expr
  462     | expr . "|>" basic_type_declaration
  476 expr_mtag: expr . '.' "$f" '(' expr ')'
  477          | expr . "?." "$f" '(' expr ')'
  478          | expr . '.' '.' "$f" '(' expr ')'
  479          | expr . '.' "?." "$f" '(' expr ')'
  480          | expr . "as" "$f" '(' expr ')'
  481          | expr . '?' "as" "$f" '(' expr ')'
  482          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 603
    "as"   shift, and go to state 604
    "<<"   shift, and go to state 605
    ">>"   shift, and go to state 606
    "++"   shift, and go to state 607
    "--"   shift, and go to state 608
    "<="   shift, and go to state 609
    ">="   shift, and go to state 610
    "=="   shift, and go to state 611
    "!="   shift, and go to state 612
    "->"   shift, and go to state 613
    "??"   shift, and go to state 614
    "?."   shift, and go to state 615
    "?["   shift, and go to state 616
    "<|"   shift, and go to state 617
    "|>"   shift, and go to state 618
    "<<<"  shift, and go to state 619
    ">>>"  shift, and go to state 620
    "&&"   shift, and go to state 621
    "||"   shift, and go to state 622
    "^^"   shift, and go to state 623
    ".."   shift, and go to state 624
    '?'    shift, and go to state 625
    '|'    shift, and go to state 626
    '^'    shift, and go to state 627
    '&'    shift, and go to state 628
    '<'    shift, and go to state 629
    '>'    shift, and go to state 630
    '-'    shift, and go to state 631
    '+'    shift, and go to state 632
    '*'    shift, and go to state 633
    '/'    shift, and go to state 634
    '%'    shift, and go to state 635
    '.'    shift, and go to state 636
    '['    shift, and go to state 637

    $default  reduce using rule 340 (expr_assign)


State 1098

  341 expr_assign: expr "^=" expr .
  356 expr_method_call: expr . "->" "name" '(' ')'
  357                 | expr . "->" "name" '(' expr_list ')'
  367 expr_field: expr . '.' "name"
  368           | expr . '.' '.' "name"
  369           | expr . '.' "name" '(' ')'
  370           | expr . '.' "name" '(' expr_list ')'
  371           | expr . '.' basic_type_declaration '(' ')'
  372           | expr . '.' basic_type_declaration '(' expr_list ')'
  375           | expr . '.' $@25 error $@26
  397 expr: expr . "<<" expr
  398     | expr . ">>" expr
  399     | expr . "<<<" expr
  400     | expr . ">>>" expr
  401     | expr . '+' expr
  402     | expr . '-' expr
  403     | expr . '*' expr
  404     | expr . '/' expr
  405     | expr . '%' expr
  406     | expr . '<' expr
  407     | expr . '>' expr
  408     | expr . "==" expr
  409     | expr . "!=" expr
  410     | expr . "<=" expr
  411     | expr . ">=" expr
  412     | expr . '&' expr
  413     | expr . '|' expr
  414     | expr . '^' expr
  415     | expr . "&&" expr
  416     | expr . "||" expr
  417     | expr . "^^" expr
  418     | expr . ".." expr
  421     | expr . "++"
  422     | expr . "--"
  424     | expr . '[' expr ']'
  425     | expr . '.' '[' expr ']'
  426     | expr . "?[" expr ']'
  427     | expr . '.' "?[" expr ']'
  428     | expr . "?." "name"
  429     | expr . '.' "?." "name"
  436     | expr . "??" expr
  437     | expr . '?' expr ':' expr
  440     | expr . "is" "type" '<' $@27 type_declaration_no_options '>' $@28
  441     | expr . "is" basic_type_declaration
  442     | expr . "is" "name"
  443     | expr . "as" "name"
  446     | expr . "as" "type" '<' $@29 type_declaration '>' $@30
  447     | expr . "as" basic_type_declaration
  448     | expr . '?' "as" "name"
  451     | expr . '?' "as" "type" '<' $@31 type_declaration '>' $@32
  452     | expr . '?' "as" basic_type_declaration
  460     | expr . "<|" expr
  461     | expr . "|>" expr
  462     | expr . "|>" basic_type_declaration
  476 expr_mtag: expr . '.' "$f" '(' expr ')'
  477          | expr . "?." "$f" '(' expr ')'
  478          | expr . '.' '.' "$f" '(' expr ')'
  479          | expr . '.' "?." "$f" '(' expr ')'
  480          | expr . "as" "$f" '(' expr ')'
  481          | expr . '?' "as" "$f" '(' expr ')'
  482          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 603
    "as"   shift, and go to state 604
    "<<"   shift, and go to state 605
    ">>"   shift, and go to state 606
    "++"   shift, and go to state 607
    "--"   shift, and go to state 608
    "<="   shift, and go to state 609
    ">="   shift, and go to state 610
    "=="   shift, and go to state 611
    "!="   shift, and go to state 612
    "->"   shift, and go to state 613
    "??"   shift, and go to state 614
    "?."   shift, and go to state 615
    "?["   shift, and go to state 616
    "<|"   shift, and go to state 617
    "|>"   shift, and go to state 618
    "<<<"  shift, and go to state 619
    ">>>"  shift, and go to state 620
    "&&"   shift, and go to state 621
    "||"   shift, and go to state 622
    "^^"   shift, and go to state 623
    ".."   shift, and go to state 624
    '?'    shift, and go to state 625
    '|'    shift, and go to state 626
    '^'    shift, and go to state 627
    '&'    shift, and go to state 628
    '<'    shift, and go to state 629
    '>'    shift, and go to state 630
    '-'    shift, and go to state 631
    '+'    shift, and go to state 632
    '*'    shift, and go to state 633
    '/'    shift, and go to state 634
    '%'    shift, and go to state 635
    '.'    shift, and go to state 636
    '['    shift, and go to state 637

    $default  reduce using rule 341 (expr_assign)


State 1099

  350 expr_assign: expr "<<=" expr .
  356 expr_method_call: expr . "->" "name" '(' ')'
  357                 | expr . "->" "name" '(' expr_list ')'
  367 expr_field: expr . '.' "name"
  368           | expr . '.' '.' "name"
  369           | expr . '.' "name" '(' ')'
  370           | expr . '.' "name" '(' expr_list ')'
  371           | expr . '.' basic_type_declaration '(' ')'
  372           | expr . '.' basic_type_declaration '(' expr_list ')'
  375           | expr . '.' $@25 error $@26
  397 expr: expr . "<<" expr
  398     | expr . ">>" expr
  399     | expr . "<<<" expr
  400     | expr . ">>>" expr
  401     | expr . '+' expr
  402     | expr . '-' expr
  403     | expr . '*' expr
  404     | expr . '/' expr
  405     | expr . '%' expr
  406     | expr . '<' expr
  407     | expr . '>' expr
  408     | expr . "==" expr
  409     | expr . "!=" expr
  410     | expr . "<=" expr
  411     | expr . ">=" expr
  412     | expr . '&' expr
  413     | expr . '|' expr
  414     | expr . '^' expr
  415     | expr . "&&" expr
  416     | expr . "||" expr
  417     | expr . "^^" expr
  418     | expr . ".." expr
  421     | expr . "++"
  422     | expr . "--"
  424     | expr . '[' expr ']'
  425     | expr . '.' '[' expr ']'
  426     | expr . "?[" expr ']'
  427     | expr . '.' "?[" expr ']'
  428     | expr . "?." "name"
  429     | expr . '.' "?." "name"
  436     | expr . "??" expr
  437     | expr . '?' expr ':' expr
  440     | expr . "is" "type" '<' $@27 type_declaration_no_options '>' $@28
  441     | expr . "is" basic_type_declaration
  442     | expr . "is" "name"
  443     | expr . "as" "name"
  446     | expr . "as" "type" '<' $@29 type_declaration '>' $@30
  447     | expr . "as" basic_type_declaration
  448     | expr . '?' "as" "name"
  451     | expr . '?' "as" "type" '<' $@31 type_declaration '>' $@32
  452     | expr . '?' "as" basic_type_declaration
  460     | expr . "<|" expr
  461     | expr . "|>" expr
  462     | expr . "|>" basic_type_declaration
  476 expr_mtag: expr . '.' "$f" '(' expr ')'
  477          | expr . "?." "$f" '(' expr ')'
  478          | expr . '.' '.' "$f" '(' expr ')'
  479          | expr . '.' "?." "$f" '(' expr ')'
  480          | expr . "as" "$f" '(' expr ')'
  481          | expr . '?' "as" "$f" '(' expr ')'
  482          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 603
    "as"   shift, and go to state 604
    "<<"   shift, and go to state 605
    ">>"   shift, and go to state 606
    "++"   shift, and go to state 607
    "--"   shift, and go to state 608
    "<="   shift, and go to state 609
    ">="   shift, and go to state 610
    "=="   shift, and go to state 611
    "!="   shift, and go to state 612
    "->"   shift, and go to state 613
    "??"   shift, and go to state 614
    "?."   shift, and go to state 615
    "?["   shift, and go to state 616
    "<|"   shift, and go to state 617
    "|>"   shift, and go to state 618
    "<<<"  shift, and go to state 619
    ">>>"  shift, and go to state 620
    "&&"   shift, and go to state 621
    "||"   shift, and go to state 622
    "^^"   shift, and go to state 623
    ".."   shift, and go to state 624
    '?'    shift, and go to state 625
    '|'    shift, and go to state 626
    '^'    shift, and go to state 627
    '&'    shift, and go to state 628
    '<'    shift, and go to state 629
    '>'    shift, and go to state 630
    '-'    shift, and go to state 631
    '+'    shift, and go to state 632
    '*'    shift, and go to state 633
    '/'    shift, and go to state 634
    '%'    shift, and go to state 635
    '.'    shift, and go to state 636
    '['    shift, and go to state 637

    $default  reduce using rule 350 (expr_assign)


State 1100

  351 expr_assign: expr ">>=" expr .
  356 expr_method_call: expr . "->" "name" '(' ')'
  357                 | expr . "->" "name" '(' expr_list ')'
  367 expr_field: expr . '.' "name"
  368           | expr . '.' '.' "name"
  369           | expr . '.' "name" '(' ')'
  370           | expr . '.' "name" '(' expr_list ')'
  371           | expr . '.' basic_type_declaration '(' ')'
  372           | expr . '.' basic_type_declaration '(' expr_list ')'
  375           | expr . '.' $@25 error $@26
  397 expr: expr . "<<" expr
  398     | expr . ">>" expr
  399     | expr . "<<<" expr
  400     | expr . ">>>" expr
  401     | expr . '+' expr
  402     | expr . '-' expr
  403     | expr . '*' expr
  404     | expr . '/' expr
  405     | expr . '%' expr
  406     | expr . '<' expr
  407     | expr . '>' expr
  408     | expr . "==" expr
  409     | expr . "!=" expr
  410     | expr . "<=" expr
  411     | expr . ">=" expr
  412     | expr . '&' expr
  413     | expr . '|' expr
  414     | expr . '^' expr
  415     | expr . "&&" expr
  416     | expr . "||" expr
  417     | expr . "^^" expr
  418     | expr . ".." expr
  421     | expr . "++"
  422     | expr . "--"
  424     | expr . '[' expr ']'
  425     | expr . '.' '[' expr ']'
  426     | expr . "?[" expr ']'
  427     | expr . '.' "?[" expr ']'
  428     | expr . "?." "name"
  429     | expr . '.' "?." "name"
  436     | expr . "??" expr
  437     | expr . '?' expr ':' expr
  440     | expr . "is" "type" '<' $@27 type_declaration_no_options '>' $@28
  441     | expr . "is" basic_type_declaration
  442     | expr . "is" "name"
  443     | expr . "as" "name"
  446     | expr . "as" "type" '<' $@29 type_declaration '>' $@30
  447     | expr . "as" basic_type_declaration
  448     | expr . '?' "as" "name"
  451     | expr . '?' "as" "type" '<' $@31 type_declaration '>' $@32
  452     | expr . '?' "as" basic_type_declaration
  460     | expr . "<|" expr
  461     | expr . "|>" expr
  462     | expr . "|>" basic_type_declaration
  476 expr_mtag: expr . '.' "$f" '(' expr ')'
  477          | expr . "?." "$f" '(' expr ')'
  478          | expr . '.' '.' "$f" '(' expr ')'
  479          | expr . '.' "?." "$f" '(' expr ')'
  480          | expr . "as" "$f" '(' expr ')'
  481          | expr . '?' "as" "$f" '(' expr ')'
  482          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 603
    "as"   shift, and go to state 604
    "<<"   shift, and go to state 605
    ">>"   shift, and go to state 606
    "++"   shift, and go to state 607
    "--"   shift, and go to state 608
    "<="   shift, and go to state 609
    ">="   shift, and go to state 610
    "=="   shift, and go to state 611
    "!="   shift, and go to state 612
    "->"   shift, and go to state 613
    "??"   shift, and go to state 614
    "?."   shift, and go to state 615
    "?["   shift, and go to state 616
    "<|"   shift, and go to state 617
    "|>"   shift, and go to state 618
    "<<<"  shift, and go to state 619
    ">>>"  shift, and go to state 620
    "&&"   shift, and go to state 621
    "||"   shift, and go to state 622
    "^^"   shift, and go to state 623
    ".."   shift, and go to state 624
    '?'    shift, and go to state 625
    '|'    shift, and go to state 626
    '^'    shift, and go to state 627
    '&'    shift, and go to state 628
    '<'    shift, and go to state 629
    '>'    shift, and go to state 630
    '-'    shift, and go to state 631
    '+'    shift, and go to state 632
    '*'    shift, and go to state 633
    '/'    shift, and go to state 634
    '%'    shift, and go to state 635
    '.'    shift, and go to state 636
    '['    shift, and go to state 637

    $default  reduce using rule 351 (expr_assign)


State 1101

  337 expr_assign: expr "<-" expr .
  356 expr_method_call: expr . "->" "name" '(' ')'
  357                 | expr . "->" "name" '(' expr_list ')'
  367 expr_field: expr . '.' "name"
  368           | expr . '.' '.' "name"
  369           | expr . '.' "name" '(' ')'
  370           | expr . '.' "name" '(' expr_list ')'
  371           | expr . '.' basic_type_declaration '(' ')'
  372           | expr . '.' basic_type_declaration '(' expr_list ')'
  375           | expr . '.' $@25 error $@26
  397 expr: expr . "<<" expr
  398     | expr . ">>" expr
  399     | expr . "<<<" expr
  400     | expr . ">>>" expr
  401     | expr . '+' expr
  402     | expr . '-' expr
  403     | expr . '*' expr
  404     | expr . '/' expr
  405     | expr . '%' expr
  406     | expr . '<' expr
  407     | expr . '>' expr
  408     | expr . "==" expr
  409     | expr . "!=" expr
  410     | expr . "<=" expr
  411     | expr . ">=" expr
  412     | expr . '&' expr
  413     | expr . '|' expr
  414     | expr . '^' expr
  415     | expr . "&&" expr
  416     | expr . "||" expr
  417     | expr . "^^" expr
  418     | expr . ".." expr
  421     | expr . "++"
  422     | expr . "--"
  424     | expr . '[' expr ']'
  425     | expr . '.' '[' expr ']'
  426     | expr . "?[" expr ']'
  427     | expr . '.' "?[" expr ']'
  428     | expr . "?." "name"
  429     | expr . '.' "?." "name"
  436     | expr . "??" expr
  437     | expr . '?' expr ':' expr
  440     | expr . "is" "type" '<' $@27 type_declaration_no_options '>' $@28
  441     | expr . "is" basic_type_declaration
  442     | expr . "is" "name"
  443     | expr . "as" "name"
  446     | expr . "as" "type" '<' $@29 type_declaration '>' $@30
  447     | expr . "as" basic_type_declaration
  448     | expr . '?' "as" "name"
  451     | expr . '?' "as" "type" '<' $@31 type_declaration '>' $@32
  452     | expr . '?' "as" basic_type_declaration
  460     | expr . "<|" expr
  461     | expr . "|>" expr
  462     | expr . "|>" basic_type_declaration
  476 expr_mtag: expr . '.' "$f" '(' expr ')'
  477          | expr . "?." "$f" '(' expr ')'
  478          | expr . '.' '.' "$f" '(' expr ')'
  479          | expr . '.' "?." "$f" '(' expr ')'
  480          | expr . "as" "$f" '(' expr ')'
  481          | expr . '?' "as" "$f" '(' expr ')'
  482          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 603
    "as"   shift, and go to state 604
    "<<"   shift, and go to state 605
    ">>"   shift, and go to state 606
    "++"   shift, and go to state 607
    "--"   shift, and go to state 608
    "<="   shift, and go to state 609
    ">="   shift, and go to state 610
    "=="   shift, and go to state 611
    "!="   shift, and go to state 612
    "->"   shift, and go to state 613
    "??"   shift, and go to state 614
    "?."   shift, and go to state 615
    "?["   shift, and go to state 616
    "<|"   shift, and go to state 617
    "|>"   shift, and go to state 618
    "<<<"  shift, and go to state 619
    ">>>"  shift, and go to state 620
    "&&"   shift, and go to state 621
    "||"   shift, and go to state 622
    "^^"   shift, and go to state 623
    ".."   shift, and go to state 624
    '?'    shift, and go to state 625
    '|'    shift, and go to state 626
    '^'    shift, and go to state 627
    '&'    shift, and go to state 628
    '<'    shift, and go to state 629
    '>'    shift, and go to state 630
    '-'    shift, and go to state 631
    '+'    shift, and go to state 632
    '*'    shift, and go to state 633
    '/'    shift, and go to state 634
    '%'    shift, and go to state 635
    '.'    shift, and go to state 636
    '['    shift, and go to state 637

    $default  reduce using rule 337 (expr_assign)


State 1102

  338 expr_assign: expr ":=" expr .
  356 expr_method_call: expr . "->" "name" '(' ')'
  357                 | expr . "->" "name" '(' expr_list ')'
  367 expr_field: expr . '.' "name"
  368           | expr . '.' '.' "name"
  369           | expr . '.' "name" '(' ')'
  370           | expr . '.' "name" '(' expr_list ')'
  371           | expr . '.' basic_type_declaration '(' ')'
  372           | expr . '.' basic_type_declaration '(' expr_list ')'
  375           | expr . '.' $@25 error $@26
  397 expr: expr . "<<" expr
  398     | expr . ">>" expr
  399     | expr . "<<<" expr
  400     | expr . ">>>" expr
  401     | expr . '+' expr
  402     | expr . '-' expr
  403     | expr . '*' expr
  404     | expr . '/' expr
  405     | expr . '%' expr
  406     | expr . '<' expr
  407     | expr . '>' expr
  408     | expr . "==" expr
  409     | expr . "!=" expr
  410     | expr . "<=" expr
  411     | expr . ">=" expr
  412     | expr . '&' expr
  413     | expr . '|' expr
  414     | expr . '^' expr
  415     | expr . "&&" expr
  416     | expr . "||" expr
  417     | expr . "^^" expr
  418     | expr . ".." expr
  421     | expr . "++"
  422     | expr . "--"
  424     | expr . '[' expr ']'
  425     | expr . '.' '[' expr ']'
  426     | expr . "?[" expr ']'
  427     | expr . '.' "?[" expr ']'
  428     | expr . "?." "name"
  429     | expr . '.' "?." "name"
  436     | expr . "??" expr
  437     | expr . '?' expr ':' expr
  440     | expr . "is" "type" '<' $@27 type_declaration_no_options '>' $@28
  441     | expr . "is" basic_type_declaration
  442     | expr . "is" "name"
  443     | expr . "as" "name"
  446     | expr . "as" "type" '<' $@29 type_declaration '>' $@30
  447     | expr . "as" basic_type_declaration
  448     | expr . '?' "as" "name"
  451     | expr . '?' "as" "type" '<' $@31 type_declaration '>' $@32
  452     | expr . '?' "as" basic_type_declaration
  460     | expr . "<|" expr
  461     | expr . "|>" expr
  462     | expr . "|>" basic_type_declaration
  476 expr_mtag: expr . '.' "$f" '(' expr ')'
  477          | expr . "?." "$f" '(' expr ')'
  478          | expr . '.' '.' "$f" '(' expr ')'
  479          | expr . '.' "?." "$f" '(' expr ')'
  480          | expr . "as" "$f" '(' expr ')'
  481          | expr . '?' "as" "$f" '(' expr ')'
  482          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 603
    "as"   shift, and go to state 604
    "<<"   shift, and go to state 605
    ">>"   shift, and go to state 606
    "++"   shift, and go to state 607
    "--"   shift, and go to state 608
    "<="   shift, and go to state 609
    ">="   shift, and go to state 610
    "=="   shift, and go to state 611
    "!="   shift, and go to state 612
    "->"   shift, and go to state 613
    "??"   shift, and go to state 614
    "?."   shift, and go to state 615
    "?["   shift, and go to state 616
    "<|"   shift, and go to state 617
    "|>"   shift, and go to state 618
    "<<<"  shift, and go to state 619
    ">>>"  shift, and go to state 620
    "&&"   shift, and go to state 621
    "||"   shift, and go to state 622
    "^^"   shift, and go to state 623
    ".."   shift, and go to state 624
    '?'    shift, and go to state 625
    '|'    shift, and go to state 626
    '^'    shift, and go to state 627
    '&'    shift, and go to state 628
    '<'    shift, and go to state 629
    '>'    shift, and go to state 630
    '-'    shift, and go to state 631
    '+'    shift, and go to state 632
    '*'    shift, and go to state 633
    '/'    shift, and go to state 634
    '%'    shift, and go to state 635
    '.'    shift, and go to state 636
    '['    shift, and go to state 637

    $default  reduce using rule 338 (expr_assign)


State 1103

  352 expr_assign: expr "<<<=" expr .
  356 expr_method_call: expr . "->" "name" '(' ')'
  357                 | expr . "->" "name" '(' expr_list ')'
  367 expr_field: expr . '.' "name"
  368           | expr . '.' '.' "name"
  369           | expr . '.' "name" '(' ')'
  370           | expr . '.' "name" '(' expr_list ')'
  371           | expr . '.' basic_type_declaration '(' ')'
  372           | expr . '.' basic_type_declaration '(' expr_list ')'
  375           | expr . '.' $@25 error $@26
  397 expr: expr . "<<" expr
  398     | expr . ">>" expr
  399     | expr . "<<<" expr
  400     | expr . ">>>" expr
  401     | expr . '+' expr
  402     | expr . '-' expr
  403     | expr . '*' expr
  404     | expr . '/' expr
  405     | expr . '%' expr
  406     | expr . '<' expr
  407     | expr . '>' expr
  408     | expr . "==" expr
  409     | expr . "!=" expr
  410     | expr . "<=" expr
  411     | expr . ">=" expr
  412     | expr . '&' expr
  413     | expr . '|' expr
  414     | expr . '^' expr
  415     | expr . "&&" expr
  416     | expr . "||" expr
  417     | expr . "^^" expr
  418     | expr . ".." expr
  421     | expr . "++"
  422     | expr . "--"
  424     | expr . '[' expr ']'
  425     | expr . '.' '[' expr ']'
  426     | expr . "?[" expr ']'
  427     | expr . '.' "?[" expr ']'
  428     | expr . "?." "name"
  429     | expr . '.' "?." "name"
  436     | expr . "??" expr
  437     | expr . '?' expr ':' expr
  440     | expr . "is" "type" '<' $@27 type_declaration_no_options '>' $@28
  441     | expr . "is" basic_type_declaration
  442     | expr . "is" "name"
  443     | expr . "as" "name"
  446     | expr . "as" "type" '<' $@29 type_declaration '>' $@30
  447     | expr . "as" basic_type_declaration
  448     | expr . '?' "as" "name"
  451     | expr . '?' "as" "type" '<' $@31 type_declaration '>' $@32
  452     | expr . '?' "as" basic_type_declaration
  460     | expr . "<|" expr
  461     | expr . "|>" expr
  462     | expr . "|>" basic_type_declaration
  476 expr_mtag: expr . '.' "$f" '(' expr ')'
  477          | expr . "?." "$f" '(' expr ')'
  478          | expr . '.' '.' "$f" '(' expr ')'
  479          | expr . '.' "?." "$f" '(' expr ')'
  480          | expr . "as" "$f" '(' expr ')'
  481          | expr . '?' "as" "$f" '(' expr ')'
  482          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 603
    "as"   shift, and go to state 604
    "<<"   shift, and go to state 605
    ">>"   shift, and go to state 606
    "++"   shift, and go to state 607
    "--"   shift, and go to state 608
    "<="   shift, and go to state 609
    ">="   shift, and go to state 610
    "=="   shift, and go to state 611
    "!="   shift, and go to state 612
    "->"   shift, and go to state 613
    "??"   shift, and go to state 614
    "?."   shift, and go to state 615
    "?["   shift, and go to state 616
    "<|"   shift, and go to state 617
    "|>"   shift, and go to state 618
    "<<<"  shift, and go to state 619
    ">>>"  shift, and go to state 620
    "&&"   shift, and go to state 621
    "||"   shift, and go to state 622
    "^^"   shift, and go to state 623
    ".."   shift, and go to state 624
    '?'    shift, and go to state 625
    '|'    shift, and go to state 626
    '^'    shift, and go to state 627
    '&'    shift, and go to state 628
    '<'    shift, and go to state 629
    '>'    shift, and go to state 630
    '-'    shift, and go to state 631
    '+'    shift, and go to state 632
    '*'    shift, and go to state 633
    '/'    shift, and go to state 634
    '%'    shift, and go to state 635
    '.'    shift, and go to state 636
    '['    shift, and go to state 637

    $default  reduce using rule 352 (expr_assign)


State 1104

  353 expr_assign: expr ">>>=" expr .
  356 expr_method_call: expr . "->" "name" '(' ')'
  357                 | expr . "->" "name" '(' expr_list ')'
  367 expr_field: expr . '.' "name"
  368           | expr . '.' '.' "name"
  369           | expr . '.' "name" '(' ')'
  370           | expr . '.' "name" '(' expr_list ')'
  371           | expr . '.' basic_type_declaration '(' ')'
  372           | expr . '.' basic_type_declaration '(' expr_list ')'
  375           | expr . '.' $@25 error $@26
  397 expr: expr . "<<" expr
  398     | expr . ">>" expr
  399     | expr . "<<<" expr
  400     | expr . ">>>" expr
  401     | expr . '+' expr
  402     | expr . '-' expr
  403     | expr . '*' expr
  404     | expr . '/' expr
  405     | expr . '%' expr
  406     | expr . '<' expr
  407     | expr . '>' expr
  408     | expr . "==" expr
  409     | expr . "!=" expr
  410     | expr . "<=" expr
  411     | expr . ">=" expr
  412     | expr . '&' expr
  413     | expr . '|' expr
  414     | expr . '^' expr
  415     | expr . "&&" expr
  416     | expr . "||" expr
  417     | expr . "^^" expr
  418     | expr . ".." expr
  421     | expr . "++"
  422     | expr . "--"
  424     | expr . '[' expr ']'
  425     | expr . '.' '[' expr ']'
  426     | expr . "?[" expr ']'
  427     | expr . '.' "?[" expr ']'
  428     | expr . "?." "name"
  429     | expr . '.' "?." "name"
  436     | expr . "??" expr
  437     | expr . '?' expr ':' expr
  440     | expr . "is" "type" '<' $@27 type_declaration_no_options '>' $@28
  441     | expr . "is" basic_type_declaration
  442     | expr . "is" "name"
  443     | expr . "as" "name"
  446     | expr . "as" "type" '<' $@29 type_declaration '>' $@30
  447     | expr . "as" basic_type_declaration
  448     | expr . '?' "as" "name"
  451     | expr . '?' "as" "type" '<' $@31 type_declaration '>' $@32
  452     | expr . '?' "as" basic_type_declaration
  460     | expr . "<|" expr
  461     | expr . "|>" expr
  462     | expr . "|>" basic_type_declaration
  476 expr_mtag: expr . '.' "$f" '(' expr ')'
  477          | expr . "?." "$f" '(' expr ')'
  478          | expr . '.' '.' "$f" '(' expr ')'
  479          | expr . '.' "?." "$f" '(' expr ')'
  480          | expr . "as" "$f" '(' expr ')'
  481          | expr . '?' "as" "$f" '(' expr ')'
  482          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 603
    "as"   shift, and go to state 604
    "<<"   shift, and go to state 605
    ">>"   shift, and go to state 606
    "++"   shift, and go to state 607
    "--"   shift, and go to state 608
    "<="   shift, and go to state 609
    ">="   shift, and go to state 610
    "=="   shift, and go to state 611
    "!="   shift, and go to state 612
    "->"   shift, and go to state 613
    "??"   shift, and go to state 614
    "?."   shift, and go to state 615
    "?["   shift, and go to state 616
    "<|"   shift, and go to state 617
    "|>"   shift, and go to state 618
    "<<<"  shift, and go to state 619
    ">>>"  shift, and go to state 620
    "&&"   shift, and go to state 621
    "||"   shift, and go to state 622
    "^^"   shift, and go to state 623
    ".."   shift, and go to state 624
    '?'    shift, and go to state 625
    '|'    shift, and go to state 626
    '^'    shift, and go to state 627
    '&'    shift, and go to state 628
    '<'    shift, and go to state 629
    '>'    shift, and go to state 630
    '-'    shift, and go to state 631
    '+'    shift, and go to state 632
    '*'    shift, and go to state 633
    '/'    shift, and go to state 634
    '%'    shift, and go to state 635
    '.'    shift, and go to state 636
    '['    shift, and go to state 637

    $default  reduce using rule 353 (expr_assign)


State 1105

  342 expr_assign: expr "&&=" expr .
  356 expr_method_call: expr . "->" "name" '(' ')'
  357                 | expr . "->" "name" '(' expr_list ')'
  367 expr_field: expr . '.' "name"
  368           | expr . '.' '.' "name"
  369           | expr . '.' "name" '(' ')'
  370           | expr . '.' "name" '(' expr_list ')'
  371           | expr . '.' basic_type_declaration '(' ')'
  372           | expr . '.' basic_type_declaration '(' expr_list ')'
  375           | expr . '.' $@25 error $@26
  397 expr: expr . "<<" expr
  398     | expr . ">>" expr
  399     | expr . "<<<" expr
  400     | expr . ">>>" expr
  401     | expr . '+' expr
  402     | expr . '-' expr
  403     | expr . '*' expr
  404     | expr . '/' expr
  405     | expr . '%' expr
  406     | expr . '<' expr
  407     | expr . '>' expr
  408     | expr . "==" expr
  409     | expr . "!=" expr
  410     | expr . "<=" expr
  411     | expr . ">=" expr
  412     | expr . '&' expr
  413     | expr . '|' expr
  414     | expr . '^' expr
  415     | expr . "&&" expr
  416     | expr . "||" expr
  417     | expr . "^^" expr
  418     | expr . ".." expr
  421     | expr . "++"
  422     | expr . "--"
  424     | expr . '[' expr ']'
  425     | expr . '.' '[' expr ']'
  426     | expr . "?[" expr ']'
  427     | expr . '.' "?[" expr ']'
  428     | expr . "?." "name"
  429     | expr . '.' "?." "name"
  436     | expr . "??" expr
  437     | expr . '?' expr ':' expr
  440     | expr . "is" "type" '<' $@27 type_declaration_no_options '>' $@28
  441     | expr . "is" basic_type_declaration
  442     | expr . "is" "name"
  443     | expr . "as" "name"
  446     | expr . "as" "type" '<' $@29 type_declaration '>' $@30
  447     | expr . "as" basic_type_declaration
  448     | expr . '?' "as" "name"
  451     | expr . '?' "as" "type" '<' $@31 type_declaration '>' $@32
  452     | expr . '?' "as" basic_type_declaration
  460     | expr . "<|" expr
  461     | expr . "|>" expr
  462     | expr . "|>" basic_type_declaration
  476 expr_mtag: expr . '.' "$f" '(' expr ')'
  477          | expr . "?." "$f" '(' expr ')'
  478          | expr . '.' '.' "$f" '(' expr ')'
  479          | expr . '.' "?." "$f" '(' expr ')'
  480          | expr . "as" "$f" '(' expr ')'
  481          | expr . '?' "as" "$f" '(' expr ')'
  482          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 603
    "as"   shift, and go to state 604
    "<<"   shift, and go to state 605
    ">>"   shift, and go to state 606
    "++"   shift, and go to state 607
    "--"   shift, and go to state 608
    "<="   shift, and go to state 609
    ">="   shift, and go to state 610
    "=="   shift, and go to state 611
    "!="   shift, and go to state 612
    "->"   shift, and go to state 613
    "??"   shift, and go to state 614
    "?."   shift, and go to state 615
    "?["   shift, and go to state 616
    "<|"   shift, and go to state 617
    "|>"   shift, and go to state 618
    "<<<"  shift, and go to state 619
    ">>>"  shift, and go to state 620
    "&&"   shift, and go to state 621
    "||"   shift, and go to state 622
    "^^"   shift, and go to state 623
    ".."   shift, and go to state 624
    '?'    shift, and go to state 625
    '|'    shift, and go to state 626
    '^'    shift, and go to state 627
    '&'    shift, and go to state 628
    '<'    shift, and go to state 629
    '>'    shift, and go to state 630
    '-'    shift, and go to state 631
    '+'    shift, and go to state 632
    '*'    shift, and go to state 633
    '/'    shift, and go to state 634
    '%'    shift, and go to state 635
    '.'    shift, and go to state 636
    '['    shift, and go to state 637

    $default  reduce using rule 342 (expr_assign)


State 1106

  343 expr_assign: expr "||=" expr .
  356 expr_method_call: expr . "->" "name" '(' ')'
  357                 | expr . "->" "name" '(' expr_list ')'
  367 expr_field: expr . '.' "name"
  368           | expr . '.' '.' "name"
  369           | expr . '.' "name" '(' ')'
  370           | expr . '.' "name" '(' expr_list ')'
  371           | expr . '.' basic_type_declaration '(' ')'
  372           | expr . '.' basic_type_declaration '(' expr_list ')'
  375           | expr . '.' $@25 error $@26
  397 expr: expr . "<<" expr
  398     | expr . ">>" expr
  399     | expr . "<<<" expr
  400     | expr . ">>>" expr
  401     | expr . '+' expr
  402     | expr . '-' expr
  403     | expr . '*' expr
  404     | expr . '/' expr
  405     | expr . '%' expr
  406     | expr . '<' expr
  407     | expr . '>' expr
  408     | expr . "==" expr
  409     | expr . "!=" expr
  410     | expr . "<=" expr
  411     | expr . ">=" expr
  412     | expr . '&' expr
  413     | expr . '|' expr
  414     | expr . '^' expr
  415     | expr . "&&" expr
  416     | expr . "||" expr
  417     | expr . "^^" expr
  418     | expr . ".." expr
  421     | expr . "++"
  422     | expr . "--"
  424     | expr . '[' expr ']'
  425     | expr . '.' '[' expr ']'
  426     | expr . "?[" expr ']'
  427     | expr . '.' "?[" expr ']'
  428     | expr . "?." "name"
  429     | expr . '.' "?." "name"
  436     | expr . "??" expr
  437     | expr . '?' expr ':' expr
  440     | expr . "is" "type" '<' $@27 type_declaration_no_options '>' $@28
  441     | expr . "is" basic_type_declaration
  442     | expr . "is" "name"
  443     | expr . "as" "name"
  446     | expr . "as" "type" '<' $@29 type_declaration '>' $@30
  447     | expr . "as" basic_type_declaration
  448     | expr . '?' "as" "name"
  451     | expr . '?' "as" "type" '<' $@31 type_declaration '>' $@32
  452     | expr . '?' "as" basic_type_declaration
  460     | expr . "<|" expr
  461     | expr . "|>" expr
  462     | expr . "|>" basic_type_declaration
  476 expr_mtag: expr . '.' "$f" '(' expr ')'
  477          | expr . "?." "$f" '(' expr ')'
  478          | expr . '.' '.' "$f" '(' expr ')'
  479          | expr . '.' "?." "$f" '(' expr ')'
  480          | expr . "as" "$f" '(' expr ')'
  481          | expr . '?' "as" "$f" '(' expr ')'
  482          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 603
    "as"   shift, and go to state 604
    "<<"   shift, and go to state 605
    ">>"   shift, and go to state 606
    "++"   shift, and go to state 607
    "--"   shift, and go to state 608
    "<="   shift, and go to state 609
    ">="   shift, and go to state 610
    "=="   shift, and go to state 611
    "!="   shift, and go to state 612
    "->"   shift, and go to state 613
    "??"   shift, and go to state 614
    "?."   shift, and go to state 615
    "?["   shift, and go to state 616
    "<|"   shift, and go to state 617
    "|>"   shift, and go to state 618
    "<<<"  shift, and go to state 619
    ">>>"  shift, and go to state 620
    "&&"   shift, and go to state 621
    "||"   shift, and go to state 622
    "^^"   shift, and go to state 623
    ".."   shift, and go to state 624
    '?'    shift, and go to state 625
    '|'    shift, and go to state 626
    '^'    shift, and go to state 627
    '&'    shift, and go to state 628
    '<'    shift, and go to state 629
    '>'    shift, and go to state 630
    '-'    shift, and go to state 631
    '+'    shift, and go to state 632
    '*'    shift, and go to state 633
    '/'    shift, and go to state 634
    '%'    shift, and go to state 635
    '.'    shift, and go to state 636
    '['    shift, and go to state 637

    $default  reduce using rule 343 (expr_assign)


State 1107

  344 expr_assign: expr "^^=" expr .
  356 expr_method_call: expr . "->" "name" '(' ')'
  357                 | expr . "->" "name" '(' expr_list ')'
  367 expr_field: expr . '.' "name"
  368           | expr . '.' '.' "name"
  369           | expr . '.' "name" '(' ')'
  370           | expr . '.' "name" '(' expr_list ')'
  371           | expr . '.' basic_type_declaration '(' ')'
  372           | expr . '.' basic_type_declaration '(' expr_list ')'
  375           | expr . '.' $@25 error $@26
  397 expr: expr . "<<" expr
  398     | expr . ">>" expr
  399     | expr . "<<<" expr
  400     | expr . ">>>" expr
  401     | expr . '+' expr
  402     | expr . '-' expr
  403     | expr . '*' expr
  404     | expr . '/' expr
  405     | expr . '%' expr
  406     | expr . '<' expr
  407     | expr . '>' expr
  408     | expr . "==" expr
  409     | expr . "!=" expr
  410     | expr . "<=" expr
  411     | expr . ">=" expr
  412     | expr . '&' expr
  413     | expr . '|' expr
  414     | expr . '^' expr
  415     | expr . "&&" expr
  416     | expr . "||" expr
  417     | expr . "^^" expr
  418     | expr . ".." expr
  421     | expr . "++"
  422     | expr . "--"
  424     | expr . '[' expr ']'
  425     | expr . '.' '[' expr ']'
  426     | expr . "?[" expr ']'
  427     | expr . '.' "?[" expr ']'
  428     | expr . "?." "name"
  429     | expr . '.' "?." "name"
  436     | expr . "??" expr
  437     | expr . '?' expr ':' expr
  440     | expr . "is" "type" '<' $@27 type_declaration_no_options '>' $@28
  441     | expr . "is" basic_type_declaration
  442     | expr . "is" "name"
  443     | expr . "as" "name"
  446     | expr . "as" "type" '<' $@29 type_declaration '>' $@30
  447     | expr . "as" basic_type_declaration
  448     | expr . '?' "as" "name"
  451     | expr . '?' "as" "type" '<' $@31 type_declaration '>' $@32
  452     | expr . '?' "as" basic_type_declaration
  460     | expr . "<|" expr
  461     | expr . "|>" expr
  462     | expr . "|>" basic_type_declaration
  476 expr_mtag: expr . '.' "$f" '(' expr ')'
  477          | expr . "?." "$f" '(' expr ')'
  478          | expr . '.' '.' "$f" '(' expr ')'
  479          | expr . '.' "?." "$f" '(' expr ')'
  480          | expr . "as" "$f" '(' expr ')'
  481          | expr . '?' "as" "$f" '(' expr ')'
  482          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 603
    "as"   shift, and go to state 604
    "<<"   shift, and go to state 605
    ">>"   shift, and go to state 606
    "++"   shift, and go to state 607
    "--"   shift, and go to state 608
    "<="   shift, and go to state 609
    ">="   shift, and go to state 610
    "=="   shift, and go to state 611
    "!="   shift, and go to state 612
    "->"   shift, and go to state 613
    "??"   shift, and go to state 614
    "?."   shift, and go to state 615
    "?["   shift, and go to state 616
    "<|"   shift, and go to state 617
    "|>"   shift, and go to state 618
    "<<<"  shift, and go to state 619
    ">>>"  shift, and go to state 620
    "&&"   shift, and go to state 621
    "||"   shift, and go to state 622
    "^^"   shift, and go to state 623
    ".."   shift, and go to state 624
    '?'    shift, and go to state 625
    '|'    shift, and go to state 626
    '^'    shift, and go to state 627
    '&'    shift, and go to state 628
    '<'    shift, and go to state 629
    '>'    shift, and go to state 630
    '-'    shift, and go to state 631
    '+'    shift, and go to state 632
    '*'    shift, and go to state 633
    '/'    shift, and go to state 634
    '%'    shift, and go to state 635
    '.'    shift, and go to state 636
    '['    shift, and go to state 637

    $default  reduce using rule 344 (expr_assign)


State 1108

  336 expr_assign: expr '=' expr .
  356 expr_method_call: expr . "->" "name" '(' ')'
  357                 | expr . "->" "name" '(' expr_list ')'
  367 expr_field: expr . '.' "name"
  368           | expr . '.' '.' "name"
  369           | expr . '.' "name" '(' ')'
  370           | expr . '.' "name" '(' expr_list ')'
  371           | expr . '.' basic_type_declaration '(' ')'
  372           | expr . '.' basic_type_declaration '(' expr_list ')'
  375           | expr . '.' $@25 error $@26
  397 expr: expr . "<<" expr
  398     | expr . ">>" expr
  399     | expr . "<<<" expr
  400     | expr . ">>>" expr
  401     | expr . '+' expr
  402     | expr . '-' expr
  403     | expr . '*' expr
  404     | expr . '/' expr
  405     | expr . '%' expr
  406     | expr . '<' expr
  407     | expr . '>' expr
  408     | expr . "==" expr
  409     | expr . "!=" expr
  410     | expr . "<=" expr
  411     | expr . ">=" expr
  412     | expr . '&' expr
  413     | expr . '|' expr
  414     | expr . '^' expr
  415     | expr . "&&" expr
  416     | expr . "||" expr
  417     | expr . "^^" expr
  418     | expr . ".." expr
  421     | expr . "++"
  422     | expr . "--"
  424     | expr . '[' expr ']'
  425     | expr . '.' '[' expr ']'
  426     | expr . "?[" expr ']'
  427     | expr . '.' "?[" expr ']'
  428     | expr . "?." "name"
  429     | expr . '.' "?." "name"
  436     | expr . "??" expr
  437     | expr . '?' expr ':' expr
  440     | expr . "is" "type" '<' $@27 type_declaration_no_options '>' $@28
  441     | expr . "is" basic_type_declaration
  442     | expr . "is" "name"
  443     | expr . "as" "name"
  446     | expr . "as" "type" '<' $@29 type_declaration '>' $@30
  447     | expr . "as" basic_type_declaration
  448     | expr . '?' "as" "name"
  451     | expr . '?' "as" "type" '<' $@31 type_declaration '>' $@32
  452     | expr . '?' "as" basic_type_declaration
  460     | expr . "<|" expr
  461     | expr . "|>" expr
  462     | expr . "|>" basic_type_declaration
  476 expr_mtag: expr . '.' "$f" '(' expr ')'
  477          | expr . "?." "$f" '(' expr ')'
  478          | expr . '.' '.' "$f" '(' expr ')'
  479          | expr . '.' "?." "$f" '(' expr ')'
  480          | expr . "as" "$f" '(' expr ')'
  481          | expr . '?' "as" "$f" '(' expr ')'
  482          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 603
    "as"   shift, and go to state 604
    "<<"   shift, and go to state 605
    ">>"   shift, and go to state 606
    "++"   shift, and go to state 607
    "--"   shift, and go to state 608
    "<="   shift, and go to state 609
    ">="   shift, and go to state 610
    "=="   shift, and go to state 611
    "!="   shift, and go to state 612
    "->"   shift, and go to state 613
    "??"   shift, and go to state 614
    "?."   shift, and go to state 615
    "?["   shift, and go to state 616
    "<|"   shift, and go to state 617
    "|>"   shift, and go to state 618
    "<<<"  shift, and go to state 619
    ">>>"  shift, and go to state 620
    "&&"   shift, and go to state 621
    "||"   shift, and go to state 622
    "^^"   shift, and go to state 623
    ".."   shift, and go to state 624
    '?'    shift, and go to state 625
    '|'    shift, and go to state 626
    '^'    shift, and go to state 627
    '&'    shift, and go to state 628
    '<'    shift, and go to state 629
    '>'    shift, and go to state 630
    '-'    shift, and go to state 631
    '+'    shift, and go to state 632
    '*'    shift, and go to state 633
    '/'    shift, and go to state 634
    '%'    shift, and go to state 635
    '.'    shift, and go to state 636
    '['    shift, and go to state 637

    $default  reduce using rule 336 (expr_assign)


State 1109

  562 enum_expression: "name" '=' . expr

    "struct"                          shift, and go to state 414
    "class"                           shift, and go to state 415
    "true"                            shift, and go to state 416
    "false"                           shift, and go to state 417
    "new"                             shift, and go to state 418
    "typeinfo"                        shift, and go to state 419
    "type"                            shift, and go to state 420
    "array"                           shift, and go to state 421
    "null"                            shift, and go to state 422
    "table"                           shift, and go to state 423
    "deref"                           shift, and go to state 424
    "cast"                            shift, and go to state 425
    "upcast"                          shift, and go to state 426
    "addr"                            shift, and go to state 427
    "reinterpret"                     shift, and go to state 428
    "unsafe"                          shift, and go to state 429
    "fixed_array"                     shift, and go to state 430
    "default"                         shift, and go to state 431
    "bool"                            shift, and go to state 228
    "void"                            shift, and go to state 229
    "string"                          shift, and go to state 230
    "int"                             shift, and go to state 232
    "int2"                            shift, and go to state 233
    "int3"                            shift, and go to state 234
    "int4"                            shift, and go to state 235
    "uint"                            shift, and go to state 236
    "bitfield"                        shift, and go to state 432
    "uint2"                           shift, and go to state 238
    "uint3"                           shift, and go to state 239
    "uint4"                           shift, and go to state 240
    "float"                           shift, and go to state 241
    "float2"                          shift, and go to state 242
    "float3"                          shift, and go to state 243
    "float4"                          shift, and go to state 244
    "range"                           shift, and go to state 245
    "urange"                          shift, and go to state 246
    "range64"                         shift, and go to state 247
    "urange64"                        shift, and go to state 248
    "int64"                           shift, and go to state 250
    "uint64"                          shift, and go to state 251
    "double"                          shift, and go to state 252
    "int8"                            shift, and go to state 255
    "uint8"                           shift, and go to state 256
    "int16"                           shift, and go to state 257
    "uint16"                          shift, and go to state 258
    "tuple"                           shift, and go to state 433
    "variant"                         shift, and go to state 434
    "generator"                       shift, and go to state 435
    "++"                              shift, and go to state 436
    "--"                              shift, and go to state 437
    "::"                              shift, and go to state 55
    "$$"                              shift, and go to state 438
    "$i"                              shift, and go to state 439
    "$v"                              shift, and go to state 440
    "$b"                              shift, and go to state 441
    "$a"                              shift, and go to state 442
    "$c"                              shift, and go to state 443
    "..."                             shift, and go to state 444
    "integer constant"                shift, and go to state 445
    "long integer constant"           shift, and go to state 446
    "unsigned integer constant"       shift, and go to state 447
    "unsigned long integer constant"  shift, and go to state 448
    "unsigned int8 constant"          shift, and go to state 449
    "floating point constant"         shift, and go to state 450
    "double constant"                 shift, and go to state 451
    "name"                            shift, and go to state 56
    "start of the string"             shift, and go to state 452
    '-'                               shift, and go to state 453
    '+'                               shift, and go to state 454
    '*'                               shift, and go to state 455
    '%'                               shift, and go to state 13
    '~'                               shift, and go to state 456
    '!'                               shift, and go to state 457
    '['                               shift, and go to state 458
    '('                               shift, and go to state 459
    '$'                               shift, and go to state 460
    '@'                               shift, and go to state 461
    '{'                               shift, and go to state 462

    string_builder          go to state 463
    expr_reader             go to state 464
    expr_call_pipe          go to state 465
    name_in_namespace       go to state 466
    expr_new                go to state 467
    expr_cast               go to state 468
    expr_type_decl          go to state 469
    expr_type_info          go to state 470
    block_or_lambda         go to state 471
    expr_full_block         go to state 472
    expr_numeric_const      go to state 473
    expr_named_call         go to state 474
    expr_method_call        go to state 475
    func_addr_expr          go to state 476
    expr_field              go to state 477
    expr_call               go to state 478
    expr                    go to state 1221
    expr_generator          go to state 480
    expr_mtag               go to state 481
    basic_type_declaration  go to state 482
    make_decl               go to state 483
    make_struct_decl        go to state 484
    make_tuple_call         go to state 485
    make_dim_decl           go to state 486
    make_table_decl         go to state 487
    array_comprehension     go to state 488


State 1110

  564 commas: commas . ','
  567 enum_list: enum_list commas . enum_expression
  581 optional_commas: commas .

    "name"  shift, and go to state 935
    ','     shift, and go to state 271

    $default  reduce using rule 581 (optional_commas)

    enum_expression  go to state 1222


State 1111

  585 enum_declaration: optional_annotation_list "enum" $@39 optional_public_or_private_enum enum_name optional_enum_basic_type_declaration optional_commas '{' $@40 enum_list optional_commas . $@41 '}'

    $default  reduce using rule 584 ($@41)

    $@41  go to state 1223


State 1112

  492 optional_public_or_private_member_variable: "public" .

    $default  reduce using rule 492 (optional_public_or_private_member_variable)


State 1113

  493 optional_public_or_private_member_variable: "private" .

    $default  reduce using rule 493 (optional_public_or_private_member_variable)


State 1114

  501 struct_variable_declaration_list: struct_variable_declaration_list optional_annotation_list "def" optional_public_or_private_member_variable . "abstract" optional_constant $@34 function_declaration_header ';'
  503                                 | struct_variable_declaration_list optional_annotation_list "def" optional_public_or_private_member_variable . optional_static_member_variable optional_override optional_constant $@35 function_declaration_header expression_block

    "abstract"  shift, and go to state 1224
    "static"    shift, and go to state 1115

    $default  reduce using rule 494 (optional_static_member_variable)

    optional_static_member_variable  go to state 1225


State 1115

  495 optional_static_member_variable: "static" .

    $default  reduce using rule 495 (optional_static_member_variable)


State 1116

  496 structure_variable_declaration: optional_field_annotation optional_static_member_variable . optional_override optional_public_or_private_member_variable variable_declaration

    "override"  shift, and go to state 1226
    "sealed"    shift, and go to state 1227

    $default  reduce using rule 486 (optional_override)

    optional_override  go to state 1228


State 1117

  499 struct_variable_declaration_list: struct_variable_declaration_list $@33 structure_variable_declaration ';' .

    $default  reduce using rule 499 (struct_variable_declaration_list)


State 1118

  534 let_variable_name_with_pos_list: "$i" '(' expr ')' .

    $default  reduce using rule 534 (let_variable_name_with_pos_list)


State 1119

  537 let_variable_name_with_pos_list: let_variable_name_with_pos_list ',' "name" "aka" . "name"

    "name"  shift, and go to state 1229


State 1120

  543 let_variable_declaration: let_variable_name_with_pos_list ':' type_declaration_no_options ';' .

    $default  reduce using rule 543 (let_variable_declaration)


State 1121

  544 let_variable_declaration: let_variable_name_with_pos_list ':' type_declaration_no_options copy_or_move_or_clone . expr ';'

    "struct"                          shift, and go to state 414
    "class"                           shift, and go to state 415
    "true"                            shift, and go to state 416
    "false"                           shift, and go to state 417
    "new"                             shift, and go to state 418
    "typeinfo"                        shift, and go to state 419
    "type"                            shift, and go to state 420
    "array"                           shift, and go to state 421
    "null"                            shift, and go to state 422
    "table"                           shift, and go to state 423
    "deref"                           shift, and go to state 424
    "cast"                            shift, and go to state 425
    "upcast"                          shift, and go to state 426
    "addr"                            shift, and go to state 427
    "reinterpret"                     shift, and go to state 428
    "unsafe"                          shift, and go to state 429
    "fixed_array"                     shift, and go to state 430
    "default"                         shift, and go to state 431
    "bool"                            shift, and go to state 228
    "void"                            shift, and go to state 229
    "string"                          shift, and go to state 230
    "int"                             shift, and go to state 232
    "int2"                            shift, and go to state 233
    "int3"                            shift, and go to state 234
    "int4"                            shift, and go to state 235
    "uint"                            shift, and go to state 236
    "bitfield"                        shift, and go to state 432
    "uint2"                           shift, and go to state 238
    "uint3"                           shift, and go to state 239
    "uint4"                           shift, and go to state 240
    "float"                           shift, and go to state 241
    "float2"                          shift, and go to state 242
    "float3"                          shift, and go to state 243
    "float4"                          shift, and go to state 244
    "range"                           shift, and go to state 245
    "urange"                          shift, and go to state 246
    "range64"                         shift, and go to state 247
    "urange64"                        shift, and go to state 248
    "int64"                           shift, and go to state 250
    "uint64"                          shift, and go to state 251
    "double"                          shift, and go to state 252
    "int8"                            shift, and go to state 255
    "uint8"                           shift, and go to state 256
    "int16"                           shift, and go to state 257
    "uint16"                          shift, and go to state 258
    "tuple"                           shift, and go to state 433
    "variant"                         shift, and go to state 434
    "generator"                       shift, and go to state 435
    "++"                              shift, and go to state 436
    "--"                              shift, and go to state 437
    "::"                              shift, and go to state 55
    "$$"                              shift, and go to state 438
    "$i"                              shift, and go to state 439
    "$v"                              shift, and go to state 440
    "$b"                              shift, and go to state 441
    "$a"                              shift, and go to state 442
    "$c"                              shift, and go to state 443
    "..."                             shift, and go to state 444
    "integer constant"                shift, and go to state 445
    "long integer constant"           shift, and go to state 446
    "unsigned integer constant"       shift, and go to state 447
    "unsigned long integer constant"  shift, and go to state 448
    "unsigned int8 constant"          shift, and go to state 449
    "floating point constant"         shift, and go to state 450
    "double constant"                 shift, and go to state 451
    "name"                            shift, and go to state 56
    "start of the string"             shift, and go to state 452
    '-'                               shift, and go to state 453
    '+'                               shift, and go to state 454
    '*'                               shift, and go to state 455
    '%'                               shift, and go to state 13
    '~'                               shift, and go to state 456
    '!'                               shift, and go to state 457
    '['                               shift, and go to state 458
    '('                               shift, and go to state 459
    '$'                               shift, and go to state 460
    '@'                               shift, and go to state 461
    '{'                               shift, and go to state 462

    string_builder          go to state 463
    expr_reader             go to state 464
    expr_call_pipe          go to state 465
    name_in_namespace       go to state 466
    expr_new                go to state 467
    expr_cast               go to state 468
    expr_type_decl          go to state 469
    expr_type_info          go to state 470
    block_or_lambda         go to state 471
    expr_full_block         go to state 472
    expr_numeric_const      go to state 473
    expr_named_call         go to state 474
    expr_method_call        go to state 475
    func_addr_expr          go to state 476
    expr_field              go to state 477
    expr_call               go to state 478
    expr                    go to state 1230
    expr_generator          go to state 480
    expr_mtag               go to state 481
    basic_type_declaration  go to state 482
    make_decl               go to state 483
    make_struct_decl        go to state 484
    make_tuple_call         go to state 485
    make_dim_decl           go to state 486
    make_table_decl         go to state 487
    array_comprehension     go to state 488


State 1122

  356 expr_method_call: expr . "->" "name" '(' ')'
  357                 | expr . "->" "name" '(' expr_list ')'
  367 expr_field: expr . '.' "name"
  368           | expr . '.' '.' "name"
  369           | expr . '.' "name" '(' ')'
  370           | expr . '.' "name" '(' expr_list ')'
  371           | expr . '.' basic_type_declaration '(' ')'
  372           | expr . '.' basic_type_declaration '(' expr_list ')'
  375           | expr . '.' $@25 error $@26
  397 expr: expr . "<<" expr
  398     | expr . ">>" expr
  399     | expr . "<<<" expr
  400     | expr . ">>>" expr
  401     | expr . '+' expr
  402     | expr . '-' expr
  403     | expr . '*' expr
  404     | expr . '/' expr
  405     | expr . '%' expr
  406     | expr . '<' expr
  407     | expr . '>' expr
  408     | expr . "==" expr
  409     | expr . "!=" expr
  410     | expr . "<=" expr
  411     | expr . ">=" expr
  412     | expr . '&' expr
  413     | expr . '|' expr
  414     | expr . '^' expr
  415     | expr . "&&" expr
  416     | expr . "||" expr
  417     | expr . "^^" expr
  418     | expr . ".." expr
  421     | expr . "++"
  422     | expr . "--"
  424     | expr . '[' expr ']'
  425     | expr . '.' '[' expr ']'
  426     | expr . "?[" expr ']'
  427     | expr . '.' "?[" expr ']'
  428     | expr . "?." "name"
  429     | expr . '.' "?." "name"
  436     | expr . "??" expr
  437     | expr . '?' expr ':' expr
  440     | expr . "is" "type" '<' $@27 type_declaration_no_options '>' $@28
  441     | expr . "is" basic_type_declaration
  442     | expr . "is" "name"
  443     | expr . "as" "name"
  446     | expr . "as" "type" '<' $@29 type_declaration '>' $@30
  447     | expr . "as" basic_type_declaration
  448     | expr . '?' "as" "name"
  451     | expr . '?' "as" "type" '<' $@31 type_declaration '>' $@32
  452     | expr . '?' "as" basic_type_declaration
  460     | expr . "<|" expr
  461     | expr . "|>" expr
  462     | expr . "|>" basic_type_declaration
  476 expr_mtag: expr . '.' "$f" '(' expr ')'
  477          | expr . "?." "$f" '(' expr ')'
  478          | expr . '.' '.' "$f" '(' expr ')'
  479          | expr . '.' "?." "$f" '(' expr ')'
  480          | expr . "as" "$f" '(' expr ')'
  481          | expr . '?' "as" "$f" '(' expr ')'
  482          | expr . "is" "$f" '(' expr ')'
  545 let_variable_declaration: let_variable_name_with_pos_list optional_ref copy_or_move_or_clone expr . ';'

    "is"   shift, and go to state 603
    "as"   shift, and go to state 604
    "<<"   shift, and go to state 605
    ">>"   shift, and go to state 606
    "++"   shift, and go to state 607
    "--"   shift, and go to state 608
    "<="   shift, and go to state 609
    ">="   shift, and go to state 610
    "=="   shift, and go to state 611
    "!="   shift, and go to state 612
    "->"   shift, and go to state 613
    "??"   shift, and go to state 614
    "?."   shift, and go to state 615
    "?["   shift, and go to state 616
    "<|"   shift, and go to state 617
    "|>"   shift, and go to state 618
    "<<<"  shift, and go to state 619
    ">>>"  shift, and go to state 620
    "&&"   shift, and go to state 621
    "||"   shift, and go to state 622
    "^^"   shift, and go to state 623
    ".."   shift, and go to state 624
    '?'    shift, and go to state 625
    '|'    shift, and go to state 626
    '^'    shift, and go to state 627
    '&'    shift, and go to state 628
    '<'    shift, and go to state 629
    '>'    shift, and go to state 630
    '-'    shift, and go to state 631
    '+'    shift, and go to state 632
    '*'    shift, and go to state 633
    '/'    shift, and go to state 634
    '%'    shift, and go to state 635
    '.'    shift, and go to state 636
    '['    shift, and go to state 637
    ';'    shift, and go to state 1231


State 1123

  547 global_let_variable_declaration: global_let_variable_name_with_pos_list ':' type_declaration_no_options copy_or_move_or_clone expr ';' .

    $default  reduce using rule 547 (global_let_variable_declaration)


State 1124

  769 make_struct_decl: "struct" '<' $@85 type_declaration_no_options '>' . $@86 '(' use_initializer optional_make_struct_dim_decl ')'

    $default  reduce using rule 768 ($@86)

    $@86  go to state 1232


State 1125

  772 make_struct_decl: "class" '<' $@87 type_declaration_no_options '>' . $@88 '(' use_initializer optional_make_struct_dim_decl ')'

    $default  reduce using rule 771 ($@88)

    $@88  go to state 1233


State 1126

  263 new_type_declaration: '<' $@11 type_declaration '>' . $@12

    $default  reduce using rule 262 ($@12)

    $@12  go to state 1234


State 1127

  269 expr_new: "new" new_type_declaration '(' "uninitialized" make_struct_single . ')'

    ')'  shift, and go to state 1235


State 1128

  267 expr_new: "new" new_type_declaration '(' expr_list ')' .

    $default  reduce using rule 267 (expr_new)


State 1129

  268 expr_new: "new" new_type_declaration '(' make_struct_single ')' .

    $default  reduce using rule 268 (expr_new)


State 1130

  266 expr_new: "new" new_type_declaration '(' use_initializer ')' .

    $default  reduce using rule 266 (expr_new)


State 1131

  306 expr_type_info: "typeinfo" name_in_namespace '<' "name" '>' . '(' expr ')'

    '('  shift, and go to state 1236


State 1132

  307 expr_type_info: "typeinfo" name_in_namespace '<' "name" c_or_s . "name" '>' '(' expr ')'

    "name"  shift, and go to state 1237


State 1133

  305 expr_type_info: "typeinfo" name_in_namespace '(' expr ')' .

    $default  reduce using rule 305 (expr_type_info)


State 1134

  304 expr_type_decl: "type" '<' $@19 type_declaration '>' . $@20

    $default  reduce using rule 303 ($@20)

    $@20  go to state 1238


State 1135

  788 make_dim_decl: "array" "struct" '<' $@95 type_declaration_no_options . '>' $@96 '(' use_initializer optional_make_struct_dim_decl ')'

    '>'  shift, and go to state 1239


State 1136

  791 make_dim_decl: "array" "tuple" '<' $@97 type_declaration_no_options . '>' $@98 '(' use_initializer optional_make_struct_dim_decl ')'

    '>'  shift, and go to state 1240


State 1137

  794 make_dim_decl: "array" "variant" '<' $@99 type_declaration_no_options . '>' $@100 '(' make_variant_dim ')'

    '>'  shift, and go to state 1241


State 1138

  798 make_dim_decl: "array" '<' $@101 type_declaration_no_options '>' . $@102 '(' optional_expr_list ')'

    $default  reduce using rule 797 ($@102)

    $@102  go to state 1242


State 1139

  795 make_dim_decl: "array" '(' expr_list optional_comma ')' .

    $default  reduce using rule 795 (make_dim_decl)


State 1140

  807 make_table_decl: "table" '<' type_declaration_no_options '>' '(' . optional_expr_map_tuple_list ')'

    "struct"                          shift, and go to state 414
    "class"                           shift, and go to state 415
    "true"                            shift, and go to state 416
    "false"                           shift, and go to state 417
    "new"                             shift, and go to state 418
    "typeinfo"                        shift, and go to state 419
    "type"                            shift, and go to state 420
    "array"                           shift, and go to state 421
    "null"                            shift, and go to state 422
    "table"                           shift, and go to state 423
    "deref"                           shift, and go to state 424
    "cast"                            shift, and go to state 425
    "upcast"                          shift, and go to state 426
    "addr"                            shift, and go to state 427
    "reinterpret"                     shift, and go to state 428
    "unsafe"                          shift, and go to state 429
    "fixed_array"                     shift, and go to state 430
    "default"                         shift, and go to state 431
    "bool"                            shift, and go to state 228
    "void"                            shift, and go to state 229
    "string"                          shift, and go to state 230
    "int"                             shift, and go to state 232
    "int2"                            shift, and go to state 233
    "int3"                            shift, and go to state 234
    "int4"                            shift, and go to state 235
    "uint"                            shift, and go to state 236
    "bitfield"                        shift, and go to state 432
    "uint2"                           shift, and go to state 238
    "uint3"                           shift, and go to state 239
    "uint4"                           shift, and go to state 240
    "float"                           shift, and go to state 241
    "float2"                          shift, and go to state 242
    "float3"                          shift, and go to state 243
    "float4"                          shift, and go to state 244
    "range"                           shift, and go to state 245
    "urange"                          shift, and go to state 246
    "range64"                         shift, and go to state 247
    "urange64"                        shift, and go to state 248
    "int64"                           shift, and go to state 250
    "uint64"                          shift, and go to state 251
    "double"                          shift, and go to state 252
    "int8"                            shift, and go to state 255
    "uint8"                           shift, and go to state 256
    "int16"                           shift, and go to state 257
    "uint16"                          shift, and go to state 258
    "tuple"                           shift, and go to state 433
    "variant"                         shift, and go to state 434
    "generator"                       shift, and go to state 435
    "++"                              shift, and go to state 436
    "--"                              shift, and go to state 437
    "::"                              shift, and go to state 55
    "$$"                              shift, and go to state 438
    "$i"                              shift, and go to state 439
    "$v"                              shift, and go to state 440
    "$b"                              shift, and go to state 441
    "$a"                              shift, and go to state 442
    "$c"                              shift, and go to state 443
    "..."                             shift, and go to state 444
    "integer constant"                shift, and go to state 445
    "long integer constant"           shift, and go to state 446
    "unsigned integer constant"       shift, and go to state 447
    "unsigned long integer constant"  shift, and go to state 448
    "unsigned int8 constant"          shift, and go to state 449
    "floating point constant"         shift, and go to state 450
    "double constant"                 shift, and go to state 451
    "name"                            shift, and go to state 56
    "start of the string"             shift, and go to state 452
    '-'                               shift, and go to state 453
    '+'                               shift, and go to state 454
    '*'                               shift, and go to state 455
    '%'                               shift, and go to state 13
    '~'                               shift, and go to state 456
    '!'                               shift, and go to state 457
    '['                               shift, and go to state 458
    '('                               shift, and go to state 459
    '$'                               shift, and go to state 460
    '@'                               shift, and go to state 461
    '{'                               shift, and go to state 462

    $default  reduce using rule 252 (optional_expr_map_tuple_list)

    string_builder                go to state 463
    expr_reader                   go to state 464
    expr_call_pipe                go to state 465
    optional_expr_map_tuple_list  go to state 1243
    name_in_namespace             go to state 466
    expr_new                      go to state 467
    expr_cast                     go to state 468
    expr_type_decl                go to state 469
    expr_type_info                go to state 470
    block_or_lambda               go to state 471
    expr_full_block               go to state 472
    expr_numeric_const            go to state 473
    expr_named_call               go to state 474
    expr_method_call              go to state 475
    func_addr_expr                go to state 476
    expr_field                    go to state 477
    expr_call                     go to state 478
    expr                          go to state 594
    expr_generator                go to state 480
    expr_mtag                     go to state 481
    basic_type_declaration        go to state 482
    make_decl                     go to state 483
    make_struct_decl              go to state 484
    make_map_tuple                go to state 595
    make_tuple_call               go to state 485
    make_dim_decl                 go to state 486
    expr_map_tuple_list           go to state 1244
    make_table_decl               go to state 487
    array_comprehension           go to state 488


State 1141

  808 make_table_decl: "table" '<' type_declaration_no_options c_or_s type_declaration_no_options . '>' '(' optional_expr_map_tuple_list ')'

    '>'  shift, and go to state 1245


State 1142

  806 make_table_decl: "table" '(' expr_map_tuple_list optional_comma ')' .

    $default  reduce using rule 806 (make_table_decl)


State 1143

  295 expr_cast: "cast" '<' $@13 type_declaration_no_options '>' . $@14 expr

    $default  reduce using rule 294 ($@14)

    $@14  go to state 1246


State 1144

  298 expr_cast: "upcast" '<' $@15 type_declaration_no_options '>' . $@16 expr

    $default  reduce using rule 297 ($@16)

    $@16  go to state 1247


State 1145

  301 expr_cast: "reinterpret" '<' $@17 type_declaration_no_options '>' . $@18 expr

    $default  reduce using rule 300 ($@18)

    $@18  go to state 1248


State 1146

  802 make_dim_decl: "fixed_array" '<' $@103 type_declaration_no_options '>' . $@104 '(' expr_list optional_comma ')'

    $default  reduce using rule 801 ($@104)

    $@104  go to state 1249


State 1147

  799 make_dim_decl: "fixed_array" '(' expr_list optional_comma ')' .

    $default  reduce using rule 799 (make_dim_decl)


State 1148

  778 make_struct_decl: "default" '<' $@91 type_declaration_no_options '>' . $@92 use_initializer

    $default  reduce using rule 777 ($@92)

    $@92  go to state 1250


State 1149

  784 make_tuple_call: "tuple" '<' $@93 type_declaration_no_options '>' . $@94 '(' use_initializer optional_make_struct_dim_decl ')'

    $default  reduce using rule 783 ($@94)

    $@94  go to state 1251


State 1150

  781 make_tuple_call: "tuple" '(' expr_list optional_comma ')' .

    $default  reduce using rule 781 (make_tuple_call)


State 1151

  775 make_struct_decl: "variant" '<' $@89 type_declaration_no_options '>' . $@90 '(' make_variant_dim ')'

    $default  reduce using rule 774 ($@90)

    $@90  go to state 1252


State 1152

  465 expr_generator: "generator" '<' type_declaration_no_options '>' optional_capture_list . '(' ')'
  466               | "generator" '<' type_declaration_no_options '>' optional_capture_list . '(' expr ')'
  467               | "generator" '<' type_declaration_no_options '>' optional_capture_list . optional_semis expression_block

    '('  shift, and go to state 1253
    ';'  shift, and go to state 171

    $default  reduce using rule 71 (optional_semis)

    semis           go to state 172
    optional_semis  go to state 1254


State 1153

  474 expr_mtag: "$c" '(' expr ')' '(' . ')'
  475          | "$c" '(' expr ')' '(' . expr_list ')'

    "struct"                          shift, and go to state 414
    "class"                           shift, and go to state 415
    "true"                            shift, and go to state 416
    "false"                           shift, and go to state 417
    "new"                             shift, and go to state 418
    "typeinfo"                        shift, and go to state 419
    "type"                            shift, and go to state 420
    "array"                           shift, and go to state 421
    "null"                            shift, and go to state 422
    "table"                           shift, and go to state 423
    "deref"                           shift, and go to state 424
    "cast"                            shift, and go to state 425
    "upcast"                          shift, and go to state 426
    "addr"                            shift, and go to state 427
    "reinterpret"                     shift, and go to state 428
    "unsafe"                          shift, and go to state 429
    "fixed_array"                     shift, and go to state 430
    "default"                         shift, and go to state 431
    "bool"                            shift, and go to state 228
    "void"                            shift, and go to state 229
    "string"                          shift, and go to state 230
    "int"                             shift, and go to state 232
    "int2"                            shift, and go to state 233
    "int3"                            shift, and go to state 234
    "int4"                            shift, and go to state 235
    "uint"                            shift, and go to state 236
    "bitfield"                        shift, and go to state 432
    "uint2"                           shift, and go to state 238
    "uint3"                           shift, and go to state 239
    "uint4"                           shift, and go to state 240
    "float"                           shift, and go to state 241
    "float2"                          shift, and go to state 242
    "float3"                          shift, and go to state 243
    "float4"                          shift, and go to state 244
    "range"                           shift, and go to state 245
    "urange"                          shift, and go to state 246
    "range64"                         shift, and go to state 247
    "urange64"                        shift, and go to state 248
    "int64"                           shift, and go to state 250
    "uint64"                          shift, and go to state 251
    "double"                          shift, and go to state 252
    "int8"                            shift, and go to state 255
    "uint8"                           shift, and go to state 256
    "int16"                           shift, and go to state 257
    "uint16"                          shift, and go to state 258
    "tuple"                           shift, and go to state 433
    "variant"                         shift, and go to state 434
    "generator"                       shift, and go to state 435
    "++"                              shift, and go to state 436
    "--"                              shift, and go to state 437
    "::"                              shift, and go to state 55
    "$$"                              shift, and go to state 438
    "$i"                              shift, and go to state 439
    "$v"                              shift, and go to state 440
    "$b"                              shift, and go to state 441
    "$a"                              shift, and go to state 442
    "$c"                              shift, and go to state 443
    "..."                             shift, and go to state 444
    "integer constant"                shift, and go to state 445
    "long integer constant"           shift, and go to state 446
    "unsigned integer constant"       shift, and go to state 447
    "unsigned long integer constant"  shift, and go to state 448
    "unsigned int8 constant"          shift, and go to state 449
    "floating point constant"         shift, and go to state 450
    "double constant"                 shift, and go to state 451
    "name"                            shift, and go to state 56
    "start of the string"             shift, and go to state 452
    '-'                               shift, and go to state 453
    '+'                               shift, and go to state 454
    '*'                               shift, and go to state 455
    '%'                               shift, and go to state 13
    '~'                               shift, and go to state 456
    '!'                               shift, and go to state 457
    '['                               shift, and go to state 458
    '('                               shift, and go to state 459
    ')'                               shift, and go to state 1255
    '$'                               shift, and go to state 460
    '@'                               shift, and go to state 461
    '{'                               shift, and go to state 462

    string_builder          go to state 463
    expr_reader             go to state 464
    expr_call_pipe          go to state 465
    name_in_namespace       go to state 466
    expr_new                go to state 467
    expr_cast               go to state 468
    expr_type_decl          go to state 469
    expr_type_info          go to state 470
    expr_list               go to state 1256
    block_or_lambda         go to state 471
    expr_full_block         go to state 472
    expr_numeric_const      go to state 473
    expr_named_call         go to state 474
    expr_method_call        go to state 475
    func_addr_expr          go to state 476
    expr_field              go to state 477
    expr_call               go to state 478
    expr                    go to state 590
    expr_generator          go to state 480
    expr_mtag               go to state 481
    basic_type_declaration  go to state 482
    make_decl               go to state 483
    make_struct_decl        go to state 484
    make_tuple_call         go to state 485
    make_dim_decl           go to state 486
    make_table_decl         go to state 487
    array_comprehension     go to state 488


State 1154

   31 string_builder_body: string_builder_body "{" expr "}" .

    $default  reduce using rule 31 (string_builder_body)


State 1155

  813 array_comprehension: '[' "for" '(' variable_name_with_pos_list "in" . expr_list ')' ';' expr array_comprehension_where ']'

    "struct"                          shift, and go to state 414
    "class"                           shift, and go to state 415
    "true"                            shift, and go to state 416
    "false"                           shift, and go to state 417
    "new"                             shift, and go to state 418
    "typeinfo"                        shift, and go to state 419
    "type"                            shift, and go to state 420
    "array"                           shift, and go to state 421
    "null"                            shift, and go to state 422
    "table"                           shift, and go to state 423
    "deref"                           shift, and go to state 424
    "cast"                            shift, and go to state 425
    "upcast"                          shift, and go to state 426
    "addr"                            shift, and go to state 427
    "reinterpret"                     shift, and go to state 428
    "unsafe"                          shift, and go to state 429
    "fixed_array"                     shift, and go to state 430
    "default"                         shift, and go to state 431
    "bool"                            shift, and go to state 228
    "void"                            shift, and go to state 229
    "string"                          shift, and go to state 230
    "int"                             shift, and go to state 232
    "int2"                            shift, and go to state 233
    "int3"                            shift, and go to state 234
    "int4"                            shift, and go to state 235
    "uint"                            shift, and go to state 236
    "bitfield"                        shift, and go to state 432
    "uint2"                           shift, and go to state 238
    "uint3"                           shift, and go to state 239
    "uint4"                           shift, and go to state 240
    "float"                           shift, and go to state 241
    "float2"                          shift, and go to state 242
    "float3"                          shift, and go to state 243
    "float4"                          shift, and go to state 244
    "range"                           shift, and go to state 245
    "urange"                          shift, and go to state 246
    "range64"                         shift, and go to state 247
    "urange64"                        shift, and go to state 248
    "int64"                           shift, and go to state 250
    "uint64"                          shift, and go to state 251
    "double"                          shift, and go to state 252
    "int8"                            shift, and go to state 255
    "uint8"                           shift, and go to state 256
    "int16"                           shift, and go to state 257
    "uint16"                          shift, and go to state 258
    "tuple"                           shift, and go to state 433
    "variant"                         shift, and go to state 434
    "generator"                       shift, and go to state 435
    "++"                              shift, and go to state 436
    "--"                              shift, and go to state 437
    "::"                              shift, and go to state 55
    "$$"                              shift, and go to state 438
    "$i"                              shift, and go to state 439
    "$v"                              shift, and go to state 440
    "$b"                              shift, and go to state 441
    "$a"                              shift, and go to state 442
    "$c"                              shift, and go to state 443
    "..."                             shift, and go to state 444
    "integer constant"                shift, and go to state 445
    "long integer constant"           shift, and go to state 446
    "unsigned integer constant"       shift, and go to state 447
    "unsigned long integer constant"  shift, and go to state 448
    "unsigned int8 constant"          shift, and go to state 449
    "floating point constant"         shift, and go to state 450
    "double constant"                 shift, and go to state 451
    "name"                            shift, and go to state 56
    "start of the string"             shift, and go to state 452
    '-'                               shift, and go to state 453
    '+'                               shift, and go to state 454
    '*'                               shift, and go to state 455
    '%'                               shift, and go to state 13
    '~'                               shift, and go to state 456
    '!'                               shift, and go to state 457
    '['                               shift, and go to state 458
    '('                               shift, and go to state 459
    '$'                               shift, and go to state 460
    '@'                               shift, and go to state 461
    '{'                               shift, and go to state 462

    string_builder          go to state 463
    expr_reader             go to state 464
    expr_call_pipe          go to state 465
    name_in_namespace       go to state 466
    expr_new                go to state 467
    expr_cast               go to state 468
    expr_type_decl          go to state 469
    expr_type_info          go to state 470
    expr_list               go to state 1257
    block_or_lambda         go to state 471
    expr_full_block         go to state 472
    expr_numeric_const      go to state 473
    expr_named_call         go to state 474
    expr_method_call        go to state 475
    func_addr_expr          go to state 476
    expr_field              go to state 477
    expr_call               go to state 478
    expr                    go to state 590
    expr_generator          go to state 480
    expr_mtag               go to state 481
    basic_type_declaration  go to state 482
    make_decl               go to state 483
    make_struct_decl        go to state 484
    make_tuple_call         go to state 485
    make_dim_decl           go to state 486
    make_table_decl         go to state 487
    array_comprehension     go to state 488


State 1156

  604 variable_name_with_pos_list: variable_name_with_pos_list . ',' "name"
  605                            | variable_name_with_pos_list . ',' "name" "aka" "name"
  814 array_comprehension: '[' "iterator" "for" '(' variable_name_with_pos_list . "in" expr_list ')' ';' expr array_comprehension_where ']'

    "in"  shift, and go to state 1258
    ','   shift, and go to state 880


State 1157

  356 expr_method_call: expr . "->" "name" '(' ')'
  357                 | expr . "->" "name" '(' expr_list ')'
  359 func_addr_name: "$i" '(' expr . ')'
  367 expr_field: expr . '.' "name"
  368           | expr . '.' '.' "name"
  369           | expr . '.' "name" '(' ')'
  370           | expr . '.' "name" '(' expr_list ')'
  371           | expr . '.' basic_type_declaration '(' ')'
  372           | expr . '.' basic_type_declaration '(' expr_list ')'
  375           | expr . '.' $@25 error $@26
  397 expr: expr . "<<" expr
  398     | expr . ">>" expr
  399     | expr . "<<<" expr
  400     | expr . ">>>" expr
  401     | expr . '+' expr
  402     | expr . '-' expr
  403     | expr . '*' expr
  404     | expr . '/' expr
  405     | expr . '%' expr
  406     | expr . '<' expr
  407     | expr . '>' expr
  408     | expr . "==" expr
  409     | expr . "!=" expr
  410     | expr . "<=" expr
  411     | expr . ">=" expr
  412     | expr . '&' expr
  413     | expr . '|' expr
  414     | expr . '^' expr
  415     | expr . "&&" expr
  416     | expr . "||" expr
  417     | expr . "^^" expr
  418     | expr . ".." expr
  421     | expr . "++"
  422     | expr . "--"
  424     | expr . '[' expr ']'
  425     | expr . '.' '[' expr ']'
  426     | expr . "?[" expr ']'
  427     | expr . '.' "?[" expr ']'
  428     | expr . "?." "name"
  429     | expr . '.' "?." "name"
  436     | expr . "??" expr
  437     | expr . '?' expr ':' expr
  440     | expr . "is" "type" '<' $@27 type_declaration_no_options '>' $@28
  441     | expr . "is" basic_type_declaration
  442     | expr . "is" "name"
  443     | expr . "as" "name"
  446     | expr . "as" "type" '<' $@29 type_declaration '>' $@30
  447     | expr . "as" basic_type_declaration
  448     | expr . '?' "as" "name"
  451     | expr . '?' "as" "type" '<' $@31 type_declaration '>' $@32
  452     | expr . '?' "as" basic_type_declaration
  460     | expr . "<|" expr
  461     | expr . "|>" expr
  462     | expr . "|>" basic_type_declaration
  476 expr_mtag: expr . '.' "$f" '(' expr ')'
  477          | expr . "?." "$f" '(' expr ')'
  478          | expr . '.' '.' "$f" '(' expr ')'
  479          | expr . '.' "?." "$f" '(' expr ')'
  480          | expr . "as" "$f" '(' expr ')'
  481          | expr . '?' "as" "$f" '(' expr ')'
  482          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 603
    "as"   shift, and go to state 604
    "<<"   shift, and go to state 605
    ">>"   shift, and go to state 606
    "++"   shift, and go to state 607
    "--"   shift, and go to state 608
    "<="   shift, and go to state 609
    ">="   shift, and go to state 610
    "=="   shift, and go to state 611
    "!="   shift, and go to state 612
    "->"   shift, and go to state 613
    "??"   shift, and go to state 614
    "?."   shift, and go to state 615
    "?["   shift, and go to state 616
    "<|"   shift, and go to state 617
    "|>"   shift, and go to state 618
    "<<<"  shift, and go to state 619
    ">>>"  shift, and go to state 620
    "&&"   shift, and go to state 621
    "||"   shift, and go to state 622
    "^^"   shift, and go to state 623
    ".."   shift, and go to state 624
    '?'    shift, and go to state 625
    '|'    shift, and go to state 626
    '^'    shift, and go to state 627
    '&'    shift, and go to state 628
    '<'    shift, and go to state 629
    '>'    shift, and go to state 630
    '-'    shift, and go to state 631
    '+'    shift, and go to state 632
    '*'    shift, and go to state 633
    '/'    shift, and go to state 634
    '%'    shift, and go to state 635
    '.'    shift, and go to state 636
    '['    shift, and go to state 637
    ')'    shift, and go to state 1259


State 1158

  356 expr_method_call: expr . "->" "name" '(' ')'
  357                 | expr . "->" "name" '(' expr_list ')'
  367 expr_field: expr . '.' "name"
  368           | expr . '.' '.' "name"
  369           | expr . '.' "name" '(' ')'
  370           | expr . '.' "name" '(' expr_list ')'
  371           | expr . '.' basic_type_declaration '(' ')'
  372           | expr . '.' basic_type_declaration '(' expr_list ')'
  375           | expr . '.' $@25 error $@26
  397 expr: expr . "<<" expr
  398     | expr . ">>" expr
  399     | expr . "<<<" expr
  400     | expr . ">>>" expr
  401     | expr . '+' expr
  402     | expr . '-' expr
  403     | expr . '*' expr
  404     | expr . '/' expr
  405     | expr . '%' expr
  406     | expr . '<' expr
  407     | expr . '>' expr
  408     | expr . "==" expr
  409     | expr . "!=" expr
  410     | expr . "<=" expr
  411     | expr . ">=" expr
  412     | expr . '&' expr
  413     | expr . '|' expr
  414     | expr . '^' expr
  415     | expr . "&&" expr
  416     | expr . "||" expr
  417     | expr . "^^" expr
  418     | expr . ".." expr
  421     | expr . "++"
  422     | expr . "--"
  424     | expr . '[' expr ']'
  425     | expr . '.' '[' expr ']'
  426     | expr . "?[" expr ']'
  427     | expr . '.' "?[" expr ']'
  428     | expr . "?." "name"
  429     | expr . '.' "?." "name"
  436     | expr . "??" expr
  437     | expr . '?' expr ':' expr
  440     | expr . "is" "type" '<' $@27 type_declaration_no_options '>' $@28
  441     | expr . "is" basic_type_declaration
  442     | expr . "is" "name"
  443     | expr . "as" "name"
  446     | expr . "as" "type" '<' $@29 type_declaration '>' $@30
  447     | expr . "as" basic_type_declaration
  448     | expr . '?' "as" "name"
  451     | expr . '?' "as" "type" '<' $@31 type_declaration '>' $@32
  452     | expr . '?' "as" basic_type_declaration
  460     | expr . "<|" expr
  461     | expr . "|>" expr
  462     | expr . "|>" basic_type_declaration
  476 expr_mtag: expr . '.' "$f" '(' expr ')'
  477          | expr . "?." "$f" '(' expr ')'
  478          | expr . '.' '.' "$f" '(' expr ')'
  479          | expr . '.' "?." "$f" '(' expr ')'
  480          | expr . "as" "$f" '(' expr ')'
  481          | expr . '?' "as" "$f" '(' expr ')'
  482          | expr . "is" "$f" '(' expr ')'
  483          | '@' '@' "$c" '(' expr . ')'

    "is"   shift, and go to state 603
    "as"   shift, and go to state 604
    "<<"   shift, and go to state 605
    ">>"   shift, and go to state 606
    "++"   shift, and go to state 607
    "--"   shift, and go to state 608
    "<="   shift, and go to state 609
    ">="   shift, and go to state 610
    "=="   shift, and go to state 611
    "!="   shift, and go to state 612
    "->"   shift, and go to state 613
    "??"   shift, and go to state 614
    "?."   shift, and go to state 615
    "?["   shift, and go to state 616
    "<|"   shift, and go to state 617
    "|>"   shift, and go to state 618
    "<<<"  shift, and go to state 619
    ">>>"  shift, and go to state 620
    "&&"   shift, and go to state 621
    "||"   shift, and go to state 622
    "^^"   shift, and go to state 623
    ".."   shift, and go to state 624
    '?'    shift, and go to state 625
    '|'    shift, and go to state 626
    '^'    shift, and go to state 627
    '&'    shift, and go to state 628
    '<'    shift, and go to state 629
    '>'    shift, and go to state 630
    '-'    shift, and go to state 631
    '+'    shift, and go to state 632
    '*'    shift, and go to state 633
    '/'    shift, and go to state 634
    '%'    shift, and go to state 635
    '.'    shift, and go to state 636
    '['    shift, and go to state 637
    ')'    shift, and go to state 1260


State 1159

  363 func_addr_expr: '@' '@' '<' $@21 type_declaration_no_options . '>' $@22 func_addr_name

    '>'  shift, and go to state 1261


State 1160

  366 func_addr_expr: '@' '@' '<' $@23 optional_function_argument_list . optional_function_type '>' $@24 func_addr_name

    ':'  shift, and go to state 388

    $default  reduce using rule 126 (optional_function_type)

    optional_function_type  go to state 1262


State 1161

  815 array_comprehension: '{' "for" '(' variable_name_with_pos_list "in" . expr_list ')' ';' make_map_tuple array_comprehension_where '}'

    "struct"                          shift, and go to state 414
    "class"                           shift, and go to state 415
    "true"                            shift, and go to state 416
    "false"                           shift, and go to state 417
    "new"                             shift, and go to state 418
    "typeinfo"                        shift, and go to state 419
    "type"                            shift, and go to state 420
    "array"                           shift, and go to state 421
    "null"                            shift, and go to state 422
    "table"                           shift, and go to state 423
    "deref"                           shift, and go to state 424
    "cast"                            shift, and go to state 425
    "upcast"                          shift, and go to state 426
    "addr"                            shift, and go to state 427
    "reinterpret"                     shift, and go to state 428
    "unsafe"                          shift, and go to state 429
    "fixed_array"                     shift, and go to state 430
    "default"                         shift, and go to state 431
    "bool"                            shift, and go to state 228
    "void"                            shift, and go to state 229
    "string"                          shift, and go to state 230
    "int"                             shift, and go to state 232
    "int2"                            shift, and go to state 233
    "int3"                            shift, and go to state 234
    "int4"                            shift, and go to state 235
    "uint"                            shift, and go to state 236
    "bitfield"                        shift, and go to state 432
    "uint2"                           shift, and go to state 238
    "uint3"                           shift, and go to state 239
    "uint4"                           shift, and go to state 240
    "float"                           shift, and go to state 241
    "float2"                          shift, and go to state 242
    "float3"                          shift, and go to state 243
    "float4"                          shift, and go to state 244
    "range"                           shift, and go to state 245
    "urange"                          shift, and go to state 246
    "range64"                         shift, and go to state 247
    "urange64"                        shift, and go to state 248
    "int64"                           shift, and go to state 250
    "uint64"                          shift, and go to state 251
    "double"                          shift, and go to state 252
    "int8"                            shift, and go to state 255
    "uint8"                           shift, and go to state 256
    "int16"                           shift, and go to state 257
    "uint16"                          shift, and go to state 258
    "tuple"                           shift, and go to state 433
    "variant"                         shift, and go to state 434
    "generator"                       shift, and go to state 435
    "++"                              shift, and go to state 436
    "--"                              shift, and go to state 437
    "::"                              shift, and go to state 55
    "$$"                              shift, and go to state 438
    "$i"                              shift, and go to state 439
    "$v"                              shift, and go to state 440
    "$b"                              shift, and go to state 441
    "$a"                              shift, and go to state 442
    "$c"                              shift, and go to state 443
    "..."                             shift, and go to state 444
    "integer constant"                shift, and go to state 445
    "long integer constant"           shift, and go to state 446
    "unsigned integer constant"       shift, and go to state 447
    "unsigned long integer constant"  shift, and go to state 448
    "unsigned int8 constant"          shift, and go to state 449
    "floating point constant"         shift, and go to state 450
    "double constant"                 shift, and go to state 451
    "name"                            shift, and go to state 56
    "start of the string"             shift, and go to state 452
    '-'                               shift, and go to state 453
    '+'                               shift, and go to state 454
    '*'                               shift, and go to state 455
    '%'                               shift, and go to state 13
    '~'                               shift, and go to state 456
    '!'                               shift, and go to state 457
    '['                               shift, and go to state 458
    '('                               shift, and go to state 459
    '$'                               shift, and go to state 460
    '@'                               shift, and go to state 461
    '{'                               shift, and go to state 462

    string_builder          go to state 463
    expr_reader             go to state 464
    expr_call_pipe          go to state 465
    name_in_namespace       go to state 466
    expr_new                go to state 467
    expr_cast               go to state 468
    expr_type_decl          go to state 469
    expr_type_info          go to state 470
    expr_list               go to state 1263
    block_or_lambda         go to state 471
    expr_full_block         go to state 472
    expr_numeric_const      go to state 473
    expr_named_call         go to state 474
    expr_method_call        go to state 475
    func_addr_expr          go to state 476
    expr_field              go to state 477
    expr_call               go to state 478
    expr                    go to state 590
    expr_generator          go to state 480
    expr_mtag               go to state 481
    basic_type_declaration  go to state 482
    make_decl               go to state 483
    make_struct_decl        go to state 484
    make_tuple_call         go to state 485
    make_dim_decl           go to state 486
    make_table_decl         go to state 487
    array_comprehension     go to state 488


State 1162

  379 expr_call: name_in_namespace '(' "uninitialized" make_struct_single ')' .

    $default  reduce using rule 379 (expr_call)


State 1163

  356 expr_method_call: expr . "->" "name" '(' ')'
  357                 | expr . "->" "name" '(' expr_list ')'
  367 expr_field: expr . '.' "name"
  368           | expr . '.' '.' "name"
  369           | expr . '.' "name" '(' ')'
  370           | expr . '.' "name" '(' expr_list ')'
  371           | expr . '.' basic_type_declaration '(' ')'
  372           | expr . '.' basic_type_declaration '(' expr_list ')'
  375           | expr . '.' $@25 error $@26
  397 expr: expr . "<<" expr
  398     | expr . ">>" expr
  399     | expr . "<<<" expr
  400     | expr . ">>>" expr
  401     | expr . '+' expr
  402     | expr . '-' expr
  403     | expr . '*' expr
  404     | expr . '/' expr
  405     | expr . '%' expr
  406     | expr . '<' expr
  407     | expr . '>' expr
  408     | expr . "==" expr
  409     | expr . "!=" expr
  410     | expr . "<=" expr
  411     | expr . ">=" expr
  412     | expr . '&' expr
  413     | expr . '|' expr
  414     | expr . '^' expr
  415     | expr . "&&" expr
  416     | expr . "||" expr
  417     | expr . "^^" expr
  418     | expr . ".." expr
  421     | expr . "++"
  422     | expr . "--"
  424     | expr . '[' expr ']'
  425     | expr . '.' '[' expr ']'
  426     | expr . "?[" expr ']'
  427     | expr . '.' "?[" expr ']'
  428     | expr . "?." "name"
  429     | expr . '.' "?." "name"
  436     | expr . "??" expr
  437     | expr . '?' expr ':' expr
  440     | expr . "is" "type" '<' $@27 type_declaration_no_options '>' $@28
  441     | expr . "is" basic_type_declaration
  442     | expr . "is" "name"
  443     | expr . "as" "name"
  446     | expr . "as" "type" '<' $@29 type_declaration '>' $@30
  447     | expr . "as" basic_type_declaration
  448     | expr . '?' "as" "name"
  451     | expr . '?' "as" "type" '<' $@31 type_declaration '>' $@32
  452     | expr . '?' "as" basic_type_declaration
  460     | expr . "<|" expr
  461     | expr . "|>" expr
  462     | expr . "|>" basic_type_declaration
  476 expr_mtag: expr . '.' "$f" '(' expr ')'
  477          | expr . "?." "$f" '(' expr ')'
  478          | expr . '.' '.' "$f" '(' expr ')'
  479          | expr . '.' "?." "$f" '(' expr ')'
  480          | expr . "as" "$f" '(' expr ')'
  481          | expr . '?' "as" "$f" '(' expr ')'
  482          | expr . "is" "$f" '(' expr ')'
  753 make_struct_fields: "$f" '(' expr . ')' copy_or_move expr
  754                   | "$f" '(' expr . ')' ":=" expr

    "is"   shift, and go to state 603
    "as"   shift, and go to state 604
    "<<"   shift, and go to state 605
    ">>"   shift, and go to state 606
    "++"   shift, and go to state 607
    "--"   shift, and go to state 608
    "<="   shift, and go to state 609
    ">="   shift, and go to state 610
    "=="   shift, and go to state 611
    "!="   shift, and go to state 612
    "->"   shift, and go to state 613
    "??"   shift, and go to state 614
    "?."   shift, and go to state 615
    "?["   shift, and go to state 616
    "<|"   shift, and go to state 617
    "|>"   shift, and go to state 618
    "<<<"  shift, and go to state 619
    ">>>"  shift, and go to state 620
    "&&"   shift, and go to state 621
    "||"   shift, and go to state 622
    "^^"   shift, and go to state 623
    ".."   shift, and go to state 624
    '?'    shift, and go to state 625
    '|'    shift, and go to state 626
    '^'    shift, and go to state 627
    '&'    shift, and go to state 628
    '<'    shift, and go to state 629
    '>'    shift, and go to state 630
    '-'    shift, and go to state 631
    '+'    shift, and go to state 632
    '*'    shift, and go to state 633
    '/'    shift, and go to state 634
    '%'    shift, and go to state 635
    '.'    shift, and go to state 636
    '['    shift, and go to state 637
    ')'    shift, and go to state 1264


State 1164

  356 expr_method_call: expr . "->" "name" '(' ')'
  357                 | expr . "->" "name" '(' expr_list ')'
  367 expr_field: expr . '.' "name"
  368           | expr . '.' '.' "name"
  369           | expr . '.' "name" '(' ')'
  370           | expr . '.' "name" '(' expr_list ')'
  371           | expr . '.' basic_type_declaration '(' ')'
  372           | expr . '.' basic_type_declaration '(' expr_list ')'
  375           | expr . '.' $@25 error $@26
  397 expr: expr . "<<" expr
  398     | expr . ">>" expr
  399     | expr . "<<<" expr
  400     | expr . ">>>" expr
  401     | expr . '+' expr
  402     | expr . '-' expr
  403     | expr . '*' expr
  404     | expr . '/' expr
  405     | expr . '%' expr
  406     | expr . '<' expr
  407     | expr . '>' expr
  408     | expr . "==" expr
  409     | expr . "!=" expr
  410     | expr . "<=" expr
  411     | expr . ">=" expr
  412     | expr . '&' expr
  413     | expr . '|' expr
  414     | expr . '^' expr
  415     | expr . "&&" expr
  416     | expr . "||" expr
  417     | expr . "^^" expr
  418     | expr . ".." expr
  421     | expr . "++"
  422     | expr . "--"
  424     | expr . '[' expr ']'
  425     | expr . '.' '[' expr ']'
  426     | expr . "?[" expr ']'
  427     | expr . '.' "?[" expr ']'
  428     | expr . "?." "name"
  429     | expr . '.' "?." "name"
  436     | expr . "??" expr
  437     | expr . '?' expr ':' expr
  440     | expr . "is" "type" '<' $@27 type_declaration_no_options '>' $@28
  441     | expr . "is" basic_type_declaration
  442     | expr . "is" "name"
  443     | expr . "as" "name"
  446     | expr . "as" "type" '<' $@29 type_declaration '>' $@30
  447     | expr . "as" basic_type_declaration
  448     | expr . '?' "as" "name"
  451     | expr . '?' "as" "type" '<' $@31 type_declaration '>' $@32
  452     | expr . '?' "as" basic_type_declaration
  460     | expr . "<|" expr
  461     | expr . "|>" expr
  462     | expr . "|>" basic_type_declaration
  476 expr_mtag: expr . '.' "$f" '(' expr ')'
  477          | expr . "?." "$f" '(' expr ')'
  478          | expr . '.' '.' "$f" '(' expr ')'
  479          | expr . '.' "?." "$f" '(' expr ')'
  480          | expr . "as" "$f" '(' expr ')'
  481          | expr . '?' "as" "$f" '(' expr ')'
  482          | expr . "is" "$f" '(' expr ')'
  750 make_struct_fields: "name" ":=" expr .

    "is"   shift, and go to state 603
    "as"   shift, and go to state 604
    "<<"   shift, and go to state 605
    ">>"   shift, and go to state 606
    "++"   shift, and go to state 607
    "--"   shift, and go to state 608
    "<="   shift, and go to state 609
    ">="   shift, and go to state 610
    "=="   shift, and go to state 611
    "!="   shift, and go to state 612
    "->"   shift, and go to state 613
    "??"   shift, and go to state 614
    "?."   shift, and go to state 615
    "?["   shift, and go to state 616
    "<|"   shift, and go to state 617
    "|>"   shift, and go to state 618
    "<<<"  shift, and go to state 619
    ">>>"  shift, and go to state 620
    "&&"   shift, and go to state 621
    "||"   shift, and go to state 622
    "^^"   shift, and go to state 623
    ".."   shift, and go to state 624
    '?'    shift, and go to state 625
    '|'    shift, and go to state 626
    '^'    shift, and go to state 627
    '&'    shift, and go to state 628
    '<'    shift, and go to state 629
    '>'    shift, and go to state 630
    '-'    shift, and go to state 631
    '+'    shift, and go to state 632
    '*'    shift, and go to state 633
    '/'    shift, and go to state 634
    '%'    shift, and go to state 635
    '.'    shift, and go to state 636
    '['    shift, and go to state 637

    $default  reduce using rule 750 (make_struct_fields)


State 1165

  356 expr_method_call: expr . "->" "name" '(' ')'
  357                 | expr . "->" "name" '(' expr_list ')'
  367 expr_field: expr . '.' "name"
  368           | expr . '.' '.' "name"
  369           | expr . '.' "name" '(' ')'
  370           | expr . '.' "name" '(' expr_list ')'
  371           | expr . '.' basic_type_declaration '(' ')'
  372           | expr . '.' basic_type_declaration '(' expr_list ')'
  375           | expr . '.' $@25 error $@26
  397 expr: expr . "<<" expr
  398     | expr . ">>" expr
  399     | expr . "<<<" expr
  400     | expr . ">>>" expr
  401     | expr . '+' expr
  402     | expr . '-' expr
  403     | expr . '*' expr
  404     | expr . '/' expr
  405     | expr . '%' expr
  406     | expr . '<' expr
  407     | expr . '>' expr
  408     | expr . "==" expr
  409     | expr . "!=" expr
  410     | expr . "<=" expr
  411     | expr . ">=" expr
  412     | expr . '&' expr
  413     | expr . '|' expr
  414     | expr . '^' expr
  415     | expr . "&&" expr
  416     | expr . "||" expr
  417     | expr . "^^" expr
  418     | expr . ".." expr
  421     | expr . "++"
  422     | expr . "--"
  424     | expr . '[' expr ']'
  425     | expr . '.' '[' expr ']'
  426     | expr . "?[" expr ']'
  427     | expr . '.' "?[" expr ']'
  428     | expr . "?." "name"
  429     | expr . '.' "?." "name"
  436     | expr . "??" expr
  437     | expr . '?' expr ':' expr
  440     | expr . "is" "type" '<' $@27 type_declaration_no_options '>' $@28
  441     | expr . "is" basic_type_declaration
  442     | expr . "is" "name"
  443     | expr . "as" "name"
  446     | expr . "as" "type" '<' $@29 type_declaration '>' $@30
  447     | expr . "as" basic_type_declaration
  448     | expr . '?' "as" "name"
  451     | expr . '?' "as" "type" '<' $@31 type_declaration '>' $@32
  452     | expr . '?' "as" basic_type_declaration
  460     | expr . "<|" expr
  461     | expr . "|>" expr
  462     | expr . "|>" basic_type_declaration
  476 expr_mtag: expr . '.' "$f" '(' expr ')'
  477          | expr . "?." "$f" '(' expr ')'
  478          | expr . '.' '.' "$f" '(' expr ')'
  479          | expr . '.' "?." "$f" '(' expr ')'
  480          | expr . "as" "$f" '(' expr ')'
  481          | expr . '?' "as" "$f" '(' expr ')'
  482          | expr . "is" "$f" '(' expr ')'
  749 make_struct_fields: "name" copy_or_move expr .

    "is"   shift, and go to state 603
    "as"   shift, and go to state 604
    "<<"   shift, and go to state 605
    ">>"   shift, and go to state 606
    "++"   shift, and go to state 607
    "--"   shift, and go to state 608
    "<="   shift, and go to state 609
    ">="   shift, and go to state 610
    "=="   shift, and go to state 611
    "!="   shift, and go to state 612
    "->"   shift, and go to state 613
    "??"   shift, and go to state 614
    "?."   shift, and go to state 615
    "?["   shift, and go to state 616
    "<|"   shift, and go to state 617
    "|>"   shift, and go to state 618
    "<<<"  shift, and go to state 619
    ">>>"  shift, and go to state 620
    "&&"   shift, and go to state 621
    "||"   shift, and go to state 622
    "^^"   shift, and go to state 623
    ".."   shift, and go to state 624
    '?'    shift, and go to state 625
    '|'    shift, and go to state 626
    '^'    shift, and go to state 627
    '&'    shift, and go to state 628
    '<'    shift, and go to state 629
    '>'    shift, and go to state 630
    '-'    shift, and go to state 631
    '+'    shift, and go to state 632
    '*'    shift, and go to state 633
    '/'    shift, and go to state 634
    '%'    shift, and go to state 635
    '.'    shift, and go to state 636
    '['    shift, and go to state 637

    $default  reduce using rule 749 (make_struct_fields)


State 1166

  354 expr_named_call: name_in_namespace '(' '[' make_struct_fields ']' . ')'

    ')'  shift, and go to state 1265


State 1167

  355 expr_named_call: name_in_namespace '(' expr_list ',' '[' . make_struct_fields ']' ')'
  785 make_dim_decl: '[' . expr_list optional_comma ']'
  813 array_comprehension: '[' . "for" '(' variable_name_with_pos_list "in" expr_list ')' ';' expr array_comprehension_where ']'
  814                    | '[' . "iterator" "for" '(' variable_name_with_pos_list "in" expr_list ')' ';' expr array_comprehension_where ']'

    "struct"                          shift, and go to state 414
    "class"                           shift, and go to state 415
    "for"                             shift, and go to state 587
    "true"                            shift, and go to state 416
    "false"                           shift, and go to state 417
    "new"                             shift, and go to state 418
    "typeinfo"                        shift, and go to state 419
    "type"                            shift, and go to state 420
    "array"                           shift, and go to state 421
    "null"                            shift, and go to state 422
    "table"                           shift, and go to state 423
    "deref"                           shift, and go to state 424
    "cast"                            shift, and go to state 425
    "upcast"                          shift, and go to state 426
    "iterator"                        shift, and go to state 588
    "addr"                            shift, and go to state 427
    "reinterpret"                     shift, and go to state 428
    "unsafe"                          shift, and go to state 429
    "fixed_array"                     shift, and go to state 430
    "default"                         shift, and go to state 431
    "bool"                            shift, and go to state 228
    "void"                            shift, and go to state 229
    "string"                          shift, and go to state 230
    "int"                             shift, and go to state 232
    "int2"                            shift, and go to state 233
    "int3"                            shift, and go to state 234
    "int4"                            shift, and go to state 235
    "uint"                            shift, and go to state 236
    "bitfield"                        shift, and go to state 432
    "uint2"                           shift, and go to state 238
    "uint3"                           shift, and go to state 239
    "uint4"                           shift, and go to state 240
    "float"                           shift, and go to state 241
    "float2"                          shift, and go to state 242
    "float3"                          shift, and go to state 243
    "float4"                          shift, and go to state 244
    "range"                           shift, and go to state 245
    "urange"                          shift, and go to state 246
    "range64"                         shift, and go to state 247
    "urange64"                        shift, and go to state 248
    "int64"                           shift, and go to state 250
    "uint64"                          shift, and go to state 251
    "double"                          shift, and go to state 252
    "int8"                            shift, and go to state 255
    "uint8"                           shift, and go to state 256
    "int16"                           shift, and go to state 257
    "uint16"                          shift, and go to state 258
    "tuple"                           shift, and go to state 433
    "variant"                         shift, and go to state 434
    "generator"                       shift, and go to state 435
    "++"                              shift, and go to state 436
    "--"                              shift, and go to state 437
    "::"                              shift, and go to state 55
    "$$"                              shift, and go to state 438
    "$i"                              shift, and go to state 439
    "$v"                              shift, and go to state 440
    "$b"                              shift, and go to state 441
    "$a"                              shift, and go to state 442
    "$c"                              shift, and go to state 443
    "$f"                              shift, and go to state 786
    "..."                             shift, and go to state 444
    "integer constant"                shift, and go to state 445
    "long integer constant"           shift, and go to state 446
    "unsigned integer constant"       shift, and go to state 447
    "unsigned long integer constant"  shift, and go to state 448
    "unsigned int8 constant"          shift, and go to state 449
    "floating point constant"         shift, and go to state 450
    "double constant"                 shift, and go to state 451
    "name"                            shift, and go to state 787
    "start of the string"             shift, and go to state 452
    '-'                               shift, and go to state 453
    '+'                               shift, and go to state 454
    '*'                               shift, and go to state 455
    '%'                               shift, and go to state 13
    '~'                               shift, and go to state 456
    '!'                               shift, and go to state 457
    '['                               shift, and go to state 458
    '('                               shift, and go to state 459
    '$'                               shift, and go to state 460
    '@'                               shift, and go to state 461
    '{'                               shift, and go to state 462

    string_builder          go to state 463
    expr_reader             go to state 464
    expr_call_pipe          go to state 465
    name_in_namespace       go to state 466
    expr_new                go to state 467
    expr_cast               go to state 468
    expr_type_decl          go to state 469
    expr_type_info          go to state 470
    expr_list               go to state 589
    block_or_lambda         go to state 471
    expr_full_block         go to state 472
    expr_numeric_const      go to state 473
    expr_named_call         go to state 474
    expr_method_call        go to state 475
    func_addr_expr          go to state 476
    expr_field              go to state 477
    expr_call               go to state 478
    expr                    go to state 590
    expr_generator          go to state 480
    expr_mtag               go to state 481
    basic_type_declaration  go to state 482
    make_decl               go to state 483
    make_struct_fields      go to state 1266
    make_struct_decl        go to state 484
    make_tuple_call         go to state 485
    make_dim_decl           go to state 486
    make_table_decl         go to state 487
    array_comprehension     go to state 488


State 1168

  755 make_struct_fields: make_struct_fields ',' "$f" . '(' expr ')' copy_or_move expr
  756                   | make_struct_fields ',' "$f" . '(' expr ')' ":=" expr

    '('  shift, and go to state 1267


State 1169

  751 make_struct_fields: make_struct_fields ',' "name" . copy_or_move expr
  752                   | make_struct_fields ',' "name" . ":=" expr

    "<-"  shift, and go to state 879
    ":="  shift, and go to state 1268
    '='   shift, and go to state 881

    copy_or_move  go to state 1269


State 1170

  318 capture_entry: "<-" . "name"

    "name"  shift, and go to state 1270


State 1171

  319 capture_entry: ":=" . "name"

    "name"  shift, and go to state 1271


State 1172

  320 capture_entry: "name" . '(' "name" ')'

    '('  shift, and go to state 1272


State 1173

  317 capture_entry: '=' . "name"

    "name"  shift, and go to state 1273


State 1174

  316 capture_entry: '&' . "name"

    "name"  shift, and go to state 1274


State 1175

  321 capture_list: capture_entry .

    $default  reduce using rule 321 (capture_list)


State 1176

  322 capture_list: capture_list . ',' capture_entry
  324 optional_capture_list: "capture" '(' capture_list . ')'

    ','  shift, and go to state 1275
    ')'  shift, and go to state 1276


State 1177

  325 expr_full_block: block_or_lambda optional_annotation_list optional_capture_list optional_function_argument_list optional_function_type . optional_semis block_or_simple_block

    ';'  shift, and go to state 171

    $default  reduce using rule 71 (optional_semis)

    semis           go to state 172
    optional_semis  go to state 1277


State 1178

  326 expr_full_block_assumed_piped: block_or_lambda optional_annotation_list optional_capture_list optional_function_argument_list . optional_function_type optional_semis expression_block

    ':'  shift, and go to state 388

    $default  reduce using rule 126 (optional_function_type)

    optional_function_type  go to state 1278


State 1179

  440 expr: expr "is" "type" '<' $@27 . type_declaration_no_options '>' $@28

    "type"       shift, and go to state 222
    "array"      shift, and go to state 223
    "table"      shift, and go to state 224
    "typedecl"   shift, and go to state 225
    "iterator"   shift, and go to state 226
    "smart_ptr"  shift, and go to state 227
    "bool"       shift, and go to state 228
    "void"       shift, and go to state 229
    "string"     shift, and go to state 230
    "auto"       shift, and go to state 231
    "int"        shift, and go to state 232
    "int2"       shift, and go to state 233
    "int3"       shift, and go to state 234
    "int4"       shift, and go to state 235
    "uint"       shift, and go to state 236
    "bitfield"   shift, and go to state 237
    "uint2"      shift, and go to state 238
    "uint3"      shift, and go to state 239
    "uint4"      shift, and go to state 240
    "float"      shift, and go to state 241
    "float2"     shift, and go to state 242
    "float3"     shift, and go to state 243
    "float4"     shift, and go to state 244
    "range"      shift, and go to state 245
    "urange"     shift, and go to state 246
    "range64"    shift, and go to state 247
    "urange64"   shift, and go to state 248
    "block"      shift, and go to state 249
    "int64"      shift, and go to state 250
    "uint64"     shift, and go to state 251
    "double"     shift, and go to state 252
    "function"   shift, and go to state 253
    "lambda"     shift, and go to state 254
    "int8"       shift, and go to state 255
    "uint8"      shift, and go to state 256
    "int16"      shift, and go to state 257
    "uint16"     shift, and go to state 258
    "tuple"      shift, and go to state 259
    "variant"    shift, and go to state 260
    "::"         shift, and go to state 55
    "$t"         shift, and go to state 261
    "name"       shift, and go to state 56
    '$'          shift, and go to state 262

    name_in_namespace                   go to state 263
    basic_type_declaration              go to state 264
    structure_type_declaration          go to state 265
    auto_type_declaration               go to state 266
    bitfield_type_declaration           go to state 267
    type_declaration_no_options         go to state 1279
    type_declaration_no_options_no_dim  go to state 269


State 1180

  356 expr_method_call: expr . "->" "name" '(' ')'
  357                 | expr . "->" "name" '(' expr_list ')'
  367 expr_field: expr . '.' "name"
  368           | expr . '.' '.' "name"
  369           | expr . '.' "name" '(' ')'
  370           | expr . '.' "name" '(' expr_list ')'
  371           | expr . '.' basic_type_declaration '(' ')'
  372           | expr . '.' basic_type_declaration '(' expr_list ')'
  375           | expr . '.' $@25 error $@26
  397 expr: expr . "<<" expr
  398     | expr . ">>" expr
  399     | expr . "<<<" expr
  400     | expr . ">>>" expr
  401     | expr . '+' expr
  402     | expr . '-' expr
  403     | expr . '*' expr
  404     | expr . '/' expr
  405     | expr . '%' expr
  406     | expr . '<' expr
  407     | expr . '>' expr
  408     | expr . "==" expr
  409     | expr . "!=" expr
  410     | expr . "<=" expr
  411     | expr . ">=" expr
  412     | expr . '&' expr
  413     | expr . '|' expr
  414     | expr . '^' expr
  415     | expr . "&&" expr
  416     | expr . "||" expr
  417     | expr . "^^" expr
  418     | expr . ".." expr
  421     | expr . "++"
  422     | expr . "--"
  424     | expr . '[' expr ']'
  425     | expr . '.' '[' expr ']'
  426     | expr . "?[" expr ']'
  427     | expr . '.' "?[" expr ']'
  428     | expr . "?." "name"
  429     | expr . '.' "?." "name"
  436     | expr . "??" expr
  437     | expr . '?' expr ':' expr
  440     | expr . "is" "type" '<' $@27 type_declaration_no_options '>' $@28
  441     | expr . "is" basic_type_declaration
  442     | expr . "is" "name"
  443     | expr . "as" "name"
  446     | expr . "as" "type" '<' $@29 type_declaration '>' $@30
  447     | expr . "as" basic_type_declaration
  448     | expr . '?' "as" "name"
  451     | expr . '?' "as" "type" '<' $@31 type_declaration '>' $@32
  452     | expr . '?' "as" basic_type_declaration
  460     | expr . "<|" expr
  461     | expr . "|>" expr
  462     | expr . "|>" basic_type_declaration
  476 expr_mtag: expr . '.' "$f" '(' expr ')'
  477          | expr . "?." "$f" '(' expr ')'
  478          | expr . '.' '.' "$f" '(' expr ')'
  479          | expr . '.' "?." "$f" '(' expr ')'
  480          | expr . "as" "$f" '(' expr ')'
  481          | expr . '?' "as" "$f" '(' expr ')'
  482          | expr . "is" "$f" '(' expr ')'
  482          | expr "is" "$f" '(' expr . ')'

    "is"   shift, and go to state 603
    "as"   shift, and go to state 604
    "<<"   shift, and go to state 605
    ">>"   shift, and go to state 606
    "++"   shift, and go to state 607
    "--"   shift, and go to state 608
    "<="   shift, and go to state 609
    ">="   shift, and go to state 610
    "=="   shift, and go to state 611
    "!="   shift, and go to state 612
    "->"   shift, and go to state 613
    "??"   shift, and go to state 614
    "?."   shift, and go to state 615
    "?["   shift, and go to state 616
    "<|"   shift, and go to state 617
    "|>"   shift, and go to state 618
    "<<<"  shift, and go to state 619
    ">>>"  shift, and go to state 620
    "&&"   shift, and go to state 621
    "||"   shift, and go to state 622
    "^^"   shift, and go to state 623
    ".."   shift, and go to state 624
    '?'    shift, and go to state 625
    '|'    shift, and go to state 626
    '^'    shift, and go to state 627
    '&'    shift, and go to state 628
    '<'    shift, and go to state 629
    '>'    shift, and go to state 630
    '-'    shift, and go to state 631
    '+'    shift, and go to state 632
    '*'    shift, and go to state 633
    '/'    shift, and go to state 634
    '%'    shift, and go to state 635
    '.'    shift, and go to state 636
    '['    shift, and go to state 637
    ')'    shift, and go to state 1280


State 1181

  446 expr: expr "as" "type" '<' $@29 . type_declaration '>' $@30

    "type"       shift, and go to state 222
    "array"      shift, and go to state 223
    "table"      shift, and go to state 224
    "typedecl"   shift, and go to state 225
    "iterator"   shift, and go to state 226
    "smart_ptr"  shift, and go to state 227
    "bool"       shift, and go to state 228
    "void"       shift, and go to state 229
    "string"     shift, and go to state 230
    "auto"       shift, and go to state 231
    "int"        shift, and go to state 232
    "int2"       shift, and go to state 233
    "int3"       shift, and go to state 234
    "int4"       shift, and go to state 235
    "uint"       shift, and go to state 236
    "bitfield"   shift, and go to state 237
    "uint2"      shift, and go to state 238
    "uint3"      shift, and go to state 239
    "uint4"      shift, and go to state 240
    "float"      shift, and go to state 241
    "float2"     shift, and go to state 242
    "float3"     shift, and go to state 243
    "float4"     shift, and go to state 244
    "range"      shift, and go to state 245
    "urange"     shift, and go to state 246
    "range64"    shift, and go to state 247
    "urange64"   shift, and go to state 248
    "block"      shift, and go to state 249
    "int64"      shift, and go to state 250
    "uint64"     shift, and go to state 251
    "double"     shift, and go to state 252
    "function"   shift, and go to state 253
    "lambda"     shift, and go to state 254
    "int8"       shift, and go to state 255
    "uint8"      shift, and go to state 256
    "int16"      shift, and go to state 257
    "uint16"     shift, and go to state 258
    "tuple"      shift, and go to state 259
    "variant"    shift, and go to state 260
    "::"         shift, and go to state 55
    "$t"         shift, and go to state 261
    "name"       shift, and go to state 56
    '$'          shift, and go to state 262

    name_in_namespace                   go to state 263
    basic_type_declaration              go to state 264
    structure_type_declaration          go to state 265
    auto_type_declaration               go to state 266
    bitfield_type_declaration           go to state 267
    type_declaration_no_options         go to state 268
    type_declaration_no_options_no_dim  go to state 269
    type_declaration                    go to state 1281


State 1182

  356 expr_method_call: expr . "->" "name" '(' ')'
  357                 | expr . "->" "name" '(' expr_list ')'
  367 expr_field: expr . '.' "name"
  368           | expr . '.' '.' "name"
  369           | expr . '.' "name" '(' ')'
  370           | expr . '.' "name" '(' expr_list ')'
  371           | expr . '.' basic_type_declaration '(' ')'
  372           | expr . '.' basic_type_declaration '(' expr_list ')'
  375           | expr . '.' $@25 error $@26
  397 expr: expr . "<<" expr
  398     | expr . ">>" expr
  399     | expr . "<<<" expr
  400     | expr . ">>>" expr
  401     | expr . '+' expr
  402     | expr . '-' expr
  403     | expr . '*' expr
  404     | expr . '/' expr
  405     | expr . '%' expr
  406     | expr . '<' expr
  407     | expr . '>' expr
  408     | expr . "==" expr
  409     | expr . "!=" expr
  410     | expr . "<=" expr
  411     | expr . ">=" expr
  412     | expr . '&' expr
  413     | expr . '|' expr
  414     | expr . '^' expr
  415     | expr . "&&" expr
  416     | expr . "||" expr
  417     | expr . "^^" expr
  418     | expr . ".." expr
  421     | expr . "++"
  422     | expr . "--"
  424     | expr . '[' expr ']'
  425     | expr . '.' '[' expr ']'
  426     | expr . "?[" expr ']'
  427     | expr . '.' "?[" expr ']'
  428     | expr . "?." "name"
  429     | expr . '.' "?." "name"
  436     | expr . "??" expr
  437     | expr . '?' expr ':' expr
  440     | expr . "is" "type" '<' $@27 type_declaration_no_options '>' $@28
  441     | expr . "is" basic_type_declaration
  442     | expr . "is" "name"
  443     | expr . "as" "name"
  446     | expr . "as" "type" '<' $@29 type_declaration '>' $@30
  447     | expr . "as" basic_type_declaration
  448     | expr . '?' "as" "name"
  451     | expr . '?' "as" "type" '<' $@31 type_declaration '>' $@32
  452     | expr . '?' "as" basic_type_declaration
  460     | expr . "<|" expr
  461     | expr . "|>" expr
  462     | expr . "|>" basic_type_declaration
  476 expr_mtag: expr . '.' "$f" '(' expr ')'
  477          | expr . "?." "$f" '(' expr ')'
  478          | expr . '.' '.' "$f" '(' expr ')'
  479          | expr . '.' "?." "$f" '(' expr ')'
  480          | expr . "as" "$f" '(' expr ')'
  480          | expr "as" "$f" '(' expr . ')'
  481          | expr . '?' "as" "$f" '(' expr ')'
  482          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 603
    "as"   shift, and go to state 604
    "<<"   shift, and go to state 605
    ">>"   shift, and go to state 606
    "++"   shift, and go to state 607
    "--"   shift, and go to state 608
    "<="   shift, and go to state 609
    ">="   shift, and go to state 610
    "=="   shift, and go to state 611
    "!="   shift, and go to state 612
    "->"   shift, and go to state 613
    "??"   shift, and go to state 614
    "?."   shift, and go to state 615
    "?["   shift, and go to state 616
    "<|"   shift, and go to state 617
    "|>"   shift, and go to state 618
    "<<<"  shift, and go to state 619
    ">>>"  shift, and go to state 620
    "&&"   shift, and go to state 621
    "||"   shift, and go to state 622
    "^^"   shift, and go to state 623
    ".."   shift, and go to state 624
    '?'    shift, and go to state 625
    '|'    shift, and go to state 626
    '^'    shift, and go to state 627
    '&'    shift, and go to state 628
    '<'    shift, and go to state 629
    '>'    shift, and go to state 630
    '-'    shift, and go to state 631
    '+'    shift, and go to state 632
    '*'    shift, and go to state 633
    '/'    shift, and go to state 634
    '%'    shift, and go to state 635
    '.'    shift, and go to state 636
    '['    shift, and go to state 637
    ')'    shift, and go to state 1282


State 1183

  356 expr_method_call: expr "->" "name" '(' ')' .

    $default  reduce using rule 356 (expr_method_call)


State 1184

  309 expr_list: expr_list . ',' expr
  357 expr_method_call: expr "->" "name" '(' expr_list . ')'

    ','  shift, and go to state 1041
    ')'  shift, and go to state 1283


State 1185

  356 expr_method_call: expr . "->" "name" '(' ')'
  357                 | expr . "->" "name" '(' expr_list ')'
  367 expr_field: expr . '.' "name"
  368           | expr . '.' '.' "name"
  369           | expr . '.' "name" '(' ')'
  370           | expr . '.' "name" '(' expr_list ')'
  371           | expr . '.' basic_type_declaration '(' ')'
  372           | expr . '.' basic_type_declaration '(' expr_list ')'
  375           | expr . '.' $@25 error $@26
  397 expr: expr . "<<" expr
  398     | expr . ">>" expr
  399     | expr . "<<<" expr
  400     | expr . ">>>" expr
  401     | expr . '+' expr
  402     | expr . '-' expr
  403     | expr . '*' expr
  404     | expr . '/' expr
  405     | expr . '%' expr
  406     | expr . '<' expr
  407     | expr . '>' expr
  408     | expr . "==" expr
  409     | expr . "!=" expr
  410     | expr . "<=" expr
  411     | expr . ">=" expr
  412     | expr . '&' expr
  413     | expr . '|' expr
  414     | expr . '^' expr
  415     | expr . "&&" expr
  416     | expr . "||" expr
  417     | expr . "^^" expr
  418     | expr . ".." expr
  421     | expr . "++"
  422     | expr . "--"
  424     | expr . '[' expr ']'
  425     | expr . '.' '[' expr ']'
  426     | expr . "?[" expr ']'
  427     | expr . '.' "?[" expr ']'
  428     | expr . "?." "name"
  429     | expr . '.' "?." "name"
  436     | expr . "??" expr
  437     | expr . '?' expr ':' expr
  440     | expr . "is" "type" '<' $@27 type_declaration_no_options '>' $@28
  441     | expr . "is" basic_type_declaration
  442     | expr . "is" "name"
  443     | expr . "as" "name"
  446     | expr . "as" "type" '<' $@29 type_declaration '>' $@30
  447     | expr . "as" basic_type_declaration
  448     | expr . '?' "as" "name"
  451     | expr . '?' "as" "type" '<' $@31 type_declaration '>' $@32
  452     | expr . '?' "as" basic_type_declaration
  460     | expr . "<|" expr
  461     | expr . "|>" expr
  462     | expr . "|>" basic_type_declaration
  476 expr_mtag: expr . '.' "$f" '(' expr ')'
  477          | expr . "?." "$f" '(' expr ')'
  477          | expr "?." "$f" '(' expr . ')'
  478          | expr . '.' '.' "$f" '(' expr ')'
  479          | expr . '.' "?." "$f" '(' expr ')'
  480          | expr . "as" "$f" '(' expr ')'
  481          | expr . '?' "as" "$f" '(' expr ')'
  482          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 603
    "as"   shift, and go to state 604
    "<<"   shift, and go to state 605
    ">>"   shift, and go to state 606
    "++"   shift, and go to state 607
    "--"   shift, and go to state 608
    "<="   shift, and go to state 609
    ">="   shift, and go to state 610
    "=="   shift, and go to state 611
    "!="   shift, and go to state 612
    "->"   shift, and go to state 613
    "??"   shift, and go to state 614
    "?."   shift, and go to state 615
    "?["   shift, and go to state 616
    "<|"   shift, and go to state 617
    "|>"   shift, and go to state 618
    "<<<"  shift, and go to state 619
    ">>>"  shift, and go to state 620
    "&&"   shift, and go to state 621
    "||"   shift, and go to state 622
    "^^"   shift, and go to state 623
    ".."   shift, and go to state 624
    '?'    shift, and go to state 625
    '|'    shift, and go to state 626
    '^'    shift, and go to state 627
    '&'    shift, and go to state 628
    '<'    shift, and go to state 629
    '>'    shift, and go to state 630
    '-'    shift, and go to state 631
    '+'    shift, and go to state 632
    '*'    shift, and go to state 633
    '/'    shift, and go to state 634
    '%'    shift, and go to state 635
    '.'    shift, and go to state 636
    '['    shift, and go to state 637
    ')'    shift, and go to state 1284


State 1186

  451 expr: expr '?' "as" "type" '<' . $@31 type_declaration '>' $@32

    $default  reduce using rule 449 ($@31)

    $@31  go to state 1285


State 1187

  481 expr_mtag: expr '?' "as" "$f" '(' . expr ')'

    "struct"                          shift, and go to state 414
    "class"                           shift, and go to state 415
    "true"                            shift, and go to state 416
    "false"                           shift, and go to state 417
    "new"                             shift, and go to state 418
    "typeinfo"                        shift, and go to state 419
    "type"                            shift, and go to state 420
    "array"                           shift, and go to state 421
    "null"                            shift, and go to state 422
    "table"                           shift, and go to state 423
    "deref"                           shift, and go to state 424
    "cast"                            shift, and go to state 425
    "upcast"                          shift, and go to state 426
    "addr"                            shift, and go to state 427
    "reinterpret"                     shift, and go to state 428
    "unsafe"                          shift, and go to state 429
    "fixed_array"                     shift, and go to state 430
    "default"                         shift, and go to state 431
    "bool"                            shift, and go to state 228
    "void"                            shift, and go to state 229
    "string"                          shift, and go to state 230
    "int"                             shift, and go to state 232
    "int2"                            shift, and go to state 233
    "int3"                            shift, and go to state 234
    "int4"                            shift, and go to state 235
    "uint"                            shift, and go to state 236
    "bitfield"                        shift, and go to state 432
    "uint2"                           shift, and go to state 238
    "uint3"                           shift, and go to state 239
    "uint4"                           shift, and go to state 240
    "float"                           shift, and go to state 241
    "float2"                          shift, and go to state 242
    "float3"                          shift, and go to state 243
    "float4"                          shift, and go to state 244
    "range"                           shift, and go to state 245
    "urange"                          shift, and go to state 246
    "range64"                         shift, and go to state 247
    "urange64"                        shift, and go to state 248
    "int64"                           shift, and go to state 250
    "uint64"                          shift, and go to state 251
    "double"                          shift, and go to state 252
    "int8"                            shift, and go to state 255
    "uint8"                           shift, and go to state 256
    "int16"                           shift, and go to state 257
    "uint16"                          shift, and go to state 258
    "tuple"                           shift, and go to state 433
    "variant"                         shift, and go to state 434
    "generator"                       shift, and go to state 435
    "++"                              shift, and go to state 436
    "--"                              shift, and go to state 437
    "::"                              shift, and go to state 55
    "$$"                              shift, and go to state 438
    "$i"                              shift, and go to state 439
    "$v"                              shift, and go to state 440
    "$b"                              shift, and go to state 441
    "$a"                              shift, and go to state 442
    "$c"                              shift, and go to state 443
    "..."                             shift, and go to state 444
    "integer constant"                shift, and go to state 445
    "long integer constant"           shift, and go to state 446
    "unsigned integer constant"       shift, and go to state 447
    "unsigned long integer constant"  shift, and go to state 448
    "unsigned int8 constant"          shift, and go to state 449
    "floating point constant"         shift, and go to state 450
    "double constant"                 shift, and go to state 451
    "name"                            shift, and go to state 56
    "start of the string"             shift, and go to state 452
    '-'                               shift, and go to state 453
    '+'                               shift, and go to state 454
    '*'                               shift, and go to state 455
    '%'                               shift, and go to state 13
    '~'                               shift, and go to state 456
    '!'                               shift, and go to state 457
    '['                               shift, and go to state 458
    '('                               shift, and go to state 459
    '$'                               shift, and go to state 460
    '@'                               shift, and go to state 461
    '{'                               shift, and go to state 462

    string_builder          go to state 463
    expr_reader             go to state 464
    expr_call_pipe          go to state 465
    name_in_namespace       go to state 466
    expr_new                go to state 467
    expr_cast               go to state 468
    expr_type_decl          go to state 469
    expr_type_info          go to state 470
    block_or_lambda         go to state 471
    expr_full_block         go to state 472
    expr_numeric_const      go to state 473
    expr_named_call         go to state 474
    expr_method_call        go to state 475
    func_addr_expr          go to state 476
    expr_field              go to state 477
    expr_call               go to state 478
    expr                    go to state 1286
    expr_generator          go to state 480
    expr_mtag               go to state 481
    basic_type_declaration  go to state 482
    make_decl               go to state 483
    make_struct_decl        go to state 484
    make_tuple_call         go to state 485
    make_dim_decl           go to state 486
    make_table_decl         go to state 487
    array_comprehension     go to state 488


State 1188

  356 expr_method_call: expr . "->" "name" '(' ')'
  357                 | expr . "->" "name" '(' expr_list ')'
  367 expr_field: expr . '.' "name"
  368           | expr . '.' '.' "name"
  369           | expr . '.' "name" '(' ')'
  370           | expr . '.' "name" '(' expr_list ')'
  371           | expr . '.' basic_type_declaration '(' ')'
  372           | expr . '.' basic_type_declaration '(' expr_list ')'
  375           | expr . '.' $@25 error $@26
  397 expr: expr . "<<" expr
  398     | expr . ">>" expr
  399     | expr . "<<<" expr
  400     | expr . ">>>" expr
  401     | expr . '+' expr
  402     | expr . '-' expr
  403     | expr . '*' expr
  404     | expr . '/' expr
  405     | expr . '%' expr
  406     | expr . '<' expr
  407     | expr . '>' expr
  408     | expr . "==" expr
  409     | expr . "!=" expr
  410     | expr . "<=" expr
  411     | expr . ">=" expr
  412     | expr . '&' expr
  413     | expr . '|' expr
  414     | expr . '^' expr
  415     | expr . "&&" expr
  416     | expr . "||" expr
  417     | expr . "^^" expr
  418     | expr . ".." expr
  421     | expr . "++"
  422     | expr . "--"
  424     | expr . '[' expr ']'
  425     | expr . '.' '[' expr ']'
  426     | expr . "?[" expr ']'
  427     | expr . '.' "?[" expr ']'
  428     | expr . "?." "name"
  429     | expr . '.' "?." "name"
  436     | expr . "??" expr
  437     | expr . '?' expr ':' expr
  437     | expr '?' expr ':' expr .
  440     | expr . "is" "type" '<' $@27 type_declaration_no_options '>' $@28
  441     | expr . "is" basic_type_declaration
  442     | expr . "is" "name"
  443     | expr . "as" "name"
  446     | expr . "as" "type" '<' $@29 type_declaration '>' $@30
  447     | expr . "as" basic_type_declaration
  448     | expr . '?' "as" "name"
  451     | expr . '?' "as" "type" '<' $@31 type_declaration '>' $@32
  452     | expr . '?' "as" basic_type_declaration
  460     | expr . "<|" expr
  461     | expr . "|>" expr
  462     | expr . "|>" basic_type_declaration
  476 expr_mtag: expr . '.' "$f" '(' expr ')'
  477          | expr . "?." "$f" '(' expr ')'
  478          | expr . '.' '.' "$f" '(' expr ')'
  479          | expr . '.' "?." "$f" '(' expr ')'
  480          | expr . "as" "$f" '(' expr ')'
  481          | expr . '?' "as" "$f" '(' expr ')'
  482          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 603
    "as"   shift, and go to state 604
    "<<"   shift, and go to state 605
    ">>"   shift, and go to state 606
    "++"   shift, and go to state 607
    "--"   shift, and go to state 608
    "<="   shift, and go to state 609
    ">="   shift, and go to state 610
    "=="   shift, and go to state 611
    "!="   shift, and go to state 612
    "->"   shift, and go to state 613
    "??"   shift, and go to state 614
    "?."   shift, and go to state 615
    "?["   shift, and go to state 616
    "<|"   shift, and go to state 617
    "|>"   shift, and go to state 618
    "<<<"  shift, and go to state 619
    ">>>"  shift, and go to state 620
    "&&"   shift, and go to state 621
    "||"   shift, and go to state 622
    "^^"   shift, and go to state 623
    '?'    shift, and go to state 625
    '|'    shift, and go to state 626
    '^'    shift, and go to state 627
    '&'    shift, and go to state 628
    '<'    shift, and go to state 629
    '>'    shift, and go to state 630
    '-'    shift, and go to state 631
    '+'    shift, and go to state 632
    '*'    shift, and go to state 633
    '/'    shift, and go to state 634
    '%'    shift, and go to state 635
    '.'    shift, and go to state 636
    '['    shift, and go to state 637

    $default  reduce using rule 437 (expr)


State 1189

  479 expr_mtag: expr '.' "?." "$f" '(' . expr ')'

    "struct"                          shift, and go to state 414
    "class"                           shift, and go to state 415
    "true"                            shift, and go to state 416
    "false"                           shift, and go to state 417
    "new"                             shift, and go to state 418
    "typeinfo"                        shift, and go to state 419
    "type"                            shift, and go to state 420
    "array"                           shift, and go to state 421
    "null"                            shift, and go to state 422
    "table"                           shift, and go to state 423
    "deref"                           shift, and go to state 424
    "cast"                            shift, and go to state 425
    "upcast"                          shift, and go to state 426
    "addr"                            shift, and go to state 427
    "reinterpret"                     shift, and go to state 428
    "unsafe"                          shift, and go to state 429
    "fixed_array"                     shift, and go to state 430
    "default"                         shift, and go to state 431
    "bool"                            shift, and go to state 228
    "void"                            shift, and go to state 229
    "string"                          shift, and go to state 230
    "int"                             shift, and go to state 232
    "int2"                            shift, and go to state 233
    "int3"                            shift, and go to state 234
    "int4"                            shift, and go to state 235
    "uint"                            shift, and go to state 236
    "bitfield"                        shift, and go to state 432
    "uint2"                           shift, and go to state 238
    "uint3"                           shift, and go to state 239
    "uint4"                           shift, and go to state 240
    "float"                           shift, and go to state 241
    "float2"                          shift, and go to state 242
    "float3"                          shift, and go to state 243
    "float4"                          shift, and go to state 244
    "range"                           shift, and go to state 245
    "urange"                          shift, and go to state 246
    "range64"                         shift, and go to state 247
    "urange64"                        shift, and go to state 248
    "int64"                           shift, and go to state 250
    "uint64"                          shift, and go to state 251
    "double"                          shift, and go to state 252
    "int8"                            shift, and go to state 255
    "uint8"                           shift, and go to state 256
    "int16"                           shift, and go to state 257
    "uint16"                          shift, and go to state 258
    "tuple"                           shift, and go to state 433
    "variant"                         shift, and go to state 434
    "generator"                       shift, and go to state 435
    "++"                              shift, and go to state 436
    "--"                              shift, and go to state 437
    "::"                              shift, and go to state 55
    "$$"                              shift, and go to state 438
    "$i"                              shift, and go to state 439
    "$v"                              shift, and go to state 440
    "$b"                              shift, and go to state 441
    "$a"                              shift, and go to state 442
    "$c"                              shift, and go to state 443
    "..."                             shift, and go to state 444
    "integer constant"                shift, and go to state 445
    "long integer constant"           shift, and go to state 446
    "unsigned integer constant"       shift, and go to state 447
    "unsigned long integer constant"  shift, and go to state 448
    "unsigned int8 constant"          shift, and go to state 449
    "floating point constant"         shift, and go to state 450
    "double constant"                 shift, and go to state 451
    "name"                            shift, and go to state 56
    "start of the string"             shift, and go to state 452
    '-'                               shift, and go to state 453
    '+'                               shift, and go to state 454
    '*'                               shift, and go to state 455
    '%'                               shift, and go to state 13
    '~'                               shift, and go to state 456
    '!'                               shift, and go to state 457
    '['                               shift, and go to state 458
    '('                               shift, and go to state 459
    '$'                               shift, and go to state 460
    '@'                               shift, and go to state 461
    '{'                               shift, and go to state 462

    string_builder          go to state 463
    expr_reader             go to state 464
    expr_call_pipe          go to state 465
    name_in_namespace       go to state 466
    expr_new                go to state 467
    expr_cast               go to state 468
    expr_type_decl          go to state 469
    expr_type_info          go to state 470
    block_or_lambda         go to state 471
    expr_full_block         go to state 472
    expr_numeric_const      go to state 473
    expr_named_call         go to state 474
    expr_method_call        go to state 475
    func_addr_expr          go to state 476
    expr_field              go to state 477
    expr_call               go to state 478
    expr                    go to state 1287
    expr_generator          go to state 480
    expr_mtag               go to state 481
    basic_type_declaration  go to state 482
    make_decl               go to state 483
    make_struct_decl        go to state 484
    make_tuple_call         go to state 485
    make_dim_decl           go to state 486
    make_table_decl         go to state 487
    array_comprehension     go to state 488


State 1190

  427 expr: expr '.' "?[" expr ']' .

    $default  reduce using rule 427 (expr)


State 1191

  356 expr_method_call: expr . "->" "name" '(' ')'
  357                 | expr . "->" "name" '(' expr_list ')'
  367 expr_field: expr . '.' "name"
  368           | expr . '.' '.' "name"
  369           | expr . '.' "name" '(' ')'
  370           | expr . '.' "name" '(' expr_list ')'
  371           | expr . '.' basic_type_declaration '(' ')'
  372           | expr . '.' basic_type_declaration '(' expr_list ')'
  375           | expr . '.' $@25 error $@26
  397 expr: expr . "<<" expr
  398     | expr . ">>" expr
  399     | expr . "<<<" expr
  400     | expr . ">>>" expr
  401     | expr . '+' expr
  402     | expr . '-' expr
  403     | expr . '*' expr
  404     | expr . '/' expr
  405     | expr . '%' expr
  406     | expr . '<' expr
  407     | expr . '>' expr
  408     | expr . "==" expr
  409     | expr . "!=" expr
  410     | expr . "<=" expr
  411     | expr . ">=" expr
  412     | expr . '&' expr
  413     | expr . '|' expr
  414     | expr . '^' expr
  415     | expr . "&&" expr
  416     | expr . "||" expr
  417     | expr . "^^" expr
  418     | expr . ".." expr
  421     | expr . "++"
  422     | expr . "--"
  424     | expr . '[' expr ']'
  425     | expr . '.' '[' expr ']'
  426     | expr . "?[" expr ']'
  427     | expr . '.' "?[" expr ']'
  428     | expr . "?." "name"
  429     | expr . '.' "?." "name"
  436     | expr . "??" expr
  437     | expr . '?' expr ':' expr
  440     | expr . "is" "type" '<' $@27 type_declaration_no_options '>' $@28
  441     | expr . "is" basic_type_declaration
  442     | expr . "is" "name"
  443     | expr . "as" "name"
  446     | expr . "as" "type" '<' $@29 type_declaration '>' $@30
  447     | expr . "as" basic_type_declaration
  448     | expr . '?' "as" "name"
  451     | expr . '?' "as" "type" '<' $@31 type_declaration '>' $@32
  452     | expr . '?' "as" basic_type_declaration
  460     | expr . "<|" expr
  461     | expr . "|>" expr
  462     | expr . "|>" basic_type_declaration
  476 expr_mtag: expr . '.' "$f" '(' expr ')'
  476          | expr '.' "$f" '(' expr . ')'
  477          | expr . "?." "$f" '(' expr ')'
  478          | expr . '.' '.' "$f" '(' expr ')'
  479          | expr . '.' "?." "$f" '(' expr ')'
  480          | expr . "as" "$f" '(' expr ')'
  481          | expr . '?' "as" "$f" '(' expr ')'
  482          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 603
    "as"   shift, and go to state 604
    "<<"   shift, and go to state 605
    ">>"   shift, and go to state 606
    "++"   shift, and go to state 607
    "--"   shift, and go to state 608
    "<="   shift, and go to state 609
    ">="   shift, and go to state 610
    "=="   shift, and go to state 611
    "!="   shift, and go to state 612
    "->"   shift, and go to state 613
    "??"   shift, and go to state 614
    "?."   shift, and go to state 615
    "?["   shift, and go to state 616
    "<|"   shift, and go to state 617
    "|>"   shift, and go to state 618
    "<<<"  shift, and go to state 619
    ">>>"  shift, and go to state 620
    "&&"   shift, and go to state 621
    "||"   shift, and go to state 622
    "^^"   shift, and go to state 623
    ".."   shift, and go to state 624
    '?'    shift, and go to state 625
    '|'    shift, and go to state 626
    '^'    shift, and go to state 627
    '&'    shift, and go to state 628
    '<'    shift, and go to state 629
    '>'    shift, and go to state 630
    '-'    shift, and go to state 631
    '+'    shift, and go to state 632
    '*'    shift, and go to state 633
    '/'    shift, and go to state 634
    '%'    shift, and go to state 635
    '.'    shift, and go to state 636
    '['    shift, and go to state 637
    ')'    shift, and go to state 1288


State 1192

  369 expr_field: expr '.' "name" '(' ')' .

    $default  reduce using rule 369 (expr_field)


State 1193

  309 expr_list: expr_list . ',' expr
  370 expr_field: expr '.' "name" '(' expr_list . ')'

    ','  shift, and go to state 1041
    ')'  shift, and go to state 1289


State 1194

  478 expr_mtag: expr '.' '.' "$f" '(' . expr ')'

    "struct"                          shift, and go to state 414
    "class"                           shift, and go to state 415
    "true"                            shift, and go to state 416
    "false"                           shift, and go to state 417
    "new"                             shift, and go to state 418
    "typeinfo"                        shift, and go to state 419
    "type"                            shift, and go to state 420
    "array"                           shift, and go to state 421
    "null"                            shift, and go to state 422
    "table"                           shift, and go to state 423
    "deref"                           shift, and go to state 424
    "cast"                            shift, and go to state 425
    "upcast"                          shift, and go to state 426
    "addr"                            shift, and go to state 427
    "reinterpret"                     shift, and go to state 428
    "unsafe"                          shift, and go to state 429
    "fixed_array"                     shift, and go to state 430
    "default"                         shift, and go to state 431
    "bool"                            shift, and go to state 228
    "void"                            shift, and go to state 229
    "string"                          shift, and go to state 230
    "int"                             shift, and go to state 232
    "int2"                            shift, and go to state 233
    "int3"                            shift, and go to state 234
    "int4"                            shift, and go to state 235
    "uint"                            shift, and go to state 236
    "bitfield"                        shift, and go to state 432
    "uint2"                           shift, and go to state 238
    "uint3"                           shift, and go to state 239
    "uint4"                           shift, and go to state 240
    "float"                           shift, and go to state 241
    "float2"                          shift, and go to state 242
    "float3"                          shift, and go to state 243
    "float4"                          shift, and go to state 244
    "range"                           shift, and go to state 245
    "urange"                          shift, and go to state 246
    "range64"                         shift, and go to state 247
    "urange64"                        shift, and go to state 248
    "int64"                           shift, and go to state 250
    "uint64"                          shift, and go to state 251
    "double"                          shift, and go to state 252
    "int8"                            shift, and go to state 255
    "uint8"                           shift, and go to state 256
    "int16"                           shift, and go to state 257
    "uint16"                          shift, and go to state 258
    "tuple"                           shift, and go to state 433
    "variant"                         shift, and go to state 434
    "generator"                       shift, and go to state 435
    "++"                              shift, and go to state 436
    "--"                              shift, and go to state 437
    "::"                              shift, and go to state 55
    "$$"                              shift, and go to state 438
    "$i"                              shift, and go to state 439
    "$v"                              shift, and go to state 440
    "$b"                              shift, and go to state 441
    "$a"                              shift, and go to state 442
    "$c"                              shift, and go to state 443
    "..."                             shift, and go to state 444
    "integer constant"                shift, and go to state 445
    "long integer constant"           shift, and go to state 446
    "unsigned integer constant"       shift, and go to state 447
    "unsigned long integer constant"  shift, and go to state 448
    "unsigned int8 constant"          shift, and go to state 449
    "floating point constant"         shift, and go to state 450
    "double constant"                 shift, and go to state 451
    "name"                            shift, and go to state 56
    "start of the string"             shift, and go to state 452
    '-'                               shift, and go to state 453
    '+'                               shift, and go to state 454
    '*'                               shift, and go to state 455
    '%'                               shift, and go to state 13
    '~'                               shift, and go to state 456
    '!'                               shift, and go to state 457
    '['                               shift, and go to state 458
    '('                               shift, and go to state 459
    '$'                               shift, and go to state 460
    '@'                               shift, and go to state 461
    '{'                               shift, and go to state 462

    string_builder          go to state 463
    expr_reader             go to state 464
    expr_call_pipe          go to state 465
    name_in_namespace       go to state 466
    expr_new                go to state 467
    expr_cast               go to state 468
    expr_type_decl          go to state 469
    expr_type_info          go to state 470
    block_or_lambda         go to state 471
    expr_full_block         go to state 472
    expr_numeric_const      go to state 473
    expr_named_call         go to state 474
    expr_method_call        go to state 475
    func_addr_expr          go to state 476
    expr_field              go to state 477
    expr_call               go to state 478
    expr                    go to state 1290
    expr_generator          go to state 480
    expr_mtag               go to state 481
    basic_type_declaration  go to state 482
    make_decl               go to state 483
    make_struct_decl        go to state 484
    make_tuple_call         go to state 485
    make_dim_decl           go to state 486
    make_table_decl         go to state 487
    array_comprehension     go to state 488


State 1195

  425 expr: expr '.' '[' expr ']' .

    $default  reduce using rule 425 (expr)


State 1196

  375 expr_field: expr '.' $@25 error $@26 .

    $default  reduce using rule 375 (expr_field)


State 1197

  371 expr_field: expr '.' basic_type_declaration '(' ')' .

    $default  reduce using rule 371 (expr_field)


State 1198

  309 expr_list: expr_list . ',' expr
  372 expr_field: expr '.' basic_type_declaration '(' expr_list . ')'

    ','  shift, and go to state 1041
    ')'  shift, and go to state 1291


State 1199

  705 type_declaration_no_options_no_dim: "block" '<' $@59 optional_function_argument_list optional_function_type '>' $@60 .

    $default  reduce using rule 705 (type_declaration_no_options_no_dim)


State 1200

  712 type_declaration_no_options_no_dim: "function" '<' $@63 optional_function_argument_list optional_function_type '>' $@64 .

    $default  reduce using rule 712 (type_declaration_no_options_no_dim)


State 1201

  719 type_declaration_no_options_no_dim: "lambda" '<' $@67 optional_function_argument_list optional_function_type '>' $@68 .

    $default  reduce using rule 719 (type_declaration_no_options_no_dim)


State 1202

  673 type_declaration_no_options_no_dim: '$' name_in_namespace '<' $@48 type_declaration_no_options_list '>' '(' . optional_expr_list ')'

    "struct"                          shift, and go to state 414
    "class"                           shift, and go to state 415
    "true"                            shift, and go to state 416
    "false"                           shift, and go to state 417
    "new"                             shift, and go to state 418
    "typeinfo"                        shift, and go to state 419
    "type"                            shift, and go to state 420
    "array"                           shift, and go to state 421
    "null"                            shift, and go to state 422
    "table"                           shift, and go to state 423
    "deref"                           shift, and go to state 424
    "cast"                            shift, and go to state 425
    "upcast"                          shift, and go to state 426
    "addr"                            shift, and go to state 427
    "reinterpret"                     shift, and go to state 428
    "unsafe"                          shift, and go to state 429
    "fixed_array"                     shift, and go to state 430
    "default"                         shift, and go to state 431
    "bool"                            shift, and go to state 228
    "void"                            shift, and go to state 229
    "string"                          shift, and go to state 230
    "int"                             shift, and go to state 232
    "int2"                            shift, and go to state 233
    "int3"                            shift, and go to state 234
    "int4"                            shift, and go to state 235
    "uint"                            shift, and go to state 236
    "bitfield"                        shift, and go to state 432
    "uint2"                           shift, and go to state 238
    "uint3"                           shift, and go to state 239
    "uint4"                           shift, and go to state 240
    "float"                           shift, and go to state 241
    "float2"                          shift, and go to state 242
    "float3"                          shift, and go to state 243
    "float4"                          shift, and go to state 244
    "range"                           shift, and go to state 245
    "urange"                          shift, and go to state 246
    "range64"                         shift, and go to state 247
    "urange64"                        shift, and go to state 248
    "int64"                           shift, and go to state 250
    "uint64"                          shift, and go to state 251
    "double"                          shift, and go to state 252
    "int8"                            shift, and go to state 255
    "uint8"                           shift, and go to state 256
    "int16"                           shift, and go to state 257
    "uint16"                          shift, and go to state 258
    "tuple"                           shift, and go to state 433
    "variant"                         shift, and go to state 434
    "generator"                       shift, and go to state 435
    "++"                              shift, and go to state 436
    "--"                              shift, and go to state 437
    "::"                              shift, and go to state 55
    "$$"                              shift, and go to state 438
    "$i"                              shift, and go to state 439
    "$v"                              shift, and go to state 440
    "$b"                              shift, and go to state 441
    "$a"                              shift, and go to state 442
    "$c"                              shift, and go to state 443
    "..."                             shift, and go to state 444
    "integer constant"                shift, and go to state 445
    "long integer constant"           shift, and go to state 446
    "unsigned integer constant"       shift, and go to state 447
    "unsigned long integer constant"  shift, and go to state 448
    "unsigned int8 constant"          shift, and go to state 449
    "floating point constant"         shift, and go to state 450
    "double constant"                 shift, and go to state 451
    "name"                            shift, and go to state 56
    "start of the string"             shift, and go to state 452
    '-'                               shift, and go to state 453
    '+'                               shift, and go to state 454
    '*'                               shift, and go to state 455
    '%'                               shift, and go to state 13
    '~'                               shift, and go to state 456
    '!'                               shift, and go to state 457
    '['                               shift, and go to state 458
    '('                               shift, and go to state 459
    '$'                               shift, and go to state 460
    '@'                               shift, and go to state 461
    '{'                               shift, and go to state 462

    $default  reduce using rule 250 (optional_expr_list)

    string_builder          go to state 463
    expr_reader             go to state 464
    expr_call_pipe          go to state 465
    optional_expr_list      go to state 1292
    name_in_namespace       go to state 466
    expr_new                go to state 467
    expr_cast               go to state 468
    expr_type_decl          go to state 469
    expr_type_info          go to state 470
    expr_list               go to state 661
    block_or_lambda         go to state 471
    expr_full_block         go to state 472
    expr_numeric_const      go to state 473
    expr_named_call         go to state 474
    expr_method_call        go to state 475
    func_addr_expr          go to state 476
    expr_field              go to state 477
    expr_call               go to state 478
    expr                    go to state 590
    expr_generator          go to state 480
    expr_mtag               go to state 481
    basic_type_declaration  go to state 482
    make_decl               go to state 483
    make_struct_decl        go to state 484
    make_tuple_call         go to state 485
    make_dim_decl           go to state 486
    make_table_decl         go to state 487
    array_comprehension     go to state 488


State 1203

  255 type_declaration_no_options_list: type_declaration_no_options_list c_or_s type_declaration .
  727 type_declaration: type_declaration . '|' type_declaration_no_options
  728                 | type_declaration . '|' '#'

    '|'  shift, and go to state 372

    $default  reduce using rule 255 (type_declaration_no_options_list)


State 1204

  743 bitfield_alias_declaration: "bitfield" $@81 optional_public_or_private_alias "name" optional_commas $@82 '{' $@83 bitfield_alias_bits optional_commas $@84 '}' .

    $default  reduce using rule 743 (bitfield_alias_declaration)


State 1205

  733 tuple_alias_declaration: "tuple" $@73 optional_public_or_private_alias "name" optional_semis $@74 '{' $@75 tuple_alias_type_list optional_semis $@76 '}' .

    $default  reduce using rule 733 (tuple_alias_declaration)


State 1206

  738 variant_alias_declaration: "variant" $@77 optional_public_or_private_alias "name" optional_semis $@78 '{' $@79 variant_alias_type_list optional_semis $@80 '}' .

    $default  reduce using rule 738 (variant_alias_declaration)


State 1207

  602 variable_name_with_pos_list: "$i" '(' expr ')' .

    $default  reduce using rule 602 (variable_name_with_pos_list)


State 1208

  605 variable_name_with_pos_list: variable_name_with_pos_list ',' "name" "aka" . "name"

    "name"  shift, and go to state 1293


State 1209

  526 variable_declaration: variable_name_with_pos_list ':' type_declaration copy_or_move . expr

    "struct"                          shift, and go to state 414
    "class"                           shift, and go to state 415
    "true"                            shift, and go to state 416
    "false"                           shift, and go to state 417
    "new"                             shift, and go to state 418
    "typeinfo"                        shift, and go to state 419
    "type"                            shift, and go to state 420
    "array"                           shift, and go to state 421
    "null"                            shift, and go to state 422
    "table"                           shift, and go to state 423
    "deref"                           shift, and go to state 424
    "cast"                            shift, and go to state 425
    "upcast"                          shift, and go to state 426
    "addr"                            shift, and go to state 427
    "reinterpret"                     shift, and go to state 428
    "unsafe"                          shift, and go to state 429
    "fixed_array"                     shift, and go to state 430
    "default"                         shift, and go to state 431
    "bool"                            shift, and go to state 228
    "void"                            shift, and go to state 229
    "string"                          shift, and go to state 230
    "int"                             shift, and go to state 232
    "int2"                            shift, and go to state 233
    "int3"                            shift, and go to state 234
    "int4"                            shift, and go to state 235
    "uint"                            shift, and go to state 236
    "bitfield"                        shift, and go to state 432
    "uint2"                           shift, and go to state 238
    "uint3"                           shift, and go to state 239
    "uint4"                           shift, and go to state 240
    "float"                           shift, and go to state 241
    "float2"                          shift, and go to state 242
    "float3"                          shift, and go to state 243
    "float4"                          shift, and go to state 244
    "range"                           shift, and go to state 245
    "urange"                          shift, and go to state 246
    "range64"                         shift, and go to state 247
    "urange64"                        shift, and go to state 248
    "int64"                           shift, and go to state 250
    "uint64"                          shift, and go to state 251
    "double"                          shift, and go to state 252
    "int8"                            shift, and go to state 255
    "uint8"                           shift, and go to state 256
    "int16"                           shift, and go to state 257
    "uint16"                          shift, and go to state 258
    "tuple"                           shift, and go to state 433
    "variant"                         shift, and go to state 434
    "generator"                       shift, and go to state 435
    "++"                              shift, and go to state 436
    "--"                              shift, and go to state 437
    "::"                              shift, and go to state 55
    "$$"                              shift, and go to state 438
    "$i"                              shift, and go to state 439
    "$v"                              shift, and go to state 440
    "$b"                              shift, and go to state 441
    "$a"                              shift, and go to state 442
    "$c"                              shift, and go to state 443
    "..."                             shift, and go to state 444
    "integer constant"                shift, and go to state 445
    "long integer constant"           shift, and go to state 446
    "unsigned integer constant"       shift, and go to state 447
    "unsigned long integer constant"  shift, and go to state 448
    "unsigned int8 constant"          shift, and go to state 449
    "floating point constant"         shift, and go to state 450
    "double constant"                 shift, and go to state 451
    "name"                            shift, and go to state 56
    "start of the string"             shift, and go to state 452
    '-'                               shift, and go to state 453
    '+'                               shift, and go to state 454
    '*'                               shift, and go to state 455
    '%'                               shift, and go to state 13
    '~'                               shift, and go to state 456
    '!'                               shift, and go to state 457
    '['                               shift, and go to state 458
    '('                               shift, and go to state 459
    '$'                               shift, and go to state 460
    '@'                               shift, and go to state 461
    '{'                               shift, and go to state 462

    string_builder          go to state 463
    expr_reader             go to state 464
    expr_call_pipe          go to state 465
    name_in_namespace       go to state 466
    expr_new                go to state 467
    expr_cast               go to state 468
    expr_type_decl          go to state 469
    expr_type_info          go to state 470
    block_or_lambda         go to state 471
    expr_full_block         go to state 472
    expr_numeric_const      go to state 473
    expr_named_call         go to state 474
    expr_method_call        go to state 475
    func_addr_expr          go to state 476
    expr_field              go to state 477
    expr_call               go to state 478
    expr                    go to state 1294
    expr_generator          go to state 480
    expr_mtag               go to state 481
    basic_type_declaration  go to state 482
    make_decl               go to state 483
    make_struct_decl        go to state 484
    make_tuple_call         go to state 485
    make_dim_decl           go to state 486
    make_table_decl         go to state 487
    array_comprehension     go to state 488


State 1210

  278 expression_try_catch: "try" expression_block "recover" expression_block .

    $default  reduce using rule 278 (expression_try_catch)


State 1211

   83 expression_with_alias: "assume" "name" '=' expr .
  356 expr_method_call: expr . "->" "name" '(' ')'
  357                 | expr . "->" "name" '(' expr_list ')'
  367 expr_field: expr . '.' "name"
  368           | expr . '.' '.' "name"
  369           | expr . '.' "name" '(' ')'
  370           | expr . '.' "name" '(' expr_list ')'
  371           | expr . '.' basic_type_declaration '(' ')'
  372           | expr . '.' basic_type_declaration '(' expr_list ')'
  375           | expr . '.' $@25 error $@26
  397 expr: expr . "<<" expr
  398     | expr . ">>" expr
  399     | expr . "<<<" expr
  400     | expr . ">>>" expr
  401     | expr . '+' expr
  402     | expr . '-' expr
  403     | expr . '*' expr
  404     | expr . '/' expr
  405     | expr . '%' expr
  406     | expr . '<' expr
  407     | expr . '>' expr
  408     | expr . "==" expr
  409     | expr . "!=" expr
  410     | expr . "<=" expr
  411     | expr . ">=" expr
  412     | expr . '&' expr
  413     | expr . '|' expr
  414     | expr . '^' expr
  415     | expr . "&&" expr
  416     | expr . "||" expr
  417     | expr . "^^" expr
  418     | expr . ".." expr
  421     | expr . "++"
  422     | expr . "--"
  424     | expr . '[' expr ']'
  425     | expr . '.' '[' expr ']'
  426     | expr . "?[" expr ']'
  427     | expr . '.' "?[" expr ']'
  428     | expr . "?." "name"
  429     | expr . '.' "?." "name"
  436     | expr . "??" expr
  437     | expr . '?' expr ':' expr
  440     | expr . "is" "type" '<' $@27 type_declaration_no_options '>' $@28
  441     | expr . "is" basic_type_declaration
  442     | expr . "is" "name"
  443     | expr . "as" "name"
  446     | expr . "as" "type" '<' $@29 type_declaration '>' $@30
  447     | expr . "as" basic_type_declaration
  448     | expr . '?' "as" "name"
  451     | expr . '?' "as" "type" '<' $@31 type_declaration '>' $@32
  452     | expr . '?' "as" basic_type_declaration
  460     | expr . "<|" expr
  461     | expr . "|>" expr
  462     | expr . "|>" basic_type_declaration
  476 expr_mtag: expr . '.' "$f" '(' expr ')'
  477          | expr . "?." "$f" '(' expr ')'
  478          | expr . '.' '.' "$f" '(' expr ')'
  479          | expr . '.' "?." "$f" '(' expr ')'
  480          | expr . "as" "$f" '(' expr ')'
  481          | expr . '?' "as" "$f" '(' expr ')'
  482          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 603
    "as"   shift, and go to state 604
    "<<"   shift, and go to state 605
    ">>"   shift, and go to state 606
    "++"   shift, and go to state 607
    "--"   shift, and go to state 608
    "<="   shift, and go to state 609
    ">="   shift, and go to state 610
    "=="   shift, and go to state 611
    "!="   shift, and go to state 612
    "->"   shift, and go to state 613
    "??"   shift, and go to state 614
    "?."   shift, and go to state 615
    "?["   shift, and go to state 616
    "<|"   shift, and go to state 617
    "|>"   shift, and go to state 618
    "<<<"  shift, and go to state 619
    ">>>"  shift, and go to state 620
    "&&"   shift, and go to state 621
    "||"   shift, and go to state 622
    "^^"   shift, and go to state 623
    ".."   shift, and go to state 624
    '?'    shift, and go to state 625
    '|'    shift, and go to state 626
    '^'    shift, and go to state 627
    '&'    shift, and go to state 628
    '<'    shift, and go to state 629
    '>'    shift, and go to state 630
    '-'    shift, and go to state 631
    '+'    shift, and go to state 632
    '*'    shift, and go to state 633
    '/'    shift, and go to state 634
    '%'    shift, and go to state 635
    '.'    shift, and go to state 636
    '['    shift, and go to state 637

    $default  reduce using rule 83 (expression_with_alias)


State 1212

   75 expression_if_then_else_oneliner: expression_if_one_liner "if" '(' expr . ')' expression_else_one_liner ';'
  356 expr_method_call: expr . "->" "name" '(' ')'
  357                 | expr . "->" "name" '(' expr_list ')'
  367 expr_field: expr . '.' "name"
  368           | expr . '.' '.' "name"
  369           | expr . '.' "name" '(' ')'
  370           | expr . '.' "name" '(' expr_list ')'
  371           | expr . '.' basic_type_declaration '(' ')'
  372           | expr . '.' basic_type_declaration '(' expr_list ')'
  375           | expr . '.' $@25 error $@26
  397 expr: expr . "<<" expr
  398     | expr . ">>" expr
  399     | expr . "<<<" expr
  400     | expr . ">>>" expr
  401     | expr . '+' expr
  402     | expr . '-' expr
  403     | expr . '*' expr
  404     | expr . '/' expr
  405     | expr . '%' expr
  406     | expr . '<' expr
  407     | expr . '>' expr
  408     | expr . "==" expr
  409     | expr . "!=" expr
  410     | expr . "<=" expr
  411     | expr . ">=" expr
  412     | expr . '&' expr
  413     | expr . '|' expr
  414     | expr . '^' expr
  415     | expr . "&&" expr
  416     | expr . "||" expr
  417     | expr . "^^" expr
  418     | expr . ".." expr
  421     | expr . "++"
  422     | expr . "--"
  424     | expr . '[' expr ']'
  425     | expr . '.' '[' expr ']'
  426     | expr . "?[" expr ']'
  427     | expr . '.' "?[" expr ']'
  428     | expr . "?." "name"
  429     | expr . '.' "?." "name"
  436     | expr . "??" expr
  437     | expr . '?' expr ':' expr
  440     | expr . "is" "type" '<' $@27 type_declaration_no_options '>' $@28
  441     | expr . "is" basic_type_declaration
  442     | expr . "is" "name"
  443     | expr . "as" "name"
  446     | expr . "as" "type" '<' $@29 type_declaration '>' $@30
  447     | expr . "as" basic_type_declaration
  448     | expr . '?' "as" "name"
  451     | expr . '?' "as" "type" '<' $@31 type_declaration '>' $@32
  452     | expr . '?' "as" basic_type_declaration
  460     | expr . "<|" expr
  461     | expr . "|>" expr
  462     | expr . "|>" basic_type_declaration
  476 expr_mtag: expr . '.' "$f" '(' expr ')'
  477          | expr . "?." "$f" '(' expr ')'
  478          | expr . '.' '.' "$f" '(' expr ')'
  479          | expr . '.' "?." "$f" '(' expr ')'
  480          | expr . "as" "$f" '(' expr ')'
  481          | expr . '?' "as" "$f" '(' expr ')'
  482          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 603
    "as"   shift, and go to state 604
    "<<"   shift, and go to state 605
    ">>"   shift, and go to state 606
    "++"   shift, and go to state 607
    "--"   shift, and go to state 608
    "<="   shift, and go to state 609
    ">="   shift, and go to state 610
    "=="   shift, and go to state 611
    "!="   shift, and go to state 612
    "->"   shift, and go to state 613
    "??"   shift, and go to state 614
    "?."   shift, and go to state 615
    "?["   shift, and go to state 616
    "<|"   shift, and go to state 617
    "|>"   shift, and go to state 618
    "<<<"  shift, and go to state 619
    ">>>"  shift, and go to state 620
    "&&"   shift, and go to state 621
    "||"   shift, and go to state 622
    "^^"   shift, and go to state 623
    ".."   shift, and go to state 624
    '?'    shift, and go to state 625
    '|'    shift, and go to state 626
    '^'    shift, and go to state 627
    '&'    shift, and go to state 628
    '<'    shift, and go to state 629
    '>'    shift, and go to state 630
    '-'    shift, and go to state 631
    '+'    shift, and go to state 632
    '*'    shift, and go to state 633
    '/'    shift, and go to state 634
    '%'    shift, and go to state 635
    '.'    shift, and go to state 636
    '['    shift, and go to state 637
    ')'    shift, and go to state 1295


State 1213

   74 expression_if_then_else: $@2 if_or_static_if '(' expr . ')' optional_semis expression_block expression_else
  356 expr_method_call: expr . "->" "name" '(' ')'
  357                 | expr . "->" "name" '(' expr_list ')'
  367 expr_field: expr . '.' "name"
  368           | expr . '.' '.' "name"
  369           | expr . '.' "name" '(' ')'
  370           | expr . '.' "name" '(' expr_list ')'
  371           | expr . '.' basic_type_declaration '(' ')'
  372           | expr . '.' basic_type_declaration '(' expr_list ')'
  375           | expr . '.' $@25 error $@26
  397 expr: expr . "<<" expr
  398     | expr . ">>" expr
  399     | expr . "<<<" expr
  400     | expr . ">>>" expr
  401     | expr . '+' expr
  402     | expr . '-' expr
  403     | expr . '*' expr
  404     | expr . '/' expr
  405     | expr . '%' expr
  406     | expr . '<' expr
  407     | expr . '>' expr
  408     | expr . "==" expr
  409     | expr . "!=" expr
  410     | expr . "<=" expr
  411     | expr . ">=" expr
  412     | expr . '&' expr
  413     | expr . '|' expr
  414     | expr . '^' expr
  415     | expr . "&&" expr
  416     | expr . "||" expr
  417     | expr . "^^" expr
  418     | expr . ".." expr
  421     | expr . "++"
  422     | expr . "--"
  424     | expr . '[' expr ']'
  425     | expr . '.' '[' expr ']'
  426     | expr . "?[" expr ']'
  427     | expr . '.' "?[" expr ']'
  428     | expr . "?." "name"
  429     | expr . '.' "?." "name"
  436     | expr . "??" expr
  437     | expr . '?' expr ':' expr
  440     | expr . "is" "type" '<' $@27 type_declaration_no_options '>' $@28
  441     | expr . "is" basic_type_declaration
  442     | expr . "is" "name"
  443     | expr . "as" "name"
  446     | expr . "as" "type" '<' $@29 type_declaration '>' $@30
  447     | expr . "as" basic_type_declaration
  448     | expr . '?' "as" "name"
  451     | expr . '?' "as" "type" '<' $@31 type_declaration '>' $@32
  452     | expr . '?' "as" basic_type_declaration
  460     | expr . "<|" expr
  461     | expr . "|>" expr
  462     | expr . "|>" basic_type_declaration
  476 expr_mtag: expr . '.' "$f" '(' expr ')'
  477          | expr . "?." "$f" '(' expr ')'
  478          | expr . '.' '.' "$f" '(' expr ')'
  479          | expr . '.' "?." "$f" '(' expr ')'
  480          | expr . "as" "$f" '(' expr ')'
  481          | expr . '?' "as" "$f" '(' expr ')'
  482          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 603
    "as"   shift, and go to state 604
    "<<"   shift, and go to state 605
    ">>"   shift, and go to state 606
    "++"   shift, and go to state 607
    "--"   shift, and go to state 608
    "<="   shift, and go to state 609
    ">="   shift, and go to state 610
    "=="   shift, and go to state 611
    "!="   shift, and go to state 612
    "->"   shift, and go to state 613
    "??"   shift, and go to state 614
    "?."   shift, and go to state 615
    "?["   shift, and go to state 616
    "<|"   shift, and go to state 617
    "|>"   shift, and go to state 618
    "<<<"  shift, and go to state 619
    ">>>"  shift, and go to state 620
    "&&"   shift, and go to state 621
    "||"   shift, and go to state 622
    "^^"   shift, and go to state 623
    ".."   shift, and go to state 624
    '?'    shift, and go to state 625
    '|'    shift, and go to state 626
    '^'    shift, and go to state 627
    '&'    shift, and go to state 628
    '<'    shift, and go to state 629
    '>'    shift, and go to state 630
    '-'    shift, and go to state 631
    '+'    shift, and go to state 632
    '*'    shift, and go to state 633
    '/'    shift, and go to state 634
    '%'    shift, and go to state 635
    '.'    shift, and go to state 636
    '['    shift, and go to state 637
    ')'    shift, and go to state 1296


State 1214

   77 expression_for_loop: $@3 "for" '(' variable_name_with_pos_list . "in" expr_list ')' optional_semis expression_block
  604 variable_name_with_pos_list: variable_name_with_pos_list . ',' "name"
  605                            | variable_name_with_pos_list . ',' "name" "aka" "name"

    "in"  shift, and go to state 1297
    ','   shift, and go to state 880


State 1215

   80 expression_while_loop: $@4 "while" '(' expr . ')' optional_semis expression_block
  356 expr_method_call: expr . "->" "name" '(' ')'
  357                 | expr . "->" "name" '(' expr_list ')'
  367 expr_field: expr . '.' "name"
  368           | expr . '.' '.' "name"
  369           | expr . '.' "name" '(' ')'
  370           | expr . '.' "name" '(' expr_list ')'
  371           | expr . '.' basic_type_declaration '(' ')'
  372           | expr . '.' basic_type_declaration '(' expr_list ')'
  375           | expr . '.' $@25 error $@26
  397 expr: expr . "<<" expr
  398     | expr . ">>" expr
  399     | expr . "<<<" expr
  400     | expr . ">>>" expr
  401     | expr . '+' expr
  402     | expr . '-' expr
  403     | expr . '*' expr
  404     | expr . '/' expr
  405     | expr . '%' expr
  406     | expr . '<' expr
  407     | expr . '>' expr
  408     | expr . "==" expr
  409     | expr . "!=" expr
  410     | expr . "<=" expr
  411     | expr . ">=" expr
  412     | expr . '&' expr
  413     | expr . '|' expr
  414     | expr . '^' expr
  415     | expr . "&&" expr
  416     | expr . "||" expr
  417     | expr . "^^" expr
  418     | expr . ".." expr
  421     | expr . "++"
  422     | expr . "--"
  424     | expr . '[' expr ']'
  425     | expr . '.' '[' expr ']'
  426     | expr . "?[" expr ']'
  427     | expr . '.' "?[" expr ']'
  428     | expr . "?." "name"
  429     | expr . '.' "?." "name"
  436     | expr . "??" expr
  437     | expr . '?' expr ':' expr
  440     | expr . "is" "type" '<' $@27 type_declaration_no_options '>' $@28
  441     | expr . "is" basic_type_declaration
  442     | expr . "is" "name"
  443     | expr . "as" "name"
  446     | expr . "as" "type" '<' $@29 type_declaration '>' $@30
  447     | expr . "as" basic_type_declaration
  448     | expr . '?' "as" "name"
  451     | expr . '?' "as" "type" '<' $@31 type_declaration '>' $@32
  452     | expr . '?' "as" basic_type_declaration
  460     | expr . "<|" expr
  461     | expr . "|>" expr
  462     | expr . "|>" basic_type_declaration
  476 expr_mtag: expr . '.' "$f" '(' expr ')'
  477          | expr . "?." "$f" '(' expr ')'
  478          | expr . '.' '.' "$f" '(' expr ')'
  479          | expr . '.' "?." "$f" '(' expr ')'
  480          | expr . "as" "$f" '(' expr ')'
  481          | expr . '?' "as" "$f" '(' expr ')'
  482          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 603
    "as"   shift, and go to state 604
    "<<"   shift, and go to state 605
    ">>"   shift, and go to state 606
    "++"   shift, and go to state 607
    "--"   shift, and go to state 608
    "<="   shift, and go to state 609
    ">="   shift, and go to state 610
    "=="   shift, and go to state 611
    "!="   shift, and go to state 612
    "->"   shift, and go to state 613
    "??"   shift, and go to state 614
    "?."   shift, and go to state 615
    "?["   shift, and go to state 616
    "<|"   shift, and go to state 617
    "|>"   shift, and go to state 618
    "<<<"  shift, and go to state 619
    ">>>"  shift, and go to state 620
    "&&"   shift, and go to state 621
    "||"   shift, and go to state 622
    "^^"   shift, and go to state 623
    ".."   shift, and go to state 624
    '?'    shift, and go to state 625
    '|'    shift, and go to state 626
    '^'    shift, and go to state 627
    '&'    shift, and go to state 628
    '<'    shift, and go to state 629
    '>'    shift, and go to state 630
    '-'    shift, and go to state 631
    '+'    shift, and go to state 632
    '*'    shift, and go to state 633
    '/'    shift, and go to state 634
    '%'    shift, and go to state 635
    '.'    shift, and go to state 636
    '['    shift, and go to state 637
    ')'    shift, and go to state 1298


State 1216

   82 expression_with: $@5 "with" '(' expr . ')' optional_semis expression_block
  356 expr_method_call: expr . "->" "name" '(' ')'
  357                 | expr . "->" "name" '(' expr_list ')'
  367 expr_field: expr . '.' "name"
  368           | expr . '.' '.' "name"
  369           | expr . '.' "name" '(' ')'
  370           | expr . '.' "name" '(' expr_list ')'
  371           | expr . '.' basic_type_declaration '(' ')'
  372           | expr . '.' basic_type_declaration '(' expr_list ')'
  375           | expr . '.' $@25 error $@26
  397 expr: expr . "<<" expr
  398     | expr . ">>" expr
  399     | expr . "<<<" expr
  400     | expr . ">>>" expr
  401     | expr . '+' expr
  402     | expr . '-' expr
  403     | expr . '*' expr
  404     | expr . '/' expr
  405     | expr . '%' expr
  406     | expr . '<' expr
  407     | expr . '>' expr
  408     | expr . "==" expr
  409     | expr . "!=" expr
  410     | expr . "<=" expr
  411     | expr . ">=" expr
  412     | expr . '&' expr
  413     | expr . '|' expr
  414     | expr . '^' expr
  415     | expr . "&&" expr
  416     | expr . "||" expr
  417     | expr . "^^" expr
  418     | expr . ".." expr
  421     | expr . "++"
  422     | expr . "--"
  424     | expr . '[' expr ']'
  425     | expr . '.' '[' expr ']'
  426     | expr . "?[" expr ']'
  427     | expr . '.' "?[" expr ']'
  428     | expr . "?." "name"
  429     | expr . '.' "?." "name"
  436     | expr . "??" expr
  437     | expr . '?' expr ':' expr
  440     | expr . "is" "type" '<' $@27 type_declaration_no_options '>' $@28
  441     | expr . "is" basic_type_declaration
  442     | expr . "is" "name"
  443     | expr . "as" "name"
  446     | expr . "as" "type" '<' $@29 type_declaration '>' $@30
  447     | expr . "as" basic_type_declaration
  448     | expr . '?' "as" "name"
  451     | expr . '?' "as" "type" '<' $@31 type_declaration '>' $@32
  452     | expr . '?' "as" basic_type_declaration
  460     | expr . "<|" expr
  461     | expr . "|>" expr
  462     | expr . "|>" basic_type_declaration
  476 expr_mtag: expr . '.' "$f" '(' expr ')'
  477          | expr . "?." "$f" '(' expr ')'
  478          | expr . '.' '.' "$f" '(' expr ')'
  479          | expr . '.' "?." "$f" '(' expr ')'
  480          | expr . "as" "$f" '(' expr ')'
  481          | expr . '?' "as" "$f" '(' expr ')'
  482          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 603
    "as"   shift, and go to state 604
    "<<"   shift, and go to state 605
    ">>"   shift, and go to state 606
    "++"   shift, and go to state 607
    "--"   shift, and go to state 608
    "<="   shift, and go to state 609
    ">="   shift, and go to state 610
    "=="   shift, and go to state 611
    "!="   shift, and go to state 612
    "->"   shift, and go to state 613
    "??"   shift, and go to state 614
    "?."   shift, and go to state 615
    "?["   shift, and go to state 616
    "<|"   shift, and go to state 617
    "|>"   shift, and go to state 618
    "<<<"  shift, and go to state 619
    ">>>"  shift, and go to state 620
    "&&"   shift, and go to state 621
    "||"   shift, and go to state 622
    "^^"   shift, and go to state 623
    ".."   shift, and go to state 624
    '?'    shift, and go to state 625
    '|'    shift, and go to state 626
    '^'    shift, and go to state 627
    '&'    shift, and go to state 628
    '<'    shift, and go to state 629
    '>'    shift, and go to state 630
    '-'    shift, and go to state 631
    '+'    shift, and go to state 632
    '*'    shift, and go to state 633
    '/'    shift, and go to state 634
    '%'    shift, and go to state 635
    '.'    shift, and go to state 636
    '['    shift, and go to state 637
    ')'    shift, and go to state 1299


State 1217

  223 expression_block_finally: "finally" $@7 . '{' expressions $@8 '}'

    '{'  shift, and go to state 1300


State 1218

  286 tuple_expansion: "name" .

    $default  reduce using rule 286 (tuple_expansion)


State 1219

  287 tuple_expansion: tuple_expansion . ',' "name"
  288 tuple_expansion_variable_declaration: '(' tuple_expansion . ')' ':' type_declaration_no_options copy_or_move_or_clone expr ';'
  289                                     | '(' tuple_expansion . ')' optional_ref copy_or_move_or_clone expr ';'

    ','  shift, and go to state 1301
    ')'  shift, and go to state 1302


State 1220

  292 expression_let: kwd_let optional_in_scope '{' variable_declaration_list . '}'
  541 variable_declaration_list: variable_declaration_list . ';'
  542                          | variable_declaration_list . let_variable_declaration

    "$i"    shift, and go to state 531
    "name"  shift, and go to state 532
    ';'     shift, and go to state 1303
    '}'     shift, and go to state 1304

    let_variable_name_with_pos_list  go to state 533
    let_variable_declaration         go to state 1305


State 1221

  356 expr_method_call: expr . "->" "name" '(' ')'
  357                 | expr . "->" "name" '(' expr_list ')'
  367 expr_field: expr . '.' "name"
  368           | expr . '.' '.' "name"
  369           | expr . '.' "name" '(' ')'
  370           | expr . '.' "name" '(' expr_list ')'
  371           | expr . '.' basic_type_declaration '(' ')'
  372           | expr . '.' basic_type_declaration '(' expr_list ')'
  375           | expr . '.' $@25 error $@26
  397 expr: expr . "<<" expr
  398     | expr . ">>" expr
  399     | expr . "<<<" expr
  400     | expr . ">>>" expr
  401     | expr . '+' expr
  402     | expr . '-' expr
  403     | expr . '*' expr
  404     | expr . '/' expr
  405     | expr . '%' expr
  406     | expr . '<' expr
  407     | expr . '>' expr
  408     | expr . "==" expr
  409     | expr . "!=" expr
  410     | expr . "<=" expr
  411     | expr . ">=" expr
  412     | expr . '&' expr
  413     | expr . '|' expr
  414     | expr . '^' expr
  415     | expr . "&&" expr
  416     | expr . "||" expr
  417     | expr . "^^" expr
  418     | expr . ".." expr
  421     | expr . "++"
  422     | expr . "--"
  424     | expr . '[' expr ']'
  425     | expr . '.' '[' expr ']'
  426     | expr . "?[" expr ']'
  427     | expr . '.' "?[" expr ']'
  428     | expr . "?." "name"
  429     | expr . '.' "?." "name"
  436     | expr . "??" expr
  437     | expr . '?' expr ':' expr
  440     | expr . "is" "type" '<' $@27 type_declaration_no_options '>' $@28
  441     | expr . "is" basic_type_declaration
  442     | expr . "is" "name"
  443     | expr . "as" "name"
  446     | expr . "as" "type" '<' $@29 type_declaration '>' $@30
  447     | expr . "as" basic_type_declaration
  448     | expr . '?' "as" "name"
  451     | expr . '?' "as" "type" '<' $@31 type_declaration '>' $@32
  452     | expr . '?' "as" basic_type_declaration
  460     | expr . "<|" expr
  461     | expr . "|>" expr
  462     | expr . "|>" basic_type_declaration
  476 expr_mtag: expr . '.' "$f" '(' expr ')'
  477          | expr . "?." "$f" '(' expr ')'
  478          | expr . '.' '.' "$f" '(' expr ')'
  479          | expr . '.' "?." "$f" '(' expr ')'
  480          | expr . "as" "$f" '(' expr ')'
  481          | expr . '?' "as" "$f" '(' expr ')'
  482          | expr . "is" "$f" '(' expr ')'
  562 enum_expression: "name" '=' expr .

    "is"   shift, and go to state 603
    "as"   shift, and go to state 604
    "<<"   shift, and go to state 605
    ">>"   shift, and go to state 606
    "++"   shift, and go to state 607
    "--"   shift, and go to state 608
    "<="   shift, and go to state 609
    ">="   shift, and go to state 610
    "=="   shift, and go to state 611
    "!="   shift, and go to state 612
    "->"   shift, and go to state 613
    "??"   shift, and go to state 614
    "?."   shift, and go to state 615
    "?["   shift, and go to state 616
    "<|"   shift, and go to state 617
    "|>"   shift, and go to state 618
    "<<<"  shift, and go to state 619
    ">>>"  shift, and go to state 620
    "&&"   shift, and go to state 621
    "||"   shift, and go to state 622
    "^^"   shift, and go to state 623
    ".."   shift, and go to state 624
    '?'    shift, and go to state 625
    '|'    shift, and go to state 626
    '^'    shift, and go to state 627
    '&'    shift, and go to state 628
    '<'    shift, and go to state 629
    '>'    shift, and go to state 630
    '-'    shift, and go to state 631
    '+'    shift, and go to state 632
    '*'    shift, and go to state 633
    '/'    shift, and go to state 634
    '%'    shift, and go to state 635
    '.'    shift, and go to state 636
    '['    shift, and go to state 637

    $default  reduce using rule 562 (enum_expression)


State 1222

  567 enum_list: enum_list commas enum_expression .

    $default  reduce using rule 567 (enum_list)


State 1223

  585 enum_declaration: optional_annotation_list "enum" $@39 optional_public_or_private_enum enum_name optional_enum_basic_type_declaration optional_commas '{' $@40 enum_list optional_commas $@41 . '}'

    '}'  shift, and go to state 1306


State 1224

  501 struct_variable_declaration_list: struct_variable_declaration_list optional_annotation_list "def" optional_public_or_private_member_variable "abstract" . optional_constant $@34 function_declaration_header ';'

    "const"  shift, and go to state 1307

    $default  reduce using rule 489 (optional_constant)

    optional_constant  go to state 1308


State 1225

  503 struct_variable_declaration_list: struct_variable_declaration_list optional_annotation_list "def" optional_public_or_private_member_variable optional_static_member_variable . optional_override optional_constant $@35 function_declaration_header expression_block

    "override"  shift, and go to state 1226
    "sealed"    shift, and go to state 1227

    $default  reduce using rule 486 (optional_override)

    optional_override  go to state 1309


State 1226

  487 optional_override: "override" .

    $default  reduce using rule 487 (optional_override)


State 1227

  488 optional_override: "sealed" .

    $default  reduce using rule 488 (optional_override)


State 1228

  496 structure_variable_declaration: optional_field_annotation optional_static_member_variable optional_override . optional_public_or_private_member_variable variable_declaration

    "public"   shift, and go to state 1112
    "private"  shift, and go to state 1113

    $default  reduce using rule 491 (optional_public_or_private_member_variable)

    optional_public_or_private_member_variable  go to state 1310


State 1229

  537 let_variable_name_with_pos_list: let_variable_name_with_pos_list ',' "name" "aka" "name" .

    $default  reduce using rule 537 (let_variable_name_with_pos_list)


State 1230

  356 expr_method_call: expr . "->" "name" '(' ')'
  357                 | expr . "->" "name" '(' expr_list ')'
  367 expr_field: expr . '.' "name"
  368           | expr . '.' '.' "name"
  369           | expr . '.' "name" '(' ')'
  370           | expr . '.' "name" '(' expr_list ')'
  371           | expr . '.' basic_type_declaration '(' ')'
  372           | expr . '.' basic_type_declaration '(' expr_list ')'
  375           | expr . '.' $@25 error $@26
  397 expr: expr . "<<" expr
  398     | expr . ">>" expr
  399     | expr . "<<<" expr
  400     | expr . ">>>" expr
  401     | expr . '+' expr
  402     | expr . '-' expr
  403     | expr . '*' expr
  404     | expr . '/' expr
  405     | expr . '%' expr
  406     | expr . '<' expr
  407     | expr . '>' expr
  408     | expr . "==" expr
  409     | expr . "!=" expr
  410     | expr . "<=" expr
  411     | expr . ">=" expr
  412     | expr . '&' expr
  413     | expr . '|' expr
  414     | expr . '^' expr
  415     | expr . "&&" expr
  416     | expr . "||" expr
  417     | expr . "^^" expr
  418     | expr . ".." expr
  421     | expr . "++"
  422     | expr . "--"
  424     | expr . '[' expr ']'
  425     | expr . '.' '[' expr ']'
  426     | expr . "?[" expr ']'
  427     | expr . '.' "?[" expr ']'
  428     | expr . "?." "name"
  429     | expr . '.' "?." "name"
  436     | expr . "??" expr
  437     | expr . '?' expr ':' expr
  440     | expr . "is" "type" '<' $@27 type_declaration_no_options '>' $@28
  441     | expr . "is" basic_type_declaration
  442     | expr . "is" "name"
  443     | expr . "as" "name"
  446     | expr . "as" "type" '<' $@29 type_declaration '>' $@30
  447     | expr . "as" basic_type_declaration
  448     | expr . '?' "as" "name"
  451     | expr . '?' "as" "type" '<' $@31 type_declaration '>' $@32
  452     | expr . '?' "as" basic_type_declaration
  460     | expr . "<|" expr
  461     | expr . "|>" expr
  462     | expr . "|>" basic_type_declaration
  476 expr_mtag: expr . '.' "$f" '(' expr ')'
  477          | expr . "?." "$f" '(' expr ')'
  478          | expr . '.' '.' "$f" '(' expr ')'
  479          | expr . '.' "?." "$f" '(' expr ')'
  480          | expr . "as" "$f" '(' expr ')'
  481          | expr . '?' "as" "$f" '(' expr ')'
  482          | expr . "is" "$f" '(' expr ')'
  544 let_variable_declaration: let_variable_name_with_pos_list ':' type_declaration_no_options copy_or_move_or_clone expr . ';'

    "is"   shift, and go to state 603
    "as"   shift, and go to state 604
    "<<"   shift, and go to state 605
    ">>"   shift, and go to state 606
    "++"   shift, and go to state 607
    "--"   shift, and go to state 608
    "<="   shift, and go to state 609
    ">="   shift, and go to state 610
    "=="   shift, and go to state 611
    "!="   shift, and go to state 612
    "->"   shift, and go to state 613
    "??"   shift, and go to state 614
    "?."   shift, and go to state 615
    "?["   shift, and go to state 616
    "<|"   shift, and go to state 617
    "|>"   shift, and go to state 618
    "<<<"  shift, and go to state 619
    ">>>"  shift, and go to state 620
    "&&"   shift, and go to state 621
    "||"   shift, and go to state 622
    "^^"   shift, and go to state 623
    ".."   shift, and go to state 624
    '?'    shift, and go to state 625
    '|'    shift, and go to state 626
    '^'    shift, and go to state 627
    '&'    shift, and go to state 628
    '<'    shift, and go to state 629
    '>'    shift, and go to state 630
    '-'    shift, and go to state 631
    '+'    shift, and go to state 632
    '*'    shift, and go to state 633
    '/'    shift, and go to state 634
    '%'    shift, and go to state 635
    '.'    shift, and go to state 636
    '['    shift, and go to state 637
    ';'    shift, and go to state 1311


State 1231

  545 let_variable_declaration: let_variable_name_with_pos_list optional_ref copy_or_move_or_clone expr ';' .

    $default  reduce using rule 545 (let_variable_declaration)


State 1232

  769 make_struct_decl: "struct" '<' $@85 type_declaration_no_options '>' $@86 . '(' use_initializer optional_make_struct_dim_decl ')'

    '('  shift, and go to state 1312


State 1233

  772 make_struct_decl: "class" '<' $@87 type_declaration_no_options '>' $@88 . '(' use_initializer optional_make_struct_dim_decl ')'

    '('  shift, and go to state 1313


State 1234

  263 new_type_declaration: '<' $@11 type_declaration '>' $@12 .

    $default  reduce using rule 263 (new_type_declaration)


State 1235

  269 expr_new: "new" new_type_declaration '(' "uninitialized" make_struct_single ')' .

    $default  reduce using rule 269 (expr_new)


State 1236

  306 expr_type_info: "typeinfo" name_in_namespace '<' "name" '>' '(' . expr ')'

    "struct"                          shift, and go to state 414
    "class"                           shift, and go to state 415
    "true"                            shift, and go to state 416
    "false"                           shift, and go to state 417
    "new"                             shift, and go to state 418
    "typeinfo"                        shift, and go to state 419
    "type"                            shift, and go to state 420
    "array"                           shift, and go to state 421
    "null"                            shift, and go to state 422
    "table"                           shift, and go to state 423
    "deref"                           shift, and go to state 424
    "cast"                            shift, and go to state 425
    "upcast"                          shift, and go to state 426
    "addr"                            shift, and go to state 427
    "reinterpret"                     shift, and go to state 428
    "unsafe"                          shift, and go to state 429
    "fixed_array"                     shift, and go to state 430
    "default"                         shift, and go to state 431
    "bool"                            shift, and go to state 228
    "void"                            shift, and go to state 229
    "string"                          shift, and go to state 230
    "int"                             shift, and go to state 232
    "int2"                            shift, and go to state 233
    "int3"                            shift, and go to state 234
    "int4"                            shift, and go to state 235
    "uint"                            shift, and go to state 236
    "bitfield"                        shift, and go to state 432
    "uint2"                           shift, and go to state 238
    "uint3"                           shift, and go to state 239
    "uint4"                           shift, and go to state 240
    "float"                           shift, and go to state 241
    "float2"                          shift, and go to state 242
    "float3"                          shift, and go to state 243
    "float4"                          shift, and go to state 244
    "range"                           shift, and go to state 245
    "urange"                          shift, and go to state 246
    "range64"                         shift, and go to state 247
    "urange64"                        shift, and go to state 248
    "int64"                           shift, and go to state 250
    "uint64"                          shift, and go to state 251
    "double"                          shift, and go to state 252
    "int8"                            shift, and go to state 255
    "uint8"                           shift, and go to state 256
    "int16"                           shift, and go to state 257
    "uint16"                          shift, and go to state 258
    "tuple"                           shift, and go to state 433
    "variant"                         shift, and go to state 434
    "generator"                       shift, and go to state 435
    "++"                              shift, and go to state 436
    "--"                              shift, and go to state 437
    "::"                              shift, and go to state 55
    "$$"                              shift, and go to state 438
    "$i"                              shift, and go to state 439
    "$v"                              shift, and go to state 440
    "$b"                              shift, and go to state 441
    "$a"                              shift, and go to state 442
    "$c"                              shift, and go to state 443
    "..."                             shift, and go to state 444
    "integer constant"                shift, and go to state 445
    "long integer constant"           shift, and go to state 446
    "unsigned integer constant"       shift, and go to state 447
    "unsigned long integer constant"  shift, and go to state 448
    "unsigned int8 constant"          shift, and go to state 449
    "floating point constant"         shift, and go to state 450
    "double constant"                 shift, and go to state 451
    "name"                            shift, and go to state 56
    "start of the string"             shift, and go to state 452
    '-'                               shift, and go to state 453
    '+'                               shift, and go to state 454
    '*'                               shift, and go to state 455
    '%'                               shift, and go to state 13
    '~'                               shift, and go to state 456
    '!'                               shift, and go to state 457
    '['                               shift, and go to state 458
    '('                               shift, and go to state 459
    '$'                               shift, and go to state 460
    '@'                               shift, and go to state 461
    '{'                               shift, and go to state 462

    string_builder          go to state 463
    expr_reader             go to state 464
    expr_call_pipe          go to state 465
    name_in_namespace       go to state 466
    expr_new                go to state 467
    expr_cast               go to state 468
    expr_type_decl          go to state 469
    expr_type_info          go to state 470
    block_or_lambda         go to state 471
    expr_full_block         go to state 472
    expr_numeric_const      go to state 473
    expr_named_call         go to state 474
    expr_method_call        go to state 475
    func_addr_expr          go to state 476
    expr_field              go to state 477
    expr_call               go to state 478
    expr                    go to state 1314
    expr_generator          go to state 480
    expr_mtag               go to state 481
    basic_type_declaration  go to state 482
    make_decl               go to state 483
    make_struct_decl        go to state 484
    make_tuple_call         go to state 485
    make_dim_decl           go to state 486
    make_table_decl         go to state 487
    array_comprehension     go to state 488


State 1237

  307 expr_type_info: "typeinfo" name_in_namespace '<' "name" c_or_s "name" . '>' '(' expr ')'

    '>'  shift, and go to state 1315


State 1238

  304 expr_type_decl: "type" '<' $@19 type_declaration '>' $@20 .

    $default  reduce using rule 304 (expr_type_decl)


State 1239

  788 make_dim_decl: "array" "struct" '<' $@95 type_declaration_no_options '>' . $@96 '(' use_initializer optional_make_struct_dim_decl ')'

    $default  reduce using rule 787 ($@96)

    $@96  go to state 1316


State 1240

  791 make_dim_decl: "array" "tuple" '<' $@97 type_declaration_no_options '>' . $@98 '(' use_initializer optional_make_struct_dim_decl ')'

    $default  reduce using rule 790 ($@98)

    $@98  go to state 1317


State 1241

  794 make_dim_decl: "array" "variant" '<' $@99 type_declaration_no_options '>' . $@100 '(' make_variant_dim ')'

    $default  reduce using rule 793 ($@100)

    $@100  go to state 1318


State 1242

  798 make_dim_decl: "array" '<' $@101 type_declaration_no_options '>' $@102 . '(' optional_expr_list ')'

    '('  shift, and go to state 1319


State 1243

  807 make_table_decl: "table" '<' type_declaration_no_options '>' '(' optional_expr_map_tuple_list . ')'

    ')'  shift, and go to state 1320


State 1244

  253 optional_expr_map_tuple_list: expr_map_tuple_list . optional_comma
  804 expr_map_tuple_list: expr_map_tuple_list . ',' make_map_tuple

    ','  shift, and go to state 783

    $default  reduce using rule 811 (optional_comma)

    optional_comma  go to state 1321


State 1245

  808 make_table_decl: "table" '<' type_declaration_no_options c_or_s type_declaration_no_options '>' . '(' optional_expr_map_tuple_list ')'

    '('  shift, and go to state 1322


State 1246

  295 expr_cast: "cast" '<' $@13 type_declaration_no_options '>' $@14 . expr

    "struct"                          shift, and go to state 414
    "class"                           shift, and go to state 415
    "true"                            shift, and go to state 416
    "false"                           shift, and go to state 417
    "new"                             shift, and go to state 418
    "typeinfo"                        shift, and go to state 419
    "type"                            shift, and go to state 420
    "array"                           shift, and go to state 421
    "null"                            shift, and go to state 422
    "table"                           shift, and go to state 423
    "deref"                           shift, and go to state 424
    "cast"                            shift, and go to state 425
    "upcast"                          shift, and go to state 426
    "addr"                            shift, and go to state 427
    "reinterpret"                     shift, and go to state 428
    "unsafe"                          shift, and go to state 429
    "fixed_array"                     shift, and go to state 430
    "default"                         shift, and go to state 431
    "bool"                            shift, and go to state 228
    "void"                            shift, and go to state 229
    "string"                          shift, and go to state 230
    "int"                             shift, and go to state 232
    "int2"                            shift, and go to state 233
    "int3"                            shift, and go to state 234
    "int4"                            shift, and go to state 235
    "uint"                            shift, and go to state 236
    "bitfield"                        shift, and go to state 432
    "uint2"                           shift, and go to state 238
    "uint3"                           shift, and go to state 239
    "uint4"                           shift, and go to state 240
    "float"                           shift, and go to state 241
    "float2"                          shift, and go to state 242
    "float3"                          shift, and go to state 243
    "float4"                          shift, and go to state 244
    "range"                           shift, and go to state 245
    "urange"                          shift, and go to state 246
    "range64"                         shift, and go to state 247
    "urange64"                        shift, and go to state 248
    "int64"                           shift, and go to state 250
    "uint64"                          shift, and go to state 251
    "double"                          shift, and go to state 252
    "int8"                            shift, and go to state 255
    "uint8"                           shift, and go to state 256
    "int16"                           shift, and go to state 257
    "uint16"                          shift, and go to state 258
    "tuple"                           shift, and go to state 433
    "variant"                         shift, and go to state 434
    "generator"                       shift, and go to state 435
    "++"                              shift, and go to state 436
    "--"                              shift, and go to state 437
    "::"                              shift, and go to state 55
    "$$"                              shift, and go to state 438
    "$i"                              shift, and go to state 439
    "$v"                              shift, and go to state 440
    "$b"                              shift, and go to state 441
    "$a"                              shift, and go to state 442
    "$c"                              shift, and go to state 443
    "..."                             shift, and go to state 444
    "integer constant"                shift, and go to state 445
    "long integer constant"           shift, and go to state 446
    "unsigned integer constant"       shift, and go to state 447
    "unsigned long integer constant"  shift, and go to state 448
    "unsigned int8 constant"          shift, and go to state 449
    "floating point constant"         shift, and go to state 450
    "double constant"                 shift, and go to state 451
    "name"                            shift, and go to state 56
    "start of the string"             shift, and go to state 452
    '-'                               shift, and go to state 453
    '+'                               shift, and go to state 454
    '*'                               shift, and go to state 455
    '%'                               shift, and go to state 13
    '~'                               shift, and go to state 456
    '!'                               shift, and go to state 457
    '['                               shift, and go to state 458
    '('                               shift, and go to state 459
    '$'                               shift, and go to state 460
    '@'                               shift, and go to state 461
    '{'                               shift, and go to state 462

    string_builder          go to state 463
    expr_reader             go to state 464
    expr_call_pipe          go to state 465
    name_in_namespace       go to state 466
    expr_new                go to state 467
    expr_cast               go to state 468
    expr_type_decl          go to state 469
    expr_type_info          go to state 470
    block_or_lambda         go to state 471
    expr_full_block         go to state 472
    expr_numeric_const      go to state 473
    expr_named_call         go to state 474
    expr_method_call        go to state 475
    func_addr_expr          go to state 476
    expr_field              go to state 477
    expr_call               go to state 478
    expr                    go to state 1323
    expr_generator          go to state 480
    expr_mtag               go to state 481
    basic_type_declaration  go to state 482
    make_decl               go to state 483
    make_struct_decl        go to state 484
    make_tuple_call         go to state 485
    make_dim_decl           go to state 486
    make_table_decl         go to state 487
    array_comprehension     go to state 488


State 1247

  298 expr_cast: "upcast" '<' $@15 type_declaration_no_options '>' $@16 . expr

    "struct"                          shift, and go to state 414
    "class"                           shift, and go to state 415
    "true"                            shift, and go to state 416
    "false"                           shift, and go to state 417
    "new"                             shift, and go to state 418
    "typeinfo"                        shift, and go to state 419
    "type"                            shift, and go to state 420
    "array"                           shift, and go to state 421
    "null"                            shift, and go to state 422
    "table"                           shift, and go to state 423
    "deref"                           shift, and go to state 424
    "cast"                            shift, and go to state 425
    "upcast"                          shift, and go to state 426
    "addr"                            shift, and go to state 427
    "reinterpret"                     shift, and go to state 428
    "unsafe"                          shift, and go to state 429
    "fixed_array"                     shift, and go to state 430
    "default"                         shift, and go to state 431
    "bool"                            shift, and go to state 228
    "void"                            shift, and go to state 229
    "string"                          shift, and go to state 230
    "int"                             shift, and go to state 232
    "int2"                            shift, and go to state 233
    "int3"                            shift, and go to state 234
    "int4"                            shift, and go to state 235
    "uint"                            shift, and go to state 236
    "bitfield"                        shift, and go to state 432
    "uint2"                           shift, and go to state 238
    "uint3"                           shift, and go to state 239
    "uint4"                           shift, and go to state 240
    "float"                           shift, and go to state 241
    "float2"                          shift, and go to state 242
    "float3"                          shift, and go to state 243
    "float4"                          shift, and go to state 244
    "range"                           shift, and go to state 245
    "urange"                          shift, and go to state 246
    "range64"                         shift, and go to state 247
    "urange64"                        shift, and go to state 248
    "int64"                           shift, and go to state 250
    "uint64"                          shift, and go to state 251
    "double"                          shift, and go to state 252
    "int8"                            shift, and go to state 255
    "uint8"                           shift, and go to state 256
    "int16"                           shift, and go to state 257
    "uint16"                          shift, and go to state 258
    "tuple"                           shift, and go to state 433
    "variant"                         shift, and go to state 434
    "generator"                       shift, and go to state 435
    "++"                              shift, and go to state 436
    "--"                              shift, and go to state 437
    "::"                              shift, and go to state 55
    "$$"                              shift, and go to state 438
    "$i"                              shift, and go to state 439
    "$v"                              shift, and go to state 440
    "$b"                              shift, and go to state 441
    "$a"                              shift, and go to state 442
    "$c"                              shift, and go to state 443
    "..."                             shift, and go to state 444
    "integer constant"                shift, and go to state 445
    "long integer constant"           shift, and go to state 446
    "unsigned integer constant"       shift, and go to state 447
    "unsigned long integer constant"  shift, and go to state 448
    "unsigned int8 constant"          shift, and go to state 449
    "floating point constant"         shift, and go to state 450
    "double constant"                 shift, and go to state 451
    "name"                            shift, and go to state 56
    "start of the string"             shift, and go to state 452
    '-'                               shift, and go to state 453
    '+'                               shift, and go to state 454
    '*'                               shift, and go to state 455
    '%'                               shift, and go to state 13
    '~'                               shift, and go to state 456
    '!'                               shift, and go to state 457
    '['                               shift, and go to state 458
    '('                               shift, and go to state 459
    '$'                               shift, and go to state 460
    '@'                               shift, and go to state 461
    '{'                               shift, and go to state 462

    string_builder          go to state 463
    expr_reader             go to state 464
    expr_call_pipe          go to state 465
    name_in_namespace       go to state 466
    expr_new                go to state 467
    expr_cast               go to state 468
    expr_type_decl          go to state 469
    expr_type_info          go to state 470
    block_or_lambda         go to state 471
    expr_full_block         go to state 472
    expr_numeric_const      go to state 473
    expr_named_call         go to state 474
    expr_method_call        go to state 475
    func_addr_expr          go to state 476
    expr_field              go to state 477
    expr_call               go to state 478
    expr                    go to state 1324
    expr_generator          go to state 480
    expr_mtag               go to state 481
    basic_type_declaration  go to state 482
    make_decl               go to state 483
    make_struct_decl        go to state 484
    make_tuple_call         go to state 485
    make_dim_decl           go to state 486
    make_table_decl         go to state 487
    array_comprehension     go to state 488


State 1248

  301 expr_cast: "reinterpret" '<' $@17 type_declaration_no_options '>' $@18 . expr

    "struct"                          shift, and go to state 414
    "class"                           shift, and go to state 415
    "true"                            shift, and go to state 416
    "false"                           shift, and go to state 417
    "new"                             shift, and go to state 418
    "typeinfo"                        shift, and go to state 419
    "type"                            shift, and go to state 420
    "array"                           shift, and go to state 421
    "null"                            shift, and go to state 422
    "table"                           shift, and go to state 423
    "deref"                           shift, and go to state 424
    "cast"                            shift, and go to state 425
    "upcast"                          shift, and go to state 426
    "addr"                            shift, and go to state 427
    "reinterpret"                     shift, and go to state 428
    "unsafe"                          shift, and go to state 429
    "fixed_array"                     shift, and go to state 430
    "default"                         shift, and go to state 431
    "bool"                            shift, and go to state 228
    "void"                            shift, and go to state 229
    "string"                          shift, and go to state 230
    "int"                             shift, and go to state 232
    "int2"                            shift, and go to state 233
    "int3"                            shift, and go to state 234
    "int4"                            shift, and go to state 235
    "uint"                            shift, and go to state 236
    "bitfield"                        shift, and go to state 432
    "uint2"                           shift, and go to state 238
    "uint3"                           shift, and go to state 239
    "uint4"                           shift, and go to state 240
    "float"                           shift, and go to state 241
    "float2"                          shift, and go to state 242
    "float3"                          shift, and go to state 243
    "float4"                          shift, and go to state 244
    "range"                           shift, and go to state 245
    "urange"                          shift, and go to state 246
    "range64"                         shift, and go to state 247
    "urange64"                        shift, and go to state 248
    "int64"                           shift, and go to state 250
    "uint64"                          shift, and go to state 251
    "double"                          shift, and go to state 252
    "int8"                            shift, and go to state 255
    "uint8"                           shift, and go to state 256
    "int16"                           shift, and go to state 257
    "uint16"                          shift, and go to state 258
    "tuple"                           shift, and go to state 433
    "variant"                         shift, and go to state 434
    "generator"                       shift, and go to state 435
    "++"                              shift, and go to state 436
    "--"                              shift, and go to state 437
    "::"                              shift, and go to state 55
    "$$"                              shift, and go to state 438
    "$i"                              shift, and go to state 439
    "$v"                              shift, and go to state 440
    "$b"                              shift, and go to state 441
    "$a"                              shift, and go to state 442
    "$c"                              shift, and go to state 443
    "..."                             shift, and go to state 444
    "integer constant"                shift, and go to state 445
    "long integer constant"           shift, and go to state 446
    "unsigned integer constant"       shift, and go to state 447
    "unsigned long integer constant"  shift, and go to state 448
    "unsigned int8 constant"          shift, and go to state 449
    "floating point constant"         shift, and go to state 450
    "double constant"                 shift, and go to state 451
    "name"                            shift, and go to state 56
    "start of the string"             shift, and go to state 452
    '-'                               shift, and go to state 453
    '+'                               shift, and go to state 454
    '*'                               shift, and go to state 455
    '%'                               shift, and go to state 13
    '~'                               shift, and go to state 456
    '!'                               shift, and go to state 457
    '['                               shift, and go to state 458
    '('                               shift, and go to state 459
    '$'                               shift, and go to state 460
    '@'                               shift, and go to state 461
    '{'                               shift, and go to state 462

    string_builder          go to state 463
    expr_reader             go to state 464
    expr_call_pipe          go to state 465
    name_in_namespace       go to state 466
    expr_new                go to state 467
    expr_cast               go to state 468
    expr_type_decl          go to state 469
    expr_type_info          go to state 470
    block_or_lambda         go to state 471
    expr_full_block         go to state 472
    expr_numeric_const      go to state 473
    expr_named_call         go to state 474
    expr_method_call        go to state 475
    func_addr_expr          go to state 476
    expr_field              go to state 477
    expr_call               go to state 478
    expr                    go to state 1325
    expr_generator          go to state 480
    expr_mtag               go to state 481
    basic_type_declaration  go to state 482
    make_decl               go to state 483
    make_struct_decl        go to state 484
    make_tuple_call         go to state 485
    make_dim_decl           go to state 486
    make_table_decl         go to state 487
    array_comprehension     go to state 488


State 1249

  802 make_dim_decl: "fixed_array" '<' $@103 type_declaration_no_options '>' $@104 . '(' expr_list optional_comma ')'

    '('  shift, and go to state 1326


State 1250

  778 make_struct_decl: "default" '<' $@91 type_declaration_no_options '>' $@92 . use_initializer

    "uninitialized"  shift, and go to state 1327

    $default  reduce using rule 765 (use_initializer)

    use_initializer  go to state 1328


State 1251

  784 make_tuple_call: "tuple" '<' $@93 type_declaration_no_options '>' $@94 . '(' use_initializer optional_make_struct_dim_decl ')'

    '('  shift, and go to state 1329


State 1252

  775 make_struct_decl: "variant" '<' $@89 type_declaration_no_options '>' $@90 . '(' make_variant_dim ')'

    '('  shift, and go to state 1330


State 1253

  465 expr_generator: "generator" '<' type_declaration_no_options '>' optional_capture_list '(' . ')'
  466               | "generator" '<' type_declaration_no_options '>' optional_capture_list '(' . expr ')'

    "struct"                          shift, and go to state 414
    "class"                           shift, and go to state 415
    "true"                            shift, and go to state 416
    "false"                           shift, and go to state 417
    "new"                             shift, and go to state 418
    "typeinfo"                        shift, and go to state 419
    "type"                            shift, and go to state 420
    "array"                           shift, and go to state 421
    "null"                            shift, and go to state 422
    "table"                           shift, and go to state 423
    "deref"                           shift, and go to state 424
    "cast"                            shift, and go to state 425
    "upcast"                          shift, and go to state 426
    "addr"                            shift, and go to state 427
    "reinterpret"                     shift, and go to state 428
    "unsafe"                          shift, and go to state 429
    "fixed_array"                     shift, and go to state 430
    "default"                         shift, and go to state 431
    "bool"                            shift, and go to state 228
    "void"                            shift, and go to state 229
    "string"                          shift, and go to state 230
    "int"                             shift, and go to state 232
    "int2"                            shift, and go to state 233
    "int3"                            shift, and go to state 234
    "int4"                            shift, and go to state 235
    "uint"                            shift, and go to state 236
    "bitfield"                        shift, and go to state 432
    "uint2"                           shift, and go to state 238
    "uint3"                           shift, and go to state 239
    "uint4"                           shift, and go to state 240
    "float"                           shift, and go to state 241
    "float2"                          shift, and go to state 242
    "float3"                          shift, and go to state 243
    "float4"                          shift, and go to state 244
    "range"                           shift, and go to state 245
    "urange"                          shift, and go to state 246
    "range64"                         shift, and go to state 247
    "urange64"                        shift, and go to state 248
    "int64"                           shift, and go to state 250
    "uint64"                          shift, and go to state 251
    "double"                          shift, and go to state 252
    "int8"                            shift, and go to state 255
    "uint8"                           shift, and go to state 256
    "int16"                           shift, and go to state 257
    "uint16"                          shift, and go to state 258
    "tuple"                           shift, and go to state 433
    "variant"                         shift, and go to state 434
    "generator"                       shift, and go to state 435
    "++"                              shift, and go to state 436
    "--"                              shift, and go to state 437
    "::"                              shift, and go to state 55
    "$$"                              shift, and go to state 438
    "$i"                              shift, and go to state 439
    "$v"                              shift, and go to state 440
    "$b"                              shift, and go to state 441
    "$a"                              shift, and go to state 442
    "$c"                              shift, and go to state 443
    "..."                             shift, and go to state 444
    "integer constant"                shift, and go to state 445
    "long integer constant"           shift, and go to state 446
    "unsigned integer constant"       shift, and go to state 447
    "unsigned long integer constant"  shift, and go to state 448
    "unsigned int8 constant"          shift, and go to state 449
    "floating point constant"         shift, and go to state 450
    "double constant"                 shift, and go to state 451
    "name"                            shift, and go to state 56
    "start of the string"             shift, and go to state 452
    '-'                               shift, and go to state 453
    '+'                               shift, and go to state 454
    '*'                               shift, and go to state 455
    '%'                               shift, and go to state 13
    '~'                               shift, and go to state 456
    '!'                               shift, and go to state 457
    '['                               shift, and go to state 458
    '('                               shift, and go to state 459
    ')'                               shift, and go to state 1331
    '$'                               shift, and go to state 460
    '@'                               shift, and go to state 461
    '{'                               shift, and go to state 462

    string_builder          go to state 463
    expr_reader             go to state 464
    expr_call_pipe          go to state 465
    name_in_namespace       go to state 466
    expr_new                go to state 467
    expr_cast               go to state 468
    expr_type_decl          go to state 469
    expr_type_info          go to state 470
    block_or_lambda         go to state 471
    expr_full_block         go to state 472
    expr_numeric_const      go to state 473
    expr_named_call         go to state 474
    expr_method_call        go to state 475
    func_addr_expr          go to state 476
    expr_field              go to state 477
    expr_call               go to state 478
    expr                    go to state 1332
    expr_generator          go to state 480
    expr_mtag               go to state 481
    basic_type_declaration  go to state 482
    make_decl               go to state 483
    make_struct_decl        go to state 484
    make_tuple_call         go to state 485
    make_dim_decl           go to state 486
    make_table_decl         go to state 487
    array_comprehension     go to state 488


State 1254

  467 expr_generator: "generator" '<' type_declaration_no_options '>' optional_capture_list optional_semis . expression_block

    $default  reduce using rule 224 ($@9)

    expression_block  go to state 1333
    $@9               go to state 332


State 1255

  474 expr_mtag: "$c" '(' expr ')' '(' ')' .

    $default  reduce using rule 474 (expr_mtag)


State 1256

  309 expr_list: expr_list . ',' expr
  475 expr_mtag: "$c" '(' expr ')' '(' expr_list . ')'

    ','  shift, and go to state 1041
    ')'  shift, and go to state 1334


State 1257

  309 expr_list: expr_list . ',' expr
  813 array_comprehension: '[' "for" '(' variable_name_with_pos_list "in" expr_list . ')' ';' expr array_comprehension_where ']'

    ','  shift, and go to state 1041
    ')'  shift, and go to state 1335


State 1258

  814 array_comprehension: '[' "iterator" "for" '(' variable_name_with_pos_list "in" . expr_list ')' ';' expr array_comprehension_where ']'

    "struct"                          shift, and go to state 414
    "class"                           shift, and go to state 415
    "true"                            shift, and go to state 416
    "false"                           shift, and go to state 417
    "new"                             shift, and go to state 418
    "typeinfo"                        shift, and go to state 419
    "type"                            shift, and go to state 420
    "array"                           shift, and go to state 421
    "null"                            shift, and go to state 422
    "table"                           shift, and go to state 423
    "deref"                           shift, and go to state 424
    "cast"                            shift, and go to state 425
    "upcast"                          shift, and go to state 426
    "addr"                            shift, and go to state 427
    "reinterpret"                     shift, and go to state 428
    "unsafe"                          shift, and go to state 429
    "fixed_array"                     shift, and go to state 430
    "default"                         shift, and go to state 431
    "bool"                            shift, and go to state 228
    "void"                            shift, and go to state 229
    "string"                          shift, and go to state 230
    "int"                             shift, and go to state 232
    "int2"                            shift, and go to state 233
    "int3"                            shift, and go to state 234
    "int4"                            shift, and go to state 235
    "uint"                            shift, and go to state 236
    "bitfield"                        shift, and go to state 432
    "uint2"                           shift, and go to state 238
    "uint3"                           shift, and go to state 239
    "uint4"                           shift, and go to state 240
    "float"                           shift, and go to state 241
    "float2"                          shift, and go to state 242
    "float3"                          shift, and go to state 243
    "float4"                          shift, and go to state 244
    "range"                           shift, and go to state 245
    "urange"                          shift, and go to state 246
    "range64"                         shift, and go to state 247
    "urange64"                        shift, and go to state 248
    "int64"                           shift, and go to state 250
    "uint64"                          shift, and go to state 251
    "double"                          shift, and go to state 252
    "int8"                            shift, and go to state 255
    "uint8"                           shift, and go to state 256
    "int16"                           shift, and go to state 257
    "uint16"                          shift, and go to state 258
    "tuple"                           shift, and go to state 433
    "variant"                         shift, and go to state 434
    "generator"                       shift, and go to state 435
    "++"                              shift, and go to state 436
    "--"                              shift, and go to state 437
    "::"                              shift, and go to state 55
    "$$"                              shift, and go to state 438
    "$i"                              shift, and go to state 439
    "$v"                              shift, and go to state 440
    "$b"                              shift, and go to state 441
    "$a"                              shift, and go to state 442
    "$c"                              shift, and go to state 443
    "..."                             shift, and go to state 444
    "integer constant"                shift, and go to state 445
    "long integer constant"           shift, and go to state 446
    "unsigned integer constant"       shift, and go to state 447
    "unsigned long integer constant"  shift, and go to state 448
    "unsigned int8 constant"          shift, and go to state 449
    "floating point constant"         shift, and go to state 450
    "double constant"                 shift, and go to state 451
    "name"                            shift, and go to state 56
    "start of the string"             shift, and go to state 452
    '-'                               shift, and go to state 453
    '+'                               shift, and go to state 454
    '*'                               shift, and go to state 455
    '%'                               shift, and go to state 13
    '~'                               shift, and go to state 456
    '!'                               shift, and go to state 457
    '['                               shift, and go to state 458
    '('                               shift, and go to state 459
    '$'                               shift, and go to state 460
    '@'                               shift, and go to state 461
    '{'                               shift, and go to state 462

    string_builder          go to state 463
    expr_reader             go to state 464
    expr_call_pipe          go to state 465
    name_in_namespace       go to state 466
    expr_new                go to state 467
    expr_cast               go to state 468
    expr_type_decl          go to state 469
    expr_type_info          go to state 470
    expr_list               go to state 1336
    block_or_lambda         go to state 471
    expr_full_block         go to state 472
    expr_numeric_const      go to state 473
    expr_named_call         go to state 474
    expr_method_call        go to state 475
    func_addr_expr          go to state 476
    expr_field              go to state 477
    expr_call               go to state 478
    expr                    go to state 590
    expr_generator          go to state 480
    expr_mtag               go to state 481
    basic_type_declaration  go to state 482
    make_decl               go to state 483
    make_struct_decl        go to state 484
    make_tuple_call         go to state 485
    make_dim_decl           go to state 486
    make_table_decl         go to state 487
    array_comprehension     go to state 488


State 1259

  359 func_addr_name: "$i" '(' expr ')' .

    $default  reduce using rule 359 (func_addr_name)


State 1260

  483 expr_mtag: '@' '@' "$c" '(' expr ')' .

    $default  reduce using rule 483 (expr_mtag)


State 1261

  363 func_addr_expr: '@' '@' '<' $@21 type_declaration_no_options '>' . $@22 func_addr_name

    $default  reduce using rule 362 ($@22)

    $@22  go to state 1337


State 1262

  366 func_addr_expr: '@' '@' '<' $@23 optional_function_argument_list optional_function_type . '>' $@24 func_addr_name

    '>'  shift, and go to state 1338


State 1263

  309 expr_list: expr_list . ',' expr
  815 array_comprehension: '{' "for" '(' variable_name_with_pos_list "in" expr_list . ')' ';' make_map_tuple array_comprehension_where '}'

    ','  shift, and go to state 1041
    ')'  shift, and go to state 1339


State 1264

  753 make_struct_fields: "$f" '(' expr ')' . copy_or_move expr
  754                   | "$f" '(' expr ')' . ":=" expr

    "<-"  shift, and go to state 879
    ":="  shift, and go to state 1340
    '='   shift, and go to state 881

    copy_or_move  go to state 1341


State 1265

  354 expr_named_call: name_in_namespace '(' '[' make_struct_fields ']' ')' .

    $default  reduce using rule 354 (expr_named_call)


State 1266

  355 expr_named_call: name_in_namespace '(' expr_list ',' '[' make_struct_fields . ']' ')'
  751 make_struct_fields: make_struct_fields . ',' "name" copy_or_move expr
  752                   | make_struct_fields . ',' "name" ":=" expr
  755                   | make_struct_fields . ',' "$f" '(' expr ')' copy_or_move expr
  756                   | make_struct_fields . ',' "$f" '(' expr ')' ":=" expr

    ','  shift, and go to state 1012
    ']'  shift, and go to state 1342


State 1267

  755 make_struct_fields: make_struct_fields ',' "$f" '(' . expr ')' copy_or_move expr
  756                   | make_struct_fields ',' "$f" '(' . expr ')' ":=" expr

    "struct"                          shift, and go to state 414
    "class"                           shift, and go to state 415
    "true"                            shift, and go to state 416
    "false"                           shift, and go to state 417
    "new"                             shift, and go to state 418
    "typeinfo"                        shift, and go to state 419
    "type"                            shift, and go to state 420
    "array"                           shift, and go to state 421
    "null"                            shift, and go to state 422
    "table"                           shift, and go to state 423
    "deref"                           shift, and go to state 424
    "cast"                            shift, and go to state 425
    "upcast"                          shift, and go to state 426
    "addr"                            shift, and go to state 427
    "reinterpret"                     shift, and go to state 428
    "unsafe"                          shift, and go to state 429
    "fixed_array"                     shift, and go to state 430
    "default"                         shift, and go to state 431
    "bool"                            shift, and go to state 228
    "void"                            shift, and go to state 229
    "string"                          shift, and go to state 230
    "int"                             shift, and go to state 232
    "int2"                            shift, and go to state 233
    "int3"                            shift, and go to state 234
    "int4"                            shift, and go to state 235
    "uint"                            shift, and go to state 236
    "bitfield"                        shift, and go to state 432
    "uint2"                           shift, and go to state 238
    "uint3"                           shift, and go to state 239
    "uint4"                           shift, and go to state 240
    "float"                           shift, and go to state 241
    "float2"                          shift, and go to state 242
    "float3"                          shift, and go to state 243
    "float4"                          shift, and go to state 244
    "range"                           shift, and go to state 245
    "urange"                          shift, and go to state 246
    "range64"                         shift, and go to state 247
    "urange64"                        shift, and go to state 248
    "int64"                           shift, and go to state 250
    "uint64"                          shift, and go to state 251
    "double"                          shift, and go to state 252
    "int8"                            shift, and go to state 255
    "uint8"                           shift, and go to state 256
    "int16"                           shift, and go to state 257
    "uint16"                          shift, and go to state 258
    "tuple"                           shift, and go to state 433
    "variant"                         shift, and go to state 434
    "generator"                       shift, and go to state 435
    "++"                              shift, and go to state 436
    "--"                              shift, and go to state 437
    "::"                              shift, and go to state 55
    "$$"                              shift, and go to state 438
    "$i"                              shift, and go to state 439
    "$v"                              shift, and go to state 440
    "$b"                              shift, and go to state 441
    "$a"                              shift, and go to state 442
    "$c"                              shift, and go to state 443
    "..."                             shift, and go to state 444
    "integer constant"                shift, and go to state 445
    "long integer constant"           shift, and go to state 446
    "unsigned integer constant"       shift, and go to state 447
    "unsigned long integer constant"  shift, and go to state 448
    "unsigned int8 constant"          shift, and go to state 449
    "floating point constant"         shift, and go to state 450
    "double constant"                 shift, and go to state 451
    "name"                            shift, and go to state 56
    "start of the string"             shift, and go to state 452
    '-'                               shift, and go to state 453
    '+'                               shift, and go to state 454
    '*'                               shift, and go to state 455
    '%'                               shift, and go to state 13
    '~'                               shift, and go to state 456
    '!'                               shift, and go to state 457
    '['                               shift, and go to state 458
    '('                               shift, and go to state 459
    '$'                               shift, and go to state 460
    '@'                               shift, and go to state 461
    '{'                               shift, and go to state 462

    string_builder          go to state 463
    expr_reader             go to state 464
    expr_call_pipe          go to state 465
    name_in_namespace       go to state 466
    expr_new                go to state 467
    expr_cast               go to state 468
    expr_type_decl          go to state 469
    expr_type_info          go to state 470
    block_or_lambda         go to state 471
    expr_full_block         go to state 472
    expr_numeric_const      go to state 473
    expr_named_call         go to state 474
    expr_method_call        go to state 475
    func_addr_expr          go to state 476
    expr_field              go to state 477
    expr_call               go to state 478
    expr                    go to state 1343
    expr_generator          go to state 480
    expr_mtag               go to state 481
    basic_type_declaration  go to state 482
    make_decl               go to state 483
    make_struct_decl        go to state 484
    make_tuple_call         go to state 485
    make_dim_decl           go to state 486
    make_table_decl         go to state 487
    array_comprehension     go to state 488


State 1268

  752 make_struct_fields: make_struct_fields ',' "name" ":=" . expr

    "struct"                          shift, and go to state 414
    "class"                           shift, and go to state 415
    "true"                            shift, and go to state 416
    "false"                           shift, and go to state 417
    "new"                             shift, and go to state 418
    "typeinfo"                        shift, and go to state 419
    "type"                            shift, and go to state 420
    "array"                           shift, and go to state 421
    "null"                            shift, and go to state 422
    "table"                           shift, and go to state 423
    "deref"                           shift, and go to state 424
    "cast"                            shift, and go to state 425
    "upcast"                          shift, and go to state 426
    "addr"                            shift, and go to state 427
    "reinterpret"                     shift, and go to state 428
    "unsafe"                          shift, and go to state 429
    "fixed_array"                     shift, and go to state 430
    "default"                         shift, and go to state 431
    "bool"                            shift, and go to state 228
    "void"                            shift, and go to state 229
    "string"                          shift, and go to state 230
    "int"                             shift, and go to state 232
    "int2"                            shift, and go to state 233
    "int3"                            shift, and go to state 234
    "int4"                            shift, and go to state 235
    "uint"                            shift, and go to state 236
    "bitfield"                        shift, and go to state 432
    "uint2"                           shift, and go to state 238
    "uint3"                           shift, and go to state 239
    "uint4"                           shift, and go to state 240
    "float"                           shift, and go to state 241
    "float2"                          shift, and go to state 242
    "float3"                          shift, and go to state 243
    "float4"                          shift, and go to state 244
    "range"                           shift, and go to state 245
    "urange"                          shift, and go to state 246
    "range64"                         shift, and go to state 247
    "urange64"                        shift, and go to state 248
    "int64"                           shift, and go to state 250
    "uint64"                          shift, and go to state 251
    "double"                          shift, and go to state 252
    "int8"                            shift, and go to state 255
    "uint8"                           shift, and go to state 256
    "int16"                           shift, and go to state 257
    "uint16"                          shift, and go to state 258
    "tuple"                           shift, and go to state 433
    "variant"                         shift, and go to state 434
    "generator"                       shift, and go to state 435
    "++"                              shift, and go to state 436
    "--"                              shift, and go to state 437
    "::"                              shift, and go to state 55
    "$$"                              shift, and go to state 438
    "$i"                              shift, and go to state 439
    "$v"                              shift, and go to state 440
    "$b"                              shift, and go to state 441
    "$a"                              shift, and go to state 442
    "$c"                              shift, and go to state 443
    "..."                             shift, and go to state 444
    "integer constant"                shift, and go to state 445
    "long integer constant"           shift, and go to state 446
    "unsigned integer constant"       shift, and go to state 447
    "unsigned long integer constant"  shift, and go to state 448
    "unsigned int8 constant"          shift, and go to state 449
    "floating point constant"         shift, and go to state 450
    "double constant"                 shift, and go to state 451
    "name"                            shift, and go to state 56
    "start of the string"             shift, and go to state 452
    '-'                               shift, and go to state 453
    '+'                               shift, and go to state 454
    '*'                               shift, and go to state 455
    '%'                               shift, and go to state 13
    '~'                               shift, and go to state 456
    '!'                               shift, and go to state 457
    '['                               shift, and go to state 458
    '('                               shift, and go to state 459
    '$'                               shift, and go to state 460
    '@'                               shift, and go to state 461
    '{'                               shift, and go to state 462

    string_builder          go to state 463
    expr_reader             go to state 464
    expr_call_pipe          go to state 465
    name_in_namespace       go to state 466
    expr_new                go to state 467
    expr_cast               go to state 468
    expr_type_decl          go to state 469
    expr_type_info          go to state 470
    block_or_lambda         go to state 471
    expr_full_block         go to state 472
    expr_numeric_const      go to state 473
    expr_named_call         go to state 474
    expr_method_call        go to state 475
    func_addr_expr          go to state 476
    expr_field              go to state 477
    expr_call               go to state 478
    expr                    go to state 1344
    expr_generator          go to state 480
    expr_mtag               go to state 481
    basic_type_declaration  go to state 482
    make_decl               go to state 483
    make_struct_decl        go to state 484
    make_tuple_call         go to state 485
    make_dim_decl           go to state 486
    make_table_decl         go to state 487
    array_comprehension     go to state 488


State 1269

  751 make_struct_fields: make_struct_fields ',' "name" copy_or_move . expr

    "struct"                          shift, and go to state 414
    "class"                           shift, and go to state 415
    "true"                            shift, and go to state 416
    "false"                           shift, and go to state 417
    "new"                             shift, and go to state 418
    "typeinfo"                        shift, and go to state 419
    "type"                            shift, and go to state 420
    "array"                           shift, and go to state 421
    "null"                            shift, and go to state 422
    "table"                           shift, and go to state 423
    "deref"                           shift, and go to state 424
    "cast"                            shift, and go to state 425
    "upcast"                          shift, and go to state 426
    "addr"                            shift, and go to state 427
    "reinterpret"                     shift, and go to state 428
    "unsafe"                          shift, and go to state 429
    "fixed_array"                     shift, and go to state 430
    "default"                         shift, and go to state 431
    "bool"                            shift, and go to state 228
    "void"                            shift, and go to state 229
    "string"                          shift, and go to state 230
    "int"                             shift, and go to state 232
    "int2"                            shift, and go to state 233
    "int3"                            shift, and go to state 234
    "int4"                            shift, and go to state 235
    "uint"                            shift, and go to state 236
    "bitfield"                        shift, and go to state 432
    "uint2"                           shift, and go to state 238
    "uint3"                           shift, and go to state 239
    "uint4"                           shift, and go to state 240
    "float"                           shift, and go to state 241
    "float2"                          shift, and go to state 242
    "float3"                          shift, and go to state 243
    "float4"                          shift, and go to state 244
    "range"                           shift, and go to state 245
    "urange"                          shift, and go to state 246
    "range64"                         shift, and go to state 247
    "urange64"                        shift, and go to state 248
    "int64"                           shift, and go to state 250
    "uint64"                          shift, and go to state 251
    "double"                          shift, and go to state 252
    "int8"                            shift, and go to state 255
    "uint8"                           shift, and go to state 256
    "int16"                           shift, and go to state 257
    "uint16"                          shift, and go to state 258
    "tuple"                           shift, and go to state 433
    "variant"                         shift, and go to state 434
    "generator"                       shift, and go to state 435
    "++"                              shift, and go to state 436
    "--"                              shift, and go to state 437
    "::"                              shift, and go to state 55
    "$$"                              shift, and go to state 438
    "$i"                              shift, and go to state 439
    "$v"                              shift, and go to state 440
    "$b"                              shift, and go to state 441
    "$a"                              shift, and go to state 442
    "$c"                              shift, and go to state 443
    "..."                             shift, and go to state 444
    "integer constant"                shift, and go to state 445
    "long integer constant"           shift, and go to state 446
    "unsigned integer constant"       shift, and go to state 447
    "unsigned long integer constant"  shift, and go to state 448
    "unsigned int8 constant"          shift, and go to state 449
    "floating point constant"         shift, and go to state 450
    "double constant"                 shift, and go to state 451
    "name"                            shift, and go to state 56
    "start of the string"             shift, and go to state 452
    '-'                               shift, and go to state 453
    '+'                               shift, and go to state 454
    '*'                               shift, and go to state 455
    '%'                               shift, and go to state 13
    '~'                               shift, and go to state 456
    '!'                               shift, and go to state 457
    '['                               shift, and go to state 458
    '('                               shift, and go to state 459
    '$'                               shift, and go to state 460
    '@'                               shift, and go to state 461
    '{'                               shift, and go to state 462

    string_builder          go to state 463
    expr_reader             go to state 464
    expr_call_pipe          go to state 465
    name_in_namespace       go to state 466
    expr_new                go to state 467
    expr_cast               go to state 468
    expr_type_decl          go to state 469
    expr_type_info          go to state 470
    block_or_lambda         go to state 471
    expr_full_block         go to state 472
    expr_numeric_const      go to state 473
    expr_named_call         go to state 474
    expr_method_call        go to state 475
    func_addr_expr          go to state 476
    expr_field              go to state 477
    expr_call               go to state 478
    expr                    go to state 1345
    expr_generator          go to state 480
    expr_mtag               go to state 481
    basic_type_declaration  go to state 482
    make_decl               go to state 483
    make_struct_decl        go to state 484
    make_tuple_call         go to state 485
    make_dim_decl           go to state 486
    make_table_decl         go to state 487
    array_comprehension     go to state 488


State 1270

  318 capture_entry: "<-" "name" .

    $default  reduce using rule 318 (capture_entry)


State 1271

  319 capture_entry: ":=" "name" .

    $default  reduce using rule 319 (capture_entry)


State 1272

  320 capture_entry: "name" '(' . "name" ')'

    "name"  shift, and go to state 1346


State 1273

  317 capture_entry: '=' "name" .

    $default  reduce using rule 317 (capture_entry)


State 1274

  316 capture_entry: '&' "name" .

    $default  reduce using rule 316 (capture_entry)


State 1275

  322 capture_list: capture_list ',' . capture_entry

    "<-"    shift, and go to state 1170
    ":="    shift, and go to state 1171
    "name"  shift, and go to state 1172
    '='     shift, and go to state 1173
    '&'     shift, and go to state 1174

    capture_entry  go to state 1347


State 1276

  324 optional_capture_list: "capture" '(' capture_list ')' .

    $default  reduce using rule 324 (optional_capture_list)


State 1277

  325 expr_full_block: block_or_lambda optional_annotation_list optional_capture_list optional_function_argument_list optional_function_type optional_semis . block_or_simple_block

    "=>"  shift, and go to state 1348

    $default  reduce using rule 224 ($@9)

    expression_block       go to state 1349
    $@9                    go to state 332
    block_or_simple_block  go to state 1350


State 1278

  326 expr_full_block_assumed_piped: block_or_lambda optional_annotation_list optional_capture_list optional_function_argument_list optional_function_type . optional_semis expression_block

    ';'  shift, and go to state 171

    $default  reduce using rule 71 (optional_semis)

    semis           go to state 172
    optional_semis  go to state 1351


State 1279

  440 expr: expr "is" "type" '<' $@27 type_declaration_no_options . '>' $@28

    '>'  shift, and go to state 1352


State 1280

  482 expr_mtag: expr "is" "$f" '(' expr ')' .

    $default  reduce using rule 482 (expr_mtag)


State 1281

  446 expr: expr "as" "type" '<' $@29 type_declaration . '>' $@30
  727 type_declaration: type_declaration . '|' type_declaration_no_options
  728                 | type_declaration . '|' '#'

    '|'  shift, and go to state 372
    '>'  shift, and go to state 1353


State 1282

  480 expr_mtag: expr "as" "$f" '(' expr ')' .

    $default  reduce using rule 480 (expr_mtag)


State 1283

  357 expr_method_call: expr "->" "name" '(' expr_list ')' .

    $default  reduce using rule 357 (expr_method_call)


State 1284

  477 expr_mtag: expr "?." "$f" '(' expr ')' .

    $default  reduce using rule 477 (expr_mtag)


State 1285

  451 expr: expr '?' "as" "type" '<' $@31 . type_declaration '>' $@32

    "type"       shift, and go to state 222
    "array"      shift, and go to state 223
    "table"      shift, and go to state 224
    "typedecl"   shift, and go to state 225
    "iterator"   shift, and go to state 226
    "smart_ptr"  shift, and go to state 227
    "bool"       shift, and go to state 228
    "void"       shift, and go to state 229
    "string"     shift, and go to state 230
    "auto"       shift, and go to state 231
    "int"        shift, and go to state 232
    "int2"       shift, and go to state 233
    "int3"       shift, and go to state 234
    "int4"       shift, and go to state 235
    "uint"       shift, and go to state 236
    "bitfield"   shift, and go to state 237
    "uint2"      shift, and go to state 238
    "uint3"      shift, and go to state 239
    "uint4"      shift, and go to state 240
    "float"      shift, and go to state 241
    "float2"     shift, and go to state 242
    "float3"     shift, and go to state 243
    "float4"     shift, and go to state 244
    "range"      shift, and go to state 245
    "urange"     shift, and go to state 246
    "range64"    shift, and go to state 247
    "urange64"   shift, and go to state 248
    "block"      shift, and go to state 249
    "int64"      shift, and go to state 250
    "uint64"     shift, and go to state 251
    "double"     shift, and go to state 252
    "function"   shift, and go to state 253
    "lambda"     shift, and go to state 254
    "int8"       shift, and go to state 255
    "uint8"      shift, and go to state 256
    "int16"      shift, and go to state 257
    "uint16"     shift, and go to state 258
    "tuple"      shift, and go to state 259
    "variant"    shift, and go to state 260
    "::"         shift, and go to state 55
    "$t"         shift, and go to state 261
    "name"       shift, and go to state 56
    '$'          shift, and go to state 262

    name_in_namespace                   go to state 263
    basic_type_declaration              go to state 264
    structure_type_declaration          go to state 265
    auto_type_declaration               go to state 266
    bitfield_type_declaration           go to state 267
    type_declaration_no_options         go to state 268
    type_declaration_no_options_no_dim  go to state 269
    type_declaration                    go to state 1354


State 1286

  356 expr_method_call: expr . "->" "name" '(' ')'
  357                 | expr . "->" "name" '(' expr_list ')'
  367 expr_field: expr . '.' "name"
  368           | expr . '.' '.' "name"
  369           | expr . '.' "name" '(' ')'
  370           | expr . '.' "name" '(' expr_list ')'
  371           | expr . '.' basic_type_declaration '(' ')'
  372           | expr . '.' basic_type_declaration '(' expr_list ')'
  375           | expr . '.' $@25 error $@26
  397 expr: expr . "<<" expr
  398     | expr . ">>" expr
  399     | expr . "<<<" expr
  400     | expr . ">>>" expr
  401     | expr . '+' expr
  402     | expr . '-' expr
  403     | expr . '*' expr
  404     | expr . '/' expr
  405     | expr . '%' expr
  406     | expr . '<' expr
  407     | expr . '>' expr
  408     | expr . "==" expr
  409     | expr . "!=" expr
  410     | expr . "<=" expr
  411     | expr . ">=" expr
  412     | expr . '&' expr
  413     | expr . '|' expr
  414     | expr . '^' expr
  415     | expr . "&&" expr
  416     | expr . "||" expr
  417     | expr . "^^" expr
  418     | expr . ".." expr
  421     | expr . "++"
  422     | expr . "--"
  424     | expr . '[' expr ']'
  425     | expr . '.' '[' expr ']'
  426     | expr . "?[" expr ']'
  427     | expr . '.' "?[" expr ']'
  428     | expr . "?." "name"
  429     | expr . '.' "?." "name"
  436     | expr . "??" expr
  437     | expr . '?' expr ':' expr
  440     | expr . "is" "type" '<' $@27 type_declaration_no_options '>' $@28
  441     | expr . "is" basic_type_declaration
  442     | expr . "is" "name"
  443     | expr . "as" "name"
  446     | expr . "as" "type" '<' $@29 type_declaration '>' $@30
  447     | expr . "as" basic_type_declaration
  448     | expr . '?' "as" "name"
  451     | expr . '?' "as" "type" '<' $@31 type_declaration '>' $@32
  452     | expr . '?' "as" basic_type_declaration
  460     | expr . "<|" expr
  461     | expr . "|>" expr
  462     | expr . "|>" basic_type_declaration
  476 expr_mtag: expr . '.' "$f" '(' expr ')'
  477          | expr . "?." "$f" '(' expr ')'
  478          | expr . '.' '.' "$f" '(' expr ')'
  479          | expr . '.' "?." "$f" '(' expr ')'
  480          | expr . "as" "$f" '(' expr ')'
  481          | expr . '?' "as" "$f" '(' expr ')'
  481          | expr '?' "as" "$f" '(' expr . ')'
  482          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 603
    "as"   shift, and go to state 604
    "<<"   shift, and go to state 605
    ">>"   shift, and go to state 606
    "++"   shift, and go to state 607
    "--"   shift, and go to state 608
    "<="   shift, and go to state 609
    ">="   shift, and go to state 610
    "=="   shift, and go to state 611
    "!="   shift, and go to state 612
    "->"   shift, and go to state 613
    "??"   shift, and go to state 614
    "?."   shift, and go to state 615
    "?["   shift, and go to state 616
    "<|"   shift, and go to state 617
    "|>"   shift, and go to state 618
    "<<<"  shift, and go to state 619
    ">>>"  shift, and go to state 620
    "&&"   shift, and go to state 621
    "||"   shift, and go to state 622
    "^^"   shift, and go to state 623
    ".."   shift, and go to state 624
    '?'    shift, and go to state 625
    '|'    shift, and go to state 626
    '^'    shift, and go to state 627
    '&'    shift, and go to state 628
    '<'    shift, and go to state 629
    '>'    shift, and go to state 630
    '-'    shift, and go to state 631
    '+'    shift, and go to state 632
    '*'    shift, and go to state 633
    '/'    shift, and go to state 634
    '%'    shift, and go to state 635
    '.'    shift, and go to state 636
    '['    shift, and go to state 637
    ')'    shift, and go to state 1355


State 1287

  356 expr_method_call: expr . "->" "name" '(' ')'
  357                 | expr . "->" "name" '(' expr_list ')'
  367 expr_field: expr . '.' "name"
  368           | expr . '.' '.' "name"
  369           | expr . '.' "name" '(' ')'
  370           | expr . '.' "name" '(' expr_list ')'
  371           | expr . '.' basic_type_declaration '(' ')'
  372           | expr . '.' basic_type_declaration '(' expr_list ')'
  375           | expr . '.' $@25 error $@26
  397 expr: expr . "<<" expr
  398     | expr . ">>" expr
  399     | expr . "<<<" expr
  400     | expr . ">>>" expr
  401     | expr . '+' expr
  402     | expr . '-' expr
  403     | expr . '*' expr
  404     | expr . '/' expr
  405     | expr . '%' expr
  406     | expr . '<' expr
  407     | expr . '>' expr
  408     | expr . "==" expr
  409     | expr . "!=" expr
  410     | expr . "<=" expr
  411     | expr . ">=" expr
  412     | expr . '&' expr
  413     | expr . '|' expr
  414     | expr . '^' expr
  415     | expr . "&&" expr
  416     | expr . "||" expr
  417     | expr . "^^" expr
  418     | expr . ".." expr
  421     | expr . "++"
  422     | expr . "--"
  424     | expr . '[' expr ']'
  425     | expr . '.' '[' expr ']'
  426     | expr . "?[" expr ']'
  427     | expr . '.' "?[" expr ']'
  428     | expr . "?." "name"
  429     | expr . '.' "?." "name"
  436     | expr . "??" expr
  437     | expr . '?' expr ':' expr
  440     | expr . "is" "type" '<' $@27 type_declaration_no_options '>' $@28
  441     | expr . "is" basic_type_declaration
  442     | expr . "is" "name"
  443     | expr . "as" "name"
  446     | expr . "as" "type" '<' $@29 type_declaration '>' $@30
  447     | expr . "as" basic_type_declaration
  448     | expr . '?' "as" "name"
  451     | expr . '?' "as" "type" '<' $@31 type_declaration '>' $@32
  452     | expr . '?' "as" basic_type_declaration
  460     | expr . "<|" expr
  461     | expr . "|>" expr
  462     | expr . "|>" basic_type_declaration
  476 expr_mtag: expr . '.' "$f" '(' expr ')'
  477          | expr . "?." "$f" '(' expr ')'
  478          | expr . '.' '.' "$f" '(' expr ')'
  479          | expr . '.' "?." "$f" '(' expr ')'
  479          | expr '.' "?." "$f" '(' expr . ')'
  480          | expr . "as" "$f" '(' expr ')'
  481          | expr . '?' "as" "$f" '(' expr ')'
  482          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 603
    "as"   shift, and go to state 604
    "<<"   shift, and go to state 605
    ">>"   shift, and go to state 606
    "++"   shift, and go to state 607
    "--"   shift, and go to state 608
    "<="   shift, and go to state 609
    ">="   shift, and go to state 610
    "=="   shift, and go to state 611
    "!="   shift, and go to state 612
    "->"   shift, and go to state 613
    "??"   shift, and go to state 614
    "?."   shift, and go to state 615
    "?["   shift, and go to state 616
    "<|"   shift, and go to state 617
    "|>"   shift, and go to state 618
    "<<<"  shift, and go to state 619
    ">>>"  shift, and go to state 620
    "&&"   shift, and go to state 621
    "||"   shift, and go to state 622
    "^^"   shift, and go to state 623
    ".."   shift, and go to state 624
    '?'    shift, and go to state 625
    '|'    shift, and go to state 626
    '^'    shift, and go to state 627
    '&'    shift, and go to state 628
    '<'    shift, and go to state 629
    '>'    shift, and go to state 630
    '-'    shift, and go to state 631
    '+'    shift, and go to state 632
    '*'    shift, and go to state 633
    '/'    shift, and go to state 634
    '%'    shift, and go to state 635
    '.'    shift, and go to state 636
    '['    shift, and go to state 637
    ')'    shift, and go to state 1356


State 1288

  476 expr_mtag: expr '.' "$f" '(' expr ')' .

    $default  reduce using rule 476 (expr_mtag)


State 1289

  370 expr_field: expr '.' "name" '(' expr_list ')' .

    $default  reduce using rule 370 (expr_field)


State 1290

  356 expr_method_call: expr . "->" "name" '(' ')'
  357                 | expr . "->" "name" '(' expr_list ')'
  367 expr_field: expr . '.' "name"
  368           | expr . '.' '.' "name"
  369           | expr . '.' "name" '(' ')'
  370           | expr . '.' "name" '(' expr_list ')'
  371           | expr . '.' basic_type_declaration '(' ')'
  372           | expr . '.' basic_type_declaration '(' expr_list ')'
  375           | expr . '.' $@25 error $@26
  397 expr: expr . "<<" expr
  398     | expr . ">>" expr
  399     | expr . "<<<" expr
  400     | expr . ">>>" expr
  401     | expr . '+' expr
  402     | expr . '-' expr
  403     | expr . '*' expr
  404     | expr . '/' expr
  405     | expr . '%' expr
  406     | expr . '<' expr
  407     | expr . '>' expr
  408     | expr . "==" expr
  409     | expr . "!=" expr
  410     | expr . "<=" expr
  411     | expr . ">=" expr
  412     | expr . '&' expr
  413     | expr . '|' expr
  414     | expr . '^' expr
  415     | expr . "&&" expr
  416     | expr . "||" expr
  417     | expr . "^^" expr
  418     | expr . ".." expr
  421     | expr . "++"
  422     | expr . "--"
  424     | expr . '[' expr ']'
  425     | expr . '.' '[' expr ']'
  426     | expr . "?[" expr ']'
  427     | expr . '.' "?[" expr ']'
  428     | expr . "?." "name"
  429     | expr . '.' "?." "name"
  436     | expr . "??" expr
  437     | expr . '?' expr ':' expr
  440     | expr . "is" "type" '<' $@27 type_declaration_no_options '>' $@28
  441     | expr . "is" basic_type_declaration
  442     | expr . "is" "name"
  443     | expr . "as" "name"
  446     | expr . "as" "type" '<' $@29 type_declaration '>' $@30
  447     | expr . "as" basic_type_declaration
  448     | expr . '?' "as" "name"
  451     | expr . '?' "as" "type" '<' $@31 type_declaration '>' $@32
  452     | expr . '?' "as" basic_type_declaration
  460     | expr . "<|" expr
  461     | expr . "|>" expr
  462     | expr . "|>" basic_type_declaration
  476 expr_mtag: expr . '.' "$f" '(' expr ')'
  477          | expr . "?." "$f" '(' expr ')'
  478          | expr . '.' '.' "$f" '(' expr ')'
  478          | expr '.' '.' "$f" '(' expr . ')'
  479          | expr . '.' "?." "$f" '(' expr ')'
  480          | expr . "as" "$f" '(' expr ')'
  481          | expr . '?' "as" "$f" '(' expr ')'
  482          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 603
    "as"   shift, and go to state 604
    "<<"   shift, and go to state 605
    ">>"   shift, and go to state 606
    "++"   shift, and go to state 607
    "--"   shift, and go to state 608
    "<="   shift, and go to state 609
    ">="   shift, and go to state 610
    "=="   shift, and go to state 611
    "!="   shift, and go to state 612
    "->"   shift, and go to state 613
    "??"   shift, and go to state 614
    "?."   shift, and go to state 615
    "?["   shift, and go to state 616
    "<|"   shift, and go to state 617
    "|>"   shift, and go to state 618
    "<<<"  shift, and go to state 619
    ">>>"  shift, and go to state 620
    "&&"   shift, and go to state 621
    "||"   shift, and go to state 622
    "^^"   shift, and go to state 623
    ".."   shift, and go to state 624
    '?'    shift, and go to state 625
    '|'    shift, and go to state 626
    '^'    shift, and go to state 627
    '&'    shift, and go to state 628
    '<'    shift, and go to state 629
    '>'    shift, and go to state 630
    '-'    shift, and go to state 631
    '+'    shift, and go to state 632
    '*'    shift, and go to state 633
    '/'    shift, and go to state 634
    '%'    shift, and go to state 635
    '.'    shift, and go to state 636
    '['    shift, and go to state 637
    ')'    shift, and go to state 1357


State 1291

  372 expr_field: expr '.' basic_type_declaration '(' expr_list ')' .

    $default  reduce using rule 372 (expr_field)


State 1292

  673 type_declaration_no_options_no_dim: '$' name_in_namespace '<' $@48 type_declaration_no_options_list '>' '(' optional_expr_list . ')'

    ')'  shift, and go to state 1358


State 1293

  605 variable_name_with_pos_list: variable_name_with_pos_list ',' "name" "aka" "name" .

    $default  reduce using rule 605 (variable_name_with_pos_list)


State 1294

  356 expr_method_call: expr . "->" "name" '(' ')'
  357                 | expr . "->" "name" '(' expr_list ')'
  367 expr_field: expr . '.' "name"
  368           | expr . '.' '.' "name"
  369           | expr . '.' "name" '(' ')'
  370           | expr . '.' "name" '(' expr_list ')'
  371           | expr . '.' basic_type_declaration '(' ')'
  372           | expr . '.' basic_type_declaration '(' expr_list ')'
  375           | expr . '.' $@25 error $@26
  397 expr: expr . "<<" expr
  398     | expr . ">>" expr
  399     | expr . "<<<" expr
  400     | expr . ">>>" expr
  401     | expr . '+' expr
  402     | expr . '-' expr
  403     | expr . '*' expr
  404     | expr . '/' expr
  405     | expr . '%' expr
  406     | expr . '<' expr
  407     | expr . '>' expr
  408     | expr . "==" expr
  409     | expr . "!=" expr
  410     | expr . "<=" expr
  411     | expr . ">=" expr
  412     | expr . '&' expr
  413     | expr . '|' expr
  414     | expr . '^' expr
  415     | expr . "&&" expr
  416     | expr . "||" expr
  417     | expr . "^^" expr
  418     | expr . ".." expr
  421     | expr . "++"
  422     | expr . "--"
  424     | expr . '[' expr ']'
  425     | expr . '.' '[' expr ']'
  426     | expr . "?[" expr ']'
  427     | expr . '.' "?[" expr ']'
  428     | expr . "?." "name"
  429     | expr . '.' "?." "name"
  436     | expr . "??" expr
  437     | expr . '?' expr ':' expr
  440     | expr . "is" "type" '<' $@27 type_declaration_no_options '>' $@28
  441     | expr . "is" basic_type_declaration
  442     | expr . "is" "name"
  443     | expr . "as" "name"
  446     | expr . "as" "type" '<' $@29 type_declaration '>' $@30
  447     | expr . "as" basic_type_declaration
  448     | expr . '?' "as" "name"
  451     | expr . '?' "as" "type" '<' $@31 type_declaration '>' $@32
  452     | expr . '?' "as" basic_type_declaration
  460     | expr . "<|" expr
  461     | expr . "|>" expr
  462     | expr . "|>" basic_type_declaration
  476 expr_mtag: expr . '.' "$f" '(' expr ')'
  477          | expr . "?." "$f" '(' expr ')'
  478          | expr . '.' '.' "$f" '(' expr ')'
  479          | expr . '.' "?." "$f" '(' expr ')'
  480          | expr . "as" "$f" '(' expr ')'
  481          | expr . '?' "as" "$f" '(' expr ')'
  482          | expr . "is" "$f" '(' expr ')'
  526 variable_declaration: variable_name_with_pos_list ':' type_declaration copy_or_move expr .

    "is"   shift, and go to state 603
    "as"   shift, and go to state 604
    "<<"   shift, and go to state 605
    ">>"   shift, and go to state 606
    "++"   shift, and go to state 607
    "--"   shift, and go to state 608
    "<="   shift, and go to state 609
    ">="   shift, and go to state 610
    "=="   shift, and go to state 611
    "!="   shift, and go to state 612
    "->"   shift, and go to state 613
    "??"   shift, and go to state 614
    "?."   shift, and go to state 615
    "?["   shift, and go to state 616
    "<|"   shift, and go to state 617
    "|>"   shift, and go to state 618
    "<<<"  shift, and go to state 619
    ">>>"  shift, and go to state 620
    "&&"   shift, and go to state 621
    "||"   shift, and go to state 622
    "^^"   shift, and go to state 623
    ".."   shift, and go to state 624
    '?'    shift, and go to state 625
    '|'    shift, and go to state 626
    '^'    shift, and go to state 627
    '&'    shift, and go to state 628
    '<'    shift, and go to state 629
    '>'    shift, and go to state 630
    '-'    shift, and go to state 631
    '+'    shift, and go to state 632
    '*'    shift, and go to state 633
    '/'    shift, and go to state 634
    '%'    shift, and go to state 635
    '.'    shift, and go to state 636
    '['    shift, and go to state 637

    $default  reduce using rule 526 (variable_declaration)


State 1295

   75 expression_if_then_else_oneliner: expression_if_one_liner "if" '(' expr ')' . expression_else_one_liner ';'

    "else"  shift, and go to state 1359

    $default  reduce using rule 62 (expression_else_one_liner)

    expression_else_one_liner  go to state 1360


State 1296

   74 expression_if_then_else: $@2 if_or_static_if '(' expr ')' . optional_semis expression_block expression_else

    ';'  shift, and go to state 171

    $default  reduce using rule 71 (optional_semis)

    semis           go to state 172
    optional_semis  go to state 1361


State 1297

   77 expression_for_loop: $@3 "for" '(' variable_name_with_pos_list "in" . expr_list ')' optional_semis expression_block

    "struct"                          shift, and go to state 414
    "class"                           shift, and go to state 415
    "true"                            shift, and go to state 416
    "false"                           shift, and go to state 417
    "new"                             shift, and go to state 418
    "typeinfo"                        shift, and go to state 419
    "type"                            shift, and go to state 420
    "array"                           shift, and go to state 421
    "null"                            shift, and go to state 422
    "table"                           shift, and go to state 423
    "deref"                           shift, and go to state 424
    "cast"                            shift, and go to state 425
    "upcast"                          shift, and go to state 426
    "addr"                            shift, and go to state 427
    "reinterpret"                     shift, and go to state 428
    "unsafe"                          shift, and go to state 429
    "fixed_array"                     shift, and go to state 430
    "default"                         shift, and go to state 431
    "bool"                            shift, and go to state 228
    "void"                            shift, and go to state 229
    "string"                          shift, and go to state 230
    "int"                             shift, and go to state 232
    "int2"                            shift, and go to state 233
    "int3"                            shift, and go to state 234
    "int4"                            shift, and go to state 235
    "uint"                            shift, and go to state 236
    "bitfield"                        shift, and go to state 432
    "uint2"                           shift, and go to state 238
    "uint3"                           shift, and go to state 239
    "uint4"                           shift, and go to state 240
    "float"                           shift, and go to state 241
    "float2"                          shift, and go to state 242
    "float3"                          shift, and go to state 243
    "float4"                          shift, and go to state 244
    "range"                           shift, and go to state 245
    "urange"                          shift, and go to state 246
    "range64"                         shift, and go to state 247
    "urange64"                        shift, and go to state 248
    "int64"                           shift, and go to state 250
    "uint64"                          shift, and go to state 251
    "double"                          shift, and go to state 252
    "int8"                            shift, and go to state 255
    "uint8"                           shift, and go to state 256
    "int16"                           shift, and go to state 257
    "uint16"                          shift, and go to state 258
    "tuple"                           shift, and go to state 433
    "variant"                         shift, and go to state 434
    "generator"                       shift, and go to state 435
    "++"                              shift, and go to state 436
    "--"                              shift, and go to state 437
    "::"                              shift, and go to state 55
    "$$"                              shift, and go to state 438
    "$i"                              shift, and go to state 439
    "$v"                              shift, and go to state 440
    "$b"                              shift, and go to state 441
    "$a"                              shift, and go to state 442
    "$c"                              shift, and go to state 443
    "..."                             shift, and go to state 444
    "integer constant"                shift, and go to state 445
    "long integer constant"           shift, and go to state 446
    "unsigned integer constant"       shift, and go to state 447
    "unsigned long integer constant"  shift, and go to state 448
    "unsigned int8 constant"          shift, and go to state 449
    "floating point constant"         shift, and go to state 450
    "double constant"                 shift, and go to state 451
    "name"                            shift, and go to state 56
    "start of the string"             shift, and go to state 452
    '-'                               shift, and go to state 453
    '+'                               shift, and go to state 454
    '*'                               shift, and go to state 455
    '%'                               shift, and go to state 13
    '~'                               shift, and go to state 456
    '!'                               shift, and go to state 457
    '['                               shift, and go to state 458
    '('                               shift, and go to state 459
    '$'                               shift, and go to state 460
    '@'                               shift, and go to state 461
    '{'                               shift, and go to state 462

    string_builder          go to state 463
    expr_reader             go to state 464
    expr_call_pipe          go to state 465
    name_in_namespace       go to state 466
    expr_new                go to state 467
    expr_cast               go to state 468
    expr_type_decl          go to state 469
    expr_type_info          go to state 470
    expr_list               go to state 1362
    block_or_lambda         go to state 471
    expr_full_block         go to state 472
    expr_numeric_const      go to state 473
    expr_named_call         go to state 474
    expr_method_call        go to state 475
    func_addr_expr          go to state 476
    expr_field              go to state 477
    expr_call               go to state 478
    expr                    go to state 590
    expr_generator          go to state 480
    expr_mtag               go to state 481
    basic_type_declaration  go to state 482
    make_decl               go to state 483
    make_struct_decl        go to state 484
    make_tuple_call         go to state 485
    make_dim_decl           go to state 486
    make_table_decl         go to state 487
    array_comprehension     go to state 488


State 1298

   80 expression_while_loop: $@4 "while" '(' expr ')' . optional_semis expression_block

    ';'  shift, and go to state 171

    $default  reduce using rule 71 (optional_semis)

    semis           go to state 172
    optional_semis  go to state 1363


State 1299

   82 expression_with: $@5 "with" '(' expr ')' . optional_semis expression_block

    ';'  shift, and go to state 171

    $default  reduce using rule 71 (optional_semis)

    semis           go to state 172
    optional_semis  go to state 1364


State 1300

  223 expression_block_finally: "finally" $@7 '{' . expressions $@8 '}'

    $default  reduce using rule 247 (expressions)

    expressions  go to state 1365


State 1301

  287 tuple_expansion: tuple_expansion ',' . "name"

    "name"  shift, and go to state 1366


State 1302

  288 tuple_expansion_variable_declaration: '(' tuple_expansion ')' . ':' type_declaration_no_options copy_or_move_or_clone expr ';'
  289                                     | '(' tuple_expansion ')' . optional_ref copy_or_move_or_clone expr ';'

    ':'  shift, and go to state 1367
    '&'  shift, and go to state 409

    $default  reduce using rule 531 (optional_ref)

    optional_ref  go to state 1368


State 1303

  541 variable_declaration_list: variable_declaration_list ';' .

    $default  reduce using rule 541 (variable_declaration_list)


State 1304

  292 expression_let: kwd_let optional_in_scope '{' variable_declaration_list '}' .

    $default  reduce using rule 292 (expression_let)


State 1305

  542 variable_declaration_list: variable_declaration_list let_variable_declaration .

    $default  reduce using rule 542 (variable_declaration_list)


State 1306

  585 enum_declaration: optional_annotation_list "enum" $@39 optional_public_or_private_enum enum_name optional_enum_basic_type_declaration optional_commas '{' $@40 enum_list optional_commas $@41 '}' .

    $default  reduce using rule 585 (enum_declaration)


State 1307

  490 optional_constant: "const" .

    $default  reduce using rule 490 (optional_constant)


State 1308

  501 struct_variable_declaration_list: struct_variable_declaration_list optional_annotation_list "def" optional_public_or_private_member_variable "abstract" optional_constant . $@34 function_declaration_header ';'

    $default  reduce using rule 500 ($@34)

    $@34  go to state 1369


State 1309

  503 struct_variable_declaration_list: struct_variable_declaration_list optional_annotation_list "def" optional_public_or_private_member_variable optional_static_member_variable optional_override . optional_constant $@35 function_declaration_header expression_block

    "const"  shift, and go to state 1307

    $default  reduce using rule 489 (optional_constant)

    optional_constant  go to state 1370


State 1310

  496 structure_variable_declaration: optional_field_annotation optional_static_member_variable optional_override optional_public_or_private_member_variable . variable_declaration

    "$i"    shift, and go to state 673
    "name"  shift, and go to state 674

    variable_declaration         go to state 1371
    variable_name_with_pos_list  go to state 676


State 1311

  544 let_variable_declaration: let_variable_name_with_pos_list ':' type_declaration_no_options copy_or_move_or_clone expr ';' .

    $default  reduce using rule 544 (let_variable_declaration)


State 1312

  769 make_struct_decl: "struct" '<' $@85 type_declaration_no_options '>' $@86 '(' . use_initializer optional_make_struct_dim_decl ')'

    "uninitialized"  shift, and go to state 1327

    $default  reduce using rule 765 (use_initializer)

    use_initializer  go to state 1372


State 1313

  772 make_struct_decl: "class" '<' $@87 type_declaration_no_options '>' $@88 '(' . use_initializer optional_make_struct_dim_decl ')'

    "uninitialized"  shift, and go to state 1327

    $default  reduce using rule 765 (use_initializer)

    use_initializer  go to state 1373


State 1314

  306 expr_type_info: "typeinfo" name_in_namespace '<' "name" '>' '(' expr . ')'
  356 expr_method_call: expr . "->" "name" '(' ')'
  357                 | expr . "->" "name" '(' expr_list ')'
  367 expr_field: expr . '.' "name"
  368           | expr . '.' '.' "name"
  369           | expr . '.' "name" '(' ')'
  370           | expr . '.' "name" '(' expr_list ')'
  371           | expr . '.' basic_type_declaration '(' ')'
  372           | expr . '.' basic_type_declaration '(' expr_list ')'
  375           | expr . '.' $@25 error $@26
  397 expr: expr . "<<" expr
  398     | expr . ">>" expr
  399     | expr . "<<<" expr
  400     | expr . ">>>" expr
  401     | expr . '+' expr
  402     | expr . '-' expr
  403     | expr . '*' expr
  404     | expr . '/' expr
  405     | expr . '%' expr
  406     | expr . '<' expr
  407     | expr . '>' expr
  408     | expr . "==" expr
  409     | expr . "!=" expr
  410     | expr . "<=" expr
  411     | expr . ">=" expr
  412     | expr . '&' expr
  413     | expr . '|' expr
  414     | expr . '^' expr
  415     | expr . "&&" expr
  416     | expr . "||" expr
  417     | expr . "^^" expr
  418     | expr . ".." expr
  421     | expr . "++"
  422     | expr . "--"
  424     | expr . '[' expr ']'
  425     | expr . '.' '[' expr ']'
  426     | expr . "?[" expr ']'
  427     | expr . '.' "?[" expr ']'
  428     | expr . "?." "name"
  429     | expr . '.' "?." "name"
  436     | expr . "??" expr
  437     | expr . '?' expr ':' expr
  440     | expr . "is" "type" '<' $@27 type_declaration_no_options '>' $@28
  441     | expr . "is" basic_type_declaration
  442     | expr . "is" "name"
  443     | expr . "as" "name"
  446     | expr . "as" "type" '<' $@29 type_declaration '>' $@30
  447     | expr . "as" basic_type_declaration
  448     | expr . '?' "as" "name"
  451     | expr . '?' "as" "type" '<' $@31 type_declaration '>' $@32
  452     | expr . '?' "as" basic_type_declaration
  460     | expr . "<|" expr
  461     | expr . "|>" expr
  462     | expr . "|>" basic_type_declaration
  476 expr_mtag: expr . '.' "$f" '(' expr ')'
  477          | expr . "?." "$f" '(' expr ')'
  478          | expr . '.' '.' "$f" '(' expr ')'
  479          | expr . '.' "?." "$f" '(' expr ')'
  480          | expr . "as" "$f" '(' expr ')'
  481          | expr . '?' "as" "$f" '(' expr ')'
  482          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 603
    "as"   shift, and go to state 604
    "<<"   shift, and go to state 605
    ">>"   shift, and go to state 606
    "++"   shift, and go to state 607
    "--"   shift, and go to state 608
    "<="   shift, and go to state 609
    ">="   shift, and go to state 610
    "=="   shift, and go to state 611
    "!="   shift, and go to state 612
    "->"   shift, and go to state 613
    "??"   shift, and go to state 614
    "?."   shift, and go to state 615
    "?["   shift, and go to state 616
    "<|"   shift, and go to state 617
    "|>"   shift, and go to state 618
    "<<<"  shift, and go to state 619
    ">>>"  shift, and go to state 620
    "&&"   shift, and go to state 621
    "||"   shift, and go to state 622
    "^^"   shift, and go to state 623
    ".."   shift, and go to state 624
    '?'    shift, and go to state 625
    '|'    shift, and go to state 626
    '^'    shift, and go to state 627
    '&'    shift, and go to state 628
    '<'    shift, and go to state 629
    '>'    shift, and go to state 630
    '-'    shift, and go to state 631
    '+'    shift, and go to state 632
    '*'    shift, and go to state 633
    '/'    shift, and go to state 634
    '%'    shift, and go to state 635
    '.'    shift, and go to state 636
    '['    shift, and go to state 637
    ')'    shift, and go to state 1374


State 1315

  307 expr_type_info: "typeinfo" name_in_namespace '<' "name" c_or_s "name" '>' . '(' expr ')'

    '('  shift, and go to state 1375


State 1316

  788 make_dim_decl: "array" "struct" '<' $@95 type_declaration_no_options '>' $@96 . '(' use_initializer optional_make_struct_dim_decl ')'

    '('  shift, and go to state 1376


State 1317

  791 make_dim_decl: "array" "tuple" '<' $@97 type_declaration_no_options '>' $@98 . '(' use_initializer optional_make_struct_dim_decl ')'

    '('  shift, and go to state 1377


State 1318

  794 make_dim_decl: "array" "variant" '<' $@99 type_declaration_no_options '>' $@100 . '(' make_variant_dim ')'

    '('  shift, and go to state 1378


State 1319

  798 make_dim_decl: "array" '<' $@101 type_declaration_no_options '>' $@102 '(' . optional_expr_list ')'

    "struct"                          shift, and go to state 414
    "class"                           shift, and go to state 415
    "true"                            shift, and go to state 416
    "false"                           shift, and go to state 417
    "new"                             shift, and go to state 418
    "typeinfo"                        shift, and go to state 419
    "type"                            shift, and go to state 420
    "array"                           shift, and go to state 421
    "null"                            shift, and go to state 422
    "table"                           shift, and go to state 423
    "deref"                           shift, and go to state 424
    "cast"                            shift, and go to state 425
    "upcast"                          shift, and go to state 426
    "addr"                            shift, and go to state 427
    "reinterpret"                     shift, and go to state 428
    "unsafe"                          shift, and go to state 429
    "fixed_array"                     shift, and go to state 430
    "default"                         shift, and go to state 431
    "bool"                            shift, and go to state 228
    "void"                            shift, and go to state 229
    "string"                          shift, and go to state 230
    "int"                             shift, and go to state 232
    "int2"                            shift, and go to state 233
    "int3"                            shift, and go to state 234
    "int4"                            shift, and go to state 235
    "uint"                            shift, and go to state 236
    "bitfield"                        shift, and go to state 432
    "uint2"                           shift, and go to state 238
    "uint3"                           shift, and go to state 239
    "uint4"                           shift, and go to state 240
    "float"                           shift, and go to state 241
    "float2"                          shift, and go to state 242
    "float3"                          shift, and go to state 243
    "float4"                          shift, and go to state 244
    "range"                           shift, and go to state 245
    "urange"                          shift, and go to state 246
    "range64"                         shift, and go to state 247
    "urange64"                        shift, and go to state 248
    "int64"                           shift, and go to state 250
    "uint64"                          shift, and go to state 251
    "double"                          shift, and go to state 252
    "int8"                            shift, and go to state 255
    "uint8"                           shift, and go to state 256
    "int16"                           shift, and go to state 257
    "uint16"                          shift, and go to state 258
    "tuple"                           shift, and go to state 433
    "variant"                         shift, and go to state 434
    "generator"                       shift, and go to state 435
    "++"                              shift, and go to state 436
    "--"                              shift, and go to state 437
    "::"                              shift, and go to state 55
    "$$"                              shift, and go to state 438
    "$i"                              shift, and go to state 439
    "$v"                              shift, and go to state 440
    "$b"                              shift, and go to state 441
    "$a"                              shift, and go to state 442
    "$c"                              shift, and go to state 443
    "..."                             shift, and go to state 444
    "integer constant"                shift, and go to state 445
    "long integer constant"           shift, and go to state 446
    "unsigned integer constant"       shift, and go to state 447
    "unsigned long integer constant"  shift, and go to state 448
    "unsigned int8 constant"          shift, and go to state 449
    "floating point constant"         shift, and go to state 450
    "double constant"                 shift, and go to state 451
    "name"                            shift, and go to state 56
    "start of the string"             shift, and go to state 452
    '-'                               shift, and go to state 453
    '+'                               shift, and go to state 454
    '*'                               shift, and go to state 455
    '%'                               shift, and go to state 13
    '~'                               shift, and go to state 456
    '!'                               shift, and go to state 457
    '['                               shift, and go to state 458
    '('                               shift, and go to state 459
    '$'                               shift, and go to state 460
    '@'                               shift, and go to state 461
    '{'                               shift, and go to state 462

    $default  reduce using rule 250 (optional_expr_list)

    string_builder          go to state 463
    expr_reader             go to state 464
    expr_call_pipe          go to state 465
    optional_expr_list      go to state 1379
    name_in_namespace       go to state 466
    expr_new                go to state 467
    expr_cast               go to state 468
    expr_type_decl          go to state 469
    expr_type_info          go to state 470
    expr_list               go to state 661
    block_or_lambda         go to state 471
    expr_full_block         go to state 472
    expr_numeric_const      go to state 473
    expr_named_call         go to state 474
    expr_method_call        go to state 475
    func_addr_expr          go to state 476
    expr_field              go to state 477
    expr_call               go to state 478
    expr                    go to state 590
    expr_generator          go to state 480
    expr_mtag               go to state 481
    basic_type_declaration  go to state 482
    make_decl               go to state 483
    make_struct_decl        go to state 484
    make_tuple_call         go to state 485
    make_dim_decl           go to state 486
    make_table_decl         go to state 487
    array_comprehension     go to state 488


State 1320

  807 make_table_decl: "table" '<' type_declaration_no_options '>' '(' optional_expr_map_tuple_list ')' .

    $default  reduce using rule 807 (make_table_decl)


State 1321

  253 optional_expr_map_tuple_list: expr_map_tuple_list optional_comma .

    $default  reduce using rule 253 (optional_expr_map_tuple_list)


State 1322

  808 make_table_decl: "table" '<' type_declaration_no_options c_or_s type_declaration_no_options '>' '(' . optional_expr_map_tuple_list ')'

    "struct"                          shift, and go to state 414
    "class"                           shift, and go to state 415
    "true"                            shift, and go to state 416
    "false"                           shift, and go to state 417
    "new"                             shift, and go to state 418
    "typeinfo"                        shift, and go to state 419
    "type"                            shift, and go to state 420
    "array"                           shift, and go to state 421
    "null"                            shift, and go to state 422
    "table"                           shift, and go to state 423
    "deref"                           shift, and go to state 424
    "cast"                            shift, and go to state 425
    "upcast"                          shift, and go to state 426
    "addr"                            shift, and go to state 427
    "reinterpret"                     shift, and go to state 428
    "unsafe"                          shift, and go to state 429
    "fixed_array"                     shift, and go to state 430
    "default"                         shift, and go to state 431
    "bool"                            shift, and go to state 228
    "void"                            shift, and go to state 229
    "string"                          shift, and go to state 230
    "int"                             shift, and go to state 232
    "int2"                            shift, and go to state 233
    "int3"                            shift, and go to state 234
    "int4"                            shift, and go to state 235
    "uint"                            shift, and go to state 236
    "bitfield"                        shift, and go to state 432
    "uint2"                           shift, and go to state 238
    "uint3"                           shift, and go to state 239
    "uint4"                           shift, and go to state 240
    "float"                           shift, and go to state 241
    "float2"                          shift, and go to state 242
    "float3"                          shift, and go to state 243
    "float4"                          shift, and go to state 244
    "range"                           shift, and go to state 245
    "urange"                          shift, and go to state 246
    "range64"                         shift, and go to state 247
    "urange64"                        shift, and go to state 248
    "int64"                           shift, and go to state 250
    "uint64"                          shift, and go to state 251
    "double"                          shift, and go to state 252
    "int8"                            shift, and go to state 255
    "uint8"                           shift, and go to state 256
    "int16"                           shift, and go to state 257
    "uint16"                          shift, and go to state 258
    "tuple"                           shift, and go to state 433
    "variant"                         shift, and go to state 434
    "generator"                       shift, and go to state 435
    "++"                              shift, and go to state 436
    "--"                              shift, and go to state 437
    "::"                              shift, and go to state 55
    "$$"                              shift, and go to state 438
    "$i"                              shift, and go to state 439
    "$v"                              shift, and go to state 440
    "$b"                              shift, and go to state 441
    "$a"                              shift, and go to state 442
    "$c"                              shift, and go to state 443
    "..."                             shift, and go to state 444
    "integer constant"                shift, and go to state 445
    "long integer constant"           shift, and go to state 446
    "unsigned integer constant"       shift, and go to state 447
    "unsigned long integer constant"  shift, and go to state 448
    "unsigned int8 constant"          shift, and go to state 449
    "floating point constant"         shift, and go to state 450
    "double constant"                 shift, and go to state 451
    "name"                            shift, and go to state 56
    "start of the string"             shift, and go to state 452
    '-'                               shift, and go to state 453
    '+'                               shift, and go to state 454
    '*'                               shift, and go to state 455
    '%'                               shift, and go to state 13
    '~'                               shift, and go to state 456
    '!'                               shift, and go to state 457
    '['                               shift, and go to state 458
    '('                               shift, and go to state 459
    '$'                               shift, and go to state 460
    '@'                               shift, and go to state 461
    '{'                               shift, and go to state 462

    $default  reduce using rule 252 (optional_expr_map_tuple_list)

    string_builder                go to state 463
    expr_reader                   go to state 464
    expr_call_pipe                go to state 465
    optional_expr_map_tuple_list  go to state 1380
    name_in_namespace             go to state 466
    expr_new                      go to state 467
    expr_cast                     go to state 468
    expr_type_decl                go to state 469
    expr_type_info                go to state 470
    block_or_lambda               go to state 471
    expr_full_block               go to state 472
    expr_numeric_const            go to state 473
    expr_named_call               go to state 474
    expr_method_call              go to state 475
    func_addr_expr                go to state 476
    expr_field                    go to state 477
    expr_call                     go to state 478
    expr                          go to state 594
    expr_generator                go to state 480
    expr_mtag                     go to state 481
    basic_type_declaration        go to state 482
    make_decl                     go to state 483
    make_struct_decl              go to state 484
    make_map_tuple                go to state 595
    make_tuple_call               go to state 485
    make_dim_decl                 go to state 486
    expr_map_tuple_list           go to state 1244
    make_table_decl               go to state 487
    array_comprehension           go to state 488


State 1323

  295 expr_cast: "cast" '<' $@13 type_declaration_no_options '>' $@14 expr .
  356 expr_method_call: expr . "->" "name" '(' ')'
  357                 | expr . "->" "name" '(' expr_list ')'
  367 expr_field: expr . '.' "name"
  368           | expr . '.' '.' "name"
  369           | expr . '.' "name" '(' ')'
  370           | expr . '.' "name" '(' expr_list ')'
  371           | expr . '.' basic_type_declaration '(' ')'
  372           | expr . '.' basic_type_declaration '(' expr_list ')'
  375           | expr . '.' $@25 error $@26
  397 expr: expr . "<<" expr
  398     | expr . ">>" expr
  399     | expr . "<<<" expr
  400     | expr . ">>>" expr
  401     | expr . '+' expr
  402     | expr . '-' expr
  403     | expr . '*' expr
  404     | expr . '/' expr
  405     | expr . '%' expr
  406     | expr . '<' expr
  407     | expr . '>' expr
  408     | expr . "==" expr
  409     | expr . "!=" expr
  410     | expr . "<=" expr
  411     | expr . ">=" expr
  412     | expr . '&' expr
  413     | expr . '|' expr
  414     | expr . '^' expr
  415     | expr . "&&" expr
  416     | expr . "||" expr
  417     | expr . "^^" expr
  418     | expr . ".." expr
  421     | expr . "++"
  422     | expr . "--"
  424     | expr . '[' expr ']'
  425     | expr . '.' '[' expr ']'
  426     | expr . "?[" expr ']'
  427     | expr . '.' "?[" expr ']'
  428     | expr . "?." "name"
  429     | expr . '.' "?." "name"
  436     | expr . "??" expr
  437     | expr . '?' expr ':' expr
  440     | expr . "is" "type" '<' $@27 type_declaration_no_options '>' $@28
  441     | expr . "is" basic_type_declaration
  442     | expr . "is" "name"
  443     | expr . "as" "name"
  446     | expr . "as" "type" '<' $@29 type_declaration '>' $@30
  447     | expr . "as" basic_type_declaration
  448     | expr . '?' "as" "name"
  451     | expr . '?' "as" "type" '<' $@31 type_declaration '>' $@32
  452     | expr . '?' "as" basic_type_declaration
  460     | expr . "<|" expr
  461     | expr . "|>" expr
  462     | expr . "|>" basic_type_declaration
  476 expr_mtag: expr . '.' "$f" '(' expr ')'
  477          | expr . "?." "$f" '(' expr ')'
  478          | expr . '.' '.' "$f" '(' expr ')'
  479          | expr . '.' "?." "$f" '(' expr ')'
  480          | expr . "as" "$f" '(' expr ')'
  481          | expr . '?' "as" "$f" '(' expr ')'
  482          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 603
    "as"   shift, and go to state 604
    "<<"   shift, and go to state 605
    ">>"   shift, and go to state 606
    "++"   shift, and go to state 607
    "--"   shift, and go to state 608
    "->"   shift, and go to state 613
    "??"   shift, and go to state 614
    "?."   shift, and go to state 615
    "?["   shift, and go to state 616
    "<|"   shift, and go to state 617
    "|>"   shift, and go to state 618
    "<<<"  shift, and go to state 619
    ">>>"  shift, and go to state 620
    '-'    shift, and go to state 631
    '+'    shift, and go to state 632
    '*'    shift, and go to state 633
    '/'    shift, and go to state 634
    '%'    shift, and go to state 635
    '.'    shift, and go to state 636
    '['    shift, and go to state 637

    $default  reduce using rule 295 (expr_cast)


State 1324

  298 expr_cast: "upcast" '<' $@15 type_declaration_no_options '>' $@16 expr .
  356 expr_method_call: expr . "->" "name" '(' ')'
  357                 | expr . "->" "name" '(' expr_list ')'
  367 expr_field: expr . '.' "name"
  368           | expr . '.' '.' "name"
  369           | expr . '.' "name" '(' ')'
  370           | expr . '.' "name" '(' expr_list ')'
  371           | expr . '.' basic_type_declaration '(' ')'
  372           | expr . '.' basic_type_declaration '(' expr_list ')'
  375           | expr . '.' $@25 error $@26
  397 expr: expr . "<<" expr
  398     | expr . ">>" expr
  399     | expr . "<<<" expr
  400     | expr . ">>>" expr
  401     | expr . '+' expr
  402     | expr . '-' expr
  403     | expr . '*' expr
  404     | expr . '/' expr
  405     | expr . '%' expr
  406     | expr . '<' expr
  407     | expr . '>' expr
  408     | expr . "==" expr
  409     | expr . "!=" expr
  410     | expr . "<=" expr
  411     | expr . ">=" expr
  412     | expr . '&' expr
  413     | expr . '|' expr
  414     | expr . '^' expr
  415     | expr . "&&" expr
  416     | expr . "||" expr
  417     | expr . "^^" expr
  418     | expr . ".." expr
  421     | expr . "++"
  422     | expr . "--"
  424     | expr . '[' expr ']'
  425     | expr . '.' '[' expr ']'
  426     | expr . "?[" expr ']'
  427     | expr . '.' "?[" expr ']'
  428     | expr . "?." "name"
  429     | expr . '.' "?." "name"
  436     | expr . "??" expr
  437     | expr . '?' expr ':' expr
  440     | expr . "is" "type" '<' $@27 type_declaration_no_options '>' $@28
  441     | expr . "is" basic_type_declaration
  442     | expr . "is" "name"
  443     | expr . "as" "name"
  446     | expr . "as" "type" '<' $@29 type_declaration '>' $@30
  447     | expr . "as" basic_type_declaration
  448     | expr . '?' "as" "name"
  451     | expr . '?' "as" "type" '<' $@31 type_declaration '>' $@32
  452     | expr . '?' "as" basic_type_declaration
  460     | expr . "<|" expr
  461     | expr . "|>" expr
  462     | expr . "|>" basic_type_declaration
  476 expr_mtag: expr . '.' "$f" '(' expr ')'
  477          | expr . "?." "$f" '(' expr ')'
  478          | expr . '.' '.' "$f" '(' expr ')'
  479          | expr . '.' "?." "$f" '(' expr ')'
  480          | expr . "as" "$f" '(' expr ')'
  481          | expr . '?' "as" "$f" '(' expr ')'
  482          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 603
    "as"   shift, and go to state 604
    "<<"   shift, and go to state 605
    ">>"   shift, and go to state 606
    "++"   shift, and go to state 607
    "--"   shift, and go to state 608
    "->"   shift, and go to state 613
    "??"   shift, and go to state 614
    "?."   shift, and go to state 615
    "?["   shift, and go to state 616
    "<|"   shift, and go to state 617
    "|>"   shift, and go to state 618
    "<<<"  shift, and go to state 619
    ">>>"  shift, and go to state 620
    '-'    shift, and go to state 631
    '+'    shift, and go to state 632
    '*'    shift, and go to state 633
    '/'    shift, and go to state 634
    '%'    shift, and go to state 635
    '.'    shift, and go to state 636
    '['    shift, and go to state 637

    $default  reduce using rule 298 (expr_cast)


State 1325

  301 expr_cast: "reinterpret" '<' $@17 type_declaration_no_options '>' $@18 expr .
  356 expr_method_call: expr . "->" "name" '(' ')'
  357                 | expr . "->" "name" '(' expr_list ')'
  367 expr_field: expr . '.' "name"
  368           | expr . '.' '.' "name"
  369           | expr . '.' "name" '(' ')'
  370           | expr . '.' "name" '(' expr_list ')'
  371           | expr . '.' basic_type_declaration '(' ')'
  372           | expr . '.' basic_type_declaration '(' expr_list ')'
  375           | expr . '.' $@25 error $@26
  397 expr: expr . "<<" expr
  398     | expr . ">>" expr
  399     | expr . "<<<" expr
  400     | expr . ">>>" expr
  401     | expr . '+' expr
  402     | expr . '-' expr
  403     | expr . '*' expr
  404     | expr . '/' expr
  405     | expr . '%' expr
  406     | expr . '<' expr
  407     | expr . '>' expr
  408     | expr . "==" expr
  409     | expr . "!=" expr
  410     | expr . "<=" expr
  411     | expr . ">=" expr
  412     | expr . '&' expr
  413     | expr . '|' expr
  414     | expr . '^' expr
  415     | expr . "&&" expr
  416     | expr . "||" expr
  417     | expr . "^^" expr
  418     | expr . ".." expr
  421     | expr . "++"
  422     | expr . "--"
  424     | expr . '[' expr ']'
  425     | expr . '.' '[' expr ']'
  426     | expr . "?[" expr ']'
  427     | expr . '.' "?[" expr ']'
  428     | expr . "?." "name"
  429     | expr . '.' "?." "name"
  436     | expr . "??" expr
  437     | expr . '?' expr ':' expr
  440     | expr . "is" "type" '<' $@27 type_declaration_no_options '>' $@28
  441     | expr . "is" basic_type_declaration
  442     | expr . "is" "name"
  443     | expr . "as" "name"
  446     | expr . "as" "type" '<' $@29 type_declaration '>' $@30
  447     | expr . "as" basic_type_declaration
  448     | expr . '?' "as" "name"
  451     | expr . '?' "as" "type" '<' $@31 type_declaration '>' $@32
  452     | expr . '?' "as" basic_type_declaration
  460     | expr . "<|" expr
  461     | expr . "|>" expr
  462     | expr . "|>" basic_type_declaration
  476 expr_mtag: expr . '.' "$f" '(' expr ')'
  477          | expr . "?." "$f" '(' expr ')'
  478          | expr . '.' '.' "$f" '(' expr ')'
  479          | expr . '.' "?." "$f" '(' expr ')'
  480          | expr . "as" "$f" '(' expr ')'
  481          | expr . '?' "as" "$f" '(' expr ')'
  482          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 603
    "as"   shift, and go to state 604
    "<<"   shift, and go to state 605
    ">>"   shift, and go to state 606
    "++"   shift, and go to state 607
    "--"   shift, and go to state 608
    "->"   shift, and go to state 613
    "??"   shift, and go to state 614
    "?."   shift, and go to state 615
    "?["   shift, and go to state 616
    "<|"   shift, and go to state 617
    "|>"   shift, and go to state 618
    "<<<"  shift, and go to state 619
    ">>>"  shift, and go to state 620
    '-'    shift, and go to state 631
    '+'    shift, and go to state 632
    '*'    shift, and go to state 633
    '/'    shift, and go to state 634
    '%'    shift, and go to state 635
    '.'    shift, and go to state 636
    '['    shift, and go to state 637

    $default  reduce using rule 301 (expr_cast)


State 1326

  802 make_dim_decl: "fixed_array" '<' $@103 type_declaration_no_options '>' $@104 '(' . expr_list optional_comma ')'

    "struct"                          shift, and go to state 414
    "class"                           shift, and go to state 415
    "true"                            shift, and go to state 416
    "false"                           shift, and go to state 417
    "new"                             shift, and go to state 418
    "typeinfo"                        shift, and go to state 419
    "type"                            shift, and go to state 420
    "array"                           shift, and go to state 421
    "null"                            shift, and go to state 422
    "table"                           shift, and go to state 423
    "deref"                           shift, and go to state 424
    "cast"                            shift, and go to state 425
    "upcast"                          shift, and go to state 426
    "addr"                            shift, and go to state 427
    "reinterpret"                     shift, and go to state 428
    "unsafe"                          shift, and go to state 429
    "fixed_array"                     shift, and go to state 430
    "default"                         shift, and go to state 431
    "bool"                            shift, and go to state 228
    "void"                            shift, and go to state 229
    "string"                          shift, and go to state 230
    "int"                             shift, and go to state 232
    "int2"                            shift, and go to state 233
    "int3"                            shift, and go to state 234
    "int4"                            shift, and go to state 235
    "uint"                            shift, and go to state 236
    "bitfield"                        shift, and go to state 432
    "uint2"                           shift, and go to state 238
    "uint3"                           shift, and go to state 239
    "uint4"                           shift, and go to state 240
    "float"                           shift, and go to state 241
    "float2"                          shift, and go to state 242
    "float3"                          shift, and go to state 243
    "float4"                          shift, and go to state 244
    "range"                           shift, and go to state 245
    "urange"                          shift, and go to state 246
    "range64"                         shift, and go to state 247
    "urange64"                        shift, and go to state 248
    "int64"                           shift, and go to state 250
    "uint64"                          shift, and go to state 251
    "double"                          shift, and go to state 252
    "int8"                            shift, and go to state 255
    "uint8"                           shift, and go to state 256
    "int16"                           shift, and go to state 257
    "uint16"                          shift, and go to state 258
    "tuple"                           shift, and go to state 433
    "variant"                         shift, and go to state 434
    "generator"                       shift, and go to state 435
    "++"                              shift, and go to state 436
    "--"                              shift, and go to state 437
    "::"                              shift, and go to state 55
    "$$"                              shift, and go to state 438
    "$i"                              shift, and go to state 439
    "$v"                              shift, and go to state 440
    "$b"                              shift, and go to state 441
    "$a"                              shift, and go to state 442
    "$c"                              shift, and go to state 443
    "..."                             shift, and go to state 444
    "integer constant"                shift, and go to state 445
    "long integer constant"           shift, and go to state 446
    "unsigned integer constant"       shift, and go to state 447
    "unsigned long integer constant"  shift, and go to state 448
    "unsigned int8 constant"          shift, and go to state 449
    "floating point constant"         shift, and go to state 450
    "double constant"                 shift, and go to state 451
    "name"                            shift, and go to state 56
    "start of the string"             shift, and go to state 452
    '-'                               shift, and go to state 453
    '+'                               shift, and go to state 454
    '*'                               shift, and go to state 455
    '%'                               shift, and go to state 13
    '~'                               shift, and go to state 456
    '!'                               shift, and go to state 457
    '['                               shift, and go to state 458
    '('                               shift, and go to state 459
    '$'                               shift, and go to state 460
    '@'                               shift, and go to state 461
    '{'                               shift, and go to state 462

    string_builder          go to state 463
    expr_reader             go to state 464
    expr_call_pipe          go to state 465
    name_in_namespace       go to state 466
    expr_new                go to state 467
    expr_cast               go to state 468
    expr_type_decl          go to state 469
    expr_type_info          go to state 470
    expr_list               go to state 1381
    block_or_lambda         go to state 471
    expr_full_block         go to state 472
    expr_numeric_const      go to state 473
    expr_named_call         go to state 474
    expr_method_call        go to state 475
    func_addr_expr          go to state 476
    expr_field              go to state 477
    expr_call               go to state 478
    expr                    go to state 590
    expr_generator          go to state 480
    expr_mtag               go to state 481
    basic_type_declaration  go to state 482
    make_decl               go to state 483
    make_struct_decl        go to state 484
    make_tuple_call         go to state 485
    make_dim_decl           go to state 486
    make_table_decl         go to state 487
    array_comprehension     go to state 488


State 1327

  766 use_initializer: "uninitialized" .

    $default  reduce using rule 766 (use_initializer)


State 1328

  778 make_struct_decl: "default" '<' $@91 type_declaration_no_options '>' $@92 use_initializer .

    $default  reduce using rule 778 (make_struct_decl)


State 1329

  784 make_tuple_call: "tuple" '<' $@93 type_declaration_no_options '>' $@94 '(' . use_initializer optional_make_struct_dim_decl ')'

    "uninitialized"  shift, and go to state 1327

    $default  reduce using rule 765 (use_initializer)

    use_initializer  go to state 1382


State 1330

  775 make_struct_decl: "variant" '<' $@89 type_declaration_no_options '>' $@90 '(' . make_variant_dim ')'

    "$f"    shift, and go to state 786
    "name"  shift, and go to state 1003

    make_struct_fields  go to state 1383
    make_variant_dim    go to state 1384


State 1331

  465 expr_generator: "generator" '<' type_declaration_no_options '>' optional_capture_list '(' ')' .

    $default  reduce using rule 465 (expr_generator)


State 1332

  356 expr_method_call: expr . "->" "name" '(' ')'
  357                 | expr . "->" "name" '(' expr_list ')'
  367 expr_field: expr . '.' "name"
  368           | expr . '.' '.' "name"
  369           | expr . '.' "name" '(' ')'
  370           | expr . '.' "name" '(' expr_list ')'
  371           | expr . '.' basic_type_declaration '(' ')'
  372           | expr . '.' basic_type_declaration '(' expr_list ')'
  375           | expr . '.' $@25 error $@26
  397 expr: expr . "<<" expr
  398     | expr . ">>" expr
  399     | expr . "<<<" expr
  400     | expr . ">>>" expr
  401     | expr . '+' expr
  402     | expr . '-' expr
  403     | expr . '*' expr
  404     | expr . '/' expr
  405     | expr . '%' expr
  406     | expr . '<' expr
  407     | expr . '>' expr
  408     | expr . "==" expr
  409     | expr . "!=" expr
  410     | expr . "<=" expr
  411     | expr . ">=" expr
  412     | expr . '&' expr
  413     | expr . '|' expr
  414     | expr . '^' expr
  415     | expr . "&&" expr
  416     | expr . "||" expr
  417     | expr . "^^" expr
  418     | expr . ".." expr
  421     | expr . "++"
  422     | expr . "--"
  424     | expr . '[' expr ']'
  425     | expr . '.' '[' expr ']'
  426     | expr . "?[" expr ']'
  427     | expr . '.' "?[" expr ']'
  428     | expr . "?." "name"
  429     | expr . '.' "?." "name"
  436     | expr . "??" expr
  437     | expr . '?' expr ':' expr
  440     | expr . "is" "type" '<' $@27 type_declaration_no_options '>' $@28
  441     | expr . "is" basic_type_declaration
  442     | expr . "is" "name"
  443     | expr . "as" "name"
  446     | expr . "as" "type" '<' $@29 type_declaration '>' $@30
  447     | expr . "as" basic_type_declaration
  448     | expr . '?' "as" "name"
  451     | expr . '?' "as" "type" '<' $@31 type_declaration '>' $@32
  452     | expr . '?' "as" basic_type_declaration
  460     | expr . "<|" expr
  461     | expr . "|>" expr
  462     | expr . "|>" basic_type_declaration
  466 expr_generator: "generator" '<' type_declaration_no_options '>' optional_capture_list '(' expr . ')'
  476 expr_mtag: expr . '.' "$f" '(' expr ')'
  477          | expr . "?." "$f" '(' expr ')'
  478          | expr . '.' '.' "$f" '(' expr ')'
  479          | expr . '.' "?." "$f" '(' expr ')'
  480          | expr . "as" "$f" '(' expr ')'
  481          | expr . '?' "as" "$f" '(' expr ')'
  482          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 603
    "as"   shift, and go to state 604
    "<<"   shift, and go to state 605
    ">>"   shift, and go to state 606
    "++"   shift, and go to state 607
    "--"   shift, and go to state 608
    "<="   shift, and go to state 609
    ">="   shift, and go to state 610
    "=="   shift, and go to state 611
    "!="   shift, and go to state 612
    "->"   shift, and go to state 613
    "??"   shift, and go to state 614
    "?."   shift, and go to state 615
    "?["   shift, and go to state 616
    "<|"   shift, and go to state 617
    "|>"   shift, and go to state 618
    "<<<"  shift, and go to state 619
    ">>>"  shift, and go to state 620
    "&&"   shift, and go to state 621
    "||"   shift, and go to state 622
    "^^"   shift, and go to state 623
    ".."   shift, and go to state 624
    '?'    shift, and go to state 625
    '|'    shift, and go to state 626
    '^'    shift, and go to state 627
    '&'    shift, and go to state 628
    '<'    shift, and go to state 629
    '>'    shift, and go to state 630
    '-'    shift, and go to state 631
    '+'    shift, and go to state 632
    '*'    shift, and go to state 633
    '/'    shift, and go to state 634
    '%'    shift, and go to state 635
    '.'    shift, and go to state 636
    '['    shift, and go to state 637
    ')'    shift, and go to state 1385


State 1333

  467 expr_generator: "generator" '<' type_declaration_no_options '>' optional_capture_list optional_semis expression_block .

    $default  reduce using rule 467 (expr_generator)


State 1334

  475 expr_mtag: "$c" '(' expr ')' '(' expr_list ')' .

    $default  reduce using rule 475 (expr_mtag)


State 1335

  813 array_comprehension: '[' "for" '(' variable_name_with_pos_list "in" expr_list ')' . ';' expr array_comprehension_where ']'

    ';'  shift, and go to state 1386


State 1336

  309 expr_list: expr_list . ',' expr
  814 array_comprehension: '[' "iterator" "for" '(' variable_name_with_pos_list "in" expr_list . ')' ';' expr array_comprehension_where ']'

    ','  shift, and go to state 1041
    ')'  shift, and go to state 1387


State 1337

  363 func_addr_expr: '@' '@' '<' $@21 type_declaration_no_options '>' $@22 . func_addr_name

    "::"    shift, and go to state 55
    "$i"    shift, and go to state 776
    "name"  shift, and go to state 56

    name_in_namespace  go to state 779
    func_addr_name     go to state 1388


State 1338

  366 func_addr_expr: '@' '@' '<' $@23 optional_function_argument_list optional_function_type '>' . $@24 func_addr_name

    $default  reduce using rule 365 ($@24)

    $@24  go to state 1389


State 1339

  815 array_comprehension: '{' "for" '(' variable_name_with_pos_list "in" expr_list ')' . ';' make_map_tuple array_comprehension_where '}'

    ';'  shift, and go to state 1390


State 1340

  754 make_struct_fields: "$f" '(' expr ')' ":=" . expr

    "struct"                          shift, and go to state 414
    "class"                           shift, and go to state 415
    "true"                            shift, and go to state 416
    "false"                           shift, and go to state 417
    "new"                             shift, and go to state 418
    "typeinfo"                        shift, and go to state 419
    "type"                            shift, and go to state 420
    "array"                           shift, and go to state 421
    "null"                            shift, and go to state 422
    "table"                           shift, and go to state 423
    "deref"                           shift, and go to state 424
    "cast"                            shift, and go to state 425
    "upcast"                          shift, and go to state 426
    "addr"                            shift, and go to state 427
    "reinterpret"                     shift, and go to state 428
    "unsafe"                          shift, and go to state 429
    "fixed_array"                     shift, and go to state 430
    "default"                         shift, and go to state 431
    "bool"                            shift, and go to state 228
    "void"                            shift, and go to state 229
    "string"                          shift, and go to state 230
    "int"                             shift, and go to state 232
    "int2"                            shift, and go to state 233
    "int3"                            shift, and go to state 234
    "int4"                            shift, and go to state 235
    "uint"                            shift, and go to state 236
    "bitfield"                        shift, and go to state 432
    "uint2"                           shift, and go to state 238
    "uint3"                           shift, and go to state 239
    "uint4"                           shift, and go to state 240
    "float"                           shift, and go to state 241
    "float2"                          shift, and go to state 242
    "float3"                          shift, and go to state 243
    "float4"                          shift, and go to state 244
    "range"                           shift, and go to state 245
    "urange"                          shift, and go to state 246
    "range64"                         shift, and go to state 247
    "urange64"                        shift, and go to state 248
    "int64"                           shift, and go to state 250
    "uint64"                          shift, and go to state 251
    "double"                          shift, and go to state 252
    "int8"                            shift, and go to state 255
    "uint8"                           shift, and go to state 256
    "int16"                           shift, and go to state 257
    "uint16"                          shift, and go to state 258
    "tuple"                           shift, and go to state 433
    "variant"                         shift, and go to state 434
    "generator"                       shift, and go to state 435
    "++"                              shift, and go to state 436
    "--"                              shift, and go to state 437
    "::"                              shift, and go to state 55
    "$$"                              shift, and go to state 438
    "$i"                              shift, and go to state 439
    "$v"                              shift, and go to state 440
    "$b"                              shift, and go to state 441
    "$a"                              shift, and go to state 442
    "$c"                              shift, and go to state 443
    "..."                             shift, and go to state 444
    "integer constant"                shift, and go to state 445
    "long integer constant"           shift, and go to state 446
    "unsigned integer constant"       shift, and go to state 447
    "unsigned long integer constant"  shift, and go to state 448
    "unsigned int8 constant"          shift, and go to state 449
    "floating point constant"         shift, and go to state 450
    "double constant"                 shift, and go to state 451
    "name"                            shift, and go to state 56
    "start of the string"             shift, and go to state 452
    '-'                               shift, and go to state 453
    '+'                               shift, and go to state 454
    '*'                               shift, and go to state 455
    '%'                               shift, and go to state 13
    '~'                               shift, and go to state 456
    '!'                               shift, and go to state 457
    '['                               shift, and go to state 458
    '('                               shift, and go to state 459
    '$'                               shift, and go to state 460
    '@'                               shift, and go to state 461
    '{'                               shift, and go to state 462

    string_builder          go to state 463
    expr_reader             go to state 464
    expr_call_pipe          go to state 465
    name_in_namespace       go to state 466
    expr_new                go to state 467
    expr_cast               go to state 468
    expr_type_decl          go to state 469
    expr_type_info          go to state 470
    block_or_lambda         go to state 471
    expr_full_block         go to state 472
    expr_numeric_const      go to state 473
    expr_named_call         go to state 474
    expr_method_call        go to state 475
    func_addr_expr          go to state 476
    expr_field              go to state 477
    expr_call               go to state 478
    expr                    go to state 1391
    expr_generator          go to state 480
    expr_mtag               go to state 481
    basic_type_declaration  go to state 482
    make_decl               go to state 483
    make_struct_decl        go to state 484
    make_tuple_call         go to state 485
    make_dim_decl           go to state 486
    make_table_decl         go to state 487
    array_comprehension     go to state 488


State 1341

  753 make_struct_fields: "$f" '(' expr ')' copy_or_move . expr

    "struct"                          shift, and go to state 414
    "class"                           shift, and go to state 415
    "true"                            shift, and go to state 416
    "false"                           shift, and go to state 417
    "new"                             shift, and go to state 418
    "typeinfo"                        shift, and go to state 419
    "type"                            shift, and go to state 420
    "array"                           shift, and go to state 421
    "null"                            shift, and go to state 422
    "table"                           shift, and go to state 423
    "deref"                           shift, and go to state 424
    "cast"                            shift, and go to state 425
    "upcast"                          shift, and go to state 426
    "addr"                            shift, and go to state 427
    "reinterpret"                     shift, and go to state 428
    "unsafe"                          shift, and go to state 429
    "fixed_array"                     shift, and go to state 430
    "default"                         shift, and go to state 431
    "bool"                            shift, and go to state 228
    "void"                            shift, and go to state 229
    "string"                          shift, and go to state 230
    "int"                             shift, and go to state 232
    "int2"                            shift, and go to state 233
    "int3"                            shift, and go to state 234
    "int4"                            shift, and go to state 235
    "uint"                            shift, and go to state 236
    "bitfield"                        shift, and go to state 432
    "uint2"                           shift, and go to state 238
    "uint3"                           shift, and go to state 239
    "uint4"                           shift, and go to state 240
    "float"                           shift, and go to state 241
    "float2"                          shift, and go to state 242
    "float3"                          shift, and go to state 243
    "float4"                          shift, and go to state 244
    "range"                           shift, and go to state 245
    "urange"                          shift, and go to state 246
    "range64"                         shift, and go to state 247
    "urange64"                        shift, and go to state 248
    "int64"                           shift, and go to state 250
    "uint64"                          shift, and go to state 251
    "double"                          shift, and go to state 252
    "int8"                            shift, and go to state 255
    "uint8"                           shift, and go to state 256
    "int16"                           shift, and go to state 257
    "uint16"                          shift, and go to state 258
    "tuple"                           shift, and go to state 433
    "variant"                         shift, and go to state 434
    "generator"                       shift, and go to state 435
    "++"                              shift, and go to state 436
    "--"                              shift, and go to state 437
    "::"                              shift, and go to state 55
    "$$"                              shift, and go to state 438
    "$i"                              shift, and go to state 439
    "$v"                              shift, and go to state 440
    "$b"                              shift, and go to state 441
    "$a"                              shift, and go to state 442
    "$c"                              shift, and go to state 443
    "..."                             shift, and go to state 444
    "integer constant"                shift, and go to state 445
    "long integer constant"           shift, and go to state 446
    "unsigned integer constant"       shift, and go to state 447
    "unsigned long integer constant"  shift, and go to state 448
    "unsigned int8 constant"          shift, and go to state 449
    "floating point constant"         shift, and go to state 450
    "double constant"                 shift, and go to state 451
    "name"                            shift, and go to state 56
    "start of the string"             shift, and go to state 452
    '-'                               shift, and go to state 453
    '+'                               shift, and go to state 454
    '*'                               shift, and go to state 455
    '%'                               shift, and go to state 13
    '~'                               shift, and go to state 456
    '!'                               shift, and go to state 457
    '['                               shift, and go to state 458
    '('                               shift, and go to state 459
    '$'                               shift, and go to state 460
    '@'                               shift, and go to state 461
    '{'                               shift, and go to state 462

    string_builder          go to state 463
    expr_reader             go to state 464
    expr_call_pipe          go to state 465
    name_in_namespace       go to state 466
    expr_new                go to state 467
    expr_cast               go to state 468
    expr_type_decl          go to state 469
    expr_type_info          go to state 470
    block_or_lambda         go to state 471
    expr_full_block         go to state 472
    expr_numeric_const      go to state 473
    expr_named_call         go to state 474
    expr_method_call        go to state 475
    func_addr_expr          go to state 476
    expr_field              go to state 477
    expr_call               go to state 478
    expr                    go to state 1392
    expr_generator          go to state 480
    expr_mtag               go to state 481
    basic_type_declaration  go to state 482
    make_decl               go to state 483
    make_struct_decl        go to state 484
    make_tuple_call         go to state 485
    make_dim_decl           go to state 486
    make_table_decl         go to state 487
    array_comprehension     go to state 488


State 1342

  355 expr_named_call: name_in_namespace '(' expr_list ',' '[' make_struct_fields ']' . ')'

    ')'  shift, and go to state 1393


State 1343

  356 expr_method_call: expr . "->" "name" '(' ')'
  357                 | expr . "->" "name" '(' expr_list ')'
  367 expr_field: expr . '.' "name"
  368           | expr . '.' '.' "name"
  369           | expr . '.' "name" '(' ')'
  370           | expr . '.' "name" '(' expr_list ')'
  371           | expr . '.' basic_type_declaration '(' ')'
  372           | expr . '.' basic_type_declaration '(' expr_list ')'
  375           | expr . '.' $@25 error $@26
  397 expr: expr . "<<" expr
  398     | expr . ">>" expr
  399     | expr . "<<<" expr
  400     | expr . ">>>" expr
  401     | expr . '+' expr
  402     | expr . '-' expr
  403     | expr . '*' expr
  404     | expr . '/' expr
  405     | expr . '%' expr
  406     | expr . '<' expr
  407     | expr . '>' expr
  408     | expr . "==" expr
  409     | expr . "!=" expr
  410     | expr . "<=" expr
  411     | expr . ">=" expr
  412     | expr . '&' expr
  413     | expr . '|' expr
  414     | expr . '^' expr
  415     | expr . "&&" expr
  416     | expr . "||" expr
  417     | expr . "^^" expr
  418     | expr . ".." expr
  421     | expr . "++"
  422     | expr . "--"
  424     | expr . '[' expr ']'
  425     | expr . '.' '[' expr ']'
  426     | expr . "?[" expr ']'
  427     | expr . '.' "?[" expr ']'
  428     | expr . "?." "name"
  429     | expr . '.' "?." "name"
  436     | expr . "??" expr
  437     | expr . '?' expr ':' expr
  440     | expr . "is" "type" '<' $@27 type_declaration_no_options '>' $@28
  441     | expr . "is" basic_type_declaration
  442     | expr . "is" "name"
  443     | expr . "as" "name"
  446     | expr . "as" "type" '<' $@29 type_declaration '>' $@30
  447     | expr . "as" basic_type_declaration
  448     | expr . '?' "as" "name"
  451     | expr . '?' "as" "type" '<' $@31 type_declaration '>' $@32
  452     | expr . '?' "as" basic_type_declaration
  460     | expr . "<|" expr
  461     | expr . "|>" expr
  462     | expr . "|>" basic_type_declaration
  476 expr_mtag: expr . '.' "$f" '(' expr ')'
  477          | expr . "?." "$f" '(' expr ')'
  478          | expr . '.' '.' "$f" '(' expr ')'
  479          | expr . '.' "?." "$f" '(' expr ')'
  480          | expr . "as" "$f" '(' expr ')'
  481          | expr . '?' "as" "$f" '(' expr ')'
  482          | expr . "is" "$f" '(' expr ')'
  755 make_struct_fields: make_struct_fields ',' "$f" '(' expr . ')' copy_or_move expr
  756                   | make_struct_fields ',' "$f" '(' expr . ')' ":=" expr

    "is"   shift, and go to state 603
    "as"   shift, and go to state 604
    "<<"   shift, and go to state 605
    ">>"   shift, and go to state 606
    "++"   shift, and go to state 607
    "--"   shift, and go to state 608
    "<="   shift, and go to state 609
    ">="   shift, and go to state 610
    "=="   shift, and go to state 611
    "!="   shift, and go to state 612
    "->"   shift, and go to state 613
    "??"   shift, and go to state 614
    "?."   shift, and go to state 615
    "?["   shift, and go to state 616
    "<|"   shift, and go to state 617
    "|>"   shift, and go to state 618
    "<<<"  shift, and go to state 619
    ">>>"  shift, and go to state 620
    "&&"   shift, and go to state 621
    "||"   shift, and go to state 622
    "^^"   shift, and go to state 623
    ".."   shift, and go to state 624
    '?'    shift, and go to state 625
    '|'    shift, and go to state 626
    '^'    shift, and go to state 627
    '&'    shift, and go to state 628
    '<'    shift, and go to state 629
    '>'    shift, and go to state 630
    '-'    shift, and go to state 631
    '+'    shift, and go to state 632
    '*'    shift, and go to state 633
    '/'    shift, and go to state 634
    '%'    shift, and go to state 635
    '.'    shift, and go to state 636
    '['    shift, and go to state 637
    ')'    shift, and go to state 1394


State 1344

  356 expr_method_call: expr . "->" "name" '(' ')'
  357                 | expr . "->" "name" '(' expr_list ')'
  367 expr_field: expr . '.' "name"
  368           | expr . '.' '.' "name"
  369           | expr . '.' "name" '(' ')'
  370           | expr . '.' "name" '(' expr_list ')'
  371           | expr . '.' basic_type_declaration '(' ')'
  372           | expr . '.' basic_type_declaration '(' expr_list ')'
  375           | expr . '.' $@25 error $@26
  397 expr: expr . "<<" expr
  398     | expr . ">>" expr
  399     | expr . "<<<" expr
  400     | expr . ">>>" expr
  401     | expr . '+' expr
  402     | expr . '-' expr
  403     | expr . '*' expr
  404     | expr . '/' expr
  405     | expr . '%' expr
  406     | expr . '<' expr
  407     | expr . '>' expr
  408     | expr . "==" expr
  409     | expr . "!=" expr
  410     | expr . "<=" expr
  411     | expr . ">=" expr
  412     | expr . '&' expr
  413     | expr . '|' expr
  414     | expr . '^' expr
  415     | expr . "&&" expr
  416     | expr . "||" expr
  417     | expr . "^^" expr
  418     | expr . ".." expr
  421     | expr . "++"
  422     | expr . "--"
  424     | expr . '[' expr ']'
  425     | expr . '.' '[' expr ']'
  426     | expr . "?[" expr ']'
  427     | expr . '.' "?[" expr ']'
  428     | expr . "?." "name"
  429     | expr . '.' "?." "name"
  436     | expr . "??" expr
  437     | expr . '?' expr ':' expr
  440     | expr . "is" "type" '<' $@27 type_declaration_no_options '>' $@28
  441     | expr . "is" basic_type_declaration
  442     | expr . "is" "name"
  443     | expr . "as" "name"
  446     | expr . "as" "type" '<' $@29 type_declaration '>' $@30
  447     | expr . "as" basic_type_declaration
  448     | expr . '?' "as" "name"
  451     | expr . '?' "as" "type" '<' $@31 type_declaration '>' $@32
  452     | expr . '?' "as" basic_type_declaration
  460     | expr . "<|" expr
  461     | expr . "|>" expr
  462     | expr . "|>" basic_type_declaration
  476 expr_mtag: expr . '.' "$f" '(' expr ')'
  477          | expr . "?." "$f" '(' expr ')'
  478          | expr . '.' '.' "$f" '(' expr ')'
  479          | expr . '.' "?." "$f" '(' expr ')'
  480          | expr . "as" "$f" '(' expr ')'
  481          | expr . '?' "as" "$f" '(' expr ')'
  482          | expr . "is" "$f" '(' expr ')'
  752 make_struct_fields: make_struct_fields ',' "name" ":=" expr .

    "is"   shift, and go to state 603
    "as"   shift, and go to state 604
    "<<"   shift, and go to state 605
    ">>"   shift, and go to state 606
    "++"   shift, and go to state 607
    "--"   shift, and go to state 608
    "<="   shift, and go to state 609
    ">="   shift, and go to state 610
    "=="   shift, and go to state 611
    "!="   shift, and go to state 612
    "->"   shift, and go to state 613
    "??"   shift, and go to state 614
    "?."   shift, and go to state 615
    "?["   shift, and go to state 616
    "<|"   shift, and go to state 617
    "|>"   shift, and go to state 618
    "<<<"  shift, and go to state 619
    ">>>"  shift, and go to state 620
    "&&"   shift, and go to state 621
    "||"   shift, and go to state 622
    "^^"   shift, and go to state 623
    ".."   shift, and go to state 624
    '?'    shift, and go to state 625
    '|'    shift, and go to state 626
    '^'    shift, and go to state 627
    '&'    shift, and go to state 628
    '<'    shift, and go to state 629
    '>'    shift, and go to state 630
    '-'    shift, and go to state 631
    '+'    shift, and go to state 632
    '*'    shift, and go to state 633
    '/'    shift, and go to state 634
    '%'    shift, and go to state 635
    '.'    shift, and go to state 636
    '['    shift, and go to state 637

    $default  reduce using rule 752 (make_struct_fields)


State 1345

  356 expr_method_call: expr . "->" "name" '(' ')'
  357                 | expr . "->" "name" '(' expr_list ')'
  367 expr_field: expr . '.' "name"
  368           | expr . '.' '.' "name"
  369           | expr . '.' "name" '(' ')'
  370           | expr . '.' "name" '(' expr_list ')'
  371           | expr . '.' basic_type_declaration '(' ')'
  372           | expr . '.' basic_type_declaration '(' expr_list ')'
  375           | expr . '.' $@25 error $@26
  397 expr: expr . "<<" expr
  398     | expr . ">>" expr
  399     | expr . "<<<" expr
  400     | expr . ">>>" expr
  401     | expr . '+' expr
  402     | expr . '-' expr
  403     | expr . '*' expr
  404     | expr . '/' expr
  405     | expr . '%' expr
  406     | expr . '<' expr
  407     | expr . '>' expr
  408     | expr . "==" expr
  409     | expr . "!=" expr
  410     | expr . "<=" expr
  411     | expr . ">=" expr
  412     | expr . '&' expr
  413     | expr . '|' expr
  414     | expr . '^' expr
  415     | expr . "&&" expr
  416     | expr . "||" expr
  417     | expr . "^^" expr
  418     | expr . ".." expr
  421     | expr . "++"
  422     | expr . "--"
  424     | expr . '[' expr ']'
  425     | expr . '.' '[' expr ']'
  426     | expr . "?[" expr ']'
  427     | expr . '.' "?[" expr ']'
  428     | expr . "?." "name"
  429     | expr . '.' "?." "name"
  436     | expr . "??" expr
  437     | expr . '?' expr ':' expr
  440     | expr . "is" "type" '<' $@27 type_declaration_no_options '>' $@28
  441     | expr . "is" basic_type_declaration
  442     | expr . "is" "name"
  443     | expr . "as" "name"
  446     | expr . "as" "type" '<' $@29 type_declaration '>' $@30
  447     | expr . "as" basic_type_declaration
  448     | expr . '?' "as" "name"
  451     | expr . '?' "as" "type" '<' $@31 type_declaration '>' $@32
  452     | expr . '?' "as" basic_type_declaration
  460     | expr . "<|" expr
  461     | expr . "|>" expr
  462     | expr . "|>" basic_type_declaration
  476 expr_mtag: expr . '.' "$f" '(' expr ')'
  477          | expr . "?." "$f" '(' expr ')'
  478          | expr . '.' '.' "$f" '(' expr ')'
  479          | expr . '.' "?." "$f" '(' expr ')'
  480          | expr . "as" "$f" '(' expr ')'
  481          | expr . '?' "as" "$f" '(' expr ')'
  482          | expr . "is" "$f" '(' expr ')'
  751 make_struct_fields: make_struct_fields ',' "name" copy_or_move expr .

    "is"   shift, and go to state 603
    "as"   shift, and go to state 604
    "<<"   shift, and go to state 605
    ">>"   shift, and go to state 606
    "++"   shift, and go to state 607
    "--"   shift, and go to state 608
    "<="   shift, and go to state 609
    ">="   shift, and go to state 610
    "=="   shift, and go to state 611
    "!="   shift, and go to state 612
    "->"   shift, and go to state 613
    "??"   shift, and go to state 614
    "?."   shift, and go to state 615
    "?["   shift, and go to state 616
    "<|"   shift, and go to state 617
    "|>"   shift, and go to state 618
    "<<<"  shift, and go to state 619
    ">>>"  shift, and go to state 620
    "&&"   shift, and go to state 621
    "||"   shift, and go to state 622
    "^^"   shift, and go to state 623
    ".."   shift, and go to state 624
    '?'    shift, and go to state 625
    '|'    shift, and go to state 626
    '^'    shift, and go to state 627
    '&'    shift, and go to state 628
    '<'    shift, and go to state 629
    '>'    shift, and go to state 630
    '-'    shift, and go to state 631
    '+'    shift, and go to state 632
    '*'    shift, and go to state 633
    '/'    shift, and go to state 634
    '%'    shift, and go to state 635
    '.'    shift, and go to state 636
    '['    shift, and go to state 637

    $default  reduce using rule 751 (make_struct_fields)


State 1346

  320 capture_entry: "name" '(' "name" . ')'

    ')'  shift, and go to state 1395


State 1347

  322 capture_list: capture_list ',' capture_entry .

    $default  reduce using rule 322 (capture_list)


State 1348

  311 block_or_simple_block: "=>" . expr
  312                      | "=>" . "<-" expr

    "struct"                          shift, and go to state 414
    "class"                           shift, and go to state 415
    "true"                            shift, and go to state 416
    "false"                           shift, and go to state 417
    "new"                             shift, and go to state 418
    "typeinfo"                        shift, and go to state 419
    "type"                            shift, and go to state 420
    "array"                           shift, and go to state 421
    "null"                            shift, and go to state 422
    "table"                           shift, and go to state 423
    "deref"                           shift, and go to state 424
    "cast"                            shift, and go to state 425
    "upcast"                          shift, and go to state 426
    "addr"                            shift, and go to state 427
    "reinterpret"                     shift, and go to state 428
    "unsafe"                          shift, and go to state 429
    "fixed_array"                     shift, and go to state 430
    "default"                         shift, and go to state 431
    "bool"                            shift, and go to state 228
    "void"                            shift, and go to state 229
    "string"                          shift, and go to state 230
    "int"                             shift, and go to state 232
    "int2"                            shift, and go to state 233
    "int3"                            shift, and go to state 234
    "int4"                            shift, and go to state 235
    "uint"                            shift, and go to state 236
    "bitfield"                        shift, and go to state 432
    "uint2"                           shift, and go to state 238
    "uint3"                           shift, and go to state 239
    "uint4"                           shift, and go to state 240
    "float"                           shift, and go to state 241
    "float2"                          shift, and go to state 242
    "float3"                          shift, and go to state 243
    "float4"                          shift, and go to state 244
    "range"                           shift, and go to state 245
    "urange"                          shift, and go to state 246
    "range64"                         shift, and go to state 247
    "urange64"                        shift, and go to state 248
    "int64"                           shift, and go to state 250
    "uint64"                          shift, and go to state 251
    "double"                          shift, and go to state 252
    "int8"                            shift, and go to state 255
    "uint8"                           shift, and go to state 256
    "int16"                           shift, and go to state 257
    "uint16"                          shift, and go to state 258
    "tuple"                           shift, and go to state 433
    "variant"                         shift, and go to state 434
    "generator"                       shift, and go to state 435
    "++"                              shift, and go to state 436
    "--"                              shift, and go to state 437
    "<-"                              shift, and go to state 1396
    "::"                              shift, and go to state 55
    "$$"                              shift, and go to state 438
    "$i"                              shift, and go to state 439
    "$v"                              shift, and go to state 440
    "$b"                              shift, and go to state 441
    "$a"                              shift, and go to state 442
    "$c"                              shift, and go to state 443
    "..."                             shift, and go to state 444
    "integer constant"                shift, and go to state 445
    "long integer constant"           shift, and go to state 446
    "unsigned integer constant"       shift, and go to state 447
    "unsigned long integer constant"  shift, and go to state 448
    "unsigned int8 constant"          shift, and go to state 449
    "floating point constant"         shift, and go to state 450
    "double constant"                 shift, and go to state 451
    "name"                            shift, and go to state 56
    "start of the string"             shift, and go to state 452
    '-'                               shift, and go to state 453
    '+'                               shift, and go to state 454
    '*'                               shift, and go to state 455
    '%'                               shift, and go to state 13
    '~'                               shift, and go to state 456
    '!'                               shift, and go to state 457
    '['                               shift, and go to state 458
    '('                               shift, and go to state 459
    '$'                               shift, and go to state 460
    '@'                               shift, and go to state 461
    '{'                               shift, and go to state 462

    string_builder          go to state 463
    expr_reader             go to state 464
    expr_call_pipe          go to state 465
    name_in_namespace       go to state 466
    expr_new                go to state 467
    expr_cast               go to state 468
    expr_type_decl          go to state 469
    expr_type_info          go to state 470
    block_or_lambda         go to state 471
    expr_full_block         go to state 472
    expr_numeric_const      go to state 473
    expr_named_call         go to state 474
    expr_method_call        go to state 475
    func_addr_expr          go to state 476
    expr_field              go to state 477
    expr_call               go to state 478
    expr                    go to state 1397
    expr_generator          go to state 480
    expr_mtag               go to state 481
    basic_type_declaration  go to state 482
    make_decl               go to state 483
    make_struct_decl        go to state 484
    make_tuple_call         go to state 485
    make_dim_decl           go to state 486
    make_table_decl         go to state 487
    array_comprehension     go to state 488


State 1349

  310 block_or_simple_block: expression_block .

    $default  reduce using rule 310 (block_or_simple_block)


State 1350

  325 expr_full_block: block_or_lambda optional_annotation_list optional_capture_list optional_function_argument_list optional_function_type optional_semis block_or_simple_block .

    $default  reduce using rule 325 (expr_full_block)


State 1351

  326 expr_full_block_assumed_piped: block_or_lambda optional_annotation_list optional_capture_list optional_function_argument_list optional_function_type optional_semis . expression_block

    $default  reduce using rule 224 ($@9)

    expression_block  go to state 1398
    $@9               go to state 332


State 1352

  440 expr: expr "is" "type" '<' $@27 type_declaration_no_options '>' . $@28

    $default  reduce using rule 439 ($@28)

    $@28  go to state 1399


State 1353

  446 expr: expr "as" "type" '<' $@29 type_declaration '>' . $@30

    $default  reduce using rule 445 ($@30)

    $@30  go to state 1400


State 1354

  451 expr: expr '?' "as" "type" '<' $@31 type_declaration . '>' $@32
  727 type_declaration: type_declaration . '|' type_declaration_no_options
  728                 | type_declaration . '|' '#'

    '|'  shift, and go to state 372
    '>'  shift, and go to state 1401


State 1355

  481 expr_mtag: expr '?' "as" "$f" '(' expr ')' .

    $default  reduce using rule 481 (expr_mtag)


State 1356

  479 expr_mtag: expr '.' "?." "$f" '(' expr ')' .

    $default  reduce using rule 479 (expr_mtag)


State 1357

  478 expr_mtag: expr '.' '.' "$f" '(' expr ')' .

    $default  reduce using rule 478 (expr_mtag)


State 1358

  673 type_declaration_no_options_no_dim: '$' name_in_namespace '<' $@48 type_declaration_no_options_list '>' '(' optional_expr_list ')' .

    $default  reduce using rule 673 (type_declaration_no_options_no_dim)


State 1359

   63 expression_else_one_liner: "else" . expression_if_one_liner

    "struct"                          shift, and go to state 414
    "class"                           shift, and go to state 415
    "true"                            shift, and go to state 416
    "false"                           shift, and go to state 417
    "new"                             shift, and go to state 418
    "typeinfo"                        shift, and go to state 419
    "type"                            shift, and go to state 420
    "array"                           shift, and go to state 421
    "return"                          shift, and go to state 679
    "null"                            shift, and go to state 422
    "break"                           shift, and go to state 680
    "table"                           shift, and go to state 423
    "deref"                           shift, and go to state 424
    "cast"                            shift, and go to state 425
    "upcast"                          shift, and go to state 426
    "addr"                            shift, and go to state 427
    "continue"                        shift, and go to state 684
    "reinterpret"                     shift, and go to state 428
    "unsafe"                          shift, and go to state 429
    "fixed_array"                     shift, and go to state 430
    "default"                         shift, and go to state 431
    "bool"                            shift, and go to state 228
    "void"                            shift, and go to state 229
    "string"                          shift, and go to state 230
    "int"                             shift, and go to state 232
    "int2"                            shift, and go to state 233
    "int3"                            shift, and go to state 234
    "int4"                            shift, and go to state 235
    "uint"                            shift, and go to state 236
    "bitfield"                        shift, and go to state 432
    "uint2"                           shift, and go to state 238
    "uint3"                           shift, and go to state 239
    "uint4"                           shift, and go to state 240
    "float"                           shift, and go to state 241
    "float2"                          shift, and go to state 242
    "float3"                          shift, and go to state 243
    "float4"                          shift, and go to state 244
    "range"                           shift, and go to state 245
    "urange"                          shift, and go to state 246
    "range64"                         shift, and go to state 247
    "urange64"                        shift, and go to state 248
    "int64"                           shift, and go to state 250
    "uint64"                          shift, and go to state 251
    "double"                          shift, and go to state 252
    "int8"                            shift, and go to state 255
    "uint8"                           shift, and go to state 256
    "int16"                           shift, and go to state 257
    "uint16"                          shift, and go to state 258
    "tuple"                           shift, and go to state 433
    "variant"                         shift, and go to state 434
    "generator"                       shift, and go to state 435
    "yield"                           shift, and go to state 689
    "++"                              shift, and go to state 436
    "--"                              shift, and go to state 437
    "::"                              shift, and go to state 55
    "$$"                              shift, and go to state 438
    "$i"                              shift, and go to state 439
    "$v"                              shift, and go to state 440
    "$b"                              shift, and go to state 441
    "$a"                              shift, and go to state 442
    "$c"                              shift, and go to state 443
    "..."                             shift, and go to state 444
    "integer constant"                shift, and go to state 445
    "long integer constant"           shift, and go to state 446
    "unsigned integer constant"       shift, and go to state 447
    "unsigned long integer constant"  shift, and go to state 448
    "unsigned int8 constant"          shift, and go to state 449
    "floating point constant"         shift, and go to state 450
    "double constant"                 shift, and go to state 451
    "name"                            shift, and go to state 56
    "start of the string"             shift, and go to state 452
    '-'                               shift, and go to state 453
    '+'                               shift, and go to state 454
    '*'                               shift, and go to state 455
    '%'                               shift, and go to state 13
    '~'                               shift, and go to state 456
    '!'                               shift, and go to state 457
    '['                               shift, and go to state 458
    '('                               shift, and go to state 459
    '$'                               shift, and go to state 460
    '@'                               shift, and go to state 461
    '{'                               shift, and go to state 462

    string_builder           go to state 463
    expr_reader              go to state 464
    expression_if_one_liner  go to state 1402
    expr_call_pipe           go to state 465
    name_in_namespace        go to state 466
    expr_new                 go to state 467
    expression_break         go to state 1403
    expression_continue      go to state 1404
    expression_return        go to state 1405
    expression_yield         go to state 1406
    expr_cast                go to state 468
    expr_type_decl           go to state 469
    expr_type_info           go to state 470
    block_or_lambda          go to state 471
    expr_full_block          go to state 472
    expr_numeric_const       go to state 473
    expr_named_call          go to state 474
    expr_method_call         go to state 475
    func_addr_expr           go to state 476
    expr_field               go to state 477
    expr_call                go to state 478
    expr                     go to state 1407
    expr_generator           go to state 480
    expr_mtag                go to state 481
    basic_type_declaration   go to state 482
    make_decl                go to state 483
    make_struct_decl         go to state 484
    make_tuple_call          go to state 485
    make_dim_decl            go to state 486
    make_table_decl          go to state 487
    array_comprehension      go to state 488


State 1360

   75 expression_if_then_else_oneliner: expression_if_one_liner "if" '(' expr ')' expression_else_one_liner . ';'

    ';'  shift, and go to state 1408


State 1361

   74 expression_if_then_else: $@2 if_or_static_if '(' expr ')' optional_semis . expression_block expression_else

    $default  reduce using rule 224 ($@9)

    expression_block  go to state 1409
    $@9               go to state 332


State 1362

   77 expression_for_loop: $@3 "for" '(' variable_name_with_pos_list "in" expr_list . ')' optional_semis expression_block
  309 expr_list: expr_list . ',' expr

    ','  shift, and go to state 1041
    ')'  shift, and go to state 1410


State 1363

   80 expression_while_loop: $@4 "while" '(' expr ')' optional_semis . expression_block

    $default  reduce using rule 224 ($@9)

    expression_block  go to state 1411
    $@9               go to state 332


State 1364

   82 expression_with: $@5 "with" '(' expr ')' optional_semis . expression_block

    $default  reduce using rule 224 ($@9)

    expression_block  go to state 1412
    $@9               go to state 332


State 1365

  223 expression_block_finally: "finally" $@7 '{' expressions . $@8 '}'
  248 expressions: expressions . expression_any
  249            | expressions . error

    error                             shift, and go to state 678
    "struct"                          shift, and go to state 414
    "class"                           shift, and go to state 415
    "let"                             shift, and go to state 3
    "true"                            shift, and go to state 416
    "false"                           shift, and go to state 417
    "new"                             shift, and go to state 418
    "typeinfo"                        shift, and go to state 419
    "type"                            shift, and go to state 420
    "array"                           shift, and go to state 421
    "return"                          shift, and go to state 679
    "null"                            shift, and go to state 422
    "break"                           shift, and go to state 680
    "try"                             shift, and go to state 681
    "table"                           shift, and go to state 423
    "delete"                          shift, and go to state 682
    "deref"                           shift, and go to state 424
    "assume"                          shift, and go to state 683
    "cast"                            shift, and go to state 425
    "upcast"                          shift, and go to state 426
    "var"                             shift, and go to state 8
    "addr"                            shift, and go to state 427
    "continue"                        shift, and go to state 684
    "pass"                            shift, and go to state 685
    "reinterpret"                     shift, and go to state 428
    "label"                           shift, and go to state 686
    "goto"                            shift, and go to state 687
    "unsafe"                          shift, and go to state 688
    "fixed_array"                     shift, and go to state 430
    "default"                         shift, and go to state 431
    "bool"                            shift, and go to state 228
    "void"                            shift, and go to state 229
    "string"                          shift, and go to state 230
    "int"                             shift, and go to state 232
    "int2"                            shift, and go to state 233
    "int3"                            shift, and go to state 234
    "int4"                            shift, and go to state 235
    "uint"                            shift, and go to state 236
    "bitfield"                        shift, and go to state 432
    "uint2"                           shift, and go to state 238
    "uint3"                           shift, and go to state 239
    "uint4"                           shift, and go to state 240
    "float"                           shift, and go to state 241
    "float2"                          shift, and go to state 242
    "float3"                          shift, and go to state 243
    "float4"                          shift, and go to state 244
    "range"                           shift, and go to state 245
    "urange"                          shift, and go to state 246
    "range64"                         shift, and go to state 247
    "urange64"                        shift, and go to state 248
    "int64"                           shift, and go to state 250
    "uint64"                          shift, and go to state 251
    "double"                          shift, and go to state 252
    "int8"                            shift, and go to state 255
    "uint8"                           shift, and go to state 256
    "int16"                           shift, and go to state 257
    "uint16"                          shift, and go to state 258
    "tuple"                           shift, and go to state 433
    "variant"                         shift, and go to state 434
    "generator"                       shift, and go to state 435
    "yield"                           shift, and go to state 689
    "++"                              shift, and go to state 436
    "--"                              shift, and go to state 437
    "::"                              shift, and go to state 55
    "$$"                              shift, and go to state 438
    "$i"                              shift, and go to state 439
    "$v"                              shift, and go to state 440
    "$b"                              shift, and go to state 441
    "$a"                              shift, and go to state 442
    "$c"                              shift, and go to state 443
    "..."                             shift, and go to state 444
    "integer constant"                shift, and go to state 445
    "long integer constant"           shift, and go to state 446
    "unsigned integer constant"       shift, and go to state 447
    "unsigned long integer constant"  shift, and go to state 448
    "unsigned int8 constant"          shift, and go to state 449
    "floating point constant"         shift, and go to state 450
    "double constant"                 shift, and go to state 451
    "name"                            shift, and go to state 56
    "start of the string"             shift, and go to state 452
    '-'                               shift, and go to state 453
    '+'                               shift, and go to state 454
    '*'                               shift, and go to state 455
    '%'                               shift, and go to state 13
    '~'                               shift, and go to state 456
    '!'                               shift, and go to state 457
    '['                               shift, and go to state 458
    '('                               shift, and go to state 459
    '$'                               shift, and go to state 460
    '@'                               shift, and go to state 461
    ';'                               shift, and go to state 690
    '{'                               shift, and go to state 462

    "while"      reduce using rule 79 ($@4)
    "if"         reduce using rule 73 ($@2)
    "static_if"  reduce using rule 73 ($@2)
    "for"        reduce using rule 76 ($@3)
    "with"       reduce using rule 81 ($@5)
    '}'          reduce using rule 222 ($@8)

    string_builder                    go to state 463
    expr_reader                       go to state 464
    expression_label                  go to state 691
    expression_goto                   go to state 692
    expression_if_one_liner           go to state 693
    expression_if_then_else           go to state 694
    $@2                               go to state 695
    expression_if_then_else_oneliner  go to state 696
    expression_for_loop               go to state 697
    $@3                               go to state 698
    expression_unsafe                 go to state 699
    expression_while_loop             go to state 700
    $@4                               go to state 701
    expression_with                   go to state 702
    $@5                               go to state 703
    expression_with_alias             go to state 704
    $@8                               go to state 1413
    expr_call_pipe                    go to state 465
    expression_any                    go to state 706
    name_in_namespace                 go to state 466
    expression_delete                 go to state 707
    expr_new                          go to state 467
    expression_break                  go to state 708
    expression_continue               go to state 709
    expression_return                 go to state 710
    expression_yield                  go to state 711
    expression_try_catch              go to state 712
    kwd_let                           go to state 713
    expression_let                    go to state 714
    expr_cast                         go to state 468
    expr_type_decl                    go to state 469
    expr_type_info                    go to state 470
    block_or_lambda                   go to state 471
    expr_full_block                   go to state 472
    expr_numeric_const                go to state 473
    expr_assign                       go to state 715
    expr_named_call                   go to state 474
    expr_method_call                  go to state 475
    func_addr_expr                    go to state 476
    expr_field                        go to state 477
    expr_call                         go to state 478
    expr                              go to state 716
    expr_generator                    go to state 480
    expr_mtag                         go to state 481
    basic_type_declaration            go to state 482
    make_decl                         go to state 483
    make_struct_decl                  go to state 484
    make_tuple_call                   go to state 485
    make_dim_decl                     go to state 486
    make_table_decl                   go to state 487
    array_comprehension               go to state 488


State 1366

  287 tuple_expansion: tuple_expansion ',' "name" .

    $default  reduce using rule 287 (tuple_expansion)


State 1367

  288 tuple_expansion_variable_declaration: '(' tuple_expansion ')' ':' . type_declaration_no_options copy_or_move_or_clone expr ';'

    "type"       shift, and go to state 222
    "array"      shift, and go to state 223
    "table"      shift, and go to state 224
    "typedecl"   shift, and go to state 225
    "iterator"   shift, and go to state 226
    "smart_ptr"  shift, and go to state 227
    "bool"       shift, and go to state 228
    "void"       shift, and go to state 229
    "string"     shift, and go to state 230
    "auto"       shift, and go to state 231
    "int"        shift, and go to state 232
    "int2"       shift, and go to state 233
    "int3"       shift, and go to state 234
    "int4"       shift, and go to state 235
    "uint"       shift, and go to state 236
    "bitfield"   shift, and go to state 237
    "uint2"      shift, and go to state 238
    "uint3"      shift, and go to state 239
    "uint4"      shift, and go to state 240
    "float"      shift, and go to state 241
    "float2"     shift, and go to state 242
    "float3"     shift, and go to state 243
    "float4"     shift, and go to state 244
    "range"      shift, and go to state 245
    "urange"     shift, and go to state 246
    "range64"    shift, and go to state 247
    "urange64"   shift, and go to state 248
    "block"      shift, and go to state 249
    "int64"      shift, and go to state 250
    "uint64"     shift, and go to state 251
    "double"     shift, and go to state 252
    "function"   shift, and go to state 253
    "lambda"     shift, and go to state 254
    "int8"       shift, and go to state 255
    "uint8"      shift, and go to state 256
    "int16"      shift, and go to state 257
    "uint16"     shift, and go to state 258
    "tuple"      shift, and go to state 259
    "variant"    shift, and go to state 260
    "::"         shift, and go to state 55
    "$t"         shift, and go to state 261
    "name"       shift, and go to state 56
    '$'          shift, and go to state 262

    name_in_namespace                   go to state 263
    basic_type_declaration              go to state 264
    structure_type_declaration          go to state 265
    auto_type_declaration               go to state 266
    bitfield_type_declaration           go to state 267
    type_declaration_no_options         go to state 1414
    type_declaration_no_options_no_dim  go to state 269


State 1368

  289 tuple_expansion_variable_declaration: '(' tuple_expansion ')' optional_ref . copy_or_move_or_clone expr ';'

    "<-"  shift, and go to state 537
    ":="  shift, and go to state 538
    '='   shift, and go to state 539

    copy_or_move_or_clone  go to state 1415


State 1369

  501 struct_variable_declaration_list: struct_variable_declaration_list optional_annotation_list "def" optional_public_or_private_member_variable "abstract" optional_constant $@34 . function_declaration_header ';'

    "operator"  shift, and go to state 177
    "bool"      shift, and go to state 178
    "string"    shift, and go to state 179
    "int"       shift, and go to state 180
    "int2"      shift, and go to state 181
    "int3"      shift, and go to state 182
    "int4"      shift, and go to state 183
    "uint"      shift, and go to state 184
    "uint2"     shift, and go to state 185
    "uint3"     shift, and go to state 186
    "uint4"     shift, and go to state 187
    "float"     shift, and go to state 188
    "float2"    shift, and go to state 189
    "float3"    shift, and go to state 190
    "float4"    shift, and go to state 191
    "range"     shift, and go to state 192
    "urange"    shift, and go to state 193
    "range64"   shift, and go to state 194
    "urange64"  shift, and go to state 195
    "int64"     shift, and go to state 196
    "uint64"    shift, and go to state 197
    "double"    shift, and go to state 198
    "int8"      shift, and go to state 199
    "uint8"     shift, and go to state 200
    "int16"     shift, and go to state 201
    "uint16"    shift, and go to state 202
    "++"        shift, and go to state 203
    "--"        shift, and go to state 204
    "name"      shift, and go to state 205

    function_name                go to state 206
    function_declaration_header  go to state 1416


State 1370

  503 struct_variable_declaration_list: struct_variable_declaration_list optional_annotation_list "def" optional_public_or_private_member_variable optional_static_member_variable optional_override optional_constant . $@35 function_declaration_header expression_block

    $default  reduce using rule 502 ($@35)

    $@35  go to state 1417


State 1371

  496 structure_variable_declaration: optional_field_annotation optional_static_member_variable optional_override optional_public_or_private_member_variable variable_declaration .

    $default  reduce using rule 496 (structure_variable_declaration)


State 1372

  769 make_struct_decl: "struct" '<' $@85 type_declaration_no_options '>' $@86 '(' use_initializer . optional_make_struct_dim_decl ')'

    "$f"    shift, and go to state 786
    "name"  shift, and go to state 1003
    '('     shift, and go to state 1418

    $default  reduce using rule 764 (optional_make_struct_dim_decl)

    make_struct_fields             go to state 1419
    make_struct_dim_list           go to state 1420
    make_struct_dim_decl           go to state 1421
    optional_make_struct_dim_decl  go to state 1422


State 1373

  772 make_struct_decl: "class" '<' $@87 type_declaration_no_options '>' $@88 '(' use_initializer . optional_make_struct_dim_decl ')'

    "$f"    shift, and go to state 786
    "name"  shift, and go to state 1003
    '('     shift, and go to state 1418

    $default  reduce using rule 764 (optional_make_struct_dim_decl)

    make_struct_fields             go to state 1419
    make_struct_dim_list           go to state 1420
    make_struct_dim_decl           go to state 1421
    optional_make_struct_dim_decl  go to state 1423


State 1374

  306 expr_type_info: "typeinfo" name_in_namespace '<' "name" '>' '(' expr ')' .

    $default  reduce using rule 306 (expr_type_info)


State 1375

  307 expr_type_info: "typeinfo" name_in_namespace '<' "name" c_or_s "name" '>' '(' . expr ')'

    "struct"                          shift, and go to state 414
    "class"                           shift, and go to state 415
    "true"                            shift, and go to state 416
    "false"                           shift, and go to state 417
    "new"                             shift, and go to state 418
    "typeinfo"                        shift, and go to state 419
    "type"                            shift, and go to state 420
    "array"                           shift, and go to state 421
    "null"                            shift, and go to state 422
    "table"                           shift, and go to state 423
    "deref"                           shift, and go to state 424
    "cast"                            shift, and go to state 425
    "upcast"                          shift, and go to state 426
    "addr"                            shift, and go to state 427
    "reinterpret"                     shift, and go to state 428
    "unsafe"                          shift, and go to state 429
    "fixed_array"                     shift, and go to state 430
    "default"                         shift, and go to state 431
    "bool"                            shift, and go to state 228
    "void"                            shift, and go to state 229
    "string"                          shift, and go to state 230
    "int"                             shift, and go to state 232
    "int2"                            shift, and go to state 233
    "int3"                            shift, and go to state 234
    "int4"                            shift, and go to state 235
    "uint"                            shift, and go to state 236
    "bitfield"                        shift, and go to state 432
    "uint2"                           shift, and go to state 238
    "uint3"                           shift, and go to state 239
    "uint4"                           shift, and go to state 240
    "float"                           shift, and go to state 241
    "float2"                          shift, and go to state 242
    "float3"                          shift, and go to state 243
    "float4"                          shift, and go to state 244
    "range"                           shift, and go to state 245
    "urange"                          shift, and go to state 246
    "range64"                         shift, and go to state 247
    "urange64"                        shift, and go to state 248
    "int64"                           shift, and go to state 250
    "uint64"                          shift, and go to state 251
    "double"                          shift, and go to state 252
    "int8"                            shift, and go to state 255
    "uint8"                           shift, and go to state 256
    "int16"                           shift, and go to state 257
    "uint16"                          shift, and go to state 258
    "tuple"                           shift, and go to state 433
    "variant"                         shift, and go to state 434
    "generator"                       shift, and go to state 435
    "++"                              shift, and go to state 436
    "--"                              shift, and go to state 437
    "::"                              shift, and go to state 55
    "$$"                              shift, and go to state 438
    "$i"                              shift, and go to state 439
    "$v"                              shift, and go to state 440
    "$b"                              shift, and go to state 441
    "$a"                              shift, and go to state 442
    "$c"                              shift, and go to state 443
    "..."                             shift, and go to state 444
    "integer constant"                shift, and go to state 445
    "long integer constant"           shift, and go to state 446
    "unsigned integer constant"       shift, and go to state 447
    "unsigned long integer constant"  shift, and go to state 448
    "unsigned int8 constant"          shift, and go to state 449
    "floating point constant"         shift, and go to state 450
    "double constant"                 shift, and go to state 451
    "name"                            shift, and go to state 56
    "start of the string"             shift, and go to state 452
    '-'                               shift, and go to state 453
    '+'                               shift, and go to state 454
    '*'                               shift, and go to state 455
    '%'                               shift, and go to state 13
    '~'                               shift, and go to state 456
    '!'                               shift, and go to state 457
    '['                               shift, and go to state 458
    '('                               shift, and go to state 459
    '$'                               shift, and go to state 460
    '@'                               shift, and go to state 461
    '{'                               shift, and go to state 462

    string_builder          go to state 463
    expr_reader             go to state 464
    expr_call_pipe          go to state 465
    name_in_namespace       go to state 466
    expr_new                go to state 467
    expr_cast               go to state 468
    expr_type_decl          go to state 469
    expr_type_info          go to state 470
    block_or_lambda         go to state 471
    expr_full_block         go to state 472
    expr_numeric_const      go to state 473
    expr_named_call         go to state 474
    expr_method_call        go to state 475
    func_addr_expr          go to state 476
    expr_field              go to state 477
    expr_call               go to state 478
    expr                    go to state 1424
    expr_generator          go to state 480
    expr_mtag               go to state 481
    basic_type_declaration  go to state 482
    make_decl               go to state 483
    make_struct_decl        go to state 484
    make_tuple_call         go to state 485
    make_dim_decl           go to state 486
    make_table_decl         go to state 487
    array_comprehension     go to state 488


State 1376

  788 make_dim_decl: "array" "struct" '<' $@95 type_declaration_no_options '>' $@96 '(' . use_initializer optional_make_struct_dim_decl ')'

    "uninitialized"  shift, and go to state 1327

    $default  reduce using rule 765 (use_initializer)

    use_initializer  go to state 1425


State 1377

  791 make_dim_decl: "array" "tuple" '<' $@97 type_declaration_no_options '>' $@98 '(' . use_initializer optional_make_struct_dim_decl ')'

    "uninitialized"  shift, and go to state 1327

    $default  reduce using rule 765 (use_initializer)

    use_initializer  go to state 1426


State 1378

  794 make_dim_decl: "array" "variant" '<' $@99 type_declaration_no_options '>' $@100 '(' . make_variant_dim ')'

    "$f"    shift, and go to state 786
    "name"  shift, and go to state 1003

    make_struct_fields  go to state 1383
    make_variant_dim    go to state 1427


State 1379

  798 make_dim_decl: "array" '<' $@101 type_declaration_no_options '>' $@102 '(' optional_expr_list . ')'

    ')'  shift, and go to state 1428


State 1380

  808 make_table_decl: "table" '<' type_declaration_no_options c_or_s type_declaration_no_options '>' '(' optional_expr_map_tuple_list . ')'

    ')'  shift, and go to state 1429


State 1381

  309 expr_list: expr_list . ',' expr
  802 make_dim_decl: "fixed_array" '<' $@103 type_declaration_no_options '>' $@104 '(' expr_list . optional_comma ')'

    ','  shift, and go to state 773

    $default  reduce using rule 811 (optional_comma)

    optional_comma  go to state 1430


State 1382

  784 make_tuple_call: "tuple" '<' $@93 type_declaration_no_options '>' $@94 '(' use_initializer . optional_make_struct_dim_decl ')'

    "$f"    shift, and go to state 786
    "name"  shift, and go to state 1003
    '('     shift, and go to state 1418

    $default  reduce using rule 764 (optional_make_struct_dim_decl)

    make_struct_fields             go to state 1419
    make_struct_dim_list           go to state 1420
    make_struct_dim_decl           go to state 1421
    optional_make_struct_dim_decl  go to state 1431


State 1383

  751 make_struct_fields: make_struct_fields . ',' "name" copy_or_move expr
  752                   | make_struct_fields . ',' "name" ":=" expr
  755                   | make_struct_fields . ',' "$f" '(' expr ')' copy_or_move expr
  756                   | make_struct_fields . ',' "$f" '(' expr ')' ":=" expr
  757 make_variant_dim: make_struct_fields .

    ','  shift, and go to state 1012

    $default  reduce using rule 757 (make_variant_dim)


State 1384

  775 make_struct_decl: "variant" '<' $@89 type_declaration_no_options '>' $@90 '(' make_variant_dim . ')'

    ')'  shift, and go to state 1432


State 1385

  466 expr_generator: "generator" '<' type_declaration_no_options '>' optional_capture_list '(' expr ')' .

    $default  reduce using rule 466 (expr_generator)


State 1386

  813 array_comprehension: '[' "for" '(' variable_name_with_pos_list "in" expr_list ')' ';' . expr array_comprehension_where ']'

    "struct"                          shift, and go to state 414
    "class"                           shift, and go to state 415
    "true"                            shift, and go to state 416
    "false"                           shift, and go to state 417
    "new"                             shift, and go to state 418
    "typeinfo"                        shift, and go to state 419
    "type"                            shift, and go to state 420
    "array"                           shift, and go to state 421
    "null"                            shift, and go to state 422
    "table"                           shift, and go to state 423
    "deref"                           shift, and go to state 424
    "cast"                            shift, and go to state 425
    "upcast"                          shift, and go to state 426
    "addr"                            shift, and go to state 427
    "reinterpret"                     shift, and go to state 428
    "unsafe"                          shift, and go to state 429
    "fixed_array"                     shift, and go to state 430
    "default"                         shift, and go to state 431
    "bool"                            shift, and go to state 228
    "void"                            shift, and go to state 229
    "string"                          shift, and go to state 230
    "int"                             shift, and go to state 232
    "int2"                            shift, and go to state 233
    "int3"                            shift, and go to state 234
    "int4"                            shift, and go to state 235
    "uint"                            shift, and go to state 236
    "bitfield"                        shift, and go to state 432
    "uint2"                           shift, and go to state 238
    "uint3"                           shift, and go to state 239
    "uint4"                           shift, and go to state 240
    "float"                           shift, and go to state 241
    "float2"                          shift, and go to state 242
    "float3"                          shift, and go to state 243
    "float4"                          shift, and go to state 244
    "range"                           shift, and go to state 245
    "urange"                          shift, and go to state 246
    "range64"                         shift, and go to state 247
    "urange64"                        shift, and go to state 248
    "int64"                           shift, and go to state 250
    "uint64"                          shift, and go to state 251
    "double"                          shift, and go to state 252
    "int8"                            shift, and go to state 255
    "uint8"                           shift, and go to state 256
    "int16"                           shift, and go to state 257
    "uint16"                          shift, and go to state 258
    "tuple"                           shift, and go to state 433
    "variant"                         shift, and go to state 434
    "generator"                       shift, and go to state 435
    "++"                              shift, and go to state 436
    "--"                              shift, and go to state 437
    "::"                              shift, and go to state 55
    "$$"                              shift, and go to state 438
    "$i"                              shift, and go to state 439
    "$v"                              shift, and go to state 440
    "$b"                              shift, and go to state 441
    "$a"                              shift, and go to state 442
    "$c"                              shift, and go to state 443
    "..."                             shift, and go to state 444
    "integer constant"                shift, and go to state 445
    "long integer constant"           shift, and go to state 446
    "unsigned integer constant"       shift, and go to state 447
    "unsigned long integer constant"  shift, and go to state 448
    "unsigned int8 constant"          shift, and go to state 449
    "floating point constant"         shift, and go to state 450
    "double constant"                 shift, and go to state 451
    "name"                            shift, and go to state 56
    "start of the string"             shift, and go to state 452
    '-'                               shift, and go to state 453
    '+'                               shift, and go to state 454
    '*'                               shift, and go to state 455
    '%'                               shift, and go to state 13
    '~'                               shift, and go to state 456
    '!'                               shift, and go to state 457
    '['                               shift, and go to state 458
    '('                               shift, and go to state 459
    '$'                               shift, and go to state 460
    '@'                               shift, and go to state 461
    '{'                               shift, and go to state 462

    string_builder          go to state 463
    expr_reader             go to state 464
    expr_call_pipe          go to state 465
    name_in_namespace       go to state 466
    expr_new                go to state 467
    expr_cast               go to state 468
    expr_type_decl          go to state 469
    expr_type_info          go to state 470
    block_or_lambda         go to state 471
    expr_full_block         go to state 472
    expr_numeric_const      go to state 473
    expr_named_call         go to state 474
    expr_method_call        go to state 475
    func_addr_expr          go to state 476
    expr_field              go to state 477
    expr_call               go to state 478
    expr                    go to state 1433
    expr_generator          go to state 480
    expr_mtag               go to state 481
    basic_type_declaration  go to state 482
    make_decl               go to state 483
    make_struct_decl        go to state 484
    make_tuple_call         go to state 485
    make_dim_decl           go to state 486
    make_table_decl         go to state 487
    array_comprehension     go to state 488


State 1387

  814 array_comprehension: '[' "iterator" "for" '(' variable_name_with_pos_list "in" expr_list ')' . ';' expr array_comprehension_where ']'

    ';'  shift, and go to state 1434


State 1388

  363 func_addr_expr: '@' '@' '<' $@21 type_declaration_no_options '>' $@22 func_addr_name .

    $default  reduce using rule 363 (func_addr_expr)


State 1389

  366 func_addr_expr: '@' '@' '<' $@23 optional_function_argument_list optional_function_type '>' $@24 . func_addr_name

    "::"    shift, and go to state 55
    "$i"    shift, and go to state 776
    "name"  shift, and go to state 56

    name_in_namespace  go to state 779
    func_addr_name     go to state 1435


State 1390

  815 array_comprehension: '{' "for" '(' variable_name_with_pos_list "in" expr_list ')' ';' . make_map_tuple array_comprehension_where '}'

    "struct"                          shift, and go to state 414
    "class"                           shift, and go to state 415
    "true"                            shift, and go to state 416
    "false"                           shift, and go to state 417
    "new"                             shift, and go to state 418
    "typeinfo"                        shift, and go to state 419
    "type"                            shift, and go to state 420
    "array"                           shift, and go to state 421
    "null"                            shift, and go to state 422
    "table"                           shift, and go to state 423
    "deref"                           shift, and go to state 424
    "cast"                            shift, and go to state 425
    "upcast"                          shift, and go to state 426
    "addr"                            shift, and go to state 427
    "reinterpret"                     shift, and go to state 428
    "unsafe"                          shift, and go to state 429
    "fixed_array"                     shift, and go to state 430
    "default"                         shift, and go to state 431
    "bool"                            shift, and go to state 228
    "void"                            shift, and go to state 229
    "string"                          shift, and go to state 230
    "int"                             shift, and go to state 232
    "int2"                            shift, and go to state 233
    "int3"                            shift, and go to state 234
    "int4"                            shift, and go to state 235
    "uint"                            shift, and go to state 236
    "bitfield"                        shift, and go to state 432
    "uint2"                           shift, and go to state 238
    "uint3"                           shift, and go to state 239
    "uint4"                           shift, and go to state 240
    "float"                           shift, and go to state 241
    "float2"                          shift, and go to state 242
    "float3"                          shift, and go to state 243
    "float4"                          shift, and go to state 244
    "range"                           shift, and go to state 245
    "urange"                          shift, and go to state 246
    "range64"                         shift, and go to state 247
    "urange64"                        shift, and go to state 248
    "int64"                           shift, and go to state 250
    "uint64"                          shift, and go to state 251
    "double"                          shift, and go to state 252
    "int8"                            shift, and go to state 255
    "uint8"                           shift, and go to state 256
    "int16"                           shift, and go to state 257
    "uint16"                          shift, and go to state 258
    "tuple"                           shift, and go to state 433
    "variant"                         shift, and go to state 434
    "generator"                       shift, and go to state 435
    "++"                              shift, and go to state 436
    "--"                              shift, and go to state 437
    "::"                              shift, and go to state 55
    "$$"                              shift, and go to state 438
    "$i"                              shift, and go to state 439
    "$v"                              shift, and go to state 440
    "$b"                              shift, and go to state 441
    "$a"                              shift, and go to state 442
    "$c"                              shift, and go to state 443
    "..."                             shift, and go to state 444
    "integer constant"                shift, and go to state 445
    "long integer constant"           shift, and go to state 446
    "unsigned integer constant"       shift, and go to state 447
    "unsigned long integer constant"  shift, and go to state 448
    "unsigned int8 constant"          shift, and go to state 449
    "floating point constant"         shift, and go to state 450
    "double constant"                 shift, and go to state 451
    "name"                            shift, and go to state 56
    "start of the string"             shift, and go to state 452
    '-'                               shift, and go to state 453
    '+'                               shift, and go to state 454
    '*'                               shift, and go to state 455
    '%'                               shift, and go to state 13
    '~'                               shift, and go to state 456
    '!'                               shift, and go to state 457
    '['                               shift, and go to state 458
    '('                               shift, and go to state 459
    '$'                               shift, and go to state 460
    '@'                               shift, and go to state 461
    '{'                               shift, and go to state 462

    string_builder          go to state 463
    expr_reader             go to state 464
    expr_call_pipe          go to state 465
    name_in_namespace       go to state 466
    expr_new                go to state 467
    expr_cast               go to state 468
    expr_type_decl          go to state 469
    expr_type_info          go to state 470
    block_or_lambda         go to state 471
    expr_full_block         go to state 472
    expr_numeric_const      go to state 473
    expr_named_call         go to state 474
    expr_method_call        go to state 475
    func_addr_expr          go to state 476
    expr_field              go to state 477
    expr_call               go to state 478
    expr                    go to state 594
    expr_generator          go to state 480
    expr_mtag               go to state 481
    basic_type_declaration  go to state 482
    make_decl               go to state 483
    make_struct_decl        go to state 484
    make_map_tuple          go to state 1436
    make_tuple_call         go to state 485
    make_dim_decl           go to state 486
    make_table_decl         go to state 487
    array_comprehension     go to state 488


State 1391

  356 expr_method_call: expr . "->" "name" '(' ')'
  357                 | expr . "->" "name" '(' expr_list ')'
  367 expr_field: expr . '.' "name"
  368           | expr . '.' '.' "name"
  369           | expr . '.' "name" '(' ')'
  370           | expr . '.' "name" '(' expr_list ')'
  371           | expr . '.' basic_type_declaration '(' ')'
  372           | expr . '.' basic_type_declaration '(' expr_list ')'
  375           | expr . '.' $@25 error $@26
  397 expr: expr . "<<" expr
  398     | expr . ">>" expr
  399     | expr . "<<<" expr
  400     | expr . ">>>" expr
  401     | expr . '+' expr
  402     | expr . '-' expr
  403     | expr . '*' expr
  404     | expr . '/' expr
  405     | expr . '%' expr
  406     | expr . '<' expr
  407     | expr . '>' expr
  408     | expr . "==" expr
  409     | expr . "!=" expr
  410     | expr . "<=" expr
  411     | expr . ">=" expr
  412     | expr . '&' expr
  413     | expr . '|' expr
  414     | expr . '^' expr
  415     | expr . "&&" expr
  416     | expr . "||" expr
  417     | expr . "^^" expr
  418     | expr . ".." expr
  421     | expr . "++"
  422     | expr . "--"
  424     | expr . '[' expr ']'
  425     | expr . '.' '[' expr ']'
  426     | expr . "?[" expr ']'
  427     | expr . '.' "?[" expr ']'
  428     | expr . "?." "name"
  429     | expr . '.' "?." "name"
  436     | expr . "??" expr
  437     | expr . '?' expr ':' expr
  440     | expr . "is" "type" '<' $@27 type_declaration_no_options '>' $@28
  441     | expr . "is" basic_type_declaration
  442     | expr . "is" "name"
  443     | expr . "as" "name"
  446     | expr . "as" "type" '<' $@29 type_declaration '>' $@30
  447     | expr . "as" basic_type_declaration
  448     | expr . '?' "as" "name"
  451     | expr . '?' "as" "type" '<' $@31 type_declaration '>' $@32
  452     | expr . '?' "as" basic_type_declaration
  460     | expr . "<|" expr
  461     | expr . "|>" expr
  462     | expr . "|>" basic_type_declaration
  476 expr_mtag: expr . '.' "$f" '(' expr ')'
  477          | expr . "?." "$f" '(' expr ')'
  478          | expr . '.' '.' "$f" '(' expr ')'
  479          | expr . '.' "?." "$f" '(' expr ')'
  480          | expr . "as" "$f" '(' expr ')'
  481          | expr . '?' "as" "$f" '(' expr ')'
  482          | expr . "is" "$f" '(' expr ')'
  754 make_struct_fields: "$f" '(' expr ')' ":=" expr .

    "is"   shift, and go to state 603
    "as"   shift, and go to state 604
    "<<"   shift, and go to state 605
    ">>"   shift, and go to state 606
    "++"   shift, and go to state 607
    "--"   shift, and go to state 608
    "<="   shift, and go to state 609
    ">="   shift, and go to state 610
    "=="   shift, and go to state 611
    "!="   shift, and go to state 612
    "->"   shift, and go to state 613
    "??"   shift, and go to state 614
    "?."   shift, and go to state 615
    "?["   shift, and go to state 616
    "<|"   shift, and go to state 617
    "|>"   shift, and go to state 618
    "<<<"  shift, and go to state 619
    ">>>"  shift, and go to state 620
    "&&"   shift, and go to state 621
    "||"   shift, and go to state 622
    "^^"   shift, and go to state 623
    ".."   shift, and go to state 624
    '?'    shift, and go to state 625
    '|'    shift, and go to state 626
    '^'    shift, and go to state 627
    '&'    shift, and go to state 628
    '<'    shift, and go to state 629
    '>'    shift, and go to state 630
    '-'    shift, and go to state 631
    '+'    shift, and go to state 632
    '*'    shift, and go to state 633
    '/'    shift, and go to state 634
    '%'    shift, and go to state 635
    '.'    shift, and go to state 636
    '['    shift, and go to state 637

    $default  reduce using rule 754 (make_struct_fields)


State 1392

  356 expr_method_call: expr . "->" "name" '(' ')'
  357                 | expr . "->" "name" '(' expr_list ')'
  367 expr_field: expr . '.' "name"
  368           | expr . '.' '.' "name"
  369           | expr . '.' "name" '(' ')'
  370           | expr . '.' "name" '(' expr_list ')'
  371           | expr . '.' basic_type_declaration '(' ')'
  372           | expr . '.' basic_type_declaration '(' expr_list ')'
  375           | expr . '.' $@25 error $@26
  397 expr: expr . "<<" expr
  398     | expr . ">>" expr
  399     | expr . "<<<" expr
  400     | expr . ">>>" expr
  401     | expr . '+' expr
  402     | expr . '-' expr
  403     | expr . '*' expr
  404     | expr . '/' expr
  405     | expr . '%' expr
  406     | expr . '<' expr
  407     | expr . '>' expr
  408     | expr . "==" expr
  409     | expr . "!=" expr
  410     | expr . "<=" expr
  411     | expr . ">=" expr
  412     | expr . '&' expr
  413     | expr . '|' expr
  414     | expr . '^' expr
  415     | expr . "&&" expr
  416     | expr . "||" expr
  417     | expr . "^^" expr
  418     | expr . ".." expr
  421     | expr . "++"
  422     | expr . "--"
  424     | expr . '[' expr ']'
  425     | expr . '.' '[' expr ']'
  426     | expr . "?[" expr ']'
  427     | expr . '.' "?[" expr ']'
  428     | expr . "?." "name"
  429     | expr . '.' "?." "name"
  436     | expr . "??" expr
  437     | expr . '?' expr ':' expr
  440     | expr . "is" "type" '<' $@27 type_declaration_no_options '>' $@28
  441     | expr . "is" basic_type_declaration
  442     | expr . "is" "name"
  443     | expr . "as" "name"
  446     | expr . "as" "type" '<' $@29 type_declaration '>' $@30
  447     | expr . "as" basic_type_declaration
  448     | expr . '?' "as" "name"
  451     | expr . '?' "as" "type" '<' $@31 type_declaration '>' $@32
  452     | expr . '?' "as" basic_type_declaration
  460     | expr . "<|" expr
  461     | expr . "|>" expr
  462     | expr . "|>" basic_type_declaration
  476 expr_mtag: expr . '.' "$f" '(' expr ')'
  477          | expr . "?." "$f" '(' expr ')'
  478          | expr . '.' '.' "$f" '(' expr ')'
  479          | expr . '.' "?." "$f" '(' expr ')'
  480          | expr . "as" "$f" '(' expr ')'
  481          | expr . '?' "as" "$f" '(' expr ')'
  482          | expr . "is" "$f" '(' expr ')'
  753 make_struct_fields: "$f" '(' expr ')' copy_or_move expr .

    "is"   shift, and go to state 603
    "as"   shift, and go to state 604
    "<<"   shift, and go to state 605
    ">>"   shift, and go to state 606
    "++"   shift, and go to state 607
    "--"   shift, and go to state 608
    "<="   shift, and go to state 609
    ">="   shift, and go to state 610
    "=="   shift, and go to state 611
    "!="   shift, and go to state 612
    "->"   shift, and go to state 613
    "??"   shift, and go to state 614
    "?."   shift, and go to state 615
    "?["   shift, and go to state 616
    "<|"   shift, and go to state 617
    "|>"   shift, and go to state 618
    "<<<"  shift, and go to state 619
    ">>>"  shift, and go to state 620
    "&&"   shift, and go to state 621
    "||"   shift, and go to state 622
    "^^"   shift, and go to state 623
    ".."   shift, and go to state 624
    '?'    shift, and go to state 625
    '|'    shift, and go to state 626
    '^'    shift, and go to state 627
    '&'    shift, and go to state 628
    '<'    shift, and go to state 629
    '>'    shift, and go to state 630
    '-'    shift, and go to state 631
    '+'    shift, and go to state 632
    '*'    shift, and go to state 633
    '/'    shift, and go to state 634
    '%'    shift, and go to state 635
    '.'    shift, and go to state 636
    '['    shift, and go to state 637

    $default  reduce using rule 753 (make_struct_fields)


State 1393

  355 expr_named_call: name_in_namespace '(' expr_list ',' '[' make_struct_fields ']' ')' .

    $default  reduce using rule 355 (expr_named_call)


State 1394

  755 make_struct_fields: make_struct_fields ',' "$f" '(' expr ')' . copy_or_move expr
  756                   | make_struct_fields ',' "$f" '(' expr ')' . ":=" expr

    "<-"  shift, and go to state 879
    ":="  shift, and go to state 1437
    '='   shift, and go to state 881

    copy_or_move  go to state 1438


State 1395

  320 capture_entry: "name" '(' "name" ')' .

    $default  reduce using rule 320 (capture_entry)


State 1396

  312 block_or_simple_block: "=>" "<-" . expr

    "struct"                          shift, and go to state 414
    "class"                           shift, and go to state 415
    "true"                            shift, and go to state 416
    "false"                           shift, and go to state 417
    "new"                             shift, and go to state 418
    "typeinfo"                        shift, and go to state 419
    "type"                            shift, and go to state 420
    "array"                           shift, and go to state 421
    "null"                            shift, and go to state 422
    "table"                           shift, and go to state 423
    "deref"                           shift, and go to state 424
    "cast"                            shift, and go to state 425
    "upcast"                          shift, and go to state 426
    "addr"                            shift, and go to state 427
    "reinterpret"                     shift, and go to state 428
    "unsafe"                          shift, and go to state 429
    "fixed_array"                     shift, and go to state 430
    "default"                         shift, and go to state 431
    "bool"                            shift, and go to state 228
    "void"                            shift, and go to state 229
    "string"                          shift, and go to state 230
    "int"                             shift, and go to state 232
    "int2"                            shift, and go to state 233
    "int3"                            shift, and go to state 234
    "int4"                            shift, and go to state 235
    "uint"                            shift, and go to state 236
    "bitfield"                        shift, and go to state 432
    "uint2"                           shift, and go to state 238
    "uint3"                           shift, and go to state 239
    "uint4"                           shift, and go to state 240
    "float"                           shift, and go to state 241
    "float2"                          shift, and go to state 242
    "float3"                          shift, and go to state 243
    "float4"                          shift, and go to state 244
    "range"                           shift, and go to state 245
    "urange"                          shift, and go to state 246
    "range64"                         shift, and go to state 247
    "urange64"                        shift, and go to state 248
    "int64"                           shift, and go to state 250
    "uint64"                          shift, and go to state 251
    "double"                          shift, and go to state 252
    "int8"                            shift, and go to state 255
    "uint8"                           shift, and go to state 256
    "int16"                           shift, and go to state 257
    "uint16"                          shift, and go to state 258
    "tuple"                           shift, and go to state 433
    "variant"                         shift, and go to state 434
    "generator"                       shift, and go to state 435
    "++"                              shift, and go to state 436
    "--"                              shift, and go to state 437
    "::"                              shift, and go to state 55
    "$$"                              shift, and go to state 438
    "$i"                              shift, and go to state 439
    "$v"                              shift, and go to state 440
    "$b"                              shift, and go to state 441
    "$a"                              shift, and go to state 442
    "$c"                              shift, and go to state 443
    "..."                             shift, and go to state 444
    "integer constant"                shift, and go to state 445
    "long integer constant"           shift, and go to state 446
    "unsigned integer constant"       shift, and go to state 447
    "unsigned long integer constant"  shift, and go to state 448
    "unsigned int8 constant"          shift, and go to state 449
    "floating point constant"         shift, and go to state 450
    "double constant"                 shift, and go to state 451
    "name"                            shift, and go to state 56
    "start of the string"             shift, and go to state 452
    '-'                               shift, and go to state 453
    '+'                               shift, and go to state 454
    '*'                               shift, and go to state 455
    '%'                               shift, and go to state 13
    '~'                               shift, and go to state 456
    '!'                               shift, and go to state 457
    '['                               shift, and go to state 458
    '('                               shift, and go to state 459
    '$'                               shift, and go to state 460
    '@'                               shift, and go to state 461
    '{'                               shift, and go to state 462

    string_builder          go to state 463
    expr_reader             go to state 464
    expr_call_pipe          go to state 465
    name_in_namespace       go to state 466
    expr_new                go to state 467
    expr_cast               go to state 468
    expr_type_decl          go to state 469
    expr_type_info          go to state 470
    block_or_lambda         go to state 471
    expr_full_block         go to state 472
    expr_numeric_const      go to state 473
    expr_named_call         go to state 474
    expr_method_call        go to state 475
    func_addr_expr          go to state 476
    expr_field              go to state 477
    expr_call               go to state 478
    expr                    go to state 1439
    expr_generator          go to state 480
    expr_mtag               go to state 481
    basic_type_declaration  go to state 482
    make_decl               go to state 483
    make_struct_decl        go to state 484
    make_tuple_call         go to state 485
    make_dim_decl           go to state 486
    make_table_decl         go to state 487
    array_comprehension     go to state 488


State 1397

  311 block_or_simple_block: "=>" expr .
  356 expr_method_call: expr . "->" "name" '(' ')'
  357                 | expr . "->" "name" '(' expr_list ')'
  367 expr_field: expr . '.' "name"
  368           | expr . '.' '.' "name"
  369           | expr . '.' "name" '(' ')'
  370           | expr . '.' "name" '(' expr_list ')'
  371           | expr . '.' basic_type_declaration '(' ')'
  372           | expr . '.' basic_type_declaration '(' expr_list ')'
  375           | expr . '.' $@25 error $@26
  397 expr: expr . "<<" expr
  398     | expr . ">>" expr
  399     | expr . "<<<" expr
  400     | expr . ">>>" expr
  401     | expr . '+' expr
  402     | expr . '-' expr
  403     | expr . '*' expr
  404     | expr . '/' expr
  405     | expr . '%' expr
  406     | expr . '<' expr
  407     | expr . '>' expr
  408     | expr . "==" expr
  409     | expr . "!=" expr
  410     | expr . "<=" expr
  411     | expr . ">=" expr
  412     | expr . '&' expr
  413     | expr . '|' expr
  414     | expr . '^' expr
  415     | expr . "&&" expr
  416     | expr . "||" expr
  417     | expr . "^^" expr
  418     | expr . ".." expr
  421     | expr . "++"
  422     | expr . "--"
  424     | expr . '[' expr ']'
  425     | expr . '.' '[' expr ']'
  426     | expr . "?[" expr ']'
  427     | expr . '.' "?[" expr ']'
  428     | expr . "?." "name"
  429     | expr . '.' "?." "name"
  436     | expr . "??" expr
  437     | expr . '?' expr ':' expr
  440     | expr . "is" "type" '<' $@27 type_declaration_no_options '>' $@28
  441     | expr . "is" basic_type_declaration
  442     | expr . "is" "name"
  443     | expr . "as" "name"
  446     | expr . "as" "type" '<' $@29 type_declaration '>' $@30
  447     | expr . "as" basic_type_declaration
  448     | expr . '?' "as" "name"
  451     | expr . '?' "as" "type" '<' $@31 type_declaration '>' $@32
  452     | expr . '?' "as" basic_type_declaration
  460     | expr . "<|" expr
  461     | expr . "|>" expr
  462     | expr . "|>" basic_type_declaration
  476 expr_mtag: expr . '.' "$f" '(' expr ')'
  477          | expr . "?." "$f" '(' expr ')'
  478          | expr . '.' '.' "$f" '(' expr ')'
  479          | expr . '.' "?." "$f" '(' expr ')'
  480          | expr . "as" "$f" '(' expr ')'
  481          | expr . '?' "as" "$f" '(' expr ')'
  482          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 603
    "as"   shift, and go to state 604
    "<<"   shift, and go to state 605
    ">>"   shift, and go to state 606
    "++"   shift, and go to state 607
    "--"   shift, and go to state 608
    "<="   shift, and go to state 609
    ">="   shift, and go to state 610
    "=="   shift, and go to state 611
    "!="   shift, and go to state 612
    "->"   shift, and go to state 613
    "??"   shift, and go to state 614
    "?."   shift, and go to state 615
    "?["   shift, and go to state 616
    "<|"   shift, and go to state 617
    "|>"   shift, and go to state 618
    "<<<"  shift, and go to state 619
    ">>>"  shift, and go to state 620
    "&&"   shift, and go to state 621
    "||"   shift, and go to state 622
    "^^"   shift, and go to state 623
    '?'    shift, and go to state 625
    '|'    shift, and go to state 626
    '^'    shift, and go to state 627
    '&'    shift, and go to state 628
    '<'    shift, and go to state 629
    '>'    shift, and go to state 630
    '-'    shift, and go to state 631
    '+'    shift, and go to state 632
    '*'    shift, and go to state 633
    '/'    shift, and go to state 634
    '%'    shift, and go to state 635
    '.'    shift, and go to state 636
    '['    shift, and go to state 637

    ".."  error (nonassociative)

    $default  reduce using rule 311 (block_or_simple_block)


State 1398

  326 expr_full_block_assumed_piped: block_or_lambda optional_annotation_list optional_capture_list optional_function_argument_list optional_function_type optional_semis expression_block .

    $default  reduce using rule 326 (expr_full_block_assumed_piped)


State 1399

  440 expr: expr "is" "type" '<' $@27 type_declaration_no_options '>' $@28 .

    $default  reduce using rule 440 (expr)


State 1400

  446 expr: expr "as" "type" '<' $@29 type_declaration '>' $@30 .

    $default  reduce using rule 446 (expr)


State 1401

  451 expr: expr '?' "as" "type" '<' $@31 type_declaration '>' . $@32

    $default  reduce using rule 450 ($@32)

    $@32  go to state 1440


State 1402

   63 expression_else_one_liner: "else" expression_if_one_liner .

    $default  reduce using rule 63 (expression_else_one_liner)


State 1403

   67 expression_if_one_liner: expression_break .

    $default  reduce using rule 67 (expression_if_one_liner)


State 1404

   68 expression_if_one_liner: expression_continue .

    $default  reduce using rule 68 (expression_if_one_liner)


State 1405

   65 expression_if_one_liner: expression_return .

    $default  reduce using rule 65 (expression_if_one_liner)


State 1406

   66 expression_if_one_liner: expression_yield .

    $default  reduce using rule 66 (expression_if_one_liner)


State 1407

   64 expression_if_one_liner: expr .
  356 expr_method_call: expr . "->" "name" '(' ')'
  357                 | expr . "->" "name" '(' expr_list ')'
  367 expr_field: expr . '.' "name"
  368           | expr . '.' '.' "name"
  369           | expr . '.' "name" '(' ')'
  370           | expr . '.' "name" '(' expr_list ')'
  371           | expr . '.' basic_type_declaration '(' ')'
  372           | expr . '.' basic_type_declaration '(' expr_list ')'
  375           | expr . '.' $@25 error $@26
  397 expr: expr . "<<" expr
  398     | expr . ">>" expr
  399     | expr . "<<<" expr
  400     | expr . ">>>" expr
  401     | expr . '+' expr
  402     | expr . '-' expr
  403     | expr . '*' expr
  404     | expr . '/' expr
  405     | expr . '%' expr
  406     | expr . '<' expr
  407     | expr . '>' expr
  408     | expr . "==" expr
  409     | expr . "!=" expr
  410     | expr . "<=" expr
  411     | expr . ">=" expr
  412     | expr . '&' expr
  413     | expr . '|' expr
  414     | expr . '^' expr
  415     | expr . "&&" expr
  416     | expr . "||" expr
  417     | expr . "^^" expr
  418     | expr . ".." expr
  421     | expr . "++"
  422     | expr . "--"
  424     | expr . '[' expr ']'
  425     | expr . '.' '[' expr ']'
  426     | expr . "?[" expr ']'
  427     | expr . '.' "?[" expr ']'
  428     | expr . "?." "name"
  429     | expr . '.' "?." "name"
  436     | expr . "??" expr
  437     | expr . '?' expr ':' expr
  440     | expr . "is" "type" '<' $@27 type_declaration_no_options '>' $@28
  441     | expr . "is" basic_type_declaration
  442     | expr . "is" "name"
  443     | expr . "as" "name"
  446     | expr . "as" "type" '<' $@29 type_declaration '>' $@30
  447     | expr . "as" basic_type_declaration
  448     | expr . '?' "as" "name"
  451     | expr . '?' "as" "type" '<' $@31 type_declaration '>' $@32
  452     | expr . '?' "as" basic_type_declaration
  460     | expr . "<|" expr
  461     | expr . "|>" expr
  462     | expr . "|>" basic_type_declaration
  476 expr_mtag: expr . '.' "$f" '(' expr ')'
  477          | expr . "?." "$f" '(' expr ')'
  478          | expr . '.' '.' "$f" '(' expr ')'
  479          | expr . '.' "?." "$f" '(' expr ')'
  480          | expr . "as" "$f" '(' expr ')'
  481          | expr . '?' "as" "$f" '(' expr ')'
  482          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 603
    "as"   shift, and go to state 604
    "<<"   shift, and go to state 605
    ">>"   shift, and go to state 606
    "++"   shift, and go to state 607
    "--"   shift, and go to state 608
    "<="   shift, and go to state 609
    ">="   shift, and go to state 610
    "=="   shift, and go to state 611
    "!="   shift, and go to state 612
    "->"   shift, and go to state 613
    "??"   shift, and go to state 614
    "?."   shift, and go to state 615
    "?["   shift, and go to state 616
    "<|"   shift, and go to state 617
    "|>"   shift, and go to state 618
    "<<<"  shift, and go to state 619
    ">>>"  shift, and go to state 620
    "&&"   shift, and go to state 621
    "||"   shift, and go to state 622
    "^^"   shift, and go to state 623
    ".."   shift, and go to state 624
    '?'    shift, and go to state 625
    '|'    shift, and go to state 626
    '^'    shift, and go to state 627
    '&'    shift, and go to state 628
    '<'    shift, and go to state 629
    '>'    shift, and go to state 630
    '-'    shift, and go to state 631
    '+'    shift, and go to state 632
    '*'    shift, and go to state 633
    '/'    shift, and go to state 634
    '%'    shift, and go to state 635
    '.'    shift, and go to state 636
    '['    shift, and go to state 637

    $default  reduce using rule 64 (expression_if_one_liner)


State 1408

   75 expression_if_then_else_oneliner: expression_if_one_liner "if" '(' expr ')' expression_else_one_liner ';' .

    $default  reduce using rule 75 (expression_if_then_else_oneliner)


State 1409

   74 expression_if_then_else: $@2 if_or_static_if '(' expr ')' optional_semis expression_block . expression_else

    "else"         shift, and go to state 1441
    "elif"         shift, and go to state 1442
    "static_elif"  shift, and go to state 1443

    $default  reduce using rule 57 (expression_else)

    elif_or_static_elif  go to state 1444
    expression_else      go to state 1445


State 1410

   77 expression_for_loop: $@3 "for" '(' variable_name_with_pos_list "in" expr_list ')' . optional_semis expression_block

    ';'  shift, and go to state 171

    $default  reduce using rule 71 (optional_semis)

    semis           go to state 172
    optional_semis  go to state 1446


State 1411

   80 expression_while_loop: $@4 "while" '(' expr ')' optional_semis expression_block .

    $default  reduce using rule 80 (expression_while_loop)


State 1412

   82 expression_with: $@5 "with" '(' expr ')' optional_semis expression_block .

    $default  reduce using rule 82 (expression_with)


State 1413

  223 expression_block_finally: "finally" $@7 '{' expressions $@8 . '}'

    '}'  shift, and go to state 1447


State 1414

  288 tuple_expansion_variable_declaration: '(' tuple_expansion ')' ':' type_declaration_no_options . copy_or_move_or_clone expr ';'

    "<-"  shift, and go to state 537
    ":="  shift, and go to state 538
    '='   shift, and go to state 539

    copy_or_move_or_clone  go to state 1448


State 1415

  289 tuple_expansion_variable_declaration: '(' tuple_expansion ')' optional_ref copy_or_move_or_clone . expr ';'

    "struct"                          shift, and go to state 414
    "class"                           shift, and go to state 415
    "true"                            shift, and go to state 416
    "false"                           shift, and go to state 417
    "new"                             shift, and go to state 418
    "typeinfo"                        shift, and go to state 419
    "type"                            shift, and go to state 420
    "array"                           shift, and go to state 421
    "null"                            shift, and go to state 422
    "table"                           shift, and go to state 423
    "deref"                           shift, and go to state 424
    "cast"                            shift, and go to state 425
    "upcast"                          shift, and go to state 426
    "addr"                            shift, and go to state 427
    "reinterpret"                     shift, and go to state 428
    "unsafe"                          shift, and go to state 429
    "fixed_array"                     shift, and go to state 430
    "default"                         shift, and go to state 431
    "bool"                            shift, and go to state 228
    "void"                            shift, and go to state 229
    "string"                          shift, and go to state 230
    "int"                             shift, and go to state 232
    "int2"                            shift, and go to state 233
    "int3"                            shift, and go to state 234
    "int4"                            shift, and go to state 235
    "uint"                            shift, and go to state 236
    "bitfield"                        shift, and go to state 432
    "uint2"                           shift, and go to state 238
    "uint3"                           shift, and go to state 239
    "uint4"                           shift, and go to state 240
    "float"                           shift, and go to state 241
    "float2"                          shift, and go to state 242
    "float3"                          shift, and go to state 243
    "float4"                          shift, and go to state 244
    "range"                           shift, and go to state 245
    "urange"                          shift, and go to state 246
    "range64"                         shift, and go to state 247
    "urange64"                        shift, and go to state 248
    "int64"                           shift, and go to state 250
    "uint64"                          shift, and go to state 251
    "double"                          shift, and go to state 252
    "int8"                            shift, and go to state 255
    "uint8"                           shift, and go to state 256
    "int16"                           shift, and go to state 257
    "uint16"                          shift, and go to state 258
    "tuple"                           shift, and go to state 433
    "variant"                         shift, and go to state 434
    "generator"                       shift, and go to state 435
    "++"                              shift, and go to state 436
    "--"                              shift, and go to state 437
    "::"                              shift, and go to state 55
    "$$"                              shift, and go to state 438
    "$i"                              shift, and go to state 439
    "$v"                              shift, and go to state 440
    "$b"                              shift, and go to state 441
    "$a"                              shift, and go to state 442
    "$c"                              shift, and go to state 443
    "..."                             shift, and go to state 444
    "integer constant"                shift, and go to state 445
    "long integer constant"           shift, and go to state 446
    "unsigned integer constant"       shift, and go to state 447
    "unsigned long integer constant"  shift, and go to state 448
    "unsigned int8 constant"          shift, and go to state 449
    "floating point constant"         shift, and go to state 450
    "double constant"                 shift, and go to state 451
    "name"                            shift, and go to state 56
    "start of the string"             shift, and go to state 452
    '-'                               shift, and go to state 453
    '+'                               shift, and go to state 454
    '*'                               shift, and go to state 455
    '%'                               shift, and go to state 13
    '~'                               shift, and go to state 456
    '!'                               shift, and go to state 457
    '['                               shift, and go to state 458
    '('                               shift, and go to state 459
    '$'                               shift, and go to state 460
    '@'                               shift, and go to state 461
    '{'                               shift, and go to state 462

    string_builder          go to state 463
    expr_reader             go to state 464
    expr_call_pipe          go to state 465
    name_in_namespace       go to state 466
    expr_new                go to state 467
    expr_cast               go to state 468
    expr_type_decl          go to state 469
    expr_type_info          go to state 470
    block_or_lambda         go to state 471
    expr_full_block         go to state 472
    expr_numeric_const      go to state 473
    expr_named_call         go to state 474
    expr_method_call        go to state 475
    func_addr_expr          go to state 476
    expr_field              go to state 477
    expr_call               go to state 478
    expr                    go to state 1449
    expr_generator          go to state 480
    expr_mtag               go to state 481
    basic_type_declaration  go to state 482
    make_decl               go to state 483
    make_struct_decl        go to state 484
    make_tuple_call         go to state 485
    make_dim_decl           go to state 486
    make_table_decl         go to state 487
    array_comprehension     go to state 488


State 1416

  501 struct_variable_declaration_list: struct_variable_declaration_list optional_annotation_list "def" optional_public_or_private_member_variable "abstract" optional_constant $@34 function_declaration_header . ';'

    ';'  shift, and go to state 1450


State 1417

  503 struct_variable_declaration_list: struct_variable_declaration_list optional_annotation_list "def" optional_public_or_private_member_variable optional_static_member_variable optional_override optional_constant $@35 . function_declaration_header expression_block

    "operator"  shift, and go to state 177
    "bool"      shift, and go to state 178
    "string"    shift, and go to state 179
    "int"       shift, and go to state 180
    "int2"      shift, and go to state 181
    "int3"      shift, and go to state 182
    "int4"      shift, and go to state 183
    "uint"      shift, and go to state 184
    "uint2"     shift, and go to state 185
    "uint3"     shift, and go to state 186
    "uint4"     shift, and go to state 187
    "float"     shift, and go to state 188
    "float2"    shift, and go to state 189
    "float3"    shift, and go to state 190
    "float4"    shift, and go to state 191
    "range"     shift, and go to state 192
    "urange"    shift, and go to state 193
    "range64"   shift, and go to state 194
    "urange64"  shift, and go to state 195
    "int64"     shift, and go to state 196
    "uint64"    shift, and go to state 197
    "double"    shift, and go to state 198
    "int8"      shift, and go to state 199
    "uint8"     shift, and go to state 200
    "int16"     shift, and go to state 201
    "uint16"    shift, and go to state 202
    "++"        shift, and go to state 203
    "--"        shift, and go to state 204
    "name"      shift, and go to state 205

    function_name                go to state 206
    function_declaration_header  go to state 1451


State 1418

  759 make_struct_dim_list: '(' . make_struct_fields ')'

    "$f"    shift, and go to state 786
    "name"  shift, and go to state 1003

    make_struct_fields  go to state 1452


State 1419

  751 make_struct_fields: make_struct_fields . ',' "name" copy_or_move expr
  752                   | make_struct_fields . ',' "name" ":=" expr
  755                   | make_struct_fields . ',' "$f" '(' expr ')' copy_or_move expr
  756                   | make_struct_fields . ',' "$f" '(' expr ')' ":=" expr
  761 make_struct_dim_decl: make_struct_fields .

    ','  shift, and go to state 1012

    $default  reduce using rule 761 (make_struct_dim_decl)


State 1420

  760 make_struct_dim_list: make_struct_dim_list . ',' '(' make_struct_fields ')'
  762 make_struct_dim_decl: make_struct_dim_list . optional_comma

    ','  shift, and go to state 1453

    $default  reduce using rule 811 (optional_comma)

    optional_comma  go to state 1454


State 1421

  763 optional_make_struct_dim_decl: make_struct_dim_decl .

    $default  reduce using rule 763 (optional_make_struct_dim_decl)


State 1422

  769 make_struct_decl: "struct" '<' $@85 type_declaration_no_options '>' $@86 '(' use_initializer optional_make_struct_dim_decl . ')'

    ')'  shift, and go to state 1455


State 1423

  772 make_struct_decl: "class" '<' $@87 type_declaration_no_options '>' $@88 '(' use_initializer optional_make_struct_dim_decl . ')'

    ')'  shift, and go to state 1456


State 1424

  307 expr_type_info: "typeinfo" name_in_namespace '<' "name" c_or_s "name" '>' '(' expr . ')'
  356 expr_method_call: expr . "->" "name" '(' ')'
  357                 | expr . "->" "name" '(' expr_list ')'
  367 expr_field: expr . '.' "name"
  368           | expr . '.' '.' "name"
  369           | expr . '.' "name" '(' ')'
  370           | expr . '.' "name" '(' expr_list ')'
  371           | expr . '.' basic_type_declaration '(' ')'
  372           | expr . '.' basic_type_declaration '(' expr_list ')'
  375           | expr . '.' $@25 error $@26
  397 expr: expr . "<<" expr
  398     | expr . ">>" expr
  399     | expr . "<<<" expr
  400     | expr . ">>>" expr
  401     | expr . '+' expr
  402     | expr . '-' expr
  403     | expr . '*' expr
  404     | expr . '/' expr
  405     | expr . '%' expr
  406     | expr . '<' expr
  407     | expr . '>' expr
  408     | expr . "==" expr
  409     | expr . "!=" expr
  410     | expr . "<=" expr
  411     | expr . ">=" expr
  412     | expr . '&' expr
  413     | expr . '|' expr
  414     | expr . '^' expr
  415     | expr . "&&" expr
  416     | expr . "||" expr
  417     | expr . "^^" expr
  418     | expr . ".." expr
  421     | expr . "++"
  422     | expr . "--"
  424     | expr . '[' expr ']'
  425     | expr . '.' '[' expr ']'
  426     | expr . "?[" expr ']'
  427     | expr . '.' "?[" expr ']'
  428     | expr . "?." "name"
  429     | expr . '.' "?." "name"
  436     | expr . "??" expr
  437     | expr . '?' expr ':' expr
  440     | expr . "is" "type" '<' $@27 type_declaration_no_options '>' $@28
  441     | expr . "is" basic_type_declaration
  442     | expr . "is" "name"
  443     | expr . "as" "name"
  446     | expr . "as" "type" '<' $@29 type_declaration '>' $@30
  447     | expr . "as" basic_type_declaration
  448     | expr . '?' "as" "name"
  451     | expr . '?' "as" "type" '<' $@31 type_declaration '>' $@32
  452     | expr . '?' "as" basic_type_declaration
  460     | expr . "<|" expr
  461     | expr . "|>" expr
  462     | expr . "|>" basic_type_declaration
  476 expr_mtag: expr . '.' "$f" '(' expr ')'
  477          | expr . "?." "$f" '(' expr ')'
  478          | expr . '.' '.' "$f" '(' expr ')'
  479          | expr . '.' "?." "$f" '(' expr ')'
  480          | expr . "as" "$f" '(' expr ')'
  481          | expr . '?' "as" "$f" '(' expr ')'
  482          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 603
    "as"   shift, and go to state 604
    "<<"   shift, and go to state 605
    ">>"   shift, and go to state 606
    "++"   shift, and go to state 607
    "--"   shift, and go to state 608
    "<="   shift, and go to state 609
    ">="   shift, and go to state 610
    "=="   shift, and go to state 611
    "!="   shift, and go to state 612
    "->"   shift, and go to state 613
    "??"   shift, and go to state 614
    "?."   shift, and go to state 615
    "?["   shift, and go to state 616
    "<|"   shift, and go to state 617
    "|>"   shift, and go to state 618
    "<<<"  shift, and go to state 619
    ">>>"  shift, and go to state 620
    "&&"   shift, and go to state 621
    "||"   shift, and go to state 622
    "^^"   shift, and go to state 623
    ".."   shift, and go to state 624
    '?'    shift, and go to state 625
    '|'    shift, and go to state 626
    '^'    shift, and go to state 627
    '&'    shift, and go to state 628
    '<'    shift, and go to state 629
    '>'    shift, and go to state 630
    '-'    shift, and go to state 631
    '+'    shift, and go to state 632
    '*'    shift, and go to state 633
    '/'    shift, and go to state 634
    '%'    shift, and go to state 635
    '.'    shift, and go to state 636
    '['    shift, and go to state 637
    ')'    shift, and go to state 1457


State 1425

  788 make_dim_decl: "array" "struct" '<' $@95 type_declaration_no_options '>' $@96 '(' use_initializer . optional_make_struct_dim_decl ')'

    "$f"    shift, and go to state 786
    "name"  shift, and go to state 1003
    '('     shift, and go to state 1418

    $default  reduce using rule 764 (optional_make_struct_dim_decl)

    make_struct_fields             go to state 1419
    make_struct_dim_list           go to state 1420
    make_struct_dim_decl           go to state 1421
    optional_make_struct_dim_decl  go to state 1458


State 1426

  791 make_dim_decl: "array" "tuple" '<' $@97 type_declaration_no_options '>' $@98 '(' use_initializer . optional_make_struct_dim_decl ')'

    "$f"    shift, and go to state 786
    "name"  shift, and go to state 1003
    '('     shift, and go to state 1418

    $default  reduce using rule 764 (optional_make_struct_dim_decl)

    make_struct_fields             go to state 1419
    make_struct_dim_list           go to state 1420
    make_struct_dim_decl           go to state 1421
    optional_make_struct_dim_decl  go to state 1459


State 1427

  794 make_dim_decl: "array" "variant" '<' $@99 type_declaration_no_options '>' $@100 '(' make_variant_dim . ')'

    ')'  shift, and go to state 1460


State 1428

  798 make_dim_decl: "array" '<' $@101 type_declaration_no_options '>' $@102 '(' optional_expr_list ')' .

    $default  reduce using rule 798 (make_dim_decl)


State 1429

  808 make_table_decl: "table" '<' type_declaration_no_options c_or_s type_declaration_no_options '>' '(' optional_expr_map_tuple_list ')' .

    $default  reduce using rule 808 (make_table_decl)


State 1430

  802 make_dim_decl: "fixed_array" '<' $@103 type_declaration_no_options '>' $@104 '(' expr_list optional_comma . ')'

    ')'  shift, and go to state 1461


State 1431

  784 make_tuple_call: "tuple" '<' $@93 type_declaration_no_options '>' $@94 '(' use_initializer optional_make_struct_dim_decl . ')'

    ')'  shift, and go to state 1462


State 1432

  775 make_struct_decl: "variant" '<' $@89 type_declaration_no_options '>' $@90 '(' make_variant_dim ')' .

    $default  reduce using rule 775 (make_struct_decl)


State 1433

  356 expr_method_call: expr . "->" "name" '(' ')'
  357                 | expr . "->" "name" '(' expr_list ')'
  367 expr_field: expr . '.' "name"
  368           | expr . '.' '.' "name"
  369           | expr . '.' "name" '(' ')'
  370           | expr . '.' "name" '(' expr_list ')'
  371           | expr . '.' basic_type_declaration '(' ')'
  372           | expr . '.' basic_type_declaration '(' expr_list ')'
  375           | expr . '.' $@25 error $@26
  397 expr: expr . "<<" expr
  398     | expr . ">>" expr
  399     | expr . "<<<" expr
  400     | expr . ">>>" expr
  401     | expr . '+' expr
  402     | expr . '-' expr
  403     | expr . '*' expr
  404     | expr . '/' expr
  405     | expr . '%' expr
  406     | expr . '<' expr
  407     | expr . '>' expr
  408     | expr . "==" expr
  409     | expr . "!=" expr
  410     | expr . "<=" expr
  411     | expr . ">=" expr
  412     | expr . '&' expr
  413     | expr . '|' expr
  414     | expr . '^' expr
  415     | expr . "&&" expr
  416     | expr . "||" expr
  417     | expr . "^^" expr
  418     | expr . ".." expr
  421     | expr . "++"
  422     | expr . "--"
  424     | expr . '[' expr ']'
  425     | expr . '.' '[' expr ']'
  426     | expr . "?[" expr ']'
  427     | expr . '.' "?[" expr ']'
  428     | expr . "?." "name"
  429     | expr . '.' "?." "name"
  436     | expr . "??" expr
  437     | expr . '?' expr ':' expr
  440     | expr . "is" "type" '<' $@27 type_declaration_no_options '>' $@28
  441     | expr . "is" basic_type_declaration
  442     | expr . "is" "name"
  443     | expr . "as" "name"
  446     | expr . "as" "type" '<' $@29 type_declaration '>' $@30
  447     | expr . "as" basic_type_declaration
  448     | expr . '?' "as" "name"
  451     | expr . '?' "as" "type" '<' $@31 type_declaration '>' $@32
  452     | expr . '?' "as" basic_type_declaration
  460     | expr . "<|" expr
  461     | expr . "|>" expr
  462     | expr . "|>" basic_type_declaration
  476 expr_mtag: expr . '.' "$f" '(' expr ')'
  477          | expr . "?." "$f" '(' expr ')'
  478          | expr . '.' '.' "$f" '(' expr ')'
  479          | expr . '.' "?." "$f" '(' expr ')'
  480          | expr . "as" "$f" '(' expr ')'
  481          | expr . '?' "as" "$f" '(' expr ')'
  482          | expr . "is" "$f" '(' expr ')'
  813 array_comprehension: '[' "for" '(' variable_name_with_pos_list "in" expr_list ')' ';' expr . array_comprehension_where ']'

    "is"   shift, and go to state 603
    "as"   shift, and go to state 604
    "<<"   shift, and go to state 605
    ">>"   shift, and go to state 606
    "++"   shift, and go to state 607
    "--"   shift, and go to state 608
    "<="   shift, and go to state 609
    ">="   shift, and go to state 610
    "=="   shift, and go to state 611
    "!="   shift, and go to state 612
    "->"   shift, and go to state 613
    "??"   shift, and go to state 614
    "?."   shift, and go to state 615
    "?["   shift, and go to state 616
    "<|"   shift, and go to state 617
    "|>"   shift, and go to state 618
    "<<<"  shift, and go to state 619
    ">>>"  shift, and go to state 620
    "&&"   shift, and go to state 621
    "||"   shift, and go to state 622
    "^^"   shift, and go to state 623
    ".."   shift, and go to state 624
    '?'    shift, and go to state 625
    '|'    shift, and go to state 626
    '^'    shift, and go to state 627
    '&'    shift, and go to state 628
    '<'    shift, and go to state 629
    '>'    shift, and go to state 630
    '-'    shift, and go to state 631
    '+'    shift, and go to state 632
    '*'    shift, and go to state 633
    '/'    shift, and go to state 634
    '%'    shift, and go to state 635
    '.'    shift, and go to state 636
    '['    shift, and go to state 637
    ';'    shift, and go to state 1463

    $default  reduce using rule 809 (array_comprehension_where)

    array_comprehension_where  go to state 1464


State 1434

  814 array_comprehension: '[' "iterator" "for" '(' variable_name_with_pos_list "in" expr_list ')' ';' . expr array_comprehension_where ']'

    "struct"                          shift, and go to state 414
    "class"                           shift, and go to state 415
    "true"                            shift, and go to state 416
    "false"                           shift, and go to state 417
    "new"                             shift, and go to state 418
    "typeinfo"                        shift, and go to state 419
    "type"                            shift, and go to state 420
    "array"                           shift, and go to state 421
    "null"                            shift, and go to state 422
    "table"                           shift, and go to state 423
    "deref"                           shift, and go to state 424
    "cast"                            shift, and go to state 425
    "upcast"                          shift, and go to state 426
    "addr"                            shift, and go to state 427
    "reinterpret"                     shift, and go to state 428
    "unsafe"                          shift, and go to state 429
    "fixed_array"                     shift, and go to state 430
    "default"                         shift, and go to state 431
    "bool"                            shift, and go to state 228
    "void"                            shift, and go to state 229
    "string"                          shift, and go to state 230
    "int"                             shift, and go to state 232
    "int2"                            shift, and go to state 233
    "int3"                            shift, and go to state 234
    "int4"                            shift, and go to state 235
    "uint"                            shift, and go to state 236
    "bitfield"                        shift, and go to state 432
    "uint2"                           shift, and go to state 238
    "uint3"                           shift, and go to state 239
    "uint4"                           shift, and go to state 240
    "float"                           shift, and go to state 241
    "float2"                          shift, and go to state 242
    "float3"                          shift, and go to state 243
    "float4"                          shift, and go to state 244
    "range"                           shift, and go to state 245
    "urange"                          shift, and go to state 246
    "range64"                         shift, and go to state 247
    "urange64"                        shift, and go to state 248
    "int64"                           shift, and go to state 250
    "uint64"                          shift, and go to state 251
    "double"                          shift, and go to state 252
    "int8"                            shift, and go to state 255
    "uint8"                           shift, and go to state 256
    "int16"                           shift, and go to state 257
    "uint16"                          shift, and go to state 258
    "tuple"                           shift, and go to state 433
    "variant"                         shift, and go to state 434
    "generator"                       shift, and go to state 435
    "++"                              shift, and go to state 436
    "--"                              shift, and go to state 437
    "::"                              shift, and go to state 55
    "$$"                              shift, and go to state 438
    "$i"                              shift, and go to state 439
    "$v"                              shift, and go to state 440
    "$b"                              shift, and go to state 441
    "$a"                              shift, and go to state 442
    "$c"                              shift, and go to state 443
    "..."                             shift, and go to state 444
    "integer constant"                shift, and go to state 445
    "long integer constant"           shift, and go to state 446
    "unsigned integer constant"       shift, and go to state 447
    "unsigned long integer constant"  shift, and go to state 448
    "unsigned int8 constant"          shift, and go to state 449
    "floating point constant"         shift, and go to state 450
    "double constant"                 shift, and go to state 451
    "name"                            shift, and go to state 56
    "start of the string"             shift, and go to state 452
    '-'                               shift, and go to state 453
    '+'                               shift, and go to state 454
    '*'                               shift, and go to state 455
    '%'                               shift, and go to state 13
    '~'                               shift, and go to state 456
    '!'                               shift, and go to state 457
    '['                               shift, and go to state 458
    '('                               shift, and go to state 459
    '$'                               shift, and go to state 460
    '@'                               shift, and go to state 461
    '{'                               shift, and go to state 462

    string_builder          go to state 463
    expr_reader             go to state 464
    expr_call_pipe          go to state 465
    name_in_namespace       go to state 466
    expr_new                go to state 467
    expr_cast               go to state 468
    expr_type_decl          go to state 469
    expr_type_info          go to state 470
    block_or_lambda         go to state 471
    expr_full_block         go to state 472
    expr_numeric_const      go to state 473
    expr_named_call         go to state 474
    expr_method_call        go to state 475
    func_addr_expr          go to state 476
    expr_field              go to state 477
    expr_call               go to state 478
    expr                    go to state 1465
    expr_generator          go to state 480
    expr_mtag               go to state 481
    basic_type_declaration  go to state 482
    make_decl               go to state 483
    make_struct_decl        go to state 484
    make_tuple_call         go to state 485
    make_dim_decl           go to state 486
    make_table_decl         go to state 487
    array_comprehension     go to state 488


State 1435

  366 func_addr_expr: '@' '@' '<' $@23 optional_function_argument_list optional_function_type '>' $@24 func_addr_name .

    $default  reduce using rule 366 (func_addr_expr)


State 1436

  815 array_comprehension: '{' "for" '(' variable_name_with_pos_list "in" expr_list ')' ';' make_map_tuple . array_comprehension_where '}'

    ';'  shift, and go to state 1463

    $default  reduce using rule 809 (array_comprehension_where)

    array_comprehension_where  go to state 1466


State 1437

  756 make_struct_fields: make_struct_fields ',' "$f" '(' expr ')' ":=" . expr

    "struct"                          shift, and go to state 414
    "class"                           shift, and go to state 415
    "true"                            shift, and go to state 416
    "false"                           shift, and go to state 417
    "new"                             shift, and go to state 418
    "typeinfo"                        shift, and go to state 419
    "type"                            shift, and go to state 420
    "array"                           shift, and go to state 421
    "null"                            shift, and go to state 422
    "table"                           shift, and go to state 423
    "deref"                           shift, and go to state 424
    "cast"                            shift, and go to state 425
    "upcast"                          shift, and go to state 426
    "addr"                            shift, and go to state 427
    "reinterpret"                     shift, and go to state 428
    "unsafe"                          shift, and go to state 429
    "fixed_array"                     shift, and go to state 430
    "default"                         shift, and go to state 431
    "bool"                            shift, and go to state 228
    "void"                            shift, and go to state 229
    "string"                          shift, and go to state 230
    "int"                             shift, and go to state 232
    "int2"                            shift, and go to state 233
    "int3"                            shift, and go to state 234
    "int4"                            shift, and go to state 235
    "uint"                            shift, and go to state 236
    "bitfield"                        shift, and go to state 432
    "uint2"                           shift, and go to state 238
    "uint3"                           shift, and go to state 239
    "uint4"                           shift, and go to state 240
    "float"                           shift, and go to state 241
    "float2"                          shift, and go to state 242
    "float3"                          shift, and go to state 243
    "float4"                          shift, and go to state 244
    "range"                           shift, and go to state 245
    "urange"                          shift, and go to state 246
    "range64"                         shift, and go to state 247
    "urange64"                        shift, and go to state 248
    "int64"                           shift, and go to state 250
    "uint64"                          shift, and go to state 251
    "double"                          shift, and go to state 252
    "int8"                            shift, and go to state 255
    "uint8"                           shift, and go to state 256
    "int16"                           shift, and go to state 257
    "uint16"                          shift, and go to state 258
    "tuple"                           shift, and go to state 433
    "variant"                         shift, and go to state 434
    "generator"                       shift, and go to state 435
    "++"                              shift, and go to state 436
    "--"                              shift, and go to state 437
    "::"                              shift, and go to state 55
    "$$"                              shift, and go to state 438
    "$i"                              shift, and go to state 439
    "$v"                              shift, and go to state 440
    "$b"                              shift, and go to state 441
    "$a"                              shift, and go to state 442
    "$c"                              shift, and go to state 443
    "..."                             shift, and go to state 444
    "integer constant"                shift, and go to state 445
    "long integer constant"           shift, and go to state 446
    "unsigned integer constant"       shift, and go to state 447
    "unsigned long integer constant"  shift, and go to state 448
    "unsigned int8 constant"          shift, and go to state 449
    "floating point constant"         shift, and go to state 450
    "double constant"                 shift, and go to state 451
    "name"                            shift, and go to state 56
    "start of the string"             shift, and go to state 452
    '-'                               shift, and go to state 453
    '+'                               shift, and go to state 454
    '*'                               shift, and go to state 455
    '%'                               shift, and go to state 13
    '~'                               shift, and go to state 456
    '!'                               shift, and go to state 457
    '['                               shift, and go to state 458
    '('                               shift, and go to state 459
    '$'                               shift, and go to state 460
    '@'                               shift, and go to state 461
    '{'                               shift, and go to state 462

    string_builder          go to state 463
    expr_reader             go to state 464
    expr_call_pipe          go to state 465
    name_in_namespace       go to state 466
    expr_new                go to state 467
    expr_cast               go to state 468
    expr_type_decl          go to state 469
    expr_type_info          go to state 470
    block_or_lambda         go to state 471
    expr_full_block         go to state 472
    expr_numeric_const      go to state 473
    expr_named_call         go to state 474
    expr_method_call        go to state 475
    func_addr_expr          go to state 476
    expr_field              go to state 477
    expr_call               go to state 478
    expr                    go to state 1467
    expr_generator          go to state 480
    expr_mtag               go to state 481
    basic_type_declaration  go to state 482
    make_decl               go to state 483
    make_struct_decl        go to state 484
    make_tuple_call         go to state 485
    make_dim_decl           go to state 486
    make_table_decl         go to state 487
    array_comprehension     go to state 488


State 1438

  755 make_struct_fields: make_struct_fields ',' "$f" '(' expr ')' copy_or_move . expr

    "struct"                          shift, and go to state 414
    "class"                           shift, and go to state 415
    "true"                            shift, and go to state 416
    "false"                           shift, and go to state 417
    "new"                             shift, and go to state 418
    "typeinfo"                        shift, and go to state 419
    "type"                            shift, and go to state 420
    "array"                           shift, and go to state 421
    "null"                            shift, and go to state 422
    "table"                           shift, and go to state 423
    "deref"                           shift, and go to state 424
    "cast"                            shift, and go to state 425
    "upcast"                          shift, and go to state 426
    "addr"                            shift, and go to state 427
    "reinterpret"                     shift, and go to state 428
    "unsafe"                          shift, and go to state 429
    "fixed_array"                     shift, and go to state 430
    "default"                         shift, and go to state 431
    "bool"                            shift, and go to state 228
    "void"                            shift, and go to state 229
    "string"                          shift, and go to state 230
    "int"                             shift, and go to state 232
    "int2"                            shift, and go to state 233
    "int3"                            shift, and go to state 234
    "int4"                            shift, and go to state 235
    "uint"                            shift, and go to state 236
    "bitfield"                        shift, and go to state 432
    "uint2"                           shift, and go to state 238
    "uint3"                           shift, and go to state 239
    "uint4"                           shift, and go to state 240
    "float"                           shift, and go to state 241
    "float2"                          shift, and go to state 242
    "float3"                          shift, and go to state 243
    "float4"                          shift, and go to state 244
    "range"                           shift, and go to state 245
    "urange"                          shift, and go to state 246
    "range64"                         shift, and go to state 247
    "urange64"                        shift, and go to state 248
    "int64"                           shift, and go to state 250
    "uint64"                          shift, and go to state 251
    "double"                          shift, and go to state 252
    "int8"                            shift, and go to state 255
    "uint8"                           shift, and go to state 256
    "int16"                           shift, and go to state 257
    "uint16"                          shift, and go to state 258
    "tuple"                           shift, and go to state 433
    "variant"                         shift, and go to state 434
    "generator"                       shift, and go to state 435
    "++"                              shift, and go to state 436
    "--"                              shift, and go to state 437
    "::"                              shift, and go to state 55
    "$$"                              shift, and go to state 438
    "$i"                              shift, and go to state 439
    "$v"                              shift, and go to state 440
    "$b"                              shift, and go to state 441
    "$a"                              shift, and go to state 442
    "$c"                              shift, and go to state 443
    "..."                             shift, and go to state 444
    "integer constant"                shift, and go to state 445
    "long integer constant"           shift, and go to state 446
    "unsigned integer constant"       shift, and go to state 447
    "unsigned long integer constant"  shift, and go to state 448
    "unsigned int8 constant"          shift, and go to state 449
    "floating point constant"         shift, and go to state 450
    "double constant"                 shift, and go to state 451
    "name"                            shift, and go to state 56
    "start of the string"             shift, and go to state 452
    '-'                               shift, and go to state 453
    '+'                               shift, and go to state 454
    '*'                               shift, and go to state 455
    '%'                               shift, and go to state 13
    '~'                               shift, and go to state 456
    '!'                               shift, and go to state 457
    '['                               shift, and go to state 458
    '('                               shift, and go to state 459
    '$'                               shift, and go to state 460
    '@'                               shift, and go to state 461
    '{'                               shift, and go to state 462

    string_builder          go to state 463
    expr_reader             go to state 464
    expr_call_pipe          go to state 465
    name_in_namespace       go to state 466
    expr_new                go to state 467
    expr_cast               go to state 468
    expr_type_decl          go to state 469
    expr_type_info          go to state 470
    block_or_lambda         go to state 471
    expr_full_block         go to state 472
    expr_numeric_const      go to state 473
    expr_named_call         go to state 474
    expr_method_call        go to state 475
    func_addr_expr          go to state 476
    expr_field              go to state 477
    expr_call               go to state 478
    expr                    go to state 1468
    expr_generator          go to state 480
    expr_mtag               go to state 481
    basic_type_declaration  go to state 482
    make_decl               go to state 483
    make_struct_decl        go to state 484
    make_tuple_call         go to state 485
    make_dim_decl           go to state 486
    make_table_decl         go to state 487
    array_comprehension     go to state 488


State 1439

  312 block_or_simple_block: "=>" "<-" expr .
  356 expr_method_call: expr . "->" "name" '(' ')'
  357                 | expr . "->" "name" '(' expr_list ')'
  367 expr_field: expr . '.' "name"
  368           | expr . '.' '.' "name"
  369           | expr . '.' "name" '(' ')'
  370           | expr . '.' "name" '(' expr_list ')'
  371           | expr . '.' basic_type_declaration '(' ')'
  372           | expr . '.' basic_type_declaration '(' expr_list ')'
  375           | expr . '.' $@25 error $@26
  397 expr: expr . "<<" expr
  398     | expr . ">>" expr
  399     | expr . "<<<" expr
  400     | expr . ">>>" expr
  401     | expr . '+' expr
  402     | expr . '-' expr
  403     | expr . '*' expr
  404     | expr . '/' expr
  405     | expr . '%' expr
  406     | expr . '<' expr
  407     | expr . '>' expr
  408     | expr . "==" expr
  409     | expr . "!=" expr
  410     | expr . "<=" expr
  411     | expr . ">=" expr
  412     | expr . '&' expr
  413     | expr . '|' expr
  414     | expr . '^' expr
  415     | expr . "&&" expr
  416     | expr . "||" expr
  417     | expr . "^^" expr
  418     | expr . ".." expr
  421     | expr . "++"
  422     | expr . "--"
  424     | expr . '[' expr ']'
  425     | expr . '.' '[' expr ']'
  426     | expr . "?[" expr ']'
  427     | expr . '.' "?[" expr ']'
  428     | expr . "?." "name"
  429     | expr . '.' "?." "name"
  436     | expr . "??" expr
  437     | expr . '?' expr ':' expr
  440     | expr . "is" "type" '<' $@27 type_declaration_no_options '>' $@28
  441     | expr . "is" basic_type_declaration
  442     | expr . "is" "name"
  443     | expr . "as" "name"
  446     | expr . "as" "type" '<' $@29 type_declaration '>' $@30
  447     | expr . "as" basic_type_declaration
  448     | expr . '?' "as" "name"
  451     | expr . '?' "as" "type" '<' $@31 type_declaration '>' $@32
  452     | expr . '?' "as" basic_type_declaration
  460     | expr . "<|" expr
  461     | expr . "|>" expr
  462     | expr . "|>" basic_type_declaration
  476 expr_mtag: expr . '.' "$f" '(' expr ')'
  477          | expr . "?." "$f" '(' expr ')'
  478          | expr . '.' '.' "$f" '(' expr ')'
  479          | expr . '.' "?." "$f" '(' expr ')'
  480          | expr . "as" "$f" '(' expr ')'
  481          | expr . '?' "as" "$f" '(' expr ')'
  482          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 603
    "as"   shift, and go to state 604
    "<<"   shift, and go to state 605
    ">>"   shift, and go to state 606
    "++"   shift, and go to state 607
    "--"   shift, and go to state 608
    "<="   shift, and go to state 609
    ">="   shift, and go to state 610
    "=="   shift, and go to state 611
    "!="   shift, and go to state 612
    "->"   shift, and go to state 613
    "??"   shift, and go to state 614
    "?."   shift, and go to state 615
    "?["   shift, and go to state 616
    "<|"   shift, and go to state 617
    "|>"   shift, and go to state 618
    "<<<"  shift, and go to state 619
    ">>>"  shift, and go to state 620
    "&&"   shift, and go to state 621
    "||"   shift, and go to state 622
    "^^"   shift, and go to state 623
    '?'    shift, and go to state 625
    '|'    shift, and go to state 626
    '^'    shift, and go to state 627
    '&'    shift, and go to state 628
    '<'    shift, and go to state 629
    '>'    shift, and go to state 630
    '-'    shift, and go to state 631
    '+'    shift, and go to state 632
    '*'    shift, and go to state 633
    '/'    shift, and go to state 634
    '%'    shift, and go to state 635
    '.'    shift, and go to state 636
    '['    shift, and go to state 637

    $default  reduce using rule 312 (block_or_simple_block)


State 1440

  451 expr: expr '?' "as" "type" '<' $@31 type_declaration '>' $@32 .

    $default  reduce using rule 451 (expr)


State 1441

   58 expression_else: "else" . optional_semis expression_block

    ';'  shift, and go to state 171

    $default  reduce using rule 71 (optional_semis)

    semis           go to state 172
    optional_semis  go to state 1469


State 1442

   55 elif_or_static_elif: "elif" .

    $default  reduce using rule 55 (elif_or_static_elif)


State 1443

   56 elif_or_static_elif: "static_elif" .

    $default  reduce using rule 56 (elif_or_static_elif)


State 1444

   59 expression_else: elif_or_static_elif . '(' expr ')' optional_semis expression_block expression_else

    '('  shift, and go to state 1470


State 1445

   74 expression_if_then_else: $@2 if_or_static_if '(' expr ')' optional_semis expression_block expression_else .

    $default  reduce using rule 74 (expression_if_then_else)


State 1446

   77 expression_for_loop: $@3 "for" '(' variable_name_with_pos_list "in" expr_list ')' optional_semis . expression_block

    $default  reduce using rule 224 ($@9)

    expression_block  go to state 1471
    $@9               go to state 332


State 1447

  223 expression_block_finally: "finally" $@7 '{' expressions $@8 '}' .

    $default  reduce using rule 223 (expression_block_finally)


State 1448

  288 tuple_expansion_variable_declaration: '(' tuple_expansion ')' ':' type_declaration_no_options copy_or_move_or_clone . expr ';'

    "struct"                          shift, and go to state 414
    "class"                           shift, and go to state 415
    "true"                            shift, and go to state 416
    "false"                           shift, and go to state 417
    "new"                             shift, and go to state 418
    "typeinfo"                        shift, and go to state 419
    "type"                            shift, and go to state 420
    "array"                           shift, and go to state 421
    "null"                            shift, and go to state 422
    "table"                           shift, and go to state 423
    "deref"                           shift, and go to state 424
    "cast"                            shift, and go to state 425
    "upcast"                          shift, and go to state 426
    "addr"                            shift, and go to state 427
    "reinterpret"                     shift, and go to state 428
    "unsafe"                          shift, and go to state 429
    "fixed_array"                     shift, and go to state 430
    "default"                         shift, and go to state 431
    "bool"                            shift, and go to state 228
    "void"                            shift, and go to state 229
    "string"                          shift, and go to state 230
    "int"                             shift, and go to state 232
    "int2"                            shift, and go to state 233
    "int3"                            shift, and go to state 234
    "int4"                            shift, and go to state 235
    "uint"                            shift, and go to state 236
    "bitfield"                        shift, and go to state 432
    "uint2"                           shift, and go to state 238
    "uint3"                           shift, and go to state 239
    "uint4"                           shift, and go to state 240
    "float"                           shift, and go to state 241
    "float2"                          shift, and go to state 242
    "float3"                          shift, and go to state 243
    "float4"                          shift, and go to state 244
    "range"                           shift, and go to state 245
    "urange"                          shift, and go to state 246
    "range64"                         shift, and go to state 247
    "urange64"                        shift, and go to state 248
    "int64"                           shift, and go to state 250
    "uint64"                          shift, and go to state 251
    "double"                          shift, and go to state 252
    "int8"                            shift, and go to state 255
    "uint8"                           shift, and go to state 256
    "int16"                           shift, and go to state 257
    "uint16"                          shift, and go to state 258
    "tuple"                           shift, and go to state 433
    "variant"                         shift, and go to state 434
    "generator"                       shift, and go to state 435
    "++"                              shift, and go to state 436
    "--"                              shift, and go to state 437
    "::"                              shift, and go to state 55
    "$$"                              shift, and go to state 438
    "$i"                              shift, and go to state 439
    "$v"                              shift, and go to state 440
    "$b"                              shift, and go to state 441
    "$a"                              shift, and go to state 442
    "$c"                              shift, and go to state 443
    "..."                             shift, and go to state 444
    "integer constant"                shift, and go to state 445
    "long integer constant"           shift, and go to state 446
    "unsigned integer constant"       shift, and go to state 447
    "unsigned long integer constant"  shift, and go to state 448
    "unsigned int8 constant"          shift, and go to state 449
    "floating point constant"         shift, and go to state 450
    "double constant"                 shift, and go to state 451
    "name"                            shift, and go to state 56
    "start of the string"             shift, and go to state 452
    '-'                               shift, and go to state 453
    '+'                               shift, and go to state 454
    '*'                               shift, and go to state 455
    '%'                               shift, and go to state 13
    '~'                               shift, and go to state 456
    '!'                               shift, and go to state 457
    '['                               shift, and go to state 458
    '('                               shift, and go to state 459
    '$'                               shift, and go to state 460
    '@'                               shift, and go to state 461
    '{'                               shift, and go to state 462

    string_builder          go to state 463
    expr_reader             go to state 464
    expr_call_pipe          go to state 465
    name_in_namespace       go to state 466
    expr_new                go to state 467
    expr_cast               go to state 468
    expr_type_decl          go to state 469
    expr_type_info          go to state 470
    block_or_lambda         go to state 471
    expr_full_block         go to state 472
    expr_numeric_const      go to state 473
    expr_named_call         go to state 474
    expr_method_call        go to state 475
    func_addr_expr          go to state 476
    expr_field              go to state 477
    expr_call               go to state 478
    expr                    go to state 1472
    expr_generator          go to state 480
    expr_mtag               go to state 481
    basic_type_declaration  go to state 482
    make_decl               go to state 483
    make_struct_decl        go to state 484
    make_tuple_call         go to state 485
    make_dim_decl           go to state 486
    make_table_decl         go to state 487
    array_comprehension     go to state 488


State 1449

  289 tuple_expansion_variable_declaration: '(' tuple_expansion ')' optional_ref copy_or_move_or_clone expr . ';'
  356 expr_method_call: expr . "->" "name" '(' ')'
  357                 | expr . "->" "name" '(' expr_list ')'
  367 expr_field: expr . '.' "name"
  368           | expr . '.' '.' "name"
  369           | expr . '.' "name" '(' ')'
  370           | expr . '.' "name" '(' expr_list ')'
  371           | expr . '.' basic_type_declaration '(' ')'
  372           | expr . '.' basic_type_declaration '(' expr_list ')'
  375           | expr . '.' $@25 error $@26
  397 expr: expr . "<<" expr
  398     | expr . ">>" expr
  399     | expr . "<<<" expr
  400     | expr . ">>>" expr
  401     | expr . '+' expr
  402     | expr . '-' expr
  403     | expr . '*' expr
  404     | expr . '/' expr
  405     | expr . '%' expr
  406     | expr . '<' expr
  407     | expr . '>' expr
  408     | expr . "==" expr
  409     | expr . "!=" expr
  410     | expr . "<=" expr
  411     | expr . ">=" expr
  412     | expr . '&' expr
  413     | expr . '|' expr
  414     | expr . '^' expr
  415     | expr . "&&" expr
  416     | expr . "||" expr
  417     | expr . "^^" expr
  418     | expr . ".." expr
  421     | expr . "++"
  422     | expr . "--"
  424     | expr . '[' expr ']'
  425     | expr . '.' '[' expr ']'
  426     | expr . "?[" expr ']'
  427     | expr . '.' "?[" expr ']'
  428     | expr . "?." "name"
  429     | expr . '.' "?." "name"
  436     | expr . "??" expr
  437     | expr . '?' expr ':' expr
  440     | expr . "is" "type" '<' $@27 type_declaration_no_options '>' $@28
  441     | expr . "is" basic_type_declaration
  442     | expr . "is" "name"
  443     | expr . "as" "name"
  446     | expr . "as" "type" '<' $@29 type_declaration '>' $@30
  447     | expr . "as" basic_type_declaration
  448     | expr . '?' "as" "name"
  451     | expr . '?' "as" "type" '<' $@31 type_declaration '>' $@32
  452     | expr . '?' "as" basic_type_declaration
  460     | expr . "<|" expr
  461     | expr . "|>" expr
  462     | expr . "|>" basic_type_declaration
  476 expr_mtag: expr . '.' "$f" '(' expr ')'
  477          | expr . "?." "$f" '(' expr ')'
  478          | expr . '.' '.' "$f" '(' expr ')'
  479          | expr . '.' "?." "$f" '(' expr ')'
  480          | expr . "as" "$f" '(' expr ')'
  481          | expr . '?' "as" "$f" '(' expr ')'
  482          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 603
    "as"   shift, and go to state 604
    "<<"   shift, and go to state 605
    ">>"   shift, and go to state 606
    "++"   shift, and go to state 607
    "--"   shift, and go to state 608
    "<="   shift, and go to state 609
    ">="   shift, and go to state 610
    "=="   shift, and go to state 611
    "!="   shift, and go to state 612
    "->"   shift, and go to state 613
    "??"   shift, and go to state 614
    "?."   shift, and go to state 615
    "?["   shift, and go to state 616
    "<|"   shift, and go to state 617
    "|>"   shift, and go to state 618
    "<<<"  shift, and go to state 619
    ">>>"  shift, and go to state 620
    "&&"   shift, and go to state 621
    "||"   shift, and go to state 622
    "^^"   shift, and go to state 623
    ".."   shift, and go to state 624
    '?'    shift, and go to state 625
    '|'    shift, and go to state 626
    '^'    shift, and go to state 627
    '&'    shift, and go to state 628
    '<'    shift, and go to state 629
    '>'    shift, and go to state 630
    '-'    shift, and go to state 631
    '+'    shift, and go to state 632
    '*'    shift, and go to state 633
    '/'    shift, and go to state 634
    '%'    shift, and go to state 635
    '.'    shift, and go to state 636
    '['    shift, and go to state 637
    ';'    shift, and go to state 1473


State 1450

  501 struct_variable_declaration_list: struct_variable_declaration_list optional_annotation_list "def" optional_public_or_private_member_variable "abstract" optional_constant $@34 function_declaration_header ';' .

    $default  reduce using rule 501 (struct_variable_declaration_list)


State 1451

  503 struct_variable_declaration_list: struct_variable_declaration_list optional_annotation_list "def" optional_public_or_private_member_variable optional_static_member_variable optional_override optional_constant $@35 function_declaration_header . expression_block

    $default  reduce using rule 224 ($@9)

    expression_block  go to state 1474
    $@9               go to state 332


State 1452

  751 make_struct_fields: make_struct_fields . ',' "name" copy_or_move expr
  752                   | make_struct_fields . ',' "name" ":=" expr
  755                   | make_struct_fields . ',' "$f" '(' expr ')' copy_or_move expr
  756                   | make_struct_fields . ',' "$f" '(' expr ')' ":=" expr
  759 make_struct_dim_list: '(' make_struct_fields . ')'

    ','  shift, and go to state 1012
    ')'  shift, and go to state 1475


State 1453

  760 make_struct_dim_list: make_struct_dim_list ',' . '(' make_struct_fields ')'
  812 optional_comma: ',' .

    '('  shift, and go to state 1476

    $default  reduce using rule 812 (optional_comma)


State 1454

  762 make_struct_dim_decl: make_struct_dim_list optional_comma .

    $default  reduce using rule 762 (make_struct_dim_decl)


State 1455

  769 make_struct_decl: "struct" '<' $@85 type_declaration_no_options '>' $@86 '(' use_initializer optional_make_struct_dim_decl ')' .

    $default  reduce using rule 769 (make_struct_decl)


State 1456

  772 make_struct_decl: "class" '<' $@87 type_declaration_no_options '>' $@88 '(' use_initializer optional_make_struct_dim_decl ')' .

    $default  reduce using rule 772 (make_struct_decl)


State 1457

  307 expr_type_info: "typeinfo" name_in_namespace '<' "name" c_or_s "name" '>' '(' expr ')' .

    $default  reduce using rule 307 (expr_type_info)


State 1458

  788 make_dim_decl: "array" "struct" '<' $@95 type_declaration_no_options '>' $@96 '(' use_initializer optional_make_struct_dim_decl . ')'

    ')'  shift, and go to state 1477


State 1459

  791 make_dim_decl: "array" "tuple" '<' $@97 type_declaration_no_options '>' $@98 '(' use_initializer optional_make_struct_dim_decl . ')'

    ')'  shift, and go to state 1478


State 1460

  794 make_dim_decl: "array" "variant" '<' $@99 type_declaration_no_options '>' $@100 '(' make_variant_dim ')' .

    $default  reduce using rule 794 (make_dim_decl)


State 1461

  802 make_dim_decl: "fixed_array" '<' $@103 type_declaration_no_options '>' $@104 '(' expr_list optional_comma ')' .

    $default  reduce using rule 802 (make_dim_decl)


State 1462

  784 make_tuple_call: "tuple" '<' $@93 type_declaration_no_options '>' $@94 '(' use_initializer optional_make_struct_dim_decl ')' .

    $default  reduce using rule 784 (make_tuple_call)


State 1463

  810 array_comprehension_where: ';' . "where" expr

    "where"  shift, and go to state 1479


State 1464

  813 array_comprehension: '[' "for" '(' variable_name_with_pos_list "in" expr_list ')' ';' expr array_comprehension_where . ']'

    ']'  shift, and go to state 1480


State 1465

  356 expr_method_call: expr . "->" "name" '(' ')'
  357                 | expr . "->" "name" '(' expr_list ')'
  367 expr_field: expr . '.' "name"
  368           | expr . '.' '.' "name"
  369           | expr . '.' "name" '(' ')'
  370           | expr . '.' "name" '(' expr_list ')'
  371           | expr . '.' basic_type_declaration '(' ')'
  372           | expr . '.' basic_type_declaration '(' expr_list ')'
  375           | expr . '.' $@25 error $@26
  397 expr: expr . "<<" expr
  398     | expr . ">>" expr
  399     | expr . "<<<" expr
  400     | expr . ">>>" expr
  401     | expr . '+' expr
  402     | expr . '-' expr
  403     | expr . '*' expr
  404     | expr . '/' expr
  405     | expr . '%' expr
  406     | expr . '<' expr
  407     | expr . '>' expr
  408     | expr . "==" expr
  409     | expr . "!=" expr
  410     | expr . "<=" expr
  411     | expr . ">=" expr
  412     | expr . '&' expr
  413     | expr . '|' expr
  414     | expr . '^' expr
  415     | expr . "&&" expr
  416     | expr . "||" expr
  417     | expr . "^^" expr
  418     | expr . ".." expr
  421     | expr . "++"
  422     | expr . "--"
  424     | expr . '[' expr ']'
  425     | expr . '.' '[' expr ']'
  426     | expr . "?[" expr ']'
  427     | expr . '.' "?[" expr ']'
  428     | expr . "?." "name"
  429     | expr . '.' "?." "name"
  436     | expr . "??" expr
  437     | expr . '?' expr ':' expr
  440     | expr . "is" "type" '<' $@27 type_declaration_no_options '>' $@28
  441     | expr . "is" basic_type_declaration
  442     | expr . "is" "name"
  443     | expr . "as" "name"
  446     | expr . "as" "type" '<' $@29 type_declaration '>' $@30
  447     | expr . "as" basic_type_declaration
  448     | expr . '?' "as" "name"
  451     | expr . '?' "as" "type" '<' $@31 type_declaration '>' $@32
  452     | expr . '?' "as" basic_type_declaration
  460     | expr . "<|" expr
  461     | expr . "|>" expr
  462     | expr . "|>" basic_type_declaration
  476 expr_mtag: expr . '.' "$f" '(' expr ')'
  477          | expr . "?." "$f" '(' expr ')'
  478          | expr . '.' '.' "$f" '(' expr ')'
  479          | expr . '.' "?." "$f" '(' expr ')'
  480          | expr . "as" "$f" '(' expr ')'
  481          | expr . '?' "as" "$f" '(' expr ')'
  482          | expr . "is" "$f" '(' expr ')'
  814 array_comprehension: '[' "iterator" "for" '(' variable_name_with_pos_list "in" expr_list ')' ';' expr . array_comprehension_where ']'

    "is"   shift, and go to state 603
    "as"   shift, and go to state 604
    "<<"   shift, and go to state 605
    ">>"   shift, and go to state 606
    "++"   shift, and go to state 607
    "--"   shift, and go to state 608
    "<="   shift, and go to state 609
    ">="   shift, and go to state 610
    "=="   shift, and go to state 611
    "!="   shift, and go to state 612
    "->"   shift, and go to state 613
    "??"   shift, and go to state 614
    "?."   shift, and go to state 615
    "?["   shift, and go to state 616
    "<|"   shift, and go to state 617
    "|>"   shift, and go to state 618
    "<<<"  shift, and go to state 619
    ">>>"  shift, and go to state 620
    "&&"   shift, and go to state 621
    "||"   shift, and go to state 622
    "^^"   shift, and go to state 623
    ".."   shift, and go to state 624
    '?'    shift, and go to state 625
    '|'    shift, and go to state 626
    '^'    shift, and go to state 627
    '&'    shift, and go to state 628
    '<'    shift, and go to state 629
    '>'    shift, and go to state 630
    '-'    shift, and go to state 631
    '+'    shift, and go to state 632
    '*'    shift, and go to state 633
    '/'    shift, and go to state 634
    '%'    shift, and go to state 635
    '.'    shift, and go to state 636
    '['    shift, and go to state 637
    ';'    shift, and go to state 1463

    $default  reduce using rule 809 (array_comprehension_where)

    array_comprehension_where  go to state 1481


State 1466

  815 array_comprehension: '{' "for" '(' variable_name_with_pos_list "in" expr_list ')' ';' make_map_tuple array_comprehension_where . '}'

    '}'  shift, and go to state 1482


State 1467

  356 expr_method_call: expr . "->" "name" '(' ')'
  357                 | expr . "->" "name" '(' expr_list ')'
  367 expr_field: expr . '.' "name"
  368           | expr . '.' '.' "name"
  369           | expr . '.' "name" '(' ')'
  370           | expr . '.' "name" '(' expr_list ')'
  371           | expr . '.' basic_type_declaration '(' ')'
  372           | expr . '.' basic_type_declaration '(' expr_list ')'
  375           | expr . '.' $@25 error $@26
  397 expr: expr . "<<" expr
  398     | expr . ">>" expr
  399     | expr . "<<<" expr
  400     | expr . ">>>" expr
  401     | expr . '+' expr
  402     | expr . '-' expr
  403     | expr . '*' expr
  404     | expr . '/' expr
  405     | expr . '%' expr
  406     | expr . '<' expr
  407     | expr . '>' expr
  408     | expr . "==" expr
  409     | expr . "!=" expr
  410     | expr . "<=" expr
  411     | expr . ">=" expr
  412     | expr . '&' expr
  413     | expr . '|' expr
  414     | expr . '^' expr
  415     | expr . "&&" expr
  416     | expr . "||" expr
  417     | expr . "^^" expr
  418     | expr . ".." expr
  421     | expr . "++"
  422     | expr . "--"
  424     | expr . '[' expr ']'
  425     | expr . '.' '[' expr ']'
  426     | expr . "?[" expr ']'
  427     | expr . '.' "?[" expr ']'
  428     | expr . "?." "name"
  429     | expr . '.' "?." "name"
  436     | expr . "??" expr
  437     | expr . '?' expr ':' expr
  440     | expr . "is" "type" '<' $@27 type_declaration_no_options '>' $@28
  441     | expr . "is" basic_type_declaration
  442     | expr . "is" "name"
  443     | expr . "as" "name"
  446     | expr . "as" "type" '<' $@29 type_declaration '>' $@30
  447     | expr . "as" basic_type_declaration
  448     | expr . '?' "as" "name"
  451     | expr . '?' "as" "type" '<' $@31 type_declaration '>' $@32
  452     | expr . '?' "as" basic_type_declaration
  460     | expr . "<|" expr
  461     | expr . "|>" expr
  462     | expr . "|>" basic_type_declaration
  476 expr_mtag: expr . '.' "$f" '(' expr ')'
  477          | expr . "?." "$f" '(' expr ')'
  478          | expr . '.' '.' "$f" '(' expr ')'
  479          | expr . '.' "?." "$f" '(' expr ')'
  480          | expr . "as" "$f" '(' expr ')'
  481          | expr . '?' "as" "$f" '(' expr ')'
  482          | expr . "is" "$f" '(' expr ')'
  756 make_struct_fields: make_struct_fields ',' "$f" '(' expr ')' ":=" expr .

    "is"   shift, and go to state 603
    "as"   shift, and go to state 604
    "<<"   shift, and go to state 605
    ">>"   shift, and go to state 606
    "++"   shift, and go to state 607
    "--"   shift, and go to state 608
    "<="   shift, and go to state 609
    ">="   shift, and go to state 610
    "=="   shift, and go to state 611
    "!="   shift, and go to state 612
    "->"   shift, and go to state 613
    "??"   shift, and go to state 614
    "?."   shift, and go to state 615
    "?["   shift, and go to state 616
    "<|"   shift, and go to state 617
    "|>"   shift, and go to state 618
    "<<<"  shift, and go to state 619
    ">>>"  shift, and go to state 620
    "&&"   shift, and go to state 621
    "||"   shift, and go to state 622
    "^^"   shift, and go to state 623
    ".."   shift, and go to state 624
    '?'    shift, and go to state 625
    '|'    shift, and go to state 626
    '^'    shift, and go to state 627
    '&'    shift, and go to state 628
    '<'    shift, and go to state 629
    '>'    shift, and go to state 630
    '-'    shift, and go to state 631
    '+'    shift, and go to state 632
    '*'    shift, and go to state 633
    '/'    shift, and go to state 634
    '%'    shift, and go to state 635
    '.'    shift, and go to state 636
    '['    shift, and go to state 637

    $default  reduce using rule 756 (make_struct_fields)


State 1468

  356 expr_method_call: expr . "->" "name" '(' ')'
  357                 | expr . "->" "name" '(' expr_list ')'
  367 expr_field: expr . '.' "name"
  368           | expr . '.' '.' "name"
  369           | expr . '.' "name" '(' ')'
  370           | expr . '.' "name" '(' expr_list ')'
  371           | expr . '.' basic_type_declaration '(' ')'
  372           | expr . '.' basic_type_declaration '(' expr_list ')'
  375           | expr . '.' $@25 error $@26
  397 expr: expr . "<<" expr
  398     | expr . ">>" expr
  399     | expr . "<<<" expr
  400     | expr . ">>>" expr
  401     | expr . '+' expr
  402     | expr . '-' expr
  403     | expr . '*' expr
  404     | expr . '/' expr
  405     | expr . '%' expr
  406     | expr . '<' expr
  407     | expr . '>' expr
  408     | expr . "==" expr
  409     | expr . "!=" expr
  410     | expr . "<=" expr
  411     | expr . ">=" expr
  412     | expr . '&' expr
  413     | expr . '|' expr
  414     | expr . '^' expr
  415     | expr . "&&" expr
  416     | expr . "||" expr
  417     | expr . "^^" expr
  418     | expr . ".." expr
  421     | expr . "++"
  422     | expr . "--"
  424     | expr . '[' expr ']'
  425     | expr . '.' '[' expr ']'
  426     | expr . "?[" expr ']'
  427     | expr . '.' "?[" expr ']'
  428     | expr . "?." "name"
  429     | expr . '.' "?." "name"
  436     | expr . "??" expr
  437     | expr . '?' expr ':' expr
  440     | expr . "is" "type" '<' $@27 type_declaration_no_options '>' $@28
  441     | expr . "is" basic_type_declaration
  442     | expr . "is" "name"
  443     | expr . "as" "name"
  446     | expr . "as" "type" '<' $@29 type_declaration '>' $@30
  447     | expr . "as" basic_type_declaration
  448     | expr . '?' "as" "name"
  451     | expr . '?' "as" "type" '<' $@31 type_declaration '>' $@32
  452     | expr . '?' "as" basic_type_declaration
  460     | expr . "<|" expr
  461     | expr . "|>" expr
  462     | expr . "|>" basic_type_declaration
  476 expr_mtag: expr . '.' "$f" '(' expr ')'
  477          | expr . "?." "$f" '(' expr ')'
  478          | expr . '.' '.' "$f" '(' expr ')'
  479          | expr . '.' "?." "$f" '(' expr ')'
  480          | expr . "as" "$f" '(' expr ')'
  481          | expr . '?' "as" "$f" '(' expr ')'
  482          | expr . "is" "$f" '(' expr ')'
  755 make_struct_fields: make_struct_fields ',' "$f" '(' expr ')' copy_or_move expr .

    "is"   shift, and go to state 603
    "as"   shift, and go to state 604
    "<<"   shift, and go to state 605
    ">>"   shift, and go to state 606
    "++"   shift, and go to state 607
    "--"   shift, and go to state 608
    "<="   shift, and go to state 609
    ">="   shift, and go to state 610
    "=="   shift, and go to state 611
    "!="   shift, and go to state 612
    "->"   shift, and go to state 613
    "??"   shift, and go to state 614
    "?."   shift, and go to state 615
    "?["   shift, and go to state 616
    "<|"   shift, and go to state 617
    "|>"   shift, and go to state 618
    "<<<"  shift, and go to state 619
    ">>>"  shift, and go to state 620
    "&&"   shift, and go to state 621
    "||"   shift, and go to state 622
    "^^"   shift, and go to state 623
    ".."   shift, and go to state 624
    '?'    shift, and go to state 625
    '|'    shift, and go to state 626
    '^'    shift, and go to state 627
    '&'    shift, and go to state 628
    '<'    shift, and go to state 629
    '>'    shift, and go to state 630
    '-'    shift, and go to state 631
    '+'    shift, and go to state 632
    '*'    shift, and go to state 633
    '/'    shift, and go to state 634
    '%'    shift, and go to state 635
    '.'    shift, and go to state 636
    '['    shift, and go to state 637

    $default  reduce using rule 755 (make_struct_fields)


State 1469

   58 expression_else: "else" optional_semis . expression_block

    $default  reduce using rule 224 ($@9)

    expression_block  go to state 1483
    $@9               go to state 332


State 1470

   59 expression_else: elif_or_static_elif '(' . expr ')' optional_semis expression_block expression_else

    "struct"                          shift, and go to state 414
    "class"                           shift, and go to state 415
    "true"                            shift, and go to state 416
    "false"                           shift, and go to state 417
    "new"                             shift, and go to state 418
    "typeinfo"                        shift, and go to state 419
    "type"                            shift, and go to state 420
    "array"                           shift, and go to state 421
    "null"                            shift, and go to state 422
    "table"                           shift, and go to state 423
    "deref"                           shift, and go to state 424
    "cast"                            shift, and go to state 425
    "upcast"                          shift, and go to state 426
    "addr"                            shift, and go to state 427
    "reinterpret"                     shift, and go to state 428
    "unsafe"                          shift, and go to state 429
    "fixed_array"                     shift, and go to state 430
    "default"                         shift, and go to state 431
    "bool"                            shift, and go to state 228
    "void"                            shift, and go to state 229
    "string"                          shift, and go to state 230
    "int"                             shift, and go to state 232
    "int2"                            shift, and go to state 233
    "int3"                            shift, and go to state 234
    "int4"                            shift, and go to state 235
    "uint"                            shift, and go to state 236
    "bitfield"                        shift, and go to state 432
    "uint2"                           shift, and go to state 238
    "uint3"                           shift, and go to state 239
    "uint4"                           shift, and go to state 240
    "float"                           shift, and go to state 241
    "float2"                          shift, and go to state 242
    "float3"                          shift, and go to state 243
    "float4"                          shift, and go to state 244
    "range"                           shift, and go to state 245
    "urange"                          shift, and go to state 246
    "range64"                         shift, and go to state 247
    "urange64"                        shift, and go to state 248
    "int64"                           shift, and go to state 250
    "uint64"                          shift, and go to state 251
    "double"                          shift, and go to state 252
    "int8"                            shift, and go to state 255
    "uint8"                           shift, and go to state 256
    "int16"                           shift, and go to state 257
    "uint16"                          shift, and go to state 258
    "tuple"                           shift, and go to state 433
    "variant"                         shift, and go to state 434
    "generator"                       shift, and go to state 435
    "++"                              shift, and go to state 436
    "--"                              shift, and go to state 437
    "::"                              shift, and go to state 55
    "$$"                              shift, and go to state 438
    "$i"                              shift, and go to state 439
    "$v"                              shift, and go to state 440
    "$b"                              shift, and go to state 441
    "$a"                              shift, and go to state 442
    "$c"                              shift, and go to state 443
    "..."                             shift, and go to state 444
    "integer constant"                shift, and go to state 445
    "long integer constant"           shift, and go to state 446
    "unsigned integer constant"       shift, and go to state 447
    "unsigned long integer constant"  shift, and go to state 448
    "unsigned int8 constant"          shift, and go to state 449
    "floating point constant"         shift, and go to state 450
    "double constant"                 shift, and go to state 451
    "name"                            shift, and go to state 56
    "start of the string"             shift, and go to state 452
    '-'                               shift, and go to state 453
    '+'                               shift, and go to state 454
    '*'                               shift, and go to state 455
    '%'                               shift, and go to state 13
    '~'                               shift, and go to state 456
    '!'                               shift, and go to state 457
    '['                               shift, and go to state 458
    '('                               shift, and go to state 459
    '$'                               shift, and go to state 460
    '@'                               shift, and go to state 461
    '{'                               shift, and go to state 462

    string_builder          go to state 463
    expr_reader             go to state 464
    expr_call_pipe          go to state 465
    name_in_namespace       go to state 466
    expr_new                go to state 467
    expr_cast               go to state 468
    expr_type_decl          go to state 469
    expr_type_info          go to state 470
    block_or_lambda         go to state 471
    expr_full_block         go to state 472
    expr_numeric_const      go to state 473
    expr_named_call         go to state 474
    expr_method_call        go to state 475
    func_addr_expr          go to state 476
    expr_field              go to state 477
    expr_call               go to state 478
    expr                    go to state 1484
    expr_generator          go to state 480
    expr_mtag               go to state 481
    basic_type_declaration  go to state 482
    make_decl               go to state 483
    make_struct_decl        go to state 484
    make_tuple_call         go to state 485
    make_dim_decl           go to state 486
    make_table_decl         go to state 487
    array_comprehension     go to state 488


State 1471

   77 expression_for_loop: $@3 "for" '(' variable_name_with_pos_list "in" expr_list ')' optional_semis expression_block .

    $default  reduce using rule 77 (expression_for_loop)


State 1472

  288 tuple_expansion_variable_declaration: '(' tuple_expansion ')' ':' type_declaration_no_options copy_or_move_or_clone expr . ';'
  356 expr_method_call: expr . "->" "name" '(' ')'
  357                 | expr . "->" "name" '(' expr_list ')'
  367 expr_field: expr . '.' "name"
  368           | expr . '.' '.' "name"
  369           | expr . '.' "name" '(' ')'
  370           | expr . '.' "name" '(' expr_list ')'
  371           | expr . '.' basic_type_declaration '(' ')'
  372           | expr . '.' basic_type_declaration '(' expr_list ')'
  375           | expr . '.' $@25 error $@26
  397 expr: expr . "<<" expr
  398     | expr . ">>" expr
  399     | expr . "<<<" expr
  400     | expr . ">>>" expr
  401     | expr . '+' expr
  402     | expr . '-' expr
  403     | expr . '*' expr
  404     | expr . '/' expr
  405     | expr . '%' expr
  406     | expr . '<' expr
  407     | expr . '>' expr
  408     | expr . "==" expr
  409     | expr . "!=" expr
  410     | expr . "<=" expr
  411     | expr . ">=" expr
  412     | expr . '&' expr
  413     | expr . '|' expr
  414     | expr . '^' expr
  415     | expr . "&&" expr
  416     | expr . "||" expr
  417     | expr . "^^" expr
  418     | expr . ".." expr
  421     | expr . "++"
  422     | expr . "--"
  424     | expr . '[' expr ']'
  425     | expr . '.' '[' expr ']'
  426     | expr . "?[" expr ']'
  427     | expr . '.' "?[" expr ']'
  428     | expr . "?." "name"
  429     | expr . '.' "?." "name"
  436     | expr . "??" expr
  437     | expr . '?' expr ':' expr
  440     | expr . "is" "type" '<' $@27 type_declaration_no_options '>' $@28
  441     | expr . "is" basic_type_declaration
  442     | expr . "is" "name"
  443     | expr . "as" "name"
  446     | expr . "as" "type" '<' $@29 type_declaration '>' $@30
  447     | expr . "as" basic_type_declaration
  448     | expr . '?' "as" "name"
  451     | expr . '?' "as" "type" '<' $@31 type_declaration '>' $@32
  452     | expr . '?' "as" basic_type_declaration
  460     | expr . "<|" expr
  461     | expr . "|>" expr
  462     | expr . "|>" basic_type_declaration
  476 expr_mtag: expr . '.' "$f" '(' expr ')'
  477          | expr . "?." "$f" '(' expr ')'
  478          | expr . '.' '.' "$f" '(' expr ')'
  479          | expr . '.' "?." "$f" '(' expr ')'
  480          | expr . "as" "$f" '(' expr ')'
  481          | expr . '?' "as" "$f" '(' expr ')'
  482          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 603
    "as"   shift, and go to state 604
    "<<"   shift, and go to state 605
    ">>"   shift, and go to state 606
    "++"   shift, and go to state 607
    "--"   shift, and go to state 608
    "<="   shift, and go to state 609
    ">="   shift, and go to state 610
    "=="   shift, and go to state 611
    "!="   shift, and go to state 612
    "->"   shift, and go to state 613
    "??"   shift, and go to state 614
    "?."   shift, and go to state 615
    "?["   shift, and go to state 616
    "<|"   shift, and go to state 617
    "|>"   shift, and go to state 618
    "<<<"  shift, and go to state 619
    ">>>"  shift, and go to state 620
    "&&"   shift, and go to state 621
    "||"   shift, and go to state 622
    "^^"   shift, and go to state 623
    ".."   shift, and go to state 624
    '?'    shift, and go to state 625
    '|'    shift, and go to state 626
    '^'    shift, and go to state 627
    '&'    shift, and go to state 628
    '<'    shift, and go to state 629
    '>'    shift, and go to state 630
    '-'    shift, and go to state 631
    '+'    shift, and go to state 632
    '*'    shift, and go to state 633
    '/'    shift, and go to state 634
    '%'    shift, and go to state 635
    '.'    shift, and go to state 636
    '['    shift, and go to state 637
    ';'    shift, and go to state 1485


State 1473

  289 tuple_expansion_variable_declaration: '(' tuple_expansion ')' optional_ref copy_or_move_or_clone expr ';' .

    $default  reduce using rule 289 (tuple_expansion_variable_declaration)


State 1474

  503 struct_variable_declaration_list: struct_variable_declaration_list optional_annotation_list "def" optional_public_or_private_member_variable optional_static_member_variable optional_override optional_constant $@35 function_declaration_header expression_block .

    $default  reduce using rule 503 (struct_variable_declaration_list)


State 1475

  759 make_struct_dim_list: '(' make_struct_fields ')' .

    $default  reduce using rule 759 (make_struct_dim_list)


State 1476

  760 make_struct_dim_list: make_struct_dim_list ',' '(' . make_struct_fields ')'

    "$f"    shift, and go to state 786
    "name"  shift, and go to state 1003

    make_struct_fields  go to state 1486


State 1477

  788 make_dim_decl: "array" "struct" '<' $@95 type_declaration_no_options '>' $@96 '(' use_initializer optional_make_struct_dim_decl ')' .

    $default  reduce using rule 788 (make_dim_decl)


State 1478

  791 make_dim_decl: "array" "tuple" '<' $@97 type_declaration_no_options '>' $@98 '(' use_initializer optional_make_struct_dim_decl ')' .

    $default  reduce using rule 791 (make_dim_decl)


State 1479

  810 array_comprehension_where: ';' "where" . expr

    "struct"                          shift, and go to state 414
    "class"                           shift, and go to state 415
    "true"                            shift, and go to state 416
    "false"                           shift, and go to state 417
    "new"                             shift, and go to state 418
    "typeinfo"                        shift, and go to state 419
    "type"                            shift, and go to state 420
    "array"                           shift, and go to state 421
    "null"                            shift, and go to state 422
    "table"                           shift, and go to state 423
    "deref"                           shift, and go to state 424
    "cast"                            shift, and go to state 425
    "upcast"                          shift, and go to state 426
    "addr"                            shift, and go to state 427
    "reinterpret"                     shift, and go to state 428
    "unsafe"                          shift, and go to state 429
    "fixed_array"                     shift, and go to state 430
    "default"                         shift, and go to state 431
    "bool"                            shift, and go to state 228
    "void"                            shift, and go to state 229
    "string"                          shift, and go to state 230
    "int"                             shift, and go to state 232
    "int2"                            shift, and go to state 233
    "int3"                            shift, and go to state 234
    "int4"                            shift, and go to state 235
    "uint"                            shift, and go to state 236
    "bitfield"                        shift, and go to state 432
    "uint2"                           shift, and go to state 238
    "uint3"                           shift, and go to state 239
    "uint4"                           shift, and go to state 240
    "float"                           shift, and go to state 241
    "float2"                          shift, and go to state 242
    "float3"                          shift, and go to state 243
    "float4"                          shift, and go to state 244
    "range"                           shift, and go to state 245
    "urange"                          shift, and go to state 246
    "range64"                         shift, and go to state 247
    "urange64"                        shift, and go to state 248
    "int64"                           shift, and go to state 250
    "uint64"                          shift, and go to state 251
    "double"                          shift, and go to state 252
    "int8"                            shift, and go to state 255
    "uint8"                           shift, and go to state 256
    "int16"                           shift, and go to state 257
    "uint16"                          shift, and go to state 258
    "tuple"                           shift, and go to state 433
    "variant"                         shift, and go to state 434
    "generator"                       shift, and go to state 435
    "++"                              shift, and go to state 436
    "--"                              shift, and go to state 437
    "::"                              shift, and go to state 55
    "$$"                              shift, and go to state 438
    "$i"                              shift, and go to state 439
    "$v"                              shift, and go to state 440
    "$b"                              shift, and go to state 441
    "$a"                              shift, and go to state 442
    "$c"                              shift, and go to state 443
    "..."                             shift, and go to state 444
    "integer constant"                shift, and go to state 445
    "long integer constant"           shift, and go to state 446
    "unsigned integer constant"       shift, and go to state 447
    "unsigned long integer constant"  shift, and go to state 448
    "unsigned int8 constant"          shift, and go to state 449
    "floating point constant"         shift, and go to state 450
    "double constant"                 shift, and go to state 451
    "name"                            shift, and go to state 56
    "start of the string"             shift, and go to state 452
    '-'                               shift, and go to state 453
    '+'                               shift, and go to state 454
    '*'                               shift, and go to state 455
    '%'                               shift, and go to state 13
    '~'                               shift, and go to state 456
    '!'                               shift, and go to state 457
    '['                               shift, and go to state 458
    '('                               shift, and go to state 459
    '$'                               shift, and go to state 460
    '@'                               shift, and go to state 461
    '{'                               shift, and go to state 462

    string_builder          go to state 463
    expr_reader             go to state 464
    expr_call_pipe          go to state 465
    name_in_namespace       go to state 466
    expr_new                go to state 467
    expr_cast               go to state 468
    expr_type_decl          go to state 469
    expr_type_info          go to state 470
    block_or_lambda         go to state 471
    expr_full_block         go to state 472
    expr_numeric_const      go to state 473
    expr_named_call         go to state 474
    expr_method_call        go to state 475
    func_addr_expr          go to state 476
    expr_field              go to state 477
    expr_call               go to state 478
    expr                    go to state 1487
    expr_generator          go to state 480
    expr_mtag               go to state 481
    basic_type_declaration  go to state 482
    make_decl               go to state 483
    make_struct_decl        go to state 484
    make_tuple_call         go to state 485
    make_dim_decl           go to state 486
    make_table_decl         go to state 487
    array_comprehension     go to state 488


State 1480

  813 array_comprehension: '[' "for" '(' variable_name_with_pos_list "in" expr_list ')' ';' expr array_comprehension_where ']' .

    $default  reduce using rule 813 (array_comprehension)


State 1481

  814 array_comprehension: '[' "iterator" "for" '(' variable_name_with_pos_list "in" expr_list ')' ';' expr array_comprehension_where . ']'

    ']'  shift, and go to state 1488


State 1482

  815 array_comprehension: '{' "for" '(' variable_name_with_pos_list "in" expr_list ')' ';' make_map_tuple array_comprehension_where '}' .

    $default  reduce using rule 815 (array_comprehension)


State 1483

   58 expression_else: "else" optional_semis expression_block .

    $default  reduce using rule 58 (expression_else)


State 1484

   59 expression_else: elif_or_static_elif '(' expr . ')' optional_semis expression_block expression_else
  356 expr_method_call: expr . "->" "name" '(' ')'
  357                 | expr . "->" "name" '(' expr_list ')'
  367 expr_field: expr . '.' "name"
  368           | expr . '.' '.' "name"
  369           | expr . '.' "name" '(' ')'
  370           | expr . '.' "name" '(' expr_list ')'
  371           | expr . '.' basic_type_declaration '(' ')'
  372           | expr . '.' basic_type_declaration '(' expr_list ')'
  375           | expr . '.' $@25 error $@26
  397 expr: expr . "<<" expr
  398     | expr . ">>" expr
  399     | expr . "<<<" expr
  400     | expr . ">>>" expr
  401     | expr . '+' expr
  402     | expr . '-' expr
  403     | expr . '*' expr
  404     | expr . '/' expr
  405     | expr . '%' expr
  406     | expr . '<' expr
  407     | expr . '>' expr
  408     | expr . "==" expr
  409     | expr . "!=" expr
  410     | expr . "<=" expr
  411     | expr . ">=" expr
  412     | expr . '&' expr
  413     | expr . '|' expr
  414     | expr . '^' expr
  415     | expr . "&&" expr
  416     | expr . "||" expr
  417     | expr . "^^" expr
  418     | expr . ".." expr
  421     | expr . "++"
  422     | expr . "--"
  424     | expr . '[' expr ']'
  425     | expr . '.' '[' expr ']'
  426     | expr . "?[" expr ']'
  427     | expr . '.' "?[" expr ']'
  428     | expr . "?." "name"
  429     | expr . '.' "?." "name"
  436     | expr . "??" expr
  437     | expr . '?' expr ':' expr
  440     | expr . "is" "type" '<' $@27 type_declaration_no_options '>' $@28
  441     | expr . "is" basic_type_declaration
  442     | expr . "is" "name"
  443     | expr . "as" "name"
  446     | expr . "as" "type" '<' $@29 type_declaration '>' $@30
  447     | expr . "as" basic_type_declaration
  448     | expr . '?' "as" "name"
  451     | expr . '?' "as" "type" '<' $@31 type_declaration '>' $@32
  452     | expr . '?' "as" basic_type_declaration
  460     | expr . "<|" expr
  461     | expr . "|>" expr
  462     | expr . "|>" basic_type_declaration
  476 expr_mtag: expr . '.' "$f" '(' expr ')'
  477          | expr . "?." "$f" '(' expr ')'
  478          | expr . '.' '.' "$f" '(' expr ')'
  479          | expr . '.' "?." "$f" '(' expr ')'
  480          | expr . "as" "$f" '(' expr ')'
  481          | expr . '?' "as" "$f" '(' expr ')'
  482          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 603
    "as"   shift, and go to state 604
    "<<"   shift, and go to state 605
    ">>"   shift, and go to state 606
    "++"   shift, and go to state 607
    "--"   shift, and go to state 608
    "<="   shift, and go to state 609
    ">="   shift, and go to state 610
    "=="   shift, and go to state 611
    "!="   shift, and go to state 612
    "->"   shift, and go to state 613
    "??"   shift, and go to state 614
    "?."   shift, and go to state 615
    "?["   shift, and go to state 616
    "<|"   shift, and go to state 617
    "|>"   shift, and go to state 618
    "<<<"  shift, and go to state 619
    ">>>"  shift, and go to state 620
    "&&"   shift, and go to state 621
    "||"   shift, and go to state 622
    "^^"   shift, and go to state 623
    ".."   shift, and go to state 624
    '?'    shift, and go to state 625
    '|'    shift, and go to state 626
    '^'    shift, and go to state 627
    '&'    shift, and go to state 628
    '<'    shift, and go to state 629
    '>'    shift, and go to state 630
    '-'    shift, and go to state 631
    '+'    shift, and go to state 632
    '*'    shift, and go to state 633
    '/'    shift, and go to state 634
    '%'    shift, and go to state 635
    '.'    shift, and go to state 636
    '['    shift, and go to state 637
    ')'    shift, and go to state 1489


State 1485

  288 tuple_expansion_variable_declaration: '(' tuple_expansion ')' ':' type_declaration_no_options copy_or_move_or_clone expr ';' .

    $default  reduce using rule 288 (tuple_expansion_variable_declaration)


State 1486

  751 make_struct_fields: make_struct_fields . ',' "name" copy_or_move expr
  752                   | make_struct_fields . ',' "name" ":=" expr
  755                   | make_struct_fields . ',' "$f" '(' expr ')' copy_or_move expr
  756                   | make_struct_fields . ',' "$f" '(' expr ')' ":=" expr
  760 make_struct_dim_list: make_struct_dim_list ',' '(' make_struct_fields . ')'

    ','  shift, and go to state 1012
    ')'  shift, and go to state 1490


State 1487

  356 expr_method_call: expr . "->" "name" '(' ')'
  357                 | expr . "->" "name" '(' expr_list ')'
  367 expr_field: expr . '.' "name"
  368           | expr . '.' '.' "name"
  369           | expr . '.' "name" '(' ')'
  370           | expr . '.' "name" '(' expr_list ')'
  371           | expr . '.' basic_type_declaration '(' ')'
  372           | expr . '.' basic_type_declaration '(' expr_list ')'
  375           | expr . '.' $@25 error $@26
  397 expr: expr . "<<" expr
  398     | expr . ">>" expr
  399     | expr . "<<<" expr
  400     | expr . ">>>" expr
  401     | expr . '+' expr
  402     | expr . '-' expr
  403     | expr . '*' expr
  404     | expr . '/' expr
  405     | expr . '%' expr
  406     | expr . '<' expr
  407     | expr . '>' expr
  408     | expr . "==" expr
  409     | expr . "!=" expr
  410     | expr . "<=" expr
  411     | expr . ">=" expr
  412     | expr . '&' expr
  413     | expr . '|' expr
  414     | expr . '^' expr
  415     | expr . "&&" expr
  416     | expr . "||" expr
  417     | expr . "^^" expr
  418     | expr . ".." expr
  421     | expr . "++"
  422     | expr . "--"
  424     | expr . '[' expr ']'
  425     | expr . '.' '[' expr ']'
  426     | expr . "?[" expr ']'
  427     | expr . '.' "?[" expr ']'
  428     | expr . "?." "name"
  429     | expr . '.' "?." "name"
  436     | expr . "??" expr
  437     | expr . '?' expr ':' expr
  440     | expr . "is" "type" '<' $@27 type_declaration_no_options '>' $@28
  441     | expr . "is" basic_type_declaration
  442     | expr . "is" "name"
  443     | expr . "as" "name"
  446     | expr . "as" "type" '<' $@29 type_declaration '>' $@30
  447     | expr . "as" basic_type_declaration
  448     | expr . '?' "as" "name"
  451     | expr . '?' "as" "type" '<' $@31 type_declaration '>' $@32
  452     | expr . '?' "as" basic_type_declaration
  460     | expr . "<|" expr
  461     | expr . "|>" expr
  462     | expr . "|>" basic_type_declaration
  476 expr_mtag: expr . '.' "$f" '(' expr ')'
  477          | expr . "?." "$f" '(' expr ')'
  478          | expr . '.' '.' "$f" '(' expr ')'
  479          | expr . '.' "?." "$f" '(' expr ')'
  480          | expr . "as" "$f" '(' expr ')'
  481          | expr . '?' "as" "$f" '(' expr ')'
  482          | expr . "is" "$f" '(' expr ')'
  810 array_comprehension_where: ';' "where" expr .

    "is"   shift, and go to state 603
    "as"   shift, and go to state 604
    "<<"   shift, and go to state 605
    ">>"   shift, and go to state 606
    "++"   shift, and go to state 607
    "--"   shift, and go to state 608
    "<="   shift, and go to state 609
    ">="   shift, and go to state 610
    "=="   shift, and go to state 611
    "!="   shift, and go to state 612
    "->"   shift, and go to state 613
    "??"   shift, and go to state 614
    "?."   shift, and go to state 615
    "?["   shift, and go to state 616
    "<|"   shift, and go to state 617
    "|>"   shift, and go to state 618
    "<<<"  shift, and go to state 619
    ">>>"  shift, and go to state 620
    "&&"   shift, and go to state 621
    "||"   shift, and go to state 622
    "^^"   shift, and go to state 623
    ".."   shift, and go to state 624
    '?'    shift, and go to state 625
    '|'    shift, and go to state 626
    '^'    shift, and go to state 627
    '&'    shift, and go to state 628
    '<'    shift, and go to state 629
    '>'    shift, and go to state 630
    '-'    shift, and go to state 631
    '+'    shift, and go to state 632
    '*'    shift, and go to state 633
    '/'    shift, and go to state 634
    '%'    shift, and go to state 635
    '.'    shift, and go to state 636
    '['    shift, and go to state 637

    $default  reduce using rule 810 (array_comprehension_where)


State 1488

  814 array_comprehension: '[' "iterator" "for" '(' variable_name_with_pos_list "in" expr_list ')' ';' expr array_comprehension_where ']' .

    $default  reduce using rule 814 (array_comprehension)


State 1489

   59 expression_else: elif_or_static_elif '(' expr ')' . optional_semis expression_block expression_else

    ';'  shift, and go to state 171

    $default  reduce using rule 71 (optional_semis)

    semis           go to state 172
    optional_semis  go to state 1491


State 1490

  760 make_struct_dim_list: make_struct_dim_list ',' '(' make_struct_fields ')' .

    $default  reduce using rule 760 (make_struct_dim_list)


State 1491

   59 expression_else: elif_or_static_elif '(' expr ')' optional_semis . expression_block expression_else

    $default  reduce using rule 224 ($@9)

    expression_block  go to state 1492
    $@9               go to state 332


State 1492

   59 expression_else: elif_or_static_elif '(' expr ')' optional_semis expression_block . expression_else

    "else"         shift, and go to state 1441
    "elif"         shift, and go to state 1442
    "static_elif"  shift, and go to state 1443

    $default  reduce using rule 57 (expression_else)

    elif_or_static_elif  go to state 1444
    expression_else      go to state 1493


State 1493

   59 expression_else: elif_or_static_elif '(' expr ')' optional_semis expression_block expression_else .

    $default  reduce using rule 59 (expression_else)
