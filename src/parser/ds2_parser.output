Terminals unused in grammar

    "lexer error"
    "end of failed eader macro"
    ";}}"
    ";}]"
    ";]]"
    ",]]"
    ",}]"
    LLPIPE


Grammar

    0 $accept: program $end

    1 program: %empty
    2        | program module_declaration
    3        | program structure_declaration
    4        | program enum_declaration
    5        | program global_let
    6        | program global_function_declaration
    7        | program expect_declaration
    8        | program require_declaration "end of expression"
    9        | program options_declaration "end of expression"
   10        | program alias_declaration
   11        | program variant_alias_declaration
   12        | program tuple_alias_declaration
   13        | program bitfield_alias_declaration
   14        | program top_level_reader_macro
   15        | program "end of expression"

   16 top_level_reader_macro: expr_reader "end of expression"

   17 optional_public_or_private_module: %empty
   18                                  | "public"
   19                                  | "private"

   20 module_name: '$'
   21            | "name"

   22 module_declaration: "module" module_name optional_shared optional_public_or_private_module

   23 character_sequence: STRING_CHARACTER
   24                   | STRING_CHARACTER_ESC
   25                   | character_sequence STRING_CHARACTER
   26                   | character_sequence STRING_CHARACTER_ESC

   27 string_constant: "start of the string" character_sequence "end of the string"
   28                | "start of the string" "end of the string"

   29 string_builder_body: %empty
   30                    | string_builder_body character_sequence
   31                    | string_builder_body "{" expr "}"

   32 string_builder: "start of the string" string_builder_body "end of the string"

   33 reader_character_sequence: STRING_CHARACTER
   34                          | reader_character_sequence STRING_CHARACTER

   35 $@1: %empty

   36 expr_reader: '%' name_in_namespace $@1 reader_character_sequence

   37 options_declaration: "options" annotation_argument_list

   38 require_declaration: "require" require_module

   39 require_module_name: "name"
   40                    | '%' require_module_name
   41                    | require_module_name '.' "name"
   42                    | require_module_name '/' "name"

   43 require_module: require_module_name is_public_module
   44               | require_module_name "as" "name" is_public_module

   45 is_public_module: %empty
   46                 | "public"

   47 expect_declaration: "expect" expect_list

   48 expect_list: expect_error
   49            | expect_list ',' expect_error

   50 expect_error: "integer constant"
   51             | "integer constant" ':' "integer constant"

   52 expression_label: "label" "integer constant" ':'

   53 expression_goto: "goto" "label" "integer constant"
   54                | "goto" expr

   55 elif_or_static_elif: "elif"
   56                    | "static_elif"

   57 expression_else: %empty
   58                | "else" expression_block
   59                | elif_or_static_elif '(' expr ')' expression_block expression_else

   60 if_or_static_if: "if"
   61                | "static_if"

   62 expression_else_one_liner: %empty
   63                          | "else" expression_if_one_liner

   64 expression_if_one_liner: expr
   65                        | expression_return
   66                        | expression_yield
   67                        | expression_break
   68                        | expression_continue

   69 expression_if_then_else: if_or_static_if '(' expr ')' expression_block expression_else
   70                        | expression_if_one_liner "if" '(' expr ')' expression_else_one_liner "end of expression"

   71 expression_for_loop: "for" '(' variable_name_with_pos_list "in" expr_list ')' expression_block

   72 expression_unsafe: "unsafe" expression_block

   73 expression_while_loop: "while" '(' expr ')' expression_block

   74 expression_with: "with" '(' expr ')' expression_block

   75 expression_with_alias: "assume" "name" '=' expr

   76 annotation_argument_value: string_constant
   77                          | "name"
   78                          | "integer constant"
   79                          | "floating point constant"
   80                          | "true"
   81                          | "false"

   82 annotation_argument_value_list: annotation_argument_value
   83                               | annotation_argument_value_list ',' annotation_argument_value

   84 annotation_argument_name: "name"
   85                         | "type"
   86                         | "in"

   87 annotation_argument: annotation_argument_name '=' string_constant
   88                    | annotation_argument_name '=' "name"
   89                    | annotation_argument_name '=' "integer constant"
   90                    | annotation_argument_name '=' "floating point constant"
   91                    | annotation_argument_name '=' "true"
   92                    | annotation_argument_name '=' "false"
   93                    | annotation_argument_name
   94                    | annotation_argument_name '=' '(' annotation_argument_value_list ')'

   95 annotation_argument_list: annotation_argument
   96                         | annotation_argument_list ',' annotation_argument

   97 metadata_argument_list: '@' annotation_argument
   98                       | metadata_argument_list '@' annotation_argument

   99 annotation_declaration_name: name_in_namespace
  100                            | "require"
  101                            | "private"

  102 annotation_declaration_basic: annotation_declaration_name
  103                             | annotation_declaration_name '(' annotation_argument_list ')'

  104 annotation_declaration: annotation_declaration_basic
  105                       | '!' annotation_declaration
  106                       | annotation_declaration "&&" annotation_declaration
  107                       | annotation_declaration "||" annotation_declaration
  108                       | annotation_declaration "^^" annotation_declaration
  109                       | '(' annotation_declaration ')'
  110                       | "|>" annotation_declaration

  111 annotation_list: annotation_declaration
  112                | annotation_list ',' annotation_declaration

  113 optional_annotation_list: %empty
  114                         | '[' annotation_list ']'

  115 optional_function_argument_list: %empty
  116                                | '(' ')'
  117                                | '(' function_argument_list ')'

  118 optional_function_type: %empty
  119                       | ':' type_declaration

  120 function_name: "name"
  121              | "operator" '!'
  122              | "operator" '~'
  123              | "operator" "+="
  124              | "operator" "-="
  125              | "operator" "*="
  126              | "operator" "/="
  127              | "operator" "%="
  128              | "operator" "&="
  129              | "operator" "|="
  130              | "operator" "^="
  131              | "operator" "&&="
  132              | "operator" "||="
  133              | "operator" "^^="
  134              | "operator" "&&"
  135              | "operator" "||"
  136              | "operator" "^^"
  137              | "operator" '+'
  138              | "operator" '-'
  139              | "operator" '*'
  140              | "operator" '/'
  141              | "operator" '%'
  142              | "operator" '<'
  143              | "operator" '>'
  144              | "operator" ".."
  145              | "operator" "=="
  146              | "operator" "!="
  147              | "operator" "<="
  148              | "operator" ">="
  149              | "operator" '&'
  150              | "operator" '|'
  151              | "operator" '^'
  152              | "++" "operator"
  153              | "--" "operator"
  154              | "operator" "++"
  155              | "operator" "--"
  156              | "operator" "<<"
  157              | "operator" ">>"
  158              | "operator" "<<="
  159              | "operator" ">>="
  160              | "operator" "<<<"
  161              | "operator" ">>>"
  162              | "operator" "<<<="
  163              | "operator" ">>>="
  164              | "operator" '[' ']'
  165              | "operator" "?[" ']'
  166              | "operator" '.'
  167              | "operator" "?."
  168              | "operator" '.' "name"
  169              | "operator" '.' "name" ":="
  170              | "operator" "?." "name"
  171              | "operator" ":="
  172              | "operator" "delete"
  173              | "operator" "??"
  174              | "operator" "is"
  175              | "operator" "as"
  176              | "operator" "is" "name"
  177              | "operator" "as" "name"
  178              | "operator" '?' "as"
  179              | "operator" '?' "as" "name"
  180              | "bool"
  181              | "string"
  182              | "int"
  183              | "int2"
  184              | "int3"
  185              | "int4"
  186              | "uint"
  187              | "uint2"
  188              | "uint3"
  189              | "uint4"
  190              | "float"
  191              | "float2"
  192              | "float3"
  193              | "float4"
  194              | "range"
  195              | "urange"
  196              | "range64"
  197              | "urange64"
  198              | "int64"
  199              | "uint64"
  200              | "double"
  201              | "int8"
  202              | "uint8"
  203              | "int16"
  204              | "uint16"

  205 global_function_declaration: optional_annotation_list "def" function_declaration

  206 optional_public_or_private_function: %empty
  207                                    | "private"
  208                                    | "public"

  209 function_declaration_header: function_name optional_function_argument_list optional_function_type

  210 $@2: %empty

  211 function_declaration: optional_public_or_private_function $@2 function_declaration_header expression_block

  212 expression_block: "begin of code block" expressions "end of code block"
  213                 | "begin of code block" expressions "end of code block" "finally" "begin of code block" expressions "end of code block"

  214 expr_call_pipe: expr_call expr_full_block_assumed_piped

  215 expression_any: "end of expression"
  216               | expr_assign "end of expression"
  217               | expression_delete "end of expression"
  218               | expression_let
  219               | expression_while_loop
  220               | expression_unsafe
  221               | expression_with
  222               | expression_with_alias "end of expression"
  223               | expression_for_loop
  224               | expression_break "end of expression"
  225               | expression_continue "end of expression"
  226               | expression_return "end of expression"
  227               | expression_yield "end of expression"
  228               | expression_if_then_else
  229               | expression_try_catch
  230               | expression_label "end of expression"
  231               | expression_goto "end of expression"
  232               | "pass" "end of expression"

  233 expressions: %empty
  234            | expressions expression_any
  235            | expressions error

  236 optional_expr_list: %empty
  237                   | expr_list optional_comma

  238 optional_expr_map_tuple_list: %empty
  239                             | expr_map_tuple_list optional_comma

  240 type_declaration_no_options_list: type_declaration
  241                                 | type_declaration_no_options_list c_or_s type_declaration

  242 name_in_namespace: "name"
  243                  | "name" "::" "name"
  244                  | "::" "name"

  245 expression_delete: "delete" expr
  246                  | "delete" "explicit" expr

  247 $@3: %empty

  248 $@4: %empty

  249 new_type_declaration: '<' $@3 type_declaration '>' $@4
  250                     | structure_type_declaration

  251 expr_new: "new" new_type_declaration
  252         | "new" new_type_declaration '(' use_initializer ')'
  253         | "new" new_type_declaration '(' expr_list ')'
  254         | "new" new_type_declaration '(' make_struct_single ')'
  255         | "new" new_type_declaration '(' "uninitialized" make_struct_single ')'
  256         | "new" make_decl

  257 expression_break: "break"

  258 expression_continue: "continue"

  259 expression_return: "return"
  260                  | "return" expr
  261                  | "return" "<-" expr

  262 expression_yield: "yield" expr
  263                 | "yield" "<-" expr

  264 expression_try_catch: "try" expression_block "recover" expression_block

  265 kwd_let_var_or_nothing: "let"
  266                       | "var"
  267                       | %empty

  268 kwd_let: "let"
  269        | "var"

  270 optional_in_scope: "inscope"
  271                  | %empty

  272 tuple_expansion: "name"
  273                | tuple_expansion ',' "name"

  274 tuple_expansion_variable_declaration: '(' tuple_expansion ')' ':' type_declaration_no_options copy_or_move_or_clone expr "end of expression"
  275                                     | '(' tuple_expansion ')' optional_ref copy_or_move_or_clone expr "end of expression"

  276 expression_let: kwd_let optional_in_scope let_variable_declaration
  277               | kwd_let optional_in_scope tuple_expansion_variable_declaration
  278               | kwd_let optional_in_scope "begin of code block" variable_declaration_list "end of code block"

  279 $@5: %empty

  280 $@6: %empty

  281 expr_cast: "cast" '<' $@5 type_declaration_no_options '>' $@6 expr

  282 $@7: %empty

  283 $@8: %empty

  284 expr_cast: "upcast" '<' $@7 type_declaration_no_options '>' $@8 expr

  285 $@9: %empty

  286 $@10: %empty

  287 expr_cast: "reinterpret" '<' $@9 type_declaration_no_options '>' $@10 expr

  288 $@11: %empty

  289 $@12: %empty

  290 expr_type_decl: "type" '<' $@11 type_declaration '>' $@12

  291 expr_type_info: "typeinfo" name_in_namespace '(' expr ')'
  292               | "typeinfo" name_in_namespace '<' "name" '>' '(' expr ')'
  293               | "typeinfo" name_in_namespace '<' "name" c_or_s "name" '>' '(' expr ')'

  294 expr_list: expr
  295          | expr_list ',' expr

  296 block_or_simple_block: expression_block
  297                      | "=>" expr
  298                      | "=>" "<-" expr

  299 block_or_lambda: '$'
  300                | '@'
  301                | '@' '@'

  302 capture_entry: '&' "name"
  303              | '=' "name"
  304              | "<-" "name"
  305              | ":=" "name"
  306              | "name" '(' "name" ')'

  307 capture_list: capture_entry
  308             | capture_list ',' capture_entry

  309 optional_capture_list: %empty
  310                      | "capture" '(' capture_list ')'

  311 expr_full_block: block_or_lambda optional_annotation_list optional_capture_list optional_function_argument_list optional_function_type block_or_simple_block

  312 expr_full_block_assumed_piped: block_or_lambda optional_annotation_list optional_capture_list optional_function_argument_list optional_function_type expression_block
  313                              | "begin of code block" expressions "end of code block"

  314 expr_numeric_const: "integer constant"
  315                   | "unsigned integer constant"
  316                   | "long integer constant"
  317                   | "unsigned long integer constant"
  318                   | "unsigned int8 constant"
  319                   | "floating point constant"
  320                   | "double constant"

  321 expr_assign: expr
  322            | expr '=' expr
  323            | expr "<-" expr
  324            | expr ":=" expr
  325            | expr "&=" expr
  326            | expr "|=" expr
  327            | expr "^=" expr
  328            | expr "&&=" expr
  329            | expr "||=" expr
  330            | expr "^^=" expr
  331            | expr "+=" expr
  332            | expr "-=" expr
  333            | expr "*=" expr
  334            | expr "/=" expr
  335            | expr "%=" expr
  336            | expr "<<=" expr
  337            | expr ">>=" expr
  338            | expr "<<<=" expr
  339            | expr ">>>=" expr

  340 expr_named_call: name_in_namespace '(' '[' make_struct_fields ']' ')'
  341                | name_in_namespace '(' expr_list ',' '[' make_struct_fields ']' ')'

  342 expr_method_call: expr "->" "name" '(' ')'
  343                 | expr "->" "name" '(' expr_list ')'

  344 func_addr_name: name_in_namespace
  345               | "$i" '(' expr ')'

  346 func_addr_expr: '@' '@' func_addr_name

  347 $@13: %empty

  348 $@14: %empty

  349 func_addr_expr: '@' '@' '<' $@13 type_declaration_no_options '>' $@14 func_addr_name

  350 $@15: %empty

  351 $@16: %empty

  352 func_addr_expr: '@' '@' '<' $@15 optional_function_argument_list optional_function_type '>' $@16 func_addr_name

  353 expr_field: expr '.' "name"
  354           | expr '.' '.' "name"
  355           | expr '.' "name" '(' ')'
  356           | expr '.' "name" '(' expr_list ')'
  357           | expr '.' basic_type_declaration '(' ')'
  358           | expr '.' basic_type_declaration '(' expr_list ')'

  359 $@17: %empty

  360 $@18: %empty

  361 expr_field: expr '.' $@17 error $@18

  362 expr_call: name_in_namespace '(' ')'
  363          | name_in_namespace '(' "uninitialized" ')'
  364          | name_in_namespace '(' make_struct_single ')'
  365          | name_in_namespace '(' "uninitialized" make_struct_single ')'
  366          | name_in_namespace '(' expr_list ')'
  367          | basic_type_declaration '(' ')'
  368          | basic_type_declaration '(' expr_list ')'

  369 expr: "null"
  370     | name_in_namespace
  371     | expr_numeric_const
  372     | expr_reader
  373     | string_builder
  374     | make_decl
  375     | "true"
  376     | "false"
  377     | expr_field
  378     | expr_mtag
  379     | '!' expr
  380     | '~' expr
  381     | '+' expr
  382     | '-' expr
  383     | expr "<<" expr
  384     | expr ">>" expr
  385     | expr "<<<" expr
  386     | expr ">>>" expr
  387     | expr '+' expr
  388     | expr '-' expr
  389     | expr '*' expr
  390     | expr '/' expr
  391     | expr '%' expr
  392     | expr '<' expr
  393     | expr '>' expr
  394     | expr "==" expr
  395     | expr "!=" expr
  396     | expr "<=" expr
  397     | expr ">=" expr
  398     | expr '&' expr
  399     | expr '|' expr
  400     | expr '^' expr
  401     | expr "&&" expr
  402     | expr "||" expr
  403     | expr "^^" expr
  404     | expr ".." expr
  405     | "++" expr
  406     | "--" expr
  407     | expr "++"
  408     | expr "--"
  409     | '(' expr_list optional_comma ')'
  410     | expr '[' expr ']'
  411     | expr '.' '[' expr ']'
  412     | expr "?[" expr ']'
  413     | expr '.' "?[" expr ']'
  414     | expr "?." "name"
  415     | expr '.' "?." "name"
  416     | func_addr_expr
  417     | expr_call
  418     | '*' expr
  419     | "deref" '(' expr ')'
  420     | "addr" '(' expr ')'
  421     | "generator" '<' type_declaration_no_options '>' optional_capture_list '(' ')'
  422     | "generator" '<' type_declaration_no_options '>' optional_capture_list '(' expr ')'
  423     | "generator" '<' type_declaration_no_options '>' optional_capture_list expression_block
  424     | expr "??" expr
  425     | expr '?' expr ':' expr

  426 $@19: %empty

  427 $@20: %empty

  428 expr: expr "is" "type" '<' $@19 type_declaration_no_options '>' $@20
  429     | expr "is" basic_type_declaration
  430     | expr "is" "name"
  431     | expr "as" "name"

  432 $@21: %empty

  433 $@22: %empty

  434 expr: expr "as" "type" '<' $@21 type_declaration '>' $@22
  435     | expr "as" basic_type_declaration
  436     | expr '?' "as" "name"

  437 $@23: %empty

  438 $@24: %empty

  439 expr: expr '?' "as" "type" '<' $@23 type_declaration '>' $@24
  440     | expr '?' "as" basic_type_declaration
  441     | expr_type_info
  442     | expr_type_decl
  443     | expr_cast
  444     | expr_new
  445     | expr_method_call
  446     | expr_named_call
  447     | expr_full_block
  448     | expr "<|" expr
  449     | expr "|>" expr
  450     | expr "|>" basic_type_declaration
  451     | expr_call_pipe
  452     | "unsafe" '(' expr ')'

  453 expr_mtag: "$$" '(' expr ')'
  454          | "$i" '(' expr ')'
  455          | "$v" '(' expr ')'
  456          | "$b" '(' expr ')'
  457          | "$a" '(' expr ')'
  458          | "..."
  459          | "$c" '(' expr ')' '(' ')'
  460          | "$c" '(' expr ')' '(' expr_list ')'
  461          | expr '.' "$f" '(' expr ')'
  462          | expr "?." "$f" '(' expr ')'
  463          | expr '.' '.' "$f" '(' expr ')'
  464          | expr '.' "?." "$f" '(' expr ')'
  465          | expr "as" "$f" '(' expr ')'
  466          | expr '?' "as" "$f" '(' expr ')'
  467          | expr "is" "$f" '(' expr ')'
  468          | '@' '@' "$c" '(' expr ')'

  469 optional_field_annotation: %empty
  470                          | metadata_argument_list

  471 optional_override: %empty
  472                  | "override"
  473                  | "sealed"

  474 optional_constant: %empty
  475                  | "const"

  476 optional_public_or_private_member_variable: %empty
  477                                           | "public"
  478                                           | "private"

  479 optional_static_member_variable: %empty
  480                                | "static"

  481 structure_variable_declaration: optional_field_annotation optional_static_member_variable optional_override optional_public_or_private_member_variable variable_declaration

  482 struct_variable_declaration_list: %empty

  483 $@25: %empty

  484 struct_variable_declaration_list: struct_variable_declaration_list $@25 structure_variable_declaration "end of expression"

  485 $@26: %empty

  486 struct_variable_declaration_list: struct_variable_declaration_list optional_annotation_list "def" optional_public_or_private_member_variable "abstract" optional_constant $@26 function_declaration_header "end of expression"

  487 $@27: %empty

  488 struct_variable_declaration_list: struct_variable_declaration_list optional_annotation_list "def" optional_public_or_private_member_variable optional_static_member_variable optional_override optional_constant $@27 function_declaration_header expression_block

  489 function_argument_declaration: optional_field_annotation kwd_let_var_or_nothing variable_declaration
  490                              | "$a" '(' expr ')'

  491 function_argument_list: function_argument_declaration
  492                       | function_argument_list "end of expression" function_argument_declaration

  493 tuple_type: type_declaration
  494           | "name" ':' type_declaration

  495 tuple_type_list: tuple_type
  496                | tuple_type_list c_or_s tuple_type

  497 tuple_alias_type_list: %empty
  498                      | tuple_alias_type_list c_or_s
  499                      | tuple_alias_type_list tuple_type c_or_s

  500 variant_type: "name" ':' type_declaration

  501 variant_type_list: variant_type
  502                  | variant_type_list c_or_s variant_type

  503 variant_alias_type_list: %empty
  504                        | variant_alias_type_list c_or_s
  505                        | variant_alias_type_list variant_type c_or_s

  506 copy_or_move: '='
  507             | "<-"

  508 variable_declaration: variable_name_with_pos_list
  509                     | variable_name_with_pos_list '&'
  510                     | variable_name_with_pos_list ':' type_declaration
  511                     | variable_name_with_pos_list ':' type_declaration copy_or_move expr
  512                     | variable_name_with_pos_list copy_or_move expr

  513 copy_or_move_or_clone: '='
  514                      | "<-"
  515                      | ":="

  516 optional_ref: %empty
  517             | '&'

  518 let_variable_name_with_pos_list: "name"
  519                                | "$i" '(' expr ')'
  520                                | "name" "aka" "name"
  521                                | let_variable_name_with_pos_list ',' "name"
  522                                | let_variable_name_with_pos_list ',' "name" "aka" "name"

  523 global_let_variable_name_with_pos_list: "name"
  524                                       | global_let_variable_name_with_pos_list ',' "name"

  525 variable_declaration_list: %empty
  526                          | variable_declaration_list "end of expression"
  527                          | variable_declaration_list let_variable_declaration

  528 let_variable_declaration: let_variable_name_with_pos_list ':' type_declaration_no_options "end of expression"
  529                         | let_variable_name_with_pos_list ':' type_declaration_no_options copy_or_move_or_clone expr "end of expression"
  530                         | let_variable_name_with_pos_list optional_ref copy_or_move_or_clone expr "end of expression"

  531 global_let_variable_declaration: global_let_variable_name_with_pos_list ':' type_declaration_no_options "end of expression"
  532                                | global_let_variable_name_with_pos_list ':' type_declaration_no_options copy_or_move_or_clone expr "end of expression"
  533                                | global_let_variable_name_with_pos_list optional_ref copy_or_move_or_clone expr "end of expression"

  534 optional_shared: %empty
  535                | "shared"

  536 optional_public_or_private_variable: %empty
  537                                    | "private"
  538                                    | "public"

  539 global_variable_declaration_list: %empty
  540                                 | global_variable_declaration_list "end of expression"

  541 $@28: %empty

  542 global_variable_declaration_list: global_variable_declaration_list $@28 optional_field_annotation let_variable_declaration

  543 global_let: kwd_let optional_shared optional_public_or_private_variable "begin of code block" global_variable_declaration_list "end of code block"

  544 $@29: %empty

  545 global_let: kwd_let optional_shared optional_public_or_private_variable $@29 optional_field_annotation global_let_variable_declaration

  546 enum_expression: "name"
  547                | "name" '=' expr

  548 enum_list: %empty
  549          | enum_expression
  550          | enum_list ',' enum_expression

  551 optional_public_or_private_alias: %empty
  552                                 | "private"
  553                                 | "public"

  554 $@30: %empty

  555 single_alias: optional_public_or_private_alias "name" $@30 '=' type_declaration

  556 alias_declaration: "typedef" single_alias "end of expression"

  557 optional_public_or_private_enum: %empty
  558                                | "private"
  559                                | "public"

  560 enum_name: "name"

  561 optional_enum_basic_type_declaration: %empty
  562                                     | ':' enum_basic_type_declaration

  563 $@31: %empty

  564 $@32: %empty

  565 enum_declaration: optional_annotation_list "enum" optional_public_or_private_enum enum_name optional_enum_basic_type_declaration "begin of code block" $@31 enum_list optional_comma $@32 "end of code block"

  566 optional_structure_parent: %empty
  567                          | ':' name_in_namespace

  568 optional_sealed: %empty
  569                | "sealed"

  570 structure_name: optional_sealed "name" optional_structure_parent

  571 class_or_struct: "class"
  572                | "struct"

  573 optional_public_or_private_structure: %empty
  574                                     | "private"
  575                                     | "public"

  576 optional_struct_variable_declaration_list: %empty
  577                                          | "begin of code block" struct_variable_declaration_list "end of code block"

  578 $@33: %empty

  579 $@34: %empty

  580 structure_declaration: optional_annotation_list class_or_struct optional_public_or_private_structure $@33 structure_name $@34 optional_struct_variable_declaration_list

  581 variable_name_with_pos_list: "name"
  582                            | "$i" '(' expr ')'
  583                            | "name" "aka" "name"
  584                            | variable_name_with_pos_list ',' "name"
  585                            | variable_name_with_pos_list ',' "name" "aka" "name"

  586 basic_type_declaration: "bool"
  587                       | "string"
  588                       | "int"
  589                       | "int8"
  590                       | "int16"
  591                       | "int64"
  592                       | "int2"
  593                       | "int3"
  594                       | "int4"
  595                       | "uint"
  596                       | "uint8"
  597                       | "uint16"
  598                       | "uint64"
  599                       | "uint2"
  600                       | "uint3"
  601                       | "uint4"
  602                       | "float"
  603                       | "float2"
  604                       | "float3"
  605                       | "float4"
  606                       | "void"
  607                       | "range"
  608                       | "urange"
  609                       | "range64"
  610                       | "urange64"
  611                       | "double"
  612                       | "bitfield"

  613 enum_basic_type_declaration: "int"
  614                            | "int8"
  615                            | "int16"
  616                            | "uint"
  617                            | "uint8"
  618                            | "uint16"
  619                            | "int64"
  620                            | "uint64"

  621 structure_type_declaration: name_in_namespace

  622 auto_type_declaration: "auto"
  623                      | "auto" '(' "name" ')'
  624                      | "$t" '(' expr ')'

  625 bitfield_bits: "name"
  626              | bitfield_bits "end of expression" "name"

  627 bitfield_alias_bits: %empty
  628                    | "name"
  629                    | bitfield_alias_bits ',' "name"

  630 $@35: %empty

  631 $@36: %empty

  632 bitfield_type_declaration: "bitfield" '<' $@35 bitfield_bits '>' $@36

  633 c_or_s: ','
  634       | "end of expression"

  635 table_type_pair: type_declaration
  636                | type_declaration c_or_s type_declaration

  637 dim_list: '[' expr ']'
  638         | '[' ']'
  639         | dim_list '[' expr ']'
  640         | dim_list '[' ']'

  641 type_declaration_no_options: type_declaration_no_options_no_dim
  642                            | type_declaration_no_options_no_dim dim_list

  643 type_declaration_no_options_no_dim: basic_type_declaration
  644                                   | auto_type_declaration
  645                                   | bitfield_type_declaration
  646                                   | structure_type_declaration

  647 $@37: %empty

  648 $@38: %empty

  649 type_declaration_no_options_no_dim: "type" '<' $@37 type_declaration '>' $@38
  650                                   | "typedecl" '(' expr ')'
  651                                   | '$' name_in_namespace '(' optional_expr_list ')'

  652 $@39: %empty

  653 type_declaration_no_options_no_dim: '$' name_in_namespace '<' $@39 type_declaration_no_options_list '>' '(' optional_expr_list ')'
  654                                   | type_declaration_no_options_no_dim '-' '[' ']'
  655                                   | type_declaration_no_options_no_dim "explicit"
  656                                   | type_declaration_no_options_no_dim "const"
  657                                   | type_declaration_no_options_no_dim '-' "const"
  658                                   | type_declaration_no_options_no_dim '&'
  659                                   | type_declaration_no_options_no_dim '-' '&'
  660                                   | type_declaration_no_options_no_dim '#'
  661                                   | type_declaration_no_options_no_dim "implicit"
  662                                   | type_declaration_no_options_no_dim '-' '#'
  663                                   | type_declaration_no_options_no_dim "==" "const"
  664                                   | type_declaration_no_options_no_dim "==" '&'
  665                                   | type_declaration_no_options_no_dim '?'

  666 $@40: %empty

  667 $@41: %empty

  668 type_declaration_no_options_no_dim: "smart_ptr" '<' $@40 type_declaration '>' $@41
  669                                   | type_declaration_no_options_no_dim "??"

  670 $@42: %empty

  671 $@43: %empty

  672 type_declaration_no_options_no_dim: "array" '<' $@42 type_declaration '>' $@43

  673 $@44: %empty

  674 $@45: %empty

  675 type_declaration_no_options_no_dim: "table" '<' $@44 table_type_pair '>' $@45

  676 $@46: %empty

  677 $@47: %empty

  678 type_declaration_no_options_no_dim: "iterator" '<' $@46 type_declaration '>' $@47
  679                                   | "block"

  680 $@48: %empty

  681 $@49: %empty

  682 type_declaration_no_options_no_dim: "block" '<' $@48 type_declaration '>' $@49

  683 $@50: %empty

  684 $@51: %empty

  685 type_declaration_no_options_no_dim: "block" '<' $@50 optional_function_argument_list optional_function_type '>' $@51
  686                                   | "function"

  687 $@52: %empty

  688 $@53: %empty

  689 type_declaration_no_options_no_dim: "function" '<' $@52 type_declaration '>' $@53

  690 $@54: %empty

  691 $@55: %empty

  692 type_declaration_no_options_no_dim: "function" '<' $@54 optional_function_argument_list optional_function_type '>' $@55
  693                                   | "lambda"

  694 $@56: %empty

  695 $@57: %empty

  696 type_declaration_no_options_no_dim: "lambda" '<' $@56 type_declaration '>' $@57

  697 $@58: %empty

  698 $@59: %empty

  699 type_declaration_no_options_no_dim: "lambda" '<' $@58 optional_function_argument_list optional_function_type '>' $@59

  700 $@60: %empty

  701 $@61: %empty

  702 type_declaration_no_options_no_dim: "tuple" '<' $@60 tuple_type_list '>' $@61

  703 $@62: %empty

  704 $@63: %empty

  705 type_declaration_no_options_no_dim: "variant" '<' $@62 variant_type_list '>' $@63

  706 type_declaration: type_declaration_no_options
  707                 | type_declaration '|' type_declaration_no_options
  708                 | type_declaration '|' '#'

  709 $@64: %empty

  710 $@65: %empty

  711 $@66: %empty

  712 tuple_alias_declaration: "tuple" optional_public_or_private_alias "name" $@64 "begin of code block" $@65 tuple_alias_type_list $@66 "end of code block"

  713 $@67: %empty

  714 $@68: %empty

  715 $@69: %empty

  716 variant_alias_declaration: "variant" optional_public_or_private_alias "name" $@67 "begin of code block" $@68 variant_alias_type_list $@69 "end of code block"

  717 $@70: %empty

  718 $@71: %empty

  719 $@72: %empty

  720 bitfield_alias_declaration: "bitfield" optional_public_or_private_alias "name" $@70 "begin of code block" $@71 bitfield_alias_bits optional_comma $@72 "end of code block"

  721 make_decl: make_struct_decl
  722          | make_dim_decl
  723          | make_table_decl
  724          | array_comprehension
  725          | make_tuple_call

  726 make_struct_fields: "name" copy_or_move expr
  727                   | "name" ":=" expr
  728                   | make_struct_fields ',' "name" copy_or_move expr
  729                   | make_struct_fields ',' "name" ":=" expr
  730                   | "$f" '(' expr ')' copy_or_move expr
  731                   | "$f" '(' expr ')' ":=" expr
  732                   | make_struct_fields ',' "$f" '(' expr ')' copy_or_move expr
  733                   | make_struct_fields ',' "$f" '(' expr ')' ":=" expr

  734 make_variant_dim: make_struct_fields

  735 make_struct_single: make_struct_fields

  736 make_struct_dim_list: '(' make_struct_fields ')'
  737                     | make_struct_dim_list ',' '(' make_struct_fields ')'

  738 make_struct_dim_decl: make_struct_fields
  739                     | make_struct_dim_list optional_comma

  740 optional_make_struct_dim_decl: make_struct_dim_decl
  741                              | %empty

  742 use_initializer: %empty
  743                | "uninitialized"

  744 $@73: %empty

  745 $@74: %empty

  746 make_struct_decl: "struct" '<' $@73 type_declaration_no_options '>' $@74 '(' use_initializer optional_make_struct_dim_decl ')'

  747 $@75: %empty

  748 $@76: %empty

  749 make_struct_decl: "class" '<' $@75 type_declaration_no_options '>' $@76 '(' use_initializer optional_make_struct_dim_decl ')'

  750 $@77: %empty

  751 $@78: %empty

  752 make_struct_decl: "variant" '<' $@77 type_declaration_no_options '>' $@78 '(' make_variant_dim ')'

  753 $@79: %empty

  754 $@80: %empty

  755 make_struct_decl: "default" '<' $@79 type_declaration_no_options '>' $@80 use_initializer

  756 make_map_tuple: expr "=>" expr
  757               | expr

  758 make_tuple_call: "tuple" '(' expr_list optional_comma ')'

  759 $@81: %empty

  760 $@82: %empty

  761 make_tuple_call: "tuple" '<' $@81 type_declaration_no_options '>' $@82 '(' use_initializer optional_make_struct_dim_decl ')'

  762 make_dim_decl: '[' expr_list optional_comma ']'

  763 $@83: %empty

  764 $@84: %empty

  765 make_dim_decl: "array" "struct" '<' $@83 type_declaration_no_options '>' $@84 '(' use_initializer optional_make_struct_dim_decl ')'

  766 $@85: %empty

  767 $@86: %empty

  768 make_dim_decl: "array" "tuple" '<' $@85 type_declaration_no_options '>' $@86 '(' use_initializer optional_make_struct_dim_decl ')'

  769 $@87: %empty

  770 $@88: %empty

  771 make_dim_decl: "array" "variant" '<' $@87 type_declaration_no_options '>' $@88 '(' make_variant_dim ')'
  772              | "array" '(' expr_list optional_comma ')'

  773 $@89: %empty

  774 $@90: %empty

  775 make_dim_decl: "array" '<' $@89 type_declaration_no_options '>' $@90 '(' optional_expr_list ')'
  776              | "fixed_array" '(' expr_list optional_comma ')'

  777 $@91: %empty

  778 $@92: %empty

  779 make_dim_decl: "fixed_array" '<' $@91 type_declaration_no_options '>' $@92 '(' expr_list optional_comma ')'

  780 expr_map_tuple_list: make_map_tuple
  781                    | expr_map_tuple_list ',' make_map_tuple

  782 make_table_decl: "begin of code block" expr_map_tuple_list optional_comma "end of code block"
  783                | "table" '(' expr_map_tuple_list optional_comma ')'
  784                | "table" '<' type_declaration_no_options '>' '(' optional_expr_map_tuple_list ')'
  785                | "table" '<' type_declaration_no_options c_or_s type_declaration_no_options '>' '(' optional_expr_map_tuple_list ')'

  786 array_comprehension_where: %empty
  787                          | "end of expression" "where" expr

  788 optional_comma: %empty
  789               | ','

  790 array_comprehension: '[' "for" '(' variable_name_with_pos_list "in" expr_list ')' "end of expression" expr array_comprehension_where ']'
  791                    | '[' "iterator" "for" '(' variable_name_with_pos_list "in" expr_list ')' "end of expression" expr array_comprehension_where ']'
  792                    | "begin of code block" "for" '(' variable_name_with_pos_list "in" expr_list ')' "end of expression" make_map_tuple array_comprehension_where "end of code block"


Terminals, with rules where they appear

    $end (0) 0
    '!' (33) 105 121 379
    '#' (35) 660 662 708
    '$' (36) 20 299 651 653
    '%' (37) 36 40 141 391
    '&' (38) 149 302 398 509 517 658 659 664
    '(' (40) 59 69 70 71 73 74 94 103 109 116 117 252 253 254 255 274 275 291 292 293 306 310 340 341 342 343 345 355 356 357 358 362 363 364 365 366 367 368 409 419 420 421 422 452 453 454 455 456 457 459 460 461 462 463 464 465 466 467 468 490 519 582 623 624 650 651 653 730 731 732 733 736 737 746 749 752 758 761 765 768 771 772 775 776 779 783 784 785 790 791 792
    ')' (41) 59 69 70 71 73 74 94 103 109 116 117 252 253 254 255 274 275 291 292 293 306 310 340 341 342 343 345 355 356 357 358 362 363 364 365 366 367 368 409 419 420 421 422 452 453 454 455 456 457 459 460 461 462 463 464 465 466 467 468 490 519 582 623 624 650 651 653 730 731 732 733 736 737 746 749 752 758 761 765 768 771 772 775 776 779 783 784 785 790 791 792
    '*' (42) 139 389 418
    '+' (43) 137 381 387
    ',' (44) 49 83 96 112 273 295 308 341 521 522 524 550 584 585 629 633 728 729 732 733 737 781 789
    '-' (45) 138 382 388 654 657 659 662
    '.' (46) 41 166 168 169 353 354 355 356 357 358 361 411 413 415 461 463 464
    '/' (47) 42 140 390
    ':' (58) 51 52 119 274 425 494 500 510 511 528 529 531 532 562 567
    "end of expression" (59) 8 9 15 16 70 215 216 217 222 224 225 226 227 230 231 232 274 275 484 486 492 526 528 529 530 531 532 533 540 556 626 634 787 790 791 792
    '<' (60) 142 249 281 284 287 290 292 293 349 352 392 421 422 423 428 434 439 632 649 653 668 672 675 678 682 685 689 692 696 699 702 705 746 749 752 755 761 765 768 771 775 779 784 785
    '=' (61) 75 87 88 89 90 91 92 94 303 322 506 513 547 555
    '>' (62) 143 249 281 284 287 290 292 293 349 352 393 421 422 423 428 434 439 632 649 653 668 672 675 678 682 685 689 692 696 699 702 705 746 749 752 755 761 765 768 771 775 779 784 785
    '?' (63) 178 179 425 436 439 440 466 665
    '@' (64) 97 98 300 301 346 349 352 468
    '[' (91) 114 164 340 341 410 411 637 638 639 640 654 762 790 791
    ']' (93) 114 164 165 340 341 410 411 412 413 637 638 639 640 654 762 790 791
    '^' (94) 151 400
    "begin of code block" (123) 212 213 278 313 543 565 577 712 716 720 782 792
    '|' (124) 150 399 707 708
    "end of code block" (125) 212 213 278 313 543 565 577 712 716 720 782 792
    '~' (126) 122 380
    error (256) 235 361
    "lexer error" (258)
    "capture" (259) 310
    "struct" (260) 572 746 765
    "class" (261) 571 749
    "let" (262) 265 268
    "def" (263) 205 486 488
    "while" (264) 73
    "if" (265) 60 70
    "static_if" (266) 61
    "else" (267) 58 63
    "for" (268) 71 790 791 792
    "recover" (269) 264
    "true" (270) 80 91 375
    "false" (271) 81 92 376
    "new" (272) 251 252 253 254 255 256
    "typeinfo" (273) 291 292 293
    "type" (274) 85 290 428 434 439 649
    "in" (275) 71 86 790 791 792
    "is" (276) 174 176 428 429 430 467
    "as" (277) 44 175 177 178 179 431 434 435 436 439 440 465 466
    "elif" (278) 55
    "static_elif" (279) 56
    "array" (280) 672 765 768 771 772 775
    "return" (281) 259 260 261
    "null" (282) 369
    "break" (283) 257
    "try" (284) 264
    "options" (285) 37
    "table" (286) 675 783 784 785
    "expect" (287) 47
    "const" (288) 475 656 657 663
    "require" (289) 38 100
    "operator" (290) 121 122 123 124 125 126 127 128 129 130 131 132 133 134 135 136 137 138 139 140 141 142 143 144 145 146 147 148 149 150 151 152 153 154 155 156 157 158 159 160 161 162 163 164 165 166 167 168 169 170 171 172 173 174 175 176 177 178 179
    "enum" (291) 565
    "finally" (292) 213
    "delete" (293) 172 245 246
    "deref" (294) 419
    "typedef" (295) 556
    "typedecl" (296) 650
    "with" (297) 74
    "aka" (298) 520 522 583 585
    "assume" (299) 75
    "cast" (300) 281
    "override" (301) 472
    "abstract" (302) 486
    "upcast" (303) 284
    "iterator" (304) 678 791
    "var" (305) 266 269
    "addr" (306) 420
    "continue" (307) 258
    "where" (308) 787
    "pass" (309) 232
    "reinterpret" (310) 287
    "module" (311) 22
    "public" (312) 18 46 208 477 538 553 559 575
    "label" (313) 52 53
    "goto" (314) 53 54
    "implicit" (315) 661
    "explicit" (316) 246 655
    "shared" (317) 535
    "private" (318) 19 101 207 478 537 552 558 574
    "smart_ptr" (319) 668
    "unsafe" (320) 72 452
    "inscope" (321) 270
    "static" (322) 480
    "fixed_array" (323) 776 779
    "default" (324) 755
    "uninitialized" (325) 255 363 365 743
    "bool" (326) 180 586
    "void" (327) 606
    "string" (328) 181 587
    "auto" (329) 622 623
    "int" (330) 182 588 613
    "int2" (331) 183 592
    "int3" (332) 184 593
    "int4" (333) 185 594
    "uint" (334) 186 595 616
    "bitfield" (335) 612 632 720
    "uint2" (336) 187 599
    "uint3" (337) 188 600
    "uint4" (338) 189 601
    "float" (339) 190 602
    "float2" (340) 191 603
    "float3" (341) 192 604
    "float4" (342) 193 605
    "range" (343) 194 607
    "urange" (344) 195 608
    "range64" (345) 196 609
    "urange64" (346) 197 610
    "block" (347) 679 682 685
    "int64" (348) 198 591 619
    "uint64" (349) 199 598 620
    "double" (350) 200 611
    "function" (351) 686 689 692
    "lambda" (352) 693 696 699
    "int8" (353) 201 589 614
    "uint8" (354) 202 596 617
    "int16" (355) 203 590 615
    "uint16" (356) 204 597 618
    "tuple" (357) 702 712 758 761 768
    "variant" (358) 705 716 752 771
    "generator" (359) 421 422 423
    "yield" (360) 262 263
    "sealed" (361) 473 569
    "+=" (362) 123 331
    "-=" (363) 124 332
    "/=" (364) 126 334
    "*=" (365) 125 333
    "%=" (366) 127 335
    "&=" (367) 128 325
    "|=" (368) 129 326
    "^=" (369) 130 327
    "<<" (370) 156 383
    ">>" (371) 157 384
    "++" (372) 152 154 405 407
    "--" (373) 153 155 406 408
    "<=" (374) 147 396
    "<<=" (375) 158 336
    ">>=" (376) 159 337
    ">=" (377) 148 397
    "==" (378) 145 394 663 664
    "!=" (379) 146 395
    "->" (380) 342 343
    "<-" (381) 261 263 298 304 323 507 514
    "??" (382) 173 424 669
    "?." (383) 167 170 414 415 462 464
    "?[" (384) 165 412 413
    "<|" (385) 448
    "|>" (386) 110 449 450
    ":=" (387) 169 171 305 324 515 727 729 731 733
    "<<<" (388) 160 385
    ">>>" (389) 161 386
    "<<<=" (390) 162 338
    ">>>=" (391) 163 339
    "=>" (392) 297 298 756
    "::" (393) 243 244
    "&&" (394) 106 134 401
    "||" (395) 107 135 402
    "^^" (396) 108 136 403
    "&&=" (397) 131 328
    "||=" (398) 132 329
    "^^=" (399) 133 330
    ".." (400) 144 404
    "$$" (401) 453
    "$i" (402) 345 454 519 582
    "$v" (403) 455
    "$b" (404) 456
    "$a" (405) 457 490
    "$t" (406) 624
    "$c" (407) 459 460 468
    "$f" (408) 461 462 463 464 465 466 467 730 731 732 733
    "..." (409) 458
    "integer constant" <i> (410) 50 51 52 53 78 89 314
    "long integer constant" <i64> (411) 316
    "unsigned integer constant" <ui> (412) 315
    "unsigned long integer constant" <ui64> (413) 317
    "unsigned int8 constant" <ui> (414) 318
    "floating point constant" <fd> (415) 79 90 319
    "double constant" <d> (416) 320
    "name" <s> (417) 21 39 41 42 44 75 77 84 88 120 168 169 170 176 177 179 242 243 244 272 273 292 293 302 303 304 305 306 342 343 353 354 355 356 414 415 430 431 436 494 500 518 520 521 522 523 524 546 547 555 560 570 581 583 584 585 623 625 626 628 629 712 716 720 726 727 728 729
    "start of the string" (418) 27 28 32
    STRING_CHARACTER <ch> (419) 23 25 33 34
    STRING_CHARACTER_ESC (420) 24 26
    "end of the string" (421) 27 28 32
    "{" (422) 31
    "}" (423) 31
    "end of failed eader macro" (424)
    ";}}" (425)
    ";}]" (426)
    ";]]" (427)
    ",]]" (428)
    ",}]" (429)
    UNARY_MINUS (430)
    UNARY_PLUS (431)
    PRE_INC (432)
    PRE_DEC (433)
    LLPIPE (434)
    POST_INC (435)
    POST_DEC (436)
    DEREF (437)


Nonterminals, with rules where they appear

    $accept (210)
        on left: 0
    program (211)
        on left: 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15
        on right: 0 2 3 4 5 6 7 8 9 10 11 12 13 14 15
    top_level_reader_macro (212)
        on left: 16
        on right: 14
    optional_public_or_private_module <b> (213)
        on left: 17 18 19
        on right: 22
    module_name <s> (214)
        on left: 20 21
        on right: 22
    module_declaration (215)
        on left: 22
        on right: 2
    character_sequence <s> (216)
        on left: 23 24 25 26
        on right: 25 26 27 30
    string_constant <s> (217)
        on left: 27 28
        on right: 76 87
    string_builder_body <pExpression> (218)
        on left: 29 30 31
        on right: 30 31 32
    string_builder <pExpression> (219)
        on left: 32
        on right: 373
    reader_character_sequence (220)
        on left: 33 34
        on right: 34 36
    expr_reader <pExpression> (221)
        on left: 36
        on right: 16 372
    $@1 (222)
        on left: 35
        on right: 36
    options_declaration (223)
        on left: 37
        on right: 9
    require_declaration (224)
        on left: 38
        on right: 8
    require_module_name <s> (225)
        on left: 39 40 41 42
        on right: 40 41 42 43 44
    require_module (226)
        on left: 43 44
        on right: 38
    is_public_module <b> (227)
        on left: 45 46
        on right: 43 44
    expect_declaration (228)
        on left: 47
        on right: 7
    expect_list (229)
        on left: 48 49
        on right: 47 49
    expect_error (230)
        on left: 50 51
        on right: 48 49
    expression_label <pExpression> (231)
        on left: 52
        on right: 230
    expression_goto <pExpression> (232)
        on left: 53 54
        on right: 231
    elif_or_static_elif <b> (233)
        on left: 55 56
        on right: 59
    expression_else <pExpression> (234)
        on left: 57 58 59
        on right: 59 69
    if_or_static_if <b> (235)
        on left: 60 61
        on right: 69
    expression_else_one_liner <pExpression> (236)
        on left: 62 63
        on right: 70
    expression_if_one_liner <pExpression> (237)
        on left: 64 65 66 67 68
        on right: 63 70
    expression_if_then_else <pExpression> (238)
        on left: 69 70
        on right: 228
    expression_for_loop <pExpression> (239)
        on left: 71
        on right: 223
    expression_unsafe <pExpression> (240)
        on left: 72
        on right: 220
    expression_while_loop <pExpression> (241)
        on left: 73
        on right: 219
    expression_with <pExpression> (242)
        on left: 74
        on right: 221
    expression_with_alias <pExpression> (243)
        on left: 75
        on right: 222
    annotation_argument_value <aa> (244)
        on left: 76 77 78 79 80 81
        on right: 82 83
    annotation_argument_value_list <aaList> (245)
        on left: 82 83
        on right: 83 94
    annotation_argument_name <s> (246)
        on left: 84 85 86
        on right: 87 88 89 90 91 92 93 94
    annotation_argument <aa> (247)
        on left: 87 88 89 90 91 92 93 94
        on right: 95 96 97 98
    annotation_argument_list <aaList> (248)
        on left: 95 96
        on right: 37 96 103
    metadata_argument_list <aaList> (249)
        on left: 97 98
        on right: 98 470
    annotation_declaration_name <s> (250)
        on left: 99 100 101
        on right: 102 103
    annotation_declaration_basic <fa> (251)
        on left: 102 103
        on right: 104
    annotation_declaration <fa> (252)
        on left: 104 105 106 107 108 109 110
        on right: 105 106 107 108 109 110 111 112
    annotation_list <faList> (253)
        on left: 111 112
        on right: 112 114
    optional_annotation_list <faList> (254)
        on left: 113 114
        on right: 205 311 312 486 488 565 580
    optional_function_argument_list <pVarDeclList> (255)
        on left: 115 116 117
        on right: 209 311 312 352 685 692 699
    optional_function_type <pTypeDecl> (256)
        on left: 118 119
        on right: 209 311 312 352 685 692 699
    function_name <s> (257)
        on left: 120 121 122 123 124 125 126 127 128 129 130 131 132 133 134 135 136 137 138 139 140 141 142 143 144 145 146 147 148 149 150 151 152 153 154 155 156 157 158 159 160 161 162 163 164 165 166 167 168 169 170 171 172 173 174 175 176 177 178 179 180 181 182 183 184 185 186 187 188 189 190 191 192 193 194 195 196 197 198 199 200 201 202 203 204
        on right: 209
    global_function_declaration (258)
        on left: 205
        on right: 6
    optional_public_or_private_function <b> (259)
        on left: 206 207 208
        on right: 211
    function_declaration_header <pFuncDecl> (260)
        on left: 209
        on right: 211 486 488
    function_declaration <pFuncDecl> (261)
        on left: 211
        on right: 205
    $@2 (262)
        on left: 210
        on right: 211
    expression_block <pExpression> (263)
        on left: 212 213
        on right: 58 59 69 71 72 73 74 211 264 296 312 423 488
    expr_call_pipe <pExpression> (264)
        on left: 214
        on right: 451
    expression_any <pExpression> (265)
        on left: 215 216 217 218 219 220 221 222 223 224 225 226 227 228 229 230 231 232
        on right: 234
    expressions <pExpression> (266)
        on left: 233 234 235
        on right: 212 213 234 235 313
    optional_expr_list <pExpression> (267)
        on left: 236 237
        on right: 651 653 775
    optional_expr_map_tuple_list <pExpression> (268)
        on left: 238 239
        on right: 784 785
    type_declaration_no_options_list <pTypeDeclList> (269)
        on left: 240 241
        on right: 241 653
    name_in_namespace <s> (270)
        on left: 242 243 244
        on right: 36 99 291 292 293 340 341 344 362 363 364 365 366 370 567 621 651 653
    expression_delete <pExpression> (271)
        on left: 245 246
        on right: 217
    new_type_declaration <pTypeDecl> (272)
        on left: 249 250
        on right: 251 252 253 254 255
    $@3 (273)
        on left: 247
        on right: 249
    $@4 (274)
        on left: 248
        on right: 249
    expr_new <pExpression> (275)
        on left: 251 252 253 254 255 256
        on right: 444
    expression_break <pExpression> (276)
        on left: 257
        on right: 67 224
    expression_continue <pExpression> (277)
        on left: 258
        on right: 68 225
    expression_return <pExpression> (278)
        on left: 259 260 261
        on right: 65 226
    expression_yield <pExpression> (279)
        on left: 262 263
        on right: 66 227
    expression_try_catch <pExpression> (280)
        on left: 264
        on right: 229
    kwd_let_var_or_nothing <b> (281)
        on left: 265 266 267
        on right: 489
    kwd_let <b> (282)
        on left: 268 269
        on right: 276 277 278 543 545
    optional_in_scope <b> (283)
        on left: 270 271
        on right: 276 277 278
    tuple_expansion <pNameList> (284)
        on left: 272 273
        on right: 273 274 275
    tuple_expansion_variable_declaration <pVarDecl> (285)
        on left: 274 275
        on right: 277
    expression_let <pExpression> (286)
        on left: 276 277 278
        on right: 218
    expr_cast <pExpression> (287)
        on left: 281 284 287
        on right: 443
    $@5 (288)
        on left: 279
        on right: 281
    $@6 (289)
        on left: 280
        on right: 281
    $@7 (290)
        on left: 282
        on right: 284
    $@8 (291)
        on left: 283
        on right: 284
    $@9 (292)
        on left: 285
        on right: 287
    $@10 (293)
        on left: 286
        on right: 287
    expr_type_decl <pExpression> (294)
        on left: 290
        on right: 442
    $@11 (295)
        on left: 288
        on right: 290
    $@12 (296)
        on left: 289
        on right: 290
    expr_type_info <pExpression> (297)
        on left: 291 292 293
        on right: 441
    expr_list <pExpression> (298)
        on left: 294 295
        on right: 71 237 253 295 341 343 356 358 366 368 409 460 758 762 772 776 779 790 791 792
    block_or_simple_block <pExpression> (299)
        on left: 296 297 298
        on right: 311
    block_or_lambda <i> (300)
        on left: 299 300 301
        on right: 311 312
    capture_entry <pCapt> (301)
        on left: 302 303 304 305 306
        on right: 307 308
    capture_list <pCaptList> (302)
        on left: 307 308
        on right: 308 310
    optional_capture_list <pCaptList> (303)
        on left: 309 310
        on right: 311 312 421 422 423
    expr_full_block <pExpression> (304)
        on left: 311
        on right: 447
    expr_full_block_assumed_piped <pExpression> (305)
        on left: 312 313
        on right: 214
    expr_numeric_const <pExpression> (306)
        on left: 314 315 316 317 318 319 320
        on right: 371
    expr_assign <pExpression> (307)
        on left: 321 322 323 324 325 326 327 328 329 330 331 332 333 334 335 336 337 338 339
        on right: 216
    expr_named_call <pExpression> (308)
        on left: 340 341
        on right: 446
    expr_method_call <pExpression> (309)
        on left: 342 343
        on right: 445
    func_addr_name <pExpression> (310)
        on left: 344 345
        on right: 346 349 352
    func_addr_expr <pExpression> (311)
        on left: 346 349 352
        on right: 416
    $@13 (312)
        on left: 347
        on right: 349
    $@14 (313)
        on left: 348
        on right: 349
    $@15 (314)
        on left: 350
        on right: 352
    $@16 (315)
        on left: 351
        on right: 352
    expr_field <pExpression> (316)
        on left: 353 354 355 356 357 358 361
        on right: 377
    $@17 (317)
        on left: 359
        on right: 361
    $@18 (318)
        on left: 360
        on right: 361
    expr_call <pExpression> (319)
        on left: 362 363 364 365 366 367 368
        on right: 214 417
    expr <pExpression> (320)
        on left: 369 370 371 372 373 374 375 376 377 378 379 380 381 382 383 384 385 386 387 388 389 390 391 392 393 394 395 396 397 398 399 400 401 402 403 404 405 406 407 408 409 410 411 412 413 414 415 416 417 418 419 420 421 422 423 424 425 428 429 430 431 434 435 436 439 440 441 442 443 444 445 446 447 448 449 450 451 452
        on right
    $@19 (321)
        on left: 426
        on right: 428
    $@20 (322)
        on left: 427
        on right: 428
    $@21 (323)
        on left: 432
        on right: 434
    $@22 (324)
        on left: 433
        on right: 434
    $@23 (325)
        on left: 437
        on right: 439
    $@24 (326)
        on left: 438
        on right: 439
    expr_mtag <pExpression> (327)
        on left: 453 454 455 456 457 458 459 460 461 462 463 464 465 466 467 468
        on right: 378
    optional_field_annotation <aaList> (328)
        on left: 469 470
        on right: 481 489 542 545
    optional_override <i> (329)
        on left: 471 472 473
        on right: 481 488
    optional_constant <b> (330)
        on left: 474 475
        on right: 486 488
    optional_public_or_private_member_variable <b> (331)
        on left: 476 477 478
        on right: 481 486 488
    optional_static_member_variable <b> (332)
        on left: 479 480
        on right: 481 488
    structure_variable_declaration <pVarDecl> (333)
        on left: 481
        on right: 484
    struct_variable_declaration_list <pVarDeclList> (334)
        on left: 482 484 486 488
        on right: 484 486 488 577
    $@25 (335)
        on left: 483
        on right: 484
    $@26 (336)
        on left: 485
        on right: 486
    $@27 (337)
        on left: 487
        on right: 488
    function_argument_declaration <pVarDecl> (338)
        on left: 489 490
        on right: 491 492
    function_argument_list <pVarDeclList> (339)
        on left: 491 492
        on right: 117 492
    tuple_type <pVarDecl> (340)
        on left: 493 494
        on right: 495 496 499
    tuple_type_list <pVarDeclList> (341)
        on left: 495 496
        on right: 496 702
    tuple_alias_type_list <pVarDeclList> (342)
        on left: 497 498 499
        on right: 498 499 712
    variant_type <pVarDecl> (343)
        on left: 500
        on right: 501 502 505
    variant_type_list <pVarDeclList> (344)
        on left: 501 502
        on right: 502 705
    variant_alias_type_list <pVarDeclList> (345)
        on left: 503 504 505
        on right: 504 505 716
    copy_or_move <b> (346)
        on left: 506 507
        on right: 511 512 726 728 730 732
    variable_declaration <pVarDecl> (347)
        on left: 508 509 510 511 512
        on right: 481 489
    copy_or_move_or_clone <i> (348)
        on left: 513 514 515
        on right: 274 275 529 530 532 533
    optional_ref <b> (349)
        on left: 516 517
        on right: 275 530 533
    let_variable_name_with_pos_list <pNameWithPosList> (350)
        on left: 518 519 520 521 522
        on right: 521 522 528 529 530
    global_let_variable_name_with_pos_list <pNameWithPosList> (351)
        on left: 523 524
        on right: 524 531 532 533
    variable_declaration_list <pVarDeclList> (352)
        on left: 525 526 527
        on right: 278 526 527
    let_variable_declaration <pVarDecl> (353)
        on left: 528 529 530
        on right: 276 527 542
    global_let_variable_declaration <pVarDecl> (354)
        on left: 531 532 533
        on right: 545
    optional_shared <b> (355)
        on left: 534 535
        on right: 22 543 545
    optional_public_or_private_variable <b> (356)
        on left: 536 537 538
        on right: 543 545
    global_variable_declaration_list <pVarDeclList> (357)
        on left: 539 540 542
        on right: 540 542 543
    $@28 (358)
        on left: 541
        on right: 542
    global_let (359)
        on left: 543 545
        on right: 5
    $@29 (360)
        on left: 544
        on right: 545
    enum_expression <pEnumPair> (361)
        on left: 546 547
        on right: 549 550
    enum_list <pEnum> (362)
        on left: 548 549 550
        on right: 550 565
    optional_public_or_private_alias <b> (363)
        on left: 551 552 553
        on right: 555 712 716 720
    single_alias (364)
        on left: 555
        on right: 556
    $@30 (365)
        on left: 554
        on right: 555
    alias_declaration (366)
        on left: 556
        on right: 10
    optional_public_or_private_enum <b> (367)
        on left: 557 558 559
        on right: 565
    enum_name <pEnum> (368)
        on left: 560
        on right: 565
    optional_enum_basic_type_declaration <type> (369)
        on left: 561 562
        on right: 565
    enum_declaration (370)
        on left: 565
        on right: 4
    $@31 (371)
        on left: 563
        on right: 565
    $@32 (372)
        on left: 564
        on right: 565
    optional_structure_parent <s> (373)
        on left: 566 567
        on right: 570
    optional_sealed <b> (374)
        on left: 568 569
        on right: 570
    structure_name <pStructure> (375)
        on left: 570
        on right: 580
    class_or_struct <b> (376)
        on left: 571 572
        on right: 580
    optional_public_or_private_structure <b> (377)
        on left: 573 574 575
        on right: 580
    optional_struct_variable_declaration_list <pVarDeclList> (378)
        on left: 576 577
        on right: 580
    structure_declaration (379)
        on left: 580
        on right: 3
    $@33 (380)
        on left: 578
        on right: 580
    $@34 (381)
        on left: 579
        on right: 580
    variable_name_with_pos_list <pNameWithPosList> (382)
        on left: 581 582 583 584 585
        on right: 71 508 509 510 511 512 584 585 790 791 792
    basic_type_declaration <type> (383)
        on left: 586 587 588 589 590 591 592 593 594 595 596 597 598 599 600 601 602 603 604 605 606 607 608 609 610 611 612
        on right: 357 358 367 368 429 435 440 450 643
    enum_basic_type_declaration <type> (384)
        on left: 613 614 615 616 617 618 619 620
        on right: 562
    structure_type_declaration <pTypeDecl> (385)
        on left: 621
        on right: 250 646
    auto_type_declaration <pTypeDecl> (386)
        on left: 622 623 624
        on right: 644
    bitfield_bits <pNameList> (387)
        on left: 625 626
        on right: 626 632
    bitfield_alias_bits <pNameList> (388)
        on left: 627 628 629
        on right: 629 720
    bitfield_type_declaration <pTypeDecl> (389)
        on left: 632
        on right: 645
    $@35 (390)
        on left: 630
        on right: 632
    $@36 (391)
        on left: 631
        on right: 632
    c_or_s (392)
        on left: 633 634
        on right: 241 293 496 498 499 502 504 505 636 785
    table_type_pair <aTypePair> (393)
        on left: 635 636
        on right: 675
    dim_list <pTypeDecl> (394)
        on left: 637 638 639 640
        on right: 639 640 642
    type_declaration_no_options <pTypeDecl> (395)
        on left: 641 642
        on right: 274 281 284 287 349 421 422 423 428 528 529 531 532 706 707 746 749 752 755 761 765 768 771 775 779 784 785
    type_declaration_no_options_no_dim <pTypeDecl> (396)
        on left: 643 644 645 646 649 650 651 653 654 655 656 657 658 659 660 661 662 663 664 665 668 669 672 675 678 679 682 685 686 689 692 693 696 699 702 705
        on right: 641 642 654 655 656 657 658 659 660 661 662 663 664 665 669
    $@37 (397)
        on left: 647
        on right: 649
    $@38 (398)
        on left: 648
        on right: 649
    $@39 (399)
        on left: 652
        on right: 653
    $@40 (400)
        on left: 666
        on right: 668
    $@41 (401)
        on left: 667
        on right: 668
    $@42 (402)
        on left: 670
        on right: 672
    $@43 (403)
        on left: 671
        on right: 672
    $@44 (404)
        on left: 673
        on right: 675
    $@45 (405)
        on left: 674
        on right: 675
    $@46 (406)
        on left: 676
        on right: 678
    $@47 (407)
        on left: 677
        on right: 678
    $@48 (408)
        on left: 680
        on right: 682
    $@49 (409)
        on left: 681
        on right: 682
    $@50 (410)
        on left: 683
        on right: 685
    $@51 (411)
        on left: 684
        on right: 685
    $@52 (412)
        on left: 687
        on right: 689
    $@53 (413)
        on left: 688
        on right: 689
    $@54 (414)
        on left: 690
        on right: 692
    $@55 (415)
        on left: 691
        on right: 692
    $@56 (416)
        on left: 694
        on right: 696
    $@57 (417)
        on left: 695
        on right: 696
    $@58 (418)
        on left: 697
        on right: 699
    $@59 (419)
        on left: 698
        on right: 699
    $@60 (420)
        on left: 700
        on right: 702
    $@61 (421)
        on left: 701
        on right: 702
    $@62 (422)
        on left: 703
        on right: 705
    $@63 (423)
        on left: 704
        on right: 705
    type_declaration <pTypeDecl> (424)
        on left: 706 707 708
        on right: 119 240 241 249 290 434 439 493 494 500 510 511 555 635 636 649 668 672 678 682 689 696 707 708
    tuple_alias_declaration (425)
        on left: 712
        on right: 12
    $@64 (426)
        on left: 709
        on right: 712
    $@65 (427)
        on left: 710
        on right: 712
    $@66 (428)
        on left: 711
        on right: 712
    variant_alias_declaration (429)
        on left: 716
        on right: 11
    $@67 (430)
        on left: 713
        on right: 716
    $@68 (431)
        on left: 714
        on right: 716
    $@69 (432)
        on left: 715
        on right: 716
    bitfield_alias_declaration (433)
        on left: 720
        on right: 13
    $@70 (434)
        on left: 717
        on right: 720
    $@71 (435)
        on left: 718
        on right: 720
    $@72 (436)
        on left: 719
        on right: 720
    make_decl <pExpression> (437)
        on left: 721 722 723 724 725
        on right: 256 374
    make_struct_fields <pMakeStruct> (438)
        on left: 726 727 728 729 730 731 732 733
        on right: 340 341 728 729 732 733 734 735 736 737 738
    make_variant_dim <pExpression> (439)
        on left: 734
        on right: 752 771
    make_struct_single <pExpression> (440)
        on left: 735
        on right: 254 255 364 365
    make_struct_dim_list <pExpression> (441)
        on left: 736 737
        on right: 737 739
    make_struct_dim_decl <pExpression> (442)
        on left: 738 739
        on right: 740
    optional_make_struct_dim_decl <pExpression> (443)
        on left: 740 741
        on right: 746 749 761 765 768
    use_initializer <b> (444)
        on left: 742 743
        on right: 252 746 749 755 761 765 768
    make_struct_decl <pExpression> (445)
        on left: 746 749 752 755
        on right: 721
    $@73 (446)
        on left: 744
        on right: 746
    $@74 (447)
        on left: 745
        on right: 746
    $@75 (448)
        on left: 747
        on right: 749
    $@76 (449)
        on left: 748
        on right: 749
    $@77 (450)
        on left: 750
        on right: 752
    $@78 (451)
        on left: 751
        on right: 752
    $@79 (452)
        on left: 753
        on right: 755
    $@80 (453)
        on left: 754
        on right: 755
    make_map_tuple <pExpression> (454)
        on left: 756 757
        on right: 780 781 792
    make_tuple_call <pExpression> (455)
        on left: 758 761
        on right: 725
    $@81 (456)
        on left: 759
        on right: 761
    $@82 (457)
        on left: 760
        on right: 761
    make_dim_decl <pExpression> (458)
        on left: 762 765 768 771 772 775 776 779
        on right: 722
    $@83 (459)
        on left: 763
        on right: 765
    $@84 (460)
        on left: 764
        on right: 765
    $@85 (461)
        on left: 766
        on right: 768
    $@86 (462)
        on left: 767
        on right: 768
    $@87 (463)
        on left: 769
        on right: 771
    $@88 (464)
        on left: 770
        on right: 771
    $@89 (465)
        on left: 773
        on right: 775
    $@90 (466)
        on left: 774
        on right: 775
    $@91 (467)
        on left: 777
        on right: 779
    $@92 (468)
        on left: 778
        on right: 779
    expr_map_tuple_list <pExpression> (469)
        on left: 780 781
        on right: 239 781 782 783
    make_table_decl <pExpression> (470)
        on left: 782 783 784 785
        on right: 723
    array_comprehension_where <pExpression> (471)
        on left: 786 787
        on right: 790 791 792
    optional_comma <b> (472)
        on left: 788 789
        on right: 237 239 409 565 720 739 758 762 772 776 779 782 783
    array_comprehension <pExpression> (473)
        on left: 790 791 792
        on right: 724


State 0

    0 $accept: . program $end

    $default  reduce using rule 1 (program)

    program  go to state 1


State 1

    0 $accept: program . $end
    2 program: program . module_declaration
    3        | program . structure_declaration
    4        | program . enum_declaration
    5        | program . global_let
    6        | program . global_function_declaration
    7        | program . expect_declaration
    8        | program . require_declaration "end of expression"
    9        | program . options_declaration "end of expression"
   10        | program . alias_declaration
   11        | program . variant_alias_declaration
   12        | program . tuple_alias_declaration
   13        | program . bitfield_alias_declaration
   14        | program . top_level_reader_macro
   15        | program . "end of expression"

    $end                 shift, and go to state 2
    "let"                shift, and go to state 3
    "options"            shift, and go to state 4
    "expect"             shift, and go to state 5
    "require"            shift, and go to state 6
    "typedef"            shift, and go to state 7
    "var"                shift, and go to state 8
    "module"             shift, and go to state 9
    "bitfield"           shift, and go to state 10
    "tuple"              shift, and go to state 11
    "variant"            shift, and go to state 12
    "end of expression"  shift, and go to state 13
    '%'                  shift, and go to state 14
    '['                  shift, and go to state 15

    $default  reduce using rule 113 (optional_annotation_list)

    top_level_reader_macro       go to state 16
    module_declaration           go to state 17
    expr_reader                  go to state 18
    options_declaration          go to state 19
    require_declaration          go to state 20
    expect_declaration           go to state 21
    optional_annotation_list     go to state 22
    global_function_declaration  go to state 23
    kwd_let                      go to state 24
    global_let                   go to state 25
    alias_declaration            go to state 26
    enum_declaration             go to state 27
    structure_declaration        go to state 28
    tuple_alias_declaration      go to state 29
    variant_alias_declaration    go to state 30
    bitfield_alias_declaration   go to state 31


State 2

    0 $accept: program $end .

    $default  accept


State 3

  268 kwd_let: "let" .

    $default  reduce using rule 268 (kwd_let)


State 4

   37 options_declaration: "options" . annotation_argument_list

    "type"  shift, and go to state 32
    "in"    shift, and go to state 33
    "name"  shift, and go to state 34

    annotation_argument_name  go to state 35
    annotation_argument       go to state 36
    annotation_argument_list  go to state 37


State 5

   47 expect_declaration: "expect" . expect_list

    "integer constant"  shift, and go to state 38

    expect_list   go to state 39
    expect_error  go to state 40


State 6

   38 require_declaration: "require" . require_module

    "name"  shift, and go to state 41
    '%'     shift, and go to state 42

    require_module_name  go to state 43
    require_module       go to state 44


State 7

  556 alias_declaration: "typedef" . single_alias "end of expression"

    "public"   shift, and go to state 45
    "private"  shift, and go to state 46

    $default  reduce using rule 551 (optional_public_or_private_alias)

    optional_public_or_private_alias  go to state 47
    single_alias                      go to state 48


State 8

  269 kwd_let: "var" .

    $default  reduce using rule 269 (kwd_let)


State 9

   22 module_declaration: "module" . module_name optional_shared optional_public_or_private_module

    "name"  shift, and go to state 49
    '$'     shift, and go to state 50

    module_name  go to state 51


State 10

  720 bitfield_alias_declaration: "bitfield" . optional_public_or_private_alias "name" $@70 "begin of code block" $@71 bitfield_alias_bits optional_comma $@72 "end of code block"

    "public"   shift, and go to state 45
    "private"  shift, and go to state 46

    $default  reduce using rule 551 (optional_public_or_private_alias)

    optional_public_or_private_alias  go to state 52


State 11

  712 tuple_alias_declaration: "tuple" . optional_public_or_private_alias "name" $@64 "begin of code block" $@65 tuple_alias_type_list $@66 "end of code block"

    "public"   shift, and go to state 45
    "private"  shift, and go to state 46

    $default  reduce using rule 551 (optional_public_or_private_alias)

    optional_public_or_private_alias  go to state 53


State 12

  716 variant_alias_declaration: "variant" . optional_public_or_private_alias "name" $@67 "begin of code block" $@68 variant_alias_type_list $@69 "end of code block"

    "public"   shift, and go to state 45
    "private"  shift, and go to state 46

    $default  reduce using rule 551 (optional_public_or_private_alias)

    optional_public_or_private_alias  go to state 54


State 13

   15 program: program "end of expression" .

    $default  reduce using rule 15 (program)


State 14

   36 expr_reader: '%' . name_in_namespace $@1 reader_character_sequence

    "::"    shift, and go to state 55
    "name"  shift, and go to state 56

    name_in_namespace  go to state 57


State 15

  114 optional_annotation_list: '[' . annotation_list ']'

    "require"  shift, and go to state 58
    "private"  shift, and go to state 59
    "|>"       shift, and go to state 60
    "::"       shift, and go to state 55
    "name"     shift, and go to state 56
    '!'        shift, and go to state 61
    '('        shift, and go to state 62

    annotation_declaration_name   go to state 63
    annotation_declaration_basic  go to state 64
    annotation_declaration        go to state 65
    annotation_list               go to state 66
    name_in_namespace             go to state 67


State 16

   14 program: program top_level_reader_macro .

    $default  reduce using rule 14 (program)


State 17

    2 program: program module_declaration .

    $default  reduce using rule 2 (program)


State 18

   16 top_level_reader_macro: expr_reader . "end of expression"

    "end of expression"  shift, and go to state 68


State 19

    9 program: program options_declaration . "end of expression"

    "end of expression"  shift, and go to state 69


State 20

    8 program: program require_declaration . "end of expression"

    "end of expression"  shift, and go to state 70


State 21

    7 program: program expect_declaration .

    $default  reduce using rule 7 (program)


State 22

  205 global_function_declaration: optional_annotation_list . "def" function_declaration
  565 enum_declaration: optional_annotation_list . "enum" optional_public_or_private_enum enum_name optional_enum_basic_type_declaration "begin of code block" $@31 enum_list optional_comma $@32 "end of code block"
  580 structure_declaration: optional_annotation_list . class_or_struct optional_public_or_private_structure $@33 structure_name $@34 optional_struct_variable_declaration_list

    "struct"  shift, and go to state 71
    "class"   shift, and go to state 72
    "def"     shift, and go to state 73
    "enum"    shift, and go to state 74

    class_or_struct  go to state 75


State 23

    6 program: program global_function_declaration .

    $default  reduce using rule 6 (program)


State 24

  543 global_let: kwd_let . optional_shared optional_public_or_private_variable "begin of code block" global_variable_declaration_list "end of code block"
  545           | kwd_let . optional_shared optional_public_or_private_variable $@29 optional_field_annotation global_let_variable_declaration

    "shared"  shift, and go to state 76

    $default  reduce using rule 534 (optional_shared)

    optional_shared  go to state 77


State 25

    5 program: program global_let .

    $default  reduce using rule 5 (program)


State 26

   10 program: program alias_declaration .

    $default  reduce using rule 10 (program)


State 27

    4 program: program enum_declaration .

    $default  reduce using rule 4 (program)


State 28

    3 program: program structure_declaration .

    $default  reduce using rule 3 (program)


State 29

   12 program: program tuple_alias_declaration .

    $default  reduce using rule 12 (program)


State 30

   11 program: program variant_alias_declaration .

    $default  reduce using rule 11 (program)


State 31

   13 program: program bitfield_alias_declaration .

    $default  reduce using rule 13 (program)


State 32

   85 annotation_argument_name: "type" .

    $default  reduce using rule 85 (annotation_argument_name)


State 33

   86 annotation_argument_name: "in" .

    $default  reduce using rule 86 (annotation_argument_name)


State 34

   84 annotation_argument_name: "name" .

    $default  reduce using rule 84 (annotation_argument_name)


State 35

   87 annotation_argument: annotation_argument_name . '=' string_constant
   88                    | annotation_argument_name . '=' "name"
   89                    | annotation_argument_name . '=' "integer constant"
   90                    | annotation_argument_name . '=' "floating point constant"
   91                    | annotation_argument_name . '=' "true"
   92                    | annotation_argument_name . '=' "false"
   93                    | annotation_argument_name .
   94                    | annotation_argument_name . '=' '(' annotation_argument_value_list ')'

    '='  shift, and go to state 78

    $default  reduce using rule 93 (annotation_argument)


State 36

   95 annotation_argument_list: annotation_argument .

    $default  reduce using rule 95 (annotation_argument_list)


State 37

   37 options_declaration: "options" annotation_argument_list .
   96 annotation_argument_list: annotation_argument_list . ',' annotation_argument

    ','  shift, and go to state 79

    $default  reduce using rule 37 (options_declaration)


State 38

   50 expect_error: "integer constant" .
   51             | "integer constant" . ':' "integer constant"

    ':'  shift, and go to state 80

    $default  reduce using rule 50 (expect_error)


State 39

   47 expect_declaration: "expect" expect_list .
   49 expect_list: expect_list . ',' expect_error

    ','  shift, and go to state 81

    $default  reduce using rule 47 (expect_declaration)


State 40

   48 expect_list: expect_error .

    $default  reduce using rule 48 (expect_list)


State 41

   39 require_module_name: "name" .

    $default  reduce using rule 39 (require_module_name)


State 42

   40 require_module_name: '%' . require_module_name

    "name"  shift, and go to state 41
    '%'     shift, and go to state 42

    require_module_name  go to state 82


State 43

   41 require_module_name: require_module_name . '.' "name"
   42                    | require_module_name . '/' "name"
   43 require_module: require_module_name . is_public_module
   44               | require_module_name . "as" "name" is_public_module

    "as"      shift, and go to state 83
    "public"  shift, and go to state 84
    '/'       shift, and go to state 85
    '.'       shift, and go to state 86

    $default  reduce using rule 45 (is_public_module)

    is_public_module  go to state 87


State 44

   38 require_declaration: "require" require_module .

    $default  reduce using rule 38 (require_declaration)


State 45

  553 optional_public_or_private_alias: "public" .

    $default  reduce using rule 553 (optional_public_or_private_alias)


State 46

  552 optional_public_or_private_alias: "private" .

    $default  reduce using rule 552 (optional_public_or_private_alias)


State 47

  555 single_alias: optional_public_or_private_alias . "name" $@30 '=' type_declaration

    "name"  shift, and go to state 88


State 48

  556 alias_declaration: "typedef" single_alias . "end of expression"

    "end of expression"  shift, and go to state 89


State 49

   21 module_name: "name" .

    $default  reduce using rule 21 (module_name)


State 50

   20 module_name: '$' .

    $default  reduce using rule 20 (module_name)


State 51

   22 module_declaration: "module" module_name . optional_shared optional_public_or_private_module

    "shared"  shift, and go to state 76

    $default  reduce using rule 534 (optional_shared)

    optional_shared  go to state 90


State 52

  720 bitfield_alias_declaration: "bitfield" optional_public_or_private_alias . "name" $@70 "begin of code block" $@71 bitfield_alias_bits optional_comma $@72 "end of code block"

    "name"  shift, and go to state 91


State 53

  712 tuple_alias_declaration: "tuple" optional_public_or_private_alias . "name" $@64 "begin of code block" $@65 tuple_alias_type_list $@66 "end of code block"

    "name"  shift, and go to state 92


State 54

  716 variant_alias_declaration: "variant" optional_public_or_private_alias . "name" $@67 "begin of code block" $@68 variant_alias_type_list $@69 "end of code block"

    "name"  shift, and go to state 93


State 55

  244 name_in_namespace: "::" . "name"

    "name"  shift, and go to state 94


State 56

  242 name_in_namespace: "name" .
  243                  | "name" . "::" "name"

    "::"  shift, and go to state 95

    $default  reduce using rule 242 (name_in_namespace)


State 57

   36 expr_reader: '%' name_in_namespace . $@1 reader_character_sequence

    $default  reduce using rule 35 ($@1)

    $@1  go to state 96


State 58

  100 annotation_declaration_name: "require" .

    $default  reduce using rule 100 (annotation_declaration_name)


State 59

  101 annotation_declaration_name: "private" .

    $default  reduce using rule 101 (annotation_declaration_name)


State 60

  110 annotation_declaration: "|>" . annotation_declaration

    "require"  shift, and go to state 58
    "private"  shift, and go to state 59
    "|>"       shift, and go to state 60
    "::"       shift, and go to state 55
    "name"     shift, and go to state 56
    '!'        shift, and go to state 61
    '('        shift, and go to state 62

    annotation_declaration_name   go to state 63
    annotation_declaration_basic  go to state 64
    annotation_declaration        go to state 97
    name_in_namespace             go to state 67


State 61

  105 annotation_declaration: '!' . annotation_declaration

    "require"  shift, and go to state 58
    "private"  shift, and go to state 59
    "|>"       shift, and go to state 60
    "::"       shift, and go to state 55
    "name"     shift, and go to state 56
    '!'        shift, and go to state 61
    '('        shift, and go to state 62

    annotation_declaration_name   go to state 63
    annotation_declaration_basic  go to state 64
    annotation_declaration        go to state 98
    name_in_namespace             go to state 67


State 62

  109 annotation_declaration: '(' . annotation_declaration ')'

    "require"  shift, and go to state 58
    "private"  shift, and go to state 59
    "|>"       shift, and go to state 60
    "::"       shift, and go to state 55
    "name"     shift, and go to state 56
    '!'        shift, and go to state 61
    '('        shift, and go to state 62

    annotation_declaration_name   go to state 63
    annotation_declaration_basic  go to state 64
    annotation_declaration        go to state 99
    name_in_namespace             go to state 67


State 63

  102 annotation_declaration_basic: annotation_declaration_name .
  103                             | annotation_declaration_name . '(' annotation_argument_list ')'

    '('  shift, and go to state 100

    $default  reduce using rule 102 (annotation_declaration_basic)


State 64

  104 annotation_declaration: annotation_declaration_basic .

    $default  reduce using rule 104 (annotation_declaration)


State 65

  106 annotation_declaration: annotation_declaration . "&&" annotation_declaration
  107                       | annotation_declaration . "||" annotation_declaration
  108                       | annotation_declaration . "^^" annotation_declaration
  111 annotation_list: annotation_declaration .

    "&&"  shift, and go to state 101
    "||"  shift, and go to state 102
    "^^"  shift, and go to state 103

    $default  reduce using rule 111 (annotation_list)


State 66

  112 annotation_list: annotation_list . ',' annotation_declaration
  114 optional_annotation_list: '[' annotation_list . ']'

    ','  shift, and go to state 104
    ']'  shift, and go to state 105


State 67

   99 annotation_declaration_name: name_in_namespace .

    $default  reduce using rule 99 (annotation_declaration_name)


State 68

   16 top_level_reader_macro: expr_reader "end of expression" .

    $default  reduce using rule 16 (top_level_reader_macro)


State 69

    9 program: program options_declaration "end of expression" .

    $default  reduce using rule 9 (program)


State 70

    8 program: program require_declaration "end of expression" .

    $default  reduce using rule 8 (program)


State 71

  572 class_or_struct: "struct" .

    $default  reduce using rule 572 (class_or_struct)


State 72

  571 class_or_struct: "class" .

    $default  reduce using rule 571 (class_or_struct)


State 73

  205 global_function_declaration: optional_annotation_list "def" . function_declaration

    "public"   shift, and go to state 106
    "private"  shift, and go to state 107

    $default  reduce using rule 206 (optional_public_or_private_function)

    optional_public_or_private_function  go to state 108
    function_declaration                 go to state 109


State 74

  565 enum_declaration: optional_annotation_list "enum" . optional_public_or_private_enum enum_name optional_enum_basic_type_declaration "begin of code block" $@31 enum_list optional_comma $@32 "end of code block"

    "public"   shift, and go to state 110
    "private"  shift, and go to state 111

    $default  reduce using rule 557 (optional_public_or_private_enum)

    optional_public_or_private_enum  go to state 112


State 75

  580 structure_declaration: optional_annotation_list class_or_struct . optional_public_or_private_structure $@33 structure_name $@34 optional_struct_variable_declaration_list

    "public"   shift, and go to state 113
    "private"  shift, and go to state 114

    $default  reduce using rule 573 (optional_public_or_private_structure)

    optional_public_or_private_structure  go to state 115


State 76

  535 optional_shared: "shared" .

    $default  reduce using rule 535 (optional_shared)


State 77

  543 global_let: kwd_let optional_shared . optional_public_or_private_variable "begin of code block" global_variable_declaration_list "end of code block"
  545           | kwd_let optional_shared . optional_public_or_private_variable $@29 optional_field_annotation global_let_variable_declaration

    "public"   shift, and go to state 116
    "private"  shift, and go to state 117

    $default  reduce using rule 536 (optional_public_or_private_variable)

    optional_public_or_private_variable  go to state 118


State 78

   87 annotation_argument: annotation_argument_name '=' . string_constant
   88                    | annotation_argument_name '=' . "name"
   89                    | annotation_argument_name '=' . "integer constant"
   90                    | annotation_argument_name '=' . "floating point constant"
   91                    | annotation_argument_name '=' . "true"
   92                    | annotation_argument_name '=' . "false"
   94                    | annotation_argument_name '=' . '(' annotation_argument_value_list ')'

    "true"                     shift, and go to state 119
    "false"                    shift, and go to state 120
    "integer constant"         shift, and go to state 121
    "floating point constant"  shift, and go to state 122
    "name"                     shift, and go to state 123
    "start of the string"      shift, and go to state 124
    '('                        shift, and go to state 125

    string_constant  go to state 126


State 79

   96 annotation_argument_list: annotation_argument_list ',' . annotation_argument

    "type"  shift, and go to state 32
    "in"    shift, and go to state 33
    "name"  shift, and go to state 34

    annotation_argument_name  go to state 35
    annotation_argument       go to state 127


State 80

   51 expect_error: "integer constant" ':' . "integer constant"

    "integer constant"  shift, and go to state 128


State 81

   49 expect_list: expect_list ',' . expect_error

    "integer constant"  shift, and go to state 38

    expect_error  go to state 129


State 82

   40 require_module_name: '%' require_module_name .
   41                    | require_module_name . '.' "name"
   42                    | require_module_name . '/' "name"

    '.'  shift, and go to state 86

    $default  reduce using rule 40 (require_module_name)


State 83

   44 require_module: require_module_name "as" . "name" is_public_module

    "name"  shift, and go to state 130


State 84

   46 is_public_module: "public" .

    $default  reduce using rule 46 (is_public_module)


State 85

   42 require_module_name: require_module_name '/' . "name"

    "name"  shift, and go to state 131


State 86

   41 require_module_name: require_module_name '.' . "name"

    "name"  shift, and go to state 132


State 87

   43 require_module: require_module_name is_public_module .

    $default  reduce using rule 43 (require_module)


State 88

  555 single_alias: optional_public_or_private_alias "name" . $@30 '=' type_declaration

    $default  reduce using rule 554 ($@30)

    $@30  go to state 133


State 89

  556 alias_declaration: "typedef" single_alias "end of expression" .

    $default  reduce using rule 556 (alias_declaration)


State 90

   22 module_declaration: "module" module_name optional_shared . optional_public_or_private_module

    "public"   shift, and go to state 134
    "private"  shift, and go to state 135

    $default  reduce using rule 17 (optional_public_or_private_module)

    optional_public_or_private_module  go to state 136


State 91

  720 bitfield_alias_declaration: "bitfield" optional_public_or_private_alias "name" . $@70 "begin of code block" $@71 bitfield_alias_bits optional_comma $@72 "end of code block"

    $default  reduce using rule 717 ($@70)

    $@70  go to state 137


State 92

  712 tuple_alias_declaration: "tuple" optional_public_or_private_alias "name" . $@64 "begin of code block" $@65 tuple_alias_type_list $@66 "end of code block"

    $default  reduce using rule 709 ($@64)

    $@64  go to state 138


State 93

  716 variant_alias_declaration: "variant" optional_public_or_private_alias "name" . $@67 "begin of code block" $@68 variant_alias_type_list $@69 "end of code block"

    $default  reduce using rule 713 ($@67)

    $@67  go to state 139


State 94

  244 name_in_namespace: "::" "name" .

    $default  reduce using rule 244 (name_in_namespace)


State 95

  243 name_in_namespace: "name" "::" . "name"

    "name"  shift, and go to state 140


State 96

   36 expr_reader: '%' name_in_namespace $@1 . reader_character_sequence

    STRING_CHARACTER  shift, and go to state 141

    reader_character_sequence  go to state 142


State 97

  106 annotation_declaration: annotation_declaration . "&&" annotation_declaration
  107                       | annotation_declaration . "||" annotation_declaration
  108                       | annotation_declaration . "^^" annotation_declaration
  110                       | "|>" annotation_declaration .

    $default  reduce using rule 110 (annotation_declaration)


State 98

  105 annotation_declaration: '!' annotation_declaration .
  106                       | annotation_declaration . "&&" annotation_declaration
  107                       | annotation_declaration . "||" annotation_declaration
  108                       | annotation_declaration . "^^" annotation_declaration

    $default  reduce using rule 105 (annotation_declaration)


State 99

  106 annotation_declaration: annotation_declaration . "&&" annotation_declaration
  107                       | annotation_declaration . "||" annotation_declaration
  108                       | annotation_declaration . "^^" annotation_declaration
  109                       | '(' annotation_declaration . ')'

    "&&"  shift, and go to state 101
    "||"  shift, and go to state 102
    "^^"  shift, and go to state 103
    ')'   shift, and go to state 143


State 100

  103 annotation_declaration_basic: annotation_declaration_name '(' . annotation_argument_list ')'

    "type"  shift, and go to state 32
    "in"    shift, and go to state 33
    "name"  shift, and go to state 34

    annotation_argument_name  go to state 35
    annotation_argument       go to state 36
    annotation_argument_list  go to state 144


State 101

  106 annotation_declaration: annotation_declaration "&&" . annotation_declaration

    "require"  shift, and go to state 58
    "private"  shift, and go to state 59
    "|>"       shift, and go to state 60
    "::"       shift, and go to state 55
    "name"     shift, and go to state 56
    '!'        shift, and go to state 61
    '('        shift, and go to state 62

    annotation_declaration_name   go to state 63
    annotation_declaration_basic  go to state 64
    annotation_declaration        go to state 145
    name_in_namespace             go to state 67


State 102

  107 annotation_declaration: annotation_declaration "||" . annotation_declaration

    "require"  shift, and go to state 58
    "private"  shift, and go to state 59
    "|>"       shift, and go to state 60
    "::"       shift, and go to state 55
    "name"     shift, and go to state 56
    '!'        shift, and go to state 61
    '('        shift, and go to state 62

    annotation_declaration_name   go to state 63
    annotation_declaration_basic  go to state 64
    annotation_declaration        go to state 146
    name_in_namespace             go to state 67


State 103

  108 annotation_declaration: annotation_declaration "^^" . annotation_declaration

    "require"  shift, and go to state 58
    "private"  shift, and go to state 59
    "|>"       shift, and go to state 60
    "::"       shift, and go to state 55
    "name"     shift, and go to state 56
    '!'        shift, and go to state 61
    '('        shift, and go to state 62

    annotation_declaration_name   go to state 63
    annotation_declaration_basic  go to state 64
    annotation_declaration        go to state 147
    name_in_namespace             go to state 67


State 104

  112 annotation_list: annotation_list ',' . annotation_declaration

    "require"  shift, and go to state 58
    "private"  shift, and go to state 59
    "|>"       shift, and go to state 60
    "::"       shift, and go to state 55
    "name"     shift, and go to state 56
    '!'        shift, and go to state 61
    '('        shift, and go to state 62

    annotation_declaration_name   go to state 63
    annotation_declaration_basic  go to state 64
    annotation_declaration        go to state 148
    name_in_namespace             go to state 67


State 105

  114 optional_annotation_list: '[' annotation_list ']' .

    $default  reduce using rule 114 (optional_annotation_list)


State 106

  208 optional_public_or_private_function: "public" .

    $default  reduce using rule 208 (optional_public_or_private_function)


State 107

  207 optional_public_or_private_function: "private" .

    $default  reduce using rule 207 (optional_public_or_private_function)


State 108

  211 function_declaration: optional_public_or_private_function . $@2 function_declaration_header expression_block

    $default  reduce using rule 210 ($@2)

    $@2  go to state 149


State 109

  205 global_function_declaration: optional_annotation_list "def" function_declaration .

    $default  reduce using rule 205 (global_function_declaration)


State 110

  559 optional_public_or_private_enum: "public" .

    $default  reduce using rule 559 (optional_public_or_private_enum)


State 111

  558 optional_public_or_private_enum: "private" .

    $default  reduce using rule 558 (optional_public_or_private_enum)


State 112

  565 enum_declaration: optional_annotation_list "enum" optional_public_or_private_enum . enum_name optional_enum_basic_type_declaration "begin of code block" $@31 enum_list optional_comma $@32 "end of code block"

    "name"  shift, and go to state 150

    enum_name  go to state 151


State 113

  575 optional_public_or_private_structure: "public" .

    $default  reduce using rule 575 (optional_public_or_private_structure)


State 114

  574 optional_public_or_private_structure: "private" .

    $default  reduce using rule 574 (optional_public_or_private_structure)


State 115

  580 structure_declaration: optional_annotation_list class_or_struct optional_public_or_private_structure . $@33 structure_name $@34 optional_struct_variable_declaration_list

    $default  reduce using rule 578 ($@33)

    $@33  go to state 152


State 116

  538 optional_public_or_private_variable: "public" .

    $default  reduce using rule 538 (optional_public_or_private_variable)


State 117

  537 optional_public_or_private_variable: "private" .

    $default  reduce using rule 537 (optional_public_or_private_variable)


State 118

  543 global_let: kwd_let optional_shared optional_public_or_private_variable . "begin of code block" global_variable_declaration_list "end of code block"
  545           | kwd_let optional_shared optional_public_or_private_variable . $@29 optional_field_annotation global_let_variable_declaration

    "begin of code block"  shift, and go to state 153

    $default  reduce using rule 544 ($@29)

    $@29  go to state 154


State 119

   91 annotation_argument: annotation_argument_name '=' "true" .

    $default  reduce using rule 91 (annotation_argument)


State 120

   92 annotation_argument: annotation_argument_name '=' "false" .

    $default  reduce using rule 92 (annotation_argument)


State 121

   89 annotation_argument: annotation_argument_name '=' "integer constant" .

    $default  reduce using rule 89 (annotation_argument)


State 122

   90 annotation_argument: annotation_argument_name '=' "floating point constant" .

    $default  reduce using rule 90 (annotation_argument)


State 123

   88 annotation_argument: annotation_argument_name '=' "name" .

    $default  reduce using rule 88 (annotation_argument)


State 124

   27 string_constant: "start of the string" . character_sequence "end of the string"
   28                | "start of the string" . "end of the string"

    STRING_CHARACTER      shift, and go to state 155
    STRING_CHARACTER_ESC  shift, and go to state 156
    "end of the string"   shift, and go to state 157

    character_sequence  go to state 158


State 125

   94 annotation_argument: annotation_argument_name '=' '(' . annotation_argument_value_list ')'

    "true"                     shift, and go to state 159
    "false"                    shift, and go to state 160
    "integer constant"         shift, and go to state 161
    "floating point constant"  shift, and go to state 162
    "name"                     shift, and go to state 163
    "start of the string"      shift, and go to state 124

    string_constant                 go to state 164
    annotation_argument_value       go to state 165
    annotation_argument_value_list  go to state 166


State 126

   87 annotation_argument: annotation_argument_name '=' string_constant .

    $default  reduce using rule 87 (annotation_argument)


State 127

   96 annotation_argument_list: annotation_argument_list ',' annotation_argument .

    $default  reduce using rule 96 (annotation_argument_list)


State 128

   51 expect_error: "integer constant" ':' "integer constant" .

    $default  reduce using rule 51 (expect_error)


State 129

   49 expect_list: expect_list ',' expect_error .

    $default  reduce using rule 49 (expect_list)


State 130

   44 require_module: require_module_name "as" "name" . is_public_module

    "public"  shift, and go to state 84

    $default  reduce using rule 45 (is_public_module)

    is_public_module  go to state 167


State 131

   42 require_module_name: require_module_name '/' "name" .

    $default  reduce using rule 42 (require_module_name)


State 132

   41 require_module_name: require_module_name '.' "name" .

    $default  reduce using rule 41 (require_module_name)


State 133

  555 single_alias: optional_public_or_private_alias "name" $@30 . '=' type_declaration

    '='  shift, and go to state 168


State 134

   18 optional_public_or_private_module: "public" .

    $default  reduce using rule 18 (optional_public_or_private_module)


State 135

   19 optional_public_or_private_module: "private" .

    $default  reduce using rule 19 (optional_public_or_private_module)


State 136

   22 module_declaration: "module" module_name optional_shared optional_public_or_private_module .

    $default  reduce using rule 22 (module_declaration)


State 137

  720 bitfield_alias_declaration: "bitfield" optional_public_or_private_alias "name" $@70 . "begin of code block" $@71 bitfield_alias_bits optional_comma $@72 "end of code block"

    "begin of code block"  shift, and go to state 169


State 138

  712 tuple_alias_declaration: "tuple" optional_public_or_private_alias "name" $@64 . "begin of code block" $@65 tuple_alias_type_list $@66 "end of code block"

    "begin of code block"  shift, and go to state 170


State 139

  716 variant_alias_declaration: "variant" optional_public_or_private_alias "name" $@67 . "begin of code block" $@68 variant_alias_type_list $@69 "end of code block"

    "begin of code block"  shift, and go to state 171


State 140

  243 name_in_namespace: "name" "::" "name" .

    $default  reduce using rule 243 (name_in_namespace)


State 141

   33 reader_character_sequence: STRING_CHARACTER .

    $default  reduce using rule 33 (reader_character_sequence)


State 142

   34 reader_character_sequence: reader_character_sequence . STRING_CHARACTER
   36 expr_reader: '%' name_in_namespace $@1 reader_character_sequence .

    STRING_CHARACTER  shift, and go to state 172

    $default  reduce using rule 36 (expr_reader)


State 143

  109 annotation_declaration: '(' annotation_declaration ')' .

    $default  reduce using rule 109 (annotation_declaration)


State 144

   96 annotation_argument_list: annotation_argument_list . ',' annotation_argument
  103 annotation_declaration_basic: annotation_declaration_name '(' annotation_argument_list . ')'

    ','  shift, and go to state 79
    ')'  shift, and go to state 173


State 145

  106 annotation_declaration: annotation_declaration . "&&" annotation_declaration
  106                       | annotation_declaration "&&" annotation_declaration .
  107                       | annotation_declaration . "||" annotation_declaration
  108                       | annotation_declaration . "^^" annotation_declaration

    $default  reduce using rule 106 (annotation_declaration)


State 146

  106 annotation_declaration: annotation_declaration . "&&" annotation_declaration
  107                       | annotation_declaration . "||" annotation_declaration
  107                       | annotation_declaration "||" annotation_declaration .
  108                       | annotation_declaration . "^^" annotation_declaration

    "&&"  shift, and go to state 101
    "^^"  shift, and go to state 103

    $default  reduce using rule 107 (annotation_declaration)


State 147

  106 annotation_declaration: annotation_declaration . "&&" annotation_declaration
  107                       | annotation_declaration . "||" annotation_declaration
  108                       | annotation_declaration . "^^" annotation_declaration
  108                       | annotation_declaration "^^" annotation_declaration .

    "&&"  shift, and go to state 101

    $default  reduce using rule 108 (annotation_declaration)


State 148

  106 annotation_declaration: annotation_declaration . "&&" annotation_declaration
  107                       | annotation_declaration . "||" annotation_declaration
  108                       | annotation_declaration . "^^" annotation_declaration
  112 annotation_list: annotation_list ',' annotation_declaration .

    "&&"  shift, and go to state 101
    "||"  shift, and go to state 102
    "^^"  shift, and go to state 103

    $default  reduce using rule 112 (annotation_list)


State 149

  211 function_declaration: optional_public_or_private_function $@2 . function_declaration_header expression_block

    "operator"  shift, and go to state 174
    "bool"      shift, and go to state 175
    "string"    shift, and go to state 176
    "int"       shift, and go to state 177
    "int2"      shift, and go to state 178
    "int3"      shift, and go to state 179
    "int4"      shift, and go to state 180
    "uint"      shift, and go to state 181
    "uint2"     shift, and go to state 182
    "uint3"     shift, and go to state 183
    "uint4"     shift, and go to state 184
    "float"     shift, and go to state 185
    "float2"    shift, and go to state 186
    "float3"    shift, and go to state 187
    "float4"    shift, and go to state 188
    "range"     shift, and go to state 189
    "urange"    shift, and go to state 190
    "range64"   shift, and go to state 191
    "urange64"  shift, and go to state 192
    "int64"     shift, and go to state 193
    "uint64"    shift, and go to state 194
    "double"    shift, and go to state 195
    "int8"      shift, and go to state 196
    "uint8"     shift, and go to state 197
    "int16"     shift, and go to state 198
    "uint16"    shift, and go to state 199
    "++"        shift, and go to state 200
    "--"        shift, and go to state 201
    "name"      shift, and go to state 202

    function_name                go to state 203
    function_declaration_header  go to state 204


State 150

  560 enum_name: "name" .

    $default  reduce using rule 560 (enum_name)


State 151

  565 enum_declaration: optional_annotation_list "enum" optional_public_or_private_enum enum_name . optional_enum_basic_type_declaration "begin of code block" $@31 enum_list optional_comma $@32 "end of code block"

    ':'  shift, and go to state 205

    $default  reduce using rule 561 (optional_enum_basic_type_declaration)

    optional_enum_basic_type_declaration  go to state 206


State 152

  580 structure_declaration: optional_annotation_list class_or_struct optional_public_or_private_structure $@33 . structure_name $@34 optional_struct_variable_declaration_list

    "sealed"  shift, and go to state 207

    $default  reduce using rule 568 (optional_sealed)

    optional_sealed  go to state 208
    structure_name   go to state 209


State 153

  543 global_let: kwd_let optional_shared optional_public_or_private_variable "begin of code block" . global_variable_declaration_list "end of code block"

    $default  reduce using rule 539 (global_variable_declaration_list)

    global_variable_declaration_list  go to state 210


State 154

  545 global_let: kwd_let optional_shared optional_public_or_private_variable $@29 . optional_field_annotation global_let_variable_declaration

    '@'  shift, and go to state 211

    $default  reduce using rule 469 (optional_field_annotation)

    metadata_argument_list     go to state 212
    optional_field_annotation  go to state 213


State 155

   23 character_sequence: STRING_CHARACTER .

    $default  reduce using rule 23 (character_sequence)


State 156

   24 character_sequence: STRING_CHARACTER_ESC .

    $default  reduce using rule 24 (character_sequence)


State 157

   28 string_constant: "start of the string" "end of the string" .

    $default  reduce using rule 28 (string_constant)


State 158

   25 character_sequence: character_sequence . STRING_CHARACTER
   26                   | character_sequence . STRING_CHARACTER_ESC
   27 string_constant: "start of the string" character_sequence . "end of the string"

    STRING_CHARACTER      shift, and go to state 214
    STRING_CHARACTER_ESC  shift, and go to state 215
    "end of the string"   shift, and go to state 216


State 159

   80 annotation_argument_value: "true" .

    $default  reduce using rule 80 (annotation_argument_value)


State 160

   81 annotation_argument_value: "false" .

    $default  reduce using rule 81 (annotation_argument_value)


State 161

   78 annotation_argument_value: "integer constant" .

    $default  reduce using rule 78 (annotation_argument_value)


State 162

   79 annotation_argument_value: "floating point constant" .

    $default  reduce using rule 79 (annotation_argument_value)


State 163

   77 annotation_argument_value: "name" .

    $default  reduce using rule 77 (annotation_argument_value)


State 164

   76 annotation_argument_value: string_constant .

    $default  reduce using rule 76 (annotation_argument_value)


State 165

   82 annotation_argument_value_list: annotation_argument_value .

    $default  reduce using rule 82 (annotation_argument_value_list)


State 166

   83 annotation_argument_value_list: annotation_argument_value_list . ',' annotation_argument_value
   94 annotation_argument: annotation_argument_name '=' '(' annotation_argument_value_list . ')'

    ','  shift, and go to state 217
    ')'  shift, and go to state 218


State 167

   44 require_module: require_module_name "as" "name" is_public_module .

    $default  reduce using rule 44 (require_module)


State 168

  555 single_alias: optional_public_or_private_alias "name" $@30 '=' . type_declaration

    "type"       shift, and go to state 219
    "array"      shift, and go to state 220
    "table"      shift, and go to state 221
    "typedecl"   shift, and go to state 222
    "iterator"   shift, and go to state 223
    "smart_ptr"  shift, and go to state 224
    "bool"       shift, and go to state 225
    "void"       shift, and go to state 226
    "string"     shift, and go to state 227
    "auto"       shift, and go to state 228
    "int"        shift, and go to state 229
    "int2"       shift, and go to state 230
    "int3"       shift, and go to state 231
    "int4"       shift, and go to state 232
    "uint"       shift, and go to state 233
    "bitfield"   shift, and go to state 234
    "uint2"      shift, and go to state 235
    "uint3"      shift, and go to state 236
    "uint4"      shift, and go to state 237
    "float"      shift, and go to state 238
    "float2"     shift, and go to state 239
    "float3"     shift, and go to state 240
    "float4"     shift, and go to state 241
    "range"      shift, and go to state 242
    "urange"     shift, and go to state 243
    "range64"    shift, and go to state 244
    "urange64"   shift, and go to state 245
    "block"      shift, and go to state 246
    "int64"      shift, and go to state 247
    "uint64"     shift, and go to state 248
    "double"     shift, and go to state 249
    "function"   shift, and go to state 250
    "lambda"     shift, and go to state 251
    "int8"       shift, and go to state 252
    "uint8"      shift, and go to state 253
    "int16"      shift, and go to state 254
    "uint16"     shift, and go to state 255
    "tuple"      shift, and go to state 256
    "variant"    shift, and go to state 257
    "::"         shift, and go to state 55
    "$t"         shift, and go to state 258
    "name"       shift, and go to state 56
    '$'          shift, and go to state 259

    name_in_namespace                   go to state 260
    basic_type_declaration              go to state 261
    structure_type_declaration          go to state 262
    auto_type_declaration               go to state 263
    bitfield_type_declaration           go to state 264
    type_declaration_no_options         go to state 265
    type_declaration_no_options_no_dim  go to state 266
    type_declaration                    go to state 267


State 169

  720 bitfield_alias_declaration: "bitfield" optional_public_or_private_alias "name" $@70 "begin of code block" . $@71 bitfield_alias_bits optional_comma $@72 "end of code block"

    $default  reduce using rule 718 ($@71)

    $@71  go to state 268


State 170

  712 tuple_alias_declaration: "tuple" optional_public_or_private_alias "name" $@64 "begin of code block" . $@65 tuple_alias_type_list $@66 "end of code block"

    $default  reduce using rule 710 ($@65)

    $@65  go to state 269


State 171

  716 variant_alias_declaration: "variant" optional_public_or_private_alias "name" $@67 "begin of code block" . $@68 variant_alias_type_list $@69 "end of code block"

    $default  reduce using rule 714 ($@68)

    $@68  go to state 270


State 172

   34 reader_character_sequence: reader_character_sequence STRING_CHARACTER .

    $default  reduce using rule 34 (reader_character_sequence)


State 173

  103 annotation_declaration_basic: annotation_declaration_name '(' annotation_argument_list ')' .

    $default  reduce using rule 103 (annotation_declaration_basic)


State 174

  121 function_name: "operator" . '!'
  122              | "operator" . '~'
  123              | "operator" . "+="
  124              | "operator" . "-="
  125              | "operator" . "*="
  126              | "operator" . "/="
  127              | "operator" . "%="
  128              | "operator" . "&="
  129              | "operator" . "|="
  130              | "operator" . "^="
  131              | "operator" . "&&="
  132              | "operator" . "||="
  133              | "operator" . "^^="
  134              | "operator" . "&&"
  135              | "operator" . "||"
  136              | "operator" . "^^"
  137              | "operator" . '+'
  138              | "operator" . '-'
  139              | "operator" . '*'
  140              | "operator" . '/'
  141              | "operator" . '%'
  142              | "operator" . '<'
  143              | "operator" . '>'
  144              | "operator" . ".."
  145              | "operator" . "=="
  146              | "operator" . "!="
  147              | "operator" . "<="
  148              | "operator" . ">="
  149              | "operator" . '&'
  150              | "operator" . '|'
  151              | "operator" . '^'
  154              | "operator" . "++"
  155              | "operator" . "--"
  156              | "operator" . "<<"
  157              | "operator" . ">>"
  158              | "operator" . "<<="
  159              | "operator" . ">>="
  160              | "operator" . "<<<"
  161              | "operator" . ">>>"
  162              | "operator" . "<<<="
  163              | "operator" . ">>>="
  164              | "operator" . '[' ']'
  165              | "operator" . "?[" ']'
  166              | "operator" . '.'
  167              | "operator" . "?."
  168              | "operator" . '.' "name"
  169              | "operator" . '.' "name" ":="
  170              | "operator" . "?." "name"
  171              | "operator" . ":="
  172              | "operator" . "delete"
  173              | "operator" . "??"
  174              | "operator" . "is"
  175              | "operator" . "as"
  176              | "operator" . "is" "name"
  177              | "operator" . "as" "name"
  178              | "operator" . '?' "as"
  179              | "operator" . '?' "as" "name"

    "is"      shift, and go to state 271
    "as"      shift, and go to state 272
    "delete"  shift, and go to state 273
    "+="      shift, and go to state 274
    "-="      shift, and go to state 275
    "/="      shift, and go to state 276
    "*="      shift, and go to state 277
    "%="      shift, and go to state 278
    "&="      shift, and go to state 279
    "|="      shift, and go to state 280
    "^="      shift, and go to state 281
    "<<"      shift, and go to state 282
    ">>"      shift, and go to state 283
    "++"      shift, and go to state 284
    "--"      shift, and go to state 285
    "<="      shift, and go to state 286
    "<<="     shift, and go to state 287
    ">>="     shift, and go to state 288
    ">="      shift, and go to state 289
    "=="      shift, and go to state 290
    "!="      shift, and go to state 291
    "??"      shift, and go to state 292
    "?."      shift, and go to state 293
    "?["      shift, and go to state 294
    ":="      shift, and go to state 295
    "<<<"     shift, and go to state 296
    ">>>"     shift, and go to state 297
    "<<<="    shift, and go to state 298
    ">>>="    shift, and go to state 299
    "&&"      shift, and go to state 300
    "||"      shift, and go to state 301
    "^^"      shift, and go to state 302
    "&&="     shift, and go to state 303
    "||="     shift, and go to state 304
    "^^="     shift, and go to state 305
    ".."      shift, and go to state 306
    '?'       shift, and go to state 307
    '|'       shift, and go to state 308
    '^'       shift, and go to state 309
    '&'       shift, and go to state 310
    '<'       shift, and go to state 311
    '>'       shift, and go to state 312
    '-'       shift, and go to state 313
    '+'       shift, and go to state 314
    '*'       shift, and go to state 315
    '/'       shift, and go to state 316
    '%'       shift, and go to state 317
    '~'       shift, and go to state 318
    '!'       shift, and go to state 319
    '.'       shift, and go to state 320
    '['       shift, and go to state 321


State 175

  180 function_name: "bool" .

    $default  reduce using rule 180 (function_name)


State 176

  181 function_name: "string" .

    $default  reduce using rule 181 (function_name)


State 177

  182 function_name: "int" .

    $default  reduce using rule 182 (function_name)


State 178

  183 function_name: "int2" .

    $default  reduce using rule 183 (function_name)


State 179

  184 function_name: "int3" .

    $default  reduce using rule 184 (function_name)


State 180

  185 function_name: "int4" .

    $default  reduce using rule 185 (function_name)


State 181

  186 function_name: "uint" .

    $default  reduce using rule 186 (function_name)


State 182

  187 function_name: "uint2" .

    $default  reduce using rule 187 (function_name)


State 183

  188 function_name: "uint3" .

    $default  reduce using rule 188 (function_name)


State 184

  189 function_name: "uint4" .

    $default  reduce using rule 189 (function_name)


State 185

  190 function_name: "float" .

    $default  reduce using rule 190 (function_name)


State 186

  191 function_name: "float2" .

    $default  reduce using rule 191 (function_name)


State 187

  192 function_name: "float3" .

    $default  reduce using rule 192 (function_name)


State 188

  193 function_name: "float4" .

    $default  reduce using rule 193 (function_name)


State 189

  194 function_name: "range" .

    $default  reduce using rule 194 (function_name)


State 190

  195 function_name: "urange" .

    $default  reduce using rule 195 (function_name)


State 191

  196 function_name: "range64" .

    $default  reduce using rule 196 (function_name)


State 192

  197 function_name: "urange64" .

    $default  reduce using rule 197 (function_name)


State 193

  198 function_name: "int64" .

    $default  reduce using rule 198 (function_name)


State 194

  199 function_name: "uint64" .

    $default  reduce using rule 199 (function_name)


State 195

  200 function_name: "double" .

    $default  reduce using rule 200 (function_name)


State 196

  201 function_name: "int8" .

    $default  reduce using rule 201 (function_name)


State 197

  202 function_name: "uint8" .

    $default  reduce using rule 202 (function_name)


State 198

  203 function_name: "int16" .

    $default  reduce using rule 203 (function_name)


State 199

  204 function_name: "uint16" .

    $default  reduce using rule 204 (function_name)


State 200

  152 function_name: "++" . "operator"

    "operator"  shift, and go to state 322


State 201

  153 function_name: "--" . "operator"

    "operator"  shift, and go to state 323


State 202

  120 function_name: "name" .

    $default  reduce using rule 120 (function_name)


State 203

  209 function_declaration_header: function_name . optional_function_argument_list optional_function_type

    '('  shift, and go to state 324

    $default  reduce using rule 115 (optional_function_argument_list)

    optional_function_argument_list  go to state 325


State 204

  211 function_declaration: optional_public_or_private_function $@2 function_declaration_header . expression_block

    "begin of code block"  shift, and go to state 326

    expression_block  go to state 327


State 205

  562 optional_enum_basic_type_declaration: ':' . enum_basic_type_declaration

    "int"     shift, and go to state 328
    "uint"    shift, and go to state 329
    "int64"   shift, and go to state 330
    "uint64"  shift, and go to state 331
    "int8"    shift, and go to state 332
    "uint8"   shift, and go to state 333
    "int16"   shift, and go to state 334
    "uint16"  shift, and go to state 335

    enum_basic_type_declaration  go to state 336


State 206

  565 enum_declaration: optional_annotation_list "enum" optional_public_or_private_enum enum_name optional_enum_basic_type_declaration . "begin of code block" $@31 enum_list optional_comma $@32 "end of code block"

    "begin of code block"  shift, and go to state 337


State 207

  569 optional_sealed: "sealed" .

    $default  reduce using rule 569 (optional_sealed)


State 208

  570 structure_name: optional_sealed . "name" optional_structure_parent

    "name"  shift, and go to state 338


State 209

  580 structure_declaration: optional_annotation_list class_or_struct optional_public_or_private_structure $@33 structure_name . $@34 optional_struct_variable_declaration_list

    $default  reduce using rule 579 ($@34)

    $@34  go to state 339


State 210

  540 global_variable_declaration_list: global_variable_declaration_list . "end of expression"
  542                                 | global_variable_declaration_list . $@28 optional_field_annotation let_variable_declaration
  543 global_let: kwd_let optional_shared optional_public_or_private_variable "begin of code block" global_variable_declaration_list . "end of code block"

    "end of code block"  shift, and go to state 340
    "end of expression"  shift, and go to state 341

    $default  reduce using rule 541 ($@28)

    $@28  go to state 342


State 211

   97 metadata_argument_list: '@' . annotation_argument

    "type"  shift, and go to state 32
    "in"    shift, and go to state 33
    "name"  shift, and go to state 34

    annotation_argument_name  go to state 35
    annotation_argument       go to state 343


State 212

   98 metadata_argument_list: metadata_argument_list . '@' annotation_argument
  470 optional_field_annotation: metadata_argument_list .

    '@'  shift, and go to state 344

    $default  reduce using rule 470 (optional_field_annotation)


State 213

  545 global_let: kwd_let optional_shared optional_public_or_private_variable $@29 optional_field_annotation . global_let_variable_declaration

    "name"  shift, and go to state 345

    global_let_variable_name_with_pos_list  go to state 346
    global_let_variable_declaration         go to state 347


State 214

   25 character_sequence: character_sequence STRING_CHARACTER .

    $default  reduce using rule 25 (character_sequence)


State 215

   26 character_sequence: character_sequence STRING_CHARACTER_ESC .

    $default  reduce using rule 26 (character_sequence)


State 216

   27 string_constant: "start of the string" character_sequence "end of the string" .

    $default  reduce using rule 27 (string_constant)


State 217

   83 annotation_argument_value_list: annotation_argument_value_list ',' . annotation_argument_value

    "true"                     shift, and go to state 159
    "false"                    shift, and go to state 160
    "integer constant"         shift, and go to state 161
    "floating point constant"  shift, and go to state 162
    "name"                     shift, and go to state 163
    "start of the string"      shift, and go to state 124

    string_constant            go to state 164
    annotation_argument_value  go to state 348


State 218

   94 annotation_argument: annotation_argument_name '=' '(' annotation_argument_value_list ')' .

    $default  reduce using rule 94 (annotation_argument)


State 219

  649 type_declaration_no_options_no_dim: "type" . '<' $@37 type_declaration '>' $@38

    '<'  shift, and go to state 349


State 220

  672 type_declaration_no_options_no_dim: "array" . '<' $@42 type_declaration '>' $@43

    '<'  shift, and go to state 350


State 221

  675 type_declaration_no_options_no_dim: "table" . '<' $@44 table_type_pair '>' $@45

    '<'  shift, and go to state 351


State 222

  650 type_declaration_no_options_no_dim: "typedecl" . '(' expr ')'

    '('  shift, and go to state 352


State 223

  678 type_declaration_no_options_no_dim: "iterator" . '<' $@46 type_declaration '>' $@47

    '<'  shift, and go to state 353


State 224

  668 type_declaration_no_options_no_dim: "smart_ptr" . '<' $@40 type_declaration '>' $@41

    '<'  shift, and go to state 354


State 225

  586 basic_type_declaration: "bool" .

    $default  reduce using rule 586 (basic_type_declaration)


State 226

  606 basic_type_declaration: "void" .

    $default  reduce using rule 606 (basic_type_declaration)


State 227

  587 basic_type_declaration: "string" .

    $default  reduce using rule 587 (basic_type_declaration)


State 228

  622 auto_type_declaration: "auto" .
  623                      | "auto" . '(' "name" ')'

    '('  shift, and go to state 355

    $default  reduce using rule 622 (auto_type_declaration)


State 229

  588 basic_type_declaration: "int" .

    $default  reduce using rule 588 (basic_type_declaration)


State 230

  592 basic_type_declaration: "int2" .

    $default  reduce using rule 592 (basic_type_declaration)


State 231

  593 basic_type_declaration: "int3" .

    $default  reduce using rule 593 (basic_type_declaration)


State 232

  594 basic_type_declaration: "int4" .

    $default  reduce using rule 594 (basic_type_declaration)


State 233

  595 basic_type_declaration: "uint" .

    $default  reduce using rule 595 (basic_type_declaration)


State 234

  612 basic_type_declaration: "bitfield" .
  632 bitfield_type_declaration: "bitfield" . '<' $@35 bitfield_bits '>' $@36

    '<'  shift, and go to state 356

    $default  reduce using rule 612 (basic_type_declaration)


State 235

  599 basic_type_declaration: "uint2" .

    $default  reduce using rule 599 (basic_type_declaration)


State 236

  600 basic_type_declaration: "uint3" .

    $default  reduce using rule 600 (basic_type_declaration)


State 237

  601 basic_type_declaration: "uint4" .

    $default  reduce using rule 601 (basic_type_declaration)


State 238

  602 basic_type_declaration: "float" .

    $default  reduce using rule 602 (basic_type_declaration)


State 239

  603 basic_type_declaration: "float2" .

    $default  reduce using rule 603 (basic_type_declaration)


State 240

  604 basic_type_declaration: "float3" .

    $default  reduce using rule 604 (basic_type_declaration)


State 241

  605 basic_type_declaration: "float4" .

    $default  reduce using rule 605 (basic_type_declaration)


State 242

  607 basic_type_declaration: "range" .

    $default  reduce using rule 607 (basic_type_declaration)


State 243

  608 basic_type_declaration: "urange" .

    $default  reduce using rule 608 (basic_type_declaration)


State 244

  609 basic_type_declaration: "range64" .

    $default  reduce using rule 609 (basic_type_declaration)


State 245

  610 basic_type_declaration: "urange64" .

    $default  reduce using rule 610 (basic_type_declaration)


State 246

  679 type_declaration_no_options_no_dim: "block" .
  682                                   | "block" . '<' $@48 type_declaration '>' $@49
  685                                   | "block" . '<' $@50 optional_function_argument_list optional_function_type '>' $@51

    '<'  shift, and go to state 357

    $default  reduce using rule 679 (type_declaration_no_options_no_dim)


State 247

  591 basic_type_declaration: "int64" .

    $default  reduce using rule 591 (basic_type_declaration)


State 248

  598 basic_type_declaration: "uint64" .

    $default  reduce using rule 598 (basic_type_declaration)


State 249

  611 basic_type_declaration: "double" .

    $default  reduce using rule 611 (basic_type_declaration)


State 250

  686 type_declaration_no_options_no_dim: "function" .
  689                                   | "function" . '<' $@52 type_declaration '>' $@53
  692                                   | "function" . '<' $@54 optional_function_argument_list optional_function_type '>' $@55

    '<'  shift, and go to state 358

    $default  reduce using rule 686 (type_declaration_no_options_no_dim)


State 251

  693 type_declaration_no_options_no_dim: "lambda" .
  696                                   | "lambda" . '<' $@56 type_declaration '>' $@57
  699                                   | "lambda" . '<' $@58 optional_function_argument_list optional_function_type '>' $@59

    '<'  shift, and go to state 359

    $default  reduce using rule 693 (type_declaration_no_options_no_dim)


State 252

  589 basic_type_declaration: "int8" .

    $default  reduce using rule 589 (basic_type_declaration)


State 253

  596 basic_type_declaration: "uint8" .

    $default  reduce using rule 596 (basic_type_declaration)


State 254

  590 basic_type_declaration: "int16" .

    $default  reduce using rule 590 (basic_type_declaration)


State 255

  597 basic_type_declaration: "uint16" .

    $default  reduce using rule 597 (basic_type_declaration)


State 256

  702 type_declaration_no_options_no_dim: "tuple" . '<' $@60 tuple_type_list '>' $@61

    '<'  shift, and go to state 360


State 257

  705 type_declaration_no_options_no_dim: "variant" . '<' $@62 variant_type_list '>' $@63

    '<'  shift, and go to state 361


State 258

  624 auto_type_declaration: "$t" . '(' expr ')'

    '('  shift, and go to state 362


State 259

  651 type_declaration_no_options_no_dim: '$' . name_in_namespace '(' optional_expr_list ')'
  653                                   | '$' . name_in_namespace '<' $@39 type_declaration_no_options_list '>' '(' optional_expr_list ')'

    "::"    shift, and go to state 55
    "name"  shift, and go to state 56

    name_in_namespace  go to state 363


State 260

  621 structure_type_declaration: name_in_namespace .

    $default  reduce using rule 621 (structure_type_declaration)


State 261

  643 type_declaration_no_options_no_dim: basic_type_declaration .

    $default  reduce using rule 643 (type_declaration_no_options_no_dim)


State 262

  646 type_declaration_no_options_no_dim: structure_type_declaration .

    $default  reduce using rule 646 (type_declaration_no_options_no_dim)


State 263

  644 type_declaration_no_options_no_dim: auto_type_declaration .

    $default  reduce using rule 644 (type_declaration_no_options_no_dim)


State 264

  645 type_declaration_no_options_no_dim: bitfield_type_declaration .

    $default  reduce using rule 645 (type_declaration_no_options_no_dim)


State 265

  706 type_declaration: type_declaration_no_options .

    $default  reduce using rule 706 (type_declaration)


State 266

  641 type_declaration_no_options: type_declaration_no_options_no_dim .
  642                            | type_declaration_no_options_no_dim . dim_list
  654 type_declaration_no_options_no_dim: type_declaration_no_options_no_dim . '-' '[' ']'
  655                                   | type_declaration_no_options_no_dim . "explicit"
  656                                   | type_declaration_no_options_no_dim . "const"
  657                                   | type_declaration_no_options_no_dim . '-' "const"
  658                                   | type_declaration_no_options_no_dim . '&'
  659                                   | type_declaration_no_options_no_dim . '-' '&'
  660                                   | type_declaration_no_options_no_dim . '#'
  661                                   | type_declaration_no_options_no_dim . "implicit"
  662                                   | type_declaration_no_options_no_dim . '-' '#'
  663                                   | type_declaration_no_options_no_dim . "==" "const"
  664                                   | type_declaration_no_options_no_dim . "==" '&'
  665                                   | type_declaration_no_options_no_dim . '?'
  669                                   | type_declaration_no_options_no_dim . "??"

    "const"     shift, and go to state 364
    "implicit"  shift, and go to state 365
    "explicit"  shift, and go to state 366
    "=="        shift, and go to state 367
    "??"        shift, and go to state 368
    '?'         shift, and go to state 369
    '&'         shift, and go to state 370
    '-'         shift, and go to state 371
    '['         shift, and go to state 372
    '#'         shift, and go to state 373

    $default  reduce using rule 641 (type_declaration_no_options)

    dim_list  go to state 374


State 267

  555 single_alias: optional_public_or_private_alias "name" $@30 '=' type_declaration .
  707 type_declaration: type_declaration . '|' type_declaration_no_options
  708                 | type_declaration . '|' '#'

    '|'  shift, and go to state 375

    $default  reduce using rule 555 (single_alias)


State 268

  720 bitfield_alias_declaration: "bitfield" optional_public_or_private_alias "name" $@70 "begin of code block" $@71 . bitfield_alias_bits optional_comma $@72 "end of code block"

    "name"  shift, and go to state 376

    $default  reduce using rule 627 (bitfield_alias_bits)

    bitfield_alias_bits  go to state 377


State 269

  712 tuple_alias_declaration: "tuple" optional_public_or_private_alias "name" $@64 "begin of code block" $@65 . tuple_alias_type_list $@66 "end of code block"

    $default  reduce using rule 497 (tuple_alias_type_list)

    tuple_alias_type_list  go to state 378


State 270

  716 variant_alias_declaration: "variant" optional_public_or_private_alias "name" $@67 "begin of code block" $@68 . variant_alias_type_list $@69 "end of code block"

    $default  reduce using rule 503 (variant_alias_type_list)

    variant_alias_type_list  go to state 379


State 271

  174 function_name: "operator" "is" .
  176              | "operator" "is" . "name"

    "name"  shift, and go to state 380

    $default  reduce using rule 174 (function_name)


State 272

  175 function_name: "operator" "as" .
  177              | "operator" "as" . "name"

    "name"  shift, and go to state 381

    $default  reduce using rule 175 (function_name)


State 273

  172 function_name: "operator" "delete" .

    $default  reduce using rule 172 (function_name)


State 274

  123 function_name: "operator" "+=" .

    $default  reduce using rule 123 (function_name)


State 275

  124 function_name: "operator" "-=" .

    $default  reduce using rule 124 (function_name)


State 276

  126 function_name: "operator" "/=" .

    $default  reduce using rule 126 (function_name)


State 277

  125 function_name: "operator" "*=" .

    $default  reduce using rule 125 (function_name)


State 278

  127 function_name: "operator" "%=" .

    $default  reduce using rule 127 (function_name)


State 279

  128 function_name: "operator" "&=" .

    $default  reduce using rule 128 (function_name)


State 280

  129 function_name: "operator" "|=" .

    $default  reduce using rule 129 (function_name)


State 281

  130 function_name: "operator" "^=" .

    $default  reduce using rule 130 (function_name)


State 282

  156 function_name: "operator" "<<" .

    $default  reduce using rule 156 (function_name)


State 283

  157 function_name: "operator" ">>" .

    $default  reduce using rule 157 (function_name)


State 284

  154 function_name: "operator" "++" .

    $default  reduce using rule 154 (function_name)


State 285

  155 function_name: "operator" "--" .

    $default  reduce using rule 155 (function_name)


State 286

  147 function_name: "operator" "<=" .

    $default  reduce using rule 147 (function_name)


State 287

  158 function_name: "operator" "<<=" .

    $default  reduce using rule 158 (function_name)


State 288

  159 function_name: "operator" ">>=" .

    $default  reduce using rule 159 (function_name)


State 289

  148 function_name: "operator" ">=" .

    $default  reduce using rule 148 (function_name)


State 290

  145 function_name: "operator" "==" .

    $default  reduce using rule 145 (function_name)


State 291

  146 function_name: "operator" "!=" .

    $default  reduce using rule 146 (function_name)


State 292

  173 function_name: "operator" "??" .

    $default  reduce using rule 173 (function_name)


State 293

  167 function_name: "operator" "?." .
  170              | "operator" "?." . "name"

    "name"  shift, and go to state 382

    $default  reduce using rule 167 (function_name)


State 294

  165 function_name: "operator" "?[" . ']'

    ']'  shift, and go to state 383


State 295

  171 function_name: "operator" ":=" .

    $default  reduce using rule 171 (function_name)


State 296

  160 function_name: "operator" "<<<" .

    $default  reduce using rule 160 (function_name)


State 297

  161 function_name: "operator" ">>>" .

    $default  reduce using rule 161 (function_name)


State 298

  162 function_name: "operator" "<<<=" .

    $default  reduce using rule 162 (function_name)


State 299

  163 function_name: "operator" ">>>=" .

    $default  reduce using rule 163 (function_name)


State 300

  134 function_name: "operator" "&&" .

    $default  reduce using rule 134 (function_name)


State 301

  135 function_name: "operator" "||" .

    $default  reduce using rule 135 (function_name)


State 302

  136 function_name: "operator" "^^" .

    $default  reduce using rule 136 (function_name)


State 303

  131 function_name: "operator" "&&=" .

    $default  reduce using rule 131 (function_name)


State 304

  132 function_name: "operator" "||=" .

    $default  reduce using rule 132 (function_name)


State 305

  133 function_name: "operator" "^^=" .

    $default  reduce using rule 133 (function_name)


State 306

  144 function_name: "operator" ".." .

    $default  reduce using rule 144 (function_name)


State 307

  178 function_name: "operator" '?' . "as"
  179              | "operator" '?' . "as" "name"

    "as"  shift, and go to state 384


State 308

  150 function_name: "operator" '|' .

    $default  reduce using rule 150 (function_name)


State 309

  151 function_name: "operator" '^' .

    $default  reduce using rule 151 (function_name)


State 310

  149 function_name: "operator" '&' .

    $default  reduce using rule 149 (function_name)


State 311

  142 function_name: "operator" '<' .

    $default  reduce using rule 142 (function_name)


State 312

  143 function_name: "operator" '>' .

    $default  reduce using rule 143 (function_name)


State 313

  138 function_name: "operator" '-' .

    $default  reduce using rule 138 (function_name)


State 314

  137 function_name: "operator" '+' .

    $default  reduce using rule 137 (function_name)


State 315

  139 function_name: "operator" '*' .

    $default  reduce using rule 139 (function_name)


State 316

  140 function_name: "operator" '/' .

    $default  reduce using rule 140 (function_name)


State 317

  141 function_name: "operator" '%' .

    $default  reduce using rule 141 (function_name)


State 318

  122 function_name: "operator" '~' .

    $default  reduce using rule 122 (function_name)


State 319

  121 function_name: "operator" '!' .

    $default  reduce using rule 121 (function_name)


State 320

  166 function_name: "operator" '.' .
  168              | "operator" '.' . "name"
  169              | "operator" '.' . "name" ":="

    "name"  shift, and go to state 385

    $default  reduce using rule 166 (function_name)


State 321

  164 function_name: "operator" '[' . ']'

    ']'  shift, and go to state 386


State 322

  152 function_name: "++" "operator" .

    $default  reduce using rule 152 (function_name)


State 323

  153 function_name: "--" "operator" .

    $default  reduce using rule 153 (function_name)


State 324

  116 optional_function_argument_list: '(' . ')'
  117                                | '(' . function_argument_list ')'

    "$a"  shift, and go to state 387
    ')'   shift, and go to state 388
    '@'   shift, and go to state 211

    $default  reduce using rule 469 (optional_field_annotation)

    metadata_argument_list         go to state 212
    optional_field_annotation      go to state 389
    function_argument_declaration  go to state 390
    function_argument_list         go to state 391


State 325

  209 function_declaration_header: function_name optional_function_argument_list . optional_function_type

    ':'  shift, and go to state 392

    $default  reduce using rule 118 (optional_function_type)

    optional_function_type  go to state 393


State 326

  212 expression_block: "begin of code block" . expressions "end of code block"
  213                 | "begin of code block" . expressions "end of code block" "finally" "begin of code block" expressions "end of code block"

    $default  reduce using rule 233 (expressions)

    expressions  go to state 394


State 327

  211 function_declaration: optional_public_or_private_function $@2 function_declaration_header expression_block .

    $default  reduce using rule 211 (function_declaration)


State 328

  613 enum_basic_type_declaration: "int" .

    $default  reduce using rule 613 (enum_basic_type_declaration)


State 329

  616 enum_basic_type_declaration: "uint" .

    $default  reduce using rule 616 (enum_basic_type_declaration)


State 330

  619 enum_basic_type_declaration: "int64" .

    $default  reduce using rule 619 (enum_basic_type_declaration)


State 331

  620 enum_basic_type_declaration: "uint64" .

    $default  reduce using rule 620 (enum_basic_type_declaration)


State 332

  614 enum_basic_type_declaration: "int8" .

    $default  reduce using rule 614 (enum_basic_type_declaration)


State 333

  617 enum_basic_type_declaration: "uint8" .

    $default  reduce using rule 617 (enum_basic_type_declaration)


State 334

  615 enum_basic_type_declaration: "int16" .

    $default  reduce using rule 615 (enum_basic_type_declaration)


State 335

  618 enum_basic_type_declaration: "uint16" .

    $default  reduce using rule 618 (enum_basic_type_declaration)


State 336

  562 optional_enum_basic_type_declaration: ':' enum_basic_type_declaration .

    $default  reduce using rule 562 (optional_enum_basic_type_declaration)


State 337

  565 enum_declaration: optional_annotation_list "enum" optional_public_or_private_enum enum_name optional_enum_basic_type_declaration "begin of code block" . $@31 enum_list optional_comma $@32 "end of code block"

    $default  reduce using rule 563 ($@31)

    $@31  go to state 395


State 338

  570 structure_name: optional_sealed "name" . optional_structure_parent

    ':'  shift, and go to state 396

    $default  reduce using rule 566 (optional_structure_parent)

    optional_structure_parent  go to state 397


State 339

  580 structure_declaration: optional_annotation_list class_or_struct optional_public_or_private_structure $@33 structure_name $@34 . optional_struct_variable_declaration_list

    "begin of code block"  shift, and go to state 398

    $default  reduce using rule 576 (optional_struct_variable_declaration_list)

    optional_struct_variable_declaration_list  go to state 399


State 340

  543 global_let: kwd_let optional_shared optional_public_or_private_variable "begin of code block" global_variable_declaration_list "end of code block" .

    $default  reduce using rule 543 (global_let)


State 341

  540 global_variable_declaration_list: global_variable_declaration_list "end of expression" .

    $default  reduce using rule 540 (global_variable_declaration_list)


State 342

  542 global_variable_declaration_list: global_variable_declaration_list $@28 . optional_field_annotation let_variable_declaration

    '@'  shift, and go to state 211

    $default  reduce using rule 469 (optional_field_annotation)

    metadata_argument_list     go to state 212
    optional_field_annotation  go to state 400


State 343

   97 metadata_argument_list: '@' annotation_argument .

    $default  reduce using rule 97 (metadata_argument_list)


State 344

   98 metadata_argument_list: metadata_argument_list '@' . annotation_argument

    "type"  shift, and go to state 32
    "in"    shift, and go to state 33
    "name"  shift, and go to state 34

    annotation_argument_name  go to state 35
    annotation_argument       go to state 401


State 345

  523 global_let_variable_name_with_pos_list: "name" .

    $default  reduce using rule 523 (global_let_variable_name_with_pos_list)


State 346

  524 global_let_variable_name_with_pos_list: global_let_variable_name_with_pos_list . ',' "name"
  531 global_let_variable_declaration: global_let_variable_name_with_pos_list . ':' type_declaration_no_options "end of expression"
  532                                | global_let_variable_name_with_pos_list . ':' type_declaration_no_options copy_or_move_or_clone expr "end of expression"
  533                                | global_let_variable_name_with_pos_list . optional_ref copy_or_move_or_clone expr "end of expression"

    ','  shift, and go to state 402
    ':'  shift, and go to state 403
    '&'  shift, and go to state 404

    $default  reduce using rule 516 (optional_ref)

    optional_ref  go to state 405


State 347

  545 global_let: kwd_let optional_shared optional_public_or_private_variable $@29 optional_field_annotation global_let_variable_declaration .

    $default  reduce using rule 545 (global_let)


State 348

   83 annotation_argument_value_list: annotation_argument_value_list ',' annotation_argument_value .

    $default  reduce using rule 83 (annotation_argument_value_list)


State 349

  649 type_declaration_no_options_no_dim: "type" '<' . $@37 type_declaration '>' $@38

    $default  reduce using rule 647 ($@37)

    $@37  go to state 406


State 350

  672 type_declaration_no_options_no_dim: "array" '<' . $@42 type_declaration '>' $@43

    $default  reduce using rule 670 ($@42)

    $@42  go to state 407


State 351

  675 type_declaration_no_options_no_dim: "table" '<' . $@44 table_type_pair '>' $@45

    $default  reduce using rule 673 ($@44)

    $@44  go to state 408


State 352

  650 type_declaration_no_options_no_dim: "typedecl" '(' . expr ')'

    "struct"                          shift, and go to state 409
    "class"                           shift, and go to state 410
    "true"                            shift, and go to state 411
    "false"                           shift, and go to state 412
    "new"                             shift, and go to state 413
    "typeinfo"                        shift, and go to state 414
    "type"                            shift, and go to state 415
    "array"                           shift, and go to state 416
    "null"                            shift, and go to state 417
    "table"                           shift, and go to state 418
    "deref"                           shift, and go to state 419
    "cast"                            shift, and go to state 420
    "upcast"                          shift, and go to state 421
    "addr"                            shift, and go to state 422
    "reinterpret"                     shift, and go to state 423
    "unsafe"                          shift, and go to state 424
    "fixed_array"                     shift, and go to state 425
    "default"                         shift, and go to state 426
    "bool"                            shift, and go to state 225
    "void"                            shift, and go to state 226
    "string"                          shift, and go to state 227
    "int"                             shift, and go to state 229
    "int2"                            shift, and go to state 230
    "int3"                            shift, and go to state 231
    "int4"                            shift, and go to state 232
    "uint"                            shift, and go to state 233
    "bitfield"                        shift, and go to state 427
    "uint2"                           shift, and go to state 235
    "uint3"                           shift, and go to state 236
    "uint4"                           shift, and go to state 237
    "float"                           shift, and go to state 238
    "float2"                          shift, and go to state 239
    "float3"                          shift, and go to state 240
    "float4"                          shift, and go to state 241
    "range"                           shift, and go to state 242
    "urange"                          shift, and go to state 243
    "range64"                         shift, and go to state 244
    "urange64"                        shift, and go to state 245
    "int64"                           shift, and go to state 247
    "uint64"                          shift, and go to state 248
    "double"                          shift, and go to state 249
    "int8"                            shift, and go to state 252
    "uint8"                           shift, and go to state 253
    "int16"                           shift, and go to state 254
    "uint16"                          shift, and go to state 255
    "tuple"                           shift, and go to state 428
    "variant"                         shift, and go to state 429
    "generator"                       shift, and go to state 430
    "++"                              shift, and go to state 431
    "--"                              shift, and go to state 432
    "::"                              shift, and go to state 55
    "$$"                              shift, and go to state 433
    "$i"                              shift, and go to state 434
    "$v"                              shift, and go to state 435
    "$b"                              shift, and go to state 436
    "$a"                              shift, and go to state 437
    "$c"                              shift, and go to state 438
    "..."                             shift, and go to state 439
    "integer constant"                shift, and go to state 440
    "long integer constant"           shift, and go to state 441
    "unsigned integer constant"       shift, and go to state 442
    "unsigned long integer constant"  shift, and go to state 443
    "unsigned int8 constant"          shift, and go to state 444
    "floating point constant"         shift, and go to state 445
    "double constant"                 shift, and go to state 446
    "name"                            shift, and go to state 56
    "start of the string"             shift, and go to state 447
    "begin of code block"             shift, and go to state 448
    '-'                               shift, and go to state 449
    '+'                               shift, and go to state 450
    '*'                               shift, and go to state 451
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 452
    '!'                               shift, and go to state 453
    '['                               shift, and go to state 454
    '('                               shift, and go to state 455
    '$'                               shift, and go to state 456
    '@'                               shift, and go to state 457

    string_builder          go to state 458
    expr_reader             go to state 459
    expr_call_pipe          go to state 460
    name_in_namespace       go to state 461
    expr_new                go to state 462
    expr_cast               go to state 463
    expr_type_decl          go to state 464
    expr_type_info          go to state 465
    block_or_lambda         go to state 466
    expr_full_block         go to state 467
    expr_numeric_const      go to state 468
    expr_named_call         go to state 469
    expr_method_call        go to state 470
    func_addr_expr          go to state 471
    expr_field              go to state 472
    expr_call               go to state 473
    expr                    go to state 474
    expr_mtag               go to state 475
    basic_type_declaration  go to state 476
    make_decl               go to state 477
    make_struct_decl        go to state 478
    make_tuple_call         go to state 479
    make_dim_decl           go to state 480
    make_table_decl         go to state 481
    array_comprehension     go to state 482


State 353

  678 type_declaration_no_options_no_dim: "iterator" '<' . $@46 type_declaration '>' $@47

    $default  reduce using rule 676 ($@46)

    $@46  go to state 483


State 354

  668 type_declaration_no_options_no_dim: "smart_ptr" '<' . $@40 type_declaration '>' $@41

    $default  reduce using rule 666 ($@40)

    $@40  go to state 484


State 355

  623 auto_type_declaration: "auto" '(' . "name" ')'

    "name"  shift, and go to state 485


State 356

  632 bitfield_type_declaration: "bitfield" '<' . $@35 bitfield_bits '>' $@36

    $default  reduce using rule 630 ($@35)

    $@35  go to state 486


State 357

  682 type_declaration_no_options_no_dim: "block" '<' . $@48 type_declaration '>' $@49
  685                                   | "block" '<' . $@50 optional_function_argument_list optional_function_type '>' $@51

    ':'       reduce using rule 683 ($@50)
    '>'       reduce using rule 683 ($@50)
    '('       reduce using rule 683 ($@50)
    $default  reduce using rule 680 ($@48)

    $@48  go to state 487
    $@50  go to state 488


State 358

  689 type_declaration_no_options_no_dim: "function" '<' . $@52 type_declaration '>' $@53
  692                                   | "function" '<' . $@54 optional_function_argument_list optional_function_type '>' $@55

    ':'       reduce using rule 690 ($@54)
    '>'       reduce using rule 690 ($@54)
    '('       reduce using rule 690 ($@54)
    $default  reduce using rule 687 ($@52)

    $@52  go to state 489
    $@54  go to state 490


State 359

  696 type_declaration_no_options_no_dim: "lambda" '<' . $@56 type_declaration '>' $@57
  699                                   | "lambda" '<' . $@58 optional_function_argument_list optional_function_type '>' $@59

    ':'       reduce using rule 697 ($@58)
    '>'       reduce using rule 697 ($@58)
    '('       reduce using rule 697 ($@58)
    $default  reduce using rule 694 ($@56)

    $@56  go to state 491
    $@58  go to state 492


State 360

  702 type_declaration_no_options_no_dim: "tuple" '<' . $@60 tuple_type_list '>' $@61

    $default  reduce using rule 700 ($@60)

    $@60  go to state 493


State 361

  705 type_declaration_no_options_no_dim: "variant" '<' . $@62 variant_type_list '>' $@63

    $default  reduce using rule 703 ($@62)

    $@62  go to state 494


State 362

  624 auto_type_declaration: "$t" '(' . expr ')'

    "struct"                          shift, and go to state 409
    "class"                           shift, and go to state 410
    "true"                            shift, and go to state 411
    "false"                           shift, and go to state 412
    "new"                             shift, and go to state 413
    "typeinfo"                        shift, and go to state 414
    "type"                            shift, and go to state 415
    "array"                           shift, and go to state 416
    "null"                            shift, and go to state 417
    "table"                           shift, and go to state 418
    "deref"                           shift, and go to state 419
    "cast"                            shift, and go to state 420
    "upcast"                          shift, and go to state 421
    "addr"                            shift, and go to state 422
    "reinterpret"                     shift, and go to state 423
    "unsafe"                          shift, and go to state 424
    "fixed_array"                     shift, and go to state 425
    "default"                         shift, and go to state 426
    "bool"                            shift, and go to state 225
    "void"                            shift, and go to state 226
    "string"                          shift, and go to state 227
    "int"                             shift, and go to state 229
    "int2"                            shift, and go to state 230
    "int3"                            shift, and go to state 231
    "int4"                            shift, and go to state 232
    "uint"                            shift, and go to state 233
    "bitfield"                        shift, and go to state 427
    "uint2"                           shift, and go to state 235
    "uint3"                           shift, and go to state 236
    "uint4"                           shift, and go to state 237
    "float"                           shift, and go to state 238
    "float2"                          shift, and go to state 239
    "float3"                          shift, and go to state 240
    "float4"                          shift, and go to state 241
    "range"                           shift, and go to state 242
    "urange"                          shift, and go to state 243
    "range64"                         shift, and go to state 244
    "urange64"                        shift, and go to state 245
    "int64"                           shift, and go to state 247
    "uint64"                          shift, and go to state 248
    "double"                          shift, and go to state 249
    "int8"                            shift, and go to state 252
    "uint8"                           shift, and go to state 253
    "int16"                           shift, and go to state 254
    "uint16"                          shift, and go to state 255
    "tuple"                           shift, and go to state 428
    "variant"                         shift, and go to state 429
    "generator"                       shift, and go to state 430
    "++"                              shift, and go to state 431
    "--"                              shift, and go to state 432
    "::"                              shift, and go to state 55
    "$$"                              shift, and go to state 433
    "$i"                              shift, and go to state 434
    "$v"                              shift, and go to state 435
    "$b"                              shift, and go to state 436
    "$a"                              shift, and go to state 437
    "$c"                              shift, and go to state 438
    "..."                             shift, and go to state 439
    "integer constant"                shift, and go to state 440
    "long integer constant"           shift, and go to state 441
    "unsigned integer constant"       shift, and go to state 442
    "unsigned long integer constant"  shift, and go to state 443
    "unsigned int8 constant"          shift, and go to state 444
    "floating point constant"         shift, and go to state 445
    "double constant"                 shift, and go to state 446
    "name"                            shift, and go to state 56
    "start of the string"             shift, and go to state 447
    "begin of code block"             shift, and go to state 448
    '-'                               shift, and go to state 449
    '+'                               shift, and go to state 450
    '*'                               shift, and go to state 451
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 452
    '!'                               shift, and go to state 453
    '['                               shift, and go to state 454
    '('                               shift, and go to state 455
    '$'                               shift, and go to state 456
    '@'                               shift, and go to state 457

    string_builder          go to state 458
    expr_reader             go to state 459
    expr_call_pipe          go to state 460
    name_in_namespace       go to state 461
    expr_new                go to state 462
    expr_cast               go to state 463
    expr_type_decl          go to state 464
    expr_type_info          go to state 465
    block_or_lambda         go to state 466
    expr_full_block         go to state 467
    expr_numeric_const      go to state 468
    expr_named_call         go to state 469
    expr_method_call        go to state 470
    func_addr_expr          go to state 471
    expr_field              go to state 472
    expr_call               go to state 473
    expr                    go to state 495
    expr_mtag               go to state 475
    basic_type_declaration  go to state 476
    make_decl               go to state 477
    make_struct_decl        go to state 478
    make_tuple_call         go to state 479
    make_dim_decl           go to state 480
    make_table_decl         go to state 481
    array_comprehension     go to state 482


State 363

  651 type_declaration_no_options_no_dim: '$' name_in_namespace . '(' optional_expr_list ')'
  653                                   | '$' name_in_namespace . '<' $@39 type_declaration_no_options_list '>' '(' optional_expr_list ')'

    '<'  shift, and go to state 496
    '('  shift, and go to state 497


State 364

  656 type_declaration_no_options_no_dim: type_declaration_no_options_no_dim "const" .

    $default  reduce using rule 656 (type_declaration_no_options_no_dim)


State 365

  661 type_declaration_no_options_no_dim: type_declaration_no_options_no_dim "implicit" .

    $default  reduce using rule 661 (type_declaration_no_options_no_dim)


State 366

  655 type_declaration_no_options_no_dim: type_declaration_no_options_no_dim "explicit" .

    $default  reduce using rule 655 (type_declaration_no_options_no_dim)


State 367

  663 type_declaration_no_options_no_dim: type_declaration_no_options_no_dim "==" . "const"
  664                                   | type_declaration_no_options_no_dim "==" . '&'

    "const"  shift, and go to state 498
    '&'      shift, and go to state 499


State 368

  669 type_declaration_no_options_no_dim: type_declaration_no_options_no_dim "??" .

    $default  reduce using rule 669 (type_declaration_no_options_no_dim)


State 369

  665 type_declaration_no_options_no_dim: type_declaration_no_options_no_dim '?' .

    $default  reduce using rule 665 (type_declaration_no_options_no_dim)


State 370

  658 type_declaration_no_options_no_dim: type_declaration_no_options_no_dim '&' .

    $default  reduce using rule 658 (type_declaration_no_options_no_dim)


State 371

  654 type_declaration_no_options_no_dim: type_declaration_no_options_no_dim '-' . '[' ']'
  657                                   | type_declaration_no_options_no_dim '-' . "const"
  659                                   | type_declaration_no_options_no_dim '-' . '&'
  662                                   | type_declaration_no_options_no_dim '-' . '#'

    "const"  shift, and go to state 500
    '&'      shift, and go to state 501
    '['      shift, and go to state 502
    '#'      shift, and go to state 503


State 372

  637 dim_list: '[' . expr ']'
  638         | '[' . ']'

    "struct"                          shift, and go to state 409
    "class"                           shift, and go to state 410
    "true"                            shift, and go to state 411
    "false"                           shift, and go to state 412
    "new"                             shift, and go to state 413
    "typeinfo"                        shift, and go to state 414
    "type"                            shift, and go to state 415
    "array"                           shift, and go to state 416
    "null"                            shift, and go to state 417
    "table"                           shift, and go to state 418
    "deref"                           shift, and go to state 419
    "cast"                            shift, and go to state 420
    "upcast"                          shift, and go to state 421
    "addr"                            shift, and go to state 422
    "reinterpret"                     shift, and go to state 423
    "unsafe"                          shift, and go to state 424
    "fixed_array"                     shift, and go to state 425
    "default"                         shift, and go to state 426
    "bool"                            shift, and go to state 225
    "void"                            shift, and go to state 226
    "string"                          shift, and go to state 227
    "int"                             shift, and go to state 229
    "int2"                            shift, and go to state 230
    "int3"                            shift, and go to state 231
    "int4"                            shift, and go to state 232
    "uint"                            shift, and go to state 233
    "bitfield"                        shift, and go to state 427
    "uint2"                           shift, and go to state 235
    "uint3"                           shift, and go to state 236
    "uint4"                           shift, and go to state 237
    "float"                           shift, and go to state 238
    "float2"                          shift, and go to state 239
    "float3"                          shift, and go to state 240
    "float4"                          shift, and go to state 241
    "range"                           shift, and go to state 242
    "urange"                          shift, and go to state 243
    "range64"                         shift, and go to state 244
    "urange64"                        shift, and go to state 245
    "int64"                           shift, and go to state 247
    "uint64"                          shift, and go to state 248
    "double"                          shift, and go to state 249
    "int8"                            shift, and go to state 252
    "uint8"                           shift, and go to state 253
    "int16"                           shift, and go to state 254
    "uint16"                          shift, and go to state 255
    "tuple"                           shift, and go to state 428
    "variant"                         shift, and go to state 429
    "generator"                       shift, and go to state 430
    "++"                              shift, and go to state 431
    "--"                              shift, and go to state 432
    "::"                              shift, and go to state 55
    "$$"                              shift, and go to state 433
    "$i"                              shift, and go to state 434
    "$v"                              shift, and go to state 435
    "$b"                              shift, and go to state 436
    "$a"                              shift, and go to state 437
    "$c"                              shift, and go to state 438
    "..."                             shift, and go to state 439
    "integer constant"                shift, and go to state 440
    "long integer constant"           shift, and go to state 441
    "unsigned integer constant"       shift, and go to state 442
    "unsigned long integer constant"  shift, and go to state 443
    "unsigned int8 constant"          shift, and go to state 444
    "floating point constant"         shift, and go to state 445
    "double constant"                 shift, and go to state 446
    "name"                            shift, and go to state 56
    "start of the string"             shift, and go to state 447
    "begin of code block"             shift, and go to state 448
    '-'                               shift, and go to state 449
    '+'                               shift, and go to state 450
    '*'                               shift, and go to state 451
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 452
    '!'                               shift, and go to state 453
    '['                               shift, and go to state 454
    ']'                               shift, and go to state 504
    '('                               shift, and go to state 455
    '$'                               shift, and go to state 456
    '@'                               shift, and go to state 457

    string_builder          go to state 458
    expr_reader             go to state 459
    expr_call_pipe          go to state 460
    name_in_namespace       go to state 461
    expr_new                go to state 462
    expr_cast               go to state 463
    expr_type_decl          go to state 464
    expr_type_info          go to state 465
    block_or_lambda         go to state 466
    expr_full_block         go to state 467
    expr_numeric_const      go to state 468
    expr_named_call         go to state 469
    expr_method_call        go to state 470
    func_addr_expr          go to state 471
    expr_field              go to state 472
    expr_call               go to state 473
    expr                    go to state 505
    expr_mtag               go to state 475
    basic_type_declaration  go to state 476
    make_decl               go to state 477
    make_struct_decl        go to state 478
    make_tuple_call         go to state 479
    make_dim_decl           go to state 480
    make_table_decl         go to state 481
    array_comprehension     go to state 482


State 373

  660 type_declaration_no_options_no_dim: type_declaration_no_options_no_dim '#' .

    $default  reduce using rule 660 (type_declaration_no_options_no_dim)


State 374

  639 dim_list: dim_list . '[' expr ']'
  640         | dim_list . '[' ']'
  642 type_declaration_no_options: type_declaration_no_options_no_dim dim_list .

    '['  shift, and go to state 506

    $default  reduce using rule 642 (type_declaration_no_options)


State 375

  707 type_declaration: type_declaration '|' . type_declaration_no_options
  708                 | type_declaration '|' . '#'

    "type"       shift, and go to state 219
    "array"      shift, and go to state 220
    "table"      shift, and go to state 221
    "typedecl"   shift, and go to state 222
    "iterator"   shift, and go to state 223
    "smart_ptr"  shift, and go to state 224
    "bool"       shift, and go to state 225
    "void"       shift, and go to state 226
    "string"     shift, and go to state 227
    "auto"       shift, and go to state 228
    "int"        shift, and go to state 229
    "int2"       shift, and go to state 230
    "int3"       shift, and go to state 231
    "int4"       shift, and go to state 232
    "uint"       shift, and go to state 233
    "bitfield"   shift, and go to state 234
    "uint2"      shift, and go to state 235
    "uint3"      shift, and go to state 236
    "uint4"      shift, and go to state 237
    "float"      shift, and go to state 238
    "float2"     shift, and go to state 239
    "float3"     shift, and go to state 240
    "float4"     shift, and go to state 241
    "range"      shift, and go to state 242
    "urange"     shift, and go to state 243
    "range64"    shift, and go to state 244
    "urange64"   shift, and go to state 245
    "block"      shift, and go to state 246
    "int64"      shift, and go to state 247
    "uint64"     shift, and go to state 248
    "double"     shift, and go to state 249
    "function"   shift, and go to state 250
    "lambda"     shift, and go to state 251
    "int8"       shift, and go to state 252
    "uint8"      shift, and go to state 253
    "int16"      shift, and go to state 254
    "uint16"     shift, and go to state 255
    "tuple"      shift, and go to state 256
    "variant"    shift, and go to state 257
    "::"         shift, and go to state 55
    "$t"         shift, and go to state 258
    "name"       shift, and go to state 56
    '$'          shift, and go to state 259
    '#'          shift, and go to state 507

    name_in_namespace                   go to state 260
    basic_type_declaration              go to state 261
    structure_type_declaration          go to state 262
    auto_type_declaration               go to state 263
    bitfield_type_declaration           go to state 264
    type_declaration_no_options         go to state 508
    type_declaration_no_options_no_dim  go to state 266


State 376

  628 bitfield_alias_bits: "name" .

    $default  reduce using rule 628 (bitfield_alias_bits)


State 377

  629 bitfield_alias_bits: bitfield_alias_bits . ',' "name"
  720 bitfield_alias_declaration: "bitfield" optional_public_or_private_alias "name" $@70 "begin of code block" $@71 bitfield_alias_bits . optional_comma $@72 "end of code block"

    ','  shift, and go to state 509

    $default  reduce using rule 788 (optional_comma)

    optional_comma  go to state 510


State 378

  498 tuple_alias_type_list: tuple_alias_type_list . c_or_s
  499                      | tuple_alias_type_list . tuple_type c_or_s
  712 tuple_alias_declaration: "tuple" optional_public_or_private_alias "name" $@64 "begin of code block" $@65 tuple_alias_type_list . $@66 "end of code block"

    "type"               shift, and go to state 219
    "array"              shift, and go to state 220
    "table"              shift, and go to state 221
    "typedecl"           shift, and go to state 222
    "iterator"           shift, and go to state 223
    "smart_ptr"          shift, and go to state 224
    "bool"               shift, and go to state 225
    "void"               shift, and go to state 226
    "string"             shift, and go to state 227
    "auto"               shift, and go to state 228
    "int"                shift, and go to state 229
    "int2"               shift, and go to state 230
    "int3"               shift, and go to state 231
    "int4"               shift, and go to state 232
    "uint"               shift, and go to state 233
    "bitfield"           shift, and go to state 234
    "uint2"              shift, and go to state 235
    "uint3"              shift, and go to state 236
    "uint4"              shift, and go to state 237
    "float"              shift, and go to state 238
    "float2"             shift, and go to state 239
    "float3"             shift, and go to state 240
    "float4"             shift, and go to state 241
    "range"              shift, and go to state 242
    "urange"             shift, and go to state 243
    "range64"            shift, and go to state 244
    "urange64"           shift, and go to state 245
    "block"              shift, and go to state 246
    "int64"              shift, and go to state 247
    "uint64"             shift, and go to state 248
    "double"             shift, and go to state 249
    "function"           shift, and go to state 250
    "lambda"             shift, and go to state 251
    "int8"               shift, and go to state 252
    "uint8"              shift, and go to state 253
    "int16"              shift, and go to state 254
    "uint16"             shift, and go to state 255
    "tuple"              shift, and go to state 256
    "variant"            shift, and go to state 257
    "::"                 shift, and go to state 55
    "$t"                 shift, and go to state 258
    "name"               shift, and go to state 511
    "end of expression"  shift, and go to state 512
    ','                  shift, and go to state 513
    '$'                  shift, and go to state 259

    $default  reduce using rule 711 ($@66)

    name_in_namespace                   go to state 260
    tuple_type                          go to state 514
    basic_type_declaration              go to state 261
    structure_type_declaration          go to state 262
    auto_type_declaration               go to state 263
    bitfield_type_declaration           go to state 264
    c_or_s                              go to state 515
    type_declaration_no_options         go to state 265
    type_declaration_no_options_no_dim  go to state 266
    type_declaration                    go to state 516
    $@66                                go to state 517


State 379

  504 variant_alias_type_list: variant_alias_type_list . c_or_s
  505                        | variant_alias_type_list . variant_type c_or_s
  716 variant_alias_declaration: "variant" optional_public_or_private_alias "name" $@67 "begin of code block" $@68 variant_alias_type_list . $@69 "end of code block"

    "name"               shift, and go to state 518
    "end of expression"  shift, and go to state 512
    ','                  shift, and go to state 513

    $default  reduce using rule 715 ($@69)

    variant_type  go to state 519
    c_or_s        go to state 520
    $@69          go to state 521


State 380

  176 function_name: "operator" "is" "name" .

    $default  reduce using rule 176 (function_name)


State 381

  177 function_name: "operator" "as" "name" .

    $default  reduce using rule 177 (function_name)


State 382

  170 function_name: "operator" "?." "name" .

    $default  reduce using rule 170 (function_name)


State 383

  165 function_name: "operator" "?[" ']' .

    $default  reduce using rule 165 (function_name)


State 384

  178 function_name: "operator" '?' "as" .
  179              | "operator" '?' "as" . "name"

    "name"  shift, and go to state 522

    $default  reduce using rule 178 (function_name)


State 385

  168 function_name: "operator" '.' "name" .
  169              | "operator" '.' "name" . ":="

    ":="  shift, and go to state 523

    $default  reduce using rule 168 (function_name)


State 386

  164 function_name: "operator" '[' ']' .

    $default  reduce using rule 164 (function_name)


State 387

  490 function_argument_declaration: "$a" . '(' expr ')'

    '('  shift, and go to state 524


State 388

  116 optional_function_argument_list: '(' ')' .

    $default  reduce using rule 116 (optional_function_argument_list)


State 389

  489 function_argument_declaration: optional_field_annotation . kwd_let_var_or_nothing variable_declaration

    "let"  shift, and go to state 525
    "var"  shift, and go to state 526

    $default  reduce using rule 267 (kwd_let_var_or_nothing)

    kwd_let_var_or_nothing  go to state 527


State 390

  491 function_argument_list: function_argument_declaration .

    $default  reduce using rule 491 (function_argument_list)


State 391

  117 optional_function_argument_list: '(' function_argument_list . ')'
  492 function_argument_list: function_argument_list . "end of expression" function_argument_declaration

    "end of expression"  shift, and go to state 528
    ')'                  shift, and go to state 529


State 392

  119 optional_function_type: ':' . type_declaration

    "type"       shift, and go to state 219
    "array"      shift, and go to state 220
    "table"      shift, and go to state 221
    "typedecl"   shift, and go to state 222
    "iterator"   shift, and go to state 223
    "smart_ptr"  shift, and go to state 224
    "bool"       shift, and go to state 225
    "void"       shift, and go to state 226
    "string"     shift, and go to state 227
    "auto"       shift, and go to state 228
    "int"        shift, and go to state 229
    "int2"       shift, and go to state 230
    "int3"       shift, and go to state 231
    "int4"       shift, and go to state 232
    "uint"       shift, and go to state 233
    "bitfield"   shift, and go to state 234
    "uint2"      shift, and go to state 235
    "uint3"      shift, and go to state 236
    "uint4"      shift, and go to state 237
    "float"      shift, and go to state 238
    "float2"     shift, and go to state 239
    "float3"     shift, and go to state 240
    "float4"     shift, and go to state 241
    "range"      shift, and go to state 242
    "urange"     shift, and go to state 243
    "range64"    shift, and go to state 244
    "urange64"   shift, and go to state 245
    "block"      shift, and go to state 246
    "int64"      shift, and go to state 247
    "uint64"     shift, and go to state 248
    "double"     shift, and go to state 249
    "function"   shift, and go to state 250
    "lambda"     shift, and go to state 251
    "int8"       shift, and go to state 252
    "uint8"      shift, and go to state 253
    "int16"      shift, and go to state 254
    "uint16"     shift, and go to state 255
    "tuple"      shift, and go to state 256
    "variant"    shift, and go to state 257
    "::"         shift, and go to state 55
    "$t"         shift, and go to state 258
    "name"       shift, and go to state 56
    '$'          shift, and go to state 259

    name_in_namespace                   go to state 260
    basic_type_declaration              go to state 261
    structure_type_declaration          go to state 262
    auto_type_declaration               go to state 263
    bitfield_type_declaration           go to state 264
    type_declaration_no_options         go to state 265
    type_declaration_no_options_no_dim  go to state 266
    type_declaration                    go to state 530


State 393

  209 function_declaration_header: function_name optional_function_argument_list optional_function_type .

    $default  reduce using rule 209 (function_declaration_header)


State 394

  212 expression_block: "begin of code block" expressions . "end of code block"
  213                 | "begin of code block" expressions . "end of code block" "finally" "begin of code block" expressions "end of code block"
  234 expressions: expressions . expression_any
  235            | expressions . error

    error                             shift, and go to state 531
    "struct"                          shift, and go to state 409
    "class"                           shift, and go to state 410
    "let"                             shift, and go to state 3
    "while"                           shift, and go to state 532
    "if"                              shift, and go to state 533
    "static_if"                       shift, and go to state 534
    "for"                             shift, and go to state 535
    "true"                            shift, and go to state 411
    "false"                           shift, and go to state 412
    "new"                             shift, and go to state 413
    "typeinfo"                        shift, and go to state 414
    "type"                            shift, and go to state 415
    "array"                           shift, and go to state 416
    "return"                          shift, and go to state 536
    "null"                            shift, and go to state 417
    "break"                           shift, and go to state 537
    "try"                             shift, and go to state 538
    "table"                           shift, and go to state 418
    "delete"                          shift, and go to state 539
    "deref"                           shift, and go to state 419
    "with"                            shift, and go to state 540
    "assume"                          shift, and go to state 541
    "cast"                            shift, and go to state 420
    "upcast"                          shift, and go to state 421
    "var"                             shift, and go to state 8
    "addr"                            shift, and go to state 422
    "continue"                        shift, and go to state 542
    "pass"                            shift, and go to state 543
    "reinterpret"                     shift, and go to state 423
    "label"                           shift, and go to state 544
    "goto"                            shift, and go to state 545
    "unsafe"                          shift, and go to state 546
    "fixed_array"                     shift, and go to state 425
    "default"                         shift, and go to state 426
    "bool"                            shift, and go to state 225
    "void"                            shift, and go to state 226
    "string"                          shift, and go to state 227
    "int"                             shift, and go to state 229
    "int2"                            shift, and go to state 230
    "int3"                            shift, and go to state 231
    "int4"                            shift, and go to state 232
    "uint"                            shift, and go to state 233
    "bitfield"                        shift, and go to state 427
    "uint2"                           shift, and go to state 235
    "uint3"                           shift, and go to state 236
    "uint4"                           shift, and go to state 237
    "float"                           shift, and go to state 238
    "float2"                          shift, and go to state 239
    "float3"                          shift, and go to state 240
    "float4"                          shift, and go to state 241
    "range"                           shift, and go to state 242
    "urange"                          shift, and go to state 243
    "range64"                         shift, and go to state 244
    "urange64"                        shift, and go to state 245
    "int64"                           shift, and go to state 247
    "uint64"                          shift, and go to state 248
    "double"                          shift, and go to state 249
    "int8"                            shift, and go to state 252
    "uint8"                           shift, and go to state 253
    "int16"                           shift, and go to state 254
    "uint16"                          shift, and go to state 255
    "tuple"                           shift, and go to state 428
    "variant"                         shift, and go to state 429
    "generator"                       shift, and go to state 430
    "yield"                           shift, and go to state 547
    "++"                              shift, and go to state 431
    "--"                              shift, and go to state 432
    "::"                              shift, and go to state 55
    "$$"                              shift, and go to state 433
    "$i"                              shift, and go to state 434
    "$v"                              shift, and go to state 435
    "$b"                              shift, and go to state 436
    "$a"                              shift, and go to state 437
    "$c"                              shift, and go to state 438
    "..."                             shift, and go to state 439
    "integer constant"                shift, and go to state 440
    "long integer constant"           shift, and go to state 441
    "unsigned integer constant"       shift, and go to state 442
    "unsigned long integer constant"  shift, and go to state 443
    "unsigned int8 constant"          shift, and go to state 444
    "floating point constant"         shift, and go to state 445
    "double constant"                 shift, and go to state 446
    "name"                            shift, and go to state 56
    "start of the string"             shift, and go to state 447
    "begin of code block"             shift, and go to state 448
    "end of code block"               shift, and go to state 548
    "end of expression"               shift, and go to state 549
    '-'                               shift, and go to state 449
    '+'                               shift, and go to state 450
    '*'                               shift, and go to state 451
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 452
    '!'                               shift, and go to state 453
    '['                               shift, and go to state 454
    '('                               shift, and go to state 455
    '$'                               shift, and go to state 456
    '@'                               shift, and go to state 457

    string_builder           go to state 458
    expr_reader              go to state 459
    expression_label         go to state 550
    expression_goto          go to state 551
    if_or_static_if          go to state 552
    expression_if_one_liner  go to state 553
    expression_if_then_else  go to state 554
    expression_for_loop      go to state 555
    expression_unsafe        go to state 556
    expression_while_loop    go to state 557
    expression_with          go to state 558
    expression_with_alias    go to state 559
    expr_call_pipe           go to state 460
    expression_any           go to state 560
    name_in_namespace        go to state 461
    expression_delete        go to state 561
    expr_new                 go to state 462
    expression_break         go to state 562
    expression_continue      go to state 563
    expression_return        go to state 564
    expression_yield         go to state 565
    expression_try_catch     go to state 566
    kwd_let                  go to state 567
    expression_let           go to state 568
    expr_cast                go to state 463
    expr_type_decl           go to state 464
    expr_type_info           go to state 465
    block_or_lambda          go to state 466
    expr_full_block          go to state 467
    expr_numeric_const       go to state 468
    expr_assign              go to state 569
    expr_named_call          go to state 469
    expr_method_call         go to state 470
    func_addr_expr           go to state 471
    expr_field               go to state 472
    expr_call                go to state 473
    expr                     go to state 570
    expr_mtag                go to state 475
    basic_type_declaration   go to state 476
    make_decl                go to state 477
    make_struct_decl         go to state 478
    make_tuple_call          go to state 479
    make_dim_decl            go to state 480
    make_table_decl          go to state 481
    array_comprehension      go to state 482


State 395

  565 enum_declaration: optional_annotation_list "enum" optional_public_or_private_enum enum_name optional_enum_basic_type_declaration "begin of code block" $@31 . enum_list optional_comma $@32 "end of code block"

    "name"  shift, and go to state 571

    $default  reduce using rule 548 (enum_list)

    enum_expression  go to state 572
    enum_list        go to state 573


State 396

  567 optional_structure_parent: ':' . name_in_namespace

    "::"    shift, and go to state 55
    "name"  shift, and go to state 56

    name_in_namespace  go to state 574


State 397

  570 structure_name: optional_sealed "name" optional_structure_parent .

    $default  reduce using rule 570 (structure_name)


State 398

  577 optional_struct_variable_declaration_list: "begin of code block" . struct_variable_declaration_list "end of code block"

    $default  reduce using rule 482 (struct_variable_declaration_list)

    struct_variable_declaration_list  go to state 575


State 399

  580 structure_declaration: optional_annotation_list class_or_struct optional_public_or_private_structure $@33 structure_name $@34 optional_struct_variable_declaration_list .

    $default  reduce using rule 580 (structure_declaration)


State 400

  542 global_variable_declaration_list: global_variable_declaration_list $@28 optional_field_annotation . let_variable_declaration

    "$i"    shift, and go to state 576
    "name"  shift, and go to state 577

    let_variable_name_with_pos_list  go to state 578
    let_variable_declaration         go to state 579


State 401

   98 metadata_argument_list: metadata_argument_list '@' annotation_argument .

    $default  reduce using rule 98 (metadata_argument_list)


State 402

  524 global_let_variable_name_with_pos_list: global_let_variable_name_with_pos_list ',' . "name"

    "name"  shift, and go to state 580


State 403

  531 global_let_variable_declaration: global_let_variable_name_with_pos_list ':' . type_declaration_no_options "end of expression"
  532                                | global_let_variable_name_with_pos_list ':' . type_declaration_no_options copy_or_move_or_clone expr "end of expression"

    "type"       shift, and go to state 219
    "array"      shift, and go to state 220
    "table"      shift, and go to state 221
    "typedecl"   shift, and go to state 222
    "iterator"   shift, and go to state 223
    "smart_ptr"  shift, and go to state 224
    "bool"       shift, and go to state 225
    "void"       shift, and go to state 226
    "string"     shift, and go to state 227
    "auto"       shift, and go to state 228
    "int"        shift, and go to state 229
    "int2"       shift, and go to state 230
    "int3"       shift, and go to state 231
    "int4"       shift, and go to state 232
    "uint"       shift, and go to state 233
    "bitfield"   shift, and go to state 234
    "uint2"      shift, and go to state 235
    "uint3"      shift, and go to state 236
    "uint4"      shift, and go to state 237
    "float"      shift, and go to state 238
    "float2"     shift, and go to state 239
    "float3"     shift, and go to state 240
    "float4"     shift, and go to state 241
    "range"      shift, and go to state 242
    "urange"     shift, and go to state 243
    "range64"    shift, and go to state 244
    "urange64"   shift, and go to state 245
    "block"      shift, and go to state 246
    "int64"      shift, and go to state 247
    "uint64"     shift, and go to state 248
    "double"     shift, and go to state 249
    "function"   shift, and go to state 250
    "lambda"     shift, and go to state 251
    "int8"       shift, and go to state 252
    "uint8"      shift, and go to state 253
    "int16"      shift, and go to state 254
    "uint16"     shift, and go to state 255
    "tuple"      shift, and go to state 256
    "variant"    shift, and go to state 257
    "::"         shift, and go to state 55
    "$t"         shift, and go to state 258
    "name"       shift, and go to state 56
    '$'          shift, and go to state 259

    name_in_namespace                   go to state 260
    basic_type_declaration              go to state 261
    structure_type_declaration          go to state 262
    auto_type_declaration               go to state 263
    bitfield_type_declaration           go to state 264
    type_declaration_no_options         go to state 581
    type_declaration_no_options_no_dim  go to state 266


State 404

  517 optional_ref: '&' .

    $default  reduce using rule 517 (optional_ref)


State 405

  533 global_let_variable_declaration: global_let_variable_name_with_pos_list optional_ref . copy_or_move_or_clone expr "end of expression"

    "<-"  shift, and go to state 582
    ":="  shift, and go to state 583
    '='   shift, and go to state 584

    copy_or_move_or_clone  go to state 585


State 406

  649 type_declaration_no_options_no_dim: "type" '<' $@37 . type_declaration '>' $@38

    "type"       shift, and go to state 219
    "array"      shift, and go to state 220
    "table"      shift, and go to state 221
    "typedecl"   shift, and go to state 222
    "iterator"   shift, and go to state 223
    "smart_ptr"  shift, and go to state 224
    "bool"       shift, and go to state 225
    "void"       shift, and go to state 226
    "string"     shift, and go to state 227
    "auto"       shift, and go to state 228
    "int"        shift, and go to state 229
    "int2"       shift, and go to state 230
    "int3"       shift, and go to state 231
    "int4"       shift, and go to state 232
    "uint"       shift, and go to state 233
    "bitfield"   shift, and go to state 234
    "uint2"      shift, and go to state 235
    "uint3"      shift, and go to state 236
    "uint4"      shift, and go to state 237
    "float"      shift, and go to state 238
    "float2"     shift, and go to state 239
    "float3"     shift, and go to state 240
    "float4"     shift, and go to state 241
    "range"      shift, and go to state 242
    "urange"     shift, and go to state 243
    "range64"    shift, and go to state 244
    "urange64"   shift, and go to state 245
    "block"      shift, and go to state 246
    "int64"      shift, and go to state 247
    "uint64"     shift, and go to state 248
    "double"     shift, and go to state 249
    "function"   shift, and go to state 250
    "lambda"     shift, and go to state 251
    "int8"       shift, and go to state 252
    "uint8"      shift, and go to state 253
    "int16"      shift, and go to state 254
    "uint16"     shift, and go to state 255
    "tuple"      shift, and go to state 256
    "variant"    shift, and go to state 257
    "::"         shift, and go to state 55
    "$t"         shift, and go to state 258
    "name"       shift, and go to state 56
    '$'          shift, and go to state 259

    name_in_namespace                   go to state 260
    basic_type_declaration              go to state 261
    structure_type_declaration          go to state 262
    auto_type_declaration               go to state 263
    bitfield_type_declaration           go to state 264
    type_declaration_no_options         go to state 265
    type_declaration_no_options_no_dim  go to state 266
    type_declaration                    go to state 586


State 407

  672 type_declaration_no_options_no_dim: "array" '<' $@42 . type_declaration '>' $@43

    "type"       shift, and go to state 219
    "array"      shift, and go to state 220
    "table"      shift, and go to state 221
    "typedecl"   shift, and go to state 222
    "iterator"   shift, and go to state 223
    "smart_ptr"  shift, and go to state 224
    "bool"       shift, and go to state 225
    "void"       shift, and go to state 226
    "string"     shift, and go to state 227
    "auto"       shift, and go to state 228
    "int"        shift, and go to state 229
    "int2"       shift, and go to state 230
    "int3"       shift, and go to state 231
    "int4"       shift, and go to state 232
    "uint"       shift, and go to state 233
    "bitfield"   shift, and go to state 234
    "uint2"      shift, and go to state 235
    "uint3"      shift, and go to state 236
    "uint4"      shift, and go to state 237
    "float"      shift, and go to state 238
    "float2"     shift, and go to state 239
    "float3"     shift, and go to state 240
    "float4"     shift, and go to state 241
    "range"      shift, and go to state 242
    "urange"     shift, and go to state 243
    "range64"    shift, and go to state 244
    "urange64"   shift, and go to state 245
    "block"      shift, and go to state 246
    "int64"      shift, and go to state 247
    "uint64"     shift, and go to state 248
    "double"     shift, and go to state 249
    "function"   shift, and go to state 250
    "lambda"     shift, and go to state 251
    "int8"       shift, and go to state 252
    "uint8"      shift, and go to state 253
    "int16"      shift, and go to state 254
    "uint16"     shift, and go to state 255
    "tuple"      shift, and go to state 256
    "variant"    shift, and go to state 257
    "::"         shift, and go to state 55
    "$t"         shift, and go to state 258
    "name"       shift, and go to state 56
    '$'          shift, and go to state 259

    name_in_namespace                   go to state 260
    basic_type_declaration              go to state 261
    structure_type_declaration          go to state 262
    auto_type_declaration               go to state 263
    bitfield_type_declaration           go to state 264
    type_declaration_no_options         go to state 265
    type_declaration_no_options_no_dim  go to state 266
    type_declaration                    go to state 587


State 408

  675 type_declaration_no_options_no_dim: "table" '<' $@44 . table_type_pair '>' $@45

    "type"       shift, and go to state 219
    "array"      shift, and go to state 220
    "table"      shift, and go to state 221
    "typedecl"   shift, and go to state 222
    "iterator"   shift, and go to state 223
    "smart_ptr"  shift, and go to state 224
    "bool"       shift, and go to state 225
    "void"       shift, and go to state 226
    "string"     shift, and go to state 227
    "auto"       shift, and go to state 228
    "int"        shift, and go to state 229
    "int2"       shift, and go to state 230
    "int3"       shift, and go to state 231
    "int4"       shift, and go to state 232
    "uint"       shift, and go to state 233
    "bitfield"   shift, and go to state 234
    "uint2"      shift, and go to state 235
    "uint3"      shift, and go to state 236
    "uint4"      shift, and go to state 237
    "float"      shift, and go to state 238
    "float2"     shift, and go to state 239
    "float3"     shift, and go to state 240
    "float4"     shift, and go to state 241
    "range"      shift, and go to state 242
    "urange"     shift, and go to state 243
    "range64"    shift, and go to state 244
    "urange64"   shift, and go to state 245
    "block"      shift, and go to state 246
    "int64"      shift, and go to state 247
    "uint64"     shift, and go to state 248
    "double"     shift, and go to state 249
    "function"   shift, and go to state 250
    "lambda"     shift, and go to state 251
    "int8"       shift, and go to state 252
    "uint8"      shift, and go to state 253
    "int16"      shift, and go to state 254
    "uint16"     shift, and go to state 255
    "tuple"      shift, and go to state 256
    "variant"    shift, and go to state 257
    "::"         shift, and go to state 55
    "$t"         shift, and go to state 258
    "name"       shift, and go to state 56
    '$'          shift, and go to state 259

    name_in_namespace                   go to state 260
    basic_type_declaration              go to state 261
    structure_type_declaration          go to state 262
    auto_type_declaration               go to state 263
    bitfield_type_declaration           go to state 264
    table_type_pair                     go to state 588
    type_declaration_no_options         go to state 265
    type_declaration_no_options_no_dim  go to state 266
    type_declaration                    go to state 589


State 409

  746 make_struct_decl: "struct" . '<' $@73 type_declaration_no_options '>' $@74 '(' use_initializer optional_make_struct_dim_decl ')'

    '<'  shift, and go to state 590


State 410

  749 make_struct_decl: "class" . '<' $@75 type_declaration_no_options '>' $@76 '(' use_initializer optional_make_struct_dim_decl ')'

    '<'  shift, and go to state 591


State 411

  375 expr: "true" .

    $default  reduce using rule 375 (expr)


State 412

  376 expr: "false" .

    $default  reduce using rule 376 (expr)


State 413

  251 expr_new: "new" . new_type_declaration
  252         | "new" . new_type_declaration '(' use_initializer ')'
  253         | "new" . new_type_declaration '(' expr_list ')'
  254         | "new" . new_type_declaration '(' make_struct_single ')'
  255         | "new" . new_type_declaration '(' "uninitialized" make_struct_single ')'
  256         | "new" . make_decl

    "struct"               shift, and go to state 409
    "class"                shift, and go to state 410
    "array"                shift, and go to state 416
    "table"                shift, and go to state 418
    "fixed_array"          shift, and go to state 425
    "default"              shift, and go to state 426
    "tuple"                shift, and go to state 428
    "variant"              shift, and go to state 429
    "::"                   shift, and go to state 55
    "name"                 shift, and go to state 56
    "begin of code block"  shift, and go to state 448
    '<'                    shift, and go to state 592
    '['                    shift, and go to state 454

    name_in_namespace           go to state 260
    new_type_declaration        go to state 593
    structure_type_declaration  go to state 594
    make_decl                   go to state 595
    make_struct_decl            go to state 478
    make_tuple_call             go to state 479
    make_dim_decl               go to state 480
    make_table_decl             go to state 481
    array_comprehension         go to state 482


State 414

  291 expr_type_info: "typeinfo" . name_in_namespace '(' expr ')'
  292               | "typeinfo" . name_in_namespace '<' "name" '>' '(' expr ')'
  293               | "typeinfo" . name_in_namespace '<' "name" c_or_s "name" '>' '(' expr ')'

    "::"    shift, and go to state 55
    "name"  shift, and go to state 56

    name_in_namespace  go to state 596


State 415

  290 expr_type_decl: "type" . '<' $@11 type_declaration '>' $@12

    '<'  shift, and go to state 597


State 416

  765 make_dim_decl: "array" . "struct" '<' $@83 type_declaration_no_options '>' $@84 '(' use_initializer optional_make_struct_dim_decl ')'
  768              | "array" . "tuple" '<' $@85 type_declaration_no_options '>' $@86 '(' use_initializer optional_make_struct_dim_decl ')'
  771              | "array" . "variant" '<' $@87 type_declaration_no_options '>' $@88 '(' make_variant_dim ')'
  772              | "array" . '(' expr_list optional_comma ')'
  775              | "array" . '<' $@89 type_declaration_no_options '>' $@90 '(' optional_expr_list ')'

    "struct"   shift, and go to state 598
    "tuple"    shift, and go to state 599
    "variant"  shift, and go to state 600
    '<'        shift, and go to state 601
    '('        shift, and go to state 602


State 417

  369 expr: "null" .

    $default  reduce using rule 369 (expr)


State 418

  783 make_table_decl: "table" . '(' expr_map_tuple_list optional_comma ')'
  784                | "table" . '<' type_declaration_no_options '>' '(' optional_expr_map_tuple_list ')'
  785                | "table" . '<' type_declaration_no_options c_or_s type_declaration_no_options '>' '(' optional_expr_map_tuple_list ')'

    '<'  shift, and go to state 603
    '('  shift, and go to state 604


State 419

  419 expr: "deref" . '(' expr ')'

    '('  shift, and go to state 605


State 420

  281 expr_cast: "cast" . '<' $@5 type_declaration_no_options '>' $@6 expr

    '<'  shift, and go to state 606


State 421

  284 expr_cast: "upcast" . '<' $@7 type_declaration_no_options '>' $@8 expr

    '<'  shift, and go to state 607


State 422

  420 expr: "addr" . '(' expr ')'

    '('  shift, and go to state 608


State 423

  287 expr_cast: "reinterpret" . '<' $@9 type_declaration_no_options '>' $@10 expr

    '<'  shift, and go to state 609


State 424

  452 expr: "unsafe" . '(' expr ')'

    '('  shift, and go to state 610


State 425

  776 make_dim_decl: "fixed_array" . '(' expr_list optional_comma ')'
  779              | "fixed_array" . '<' $@91 type_declaration_no_options '>' $@92 '(' expr_list optional_comma ')'

    '<'  shift, and go to state 611
    '('  shift, and go to state 612


State 426

  755 make_struct_decl: "default" . '<' $@79 type_declaration_no_options '>' $@80 use_initializer

    '<'  shift, and go to state 613


State 427

  612 basic_type_declaration: "bitfield" .

    $default  reduce using rule 612 (basic_type_declaration)


State 428

  758 make_tuple_call: "tuple" . '(' expr_list optional_comma ')'
  761                | "tuple" . '<' $@81 type_declaration_no_options '>' $@82 '(' use_initializer optional_make_struct_dim_decl ')'

    '<'  shift, and go to state 614
    '('  shift, and go to state 615


State 429

  752 make_struct_decl: "variant" . '<' $@77 type_declaration_no_options '>' $@78 '(' make_variant_dim ')'

    '<'  shift, and go to state 616


State 430

  421 expr: "generator" . '<' type_declaration_no_options '>' optional_capture_list '(' ')'
  422     | "generator" . '<' type_declaration_no_options '>' optional_capture_list '(' expr ')'
  423     | "generator" . '<' type_declaration_no_options '>' optional_capture_list expression_block

    '<'  shift, and go to state 617


State 431

  405 expr: "++" . expr

    "struct"                          shift, and go to state 409
    "class"                           shift, and go to state 410
    "true"                            shift, and go to state 411
    "false"                           shift, and go to state 412
    "new"                             shift, and go to state 413
    "typeinfo"                        shift, and go to state 414
    "type"                            shift, and go to state 415
    "array"                           shift, and go to state 416
    "null"                            shift, and go to state 417
    "table"                           shift, and go to state 418
    "deref"                           shift, and go to state 419
    "cast"                            shift, and go to state 420
    "upcast"                          shift, and go to state 421
    "addr"                            shift, and go to state 422
    "reinterpret"                     shift, and go to state 423
    "unsafe"                          shift, and go to state 424
    "fixed_array"                     shift, and go to state 425
    "default"                         shift, and go to state 426
    "bool"                            shift, and go to state 225
    "void"                            shift, and go to state 226
    "string"                          shift, and go to state 227
    "int"                             shift, and go to state 229
    "int2"                            shift, and go to state 230
    "int3"                            shift, and go to state 231
    "int4"                            shift, and go to state 232
    "uint"                            shift, and go to state 233
    "bitfield"                        shift, and go to state 427
    "uint2"                           shift, and go to state 235
    "uint3"                           shift, and go to state 236
    "uint4"                           shift, and go to state 237
    "float"                           shift, and go to state 238
    "float2"                          shift, and go to state 239
    "float3"                          shift, and go to state 240
    "float4"                          shift, and go to state 241
    "range"                           shift, and go to state 242
    "urange"                          shift, and go to state 243
    "range64"                         shift, and go to state 244
    "urange64"                        shift, and go to state 245
    "int64"                           shift, and go to state 247
    "uint64"                          shift, and go to state 248
    "double"                          shift, and go to state 249
    "int8"                            shift, and go to state 252
    "uint8"                           shift, and go to state 253
    "int16"                           shift, and go to state 254
    "uint16"                          shift, and go to state 255
    "tuple"                           shift, and go to state 428
    "variant"                         shift, and go to state 429
    "generator"                       shift, and go to state 430
    "++"                              shift, and go to state 431
    "--"                              shift, and go to state 432
    "::"                              shift, and go to state 55
    "$$"                              shift, and go to state 433
    "$i"                              shift, and go to state 434
    "$v"                              shift, and go to state 435
    "$b"                              shift, and go to state 436
    "$a"                              shift, and go to state 437
    "$c"                              shift, and go to state 438
    "..."                             shift, and go to state 439
    "integer constant"                shift, and go to state 440
    "long integer constant"           shift, and go to state 441
    "unsigned integer constant"       shift, and go to state 442
    "unsigned long integer constant"  shift, and go to state 443
    "unsigned int8 constant"          shift, and go to state 444
    "floating point constant"         shift, and go to state 445
    "double constant"                 shift, and go to state 446
    "name"                            shift, and go to state 56
    "start of the string"             shift, and go to state 447
    "begin of code block"             shift, and go to state 448
    '-'                               shift, and go to state 449
    '+'                               shift, and go to state 450
    '*'                               shift, and go to state 451
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 452
    '!'                               shift, and go to state 453
    '['                               shift, and go to state 454
    '('                               shift, and go to state 455
    '$'                               shift, and go to state 456
    '@'                               shift, and go to state 457

    string_builder          go to state 458
    expr_reader             go to state 459
    expr_call_pipe          go to state 460
    name_in_namespace       go to state 461
    expr_new                go to state 462
    expr_cast               go to state 463
    expr_type_decl          go to state 464
    expr_type_info          go to state 465
    block_or_lambda         go to state 466
    expr_full_block         go to state 467
    expr_numeric_const      go to state 468
    expr_named_call         go to state 469
    expr_method_call        go to state 470
    func_addr_expr          go to state 471
    expr_field              go to state 472
    expr_call               go to state 473
    expr                    go to state 618
    expr_mtag               go to state 475
    basic_type_declaration  go to state 476
    make_decl               go to state 477
    make_struct_decl        go to state 478
    make_tuple_call         go to state 479
    make_dim_decl           go to state 480
    make_table_decl         go to state 481
    array_comprehension     go to state 482


State 432

  406 expr: "--" . expr

    "struct"                          shift, and go to state 409
    "class"                           shift, and go to state 410
    "true"                            shift, and go to state 411
    "false"                           shift, and go to state 412
    "new"                             shift, and go to state 413
    "typeinfo"                        shift, and go to state 414
    "type"                            shift, and go to state 415
    "array"                           shift, and go to state 416
    "null"                            shift, and go to state 417
    "table"                           shift, and go to state 418
    "deref"                           shift, and go to state 419
    "cast"                            shift, and go to state 420
    "upcast"                          shift, and go to state 421
    "addr"                            shift, and go to state 422
    "reinterpret"                     shift, and go to state 423
    "unsafe"                          shift, and go to state 424
    "fixed_array"                     shift, and go to state 425
    "default"                         shift, and go to state 426
    "bool"                            shift, and go to state 225
    "void"                            shift, and go to state 226
    "string"                          shift, and go to state 227
    "int"                             shift, and go to state 229
    "int2"                            shift, and go to state 230
    "int3"                            shift, and go to state 231
    "int4"                            shift, and go to state 232
    "uint"                            shift, and go to state 233
    "bitfield"                        shift, and go to state 427
    "uint2"                           shift, and go to state 235
    "uint3"                           shift, and go to state 236
    "uint4"                           shift, and go to state 237
    "float"                           shift, and go to state 238
    "float2"                          shift, and go to state 239
    "float3"                          shift, and go to state 240
    "float4"                          shift, and go to state 241
    "range"                           shift, and go to state 242
    "urange"                          shift, and go to state 243
    "range64"                         shift, and go to state 244
    "urange64"                        shift, and go to state 245
    "int64"                           shift, and go to state 247
    "uint64"                          shift, and go to state 248
    "double"                          shift, and go to state 249
    "int8"                            shift, and go to state 252
    "uint8"                           shift, and go to state 253
    "int16"                           shift, and go to state 254
    "uint16"                          shift, and go to state 255
    "tuple"                           shift, and go to state 428
    "variant"                         shift, and go to state 429
    "generator"                       shift, and go to state 430
    "++"                              shift, and go to state 431
    "--"                              shift, and go to state 432
    "::"                              shift, and go to state 55
    "$$"                              shift, and go to state 433
    "$i"                              shift, and go to state 434
    "$v"                              shift, and go to state 435
    "$b"                              shift, and go to state 436
    "$a"                              shift, and go to state 437
    "$c"                              shift, and go to state 438
    "..."                             shift, and go to state 439
    "integer constant"                shift, and go to state 440
    "long integer constant"           shift, and go to state 441
    "unsigned integer constant"       shift, and go to state 442
    "unsigned long integer constant"  shift, and go to state 443
    "unsigned int8 constant"          shift, and go to state 444
    "floating point constant"         shift, and go to state 445
    "double constant"                 shift, and go to state 446
    "name"                            shift, and go to state 56
    "start of the string"             shift, and go to state 447
    "begin of code block"             shift, and go to state 448
    '-'                               shift, and go to state 449
    '+'                               shift, and go to state 450
    '*'                               shift, and go to state 451
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 452
    '!'                               shift, and go to state 453
    '['                               shift, and go to state 454
    '('                               shift, and go to state 455
    '$'                               shift, and go to state 456
    '@'                               shift, and go to state 457

    string_builder          go to state 458
    expr_reader             go to state 459
    expr_call_pipe          go to state 460
    name_in_namespace       go to state 461
    expr_new                go to state 462
    expr_cast               go to state 463
    expr_type_decl          go to state 464
    expr_type_info          go to state 465
    block_or_lambda         go to state 466
    expr_full_block         go to state 467
    expr_numeric_const      go to state 468
    expr_named_call         go to state 469
    expr_method_call        go to state 470
    func_addr_expr          go to state 471
    expr_field              go to state 472
    expr_call               go to state 473
    expr                    go to state 619
    expr_mtag               go to state 475
    basic_type_declaration  go to state 476
    make_decl               go to state 477
    make_struct_decl        go to state 478
    make_tuple_call         go to state 479
    make_dim_decl           go to state 480
    make_table_decl         go to state 481
    array_comprehension     go to state 482


State 433

  453 expr_mtag: "$$" . '(' expr ')'

    '('  shift, and go to state 620


State 434

  454 expr_mtag: "$i" . '(' expr ')'

    '('  shift, and go to state 621


State 435

  455 expr_mtag: "$v" . '(' expr ')'

    '('  shift, and go to state 622


State 436

  456 expr_mtag: "$b" . '(' expr ')'

    '('  shift, and go to state 623


State 437

  457 expr_mtag: "$a" . '(' expr ')'

    '('  shift, and go to state 624


State 438

  459 expr_mtag: "$c" . '(' expr ')' '(' ')'
  460          | "$c" . '(' expr ')' '(' expr_list ')'

    '('  shift, and go to state 625


State 439

  458 expr_mtag: "..." .

    $default  reduce using rule 458 (expr_mtag)


State 440

  314 expr_numeric_const: "integer constant" .

    $default  reduce using rule 314 (expr_numeric_const)


State 441

  316 expr_numeric_const: "long integer constant" .

    $default  reduce using rule 316 (expr_numeric_const)


State 442

  315 expr_numeric_const: "unsigned integer constant" .

    $default  reduce using rule 315 (expr_numeric_const)


State 443

  317 expr_numeric_const: "unsigned long integer constant" .

    $default  reduce using rule 317 (expr_numeric_const)


State 444

  318 expr_numeric_const: "unsigned int8 constant" .

    $default  reduce using rule 318 (expr_numeric_const)


State 445

  319 expr_numeric_const: "floating point constant" .

    $default  reduce using rule 319 (expr_numeric_const)


State 446

  320 expr_numeric_const: "double constant" .

    $default  reduce using rule 320 (expr_numeric_const)


State 447

   32 string_builder: "start of the string" . string_builder_body "end of the string"

    $default  reduce using rule 29 (string_builder_body)

    string_builder_body  go to state 626


State 448

  782 make_table_decl: "begin of code block" . expr_map_tuple_list optional_comma "end of code block"
  792 array_comprehension: "begin of code block" . "for" '(' variable_name_with_pos_list "in" expr_list ')' "end of expression" make_map_tuple array_comprehension_where "end of code block"

    "struct"                          shift, and go to state 409
    "class"                           shift, and go to state 410
    "for"                             shift, and go to state 627
    "true"                            shift, and go to state 411
    "false"                           shift, and go to state 412
    "new"                             shift, and go to state 413
    "typeinfo"                        shift, and go to state 414
    "type"                            shift, and go to state 415
    "array"                           shift, and go to state 416
    "null"                            shift, and go to state 417
    "table"                           shift, and go to state 418
    "deref"                           shift, and go to state 419
    "cast"                            shift, and go to state 420
    "upcast"                          shift, and go to state 421
    "addr"                            shift, and go to state 422
    "reinterpret"                     shift, and go to state 423
    "unsafe"                          shift, and go to state 424
    "fixed_array"                     shift, and go to state 425
    "default"                         shift, and go to state 426
    "bool"                            shift, and go to state 225
    "void"                            shift, and go to state 226
    "string"                          shift, and go to state 227
    "int"                             shift, and go to state 229
    "int2"                            shift, and go to state 230
    "int3"                            shift, and go to state 231
    "int4"                            shift, and go to state 232
    "uint"                            shift, and go to state 233
    "bitfield"                        shift, and go to state 427
    "uint2"                           shift, and go to state 235
    "uint3"                           shift, and go to state 236
    "uint4"                           shift, and go to state 237
    "float"                           shift, and go to state 238
    "float2"                          shift, and go to state 239
    "float3"                          shift, and go to state 240
    "float4"                          shift, and go to state 241
    "range"                           shift, and go to state 242
    "urange"                          shift, and go to state 243
    "range64"                         shift, and go to state 244
    "urange64"                        shift, and go to state 245
    "int64"                           shift, and go to state 247
    "uint64"                          shift, and go to state 248
    "double"                          shift, and go to state 249
    "int8"                            shift, and go to state 252
    "uint8"                           shift, and go to state 253
    "int16"                           shift, and go to state 254
    "uint16"                          shift, and go to state 255
    "tuple"                           shift, and go to state 428
    "variant"                         shift, and go to state 429
    "generator"                       shift, and go to state 430
    "++"                              shift, and go to state 431
    "--"                              shift, and go to state 432
    "::"                              shift, and go to state 55
    "$$"                              shift, and go to state 433
    "$i"                              shift, and go to state 434
    "$v"                              shift, and go to state 435
    "$b"                              shift, and go to state 436
    "$a"                              shift, and go to state 437
    "$c"                              shift, and go to state 438
    "..."                             shift, and go to state 439
    "integer constant"                shift, and go to state 440
    "long integer constant"           shift, and go to state 441
    "unsigned integer constant"       shift, and go to state 442
    "unsigned long integer constant"  shift, and go to state 443
    "unsigned int8 constant"          shift, and go to state 444
    "floating point constant"         shift, and go to state 445
    "double constant"                 shift, and go to state 446
    "name"                            shift, and go to state 56
    "start of the string"             shift, and go to state 447
    "begin of code block"             shift, and go to state 448
    '-'                               shift, and go to state 449
    '+'                               shift, and go to state 450
    '*'                               shift, and go to state 451
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 452
    '!'                               shift, and go to state 453
    '['                               shift, and go to state 454
    '('                               shift, and go to state 455
    '$'                               shift, and go to state 456
    '@'                               shift, and go to state 457

    string_builder          go to state 458
    expr_reader             go to state 459
    expr_call_pipe          go to state 460
    name_in_namespace       go to state 461
    expr_new                go to state 462
    expr_cast               go to state 463
    expr_type_decl          go to state 464
    expr_type_info          go to state 465
    block_or_lambda         go to state 466
    expr_full_block         go to state 467
    expr_numeric_const      go to state 468
    expr_named_call         go to state 469
    expr_method_call        go to state 470
    func_addr_expr          go to state 471
    expr_field              go to state 472
    expr_call               go to state 473
    expr                    go to state 628
    expr_mtag               go to state 475
    basic_type_declaration  go to state 476
    make_decl               go to state 477
    make_struct_decl        go to state 478
    make_map_tuple          go to state 629
    make_tuple_call         go to state 479
    make_dim_decl           go to state 480
    expr_map_tuple_list     go to state 630
    make_table_decl         go to state 481
    array_comprehension     go to state 482


State 449

  382 expr: '-' . expr

    "struct"                          shift, and go to state 409
    "class"                           shift, and go to state 410
    "true"                            shift, and go to state 411
    "false"                           shift, and go to state 412
    "new"                             shift, and go to state 413
    "typeinfo"                        shift, and go to state 414
    "type"                            shift, and go to state 415
    "array"                           shift, and go to state 416
    "null"                            shift, and go to state 417
    "table"                           shift, and go to state 418
    "deref"                           shift, and go to state 419
    "cast"                            shift, and go to state 420
    "upcast"                          shift, and go to state 421
    "addr"                            shift, and go to state 422
    "reinterpret"                     shift, and go to state 423
    "unsafe"                          shift, and go to state 424
    "fixed_array"                     shift, and go to state 425
    "default"                         shift, and go to state 426
    "bool"                            shift, and go to state 225
    "void"                            shift, and go to state 226
    "string"                          shift, and go to state 227
    "int"                             shift, and go to state 229
    "int2"                            shift, and go to state 230
    "int3"                            shift, and go to state 231
    "int4"                            shift, and go to state 232
    "uint"                            shift, and go to state 233
    "bitfield"                        shift, and go to state 427
    "uint2"                           shift, and go to state 235
    "uint3"                           shift, and go to state 236
    "uint4"                           shift, and go to state 237
    "float"                           shift, and go to state 238
    "float2"                          shift, and go to state 239
    "float3"                          shift, and go to state 240
    "float4"                          shift, and go to state 241
    "range"                           shift, and go to state 242
    "urange"                          shift, and go to state 243
    "range64"                         shift, and go to state 244
    "urange64"                        shift, and go to state 245
    "int64"                           shift, and go to state 247
    "uint64"                          shift, and go to state 248
    "double"                          shift, and go to state 249
    "int8"                            shift, and go to state 252
    "uint8"                           shift, and go to state 253
    "int16"                           shift, and go to state 254
    "uint16"                          shift, and go to state 255
    "tuple"                           shift, and go to state 428
    "variant"                         shift, and go to state 429
    "generator"                       shift, and go to state 430
    "++"                              shift, and go to state 431
    "--"                              shift, and go to state 432
    "::"                              shift, and go to state 55
    "$$"                              shift, and go to state 433
    "$i"                              shift, and go to state 434
    "$v"                              shift, and go to state 435
    "$b"                              shift, and go to state 436
    "$a"                              shift, and go to state 437
    "$c"                              shift, and go to state 438
    "..."                             shift, and go to state 439
    "integer constant"                shift, and go to state 440
    "long integer constant"           shift, and go to state 441
    "unsigned integer constant"       shift, and go to state 442
    "unsigned long integer constant"  shift, and go to state 443
    "unsigned int8 constant"          shift, and go to state 444
    "floating point constant"         shift, and go to state 445
    "double constant"                 shift, and go to state 446
    "name"                            shift, and go to state 56
    "start of the string"             shift, and go to state 447
    "begin of code block"             shift, and go to state 448
    '-'                               shift, and go to state 449
    '+'                               shift, and go to state 450
    '*'                               shift, and go to state 451
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 452
    '!'                               shift, and go to state 453
    '['                               shift, and go to state 454
    '('                               shift, and go to state 455
    '$'                               shift, and go to state 456
    '@'                               shift, and go to state 457

    string_builder          go to state 458
    expr_reader             go to state 459
    expr_call_pipe          go to state 460
    name_in_namespace       go to state 461
    expr_new                go to state 462
    expr_cast               go to state 463
    expr_type_decl          go to state 464
    expr_type_info          go to state 465
    block_or_lambda         go to state 466
    expr_full_block         go to state 467
    expr_numeric_const      go to state 468
    expr_named_call         go to state 469
    expr_method_call        go to state 470
    func_addr_expr          go to state 471
    expr_field              go to state 472
    expr_call               go to state 473
    expr                    go to state 631
    expr_mtag               go to state 475
    basic_type_declaration  go to state 476
    make_decl               go to state 477
    make_struct_decl        go to state 478
    make_tuple_call         go to state 479
    make_dim_decl           go to state 480
    make_table_decl         go to state 481
    array_comprehension     go to state 482


State 450

  381 expr: '+' . expr

    "struct"                          shift, and go to state 409
    "class"                           shift, and go to state 410
    "true"                            shift, and go to state 411
    "false"                           shift, and go to state 412
    "new"                             shift, and go to state 413
    "typeinfo"                        shift, and go to state 414
    "type"                            shift, and go to state 415
    "array"                           shift, and go to state 416
    "null"                            shift, and go to state 417
    "table"                           shift, and go to state 418
    "deref"                           shift, and go to state 419
    "cast"                            shift, and go to state 420
    "upcast"                          shift, and go to state 421
    "addr"                            shift, and go to state 422
    "reinterpret"                     shift, and go to state 423
    "unsafe"                          shift, and go to state 424
    "fixed_array"                     shift, and go to state 425
    "default"                         shift, and go to state 426
    "bool"                            shift, and go to state 225
    "void"                            shift, and go to state 226
    "string"                          shift, and go to state 227
    "int"                             shift, and go to state 229
    "int2"                            shift, and go to state 230
    "int3"                            shift, and go to state 231
    "int4"                            shift, and go to state 232
    "uint"                            shift, and go to state 233
    "bitfield"                        shift, and go to state 427
    "uint2"                           shift, and go to state 235
    "uint3"                           shift, and go to state 236
    "uint4"                           shift, and go to state 237
    "float"                           shift, and go to state 238
    "float2"                          shift, and go to state 239
    "float3"                          shift, and go to state 240
    "float4"                          shift, and go to state 241
    "range"                           shift, and go to state 242
    "urange"                          shift, and go to state 243
    "range64"                         shift, and go to state 244
    "urange64"                        shift, and go to state 245
    "int64"                           shift, and go to state 247
    "uint64"                          shift, and go to state 248
    "double"                          shift, and go to state 249
    "int8"                            shift, and go to state 252
    "uint8"                           shift, and go to state 253
    "int16"                           shift, and go to state 254
    "uint16"                          shift, and go to state 255
    "tuple"                           shift, and go to state 428
    "variant"                         shift, and go to state 429
    "generator"                       shift, and go to state 430
    "++"                              shift, and go to state 431
    "--"                              shift, and go to state 432
    "::"                              shift, and go to state 55
    "$$"                              shift, and go to state 433
    "$i"                              shift, and go to state 434
    "$v"                              shift, and go to state 435
    "$b"                              shift, and go to state 436
    "$a"                              shift, and go to state 437
    "$c"                              shift, and go to state 438
    "..."                             shift, and go to state 439
    "integer constant"                shift, and go to state 440
    "long integer constant"           shift, and go to state 441
    "unsigned integer constant"       shift, and go to state 442
    "unsigned long integer constant"  shift, and go to state 443
    "unsigned int8 constant"          shift, and go to state 444
    "floating point constant"         shift, and go to state 445
    "double constant"                 shift, and go to state 446
    "name"                            shift, and go to state 56
    "start of the string"             shift, and go to state 447
    "begin of code block"             shift, and go to state 448
    '-'                               shift, and go to state 449
    '+'                               shift, and go to state 450
    '*'                               shift, and go to state 451
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 452
    '!'                               shift, and go to state 453
    '['                               shift, and go to state 454
    '('                               shift, and go to state 455
    '$'                               shift, and go to state 456
    '@'                               shift, and go to state 457

    string_builder          go to state 458
    expr_reader             go to state 459
    expr_call_pipe          go to state 460
    name_in_namespace       go to state 461
    expr_new                go to state 462
    expr_cast               go to state 463
    expr_type_decl          go to state 464
    expr_type_info          go to state 465
    block_or_lambda         go to state 466
    expr_full_block         go to state 467
    expr_numeric_const      go to state 468
    expr_named_call         go to state 469
    expr_method_call        go to state 470
    func_addr_expr          go to state 471
    expr_field              go to state 472
    expr_call               go to state 473
    expr                    go to state 632
    expr_mtag               go to state 475
    basic_type_declaration  go to state 476
    make_decl               go to state 477
    make_struct_decl        go to state 478
    make_tuple_call         go to state 479
    make_dim_decl           go to state 480
    make_table_decl         go to state 481
    array_comprehension     go to state 482


State 451

  418 expr: '*' . expr

    "struct"                          shift, and go to state 409
    "class"                           shift, and go to state 410
    "true"                            shift, and go to state 411
    "false"                           shift, and go to state 412
    "new"                             shift, and go to state 413
    "typeinfo"                        shift, and go to state 414
    "type"                            shift, and go to state 415
    "array"                           shift, and go to state 416
    "null"                            shift, and go to state 417
    "table"                           shift, and go to state 418
    "deref"                           shift, and go to state 419
    "cast"                            shift, and go to state 420
    "upcast"                          shift, and go to state 421
    "addr"                            shift, and go to state 422
    "reinterpret"                     shift, and go to state 423
    "unsafe"                          shift, and go to state 424
    "fixed_array"                     shift, and go to state 425
    "default"                         shift, and go to state 426
    "bool"                            shift, and go to state 225
    "void"                            shift, and go to state 226
    "string"                          shift, and go to state 227
    "int"                             shift, and go to state 229
    "int2"                            shift, and go to state 230
    "int3"                            shift, and go to state 231
    "int4"                            shift, and go to state 232
    "uint"                            shift, and go to state 233
    "bitfield"                        shift, and go to state 427
    "uint2"                           shift, and go to state 235
    "uint3"                           shift, and go to state 236
    "uint4"                           shift, and go to state 237
    "float"                           shift, and go to state 238
    "float2"                          shift, and go to state 239
    "float3"                          shift, and go to state 240
    "float4"                          shift, and go to state 241
    "range"                           shift, and go to state 242
    "urange"                          shift, and go to state 243
    "range64"                         shift, and go to state 244
    "urange64"                        shift, and go to state 245
    "int64"                           shift, and go to state 247
    "uint64"                          shift, and go to state 248
    "double"                          shift, and go to state 249
    "int8"                            shift, and go to state 252
    "uint8"                           shift, and go to state 253
    "int16"                           shift, and go to state 254
    "uint16"                          shift, and go to state 255
    "tuple"                           shift, and go to state 428
    "variant"                         shift, and go to state 429
    "generator"                       shift, and go to state 430
    "++"                              shift, and go to state 431
    "--"                              shift, and go to state 432
    "::"                              shift, and go to state 55
    "$$"                              shift, and go to state 433
    "$i"                              shift, and go to state 434
    "$v"                              shift, and go to state 435
    "$b"                              shift, and go to state 436
    "$a"                              shift, and go to state 437
    "$c"                              shift, and go to state 438
    "..."                             shift, and go to state 439
    "integer constant"                shift, and go to state 440
    "long integer constant"           shift, and go to state 441
    "unsigned integer constant"       shift, and go to state 442
    "unsigned long integer constant"  shift, and go to state 443
    "unsigned int8 constant"          shift, and go to state 444
    "floating point constant"         shift, and go to state 445
    "double constant"                 shift, and go to state 446
    "name"                            shift, and go to state 56
    "start of the string"             shift, and go to state 447
    "begin of code block"             shift, and go to state 448
    '-'                               shift, and go to state 449
    '+'                               shift, and go to state 450
    '*'                               shift, and go to state 451
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 452
    '!'                               shift, and go to state 453
    '['                               shift, and go to state 454
    '('                               shift, and go to state 455
    '$'                               shift, and go to state 456
    '@'                               shift, and go to state 457

    string_builder          go to state 458
    expr_reader             go to state 459
    expr_call_pipe          go to state 460
    name_in_namespace       go to state 461
    expr_new                go to state 462
    expr_cast               go to state 463
    expr_type_decl          go to state 464
    expr_type_info          go to state 465
    block_or_lambda         go to state 466
    expr_full_block         go to state 467
    expr_numeric_const      go to state 468
    expr_named_call         go to state 469
    expr_method_call        go to state 470
    func_addr_expr          go to state 471
    expr_field              go to state 472
    expr_call               go to state 473
    expr                    go to state 633
    expr_mtag               go to state 475
    basic_type_declaration  go to state 476
    make_decl               go to state 477
    make_struct_decl        go to state 478
    make_tuple_call         go to state 479
    make_dim_decl           go to state 480
    make_table_decl         go to state 481
    array_comprehension     go to state 482


State 452

  380 expr: '~' . expr

    "struct"                          shift, and go to state 409
    "class"                           shift, and go to state 410
    "true"                            shift, and go to state 411
    "false"                           shift, and go to state 412
    "new"                             shift, and go to state 413
    "typeinfo"                        shift, and go to state 414
    "type"                            shift, and go to state 415
    "array"                           shift, and go to state 416
    "null"                            shift, and go to state 417
    "table"                           shift, and go to state 418
    "deref"                           shift, and go to state 419
    "cast"                            shift, and go to state 420
    "upcast"                          shift, and go to state 421
    "addr"                            shift, and go to state 422
    "reinterpret"                     shift, and go to state 423
    "unsafe"                          shift, and go to state 424
    "fixed_array"                     shift, and go to state 425
    "default"                         shift, and go to state 426
    "bool"                            shift, and go to state 225
    "void"                            shift, and go to state 226
    "string"                          shift, and go to state 227
    "int"                             shift, and go to state 229
    "int2"                            shift, and go to state 230
    "int3"                            shift, and go to state 231
    "int4"                            shift, and go to state 232
    "uint"                            shift, and go to state 233
    "bitfield"                        shift, and go to state 427
    "uint2"                           shift, and go to state 235
    "uint3"                           shift, and go to state 236
    "uint4"                           shift, and go to state 237
    "float"                           shift, and go to state 238
    "float2"                          shift, and go to state 239
    "float3"                          shift, and go to state 240
    "float4"                          shift, and go to state 241
    "range"                           shift, and go to state 242
    "urange"                          shift, and go to state 243
    "range64"                         shift, and go to state 244
    "urange64"                        shift, and go to state 245
    "int64"                           shift, and go to state 247
    "uint64"                          shift, and go to state 248
    "double"                          shift, and go to state 249
    "int8"                            shift, and go to state 252
    "uint8"                           shift, and go to state 253
    "int16"                           shift, and go to state 254
    "uint16"                          shift, and go to state 255
    "tuple"                           shift, and go to state 428
    "variant"                         shift, and go to state 429
    "generator"                       shift, and go to state 430
    "++"                              shift, and go to state 431
    "--"                              shift, and go to state 432
    "::"                              shift, and go to state 55
    "$$"                              shift, and go to state 433
    "$i"                              shift, and go to state 434
    "$v"                              shift, and go to state 435
    "$b"                              shift, and go to state 436
    "$a"                              shift, and go to state 437
    "$c"                              shift, and go to state 438
    "..."                             shift, and go to state 439
    "integer constant"                shift, and go to state 440
    "long integer constant"           shift, and go to state 441
    "unsigned integer constant"       shift, and go to state 442
    "unsigned long integer constant"  shift, and go to state 443
    "unsigned int8 constant"          shift, and go to state 444
    "floating point constant"         shift, and go to state 445
    "double constant"                 shift, and go to state 446
    "name"                            shift, and go to state 56
    "start of the string"             shift, and go to state 447
    "begin of code block"             shift, and go to state 448
    '-'                               shift, and go to state 449
    '+'                               shift, and go to state 450
    '*'                               shift, and go to state 451
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 452
    '!'                               shift, and go to state 453
    '['                               shift, and go to state 454
    '('                               shift, and go to state 455
    '$'                               shift, and go to state 456
    '@'                               shift, and go to state 457

    string_builder          go to state 458
    expr_reader             go to state 459
    expr_call_pipe          go to state 460
    name_in_namespace       go to state 461
    expr_new                go to state 462
    expr_cast               go to state 463
    expr_type_decl          go to state 464
    expr_type_info          go to state 465
    block_or_lambda         go to state 466
    expr_full_block         go to state 467
    expr_numeric_const      go to state 468
    expr_named_call         go to state 469
    expr_method_call        go to state 470
    func_addr_expr          go to state 471
    expr_field              go to state 472
    expr_call               go to state 473
    expr                    go to state 634
    expr_mtag               go to state 475
    basic_type_declaration  go to state 476
    make_decl               go to state 477
    make_struct_decl        go to state 478
    make_tuple_call         go to state 479
    make_dim_decl           go to state 480
    make_table_decl         go to state 481
    array_comprehension     go to state 482


State 453

  379 expr: '!' . expr

    "struct"                          shift, and go to state 409
    "class"                           shift, and go to state 410
    "true"                            shift, and go to state 411
    "false"                           shift, and go to state 412
    "new"                             shift, and go to state 413
    "typeinfo"                        shift, and go to state 414
    "type"                            shift, and go to state 415
    "array"                           shift, and go to state 416
    "null"                            shift, and go to state 417
    "table"                           shift, and go to state 418
    "deref"                           shift, and go to state 419
    "cast"                            shift, and go to state 420
    "upcast"                          shift, and go to state 421
    "addr"                            shift, and go to state 422
    "reinterpret"                     shift, and go to state 423
    "unsafe"                          shift, and go to state 424
    "fixed_array"                     shift, and go to state 425
    "default"                         shift, and go to state 426
    "bool"                            shift, and go to state 225
    "void"                            shift, and go to state 226
    "string"                          shift, and go to state 227
    "int"                             shift, and go to state 229
    "int2"                            shift, and go to state 230
    "int3"                            shift, and go to state 231
    "int4"                            shift, and go to state 232
    "uint"                            shift, and go to state 233
    "bitfield"                        shift, and go to state 427
    "uint2"                           shift, and go to state 235
    "uint3"                           shift, and go to state 236
    "uint4"                           shift, and go to state 237
    "float"                           shift, and go to state 238
    "float2"                          shift, and go to state 239
    "float3"                          shift, and go to state 240
    "float4"                          shift, and go to state 241
    "range"                           shift, and go to state 242
    "urange"                          shift, and go to state 243
    "range64"                         shift, and go to state 244
    "urange64"                        shift, and go to state 245
    "int64"                           shift, and go to state 247
    "uint64"                          shift, and go to state 248
    "double"                          shift, and go to state 249
    "int8"                            shift, and go to state 252
    "uint8"                           shift, and go to state 253
    "int16"                           shift, and go to state 254
    "uint16"                          shift, and go to state 255
    "tuple"                           shift, and go to state 428
    "variant"                         shift, and go to state 429
    "generator"                       shift, and go to state 430
    "++"                              shift, and go to state 431
    "--"                              shift, and go to state 432
    "::"                              shift, and go to state 55
    "$$"                              shift, and go to state 433
    "$i"                              shift, and go to state 434
    "$v"                              shift, and go to state 435
    "$b"                              shift, and go to state 436
    "$a"                              shift, and go to state 437
    "$c"                              shift, and go to state 438
    "..."                             shift, and go to state 439
    "integer constant"                shift, and go to state 440
    "long integer constant"           shift, and go to state 441
    "unsigned integer constant"       shift, and go to state 442
    "unsigned long integer constant"  shift, and go to state 443
    "unsigned int8 constant"          shift, and go to state 444
    "floating point constant"         shift, and go to state 445
    "double constant"                 shift, and go to state 446
    "name"                            shift, and go to state 56
    "start of the string"             shift, and go to state 447
    "begin of code block"             shift, and go to state 448
    '-'                               shift, and go to state 449
    '+'                               shift, and go to state 450
    '*'                               shift, and go to state 451
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 452
    '!'                               shift, and go to state 453
    '['                               shift, and go to state 454
    '('                               shift, and go to state 455
    '$'                               shift, and go to state 456
    '@'                               shift, and go to state 457

    string_builder          go to state 458
    expr_reader             go to state 459
    expr_call_pipe          go to state 460
    name_in_namespace       go to state 461
    expr_new                go to state 462
    expr_cast               go to state 463
    expr_type_decl          go to state 464
    expr_type_info          go to state 465
    block_or_lambda         go to state 466
    expr_full_block         go to state 467
    expr_numeric_const      go to state 468
    expr_named_call         go to state 469
    expr_method_call        go to state 470
    func_addr_expr          go to state 471
    expr_field              go to state 472
    expr_call               go to state 473
    expr                    go to state 635
    expr_mtag               go to state 475
    basic_type_declaration  go to state 476
    make_decl               go to state 477
    make_struct_decl        go to state 478
    make_tuple_call         go to state 479
    make_dim_decl           go to state 480
    make_table_decl         go to state 481
    array_comprehension     go to state 482


State 454

  762 make_dim_decl: '[' . expr_list optional_comma ']'
  790 array_comprehension: '[' . "for" '(' variable_name_with_pos_list "in" expr_list ')' "end of expression" expr array_comprehension_where ']'
  791                    | '[' . "iterator" "for" '(' variable_name_with_pos_list "in" expr_list ')' "end of expression" expr array_comprehension_where ']'

    "struct"                          shift, and go to state 409
    "class"                           shift, and go to state 410
    "for"                             shift, and go to state 636
    "true"                            shift, and go to state 411
    "false"                           shift, and go to state 412
    "new"                             shift, and go to state 413
    "typeinfo"                        shift, and go to state 414
    "type"                            shift, and go to state 415
    "array"                           shift, and go to state 416
    "null"                            shift, and go to state 417
    "table"                           shift, and go to state 418
    "deref"                           shift, and go to state 419
    "cast"                            shift, and go to state 420
    "upcast"                          shift, and go to state 421
    "iterator"                        shift, and go to state 637
    "addr"                            shift, and go to state 422
    "reinterpret"                     shift, and go to state 423
    "unsafe"                          shift, and go to state 424
    "fixed_array"                     shift, and go to state 425
    "default"                         shift, and go to state 426
    "bool"                            shift, and go to state 225
    "void"                            shift, and go to state 226
    "string"                          shift, and go to state 227
    "int"                             shift, and go to state 229
    "int2"                            shift, and go to state 230
    "int3"                            shift, and go to state 231
    "int4"                            shift, and go to state 232
    "uint"                            shift, and go to state 233
    "bitfield"                        shift, and go to state 427
    "uint2"                           shift, and go to state 235
    "uint3"                           shift, and go to state 236
    "uint4"                           shift, and go to state 237
    "float"                           shift, and go to state 238
    "float2"                          shift, and go to state 239
    "float3"                          shift, and go to state 240
    "float4"                          shift, and go to state 241
    "range"                           shift, and go to state 242
    "urange"                          shift, and go to state 243
    "range64"                         shift, and go to state 244
    "urange64"                        shift, and go to state 245
    "int64"                           shift, and go to state 247
    "uint64"                          shift, and go to state 248
    "double"                          shift, and go to state 249
    "int8"                            shift, and go to state 252
    "uint8"                           shift, and go to state 253
    "int16"                           shift, and go to state 254
    "uint16"                          shift, and go to state 255
    "tuple"                           shift, and go to state 428
    "variant"                         shift, and go to state 429
    "generator"                       shift, and go to state 430
    "++"                              shift, and go to state 431
    "--"                              shift, and go to state 432
    "::"                              shift, and go to state 55
    "$$"                              shift, and go to state 433
    "$i"                              shift, and go to state 434
    "$v"                              shift, and go to state 435
    "$b"                              shift, and go to state 436
    "$a"                              shift, and go to state 437
    "$c"                              shift, and go to state 438
    "..."                             shift, and go to state 439
    "integer constant"                shift, and go to state 440
    "long integer constant"           shift, and go to state 441
    "unsigned integer constant"       shift, and go to state 442
    "unsigned long integer constant"  shift, and go to state 443
    "unsigned int8 constant"          shift, and go to state 444
    "floating point constant"         shift, and go to state 445
    "double constant"                 shift, and go to state 446
    "name"                            shift, and go to state 56
    "start of the string"             shift, and go to state 447
    "begin of code block"             shift, and go to state 448
    '-'                               shift, and go to state 449
    '+'                               shift, and go to state 450
    '*'                               shift, and go to state 451
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 452
    '!'                               shift, and go to state 453
    '['                               shift, and go to state 454
    '('                               shift, and go to state 455
    '$'                               shift, and go to state 456
    '@'                               shift, and go to state 457

    string_builder          go to state 458
    expr_reader             go to state 459
    expr_call_pipe          go to state 460
    name_in_namespace       go to state 461
    expr_new                go to state 462
    expr_cast               go to state 463
    expr_type_decl          go to state 464
    expr_type_info          go to state 465
    expr_list               go to state 638
    block_or_lambda         go to state 466
    expr_full_block         go to state 467
    expr_numeric_const      go to state 468
    expr_named_call         go to state 469
    expr_method_call        go to state 470
    func_addr_expr          go to state 471
    expr_field              go to state 472
    expr_call               go to state 473
    expr                    go to state 639
    expr_mtag               go to state 475
    basic_type_declaration  go to state 476
    make_decl               go to state 477
    make_struct_decl        go to state 478
    make_tuple_call         go to state 479
    make_dim_decl           go to state 480
    make_table_decl         go to state 481
    array_comprehension     go to state 482


State 455

  409 expr: '(' . expr_list optional_comma ')'

    "struct"                          shift, and go to state 409
    "class"                           shift, and go to state 410
    "true"                            shift, and go to state 411
    "false"                           shift, and go to state 412
    "new"                             shift, and go to state 413
    "typeinfo"                        shift, and go to state 414
    "type"                            shift, and go to state 415
    "array"                           shift, and go to state 416
    "null"                            shift, and go to state 417
    "table"                           shift, and go to state 418
    "deref"                           shift, and go to state 419
    "cast"                            shift, and go to state 420
    "upcast"                          shift, and go to state 421
    "addr"                            shift, and go to state 422
    "reinterpret"                     shift, and go to state 423
    "unsafe"                          shift, and go to state 424
    "fixed_array"                     shift, and go to state 425
    "default"                         shift, and go to state 426
    "bool"                            shift, and go to state 225
    "void"                            shift, and go to state 226
    "string"                          shift, and go to state 227
    "int"                             shift, and go to state 229
    "int2"                            shift, and go to state 230
    "int3"                            shift, and go to state 231
    "int4"                            shift, and go to state 232
    "uint"                            shift, and go to state 233
    "bitfield"                        shift, and go to state 427
    "uint2"                           shift, and go to state 235
    "uint3"                           shift, and go to state 236
    "uint4"                           shift, and go to state 237
    "float"                           shift, and go to state 238
    "float2"                          shift, and go to state 239
    "float3"                          shift, and go to state 240
    "float4"                          shift, and go to state 241
    "range"                           shift, and go to state 242
    "urange"                          shift, and go to state 243
    "range64"                         shift, and go to state 244
    "urange64"                        shift, and go to state 245
    "int64"                           shift, and go to state 247
    "uint64"                          shift, and go to state 248
    "double"                          shift, and go to state 249
    "int8"                            shift, and go to state 252
    "uint8"                           shift, and go to state 253
    "int16"                           shift, and go to state 254
    "uint16"                          shift, and go to state 255
    "tuple"                           shift, and go to state 428
    "variant"                         shift, and go to state 429
    "generator"                       shift, and go to state 430
    "++"                              shift, and go to state 431
    "--"                              shift, and go to state 432
    "::"                              shift, and go to state 55
    "$$"                              shift, and go to state 433
    "$i"                              shift, and go to state 434
    "$v"                              shift, and go to state 435
    "$b"                              shift, and go to state 436
    "$a"                              shift, and go to state 437
    "$c"                              shift, and go to state 438
    "..."                             shift, and go to state 439
    "integer constant"                shift, and go to state 440
    "long integer constant"           shift, and go to state 441
    "unsigned integer constant"       shift, and go to state 442
    "unsigned long integer constant"  shift, and go to state 443
    "unsigned int8 constant"          shift, and go to state 444
    "floating point constant"         shift, and go to state 445
    "double constant"                 shift, and go to state 446
    "name"                            shift, and go to state 56
    "start of the string"             shift, and go to state 447
    "begin of code block"             shift, and go to state 448
    '-'                               shift, and go to state 449
    '+'                               shift, and go to state 450
    '*'                               shift, and go to state 451
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 452
    '!'                               shift, and go to state 453
    '['                               shift, and go to state 454
    '('                               shift, and go to state 455
    '$'                               shift, and go to state 456
    '@'                               shift, and go to state 457

    string_builder          go to state 458
    expr_reader             go to state 459
    expr_call_pipe          go to state 460
    name_in_namespace       go to state 461
    expr_new                go to state 462
    expr_cast               go to state 463
    expr_type_decl          go to state 464
    expr_type_info          go to state 465
    expr_list               go to state 640
    block_or_lambda         go to state 466
    expr_full_block         go to state 467
    expr_numeric_const      go to state 468
    expr_named_call         go to state 469
    expr_method_call        go to state 470
    func_addr_expr          go to state 471
    expr_field              go to state 472
    expr_call               go to state 473
    expr                    go to state 639
    expr_mtag               go to state 475
    basic_type_declaration  go to state 476
    make_decl               go to state 477
    make_struct_decl        go to state 478
    make_tuple_call         go to state 479
    make_dim_decl           go to state 480
    make_table_decl         go to state 481
    array_comprehension     go to state 482


State 456

  299 block_or_lambda: '$' .

    $default  reduce using rule 299 (block_or_lambda)


State 457

  300 block_or_lambda: '@' .
  301                | '@' . '@'
  346 func_addr_expr: '@' . '@' func_addr_name
  349               | '@' . '@' '<' $@13 type_declaration_no_options '>' $@14 func_addr_name
  352               | '@' . '@' '<' $@15 optional_function_argument_list optional_function_type '>' $@16 func_addr_name
  468 expr_mtag: '@' . '@' "$c" '(' expr ')'

    '@'  shift, and go to state 641

    $default  reduce using rule 300 (block_or_lambda)


State 458

  373 expr: string_builder .

    $default  reduce using rule 373 (expr)


State 459

  372 expr: expr_reader .

    $default  reduce using rule 372 (expr)


State 460

  451 expr: expr_call_pipe .

    $default  reduce using rule 451 (expr)


State 461

  340 expr_named_call: name_in_namespace . '(' '[' make_struct_fields ']' ')'
  341                | name_in_namespace . '(' expr_list ',' '[' make_struct_fields ']' ')'
  362 expr_call: name_in_namespace . '(' ')'
  363          | name_in_namespace . '(' "uninitialized" ')'
  364          | name_in_namespace . '(' make_struct_single ')'
  365          | name_in_namespace . '(' "uninitialized" make_struct_single ')'
  366          | name_in_namespace . '(' expr_list ')'
  370 expr: name_in_namespace .

    '('  shift, and go to state 642

    $default  reduce using rule 370 (expr)


State 462

  444 expr: expr_new .

    $default  reduce using rule 444 (expr)


State 463

  443 expr: expr_cast .

    $default  reduce using rule 443 (expr)


State 464

  442 expr: expr_type_decl .

    $default  reduce using rule 442 (expr)


State 465

  441 expr: expr_type_info .

    $default  reduce using rule 441 (expr)


State 466

  311 expr_full_block: block_or_lambda . optional_annotation_list optional_capture_list optional_function_argument_list optional_function_type block_or_simple_block

    '['  shift, and go to state 15

    $default  reduce using rule 113 (optional_annotation_list)

    optional_annotation_list  go to state 643


State 467

  447 expr: expr_full_block .

    $default  reduce using rule 447 (expr)


State 468

  371 expr: expr_numeric_const .

    $default  reduce using rule 371 (expr)


State 469

  446 expr: expr_named_call .

    $default  reduce using rule 446 (expr)


State 470

  445 expr: expr_method_call .

    $default  reduce using rule 445 (expr)


State 471

  416 expr: func_addr_expr .

    $default  reduce using rule 416 (expr)


State 472

  377 expr: expr_field .

    $default  reduce using rule 377 (expr)


State 473

  214 expr_call_pipe: expr_call . expr_full_block_assumed_piped
  417 expr: expr_call .

    "begin of code block"  shift, and go to state 644
    '$'                    shift, and go to state 456
    '@'                    shift, and go to state 645

    $default  reduce using rule 417 (expr)

    block_or_lambda                go to state 646
    expr_full_block_assumed_piped  go to state 647


State 474

  342 expr_method_call: expr . "->" "name" '(' ')'
  343                 | expr . "->" "name" '(' expr_list ')'
  353 expr_field: expr . '.' "name"
  354           | expr . '.' '.' "name"
  355           | expr . '.' "name" '(' ')'
  356           | expr . '.' "name" '(' expr_list ')'
  357           | expr . '.' basic_type_declaration '(' ')'
  358           | expr . '.' basic_type_declaration '(' expr_list ')'
  361           | expr . '.' $@17 error $@18
  383 expr: expr . "<<" expr
  384     | expr . ">>" expr
  385     | expr . "<<<" expr
  386     | expr . ">>>" expr
  387     | expr . '+' expr
  388     | expr . '-' expr
  389     | expr . '*' expr
  390     | expr . '/' expr
  391     | expr . '%' expr
  392     | expr . '<' expr
  393     | expr . '>' expr
  394     | expr . "==" expr
  395     | expr . "!=" expr
  396     | expr . "<=" expr
  397     | expr . ">=" expr
  398     | expr . '&' expr
  399     | expr . '|' expr
  400     | expr . '^' expr
  401     | expr . "&&" expr
  402     | expr . "||" expr
  403     | expr . "^^" expr
  404     | expr . ".." expr
  407     | expr . "++"
  408     | expr . "--"
  410     | expr . '[' expr ']'
  411     | expr . '.' '[' expr ']'
  412     | expr . "?[" expr ']'
  413     | expr . '.' "?[" expr ']'
  414     | expr . "?." "name"
  415     | expr . '.' "?." "name"
  424     | expr . "??" expr
  425     | expr . '?' expr ':' expr
  428     | expr . "is" "type" '<' $@19 type_declaration_no_options '>' $@20
  429     | expr . "is" basic_type_declaration
  430     | expr . "is" "name"
  431     | expr . "as" "name"
  434     | expr . "as" "type" '<' $@21 type_declaration '>' $@22
  435     | expr . "as" basic_type_declaration
  436     | expr . '?' "as" "name"
  439     | expr . '?' "as" "type" '<' $@23 type_declaration '>' $@24
  440     | expr . '?' "as" basic_type_declaration
  448     | expr . "<|" expr
  449     | expr . "|>" expr
  450     | expr . "|>" basic_type_declaration
  461 expr_mtag: expr . '.' "$f" '(' expr ')'
  462          | expr . "?." "$f" '(' expr ')'
  463          | expr . '.' '.' "$f" '(' expr ')'
  464          | expr . '.' "?." "$f" '(' expr ')'
  465          | expr . "as" "$f" '(' expr ')'
  466          | expr . '?' "as" "$f" '(' expr ')'
  467          | expr . "is" "$f" '(' expr ')'
  650 type_declaration_no_options_no_dim: "typedecl" '(' expr . ')'

    "is"   shift, and go to state 648
    "as"   shift, and go to state 649
    "<<"   shift, and go to state 650
    ">>"   shift, and go to state 651
    "++"   shift, and go to state 652
    "--"   shift, and go to state 653
    "<="   shift, and go to state 654
    ">="   shift, and go to state 655
    "=="   shift, and go to state 656
    "!="   shift, and go to state 657
    "->"   shift, and go to state 658
    "??"   shift, and go to state 659
    "?."   shift, and go to state 660
    "?["   shift, and go to state 661
    "<|"   shift, and go to state 662
    "|>"   shift, and go to state 663
    "<<<"  shift, and go to state 664
    ">>>"  shift, and go to state 665
    "&&"   shift, and go to state 666
    "||"   shift, and go to state 667
    "^^"   shift, and go to state 668
    ".."   shift, and go to state 669
    '?'    shift, and go to state 670
    '|'    shift, and go to state 671
    '^'    shift, and go to state 672
    '&'    shift, and go to state 673
    '<'    shift, and go to state 674
    '>'    shift, and go to state 675
    '-'    shift, and go to state 676
    '+'    shift, and go to state 677
    '*'    shift, and go to state 678
    '/'    shift, and go to state 679
    '%'    shift, and go to state 680
    '.'    shift, and go to state 681
    '['    shift, and go to state 682
    ')'    shift, and go to state 683


State 475

  378 expr: expr_mtag .

    $default  reduce using rule 378 (expr)


State 476

  367 expr_call: basic_type_declaration . '(' ')'
  368          | basic_type_declaration . '(' expr_list ')'

    '('  shift, and go to state 684


State 477

  374 expr: make_decl .

    $default  reduce using rule 374 (expr)


State 478

  721 make_decl: make_struct_decl .

    $default  reduce using rule 721 (make_decl)


State 479

  725 make_decl: make_tuple_call .

    $default  reduce using rule 725 (make_decl)


State 480

  722 make_decl: make_dim_decl .

    $default  reduce using rule 722 (make_decl)


State 481

  723 make_decl: make_table_decl .

    $default  reduce using rule 723 (make_decl)


State 482

  724 make_decl: array_comprehension .

    $default  reduce using rule 724 (make_decl)


State 483

  678 type_declaration_no_options_no_dim: "iterator" '<' $@46 . type_declaration '>' $@47

    "type"       shift, and go to state 219
    "array"      shift, and go to state 220
    "table"      shift, and go to state 221
    "typedecl"   shift, and go to state 222
    "iterator"   shift, and go to state 223
    "smart_ptr"  shift, and go to state 224
    "bool"       shift, and go to state 225
    "void"       shift, and go to state 226
    "string"     shift, and go to state 227
    "auto"       shift, and go to state 228
    "int"        shift, and go to state 229
    "int2"       shift, and go to state 230
    "int3"       shift, and go to state 231
    "int4"       shift, and go to state 232
    "uint"       shift, and go to state 233
    "bitfield"   shift, and go to state 234
    "uint2"      shift, and go to state 235
    "uint3"      shift, and go to state 236
    "uint4"      shift, and go to state 237
    "float"      shift, and go to state 238
    "float2"     shift, and go to state 239
    "float3"     shift, and go to state 240
    "float4"     shift, and go to state 241
    "range"      shift, and go to state 242
    "urange"     shift, and go to state 243
    "range64"    shift, and go to state 244
    "urange64"   shift, and go to state 245
    "block"      shift, and go to state 246
    "int64"      shift, and go to state 247
    "uint64"     shift, and go to state 248
    "double"     shift, and go to state 249
    "function"   shift, and go to state 250
    "lambda"     shift, and go to state 251
    "int8"       shift, and go to state 252
    "uint8"      shift, and go to state 253
    "int16"      shift, and go to state 254
    "uint16"     shift, and go to state 255
    "tuple"      shift, and go to state 256
    "variant"    shift, and go to state 257
    "::"         shift, and go to state 55
    "$t"         shift, and go to state 258
    "name"       shift, and go to state 56
    '$'          shift, and go to state 259

    name_in_namespace                   go to state 260
    basic_type_declaration              go to state 261
    structure_type_declaration          go to state 262
    auto_type_declaration               go to state 263
    bitfield_type_declaration           go to state 264
    type_declaration_no_options         go to state 265
    type_declaration_no_options_no_dim  go to state 266
    type_declaration                    go to state 685


State 484

  668 type_declaration_no_options_no_dim: "smart_ptr" '<' $@40 . type_declaration '>' $@41

    "type"       shift, and go to state 219
    "array"      shift, and go to state 220
    "table"      shift, and go to state 221
    "typedecl"   shift, and go to state 222
    "iterator"   shift, and go to state 223
    "smart_ptr"  shift, and go to state 224
    "bool"       shift, and go to state 225
    "void"       shift, and go to state 226
    "string"     shift, and go to state 227
    "auto"       shift, and go to state 228
    "int"        shift, and go to state 229
    "int2"       shift, and go to state 230
    "int3"       shift, and go to state 231
    "int4"       shift, and go to state 232
    "uint"       shift, and go to state 233
    "bitfield"   shift, and go to state 234
    "uint2"      shift, and go to state 235
    "uint3"      shift, and go to state 236
    "uint4"      shift, and go to state 237
    "float"      shift, and go to state 238
    "float2"     shift, and go to state 239
    "float3"     shift, and go to state 240
    "float4"     shift, and go to state 241
    "range"      shift, and go to state 242
    "urange"     shift, and go to state 243
    "range64"    shift, and go to state 244
    "urange64"   shift, and go to state 245
    "block"      shift, and go to state 246
    "int64"      shift, and go to state 247
    "uint64"     shift, and go to state 248
    "double"     shift, and go to state 249
    "function"   shift, and go to state 250
    "lambda"     shift, and go to state 251
    "int8"       shift, and go to state 252
    "uint8"      shift, and go to state 253
    "int16"      shift, and go to state 254
    "uint16"     shift, and go to state 255
    "tuple"      shift, and go to state 256
    "variant"    shift, and go to state 257
    "::"         shift, and go to state 55
    "$t"         shift, and go to state 258
    "name"       shift, and go to state 56
    '$'          shift, and go to state 259

    name_in_namespace                   go to state 260
    basic_type_declaration              go to state 261
    structure_type_declaration          go to state 262
    auto_type_declaration               go to state 263
    bitfield_type_declaration           go to state 264
    type_declaration_no_options         go to state 265
    type_declaration_no_options_no_dim  go to state 266
    type_declaration                    go to state 686


State 485

  623 auto_type_declaration: "auto" '(' "name" . ')'

    ')'  shift, and go to state 687


State 486

  632 bitfield_type_declaration: "bitfield" '<' $@35 . bitfield_bits '>' $@36

    "name"  shift, and go to state 688

    bitfield_bits  go to state 689


State 487

  682 type_declaration_no_options_no_dim: "block" '<' $@48 . type_declaration '>' $@49

    "type"       shift, and go to state 219
    "array"      shift, and go to state 220
    "table"      shift, and go to state 221
    "typedecl"   shift, and go to state 222
    "iterator"   shift, and go to state 223
    "smart_ptr"  shift, and go to state 224
    "bool"       shift, and go to state 225
    "void"       shift, and go to state 226
    "string"     shift, and go to state 227
    "auto"       shift, and go to state 228
    "int"        shift, and go to state 229
    "int2"       shift, and go to state 230
    "int3"       shift, and go to state 231
    "int4"       shift, and go to state 232
    "uint"       shift, and go to state 233
    "bitfield"   shift, and go to state 234
    "uint2"      shift, and go to state 235
    "uint3"      shift, and go to state 236
    "uint4"      shift, and go to state 237
    "float"      shift, and go to state 238
    "float2"     shift, and go to state 239
    "float3"     shift, and go to state 240
    "float4"     shift, and go to state 241
    "range"      shift, and go to state 242
    "urange"     shift, and go to state 243
    "range64"    shift, and go to state 244
    "urange64"   shift, and go to state 245
    "block"      shift, and go to state 246
    "int64"      shift, and go to state 247
    "uint64"     shift, and go to state 248
    "double"     shift, and go to state 249
    "function"   shift, and go to state 250
    "lambda"     shift, and go to state 251
    "int8"       shift, and go to state 252
    "uint8"      shift, and go to state 253
    "int16"      shift, and go to state 254
    "uint16"     shift, and go to state 255
    "tuple"      shift, and go to state 256
    "variant"    shift, and go to state 257
    "::"         shift, and go to state 55
    "$t"         shift, and go to state 258
    "name"       shift, and go to state 56
    '$'          shift, and go to state 259

    name_in_namespace                   go to state 260
    basic_type_declaration              go to state 261
    structure_type_declaration          go to state 262
    auto_type_declaration               go to state 263
    bitfield_type_declaration           go to state 264
    type_declaration_no_options         go to state 265
    type_declaration_no_options_no_dim  go to state 266
    type_declaration                    go to state 690


State 488

  685 type_declaration_no_options_no_dim: "block" '<' $@50 . optional_function_argument_list optional_function_type '>' $@51

    '('  shift, and go to state 324

    $default  reduce using rule 115 (optional_function_argument_list)

    optional_function_argument_list  go to state 691


State 489

  689 type_declaration_no_options_no_dim: "function" '<' $@52 . type_declaration '>' $@53

    "type"       shift, and go to state 219
    "array"      shift, and go to state 220
    "table"      shift, and go to state 221
    "typedecl"   shift, and go to state 222
    "iterator"   shift, and go to state 223
    "smart_ptr"  shift, and go to state 224
    "bool"       shift, and go to state 225
    "void"       shift, and go to state 226
    "string"     shift, and go to state 227
    "auto"       shift, and go to state 228
    "int"        shift, and go to state 229
    "int2"       shift, and go to state 230
    "int3"       shift, and go to state 231
    "int4"       shift, and go to state 232
    "uint"       shift, and go to state 233
    "bitfield"   shift, and go to state 234
    "uint2"      shift, and go to state 235
    "uint3"      shift, and go to state 236
    "uint4"      shift, and go to state 237
    "float"      shift, and go to state 238
    "float2"     shift, and go to state 239
    "float3"     shift, and go to state 240
    "float4"     shift, and go to state 241
    "range"      shift, and go to state 242
    "urange"     shift, and go to state 243
    "range64"    shift, and go to state 244
    "urange64"   shift, and go to state 245
    "block"      shift, and go to state 246
    "int64"      shift, and go to state 247
    "uint64"     shift, and go to state 248
    "double"     shift, and go to state 249
    "function"   shift, and go to state 250
    "lambda"     shift, and go to state 251
    "int8"       shift, and go to state 252
    "uint8"      shift, and go to state 253
    "int16"      shift, and go to state 254
    "uint16"     shift, and go to state 255
    "tuple"      shift, and go to state 256
    "variant"    shift, and go to state 257
    "::"         shift, and go to state 55
    "$t"         shift, and go to state 258
    "name"       shift, and go to state 56
    '$'          shift, and go to state 259

    name_in_namespace                   go to state 260
    basic_type_declaration              go to state 261
    structure_type_declaration          go to state 262
    auto_type_declaration               go to state 263
    bitfield_type_declaration           go to state 264
    type_declaration_no_options         go to state 265
    type_declaration_no_options_no_dim  go to state 266
    type_declaration                    go to state 692


State 490

  692 type_declaration_no_options_no_dim: "function" '<' $@54 . optional_function_argument_list optional_function_type '>' $@55

    '('  shift, and go to state 324

    $default  reduce using rule 115 (optional_function_argument_list)

    optional_function_argument_list  go to state 693


State 491

  696 type_declaration_no_options_no_dim: "lambda" '<' $@56 . type_declaration '>' $@57

    "type"       shift, and go to state 219
    "array"      shift, and go to state 220
    "table"      shift, and go to state 221
    "typedecl"   shift, and go to state 222
    "iterator"   shift, and go to state 223
    "smart_ptr"  shift, and go to state 224
    "bool"       shift, and go to state 225
    "void"       shift, and go to state 226
    "string"     shift, and go to state 227
    "auto"       shift, and go to state 228
    "int"        shift, and go to state 229
    "int2"       shift, and go to state 230
    "int3"       shift, and go to state 231
    "int4"       shift, and go to state 232
    "uint"       shift, and go to state 233
    "bitfield"   shift, and go to state 234
    "uint2"      shift, and go to state 235
    "uint3"      shift, and go to state 236
    "uint4"      shift, and go to state 237
    "float"      shift, and go to state 238
    "float2"     shift, and go to state 239
    "float3"     shift, and go to state 240
    "float4"     shift, and go to state 241
    "range"      shift, and go to state 242
    "urange"     shift, and go to state 243
    "range64"    shift, and go to state 244
    "urange64"   shift, and go to state 245
    "block"      shift, and go to state 246
    "int64"      shift, and go to state 247
    "uint64"     shift, and go to state 248
    "double"     shift, and go to state 249
    "function"   shift, and go to state 250
    "lambda"     shift, and go to state 251
    "int8"       shift, and go to state 252
    "uint8"      shift, and go to state 253
    "int16"      shift, and go to state 254
    "uint16"     shift, and go to state 255
    "tuple"      shift, and go to state 256
    "variant"    shift, and go to state 257
    "::"         shift, and go to state 55
    "$t"         shift, and go to state 258
    "name"       shift, and go to state 56
    '$'          shift, and go to state 259

    name_in_namespace                   go to state 260
    basic_type_declaration              go to state 261
    structure_type_declaration          go to state 262
    auto_type_declaration               go to state 263
    bitfield_type_declaration           go to state 264
    type_declaration_no_options         go to state 265
    type_declaration_no_options_no_dim  go to state 266
    type_declaration                    go to state 694


State 492

  699 type_declaration_no_options_no_dim: "lambda" '<' $@58 . optional_function_argument_list optional_function_type '>' $@59

    '('  shift, and go to state 324

    $default  reduce using rule 115 (optional_function_argument_list)

    optional_function_argument_list  go to state 695


State 493

  702 type_declaration_no_options_no_dim: "tuple" '<' $@60 . tuple_type_list '>' $@61

    "type"       shift, and go to state 219
    "array"      shift, and go to state 220
    "table"      shift, and go to state 221
    "typedecl"   shift, and go to state 222
    "iterator"   shift, and go to state 223
    "smart_ptr"  shift, and go to state 224
    "bool"       shift, and go to state 225
    "void"       shift, and go to state 226
    "string"     shift, and go to state 227
    "auto"       shift, and go to state 228
    "int"        shift, and go to state 229
    "int2"       shift, and go to state 230
    "int3"       shift, and go to state 231
    "int4"       shift, and go to state 232
    "uint"       shift, and go to state 233
    "bitfield"   shift, and go to state 234
    "uint2"      shift, and go to state 235
    "uint3"      shift, and go to state 236
    "uint4"      shift, and go to state 237
    "float"      shift, and go to state 238
    "float2"     shift, and go to state 239
    "float3"     shift, and go to state 240
    "float4"     shift, and go to state 241
    "range"      shift, and go to state 242
    "urange"     shift, and go to state 243
    "range64"    shift, and go to state 244
    "urange64"   shift, and go to state 245
    "block"      shift, and go to state 246
    "int64"      shift, and go to state 247
    "uint64"     shift, and go to state 248
    "double"     shift, and go to state 249
    "function"   shift, and go to state 250
    "lambda"     shift, and go to state 251
    "int8"       shift, and go to state 252
    "uint8"      shift, and go to state 253
    "int16"      shift, and go to state 254
    "uint16"     shift, and go to state 255
    "tuple"      shift, and go to state 256
    "variant"    shift, and go to state 257
    "::"         shift, and go to state 55
    "$t"         shift, and go to state 258
    "name"       shift, and go to state 511
    '$'          shift, and go to state 259

    name_in_namespace                   go to state 260
    tuple_type                          go to state 696
    tuple_type_list                     go to state 697
    basic_type_declaration              go to state 261
    structure_type_declaration          go to state 262
    auto_type_declaration               go to state 263
    bitfield_type_declaration           go to state 264
    type_declaration_no_options         go to state 265
    type_declaration_no_options_no_dim  go to state 266
    type_declaration                    go to state 516


State 494

  705 type_declaration_no_options_no_dim: "variant" '<' $@62 . variant_type_list '>' $@63

    "name"  shift, and go to state 518

    variant_type       go to state 698
    variant_type_list  go to state 699


State 495

  342 expr_method_call: expr . "->" "name" '(' ')'
  343                 | expr . "->" "name" '(' expr_list ')'
  353 expr_field: expr . '.' "name"
  354           | expr . '.' '.' "name"
  355           | expr . '.' "name" '(' ')'
  356           | expr . '.' "name" '(' expr_list ')'
  357           | expr . '.' basic_type_declaration '(' ')'
  358           | expr . '.' basic_type_declaration '(' expr_list ')'
  361           | expr . '.' $@17 error $@18
  383 expr: expr . "<<" expr
  384     | expr . ">>" expr
  385     | expr . "<<<" expr
  386     | expr . ">>>" expr
  387     | expr . '+' expr
  388     | expr . '-' expr
  389     | expr . '*' expr
  390     | expr . '/' expr
  391     | expr . '%' expr
  392     | expr . '<' expr
  393     | expr . '>' expr
  394     | expr . "==" expr
  395     | expr . "!=" expr
  396     | expr . "<=" expr
  397     | expr . ">=" expr
  398     | expr . '&' expr
  399     | expr . '|' expr
  400     | expr . '^' expr
  401     | expr . "&&" expr
  402     | expr . "||" expr
  403     | expr . "^^" expr
  404     | expr . ".." expr
  407     | expr . "++"
  408     | expr . "--"
  410     | expr . '[' expr ']'
  411     | expr . '.' '[' expr ']'
  412     | expr . "?[" expr ']'
  413     | expr . '.' "?[" expr ']'
  414     | expr . "?." "name"
  415     | expr . '.' "?." "name"
  424     | expr . "??" expr
  425     | expr . '?' expr ':' expr
  428     | expr . "is" "type" '<' $@19 type_declaration_no_options '>' $@20
  429     | expr . "is" basic_type_declaration
  430     | expr . "is" "name"
  431     | expr . "as" "name"
  434     | expr . "as" "type" '<' $@21 type_declaration '>' $@22
  435     | expr . "as" basic_type_declaration
  436     | expr . '?' "as" "name"
  439     | expr . '?' "as" "type" '<' $@23 type_declaration '>' $@24
  440     | expr . '?' "as" basic_type_declaration
  448     | expr . "<|" expr
  449     | expr . "|>" expr
  450     | expr . "|>" basic_type_declaration
  461 expr_mtag: expr . '.' "$f" '(' expr ')'
  462          | expr . "?." "$f" '(' expr ')'
  463          | expr . '.' '.' "$f" '(' expr ')'
  464          | expr . '.' "?." "$f" '(' expr ')'
  465          | expr . "as" "$f" '(' expr ')'
  466          | expr . '?' "as" "$f" '(' expr ')'
  467          | expr . "is" "$f" '(' expr ')'
  624 auto_type_declaration: "$t" '(' expr . ')'

    "is"   shift, and go to state 648
    "as"   shift, and go to state 649
    "<<"   shift, and go to state 650
    ">>"   shift, and go to state 651
    "++"   shift, and go to state 652
    "--"   shift, and go to state 653
    "<="   shift, and go to state 654
    ">="   shift, and go to state 655
    "=="   shift, and go to state 656
    "!="   shift, and go to state 657
    "->"   shift, and go to state 658
    "??"   shift, and go to state 659
    "?."   shift, and go to state 660
    "?["   shift, and go to state 661
    "<|"   shift, and go to state 662
    "|>"   shift, and go to state 663
    "<<<"  shift, and go to state 664
    ">>>"  shift, and go to state 665
    "&&"   shift, and go to state 666
    "||"   shift, and go to state 667
    "^^"   shift, and go to state 668
    ".."   shift, and go to state 669
    '?'    shift, and go to state 670
    '|'    shift, and go to state 671
    '^'    shift, and go to state 672
    '&'    shift, and go to state 673
    '<'    shift, and go to state 674
    '>'    shift, and go to state 675
    '-'    shift, and go to state 676
    '+'    shift, and go to state 677
    '*'    shift, and go to state 678
    '/'    shift, and go to state 679
    '%'    shift, and go to state 680
    '.'    shift, and go to state 681
    '['    shift, and go to state 682
    ')'    shift, and go to state 700


State 496

  653 type_declaration_no_options_no_dim: '$' name_in_namespace '<' . $@39 type_declaration_no_options_list '>' '(' optional_expr_list ')'

    $default  reduce using rule 652 ($@39)

    $@39  go to state 701


State 497

  651 type_declaration_no_options_no_dim: '$' name_in_namespace '(' . optional_expr_list ')'

    "struct"                          shift, and go to state 409
    "class"                           shift, and go to state 410
    "true"                            shift, and go to state 411
    "false"                           shift, and go to state 412
    "new"                             shift, and go to state 413
    "typeinfo"                        shift, and go to state 414
    "type"                            shift, and go to state 415
    "array"                           shift, and go to state 416
    "null"                            shift, and go to state 417
    "table"                           shift, and go to state 418
    "deref"                           shift, and go to state 419
    "cast"                            shift, and go to state 420
    "upcast"                          shift, and go to state 421
    "addr"                            shift, and go to state 422
    "reinterpret"                     shift, and go to state 423
    "unsafe"                          shift, and go to state 424
    "fixed_array"                     shift, and go to state 425
    "default"                         shift, and go to state 426
    "bool"                            shift, and go to state 225
    "void"                            shift, and go to state 226
    "string"                          shift, and go to state 227
    "int"                             shift, and go to state 229
    "int2"                            shift, and go to state 230
    "int3"                            shift, and go to state 231
    "int4"                            shift, and go to state 232
    "uint"                            shift, and go to state 233
    "bitfield"                        shift, and go to state 427
    "uint2"                           shift, and go to state 235
    "uint3"                           shift, and go to state 236
    "uint4"                           shift, and go to state 237
    "float"                           shift, and go to state 238
    "float2"                          shift, and go to state 239
    "float3"                          shift, and go to state 240
    "float4"                          shift, and go to state 241
    "range"                           shift, and go to state 242
    "urange"                          shift, and go to state 243
    "range64"                         shift, and go to state 244
    "urange64"                        shift, and go to state 245
    "int64"                           shift, and go to state 247
    "uint64"                          shift, and go to state 248
    "double"                          shift, and go to state 249
    "int8"                            shift, and go to state 252
    "uint8"                           shift, and go to state 253
    "int16"                           shift, and go to state 254
    "uint16"                          shift, and go to state 255
    "tuple"                           shift, and go to state 428
    "variant"                         shift, and go to state 429
    "generator"                       shift, and go to state 430
    "++"                              shift, and go to state 431
    "--"                              shift, and go to state 432
    "::"                              shift, and go to state 55
    "$$"                              shift, and go to state 433
    "$i"                              shift, and go to state 434
    "$v"                              shift, and go to state 435
    "$b"                              shift, and go to state 436
    "$a"                              shift, and go to state 437
    "$c"                              shift, and go to state 438
    "..."                             shift, and go to state 439
    "integer constant"                shift, and go to state 440
    "long integer constant"           shift, and go to state 441
    "unsigned integer constant"       shift, and go to state 442
    "unsigned long integer constant"  shift, and go to state 443
    "unsigned int8 constant"          shift, and go to state 444
    "floating point constant"         shift, and go to state 445
    "double constant"                 shift, and go to state 446
    "name"                            shift, and go to state 56
    "start of the string"             shift, and go to state 447
    "begin of code block"             shift, and go to state 448
    '-'                               shift, and go to state 449
    '+'                               shift, and go to state 450
    '*'                               shift, and go to state 451
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 452
    '!'                               shift, and go to state 453
    '['                               shift, and go to state 454
    '('                               shift, and go to state 455
    '$'                               shift, and go to state 456
    '@'                               shift, and go to state 457

    $default  reduce using rule 236 (optional_expr_list)

    string_builder          go to state 458
    expr_reader             go to state 459
    expr_call_pipe          go to state 460
    optional_expr_list      go to state 702
    name_in_namespace       go to state 461
    expr_new                go to state 462
    expr_cast               go to state 463
    expr_type_decl          go to state 464
    expr_type_info          go to state 465
    expr_list               go to state 703
    block_or_lambda         go to state 466
    expr_full_block         go to state 467
    expr_numeric_const      go to state 468
    expr_named_call         go to state 469
    expr_method_call        go to state 470
    func_addr_expr          go to state 471
    expr_field              go to state 472
    expr_call               go to state 473
    expr                    go to state 639
    expr_mtag               go to state 475
    basic_type_declaration  go to state 476
    make_decl               go to state 477
    make_struct_decl        go to state 478
    make_tuple_call         go to state 479
    make_dim_decl           go to state 480
    make_table_decl         go to state 481
    array_comprehension     go to state 482


State 498

  663 type_declaration_no_options_no_dim: type_declaration_no_options_no_dim "==" "const" .

    $default  reduce using rule 663 (type_declaration_no_options_no_dim)


State 499

  664 type_declaration_no_options_no_dim: type_declaration_no_options_no_dim "==" '&' .

    $default  reduce using rule 664 (type_declaration_no_options_no_dim)


State 500

  657 type_declaration_no_options_no_dim: type_declaration_no_options_no_dim '-' "const" .

    $default  reduce using rule 657 (type_declaration_no_options_no_dim)


State 501

  659 type_declaration_no_options_no_dim: type_declaration_no_options_no_dim '-' '&' .

    $default  reduce using rule 659 (type_declaration_no_options_no_dim)


State 502

  654 type_declaration_no_options_no_dim: type_declaration_no_options_no_dim '-' '[' . ']'

    ']'  shift, and go to state 704


State 503

  662 type_declaration_no_options_no_dim: type_declaration_no_options_no_dim '-' '#' .

    $default  reduce using rule 662 (type_declaration_no_options_no_dim)


State 504

  638 dim_list: '[' ']' .

    $default  reduce using rule 638 (dim_list)


State 505

  342 expr_method_call: expr . "->" "name" '(' ')'
  343                 | expr . "->" "name" '(' expr_list ')'
  353 expr_field: expr . '.' "name"
  354           | expr . '.' '.' "name"
  355           | expr . '.' "name" '(' ')'
  356           | expr . '.' "name" '(' expr_list ')'
  357           | expr . '.' basic_type_declaration '(' ')'
  358           | expr . '.' basic_type_declaration '(' expr_list ')'
  361           | expr . '.' $@17 error $@18
  383 expr: expr . "<<" expr
  384     | expr . ">>" expr
  385     | expr . "<<<" expr
  386     | expr . ">>>" expr
  387     | expr . '+' expr
  388     | expr . '-' expr
  389     | expr . '*' expr
  390     | expr . '/' expr
  391     | expr . '%' expr
  392     | expr . '<' expr
  393     | expr . '>' expr
  394     | expr . "==" expr
  395     | expr . "!=" expr
  396     | expr . "<=" expr
  397     | expr . ">=" expr
  398     | expr . '&' expr
  399     | expr . '|' expr
  400     | expr . '^' expr
  401     | expr . "&&" expr
  402     | expr . "||" expr
  403     | expr . "^^" expr
  404     | expr . ".." expr
  407     | expr . "++"
  408     | expr . "--"
  410     | expr . '[' expr ']'
  411     | expr . '.' '[' expr ']'
  412     | expr . "?[" expr ']'
  413     | expr . '.' "?[" expr ']'
  414     | expr . "?." "name"
  415     | expr . '.' "?." "name"
  424     | expr . "??" expr
  425     | expr . '?' expr ':' expr
  428     | expr . "is" "type" '<' $@19 type_declaration_no_options '>' $@20
  429     | expr . "is" basic_type_declaration
  430     | expr . "is" "name"
  431     | expr . "as" "name"
  434     | expr . "as" "type" '<' $@21 type_declaration '>' $@22
  435     | expr . "as" basic_type_declaration
  436     | expr . '?' "as" "name"
  439     | expr . '?' "as" "type" '<' $@23 type_declaration '>' $@24
  440     | expr . '?' "as" basic_type_declaration
  448     | expr . "<|" expr
  449     | expr . "|>" expr
  450     | expr . "|>" basic_type_declaration
  461 expr_mtag: expr . '.' "$f" '(' expr ')'
  462          | expr . "?." "$f" '(' expr ')'
  463          | expr . '.' '.' "$f" '(' expr ')'
  464          | expr . '.' "?." "$f" '(' expr ')'
  465          | expr . "as" "$f" '(' expr ')'
  466          | expr . '?' "as" "$f" '(' expr ')'
  467          | expr . "is" "$f" '(' expr ')'
  637 dim_list: '[' expr . ']'

    "is"   shift, and go to state 648
    "as"   shift, and go to state 649
    "<<"   shift, and go to state 650
    ">>"   shift, and go to state 651
    "++"   shift, and go to state 652
    "--"   shift, and go to state 653
    "<="   shift, and go to state 654
    ">="   shift, and go to state 655
    "=="   shift, and go to state 656
    "!="   shift, and go to state 657
    "->"   shift, and go to state 658
    "??"   shift, and go to state 659
    "?."   shift, and go to state 660
    "?["   shift, and go to state 661
    "<|"   shift, and go to state 662
    "|>"   shift, and go to state 663
    "<<<"  shift, and go to state 664
    ">>>"  shift, and go to state 665
    "&&"   shift, and go to state 666
    "||"   shift, and go to state 667
    "^^"   shift, and go to state 668
    ".."   shift, and go to state 669
    '?'    shift, and go to state 670
    '|'    shift, and go to state 671
    '^'    shift, and go to state 672
    '&'    shift, and go to state 673
    '<'    shift, and go to state 674
    '>'    shift, and go to state 675
    '-'    shift, and go to state 676
    '+'    shift, and go to state 677
    '*'    shift, and go to state 678
    '/'    shift, and go to state 679
    '%'    shift, and go to state 680
    '.'    shift, and go to state 681
    '['    shift, and go to state 682
    ']'    shift, and go to state 705


State 506

  639 dim_list: dim_list '[' . expr ']'
  640         | dim_list '[' . ']'

    "struct"                          shift, and go to state 409
    "class"                           shift, and go to state 410
    "true"                            shift, and go to state 411
    "false"                           shift, and go to state 412
    "new"                             shift, and go to state 413
    "typeinfo"                        shift, and go to state 414
    "type"                            shift, and go to state 415
    "array"                           shift, and go to state 416
    "null"                            shift, and go to state 417
    "table"                           shift, and go to state 418
    "deref"                           shift, and go to state 419
    "cast"                            shift, and go to state 420
    "upcast"                          shift, and go to state 421
    "addr"                            shift, and go to state 422
    "reinterpret"                     shift, and go to state 423
    "unsafe"                          shift, and go to state 424
    "fixed_array"                     shift, and go to state 425
    "default"                         shift, and go to state 426
    "bool"                            shift, and go to state 225
    "void"                            shift, and go to state 226
    "string"                          shift, and go to state 227
    "int"                             shift, and go to state 229
    "int2"                            shift, and go to state 230
    "int3"                            shift, and go to state 231
    "int4"                            shift, and go to state 232
    "uint"                            shift, and go to state 233
    "bitfield"                        shift, and go to state 427
    "uint2"                           shift, and go to state 235
    "uint3"                           shift, and go to state 236
    "uint4"                           shift, and go to state 237
    "float"                           shift, and go to state 238
    "float2"                          shift, and go to state 239
    "float3"                          shift, and go to state 240
    "float4"                          shift, and go to state 241
    "range"                           shift, and go to state 242
    "urange"                          shift, and go to state 243
    "range64"                         shift, and go to state 244
    "urange64"                        shift, and go to state 245
    "int64"                           shift, and go to state 247
    "uint64"                          shift, and go to state 248
    "double"                          shift, and go to state 249
    "int8"                            shift, and go to state 252
    "uint8"                           shift, and go to state 253
    "int16"                           shift, and go to state 254
    "uint16"                          shift, and go to state 255
    "tuple"                           shift, and go to state 428
    "variant"                         shift, and go to state 429
    "generator"                       shift, and go to state 430
    "++"                              shift, and go to state 431
    "--"                              shift, and go to state 432
    "::"                              shift, and go to state 55
    "$$"                              shift, and go to state 433
    "$i"                              shift, and go to state 434
    "$v"                              shift, and go to state 435
    "$b"                              shift, and go to state 436
    "$a"                              shift, and go to state 437
    "$c"                              shift, and go to state 438
    "..."                             shift, and go to state 439
    "integer constant"                shift, and go to state 440
    "long integer constant"           shift, and go to state 441
    "unsigned integer constant"       shift, and go to state 442
    "unsigned long integer constant"  shift, and go to state 443
    "unsigned int8 constant"          shift, and go to state 444
    "floating point constant"         shift, and go to state 445
    "double constant"                 shift, and go to state 446
    "name"                            shift, and go to state 56
    "start of the string"             shift, and go to state 447
    "begin of code block"             shift, and go to state 448
    '-'                               shift, and go to state 449
    '+'                               shift, and go to state 450
    '*'                               shift, and go to state 451
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 452
    '!'                               shift, and go to state 453
    '['                               shift, and go to state 454
    ']'                               shift, and go to state 706
    '('                               shift, and go to state 455
    '$'                               shift, and go to state 456
    '@'                               shift, and go to state 457

    string_builder          go to state 458
    expr_reader             go to state 459
    expr_call_pipe          go to state 460
    name_in_namespace       go to state 461
    expr_new                go to state 462
    expr_cast               go to state 463
    expr_type_decl          go to state 464
    expr_type_info          go to state 465
    block_or_lambda         go to state 466
    expr_full_block         go to state 467
    expr_numeric_const      go to state 468
    expr_named_call         go to state 469
    expr_method_call        go to state 470
    func_addr_expr          go to state 471
    expr_field              go to state 472
    expr_call               go to state 473
    expr                    go to state 707
    expr_mtag               go to state 475
    basic_type_declaration  go to state 476
    make_decl               go to state 477
    make_struct_decl        go to state 478
    make_tuple_call         go to state 479
    make_dim_decl           go to state 480
    make_table_decl         go to state 481
    array_comprehension     go to state 482


State 507

  708 type_declaration: type_declaration '|' '#' .

    $default  reduce using rule 708 (type_declaration)


State 508

  707 type_declaration: type_declaration '|' type_declaration_no_options .

    $default  reduce using rule 707 (type_declaration)


State 509

  629 bitfield_alias_bits: bitfield_alias_bits ',' . "name"
  789 optional_comma: ',' .

    "name"  shift, and go to state 708

    $default  reduce using rule 789 (optional_comma)


State 510

  720 bitfield_alias_declaration: "bitfield" optional_public_or_private_alias "name" $@70 "begin of code block" $@71 bitfield_alias_bits optional_comma . $@72 "end of code block"

    $default  reduce using rule 719 ($@72)

    $@72  go to state 709


State 511

  242 name_in_namespace: "name" .
  243                  | "name" . "::" "name"
  494 tuple_type: "name" . ':' type_declaration

    "::"  shift, and go to state 95
    ':'   shift, and go to state 710

    $default  reduce using rule 242 (name_in_namespace)


State 512

  634 c_or_s: "end of expression" .

    $default  reduce using rule 634 (c_or_s)


State 513

  633 c_or_s: ',' .

    $default  reduce using rule 633 (c_or_s)


State 514

  499 tuple_alias_type_list: tuple_alias_type_list tuple_type . c_or_s

    "end of expression"  shift, and go to state 512
    ','                  shift, and go to state 513

    c_or_s  go to state 711


State 515

  498 tuple_alias_type_list: tuple_alias_type_list c_or_s .

    $default  reduce using rule 498 (tuple_alias_type_list)


State 516

  493 tuple_type: type_declaration .
  707 type_declaration: type_declaration . '|' type_declaration_no_options
  708                 | type_declaration . '|' '#'

    '|'  shift, and go to state 375

    $default  reduce using rule 493 (tuple_type)


State 517

  712 tuple_alias_declaration: "tuple" optional_public_or_private_alias "name" $@64 "begin of code block" $@65 tuple_alias_type_list $@66 . "end of code block"

    "end of code block"  shift, and go to state 712


State 518

  500 variant_type: "name" . ':' type_declaration

    ':'  shift, and go to state 713


State 519

  505 variant_alias_type_list: variant_alias_type_list variant_type . c_or_s

    "end of expression"  shift, and go to state 512
    ','                  shift, and go to state 513

    c_or_s  go to state 714


State 520

  504 variant_alias_type_list: variant_alias_type_list c_or_s .

    $default  reduce using rule 504 (variant_alias_type_list)


State 521

  716 variant_alias_declaration: "variant" optional_public_or_private_alias "name" $@67 "begin of code block" $@68 variant_alias_type_list $@69 . "end of code block"

    "end of code block"  shift, and go to state 715


State 522

  179 function_name: "operator" '?' "as" "name" .

    $default  reduce using rule 179 (function_name)


State 523

  169 function_name: "operator" '.' "name" ":=" .

    $default  reduce using rule 169 (function_name)


State 524

  490 function_argument_declaration: "$a" '(' . expr ')'

    "struct"                          shift, and go to state 409
    "class"                           shift, and go to state 410
    "true"                            shift, and go to state 411
    "false"                           shift, and go to state 412
    "new"                             shift, and go to state 413
    "typeinfo"                        shift, and go to state 414
    "type"                            shift, and go to state 415
    "array"                           shift, and go to state 416
    "null"                            shift, and go to state 417
    "table"                           shift, and go to state 418
    "deref"                           shift, and go to state 419
    "cast"                            shift, and go to state 420
    "upcast"                          shift, and go to state 421
    "addr"                            shift, and go to state 422
    "reinterpret"                     shift, and go to state 423
    "unsafe"                          shift, and go to state 424
    "fixed_array"                     shift, and go to state 425
    "default"                         shift, and go to state 426
    "bool"                            shift, and go to state 225
    "void"                            shift, and go to state 226
    "string"                          shift, and go to state 227
    "int"                             shift, and go to state 229
    "int2"                            shift, and go to state 230
    "int3"                            shift, and go to state 231
    "int4"                            shift, and go to state 232
    "uint"                            shift, and go to state 233
    "bitfield"                        shift, and go to state 427
    "uint2"                           shift, and go to state 235
    "uint3"                           shift, and go to state 236
    "uint4"                           shift, and go to state 237
    "float"                           shift, and go to state 238
    "float2"                          shift, and go to state 239
    "float3"                          shift, and go to state 240
    "float4"                          shift, and go to state 241
    "range"                           shift, and go to state 242
    "urange"                          shift, and go to state 243
    "range64"                         shift, and go to state 244
    "urange64"                        shift, and go to state 245
    "int64"                           shift, and go to state 247
    "uint64"                          shift, and go to state 248
    "double"                          shift, and go to state 249
    "int8"                            shift, and go to state 252
    "uint8"                           shift, and go to state 253
    "int16"                           shift, and go to state 254
    "uint16"                          shift, and go to state 255
    "tuple"                           shift, and go to state 428
    "variant"                         shift, and go to state 429
    "generator"                       shift, and go to state 430
    "++"                              shift, and go to state 431
    "--"                              shift, and go to state 432
    "::"                              shift, and go to state 55
    "$$"                              shift, and go to state 433
    "$i"                              shift, and go to state 434
    "$v"                              shift, and go to state 435
    "$b"                              shift, and go to state 436
    "$a"                              shift, and go to state 437
    "$c"                              shift, and go to state 438
    "..."                             shift, and go to state 439
    "integer constant"                shift, and go to state 440
    "long integer constant"           shift, and go to state 441
    "unsigned integer constant"       shift, and go to state 442
    "unsigned long integer constant"  shift, and go to state 443
    "unsigned int8 constant"          shift, and go to state 444
    "floating point constant"         shift, and go to state 445
    "double constant"                 shift, and go to state 446
    "name"                            shift, and go to state 56
    "start of the string"             shift, and go to state 447
    "begin of code block"             shift, and go to state 448
    '-'                               shift, and go to state 449
    '+'                               shift, and go to state 450
    '*'                               shift, and go to state 451
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 452
    '!'                               shift, and go to state 453
    '['                               shift, and go to state 454
    '('                               shift, and go to state 455
    '$'                               shift, and go to state 456
    '@'                               shift, and go to state 457

    string_builder          go to state 458
    expr_reader             go to state 459
    expr_call_pipe          go to state 460
    name_in_namespace       go to state 461
    expr_new                go to state 462
    expr_cast               go to state 463
    expr_type_decl          go to state 464
    expr_type_info          go to state 465
    block_or_lambda         go to state 466
    expr_full_block         go to state 467
    expr_numeric_const      go to state 468
    expr_named_call         go to state 469
    expr_method_call        go to state 470
    func_addr_expr          go to state 471
    expr_field              go to state 472
    expr_call               go to state 473
    expr                    go to state 716
    expr_mtag               go to state 475
    basic_type_declaration  go to state 476
    make_decl               go to state 477
    make_struct_decl        go to state 478
    make_tuple_call         go to state 479
    make_dim_decl           go to state 480
    make_table_decl         go to state 481
    array_comprehension     go to state 482


State 525

  265 kwd_let_var_or_nothing: "let" .

    $default  reduce using rule 265 (kwd_let_var_or_nothing)


State 526

  266 kwd_let_var_or_nothing: "var" .

    $default  reduce using rule 266 (kwd_let_var_or_nothing)


State 527

  489 function_argument_declaration: optional_field_annotation kwd_let_var_or_nothing . variable_declaration

    "$i"    shift, and go to state 717
    "name"  shift, and go to state 718

    variable_declaration         go to state 719
    variable_name_with_pos_list  go to state 720


State 528

  492 function_argument_list: function_argument_list "end of expression" . function_argument_declaration

    "$a"  shift, and go to state 387
    '@'   shift, and go to state 211

    $default  reduce using rule 469 (optional_field_annotation)

    metadata_argument_list         go to state 212
    optional_field_annotation      go to state 389
    function_argument_declaration  go to state 721


State 529

  117 optional_function_argument_list: '(' function_argument_list ')' .

    $default  reduce using rule 117 (optional_function_argument_list)


State 530

  119 optional_function_type: ':' type_declaration .
  707 type_declaration: type_declaration . '|' type_declaration_no_options
  708                 | type_declaration . '|' '#'

    '|'  shift, and go to state 375

    $default  reduce using rule 119 (optional_function_type)


State 531

  235 expressions: expressions error .

    $default  reduce using rule 235 (expressions)


State 532

   73 expression_while_loop: "while" . '(' expr ')' expression_block

    '('  shift, and go to state 722


State 533

   60 if_or_static_if: "if" .

    $default  reduce using rule 60 (if_or_static_if)


State 534

   61 if_or_static_if: "static_if" .

    $default  reduce using rule 61 (if_or_static_if)


State 535

   71 expression_for_loop: "for" . '(' variable_name_with_pos_list "in" expr_list ')' expression_block

    '('  shift, and go to state 723


State 536

  259 expression_return: "return" .
  260                  | "return" . expr
  261                  | "return" . "<-" expr

    "struct"                          shift, and go to state 409
    "class"                           shift, and go to state 410
    "true"                            shift, and go to state 411
    "false"                           shift, and go to state 412
    "new"                             shift, and go to state 413
    "typeinfo"                        shift, and go to state 414
    "type"                            shift, and go to state 415
    "array"                           shift, and go to state 416
    "null"                            shift, and go to state 417
    "table"                           shift, and go to state 418
    "deref"                           shift, and go to state 419
    "cast"                            shift, and go to state 420
    "upcast"                          shift, and go to state 421
    "addr"                            shift, and go to state 422
    "reinterpret"                     shift, and go to state 423
    "unsafe"                          shift, and go to state 424
    "fixed_array"                     shift, and go to state 425
    "default"                         shift, and go to state 426
    "bool"                            shift, and go to state 225
    "void"                            shift, and go to state 226
    "string"                          shift, and go to state 227
    "int"                             shift, and go to state 229
    "int2"                            shift, and go to state 230
    "int3"                            shift, and go to state 231
    "int4"                            shift, and go to state 232
    "uint"                            shift, and go to state 233
    "bitfield"                        shift, and go to state 427
    "uint2"                           shift, and go to state 235
    "uint3"                           shift, and go to state 236
    "uint4"                           shift, and go to state 237
    "float"                           shift, and go to state 238
    "float2"                          shift, and go to state 239
    "float3"                          shift, and go to state 240
    "float4"                          shift, and go to state 241
    "range"                           shift, and go to state 242
    "urange"                          shift, and go to state 243
    "range64"                         shift, and go to state 244
    "urange64"                        shift, and go to state 245
    "int64"                           shift, and go to state 247
    "uint64"                          shift, and go to state 248
    "double"                          shift, and go to state 249
    "int8"                            shift, and go to state 252
    "uint8"                           shift, and go to state 253
    "int16"                           shift, and go to state 254
    "uint16"                          shift, and go to state 255
    "tuple"                           shift, and go to state 428
    "variant"                         shift, and go to state 429
    "generator"                       shift, and go to state 430
    "++"                              shift, and go to state 431
    "--"                              shift, and go to state 432
    "<-"                              shift, and go to state 724
    "::"                              shift, and go to state 55
    "$$"                              shift, and go to state 433
    "$i"                              shift, and go to state 434
    "$v"                              shift, and go to state 435
    "$b"                              shift, and go to state 436
    "$a"                              shift, and go to state 437
    "$c"                              shift, and go to state 438
    "..."                             shift, and go to state 439
    "integer constant"                shift, and go to state 440
    "long integer constant"           shift, and go to state 441
    "unsigned integer constant"       shift, and go to state 442
    "unsigned long integer constant"  shift, and go to state 443
    "unsigned int8 constant"          shift, and go to state 444
    "floating point constant"         shift, and go to state 445
    "double constant"                 shift, and go to state 446
    "name"                            shift, and go to state 56
    "start of the string"             shift, and go to state 447
    "begin of code block"             shift, and go to state 448
    '-'                               shift, and go to state 449
    '+'                               shift, and go to state 450
    '*'                               shift, and go to state 451
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 452
    '!'                               shift, and go to state 453
    '['                               shift, and go to state 454
    '('                               shift, and go to state 455
    '$'                               shift, and go to state 456
    '@'                               shift, and go to state 457

    $default  reduce using rule 259 (expression_return)

    string_builder          go to state 458
    expr_reader             go to state 459
    expr_call_pipe          go to state 460
    name_in_namespace       go to state 461
    expr_new                go to state 462
    expr_cast               go to state 463
    expr_type_decl          go to state 464
    expr_type_info          go to state 465
    block_or_lambda         go to state 466
    expr_full_block         go to state 467
    expr_numeric_const      go to state 468
    expr_named_call         go to state 469
    expr_method_call        go to state 470
    func_addr_expr          go to state 471
    expr_field              go to state 472
    expr_call               go to state 473
    expr                    go to state 725
    expr_mtag               go to state 475
    basic_type_declaration  go to state 476
    make_decl               go to state 477
    make_struct_decl        go to state 478
    make_tuple_call         go to state 479
    make_dim_decl           go to state 480
    make_table_decl         go to state 481
    array_comprehension     go to state 482


State 537

  257 expression_break: "break" .

    $default  reduce using rule 257 (expression_break)


State 538

  264 expression_try_catch: "try" . expression_block "recover" expression_block

    "begin of code block"  shift, and go to state 326

    expression_block  go to state 726


State 539

  245 expression_delete: "delete" . expr
  246                  | "delete" . "explicit" expr

    "struct"                          shift, and go to state 409
    "class"                           shift, and go to state 410
    "true"                            shift, and go to state 411
    "false"                           shift, and go to state 412
    "new"                             shift, and go to state 413
    "typeinfo"                        shift, and go to state 414
    "type"                            shift, and go to state 415
    "array"                           shift, and go to state 416
    "null"                            shift, and go to state 417
    "table"                           shift, and go to state 418
    "deref"                           shift, and go to state 419
    "cast"                            shift, and go to state 420
    "upcast"                          shift, and go to state 421
    "addr"                            shift, and go to state 422
    "reinterpret"                     shift, and go to state 423
    "explicit"                        shift, and go to state 727
    "unsafe"                          shift, and go to state 424
    "fixed_array"                     shift, and go to state 425
    "default"                         shift, and go to state 426
    "bool"                            shift, and go to state 225
    "void"                            shift, and go to state 226
    "string"                          shift, and go to state 227
    "int"                             shift, and go to state 229
    "int2"                            shift, and go to state 230
    "int3"                            shift, and go to state 231
    "int4"                            shift, and go to state 232
    "uint"                            shift, and go to state 233
    "bitfield"                        shift, and go to state 427
    "uint2"                           shift, and go to state 235
    "uint3"                           shift, and go to state 236
    "uint4"                           shift, and go to state 237
    "float"                           shift, and go to state 238
    "float2"                          shift, and go to state 239
    "float3"                          shift, and go to state 240
    "float4"                          shift, and go to state 241
    "range"                           shift, and go to state 242
    "urange"                          shift, and go to state 243
    "range64"                         shift, and go to state 244
    "urange64"                        shift, and go to state 245
    "int64"                           shift, and go to state 247
    "uint64"                          shift, and go to state 248
    "double"                          shift, and go to state 249
    "int8"                            shift, and go to state 252
    "uint8"                           shift, and go to state 253
    "int16"                           shift, and go to state 254
    "uint16"                          shift, and go to state 255
    "tuple"                           shift, and go to state 428
    "variant"                         shift, and go to state 429
    "generator"                       shift, and go to state 430
    "++"                              shift, and go to state 431
    "--"                              shift, and go to state 432
    "::"                              shift, and go to state 55
    "$$"                              shift, and go to state 433
    "$i"                              shift, and go to state 434
    "$v"                              shift, and go to state 435
    "$b"                              shift, and go to state 436
    "$a"                              shift, and go to state 437
    "$c"                              shift, and go to state 438
    "..."                             shift, and go to state 439
    "integer constant"                shift, and go to state 440
    "long integer constant"           shift, and go to state 441
    "unsigned integer constant"       shift, and go to state 442
    "unsigned long integer constant"  shift, and go to state 443
    "unsigned int8 constant"          shift, and go to state 444
    "floating point constant"         shift, and go to state 445
    "double constant"                 shift, and go to state 446
    "name"                            shift, and go to state 56
    "start of the string"             shift, and go to state 447
    "begin of code block"             shift, and go to state 448
    '-'                               shift, and go to state 449
    '+'                               shift, and go to state 450
    '*'                               shift, and go to state 451
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 452
    '!'                               shift, and go to state 453
    '['                               shift, and go to state 454
    '('                               shift, and go to state 455
    '$'                               shift, and go to state 456
    '@'                               shift, and go to state 457

    string_builder          go to state 458
    expr_reader             go to state 459
    expr_call_pipe          go to state 460
    name_in_namespace       go to state 461
    expr_new                go to state 462
    expr_cast               go to state 463
    expr_type_decl          go to state 464
    expr_type_info          go to state 465
    block_or_lambda         go to state 466
    expr_full_block         go to state 467
    expr_numeric_const      go to state 468
    expr_named_call         go to state 469
    expr_method_call        go to state 470
    func_addr_expr          go to state 471
    expr_field              go to state 472
    expr_call               go to state 473
    expr                    go to state 728
    expr_mtag               go to state 475
    basic_type_declaration  go to state 476
    make_decl               go to state 477
    make_struct_decl        go to state 478
    make_tuple_call         go to state 479
    make_dim_decl           go to state 480
    make_table_decl         go to state 481
    array_comprehension     go to state 482


State 540

   74 expression_with: "with" . '(' expr ')' expression_block

    '('  shift, and go to state 729


State 541

   75 expression_with_alias: "assume" . "name" '=' expr

    "name"  shift, and go to state 730


State 542

  258 expression_continue: "continue" .

    $default  reduce using rule 258 (expression_continue)


State 543

  232 expression_any: "pass" . "end of expression"

    "end of expression"  shift, and go to state 731


State 544

   52 expression_label: "label" . "integer constant" ':'

    "integer constant"  shift, and go to state 732


State 545

   53 expression_goto: "goto" . "label" "integer constant"
   54                | "goto" . expr

    "struct"                          shift, and go to state 409
    "class"                           shift, and go to state 410
    "true"                            shift, and go to state 411
    "false"                           shift, and go to state 412
    "new"                             shift, and go to state 413
    "typeinfo"                        shift, and go to state 414
    "type"                            shift, and go to state 415
    "array"                           shift, and go to state 416
    "null"                            shift, and go to state 417
    "table"                           shift, and go to state 418
    "deref"                           shift, and go to state 419
    "cast"                            shift, and go to state 420
    "upcast"                          shift, and go to state 421
    "addr"                            shift, and go to state 422
    "reinterpret"                     shift, and go to state 423
    "label"                           shift, and go to state 733
    "unsafe"                          shift, and go to state 424
    "fixed_array"                     shift, and go to state 425
    "default"                         shift, and go to state 426
    "bool"                            shift, and go to state 225
    "void"                            shift, and go to state 226
    "string"                          shift, and go to state 227
    "int"                             shift, and go to state 229
    "int2"                            shift, and go to state 230
    "int3"                            shift, and go to state 231
    "int4"                            shift, and go to state 232
    "uint"                            shift, and go to state 233
    "bitfield"                        shift, and go to state 427
    "uint2"                           shift, and go to state 235
    "uint3"                           shift, and go to state 236
    "uint4"                           shift, and go to state 237
    "float"                           shift, and go to state 238
    "float2"                          shift, and go to state 239
    "float3"                          shift, and go to state 240
    "float4"                          shift, and go to state 241
    "range"                           shift, and go to state 242
    "urange"                          shift, and go to state 243
    "range64"                         shift, and go to state 244
    "urange64"                        shift, and go to state 245
    "int64"                           shift, and go to state 247
    "uint64"                          shift, and go to state 248
    "double"                          shift, and go to state 249
    "int8"                            shift, and go to state 252
    "uint8"                           shift, and go to state 253
    "int16"                           shift, and go to state 254
    "uint16"                          shift, and go to state 255
    "tuple"                           shift, and go to state 428
    "variant"                         shift, and go to state 429
    "generator"                       shift, and go to state 430
    "++"                              shift, and go to state 431
    "--"                              shift, and go to state 432
    "::"                              shift, and go to state 55
    "$$"                              shift, and go to state 433
    "$i"                              shift, and go to state 434
    "$v"                              shift, and go to state 435
    "$b"                              shift, and go to state 436
    "$a"                              shift, and go to state 437
    "$c"                              shift, and go to state 438
    "..."                             shift, and go to state 439
    "integer constant"                shift, and go to state 440
    "long integer constant"           shift, and go to state 441
    "unsigned integer constant"       shift, and go to state 442
    "unsigned long integer constant"  shift, and go to state 443
    "unsigned int8 constant"          shift, and go to state 444
    "floating point constant"         shift, and go to state 445
    "double constant"                 shift, and go to state 446
    "name"                            shift, and go to state 56
    "start of the string"             shift, and go to state 447
    "begin of code block"             shift, and go to state 448
    '-'                               shift, and go to state 449
    '+'                               shift, and go to state 450
    '*'                               shift, and go to state 451
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 452
    '!'                               shift, and go to state 453
    '['                               shift, and go to state 454
    '('                               shift, and go to state 455
    '$'                               shift, and go to state 456
    '@'                               shift, and go to state 457

    string_builder          go to state 458
    expr_reader             go to state 459
    expr_call_pipe          go to state 460
    name_in_namespace       go to state 461
    expr_new                go to state 462
    expr_cast               go to state 463
    expr_type_decl          go to state 464
    expr_type_info          go to state 465
    block_or_lambda         go to state 466
    expr_full_block         go to state 467
    expr_numeric_const      go to state 468
    expr_named_call         go to state 469
    expr_method_call        go to state 470
    func_addr_expr          go to state 471
    expr_field              go to state 472
    expr_call               go to state 473
    expr                    go to state 734
    expr_mtag               go to state 475
    basic_type_declaration  go to state 476
    make_decl               go to state 477
    make_struct_decl        go to state 478
    make_tuple_call         go to state 479
    make_dim_decl           go to state 480
    make_table_decl         go to state 481
    array_comprehension     go to state 482


State 546

   72 expression_unsafe: "unsafe" . expression_block
  452 expr: "unsafe" . '(' expr ')'

    "begin of code block"  shift, and go to state 326
    '('                    shift, and go to state 610

    expression_block  go to state 735


State 547

  262 expression_yield: "yield" . expr
  263                 | "yield" . "<-" expr

    "struct"                          shift, and go to state 409
    "class"                           shift, and go to state 410
    "true"                            shift, and go to state 411
    "false"                           shift, and go to state 412
    "new"                             shift, and go to state 413
    "typeinfo"                        shift, and go to state 414
    "type"                            shift, and go to state 415
    "array"                           shift, and go to state 416
    "null"                            shift, and go to state 417
    "table"                           shift, and go to state 418
    "deref"                           shift, and go to state 419
    "cast"                            shift, and go to state 420
    "upcast"                          shift, and go to state 421
    "addr"                            shift, and go to state 422
    "reinterpret"                     shift, and go to state 423
    "unsafe"                          shift, and go to state 424
    "fixed_array"                     shift, and go to state 425
    "default"                         shift, and go to state 426
    "bool"                            shift, and go to state 225
    "void"                            shift, and go to state 226
    "string"                          shift, and go to state 227
    "int"                             shift, and go to state 229
    "int2"                            shift, and go to state 230
    "int3"                            shift, and go to state 231
    "int4"                            shift, and go to state 232
    "uint"                            shift, and go to state 233
    "bitfield"                        shift, and go to state 427
    "uint2"                           shift, and go to state 235
    "uint3"                           shift, and go to state 236
    "uint4"                           shift, and go to state 237
    "float"                           shift, and go to state 238
    "float2"                          shift, and go to state 239
    "float3"                          shift, and go to state 240
    "float4"                          shift, and go to state 241
    "range"                           shift, and go to state 242
    "urange"                          shift, and go to state 243
    "range64"                         shift, and go to state 244
    "urange64"                        shift, and go to state 245
    "int64"                           shift, and go to state 247
    "uint64"                          shift, and go to state 248
    "double"                          shift, and go to state 249
    "int8"                            shift, and go to state 252
    "uint8"                           shift, and go to state 253
    "int16"                           shift, and go to state 254
    "uint16"                          shift, and go to state 255
    "tuple"                           shift, and go to state 428
    "variant"                         shift, and go to state 429
    "generator"                       shift, and go to state 430
    "++"                              shift, and go to state 431
    "--"                              shift, and go to state 432
    "<-"                              shift, and go to state 736
    "::"                              shift, and go to state 55
    "$$"                              shift, and go to state 433
    "$i"                              shift, and go to state 434
    "$v"                              shift, and go to state 435
    "$b"                              shift, and go to state 436
    "$a"                              shift, and go to state 437
    "$c"                              shift, and go to state 438
    "..."                             shift, and go to state 439
    "integer constant"                shift, and go to state 440
    "long integer constant"           shift, and go to state 441
    "unsigned integer constant"       shift, and go to state 442
    "unsigned long integer constant"  shift, and go to state 443
    "unsigned int8 constant"          shift, and go to state 444
    "floating point constant"         shift, and go to state 445
    "double constant"                 shift, and go to state 446
    "name"                            shift, and go to state 56
    "start of the string"             shift, and go to state 447
    "begin of code block"             shift, and go to state 448
    '-'                               shift, and go to state 449
    '+'                               shift, and go to state 450
    '*'                               shift, and go to state 451
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 452
    '!'                               shift, and go to state 453
    '['                               shift, and go to state 454
    '('                               shift, and go to state 455
    '$'                               shift, and go to state 456
    '@'                               shift, and go to state 457

    string_builder          go to state 458
    expr_reader             go to state 459
    expr_call_pipe          go to state 460
    name_in_namespace       go to state 461
    expr_new                go to state 462
    expr_cast               go to state 463
    expr_type_decl          go to state 464
    expr_type_info          go to state 465
    block_or_lambda         go to state 466
    expr_full_block         go to state 467
    expr_numeric_const      go to state 468
    expr_named_call         go to state 469
    expr_method_call        go to state 470
    func_addr_expr          go to state 471
    expr_field              go to state 472
    expr_call               go to state 473
    expr                    go to state 737
    expr_mtag               go to state 475
    basic_type_declaration  go to state 476
    make_decl               go to state 477
    make_struct_decl        go to state 478
    make_tuple_call         go to state 479
    make_dim_decl           go to state 480
    make_table_decl         go to state 481
    array_comprehension     go to state 482


State 548

  212 expression_block: "begin of code block" expressions "end of code block" .
  213                 | "begin of code block" expressions "end of code block" . "finally" "begin of code block" expressions "end of code block"

    "finally"  shift, and go to state 738

    $default  reduce using rule 212 (expression_block)


State 549

  215 expression_any: "end of expression" .

    $default  reduce using rule 215 (expression_any)


State 550

  230 expression_any: expression_label . "end of expression"

    "end of expression"  shift, and go to state 739


State 551

  231 expression_any: expression_goto . "end of expression"

    "end of expression"  shift, and go to state 740


State 552

   69 expression_if_then_else: if_or_static_if . '(' expr ')' expression_block expression_else

    '('  shift, and go to state 741


State 553

   70 expression_if_then_else: expression_if_one_liner . "if" '(' expr ')' expression_else_one_liner "end of expression"

    "if"  shift, and go to state 742


State 554

  228 expression_any: expression_if_then_else .

    $default  reduce using rule 228 (expression_any)


State 555

  223 expression_any: expression_for_loop .

    $default  reduce using rule 223 (expression_any)


State 556

  220 expression_any: expression_unsafe .

    $default  reduce using rule 220 (expression_any)


State 557

  219 expression_any: expression_while_loop .

    $default  reduce using rule 219 (expression_any)


State 558

  221 expression_any: expression_with .

    $default  reduce using rule 221 (expression_any)


State 559

  222 expression_any: expression_with_alias . "end of expression"

    "end of expression"  shift, and go to state 743


State 560

  234 expressions: expressions expression_any .

    $default  reduce using rule 234 (expressions)


State 561

  217 expression_any: expression_delete . "end of expression"

    "end of expression"  shift, and go to state 744


State 562

   67 expression_if_one_liner: expression_break .
  224 expression_any: expression_break . "end of expression"

    "end of expression"  shift, and go to state 745

    $default  reduce using rule 67 (expression_if_one_liner)


State 563

   68 expression_if_one_liner: expression_continue .
  225 expression_any: expression_continue . "end of expression"

    "end of expression"  shift, and go to state 746

    $default  reduce using rule 68 (expression_if_one_liner)


State 564

   65 expression_if_one_liner: expression_return .
  226 expression_any: expression_return . "end of expression"

    "end of expression"  shift, and go to state 747

    $default  reduce using rule 65 (expression_if_one_liner)


State 565

   66 expression_if_one_liner: expression_yield .
  227 expression_any: expression_yield . "end of expression"

    "end of expression"  shift, and go to state 748

    $default  reduce using rule 66 (expression_if_one_liner)


State 566

  229 expression_any: expression_try_catch .

    $default  reduce using rule 229 (expression_any)


State 567

  276 expression_let: kwd_let . optional_in_scope let_variable_declaration
  277               | kwd_let . optional_in_scope tuple_expansion_variable_declaration
  278               | kwd_let . optional_in_scope "begin of code block" variable_declaration_list "end of code block"

    "inscope"  shift, and go to state 749

    $default  reduce using rule 271 (optional_in_scope)

    optional_in_scope  go to state 750


State 568

  218 expression_any: expression_let .

    $default  reduce using rule 218 (expression_any)


State 569

  216 expression_any: expr_assign . "end of expression"

    "end of expression"  shift, and go to state 751


State 570

   64 expression_if_one_liner: expr .
  321 expr_assign: expr .
  322            | expr . '=' expr
  323            | expr . "<-" expr
  324            | expr . ":=" expr
  325            | expr . "&=" expr
  326            | expr . "|=" expr
  327            | expr . "^=" expr
  328            | expr . "&&=" expr
  329            | expr . "||=" expr
  330            | expr . "^^=" expr
  331            | expr . "+=" expr
  332            | expr . "-=" expr
  333            | expr . "*=" expr
  334            | expr . "/=" expr
  335            | expr . "%=" expr
  336            | expr . "<<=" expr
  337            | expr . ">>=" expr
  338            | expr . "<<<=" expr
  339            | expr . ">>>=" expr
  342 expr_method_call: expr . "->" "name" '(' ')'
  343                 | expr . "->" "name" '(' expr_list ')'
  353 expr_field: expr . '.' "name"
  354           | expr . '.' '.' "name"
  355           | expr . '.' "name" '(' ')'
  356           | expr . '.' "name" '(' expr_list ')'
  357           | expr . '.' basic_type_declaration '(' ')'
  358           | expr . '.' basic_type_declaration '(' expr_list ')'
  361           | expr . '.' $@17 error $@18
  383 expr: expr . "<<" expr
  384     | expr . ">>" expr
  385     | expr . "<<<" expr
  386     | expr . ">>>" expr
  387     | expr . '+' expr
  388     | expr . '-' expr
  389     | expr . '*' expr
  390     | expr . '/' expr
  391     | expr . '%' expr
  392     | expr . '<' expr
  393     | expr . '>' expr
  394     | expr . "==" expr
  395     | expr . "!=" expr
  396     | expr . "<=" expr
  397     | expr . ">=" expr
  398     | expr . '&' expr
  399     | expr . '|' expr
  400     | expr . '^' expr
  401     | expr . "&&" expr
  402     | expr . "||" expr
  403     | expr . "^^" expr
  404     | expr . ".." expr
  407     | expr . "++"
  408     | expr . "--"
  410     | expr . '[' expr ']'
  411     | expr . '.' '[' expr ']'
  412     | expr . "?[" expr ']'
  413     | expr . '.' "?[" expr ']'
  414     | expr . "?." "name"
  415     | expr . '.' "?." "name"
  424     | expr . "??" expr
  425     | expr . '?' expr ':' expr
  428     | expr . "is" "type" '<' $@19 type_declaration_no_options '>' $@20
  429     | expr . "is" basic_type_declaration
  430     | expr . "is" "name"
  431     | expr . "as" "name"
  434     | expr . "as" "type" '<' $@21 type_declaration '>' $@22
  435     | expr . "as" basic_type_declaration
  436     | expr . '?' "as" "name"
  439     | expr . '?' "as" "type" '<' $@23 type_declaration '>' $@24
  440     | expr . '?' "as" basic_type_declaration
  448     | expr . "<|" expr
  449     | expr . "|>" expr
  450     | expr . "|>" basic_type_declaration
  461 expr_mtag: expr . '.' "$f" '(' expr ')'
  462          | expr . "?." "$f" '(' expr ')'
  463          | expr . '.' '.' "$f" '(' expr ')'
  464          | expr . '.' "?." "$f" '(' expr ')'
  465          | expr . "as" "$f" '(' expr ')'
  466          | expr . '?' "as" "$f" '(' expr ')'
  467          | expr . "is" "$f" '(' expr ')'

    "is"    shift, and go to state 648
    "as"    shift, and go to state 649
    "+="    shift, and go to state 752
    "-="    shift, and go to state 753
    "/="    shift, and go to state 754
    "*="    shift, and go to state 755
    "%="    shift, and go to state 756
    "&="    shift, and go to state 757
    "|="    shift, and go to state 758
    "^="    shift, and go to state 759
    "<<"    shift, and go to state 650
    ">>"    shift, and go to state 651
    "++"    shift, and go to state 652
    "--"    shift, and go to state 653
    "<="    shift, and go to state 654
    "<<="   shift, and go to state 760
    ">>="   shift, and go to state 761
    ">="    shift, and go to state 655
    "=="    shift, and go to state 656
    "!="    shift, and go to state 657
    "->"    shift, and go to state 658
    "<-"    shift, and go to state 762
    "??"    shift, and go to state 659
    "?."    shift, and go to state 660
    "?["    shift, and go to state 661
    "<|"    shift, and go to state 662
    "|>"    shift, and go to state 663
    ":="    shift, and go to state 763
    "<<<"   shift, and go to state 664
    ">>>"   shift, and go to state 665
    "<<<="  shift, and go to state 764
    ">>>="  shift, and go to state 765
    "&&"    shift, and go to state 666
    "||"    shift, and go to state 667
    "^^"    shift, and go to state 668
    "&&="   shift, and go to state 766
    "||="   shift, and go to state 767
    "^^="   shift, and go to state 768
    ".."    shift, and go to state 669
    '='     shift, and go to state 769
    '?'     shift, and go to state 670
    '|'     shift, and go to state 671
    '^'     shift, and go to state 672
    '&'     shift, and go to state 673
    '<'     shift, and go to state 674
    '>'     shift, and go to state 675
    '-'     shift, and go to state 676
    '+'     shift, and go to state 677
    '*'     shift, and go to state 678
    '/'     shift, and go to state 679
    '%'     shift, and go to state 680
    '.'     shift, and go to state 681
    '['     shift, and go to state 682

    "end of expression"  reduce using rule 321 (expr_assign)
    $default             reduce using rule 64 (expression_if_one_liner)


State 571

  546 enum_expression: "name" .
  547                | "name" . '=' expr

    '='  shift, and go to state 770

    $default  reduce using rule 546 (enum_expression)


State 572

  549 enum_list: enum_expression .

    $default  reduce using rule 549 (enum_list)


State 573

  550 enum_list: enum_list . ',' enum_expression
  565 enum_declaration: optional_annotation_list "enum" optional_public_or_private_enum enum_name optional_enum_basic_type_declaration "begin of code block" $@31 enum_list . optional_comma $@32 "end of code block"

    ','  shift, and go to state 771

    $default  reduce using rule 788 (optional_comma)

    optional_comma  go to state 772


State 574

  567 optional_structure_parent: ':' name_in_namespace .

    $default  reduce using rule 567 (optional_structure_parent)


State 575

  484 struct_variable_declaration_list: struct_variable_declaration_list . $@25 structure_variable_declaration "end of expression"
  486                                 | struct_variable_declaration_list . optional_annotation_list "def" optional_public_or_private_member_variable "abstract" optional_constant $@26 function_declaration_header "end of expression"
  488                                 | struct_variable_declaration_list . optional_annotation_list "def" optional_public_or_private_member_variable optional_static_member_variable optional_override optional_constant $@27 function_declaration_header expression_block
  577 optional_struct_variable_declaration_list: "begin of code block" struct_variable_declaration_list . "end of code block"

    "end of code block"  shift, and go to state 773
    '['                  shift, and go to state 15

    "def"     reduce using rule 113 (optional_annotation_list)
    $default  reduce using rule 483 ($@25)

    optional_annotation_list  go to state 774
    $@25                      go to state 775


State 576

  519 let_variable_name_with_pos_list: "$i" . '(' expr ')'

    '('  shift, and go to state 776


State 577

  518 let_variable_name_with_pos_list: "name" .
  520                                | "name" . "aka" "name"

    "aka"  shift, and go to state 777

    $default  reduce using rule 518 (let_variable_name_with_pos_list)


State 578

  521 let_variable_name_with_pos_list: let_variable_name_with_pos_list . ',' "name"
  522                                | let_variable_name_with_pos_list . ',' "name" "aka" "name"
  528 let_variable_declaration: let_variable_name_with_pos_list . ':' type_declaration_no_options "end of expression"
  529                         | let_variable_name_with_pos_list . ':' type_declaration_no_options copy_or_move_or_clone expr "end of expression"
  530                         | let_variable_name_with_pos_list . optional_ref copy_or_move_or_clone expr "end of expression"

    ','  shift, and go to state 778
    ':'  shift, and go to state 779
    '&'  shift, and go to state 404

    $default  reduce using rule 516 (optional_ref)

    optional_ref  go to state 780


State 579

  542 global_variable_declaration_list: global_variable_declaration_list $@28 optional_field_annotation let_variable_declaration .

    $default  reduce using rule 542 (global_variable_declaration_list)


State 580

  524 global_let_variable_name_with_pos_list: global_let_variable_name_with_pos_list ',' "name" .

    $default  reduce using rule 524 (global_let_variable_name_with_pos_list)


State 581

  531 global_let_variable_declaration: global_let_variable_name_with_pos_list ':' type_declaration_no_options . "end of expression"
  532                                | global_let_variable_name_with_pos_list ':' type_declaration_no_options . copy_or_move_or_clone expr "end of expression"

    "<-"                 shift, and go to state 582
    ":="                 shift, and go to state 583
    "end of expression"  shift, and go to state 781
    '='                  shift, and go to state 584

    copy_or_move_or_clone  go to state 782


State 582

  514 copy_or_move_or_clone: "<-" .

    $default  reduce using rule 514 (copy_or_move_or_clone)


State 583

  515 copy_or_move_or_clone: ":=" .

    $default  reduce using rule 515 (copy_or_move_or_clone)


State 584

  513 copy_or_move_or_clone: '=' .

    $default  reduce using rule 513 (copy_or_move_or_clone)


State 585

  533 global_let_variable_declaration: global_let_variable_name_with_pos_list optional_ref copy_or_move_or_clone . expr "end of expression"

    "struct"                          shift, and go to state 409
    "class"                           shift, and go to state 410
    "true"                            shift, and go to state 411
    "false"                           shift, and go to state 412
    "new"                             shift, and go to state 413
    "typeinfo"                        shift, and go to state 414
    "type"                            shift, and go to state 415
    "array"                           shift, and go to state 416
    "null"                            shift, and go to state 417
    "table"                           shift, and go to state 418
    "deref"                           shift, and go to state 419
    "cast"                            shift, and go to state 420
    "upcast"                          shift, and go to state 421
    "addr"                            shift, and go to state 422
    "reinterpret"                     shift, and go to state 423
    "unsafe"                          shift, and go to state 424
    "fixed_array"                     shift, and go to state 425
    "default"                         shift, and go to state 426
    "bool"                            shift, and go to state 225
    "void"                            shift, and go to state 226
    "string"                          shift, and go to state 227
    "int"                             shift, and go to state 229
    "int2"                            shift, and go to state 230
    "int3"                            shift, and go to state 231
    "int4"                            shift, and go to state 232
    "uint"                            shift, and go to state 233
    "bitfield"                        shift, and go to state 427
    "uint2"                           shift, and go to state 235
    "uint3"                           shift, and go to state 236
    "uint4"                           shift, and go to state 237
    "float"                           shift, and go to state 238
    "float2"                          shift, and go to state 239
    "float3"                          shift, and go to state 240
    "float4"                          shift, and go to state 241
    "range"                           shift, and go to state 242
    "urange"                          shift, and go to state 243
    "range64"                         shift, and go to state 244
    "urange64"                        shift, and go to state 245
    "int64"                           shift, and go to state 247
    "uint64"                          shift, and go to state 248
    "double"                          shift, and go to state 249
    "int8"                            shift, and go to state 252
    "uint8"                           shift, and go to state 253
    "int16"                           shift, and go to state 254
    "uint16"                          shift, and go to state 255
    "tuple"                           shift, and go to state 428
    "variant"                         shift, and go to state 429
    "generator"                       shift, and go to state 430
    "++"                              shift, and go to state 431
    "--"                              shift, and go to state 432
    "::"                              shift, and go to state 55
    "$$"                              shift, and go to state 433
    "$i"                              shift, and go to state 434
    "$v"                              shift, and go to state 435
    "$b"                              shift, and go to state 436
    "$a"                              shift, and go to state 437
    "$c"                              shift, and go to state 438
    "..."                             shift, and go to state 439
    "integer constant"                shift, and go to state 440
    "long integer constant"           shift, and go to state 441
    "unsigned integer constant"       shift, and go to state 442
    "unsigned long integer constant"  shift, and go to state 443
    "unsigned int8 constant"          shift, and go to state 444
    "floating point constant"         shift, and go to state 445
    "double constant"                 shift, and go to state 446
    "name"                            shift, and go to state 56
    "start of the string"             shift, and go to state 447
    "begin of code block"             shift, and go to state 448
    '-'                               shift, and go to state 449
    '+'                               shift, and go to state 450
    '*'                               shift, and go to state 451
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 452
    '!'                               shift, and go to state 453
    '['                               shift, and go to state 454
    '('                               shift, and go to state 455
    '$'                               shift, and go to state 456
    '@'                               shift, and go to state 457

    string_builder          go to state 458
    expr_reader             go to state 459
    expr_call_pipe          go to state 460
    name_in_namespace       go to state 461
    expr_new                go to state 462
    expr_cast               go to state 463
    expr_type_decl          go to state 464
    expr_type_info          go to state 465
    block_or_lambda         go to state 466
    expr_full_block         go to state 467
    expr_numeric_const      go to state 468
    expr_named_call         go to state 469
    expr_method_call        go to state 470
    func_addr_expr          go to state 471
    expr_field              go to state 472
    expr_call               go to state 473
    expr                    go to state 783
    expr_mtag               go to state 475
    basic_type_declaration  go to state 476
    make_decl               go to state 477
    make_struct_decl        go to state 478
    make_tuple_call         go to state 479
    make_dim_decl           go to state 480
    make_table_decl         go to state 481
    array_comprehension     go to state 482


State 586

  649 type_declaration_no_options_no_dim: "type" '<' $@37 type_declaration . '>' $@38
  707 type_declaration: type_declaration . '|' type_declaration_no_options
  708                 | type_declaration . '|' '#'

    '|'  shift, and go to state 375
    '>'  shift, and go to state 784


State 587

  672 type_declaration_no_options_no_dim: "array" '<' $@42 type_declaration . '>' $@43
  707 type_declaration: type_declaration . '|' type_declaration_no_options
  708                 | type_declaration . '|' '#'

    '|'  shift, and go to state 375
    '>'  shift, and go to state 785


State 588

  675 type_declaration_no_options_no_dim: "table" '<' $@44 table_type_pair . '>' $@45

    '>'  shift, and go to state 786


State 589

  635 table_type_pair: type_declaration .
  636                | type_declaration . c_or_s type_declaration
  707 type_declaration: type_declaration . '|' type_declaration_no_options
  708                 | type_declaration . '|' '#'

    "end of expression"  shift, and go to state 512
    ','                  shift, and go to state 513
    '|'                  shift, and go to state 375

    $default  reduce using rule 635 (table_type_pair)

    c_or_s  go to state 787


State 590

  746 make_struct_decl: "struct" '<' . $@73 type_declaration_no_options '>' $@74 '(' use_initializer optional_make_struct_dim_decl ')'

    $default  reduce using rule 744 ($@73)

    $@73  go to state 788


State 591

  749 make_struct_decl: "class" '<' . $@75 type_declaration_no_options '>' $@76 '(' use_initializer optional_make_struct_dim_decl ')'

    $default  reduce using rule 747 ($@75)

    $@75  go to state 789


State 592

  249 new_type_declaration: '<' . $@3 type_declaration '>' $@4

    $default  reduce using rule 247 ($@3)

    $@3  go to state 790


State 593

  251 expr_new: "new" new_type_declaration .
  252         | "new" new_type_declaration . '(' use_initializer ')'
  253         | "new" new_type_declaration . '(' expr_list ')'
  254         | "new" new_type_declaration . '(' make_struct_single ')'
  255         | "new" new_type_declaration . '(' "uninitialized" make_struct_single ')'

    '('  shift, and go to state 791

    $default  reduce using rule 251 (expr_new)


State 594

  250 new_type_declaration: structure_type_declaration .

    $default  reduce using rule 250 (new_type_declaration)


State 595

  256 expr_new: "new" make_decl .

    $default  reduce using rule 256 (expr_new)


State 596

  291 expr_type_info: "typeinfo" name_in_namespace . '(' expr ')'
  292               | "typeinfo" name_in_namespace . '<' "name" '>' '(' expr ')'
  293               | "typeinfo" name_in_namespace . '<' "name" c_or_s "name" '>' '(' expr ')'

    '<'  shift, and go to state 792
    '('  shift, and go to state 793


State 597

  290 expr_type_decl: "type" '<' . $@11 type_declaration '>' $@12

    $default  reduce using rule 288 ($@11)

    $@11  go to state 794


State 598

  765 make_dim_decl: "array" "struct" . '<' $@83 type_declaration_no_options '>' $@84 '(' use_initializer optional_make_struct_dim_decl ')'

    '<'  shift, and go to state 795


State 599

  768 make_dim_decl: "array" "tuple" . '<' $@85 type_declaration_no_options '>' $@86 '(' use_initializer optional_make_struct_dim_decl ')'

    '<'  shift, and go to state 796


State 600

  771 make_dim_decl: "array" "variant" . '<' $@87 type_declaration_no_options '>' $@88 '(' make_variant_dim ')'

    '<'  shift, and go to state 797


State 601

  775 make_dim_decl: "array" '<' . $@89 type_declaration_no_options '>' $@90 '(' optional_expr_list ')'

    $default  reduce using rule 773 ($@89)

    $@89  go to state 798


State 602

  772 make_dim_decl: "array" '(' . expr_list optional_comma ')'

    "struct"                          shift, and go to state 409
    "class"                           shift, and go to state 410
    "true"                            shift, and go to state 411
    "false"                           shift, and go to state 412
    "new"                             shift, and go to state 413
    "typeinfo"                        shift, and go to state 414
    "type"                            shift, and go to state 415
    "array"                           shift, and go to state 416
    "null"                            shift, and go to state 417
    "table"                           shift, and go to state 418
    "deref"                           shift, and go to state 419
    "cast"                            shift, and go to state 420
    "upcast"                          shift, and go to state 421
    "addr"                            shift, and go to state 422
    "reinterpret"                     shift, and go to state 423
    "unsafe"                          shift, and go to state 424
    "fixed_array"                     shift, and go to state 425
    "default"                         shift, and go to state 426
    "bool"                            shift, and go to state 225
    "void"                            shift, and go to state 226
    "string"                          shift, and go to state 227
    "int"                             shift, and go to state 229
    "int2"                            shift, and go to state 230
    "int3"                            shift, and go to state 231
    "int4"                            shift, and go to state 232
    "uint"                            shift, and go to state 233
    "bitfield"                        shift, and go to state 427
    "uint2"                           shift, and go to state 235
    "uint3"                           shift, and go to state 236
    "uint4"                           shift, and go to state 237
    "float"                           shift, and go to state 238
    "float2"                          shift, and go to state 239
    "float3"                          shift, and go to state 240
    "float4"                          shift, and go to state 241
    "range"                           shift, and go to state 242
    "urange"                          shift, and go to state 243
    "range64"                         shift, and go to state 244
    "urange64"                        shift, and go to state 245
    "int64"                           shift, and go to state 247
    "uint64"                          shift, and go to state 248
    "double"                          shift, and go to state 249
    "int8"                            shift, and go to state 252
    "uint8"                           shift, and go to state 253
    "int16"                           shift, and go to state 254
    "uint16"                          shift, and go to state 255
    "tuple"                           shift, and go to state 428
    "variant"                         shift, and go to state 429
    "generator"                       shift, and go to state 430
    "++"                              shift, and go to state 431
    "--"                              shift, and go to state 432
    "::"                              shift, and go to state 55
    "$$"                              shift, and go to state 433
    "$i"                              shift, and go to state 434
    "$v"                              shift, and go to state 435
    "$b"                              shift, and go to state 436
    "$a"                              shift, and go to state 437
    "$c"                              shift, and go to state 438
    "..."                             shift, and go to state 439
    "integer constant"                shift, and go to state 440
    "long integer constant"           shift, and go to state 441
    "unsigned integer constant"       shift, and go to state 442
    "unsigned long integer constant"  shift, and go to state 443
    "unsigned int8 constant"          shift, and go to state 444
    "floating point constant"         shift, and go to state 445
    "double constant"                 shift, and go to state 446
    "name"                            shift, and go to state 56
    "start of the string"             shift, and go to state 447
    "begin of code block"             shift, and go to state 448
    '-'                               shift, and go to state 449
    '+'                               shift, and go to state 450
    '*'                               shift, and go to state 451
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 452
    '!'                               shift, and go to state 453
    '['                               shift, and go to state 454
    '('                               shift, and go to state 455
    '$'                               shift, and go to state 456
    '@'                               shift, and go to state 457

    string_builder          go to state 458
    expr_reader             go to state 459
    expr_call_pipe          go to state 460
    name_in_namespace       go to state 461
    expr_new                go to state 462
    expr_cast               go to state 463
    expr_type_decl          go to state 464
    expr_type_info          go to state 465
    expr_list               go to state 799
    block_or_lambda         go to state 466
    expr_full_block         go to state 467
    expr_numeric_const      go to state 468
    expr_named_call         go to state 469
    expr_method_call        go to state 470
    func_addr_expr          go to state 471
    expr_field              go to state 472
    expr_call               go to state 473
    expr                    go to state 639
    expr_mtag               go to state 475
    basic_type_declaration  go to state 476
    make_decl               go to state 477
    make_struct_decl        go to state 478
    make_tuple_call         go to state 479
    make_dim_decl           go to state 480
    make_table_decl         go to state 481
    array_comprehension     go to state 482


State 603

  784 make_table_decl: "table" '<' . type_declaration_no_options '>' '(' optional_expr_map_tuple_list ')'
  785                | "table" '<' . type_declaration_no_options c_or_s type_declaration_no_options '>' '(' optional_expr_map_tuple_list ')'

    "type"       shift, and go to state 219
    "array"      shift, and go to state 220
    "table"      shift, and go to state 221
    "typedecl"   shift, and go to state 222
    "iterator"   shift, and go to state 223
    "smart_ptr"  shift, and go to state 224
    "bool"       shift, and go to state 225
    "void"       shift, and go to state 226
    "string"     shift, and go to state 227
    "auto"       shift, and go to state 228
    "int"        shift, and go to state 229
    "int2"       shift, and go to state 230
    "int3"       shift, and go to state 231
    "int4"       shift, and go to state 232
    "uint"       shift, and go to state 233
    "bitfield"   shift, and go to state 234
    "uint2"      shift, and go to state 235
    "uint3"      shift, and go to state 236
    "uint4"      shift, and go to state 237
    "float"      shift, and go to state 238
    "float2"     shift, and go to state 239
    "float3"     shift, and go to state 240
    "float4"     shift, and go to state 241
    "range"      shift, and go to state 242
    "urange"     shift, and go to state 243
    "range64"    shift, and go to state 244
    "urange64"   shift, and go to state 245
    "block"      shift, and go to state 246
    "int64"      shift, and go to state 247
    "uint64"     shift, and go to state 248
    "double"     shift, and go to state 249
    "function"   shift, and go to state 250
    "lambda"     shift, and go to state 251
    "int8"       shift, and go to state 252
    "uint8"      shift, and go to state 253
    "int16"      shift, and go to state 254
    "uint16"     shift, and go to state 255
    "tuple"      shift, and go to state 256
    "variant"    shift, and go to state 257
    "::"         shift, and go to state 55
    "$t"         shift, and go to state 258
    "name"       shift, and go to state 56
    '$'          shift, and go to state 259

    name_in_namespace                   go to state 260
    basic_type_declaration              go to state 261
    structure_type_declaration          go to state 262
    auto_type_declaration               go to state 263
    bitfield_type_declaration           go to state 264
    type_declaration_no_options         go to state 800
    type_declaration_no_options_no_dim  go to state 266


State 604

  783 make_table_decl: "table" '(' . expr_map_tuple_list optional_comma ')'

    "struct"                          shift, and go to state 409
    "class"                           shift, and go to state 410
    "true"                            shift, and go to state 411
    "false"                           shift, and go to state 412
    "new"                             shift, and go to state 413
    "typeinfo"                        shift, and go to state 414
    "type"                            shift, and go to state 415
    "array"                           shift, and go to state 416
    "null"                            shift, and go to state 417
    "table"                           shift, and go to state 418
    "deref"                           shift, and go to state 419
    "cast"                            shift, and go to state 420
    "upcast"                          shift, and go to state 421
    "addr"                            shift, and go to state 422
    "reinterpret"                     shift, and go to state 423
    "unsafe"                          shift, and go to state 424
    "fixed_array"                     shift, and go to state 425
    "default"                         shift, and go to state 426
    "bool"                            shift, and go to state 225
    "void"                            shift, and go to state 226
    "string"                          shift, and go to state 227
    "int"                             shift, and go to state 229
    "int2"                            shift, and go to state 230
    "int3"                            shift, and go to state 231
    "int4"                            shift, and go to state 232
    "uint"                            shift, and go to state 233
    "bitfield"                        shift, and go to state 427
    "uint2"                           shift, and go to state 235
    "uint3"                           shift, and go to state 236
    "uint4"                           shift, and go to state 237
    "float"                           shift, and go to state 238
    "float2"                          shift, and go to state 239
    "float3"                          shift, and go to state 240
    "float4"                          shift, and go to state 241
    "range"                           shift, and go to state 242
    "urange"                          shift, and go to state 243
    "range64"                         shift, and go to state 244
    "urange64"                        shift, and go to state 245
    "int64"                           shift, and go to state 247
    "uint64"                          shift, and go to state 248
    "double"                          shift, and go to state 249
    "int8"                            shift, and go to state 252
    "uint8"                           shift, and go to state 253
    "int16"                           shift, and go to state 254
    "uint16"                          shift, and go to state 255
    "tuple"                           shift, and go to state 428
    "variant"                         shift, and go to state 429
    "generator"                       shift, and go to state 430
    "++"                              shift, and go to state 431
    "--"                              shift, and go to state 432
    "::"                              shift, and go to state 55
    "$$"                              shift, and go to state 433
    "$i"                              shift, and go to state 434
    "$v"                              shift, and go to state 435
    "$b"                              shift, and go to state 436
    "$a"                              shift, and go to state 437
    "$c"                              shift, and go to state 438
    "..."                             shift, and go to state 439
    "integer constant"                shift, and go to state 440
    "long integer constant"           shift, and go to state 441
    "unsigned integer constant"       shift, and go to state 442
    "unsigned long integer constant"  shift, and go to state 443
    "unsigned int8 constant"          shift, and go to state 444
    "floating point constant"         shift, and go to state 445
    "double constant"                 shift, and go to state 446
    "name"                            shift, and go to state 56
    "start of the string"             shift, and go to state 447
    "begin of code block"             shift, and go to state 448
    '-'                               shift, and go to state 449
    '+'                               shift, and go to state 450
    '*'                               shift, and go to state 451
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 452
    '!'                               shift, and go to state 453
    '['                               shift, and go to state 454
    '('                               shift, and go to state 455
    '$'                               shift, and go to state 456
    '@'                               shift, and go to state 457

    string_builder          go to state 458
    expr_reader             go to state 459
    expr_call_pipe          go to state 460
    name_in_namespace       go to state 461
    expr_new                go to state 462
    expr_cast               go to state 463
    expr_type_decl          go to state 464
    expr_type_info          go to state 465
    block_or_lambda         go to state 466
    expr_full_block         go to state 467
    expr_numeric_const      go to state 468
    expr_named_call         go to state 469
    expr_method_call        go to state 470
    func_addr_expr          go to state 471
    expr_field              go to state 472
    expr_call               go to state 473
    expr                    go to state 628
    expr_mtag               go to state 475
    basic_type_declaration  go to state 476
    make_decl               go to state 477
    make_struct_decl        go to state 478
    make_map_tuple          go to state 629
    make_tuple_call         go to state 479
    make_dim_decl           go to state 480
    expr_map_tuple_list     go to state 801
    make_table_decl         go to state 481
    array_comprehension     go to state 482


State 605

  419 expr: "deref" '(' . expr ')'

    "struct"                          shift, and go to state 409
    "class"                           shift, and go to state 410
    "true"                            shift, and go to state 411
    "false"                           shift, and go to state 412
    "new"                             shift, and go to state 413
    "typeinfo"                        shift, and go to state 414
    "type"                            shift, and go to state 415
    "array"                           shift, and go to state 416
    "null"                            shift, and go to state 417
    "table"                           shift, and go to state 418
    "deref"                           shift, and go to state 419
    "cast"                            shift, and go to state 420
    "upcast"                          shift, and go to state 421
    "addr"                            shift, and go to state 422
    "reinterpret"                     shift, and go to state 423
    "unsafe"                          shift, and go to state 424
    "fixed_array"                     shift, and go to state 425
    "default"                         shift, and go to state 426
    "bool"                            shift, and go to state 225
    "void"                            shift, and go to state 226
    "string"                          shift, and go to state 227
    "int"                             shift, and go to state 229
    "int2"                            shift, and go to state 230
    "int3"                            shift, and go to state 231
    "int4"                            shift, and go to state 232
    "uint"                            shift, and go to state 233
    "bitfield"                        shift, and go to state 427
    "uint2"                           shift, and go to state 235
    "uint3"                           shift, and go to state 236
    "uint4"                           shift, and go to state 237
    "float"                           shift, and go to state 238
    "float2"                          shift, and go to state 239
    "float3"                          shift, and go to state 240
    "float4"                          shift, and go to state 241
    "range"                           shift, and go to state 242
    "urange"                          shift, and go to state 243
    "range64"                         shift, and go to state 244
    "urange64"                        shift, and go to state 245
    "int64"                           shift, and go to state 247
    "uint64"                          shift, and go to state 248
    "double"                          shift, and go to state 249
    "int8"                            shift, and go to state 252
    "uint8"                           shift, and go to state 253
    "int16"                           shift, and go to state 254
    "uint16"                          shift, and go to state 255
    "tuple"                           shift, and go to state 428
    "variant"                         shift, and go to state 429
    "generator"                       shift, and go to state 430
    "++"                              shift, and go to state 431
    "--"                              shift, and go to state 432
    "::"                              shift, and go to state 55
    "$$"                              shift, and go to state 433
    "$i"                              shift, and go to state 434
    "$v"                              shift, and go to state 435
    "$b"                              shift, and go to state 436
    "$a"                              shift, and go to state 437
    "$c"                              shift, and go to state 438
    "..."                             shift, and go to state 439
    "integer constant"                shift, and go to state 440
    "long integer constant"           shift, and go to state 441
    "unsigned integer constant"       shift, and go to state 442
    "unsigned long integer constant"  shift, and go to state 443
    "unsigned int8 constant"          shift, and go to state 444
    "floating point constant"         shift, and go to state 445
    "double constant"                 shift, and go to state 446
    "name"                            shift, and go to state 56
    "start of the string"             shift, and go to state 447
    "begin of code block"             shift, and go to state 448
    '-'                               shift, and go to state 449
    '+'                               shift, and go to state 450
    '*'                               shift, and go to state 451
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 452
    '!'                               shift, and go to state 453
    '['                               shift, and go to state 454
    '('                               shift, and go to state 455
    '$'                               shift, and go to state 456
    '@'                               shift, and go to state 457

    string_builder          go to state 458
    expr_reader             go to state 459
    expr_call_pipe          go to state 460
    name_in_namespace       go to state 461
    expr_new                go to state 462
    expr_cast               go to state 463
    expr_type_decl          go to state 464
    expr_type_info          go to state 465
    block_or_lambda         go to state 466
    expr_full_block         go to state 467
    expr_numeric_const      go to state 468
    expr_named_call         go to state 469
    expr_method_call        go to state 470
    func_addr_expr          go to state 471
    expr_field              go to state 472
    expr_call               go to state 473
    expr                    go to state 802
    expr_mtag               go to state 475
    basic_type_declaration  go to state 476
    make_decl               go to state 477
    make_struct_decl        go to state 478
    make_tuple_call         go to state 479
    make_dim_decl           go to state 480
    make_table_decl         go to state 481
    array_comprehension     go to state 482


State 606

  281 expr_cast: "cast" '<' . $@5 type_declaration_no_options '>' $@6 expr

    $default  reduce using rule 279 ($@5)

    $@5  go to state 803


State 607

  284 expr_cast: "upcast" '<' . $@7 type_declaration_no_options '>' $@8 expr

    $default  reduce using rule 282 ($@7)

    $@7  go to state 804


State 608

  420 expr: "addr" '(' . expr ')'

    "struct"                          shift, and go to state 409
    "class"                           shift, and go to state 410
    "true"                            shift, and go to state 411
    "false"                           shift, and go to state 412
    "new"                             shift, and go to state 413
    "typeinfo"                        shift, and go to state 414
    "type"                            shift, and go to state 415
    "array"                           shift, and go to state 416
    "null"                            shift, and go to state 417
    "table"                           shift, and go to state 418
    "deref"                           shift, and go to state 419
    "cast"                            shift, and go to state 420
    "upcast"                          shift, and go to state 421
    "addr"                            shift, and go to state 422
    "reinterpret"                     shift, and go to state 423
    "unsafe"                          shift, and go to state 424
    "fixed_array"                     shift, and go to state 425
    "default"                         shift, and go to state 426
    "bool"                            shift, and go to state 225
    "void"                            shift, and go to state 226
    "string"                          shift, and go to state 227
    "int"                             shift, and go to state 229
    "int2"                            shift, and go to state 230
    "int3"                            shift, and go to state 231
    "int4"                            shift, and go to state 232
    "uint"                            shift, and go to state 233
    "bitfield"                        shift, and go to state 427
    "uint2"                           shift, and go to state 235
    "uint3"                           shift, and go to state 236
    "uint4"                           shift, and go to state 237
    "float"                           shift, and go to state 238
    "float2"                          shift, and go to state 239
    "float3"                          shift, and go to state 240
    "float4"                          shift, and go to state 241
    "range"                           shift, and go to state 242
    "urange"                          shift, and go to state 243
    "range64"                         shift, and go to state 244
    "urange64"                        shift, and go to state 245
    "int64"                           shift, and go to state 247
    "uint64"                          shift, and go to state 248
    "double"                          shift, and go to state 249
    "int8"                            shift, and go to state 252
    "uint8"                           shift, and go to state 253
    "int16"                           shift, and go to state 254
    "uint16"                          shift, and go to state 255
    "tuple"                           shift, and go to state 428
    "variant"                         shift, and go to state 429
    "generator"                       shift, and go to state 430
    "++"                              shift, and go to state 431
    "--"                              shift, and go to state 432
    "::"                              shift, and go to state 55
    "$$"                              shift, and go to state 433
    "$i"                              shift, and go to state 434
    "$v"                              shift, and go to state 435
    "$b"                              shift, and go to state 436
    "$a"                              shift, and go to state 437
    "$c"                              shift, and go to state 438
    "..."                             shift, and go to state 439
    "integer constant"                shift, and go to state 440
    "long integer constant"           shift, and go to state 441
    "unsigned integer constant"       shift, and go to state 442
    "unsigned long integer constant"  shift, and go to state 443
    "unsigned int8 constant"          shift, and go to state 444
    "floating point constant"         shift, and go to state 445
    "double constant"                 shift, and go to state 446
    "name"                            shift, and go to state 56
    "start of the string"             shift, and go to state 447
    "begin of code block"             shift, and go to state 448
    '-'                               shift, and go to state 449
    '+'                               shift, and go to state 450
    '*'                               shift, and go to state 451
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 452
    '!'                               shift, and go to state 453
    '['                               shift, and go to state 454
    '('                               shift, and go to state 455
    '$'                               shift, and go to state 456
    '@'                               shift, and go to state 457

    string_builder          go to state 458
    expr_reader             go to state 459
    expr_call_pipe          go to state 460
    name_in_namespace       go to state 461
    expr_new                go to state 462
    expr_cast               go to state 463
    expr_type_decl          go to state 464
    expr_type_info          go to state 465
    block_or_lambda         go to state 466
    expr_full_block         go to state 467
    expr_numeric_const      go to state 468
    expr_named_call         go to state 469
    expr_method_call        go to state 470
    func_addr_expr          go to state 471
    expr_field              go to state 472
    expr_call               go to state 473
    expr                    go to state 805
    expr_mtag               go to state 475
    basic_type_declaration  go to state 476
    make_decl               go to state 477
    make_struct_decl        go to state 478
    make_tuple_call         go to state 479
    make_dim_decl           go to state 480
    make_table_decl         go to state 481
    array_comprehension     go to state 482


State 609

  287 expr_cast: "reinterpret" '<' . $@9 type_declaration_no_options '>' $@10 expr

    $default  reduce using rule 285 ($@9)

    $@9  go to state 806


State 610

  452 expr: "unsafe" '(' . expr ')'

    "struct"                          shift, and go to state 409
    "class"                           shift, and go to state 410
    "true"                            shift, and go to state 411
    "false"                           shift, and go to state 412
    "new"                             shift, and go to state 413
    "typeinfo"                        shift, and go to state 414
    "type"                            shift, and go to state 415
    "array"                           shift, and go to state 416
    "null"                            shift, and go to state 417
    "table"                           shift, and go to state 418
    "deref"                           shift, and go to state 419
    "cast"                            shift, and go to state 420
    "upcast"                          shift, and go to state 421
    "addr"                            shift, and go to state 422
    "reinterpret"                     shift, and go to state 423
    "unsafe"                          shift, and go to state 424
    "fixed_array"                     shift, and go to state 425
    "default"                         shift, and go to state 426
    "bool"                            shift, and go to state 225
    "void"                            shift, and go to state 226
    "string"                          shift, and go to state 227
    "int"                             shift, and go to state 229
    "int2"                            shift, and go to state 230
    "int3"                            shift, and go to state 231
    "int4"                            shift, and go to state 232
    "uint"                            shift, and go to state 233
    "bitfield"                        shift, and go to state 427
    "uint2"                           shift, and go to state 235
    "uint3"                           shift, and go to state 236
    "uint4"                           shift, and go to state 237
    "float"                           shift, and go to state 238
    "float2"                          shift, and go to state 239
    "float3"                          shift, and go to state 240
    "float4"                          shift, and go to state 241
    "range"                           shift, and go to state 242
    "urange"                          shift, and go to state 243
    "range64"                         shift, and go to state 244
    "urange64"                        shift, and go to state 245
    "int64"                           shift, and go to state 247
    "uint64"                          shift, and go to state 248
    "double"                          shift, and go to state 249
    "int8"                            shift, and go to state 252
    "uint8"                           shift, and go to state 253
    "int16"                           shift, and go to state 254
    "uint16"                          shift, and go to state 255
    "tuple"                           shift, and go to state 428
    "variant"                         shift, and go to state 429
    "generator"                       shift, and go to state 430
    "++"                              shift, and go to state 431
    "--"                              shift, and go to state 432
    "::"                              shift, and go to state 55
    "$$"                              shift, and go to state 433
    "$i"                              shift, and go to state 434
    "$v"                              shift, and go to state 435
    "$b"                              shift, and go to state 436
    "$a"                              shift, and go to state 437
    "$c"                              shift, and go to state 438
    "..."                             shift, and go to state 439
    "integer constant"                shift, and go to state 440
    "long integer constant"           shift, and go to state 441
    "unsigned integer constant"       shift, and go to state 442
    "unsigned long integer constant"  shift, and go to state 443
    "unsigned int8 constant"          shift, and go to state 444
    "floating point constant"         shift, and go to state 445
    "double constant"                 shift, and go to state 446
    "name"                            shift, and go to state 56
    "start of the string"             shift, and go to state 447
    "begin of code block"             shift, and go to state 448
    '-'                               shift, and go to state 449
    '+'                               shift, and go to state 450
    '*'                               shift, and go to state 451
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 452
    '!'                               shift, and go to state 453
    '['                               shift, and go to state 454
    '('                               shift, and go to state 455
    '$'                               shift, and go to state 456
    '@'                               shift, and go to state 457

    string_builder          go to state 458
    expr_reader             go to state 459
    expr_call_pipe          go to state 460
    name_in_namespace       go to state 461
    expr_new                go to state 462
    expr_cast               go to state 463
    expr_type_decl          go to state 464
    expr_type_info          go to state 465
    block_or_lambda         go to state 466
    expr_full_block         go to state 467
    expr_numeric_const      go to state 468
    expr_named_call         go to state 469
    expr_method_call        go to state 470
    func_addr_expr          go to state 471
    expr_field              go to state 472
    expr_call               go to state 473
    expr                    go to state 807
    expr_mtag               go to state 475
    basic_type_declaration  go to state 476
    make_decl               go to state 477
    make_struct_decl        go to state 478
    make_tuple_call         go to state 479
    make_dim_decl           go to state 480
    make_table_decl         go to state 481
    array_comprehension     go to state 482


State 611

  779 make_dim_decl: "fixed_array" '<' . $@91 type_declaration_no_options '>' $@92 '(' expr_list optional_comma ')'

    $default  reduce using rule 777 ($@91)

    $@91  go to state 808


State 612

  776 make_dim_decl: "fixed_array" '(' . expr_list optional_comma ')'

    "struct"                          shift, and go to state 409
    "class"                           shift, and go to state 410
    "true"                            shift, and go to state 411
    "false"                           shift, and go to state 412
    "new"                             shift, and go to state 413
    "typeinfo"                        shift, and go to state 414
    "type"                            shift, and go to state 415
    "array"                           shift, and go to state 416
    "null"                            shift, and go to state 417
    "table"                           shift, and go to state 418
    "deref"                           shift, and go to state 419
    "cast"                            shift, and go to state 420
    "upcast"                          shift, and go to state 421
    "addr"                            shift, and go to state 422
    "reinterpret"                     shift, and go to state 423
    "unsafe"                          shift, and go to state 424
    "fixed_array"                     shift, and go to state 425
    "default"                         shift, and go to state 426
    "bool"                            shift, and go to state 225
    "void"                            shift, and go to state 226
    "string"                          shift, and go to state 227
    "int"                             shift, and go to state 229
    "int2"                            shift, and go to state 230
    "int3"                            shift, and go to state 231
    "int4"                            shift, and go to state 232
    "uint"                            shift, and go to state 233
    "bitfield"                        shift, and go to state 427
    "uint2"                           shift, and go to state 235
    "uint3"                           shift, and go to state 236
    "uint4"                           shift, and go to state 237
    "float"                           shift, and go to state 238
    "float2"                          shift, and go to state 239
    "float3"                          shift, and go to state 240
    "float4"                          shift, and go to state 241
    "range"                           shift, and go to state 242
    "urange"                          shift, and go to state 243
    "range64"                         shift, and go to state 244
    "urange64"                        shift, and go to state 245
    "int64"                           shift, and go to state 247
    "uint64"                          shift, and go to state 248
    "double"                          shift, and go to state 249
    "int8"                            shift, and go to state 252
    "uint8"                           shift, and go to state 253
    "int16"                           shift, and go to state 254
    "uint16"                          shift, and go to state 255
    "tuple"                           shift, and go to state 428
    "variant"                         shift, and go to state 429
    "generator"                       shift, and go to state 430
    "++"                              shift, and go to state 431
    "--"                              shift, and go to state 432
    "::"                              shift, and go to state 55
    "$$"                              shift, and go to state 433
    "$i"                              shift, and go to state 434
    "$v"                              shift, and go to state 435
    "$b"                              shift, and go to state 436
    "$a"                              shift, and go to state 437
    "$c"                              shift, and go to state 438
    "..."                             shift, and go to state 439
    "integer constant"                shift, and go to state 440
    "long integer constant"           shift, and go to state 441
    "unsigned integer constant"       shift, and go to state 442
    "unsigned long integer constant"  shift, and go to state 443
    "unsigned int8 constant"          shift, and go to state 444
    "floating point constant"         shift, and go to state 445
    "double constant"                 shift, and go to state 446
    "name"                            shift, and go to state 56
    "start of the string"             shift, and go to state 447
    "begin of code block"             shift, and go to state 448
    '-'                               shift, and go to state 449
    '+'                               shift, and go to state 450
    '*'                               shift, and go to state 451
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 452
    '!'                               shift, and go to state 453
    '['                               shift, and go to state 454
    '('                               shift, and go to state 455
    '$'                               shift, and go to state 456
    '@'                               shift, and go to state 457

    string_builder          go to state 458
    expr_reader             go to state 459
    expr_call_pipe          go to state 460
    name_in_namespace       go to state 461
    expr_new                go to state 462
    expr_cast               go to state 463
    expr_type_decl          go to state 464
    expr_type_info          go to state 465
    expr_list               go to state 809
    block_or_lambda         go to state 466
    expr_full_block         go to state 467
    expr_numeric_const      go to state 468
    expr_named_call         go to state 469
    expr_method_call        go to state 470
    func_addr_expr          go to state 471
    expr_field              go to state 472
    expr_call               go to state 473
    expr                    go to state 639
    expr_mtag               go to state 475
    basic_type_declaration  go to state 476
    make_decl               go to state 477
    make_struct_decl        go to state 478
    make_tuple_call         go to state 479
    make_dim_decl           go to state 480
    make_table_decl         go to state 481
    array_comprehension     go to state 482


State 613

  755 make_struct_decl: "default" '<' . $@79 type_declaration_no_options '>' $@80 use_initializer

    $default  reduce using rule 753 ($@79)

    $@79  go to state 810


State 614

  761 make_tuple_call: "tuple" '<' . $@81 type_declaration_no_options '>' $@82 '(' use_initializer optional_make_struct_dim_decl ')'

    $default  reduce using rule 759 ($@81)

    $@81  go to state 811


State 615

  758 make_tuple_call: "tuple" '(' . expr_list optional_comma ')'

    "struct"                          shift, and go to state 409
    "class"                           shift, and go to state 410
    "true"                            shift, and go to state 411
    "false"                           shift, and go to state 412
    "new"                             shift, and go to state 413
    "typeinfo"                        shift, and go to state 414
    "type"                            shift, and go to state 415
    "array"                           shift, and go to state 416
    "null"                            shift, and go to state 417
    "table"                           shift, and go to state 418
    "deref"                           shift, and go to state 419
    "cast"                            shift, and go to state 420
    "upcast"                          shift, and go to state 421
    "addr"                            shift, and go to state 422
    "reinterpret"                     shift, and go to state 423
    "unsafe"                          shift, and go to state 424
    "fixed_array"                     shift, and go to state 425
    "default"                         shift, and go to state 426
    "bool"                            shift, and go to state 225
    "void"                            shift, and go to state 226
    "string"                          shift, and go to state 227
    "int"                             shift, and go to state 229
    "int2"                            shift, and go to state 230
    "int3"                            shift, and go to state 231
    "int4"                            shift, and go to state 232
    "uint"                            shift, and go to state 233
    "bitfield"                        shift, and go to state 427
    "uint2"                           shift, and go to state 235
    "uint3"                           shift, and go to state 236
    "uint4"                           shift, and go to state 237
    "float"                           shift, and go to state 238
    "float2"                          shift, and go to state 239
    "float3"                          shift, and go to state 240
    "float4"                          shift, and go to state 241
    "range"                           shift, and go to state 242
    "urange"                          shift, and go to state 243
    "range64"                         shift, and go to state 244
    "urange64"                        shift, and go to state 245
    "int64"                           shift, and go to state 247
    "uint64"                          shift, and go to state 248
    "double"                          shift, and go to state 249
    "int8"                            shift, and go to state 252
    "uint8"                           shift, and go to state 253
    "int16"                           shift, and go to state 254
    "uint16"                          shift, and go to state 255
    "tuple"                           shift, and go to state 428
    "variant"                         shift, and go to state 429
    "generator"                       shift, and go to state 430
    "++"                              shift, and go to state 431
    "--"                              shift, and go to state 432
    "::"                              shift, and go to state 55
    "$$"                              shift, and go to state 433
    "$i"                              shift, and go to state 434
    "$v"                              shift, and go to state 435
    "$b"                              shift, and go to state 436
    "$a"                              shift, and go to state 437
    "$c"                              shift, and go to state 438
    "..."                             shift, and go to state 439
    "integer constant"                shift, and go to state 440
    "long integer constant"           shift, and go to state 441
    "unsigned integer constant"       shift, and go to state 442
    "unsigned long integer constant"  shift, and go to state 443
    "unsigned int8 constant"          shift, and go to state 444
    "floating point constant"         shift, and go to state 445
    "double constant"                 shift, and go to state 446
    "name"                            shift, and go to state 56
    "start of the string"             shift, and go to state 447
    "begin of code block"             shift, and go to state 448
    '-'                               shift, and go to state 449
    '+'                               shift, and go to state 450
    '*'                               shift, and go to state 451
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 452
    '!'                               shift, and go to state 453
    '['                               shift, and go to state 454
    '('                               shift, and go to state 455
    '$'                               shift, and go to state 456
    '@'                               shift, and go to state 457

    string_builder          go to state 458
    expr_reader             go to state 459
    expr_call_pipe          go to state 460
    name_in_namespace       go to state 461
    expr_new                go to state 462
    expr_cast               go to state 463
    expr_type_decl          go to state 464
    expr_type_info          go to state 465
    expr_list               go to state 812
    block_or_lambda         go to state 466
    expr_full_block         go to state 467
    expr_numeric_const      go to state 468
    expr_named_call         go to state 469
    expr_method_call        go to state 470
    func_addr_expr          go to state 471
    expr_field              go to state 472
    expr_call               go to state 473
    expr                    go to state 639
    expr_mtag               go to state 475
    basic_type_declaration  go to state 476
    make_decl               go to state 477
    make_struct_decl        go to state 478
    make_tuple_call         go to state 479
    make_dim_decl           go to state 480
    make_table_decl         go to state 481
    array_comprehension     go to state 482


State 616

  752 make_struct_decl: "variant" '<' . $@77 type_declaration_no_options '>' $@78 '(' make_variant_dim ')'

    $default  reduce using rule 750 ($@77)

    $@77  go to state 813


State 617

  421 expr: "generator" '<' . type_declaration_no_options '>' optional_capture_list '(' ')'
  422     | "generator" '<' . type_declaration_no_options '>' optional_capture_list '(' expr ')'
  423     | "generator" '<' . type_declaration_no_options '>' optional_capture_list expression_block

    "type"       shift, and go to state 219
    "array"      shift, and go to state 220
    "table"      shift, and go to state 221
    "typedecl"   shift, and go to state 222
    "iterator"   shift, and go to state 223
    "smart_ptr"  shift, and go to state 224
    "bool"       shift, and go to state 225
    "void"       shift, and go to state 226
    "string"     shift, and go to state 227
    "auto"       shift, and go to state 228
    "int"        shift, and go to state 229
    "int2"       shift, and go to state 230
    "int3"       shift, and go to state 231
    "int4"       shift, and go to state 232
    "uint"       shift, and go to state 233
    "bitfield"   shift, and go to state 234
    "uint2"      shift, and go to state 235
    "uint3"      shift, and go to state 236
    "uint4"      shift, and go to state 237
    "float"      shift, and go to state 238
    "float2"     shift, and go to state 239
    "float3"     shift, and go to state 240
    "float4"     shift, and go to state 241
    "range"      shift, and go to state 242
    "urange"     shift, and go to state 243
    "range64"    shift, and go to state 244
    "urange64"   shift, and go to state 245
    "block"      shift, and go to state 246
    "int64"      shift, and go to state 247
    "uint64"     shift, and go to state 248
    "double"     shift, and go to state 249
    "function"   shift, and go to state 250
    "lambda"     shift, and go to state 251
    "int8"       shift, and go to state 252
    "uint8"      shift, and go to state 253
    "int16"      shift, and go to state 254
    "uint16"     shift, and go to state 255
    "tuple"      shift, and go to state 256
    "variant"    shift, and go to state 257
    "::"         shift, and go to state 55
    "$t"         shift, and go to state 258
    "name"       shift, and go to state 56
    '$'          shift, and go to state 259

    name_in_namespace                   go to state 260
    basic_type_declaration              go to state 261
    structure_type_declaration          go to state 262
    auto_type_declaration               go to state 263
    bitfield_type_declaration           go to state 264
    type_declaration_no_options         go to state 814
    type_declaration_no_options_no_dim  go to state 266


State 618

  342 expr_method_call: expr . "->" "name" '(' ')'
  343                 | expr . "->" "name" '(' expr_list ')'
  353 expr_field: expr . '.' "name"
  354           | expr . '.' '.' "name"
  355           | expr . '.' "name" '(' ')'
  356           | expr . '.' "name" '(' expr_list ')'
  357           | expr . '.' basic_type_declaration '(' ')'
  358           | expr . '.' basic_type_declaration '(' expr_list ')'
  361           | expr . '.' $@17 error $@18
  383 expr: expr . "<<" expr
  384     | expr . ">>" expr
  385     | expr . "<<<" expr
  386     | expr . ">>>" expr
  387     | expr . '+' expr
  388     | expr . '-' expr
  389     | expr . '*' expr
  390     | expr . '/' expr
  391     | expr . '%' expr
  392     | expr . '<' expr
  393     | expr . '>' expr
  394     | expr . "==" expr
  395     | expr . "!=" expr
  396     | expr . "<=" expr
  397     | expr . ">=" expr
  398     | expr . '&' expr
  399     | expr . '|' expr
  400     | expr . '^' expr
  401     | expr . "&&" expr
  402     | expr . "||" expr
  403     | expr . "^^" expr
  404     | expr . ".." expr
  405     | "++" expr .
  407     | expr . "++"
  408     | expr . "--"
  410     | expr . '[' expr ']'
  411     | expr . '.' '[' expr ']'
  412     | expr . "?[" expr ']'
  413     | expr . '.' "?[" expr ']'
  414     | expr . "?." "name"
  415     | expr . '.' "?." "name"
  424     | expr . "??" expr
  425     | expr . '?' expr ':' expr
  428     | expr . "is" "type" '<' $@19 type_declaration_no_options '>' $@20
  429     | expr . "is" basic_type_declaration
  430     | expr . "is" "name"
  431     | expr . "as" "name"
  434     | expr . "as" "type" '<' $@21 type_declaration '>' $@22
  435     | expr . "as" basic_type_declaration
  436     | expr . '?' "as" "name"
  439     | expr . '?' "as" "type" '<' $@23 type_declaration '>' $@24
  440     | expr . '?' "as" basic_type_declaration
  448     | expr . "<|" expr
  449     | expr . "|>" expr
  450     | expr . "|>" basic_type_declaration
  461 expr_mtag: expr . '.' "$f" '(' expr ')'
  462          | expr . "?." "$f" '(' expr ')'
  463          | expr . '.' '.' "$f" '(' expr ')'
  464          | expr . '.' "?." "$f" '(' expr ')'
  465          | expr . "as" "$f" '(' expr ')'
  466          | expr . '?' "as" "$f" '(' expr ')'
  467          | expr . "is" "$f" '(' expr ')'

    "is"  shift, and go to state 648
    "as"  shift, and go to state 649
    "++"  shift, and go to state 652
    "--"  shift, and go to state 653
    "->"  shift, and go to state 658
    "?."  shift, and go to state 660
    "?["  shift, and go to state 661
    "<|"  shift, and go to state 662
    "|>"  shift, and go to state 663
    '.'   shift, and go to state 681
    '['   shift, and go to state 682

    $default  reduce using rule 405 (expr)


State 619

  342 expr_method_call: expr . "->" "name" '(' ')'
  343                 | expr . "->" "name" '(' expr_list ')'
  353 expr_field: expr . '.' "name"
  354           | expr . '.' '.' "name"
  355           | expr . '.' "name" '(' ')'
  356           | expr . '.' "name" '(' expr_list ')'
  357           | expr . '.' basic_type_declaration '(' ')'
  358           | expr . '.' basic_type_declaration '(' expr_list ')'
  361           | expr . '.' $@17 error $@18
  383 expr: expr . "<<" expr
  384     | expr . ">>" expr
  385     | expr . "<<<" expr
  386     | expr . ">>>" expr
  387     | expr . '+' expr
  388     | expr . '-' expr
  389     | expr . '*' expr
  390     | expr . '/' expr
  391     | expr . '%' expr
  392     | expr . '<' expr
  393     | expr . '>' expr
  394     | expr . "==" expr
  395     | expr . "!=" expr
  396     | expr . "<=" expr
  397     | expr . ">=" expr
  398     | expr . '&' expr
  399     | expr . '|' expr
  400     | expr . '^' expr
  401     | expr . "&&" expr
  402     | expr . "||" expr
  403     | expr . "^^" expr
  404     | expr . ".." expr
  406     | "--" expr .
  407     | expr . "++"
  408     | expr . "--"
  410     | expr . '[' expr ']'
  411     | expr . '.' '[' expr ']'
  412     | expr . "?[" expr ']'
  413     | expr . '.' "?[" expr ']'
  414     | expr . "?." "name"
  415     | expr . '.' "?." "name"
  424     | expr . "??" expr
  425     | expr . '?' expr ':' expr
  428     | expr . "is" "type" '<' $@19 type_declaration_no_options '>' $@20
  429     | expr . "is" basic_type_declaration
  430     | expr . "is" "name"
  431     | expr . "as" "name"
  434     | expr . "as" "type" '<' $@21 type_declaration '>' $@22
  435     | expr . "as" basic_type_declaration
  436     | expr . '?' "as" "name"
  439     | expr . '?' "as" "type" '<' $@23 type_declaration '>' $@24
  440     | expr . '?' "as" basic_type_declaration
  448     | expr . "<|" expr
  449     | expr . "|>" expr
  450     | expr . "|>" basic_type_declaration
  461 expr_mtag: expr . '.' "$f" '(' expr ')'
  462          | expr . "?." "$f" '(' expr ')'
  463          | expr . '.' '.' "$f" '(' expr ')'
  464          | expr . '.' "?." "$f" '(' expr ')'
  465          | expr . "as" "$f" '(' expr ')'
  466          | expr . '?' "as" "$f" '(' expr ')'
  467          | expr . "is" "$f" '(' expr ')'

    "is"  shift, and go to state 648
    "as"  shift, and go to state 649
    "++"  shift, and go to state 652
    "--"  shift, and go to state 653
    "->"  shift, and go to state 658
    "?."  shift, and go to state 660
    "?["  shift, and go to state 661
    "<|"  shift, and go to state 662
    "|>"  shift, and go to state 663
    '.'   shift, and go to state 681
    '['   shift, and go to state 682

    $default  reduce using rule 406 (expr)


State 620

  453 expr_mtag: "$$" '(' . expr ')'

    "struct"                          shift, and go to state 409
    "class"                           shift, and go to state 410
    "true"                            shift, and go to state 411
    "false"                           shift, and go to state 412
    "new"                             shift, and go to state 413
    "typeinfo"                        shift, and go to state 414
    "type"                            shift, and go to state 415
    "array"                           shift, and go to state 416
    "null"                            shift, and go to state 417
    "table"                           shift, and go to state 418
    "deref"                           shift, and go to state 419
    "cast"                            shift, and go to state 420
    "upcast"                          shift, and go to state 421
    "addr"                            shift, and go to state 422
    "reinterpret"                     shift, and go to state 423
    "unsafe"                          shift, and go to state 424
    "fixed_array"                     shift, and go to state 425
    "default"                         shift, and go to state 426
    "bool"                            shift, and go to state 225
    "void"                            shift, and go to state 226
    "string"                          shift, and go to state 227
    "int"                             shift, and go to state 229
    "int2"                            shift, and go to state 230
    "int3"                            shift, and go to state 231
    "int4"                            shift, and go to state 232
    "uint"                            shift, and go to state 233
    "bitfield"                        shift, and go to state 427
    "uint2"                           shift, and go to state 235
    "uint3"                           shift, and go to state 236
    "uint4"                           shift, and go to state 237
    "float"                           shift, and go to state 238
    "float2"                          shift, and go to state 239
    "float3"                          shift, and go to state 240
    "float4"                          shift, and go to state 241
    "range"                           shift, and go to state 242
    "urange"                          shift, and go to state 243
    "range64"                         shift, and go to state 244
    "urange64"                        shift, and go to state 245
    "int64"                           shift, and go to state 247
    "uint64"                          shift, and go to state 248
    "double"                          shift, and go to state 249
    "int8"                            shift, and go to state 252
    "uint8"                           shift, and go to state 253
    "int16"                           shift, and go to state 254
    "uint16"                          shift, and go to state 255
    "tuple"                           shift, and go to state 428
    "variant"                         shift, and go to state 429
    "generator"                       shift, and go to state 430
    "++"                              shift, and go to state 431
    "--"                              shift, and go to state 432
    "::"                              shift, and go to state 55
    "$$"                              shift, and go to state 433
    "$i"                              shift, and go to state 434
    "$v"                              shift, and go to state 435
    "$b"                              shift, and go to state 436
    "$a"                              shift, and go to state 437
    "$c"                              shift, and go to state 438
    "..."                             shift, and go to state 439
    "integer constant"                shift, and go to state 440
    "long integer constant"           shift, and go to state 441
    "unsigned integer constant"       shift, and go to state 442
    "unsigned long integer constant"  shift, and go to state 443
    "unsigned int8 constant"          shift, and go to state 444
    "floating point constant"         shift, and go to state 445
    "double constant"                 shift, and go to state 446
    "name"                            shift, and go to state 56
    "start of the string"             shift, and go to state 447
    "begin of code block"             shift, and go to state 448
    '-'                               shift, and go to state 449
    '+'                               shift, and go to state 450
    '*'                               shift, and go to state 451
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 452
    '!'                               shift, and go to state 453
    '['                               shift, and go to state 454
    '('                               shift, and go to state 455
    '$'                               shift, and go to state 456
    '@'                               shift, and go to state 457

    string_builder          go to state 458
    expr_reader             go to state 459
    expr_call_pipe          go to state 460
    name_in_namespace       go to state 461
    expr_new                go to state 462
    expr_cast               go to state 463
    expr_type_decl          go to state 464
    expr_type_info          go to state 465
    block_or_lambda         go to state 466
    expr_full_block         go to state 467
    expr_numeric_const      go to state 468
    expr_named_call         go to state 469
    expr_method_call        go to state 470
    func_addr_expr          go to state 471
    expr_field              go to state 472
    expr_call               go to state 473
    expr                    go to state 815
    expr_mtag               go to state 475
    basic_type_declaration  go to state 476
    make_decl               go to state 477
    make_struct_decl        go to state 478
    make_tuple_call         go to state 479
    make_dim_decl           go to state 480
    make_table_decl         go to state 481
    array_comprehension     go to state 482


State 621

  454 expr_mtag: "$i" '(' . expr ')'

    "struct"                          shift, and go to state 409
    "class"                           shift, and go to state 410
    "true"                            shift, and go to state 411
    "false"                           shift, and go to state 412
    "new"                             shift, and go to state 413
    "typeinfo"                        shift, and go to state 414
    "type"                            shift, and go to state 415
    "array"                           shift, and go to state 416
    "null"                            shift, and go to state 417
    "table"                           shift, and go to state 418
    "deref"                           shift, and go to state 419
    "cast"                            shift, and go to state 420
    "upcast"                          shift, and go to state 421
    "addr"                            shift, and go to state 422
    "reinterpret"                     shift, and go to state 423
    "unsafe"                          shift, and go to state 424
    "fixed_array"                     shift, and go to state 425
    "default"                         shift, and go to state 426
    "bool"                            shift, and go to state 225
    "void"                            shift, and go to state 226
    "string"                          shift, and go to state 227
    "int"                             shift, and go to state 229
    "int2"                            shift, and go to state 230
    "int3"                            shift, and go to state 231
    "int4"                            shift, and go to state 232
    "uint"                            shift, and go to state 233
    "bitfield"                        shift, and go to state 427
    "uint2"                           shift, and go to state 235
    "uint3"                           shift, and go to state 236
    "uint4"                           shift, and go to state 237
    "float"                           shift, and go to state 238
    "float2"                          shift, and go to state 239
    "float3"                          shift, and go to state 240
    "float4"                          shift, and go to state 241
    "range"                           shift, and go to state 242
    "urange"                          shift, and go to state 243
    "range64"                         shift, and go to state 244
    "urange64"                        shift, and go to state 245
    "int64"                           shift, and go to state 247
    "uint64"                          shift, and go to state 248
    "double"                          shift, and go to state 249
    "int8"                            shift, and go to state 252
    "uint8"                           shift, and go to state 253
    "int16"                           shift, and go to state 254
    "uint16"                          shift, and go to state 255
    "tuple"                           shift, and go to state 428
    "variant"                         shift, and go to state 429
    "generator"                       shift, and go to state 430
    "++"                              shift, and go to state 431
    "--"                              shift, and go to state 432
    "::"                              shift, and go to state 55
    "$$"                              shift, and go to state 433
    "$i"                              shift, and go to state 434
    "$v"                              shift, and go to state 435
    "$b"                              shift, and go to state 436
    "$a"                              shift, and go to state 437
    "$c"                              shift, and go to state 438
    "..."                             shift, and go to state 439
    "integer constant"                shift, and go to state 440
    "long integer constant"           shift, and go to state 441
    "unsigned integer constant"       shift, and go to state 442
    "unsigned long integer constant"  shift, and go to state 443
    "unsigned int8 constant"          shift, and go to state 444
    "floating point constant"         shift, and go to state 445
    "double constant"                 shift, and go to state 446
    "name"                            shift, and go to state 56
    "start of the string"             shift, and go to state 447
    "begin of code block"             shift, and go to state 448
    '-'                               shift, and go to state 449
    '+'                               shift, and go to state 450
    '*'                               shift, and go to state 451
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 452
    '!'                               shift, and go to state 453
    '['                               shift, and go to state 454
    '('                               shift, and go to state 455
    '$'                               shift, and go to state 456
    '@'                               shift, and go to state 457

    string_builder          go to state 458
    expr_reader             go to state 459
    expr_call_pipe          go to state 460
    name_in_namespace       go to state 461
    expr_new                go to state 462
    expr_cast               go to state 463
    expr_type_decl          go to state 464
    expr_type_info          go to state 465
    block_or_lambda         go to state 466
    expr_full_block         go to state 467
    expr_numeric_const      go to state 468
    expr_named_call         go to state 469
    expr_method_call        go to state 470
    func_addr_expr          go to state 471
    expr_field              go to state 472
    expr_call               go to state 473
    expr                    go to state 816
    expr_mtag               go to state 475
    basic_type_declaration  go to state 476
    make_decl               go to state 477
    make_struct_decl        go to state 478
    make_tuple_call         go to state 479
    make_dim_decl           go to state 480
    make_table_decl         go to state 481
    array_comprehension     go to state 482


State 622

  455 expr_mtag: "$v" '(' . expr ')'

    "struct"                          shift, and go to state 409
    "class"                           shift, and go to state 410
    "true"                            shift, and go to state 411
    "false"                           shift, and go to state 412
    "new"                             shift, and go to state 413
    "typeinfo"                        shift, and go to state 414
    "type"                            shift, and go to state 415
    "array"                           shift, and go to state 416
    "null"                            shift, and go to state 417
    "table"                           shift, and go to state 418
    "deref"                           shift, and go to state 419
    "cast"                            shift, and go to state 420
    "upcast"                          shift, and go to state 421
    "addr"                            shift, and go to state 422
    "reinterpret"                     shift, and go to state 423
    "unsafe"                          shift, and go to state 424
    "fixed_array"                     shift, and go to state 425
    "default"                         shift, and go to state 426
    "bool"                            shift, and go to state 225
    "void"                            shift, and go to state 226
    "string"                          shift, and go to state 227
    "int"                             shift, and go to state 229
    "int2"                            shift, and go to state 230
    "int3"                            shift, and go to state 231
    "int4"                            shift, and go to state 232
    "uint"                            shift, and go to state 233
    "bitfield"                        shift, and go to state 427
    "uint2"                           shift, and go to state 235
    "uint3"                           shift, and go to state 236
    "uint4"                           shift, and go to state 237
    "float"                           shift, and go to state 238
    "float2"                          shift, and go to state 239
    "float3"                          shift, and go to state 240
    "float4"                          shift, and go to state 241
    "range"                           shift, and go to state 242
    "urange"                          shift, and go to state 243
    "range64"                         shift, and go to state 244
    "urange64"                        shift, and go to state 245
    "int64"                           shift, and go to state 247
    "uint64"                          shift, and go to state 248
    "double"                          shift, and go to state 249
    "int8"                            shift, and go to state 252
    "uint8"                           shift, and go to state 253
    "int16"                           shift, and go to state 254
    "uint16"                          shift, and go to state 255
    "tuple"                           shift, and go to state 428
    "variant"                         shift, and go to state 429
    "generator"                       shift, and go to state 430
    "++"                              shift, and go to state 431
    "--"                              shift, and go to state 432
    "::"                              shift, and go to state 55
    "$$"                              shift, and go to state 433
    "$i"                              shift, and go to state 434
    "$v"                              shift, and go to state 435
    "$b"                              shift, and go to state 436
    "$a"                              shift, and go to state 437
    "$c"                              shift, and go to state 438
    "..."                             shift, and go to state 439
    "integer constant"                shift, and go to state 440
    "long integer constant"           shift, and go to state 441
    "unsigned integer constant"       shift, and go to state 442
    "unsigned long integer constant"  shift, and go to state 443
    "unsigned int8 constant"          shift, and go to state 444
    "floating point constant"         shift, and go to state 445
    "double constant"                 shift, and go to state 446
    "name"                            shift, and go to state 56
    "start of the string"             shift, and go to state 447
    "begin of code block"             shift, and go to state 448
    '-'                               shift, and go to state 449
    '+'                               shift, and go to state 450
    '*'                               shift, and go to state 451
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 452
    '!'                               shift, and go to state 453
    '['                               shift, and go to state 454
    '('                               shift, and go to state 455
    '$'                               shift, and go to state 456
    '@'                               shift, and go to state 457

    string_builder          go to state 458
    expr_reader             go to state 459
    expr_call_pipe          go to state 460
    name_in_namespace       go to state 461
    expr_new                go to state 462
    expr_cast               go to state 463
    expr_type_decl          go to state 464
    expr_type_info          go to state 465
    block_or_lambda         go to state 466
    expr_full_block         go to state 467
    expr_numeric_const      go to state 468
    expr_named_call         go to state 469
    expr_method_call        go to state 470
    func_addr_expr          go to state 471
    expr_field              go to state 472
    expr_call               go to state 473
    expr                    go to state 817
    expr_mtag               go to state 475
    basic_type_declaration  go to state 476
    make_decl               go to state 477
    make_struct_decl        go to state 478
    make_tuple_call         go to state 479
    make_dim_decl           go to state 480
    make_table_decl         go to state 481
    array_comprehension     go to state 482


State 623

  456 expr_mtag: "$b" '(' . expr ')'

    "struct"                          shift, and go to state 409
    "class"                           shift, and go to state 410
    "true"                            shift, and go to state 411
    "false"                           shift, and go to state 412
    "new"                             shift, and go to state 413
    "typeinfo"                        shift, and go to state 414
    "type"                            shift, and go to state 415
    "array"                           shift, and go to state 416
    "null"                            shift, and go to state 417
    "table"                           shift, and go to state 418
    "deref"                           shift, and go to state 419
    "cast"                            shift, and go to state 420
    "upcast"                          shift, and go to state 421
    "addr"                            shift, and go to state 422
    "reinterpret"                     shift, and go to state 423
    "unsafe"                          shift, and go to state 424
    "fixed_array"                     shift, and go to state 425
    "default"                         shift, and go to state 426
    "bool"                            shift, and go to state 225
    "void"                            shift, and go to state 226
    "string"                          shift, and go to state 227
    "int"                             shift, and go to state 229
    "int2"                            shift, and go to state 230
    "int3"                            shift, and go to state 231
    "int4"                            shift, and go to state 232
    "uint"                            shift, and go to state 233
    "bitfield"                        shift, and go to state 427
    "uint2"                           shift, and go to state 235
    "uint3"                           shift, and go to state 236
    "uint4"                           shift, and go to state 237
    "float"                           shift, and go to state 238
    "float2"                          shift, and go to state 239
    "float3"                          shift, and go to state 240
    "float4"                          shift, and go to state 241
    "range"                           shift, and go to state 242
    "urange"                          shift, and go to state 243
    "range64"                         shift, and go to state 244
    "urange64"                        shift, and go to state 245
    "int64"                           shift, and go to state 247
    "uint64"                          shift, and go to state 248
    "double"                          shift, and go to state 249
    "int8"                            shift, and go to state 252
    "uint8"                           shift, and go to state 253
    "int16"                           shift, and go to state 254
    "uint16"                          shift, and go to state 255
    "tuple"                           shift, and go to state 428
    "variant"                         shift, and go to state 429
    "generator"                       shift, and go to state 430
    "++"                              shift, and go to state 431
    "--"                              shift, and go to state 432
    "::"                              shift, and go to state 55
    "$$"                              shift, and go to state 433
    "$i"                              shift, and go to state 434
    "$v"                              shift, and go to state 435
    "$b"                              shift, and go to state 436
    "$a"                              shift, and go to state 437
    "$c"                              shift, and go to state 438
    "..."                             shift, and go to state 439
    "integer constant"                shift, and go to state 440
    "long integer constant"           shift, and go to state 441
    "unsigned integer constant"       shift, and go to state 442
    "unsigned long integer constant"  shift, and go to state 443
    "unsigned int8 constant"          shift, and go to state 444
    "floating point constant"         shift, and go to state 445
    "double constant"                 shift, and go to state 446
    "name"                            shift, and go to state 56
    "start of the string"             shift, and go to state 447
    "begin of code block"             shift, and go to state 448
    '-'                               shift, and go to state 449
    '+'                               shift, and go to state 450
    '*'                               shift, and go to state 451
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 452
    '!'                               shift, and go to state 453
    '['                               shift, and go to state 454
    '('                               shift, and go to state 455
    '$'                               shift, and go to state 456
    '@'                               shift, and go to state 457

    string_builder          go to state 458
    expr_reader             go to state 459
    expr_call_pipe          go to state 460
    name_in_namespace       go to state 461
    expr_new                go to state 462
    expr_cast               go to state 463
    expr_type_decl          go to state 464
    expr_type_info          go to state 465
    block_or_lambda         go to state 466
    expr_full_block         go to state 467
    expr_numeric_const      go to state 468
    expr_named_call         go to state 469
    expr_method_call        go to state 470
    func_addr_expr          go to state 471
    expr_field              go to state 472
    expr_call               go to state 473
    expr                    go to state 818
    expr_mtag               go to state 475
    basic_type_declaration  go to state 476
    make_decl               go to state 477
    make_struct_decl        go to state 478
    make_tuple_call         go to state 479
    make_dim_decl           go to state 480
    make_table_decl         go to state 481
    array_comprehension     go to state 482


State 624

  457 expr_mtag: "$a" '(' . expr ')'

    "struct"                          shift, and go to state 409
    "class"                           shift, and go to state 410
    "true"                            shift, and go to state 411
    "false"                           shift, and go to state 412
    "new"                             shift, and go to state 413
    "typeinfo"                        shift, and go to state 414
    "type"                            shift, and go to state 415
    "array"                           shift, and go to state 416
    "null"                            shift, and go to state 417
    "table"                           shift, and go to state 418
    "deref"                           shift, and go to state 419
    "cast"                            shift, and go to state 420
    "upcast"                          shift, and go to state 421
    "addr"                            shift, and go to state 422
    "reinterpret"                     shift, and go to state 423
    "unsafe"                          shift, and go to state 424
    "fixed_array"                     shift, and go to state 425
    "default"                         shift, and go to state 426
    "bool"                            shift, and go to state 225
    "void"                            shift, and go to state 226
    "string"                          shift, and go to state 227
    "int"                             shift, and go to state 229
    "int2"                            shift, and go to state 230
    "int3"                            shift, and go to state 231
    "int4"                            shift, and go to state 232
    "uint"                            shift, and go to state 233
    "bitfield"                        shift, and go to state 427
    "uint2"                           shift, and go to state 235
    "uint3"                           shift, and go to state 236
    "uint4"                           shift, and go to state 237
    "float"                           shift, and go to state 238
    "float2"                          shift, and go to state 239
    "float3"                          shift, and go to state 240
    "float4"                          shift, and go to state 241
    "range"                           shift, and go to state 242
    "urange"                          shift, and go to state 243
    "range64"                         shift, and go to state 244
    "urange64"                        shift, and go to state 245
    "int64"                           shift, and go to state 247
    "uint64"                          shift, and go to state 248
    "double"                          shift, and go to state 249
    "int8"                            shift, and go to state 252
    "uint8"                           shift, and go to state 253
    "int16"                           shift, and go to state 254
    "uint16"                          shift, and go to state 255
    "tuple"                           shift, and go to state 428
    "variant"                         shift, and go to state 429
    "generator"                       shift, and go to state 430
    "++"                              shift, and go to state 431
    "--"                              shift, and go to state 432
    "::"                              shift, and go to state 55
    "$$"                              shift, and go to state 433
    "$i"                              shift, and go to state 434
    "$v"                              shift, and go to state 435
    "$b"                              shift, and go to state 436
    "$a"                              shift, and go to state 437
    "$c"                              shift, and go to state 438
    "..."                             shift, and go to state 439
    "integer constant"                shift, and go to state 440
    "long integer constant"           shift, and go to state 441
    "unsigned integer constant"       shift, and go to state 442
    "unsigned long integer constant"  shift, and go to state 443
    "unsigned int8 constant"          shift, and go to state 444
    "floating point constant"         shift, and go to state 445
    "double constant"                 shift, and go to state 446
    "name"                            shift, and go to state 56
    "start of the string"             shift, and go to state 447
    "begin of code block"             shift, and go to state 448
    '-'                               shift, and go to state 449
    '+'                               shift, and go to state 450
    '*'                               shift, and go to state 451
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 452
    '!'                               shift, and go to state 453
    '['                               shift, and go to state 454
    '('                               shift, and go to state 455
    '$'                               shift, and go to state 456
    '@'                               shift, and go to state 457

    string_builder          go to state 458
    expr_reader             go to state 459
    expr_call_pipe          go to state 460
    name_in_namespace       go to state 461
    expr_new                go to state 462
    expr_cast               go to state 463
    expr_type_decl          go to state 464
    expr_type_info          go to state 465
    block_or_lambda         go to state 466
    expr_full_block         go to state 467
    expr_numeric_const      go to state 468
    expr_named_call         go to state 469
    expr_method_call        go to state 470
    func_addr_expr          go to state 471
    expr_field              go to state 472
    expr_call               go to state 473
    expr                    go to state 819
    expr_mtag               go to state 475
    basic_type_declaration  go to state 476
    make_decl               go to state 477
    make_struct_decl        go to state 478
    make_tuple_call         go to state 479
    make_dim_decl           go to state 480
    make_table_decl         go to state 481
    array_comprehension     go to state 482


State 625

  459 expr_mtag: "$c" '(' . expr ')' '(' ')'
  460          | "$c" '(' . expr ')' '(' expr_list ')'

    "struct"                          shift, and go to state 409
    "class"                           shift, and go to state 410
    "true"                            shift, and go to state 411
    "false"                           shift, and go to state 412
    "new"                             shift, and go to state 413
    "typeinfo"                        shift, and go to state 414
    "type"                            shift, and go to state 415
    "array"                           shift, and go to state 416
    "null"                            shift, and go to state 417
    "table"                           shift, and go to state 418
    "deref"                           shift, and go to state 419
    "cast"                            shift, and go to state 420
    "upcast"                          shift, and go to state 421
    "addr"                            shift, and go to state 422
    "reinterpret"                     shift, and go to state 423
    "unsafe"                          shift, and go to state 424
    "fixed_array"                     shift, and go to state 425
    "default"                         shift, and go to state 426
    "bool"                            shift, and go to state 225
    "void"                            shift, and go to state 226
    "string"                          shift, and go to state 227
    "int"                             shift, and go to state 229
    "int2"                            shift, and go to state 230
    "int3"                            shift, and go to state 231
    "int4"                            shift, and go to state 232
    "uint"                            shift, and go to state 233
    "bitfield"                        shift, and go to state 427
    "uint2"                           shift, and go to state 235
    "uint3"                           shift, and go to state 236
    "uint4"                           shift, and go to state 237
    "float"                           shift, and go to state 238
    "float2"                          shift, and go to state 239
    "float3"                          shift, and go to state 240
    "float4"                          shift, and go to state 241
    "range"                           shift, and go to state 242
    "urange"                          shift, and go to state 243
    "range64"                         shift, and go to state 244
    "urange64"                        shift, and go to state 245
    "int64"                           shift, and go to state 247
    "uint64"                          shift, and go to state 248
    "double"                          shift, and go to state 249
    "int8"                            shift, and go to state 252
    "uint8"                           shift, and go to state 253
    "int16"                           shift, and go to state 254
    "uint16"                          shift, and go to state 255
    "tuple"                           shift, and go to state 428
    "variant"                         shift, and go to state 429
    "generator"                       shift, and go to state 430
    "++"                              shift, and go to state 431
    "--"                              shift, and go to state 432
    "::"                              shift, and go to state 55
    "$$"                              shift, and go to state 433
    "$i"                              shift, and go to state 434
    "$v"                              shift, and go to state 435
    "$b"                              shift, and go to state 436
    "$a"                              shift, and go to state 437
    "$c"                              shift, and go to state 438
    "..."                             shift, and go to state 439
    "integer constant"                shift, and go to state 440
    "long integer constant"           shift, and go to state 441
    "unsigned integer constant"       shift, and go to state 442
    "unsigned long integer constant"  shift, and go to state 443
    "unsigned int8 constant"          shift, and go to state 444
    "floating point constant"         shift, and go to state 445
    "double constant"                 shift, and go to state 446
    "name"                            shift, and go to state 56
    "start of the string"             shift, and go to state 447
    "begin of code block"             shift, and go to state 448
    '-'                               shift, and go to state 449
    '+'                               shift, and go to state 450
    '*'                               shift, and go to state 451
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 452
    '!'                               shift, and go to state 453
    '['                               shift, and go to state 454
    '('                               shift, and go to state 455
    '$'                               shift, and go to state 456
    '@'                               shift, and go to state 457

    string_builder          go to state 458
    expr_reader             go to state 459
    expr_call_pipe          go to state 460
    name_in_namespace       go to state 461
    expr_new                go to state 462
    expr_cast               go to state 463
    expr_type_decl          go to state 464
    expr_type_info          go to state 465
    block_or_lambda         go to state 466
    expr_full_block         go to state 467
    expr_numeric_const      go to state 468
    expr_named_call         go to state 469
    expr_method_call        go to state 470
    func_addr_expr          go to state 471
    expr_field              go to state 472
    expr_call               go to state 473
    expr                    go to state 820
    expr_mtag               go to state 475
    basic_type_declaration  go to state 476
    make_decl               go to state 477
    make_struct_decl        go to state 478
    make_tuple_call         go to state 479
    make_dim_decl           go to state 480
    make_table_decl         go to state 481
    array_comprehension     go to state 482


State 626

   30 string_builder_body: string_builder_body . character_sequence
   31                    | string_builder_body . "{" expr "}"
   32 string_builder: "start of the string" string_builder_body . "end of the string"

    STRING_CHARACTER      shift, and go to state 155
    STRING_CHARACTER_ESC  shift, and go to state 156
    "end of the string"   shift, and go to state 821
    "{"                   shift, and go to state 822

    character_sequence  go to state 823


State 627

  792 array_comprehension: "begin of code block" "for" . '(' variable_name_with_pos_list "in" expr_list ')' "end of expression" make_map_tuple array_comprehension_where "end of code block"

    '('  shift, and go to state 824


State 628

  342 expr_method_call: expr . "->" "name" '(' ')'
  343                 | expr . "->" "name" '(' expr_list ')'
  353 expr_field: expr . '.' "name"
  354           | expr . '.' '.' "name"
  355           | expr . '.' "name" '(' ')'
  356           | expr . '.' "name" '(' expr_list ')'
  357           | expr . '.' basic_type_declaration '(' ')'
  358           | expr . '.' basic_type_declaration '(' expr_list ')'
  361           | expr . '.' $@17 error $@18
  383 expr: expr . "<<" expr
  384     | expr . ">>" expr
  385     | expr . "<<<" expr
  386     | expr . ">>>" expr
  387     | expr . '+' expr
  388     | expr . '-' expr
  389     | expr . '*' expr
  390     | expr . '/' expr
  391     | expr . '%' expr
  392     | expr . '<' expr
  393     | expr . '>' expr
  394     | expr . "==" expr
  395     | expr . "!=" expr
  396     | expr . "<=" expr
  397     | expr . ">=" expr
  398     | expr . '&' expr
  399     | expr . '|' expr
  400     | expr . '^' expr
  401     | expr . "&&" expr
  402     | expr . "||" expr
  403     | expr . "^^" expr
  404     | expr . ".." expr
  407     | expr . "++"
  408     | expr . "--"
  410     | expr . '[' expr ']'
  411     | expr . '.' '[' expr ']'
  412     | expr . "?[" expr ']'
  413     | expr . '.' "?[" expr ']'
  414     | expr . "?." "name"
  415     | expr . '.' "?." "name"
  424     | expr . "??" expr
  425     | expr . '?' expr ':' expr
  428     | expr . "is" "type" '<' $@19 type_declaration_no_options '>' $@20
  429     | expr . "is" basic_type_declaration
  430     | expr . "is" "name"
  431     | expr . "as" "name"
  434     | expr . "as" "type" '<' $@21 type_declaration '>' $@22
  435     | expr . "as" basic_type_declaration
  436     | expr . '?' "as" "name"
  439     | expr . '?' "as" "type" '<' $@23 type_declaration '>' $@24
  440     | expr . '?' "as" basic_type_declaration
  448     | expr . "<|" expr
  449     | expr . "|>" expr
  450     | expr . "|>" basic_type_declaration
  461 expr_mtag: expr . '.' "$f" '(' expr ')'
  462          | expr . "?." "$f" '(' expr ')'
  463          | expr . '.' '.' "$f" '(' expr ')'
  464          | expr . '.' "?." "$f" '(' expr ')'
  465          | expr . "as" "$f" '(' expr ')'
  466          | expr . '?' "as" "$f" '(' expr ')'
  467          | expr . "is" "$f" '(' expr ')'
  756 make_map_tuple: expr . "=>" expr
  757               | expr .

    "is"   shift, and go to state 648
    "as"   shift, and go to state 649
    "<<"   shift, and go to state 650
    ">>"   shift, and go to state 651
    "++"   shift, and go to state 652
    "--"   shift, and go to state 653
    "<="   shift, and go to state 654
    ">="   shift, and go to state 655
    "=="   shift, and go to state 656
    "!="   shift, and go to state 657
    "->"   shift, and go to state 658
    "??"   shift, and go to state 659
    "?."   shift, and go to state 660
    "?["   shift, and go to state 661
    "<|"   shift, and go to state 662
    "|>"   shift, and go to state 663
    "<<<"  shift, and go to state 664
    ">>>"  shift, and go to state 665
    "=>"   shift, and go to state 825
    "&&"   shift, and go to state 666
    "||"   shift, and go to state 667
    "^^"   shift, and go to state 668
    ".."   shift, and go to state 669
    '?'    shift, and go to state 670
    '|'    shift, and go to state 671
    '^'    shift, and go to state 672
    '&'    shift, and go to state 673
    '<'    shift, and go to state 674
    '>'    shift, and go to state 675
    '-'    shift, and go to state 676
    '+'    shift, and go to state 677
    '*'    shift, and go to state 678
    '/'    shift, and go to state 679
    '%'    shift, and go to state 680
    '.'    shift, and go to state 681
    '['    shift, and go to state 682

    $default  reduce using rule 757 (make_map_tuple)


State 629

  780 expr_map_tuple_list: make_map_tuple .

    $default  reduce using rule 780 (expr_map_tuple_list)


State 630

  781 expr_map_tuple_list: expr_map_tuple_list . ',' make_map_tuple
  782 make_table_decl: "begin of code block" expr_map_tuple_list . optional_comma "end of code block"

    ','  shift, and go to state 826

    $default  reduce using rule 788 (optional_comma)

    optional_comma  go to state 827


State 631

  342 expr_method_call: expr . "->" "name" '(' ')'
  343                 | expr . "->" "name" '(' expr_list ')'
  353 expr_field: expr . '.' "name"
  354           | expr . '.' '.' "name"
  355           | expr . '.' "name" '(' ')'
  356           | expr . '.' "name" '(' expr_list ')'
  357           | expr . '.' basic_type_declaration '(' ')'
  358           | expr . '.' basic_type_declaration '(' expr_list ')'
  361           | expr . '.' $@17 error $@18
  382 expr: '-' expr .
  383     | expr . "<<" expr
  384     | expr . ">>" expr
  385     | expr . "<<<" expr
  386     | expr . ">>>" expr
  387     | expr . '+' expr
  388     | expr . '-' expr
  389     | expr . '*' expr
  390     | expr . '/' expr
  391     | expr . '%' expr
  392     | expr . '<' expr
  393     | expr . '>' expr
  394     | expr . "==" expr
  395     | expr . "!=" expr
  396     | expr . "<=" expr
  397     | expr . ">=" expr
  398     | expr . '&' expr
  399     | expr . '|' expr
  400     | expr . '^' expr
  401     | expr . "&&" expr
  402     | expr . "||" expr
  403     | expr . "^^" expr
  404     | expr . ".." expr
  407     | expr . "++"
  408     | expr . "--"
  410     | expr . '[' expr ']'
  411     | expr . '.' '[' expr ']'
  412     | expr . "?[" expr ']'
  413     | expr . '.' "?[" expr ']'
  414     | expr . "?." "name"
  415     | expr . '.' "?." "name"
  424     | expr . "??" expr
  425     | expr . '?' expr ':' expr
  428     | expr . "is" "type" '<' $@19 type_declaration_no_options '>' $@20
  429     | expr . "is" basic_type_declaration
  430     | expr . "is" "name"
  431     | expr . "as" "name"
  434     | expr . "as" "type" '<' $@21 type_declaration '>' $@22
  435     | expr . "as" basic_type_declaration
  436     | expr . '?' "as" "name"
  439     | expr . '?' "as" "type" '<' $@23 type_declaration '>' $@24
  440     | expr . '?' "as" basic_type_declaration
  448     | expr . "<|" expr
  449     | expr . "|>" expr
  450     | expr . "|>" basic_type_declaration
  461 expr_mtag: expr . '.' "$f" '(' expr ')'
  462          | expr . "?." "$f" '(' expr ')'
  463          | expr . '.' '.' "$f" '(' expr ')'
  464          | expr . '.' "?." "$f" '(' expr ')'
  465          | expr . "as" "$f" '(' expr ')'
  466          | expr . '?' "as" "$f" '(' expr ')'
  467          | expr . "is" "$f" '(' expr ')'

    "is"  shift, and go to state 648
    "as"  shift, and go to state 649
    "++"  shift, and go to state 652
    "--"  shift, and go to state 653
    "->"  shift, and go to state 658
    "?."  shift, and go to state 660
    "?["  shift, and go to state 661
    "<|"  shift, and go to state 662
    "|>"  shift, and go to state 663
    '.'   shift, and go to state 681
    '['   shift, and go to state 682

    $default  reduce using rule 382 (expr)


State 632

  342 expr_method_call: expr . "->" "name" '(' ')'
  343                 | expr . "->" "name" '(' expr_list ')'
  353 expr_field: expr . '.' "name"
  354           | expr . '.' '.' "name"
  355           | expr . '.' "name" '(' ')'
  356           | expr . '.' "name" '(' expr_list ')'
  357           | expr . '.' basic_type_declaration '(' ')'
  358           | expr . '.' basic_type_declaration '(' expr_list ')'
  361           | expr . '.' $@17 error $@18
  381 expr: '+' expr .
  383     | expr . "<<" expr
  384     | expr . ">>" expr
  385     | expr . "<<<" expr
  386     | expr . ">>>" expr
  387     | expr . '+' expr
  388     | expr . '-' expr
  389     | expr . '*' expr
  390     | expr . '/' expr
  391     | expr . '%' expr
  392     | expr . '<' expr
  393     | expr . '>' expr
  394     | expr . "==" expr
  395     | expr . "!=" expr
  396     | expr . "<=" expr
  397     | expr . ">=" expr
  398     | expr . '&' expr
  399     | expr . '|' expr
  400     | expr . '^' expr
  401     | expr . "&&" expr
  402     | expr . "||" expr
  403     | expr . "^^" expr
  404     | expr . ".." expr
  407     | expr . "++"
  408     | expr . "--"
  410     | expr . '[' expr ']'
  411     | expr . '.' '[' expr ']'
  412     | expr . "?[" expr ']'
  413     | expr . '.' "?[" expr ']'
  414     | expr . "?." "name"
  415     | expr . '.' "?." "name"
  424     | expr . "??" expr
  425     | expr . '?' expr ':' expr
  428     | expr . "is" "type" '<' $@19 type_declaration_no_options '>' $@20
  429     | expr . "is" basic_type_declaration
  430     | expr . "is" "name"
  431     | expr . "as" "name"
  434     | expr . "as" "type" '<' $@21 type_declaration '>' $@22
  435     | expr . "as" basic_type_declaration
  436     | expr . '?' "as" "name"
  439     | expr . '?' "as" "type" '<' $@23 type_declaration '>' $@24
  440     | expr . '?' "as" basic_type_declaration
  448     | expr . "<|" expr
  449     | expr . "|>" expr
  450     | expr . "|>" basic_type_declaration
  461 expr_mtag: expr . '.' "$f" '(' expr ')'
  462          | expr . "?." "$f" '(' expr ')'
  463          | expr . '.' '.' "$f" '(' expr ')'
  464          | expr . '.' "?." "$f" '(' expr ')'
  465          | expr . "as" "$f" '(' expr ')'
  466          | expr . '?' "as" "$f" '(' expr ')'
  467          | expr . "is" "$f" '(' expr ')'

    "is"  shift, and go to state 648
    "as"  shift, and go to state 649
    "++"  shift, and go to state 652
    "--"  shift, and go to state 653
    "->"  shift, and go to state 658
    "?."  shift, and go to state 660
    "?["  shift, and go to state 661
    "<|"  shift, and go to state 662
    "|>"  shift, and go to state 663
    '.'   shift, and go to state 681
    '['   shift, and go to state 682

    $default  reduce using rule 381 (expr)


State 633

  342 expr_method_call: expr . "->" "name" '(' ')'
  343                 | expr . "->" "name" '(' expr_list ')'
  353 expr_field: expr . '.' "name"
  354           | expr . '.' '.' "name"
  355           | expr . '.' "name" '(' ')'
  356           | expr . '.' "name" '(' expr_list ')'
  357           | expr . '.' basic_type_declaration '(' ')'
  358           | expr . '.' basic_type_declaration '(' expr_list ')'
  361           | expr . '.' $@17 error $@18
  383 expr: expr . "<<" expr
  384     | expr . ">>" expr
  385     | expr . "<<<" expr
  386     | expr . ">>>" expr
  387     | expr . '+' expr
  388     | expr . '-' expr
  389     | expr . '*' expr
  390     | expr . '/' expr
  391     | expr . '%' expr
  392     | expr . '<' expr
  393     | expr . '>' expr
  394     | expr . "==" expr
  395     | expr . "!=" expr
  396     | expr . "<=" expr
  397     | expr . ">=" expr
  398     | expr . '&' expr
  399     | expr . '|' expr
  400     | expr . '^' expr
  401     | expr . "&&" expr
  402     | expr . "||" expr
  403     | expr . "^^" expr
  404     | expr . ".." expr
  407     | expr . "++"
  408     | expr . "--"
  410     | expr . '[' expr ']'
  411     | expr . '.' '[' expr ']'
  412     | expr . "?[" expr ']'
  413     | expr . '.' "?[" expr ']'
  414     | expr . "?." "name"
  415     | expr . '.' "?." "name"
  418     | '*' expr .
  424     | expr . "??" expr
  425     | expr . '?' expr ':' expr
  428     | expr . "is" "type" '<' $@19 type_declaration_no_options '>' $@20
  429     | expr . "is" basic_type_declaration
  430     | expr . "is" "name"
  431     | expr . "as" "name"
  434     | expr . "as" "type" '<' $@21 type_declaration '>' $@22
  435     | expr . "as" basic_type_declaration
  436     | expr . '?' "as" "name"
  439     | expr . '?' "as" "type" '<' $@23 type_declaration '>' $@24
  440     | expr . '?' "as" basic_type_declaration
  448     | expr . "<|" expr
  449     | expr . "|>" expr
  450     | expr . "|>" basic_type_declaration
  461 expr_mtag: expr . '.' "$f" '(' expr ')'
  462          | expr . "?." "$f" '(' expr ')'
  463          | expr . '.' '.' "$f" '(' expr ')'
  464          | expr . '.' "?." "$f" '(' expr ')'
  465          | expr . "as" "$f" '(' expr ')'
  466          | expr . '?' "as" "$f" '(' expr ')'
  467          | expr . "is" "$f" '(' expr ')'

    "?."  shift, and go to state 660
    "?["  shift, and go to state 661
    '.'   shift, and go to state 681
    '['   shift, and go to state 682

    $default  reduce using rule 418 (expr)


State 634

  342 expr_method_call: expr . "->" "name" '(' ')'
  343                 | expr . "->" "name" '(' expr_list ')'
  353 expr_field: expr . '.' "name"
  354           | expr . '.' '.' "name"
  355           | expr . '.' "name" '(' ')'
  356           | expr . '.' "name" '(' expr_list ')'
  357           | expr . '.' basic_type_declaration '(' ')'
  358           | expr . '.' basic_type_declaration '(' expr_list ')'
  361           | expr . '.' $@17 error $@18
  380 expr: '~' expr .
  383     | expr . "<<" expr
  384     | expr . ">>" expr
  385     | expr . "<<<" expr
  386     | expr . ">>>" expr
  387     | expr . '+' expr
  388     | expr . '-' expr
  389     | expr . '*' expr
  390     | expr . '/' expr
  391     | expr . '%' expr
  392     | expr . '<' expr
  393     | expr . '>' expr
  394     | expr . "==" expr
  395     | expr . "!=" expr
  396     | expr . "<=" expr
  397     | expr . ">=" expr
  398     | expr . '&' expr
  399     | expr . '|' expr
  400     | expr . '^' expr
  401     | expr . "&&" expr
  402     | expr . "||" expr
  403     | expr . "^^" expr
  404     | expr . ".." expr
  407     | expr . "++"
  408     | expr . "--"
  410     | expr . '[' expr ']'
  411     | expr . '.' '[' expr ']'
  412     | expr . "?[" expr ']'
  413     | expr . '.' "?[" expr ']'
  414     | expr . "?." "name"
  415     | expr . '.' "?." "name"
  424     | expr . "??" expr
  425     | expr . '?' expr ':' expr
  428     | expr . "is" "type" '<' $@19 type_declaration_no_options '>' $@20
  429     | expr . "is" basic_type_declaration
  430     | expr . "is" "name"
  431     | expr . "as" "name"
  434     | expr . "as" "type" '<' $@21 type_declaration '>' $@22
  435     | expr . "as" basic_type_declaration
  436     | expr . '?' "as" "name"
  439     | expr . '?' "as" "type" '<' $@23 type_declaration '>' $@24
  440     | expr . '?' "as" basic_type_declaration
  448     | expr . "<|" expr
  449     | expr . "|>" expr
  450     | expr . "|>" basic_type_declaration
  461 expr_mtag: expr . '.' "$f" '(' expr ')'
  462          | expr . "?." "$f" '(' expr ')'
  463          | expr . '.' '.' "$f" '(' expr ')'
  464          | expr . '.' "?." "$f" '(' expr ')'
  465          | expr . "as" "$f" '(' expr ')'
  466          | expr . '?' "as" "$f" '(' expr ')'
  467          | expr . "is" "$f" '(' expr ')'

    "is"  shift, and go to state 648
    "as"  shift, and go to state 649
    "++"  shift, and go to state 652
    "--"  shift, and go to state 653
    "->"  shift, and go to state 658
    "?."  shift, and go to state 660
    "?["  shift, and go to state 661
    "<|"  shift, and go to state 662
    "|>"  shift, and go to state 663
    '.'   shift, and go to state 681
    '['   shift, and go to state 682

    $default  reduce using rule 380 (expr)


State 635

  342 expr_method_call: expr . "->" "name" '(' ')'
  343                 | expr . "->" "name" '(' expr_list ')'
  353 expr_field: expr . '.' "name"
  354           | expr . '.' '.' "name"
  355           | expr . '.' "name" '(' ')'
  356           | expr . '.' "name" '(' expr_list ')'
  357           | expr . '.' basic_type_declaration '(' ')'
  358           | expr . '.' basic_type_declaration '(' expr_list ')'
  361           | expr . '.' $@17 error $@18
  379 expr: '!' expr .
  383     | expr . "<<" expr
  384     | expr . ">>" expr
  385     | expr . "<<<" expr
  386     | expr . ">>>" expr
  387     | expr . '+' expr
  388     | expr . '-' expr
  389     | expr . '*' expr
  390     | expr . '/' expr
  391     | expr . '%' expr
  392     | expr . '<' expr
  393     | expr . '>' expr
  394     | expr . "==" expr
  395     | expr . "!=" expr
  396     | expr . "<=" expr
  397     | expr . ">=" expr
  398     | expr . '&' expr
  399     | expr . '|' expr
  400     | expr . '^' expr
  401     | expr . "&&" expr
  402     | expr . "||" expr
  403     | expr . "^^" expr
  404     | expr . ".." expr
  407     | expr . "++"
  408     | expr . "--"
  410     | expr . '[' expr ']'
  411     | expr . '.' '[' expr ']'
  412     | expr . "?[" expr ']'
  413     | expr . '.' "?[" expr ']'
  414     | expr . "?." "name"
  415     | expr . '.' "?." "name"
  424     | expr . "??" expr
  425     | expr . '?' expr ':' expr
  428     | expr . "is" "type" '<' $@19 type_declaration_no_options '>' $@20
  429     | expr . "is" basic_type_declaration
  430     | expr . "is" "name"
  431     | expr . "as" "name"
  434     | expr . "as" "type" '<' $@21 type_declaration '>' $@22
  435     | expr . "as" basic_type_declaration
  436     | expr . '?' "as" "name"
  439     | expr . '?' "as" "type" '<' $@23 type_declaration '>' $@24
  440     | expr . '?' "as" basic_type_declaration
  448     | expr . "<|" expr
  449     | expr . "|>" expr
  450     | expr . "|>" basic_type_declaration
  461 expr_mtag: expr . '.' "$f" '(' expr ')'
  462          | expr . "?." "$f" '(' expr ')'
  463          | expr . '.' '.' "$f" '(' expr ')'
  464          | expr . '.' "?." "$f" '(' expr ')'
  465          | expr . "as" "$f" '(' expr ')'
  466          | expr . '?' "as" "$f" '(' expr ')'
  467          | expr . "is" "$f" '(' expr ')'

    "is"  shift, and go to state 648
    "as"  shift, and go to state 649
    "++"  shift, and go to state 652
    "--"  shift, and go to state 653
    "->"  shift, and go to state 658
    "?."  shift, and go to state 660
    "?["  shift, and go to state 661
    "<|"  shift, and go to state 662
    "|>"  shift, and go to state 663
    '.'   shift, and go to state 681
    '['   shift, and go to state 682

    $default  reduce using rule 379 (expr)


State 636

  790 array_comprehension: '[' "for" . '(' variable_name_with_pos_list "in" expr_list ')' "end of expression" expr array_comprehension_where ']'

    '('  shift, and go to state 828


State 637

  791 array_comprehension: '[' "iterator" . "for" '(' variable_name_with_pos_list "in" expr_list ')' "end of expression" expr array_comprehension_where ']'

    "for"  shift, and go to state 829


State 638

  295 expr_list: expr_list . ',' expr
  762 make_dim_decl: '[' expr_list . optional_comma ']'

    ','  shift, and go to state 830

    $default  reduce using rule 788 (optional_comma)

    optional_comma  go to state 831


State 639

  294 expr_list: expr .
  342 expr_method_call: expr . "->" "name" '(' ')'
  343                 | expr . "->" "name" '(' expr_list ')'
  353 expr_field: expr . '.' "name"
  354           | expr . '.' '.' "name"
  355           | expr . '.' "name" '(' ')'
  356           | expr . '.' "name" '(' expr_list ')'
  357           | expr . '.' basic_type_declaration '(' ')'
  358           | expr . '.' basic_type_declaration '(' expr_list ')'
  361           | expr . '.' $@17 error $@18
  383 expr: expr . "<<" expr
  384     | expr . ">>" expr
  385     | expr . "<<<" expr
  386     | expr . ">>>" expr
  387     | expr . '+' expr
  388     | expr . '-' expr
  389     | expr . '*' expr
  390     | expr . '/' expr
  391     | expr . '%' expr
  392     | expr . '<' expr
  393     | expr . '>' expr
  394     | expr . "==" expr
  395     | expr . "!=" expr
  396     | expr . "<=" expr
  397     | expr . ">=" expr
  398     | expr . '&' expr
  399     | expr . '|' expr
  400     | expr . '^' expr
  401     | expr . "&&" expr
  402     | expr . "||" expr
  403     | expr . "^^" expr
  404     | expr . ".." expr
  407     | expr . "++"
  408     | expr . "--"
  410     | expr . '[' expr ']'
  411     | expr . '.' '[' expr ']'
  412     | expr . "?[" expr ']'
  413     | expr . '.' "?[" expr ']'
  414     | expr . "?." "name"
  415     | expr . '.' "?." "name"
  424     | expr . "??" expr
  425     | expr . '?' expr ':' expr
  428     | expr . "is" "type" '<' $@19 type_declaration_no_options '>' $@20
  429     | expr . "is" basic_type_declaration
  430     | expr . "is" "name"
  431     | expr . "as" "name"
  434     | expr . "as" "type" '<' $@21 type_declaration '>' $@22
  435     | expr . "as" basic_type_declaration
  436     | expr . '?' "as" "name"
  439     | expr . '?' "as" "type" '<' $@23 type_declaration '>' $@24
  440     | expr . '?' "as" basic_type_declaration
  448     | expr . "<|" expr
  449     | expr . "|>" expr
  450     | expr . "|>" basic_type_declaration
  461 expr_mtag: expr . '.' "$f" '(' expr ')'
  462          | expr . "?." "$f" '(' expr ')'
  463          | expr . '.' '.' "$f" '(' expr ')'
  464          | expr . '.' "?." "$f" '(' expr ')'
  465          | expr . "as" "$f" '(' expr ')'
  466          | expr . '?' "as" "$f" '(' expr ')'
  467          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 648
    "as"   shift, and go to state 649
    "<<"   shift, and go to state 650
    ">>"   shift, and go to state 651
    "++"   shift, and go to state 652
    "--"   shift, and go to state 653
    "<="   shift, and go to state 654
    ">="   shift, and go to state 655
    "=="   shift, and go to state 656
    "!="   shift, and go to state 657
    "->"   shift, and go to state 658
    "??"   shift, and go to state 659
    "?."   shift, and go to state 660
    "?["   shift, and go to state 661
    "<|"   shift, and go to state 662
    "|>"   shift, and go to state 663
    "<<<"  shift, and go to state 664
    ">>>"  shift, and go to state 665
    "&&"   shift, and go to state 666
    "||"   shift, and go to state 667
    "^^"   shift, and go to state 668
    ".."   shift, and go to state 669
    '?'    shift, and go to state 670
    '|'    shift, and go to state 671
    '^'    shift, and go to state 672
    '&'    shift, and go to state 673
    '<'    shift, and go to state 674
    '>'    shift, and go to state 675
    '-'    shift, and go to state 676
    '+'    shift, and go to state 677
    '*'    shift, and go to state 678
    '/'    shift, and go to state 679
    '%'    shift, and go to state 680
    '.'    shift, and go to state 681
    '['    shift, and go to state 682

    $default  reduce using rule 294 (expr_list)


State 640

  295 expr_list: expr_list . ',' expr
  409 expr: '(' expr_list . optional_comma ')'

    ','  shift, and go to state 830

    $default  reduce using rule 788 (optional_comma)

    optional_comma  go to state 832


State 641

  301 block_or_lambda: '@' '@' .
  346 func_addr_expr: '@' '@' . func_addr_name
  349               | '@' '@' . '<' $@13 type_declaration_no_options '>' $@14 func_addr_name
  352               | '@' '@' . '<' $@15 optional_function_argument_list optional_function_type '>' $@16 func_addr_name
  468 expr_mtag: '@' '@' . "$c" '(' expr ')'

    "::"    shift, and go to state 55
    "$i"    shift, and go to state 833
    "$c"    shift, and go to state 834
    "name"  shift, and go to state 56
    '<'     shift, and go to state 835

    $default  reduce using rule 301 (block_or_lambda)

    name_in_namespace  go to state 836
    func_addr_name     go to state 837


State 642

  340 expr_named_call: name_in_namespace '(' . '[' make_struct_fields ']' ')'
  341                | name_in_namespace '(' . expr_list ',' '[' make_struct_fields ']' ')'
  362 expr_call: name_in_namespace '(' . ')'
  363          | name_in_namespace '(' . "uninitialized" ')'
  364          | name_in_namespace '(' . make_struct_single ')'
  365          | name_in_namespace '(' . "uninitialized" make_struct_single ')'
  366          | name_in_namespace '(' . expr_list ')'

    "struct"                          shift, and go to state 409
    "class"                           shift, and go to state 410
    "true"                            shift, and go to state 411
    "false"                           shift, and go to state 412
    "new"                             shift, and go to state 413
    "typeinfo"                        shift, and go to state 414
    "type"                            shift, and go to state 415
    "array"                           shift, and go to state 416
    "null"                            shift, and go to state 417
    "table"                           shift, and go to state 418
    "deref"                           shift, and go to state 419
    "cast"                            shift, and go to state 420
    "upcast"                          shift, and go to state 421
    "addr"                            shift, and go to state 422
    "reinterpret"                     shift, and go to state 423
    "unsafe"                          shift, and go to state 424
    "fixed_array"                     shift, and go to state 425
    "default"                         shift, and go to state 426
    "uninitialized"                   shift, and go to state 838
    "bool"                            shift, and go to state 225
    "void"                            shift, and go to state 226
    "string"                          shift, and go to state 227
    "int"                             shift, and go to state 229
    "int2"                            shift, and go to state 230
    "int3"                            shift, and go to state 231
    "int4"                            shift, and go to state 232
    "uint"                            shift, and go to state 233
    "bitfield"                        shift, and go to state 427
    "uint2"                           shift, and go to state 235
    "uint3"                           shift, and go to state 236
    "uint4"                           shift, and go to state 237
    "float"                           shift, and go to state 238
    "float2"                          shift, and go to state 239
    "float3"                          shift, and go to state 240
    "float4"                          shift, and go to state 241
    "range"                           shift, and go to state 242
    "urange"                          shift, and go to state 243
    "range64"                         shift, and go to state 244
    "urange64"                        shift, and go to state 245
    "int64"                           shift, and go to state 247
    "uint64"                          shift, and go to state 248
    "double"                          shift, and go to state 249
    "int8"                            shift, and go to state 252
    "uint8"                           shift, and go to state 253
    "int16"                           shift, and go to state 254
    "uint16"                          shift, and go to state 255
    "tuple"                           shift, and go to state 428
    "variant"                         shift, and go to state 429
    "generator"                       shift, and go to state 430
    "++"                              shift, and go to state 431
    "--"                              shift, and go to state 432
    "::"                              shift, and go to state 55
    "$$"                              shift, and go to state 433
    "$i"                              shift, and go to state 434
    "$v"                              shift, and go to state 435
    "$b"                              shift, and go to state 436
    "$a"                              shift, and go to state 437
    "$c"                              shift, and go to state 438
    "$f"                              shift, and go to state 839
    "..."                             shift, and go to state 439
    "integer constant"                shift, and go to state 440
    "long integer constant"           shift, and go to state 441
    "unsigned integer constant"       shift, and go to state 442
    "unsigned long integer constant"  shift, and go to state 443
    "unsigned int8 constant"          shift, and go to state 444
    "floating point constant"         shift, and go to state 445
    "double constant"                 shift, and go to state 446
    "name"                            shift, and go to state 840
    "start of the string"             shift, and go to state 447
    "begin of code block"             shift, and go to state 448
    '-'                               shift, and go to state 449
    '+'                               shift, and go to state 450
    '*'                               shift, and go to state 451
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 452
    '!'                               shift, and go to state 453
    '['                               shift, and go to state 841
    '('                               shift, and go to state 455
    ')'                               shift, and go to state 842
    '$'                               shift, and go to state 456
    '@'                               shift, and go to state 457

    string_builder          go to state 458
    expr_reader             go to state 459
    expr_call_pipe          go to state 460
    name_in_namespace       go to state 461
    expr_new                go to state 462
    expr_cast               go to state 463
    expr_type_decl          go to state 464
    expr_type_info          go to state 465
    expr_list               go to state 843
    block_or_lambda         go to state 466
    expr_full_block         go to state 467
    expr_numeric_const      go to state 468
    expr_named_call         go to state 469
    expr_method_call        go to state 470
    func_addr_expr          go to state 471
    expr_field              go to state 472
    expr_call               go to state 473
    expr                    go to state 639
    expr_mtag               go to state 475
    basic_type_declaration  go to state 476
    make_decl               go to state 477
    make_struct_fields      go to state 844
    make_struct_single      go to state 845
    make_struct_decl        go to state 478
    make_tuple_call         go to state 479
    make_dim_decl           go to state 480
    make_table_decl         go to state 481
    array_comprehension     go to state 482


State 643

  311 expr_full_block: block_or_lambda optional_annotation_list . optional_capture_list optional_function_argument_list optional_function_type block_or_simple_block

    "capture"  shift, and go to state 846

    $default  reduce using rule 309 (optional_capture_list)

    optional_capture_list  go to state 847


State 644

  313 expr_full_block_assumed_piped: "begin of code block" . expressions "end of code block"

    $default  reduce using rule 233 (expressions)

    expressions  go to state 848


State 645

  300 block_or_lambda: '@' .
  301                | '@' . '@'

    '@'  shift, and go to state 849

    $default  reduce using rule 300 (block_or_lambda)


State 646

  312 expr_full_block_assumed_piped: block_or_lambda . optional_annotation_list optional_capture_list optional_function_argument_list optional_function_type expression_block

    '['  shift, and go to state 15

    $default  reduce using rule 113 (optional_annotation_list)

    optional_annotation_list  go to state 850


State 647

  214 expr_call_pipe: expr_call expr_full_block_assumed_piped .

    $default  reduce using rule 214 (expr_call_pipe)


State 648

  428 expr: expr "is" . "type" '<' $@19 type_declaration_no_options '>' $@20
  429     | expr "is" . basic_type_declaration
  430     | expr "is" . "name"
  467 expr_mtag: expr "is" . "$f" '(' expr ')'

    "type"      shift, and go to state 851
    "bool"      shift, and go to state 225
    "void"      shift, and go to state 226
    "string"    shift, and go to state 227
    "int"       shift, and go to state 229
    "int2"      shift, and go to state 230
    "int3"      shift, and go to state 231
    "int4"      shift, and go to state 232
    "uint"      shift, and go to state 233
    "bitfield"  shift, and go to state 427
    "uint2"     shift, and go to state 235
    "uint3"     shift, and go to state 236
    "uint4"     shift, and go to state 237
    "float"     shift, and go to state 238
    "float2"    shift, and go to state 239
    "float3"    shift, and go to state 240
    "float4"    shift, and go to state 241
    "range"     shift, and go to state 242
    "urange"    shift, and go to state 243
    "range64"   shift, and go to state 244
    "urange64"  shift, and go to state 245
    "int64"     shift, and go to state 247
    "uint64"    shift, and go to state 248
    "double"    shift, and go to state 249
    "int8"      shift, and go to state 252
    "uint8"     shift, and go to state 253
    "int16"     shift, and go to state 254
    "uint16"    shift, and go to state 255
    "$f"        shift, and go to state 852
    "name"      shift, and go to state 853

    basic_type_declaration  go to state 854


State 649

  431 expr: expr "as" . "name"
  434     | expr "as" . "type" '<' $@21 type_declaration '>' $@22
  435     | expr "as" . basic_type_declaration
  465 expr_mtag: expr "as" . "$f" '(' expr ')'

    "type"      shift, and go to state 855
    "bool"      shift, and go to state 225
    "void"      shift, and go to state 226
    "string"    shift, and go to state 227
    "int"       shift, and go to state 229
    "int2"      shift, and go to state 230
    "int3"      shift, and go to state 231
    "int4"      shift, and go to state 232
    "uint"      shift, and go to state 233
    "bitfield"  shift, and go to state 427
    "uint2"     shift, and go to state 235
    "uint3"     shift, and go to state 236
    "uint4"     shift, and go to state 237
    "float"     shift, and go to state 238
    "float2"    shift, and go to state 239
    "float3"    shift, and go to state 240
    "float4"    shift, and go to state 241
    "range"     shift, and go to state 242
    "urange"    shift, and go to state 243
    "range64"   shift, and go to state 244
    "urange64"  shift, and go to state 245
    "int64"     shift, and go to state 247
    "uint64"    shift, and go to state 248
    "double"    shift, and go to state 249
    "int8"      shift, and go to state 252
    "uint8"     shift, and go to state 253
    "int16"     shift, and go to state 254
    "uint16"    shift, and go to state 255
    "$f"        shift, and go to state 856
    "name"      shift, and go to state 857

    basic_type_declaration  go to state 858


State 650

  383 expr: expr "<<" . expr

    "struct"                          shift, and go to state 409
    "class"                           shift, and go to state 410
    "true"                            shift, and go to state 411
    "false"                           shift, and go to state 412
    "new"                             shift, and go to state 413
    "typeinfo"                        shift, and go to state 414
    "type"                            shift, and go to state 415
    "array"                           shift, and go to state 416
    "null"                            shift, and go to state 417
    "table"                           shift, and go to state 418
    "deref"                           shift, and go to state 419
    "cast"                            shift, and go to state 420
    "upcast"                          shift, and go to state 421
    "addr"                            shift, and go to state 422
    "reinterpret"                     shift, and go to state 423
    "unsafe"                          shift, and go to state 424
    "fixed_array"                     shift, and go to state 425
    "default"                         shift, and go to state 426
    "bool"                            shift, and go to state 225
    "void"                            shift, and go to state 226
    "string"                          shift, and go to state 227
    "int"                             shift, and go to state 229
    "int2"                            shift, and go to state 230
    "int3"                            shift, and go to state 231
    "int4"                            shift, and go to state 232
    "uint"                            shift, and go to state 233
    "bitfield"                        shift, and go to state 427
    "uint2"                           shift, and go to state 235
    "uint3"                           shift, and go to state 236
    "uint4"                           shift, and go to state 237
    "float"                           shift, and go to state 238
    "float2"                          shift, and go to state 239
    "float3"                          shift, and go to state 240
    "float4"                          shift, and go to state 241
    "range"                           shift, and go to state 242
    "urange"                          shift, and go to state 243
    "range64"                         shift, and go to state 244
    "urange64"                        shift, and go to state 245
    "int64"                           shift, and go to state 247
    "uint64"                          shift, and go to state 248
    "double"                          shift, and go to state 249
    "int8"                            shift, and go to state 252
    "uint8"                           shift, and go to state 253
    "int16"                           shift, and go to state 254
    "uint16"                          shift, and go to state 255
    "tuple"                           shift, and go to state 428
    "variant"                         shift, and go to state 429
    "generator"                       shift, and go to state 430
    "++"                              shift, and go to state 431
    "--"                              shift, and go to state 432
    "::"                              shift, and go to state 55
    "$$"                              shift, and go to state 433
    "$i"                              shift, and go to state 434
    "$v"                              shift, and go to state 435
    "$b"                              shift, and go to state 436
    "$a"                              shift, and go to state 437
    "$c"                              shift, and go to state 438
    "..."                             shift, and go to state 439
    "integer constant"                shift, and go to state 440
    "long integer constant"           shift, and go to state 441
    "unsigned integer constant"       shift, and go to state 442
    "unsigned long integer constant"  shift, and go to state 443
    "unsigned int8 constant"          shift, and go to state 444
    "floating point constant"         shift, and go to state 445
    "double constant"                 shift, and go to state 446
    "name"                            shift, and go to state 56
    "start of the string"             shift, and go to state 447
    "begin of code block"             shift, and go to state 448
    '-'                               shift, and go to state 449
    '+'                               shift, and go to state 450
    '*'                               shift, and go to state 451
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 452
    '!'                               shift, and go to state 453
    '['                               shift, and go to state 454
    '('                               shift, and go to state 455
    '$'                               shift, and go to state 456
    '@'                               shift, and go to state 457

    string_builder          go to state 458
    expr_reader             go to state 459
    expr_call_pipe          go to state 460
    name_in_namespace       go to state 461
    expr_new                go to state 462
    expr_cast               go to state 463
    expr_type_decl          go to state 464
    expr_type_info          go to state 465
    block_or_lambda         go to state 466
    expr_full_block         go to state 467
    expr_numeric_const      go to state 468
    expr_named_call         go to state 469
    expr_method_call        go to state 470
    func_addr_expr          go to state 471
    expr_field              go to state 472
    expr_call               go to state 473
    expr                    go to state 859
    expr_mtag               go to state 475
    basic_type_declaration  go to state 476
    make_decl               go to state 477
    make_struct_decl        go to state 478
    make_tuple_call         go to state 479
    make_dim_decl           go to state 480
    make_table_decl         go to state 481
    array_comprehension     go to state 482


State 651

  384 expr: expr ">>" . expr

    "struct"                          shift, and go to state 409
    "class"                           shift, and go to state 410
    "true"                            shift, and go to state 411
    "false"                           shift, and go to state 412
    "new"                             shift, and go to state 413
    "typeinfo"                        shift, and go to state 414
    "type"                            shift, and go to state 415
    "array"                           shift, and go to state 416
    "null"                            shift, and go to state 417
    "table"                           shift, and go to state 418
    "deref"                           shift, and go to state 419
    "cast"                            shift, and go to state 420
    "upcast"                          shift, and go to state 421
    "addr"                            shift, and go to state 422
    "reinterpret"                     shift, and go to state 423
    "unsafe"                          shift, and go to state 424
    "fixed_array"                     shift, and go to state 425
    "default"                         shift, and go to state 426
    "bool"                            shift, and go to state 225
    "void"                            shift, and go to state 226
    "string"                          shift, and go to state 227
    "int"                             shift, and go to state 229
    "int2"                            shift, and go to state 230
    "int3"                            shift, and go to state 231
    "int4"                            shift, and go to state 232
    "uint"                            shift, and go to state 233
    "bitfield"                        shift, and go to state 427
    "uint2"                           shift, and go to state 235
    "uint3"                           shift, and go to state 236
    "uint4"                           shift, and go to state 237
    "float"                           shift, and go to state 238
    "float2"                          shift, and go to state 239
    "float3"                          shift, and go to state 240
    "float4"                          shift, and go to state 241
    "range"                           shift, and go to state 242
    "urange"                          shift, and go to state 243
    "range64"                         shift, and go to state 244
    "urange64"                        shift, and go to state 245
    "int64"                           shift, and go to state 247
    "uint64"                          shift, and go to state 248
    "double"                          shift, and go to state 249
    "int8"                            shift, and go to state 252
    "uint8"                           shift, and go to state 253
    "int16"                           shift, and go to state 254
    "uint16"                          shift, and go to state 255
    "tuple"                           shift, and go to state 428
    "variant"                         shift, and go to state 429
    "generator"                       shift, and go to state 430
    "++"                              shift, and go to state 431
    "--"                              shift, and go to state 432
    "::"                              shift, and go to state 55
    "$$"                              shift, and go to state 433
    "$i"                              shift, and go to state 434
    "$v"                              shift, and go to state 435
    "$b"                              shift, and go to state 436
    "$a"                              shift, and go to state 437
    "$c"                              shift, and go to state 438
    "..."                             shift, and go to state 439
    "integer constant"                shift, and go to state 440
    "long integer constant"           shift, and go to state 441
    "unsigned integer constant"       shift, and go to state 442
    "unsigned long integer constant"  shift, and go to state 443
    "unsigned int8 constant"          shift, and go to state 444
    "floating point constant"         shift, and go to state 445
    "double constant"                 shift, and go to state 446
    "name"                            shift, and go to state 56
    "start of the string"             shift, and go to state 447
    "begin of code block"             shift, and go to state 448
    '-'                               shift, and go to state 449
    '+'                               shift, and go to state 450
    '*'                               shift, and go to state 451
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 452
    '!'                               shift, and go to state 453
    '['                               shift, and go to state 454
    '('                               shift, and go to state 455
    '$'                               shift, and go to state 456
    '@'                               shift, and go to state 457

    string_builder          go to state 458
    expr_reader             go to state 459
    expr_call_pipe          go to state 460
    name_in_namespace       go to state 461
    expr_new                go to state 462
    expr_cast               go to state 463
    expr_type_decl          go to state 464
    expr_type_info          go to state 465
    block_or_lambda         go to state 466
    expr_full_block         go to state 467
    expr_numeric_const      go to state 468
    expr_named_call         go to state 469
    expr_method_call        go to state 470
    func_addr_expr          go to state 471
    expr_field              go to state 472
    expr_call               go to state 473
    expr                    go to state 860
    expr_mtag               go to state 475
    basic_type_declaration  go to state 476
    make_decl               go to state 477
    make_struct_decl        go to state 478
    make_tuple_call         go to state 479
    make_dim_decl           go to state 480
    make_table_decl         go to state 481
    array_comprehension     go to state 482


State 652

  407 expr: expr "++" .

    $default  reduce using rule 407 (expr)


State 653

  408 expr: expr "--" .

    $default  reduce using rule 408 (expr)


State 654

  396 expr: expr "<=" . expr

    "struct"                          shift, and go to state 409
    "class"                           shift, and go to state 410
    "true"                            shift, and go to state 411
    "false"                           shift, and go to state 412
    "new"                             shift, and go to state 413
    "typeinfo"                        shift, and go to state 414
    "type"                            shift, and go to state 415
    "array"                           shift, and go to state 416
    "null"                            shift, and go to state 417
    "table"                           shift, and go to state 418
    "deref"                           shift, and go to state 419
    "cast"                            shift, and go to state 420
    "upcast"                          shift, and go to state 421
    "addr"                            shift, and go to state 422
    "reinterpret"                     shift, and go to state 423
    "unsafe"                          shift, and go to state 424
    "fixed_array"                     shift, and go to state 425
    "default"                         shift, and go to state 426
    "bool"                            shift, and go to state 225
    "void"                            shift, and go to state 226
    "string"                          shift, and go to state 227
    "int"                             shift, and go to state 229
    "int2"                            shift, and go to state 230
    "int3"                            shift, and go to state 231
    "int4"                            shift, and go to state 232
    "uint"                            shift, and go to state 233
    "bitfield"                        shift, and go to state 427
    "uint2"                           shift, and go to state 235
    "uint3"                           shift, and go to state 236
    "uint4"                           shift, and go to state 237
    "float"                           shift, and go to state 238
    "float2"                          shift, and go to state 239
    "float3"                          shift, and go to state 240
    "float4"                          shift, and go to state 241
    "range"                           shift, and go to state 242
    "urange"                          shift, and go to state 243
    "range64"                         shift, and go to state 244
    "urange64"                        shift, and go to state 245
    "int64"                           shift, and go to state 247
    "uint64"                          shift, and go to state 248
    "double"                          shift, and go to state 249
    "int8"                            shift, and go to state 252
    "uint8"                           shift, and go to state 253
    "int16"                           shift, and go to state 254
    "uint16"                          shift, and go to state 255
    "tuple"                           shift, and go to state 428
    "variant"                         shift, and go to state 429
    "generator"                       shift, and go to state 430
    "++"                              shift, and go to state 431
    "--"                              shift, and go to state 432
    "::"                              shift, and go to state 55
    "$$"                              shift, and go to state 433
    "$i"                              shift, and go to state 434
    "$v"                              shift, and go to state 435
    "$b"                              shift, and go to state 436
    "$a"                              shift, and go to state 437
    "$c"                              shift, and go to state 438
    "..."                             shift, and go to state 439
    "integer constant"                shift, and go to state 440
    "long integer constant"           shift, and go to state 441
    "unsigned integer constant"       shift, and go to state 442
    "unsigned long integer constant"  shift, and go to state 443
    "unsigned int8 constant"          shift, and go to state 444
    "floating point constant"         shift, and go to state 445
    "double constant"                 shift, and go to state 446
    "name"                            shift, and go to state 56
    "start of the string"             shift, and go to state 447
    "begin of code block"             shift, and go to state 448
    '-'                               shift, and go to state 449
    '+'                               shift, and go to state 450
    '*'                               shift, and go to state 451
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 452
    '!'                               shift, and go to state 453
    '['                               shift, and go to state 454
    '('                               shift, and go to state 455
    '$'                               shift, and go to state 456
    '@'                               shift, and go to state 457

    string_builder          go to state 458
    expr_reader             go to state 459
    expr_call_pipe          go to state 460
    name_in_namespace       go to state 461
    expr_new                go to state 462
    expr_cast               go to state 463
    expr_type_decl          go to state 464
    expr_type_info          go to state 465
    block_or_lambda         go to state 466
    expr_full_block         go to state 467
    expr_numeric_const      go to state 468
    expr_named_call         go to state 469
    expr_method_call        go to state 470
    func_addr_expr          go to state 471
    expr_field              go to state 472
    expr_call               go to state 473
    expr                    go to state 861
    expr_mtag               go to state 475
    basic_type_declaration  go to state 476
    make_decl               go to state 477
    make_struct_decl        go to state 478
    make_tuple_call         go to state 479
    make_dim_decl           go to state 480
    make_table_decl         go to state 481
    array_comprehension     go to state 482


State 655

  397 expr: expr ">=" . expr

    "struct"                          shift, and go to state 409
    "class"                           shift, and go to state 410
    "true"                            shift, and go to state 411
    "false"                           shift, and go to state 412
    "new"                             shift, and go to state 413
    "typeinfo"                        shift, and go to state 414
    "type"                            shift, and go to state 415
    "array"                           shift, and go to state 416
    "null"                            shift, and go to state 417
    "table"                           shift, and go to state 418
    "deref"                           shift, and go to state 419
    "cast"                            shift, and go to state 420
    "upcast"                          shift, and go to state 421
    "addr"                            shift, and go to state 422
    "reinterpret"                     shift, and go to state 423
    "unsafe"                          shift, and go to state 424
    "fixed_array"                     shift, and go to state 425
    "default"                         shift, and go to state 426
    "bool"                            shift, and go to state 225
    "void"                            shift, and go to state 226
    "string"                          shift, and go to state 227
    "int"                             shift, and go to state 229
    "int2"                            shift, and go to state 230
    "int3"                            shift, and go to state 231
    "int4"                            shift, and go to state 232
    "uint"                            shift, and go to state 233
    "bitfield"                        shift, and go to state 427
    "uint2"                           shift, and go to state 235
    "uint3"                           shift, and go to state 236
    "uint4"                           shift, and go to state 237
    "float"                           shift, and go to state 238
    "float2"                          shift, and go to state 239
    "float3"                          shift, and go to state 240
    "float4"                          shift, and go to state 241
    "range"                           shift, and go to state 242
    "urange"                          shift, and go to state 243
    "range64"                         shift, and go to state 244
    "urange64"                        shift, and go to state 245
    "int64"                           shift, and go to state 247
    "uint64"                          shift, and go to state 248
    "double"                          shift, and go to state 249
    "int8"                            shift, and go to state 252
    "uint8"                           shift, and go to state 253
    "int16"                           shift, and go to state 254
    "uint16"                          shift, and go to state 255
    "tuple"                           shift, and go to state 428
    "variant"                         shift, and go to state 429
    "generator"                       shift, and go to state 430
    "++"                              shift, and go to state 431
    "--"                              shift, and go to state 432
    "::"                              shift, and go to state 55
    "$$"                              shift, and go to state 433
    "$i"                              shift, and go to state 434
    "$v"                              shift, and go to state 435
    "$b"                              shift, and go to state 436
    "$a"                              shift, and go to state 437
    "$c"                              shift, and go to state 438
    "..."                             shift, and go to state 439
    "integer constant"                shift, and go to state 440
    "long integer constant"           shift, and go to state 441
    "unsigned integer constant"       shift, and go to state 442
    "unsigned long integer constant"  shift, and go to state 443
    "unsigned int8 constant"          shift, and go to state 444
    "floating point constant"         shift, and go to state 445
    "double constant"                 shift, and go to state 446
    "name"                            shift, and go to state 56
    "start of the string"             shift, and go to state 447
    "begin of code block"             shift, and go to state 448
    '-'                               shift, and go to state 449
    '+'                               shift, and go to state 450
    '*'                               shift, and go to state 451
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 452
    '!'                               shift, and go to state 453
    '['                               shift, and go to state 454
    '('                               shift, and go to state 455
    '$'                               shift, and go to state 456
    '@'                               shift, and go to state 457

    string_builder          go to state 458
    expr_reader             go to state 459
    expr_call_pipe          go to state 460
    name_in_namespace       go to state 461
    expr_new                go to state 462
    expr_cast               go to state 463
    expr_type_decl          go to state 464
    expr_type_info          go to state 465
    block_or_lambda         go to state 466
    expr_full_block         go to state 467
    expr_numeric_const      go to state 468
    expr_named_call         go to state 469
    expr_method_call        go to state 470
    func_addr_expr          go to state 471
    expr_field              go to state 472
    expr_call               go to state 473
    expr                    go to state 862
    expr_mtag               go to state 475
    basic_type_declaration  go to state 476
    make_decl               go to state 477
    make_struct_decl        go to state 478
    make_tuple_call         go to state 479
    make_dim_decl           go to state 480
    make_table_decl         go to state 481
    array_comprehension     go to state 482


State 656

  394 expr: expr "==" . expr

    "struct"                          shift, and go to state 409
    "class"                           shift, and go to state 410
    "true"                            shift, and go to state 411
    "false"                           shift, and go to state 412
    "new"                             shift, and go to state 413
    "typeinfo"                        shift, and go to state 414
    "type"                            shift, and go to state 415
    "array"                           shift, and go to state 416
    "null"                            shift, and go to state 417
    "table"                           shift, and go to state 418
    "deref"                           shift, and go to state 419
    "cast"                            shift, and go to state 420
    "upcast"                          shift, and go to state 421
    "addr"                            shift, and go to state 422
    "reinterpret"                     shift, and go to state 423
    "unsafe"                          shift, and go to state 424
    "fixed_array"                     shift, and go to state 425
    "default"                         shift, and go to state 426
    "bool"                            shift, and go to state 225
    "void"                            shift, and go to state 226
    "string"                          shift, and go to state 227
    "int"                             shift, and go to state 229
    "int2"                            shift, and go to state 230
    "int3"                            shift, and go to state 231
    "int4"                            shift, and go to state 232
    "uint"                            shift, and go to state 233
    "bitfield"                        shift, and go to state 427
    "uint2"                           shift, and go to state 235
    "uint3"                           shift, and go to state 236
    "uint4"                           shift, and go to state 237
    "float"                           shift, and go to state 238
    "float2"                          shift, and go to state 239
    "float3"                          shift, and go to state 240
    "float4"                          shift, and go to state 241
    "range"                           shift, and go to state 242
    "urange"                          shift, and go to state 243
    "range64"                         shift, and go to state 244
    "urange64"                        shift, and go to state 245
    "int64"                           shift, and go to state 247
    "uint64"                          shift, and go to state 248
    "double"                          shift, and go to state 249
    "int8"                            shift, and go to state 252
    "uint8"                           shift, and go to state 253
    "int16"                           shift, and go to state 254
    "uint16"                          shift, and go to state 255
    "tuple"                           shift, and go to state 428
    "variant"                         shift, and go to state 429
    "generator"                       shift, and go to state 430
    "++"                              shift, and go to state 431
    "--"                              shift, and go to state 432
    "::"                              shift, and go to state 55
    "$$"                              shift, and go to state 433
    "$i"                              shift, and go to state 434
    "$v"                              shift, and go to state 435
    "$b"                              shift, and go to state 436
    "$a"                              shift, and go to state 437
    "$c"                              shift, and go to state 438
    "..."                             shift, and go to state 439
    "integer constant"                shift, and go to state 440
    "long integer constant"           shift, and go to state 441
    "unsigned integer constant"       shift, and go to state 442
    "unsigned long integer constant"  shift, and go to state 443
    "unsigned int8 constant"          shift, and go to state 444
    "floating point constant"         shift, and go to state 445
    "double constant"                 shift, and go to state 446
    "name"                            shift, and go to state 56
    "start of the string"             shift, and go to state 447
    "begin of code block"             shift, and go to state 448
    '-'                               shift, and go to state 449
    '+'                               shift, and go to state 450
    '*'                               shift, and go to state 451
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 452
    '!'                               shift, and go to state 453
    '['                               shift, and go to state 454
    '('                               shift, and go to state 455
    '$'                               shift, and go to state 456
    '@'                               shift, and go to state 457

    string_builder          go to state 458
    expr_reader             go to state 459
    expr_call_pipe          go to state 460
    name_in_namespace       go to state 461
    expr_new                go to state 462
    expr_cast               go to state 463
    expr_type_decl          go to state 464
    expr_type_info          go to state 465
    block_or_lambda         go to state 466
    expr_full_block         go to state 467
    expr_numeric_const      go to state 468
    expr_named_call         go to state 469
    expr_method_call        go to state 470
    func_addr_expr          go to state 471
    expr_field              go to state 472
    expr_call               go to state 473
    expr                    go to state 863
    expr_mtag               go to state 475
    basic_type_declaration  go to state 476
    make_decl               go to state 477
    make_struct_decl        go to state 478
    make_tuple_call         go to state 479
    make_dim_decl           go to state 480
    make_table_decl         go to state 481
    array_comprehension     go to state 482


State 657

  395 expr: expr "!=" . expr

    "struct"                          shift, and go to state 409
    "class"                           shift, and go to state 410
    "true"                            shift, and go to state 411
    "false"                           shift, and go to state 412
    "new"                             shift, and go to state 413
    "typeinfo"                        shift, and go to state 414
    "type"                            shift, and go to state 415
    "array"                           shift, and go to state 416
    "null"                            shift, and go to state 417
    "table"                           shift, and go to state 418
    "deref"                           shift, and go to state 419
    "cast"                            shift, and go to state 420
    "upcast"                          shift, and go to state 421
    "addr"                            shift, and go to state 422
    "reinterpret"                     shift, and go to state 423
    "unsafe"                          shift, and go to state 424
    "fixed_array"                     shift, and go to state 425
    "default"                         shift, and go to state 426
    "bool"                            shift, and go to state 225
    "void"                            shift, and go to state 226
    "string"                          shift, and go to state 227
    "int"                             shift, and go to state 229
    "int2"                            shift, and go to state 230
    "int3"                            shift, and go to state 231
    "int4"                            shift, and go to state 232
    "uint"                            shift, and go to state 233
    "bitfield"                        shift, and go to state 427
    "uint2"                           shift, and go to state 235
    "uint3"                           shift, and go to state 236
    "uint4"                           shift, and go to state 237
    "float"                           shift, and go to state 238
    "float2"                          shift, and go to state 239
    "float3"                          shift, and go to state 240
    "float4"                          shift, and go to state 241
    "range"                           shift, and go to state 242
    "urange"                          shift, and go to state 243
    "range64"                         shift, and go to state 244
    "urange64"                        shift, and go to state 245
    "int64"                           shift, and go to state 247
    "uint64"                          shift, and go to state 248
    "double"                          shift, and go to state 249
    "int8"                            shift, and go to state 252
    "uint8"                           shift, and go to state 253
    "int16"                           shift, and go to state 254
    "uint16"                          shift, and go to state 255
    "tuple"                           shift, and go to state 428
    "variant"                         shift, and go to state 429
    "generator"                       shift, and go to state 430
    "++"                              shift, and go to state 431
    "--"                              shift, and go to state 432
    "::"                              shift, and go to state 55
    "$$"                              shift, and go to state 433
    "$i"                              shift, and go to state 434
    "$v"                              shift, and go to state 435
    "$b"                              shift, and go to state 436
    "$a"                              shift, and go to state 437
    "$c"                              shift, and go to state 438
    "..."                             shift, and go to state 439
    "integer constant"                shift, and go to state 440
    "long integer constant"           shift, and go to state 441
    "unsigned integer constant"       shift, and go to state 442
    "unsigned long integer constant"  shift, and go to state 443
    "unsigned int8 constant"          shift, and go to state 444
    "floating point constant"         shift, and go to state 445
    "double constant"                 shift, and go to state 446
    "name"                            shift, and go to state 56
    "start of the string"             shift, and go to state 447
    "begin of code block"             shift, and go to state 448
    '-'                               shift, and go to state 449
    '+'                               shift, and go to state 450
    '*'                               shift, and go to state 451
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 452
    '!'                               shift, and go to state 453
    '['                               shift, and go to state 454
    '('                               shift, and go to state 455
    '$'                               shift, and go to state 456
    '@'                               shift, and go to state 457

    string_builder          go to state 458
    expr_reader             go to state 459
    expr_call_pipe          go to state 460
    name_in_namespace       go to state 461
    expr_new                go to state 462
    expr_cast               go to state 463
    expr_type_decl          go to state 464
    expr_type_info          go to state 465
    block_or_lambda         go to state 466
    expr_full_block         go to state 467
    expr_numeric_const      go to state 468
    expr_named_call         go to state 469
    expr_method_call        go to state 470
    func_addr_expr          go to state 471
    expr_field              go to state 472
    expr_call               go to state 473
    expr                    go to state 864
    expr_mtag               go to state 475
    basic_type_declaration  go to state 476
    make_decl               go to state 477
    make_struct_decl        go to state 478
    make_tuple_call         go to state 479
    make_dim_decl           go to state 480
    make_table_decl         go to state 481
    array_comprehension     go to state 482


State 658

  342 expr_method_call: expr "->" . "name" '(' ')'
  343                 | expr "->" . "name" '(' expr_list ')'

    "name"  shift, and go to state 865


State 659

  424 expr: expr "??" . expr

    "struct"                          shift, and go to state 409
    "class"                           shift, and go to state 410
    "true"                            shift, and go to state 411
    "false"                           shift, and go to state 412
    "new"                             shift, and go to state 413
    "typeinfo"                        shift, and go to state 414
    "type"                            shift, and go to state 415
    "array"                           shift, and go to state 416
    "null"                            shift, and go to state 417
    "table"                           shift, and go to state 418
    "deref"                           shift, and go to state 419
    "cast"                            shift, and go to state 420
    "upcast"                          shift, and go to state 421
    "addr"                            shift, and go to state 422
    "reinterpret"                     shift, and go to state 423
    "unsafe"                          shift, and go to state 424
    "fixed_array"                     shift, and go to state 425
    "default"                         shift, and go to state 426
    "bool"                            shift, and go to state 225
    "void"                            shift, and go to state 226
    "string"                          shift, and go to state 227
    "int"                             shift, and go to state 229
    "int2"                            shift, and go to state 230
    "int3"                            shift, and go to state 231
    "int4"                            shift, and go to state 232
    "uint"                            shift, and go to state 233
    "bitfield"                        shift, and go to state 427
    "uint2"                           shift, and go to state 235
    "uint3"                           shift, and go to state 236
    "uint4"                           shift, and go to state 237
    "float"                           shift, and go to state 238
    "float2"                          shift, and go to state 239
    "float3"                          shift, and go to state 240
    "float4"                          shift, and go to state 241
    "range"                           shift, and go to state 242
    "urange"                          shift, and go to state 243
    "range64"                         shift, and go to state 244
    "urange64"                        shift, and go to state 245
    "int64"                           shift, and go to state 247
    "uint64"                          shift, and go to state 248
    "double"                          shift, and go to state 249
    "int8"                            shift, and go to state 252
    "uint8"                           shift, and go to state 253
    "int16"                           shift, and go to state 254
    "uint16"                          shift, and go to state 255
    "tuple"                           shift, and go to state 428
    "variant"                         shift, and go to state 429
    "generator"                       shift, and go to state 430
    "++"                              shift, and go to state 431
    "--"                              shift, and go to state 432
    "::"                              shift, and go to state 55
    "$$"                              shift, and go to state 433
    "$i"                              shift, and go to state 434
    "$v"                              shift, and go to state 435
    "$b"                              shift, and go to state 436
    "$a"                              shift, and go to state 437
    "$c"                              shift, and go to state 438
    "..."                             shift, and go to state 439
    "integer constant"                shift, and go to state 440
    "long integer constant"           shift, and go to state 441
    "unsigned integer constant"       shift, and go to state 442
    "unsigned long integer constant"  shift, and go to state 443
    "unsigned int8 constant"          shift, and go to state 444
    "floating point constant"         shift, and go to state 445
    "double constant"                 shift, and go to state 446
    "name"                            shift, and go to state 56
    "start of the string"             shift, and go to state 447
    "begin of code block"             shift, and go to state 448
    '-'                               shift, and go to state 449
    '+'                               shift, and go to state 450
    '*'                               shift, and go to state 451
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 452
    '!'                               shift, and go to state 453
    '['                               shift, and go to state 454
    '('                               shift, and go to state 455
    '$'                               shift, and go to state 456
    '@'                               shift, and go to state 457

    string_builder          go to state 458
    expr_reader             go to state 459
    expr_call_pipe          go to state 460
    name_in_namespace       go to state 461
    expr_new                go to state 462
    expr_cast               go to state 463
    expr_type_decl          go to state 464
    expr_type_info          go to state 465
    block_or_lambda         go to state 466
    expr_full_block         go to state 467
    expr_numeric_const      go to state 468
    expr_named_call         go to state 469
    expr_method_call        go to state 470
    func_addr_expr          go to state 471
    expr_field              go to state 472
    expr_call               go to state 473
    expr                    go to state 866
    expr_mtag               go to state 475
    basic_type_declaration  go to state 476
    make_decl               go to state 477
    make_struct_decl        go to state 478
    make_tuple_call         go to state 479
    make_dim_decl           go to state 480
    make_table_decl         go to state 481
    array_comprehension     go to state 482


State 660

  414 expr: expr "?." . "name"
  462 expr_mtag: expr "?." . "$f" '(' expr ')'

    "$f"    shift, and go to state 867
    "name"  shift, and go to state 868


State 661

  412 expr: expr "?[" . expr ']'

    "struct"                          shift, and go to state 409
    "class"                           shift, and go to state 410
    "true"                            shift, and go to state 411
    "false"                           shift, and go to state 412
    "new"                             shift, and go to state 413
    "typeinfo"                        shift, and go to state 414
    "type"                            shift, and go to state 415
    "array"                           shift, and go to state 416
    "null"                            shift, and go to state 417
    "table"                           shift, and go to state 418
    "deref"                           shift, and go to state 419
    "cast"                            shift, and go to state 420
    "upcast"                          shift, and go to state 421
    "addr"                            shift, and go to state 422
    "reinterpret"                     shift, and go to state 423
    "unsafe"                          shift, and go to state 424
    "fixed_array"                     shift, and go to state 425
    "default"                         shift, and go to state 426
    "bool"                            shift, and go to state 225
    "void"                            shift, and go to state 226
    "string"                          shift, and go to state 227
    "int"                             shift, and go to state 229
    "int2"                            shift, and go to state 230
    "int3"                            shift, and go to state 231
    "int4"                            shift, and go to state 232
    "uint"                            shift, and go to state 233
    "bitfield"                        shift, and go to state 427
    "uint2"                           shift, and go to state 235
    "uint3"                           shift, and go to state 236
    "uint4"                           shift, and go to state 237
    "float"                           shift, and go to state 238
    "float2"                          shift, and go to state 239
    "float3"                          shift, and go to state 240
    "float4"                          shift, and go to state 241
    "range"                           shift, and go to state 242
    "urange"                          shift, and go to state 243
    "range64"                         shift, and go to state 244
    "urange64"                        shift, and go to state 245
    "int64"                           shift, and go to state 247
    "uint64"                          shift, and go to state 248
    "double"                          shift, and go to state 249
    "int8"                            shift, and go to state 252
    "uint8"                           shift, and go to state 253
    "int16"                           shift, and go to state 254
    "uint16"                          shift, and go to state 255
    "tuple"                           shift, and go to state 428
    "variant"                         shift, and go to state 429
    "generator"                       shift, and go to state 430
    "++"                              shift, and go to state 431
    "--"                              shift, and go to state 432
    "::"                              shift, and go to state 55
    "$$"                              shift, and go to state 433
    "$i"                              shift, and go to state 434
    "$v"                              shift, and go to state 435
    "$b"                              shift, and go to state 436
    "$a"                              shift, and go to state 437
    "$c"                              shift, and go to state 438
    "..."                             shift, and go to state 439
    "integer constant"                shift, and go to state 440
    "long integer constant"           shift, and go to state 441
    "unsigned integer constant"       shift, and go to state 442
    "unsigned long integer constant"  shift, and go to state 443
    "unsigned int8 constant"          shift, and go to state 444
    "floating point constant"         shift, and go to state 445
    "double constant"                 shift, and go to state 446
    "name"                            shift, and go to state 56
    "start of the string"             shift, and go to state 447
    "begin of code block"             shift, and go to state 448
    '-'                               shift, and go to state 449
    '+'                               shift, and go to state 450
    '*'                               shift, and go to state 451
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 452
    '!'                               shift, and go to state 453
    '['                               shift, and go to state 454
    '('                               shift, and go to state 455
    '$'                               shift, and go to state 456
    '@'                               shift, and go to state 457

    string_builder          go to state 458
    expr_reader             go to state 459
    expr_call_pipe          go to state 460
    name_in_namespace       go to state 461
    expr_new                go to state 462
    expr_cast               go to state 463
    expr_type_decl          go to state 464
    expr_type_info          go to state 465
    block_or_lambda         go to state 466
    expr_full_block         go to state 467
    expr_numeric_const      go to state 468
    expr_named_call         go to state 469
    expr_method_call        go to state 470
    func_addr_expr          go to state 471
    expr_field              go to state 472
    expr_call               go to state 473
    expr                    go to state 869
    expr_mtag               go to state 475
    basic_type_declaration  go to state 476
    make_decl               go to state 477
    make_struct_decl        go to state 478
    make_tuple_call         go to state 479
    make_dim_decl           go to state 480
    make_table_decl         go to state 481
    array_comprehension     go to state 482


State 662

  448 expr: expr "<|" . expr

    "struct"                          shift, and go to state 409
    "class"                           shift, and go to state 410
    "true"                            shift, and go to state 411
    "false"                           shift, and go to state 412
    "new"                             shift, and go to state 413
    "typeinfo"                        shift, and go to state 414
    "type"                            shift, and go to state 415
    "array"                           shift, and go to state 416
    "null"                            shift, and go to state 417
    "table"                           shift, and go to state 418
    "deref"                           shift, and go to state 419
    "cast"                            shift, and go to state 420
    "upcast"                          shift, and go to state 421
    "addr"                            shift, and go to state 422
    "reinterpret"                     shift, and go to state 423
    "unsafe"                          shift, and go to state 424
    "fixed_array"                     shift, and go to state 425
    "default"                         shift, and go to state 426
    "bool"                            shift, and go to state 225
    "void"                            shift, and go to state 226
    "string"                          shift, and go to state 227
    "int"                             shift, and go to state 229
    "int2"                            shift, and go to state 230
    "int3"                            shift, and go to state 231
    "int4"                            shift, and go to state 232
    "uint"                            shift, and go to state 233
    "bitfield"                        shift, and go to state 427
    "uint2"                           shift, and go to state 235
    "uint3"                           shift, and go to state 236
    "uint4"                           shift, and go to state 237
    "float"                           shift, and go to state 238
    "float2"                          shift, and go to state 239
    "float3"                          shift, and go to state 240
    "float4"                          shift, and go to state 241
    "range"                           shift, and go to state 242
    "urange"                          shift, and go to state 243
    "range64"                         shift, and go to state 244
    "urange64"                        shift, and go to state 245
    "int64"                           shift, and go to state 247
    "uint64"                          shift, and go to state 248
    "double"                          shift, and go to state 249
    "int8"                            shift, and go to state 252
    "uint8"                           shift, and go to state 253
    "int16"                           shift, and go to state 254
    "uint16"                          shift, and go to state 255
    "tuple"                           shift, and go to state 428
    "variant"                         shift, and go to state 429
    "generator"                       shift, and go to state 430
    "++"                              shift, and go to state 431
    "--"                              shift, and go to state 432
    "::"                              shift, and go to state 55
    "$$"                              shift, and go to state 433
    "$i"                              shift, and go to state 434
    "$v"                              shift, and go to state 435
    "$b"                              shift, and go to state 436
    "$a"                              shift, and go to state 437
    "$c"                              shift, and go to state 438
    "..."                             shift, and go to state 439
    "integer constant"                shift, and go to state 440
    "long integer constant"           shift, and go to state 441
    "unsigned integer constant"       shift, and go to state 442
    "unsigned long integer constant"  shift, and go to state 443
    "unsigned int8 constant"          shift, and go to state 444
    "floating point constant"         shift, and go to state 445
    "double constant"                 shift, and go to state 446
    "name"                            shift, and go to state 56
    "start of the string"             shift, and go to state 447
    "begin of code block"             shift, and go to state 448
    '-'                               shift, and go to state 449
    '+'                               shift, and go to state 450
    '*'                               shift, and go to state 451
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 452
    '!'                               shift, and go to state 453
    '['                               shift, and go to state 454
    '('                               shift, and go to state 455
    '$'                               shift, and go to state 456
    '@'                               shift, and go to state 457

    string_builder          go to state 458
    expr_reader             go to state 459
    expr_call_pipe          go to state 460
    name_in_namespace       go to state 461
    expr_new                go to state 462
    expr_cast               go to state 463
    expr_type_decl          go to state 464
    expr_type_info          go to state 465
    block_or_lambda         go to state 466
    expr_full_block         go to state 467
    expr_numeric_const      go to state 468
    expr_named_call         go to state 469
    expr_method_call        go to state 470
    func_addr_expr          go to state 471
    expr_field              go to state 472
    expr_call               go to state 473
    expr                    go to state 870
    expr_mtag               go to state 475
    basic_type_declaration  go to state 476
    make_decl               go to state 477
    make_struct_decl        go to state 478
    make_tuple_call         go to state 479
    make_dim_decl           go to state 480
    make_table_decl         go to state 481
    array_comprehension     go to state 482


State 663

  449 expr: expr "|>" . expr
  450     | expr "|>" . basic_type_declaration

    "struct"                          shift, and go to state 409
    "class"                           shift, and go to state 410
    "true"                            shift, and go to state 411
    "false"                           shift, and go to state 412
    "new"                             shift, and go to state 413
    "typeinfo"                        shift, and go to state 414
    "type"                            shift, and go to state 415
    "array"                           shift, and go to state 416
    "null"                            shift, and go to state 417
    "table"                           shift, and go to state 418
    "deref"                           shift, and go to state 419
    "cast"                            shift, and go to state 420
    "upcast"                          shift, and go to state 421
    "addr"                            shift, and go to state 422
    "reinterpret"                     shift, and go to state 423
    "unsafe"                          shift, and go to state 424
    "fixed_array"                     shift, and go to state 425
    "default"                         shift, and go to state 426
    "bool"                            shift, and go to state 225
    "void"                            shift, and go to state 226
    "string"                          shift, and go to state 227
    "int"                             shift, and go to state 229
    "int2"                            shift, and go to state 230
    "int3"                            shift, and go to state 231
    "int4"                            shift, and go to state 232
    "uint"                            shift, and go to state 233
    "bitfield"                        shift, and go to state 427
    "uint2"                           shift, and go to state 235
    "uint3"                           shift, and go to state 236
    "uint4"                           shift, and go to state 237
    "float"                           shift, and go to state 238
    "float2"                          shift, and go to state 239
    "float3"                          shift, and go to state 240
    "float4"                          shift, and go to state 241
    "range"                           shift, and go to state 242
    "urange"                          shift, and go to state 243
    "range64"                         shift, and go to state 244
    "urange64"                        shift, and go to state 245
    "int64"                           shift, and go to state 247
    "uint64"                          shift, and go to state 248
    "double"                          shift, and go to state 249
    "int8"                            shift, and go to state 252
    "uint8"                           shift, and go to state 253
    "int16"                           shift, and go to state 254
    "uint16"                          shift, and go to state 255
    "tuple"                           shift, and go to state 428
    "variant"                         shift, and go to state 429
    "generator"                       shift, and go to state 430
    "++"                              shift, and go to state 431
    "--"                              shift, and go to state 432
    "::"                              shift, and go to state 55
    "$$"                              shift, and go to state 433
    "$i"                              shift, and go to state 434
    "$v"                              shift, and go to state 435
    "$b"                              shift, and go to state 436
    "$a"                              shift, and go to state 437
    "$c"                              shift, and go to state 438
    "..."                             shift, and go to state 439
    "integer constant"                shift, and go to state 440
    "long integer constant"           shift, and go to state 441
    "unsigned integer constant"       shift, and go to state 442
    "unsigned long integer constant"  shift, and go to state 443
    "unsigned int8 constant"          shift, and go to state 444
    "floating point constant"         shift, and go to state 445
    "double constant"                 shift, and go to state 446
    "name"                            shift, and go to state 56
    "start of the string"             shift, and go to state 447
    "begin of code block"             shift, and go to state 448
    '-'                               shift, and go to state 449
    '+'                               shift, and go to state 450
    '*'                               shift, and go to state 451
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 452
    '!'                               shift, and go to state 453
    '['                               shift, and go to state 454
    '('                               shift, and go to state 455
    '$'                               shift, and go to state 456
    '@'                               shift, and go to state 457

    string_builder          go to state 458
    expr_reader             go to state 459
    expr_call_pipe          go to state 460
    name_in_namespace       go to state 461
    expr_new                go to state 462
    expr_cast               go to state 463
    expr_type_decl          go to state 464
    expr_type_info          go to state 465
    block_or_lambda         go to state 466
    expr_full_block         go to state 467
    expr_numeric_const      go to state 468
    expr_named_call         go to state 469
    expr_method_call        go to state 470
    func_addr_expr          go to state 471
    expr_field              go to state 472
    expr_call               go to state 473
    expr                    go to state 871
    expr_mtag               go to state 475
    basic_type_declaration  go to state 872
    make_decl               go to state 477
    make_struct_decl        go to state 478
    make_tuple_call         go to state 479
    make_dim_decl           go to state 480
    make_table_decl         go to state 481
    array_comprehension     go to state 482


State 664

  385 expr: expr "<<<" . expr

    "struct"                          shift, and go to state 409
    "class"                           shift, and go to state 410
    "true"                            shift, and go to state 411
    "false"                           shift, and go to state 412
    "new"                             shift, and go to state 413
    "typeinfo"                        shift, and go to state 414
    "type"                            shift, and go to state 415
    "array"                           shift, and go to state 416
    "null"                            shift, and go to state 417
    "table"                           shift, and go to state 418
    "deref"                           shift, and go to state 419
    "cast"                            shift, and go to state 420
    "upcast"                          shift, and go to state 421
    "addr"                            shift, and go to state 422
    "reinterpret"                     shift, and go to state 423
    "unsafe"                          shift, and go to state 424
    "fixed_array"                     shift, and go to state 425
    "default"                         shift, and go to state 426
    "bool"                            shift, and go to state 225
    "void"                            shift, and go to state 226
    "string"                          shift, and go to state 227
    "int"                             shift, and go to state 229
    "int2"                            shift, and go to state 230
    "int3"                            shift, and go to state 231
    "int4"                            shift, and go to state 232
    "uint"                            shift, and go to state 233
    "bitfield"                        shift, and go to state 427
    "uint2"                           shift, and go to state 235
    "uint3"                           shift, and go to state 236
    "uint4"                           shift, and go to state 237
    "float"                           shift, and go to state 238
    "float2"                          shift, and go to state 239
    "float3"                          shift, and go to state 240
    "float4"                          shift, and go to state 241
    "range"                           shift, and go to state 242
    "urange"                          shift, and go to state 243
    "range64"                         shift, and go to state 244
    "urange64"                        shift, and go to state 245
    "int64"                           shift, and go to state 247
    "uint64"                          shift, and go to state 248
    "double"                          shift, and go to state 249
    "int8"                            shift, and go to state 252
    "uint8"                           shift, and go to state 253
    "int16"                           shift, and go to state 254
    "uint16"                          shift, and go to state 255
    "tuple"                           shift, and go to state 428
    "variant"                         shift, and go to state 429
    "generator"                       shift, and go to state 430
    "++"                              shift, and go to state 431
    "--"                              shift, and go to state 432
    "::"                              shift, and go to state 55
    "$$"                              shift, and go to state 433
    "$i"                              shift, and go to state 434
    "$v"                              shift, and go to state 435
    "$b"                              shift, and go to state 436
    "$a"                              shift, and go to state 437
    "$c"                              shift, and go to state 438
    "..."                             shift, and go to state 439
    "integer constant"                shift, and go to state 440
    "long integer constant"           shift, and go to state 441
    "unsigned integer constant"       shift, and go to state 442
    "unsigned long integer constant"  shift, and go to state 443
    "unsigned int8 constant"          shift, and go to state 444
    "floating point constant"         shift, and go to state 445
    "double constant"                 shift, and go to state 446
    "name"                            shift, and go to state 56
    "start of the string"             shift, and go to state 447
    "begin of code block"             shift, and go to state 448
    '-'                               shift, and go to state 449
    '+'                               shift, and go to state 450
    '*'                               shift, and go to state 451
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 452
    '!'                               shift, and go to state 453
    '['                               shift, and go to state 454
    '('                               shift, and go to state 455
    '$'                               shift, and go to state 456
    '@'                               shift, and go to state 457

    string_builder          go to state 458
    expr_reader             go to state 459
    expr_call_pipe          go to state 460
    name_in_namespace       go to state 461
    expr_new                go to state 462
    expr_cast               go to state 463
    expr_type_decl          go to state 464
    expr_type_info          go to state 465
    block_or_lambda         go to state 466
    expr_full_block         go to state 467
    expr_numeric_const      go to state 468
    expr_named_call         go to state 469
    expr_method_call        go to state 470
    func_addr_expr          go to state 471
    expr_field              go to state 472
    expr_call               go to state 473
    expr                    go to state 873
    expr_mtag               go to state 475
    basic_type_declaration  go to state 476
    make_decl               go to state 477
    make_struct_decl        go to state 478
    make_tuple_call         go to state 479
    make_dim_decl           go to state 480
    make_table_decl         go to state 481
    array_comprehension     go to state 482


State 665

  386 expr: expr ">>>" . expr

    "struct"                          shift, and go to state 409
    "class"                           shift, and go to state 410
    "true"                            shift, and go to state 411
    "false"                           shift, and go to state 412
    "new"                             shift, and go to state 413
    "typeinfo"                        shift, and go to state 414
    "type"                            shift, and go to state 415
    "array"                           shift, and go to state 416
    "null"                            shift, and go to state 417
    "table"                           shift, and go to state 418
    "deref"                           shift, and go to state 419
    "cast"                            shift, and go to state 420
    "upcast"                          shift, and go to state 421
    "addr"                            shift, and go to state 422
    "reinterpret"                     shift, and go to state 423
    "unsafe"                          shift, and go to state 424
    "fixed_array"                     shift, and go to state 425
    "default"                         shift, and go to state 426
    "bool"                            shift, and go to state 225
    "void"                            shift, and go to state 226
    "string"                          shift, and go to state 227
    "int"                             shift, and go to state 229
    "int2"                            shift, and go to state 230
    "int3"                            shift, and go to state 231
    "int4"                            shift, and go to state 232
    "uint"                            shift, and go to state 233
    "bitfield"                        shift, and go to state 427
    "uint2"                           shift, and go to state 235
    "uint3"                           shift, and go to state 236
    "uint4"                           shift, and go to state 237
    "float"                           shift, and go to state 238
    "float2"                          shift, and go to state 239
    "float3"                          shift, and go to state 240
    "float4"                          shift, and go to state 241
    "range"                           shift, and go to state 242
    "urange"                          shift, and go to state 243
    "range64"                         shift, and go to state 244
    "urange64"                        shift, and go to state 245
    "int64"                           shift, and go to state 247
    "uint64"                          shift, and go to state 248
    "double"                          shift, and go to state 249
    "int8"                            shift, and go to state 252
    "uint8"                           shift, and go to state 253
    "int16"                           shift, and go to state 254
    "uint16"                          shift, and go to state 255
    "tuple"                           shift, and go to state 428
    "variant"                         shift, and go to state 429
    "generator"                       shift, and go to state 430
    "++"                              shift, and go to state 431
    "--"                              shift, and go to state 432
    "::"                              shift, and go to state 55
    "$$"                              shift, and go to state 433
    "$i"                              shift, and go to state 434
    "$v"                              shift, and go to state 435
    "$b"                              shift, and go to state 436
    "$a"                              shift, and go to state 437
    "$c"                              shift, and go to state 438
    "..."                             shift, and go to state 439
    "integer constant"                shift, and go to state 440
    "long integer constant"           shift, and go to state 441
    "unsigned integer constant"       shift, and go to state 442
    "unsigned long integer constant"  shift, and go to state 443
    "unsigned int8 constant"          shift, and go to state 444
    "floating point constant"         shift, and go to state 445
    "double constant"                 shift, and go to state 446
    "name"                            shift, and go to state 56
    "start of the string"             shift, and go to state 447
    "begin of code block"             shift, and go to state 448
    '-'                               shift, and go to state 449
    '+'                               shift, and go to state 450
    '*'                               shift, and go to state 451
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 452
    '!'                               shift, and go to state 453
    '['                               shift, and go to state 454
    '('                               shift, and go to state 455
    '$'                               shift, and go to state 456
    '@'                               shift, and go to state 457

    string_builder          go to state 458
    expr_reader             go to state 459
    expr_call_pipe          go to state 460
    name_in_namespace       go to state 461
    expr_new                go to state 462
    expr_cast               go to state 463
    expr_type_decl          go to state 464
    expr_type_info          go to state 465
    block_or_lambda         go to state 466
    expr_full_block         go to state 467
    expr_numeric_const      go to state 468
    expr_named_call         go to state 469
    expr_method_call        go to state 470
    func_addr_expr          go to state 471
    expr_field              go to state 472
    expr_call               go to state 473
    expr                    go to state 874
    expr_mtag               go to state 475
    basic_type_declaration  go to state 476
    make_decl               go to state 477
    make_struct_decl        go to state 478
    make_tuple_call         go to state 479
    make_dim_decl           go to state 480
    make_table_decl         go to state 481
    array_comprehension     go to state 482


State 666

  401 expr: expr "&&" . expr

    "struct"                          shift, and go to state 409
    "class"                           shift, and go to state 410
    "true"                            shift, and go to state 411
    "false"                           shift, and go to state 412
    "new"                             shift, and go to state 413
    "typeinfo"                        shift, and go to state 414
    "type"                            shift, and go to state 415
    "array"                           shift, and go to state 416
    "null"                            shift, and go to state 417
    "table"                           shift, and go to state 418
    "deref"                           shift, and go to state 419
    "cast"                            shift, and go to state 420
    "upcast"                          shift, and go to state 421
    "addr"                            shift, and go to state 422
    "reinterpret"                     shift, and go to state 423
    "unsafe"                          shift, and go to state 424
    "fixed_array"                     shift, and go to state 425
    "default"                         shift, and go to state 426
    "bool"                            shift, and go to state 225
    "void"                            shift, and go to state 226
    "string"                          shift, and go to state 227
    "int"                             shift, and go to state 229
    "int2"                            shift, and go to state 230
    "int3"                            shift, and go to state 231
    "int4"                            shift, and go to state 232
    "uint"                            shift, and go to state 233
    "bitfield"                        shift, and go to state 427
    "uint2"                           shift, and go to state 235
    "uint3"                           shift, and go to state 236
    "uint4"                           shift, and go to state 237
    "float"                           shift, and go to state 238
    "float2"                          shift, and go to state 239
    "float3"                          shift, and go to state 240
    "float4"                          shift, and go to state 241
    "range"                           shift, and go to state 242
    "urange"                          shift, and go to state 243
    "range64"                         shift, and go to state 244
    "urange64"                        shift, and go to state 245
    "int64"                           shift, and go to state 247
    "uint64"                          shift, and go to state 248
    "double"                          shift, and go to state 249
    "int8"                            shift, and go to state 252
    "uint8"                           shift, and go to state 253
    "int16"                           shift, and go to state 254
    "uint16"                          shift, and go to state 255
    "tuple"                           shift, and go to state 428
    "variant"                         shift, and go to state 429
    "generator"                       shift, and go to state 430
    "++"                              shift, and go to state 431
    "--"                              shift, and go to state 432
    "::"                              shift, and go to state 55
    "$$"                              shift, and go to state 433
    "$i"                              shift, and go to state 434
    "$v"                              shift, and go to state 435
    "$b"                              shift, and go to state 436
    "$a"                              shift, and go to state 437
    "$c"                              shift, and go to state 438
    "..."                             shift, and go to state 439
    "integer constant"                shift, and go to state 440
    "long integer constant"           shift, and go to state 441
    "unsigned integer constant"       shift, and go to state 442
    "unsigned long integer constant"  shift, and go to state 443
    "unsigned int8 constant"          shift, and go to state 444
    "floating point constant"         shift, and go to state 445
    "double constant"                 shift, and go to state 446
    "name"                            shift, and go to state 56
    "start of the string"             shift, and go to state 447
    "begin of code block"             shift, and go to state 448
    '-'                               shift, and go to state 449
    '+'                               shift, and go to state 450
    '*'                               shift, and go to state 451
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 452
    '!'                               shift, and go to state 453
    '['                               shift, and go to state 454
    '('                               shift, and go to state 455
    '$'                               shift, and go to state 456
    '@'                               shift, and go to state 457

    string_builder          go to state 458
    expr_reader             go to state 459
    expr_call_pipe          go to state 460
    name_in_namespace       go to state 461
    expr_new                go to state 462
    expr_cast               go to state 463
    expr_type_decl          go to state 464
    expr_type_info          go to state 465
    block_or_lambda         go to state 466
    expr_full_block         go to state 467
    expr_numeric_const      go to state 468
    expr_named_call         go to state 469
    expr_method_call        go to state 470
    func_addr_expr          go to state 471
    expr_field              go to state 472
    expr_call               go to state 473
    expr                    go to state 875
    expr_mtag               go to state 475
    basic_type_declaration  go to state 476
    make_decl               go to state 477
    make_struct_decl        go to state 478
    make_tuple_call         go to state 479
    make_dim_decl           go to state 480
    make_table_decl         go to state 481
    array_comprehension     go to state 482


State 667

  402 expr: expr "||" . expr

    "struct"                          shift, and go to state 409
    "class"                           shift, and go to state 410
    "true"                            shift, and go to state 411
    "false"                           shift, and go to state 412
    "new"                             shift, and go to state 413
    "typeinfo"                        shift, and go to state 414
    "type"                            shift, and go to state 415
    "array"                           shift, and go to state 416
    "null"                            shift, and go to state 417
    "table"                           shift, and go to state 418
    "deref"                           shift, and go to state 419
    "cast"                            shift, and go to state 420
    "upcast"                          shift, and go to state 421
    "addr"                            shift, and go to state 422
    "reinterpret"                     shift, and go to state 423
    "unsafe"                          shift, and go to state 424
    "fixed_array"                     shift, and go to state 425
    "default"                         shift, and go to state 426
    "bool"                            shift, and go to state 225
    "void"                            shift, and go to state 226
    "string"                          shift, and go to state 227
    "int"                             shift, and go to state 229
    "int2"                            shift, and go to state 230
    "int3"                            shift, and go to state 231
    "int4"                            shift, and go to state 232
    "uint"                            shift, and go to state 233
    "bitfield"                        shift, and go to state 427
    "uint2"                           shift, and go to state 235
    "uint3"                           shift, and go to state 236
    "uint4"                           shift, and go to state 237
    "float"                           shift, and go to state 238
    "float2"                          shift, and go to state 239
    "float3"                          shift, and go to state 240
    "float4"                          shift, and go to state 241
    "range"                           shift, and go to state 242
    "urange"                          shift, and go to state 243
    "range64"                         shift, and go to state 244
    "urange64"                        shift, and go to state 245
    "int64"                           shift, and go to state 247
    "uint64"                          shift, and go to state 248
    "double"                          shift, and go to state 249
    "int8"                            shift, and go to state 252
    "uint8"                           shift, and go to state 253
    "int16"                           shift, and go to state 254
    "uint16"                          shift, and go to state 255
    "tuple"                           shift, and go to state 428
    "variant"                         shift, and go to state 429
    "generator"                       shift, and go to state 430
    "++"                              shift, and go to state 431
    "--"                              shift, and go to state 432
    "::"                              shift, and go to state 55
    "$$"                              shift, and go to state 433
    "$i"                              shift, and go to state 434
    "$v"                              shift, and go to state 435
    "$b"                              shift, and go to state 436
    "$a"                              shift, and go to state 437
    "$c"                              shift, and go to state 438
    "..."                             shift, and go to state 439
    "integer constant"                shift, and go to state 440
    "long integer constant"           shift, and go to state 441
    "unsigned integer constant"       shift, and go to state 442
    "unsigned long integer constant"  shift, and go to state 443
    "unsigned int8 constant"          shift, and go to state 444
    "floating point constant"         shift, and go to state 445
    "double constant"                 shift, and go to state 446
    "name"                            shift, and go to state 56
    "start of the string"             shift, and go to state 447
    "begin of code block"             shift, and go to state 448
    '-'                               shift, and go to state 449
    '+'                               shift, and go to state 450
    '*'                               shift, and go to state 451
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 452
    '!'                               shift, and go to state 453
    '['                               shift, and go to state 454
    '('                               shift, and go to state 455
    '$'                               shift, and go to state 456
    '@'                               shift, and go to state 457

    string_builder          go to state 458
    expr_reader             go to state 459
    expr_call_pipe          go to state 460
    name_in_namespace       go to state 461
    expr_new                go to state 462
    expr_cast               go to state 463
    expr_type_decl          go to state 464
    expr_type_info          go to state 465
    block_or_lambda         go to state 466
    expr_full_block         go to state 467
    expr_numeric_const      go to state 468
    expr_named_call         go to state 469
    expr_method_call        go to state 470
    func_addr_expr          go to state 471
    expr_field              go to state 472
    expr_call               go to state 473
    expr                    go to state 876
    expr_mtag               go to state 475
    basic_type_declaration  go to state 476
    make_decl               go to state 477
    make_struct_decl        go to state 478
    make_tuple_call         go to state 479
    make_dim_decl           go to state 480
    make_table_decl         go to state 481
    array_comprehension     go to state 482


State 668

  403 expr: expr "^^" . expr

    "struct"                          shift, and go to state 409
    "class"                           shift, and go to state 410
    "true"                            shift, and go to state 411
    "false"                           shift, and go to state 412
    "new"                             shift, and go to state 413
    "typeinfo"                        shift, and go to state 414
    "type"                            shift, and go to state 415
    "array"                           shift, and go to state 416
    "null"                            shift, and go to state 417
    "table"                           shift, and go to state 418
    "deref"                           shift, and go to state 419
    "cast"                            shift, and go to state 420
    "upcast"                          shift, and go to state 421
    "addr"                            shift, and go to state 422
    "reinterpret"                     shift, and go to state 423
    "unsafe"                          shift, and go to state 424
    "fixed_array"                     shift, and go to state 425
    "default"                         shift, and go to state 426
    "bool"                            shift, and go to state 225
    "void"                            shift, and go to state 226
    "string"                          shift, and go to state 227
    "int"                             shift, and go to state 229
    "int2"                            shift, and go to state 230
    "int3"                            shift, and go to state 231
    "int4"                            shift, and go to state 232
    "uint"                            shift, and go to state 233
    "bitfield"                        shift, and go to state 427
    "uint2"                           shift, and go to state 235
    "uint3"                           shift, and go to state 236
    "uint4"                           shift, and go to state 237
    "float"                           shift, and go to state 238
    "float2"                          shift, and go to state 239
    "float3"                          shift, and go to state 240
    "float4"                          shift, and go to state 241
    "range"                           shift, and go to state 242
    "urange"                          shift, and go to state 243
    "range64"                         shift, and go to state 244
    "urange64"                        shift, and go to state 245
    "int64"                           shift, and go to state 247
    "uint64"                          shift, and go to state 248
    "double"                          shift, and go to state 249
    "int8"                            shift, and go to state 252
    "uint8"                           shift, and go to state 253
    "int16"                           shift, and go to state 254
    "uint16"                          shift, and go to state 255
    "tuple"                           shift, and go to state 428
    "variant"                         shift, and go to state 429
    "generator"                       shift, and go to state 430
    "++"                              shift, and go to state 431
    "--"                              shift, and go to state 432
    "::"                              shift, and go to state 55
    "$$"                              shift, and go to state 433
    "$i"                              shift, and go to state 434
    "$v"                              shift, and go to state 435
    "$b"                              shift, and go to state 436
    "$a"                              shift, and go to state 437
    "$c"                              shift, and go to state 438
    "..."                             shift, and go to state 439
    "integer constant"                shift, and go to state 440
    "long integer constant"           shift, and go to state 441
    "unsigned integer constant"       shift, and go to state 442
    "unsigned long integer constant"  shift, and go to state 443
    "unsigned int8 constant"          shift, and go to state 444
    "floating point constant"         shift, and go to state 445
    "double constant"                 shift, and go to state 446
    "name"                            shift, and go to state 56
    "start of the string"             shift, and go to state 447
    "begin of code block"             shift, and go to state 448
    '-'                               shift, and go to state 449
    '+'                               shift, and go to state 450
    '*'                               shift, and go to state 451
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 452
    '!'                               shift, and go to state 453
    '['                               shift, and go to state 454
    '('                               shift, and go to state 455
    '$'                               shift, and go to state 456
    '@'                               shift, and go to state 457

    string_builder          go to state 458
    expr_reader             go to state 459
    expr_call_pipe          go to state 460
    name_in_namespace       go to state 461
    expr_new                go to state 462
    expr_cast               go to state 463
    expr_type_decl          go to state 464
    expr_type_info          go to state 465
    block_or_lambda         go to state 466
    expr_full_block         go to state 467
    expr_numeric_const      go to state 468
    expr_named_call         go to state 469
    expr_method_call        go to state 470
    func_addr_expr          go to state 471
    expr_field              go to state 472
    expr_call               go to state 473
    expr                    go to state 877
    expr_mtag               go to state 475
    basic_type_declaration  go to state 476
    make_decl               go to state 477
    make_struct_decl        go to state 478
    make_tuple_call         go to state 479
    make_dim_decl           go to state 480
    make_table_decl         go to state 481
    array_comprehension     go to state 482


State 669

  404 expr: expr ".." . expr

    "struct"                          shift, and go to state 409
    "class"                           shift, and go to state 410
    "true"                            shift, and go to state 411
    "false"                           shift, and go to state 412
    "new"                             shift, and go to state 413
    "typeinfo"                        shift, and go to state 414
    "type"                            shift, and go to state 415
    "array"                           shift, and go to state 416
    "null"                            shift, and go to state 417
    "table"                           shift, and go to state 418
    "deref"                           shift, and go to state 419
    "cast"                            shift, and go to state 420
    "upcast"                          shift, and go to state 421
    "addr"                            shift, and go to state 422
    "reinterpret"                     shift, and go to state 423
    "unsafe"                          shift, and go to state 424
    "fixed_array"                     shift, and go to state 425
    "default"                         shift, and go to state 426
    "bool"                            shift, and go to state 225
    "void"                            shift, and go to state 226
    "string"                          shift, and go to state 227
    "int"                             shift, and go to state 229
    "int2"                            shift, and go to state 230
    "int3"                            shift, and go to state 231
    "int4"                            shift, and go to state 232
    "uint"                            shift, and go to state 233
    "bitfield"                        shift, and go to state 427
    "uint2"                           shift, and go to state 235
    "uint3"                           shift, and go to state 236
    "uint4"                           shift, and go to state 237
    "float"                           shift, and go to state 238
    "float2"                          shift, and go to state 239
    "float3"                          shift, and go to state 240
    "float4"                          shift, and go to state 241
    "range"                           shift, and go to state 242
    "urange"                          shift, and go to state 243
    "range64"                         shift, and go to state 244
    "urange64"                        shift, and go to state 245
    "int64"                           shift, and go to state 247
    "uint64"                          shift, and go to state 248
    "double"                          shift, and go to state 249
    "int8"                            shift, and go to state 252
    "uint8"                           shift, and go to state 253
    "int16"                           shift, and go to state 254
    "uint16"                          shift, and go to state 255
    "tuple"                           shift, and go to state 428
    "variant"                         shift, and go to state 429
    "generator"                       shift, and go to state 430
    "++"                              shift, and go to state 431
    "--"                              shift, and go to state 432
    "::"                              shift, and go to state 55
    "$$"                              shift, and go to state 433
    "$i"                              shift, and go to state 434
    "$v"                              shift, and go to state 435
    "$b"                              shift, and go to state 436
    "$a"                              shift, and go to state 437
    "$c"                              shift, and go to state 438
    "..."                             shift, and go to state 439
    "integer constant"                shift, and go to state 440
    "long integer constant"           shift, and go to state 441
    "unsigned integer constant"       shift, and go to state 442
    "unsigned long integer constant"  shift, and go to state 443
    "unsigned int8 constant"          shift, and go to state 444
    "floating point constant"         shift, and go to state 445
    "double constant"                 shift, and go to state 446
    "name"                            shift, and go to state 56
    "start of the string"             shift, and go to state 447
    "begin of code block"             shift, and go to state 448
    '-'                               shift, and go to state 449
    '+'                               shift, and go to state 450
    '*'                               shift, and go to state 451
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 452
    '!'                               shift, and go to state 453
    '['                               shift, and go to state 454
    '('                               shift, and go to state 455
    '$'                               shift, and go to state 456
    '@'                               shift, and go to state 457

    string_builder          go to state 458
    expr_reader             go to state 459
    expr_call_pipe          go to state 460
    name_in_namespace       go to state 461
    expr_new                go to state 462
    expr_cast               go to state 463
    expr_type_decl          go to state 464
    expr_type_info          go to state 465
    block_or_lambda         go to state 466
    expr_full_block         go to state 467
    expr_numeric_const      go to state 468
    expr_named_call         go to state 469
    expr_method_call        go to state 470
    func_addr_expr          go to state 471
    expr_field              go to state 472
    expr_call               go to state 473
    expr                    go to state 878
    expr_mtag               go to state 475
    basic_type_declaration  go to state 476
    make_decl               go to state 477
    make_struct_decl        go to state 478
    make_tuple_call         go to state 479
    make_dim_decl           go to state 480
    make_table_decl         go to state 481
    array_comprehension     go to state 482


State 670

  425 expr: expr '?' . expr ':' expr
  436     | expr '?' . "as" "name"
  439     | expr '?' . "as" "type" '<' $@23 type_declaration '>' $@24
  440     | expr '?' . "as" basic_type_declaration
  466 expr_mtag: expr '?' . "as" "$f" '(' expr ')'

    "struct"                          shift, and go to state 409
    "class"                           shift, and go to state 410
    "true"                            shift, and go to state 411
    "false"                           shift, and go to state 412
    "new"                             shift, and go to state 413
    "typeinfo"                        shift, and go to state 414
    "type"                            shift, and go to state 415
    "as"                              shift, and go to state 879
    "array"                           shift, and go to state 416
    "null"                            shift, and go to state 417
    "table"                           shift, and go to state 418
    "deref"                           shift, and go to state 419
    "cast"                            shift, and go to state 420
    "upcast"                          shift, and go to state 421
    "addr"                            shift, and go to state 422
    "reinterpret"                     shift, and go to state 423
    "unsafe"                          shift, and go to state 424
    "fixed_array"                     shift, and go to state 425
    "default"                         shift, and go to state 426
    "bool"                            shift, and go to state 225
    "void"                            shift, and go to state 226
    "string"                          shift, and go to state 227
    "int"                             shift, and go to state 229
    "int2"                            shift, and go to state 230
    "int3"                            shift, and go to state 231
    "int4"                            shift, and go to state 232
    "uint"                            shift, and go to state 233
    "bitfield"                        shift, and go to state 427
    "uint2"                           shift, and go to state 235
    "uint3"                           shift, and go to state 236
    "uint4"                           shift, and go to state 237
    "float"                           shift, and go to state 238
    "float2"                          shift, and go to state 239
    "float3"                          shift, and go to state 240
    "float4"                          shift, and go to state 241
    "range"                           shift, and go to state 242
    "urange"                          shift, and go to state 243
    "range64"                         shift, and go to state 244
    "urange64"                        shift, and go to state 245
    "int64"                           shift, and go to state 247
    "uint64"                          shift, and go to state 248
    "double"                          shift, and go to state 249
    "int8"                            shift, and go to state 252
    "uint8"                           shift, and go to state 253
    "int16"                           shift, and go to state 254
    "uint16"                          shift, and go to state 255
    "tuple"                           shift, and go to state 428
    "variant"                         shift, and go to state 429
    "generator"                       shift, and go to state 430
    "++"                              shift, and go to state 431
    "--"                              shift, and go to state 432
    "::"                              shift, and go to state 55
    "$$"                              shift, and go to state 433
    "$i"                              shift, and go to state 434
    "$v"                              shift, and go to state 435
    "$b"                              shift, and go to state 436
    "$a"                              shift, and go to state 437
    "$c"                              shift, and go to state 438
    "..."                             shift, and go to state 439
    "integer constant"                shift, and go to state 440
    "long integer constant"           shift, and go to state 441
    "unsigned integer constant"       shift, and go to state 442
    "unsigned long integer constant"  shift, and go to state 443
    "unsigned int8 constant"          shift, and go to state 444
    "floating point constant"         shift, and go to state 445
    "double constant"                 shift, and go to state 446
    "name"                            shift, and go to state 56
    "start of the string"             shift, and go to state 447
    "begin of code block"             shift, and go to state 448
    '-'                               shift, and go to state 449
    '+'                               shift, and go to state 450
    '*'                               shift, and go to state 451
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 452
    '!'                               shift, and go to state 453
    '['                               shift, and go to state 454
    '('                               shift, and go to state 455
    '$'                               shift, and go to state 456
    '@'                               shift, and go to state 457

    string_builder          go to state 458
    expr_reader             go to state 459
    expr_call_pipe          go to state 460
    name_in_namespace       go to state 461
    expr_new                go to state 462
    expr_cast               go to state 463
    expr_type_decl          go to state 464
    expr_type_info          go to state 465
    block_or_lambda         go to state 466
    expr_full_block         go to state 467
    expr_numeric_const      go to state 468
    expr_named_call         go to state 469
    expr_method_call        go to state 470
    func_addr_expr          go to state 471
    expr_field              go to state 472
    expr_call               go to state 473
    expr                    go to state 880
    expr_mtag               go to state 475
    basic_type_declaration  go to state 476
    make_decl               go to state 477
    make_struct_decl        go to state 478
    make_tuple_call         go to state 479
    make_dim_decl           go to state 480
    make_table_decl         go to state 481
    array_comprehension     go to state 482


State 671

  399 expr: expr '|' . expr

    "struct"                          shift, and go to state 409
    "class"                           shift, and go to state 410
    "true"                            shift, and go to state 411
    "false"                           shift, and go to state 412
    "new"                             shift, and go to state 413
    "typeinfo"                        shift, and go to state 414
    "type"                            shift, and go to state 415
    "array"                           shift, and go to state 416
    "null"                            shift, and go to state 417
    "table"                           shift, and go to state 418
    "deref"                           shift, and go to state 419
    "cast"                            shift, and go to state 420
    "upcast"                          shift, and go to state 421
    "addr"                            shift, and go to state 422
    "reinterpret"                     shift, and go to state 423
    "unsafe"                          shift, and go to state 424
    "fixed_array"                     shift, and go to state 425
    "default"                         shift, and go to state 426
    "bool"                            shift, and go to state 225
    "void"                            shift, and go to state 226
    "string"                          shift, and go to state 227
    "int"                             shift, and go to state 229
    "int2"                            shift, and go to state 230
    "int3"                            shift, and go to state 231
    "int4"                            shift, and go to state 232
    "uint"                            shift, and go to state 233
    "bitfield"                        shift, and go to state 427
    "uint2"                           shift, and go to state 235
    "uint3"                           shift, and go to state 236
    "uint4"                           shift, and go to state 237
    "float"                           shift, and go to state 238
    "float2"                          shift, and go to state 239
    "float3"                          shift, and go to state 240
    "float4"                          shift, and go to state 241
    "range"                           shift, and go to state 242
    "urange"                          shift, and go to state 243
    "range64"                         shift, and go to state 244
    "urange64"                        shift, and go to state 245
    "int64"                           shift, and go to state 247
    "uint64"                          shift, and go to state 248
    "double"                          shift, and go to state 249
    "int8"                            shift, and go to state 252
    "uint8"                           shift, and go to state 253
    "int16"                           shift, and go to state 254
    "uint16"                          shift, and go to state 255
    "tuple"                           shift, and go to state 428
    "variant"                         shift, and go to state 429
    "generator"                       shift, and go to state 430
    "++"                              shift, and go to state 431
    "--"                              shift, and go to state 432
    "::"                              shift, and go to state 55
    "$$"                              shift, and go to state 433
    "$i"                              shift, and go to state 434
    "$v"                              shift, and go to state 435
    "$b"                              shift, and go to state 436
    "$a"                              shift, and go to state 437
    "$c"                              shift, and go to state 438
    "..."                             shift, and go to state 439
    "integer constant"                shift, and go to state 440
    "long integer constant"           shift, and go to state 441
    "unsigned integer constant"       shift, and go to state 442
    "unsigned long integer constant"  shift, and go to state 443
    "unsigned int8 constant"          shift, and go to state 444
    "floating point constant"         shift, and go to state 445
    "double constant"                 shift, and go to state 446
    "name"                            shift, and go to state 56
    "start of the string"             shift, and go to state 447
    "begin of code block"             shift, and go to state 448
    '-'                               shift, and go to state 449
    '+'                               shift, and go to state 450
    '*'                               shift, and go to state 451
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 452
    '!'                               shift, and go to state 453
    '['                               shift, and go to state 454
    '('                               shift, and go to state 455
    '$'                               shift, and go to state 456
    '@'                               shift, and go to state 457

    string_builder          go to state 458
    expr_reader             go to state 459
    expr_call_pipe          go to state 460
    name_in_namespace       go to state 461
    expr_new                go to state 462
    expr_cast               go to state 463
    expr_type_decl          go to state 464
    expr_type_info          go to state 465
    block_or_lambda         go to state 466
    expr_full_block         go to state 467
    expr_numeric_const      go to state 468
    expr_named_call         go to state 469
    expr_method_call        go to state 470
    func_addr_expr          go to state 471
    expr_field              go to state 472
    expr_call               go to state 473
    expr                    go to state 881
    expr_mtag               go to state 475
    basic_type_declaration  go to state 476
    make_decl               go to state 477
    make_struct_decl        go to state 478
    make_tuple_call         go to state 479
    make_dim_decl           go to state 480
    make_table_decl         go to state 481
    array_comprehension     go to state 482


State 672

  400 expr: expr '^' . expr

    "struct"                          shift, and go to state 409
    "class"                           shift, and go to state 410
    "true"                            shift, and go to state 411
    "false"                           shift, and go to state 412
    "new"                             shift, and go to state 413
    "typeinfo"                        shift, and go to state 414
    "type"                            shift, and go to state 415
    "array"                           shift, and go to state 416
    "null"                            shift, and go to state 417
    "table"                           shift, and go to state 418
    "deref"                           shift, and go to state 419
    "cast"                            shift, and go to state 420
    "upcast"                          shift, and go to state 421
    "addr"                            shift, and go to state 422
    "reinterpret"                     shift, and go to state 423
    "unsafe"                          shift, and go to state 424
    "fixed_array"                     shift, and go to state 425
    "default"                         shift, and go to state 426
    "bool"                            shift, and go to state 225
    "void"                            shift, and go to state 226
    "string"                          shift, and go to state 227
    "int"                             shift, and go to state 229
    "int2"                            shift, and go to state 230
    "int3"                            shift, and go to state 231
    "int4"                            shift, and go to state 232
    "uint"                            shift, and go to state 233
    "bitfield"                        shift, and go to state 427
    "uint2"                           shift, and go to state 235
    "uint3"                           shift, and go to state 236
    "uint4"                           shift, and go to state 237
    "float"                           shift, and go to state 238
    "float2"                          shift, and go to state 239
    "float3"                          shift, and go to state 240
    "float4"                          shift, and go to state 241
    "range"                           shift, and go to state 242
    "urange"                          shift, and go to state 243
    "range64"                         shift, and go to state 244
    "urange64"                        shift, and go to state 245
    "int64"                           shift, and go to state 247
    "uint64"                          shift, and go to state 248
    "double"                          shift, and go to state 249
    "int8"                            shift, and go to state 252
    "uint8"                           shift, and go to state 253
    "int16"                           shift, and go to state 254
    "uint16"                          shift, and go to state 255
    "tuple"                           shift, and go to state 428
    "variant"                         shift, and go to state 429
    "generator"                       shift, and go to state 430
    "++"                              shift, and go to state 431
    "--"                              shift, and go to state 432
    "::"                              shift, and go to state 55
    "$$"                              shift, and go to state 433
    "$i"                              shift, and go to state 434
    "$v"                              shift, and go to state 435
    "$b"                              shift, and go to state 436
    "$a"                              shift, and go to state 437
    "$c"                              shift, and go to state 438
    "..."                             shift, and go to state 439
    "integer constant"                shift, and go to state 440
    "long integer constant"           shift, and go to state 441
    "unsigned integer constant"       shift, and go to state 442
    "unsigned long integer constant"  shift, and go to state 443
    "unsigned int8 constant"          shift, and go to state 444
    "floating point constant"         shift, and go to state 445
    "double constant"                 shift, and go to state 446
    "name"                            shift, and go to state 56
    "start of the string"             shift, and go to state 447
    "begin of code block"             shift, and go to state 448
    '-'                               shift, and go to state 449
    '+'                               shift, and go to state 450
    '*'                               shift, and go to state 451
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 452
    '!'                               shift, and go to state 453
    '['                               shift, and go to state 454
    '('                               shift, and go to state 455
    '$'                               shift, and go to state 456
    '@'                               shift, and go to state 457

    string_builder          go to state 458
    expr_reader             go to state 459
    expr_call_pipe          go to state 460
    name_in_namespace       go to state 461
    expr_new                go to state 462
    expr_cast               go to state 463
    expr_type_decl          go to state 464
    expr_type_info          go to state 465
    block_or_lambda         go to state 466
    expr_full_block         go to state 467
    expr_numeric_const      go to state 468
    expr_named_call         go to state 469
    expr_method_call        go to state 470
    func_addr_expr          go to state 471
    expr_field              go to state 472
    expr_call               go to state 473
    expr                    go to state 882
    expr_mtag               go to state 475
    basic_type_declaration  go to state 476
    make_decl               go to state 477
    make_struct_decl        go to state 478
    make_tuple_call         go to state 479
    make_dim_decl           go to state 480
    make_table_decl         go to state 481
    array_comprehension     go to state 482


State 673

  398 expr: expr '&' . expr

    "struct"                          shift, and go to state 409
    "class"                           shift, and go to state 410
    "true"                            shift, and go to state 411
    "false"                           shift, and go to state 412
    "new"                             shift, and go to state 413
    "typeinfo"                        shift, and go to state 414
    "type"                            shift, and go to state 415
    "array"                           shift, and go to state 416
    "null"                            shift, and go to state 417
    "table"                           shift, and go to state 418
    "deref"                           shift, and go to state 419
    "cast"                            shift, and go to state 420
    "upcast"                          shift, and go to state 421
    "addr"                            shift, and go to state 422
    "reinterpret"                     shift, and go to state 423
    "unsafe"                          shift, and go to state 424
    "fixed_array"                     shift, and go to state 425
    "default"                         shift, and go to state 426
    "bool"                            shift, and go to state 225
    "void"                            shift, and go to state 226
    "string"                          shift, and go to state 227
    "int"                             shift, and go to state 229
    "int2"                            shift, and go to state 230
    "int3"                            shift, and go to state 231
    "int4"                            shift, and go to state 232
    "uint"                            shift, and go to state 233
    "bitfield"                        shift, and go to state 427
    "uint2"                           shift, and go to state 235
    "uint3"                           shift, and go to state 236
    "uint4"                           shift, and go to state 237
    "float"                           shift, and go to state 238
    "float2"                          shift, and go to state 239
    "float3"                          shift, and go to state 240
    "float4"                          shift, and go to state 241
    "range"                           shift, and go to state 242
    "urange"                          shift, and go to state 243
    "range64"                         shift, and go to state 244
    "urange64"                        shift, and go to state 245
    "int64"                           shift, and go to state 247
    "uint64"                          shift, and go to state 248
    "double"                          shift, and go to state 249
    "int8"                            shift, and go to state 252
    "uint8"                           shift, and go to state 253
    "int16"                           shift, and go to state 254
    "uint16"                          shift, and go to state 255
    "tuple"                           shift, and go to state 428
    "variant"                         shift, and go to state 429
    "generator"                       shift, and go to state 430
    "++"                              shift, and go to state 431
    "--"                              shift, and go to state 432
    "::"                              shift, and go to state 55
    "$$"                              shift, and go to state 433
    "$i"                              shift, and go to state 434
    "$v"                              shift, and go to state 435
    "$b"                              shift, and go to state 436
    "$a"                              shift, and go to state 437
    "$c"                              shift, and go to state 438
    "..."                             shift, and go to state 439
    "integer constant"                shift, and go to state 440
    "long integer constant"           shift, and go to state 441
    "unsigned integer constant"       shift, and go to state 442
    "unsigned long integer constant"  shift, and go to state 443
    "unsigned int8 constant"          shift, and go to state 444
    "floating point constant"         shift, and go to state 445
    "double constant"                 shift, and go to state 446
    "name"                            shift, and go to state 56
    "start of the string"             shift, and go to state 447
    "begin of code block"             shift, and go to state 448
    '-'                               shift, and go to state 449
    '+'                               shift, and go to state 450
    '*'                               shift, and go to state 451
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 452
    '!'                               shift, and go to state 453
    '['                               shift, and go to state 454
    '('                               shift, and go to state 455
    '$'                               shift, and go to state 456
    '@'                               shift, and go to state 457

    string_builder          go to state 458
    expr_reader             go to state 459
    expr_call_pipe          go to state 460
    name_in_namespace       go to state 461
    expr_new                go to state 462
    expr_cast               go to state 463
    expr_type_decl          go to state 464
    expr_type_info          go to state 465
    block_or_lambda         go to state 466
    expr_full_block         go to state 467
    expr_numeric_const      go to state 468
    expr_named_call         go to state 469
    expr_method_call        go to state 470
    func_addr_expr          go to state 471
    expr_field              go to state 472
    expr_call               go to state 473
    expr                    go to state 883
    expr_mtag               go to state 475
    basic_type_declaration  go to state 476
    make_decl               go to state 477
    make_struct_decl        go to state 478
    make_tuple_call         go to state 479
    make_dim_decl           go to state 480
    make_table_decl         go to state 481
    array_comprehension     go to state 482


State 674

  392 expr: expr '<' . expr

    "struct"                          shift, and go to state 409
    "class"                           shift, and go to state 410
    "true"                            shift, and go to state 411
    "false"                           shift, and go to state 412
    "new"                             shift, and go to state 413
    "typeinfo"                        shift, and go to state 414
    "type"                            shift, and go to state 415
    "array"                           shift, and go to state 416
    "null"                            shift, and go to state 417
    "table"                           shift, and go to state 418
    "deref"                           shift, and go to state 419
    "cast"                            shift, and go to state 420
    "upcast"                          shift, and go to state 421
    "addr"                            shift, and go to state 422
    "reinterpret"                     shift, and go to state 423
    "unsafe"                          shift, and go to state 424
    "fixed_array"                     shift, and go to state 425
    "default"                         shift, and go to state 426
    "bool"                            shift, and go to state 225
    "void"                            shift, and go to state 226
    "string"                          shift, and go to state 227
    "int"                             shift, and go to state 229
    "int2"                            shift, and go to state 230
    "int3"                            shift, and go to state 231
    "int4"                            shift, and go to state 232
    "uint"                            shift, and go to state 233
    "bitfield"                        shift, and go to state 427
    "uint2"                           shift, and go to state 235
    "uint3"                           shift, and go to state 236
    "uint4"                           shift, and go to state 237
    "float"                           shift, and go to state 238
    "float2"                          shift, and go to state 239
    "float3"                          shift, and go to state 240
    "float4"                          shift, and go to state 241
    "range"                           shift, and go to state 242
    "urange"                          shift, and go to state 243
    "range64"                         shift, and go to state 244
    "urange64"                        shift, and go to state 245
    "int64"                           shift, and go to state 247
    "uint64"                          shift, and go to state 248
    "double"                          shift, and go to state 249
    "int8"                            shift, and go to state 252
    "uint8"                           shift, and go to state 253
    "int16"                           shift, and go to state 254
    "uint16"                          shift, and go to state 255
    "tuple"                           shift, and go to state 428
    "variant"                         shift, and go to state 429
    "generator"                       shift, and go to state 430
    "++"                              shift, and go to state 431
    "--"                              shift, and go to state 432
    "::"                              shift, and go to state 55
    "$$"                              shift, and go to state 433
    "$i"                              shift, and go to state 434
    "$v"                              shift, and go to state 435
    "$b"                              shift, and go to state 436
    "$a"                              shift, and go to state 437
    "$c"                              shift, and go to state 438
    "..."                             shift, and go to state 439
    "integer constant"                shift, and go to state 440
    "long integer constant"           shift, and go to state 441
    "unsigned integer constant"       shift, and go to state 442
    "unsigned long integer constant"  shift, and go to state 443
    "unsigned int8 constant"          shift, and go to state 444
    "floating point constant"         shift, and go to state 445
    "double constant"                 shift, and go to state 446
    "name"                            shift, and go to state 56
    "start of the string"             shift, and go to state 447
    "begin of code block"             shift, and go to state 448
    '-'                               shift, and go to state 449
    '+'                               shift, and go to state 450
    '*'                               shift, and go to state 451
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 452
    '!'                               shift, and go to state 453
    '['                               shift, and go to state 454
    '('                               shift, and go to state 455
    '$'                               shift, and go to state 456
    '@'                               shift, and go to state 457

    string_builder          go to state 458
    expr_reader             go to state 459
    expr_call_pipe          go to state 460
    name_in_namespace       go to state 461
    expr_new                go to state 462
    expr_cast               go to state 463
    expr_type_decl          go to state 464
    expr_type_info          go to state 465
    block_or_lambda         go to state 466
    expr_full_block         go to state 467
    expr_numeric_const      go to state 468
    expr_named_call         go to state 469
    expr_method_call        go to state 470
    func_addr_expr          go to state 471
    expr_field              go to state 472
    expr_call               go to state 473
    expr                    go to state 884
    expr_mtag               go to state 475
    basic_type_declaration  go to state 476
    make_decl               go to state 477
    make_struct_decl        go to state 478
    make_tuple_call         go to state 479
    make_dim_decl           go to state 480
    make_table_decl         go to state 481
    array_comprehension     go to state 482


State 675

  393 expr: expr '>' . expr

    "struct"                          shift, and go to state 409
    "class"                           shift, and go to state 410
    "true"                            shift, and go to state 411
    "false"                           shift, and go to state 412
    "new"                             shift, and go to state 413
    "typeinfo"                        shift, and go to state 414
    "type"                            shift, and go to state 415
    "array"                           shift, and go to state 416
    "null"                            shift, and go to state 417
    "table"                           shift, and go to state 418
    "deref"                           shift, and go to state 419
    "cast"                            shift, and go to state 420
    "upcast"                          shift, and go to state 421
    "addr"                            shift, and go to state 422
    "reinterpret"                     shift, and go to state 423
    "unsafe"                          shift, and go to state 424
    "fixed_array"                     shift, and go to state 425
    "default"                         shift, and go to state 426
    "bool"                            shift, and go to state 225
    "void"                            shift, and go to state 226
    "string"                          shift, and go to state 227
    "int"                             shift, and go to state 229
    "int2"                            shift, and go to state 230
    "int3"                            shift, and go to state 231
    "int4"                            shift, and go to state 232
    "uint"                            shift, and go to state 233
    "bitfield"                        shift, and go to state 427
    "uint2"                           shift, and go to state 235
    "uint3"                           shift, and go to state 236
    "uint4"                           shift, and go to state 237
    "float"                           shift, and go to state 238
    "float2"                          shift, and go to state 239
    "float3"                          shift, and go to state 240
    "float4"                          shift, and go to state 241
    "range"                           shift, and go to state 242
    "urange"                          shift, and go to state 243
    "range64"                         shift, and go to state 244
    "urange64"                        shift, and go to state 245
    "int64"                           shift, and go to state 247
    "uint64"                          shift, and go to state 248
    "double"                          shift, and go to state 249
    "int8"                            shift, and go to state 252
    "uint8"                           shift, and go to state 253
    "int16"                           shift, and go to state 254
    "uint16"                          shift, and go to state 255
    "tuple"                           shift, and go to state 428
    "variant"                         shift, and go to state 429
    "generator"                       shift, and go to state 430
    "++"                              shift, and go to state 431
    "--"                              shift, and go to state 432
    "::"                              shift, and go to state 55
    "$$"                              shift, and go to state 433
    "$i"                              shift, and go to state 434
    "$v"                              shift, and go to state 435
    "$b"                              shift, and go to state 436
    "$a"                              shift, and go to state 437
    "$c"                              shift, and go to state 438
    "..."                             shift, and go to state 439
    "integer constant"                shift, and go to state 440
    "long integer constant"           shift, and go to state 441
    "unsigned integer constant"       shift, and go to state 442
    "unsigned long integer constant"  shift, and go to state 443
    "unsigned int8 constant"          shift, and go to state 444
    "floating point constant"         shift, and go to state 445
    "double constant"                 shift, and go to state 446
    "name"                            shift, and go to state 56
    "start of the string"             shift, and go to state 447
    "begin of code block"             shift, and go to state 448
    '-'                               shift, and go to state 449
    '+'                               shift, and go to state 450
    '*'                               shift, and go to state 451
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 452
    '!'                               shift, and go to state 453
    '['                               shift, and go to state 454
    '('                               shift, and go to state 455
    '$'                               shift, and go to state 456
    '@'                               shift, and go to state 457

    string_builder          go to state 458
    expr_reader             go to state 459
    expr_call_pipe          go to state 460
    name_in_namespace       go to state 461
    expr_new                go to state 462
    expr_cast               go to state 463
    expr_type_decl          go to state 464
    expr_type_info          go to state 465
    block_or_lambda         go to state 466
    expr_full_block         go to state 467
    expr_numeric_const      go to state 468
    expr_named_call         go to state 469
    expr_method_call        go to state 470
    func_addr_expr          go to state 471
    expr_field              go to state 472
    expr_call               go to state 473
    expr                    go to state 885
    expr_mtag               go to state 475
    basic_type_declaration  go to state 476
    make_decl               go to state 477
    make_struct_decl        go to state 478
    make_tuple_call         go to state 479
    make_dim_decl           go to state 480
    make_table_decl         go to state 481
    array_comprehension     go to state 482


State 676

  388 expr: expr '-' . expr

    "struct"                          shift, and go to state 409
    "class"                           shift, and go to state 410
    "true"                            shift, and go to state 411
    "false"                           shift, and go to state 412
    "new"                             shift, and go to state 413
    "typeinfo"                        shift, and go to state 414
    "type"                            shift, and go to state 415
    "array"                           shift, and go to state 416
    "null"                            shift, and go to state 417
    "table"                           shift, and go to state 418
    "deref"                           shift, and go to state 419
    "cast"                            shift, and go to state 420
    "upcast"                          shift, and go to state 421
    "addr"                            shift, and go to state 422
    "reinterpret"                     shift, and go to state 423
    "unsafe"                          shift, and go to state 424
    "fixed_array"                     shift, and go to state 425
    "default"                         shift, and go to state 426
    "bool"                            shift, and go to state 225
    "void"                            shift, and go to state 226
    "string"                          shift, and go to state 227
    "int"                             shift, and go to state 229
    "int2"                            shift, and go to state 230
    "int3"                            shift, and go to state 231
    "int4"                            shift, and go to state 232
    "uint"                            shift, and go to state 233
    "bitfield"                        shift, and go to state 427
    "uint2"                           shift, and go to state 235
    "uint3"                           shift, and go to state 236
    "uint4"                           shift, and go to state 237
    "float"                           shift, and go to state 238
    "float2"                          shift, and go to state 239
    "float3"                          shift, and go to state 240
    "float4"                          shift, and go to state 241
    "range"                           shift, and go to state 242
    "urange"                          shift, and go to state 243
    "range64"                         shift, and go to state 244
    "urange64"                        shift, and go to state 245
    "int64"                           shift, and go to state 247
    "uint64"                          shift, and go to state 248
    "double"                          shift, and go to state 249
    "int8"                            shift, and go to state 252
    "uint8"                           shift, and go to state 253
    "int16"                           shift, and go to state 254
    "uint16"                          shift, and go to state 255
    "tuple"                           shift, and go to state 428
    "variant"                         shift, and go to state 429
    "generator"                       shift, and go to state 430
    "++"                              shift, and go to state 431
    "--"                              shift, and go to state 432
    "::"                              shift, and go to state 55
    "$$"                              shift, and go to state 433
    "$i"                              shift, and go to state 434
    "$v"                              shift, and go to state 435
    "$b"                              shift, and go to state 436
    "$a"                              shift, and go to state 437
    "$c"                              shift, and go to state 438
    "..."                             shift, and go to state 439
    "integer constant"                shift, and go to state 440
    "long integer constant"           shift, and go to state 441
    "unsigned integer constant"       shift, and go to state 442
    "unsigned long integer constant"  shift, and go to state 443
    "unsigned int8 constant"          shift, and go to state 444
    "floating point constant"         shift, and go to state 445
    "double constant"                 shift, and go to state 446
    "name"                            shift, and go to state 56
    "start of the string"             shift, and go to state 447
    "begin of code block"             shift, and go to state 448
    '-'                               shift, and go to state 449
    '+'                               shift, and go to state 450
    '*'                               shift, and go to state 451
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 452
    '!'                               shift, and go to state 453
    '['                               shift, and go to state 454
    '('                               shift, and go to state 455
    '$'                               shift, and go to state 456
    '@'                               shift, and go to state 457

    string_builder          go to state 458
    expr_reader             go to state 459
    expr_call_pipe          go to state 460
    name_in_namespace       go to state 461
    expr_new                go to state 462
    expr_cast               go to state 463
    expr_type_decl          go to state 464
    expr_type_info          go to state 465
    block_or_lambda         go to state 466
    expr_full_block         go to state 467
    expr_numeric_const      go to state 468
    expr_named_call         go to state 469
    expr_method_call        go to state 470
    func_addr_expr          go to state 471
    expr_field              go to state 472
    expr_call               go to state 473
    expr                    go to state 886
    expr_mtag               go to state 475
    basic_type_declaration  go to state 476
    make_decl               go to state 477
    make_struct_decl        go to state 478
    make_tuple_call         go to state 479
    make_dim_decl           go to state 480
    make_table_decl         go to state 481
    array_comprehension     go to state 482


State 677

  387 expr: expr '+' . expr

    "struct"                          shift, and go to state 409
    "class"                           shift, and go to state 410
    "true"                            shift, and go to state 411
    "false"                           shift, and go to state 412
    "new"                             shift, and go to state 413
    "typeinfo"                        shift, and go to state 414
    "type"                            shift, and go to state 415
    "array"                           shift, and go to state 416
    "null"                            shift, and go to state 417
    "table"                           shift, and go to state 418
    "deref"                           shift, and go to state 419
    "cast"                            shift, and go to state 420
    "upcast"                          shift, and go to state 421
    "addr"                            shift, and go to state 422
    "reinterpret"                     shift, and go to state 423
    "unsafe"                          shift, and go to state 424
    "fixed_array"                     shift, and go to state 425
    "default"                         shift, and go to state 426
    "bool"                            shift, and go to state 225
    "void"                            shift, and go to state 226
    "string"                          shift, and go to state 227
    "int"                             shift, and go to state 229
    "int2"                            shift, and go to state 230
    "int3"                            shift, and go to state 231
    "int4"                            shift, and go to state 232
    "uint"                            shift, and go to state 233
    "bitfield"                        shift, and go to state 427
    "uint2"                           shift, and go to state 235
    "uint3"                           shift, and go to state 236
    "uint4"                           shift, and go to state 237
    "float"                           shift, and go to state 238
    "float2"                          shift, and go to state 239
    "float3"                          shift, and go to state 240
    "float4"                          shift, and go to state 241
    "range"                           shift, and go to state 242
    "urange"                          shift, and go to state 243
    "range64"                         shift, and go to state 244
    "urange64"                        shift, and go to state 245
    "int64"                           shift, and go to state 247
    "uint64"                          shift, and go to state 248
    "double"                          shift, and go to state 249
    "int8"                            shift, and go to state 252
    "uint8"                           shift, and go to state 253
    "int16"                           shift, and go to state 254
    "uint16"                          shift, and go to state 255
    "tuple"                           shift, and go to state 428
    "variant"                         shift, and go to state 429
    "generator"                       shift, and go to state 430
    "++"                              shift, and go to state 431
    "--"                              shift, and go to state 432
    "::"                              shift, and go to state 55
    "$$"                              shift, and go to state 433
    "$i"                              shift, and go to state 434
    "$v"                              shift, and go to state 435
    "$b"                              shift, and go to state 436
    "$a"                              shift, and go to state 437
    "$c"                              shift, and go to state 438
    "..."                             shift, and go to state 439
    "integer constant"                shift, and go to state 440
    "long integer constant"           shift, and go to state 441
    "unsigned integer constant"       shift, and go to state 442
    "unsigned long integer constant"  shift, and go to state 443
    "unsigned int8 constant"          shift, and go to state 444
    "floating point constant"         shift, and go to state 445
    "double constant"                 shift, and go to state 446
    "name"                            shift, and go to state 56
    "start of the string"             shift, and go to state 447
    "begin of code block"             shift, and go to state 448
    '-'                               shift, and go to state 449
    '+'                               shift, and go to state 450
    '*'                               shift, and go to state 451
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 452
    '!'                               shift, and go to state 453
    '['                               shift, and go to state 454
    '('                               shift, and go to state 455
    '$'                               shift, and go to state 456
    '@'                               shift, and go to state 457

    string_builder          go to state 458
    expr_reader             go to state 459
    expr_call_pipe          go to state 460
    name_in_namespace       go to state 461
    expr_new                go to state 462
    expr_cast               go to state 463
    expr_type_decl          go to state 464
    expr_type_info          go to state 465
    block_or_lambda         go to state 466
    expr_full_block         go to state 467
    expr_numeric_const      go to state 468
    expr_named_call         go to state 469
    expr_method_call        go to state 470
    func_addr_expr          go to state 471
    expr_field              go to state 472
    expr_call               go to state 473
    expr                    go to state 887
    expr_mtag               go to state 475
    basic_type_declaration  go to state 476
    make_decl               go to state 477
    make_struct_decl        go to state 478
    make_tuple_call         go to state 479
    make_dim_decl           go to state 480
    make_table_decl         go to state 481
    array_comprehension     go to state 482


State 678

  389 expr: expr '*' . expr

    "struct"                          shift, and go to state 409
    "class"                           shift, and go to state 410
    "true"                            shift, and go to state 411
    "false"                           shift, and go to state 412
    "new"                             shift, and go to state 413
    "typeinfo"                        shift, and go to state 414
    "type"                            shift, and go to state 415
    "array"                           shift, and go to state 416
    "null"                            shift, and go to state 417
    "table"                           shift, and go to state 418
    "deref"                           shift, and go to state 419
    "cast"                            shift, and go to state 420
    "upcast"                          shift, and go to state 421
    "addr"                            shift, and go to state 422
    "reinterpret"                     shift, and go to state 423
    "unsafe"                          shift, and go to state 424
    "fixed_array"                     shift, and go to state 425
    "default"                         shift, and go to state 426
    "bool"                            shift, and go to state 225
    "void"                            shift, and go to state 226
    "string"                          shift, and go to state 227
    "int"                             shift, and go to state 229
    "int2"                            shift, and go to state 230
    "int3"                            shift, and go to state 231
    "int4"                            shift, and go to state 232
    "uint"                            shift, and go to state 233
    "bitfield"                        shift, and go to state 427
    "uint2"                           shift, and go to state 235
    "uint3"                           shift, and go to state 236
    "uint4"                           shift, and go to state 237
    "float"                           shift, and go to state 238
    "float2"                          shift, and go to state 239
    "float3"                          shift, and go to state 240
    "float4"                          shift, and go to state 241
    "range"                           shift, and go to state 242
    "urange"                          shift, and go to state 243
    "range64"                         shift, and go to state 244
    "urange64"                        shift, and go to state 245
    "int64"                           shift, and go to state 247
    "uint64"                          shift, and go to state 248
    "double"                          shift, and go to state 249
    "int8"                            shift, and go to state 252
    "uint8"                           shift, and go to state 253
    "int16"                           shift, and go to state 254
    "uint16"                          shift, and go to state 255
    "tuple"                           shift, and go to state 428
    "variant"                         shift, and go to state 429
    "generator"                       shift, and go to state 430
    "++"                              shift, and go to state 431
    "--"                              shift, and go to state 432
    "::"                              shift, and go to state 55
    "$$"                              shift, and go to state 433
    "$i"                              shift, and go to state 434
    "$v"                              shift, and go to state 435
    "$b"                              shift, and go to state 436
    "$a"                              shift, and go to state 437
    "$c"                              shift, and go to state 438
    "..."                             shift, and go to state 439
    "integer constant"                shift, and go to state 440
    "long integer constant"           shift, and go to state 441
    "unsigned integer constant"       shift, and go to state 442
    "unsigned long integer constant"  shift, and go to state 443
    "unsigned int8 constant"          shift, and go to state 444
    "floating point constant"         shift, and go to state 445
    "double constant"                 shift, and go to state 446
    "name"                            shift, and go to state 56
    "start of the string"             shift, and go to state 447
    "begin of code block"             shift, and go to state 448
    '-'                               shift, and go to state 449
    '+'                               shift, and go to state 450
    '*'                               shift, and go to state 451
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 452
    '!'                               shift, and go to state 453
    '['                               shift, and go to state 454
    '('                               shift, and go to state 455
    '$'                               shift, and go to state 456
    '@'                               shift, and go to state 457

    string_builder          go to state 458
    expr_reader             go to state 459
    expr_call_pipe          go to state 460
    name_in_namespace       go to state 461
    expr_new                go to state 462
    expr_cast               go to state 463
    expr_type_decl          go to state 464
    expr_type_info          go to state 465
    block_or_lambda         go to state 466
    expr_full_block         go to state 467
    expr_numeric_const      go to state 468
    expr_named_call         go to state 469
    expr_method_call        go to state 470
    func_addr_expr          go to state 471
    expr_field              go to state 472
    expr_call               go to state 473
    expr                    go to state 888
    expr_mtag               go to state 475
    basic_type_declaration  go to state 476
    make_decl               go to state 477
    make_struct_decl        go to state 478
    make_tuple_call         go to state 479
    make_dim_decl           go to state 480
    make_table_decl         go to state 481
    array_comprehension     go to state 482


State 679

  390 expr: expr '/' . expr

    "struct"                          shift, and go to state 409
    "class"                           shift, and go to state 410
    "true"                            shift, and go to state 411
    "false"                           shift, and go to state 412
    "new"                             shift, and go to state 413
    "typeinfo"                        shift, and go to state 414
    "type"                            shift, and go to state 415
    "array"                           shift, and go to state 416
    "null"                            shift, and go to state 417
    "table"                           shift, and go to state 418
    "deref"                           shift, and go to state 419
    "cast"                            shift, and go to state 420
    "upcast"                          shift, and go to state 421
    "addr"                            shift, and go to state 422
    "reinterpret"                     shift, and go to state 423
    "unsafe"                          shift, and go to state 424
    "fixed_array"                     shift, and go to state 425
    "default"                         shift, and go to state 426
    "bool"                            shift, and go to state 225
    "void"                            shift, and go to state 226
    "string"                          shift, and go to state 227
    "int"                             shift, and go to state 229
    "int2"                            shift, and go to state 230
    "int3"                            shift, and go to state 231
    "int4"                            shift, and go to state 232
    "uint"                            shift, and go to state 233
    "bitfield"                        shift, and go to state 427
    "uint2"                           shift, and go to state 235
    "uint3"                           shift, and go to state 236
    "uint4"                           shift, and go to state 237
    "float"                           shift, and go to state 238
    "float2"                          shift, and go to state 239
    "float3"                          shift, and go to state 240
    "float4"                          shift, and go to state 241
    "range"                           shift, and go to state 242
    "urange"                          shift, and go to state 243
    "range64"                         shift, and go to state 244
    "urange64"                        shift, and go to state 245
    "int64"                           shift, and go to state 247
    "uint64"                          shift, and go to state 248
    "double"                          shift, and go to state 249
    "int8"                            shift, and go to state 252
    "uint8"                           shift, and go to state 253
    "int16"                           shift, and go to state 254
    "uint16"                          shift, and go to state 255
    "tuple"                           shift, and go to state 428
    "variant"                         shift, and go to state 429
    "generator"                       shift, and go to state 430
    "++"                              shift, and go to state 431
    "--"                              shift, and go to state 432
    "::"                              shift, and go to state 55
    "$$"                              shift, and go to state 433
    "$i"                              shift, and go to state 434
    "$v"                              shift, and go to state 435
    "$b"                              shift, and go to state 436
    "$a"                              shift, and go to state 437
    "$c"                              shift, and go to state 438
    "..."                             shift, and go to state 439
    "integer constant"                shift, and go to state 440
    "long integer constant"           shift, and go to state 441
    "unsigned integer constant"       shift, and go to state 442
    "unsigned long integer constant"  shift, and go to state 443
    "unsigned int8 constant"          shift, and go to state 444
    "floating point constant"         shift, and go to state 445
    "double constant"                 shift, and go to state 446
    "name"                            shift, and go to state 56
    "start of the string"             shift, and go to state 447
    "begin of code block"             shift, and go to state 448
    '-'                               shift, and go to state 449
    '+'                               shift, and go to state 450
    '*'                               shift, and go to state 451
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 452
    '!'                               shift, and go to state 453
    '['                               shift, and go to state 454
    '('                               shift, and go to state 455
    '$'                               shift, and go to state 456
    '@'                               shift, and go to state 457

    string_builder          go to state 458
    expr_reader             go to state 459
    expr_call_pipe          go to state 460
    name_in_namespace       go to state 461
    expr_new                go to state 462
    expr_cast               go to state 463
    expr_type_decl          go to state 464
    expr_type_info          go to state 465
    block_or_lambda         go to state 466
    expr_full_block         go to state 467
    expr_numeric_const      go to state 468
    expr_named_call         go to state 469
    expr_method_call        go to state 470
    func_addr_expr          go to state 471
    expr_field              go to state 472
    expr_call               go to state 473
    expr                    go to state 889
    expr_mtag               go to state 475
    basic_type_declaration  go to state 476
    make_decl               go to state 477
    make_struct_decl        go to state 478
    make_tuple_call         go to state 479
    make_dim_decl           go to state 480
    make_table_decl         go to state 481
    array_comprehension     go to state 482


State 680

  391 expr: expr '%' . expr

    "struct"                          shift, and go to state 409
    "class"                           shift, and go to state 410
    "true"                            shift, and go to state 411
    "false"                           shift, and go to state 412
    "new"                             shift, and go to state 413
    "typeinfo"                        shift, and go to state 414
    "type"                            shift, and go to state 415
    "array"                           shift, and go to state 416
    "null"                            shift, and go to state 417
    "table"                           shift, and go to state 418
    "deref"                           shift, and go to state 419
    "cast"                            shift, and go to state 420
    "upcast"                          shift, and go to state 421
    "addr"                            shift, and go to state 422
    "reinterpret"                     shift, and go to state 423
    "unsafe"                          shift, and go to state 424
    "fixed_array"                     shift, and go to state 425
    "default"                         shift, and go to state 426
    "bool"                            shift, and go to state 225
    "void"                            shift, and go to state 226
    "string"                          shift, and go to state 227
    "int"                             shift, and go to state 229
    "int2"                            shift, and go to state 230
    "int3"                            shift, and go to state 231
    "int4"                            shift, and go to state 232
    "uint"                            shift, and go to state 233
    "bitfield"                        shift, and go to state 427
    "uint2"                           shift, and go to state 235
    "uint3"                           shift, and go to state 236
    "uint4"                           shift, and go to state 237
    "float"                           shift, and go to state 238
    "float2"                          shift, and go to state 239
    "float3"                          shift, and go to state 240
    "float4"                          shift, and go to state 241
    "range"                           shift, and go to state 242
    "urange"                          shift, and go to state 243
    "range64"                         shift, and go to state 244
    "urange64"                        shift, and go to state 245
    "int64"                           shift, and go to state 247
    "uint64"                          shift, and go to state 248
    "double"                          shift, and go to state 249
    "int8"                            shift, and go to state 252
    "uint8"                           shift, and go to state 253
    "int16"                           shift, and go to state 254
    "uint16"                          shift, and go to state 255
    "tuple"                           shift, and go to state 428
    "variant"                         shift, and go to state 429
    "generator"                       shift, and go to state 430
    "++"                              shift, and go to state 431
    "--"                              shift, and go to state 432
    "::"                              shift, and go to state 55
    "$$"                              shift, and go to state 433
    "$i"                              shift, and go to state 434
    "$v"                              shift, and go to state 435
    "$b"                              shift, and go to state 436
    "$a"                              shift, and go to state 437
    "$c"                              shift, and go to state 438
    "..."                             shift, and go to state 439
    "integer constant"                shift, and go to state 440
    "long integer constant"           shift, and go to state 441
    "unsigned integer constant"       shift, and go to state 442
    "unsigned long integer constant"  shift, and go to state 443
    "unsigned int8 constant"          shift, and go to state 444
    "floating point constant"         shift, and go to state 445
    "double constant"                 shift, and go to state 446
    "name"                            shift, and go to state 56
    "start of the string"             shift, and go to state 447
    "begin of code block"             shift, and go to state 448
    '-'                               shift, and go to state 449
    '+'                               shift, and go to state 450
    '*'                               shift, and go to state 451
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 452
    '!'                               shift, and go to state 453
    '['                               shift, and go to state 454
    '('                               shift, and go to state 455
    '$'                               shift, and go to state 456
    '@'                               shift, and go to state 457

    string_builder          go to state 458
    expr_reader             go to state 459
    expr_call_pipe          go to state 460
    name_in_namespace       go to state 461
    expr_new                go to state 462
    expr_cast               go to state 463
    expr_type_decl          go to state 464
    expr_type_info          go to state 465
    block_or_lambda         go to state 466
    expr_full_block         go to state 467
    expr_numeric_const      go to state 468
    expr_named_call         go to state 469
    expr_method_call        go to state 470
    func_addr_expr          go to state 471
    expr_field              go to state 472
    expr_call               go to state 473
    expr                    go to state 890
    expr_mtag               go to state 475
    basic_type_declaration  go to state 476
    make_decl               go to state 477
    make_struct_decl        go to state 478
    make_tuple_call         go to state 479
    make_dim_decl           go to state 480
    make_table_decl         go to state 481
    array_comprehension     go to state 482


State 681

  353 expr_field: expr '.' . "name"
  354           | expr '.' . '.' "name"
  355           | expr '.' . "name" '(' ')'
  356           | expr '.' . "name" '(' expr_list ')'
  357           | expr '.' . basic_type_declaration '(' ')'
  358           | expr '.' . basic_type_declaration '(' expr_list ')'
  361           | expr '.' . $@17 error $@18
  411 expr: expr '.' . '[' expr ']'
  413     | expr '.' . "?[" expr ']'
  415     | expr '.' . "?." "name"
  461 expr_mtag: expr '.' . "$f" '(' expr ')'
  463          | expr '.' . '.' "$f" '(' expr ')'
  464          | expr '.' . "?." "$f" '(' expr ')'

    "bool"      shift, and go to state 225
    "void"      shift, and go to state 226
    "string"    shift, and go to state 227
    "int"       shift, and go to state 229
    "int2"      shift, and go to state 230
    "int3"      shift, and go to state 231
    "int4"      shift, and go to state 232
    "uint"      shift, and go to state 233
    "bitfield"  shift, and go to state 427
    "uint2"     shift, and go to state 235
    "uint3"     shift, and go to state 236
    "uint4"     shift, and go to state 237
    "float"     shift, and go to state 238
    "float2"    shift, and go to state 239
    "float3"    shift, and go to state 240
    "float4"    shift, and go to state 241
    "range"     shift, and go to state 242
    "urange"    shift, and go to state 243
    "range64"   shift, and go to state 244
    "urange64"  shift, and go to state 245
    "int64"     shift, and go to state 247
    "uint64"    shift, and go to state 248
    "double"    shift, and go to state 249
    "int8"      shift, and go to state 252
    "uint8"     shift, and go to state 253
    "int16"     shift, and go to state 254
    "uint16"    shift, and go to state 255
    "?."        shift, and go to state 891
    "?["        shift, and go to state 892
    "$f"        shift, and go to state 893
    "name"      shift, and go to state 894
    '.'         shift, and go to state 895
    '['         shift, and go to state 896

    $default  reduce using rule 359 ($@17)

    $@17                    go to state 897
    basic_type_declaration  go to state 898


State 682

  410 expr: expr '[' . expr ']'

    "struct"                          shift, and go to state 409
    "class"                           shift, and go to state 410
    "true"                            shift, and go to state 411
    "false"                           shift, and go to state 412
    "new"                             shift, and go to state 413
    "typeinfo"                        shift, and go to state 414
    "type"                            shift, and go to state 415
    "array"                           shift, and go to state 416
    "null"                            shift, and go to state 417
    "table"                           shift, and go to state 418
    "deref"                           shift, and go to state 419
    "cast"                            shift, and go to state 420
    "upcast"                          shift, and go to state 421
    "addr"                            shift, and go to state 422
    "reinterpret"                     shift, and go to state 423
    "unsafe"                          shift, and go to state 424
    "fixed_array"                     shift, and go to state 425
    "default"                         shift, and go to state 426
    "bool"                            shift, and go to state 225
    "void"                            shift, and go to state 226
    "string"                          shift, and go to state 227
    "int"                             shift, and go to state 229
    "int2"                            shift, and go to state 230
    "int3"                            shift, and go to state 231
    "int4"                            shift, and go to state 232
    "uint"                            shift, and go to state 233
    "bitfield"                        shift, and go to state 427
    "uint2"                           shift, and go to state 235
    "uint3"                           shift, and go to state 236
    "uint4"                           shift, and go to state 237
    "float"                           shift, and go to state 238
    "float2"                          shift, and go to state 239
    "float3"                          shift, and go to state 240
    "float4"                          shift, and go to state 241
    "range"                           shift, and go to state 242
    "urange"                          shift, and go to state 243
    "range64"                         shift, and go to state 244
    "urange64"                        shift, and go to state 245
    "int64"                           shift, and go to state 247
    "uint64"                          shift, and go to state 248
    "double"                          shift, and go to state 249
    "int8"                            shift, and go to state 252
    "uint8"                           shift, and go to state 253
    "int16"                           shift, and go to state 254
    "uint16"                          shift, and go to state 255
    "tuple"                           shift, and go to state 428
    "variant"                         shift, and go to state 429
    "generator"                       shift, and go to state 430
    "++"                              shift, and go to state 431
    "--"                              shift, and go to state 432
    "::"                              shift, and go to state 55
    "$$"                              shift, and go to state 433
    "$i"                              shift, and go to state 434
    "$v"                              shift, and go to state 435
    "$b"                              shift, and go to state 436
    "$a"                              shift, and go to state 437
    "$c"                              shift, and go to state 438
    "..."                             shift, and go to state 439
    "integer constant"                shift, and go to state 440
    "long integer constant"           shift, and go to state 441
    "unsigned integer constant"       shift, and go to state 442
    "unsigned long integer constant"  shift, and go to state 443
    "unsigned int8 constant"          shift, and go to state 444
    "floating point constant"         shift, and go to state 445
    "double constant"                 shift, and go to state 446
    "name"                            shift, and go to state 56
    "start of the string"             shift, and go to state 447
    "begin of code block"             shift, and go to state 448
    '-'                               shift, and go to state 449
    '+'                               shift, and go to state 450
    '*'                               shift, and go to state 451
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 452
    '!'                               shift, and go to state 453
    '['                               shift, and go to state 454
    '('                               shift, and go to state 455
    '$'                               shift, and go to state 456
    '@'                               shift, and go to state 457

    string_builder          go to state 458
    expr_reader             go to state 459
    expr_call_pipe          go to state 460
    name_in_namespace       go to state 461
    expr_new                go to state 462
    expr_cast               go to state 463
    expr_type_decl          go to state 464
    expr_type_info          go to state 465
    block_or_lambda         go to state 466
    expr_full_block         go to state 467
    expr_numeric_const      go to state 468
    expr_named_call         go to state 469
    expr_method_call        go to state 470
    func_addr_expr          go to state 471
    expr_field              go to state 472
    expr_call               go to state 473
    expr                    go to state 899
    expr_mtag               go to state 475
    basic_type_declaration  go to state 476
    make_decl               go to state 477
    make_struct_decl        go to state 478
    make_tuple_call         go to state 479
    make_dim_decl           go to state 480
    make_table_decl         go to state 481
    array_comprehension     go to state 482


State 683

  650 type_declaration_no_options_no_dim: "typedecl" '(' expr ')' .

    $default  reduce using rule 650 (type_declaration_no_options_no_dim)


State 684

  367 expr_call: basic_type_declaration '(' . ')'
  368          | basic_type_declaration '(' . expr_list ')'

    "struct"                          shift, and go to state 409
    "class"                           shift, and go to state 410
    "true"                            shift, and go to state 411
    "false"                           shift, and go to state 412
    "new"                             shift, and go to state 413
    "typeinfo"                        shift, and go to state 414
    "type"                            shift, and go to state 415
    "array"                           shift, and go to state 416
    "null"                            shift, and go to state 417
    "table"                           shift, and go to state 418
    "deref"                           shift, and go to state 419
    "cast"                            shift, and go to state 420
    "upcast"                          shift, and go to state 421
    "addr"                            shift, and go to state 422
    "reinterpret"                     shift, and go to state 423
    "unsafe"                          shift, and go to state 424
    "fixed_array"                     shift, and go to state 425
    "default"                         shift, and go to state 426
    "bool"                            shift, and go to state 225
    "void"                            shift, and go to state 226
    "string"                          shift, and go to state 227
    "int"                             shift, and go to state 229
    "int2"                            shift, and go to state 230
    "int3"                            shift, and go to state 231
    "int4"                            shift, and go to state 232
    "uint"                            shift, and go to state 233
    "bitfield"                        shift, and go to state 427
    "uint2"                           shift, and go to state 235
    "uint3"                           shift, and go to state 236
    "uint4"                           shift, and go to state 237
    "float"                           shift, and go to state 238
    "float2"                          shift, and go to state 239
    "float3"                          shift, and go to state 240
    "float4"                          shift, and go to state 241
    "range"                           shift, and go to state 242
    "urange"                          shift, and go to state 243
    "range64"                         shift, and go to state 244
    "urange64"                        shift, and go to state 245
    "int64"                           shift, and go to state 247
    "uint64"                          shift, and go to state 248
    "double"                          shift, and go to state 249
    "int8"                            shift, and go to state 252
    "uint8"                           shift, and go to state 253
    "int16"                           shift, and go to state 254
    "uint16"                          shift, and go to state 255
    "tuple"                           shift, and go to state 428
    "variant"                         shift, and go to state 429
    "generator"                       shift, and go to state 430
    "++"                              shift, and go to state 431
    "--"                              shift, and go to state 432
    "::"                              shift, and go to state 55
    "$$"                              shift, and go to state 433
    "$i"                              shift, and go to state 434
    "$v"                              shift, and go to state 435
    "$b"                              shift, and go to state 436
    "$a"                              shift, and go to state 437
    "$c"                              shift, and go to state 438
    "..."                             shift, and go to state 439
    "integer constant"                shift, and go to state 440
    "long integer constant"           shift, and go to state 441
    "unsigned integer constant"       shift, and go to state 442
    "unsigned long integer constant"  shift, and go to state 443
    "unsigned int8 constant"          shift, and go to state 444
    "floating point constant"         shift, and go to state 445
    "double constant"                 shift, and go to state 446
    "name"                            shift, and go to state 56
    "start of the string"             shift, and go to state 447
    "begin of code block"             shift, and go to state 448
    '-'                               shift, and go to state 449
    '+'                               shift, and go to state 450
    '*'                               shift, and go to state 451
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 452
    '!'                               shift, and go to state 453
    '['                               shift, and go to state 454
    '('                               shift, and go to state 455
    ')'                               shift, and go to state 900
    '$'                               shift, and go to state 456
    '@'                               shift, and go to state 457

    string_builder          go to state 458
    expr_reader             go to state 459
    expr_call_pipe          go to state 460
    name_in_namespace       go to state 461
    expr_new                go to state 462
    expr_cast               go to state 463
    expr_type_decl          go to state 464
    expr_type_info          go to state 465
    expr_list               go to state 901
    block_or_lambda         go to state 466
    expr_full_block         go to state 467
    expr_numeric_const      go to state 468
    expr_named_call         go to state 469
    expr_method_call        go to state 470
    func_addr_expr          go to state 471
    expr_field              go to state 472
    expr_call               go to state 473
    expr                    go to state 639
    expr_mtag               go to state 475
    basic_type_declaration  go to state 476
    make_decl               go to state 477
    make_struct_decl        go to state 478
    make_tuple_call         go to state 479
    make_dim_decl           go to state 480
    make_table_decl         go to state 481
    array_comprehension     go to state 482


State 685

  678 type_declaration_no_options_no_dim: "iterator" '<' $@46 type_declaration . '>' $@47
  707 type_declaration: type_declaration . '|' type_declaration_no_options
  708                 | type_declaration . '|' '#'

    '|'  shift, and go to state 375
    '>'  shift, and go to state 902


State 686

  668 type_declaration_no_options_no_dim: "smart_ptr" '<' $@40 type_declaration . '>' $@41
  707 type_declaration: type_declaration . '|' type_declaration_no_options
  708                 | type_declaration . '|' '#'

    '|'  shift, and go to state 375
    '>'  shift, and go to state 903


State 687

  623 auto_type_declaration: "auto" '(' "name" ')' .

    $default  reduce using rule 623 (auto_type_declaration)


State 688

  625 bitfield_bits: "name" .

    $default  reduce using rule 625 (bitfield_bits)


State 689

  626 bitfield_bits: bitfield_bits . "end of expression" "name"
  632 bitfield_type_declaration: "bitfield" '<' $@35 bitfield_bits . '>' $@36

    "end of expression"  shift, and go to state 904
    '>'                  shift, and go to state 905


State 690

  682 type_declaration_no_options_no_dim: "block" '<' $@48 type_declaration . '>' $@49
  707 type_declaration: type_declaration . '|' type_declaration_no_options
  708                 | type_declaration . '|' '#'

    '|'  shift, and go to state 375
    '>'  shift, and go to state 906


State 691

  685 type_declaration_no_options_no_dim: "block" '<' $@50 optional_function_argument_list . optional_function_type '>' $@51

    ':'  shift, and go to state 392

    $default  reduce using rule 118 (optional_function_type)

    optional_function_type  go to state 907


State 692

  689 type_declaration_no_options_no_dim: "function" '<' $@52 type_declaration . '>' $@53
  707 type_declaration: type_declaration . '|' type_declaration_no_options
  708                 | type_declaration . '|' '#'

    '|'  shift, and go to state 375
    '>'  shift, and go to state 908


State 693

  692 type_declaration_no_options_no_dim: "function" '<' $@54 optional_function_argument_list . optional_function_type '>' $@55

    ':'  shift, and go to state 392

    $default  reduce using rule 118 (optional_function_type)

    optional_function_type  go to state 909


State 694

  696 type_declaration_no_options_no_dim: "lambda" '<' $@56 type_declaration . '>' $@57
  707 type_declaration: type_declaration . '|' type_declaration_no_options
  708                 | type_declaration . '|' '#'

    '|'  shift, and go to state 375
    '>'  shift, and go to state 910


State 695

  699 type_declaration_no_options_no_dim: "lambda" '<' $@58 optional_function_argument_list . optional_function_type '>' $@59

    ':'  shift, and go to state 392

    $default  reduce using rule 118 (optional_function_type)

    optional_function_type  go to state 911


State 696

  495 tuple_type_list: tuple_type .

    $default  reduce using rule 495 (tuple_type_list)


State 697

  496 tuple_type_list: tuple_type_list . c_or_s tuple_type
  702 type_declaration_no_options_no_dim: "tuple" '<' $@60 tuple_type_list . '>' $@61

    "end of expression"  shift, and go to state 512
    ','                  shift, and go to state 513
    '>'                  shift, and go to state 912

    c_or_s  go to state 913


State 698

  501 variant_type_list: variant_type .

    $default  reduce using rule 501 (variant_type_list)


State 699

  502 variant_type_list: variant_type_list . c_or_s variant_type
  705 type_declaration_no_options_no_dim: "variant" '<' $@62 variant_type_list . '>' $@63

    "end of expression"  shift, and go to state 512
    ','                  shift, and go to state 513
    '>'                  shift, and go to state 914

    c_or_s  go to state 915


State 700

  624 auto_type_declaration: "$t" '(' expr ')' .

    $default  reduce using rule 624 (auto_type_declaration)


State 701

  653 type_declaration_no_options_no_dim: '$' name_in_namespace '<' $@39 . type_declaration_no_options_list '>' '(' optional_expr_list ')'

    "type"       shift, and go to state 219
    "array"      shift, and go to state 220
    "table"      shift, and go to state 221
    "typedecl"   shift, and go to state 222
    "iterator"   shift, and go to state 223
    "smart_ptr"  shift, and go to state 224
    "bool"       shift, and go to state 225
    "void"       shift, and go to state 226
    "string"     shift, and go to state 227
    "auto"       shift, and go to state 228
    "int"        shift, and go to state 229
    "int2"       shift, and go to state 230
    "int3"       shift, and go to state 231
    "int4"       shift, and go to state 232
    "uint"       shift, and go to state 233
    "bitfield"   shift, and go to state 234
    "uint2"      shift, and go to state 235
    "uint3"      shift, and go to state 236
    "uint4"      shift, and go to state 237
    "float"      shift, and go to state 238
    "float2"     shift, and go to state 239
    "float3"     shift, and go to state 240
    "float4"     shift, and go to state 241
    "range"      shift, and go to state 242
    "urange"     shift, and go to state 243
    "range64"    shift, and go to state 244
    "urange64"   shift, and go to state 245
    "block"      shift, and go to state 246
    "int64"      shift, and go to state 247
    "uint64"     shift, and go to state 248
    "double"     shift, and go to state 249
    "function"   shift, and go to state 250
    "lambda"     shift, and go to state 251
    "int8"       shift, and go to state 252
    "uint8"      shift, and go to state 253
    "int16"      shift, and go to state 254
    "uint16"     shift, and go to state 255
    "tuple"      shift, and go to state 256
    "variant"    shift, and go to state 257
    "::"         shift, and go to state 55
    "$t"         shift, and go to state 258
    "name"       shift, and go to state 56
    '$'          shift, and go to state 259

    type_declaration_no_options_list    go to state 916
    name_in_namespace                   go to state 260
    basic_type_declaration              go to state 261
    structure_type_declaration          go to state 262
    auto_type_declaration               go to state 263
    bitfield_type_declaration           go to state 264
    type_declaration_no_options         go to state 265
    type_declaration_no_options_no_dim  go to state 266
    type_declaration                    go to state 917


State 702

  651 type_declaration_no_options_no_dim: '$' name_in_namespace '(' optional_expr_list . ')'

    ')'  shift, and go to state 918


State 703

  237 optional_expr_list: expr_list . optional_comma
  295 expr_list: expr_list . ',' expr

    ','  shift, and go to state 830

    $default  reduce using rule 788 (optional_comma)

    optional_comma  go to state 919


State 704

  654 type_declaration_no_options_no_dim: type_declaration_no_options_no_dim '-' '[' ']' .

    $default  reduce using rule 654 (type_declaration_no_options_no_dim)


State 705

  637 dim_list: '[' expr ']' .

    $default  reduce using rule 637 (dim_list)


State 706

  640 dim_list: dim_list '[' ']' .

    $default  reduce using rule 640 (dim_list)


State 707

  342 expr_method_call: expr . "->" "name" '(' ')'
  343                 | expr . "->" "name" '(' expr_list ')'
  353 expr_field: expr . '.' "name"
  354           | expr . '.' '.' "name"
  355           | expr . '.' "name" '(' ')'
  356           | expr . '.' "name" '(' expr_list ')'
  357           | expr . '.' basic_type_declaration '(' ')'
  358           | expr . '.' basic_type_declaration '(' expr_list ')'
  361           | expr . '.' $@17 error $@18
  383 expr: expr . "<<" expr
  384     | expr . ">>" expr
  385     | expr . "<<<" expr
  386     | expr . ">>>" expr
  387     | expr . '+' expr
  388     | expr . '-' expr
  389     | expr . '*' expr
  390     | expr . '/' expr
  391     | expr . '%' expr
  392     | expr . '<' expr
  393     | expr . '>' expr
  394     | expr . "==" expr
  395     | expr . "!=" expr
  396     | expr . "<=" expr
  397     | expr . ">=" expr
  398     | expr . '&' expr
  399     | expr . '|' expr
  400     | expr . '^' expr
  401     | expr . "&&" expr
  402     | expr . "||" expr
  403     | expr . "^^" expr
  404     | expr . ".." expr
  407     | expr . "++"
  408     | expr . "--"
  410     | expr . '[' expr ']'
  411     | expr . '.' '[' expr ']'
  412     | expr . "?[" expr ']'
  413     | expr . '.' "?[" expr ']'
  414     | expr . "?." "name"
  415     | expr . '.' "?." "name"
  424     | expr . "??" expr
  425     | expr . '?' expr ':' expr
  428     | expr . "is" "type" '<' $@19 type_declaration_no_options '>' $@20
  429     | expr . "is" basic_type_declaration
  430     | expr . "is" "name"
  431     | expr . "as" "name"
  434     | expr . "as" "type" '<' $@21 type_declaration '>' $@22
  435     | expr . "as" basic_type_declaration
  436     | expr . '?' "as" "name"
  439     | expr . '?' "as" "type" '<' $@23 type_declaration '>' $@24
  440     | expr . '?' "as" basic_type_declaration
  448     | expr . "<|" expr
  449     | expr . "|>" expr
  450     | expr . "|>" basic_type_declaration
  461 expr_mtag: expr . '.' "$f" '(' expr ')'
  462          | expr . "?." "$f" '(' expr ')'
  463          | expr . '.' '.' "$f" '(' expr ')'
  464          | expr . '.' "?." "$f" '(' expr ')'
  465          | expr . "as" "$f" '(' expr ')'
  466          | expr . '?' "as" "$f" '(' expr ')'
  467          | expr . "is" "$f" '(' expr ')'
  639 dim_list: dim_list '[' expr . ']'

    "is"   shift, and go to state 648
    "as"   shift, and go to state 649
    "<<"   shift, and go to state 650
    ">>"   shift, and go to state 651
    "++"   shift, and go to state 652
    "--"   shift, and go to state 653
    "<="   shift, and go to state 654
    ">="   shift, and go to state 655
    "=="   shift, and go to state 656
    "!="   shift, and go to state 657
    "->"   shift, and go to state 658
    "??"   shift, and go to state 659
    "?."   shift, and go to state 660
    "?["   shift, and go to state 661
    "<|"   shift, and go to state 662
    "|>"   shift, and go to state 663
    "<<<"  shift, and go to state 664
    ">>>"  shift, and go to state 665
    "&&"   shift, and go to state 666
    "||"   shift, and go to state 667
    "^^"   shift, and go to state 668
    ".."   shift, and go to state 669
    '?'    shift, and go to state 670
    '|'    shift, and go to state 671
    '^'    shift, and go to state 672
    '&'    shift, and go to state 673
    '<'    shift, and go to state 674
    '>'    shift, and go to state 675
    '-'    shift, and go to state 676
    '+'    shift, and go to state 677
    '*'    shift, and go to state 678
    '/'    shift, and go to state 679
    '%'    shift, and go to state 680
    '.'    shift, and go to state 681
    '['    shift, and go to state 682
    ']'    shift, and go to state 920


State 708

  629 bitfield_alias_bits: bitfield_alias_bits ',' "name" .

    $default  reduce using rule 629 (bitfield_alias_bits)


State 709

  720 bitfield_alias_declaration: "bitfield" optional_public_or_private_alias "name" $@70 "begin of code block" $@71 bitfield_alias_bits optional_comma $@72 . "end of code block"

    "end of code block"  shift, and go to state 921


State 710

  494 tuple_type: "name" ':' . type_declaration

    "type"       shift, and go to state 219
    "array"      shift, and go to state 220
    "table"      shift, and go to state 221
    "typedecl"   shift, and go to state 222
    "iterator"   shift, and go to state 223
    "smart_ptr"  shift, and go to state 224
    "bool"       shift, and go to state 225
    "void"       shift, and go to state 226
    "string"     shift, and go to state 227
    "auto"       shift, and go to state 228
    "int"        shift, and go to state 229
    "int2"       shift, and go to state 230
    "int3"       shift, and go to state 231
    "int4"       shift, and go to state 232
    "uint"       shift, and go to state 233
    "bitfield"   shift, and go to state 234
    "uint2"      shift, and go to state 235
    "uint3"      shift, and go to state 236
    "uint4"      shift, and go to state 237
    "float"      shift, and go to state 238
    "float2"     shift, and go to state 239
    "float3"     shift, and go to state 240
    "float4"     shift, and go to state 241
    "range"      shift, and go to state 242
    "urange"     shift, and go to state 243
    "range64"    shift, and go to state 244
    "urange64"   shift, and go to state 245
    "block"      shift, and go to state 246
    "int64"      shift, and go to state 247
    "uint64"     shift, and go to state 248
    "double"     shift, and go to state 249
    "function"   shift, and go to state 250
    "lambda"     shift, and go to state 251
    "int8"       shift, and go to state 252
    "uint8"      shift, and go to state 253
    "int16"      shift, and go to state 254
    "uint16"     shift, and go to state 255
    "tuple"      shift, and go to state 256
    "variant"    shift, and go to state 257
    "::"         shift, and go to state 55
    "$t"         shift, and go to state 258
    "name"       shift, and go to state 56
    '$'          shift, and go to state 259

    name_in_namespace                   go to state 260
    basic_type_declaration              go to state 261
    structure_type_declaration          go to state 262
    auto_type_declaration               go to state 263
    bitfield_type_declaration           go to state 264
    type_declaration_no_options         go to state 265
    type_declaration_no_options_no_dim  go to state 266
    type_declaration                    go to state 922


State 711

  499 tuple_alias_type_list: tuple_alias_type_list tuple_type c_or_s .

    $default  reduce using rule 499 (tuple_alias_type_list)


State 712

  712 tuple_alias_declaration: "tuple" optional_public_or_private_alias "name" $@64 "begin of code block" $@65 tuple_alias_type_list $@66 "end of code block" .

    $default  reduce using rule 712 (tuple_alias_declaration)


State 713

  500 variant_type: "name" ':' . type_declaration

    "type"       shift, and go to state 219
    "array"      shift, and go to state 220
    "table"      shift, and go to state 221
    "typedecl"   shift, and go to state 222
    "iterator"   shift, and go to state 223
    "smart_ptr"  shift, and go to state 224
    "bool"       shift, and go to state 225
    "void"       shift, and go to state 226
    "string"     shift, and go to state 227
    "auto"       shift, and go to state 228
    "int"        shift, and go to state 229
    "int2"       shift, and go to state 230
    "int3"       shift, and go to state 231
    "int4"       shift, and go to state 232
    "uint"       shift, and go to state 233
    "bitfield"   shift, and go to state 234
    "uint2"      shift, and go to state 235
    "uint3"      shift, and go to state 236
    "uint4"      shift, and go to state 237
    "float"      shift, and go to state 238
    "float2"     shift, and go to state 239
    "float3"     shift, and go to state 240
    "float4"     shift, and go to state 241
    "range"      shift, and go to state 242
    "urange"     shift, and go to state 243
    "range64"    shift, and go to state 244
    "urange64"   shift, and go to state 245
    "block"      shift, and go to state 246
    "int64"      shift, and go to state 247
    "uint64"     shift, and go to state 248
    "double"     shift, and go to state 249
    "function"   shift, and go to state 250
    "lambda"     shift, and go to state 251
    "int8"       shift, and go to state 252
    "uint8"      shift, and go to state 253
    "int16"      shift, and go to state 254
    "uint16"     shift, and go to state 255
    "tuple"      shift, and go to state 256
    "variant"    shift, and go to state 257
    "::"         shift, and go to state 55
    "$t"         shift, and go to state 258
    "name"       shift, and go to state 56
    '$'          shift, and go to state 259

    name_in_namespace                   go to state 260
    basic_type_declaration              go to state 261
    structure_type_declaration          go to state 262
    auto_type_declaration               go to state 263
    bitfield_type_declaration           go to state 264
    type_declaration_no_options         go to state 265
    type_declaration_no_options_no_dim  go to state 266
    type_declaration                    go to state 923


State 714

  505 variant_alias_type_list: variant_alias_type_list variant_type c_or_s .

    $default  reduce using rule 505 (variant_alias_type_list)


State 715

  716 variant_alias_declaration: "variant" optional_public_or_private_alias "name" $@67 "begin of code block" $@68 variant_alias_type_list $@69 "end of code block" .

    $default  reduce using rule 716 (variant_alias_declaration)


State 716

  342 expr_method_call: expr . "->" "name" '(' ')'
  343                 | expr . "->" "name" '(' expr_list ')'
  353 expr_field: expr . '.' "name"
  354           | expr . '.' '.' "name"
  355           | expr . '.' "name" '(' ')'
  356           | expr . '.' "name" '(' expr_list ')'
  357           | expr . '.' basic_type_declaration '(' ')'
  358           | expr . '.' basic_type_declaration '(' expr_list ')'
  361           | expr . '.' $@17 error $@18
  383 expr: expr . "<<" expr
  384     | expr . ">>" expr
  385     | expr . "<<<" expr
  386     | expr . ">>>" expr
  387     | expr . '+' expr
  388     | expr . '-' expr
  389     | expr . '*' expr
  390     | expr . '/' expr
  391     | expr . '%' expr
  392     | expr . '<' expr
  393     | expr . '>' expr
  394     | expr . "==" expr
  395     | expr . "!=" expr
  396     | expr . "<=" expr
  397     | expr . ">=" expr
  398     | expr . '&' expr
  399     | expr . '|' expr
  400     | expr . '^' expr
  401     | expr . "&&" expr
  402     | expr . "||" expr
  403     | expr . "^^" expr
  404     | expr . ".." expr
  407     | expr . "++"
  408     | expr . "--"
  410     | expr . '[' expr ']'
  411     | expr . '.' '[' expr ']'
  412     | expr . "?[" expr ']'
  413     | expr . '.' "?[" expr ']'
  414     | expr . "?." "name"
  415     | expr . '.' "?." "name"
  424     | expr . "??" expr
  425     | expr . '?' expr ':' expr
  428     | expr . "is" "type" '<' $@19 type_declaration_no_options '>' $@20
  429     | expr . "is" basic_type_declaration
  430     | expr . "is" "name"
  431     | expr . "as" "name"
  434     | expr . "as" "type" '<' $@21 type_declaration '>' $@22
  435     | expr . "as" basic_type_declaration
  436     | expr . '?' "as" "name"
  439     | expr . '?' "as" "type" '<' $@23 type_declaration '>' $@24
  440     | expr . '?' "as" basic_type_declaration
  448     | expr . "<|" expr
  449     | expr . "|>" expr
  450     | expr . "|>" basic_type_declaration
  461 expr_mtag: expr . '.' "$f" '(' expr ')'
  462          | expr . "?." "$f" '(' expr ')'
  463          | expr . '.' '.' "$f" '(' expr ')'
  464          | expr . '.' "?." "$f" '(' expr ')'
  465          | expr . "as" "$f" '(' expr ')'
  466          | expr . '?' "as" "$f" '(' expr ')'
  467          | expr . "is" "$f" '(' expr ')'
  490 function_argument_declaration: "$a" '(' expr . ')'

    "is"   shift, and go to state 648
    "as"   shift, and go to state 649
    "<<"   shift, and go to state 650
    ">>"   shift, and go to state 651
    "++"   shift, and go to state 652
    "--"   shift, and go to state 653
    "<="   shift, and go to state 654
    ">="   shift, and go to state 655
    "=="   shift, and go to state 656
    "!="   shift, and go to state 657
    "->"   shift, and go to state 658
    "??"   shift, and go to state 659
    "?."   shift, and go to state 660
    "?["   shift, and go to state 661
    "<|"   shift, and go to state 662
    "|>"   shift, and go to state 663
    "<<<"  shift, and go to state 664
    ">>>"  shift, and go to state 665
    "&&"   shift, and go to state 666
    "||"   shift, and go to state 667
    "^^"   shift, and go to state 668
    ".."   shift, and go to state 669
    '?'    shift, and go to state 670
    '|'    shift, and go to state 671
    '^'    shift, and go to state 672
    '&'    shift, and go to state 673
    '<'    shift, and go to state 674
    '>'    shift, and go to state 675
    '-'    shift, and go to state 676
    '+'    shift, and go to state 677
    '*'    shift, and go to state 678
    '/'    shift, and go to state 679
    '%'    shift, and go to state 680
    '.'    shift, and go to state 681
    '['    shift, and go to state 682
    ')'    shift, and go to state 924


State 717

  582 variable_name_with_pos_list: "$i" . '(' expr ')'

    '('  shift, and go to state 925


State 718

  581 variable_name_with_pos_list: "name" .
  583                            | "name" . "aka" "name"

    "aka"  shift, and go to state 926

    $default  reduce using rule 581 (variable_name_with_pos_list)


State 719

  489 function_argument_declaration: optional_field_annotation kwd_let_var_or_nothing variable_declaration .

    $default  reduce using rule 489 (function_argument_declaration)


State 720

  508 variable_declaration: variable_name_with_pos_list .
  509                     | variable_name_with_pos_list . '&'
  510                     | variable_name_with_pos_list . ':' type_declaration
  511                     | variable_name_with_pos_list . ':' type_declaration copy_or_move expr
  512                     | variable_name_with_pos_list . copy_or_move expr
  584 variable_name_with_pos_list: variable_name_with_pos_list . ',' "name"
  585                            | variable_name_with_pos_list . ',' "name" "aka" "name"

    "<-"  shift, and go to state 927
    ','   shift, and go to state 928
    '='   shift, and go to state 929
    ':'   shift, and go to state 930
    '&'   shift, and go to state 931

    $default  reduce using rule 508 (variable_declaration)

    copy_or_move  go to state 932


State 721

  492 function_argument_list: function_argument_list "end of expression" function_argument_declaration .

    $default  reduce using rule 492 (function_argument_list)


State 722

   73 expression_while_loop: "while" '(' . expr ')' expression_block

    "struct"                          shift, and go to state 409
    "class"                           shift, and go to state 410
    "true"                            shift, and go to state 411
    "false"                           shift, and go to state 412
    "new"                             shift, and go to state 413
    "typeinfo"                        shift, and go to state 414
    "type"                            shift, and go to state 415
    "array"                           shift, and go to state 416
    "null"                            shift, and go to state 417
    "table"                           shift, and go to state 418
    "deref"                           shift, and go to state 419
    "cast"                            shift, and go to state 420
    "upcast"                          shift, and go to state 421
    "addr"                            shift, and go to state 422
    "reinterpret"                     shift, and go to state 423
    "unsafe"                          shift, and go to state 424
    "fixed_array"                     shift, and go to state 425
    "default"                         shift, and go to state 426
    "bool"                            shift, and go to state 225
    "void"                            shift, and go to state 226
    "string"                          shift, and go to state 227
    "int"                             shift, and go to state 229
    "int2"                            shift, and go to state 230
    "int3"                            shift, and go to state 231
    "int4"                            shift, and go to state 232
    "uint"                            shift, and go to state 233
    "bitfield"                        shift, and go to state 427
    "uint2"                           shift, and go to state 235
    "uint3"                           shift, and go to state 236
    "uint4"                           shift, and go to state 237
    "float"                           shift, and go to state 238
    "float2"                          shift, and go to state 239
    "float3"                          shift, and go to state 240
    "float4"                          shift, and go to state 241
    "range"                           shift, and go to state 242
    "urange"                          shift, and go to state 243
    "range64"                         shift, and go to state 244
    "urange64"                        shift, and go to state 245
    "int64"                           shift, and go to state 247
    "uint64"                          shift, and go to state 248
    "double"                          shift, and go to state 249
    "int8"                            shift, and go to state 252
    "uint8"                           shift, and go to state 253
    "int16"                           shift, and go to state 254
    "uint16"                          shift, and go to state 255
    "tuple"                           shift, and go to state 428
    "variant"                         shift, and go to state 429
    "generator"                       shift, and go to state 430
    "++"                              shift, and go to state 431
    "--"                              shift, and go to state 432
    "::"                              shift, and go to state 55
    "$$"                              shift, and go to state 433
    "$i"                              shift, and go to state 434
    "$v"                              shift, and go to state 435
    "$b"                              shift, and go to state 436
    "$a"                              shift, and go to state 437
    "$c"                              shift, and go to state 438
    "..."                             shift, and go to state 439
    "integer constant"                shift, and go to state 440
    "long integer constant"           shift, and go to state 441
    "unsigned integer constant"       shift, and go to state 442
    "unsigned long integer constant"  shift, and go to state 443
    "unsigned int8 constant"          shift, and go to state 444
    "floating point constant"         shift, and go to state 445
    "double constant"                 shift, and go to state 446
    "name"                            shift, and go to state 56
    "start of the string"             shift, and go to state 447
    "begin of code block"             shift, and go to state 448
    '-'                               shift, and go to state 449
    '+'                               shift, and go to state 450
    '*'                               shift, and go to state 451
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 452
    '!'                               shift, and go to state 453
    '['                               shift, and go to state 454
    '('                               shift, and go to state 455
    '$'                               shift, and go to state 456
    '@'                               shift, and go to state 457

    string_builder          go to state 458
    expr_reader             go to state 459
    expr_call_pipe          go to state 460
    name_in_namespace       go to state 461
    expr_new                go to state 462
    expr_cast               go to state 463
    expr_type_decl          go to state 464
    expr_type_info          go to state 465
    block_or_lambda         go to state 466
    expr_full_block         go to state 467
    expr_numeric_const      go to state 468
    expr_named_call         go to state 469
    expr_method_call        go to state 470
    func_addr_expr          go to state 471
    expr_field              go to state 472
    expr_call               go to state 473
    expr                    go to state 933
    expr_mtag               go to state 475
    basic_type_declaration  go to state 476
    make_decl               go to state 477
    make_struct_decl        go to state 478
    make_tuple_call         go to state 479
    make_dim_decl           go to state 480
    make_table_decl         go to state 481
    array_comprehension     go to state 482


State 723

   71 expression_for_loop: "for" '(' . variable_name_with_pos_list "in" expr_list ')' expression_block

    "$i"    shift, and go to state 717
    "name"  shift, and go to state 718

    variable_name_with_pos_list  go to state 934


State 724

  261 expression_return: "return" "<-" . expr

    "struct"                          shift, and go to state 409
    "class"                           shift, and go to state 410
    "true"                            shift, and go to state 411
    "false"                           shift, and go to state 412
    "new"                             shift, and go to state 413
    "typeinfo"                        shift, and go to state 414
    "type"                            shift, and go to state 415
    "array"                           shift, and go to state 416
    "null"                            shift, and go to state 417
    "table"                           shift, and go to state 418
    "deref"                           shift, and go to state 419
    "cast"                            shift, and go to state 420
    "upcast"                          shift, and go to state 421
    "addr"                            shift, and go to state 422
    "reinterpret"                     shift, and go to state 423
    "unsafe"                          shift, and go to state 424
    "fixed_array"                     shift, and go to state 425
    "default"                         shift, and go to state 426
    "bool"                            shift, and go to state 225
    "void"                            shift, and go to state 226
    "string"                          shift, and go to state 227
    "int"                             shift, and go to state 229
    "int2"                            shift, and go to state 230
    "int3"                            shift, and go to state 231
    "int4"                            shift, and go to state 232
    "uint"                            shift, and go to state 233
    "bitfield"                        shift, and go to state 427
    "uint2"                           shift, and go to state 235
    "uint3"                           shift, and go to state 236
    "uint4"                           shift, and go to state 237
    "float"                           shift, and go to state 238
    "float2"                          shift, and go to state 239
    "float3"                          shift, and go to state 240
    "float4"                          shift, and go to state 241
    "range"                           shift, and go to state 242
    "urange"                          shift, and go to state 243
    "range64"                         shift, and go to state 244
    "urange64"                        shift, and go to state 245
    "int64"                           shift, and go to state 247
    "uint64"                          shift, and go to state 248
    "double"                          shift, and go to state 249
    "int8"                            shift, and go to state 252
    "uint8"                           shift, and go to state 253
    "int16"                           shift, and go to state 254
    "uint16"                          shift, and go to state 255
    "tuple"                           shift, and go to state 428
    "variant"                         shift, and go to state 429
    "generator"                       shift, and go to state 430
    "++"                              shift, and go to state 431
    "--"                              shift, and go to state 432
    "::"                              shift, and go to state 55
    "$$"                              shift, and go to state 433
    "$i"                              shift, and go to state 434
    "$v"                              shift, and go to state 435
    "$b"                              shift, and go to state 436
    "$a"                              shift, and go to state 437
    "$c"                              shift, and go to state 438
    "..."                             shift, and go to state 439
    "integer constant"                shift, and go to state 440
    "long integer constant"           shift, and go to state 441
    "unsigned integer constant"       shift, and go to state 442
    "unsigned long integer constant"  shift, and go to state 443
    "unsigned int8 constant"          shift, and go to state 444
    "floating point constant"         shift, and go to state 445
    "double constant"                 shift, and go to state 446
    "name"                            shift, and go to state 56
    "start of the string"             shift, and go to state 447
    "begin of code block"             shift, and go to state 448
    '-'                               shift, and go to state 449
    '+'                               shift, and go to state 450
    '*'                               shift, and go to state 451
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 452
    '!'                               shift, and go to state 453
    '['                               shift, and go to state 454
    '('                               shift, and go to state 455
    '$'                               shift, and go to state 456
    '@'                               shift, and go to state 457

    string_builder          go to state 458
    expr_reader             go to state 459
    expr_call_pipe          go to state 460
    name_in_namespace       go to state 461
    expr_new                go to state 462
    expr_cast               go to state 463
    expr_type_decl          go to state 464
    expr_type_info          go to state 465
    block_or_lambda         go to state 466
    expr_full_block         go to state 467
    expr_numeric_const      go to state 468
    expr_named_call         go to state 469
    expr_method_call        go to state 470
    func_addr_expr          go to state 471
    expr_field              go to state 472
    expr_call               go to state 473
    expr                    go to state 935
    expr_mtag               go to state 475
    basic_type_declaration  go to state 476
    make_decl               go to state 477
    make_struct_decl        go to state 478
    make_tuple_call         go to state 479
    make_dim_decl           go to state 480
    make_table_decl         go to state 481
    array_comprehension     go to state 482


State 725

  260 expression_return: "return" expr .
  342 expr_method_call: expr . "->" "name" '(' ')'
  343                 | expr . "->" "name" '(' expr_list ')'
  353 expr_field: expr . '.' "name"
  354           | expr . '.' '.' "name"
  355           | expr . '.' "name" '(' ')'
  356           | expr . '.' "name" '(' expr_list ')'
  357           | expr . '.' basic_type_declaration '(' ')'
  358           | expr . '.' basic_type_declaration '(' expr_list ')'
  361           | expr . '.' $@17 error $@18
  383 expr: expr . "<<" expr
  384     | expr . ">>" expr
  385     | expr . "<<<" expr
  386     | expr . ">>>" expr
  387     | expr . '+' expr
  388     | expr . '-' expr
  389     | expr . '*' expr
  390     | expr . '/' expr
  391     | expr . '%' expr
  392     | expr . '<' expr
  393     | expr . '>' expr
  394     | expr . "==" expr
  395     | expr . "!=" expr
  396     | expr . "<=" expr
  397     | expr . ">=" expr
  398     | expr . '&' expr
  399     | expr . '|' expr
  400     | expr . '^' expr
  401     | expr . "&&" expr
  402     | expr . "||" expr
  403     | expr . "^^" expr
  404     | expr . ".." expr
  407     | expr . "++"
  408     | expr . "--"
  410     | expr . '[' expr ']'
  411     | expr . '.' '[' expr ']'
  412     | expr . "?[" expr ']'
  413     | expr . '.' "?[" expr ']'
  414     | expr . "?." "name"
  415     | expr . '.' "?." "name"
  424     | expr . "??" expr
  425     | expr . '?' expr ':' expr
  428     | expr . "is" "type" '<' $@19 type_declaration_no_options '>' $@20
  429     | expr . "is" basic_type_declaration
  430     | expr . "is" "name"
  431     | expr . "as" "name"
  434     | expr . "as" "type" '<' $@21 type_declaration '>' $@22
  435     | expr . "as" basic_type_declaration
  436     | expr . '?' "as" "name"
  439     | expr . '?' "as" "type" '<' $@23 type_declaration '>' $@24
  440     | expr . '?' "as" basic_type_declaration
  448     | expr . "<|" expr
  449     | expr . "|>" expr
  450     | expr . "|>" basic_type_declaration
  461 expr_mtag: expr . '.' "$f" '(' expr ')'
  462          | expr . "?." "$f" '(' expr ')'
  463          | expr . '.' '.' "$f" '(' expr ')'
  464          | expr . '.' "?." "$f" '(' expr ')'
  465          | expr . "as" "$f" '(' expr ')'
  466          | expr . '?' "as" "$f" '(' expr ')'
  467          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 648
    "as"   shift, and go to state 649
    "<<"   shift, and go to state 650
    ">>"   shift, and go to state 651
    "++"   shift, and go to state 652
    "--"   shift, and go to state 653
    "<="   shift, and go to state 654
    ">="   shift, and go to state 655
    "=="   shift, and go to state 656
    "!="   shift, and go to state 657
    "->"   shift, and go to state 658
    "??"   shift, and go to state 659
    "?."   shift, and go to state 660
    "?["   shift, and go to state 661
    "<|"   shift, and go to state 662
    "|>"   shift, and go to state 663
    "<<<"  shift, and go to state 664
    ">>>"  shift, and go to state 665
    "&&"   shift, and go to state 666
    "||"   shift, and go to state 667
    "^^"   shift, and go to state 668
    ".."   shift, and go to state 669
    '?'    shift, and go to state 670
    '|'    shift, and go to state 671
    '^'    shift, and go to state 672
    '&'    shift, and go to state 673
    '<'    shift, and go to state 674
    '>'    shift, and go to state 675
    '-'    shift, and go to state 676
    '+'    shift, and go to state 677
    '*'    shift, and go to state 678
    '/'    shift, and go to state 679
    '%'    shift, and go to state 680
    '.'    shift, and go to state 681
    '['    shift, and go to state 682

    $default  reduce using rule 260 (expression_return)


State 726

  264 expression_try_catch: "try" expression_block . "recover" expression_block

    "recover"  shift, and go to state 936


State 727

  246 expression_delete: "delete" "explicit" . expr

    "struct"                          shift, and go to state 409
    "class"                           shift, and go to state 410
    "true"                            shift, and go to state 411
    "false"                           shift, and go to state 412
    "new"                             shift, and go to state 413
    "typeinfo"                        shift, and go to state 414
    "type"                            shift, and go to state 415
    "array"                           shift, and go to state 416
    "null"                            shift, and go to state 417
    "table"                           shift, and go to state 418
    "deref"                           shift, and go to state 419
    "cast"                            shift, and go to state 420
    "upcast"                          shift, and go to state 421
    "addr"                            shift, and go to state 422
    "reinterpret"                     shift, and go to state 423
    "unsafe"                          shift, and go to state 424
    "fixed_array"                     shift, and go to state 425
    "default"                         shift, and go to state 426
    "bool"                            shift, and go to state 225
    "void"                            shift, and go to state 226
    "string"                          shift, and go to state 227
    "int"                             shift, and go to state 229
    "int2"                            shift, and go to state 230
    "int3"                            shift, and go to state 231
    "int4"                            shift, and go to state 232
    "uint"                            shift, and go to state 233
    "bitfield"                        shift, and go to state 427
    "uint2"                           shift, and go to state 235
    "uint3"                           shift, and go to state 236
    "uint4"                           shift, and go to state 237
    "float"                           shift, and go to state 238
    "float2"                          shift, and go to state 239
    "float3"                          shift, and go to state 240
    "float4"                          shift, and go to state 241
    "range"                           shift, and go to state 242
    "urange"                          shift, and go to state 243
    "range64"                         shift, and go to state 244
    "urange64"                        shift, and go to state 245
    "int64"                           shift, and go to state 247
    "uint64"                          shift, and go to state 248
    "double"                          shift, and go to state 249
    "int8"                            shift, and go to state 252
    "uint8"                           shift, and go to state 253
    "int16"                           shift, and go to state 254
    "uint16"                          shift, and go to state 255
    "tuple"                           shift, and go to state 428
    "variant"                         shift, and go to state 429
    "generator"                       shift, and go to state 430
    "++"                              shift, and go to state 431
    "--"                              shift, and go to state 432
    "::"                              shift, and go to state 55
    "$$"                              shift, and go to state 433
    "$i"                              shift, and go to state 434
    "$v"                              shift, and go to state 435
    "$b"                              shift, and go to state 436
    "$a"                              shift, and go to state 437
    "$c"                              shift, and go to state 438
    "..."                             shift, and go to state 439
    "integer constant"                shift, and go to state 440
    "long integer constant"           shift, and go to state 441
    "unsigned integer constant"       shift, and go to state 442
    "unsigned long integer constant"  shift, and go to state 443
    "unsigned int8 constant"          shift, and go to state 444
    "floating point constant"         shift, and go to state 445
    "double constant"                 shift, and go to state 446
    "name"                            shift, and go to state 56
    "start of the string"             shift, and go to state 447
    "begin of code block"             shift, and go to state 448
    '-'                               shift, and go to state 449
    '+'                               shift, and go to state 450
    '*'                               shift, and go to state 451
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 452
    '!'                               shift, and go to state 453
    '['                               shift, and go to state 454
    '('                               shift, and go to state 455
    '$'                               shift, and go to state 456
    '@'                               shift, and go to state 457

    string_builder          go to state 458
    expr_reader             go to state 459
    expr_call_pipe          go to state 460
    name_in_namespace       go to state 461
    expr_new                go to state 462
    expr_cast               go to state 463
    expr_type_decl          go to state 464
    expr_type_info          go to state 465
    block_or_lambda         go to state 466
    expr_full_block         go to state 467
    expr_numeric_const      go to state 468
    expr_named_call         go to state 469
    expr_method_call        go to state 470
    func_addr_expr          go to state 471
    expr_field              go to state 472
    expr_call               go to state 473
    expr                    go to state 937
    expr_mtag               go to state 475
    basic_type_declaration  go to state 476
    make_decl               go to state 477
    make_struct_decl        go to state 478
    make_tuple_call         go to state 479
    make_dim_decl           go to state 480
    make_table_decl         go to state 481
    array_comprehension     go to state 482


State 728

  245 expression_delete: "delete" expr .
  342 expr_method_call: expr . "->" "name" '(' ')'
  343                 | expr . "->" "name" '(' expr_list ')'
  353 expr_field: expr . '.' "name"
  354           | expr . '.' '.' "name"
  355           | expr . '.' "name" '(' ')'
  356           | expr . '.' "name" '(' expr_list ')'
  357           | expr . '.' basic_type_declaration '(' ')'
  358           | expr . '.' basic_type_declaration '(' expr_list ')'
  361           | expr . '.' $@17 error $@18
  383 expr: expr . "<<" expr
  384     | expr . ">>" expr
  385     | expr . "<<<" expr
  386     | expr . ">>>" expr
  387     | expr . '+' expr
  388     | expr . '-' expr
  389     | expr . '*' expr
  390     | expr . '/' expr
  391     | expr . '%' expr
  392     | expr . '<' expr
  393     | expr . '>' expr
  394     | expr . "==" expr
  395     | expr . "!=" expr
  396     | expr . "<=" expr
  397     | expr . ">=" expr
  398     | expr . '&' expr
  399     | expr . '|' expr
  400     | expr . '^' expr
  401     | expr . "&&" expr
  402     | expr . "||" expr
  403     | expr . "^^" expr
  404     | expr . ".." expr
  407     | expr . "++"
  408     | expr . "--"
  410     | expr . '[' expr ']'
  411     | expr . '.' '[' expr ']'
  412     | expr . "?[" expr ']'
  413     | expr . '.' "?[" expr ']'
  414     | expr . "?." "name"
  415     | expr . '.' "?." "name"
  424     | expr . "??" expr
  425     | expr . '?' expr ':' expr
  428     | expr . "is" "type" '<' $@19 type_declaration_no_options '>' $@20
  429     | expr . "is" basic_type_declaration
  430     | expr . "is" "name"
  431     | expr . "as" "name"
  434     | expr . "as" "type" '<' $@21 type_declaration '>' $@22
  435     | expr . "as" basic_type_declaration
  436     | expr . '?' "as" "name"
  439     | expr . '?' "as" "type" '<' $@23 type_declaration '>' $@24
  440     | expr . '?' "as" basic_type_declaration
  448     | expr . "<|" expr
  449     | expr . "|>" expr
  450     | expr . "|>" basic_type_declaration
  461 expr_mtag: expr . '.' "$f" '(' expr ')'
  462          | expr . "?." "$f" '(' expr ')'
  463          | expr . '.' '.' "$f" '(' expr ')'
  464          | expr . '.' "?." "$f" '(' expr ')'
  465          | expr . "as" "$f" '(' expr ')'
  466          | expr . '?' "as" "$f" '(' expr ')'
  467          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 648
    "as"   shift, and go to state 649
    "<<"   shift, and go to state 650
    ">>"   shift, and go to state 651
    "++"   shift, and go to state 652
    "--"   shift, and go to state 653
    "<="   shift, and go to state 654
    ">="   shift, and go to state 655
    "=="   shift, and go to state 656
    "!="   shift, and go to state 657
    "->"   shift, and go to state 658
    "??"   shift, and go to state 659
    "?."   shift, and go to state 660
    "?["   shift, and go to state 661
    "<|"   shift, and go to state 662
    "|>"   shift, and go to state 663
    "<<<"  shift, and go to state 664
    ">>>"  shift, and go to state 665
    "&&"   shift, and go to state 666
    "||"   shift, and go to state 667
    "^^"   shift, and go to state 668
    ".."   shift, and go to state 669
    '?'    shift, and go to state 670
    '|'    shift, and go to state 671
    '^'    shift, and go to state 672
    '&'    shift, and go to state 673
    '<'    shift, and go to state 674
    '>'    shift, and go to state 675
    '-'    shift, and go to state 676
    '+'    shift, and go to state 677
    '*'    shift, and go to state 678
    '/'    shift, and go to state 679
    '%'    shift, and go to state 680
    '.'    shift, and go to state 681
    '['    shift, and go to state 682

    $default  reduce using rule 245 (expression_delete)


State 729

   74 expression_with: "with" '(' . expr ')' expression_block

    "struct"                          shift, and go to state 409
    "class"                           shift, and go to state 410
    "true"                            shift, and go to state 411
    "false"                           shift, and go to state 412
    "new"                             shift, and go to state 413
    "typeinfo"                        shift, and go to state 414
    "type"                            shift, and go to state 415
    "array"                           shift, and go to state 416
    "null"                            shift, and go to state 417
    "table"                           shift, and go to state 418
    "deref"                           shift, and go to state 419
    "cast"                            shift, and go to state 420
    "upcast"                          shift, and go to state 421
    "addr"                            shift, and go to state 422
    "reinterpret"                     shift, and go to state 423
    "unsafe"                          shift, and go to state 424
    "fixed_array"                     shift, and go to state 425
    "default"                         shift, and go to state 426
    "bool"                            shift, and go to state 225
    "void"                            shift, and go to state 226
    "string"                          shift, and go to state 227
    "int"                             shift, and go to state 229
    "int2"                            shift, and go to state 230
    "int3"                            shift, and go to state 231
    "int4"                            shift, and go to state 232
    "uint"                            shift, and go to state 233
    "bitfield"                        shift, and go to state 427
    "uint2"                           shift, and go to state 235
    "uint3"                           shift, and go to state 236
    "uint4"                           shift, and go to state 237
    "float"                           shift, and go to state 238
    "float2"                          shift, and go to state 239
    "float3"                          shift, and go to state 240
    "float4"                          shift, and go to state 241
    "range"                           shift, and go to state 242
    "urange"                          shift, and go to state 243
    "range64"                         shift, and go to state 244
    "urange64"                        shift, and go to state 245
    "int64"                           shift, and go to state 247
    "uint64"                          shift, and go to state 248
    "double"                          shift, and go to state 249
    "int8"                            shift, and go to state 252
    "uint8"                           shift, and go to state 253
    "int16"                           shift, and go to state 254
    "uint16"                          shift, and go to state 255
    "tuple"                           shift, and go to state 428
    "variant"                         shift, and go to state 429
    "generator"                       shift, and go to state 430
    "++"                              shift, and go to state 431
    "--"                              shift, and go to state 432
    "::"                              shift, and go to state 55
    "$$"                              shift, and go to state 433
    "$i"                              shift, and go to state 434
    "$v"                              shift, and go to state 435
    "$b"                              shift, and go to state 436
    "$a"                              shift, and go to state 437
    "$c"                              shift, and go to state 438
    "..."                             shift, and go to state 439
    "integer constant"                shift, and go to state 440
    "long integer constant"           shift, and go to state 441
    "unsigned integer constant"       shift, and go to state 442
    "unsigned long integer constant"  shift, and go to state 443
    "unsigned int8 constant"          shift, and go to state 444
    "floating point constant"         shift, and go to state 445
    "double constant"                 shift, and go to state 446
    "name"                            shift, and go to state 56
    "start of the string"             shift, and go to state 447
    "begin of code block"             shift, and go to state 448
    '-'                               shift, and go to state 449
    '+'                               shift, and go to state 450
    '*'                               shift, and go to state 451
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 452
    '!'                               shift, and go to state 453
    '['                               shift, and go to state 454
    '('                               shift, and go to state 455
    '$'                               shift, and go to state 456
    '@'                               shift, and go to state 457

    string_builder          go to state 458
    expr_reader             go to state 459
    expr_call_pipe          go to state 460
    name_in_namespace       go to state 461
    expr_new                go to state 462
    expr_cast               go to state 463
    expr_type_decl          go to state 464
    expr_type_info          go to state 465
    block_or_lambda         go to state 466
    expr_full_block         go to state 467
    expr_numeric_const      go to state 468
    expr_named_call         go to state 469
    expr_method_call        go to state 470
    func_addr_expr          go to state 471
    expr_field              go to state 472
    expr_call               go to state 473
    expr                    go to state 938
    expr_mtag               go to state 475
    basic_type_declaration  go to state 476
    make_decl               go to state 477
    make_struct_decl        go to state 478
    make_tuple_call         go to state 479
    make_dim_decl           go to state 480
    make_table_decl         go to state 481
    array_comprehension     go to state 482


State 730

   75 expression_with_alias: "assume" "name" . '=' expr

    '='  shift, and go to state 939


State 731

  232 expression_any: "pass" "end of expression" .

    $default  reduce using rule 232 (expression_any)


State 732

   52 expression_label: "label" "integer constant" . ':'

    ':'  shift, and go to state 940


State 733

   53 expression_goto: "goto" "label" . "integer constant"

    "integer constant"  shift, and go to state 941


State 734

   54 expression_goto: "goto" expr .
  342 expr_method_call: expr . "->" "name" '(' ')'
  343                 | expr . "->" "name" '(' expr_list ')'
  353 expr_field: expr . '.' "name"
  354           | expr . '.' '.' "name"
  355           | expr . '.' "name" '(' ')'
  356           | expr . '.' "name" '(' expr_list ')'
  357           | expr . '.' basic_type_declaration '(' ')'
  358           | expr . '.' basic_type_declaration '(' expr_list ')'
  361           | expr . '.' $@17 error $@18
  383 expr: expr . "<<" expr
  384     | expr . ">>" expr
  385     | expr . "<<<" expr
  386     | expr . ">>>" expr
  387     | expr . '+' expr
  388     | expr . '-' expr
  389     | expr . '*' expr
  390     | expr . '/' expr
  391     | expr . '%' expr
  392     | expr . '<' expr
  393     | expr . '>' expr
  394     | expr . "==" expr
  395     | expr . "!=" expr
  396     | expr . "<=" expr
  397     | expr . ">=" expr
  398     | expr . '&' expr
  399     | expr . '|' expr
  400     | expr . '^' expr
  401     | expr . "&&" expr
  402     | expr . "||" expr
  403     | expr . "^^" expr
  404     | expr . ".." expr
  407     | expr . "++"
  408     | expr . "--"
  410     | expr . '[' expr ']'
  411     | expr . '.' '[' expr ']'
  412     | expr . "?[" expr ']'
  413     | expr . '.' "?[" expr ']'
  414     | expr . "?." "name"
  415     | expr . '.' "?." "name"
  424     | expr . "??" expr
  425     | expr . '?' expr ':' expr
  428     | expr . "is" "type" '<' $@19 type_declaration_no_options '>' $@20
  429     | expr . "is" basic_type_declaration
  430     | expr . "is" "name"
  431     | expr . "as" "name"
  434     | expr . "as" "type" '<' $@21 type_declaration '>' $@22
  435     | expr . "as" basic_type_declaration
  436     | expr . '?' "as" "name"
  439     | expr . '?' "as" "type" '<' $@23 type_declaration '>' $@24
  440     | expr . '?' "as" basic_type_declaration
  448     | expr . "<|" expr
  449     | expr . "|>" expr
  450     | expr . "|>" basic_type_declaration
  461 expr_mtag: expr . '.' "$f" '(' expr ')'
  462          | expr . "?." "$f" '(' expr ')'
  463          | expr . '.' '.' "$f" '(' expr ')'
  464          | expr . '.' "?." "$f" '(' expr ')'
  465          | expr . "as" "$f" '(' expr ')'
  466          | expr . '?' "as" "$f" '(' expr ')'
  467          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 648
    "as"   shift, and go to state 649
    "<<"   shift, and go to state 650
    ">>"   shift, and go to state 651
    "++"   shift, and go to state 652
    "--"   shift, and go to state 653
    "<="   shift, and go to state 654
    ">="   shift, and go to state 655
    "=="   shift, and go to state 656
    "!="   shift, and go to state 657
    "->"   shift, and go to state 658
    "??"   shift, and go to state 659
    "?."   shift, and go to state 660
    "?["   shift, and go to state 661
    "<|"   shift, and go to state 662
    "|>"   shift, and go to state 663
    "<<<"  shift, and go to state 664
    ">>>"  shift, and go to state 665
    "&&"   shift, and go to state 666
    "||"   shift, and go to state 667
    "^^"   shift, and go to state 668
    ".."   shift, and go to state 669
    '?'    shift, and go to state 670
    '|'    shift, and go to state 671
    '^'    shift, and go to state 672
    '&'    shift, and go to state 673
    '<'    shift, and go to state 674
    '>'    shift, and go to state 675
    '-'    shift, and go to state 676
    '+'    shift, and go to state 677
    '*'    shift, and go to state 678
    '/'    shift, and go to state 679
    '%'    shift, and go to state 680
    '.'    shift, and go to state 681
    '['    shift, and go to state 682

    $default  reduce using rule 54 (expression_goto)


State 735

   72 expression_unsafe: "unsafe" expression_block .

    $default  reduce using rule 72 (expression_unsafe)


State 736

  263 expression_yield: "yield" "<-" . expr

    "struct"                          shift, and go to state 409
    "class"                           shift, and go to state 410
    "true"                            shift, and go to state 411
    "false"                           shift, and go to state 412
    "new"                             shift, and go to state 413
    "typeinfo"                        shift, and go to state 414
    "type"                            shift, and go to state 415
    "array"                           shift, and go to state 416
    "null"                            shift, and go to state 417
    "table"                           shift, and go to state 418
    "deref"                           shift, and go to state 419
    "cast"                            shift, and go to state 420
    "upcast"                          shift, and go to state 421
    "addr"                            shift, and go to state 422
    "reinterpret"                     shift, and go to state 423
    "unsafe"                          shift, and go to state 424
    "fixed_array"                     shift, and go to state 425
    "default"                         shift, and go to state 426
    "bool"                            shift, and go to state 225
    "void"                            shift, and go to state 226
    "string"                          shift, and go to state 227
    "int"                             shift, and go to state 229
    "int2"                            shift, and go to state 230
    "int3"                            shift, and go to state 231
    "int4"                            shift, and go to state 232
    "uint"                            shift, and go to state 233
    "bitfield"                        shift, and go to state 427
    "uint2"                           shift, and go to state 235
    "uint3"                           shift, and go to state 236
    "uint4"                           shift, and go to state 237
    "float"                           shift, and go to state 238
    "float2"                          shift, and go to state 239
    "float3"                          shift, and go to state 240
    "float4"                          shift, and go to state 241
    "range"                           shift, and go to state 242
    "urange"                          shift, and go to state 243
    "range64"                         shift, and go to state 244
    "urange64"                        shift, and go to state 245
    "int64"                           shift, and go to state 247
    "uint64"                          shift, and go to state 248
    "double"                          shift, and go to state 249
    "int8"                            shift, and go to state 252
    "uint8"                           shift, and go to state 253
    "int16"                           shift, and go to state 254
    "uint16"                          shift, and go to state 255
    "tuple"                           shift, and go to state 428
    "variant"                         shift, and go to state 429
    "generator"                       shift, and go to state 430
    "++"                              shift, and go to state 431
    "--"                              shift, and go to state 432
    "::"                              shift, and go to state 55
    "$$"                              shift, and go to state 433
    "$i"                              shift, and go to state 434
    "$v"                              shift, and go to state 435
    "$b"                              shift, and go to state 436
    "$a"                              shift, and go to state 437
    "$c"                              shift, and go to state 438
    "..."                             shift, and go to state 439
    "integer constant"                shift, and go to state 440
    "long integer constant"           shift, and go to state 441
    "unsigned integer constant"       shift, and go to state 442
    "unsigned long integer constant"  shift, and go to state 443
    "unsigned int8 constant"          shift, and go to state 444
    "floating point constant"         shift, and go to state 445
    "double constant"                 shift, and go to state 446
    "name"                            shift, and go to state 56
    "start of the string"             shift, and go to state 447
    "begin of code block"             shift, and go to state 448
    '-'                               shift, and go to state 449
    '+'                               shift, and go to state 450
    '*'                               shift, and go to state 451
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 452
    '!'                               shift, and go to state 453
    '['                               shift, and go to state 454
    '('                               shift, and go to state 455
    '$'                               shift, and go to state 456
    '@'                               shift, and go to state 457

    string_builder          go to state 458
    expr_reader             go to state 459
    expr_call_pipe          go to state 460
    name_in_namespace       go to state 461
    expr_new                go to state 462
    expr_cast               go to state 463
    expr_type_decl          go to state 464
    expr_type_info          go to state 465
    block_or_lambda         go to state 466
    expr_full_block         go to state 467
    expr_numeric_const      go to state 468
    expr_named_call         go to state 469
    expr_method_call        go to state 470
    func_addr_expr          go to state 471
    expr_field              go to state 472
    expr_call               go to state 473
    expr                    go to state 942
    expr_mtag               go to state 475
    basic_type_declaration  go to state 476
    make_decl               go to state 477
    make_struct_decl        go to state 478
    make_tuple_call         go to state 479
    make_dim_decl           go to state 480
    make_table_decl         go to state 481
    array_comprehension     go to state 482


State 737

  262 expression_yield: "yield" expr .
  342 expr_method_call: expr . "->" "name" '(' ')'
  343                 | expr . "->" "name" '(' expr_list ')'
  353 expr_field: expr . '.' "name"
  354           | expr . '.' '.' "name"
  355           | expr . '.' "name" '(' ')'
  356           | expr . '.' "name" '(' expr_list ')'
  357           | expr . '.' basic_type_declaration '(' ')'
  358           | expr . '.' basic_type_declaration '(' expr_list ')'
  361           | expr . '.' $@17 error $@18
  383 expr: expr . "<<" expr
  384     | expr . ">>" expr
  385     | expr . "<<<" expr
  386     | expr . ">>>" expr
  387     | expr . '+' expr
  388     | expr . '-' expr
  389     | expr . '*' expr
  390     | expr . '/' expr
  391     | expr . '%' expr
  392     | expr . '<' expr
  393     | expr . '>' expr
  394     | expr . "==" expr
  395     | expr . "!=" expr
  396     | expr . "<=" expr
  397     | expr . ">=" expr
  398     | expr . '&' expr
  399     | expr . '|' expr
  400     | expr . '^' expr
  401     | expr . "&&" expr
  402     | expr . "||" expr
  403     | expr . "^^" expr
  404     | expr . ".." expr
  407     | expr . "++"
  408     | expr . "--"
  410     | expr . '[' expr ']'
  411     | expr . '.' '[' expr ']'
  412     | expr . "?[" expr ']'
  413     | expr . '.' "?[" expr ']'
  414     | expr . "?." "name"
  415     | expr . '.' "?." "name"
  424     | expr . "??" expr
  425     | expr . '?' expr ':' expr
  428     | expr . "is" "type" '<' $@19 type_declaration_no_options '>' $@20
  429     | expr . "is" basic_type_declaration
  430     | expr . "is" "name"
  431     | expr . "as" "name"
  434     | expr . "as" "type" '<' $@21 type_declaration '>' $@22
  435     | expr . "as" basic_type_declaration
  436     | expr . '?' "as" "name"
  439     | expr . '?' "as" "type" '<' $@23 type_declaration '>' $@24
  440     | expr . '?' "as" basic_type_declaration
  448     | expr . "<|" expr
  449     | expr . "|>" expr
  450     | expr . "|>" basic_type_declaration
  461 expr_mtag: expr . '.' "$f" '(' expr ')'
  462          | expr . "?." "$f" '(' expr ')'
  463          | expr . '.' '.' "$f" '(' expr ')'
  464          | expr . '.' "?." "$f" '(' expr ')'
  465          | expr . "as" "$f" '(' expr ')'
  466          | expr . '?' "as" "$f" '(' expr ')'
  467          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 648
    "as"   shift, and go to state 649
    "<<"   shift, and go to state 650
    ">>"   shift, and go to state 651
    "++"   shift, and go to state 652
    "--"   shift, and go to state 653
    "<="   shift, and go to state 654
    ">="   shift, and go to state 655
    "=="   shift, and go to state 656
    "!="   shift, and go to state 657
    "->"   shift, and go to state 658
    "??"   shift, and go to state 659
    "?."   shift, and go to state 660
    "?["   shift, and go to state 661
    "<|"   shift, and go to state 662
    "|>"   shift, and go to state 663
    "<<<"  shift, and go to state 664
    ">>>"  shift, and go to state 665
    "&&"   shift, and go to state 666
    "||"   shift, and go to state 667
    "^^"   shift, and go to state 668
    ".."   shift, and go to state 669
    '?'    shift, and go to state 670
    '|'    shift, and go to state 671
    '^'    shift, and go to state 672
    '&'    shift, and go to state 673
    '<'    shift, and go to state 674
    '>'    shift, and go to state 675
    '-'    shift, and go to state 676
    '+'    shift, and go to state 677
    '*'    shift, and go to state 678
    '/'    shift, and go to state 679
    '%'    shift, and go to state 680
    '.'    shift, and go to state 681
    '['    shift, and go to state 682

    $default  reduce using rule 262 (expression_yield)


State 738

  213 expression_block: "begin of code block" expressions "end of code block" "finally" . "begin of code block" expressions "end of code block"

    "begin of code block"  shift, and go to state 943


State 739

  230 expression_any: expression_label "end of expression" .

    $default  reduce using rule 230 (expression_any)


State 740

  231 expression_any: expression_goto "end of expression" .

    $default  reduce using rule 231 (expression_any)


State 741

   69 expression_if_then_else: if_or_static_if '(' . expr ')' expression_block expression_else

    "struct"                          shift, and go to state 409
    "class"                           shift, and go to state 410
    "true"                            shift, and go to state 411
    "false"                           shift, and go to state 412
    "new"                             shift, and go to state 413
    "typeinfo"                        shift, and go to state 414
    "type"                            shift, and go to state 415
    "array"                           shift, and go to state 416
    "null"                            shift, and go to state 417
    "table"                           shift, and go to state 418
    "deref"                           shift, and go to state 419
    "cast"                            shift, and go to state 420
    "upcast"                          shift, and go to state 421
    "addr"                            shift, and go to state 422
    "reinterpret"                     shift, and go to state 423
    "unsafe"                          shift, and go to state 424
    "fixed_array"                     shift, and go to state 425
    "default"                         shift, and go to state 426
    "bool"                            shift, and go to state 225
    "void"                            shift, and go to state 226
    "string"                          shift, and go to state 227
    "int"                             shift, and go to state 229
    "int2"                            shift, and go to state 230
    "int3"                            shift, and go to state 231
    "int4"                            shift, and go to state 232
    "uint"                            shift, and go to state 233
    "bitfield"                        shift, and go to state 427
    "uint2"                           shift, and go to state 235
    "uint3"                           shift, and go to state 236
    "uint4"                           shift, and go to state 237
    "float"                           shift, and go to state 238
    "float2"                          shift, and go to state 239
    "float3"                          shift, and go to state 240
    "float4"                          shift, and go to state 241
    "range"                           shift, and go to state 242
    "urange"                          shift, and go to state 243
    "range64"                         shift, and go to state 244
    "urange64"                        shift, and go to state 245
    "int64"                           shift, and go to state 247
    "uint64"                          shift, and go to state 248
    "double"                          shift, and go to state 249
    "int8"                            shift, and go to state 252
    "uint8"                           shift, and go to state 253
    "int16"                           shift, and go to state 254
    "uint16"                          shift, and go to state 255
    "tuple"                           shift, and go to state 428
    "variant"                         shift, and go to state 429
    "generator"                       shift, and go to state 430
    "++"                              shift, and go to state 431
    "--"                              shift, and go to state 432
    "::"                              shift, and go to state 55
    "$$"                              shift, and go to state 433
    "$i"                              shift, and go to state 434
    "$v"                              shift, and go to state 435
    "$b"                              shift, and go to state 436
    "$a"                              shift, and go to state 437
    "$c"                              shift, and go to state 438
    "..."                             shift, and go to state 439
    "integer constant"                shift, and go to state 440
    "long integer constant"           shift, and go to state 441
    "unsigned integer constant"       shift, and go to state 442
    "unsigned long integer constant"  shift, and go to state 443
    "unsigned int8 constant"          shift, and go to state 444
    "floating point constant"         shift, and go to state 445
    "double constant"                 shift, and go to state 446
    "name"                            shift, and go to state 56
    "start of the string"             shift, and go to state 447
    "begin of code block"             shift, and go to state 448
    '-'                               shift, and go to state 449
    '+'                               shift, and go to state 450
    '*'                               shift, and go to state 451
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 452
    '!'                               shift, and go to state 453
    '['                               shift, and go to state 454
    '('                               shift, and go to state 455
    '$'                               shift, and go to state 456
    '@'                               shift, and go to state 457

    string_builder          go to state 458
    expr_reader             go to state 459
    expr_call_pipe          go to state 460
    name_in_namespace       go to state 461
    expr_new                go to state 462
    expr_cast               go to state 463
    expr_type_decl          go to state 464
    expr_type_info          go to state 465
    block_or_lambda         go to state 466
    expr_full_block         go to state 467
    expr_numeric_const      go to state 468
    expr_named_call         go to state 469
    expr_method_call        go to state 470
    func_addr_expr          go to state 471
    expr_field              go to state 472
    expr_call               go to state 473
    expr                    go to state 944
    expr_mtag               go to state 475
    basic_type_declaration  go to state 476
    make_decl               go to state 477
    make_struct_decl        go to state 478
    make_tuple_call         go to state 479
    make_dim_decl           go to state 480
    make_table_decl         go to state 481
    array_comprehension     go to state 482


State 742

   70 expression_if_then_else: expression_if_one_liner "if" . '(' expr ')' expression_else_one_liner "end of expression"

    '('  shift, and go to state 945


State 743

  222 expression_any: expression_with_alias "end of expression" .

    $default  reduce using rule 222 (expression_any)


State 744

  217 expression_any: expression_delete "end of expression" .

    $default  reduce using rule 217 (expression_any)


State 745

  224 expression_any: expression_break "end of expression" .

    $default  reduce using rule 224 (expression_any)


State 746

  225 expression_any: expression_continue "end of expression" .

    $default  reduce using rule 225 (expression_any)


State 747

  226 expression_any: expression_return "end of expression" .

    $default  reduce using rule 226 (expression_any)


State 748

  227 expression_any: expression_yield "end of expression" .

    $default  reduce using rule 227 (expression_any)


State 749

  270 optional_in_scope: "inscope" .

    $default  reduce using rule 270 (optional_in_scope)


State 750

  276 expression_let: kwd_let optional_in_scope . let_variable_declaration
  277               | kwd_let optional_in_scope . tuple_expansion_variable_declaration
  278               | kwd_let optional_in_scope . "begin of code block" variable_declaration_list "end of code block"

    "$i"                   shift, and go to state 576
    "name"                 shift, and go to state 577
    "begin of code block"  shift, and go to state 946
    '('                    shift, and go to state 947

    tuple_expansion_variable_declaration  go to state 948
    let_variable_name_with_pos_list       go to state 578
    let_variable_declaration              go to state 949


State 751

  216 expression_any: expr_assign "end of expression" .

    $default  reduce using rule 216 (expression_any)


State 752

  331 expr_assign: expr "+=" . expr

    "struct"                          shift, and go to state 409
    "class"                           shift, and go to state 410
    "true"                            shift, and go to state 411
    "false"                           shift, and go to state 412
    "new"                             shift, and go to state 413
    "typeinfo"                        shift, and go to state 414
    "type"                            shift, and go to state 415
    "array"                           shift, and go to state 416
    "null"                            shift, and go to state 417
    "table"                           shift, and go to state 418
    "deref"                           shift, and go to state 419
    "cast"                            shift, and go to state 420
    "upcast"                          shift, and go to state 421
    "addr"                            shift, and go to state 422
    "reinterpret"                     shift, and go to state 423
    "unsafe"                          shift, and go to state 424
    "fixed_array"                     shift, and go to state 425
    "default"                         shift, and go to state 426
    "bool"                            shift, and go to state 225
    "void"                            shift, and go to state 226
    "string"                          shift, and go to state 227
    "int"                             shift, and go to state 229
    "int2"                            shift, and go to state 230
    "int3"                            shift, and go to state 231
    "int4"                            shift, and go to state 232
    "uint"                            shift, and go to state 233
    "bitfield"                        shift, and go to state 427
    "uint2"                           shift, and go to state 235
    "uint3"                           shift, and go to state 236
    "uint4"                           shift, and go to state 237
    "float"                           shift, and go to state 238
    "float2"                          shift, and go to state 239
    "float3"                          shift, and go to state 240
    "float4"                          shift, and go to state 241
    "range"                           shift, and go to state 242
    "urange"                          shift, and go to state 243
    "range64"                         shift, and go to state 244
    "urange64"                        shift, and go to state 245
    "int64"                           shift, and go to state 247
    "uint64"                          shift, and go to state 248
    "double"                          shift, and go to state 249
    "int8"                            shift, and go to state 252
    "uint8"                           shift, and go to state 253
    "int16"                           shift, and go to state 254
    "uint16"                          shift, and go to state 255
    "tuple"                           shift, and go to state 428
    "variant"                         shift, and go to state 429
    "generator"                       shift, and go to state 430
    "++"                              shift, and go to state 431
    "--"                              shift, and go to state 432
    "::"                              shift, and go to state 55
    "$$"                              shift, and go to state 433
    "$i"                              shift, and go to state 434
    "$v"                              shift, and go to state 435
    "$b"                              shift, and go to state 436
    "$a"                              shift, and go to state 437
    "$c"                              shift, and go to state 438
    "..."                             shift, and go to state 439
    "integer constant"                shift, and go to state 440
    "long integer constant"           shift, and go to state 441
    "unsigned integer constant"       shift, and go to state 442
    "unsigned long integer constant"  shift, and go to state 443
    "unsigned int8 constant"          shift, and go to state 444
    "floating point constant"         shift, and go to state 445
    "double constant"                 shift, and go to state 446
    "name"                            shift, and go to state 56
    "start of the string"             shift, and go to state 447
    "begin of code block"             shift, and go to state 448
    '-'                               shift, and go to state 449
    '+'                               shift, and go to state 450
    '*'                               shift, and go to state 451
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 452
    '!'                               shift, and go to state 453
    '['                               shift, and go to state 454
    '('                               shift, and go to state 455
    '$'                               shift, and go to state 456
    '@'                               shift, and go to state 457

    string_builder          go to state 458
    expr_reader             go to state 459
    expr_call_pipe          go to state 460
    name_in_namespace       go to state 461
    expr_new                go to state 462
    expr_cast               go to state 463
    expr_type_decl          go to state 464
    expr_type_info          go to state 465
    block_or_lambda         go to state 466
    expr_full_block         go to state 467
    expr_numeric_const      go to state 468
    expr_named_call         go to state 469
    expr_method_call        go to state 470
    func_addr_expr          go to state 471
    expr_field              go to state 472
    expr_call               go to state 473
    expr                    go to state 950
    expr_mtag               go to state 475
    basic_type_declaration  go to state 476
    make_decl               go to state 477
    make_struct_decl        go to state 478
    make_tuple_call         go to state 479
    make_dim_decl           go to state 480
    make_table_decl         go to state 481
    array_comprehension     go to state 482


State 753

  332 expr_assign: expr "-=" . expr

    "struct"                          shift, and go to state 409
    "class"                           shift, and go to state 410
    "true"                            shift, and go to state 411
    "false"                           shift, and go to state 412
    "new"                             shift, and go to state 413
    "typeinfo"                        shift, and go to state 414
    "type"                            shift, and go to state 415
    "array"                           shift, and go to state 416
    "null"                            shift, and go to state 417
    "table"                           shift, and go to state 418
    "deref"                           shift, and go to state 419
    "cast"                            shift, and go to state 420
    "upcast"                          shift, and go to state 421
    "addr"                            shift, and go to state 422
    "reinterpret"                     shift, and go to state 423
    "unsafe"                          shift, and go to state 424
    "fixed_array"                     shift, and go to state 425
    "default"                         shift, and go to state 426
    "bool"                            shift, and go to state 225
    "void"                            shift, and go to state 226
    "string"                          shift, and go to state 227
    "int"                             shift, and go to state 229
    "int2"                            shift, and go to state 230
    "int3"                            shift, and go to state 231
    "int4"                            shift, and go to state 232
    "uint"                            shift, and go to state 233
    "bitfield"                        shift, and go to state 427
    "uint2"                           shift, and go to state 235
    "uint3"                           shift, and go to state 236
    "uint4"                           shift, and go to state 237
    "float"                           shift, and go to state 238
    "float2"                          shift, and go to state 239
    "float3"                          shift, and go to state 240
    "float4"                          shift, and go to state 241
    "range"                           shift, and go to state 242
    "urange"                          shift, and go to state 243
    "range64"                         shift, and go to state 244
    "urange64"                        shift, and go to state 245
    "int64"                           shift, and go to state 247
    "uint64"                          shift, and go to state 248
    "double"                          shift, and go to state 249
    "int8"                            shift, and go to state 252
    "uint8"                           shift, and go to state 253
    "int16"                           shift, and go to state 254
    "uint16"                          shift, and go to state 255
    "tuple"                           shift, and go to state 428
    "variant"                         shift, and go to state 429
    "generator"                       shift, and go to state 430
    "++"                              shift, and go to state 431
    "--"                              shift, and go to state 432
    "::"                              shift, and go to state 55
    "$$"                              shift, and go to state 433
    "$i"                              shift, and go to state 434
    "$v"                              shift, and go to state 435
    "$b"                              shift, and go to state 436
    "$a"                              shift, and go to state 437
    "$c"                              shift, and go to state 438
    "..."                             shift, and go to state 439
    "integer constant"                shift, and go to state 440
    "long integer constant"           shift, and go to state 441
    "unsigned integer constant"       shift, and go to state 442
    "unsigned long integer constant"  shift, and go to state 443
    "unsigned int8 constant"          shift, and go to state 444
    "floating point constant"         shift, and go to state 445
    "double constant"                 shift, and go to state 446
    "name"                            shift, and go to state 56
    "start of the string"             shift, and go to state 447
    "begin of code block"             shift, and go to state 448
    '-'                               shift, and go to state 449
    '+'                               shift, and go to state 450
    '*'                               shift, and go to state 451
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 452
    '!'                               shift, and go to state 453
    '['                               shift, and go to state 454
    '('                               shift, and go to state 455
    '$'                               shift, and go to state 456
    '@'                               shift, and go to state 457

    string_builder          go to state 458
    expr_reader             go to state 459
    expr_call_pipe          go to state 460
    name_in_namespace       go to state 461
    expr_new                go to state 462
    expr_cast               go to state 463
    expr_type_decl          go to state 464
    expr_type_info          go to state 465
    block_or_lambda         go to state 466
    expr_full_block         go to state 467
    expr_numeric_const      go to state 468
    expr_named_call         go to state 469
    expr_method_call        go to state 470
    func_addr_expr          go to state 471
    expr_field              go to state 472
    expr_call               go to state 473
    expr                    go to state 951
    expr_mtag               go to state 475
    basic_type_declaration  go to state 476
    make_decl               go to state 477
    make_struct_decl        go to state 478
    make_tuple_call         go to state 479
    make_dim_decl           go to state 480
    make_table_decl         go to state 481
    array_comprehension     go to state 482


State 754

  334 expr_assign: expr "/=" . expr

    "struct"                          shift, and go to state 409
    "class"                           shift, and go to state 410
    "true"                            shift, and go to state 411
    "false"                           shift, and go to state 412
    "new"                             shift, and go to state 413
    "typeinfo"                        shift, and go to state 414
    "type"                            shift, and go to state 415
    "array"                           shift, and go to state 416
    "null"                            shift, and go to state 417
    "table"                           shift, and go to state 418
    "deref"                           shift, and go to state 419
    "cast"                            shift, and go to state 420
    "upcast"                          shift, and go to state 421
    "addr"                            shift, and go to state 422
    "reinterpret"                     shift, and go to state 423
    "unsafe"                          shift, and go to state 424
    "fixed_array"                     shift, and go to state 425
    "default"                         shift, and go to state 426
    "bool"                            shift, and go to state 225
    "void"                            shift, and go to state 226
    "string"                          shift, and go to state 227
    "int"                             shift, and go to state 229
    "int2"                            shift, and go to state 230
    "int3"                            shift, and go to state 231
    "int4"                            shift, and go to state 232
    "uint"                            shift, and go to state 233
    "bitfield"                        shift, and go to state 427
    "uint2"                           shift, and go to state 235
    "uint3"                           shift, and go to state 236
    "uint4"                           shift, and go to state 237
    "float"                           shift, and go to state 238
    "float2"                          shift, and go to state 239
    "float3"                          shift, and go to state 240
    "float4"                          shift, and go to state 241
    "range"                           shift, and go to state 242
    "urange"                          shift, and go to state 243
    "range64"                         shift, and go to state 244
    "urange64"                        shift, and go to state 245
    "int64"                           shift, and go to state 247
    "uint64"                          shift, and go to state 248
    "double"                          shift, and go to state 249
    "int8"                            shift, and go to state 252
    "uint8"                           shift, and go to state 253
    "int16"                           shift, and go to state 254
    "uint16"                          shift, and go to state 255
    "tuple"                           shift, and go to state 428
    "variant"                         shift, and go to state 429
    "generator"                       shift, and go to state 430
    "++"                              shift, and go to state 431
    "--"                              shift, and go to state 432
    "::"                              shift, and go to state 55
    "$$"                              shift, and go to state 433
    "$i"                              shift, and go to state 434
    "$v"                              shift, and go to state 435
    "$b"                              shift, and go to state 436
    "$a"                              shift, and go to state 437
    "$c"                              shift, and go to state 438
    "..."                             shift, and go to state 439
    "integer constant"                shift, and go to state 440
    "long integer constant"           shift, and go to state 441
    "unsigned integer constant"       shift, and go to state 442
    "unsigned long integer constant"  shift, and go to state 443
    "unsigned int8 constant"          shift, and go to state 444
    "floating point constant"         shift, and go to state 445
    "double constant"                 shift, and go to state 446
    "name"                            shift, and go to state 56
    "start of the string"             shift, and go to state 447
    "begin of code block"             shift, and go to state 448
    '-'                               shift, and go to state 449
    '+'                               shift, and go to state 450
    '*'                               shift, and go to state 451
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 452
    '!'                               shift, and go to state 453
    '['                               shift, and go to state 454
    '('                               shift, and go to state 455
    '$'                               shift, and go to state 456
    '@'                               shift, and go to state 457

    string_builder          go to state 458
    expr_reader             go to state 459
    expr_call_pipe          go to state 460
    name_in_namespace       go to state 461
    expr_new                go to state 462
    expr_cast               go to state 463
    expr_type_decl          go to state 464
    expr_type_info          go to state 465
    block_or_lambda         go to state 466
    expr_full_block         go to state 467
    expr_numeric_const      go to state 468
    expr_named_call         go to state 469
    expr_method_call        go to state 470
    func_addr_expr          go to state 471
    expr_field              go to state 472
    expr_call               go to state 473
    expr                    go to state 952
    expr_mtag               go to state 475
    basic_type_declaration  go to state 476
    make_decl               go to state 477
    make_struct_decl        go to state 478
    make_tuple_call         go to state 479
    make_dim_decl           go to state 480
    make_table_decl         go to state 481
    array_comprehension     go to state 482


State 755

  333 expr_assign: expr "*=" . expr

    "struct"                          shift, and go to state 409
    "class"                           shift, and go to state 410
    "true"                            shift, and go to state 411
    "false"                           shift, and go to state 412
    "new"                             shift, and go to state 413
    "typeinfo"                        shift, and go to state 414
    "type"                            shift, and go to state 415
    "array"                           shift, and go to state 416
    "null"                            shift, and go to state 417
    "table"                           shift, and go to state 418
    "deref"                           shift, and go to state 419
    "cast"                            shift, and go to state 420
    "upcast"                          shift, and go to state 421
    "addr"                            shift, and go to state 422
    "reinterpret"                     shift, and go to state 423
    "unsafe"                          shift, and go to state 424
    "fixed_array"                     shift, and go to state 425
    "default"                         shift, and go to state 426
    "bool"                            shift, and go to state 225
    "void"                            shift, and go to state 226
    "string"                          shift, and go to state 227
    "int"                             shift, and go to state 229
    "int2"                            shift, and go to state 230
    "int3"                            shift, and go to state 231
    "int4"                            shift, and go to state 232
    "uint"                            shift, and go to state 233
    "bitfield"                        shift, and go to state 427
    "uint2"                           shift, and go to state 235
    "uint3"                           shift, and go to state 236
    "uint4"                           shift, and go to state 237
    "float"                           shift, and go to state 238
    "float2"                          shift, and go to state 239
    "float3"                          shift, and go to state 240
    "float4"                          shift, and go to state 241
    "range"                           shift, and go to state 242
    "urange"                          shift, and go to state 243
    "range64"                         shift, and go to state 244
    "urange64"                        shift, and go to state 245
    "int64"                           shift, and go to state 247
    "uint64"                          shift, and go to state 248
    "double"                          shift, and go to state 249
    "int8"                            shift, and go to state 252
    "uint8"                           shift, and go to state 253
    "int16"                           shift, and go to state 254
    "uint16"                          shift, and go to state 255
    "tuple"                           shift, and go to state 428
    "variant"                         shift, and go to state 429
    "generator"                       shift, and go to state 430
    "++"                              shift, and go to state 431
    "--"                              shift, and go to state 432
    "::"                              shift, and go to state 55
    "$$"                              shift, and go to state 433
    "$i"                              shift, and go to state 434
    "$v"                              shift, and go to state 435
    "$b"                              shift, and go to state 436
    "$a"                              shift, and go to state 437
    "$c"                              shift, and go to state 438
    "..."                             shift, and go to state 439
    "integer constant"                shift, and go to state 440
    "long integer constant"           shift, and go to state 441
    "unsigned integer constant"       shift, and go to state 442
    "unsigned long integer constant"  shift, and go to state 443
    "unsigned int8 constant"          shift, and go to state 444
    "floating point constant"         shift, and go to state 445
    "double constant"                 shift, and go to state 446
    "name"                            shift, and go to state 56
    "start of the string"             shift, and go to state 447
    "begin of code block"             shift, and go to state 448
    '-'                               shift, and go to state 449
    '+'                               shift, and go to state 450
    '*'                               shift, and go to state 451
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 452
    '!'                               shift, and go to state 453
    '['                               shift, and go to state 454
    '('                               shift, and go to state 455
    '$'                               shift, and go to state 456
    '@'                               shift, and go to state 457

    string_builder          go to state 458
    expr_reader             go to state 459
    expr_call_pipe          go to state 460
    name_in_namespace       go to state 461
    expr_new                go to state 462
    expr_cast               go to state 463
    expr_type_decl          go to state 464
    expr_type_info          go to state 465
    block_or_lambda         go to state 466
    expr_full_block         go to state 467
    expr_numeric_const      go to state 468
    expr_named_call         go to state 469
    expr_method_call        go to state 470
    func_addr_expr          go to state 471
    expr_field              go to state 472
    expr_call               go to state 473
    expr                    go to state 953
    expr_mtag               go to state 475
    basic_type_declaration  go to state 476
    make_decl               go to state 477
    make_struct_decl        go to state 478
    make_tuple_call         go to state 479
    make_dim_decl           go to state 480
    make_table_decl         go to state 481
    array_comprehension     go to state 482


State 756

  335 expr_assign: expr "%=" . expr

    "struct"                          shift, and go to state 409
    "class"                           shift, and go to state 410
    "true"                            shift, and go to state 411
    "false"                           shift, and go to state 412
    "new"                             shift, and go to state 413
    "typeinfo"                        shift, and go to state 414
    "type"                            shift, and go to state 415
    "array"                           shift, and go to state 416
    "null"                            shift, and go to state 417
    "table"                           shift, and go to state 418
    "deref"                           shift, and go to state 419
    "cast"                            shift, and go to state 420
    "upcast"                          shift, and go to state 421
    "addr"                            shift, and go to state 422
    "reinterpret"                     shift, and go to state 423
    "unsafe"                          shift, and go to state 424
    "fixed_array"                     shift, and go to state 425
    "default"                         shift, and go to state 426
    "bool"                            shift, and go to state 225
    "void"                            shift, and go to state 226
    "string"                          shift, and go to state 227
    "int"                             shift, and go to state 229
    "int2"                            shift, and go to state 230
    "int3"                            shift, and go to state 231
    "int4"                            shift, and go to state 232
    "uint"                            shift, and go to state 233
    "bitfield"                        shift, and go to state 427
    "uint2"                           shift, and go to state 235
    "uint3"                           shift, and go to state 236
    "uint4"                           shift, and go to state 237
    "float"                           shift, and go to state 238
    "float2"                          shift, and go to state 239
    "float3"                          shift, and go to state 240
    "float4"                          shift, and go to state 241
    "range"                           shift, and go to state 242
    "urange"                          shift, and go to state 243
    "range64"                         shift, and go to state 244
    "urange64"                        shift, and go to state 245
    "int64"                           shift, and go to state 247
    "uint64"                          shift, and go to state 248
    "double"                          shift, and go to state 249
    "int8"                            shift, and go to state 252
    "uint8"                           shift, and go to state 253
    "int16"                           shift, and go to state 254
    "uint16"                          shift, and go to state 255
    "tuple"                           shift, and go to state 428
    "variant"                         shift, and go to state 429
    "generator"                       shift, and go to state 430
    "++"                              shift, and go to state 431
    "--"                              shift, and go to state 432
    "::"                              shift, and go to state 55
    "$$"                              shift, and go to state 433
    "$i"                              shift, and go to state 434
    "$v"                              shift, and go to state 435
    "$b"                              shift, and go to state 436
    "$a"                              shift, and go to state 437
    "$c"                              shift, and go to state 438
    "..."                             shift, and go to state 439
    "integer constant"                shift, and go to state 440
    "long integer constant"           shift, and go to state 441
    "unsigned integer constant"       shift, and go to state 442
    "unsigned long integer constant"  shift, and go to state 443
    "unsigned int8 constant"          shift, and go to state 444
    "floating point constant"         shift, and go to state 445
    "double constant"                 shift, and go to state 446
    "name"                            shift, and go to state 56
    "start of the string"             shift, and go to state 447
    "begin of code block"             shift, and go to state 448
    '-'                               shift, and go to state 449
    '+'                               shift, and go to state 450
    '*'                               shift, and go to state 451
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 452
    '!'                               shift, and go to state 453
    '['                               shift, and go to state 454
    '('                               shift, and go to state 455
    '$'                               shift, and go to state 456
    '@'                               shift, and go to state 457

    string_builder          go to state 458
    expr_reader             go to state 459
    expr_call_pipe          go to state 460
    name_in_namespace       go to state 461
    expr_new                go to state 462
    expr_cast               go to state 463
    expr_type_decl          go to state 464
    expr_type_info          go to state 465
    block_or_lambda         go to state 466
    expr_full_block         go to state 467
    expr_numeric_const      go to state 468
    expr_named_call         go to state 469
    expr_method_call        go to state 470
    func_addr_expr          go to state 471
    expr_field              go to state 472
    expr_call               go to state 473
    expr                    go to state 954
    expr_mtag               go to state 475
    basic_type_declaration  go to state 476
    make_decl               go to state 477
    make_struct_decl        go to state 478
    make_tuple_call         go to state 479
    make_dim_decl           go to state 480
    make_table_decl         go to state 481
    array_comprehension     go to state 482


State 757

  325 expr_assign: expr "&=" . expr

    "struct"                          shift, and go to state 409
    "class"                           shift, and go to state 410
    "true"                            shift, and go to state 411
    "false"                           shift, and go to state 412
    "new"                             shift, and go to state 413
    "typeinfo"                        shift, and go to state 414
    "type"                            shift, and go to state 415
    "array"                           shift, and go to state 416
    "null"                            shift, and go to state 417
    "table"                           shift, and go to state 418
    "deref"                           shift, and go to state 419
    "cast"                            shift, and go to state 420
    "upcast"                          shift, and go to state 421
    "addr"                            shift, and go to state 422
    "reinterpret"                     shift, and go to state 423
    "unsafe"                          shift, and go to state 424
    "fixed_array"                     shift, and go to state 425
    "default"                         shift, and go to state 426
    "bool"                            shift, and go to state 225
    "void"                            shift, and go to state 226
    "string"                          shift, and go to state 227
    "int"                             shift, and go to state 229
    "int2"                            shift, and go to state 230
    "int3"                            shift, and go to state 231
    "int4"                            shift, and go to state 232
    "uint"                            shift, and go to state 233
    "bitfield"                        shift, and go to state 427
    "uint2"                           shift, and go to state 235
    "uint3"                           shift, and go to state 236
    "uint4"                           shift, and go to state 237
    "float"                           shift, and go to state 238
    "float2"                          shift, and go to state 239
    "float3"                          shift, and go to state 240
    "float4"                          shift, and go to state 241
    "range"                           shift, and go to state 242
    "urange"                          shift, and go to state 243
    "range64"                         shift, and go to state 244
    "urange64"                        shift, and go to state 245
    "int64"                           shift, and go to state 247
    "uint64"                          shift, and go to state 248
    "double"                          shift, and go to state 249
    "int8"                            shift, and go to state 252
    "uint8"                           shift, and go to state 253
    "int16"                           shift, and go to state 254
    "uint16"                          shift, and go to state 255
    "tuple"                           shift, and go to state 428
    "variant"                         shift, and go to state 429
    "generator"                       shift, and go to state 430
    "++"                              shift, and go to state 431
    "--"                              shift, and go to state 432
    "::"                              shift, and go to state 55
    "$$"                              shift, and go to state 433
    "$i"                              shift, and go to state 434
    "$v"                              shift, and go to state 435
    "$b"                              shift, and go to state 436
    "$a"                              shift, and go to state 437
    "$c"                              shift, and go to state 438
    "..."                             shift, and go to state 439
    "integer constant"                shift, and go to state 440
    "long integer constant"           shift, and go to state 441
    "unsigned integer constant"       shift, and go to state 442
    "unsigned long integer constant"  shift, and go to state 443
    "unsigned int8 constant"          shift, and go to state 444
    "floating point constant"         shift, and go to state 445
    "double constant"                 shift, and go to state 446
    "name"                            shift, and go to state 56
    "start of the string"             shift, and go to state 447
    "begin of code block"             shift, and go to state 448
    '-'                               shift, and go to state 449
    '+'                               shift, and go to state 450
    '*'                               shift, and go to state 451
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 452
    '!'                               shift, and go to state 453
    '['                               shift, and go to state 454
    '('                               shift, and go to state 455
    '$'                               shift, and go to state 456
    '@'                               shift, and go to state 457

    string_builder          go to state 458
    expr_reader             go to state 459
    expr_call_pipe          go to state 460
    name_in_namespace       go to state 461
    expr_new                go to state 462
    expr_cast               go to state 463
    expr_type_decl          go to state 464
    expr_type_info          go to state 465
    block_or_lambda         go to state 466
    expr_full_block         go to state 467
    expr_numeric_const      go to state 468
    expr_named_call         go to state 469
    expr_method_call        go to state 470
    func_addr_expr          go to state 471
    expr_field              go to state 472
    expr_call               go to state 473
    expr                    go to state 955
    expr_mtag               go to state 475
    basic_type_declaration  go to state 476
    make_decl               go to state 477
    make_struct_decl        go to state 478
    make_tuple_call         go to state 479
    make_dim_decl           go to state 480
    make_table_decl         go to state 481
    array_comprehension     go to state 482


State 758

  326 expr_assign: expr "|=" . expr

    "struct"                          shift, and go to state 409
    "class"                           shift, and go to state 410
    "true"                            shift, and go to state 411
    "false"                           shift, and go to state 412
    "new"                             shift, and go to state 413
    "typeinfo"                        shift, and go to state 414
    "type"                            shift, and go to state 415
    "array"                           shift, and go to state 416
    "null"                            shift, and go to state 417
    "table"                           shift, and go to state 418
    "deref"                           shift, and go to state 419
    "cast"                            shift, and go to state 420
    "upcast"                          shift, and go to state 421
    "addr"                            shift, and go to state 422
    "reinterpret"                     shift, and go to state 423
    "unsafe"                          shift, and go to state 424
    "fixed_array"                     shift, and go to state 425
    "default"                         shift, and go to state 426
    "bool"                            shift, and go to state 225
    "void"                            shift, and go to state 226
    "string"                          shift, and go to state 227
    "int"                             shift, and go to state 229
    "int2"                            shift, and go to state 230
    "int3"                            shift, and go to state 231
    "int4"                            shift, and go to state 232
    "uint"                            shift, and go to state 233
    "bitfield"                        shift, and go to state 427
    "uint2"                           shift, and go to state 235
    "uint3"                           shift, and go to state 236
    "uint4"                           shift, and go to state 237
    "float"                           shift, and go to state 238
    "float2"                          shift, and go to state 239
    "float3"                          shift, and go to state 240
    "float4"                          shift, and go to state 241
    "range"                           shift, and go to state 242
    "urange"                          shift, and go to state 243
    "range64"                         shift, and go to state 244
    "urange64"                        shift, and go to state 245
    "int64"                           shift, and go to state 247
    "uint64"                          shift, and go to state 248
    "double"                          shift, and go to state 249
    "int8"                            shift, and go to state 252
    "uint8"                           shift, and go to state 253
    "int16"                           shift, and go to state 254
    "uint16"                          shift, and go to state 255
    "tuple"                           shift, and go to state 428
    "variant"                         shift, and go to state 429
    "generator"                       shift, and go to state 430
    "++"                              shift, and go to state 431
    "--"                              shift, and go to state 432
    "::"                              shift, and go to state 55
    "$$"                              shift, and go to state 433
    "$i"                              shift, and go to state 434
    "$v"                              shift, and go to state 435
    "$b"                              shift, and go to state 436
    "$a"                              shift, and go to state 437
    "$c"                              shift, and go to state 438
    "..."                             shift, and go to state 439
    "integer constant"                shift, and go to state 440
    "long integer constant"           shift, and go to state 441
    "unsigned integer constant"       shift, and go to state 442
    "unsigned long integer constant"  shift, and go to state 443
    "unsigned int8 constant"          shift, and go to state 444
    "floating point constant"         shift, and go to state 445
    "double constant"                 shift, and go to state 446
    "name"                            shift, and go to state 56
    "start of the string"             shift, and go to state 447
    "begin of code block"             shift, and go to state 448
    '-'                               shift, and go to state 449
    '+'                               shift, and go to state 450
    '*'                               shift, and go to state 451
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 452
    '!'                               shift, and go to state 453
    '['                               shift, and go to state 454
    '('                               shift, and go to state 455
    '$'                               shift, and go to state 456
    '@'                               shift, and go to state 457

    string_builder          go to state 458
    expr_reader             go to state 459
    expr_call_pipe          go to state 460
    name_in_namespace       go to state 461
    expr_new                go to state 462
    expr_cast               go to state 463
    expr_type_decl          go to state 464
    expr_type_info          go to state 465
    block_or_lambda         go to state 466
    expr_full_block         go to state 467
    expr_numeric_const      go to state 468
    expr_named_call         go to state 469
    expr_method_call        go to state 470
    func_addr_expr          go to state 471
    expr_field              go to state 472
    expr_call               go to state 473
    expr                    go to state 956
    expr_mtag               go to state 475
    basic_type_declaration  go to state 476
    make_decl               go to state 477
    make_struct_decl        go to state 478
    make_tuple_call         go to state 479
    make_dim_decl           go to state 480
    make_table_decl         go to state 481
    array_comprehension     go to state 482


State 759

  327 expr_assign: expr "^=" . expr

    "struct"                          shift, and go to state 409
    "class"                           shift, and go to state 410
    "true"                            shift, and go to state 411
    "false"                           shift, and go to state 412
    "new"                             shift, and go to state 413
    "typeinfo"                        shift, and go to state 414
    "type"                            shift, and go to state 415
    "array"                           shift, and go to state 416
    "null"                            shift, and go to state 417
    "table"                           shift, and go to state 418
    "deref"                           shift, and go to state 419
    "cast"                            shift, and go to state 420
    "upcast"                          shift, and go to state 421
    "addr"                            shift, and go to state 422
    "reinterpret"                     shift, and go to state 423
    "unsafe"                          shift, and go to state 424
    "fixed_array"                     shift, and go to state 425
    "default"                         shift, and go to state 426
    "bool"                            shift, and go to state 225
    "void"                            shift, and go to state 226
    "string"                          shift, and go to state 227
    "int"                             shift, and go to state 229
    "int2"                            shift, and go to state 230
    "int3"                            shift, and go to state 231
    "int4"                            shift, and go to state 232
    "uint"                            shift, and go to state 233
    "bitfield"                        shift, and go to state 427
    "uint2"                           shift, and go to state 235
    "uint3"                           shift, and go to state 236
    "uint4"                           shift, and go to state 237
    "float"                           shift, and go to state 238
    "float2"                          shift, and go to state 239
    "float3"                          shift, and go to state 240
    "float4"                          shift, and go to state 241
    "range"                           shift, and go to state 242
    "urange"                          shift, and go to state 243
    "range64"                         shift, and go to state 244
    "urange64"                        shift, and go to state 245
    "int64"                           shift, and go to state 247
    "uint64"                          shift, and go to state 248
    "double"                          shift, and go to state 249
    "int8"                            shift, and go to state 252
    "uint8"                           shift, and go to state 253
    "int16"                           shift, and go to state 254
    "uint16"                          shift, and go to state 255
    "tuple"                           shift, and go to state 428
    "variant"                         shift, and go to state 429
    "generator"                       shift, and go to state 430
    "++"                              shift, and go to state 431
    "--"                              shift, and go to state 432
    "::"                              shift, and go to state 55
    "$$"                              shift, and go to state 433
    "$i"                              shift, and go to state 434
    "$v"                              shift, and go to state 435
    "$b"                              shift, and go to state 436
    "$a"                              shift, and go to state 437
    "$c"                              shift, and go to state 438
    "..."                             shift, and go to state 439
    "integer constant"                shift, and go to state 440
    "long integer constant"           shift, and go to state 441
    "unsigned integer constant"       shift, and go to state 442
    "unsigned long integer constant"  shift, and go to state 443
    "unsigned int8 constant"          shift, and go to state 444
    "floating point constant"         shift, and go to state 445
    "double constant"                 shift, and go to state 446
    "name"                            shift, and go to state 56
    "start of the string"             shift, and go to state 447
    "begin of code block"             shift, and go to state 448
    '-'                               shift, and go to state 449
    '+'                               shift, and go to state 450
    '*'                               shift, and go to state 451
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 452
    '!'                               shift, and go to state 453
    '['                               shift, and go to state 454
    '('                               shift, and go to state 455
    '$'                               shift, and go to state 456
    '@'                               shift, and go to state 457

    string_builder          go to state 458
    expr_reader             go to state 459
    expr_call_pipe          go to state 460
    name_in_namespace       go to state 461
    expr_new                go to state 462
    expr_cast               go to state 463
    expr_type_decl          go to state 464
    expr_type_info          go to state 465
    block_or_lambda         go to state 466
    expr_full_block         go to state 467
    expr_numeric_const      go to state 468
    expr_named_call         go to state 469
    expr_method_call        go to state 470
    func_addr_expr          go to state 471
    expr_field              go to state 472
    expr_call               go to state 473
    expr                    go to state 957
    expr_mtag               go to state 475
    basic_type_declaration  go to state 476
    make_decl               go to state 477
    make_struct_decl        go to state 478
    make_tuple_call         go to state 479
    make_dim_decl           go to state 480
    make_table_decl         go to state 481
    array_comprehension     go to state 482


State 760

  336 expr_assign: expr "<<=" . expr

    "struct"                          shift, and go to state 409
    "class"                           shift, and go to state 410
    "true"                            shift, and go to state 411
    "false"                           shift, and go to state 412
    "new"                             shift, and go to state 413
    "typeinfo"                        shift, and go to state 414
    "type"                            shift, and go to state 415
    "array"                           shift, and go to state 416
    "null"                            shift, and go to state 417
    "table"                           shift, and go to state 418
    "deref"                           shift, and go to state 419
    "cast"                            shift, and go to state 420
    "upcast"                          shift, and go to state 421
    "addr"                            shift, and go to state 422
    "reinterpret"                     shift, and go to state 423
    "unsafe"                          shift, and go to state 424
    "fixed_array"                     shift, and go to state 425
    "default"                         shift, and go to state 426
    "bool"                            shift, and go to state 225
    "void"                            shift, and go to state 226
    "string"                          shift, and go to state 227
    "int"                             shift, and go to state 229
    "int2"                            shift, and go to state 230
    "int3"                            shift, and go to state 231
    "int4"                            shift, and go to state 232
    "uint"                            shift, and go to state 233
    "bitfield"                        shift, and go to state 427
    "uint2"                           shift, and go to state 235
    "uint3"                           shift, and go to state 236
    "uint4"                           shift, and go to state 237
    "float"                           shift, and go to state 238
    "float2"                          shift, and go to state 239
    "float3"                          shift, and go to state 240
    "float4"                          shift, and go to state 241
    "range"                           shift, and go to state 242
    "urange"                          shift, and go to state 243
    "range64"                         shift, and go to state 244
    "urange64"                        shift, and go to state 245
    "int64"                           shift, and go to state 247
    "uint64"                          shift, and go to state 248
    "double"                          shift, and go to state 249
    "int8"                            shift, and go to state 252
    "uint8"                           shift, and go to state 253
    "int16"                           shift, and go to state 254
    "uint16"                          shift, and go to state 255
    "tuple"                           shift, and go to state 428
    "variant"                         shift, and go to state 429
    "generator"                       shift, and go to state 430
    "++"                              shift, and go to state 431
    "--"                              shift, and go to state 432
    "::"                              shift, and go to state 55
    "$$"                              shift, and go to state 433
    "$i"                              shift, and go to state 434
    "$v"                              shift, and go to state 435
    "$b"                              shift, and go to state 436
    "$a"                              shift, and go to state 437
    "$c"                              shift, and go to state 438
    "..."                             shift, and go to state 439
    "integer constant"                shift, and go to state 440
    "long integer constant"           shift, and go to state 441
    "unsigned integer constant"       shift, and go to state 442
    "unsigned long integer constant"  shift, and go to state 443
    "unsigned int8 constant"          shift, and go to state 444
    "floating point constant"         shift, and go to state 445
    "double constant"                 shift, and go to state 446
    "name"                            shift, and go to state 56
    "start of the string"             shift, and go to state 447
    "begin of code block"             shift, and go to state 448
    '-'                               shift, and go to state 449
    '+'                               shift, and go to state 450
    '*'                               shift, and go to state 451
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 452
    '!'                               shift, and go to state 453
    '['                               shift, and go to state 454
    '('                               shift, and go to state 455
    '$'                               shift, and go to state 456
    '@'                               shift, and go to state 457

    string_builder          go to state 458
    expr_reader             go to state 459
    expr_call_pipe          go to state 460
    name_in_namespace       go to state 461
    expr_new                go to state 462
    expr_cast               go to state 463
    expr_type_decl          go to state 464
    expr_type_info          go to state 465
    block_or_lambda         go to state 466
    expr_full_block         go to state 467
    expr_numeric_const      go to state 468
    expr_named_call         go to state 469
    expr_method_call        go to state 470
    func_addr_expr          go to state 471
    expr_field              go to state 472
    expr_call               go to state 473
    expr                    go to state 958
    expr_mtag               go to state 475
    basic_type_declaration  go to state 476
    make_decl               go to state 477
    make_struct_decl        go to state 478
    make_tuple_call         go to state 479
    make_dim_decl           go to state 480
    make_table_decl         go to state 481
    array_comprehension     go to state 482


State 761

  337 expr_assign: expr ">>=" . expr

    "struct"                          shift, and go to state 409
    "class"                           shift, and go to state 410
    "true"                            shift, and go to state 411
    "false"                           shift, and go to state 412
    "new"                             shift, and go to state 413
    "typeinfo"                        shift, and go to state 414
    "type"                            shift, and go to state 415
    "array"                           shift, and go to state 416
    "null"                            shift, and go to state 417
    "table"                           shift, and go to state 418
    "deref"                           shift, and go to state 419
    "cast"                            shift, and go to state 420
    "upcast"                          shift, and go to state 421
    "addr"                            shift, and go to state 422
    "reinterpret"                     shift, and go to state 423
    "unsafe"                          shift, and go to state 424
    "fixed_array"                     shift, and go to state 425
    "default"                         shift, and go to state 426
    "bool"                            shift, and go to state 225
    "void"                            shift, and go to state 226
    "string"                          shift, and go to state 227
    "int"                             shift, and go to state 229
    "int2"                            shift, and go to state 230
    "int3"                            shift, and go to state 231
    "int4"                            shift, and go to state 232
    "uint"                            shift, and go to state 233
    "bitfield"                        shift, and go to state 427
    "uint2"                           shift, and go to state 235
    "uint3"                           shift, and go to state 236
    "uint4"                           shift, and go to state 237
    "float"                           shift, and go to state 238
    "float2"                          shift, and go to state 239
    "float3"                          shift, and go to state 240
    "float4"                          shift, and go to state 241
    "range"                           shift, and go to state 242
    "urange"                          shift, and go to state 243
    "range64"                         shift, and go to state 244
    "urange64"                        shift, and go to state 245
    "int64"                           shift, and go to state 247
    "uint64"                          shift, and go to state 248
    "double"                          shift, and go to state 249
    "int8"                            shift, and go to state 252
    "uint8"                           shift, and go to state 253
    "int16"                           shift, and go to state 254
    "uint16"                          shift, and go to state 255
    "tuple"                           shift, and go to state 428
    "variant"                         shift, and go to state 429
    "generator"                       shift, and go to state 430
    "++"                              shift, and go to state 431
    "--"                              shift, and go to state 432
    "::"                              shift, and go to state 55
    "$$"                              shift, and go to state 433
    "$i"                              shift, and go to state 434
    "$v"                              shift, and go to state 435
    "$b"                              shift, and go to state 436
    "$a"                              shift, and go to state 437
    "$c"                              shift, and go to state 438
    "..."                             shift, and go to state 439
    "integer constant"                shift, and go to state 440
    "long integer constant"           shift, and go to state 441
    "unsigned integer constant"       shift, and go to state 442
    "unsigned long integer constant"  shift, and go to state 443
    "unsigned int8 constant"          shift, and go to state 444
    "floating point constant"         shift, and go to state 445
    "double constant"                 shift, and go to state 446
    "name"                            shift, and go to state 56
    "start of the string"             shift, and go to state 447
    "begin of code block"             shift, and go to state 448
    '-'                               shift, and go to state 449
    '+'                               shift, and go to state 450
    '*'                               shift, and go to state 451
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 452
    '!'                               shift, and go to state 453
    '['                               shift, and go to state 454
    '('                               shift, and go to state 455
    '$'                               shift, and go to state 456
    '@'                               shift, and go to state 457

    string_builder          go to state 458
    expr_reader             go to state 459
    expr_call_pipe          go to state 460
    name_in_namespace       go to state 461
    expr_new                go to state 462
    expr_cast               go to state 463
    expr_type_decl          go to state 464
    expr_type_info          go to state 465
    block_or_lambda         go to state 466
    expr_full_block         go to state 467
    expr_numeric_const      go to state 468
    expr_named_call         go to state 469
    expr_method_call        go to state 470
    func_addr_expr          go to state 471
    expr_field              go to state 472
    expr_call               go to state 473
    expr                    go to state 959
    expr_mtag               go to state 475
    basic_type_declaration  go to state 476
    make_decl               go to state 477
    make_struct_decl        go to state 478
    make_tuple_call         go to state 479
    make_dim_decl           go to state 480
    make_table_decl         go to state 481
    array_comprehension     go to state 482


State 762

  323 expr_assign: expr "<-" . expr

    "struct"                          shift, and go to state 409
    "class"                           shift, and go to state 410
    "true"                            shift, and go to state 411
    "false"                           shift, and go to state 412
    "new"                             shift, and go to state 413
    "typeinfo"                        shift, and go to state 414
    "type"                            shift, and go to state 415
    "array"                           shift, and go to state 416
    "null"                            shift, and go to state 417
    "table"                           shift, and go to state 418
    "deref"                           shift, and go to state 419
    "cast"                            shift, and go to state 420
    "upcast"                          shift, and go to state 421
    "addr"                            shift, and go to state 422
    "reinterpret"                     shift, and go to state 423
    "unsafe"                          shift, and go to state 424
    "fixed_array"                     shift, and go to state 425
    "default"                         shift, and go to state 426
    "bool"                            shift, and go to state 225
    "void"                            shift, and go to state 226
    "string"                          shift, and go to state 227
    "int"                             shift, and go to state 229
    "int2"                            shift, and go to state 230
    "int3"                            shift, and go to state 231
    "int4"                            shift, and go to state 232
    "uint"                            shift, and go to state 233
    "bitfield"                        shift, and go to state 427
    "uint2"                           shift, and go to state 235
    "uint3"                           shift, and go to state 236
    "uint4"                           shift, and go to state 237
    "float"                           shift, and go to state 238
    "float2"                          shift, and go to state 239
    "float3"                          shift, and go to state 240
    "float4"                          shift, and go to state 241
    "range"                           shift, and go to state 242
    "urange"                          shift, and go to state 243
    "range64"                         shift, and go to state 244
    "urange64"                        shift, and go to state 245
    "int64"                           shift, and go to state 247
    "uint64"                          shift, and go to state 248
    "double"                          shift, and go to state 249
    "int8"                            shift, and go to state 252
    "uint8"                           shift, and go to state 253
    "int16"                           shift, and go to state 254
    "uint16"                          shift, and go to state 255
    "tuple"                           shift, and go to state 428
    "variant"                         shift, and go to state 429
    "generator"                       shift, and go to state 430
    "++"                              shift, and go to state 431
    "--"                              shift, and go to state 432
    "::"                              shift, and go to state 55
    "$$"                              shift, and go to state 433
    "$i"                              shift, and go to state 434
    "$v"                              shift, and go to state 435
    "$b"                              shift, and go to state 436
    "$a"                              shift, and go to state 437
    "$c"                              shift, and go to state 438
    "..."                             shift, and go to state 439
    "integer constant"                shift, and go to state 440
    "long integer constant"           shift, and go to state 441
    "unsigned integer constant"       shift, and go to state 442
    "unsigned long integer constant"  shift, and go to state 443
    "unsigned int8 constant"          shift, and go to state 444
    "floating point constant"         shift, and go to state 445
    "double constant"                 shift, and go to state 446
    "name"                            shift, and go to state 56
    "start of the string"             shift, and go to state 447
    "begin of code block"             shift, and go to state 448
    '-'                               shift, and go to state 449
    '+'                               shift, and go to state 450
    '*'                               shift, and go to state 451
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 452
    '!'                               shift, and go to state 453
    '['                               shift, and go to state 454
    '('                               shift, and go to state 455
    '$'                               shift, and go to state 456
    '@'                               shift, and go to state 457

    string_builder          go to state 458
    expr_reader             go to state 459
    expr_call_pipe          go to state 460
    name_in_namespace       go to state 461
    expr_new                go to state 462
    expr_cast               go to state 463
    expr_type_decl          go to state 464
    expr_type_info          go to state 465
    block_or_lambda         go to state 466
    expr_full_block         go to state 467
    expr_numeric_const      go to state 468
    expr_named_call         go to state 469
    expr_method_call        go to state 470
    func_addr_expr          go to state 471
    expr_field              go to state 472
    expr_call               go to state 473
    expr                    go to state 960
    expr_mtag               go to state 475
    basic_type_declaration  go to state 476
    make_decl               go to state 477
    make_struct_decl        go to state 478
    make_tuple_call         go to state 479
    make_dim_decl           go to state 480
    make_table_decl         go to state 481
    array_comprehension     go to state 482


State 763

  324 expr_assign: expr ":=" . expr

    "struct"                          shift, and go to state 409
    "class"                           shift, and go to state 410
    "true"                            shift, and go to state 411
    "false"                           shift, and go to state 412
    "new"                             shift, and go to state 413
    "typeinfo"                        shift, and go to state 414
    "type"                            shift, and go to state 415
    "array"                           shift, and go to state 416
    "null"                            shift, and go to state 417
    "table"                           shift, and go to state 418
    "deref"                           shift, and go to state 419
    "cast"                            shift, and go to state 420
    "upcast"                          shift, and go to state 421
    "addr"                            shift, and go to state 422
    "reinterpret"                     shift, and go to state 423
    "unsafe"                          shift, and go to state 424
    "fixed_array"                     shift, and go to state 425
    "default"                         shift, and go to state 426
    "bool"                            shift, and go to state 225
    "void"                            shift, and go to state 226
    "string"                          shift, and go to state 227
    "int"                             shift, and go to state 229
    "int2"                            shift, and go to state 230
    "int3"                            shift, and go to state 231
    "int4"                            shift, and go to state 232
    "uint"                            shift, and go to state 233
    "bitfield"                        shift, and go to state 427
    "uint2"                           shift, and go to state 235
    "uint3"                           shift, and go to state 236
    "uint4"                           shift, and go to state 237
    "float"                           shift, and go to state 238
    "float2"                          shift, and go to state 239
    "float3"                          shift, and go to state 240
    "float4"                          shift, and go to state 241
    "range"                           shift, and go to state 242
    "urange"                          shift, and go to state 243
    "range64"                         shift, and go to state 244
    "urange64"                        shift, and go to state 245
    "int64"                           shift, and go to state 247
    "uint64"                          shift, and go to state 248
    "double"                          shift, and go to state 249
    "int8"                            shift, and go to state 252
    "uint8"                           shift, and go to state 253
    "int16"                           shift, and go to state 254
    "uint16"                          shift, and go to state 255
    "tuple"                           shift, and go to state 428
    "variant"                         shift, and go to state 429
    "generator"                       shift, and go to state 430
    "++"                              shift, and go to state 431
    "--"                              shift, and go to state 432
    "::"                              shift, and go to state 55
    "$$"                              shift, and go to state 433
    "$i"                              shift, and go to state 434
    "$v"                              shift, and go to state 435
    "$b"                              shift, and go to state 436
    "$a"                              shift, and go to state 437
    "$c"                              shift, and go to state 438
    "..."                             shift, and go to state 439
    "integer constant"                shift, and go to state 440
    "long integer constant"           shift, and go to state 441
    "unsigned integer constant"       shift, and go to state 442
    "unsigned long integer constant"  shift, and go to state 443
    "unsigned int8 constant"          shift, and go to state 444
    "floating point constant"         shift, and go to state 445
    "double constant"                 shift, and go to state 446
    "name"                            shift, and go to state 56
    "start of the string"             shift, and go to state 447
    "begin of code block"             shift, and go to state 448
    '-'                               shift, and go to state 449
    '+'                               shift, and go to state 450
    '*'                               shift, and go to state 451
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 452
    '!'                               shift, and go to state 453
    '['                               shift, and go to state 454
    '('                               shift, and go to state 455
    '$'                               shift, and go to state 456
    '@'                               shift, and go to state 457

    string_builder          go to state 458
    expr_reader             go to state 459
    expr_call_pipe          go to state 460
    name_in_namespace       go to state 461
    expr_new                go to state 462
    expr_cast               go to state 463
    expr_type_decl          go to state 464
    expr_type_info          go to state 465
    block_or_lambda         go to state 466
    expr_full_block         go to state 467
    expr_numeric_const      go to state 468
    expr_named_call         go to state 469
    expr_method_call        go to state 470
    func_addr_expr          go to state 471
    expr_field              go to state 472
    expr_call               go to state 473
    expr                    go to state 961
    expr_mtag               go to state 475
    basic_type_declaration  go to state 476
    make_decl               go to state 477
    make_struct_decl        go to state 478
    make_tuple_call         go to state 479
    make_dim_decl           go to state 480
    make_table_decl         go to state 481
    array_comprehension     go to state 482


State 764

  338 expr_assign: expr "<<<=" . expr

    "struct"                          shift, and go to state 409
    "class"                           shift, and go to state 410
    "true"                            shift, and go to state 411
    "false"                           shift, and go to state 412
    "new"                             shift, and go to state 413
    "typeinfo"                        shift, and go to state 414
    "type"                            shift, and go to state 415
    "array"                           shift, and go to state 416
    "null"                            shift, and go to state 417
    "table"                           shift, and go to state 418
    "deref"                           shift, and go to state 419
    "cast"                            shift, and go to state 420
    "upcast"                          shift, and go to state 421
    "addr"                            shift, and go to state 422
    "reinterpret"                     shift, and go to state 423
    "unsafe"                          shift, and go to state 424
    "fixed_array"                     shift, and go to state 425
    "default"                         shift, and go to state 426
    "bool"                            shift, and go to state 225
    "void"                            shift, and go to state 226
    "string"                          shift, and go to state 227
    "int"                             shift, and go to state 229
    "int2"                            shift, and go to state 230
    "int3"                            shift, and go to state 231
    "int4"                            shift, and go to state 232
    "uint"                            shift, and go to state 233
    "bitfield"                        shift, and go to state 427
    "uint2"                           shift, and go to state 235
    "uint3"                           shift, and go to state 236
    "uint4"                           shift, and go to state 237
    "float"                           shift, and go to state 238
    "float2"                          shift, and go to state 239
    "float3"                          shift, and go to state 240
    "float4"                          shift, and go to state 241
    "range"                           shift, and go to state 242
    "urange"                          shift, and go to state 243
    "range64"                         shift, and go to state 244
    "urange64"                        shift, and go to state 245
    "int64"                           shift, and go to state 247
    "uint64"                          shift, and go to state 248
    "double"                          shift, and go to state 249
    "int8"                            shift, and go to state 252
    "uint8"                           shift, and go to state 253
    "int16"                           shift, and go to state 254
    "uint16"                          shift, and go to state 255
    "tuple"                           shift, and go to state 428
    "variant"                         shift, and go to state 429
    "generator"                       shift, and go to state 430
    "++"                              shift, and go to state 431
    "--"                              shift, and go to state 432
    "::"                              shift, and go to state 55
    "$$"                              shift, and go to state 433
    "$i"                              shift, and go to state 434
    "$v"                              shift, and go to state 435
    "$b"                              shift, and go to state 436
    "$a"                              shift, and go to state 437
    "$c"                              shift, and go to state 438
    "..."                             shift, and go to state 439
    "integer constant"                shift, and go to state 440
    "long integer constant"           shift, and go to state 441
    "unsigned integer constant"       shift, and go to state 442
    "unsigned long integer constant"  shift, and go to state 443
    "unsigned int8 constant"          shift, and go to state 444
    "floating point constant"         shift, and go to state 445
    "double constant"                 shift, and go to state 446
    "name"                            shift, and go to state 56
    "start of the string"             shift, and go to state 447
    "begin of code block"             shift, and go to state 448
    '-'                               shift, and go to state 449
    '+'                               shift, and go to state 450
    '*'                               shift, and go to state 451
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 452
    '!'                               shift, and go to state 453
    '['                               shift, and go to state 454
    '('                               shift, and go to state 455
    '$'                               shift, and go to state 456
    '@'                               shift, and go to state 457

    string_builder          go to state 458
    expr_reader             go to state 459
    expr_call_pipe          go to state 460
    name_in_namespace       go to state 461
    expr_new                go to state 462
    expr_cast               go to state 463
    expr_type_decl          go to state 464
    expr_type_info          go to state 465
    block_or_lambda         go to state 466
    expr_full_block         go to state 467
    expr_numeric_const      go to state 468
    expr_named_call         go to state 469
    expr_method_call        go to state 470
    func_addr_expr          go to state 471
    expr_field              go to state 472
    expr_call               go to state 473
    expr                    go to state 962
    expr_mtag               go to state 475
    basic_type_declaration  go to state 476
    make_decl               go to state 477
    make_struct_decl        go to state 478
    make_tuple_call         go to state 479
    make_dim_decl           go to state 480
    make_table_decl         go to state 481
    array_comprehension     go to state 482


State 765

  339 expr_assign: expr ">>>=" . expr

    "struct"                          shift, and go to state 409
    "class"                           shift, and go to state 410
    "true"                            shift, and go to state 411
    "false"                           shift, and go to state 412
    "new"                             shift, and go to state 413
    "typeinfo"                        shift, and go to state 414
    "type"                            shift, and go to state 415
    "array"                           shift, and go to state 416
    "null"                            shift, and go to state 417
    "table"                           shift, and go to state 418
    "deref"                           shift, and go to state 419
    "cast"                            shift, and go to state 420
    "upcast"                          shift, and go to state 421
    "addr"                            shift, and go to state 422
    "reinterpret"                     shift, and go to state 423
    "unsafe"                          shift, and go to state 424
    "fixed_array"                     shift, and go to state 425
    "default"                         shift, and go to state 426
    "bool"                            shift, and go to state 225
    "void"                            shift, and go to state 226
    "string"                          shift, and go to state 227
    "int"                             shift, and go to state 229
    "int2"                            shift, and go to state 230
    "int3"                            shift, and go to state 231
    "int4"                            shift, and go to state 232
    "uint"                            shift, and go to state 233
    "bitfield"                        shift, and go to state 427
    "uint2"                           shift, and go to state 235
    "uint3"                           shift, and go to state 236
    "uint4"                           shift, and go to state 237
    "float"                           shift, and go to state 238
    "float2"                          shift, and go to state 239
    "float3"                          shift, and go to state 240
    "float4"                          shift, and go to state 241
    "range"                           shift, and go to state 242
    "urange"                          shift, and go to state 243
    "range64"                         shift, and go to state 244
    "urange64"                        shift, and go to state 245
    "int64"                           shift, and go to state 247
    "uint64"                          shift, and go to state 248
    "double"                          shift, and go to state 249
    "int8"                            shift, and go to state 252
    "uint8"                           shift, and go to state 253
    "int16"                           shift, and go to state 254
    "uint16"                          shift, and go to state 255
    "tuple"                           shift, and go to state 428
    "variant"                         shift, and go to state 429
    "generator"                       shift, and go to state 430
    "++"                              shift, and go to state 431
    "--"                              shift, and go to state 432
    "::"                              shift, and go to state 55
    "$$"                              shift, and go to state 433
    "$i"                              shift, and go to state 434
    "$v"                              shift, and go to state 435
    "$b"                              shift, and go to state 436
    "$a"                              shift, and go to state 437
    "$c"                              shift, and go to state 438
    "..."                             shift, and go to state 439
    "integer constant"                shift, and go to state 440
    "long integer constant"           shift, and go to state 441
    "unsigned integer constant"       shift, and go to state 442
    "unsigned long integer constant"  shift, and go to state 443
    "unsigned int8 constant"          shift, and go to state 444
    "floating point constant"         shift, and go to state 445
    "double constant"                 shift, and go to state 446
    "name"                            shift, and go to state 56
    "start of the string"             shift, and go to state 447
    "begin of code block"             shift, and go to state 448
    '-'                               shift, and go to state 449
    '+'                               shift, and go to state 450
    '*'                               shift, and go to state 451
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 452
    '!'                               shift, and go to state 453
    '['                               shift, and go to state 454
    '('                               shift, and go to state 455
    '$'                               shift, and go to state 456
    '@'                               shift, and go to state 457

    string_builder          go to state 458
    expr_reader             go to state 459
    expr_call_pipe          go to state 460
    name_in_namespace       go to state 461
    expr_new                go to state 462
    expr_cast               go to state 463
    expr_type_decl          go to state 464
    expr_type_info          go to state 465
    block_or_lambda         go to state 466
    expr_full_block         go to state 467
    expr_numeric_const      go to state 468
    expr_named_call         go to state 469
    expr_method_call        go to state 470
    func_addr_expr          go to state 471
    expr_field              go to state 472
    expr_call               go to state 473
    expr                    go to state 963
    expr_mtag               go to state 475
    basic_type_declaration  go to state 476
    make_decl               go to state 477
    make_struct_decl        go to state 478
    make_tuple_call         go to state 479
    make_dim_decl           go to state 480
    make_table_decl         go to state 481
    array_comprehension     go to state 482


State 766

  328 expr_assign: expr "&&=" . expr

    "struct"                          shift, and go to state 409
    "class"                           shift, and go to state 410
    "true"                            shift, and go to state 411
    "false"                           shift, and go to state 412
    "new"                             shift, and go to state 413
    "typeinfo"                        shift, and go to state 414
    "type"                            shift, and go to state 415
    "array"                           shift, and go to state 416
    "null"                            shift, and go to state 417
    "table"                           shift, and go to state 418
    "deref"                           shift, and go to state 419
    "cast"                            shift, and go to state 420
    "upcast"                          shift, and go to state 421
    "addr"                            shift, and go to state 422
    "reinterpret"                     shift, and go to state 423
    "unsafe"                          shift, and go to state 424
    "fixed_array"                     shift, and go to state 425
    "default"                         shift, and go to state 426
    "bool"                            shift, and go to state 225
    "void"                            shift, and go to state 226
    "string"                          shift, and go to state 227
    "int"                             shift, and go to state 229
    "int2"                            shift, and go to state 230
    "int3"                            shift, and go to state 231
    "int4"                            shift, and go to state 232
    "uint"                            shift, and go to state 233
    "bitfield"                        shift, and go to state 427
    "uint2"                           shift, and go to state 235
    "uint3"                           shift, and go to state 236
    "uint4"                           shift, and go to state 237
    "float"                           shift, and go to state 238
    "float2"                          shift, and go to state 239
    "float3"                          shift, and go to state 240
    "float4"                          shift, and go to state 241
    "range"                           shift, and go to state 242
    "urange"                          shift, and go to state 243
    "range64"                         shift, and go to state 244
    "urange64"                        shift, and go to state 245
    "int64"                           shift, and go to state 247
    "uint64"                          shift, and go to state 248
    "double"                          shift, and go to state 249
    "int8"                            shift, and go to state 252
    "uint8"                           shift, and go to state 253
    "int16"                           shift, and go to state 254
    "uint16"                          shift, and go to state 255
    "tuple"                           shift, and go to state 428
    "variant"                         shift, and go to state 429
    "generator"                       shift, and go to state 430
    "++"                              shift, and go to state 431
    "--"                              shift, and go to state 432
    "::"                              shift, and go to state 55
    "$$"                              shift, and go to state 433
    "$i"                              shift, and go to state 434
    "$v"                              shift, and go to state 435
    "$b"                              shift, and go to state 436
    "$a"                              shift, and go to state 437
    "$c"                              shift, and go to state 438
    "..."                             shift, and go to state 439
    "integer constant"                shift, and go to state 440
    "long integer constant"           shift, and go to state 441
    "unsigned integer constant"       shift, and go to state 442
    "unsigned long integer constant"  shift, and go to state 443
    "unsigned int8 constant"          shift, and go to state 444
    "floating point constant"         shift, and go to state 445
    "double constant"                 shift, and go to state 446
    "name"                            shift, and go to state 56
    "start of the string"             shift, and go to state 447
    "begin of code block"             shift, and go to state 448
    '-'                               shift, and go to state 449
    '+'                               shift, and go to state 450
    '*'                               shift, and go to state 451
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 452
    '!'                               shift, and go to state 453
    '['                               shift, and go to state 454
    '('                               shift, and go to state 455
    '$'                               shift, and go to state 456
    '@'                               shift, and go to state 457

    string_builder          go to state 458
    expr_reader             go to state 459
    expr_call_pipe          go to state 460
    name_in_namespace       go to state 461
    expr_new                go to state 462
    expr_cast               go to state 463
    expr_type_decl          go to state 464
    expr_type_info          go to state 465
    block_or_lambda         go to state 466
    expr_full_block         go to state 467
    expr_numeric_const      go to state 468
    expr_named_call         go to state 469
    expr_method_call        go to state 470
    func_addr_expr          go to state 471
    expr_field              go to state 472
    expr_call               go to state 473
    expr                    go to state 964
    expr_mtag               go to state 475
    basic_type_declaration  go to state 476
    make_decl               go to state 477
    make_struct_decl        go to state 478
    make_tuple_call         go to state 479
    make_dim_decl           go to state 480
    make_table_decl         go to state 481
    array_comprehension     go to state 482


State 767

  329 expr_assign: expr "||=" . expr

    "struct"                          shift, and go to state 409
    "class"                           shift, and go to state 410
    "true"                            shift, and go to state 411
    "false"                           shift, and go to state 412
    "new"                             shift, and go to state 413
    "typeinfo"                        shift, and go to state 414
    "type"                            shift, and go to state 415
    "array"                           shift, and go to state 416
    "null"                            shift, and go to state 417
    "table"                           shift, and go to state 418
    "deref"                           shift, and go to state 419
    "cast"                            shift, and go to state 420
    "upcast"                          shift, and go to state 421
    "addr"                            shift, and go to state 422
    "reinterpret"                     shift, and go to state 423
    "unsafe"                          shift, and go to state 424
    "fixed_array"                     shift, and go to state 425
    "default"                         shift, and go to state 426
    "bool"                            shift, and go to state 225
    "void"                            shift, and go to state 226
    "string"                          shift, and go to state 227
    "int"                             shift, and go to state 229
    "int2"                            shift, and go to state 230
    "int3"                            shift, and go to state 231
    "int4"                            shift, and go to state 232
    "uint"                            shift, and go to state 233
    "bitfield"                        shift, and go to state 427
    "uint2"                           shift, and go to state 235
    "uint3"                           shift, and go to state 236
    "uint4"                           shift, and go to state 237
    "float"                           shift, and go to state 238
    "float2"                          shift, and go to state 239
    "float3"                          shift, and go to state 240
    "float4"                          shift, and go to state 241
    "range"                           shift, and go to state 242
    "urange"                          shift, and go to state 243
    "range64"                         shift, and go to state 244
    "urange64"                        shift, and go to state 245
    "int64"                           shift, and go to state 247
    "uint64"                          shift, and go to state 248
    "double"                          shift, and go to state 249
    "int8"                            shift, and go to state 252
    "uint8"                           shift, and go to state 253
    "int16"                           shift, and go to state 254
    "uint16"                          shift, and go to state 255
    "tuple"                           shift, and go to state 428
    "variant"                         shift, and go to state 429
    "generator"                       shift, and go to state 430
    "++"                              shift, and go to state 431
    "--"                              shift, and go to state 432
    "::"                              shift, and go to state 55
    "$$"                              shift, and go to state 433
    "$i"                              shift, and go to state 434
    "$v"                              shift, and go to state 435
    "$b"                              shift, and go to state 436
    "$a"                              shift, and go to state 437
    "$c"                              shift, and go to state 438
    "..."                             shift, and go to state 439
    "integer constant"                shift, and go to state 440
    "long integer constant"           shift, and go to state 441
    "unsigned integer constant"       shift, and go to state 442
    "unsigned long integer constant"  shift, and go to state 443
    "unsigned int8 constant"          shift, and go to state 444
    "floating point constant"         shift, and go to state 445
    "double constant"                 shift, and go to state 446
    "name"                            shift, and go to state 56
    "start of the string"             shift, and go to state 447
    "begin of code block"             shift, and go to state 448
    '-'                               shift, and go to state 449
    '+'                               shift, and go to state 450
    '*'                               shift, and go to state 451
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 452
    '!'                               shift, and go to state 453
    '['                               shift, and go to state 454
    '('                               shift, and go to state 455
    '$'                               shift, and go to state 456
    '@'                               shift, and go to state 457

    string_builder          go to state 458
    expr_reader             go to state 459
    expr_call_pipe          go to state 460
    name_in_namespace       go to state 461
    expr_new                go to state 462
    expr_cast               go to state 463
    expr_type_decl          go to state 464
    expr_type_info          go to state 465
    block_or_lambda         go to state 466
    expr_full_block         go to state 467
    expr_numeric_const      go to state 468
    expr_named_call         go to state 469
    expr_method_call        go to state 470
    func_addr_expr          go to state 471
    expr_field              go to state 472
    expr_call               go to state 473
    expr                    go to state 965
    expr_mtag               go to state 475
    basic_type_declaration  go to state 476
    make_decl               go to state 477
    make_struct_decl        go to state 478
    make_tuple_call         go to state 479
    make_dim_decl           go to state 480
    make_table_decl         go to state 481
    array_comprehension     go to state 482


State 768

  330 expr_assign: expr "^^=" . expr

    "struct"                          shift, and go to state 409
    "class"                           shift, and go to state 410
    "true"                            shift, and go to state 411
    "false"                           shift, and go to state 412
    "new"                             shift, and go to state 413
    "typeinfo"                        shift, and go to state 414
    "type"                            shift, and go to state 415
    "array"                           shift, and go to state 416
    "null"                            shift, and go to state 417
    "table"                           shift, and go to state 418
    "deref"                           shift, and go to state 419
    "cast"                            shift, and go to state 420
    "upcast"                          shift, and go to state 421
    "addr"                            shift, and go to state 422
    "reinterpret"                     shift, and go to state 423
    "unsafe"                          shift, and go to state 424
    "fixed_array"                     shift, and go to state 425
    "default"                         shift, and go to state 426
    "bool"                            shift, and go to state 225
    "void"                            shift, and go to state 226
    "string"                          shift, and go to state 227
    "int"                             shift, and go to state 229
    "int2"                            shift, and go to state 230
    "int3"                            shift, and go to state 231
    "int4"                            shift, and go to state 232
    "uint"                            shift, and go to state 233
    "bitfield"                        shift, and go to state 427
    "uint2"                           shift, and go to state 235
    "uint3"                           shift, and go to state 236
    "uint4"                           shift, and go to state 237
    "float"                           shift, and go to state 238
    "float2"                          shift, and go to state 239
    "float3"                          shift, and go to state 240
    "float4"                          shift, and go to state 241
    "range"                           shift, and go to state 242
    "urange"                          shift, and go to state 243
    "range64"                         shift, and go to state 244
    "urange64"                        shift, and go to state 245
    "int64"                           shift, and go to state 247
    "uint64"                          shift, and go to state 248
    "double"                          shift, and go to state 249
    "int8"                            shift, and go to state 252
    "uint8"                           shift, and go to state 253
    "int16"                           shift, and go to state 254
    "uint16"                          shift, and go to state 255
    "tuple"                           shift, and go to state 428
    "variant"                         shift, and go to state 429
    "generator"                       shift, and go to state 430
    "++"                              shift, and go to state 431
    "--"                              shift, and go to state 432
    "::"                              shift, and go to state 55
    "$$"                              shift, and go to state 433
    "$i"                              shift, and go to state 434
    "$v"                              shift, and go to state 435
    "$b"                              shift, and go to state 436
    "$a"                              shift, and go to state 437
    "$c"                              shift, and go to state 438
    "..."                             shift, and go to state 439
    "integer constant"                shift, and go to state 440
    "long integer constant"           shift, and go to state 441
    "unsigned integer constant"       shift, and go to state 442
    "unsigned long integer constant"  shift, and go to state 443
    "unsigned int8 constant"          shift, and go to state 444
    "floating point constant"         shift, and go to state 445
    "double constant"                 shift, and go to state 446
    "name"                            shift, and go to state 56
    "start of the string"             shift, and go to state 447
    "begin of code block"             shift, and go to state 448
    '-'                               shift, and go to state 449
    '+'                               shift, and go to state 450
    '*'                               shift, and go to state 451
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 452
    '!'                               shift, and go to state 453
    '['                               shift, and go to state 454
    '('                               shift, and go to state 455
    '$'                               shift, and go to state 456
    '@'                               shift, and go to state 457

    string_builder          go to state 458
    expr_reader             go to state 459
    expr_call_pipe          go to state 460
    name_in_namespace       go to state 461
    expr_new                go to state 462
    expr_cast               go to state 463
    expr_type_decl          go to state 464
    expr_type_info          go to state 465
    block_or_lambda         go to state 466
    expr_full_block         go to state 467
    expr_numeric_const      go to state 468
    expr_named_call         go to state 469
    expr_method_call        go to state 470
    func_addr_expr          go to state 471
    expr_field              go to state 472
    expr_call               go to state 473
    expr                    go to state 966
    expr_mtag               go to state 475
    basic_type_declaration  go to state 476
    make_decl               go to state 477
    make_struct_decl        go to state 478
    make_tuple_call         go to state 479
    make_dim_decl           go to state 480
    make_table_decl         go to state 481
    array_comprehension     go to state 482


State 769

  322 expr_assign: expr '=' . expr

    "struct"                          shift, and go to state 409
    "class"                           shift, and go to state 410
    "true"                            shift, and go to state 411
    "false"                           shift, and go to state 412
    "new"                             shift, and go to state 413
    "typeinfo"                        shift, and go to state 414
    "type"                            shift, and go to state 415
    "array"                           shift, and go to state 416
    "null"                            shift, and go to state 417
    "table"                           shift, and go to state 418
    "deref"                           shift, and go to state 419
    "cast"                            shift, and go to state 420
    "upcast"                          shift, and go to state 421
    "addr"                            shift, and go to state 422
    "reinterpret"                     shift, and go to state 423
    "unsafe"                          shift, and go to state 424
    "fixed_array"                     shift, and go to state 425
    "default"                         shift, and go to state 426
    "bool"                            shift, and go to state 225
    "void"                            shift, and go to state 226
    "string"                          shift, and go to state 227
    "int"                             shift, and go to state 229
    "int2"                            shift, and go to state 230
    "int3"                            shift, and go to state 231
    "int4"                            shift, and go to state 232
    "uint"                            shift, and go to state 233
    "bitfield"                        shift, and go to state 427
    "uint2"                           shift, and go to state 235
    "uint3"                           shift, and go to state 236
    "uint4"                           shift, and go to state 237
    "float"                           shift, and go to state 238
    "float2"                          shift, and go to state 239
    "float3"                          shift, and go to state 240
    "float4"                          shift, and go to state 241
    "range"                           shift, and go to state 242
    "urange"                          shift, and go to state 243
    "range64"                         shift, and go to state 244
    "urange64"                        shift, and go to state 245
    "int64"                           shift, and go to state 247
    "uint64"                          shift, and go to state 248
    "double"                          shift, and go to state 249
    "int8"                            shift, and go to state 252
    "uint8"                           shift, and go to state 253
    "int16"                           shift, and go to state 254
    "uint16"                          shift, and go to state 255
    "tuple"                           shift, and go to state 428
    "variant"                         shift, and go to state 429
    "generator"                       shift, and go to state 430
    "++"                              shift, and go to state 431
    "--"                              shift, and go to state 432
    "::"                              shift, and go to state 55
    "$$"                              shift, and go to state 433
    "$i"                              shift, and go to state 434
    "$v"                              shift, and go to state 435
    "$b"                              shift, and go to state 436
    "$a"                              shift, and go to state 437
    "$c"                              shift, and go to state 438
    "..."                             shift, and go to state 439
    "integer constant"                shift, and go to state 440
    "long integer constant"           shift, and go to state 441
    "unsigned integer constant"       shift, and go to state 442
    "unsigned long integer constant"  shift, and go to state 443
    "unsigned int8 constant"          shift, and go to state 444
    "floating point constant"         shift, and go to state 445
    "double constant"                 shift, and go to state 446
    "name"                            shift, and go to state 56
    "start of the string"             shift, and go to state 447
    "begin of code block"             shift, and go to state 448
    '-'                               shift, and go to state 449
    '+'                               shift, and go to state 450
    '*'                               shift, and go to state 451
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 452
    '!'                               shift, and go to state 453
    '['                               shift, and go to state 454
    '('                               shift, and go to state 455
    '$'                               shift, and go to state 456
    '@'                               shift, and go to state 457

    string_builder          go to state 458
    expr_reader             go to state 459
    expr_call_pipe          go to state 460
    name_in_namespace       go to state 461
    expr_new                go to state 462
    expr_cast               go to state 463
    expr_type_decl          go to state 464
    expr_type_info          go to state 465
    block_or_lambda         go to state 466
    expr_full_block         go to state 467
    expr_numeric_const      go to state 468
    expr_named_call         go to state 469
    expr_method_call        go to state 470
    func_addr_expr          go to state 471
    expr_field              go to state 472
    expr_call               go to state 473
    expr                    go to state 967
    expr_mtag               go to state 475
    basic_type_declaration  go to state 476
    make_decl               go to state 477
    make_struct_decl        go to state 478
    make_tuple_call         go to state 479
    make_dim_decl           go to state 480
    make_table_decl         go to state 481
    array_comprehension     go to state 482


State 770

  547 enum_expression: "name" '=' . expr

    "struct"                          shift, and go to state 409
    "class"                           shift, and go to state 410
    "true"                            shift, and go to state 411
    "false"                           shift, and go to state 412
    "new"                             shift, and go to state 413
    "typeinfo"                        shift, and go to state 414
    "type"                            shift, and go to state 415
    "array"                           shift, and go to state 416
    "null"                            shift, and go to state 417
    "table"                           shift, and go to state 418
    "deref"                           shift, and go to state 419
    "cast"                            shift, and go to state 420
    "upcast"                          shift, and go to state 421
    "addr"                            shift, and go to state 422
    "reinterpret"                     shift, and go to state 423
    "unsafe"                          shift, and go to state 424
    "fixed_array"                     shift, and go to state 425
    "default"                         shift, and go to state 426
    "bool"                            shift, and go to state 225
    "void"                            shift, and go to state 226
    "string"                          shift, and go to state 227
    "int"                             shift, and go to state 229
    "int2"                            shift, and go to state 230
    "int3"                            shift, and go to state 231
    "int4"                            shift, and go to state 232
    "uint"                            shift, and go to state 233
    "bitfield"                        shift, and go to state 427
    "uint2"                           shift, and go to state 235
    "uint3"                           shift, and go to state 236
    "uint4"                           shift, and go to state 237
    "float"                           shift, and go to state 238
    "float2"                          shift, and go to state 239
    "float3"                          shift, and go to state 240
    "float4"                          shift, and go to state 241
    "range"                           shift, and go to state 242
    "urange"                          shift, and go to state 243
    "range64"                         shift, and go to state 244
    "urange64"                        shift, and go to state 245
    "int64"                           shift, and go to state 247
    "uint64"                          shift, and go to state 248
    "double"                          shift, and go to state 249
    "int8"                            shift, and go to state 252
    "uint8"                           shift, and go to state 253
    "int16"                           shift, and go to state 254
    "uint16"                          shift, and go to state 255
    "tuple"                           shift, and go to state 428
    "variant"                         shift, and go to state 429
    "generator"                       shift, and go to state 430
    "++"                              shift, and go to state 431
    "--"                              shift, and go to state 432
    "::"                              shift, and go to state 55
    "$$"                              shift, and go to state 433
    "$i"                              shift, and go to state 434
    "$v"                              shift, and go to state 435
    "$b"                              shift, and go to state 436
    "$a"                              shift, and go to state 437
    "$c"                              shift, and go to state 438
    "..."                             shift, and go to state 439
    "integer constant"                shift, and go to state 440
    "long integer constant"           shift, and go to state 441
    "unsigned integer constant"       shift, and go to state 442
    "unsigned long integer constant"  shift, and go to state 443
    "unsigned int8 constant"          shift, and go to state 444
    "floating point constant"         shift, and go to state 445
    "double constant"                 shift, and go to state 446
    "name"                            shift, and go to state 56
    "start of the string"             shift, and go to state 447
    "begin of code block"             shift, and go to state 448
    '-'                               shift, and go to state 449
    '+'                               shift, and go to state 450
    '*'                               shift, and go to state 451
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 452
    '!'                               shift, and go to state 453
    '['                               shift, and go to state 454
    '('                               shift, and go to state 455
    '$'                               shift, and go to state 456
    '@'                               shift, and go to state 457

    string_builder          go to state 458
    expr_reader             go to state 459
    expr_call_pipe          go to state 460
    name_in_namespace       go to state 461
    expr_new                go to state 462
    expr_cast               go to state 463
    expr_type_decl          go to state 464
    expr_type_info          go to state 465
    block_or_lambda         go to state 466
    expr_full_block         go to state 467
    expr_numeric_const      go to state 468
    expr_named_call         go to state 469
    expr_method_call        go to state 470
    func_addr_expr          go to state 471
    expr_field              go to state 472
    expr_call               go to state 473
    expr                    go to state 968
    expr_mtag               go to state 475
    basic_type_declaration  go to state 476
    make_decl               go to state 477
    make_struct_decl        go to state 478
    make_tuple_call         go to state 479
    make_dim_decl           go to state 480
    make_table_decl         go to state 481
    array_comprehension     go to state 482


State 771

  550 enum_list: enum_list ',' . enum_expression
  789 optional_comma: ',' .

    "name"  shift, and go to state 571

    $default  reduce using rule 789 (optional_comma)

    enum_expression  go to state 969


State 772

  565 enum_declaration: optional_annotation_list "enum" optional_public_or_private_enum enum_name optional_enum_basic_type_declaration "begin of code block" $@31 enum_list optional_comma . $@32 "end of code block"

    $default  reduce using rule 564 ($@32)

    $@32  go to state 970


State 773

  577 optional_struct_variable_declaration_list: "begin of code block" struct_variable_declaration_list "end of code block" .

    $default  reduce using rule 577 (optional_struct_variable_declaration_list)


State 774

  486 struct_variable_declaration_list: struct_variable_declaration_list optional_annotation_list . "def" optional_public_or_private_member_variable "abstract" optional_constant $@26 function_declaration_header "end of expression"
  488                                 | struct_variable_declaration_list optional_annotation_list . "def" optional_public_or_private_member_variable optional_static_member_variable optional_override optional_constant $@27 function_declaration_header expression_block

    "def"  shift, and go to state 971


State 775

  484 struct_variable_declaration_list: struct_variable_declaration_list $@25 . structure_variable_declaration "end of expression"

    '@'  shift, and go to state 211

    $default  reduce using rule 469 (optional_field_annotation)

    metadata_argument_list          go to state 212
    optional_field_annotation       go to state 972
    structure_variable_declaration  go to state 973


State 776

  519 let_variable_name_with_pos_list: "$i" '(' . expr ')'

    "struct"                          shift, and go to state 409
    "class"                           shift, and go to state 410
    "true"                            shift, and go to state 411
    "false"                           shift, and go to state 412
    "new"                             shift, and go to state 413
    "typeinfo"                        shift, and go to state 414
    "type"                            shift, and go to state 415
    "array"                           shift, and go to state 416
    "null"                            shift, and go to state 417
    "table"                           shift, and go to state 418
    "deref"                           shift, and go to state 419
    "cast"                            shift, and go to state 420
    "upcast"                          shift, and go to state 421
    "addr"                            shift, and go to state 422
    "reinterpret"                     shift, and go to state 423
    "unsafe"                          shift, and go to state 424
    "fixed_array"                     shift, and go to state 425
    "default"                         shift, and go to state 426
    "bool"                            shift, and go to state 225
    "void"                            shift, and go to state 226
    "string"                          shift, and go to state 227
    "int"                             shift, and go to state 229
    "int2"                            shift, and go to state 230
    "int3"                            shift, and go to state 231
    "int4"                            shift, and go to state 232
    "uint"                            shift, and go to state 233
    "bitfield"                        shift, and go to state 427
    "uint2"                           shift, and go to state 235
    "uint3"                           shift, and go to state 236
    "uint4"                           shift, and go to state 237
    "float"                           shift, and go to state 238
    "float2"                          shift, and go to state 239
    "float3"                          shift, and go to state 240
    "float4"                          shift, and go to state 241
    "range"                           shift, and go to state 242
    "urange"                          shift, and go to state 243
    "range64"                         shift, and go to state 244
    "urange64"                        shift, and go to state 245
    "int64"                           shift, and go to state 247
    "uint64"                          shift, and go to state 248
    "double"                          shift, and go to state 249
    "int8"                            shift, and go to state 252
    "uint8"                           shift, and go to state 253
    "int16"                           shift, and go to state 254
    "uint16"                          shift, and go to state 255
    "tuple"                           shift, and go to state 428
    "variant"                         shift, and go to state 429
    "generator"                       shift, and go to state 430
    "++"                              shift, and go to state 431
    "--"                              shift, and go to state 432
    "::"                              shift, and go to state 55
    "$$"                              shift, and go to state 433
    "$i"                              shift, and go to state 434
    "$v"                              shift, and go to state 435
    "$b"                              shift, and go to state 436
    "$a"                              shift, and go to state 437
    "$c"                              shift, and go to state 438
    "..."                             shift, and go to state 439
    "integer constant"                shift, and go to state 440
    "long integer constant"           shift, and go to state 441
    "unsigned integer constant"       shift, and go to state 442
    "unsigned long integer constant"  shift, and go to state 443
    "unsigned int8 constant"          shift, and go to state 444
    "floating point constant"         shift, and go to state 445
    "double constant"                 shift, and go to state 446
    "name"                            shift, and go to state 56
    "start of the string"             shift, and go to state 447
    "begin of code block"             shift, and go to state 448
    '-'                               shift, and go to state 449
    '+'                               shift, and go to state 450
    '*'                               shift, and go to state 451
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 452
    '!'                               shift, and go to state 453
    '['                               shift, and go to state 454
    '('                               shift, and go to state 455
    '$'                               shift, and go to state 456
    '@'                               shift, and go to state 457

    string_builder          go to state 458
    expr_reader             go to state 459
    expr_call_pipe          go to state 460
    name_in_namespace       go to state 461
    expr_new                go to state 462
    expr_cast               go to state 463
    expr_type_decl          go to state 464
    expr_type_info          go to state 465
    block_or_lambda         go to state 466
    expr_full_block         go to state 467
    expr_numeric_const      go to state 468
    expr_named_call         go to state 469
    expr_method_call        go to state 470
    func_addr_expr          go to state 471
    expr_field              go to state 472
    expr_call               go to state 473
    expr                    go to state 974
    expr_mtag               go to state 475
    basic_type_declaration  go to state 476
    make_decl               go to state 477
    make_struct_decl        go to state 478
    make_tuple_call         go to state 479
    make_dim_decl           go to state 480
    make_table_decl         go to state 481
    array_comprehension     go to state 482


State 777

  520 let_variable_name_with_pos_list: "name" "aka" . "name"

    "name"  shift, and go to state 975


State 778

  521 let_variable_name_with_pos_list: let_variable_name_with_pos_list ',' . "name"
  522                                | let_variable_name_with_pos_list ',' . "name" "aka" "name"

    "name"  shift, and go to state 976


State 779

  528 let_variable_declaration: let_variable_name_with_pos_list ':' . type_declaration_no_options "end of expression"
  529                         | let_variable_name_with_pos_list ':' . type_declaration_no_options copy_or_move_or_clone expr "end of expression"

    "type"       shift, and go to state 219
    "array"      shift, and go to state 220
    "table"      shift, and go to state 221
    "typedecl"   shift, and go to state 222
    "iterator"   shift, and go to state 223
    "smart_ptr"  shift, and go to state 224
    "bool"       shift, and go to state 225
    "void"       shift, and go to state 226
    "string"     shift, and go to state 227
    "auto"       shift, and go to state 228
    "int"        shift, and go to state 229
    "int2"       shift, and go to state 230
    "int3"       shift, and go to state 231
    "int4"       shift, and go to state 232
    "uint"       shift, and go to state 233
    "bitfield"   shift, and go to state 234
    "uint2"      shift, and go to state 235
    "uint3"      shift, and go to state 236
    "uint4"      shift, and go to state 237
    "float"      shift, and go to state 238
    "float2"     shift, and go to state 239
    "float3"     shift, and go to state 240
    "float4"     shift, and go to state 241
    "range"      shift, and go to state 242
    "urange"     shift, and go to state 243
    "range64"    shift, and go to state 244
    "urange64"   shift, and go to state 245
    "block"      shift, and go to state 246
    "int64"      shift, and go to state 247
    "uint64"     shift, and go to state 248
    "double"     shift, and go to state 249
    "function"   shift, and go to state 250
    "lambda"     shift, and go to state 251
    "int8"       shift, and go to state 252
    "uint8"      shift, and go to state 253
    "int16"      shift, and go to state 254
    "uint16"     shift, and go to state 255
    "tuple"      shift, and go to state 256
    "variant"    shift, and go to state 257
    "::"         shift, and go to state 55
    "$t"         shift, and go to state 258
    "name"       shift, and go to state 56
    '$'          shift, and go to state 259

    name_in_namespace                   go to state 260
    basic_type_declaration              go to state 261
    structure_type_declaration          go to state 262
    auto_type_declaration               go to state 263
    bitfield_type_declaration           go to state 264
    type_declaration_no_options         go to state 977
    type_declaration_no_options_no_dim  go to state 266


State 780

  530 let_variable_declaration: let_variable_name_with_pos_list optional_ref . copy_or_move_or_clone expr "end of expression"

    "<-"  shift, and go to state 582
    ":="  shift, and go to state 583
    '='   shift, and go to state 584

    copy_or_move_or_clone  go to state 978


State 781

  531 global_let_variable_declaration: global_let_variable_name_with_pos_list ':' type_declaration_no_options "end of expression" .

    $default  reduce using rule 531 (global_let_variable_declaration)


State 782

  532 global_let_variable_declaration: global_let_variable_name_with_pos_list ':' type_declaration_no_options copy_or_move_or_clone . expr "end of expression"

    "struct"                          shift, and go to state 409
    "class"                           shift, and go to state 410
    "true"                            shift, and go to state 411
    "false"                           shift, and go to state 412
    "new"                             shift, and go to state 413
    "typeinfo"                        shift, and go to state 414
    "type"                            shift, and go to state 415
    "array"                           shift, and go to state 416
    "null"                            shift, and go to state 417
    "table"                           shift, and go to state 418
    "deref"                           shift, and go to state 419
    "cast"                            shift, and go to state 420
    "upcast"                          shift, and go to state 421
    "addr"                            shift, and go to state 422
    "reinterpret"                     shift, and go to state 423
    "unsafe"                          shift, and go to state 424
    "fixed_array"                     shift, and go to state 425
    "default"                         shift, and go to state 426
    "bool"                            shift, and go to state 225
    "void"                            shift, and go to state 226
    "string"                          shift, and go to state 227
    "int"                             shift, and go to state 229
    "int2"                            shift, and go to state 230
    "int3"                            shift, and go to state 231
    "int4"                            shift, and go to state 232
    "uint"                            shift, and go to state 233
    "bitfield"                        shift, and go to state 427
    "uint2"                           shift, and go to state 235
    "uint3"                           shift, and go to state 236
    "uint4"                           shift, and go to state 237
    "float"                           shift, and go to state 238
    "float2"                          shift, and go to state 239
    "float3"                          shift, and go to state 240
    "float4"                          shift, and go to state 241
    "range"                           shift, and go to state 242
    "urange"                          shift, and go to state 243
    "range64"                         shift, and go to state 244
    "urange64"                        shift, and go to state 245
    "int64"                           shift, and go to state 247
    "uint64"                          shift, and go to state 248
    "double"                          shift, and go to state 249
    "int8"                            shift, and go to state 252
    "uint8"                           shift, and go to state 253
    "int16"                           shift, and go to state 254
    "uint16"                          shift, and go to state 255
    "tuple"                           shift, and go to state 428
    "variant"                         shift, and go to state 429
    "generator"                       shift, and go to state 430
    "++"                              shift, and go to state 431
    "--"                              shift, and go to state 432
    "::"                              shift, and go to state 55
    "$$"                              shift, and go to state 433
    "$i"                              shift, and go to state 434
    "$v"                              shift, and go to state 435
    "$b"                              shift, and go to state 436
    "$a"                              shift, and go to state 437
    "$c"                              shift, and go to state 438
    "..."                             shift, and go to state 439
    "integer constant"                shift, and go to state 440
    "long integer constant"           shift, and go to state 441
    "unsigned integer constant"       shift, and go to state 442
    "unsigned long integer constant"  shift, and go to state 443
    "unsigned int8 constant"          shift, and go to state 444
    "floating point constant"         shift, and go to state 445
    "double constant"                 shift, and go to state 446
    "name"                            shift, and go to state 56
    "start of the string"             shift, and go to state 447
    "begin of code block"             shift, and go to state 448
    '-'                               shift, and go to state 449
    '+'                               shift, and go to state 450
    '*'                               shift, and go to state 451
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 452
    '!'                               shift, and go to state 453
    '['                               shift, and go to state 454
    '('                               shift, and go to state 455
    '$'                               shift, and go to state 456
    '@'                               shift, and go to state 457

    string_builder          go to state 458
    expr_reader             go to state 459
    expr_call_pipe          go to state 460
    name_in_namespace       go to state 461
    expr_new                go to state 462
    expr_cast               go to state 463
    expr_type_decl          go to state 464
    expr_type_info          go to state 465
    block_or_lambda         go to state 466
    expr_full_block         go to state 467
    expr_numeric_const      go to state 468
    expr_named_call         go to state 469
    expr_method_call        go to state 470
    func_addr_expr          go to state 471
    expr_field              go to state 472
    expr_call               go to state 473
    expr                    go to state 979
    expr_mtag               go to state 475
    basic_type_declaration  go to state 476
    make_decl               go to state 477
    make_struct_decl        go to state 478
    make_tuple_call         go to state 479
    make_dim_decl           go to state 480
    make_table_decl         go to state 481
    array_comprehension     go to state 482


State 783

  342 expr_method_call: expr . "->" "name" '(' ')'
  343                 | expr . "->" "name" '(' expr_list ')'
  353 expr_field: expr . '.' "name"
  354           | expr . '.' '.' "name"
  355           | expr . '.' "name" '(' ')'
  356           | expr . '.' "name" '(' expr_list ')'
  357           | expr . '.' basic_type_declaration '(' ')'
  358           | expr . '.' basic_type_declaration '(' expr_list ')'
  361           | expr . '.' $@17 error $@18
  383 expr: expr . "<<" expr
  384     | expr . ">>" expr
  385     | expr . "<<<" expr
  386     | expr . ">>>" expr
  387     | expr . '+' expr
  388     | expr . '-' expr
  389     | expr . '*' expr
  390     | expr . '/' expr
  391     | expr . '%' expr
  392     | expr . '<' expr
  393     | expr . '>' expr
  394     | expr . "==" expr
  395     | expr . "!=" expr
  396     | expr . "<=" expr
  397     | expr . ">=" expr
  398     | expr . '&' expr
  399     | expr . '|' expr
  400     | expr . '^' expr
  401     | expr . "&&" expr
  402     | expr . "||" expr
  403     | expr . "^^" expr
  404     | expr . ".." expr
  407     | expr . "++"
  408     | expr . "--"
  410     | expr . '[' expr ']'
  411     | expr . '.' '[' expr ']'
  412     | expr . "?[" expr ']'
  413     | expr . '.' "?[" expr ']'
  414     | expr . "?." "name"
  415     | expr . '.' "?." "name"
  424     | expr . "??" expr
  425     | expr . '?' expr ':' expr
  428     | expr . "is" "type" '<' $@19 type_declaration_no_options '>' $@20
  429     | expr . "is" basic_type_declaration
  430     | expr . "is" "name"
  431     | expr . "as" "name"
  434     | expr . "as" "type" '<' $@21 type_declaration '>' $@22
  435     | expr . "as" basic_type_declaration
  436     | expr . '?' "as" "name"
  439     | expr . '?' "as" "type" '<' $@23 type_declaration '>' $@24
  440     | expr . '?' "as" basic_type_declaration
  448     | expr . "<|" expr
  449     | expr . "|>" expr
  450     | expr . "|>" basic_type_declaration
  461 expr_mtag: expr . '.' "$f" '(' expr ')'
  462          | expr . "?." "$f" '(' expr ')'
  463          | expr . '.' '.' "$f" '(' expr ')'
  464          | expr . '.' "?." "$f" '(' expr ')'
  465          | expr . "as" "$f" '(' expr ')'
  466          | expr . '?' "as" "$f" '(' expr ')'
  467          | expr . "is" "$f" '(' expr ')'
  533 global_let_variable_declaration: global_let_variable_name_with_pos_list optional_ref copy_or_move_or_clone expr . "end of expression"

    "is"                 shift, and go to state 648
    "as"                 shift, and go to state 649
    "<<"                 shift, and go to state 650
    ">>"                 shift, and go to state 651
    "++"                 shift, and go to state 652
    "--"                 shift, and go to state 653
    "<="                 shift, and go to state 654
    ">="                 shift, and go to state 655
    "=="                 shift, and go to state 656
    "!="                 shift, and go to state 657
    "->"                 shift, and go to state 658
    "??"                 shift, and go to state 659
    "?."                 shift, and go to state 660
    "?["                 shift, and go to state 661
    "<|"                 shift, and go to state 662
    "|>"                 shift, and go to state 663
    "<<<"                shift, and go to state 664
    ">>>"                shift, and go to state 665
    "&&"                 shift, and go to state 666
    "||"                 shift, and go to state 667
    "^^"                 shift, and go to state 668
    ".."                 shift, and go to state 669
    "end of expression"  shift, and go to state 980
    '?'                  shift, and go to state 670
    '|'                  shift, and go to state 671
    '^'                  shift, and go to state 672
    '&'                  shift, and go to state 673
    '<'                  shift, and go to state 674
    '>'                  shift, and go to state 675
    '-'                  shift, and go to state 676
    '+'                  shift, and go to state 677
    '*'                  shift, and go to state 678
    '/'                  shift, and go to state 679
    '%'                  shift, and go to state 680
    '.'                  shift, and go to state 681
    '['                  shift, and go to state 682


State 784

  649 type_declaration_no_options_no_dim: "type" '<' $@37 type_declaration '>' . $@38

    $default  reduce using rule 648 ($@38)

    $@38  go to state 981


State 785

  672 type_declaration_no_options_no_dim: "array" '<' $@42 type_declaration '>' . $@43

    $default  reduce using rule 671 ($@43)

    $@43  go to state 982


State 786

  675 type_declaration_no_options_no_dim: "table" '<' $@44 table_type_pair '>' . $@45

    $default  reduce using rule 674 ($@45)

    $@45  go to state 983


State 787

  636 table_type_pair: type_declaration c_or_s . type_declaration

    "type"       shift, and go to state 219
    "array"      shift, and go to state 220
    "table"      shift, and go to state 221
    "typedecl"   shift, and go to state 222
    "iterator"   shift, and go to state 223
    "smart_ptr"  shift, and go to state 224
    "bool"       shift, and go to state 225
    "void"       shift, and go to state 226
    "string"     shift, and go to state 227
    "auto"       shift, and go to state 228
    "int"        shift, and go to state 229
    "int2"       shift, and go to state 230
    "int3"       shift, and go to state 231
    "int4"       shift, and go to state 232
    "uint"       shift, and go to state 233
    "bitfield"   shift, and go to state 234
    "uint2"      shift, and go to state 235
    "uint3"      shift, and go to state 236
    "uint4"      shift, and go to state 237
    "float"      shift, and go to state 238
    "float2"     shift, and go to state 239
    "float3"     shift, and go to state 240
    "float4"     shift, and go to state 241
    "range"      shift, and go to state 242
    "urange"     shift, and go to state 243
    "range64"    shift, and go to state 244
    "urange64"   shift, and go to state 245
    "block"      shift, and go to state 246
    "int64"      shift, and go to state 247
    "uint64"     shift, and go to state 248
    "double"     shift, and go to state 249
    "function"   shift, and go to state 250
    "lambda"     shift, and go to state 251
    "int8"       shift, and go to state 252
    "uint8"      shift, and go to state 253
    "int16"      shift, and go to state 254
    "uint16"     shift, and go to state 255
    "tuple"      shift, and go to state 256
    "variant"    shift, and go to state 257
    "::"         shift, and go to state 55
    "$t"         shift, and go to state 258
    "name"       shift, and go to state 56
    '$'          shift, and go to state 259

    name_in_namespace                   go to state 260
    basic_type_declaration              go to state 261
    structure_type_declaration          go to state 262
    auto_type_declaration               go to state 263
    bitfield_type_declaration           go to state 264
    type_declaration_no_options         go to state 265
    type_declaration_no_options_no_dim  go to state 266
    type_declaration                    go to state 984


State 788

  746 make_struct_decl: "struct" '<' $@73 . type_declaration_no_options '>' $@74 '(' use_initializer optional_make_struct_dim_decl ')'

    "type"       shift, and go to state 219
    "array"      shift, and go to state 220
    "table"      shift, and go to state 221
    "typedecl"   shift, and go to state 222
    "iterator"   shift, and go to state 223
    "smart_ptr"  shift, and go to state 224
    "bool"       shift, and go to state 225
    "void"       shift, and go to state 226
    "string"     shift, and go to state 227
    "auto"       shift, and go to state 228
    "int"        shift, and go to state 229
    "int2"       shift, and go to state 230
    "int3"       shift, and go to state 231
    "int4"       shift, and go to state 232
    "uint"       shift, and go to state 233
    "bitfield"   shift, and go to state 234
    "uint2"      shift, and go to state 235
    "uint3"      shift, and go to state 236
    "uint4"      shift, and go to state 237
    "float"      shift, and go to state 238
    "float2"     shift, and go to state 239
    "float3"     shift, and go to state 240
    "float4"     shift, and go to state 241
    "range"      shift, and go to state 242
    "urange"     shift, and go to state 243
    "range64"    shift, and go to state 244
    "urange64"   shift, and go to state 245
    "block"      shift, and go to state 246
    "int64"      shift, and go to state 247
    "uint64"     shift, and go to state 248
    "double"     shift, and go to state 249
    "function"   shift, and go to state 250
    "lambda"     shift, and go to state 251
    "int8"       shift, and go to state 252
    "uint8"      shift, and go to state 253
    "int16"      shift, and go to state 254
    "uint16"     shift, and go to state 255
    "tuple"      shift, and go to state 256
    "variant"    shift, and go to state 257
    "::"         shift, and go to state 55
    "$t"         shift, and go to state 258
    "name"       shift, and go to state 56
    '$'          shift, and go to state 259

    name_in_namespace                   go to state 260
    basic_type_declaration              go to state 261
    structure_type_declaration          go to state 262
    auto_type_declaration               go to state 263
    bitfield_type_declaration           go to state 264
    type_declaration_no_options         go to state 985
    type_declaration_no_options_no_dim  go to state 266


State 789

  749 make_struct_decl: "class" '<' $@75 . type_declaration_no_options '>' $@76 '(' use_initializer optional_make_struct_dim_decl ')'

    "type"       shift, and go to state 219
    "array"      shift, and go to state 220
    "table"      shift, and go to state 221
    "typedecl"   shift, and go to state 222
    "iterator"   shift, and go to state 223
    "smart_ptr"  shift, and go to state 224
    "bool"       shift, and go to state 225
    "void"       shift, and go to state 226
    "string"     shift, and go to state 227
    "auto"       shift, and go to state 228
    "int"        shift, and go to state 229
    "int2"       shift, and go to state 230
    "int3"       shift, and go to state 231
    "int4"       shift, and go to state 232
    "uint"       shift, and go to state 233
    "bitfield"   shift, and go to state 234
    "uint2"      shift, and go to state 235
    "uint3"      shift, and go to state 236
    "uint4"      shift, and go to state 237
    "float"      shift, and go to state 238
    "float2"     shift, and go to state 239
    "float3"     shift, and go to state 240
    "float4"     shift, and go to state 241
    "range"      shift, and go to state 242
    "urange"     shift, and go to state 243
    "range64"    shift, and go to state 244
    "urange64"   shift, and go to state 245
    "block"      shift, and go to state 246
    "int64"      shift, and go to state 247
    "uint64"     shift, and go to state 248
    "double"     shift, and go to state 249
    "function"   shift, and go to state 250
    "lambda"     shift, and go to state 251
    "int8"       shift, and go to state 252
    "uint8"      shift, and go to state 253
    "int16"      shift, and go to state 254
    "uint16"     shift, and go to state 255
    "tuple"      shift, and go to state 256
    "variant"    shift, and go to state 257
    "::"         shift, and go to state 55
    "$t"         shift, and go to state 258
    "name"       shift, and go to state 56
    '$'          shift, and go to state 259

    name_in_namespace                   go to state 260
    basic_type_declaration              go to state 261
    structure_type_declaration          go to state 262
    auto_type_declaration               go to state 263
    bitfield_type_declaration           go to state 264
    type_declaration_no_options         go to state 986
    type_declaration_no_options_no_dim  go to state 266


State 790

  249 new_type_declaration: '<' $@3 . type_declaration '>' $@4

    "type"       shift, and go to state 219
    "array"      shift, and go to state 220
    "table"      shift, and go to state 221
    "typedecl"   shift, and go to state 222
    "iterator"   shift, and go to state 223
    "smart_ptr"  shift, and go to state 224
    "bool"       shift, and go to state 225
    "void"       shift, and go to state 226
    "string"     shift, and go to state 227
    "auto"       shift, and go to state 228
    "int"        shift, and go to state 229
    "int2"       shift, and go to state 230
    "int3"       shift, and go to state 231
    "int4"       shift, and go to state 232
    "uint"       shift, and go to state 233
    "bitfield"   shift, and go to state 234
    "uint2"      shift, and go to state 235
    "uint3"      shift, and go to state 236
    "uint4"      shift, and go to state 237
    "float"      shift, and go to state 238
    "float2"     shift, and go to state 239
    "float3"     shift, and go to state 240
    "float4"     shift, and go to state 241
    "range"      shift, and go to state 242
    "urange"     shift, and go to state 243
    "range64"    shift, and go to state 244
    "urange64"   shift, and go to state 245
    "block"      shift, and go to state 246
    "int64"      shift, and go to state 247
    "uint64"     shift, and go to state 248
    "double"     shift, and go to state 249
    "function"   shift, and go to state 250
    "lambda"     shift, and go to state 251
    "int8"       shift, and go to state 252
    "uint8"      shift, and go to state 253
    "int16"      shift, and go to state 254
    "uint16"     shift, and go to state 255
    "tuple"      shift, and go to state 256
    "variant"    shift, and go to state 257
    "::"         shift, and go to state 55
    "$t"         shift, and go to state 258
    "name"       shift, and go to state 56
    '$'          shift, and go to state 259

    name_in_namespace                   go to state 260
    basic_type_declaration              go to state 261
    structure_type_declaration          go to state 262
    auto_type_declaration               go to state 263
    bitfield_type_declaration           go to state 264
    type_declaration_no_options         go to state 265
    type_declaration_no_options_no_dim  go to state 266
    type_declaration                    go to state 987


State 791

  252 expr_new: "new" new_type_declaration '(' . use_initializer ')'
  253         | "new" new_type_declaration '(' . expr_list ')'
  254         | "new" new_type_declaration '(' . make_struct_single ')'
  255         | "new" new_type_declaration '(' . "uninitialized" make_struct_single ')'

    "struct"                          shift, and go to state 409
    "class"                           shift, and go to state 410
    "true"                            shift, and go to state 411
    "false"                           shift, and go to state 412
    "new"                             shift, and go to state 413
    "typeinfo"                        shift, and go to state 414
    "type"                            shift, and go to state 415
    "array"                           shift, and go to state 416
    "null"                            shift, and go to state 417
    "table"                           shift, and go to state 418
    "deref"                           shift, and go to state 419
    "cast"                            shift, and go to state 420
    "upcast"                          shift, and go to state 421
    "addr"                            shift, and go to state 422
    "reinterpret"                     shift, and go to state 423
    "unsafe"                          shift, and go to state 424
    "fixed_array"                     shift, and go to state 425
    "default"                         shift, and go to state 426
    "uninitialized"                   shift, and go to state 988
    "bool"                            shift, and go to state 225
    "void"                            shift, and go to state 226
    "string"                          shift, and go to state 227
    "int"                             shift, and go to state 229
    "int2"                            shift, and go to state 230
    "int3"                            shift, and go to state 231
    "int4"                            shift, and go to state 232
    "uint"                            shift, and go to state 233
    "bitfield"                        shift, and go to state 427
    "uint2"                           shift, and go to state 235
    "uint3"                           shift, and go to state 236
    "uint4"                           shift, and go to state 237
    "float"                           shift, and go to state 238
    "float2"                          shift, and go to state 239
    "float3"                          shift, and go to state 240
    "float4"                          shift, and go to state 241
    "range"                           shift, and go to state 242
    "urange"                          shift, and go to state 243
    "range64"                         shift, and go to state 244
    "urange64"                        shift, and go to state 245
    "int64"                           shift, and go to state 247
    "uint64"                          shift, and go to state 248
    "double"                          shift, and go to state 249
    "int8"                            shift, and go to state 252
    "uint8"                           shift, and go to state 253
    "int16"                           shift, and go to state 254
    "uint16"                          shift, and go to state 255
    "tuple"                           shift, and go to state 428
    "variant"                         shift, and go to state 429
    "generator"                       shift, and go to state 430
    "++"                              shift, and go to state 431
    "--"                              shift, and go to state 432
    "::"                              shift, and go to state 55
    "$$"                              shift, and go to state 433
    "$i"                              shift, and go to state 434
    "$v"                              shift, and go to state 435
    "$b"                              shift, and go to state 436
    "$a"                              shift, and go to state 437
    "$c"                              shift, and go to state 438
    "$f"                              shift, and go to state 839
    "..."                             shift, and go to state 439
    "integer constant"                shift, and go to state 440
    "long integer constant"           shift, and go to state 441
    "unsigned integer constant"       shift, and go to state 442
    "unsigned long integer constant"  shift, and go to state 443
    "unsigned int8 constant"          shift, and go to state 444
    "floating point constant"         shift, and go to state 445
    "double constant"                 shift, and go to state 446
    "name"                            shift, and go to state 840
    "start of the string"             shift, and go to state 447
    "begin of code block"             shift, and go to state 448
    '-'                               shift, and go to state 449
    '+'                               shift, and go to state 450
    '*'                               shift, and go to state 451
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 452
    '!'                               shift, and go to state 453
    '['                               shift, and go to state 454
    '('                               shift, and go to state 455
    '$'                               shift, and go to state 456
    '@'                               shift, and go to state 457

    $default  reduce using rule 742 (use_initializer)

    string_builder          go to state 458
    expr_reader             go to state 459
    expr_call_pipe          go to state 460
    name_in_namespace       go to state 461
    expr_new                go to state 462
    expr_cast               go to state 463
    expr_type_decl          go to state 464
    expr_type_info          go to state 465
    expr_list               go to state 989
    block_or_lambda         go to state 466
    expr_full_block         go to state 467
    expr_numeric_const      go to state 468
    expr_named_call         go to state 469
    expr_method_call        go to state 470
    func_addr_expr          go to state 471
    expr_field              go to state 472
    expr_call               go to state 473
    expr                    go to state 639
    expr_mtag               go to state 475
    basic_type_declaration  go to state 476
    make_decl               go to state 477
    make_struct_fields      go to state 844
    make_struct_single      go to state 990
    use_initializer         go to state 991
    make_struct_decl        go to state 478
    make_tuple_call         go to state 479
    make_dim_decl           go to state 480
    make_table_decl         go to state 481
    array_comprehension     go to state 482


State 792

  292 expr_type_info: "typeinfo" name_in_namespace '<' . "name" '>' '(' expr ')'
  293               | "typeinfo" name_in_namespace '<' . "name" c_or_s "name" '>' '(' expr ')'

    "name"  shift, and go to state 992


State 793

  291 expr_type_info: "typeinfo" name_in_namespace '(' . expr ')'

    "struct"                          shift, and go to state 409
    "class"                           shift, and go to state 410
    "true"                            shift, and go to state 411
    "false"                           shift, and go to state 412
    "new"                             shift, and go to state 413
    "typeinfo"                        shift, and go to state 414
    "type"                            shift, and go to state 415
    "array"                           shift, and go to state 416
    "null"                            shift, and go to state 417
    "table"                           shift, and go to state 418
    "deref"                           shift, and go to state 419
    "cast"                            shift, and go to state 420
    "upcast"                          shift, and go to state 421
    "addr"                            shift, and go to state 422
    "reinterpret"                     shift, and go to state 423
    "unsafe"                          shift, and go to state 424
    "fixed_array"                     shift, and go to state 425
    "default"                         shift, and go to state 426
    "bool"                            shift, and go to state 225
    "void"                            shift, and go to state 226
    "string"                          shift, and go to state 227
    "int"                             shift, and go to state 229
    "int2"                            shift, and go to state 230
    "int3"                            shift, and go to state 231
    "int4"                            shift, and go to state 232
    "uint"                            shift, and go to state 233
    "bitfield"                        shift, and go to state 427
    "uint2"                           shift, and go to state 235
    "uint3"                           shift, and go to state 236
    "uint4"                           shift, and go to state 237
    "float"                           shift, and go to state 238
    "float2"                          shift, and go to state 239
    "float3"                          shift, and go to state 240
    "float4"                          shift, and go to state 241
    "range"                           shift, and go to state 242
    "urange"                          shift, and go to state 243
    "range64"                         shift, and go to state 244
    "urange64"                        shift, and go to state 245
    "int64"                           shift, and go to state 247
    "uint64"                          shift, and go to state 248
    "double"                          shift, and go to state 249
    "int8"                            shift, and go to state 252
    "uint8"                           shift, and go to state 253
    "int16"                           shift, and go to state 254
    "uint16"                          shift, and go to state 255
    "tuple"                           shift, and go to state 428
    "variant"                         shift, and go to state 429
    "generator"                       shift, and go to state 430
    "++"                              shift, and go to state 431
    "--"                              shift, and go to state 432
    "::"                              shift, and go to state 55
    "$$"                              shift, and go to state 433
    "$i"                              shift, and go to state 434
    "$v"                              shift, and go to state 435
    "$b"                              shift, and go to state 436
    "$a"                              shift, and go to state 437
    "$c"                              shift, and go to state 438
    "..."                             shift, and go to state 439
    "integer constant"                shift, and go to state 440
    "long integer constant"           shift, and go to state 441
    "unsigned integer constant"       shift, and go to state 442
    "unsigned long integer constant"  shift, and go to state 443
    "unsigned int8 constant"          shift, and go to state 444
    "floating point constant"         shift, and go to state 445
    "double constant"                 shift, and go to state 446
    "name"                            shift, and go to state 56
    "start of the string"             shift, and go to state 447
    "begin of code block"             shift, and go to state 448
    '-'                               shift, and go to state 449
    '+'                               shift, and go to state 450
    '*'                               shift, and go to state 451
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 452
    '!'                               shift, and go to state 453
    '['                               shift, and go to state 454
    '('                               shift, and go to state 455
    '$'                               shift, and go to state 456
    '@'                               shift, and go to state 457

    string_builder          go to state 458
    expr_reader             go to state 459
    expr_call_pipe          go to state 460
    name_in_namespace       go to state 461
    expr_new                go to state 462
    expr_cast               go to state 463
    expr_type_decl          go to state 464
    expr_type_info          go to state 465
    block_or_lambda         go to state 466
    expr_full_block         go to state 467
    expr_numeric_const      go to state 468
    expr_named_call         go to state 469
    expr_method_call        go to state 470
    func_addr_expr          go to state 471
    expr_field              go to state 472
    expr_call               go to state 473
    expr                    go to state 993
    expr_mtag               go to state 475
    basic_type_declaration  go to state 476
    make_decl               go to state 477
    make_struct_decl        go to state 478
    make_tuple_call         go to state 479
    make_dim_decl           go to state 480
    make_table_decl         go to state 481
    array_comprehension     go to state 482


State 794

  290 expr_type_decl: "type" '<' $@11 . type_declaration '>' $@12

    "type"       shift, and go to state 219
    "array"      shift, and go to state 220
    "table"      shift, and go to state 221
    "typedecl"   shift, and go to state 222
    "iterator"   shift, and go to state 223
    "smart_ptr"  shift, and go to state 224
    "bool"       shift, and go to state 225
    "void"       shift, and go to state 226
    "string"     shift, and go to state 227
    "auto"       shift, and go to state 228
    "int"        shift, and go to state 229
    "int2"       shift, and go to state 230
    "int3"       shift, and go to state 231
    "int4"       shift, and go to state 232
    "uint"       shift, and go to state 233
    "bitfield"   shift, and go to state 234
    "uint2"      shift, and go to state 235
    "uint3"      shift, and go to state 236
    "uint4"      shift, and go to state 237
    "float"      shift, and go to state 238
    "float2"     shift, and go to state 239
    "float3"     shift, and go to state 240
    "float4"     shift, and go to state 241
    "range"      shift, and go to state 242
    "urange"     shift, and go to state 243
    "range64"    shift, and go to state 244
    "urange64"   shift, and go to state 245
    "block"      shift, and go to state 246
    "int64"      shift, and go to state 247
    "uint64"     shift, and go to state 248
    "double"     shift, and go to state 249
    "function"   shift, and go to state 250
    "lambda"     shift, and go to state 251
    "int8"       shift, and go to state 252
    "uint8"      shift, and go to state 253
    "int16"      shift, and go to state 254
    "uint16"     shift, and go to state 255
    "tuple"      shift, and go to state 256
    "variant"    shift, and go to state 257
    "::"         shift, and go to state 55
    "$t"         shift, and go to state 258
    "name"       shift, and go to state 56
    '$'          shift, and go to state 259

    name_in_namespace                   go to state 260
    basic_type_declaration              go to state 261
    structure_type_declaration          go to state 262
    auto_type_declaration               go to state 263
    bitfield_type_declaration           go to state 264
    type_declaration_no_options         go to state 265
    type_declaration_no_options_no_dim  go to state 266
    type_declaration                    go to state 994


State 795

  765 make_dim_decl: "array" "struct" '<' . $@83 type_declaration_no_options '>' $@84 '(' use_initializer optional_make_struct_dim_decl ')'

    $default  reduce using rule 763 ($@83)

    $@83  go to state 995


State 796

  768 make_dim_decl: "array" "tuple" '<' . $@85 type_declaration_no_options '>' $@86 '(' use_initializer optional_make_struct_dim_decl ')'

    $default  reduce using rule 766 ($@85)

    $@85  go to state 996


State 797

  771 make_dim_decl: "array" "variant" '<' . $@87 type_declaration_no_options '>' $@88 '(' make_variant_dim ')'

    $default  reduce using rule 769 ($@87)

    $@87  go to state 997


State 798

  775 make_dim_decl: "array" '<' $@89 . type_declaration_no_options '>' $@90 '(' optional_expr_list ')'

    "type"       shift, and go to state 219
    "array"      shift, and go to state 220
    "table"      shift, and go to state 221
    "typedecl"   shift, and go to state 222
    "iterator"   shift, and go to state 223
    "smart_ptr"  shift, and go to state 224
    "bool"       shift, and go to state 225
    "void"       shift, and go to state 226
    "string"     shift, and go to state 227
    "auto"       shift, and go to state 228
    "int"        shift, and go to state 229
    "int2"       shift, and go to state 230
    "int3"       shift, and go to state 231
    "int4"       shift, and go to state 232
    "uint"       shift, and go to state 233
    "bitfield"   shift, and go to state 234
    "uint2"      shift, and go to state 235
    "uint3"      shift, and go to state 236
    "uint4"      shift, and go to state 237
    "float"      shift, and go to state 238
    "float2"     shift, and go to state 239
    "float3"     shift, and go to state 240
    "float4"     shift, and go to state 241
    "range"      shift, and go to state 242
    "urange"     shift, and go to state 243
    "range64"    shift, and go to state 244
    "urange64"   shift, and go to state 245
    "block"      shift, and go to state 246
    "int64"      shift, and go to state 247
    "uint64"     shift, and go to state 248
    "double"     shift, and go to state 249
    "function"   shift, and go to state 250
    "lambda"     shift, and go to state 251
    "int8"       shift, and go to state 252
    "uint8"      shift, and go to state 253
    "int16"      shift, and go to state 254
    "uint16"     shift, and go to state 255
    "tuple"      shift, and go to state 256
    "variant"    shift, and go to state 257
    "::"         shift, and go to state 55
    "$t"         shift, and go to state 258
    "name"       shift, and go to state 56
    '$'          shift, and go to state 259

    name_in_namespace                   go to state 260
    basic_type_declaration              go to state 261
    structure_type_declaration          go to state 262
    auto_type_declaration               go to state 263
    bitfield_type_declaration           go to state 264
    type_declaration_no_options         go to state 998
    type_declaration_no_options_no_dim  go to state 266


State 799

  295 expr_list: expr_list . ',' expr
  772 make_dim_decl: "array" '(' expr_list . optional_comma ')'

    ','  shift, and go to state 830

    $default  reduce using rule 788 (optional_comma)

    optional_comma  go to state 999


State 800

  784 make_table_decl: "table" '<' type_declaration_no_options . '>' '(' optional_expr_map_tuple_list ')'
  785                | "table" '<' type_declaration_no_options . c_or_s type_declaration_no_options '>' '(' optional_expr_map_tuple_list ')'

    "end of expression"  shift, and go to state 512
    ','                  shift, and go to state 513
    '>'                  shift, and go to state 1000

    c_or_s  go to state 1001


State 801

  781 expr_map_tuple_list: expr_map_tuple_list . ',' make_map_tuple
  783 make_table_decl: "table" '(' expr_map_tuple_list . optional_comma ')'

    ','  shift, and go to state 826

    $default  reduce using rule 788 (optional_comma)

    optional_comma  go to state 1002


State 802

  342 expr_method_call: expr . "->" "name" '(' ')'
  343                 | expr . "->" "name" '(' expr_list ')'
  353 expr_field: expr . '.' "name"
  354           | expr . '.' '.' "name"
  355           | expr . '.' "name" '(' ')'
  356           | expr . '.' "name" '(' expr_list ')'
  357           | expr . '.' basic_type_declaration '(' ')'
  358           | expr . '.' basic_type_declaration '(' expr_list ')'
  361           | expr . '.' $@17 error $@18
  383 expr: expr . "<<" expr
  384     | expr . ">>" expr
  385     | expr . "<<<" expr
  386     | expr . ">>>" expr
  387     | expr . '+' expr
  388     | expr . '-' expr
  389     | expr . '*' expr
  390     | expr . '/' expr
  391     | expr . '%' expr
  392     | expr . '<' expr
  393     | expr . '>' expr
  394     | expr . "==" expr
  395     | expr . "!=" expr
  396     | expr . "<=" expr
  397     | expr . ">=" expr
  398     | expr . '&' expr
  399     | expr . '|' expr
  400     | expr . '^' expr
  401     | expr . "&&" expr
  402     | expr . "||" expr
  403     | expr . "^^" expr
  404     | expr . ".." expr
  407     | expr . "++"
  408     | expr . "--"
  410     | expr . '[' expr ']'
  411     | expr . '.' '[' expr ']'
  412     | expr . "?[" expr ']'
  413     | expr . '.' "?[" expr ']'
  414     | expr . "?." "name"
  415     | expr . '.' "?." "name"
  419     | "deref" '(' expr . ')'
  424     | expr . "??" expr
  425     | expr . '?' expr ':' expr
  428     | expr . "is" "type" '<' $@19 type_declaration_no_options '>' $@20
  429     | expr . "is" basic_type_declaration
  430     | expr . "is" "name"
  431     | expr . "as" "name"
  434     | expr . "as" "type" '<' $@21 type_declaration '>' $@22
  435     | expr . "as" basic_type_declaration
  436     | expr . '?' "as" "name"
  439     | expr . '?' "as" "type" '<' $@23 type_declaration '>' $@24
  440     | expr . '?' "as" basic_type_declaration
  448     | expr . "<|" expr
  449     | expr . "|>" expr
  450     | expr . "|>" basic_type_declaration
  461 expr_mtag: expr . '.' "$f" '(' expr ')'
  462          | expr . "?." "$f" '(' expr ')'
  463          | expr . '.' '.' "$f" '(' expr ')'
  464          | expr . '.' "?." "$f" '(' expr ')'
  465          | expr . "as" "$f" '(' expr ')'
  466          | expr . '?' "as" "$f" '(' expr ')'
  467          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 648
    "as"   shift, and go to state 649
    "<<"   shift, and go to state 650
    ">>"   shift, and go to state 651
    "++"   shift, and go to state 652
    "--"   shift, and go to state 653
    "<="   shift, and go to state 654
    ">="   shift, and go to state 655
    "=="   shift, and go to state 656
    "!="   shift, and go to state 657
    "->"   shift, and go to state 658
    "??"   shift, and go to state 659
    "?."   shift, and go to state 660
    "?["   shift, and go to state 661
    "<|"   shift, and go to state 662
    "|>"   shift, and go to state 663
    "<<<"  shift, and go to state 664
    ">>>"  shift, and go to state 665
    "&&"   shift, and go to state 666
    "||"   shift, and go to state 667
    "^^"   shift, and go to state 668
    ".."   shift, and go to state 669
    '?'    shift, and go to state 670
    '|'    shift, and go to state 671
    '^'    shift, and go to state 672
    '&'    shift, and go to state 673
    '<'    shift, and go to state 674
    '>'    shift, and go to state 675
    '-'    shift, and go to state 676
    '+'    shift, and go to state 677
    '*'    shift, and go to state 678
    '/'    shift, and go to state 679
    '%'    shift, and go to state 680
    '.'    shift, and go to state 681
    '['    shift, and go to state 682
    ')'    shift, and go to state 1003


State 803

  281 expr_cast: "cast" '<' $@5 . type_declaration_no_options '>' $@6 expr

    "type"       shift, and go to state 219
    "array"      shift, and go to state 220
    "table"      shift, and go to state 221
    "typedecl"   shift, and go to state 222
    "iterator"   shift, and go to state 223
    "smart_ptr"  shift, and go to state 224
    "bool"       shift, and go to state 225
    "void"       shift, and go to state 226
    "string"     shift, and go to state 227
    "auto"       shift, and go to state 228
    "int"        shift, and go to state 229
    "int2"       shift, and go to state 230
    "int3"       shift, and go to state 231
    "int4"       shift, and go to state 232
    "uint"       shift, and go to state 233
    "bitfield"   shift, and go to state 234
    "uint2"      shift, and go to state 235
    "uint3"      shift, and go to state 236
    "uint4"      shift, and go to state 237
    "float"      shift, and go to state 238
    "float2"     shift, and go to state 239
    "float3"     shift, and go to state 240
    "float4"     shift, and go to state 241
    "range"      shift, and go to state 242
    "urange"     shift, and go to state 243
    "range64"    shift, and go to state 244
    "urange64"   shift, and go to state 245
    "block"      shift, and go to state 246
    "int64"      shift, and go to state 247
    "uint64"     shift, and go to state 248
    "double"     shift, and go to state 249
    "function"   shift, and go to state 250
    "lambda"     shift, and go to state 251
    "int8"       shift, and go to state 252
    "uint8"      shift, and go to state 253
    "int16"      shift, and go to state 254
    "uint16"     shift, and go to state 255
    "tuple"      shift, and go to state 256
    "variant"    shift, and go to state 257
    "::"         shift, and go to state 55
    "$t"         shift, and go to state 258
    "name"       shift, and go to state 56
    '$'          shift, and go to state 259

    name_in_namespace                   go to state 260
    basic_type_declaration              go to state 261
    structure_type_declaration          go to state 262
    auto_type_declaration               go to state 263
    bitfield_type_declaration           go to state 264
    type_declaration_no_options         go to state 1004
    type_declaration_no_options_no_dim  go to state 266


State 804

  284 expr_cast: "upcast" '<' $@7 . type_declaration_no_options '>' $@8 expr

    "type"       shift, and go to state 219
    "array"      shift, and go to state 220
    "table"      shift, and go to state 221
    "typedecl"   shift, and go to state 222
    "iterator"   shift, and go to state 223
    "smart_ptr"  shift, and go to state 224
    "bool"       shift, and go to state 225
    "void"       shift, and go to state 226
    "string"     shift, and go to state 227
    "auto"       shift, and go to state 228
    "int"        shift, and go to state 229
    "int2"       shift, and go to state 230
    "int3"       shift, and go to state 231
    "int4"       shift, and go to state 232
    "uint"       shift, and go to state 233
    "bitfield"   shift, and go to state 234
    "uint2"      shift, and go to state 235
    "uint3"      shift, and go to state 236
    "uint4"      shift, and go to state 237
    "float"      shift, and go to state 238
    "float2"     shift, and go to state 239
    "float3"     shift, and go to state 240
    "float4"     shift, and go to state 241
    "range"      shift, and go to state 242
    "urange"     shift, and go to state 243
    "range64"    shift, and go to state 244
    "urange64"   shift, and go to state 245
    "block"      shift, and go to state 246
    "int64"      shift, and go to state 247
    "uint64"     shift, and go to state 248
    "double"     shift, and go to state 249
    "function"   shift, and go to state 250
    "lambda"     shift, and go to state 251
    "int8"       shift, and go to state 252
    "uint8"      shift, and go to state 253
    "int16"      shift, and go to state 254
    "uint16"     shift, and go to state 255
    "tuple"      shift, and go to state 256
    "variant"    shift, and go to state 257
    "::"         shift, and go to state 55
    "$t"         shift, and go to state 258
    "name"       shift, and go to state 56
    '$'          shift, and go to state 259

    name_in_namespace                   go to state 260
    basic_type_declaration              go to state 261
    structure_type_declaration          go to state 262
    auto_type_declaration               go to state 263
    bitfield_type_declaration           go to state 264
    type_declaration_no_options         go to state 1005
    type_declaration_no_options_no_dim  go to state 266


State 805

  342 expr_method_call: expr . "->" "name" '(' ')'
  343                 | expr . "->" "name" '(' expr_list ')'
  353 expr_field: expr . '.' "name"
  354           | expr . '.' '.' "name"
  355           | expr . '.' "name" '(' ')'
  356           | expr . '.' "name" '(' expr_list ')'
  357           | expr . '.' basic_type_declaration '(' ')'
  358           | expr . '.' basic_type_declaration '(' expr_list ')'
  361           | expr . '.' $@17 error $@18
  383 expr: expr . "<<" expr
  384     | expr . ">>" expr
  385     | expr . "<<<" expr
  386     | expr . ">>>" expr
  387     | expr . '+' expr
  388     | expr . '-' expr
  389     | expr . '*' expr
  390     | expr . '/' expr
  391     | expr . '%' expr
  392     | expr . '<' expr
  393     | expr . '>' expr
  394     | expr . "==" expr
  395     | expr . "!=" expr
  396     | expr . "<=" expr
  397     | expr . ">=" expr
  398     | expr . '&' expr
  399     | expr . '|' expr
  400     | expr . '^' expr
  401     | expr . "&&" expr
  402     | expr . "||" expr
  403     | expr . "^^" expr
  404     | expr . ".." expr
  407     | expr . "++"
  408     | expr . "--"
  410     | expr . '[' expr ']'
  411     | expr . '.' '[' expr ']'
  412     | expr . "?[" expr ']'
  413     | expr . '.' "?[" expr ']'
  414     | expr . "?." "name"
  415     | expr . '.' "?." "name"
  420     | "addr" '(' expr . ')'
  424     | expr . "??" expr
  425     | expr . '?' expr ':' expr
  428     | expr . "is" "type" '<' $@19 type_declaration_no_options '>' $@20
  429     | expr . "is" basic_type_declaration
  430     | expr . "is" "name"
  431     | expr . "as" "name"
  434     | expr . "as" "type" '<' $@21 type_declaration '>' $@22
  435     | expr . "as" basic_type_declaration
  436     | expr . '?' "as" "name"
  439     | expr . '?' "as" "type" '<' $@23 type_declaration '>' $@24
  440     | expr . '?' "as" basic_type_declaration
  448     | expr . "<|" expr
  449     | expr . "|>" expr
  450     | expr . "|>" basic_type_declaration
  461 expr_mtag: expr . '.' "$f" '(' expr ')'
  462          | expr . "?." "$f" '(' expr ')'
  463          | expr . '.' '.' "$f" '(' expr ')'
  464          | expr . '.' "?." "$f" '(' expr ')'
  465          | expr . "as" "$f" '(' expr ')'
  466          | expr . '?' "as" "$f" '(' expr ')'
  467          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 648
    "as"   shift, and go to state 649
    "<<"   shift, and go to state 650
    ">>"   shift, and go to state 651
    "++"   shift, and go to state 652
    "--"   shift, and go to state 653
    "<="   shift, and go to state 654
    ">="   shift, and go to state 655
    "=="   shift, and go to state 656
    "!="   shift, and go to state 657
    "->"   shift, and go to state 658
    "??"   shift, and go to state 659
    "?."   shift, and go to state 660
    "?["   shift, and go to state 661
    "<|"   shift, and go to state 662
    "|>"   shift, and go to state 663
    "<<<"  shift, and go to state 664
    ">>>"  shift, and go to state 665
    "&&"   shift, and go to state 666
    "||"   shift, and go to state 667
    "^^"   shift, and go to state 668
    ".."   shift, and go to state 669
    '?'    shift, and go to state 670
    '|'    shift, and go to state 671
    '^'    shift, and go to state 672
    '&'    shift, and go to state 673
    '<'    shift, and go to state 674
    '>'    shift, and go to state 675
    '-'    shift, and go to state 676
    '+'    shift, and go to state 677
    '*'    shift, and go to state 678
    '/'    shift, and go to state 679
    '%'    shift, and go to state 680
    '.'    shift, and go to state 681
    '['    shift, and go to state 682
    ')'    shift, and go to state 1006


State 806

  287 expr_cast: "reinterpret" '<' $@9 . type_declaration_no_options '>' $@10 expr

    "type"       shift, and go to state 219
    "array"      shift, and go to state 220
    "table"      shift, and go to state 221
    "typedecl"   shift, and go to state 222
    "iterator"   shift, and go to state 223
    "smart_ptr"  shift, and go to state 224
    "bool"       shift, and go to state 225
    "void"       shift, and go to state 226
    "string"     shift, and go to state 227
    "auto"       shift, and go to state 228
    "int"        shift, and go to state 229
    "int2"       shift, and go to state 230
    "int3"       shift, and go to state 231
    "int4"       shift, and go to state 232
    "uint"       shift, and go to state 233
    "bitfield"   shift, and go to state 234
    "uint2"      shift, and go to state 235
    "uint3"      shift, and go to state 236
    "uint4"      shift, and go to state 237
    "float"      shift, and go to state 238
    "float2"     shift, and go to state 239
    "float3"     shift, and go to state 240
    "float4"     shift, and go to state 241
    "range"      shift, and go to state 242
    "urange"     shift, and go to state 243
    "range64"    shift, and go to state 244
    "urange64"   shift, and go to state 245
    "block"      shift, and go to state 246
    "int64"      shift, and go to state 247
    "uint64"     shift, and go to state 248
    "double"     shift, and go to state 249
    "function"   shift, and go to state 250
    "lambda"     shift, and go to state 251
    "int8"       shift, and go to state 252
    "uint8"      shift, and go to state 253
    "int16"      shift, and go to state 254
    "uint16"     shift, and go to state 255
    "tuple"      shift, and go to state 256
    "variant"    shift, and go to state 257
    "::"         shift, and go to state 55
    "$t"         shift, and go to state 258
    "name"       shift, and go to state 56
    '$'          shift, and go to state 259

    name_in_namespace                   go to state 260
    basic_type_declaration              go to state 261
    structure_type_declaration          go to state 262
    auto_type_declaration               go to state 263
    bitfield_type_declaration           go to state 264
    type_declaration_no_options         go to state 1007
    type_declaration_no_options_no_dim  go to state 266


State 807

  342 expr_method_call: expr . "->" "name" '(' ')'
  343                 | expr . "->" "name" '(' expr_list ')'
  353 expr_field: expr . '.' "name"
  354           | expr . '.' '.' "name"
  355           | expr . '.' "name" '(' ')'
  356           | expr . '.' "name" '(' expr_list ')'
  357           | expr . '.' basic_type_declaration '(' ')'
  358           | expr . '.' basic_type_declaration '(' expr_list ')'
  361           | expr . '.' $@17 error $@18
  383 expr: expr . "<<" expr
  384     | expr . ">>" expr
  385     | expr . "<<<" expr
  386     | expr . ">>>" expr
  387     | expr . '+' expr
  388     | expr . '-' expr
  389     | expr . '*' expr
  390     | expr . '/' expr
  391     | expr . '%' expr
  392     | expr . '<' expr
  393     | expr . '>' expr
  394     | expr . "==" expr
  395     | expr . "!=" expr
  396     | expr . "<=" expr
  397     | expr . ">=" expr
  398     | expr . '&' expr
  399     | expr . '|' expr
  400     | expr . '^' expr
  401     | expr . "&&" expr
  402     | expr . "||" expr
  403     | expr . "^^" expr
  404     | expr . ".." expr
  407     | expr . "++"
  408     | expr . "--"
  410     | expr . '[' expr ']'
  411     | expr . '.' '[' expr ']'
  412     | expr . "?[" expr ']'
  413     | expr . '.' "?[" expr ']'
  414     | expr . "?." "name"
  415     | expr . '.' "?." "name"
  424     | expr . "??" expr
  425     | expr . '?' expr ':' expr
  428     | expr . "is" "type" '<' $@19 type_declaration_no_options '>' $@20
  429     | expr . "is" basic_type_declaration
  430     | expr . "is" "name"
  431     | expr . "as" "name"
  434     | expr . "as" "type" '<' $@21 type_declaration '>' $@22
  435     | expr . "as" basic_type_declaration
  436     | expr . '?' "as" "name"
  439     | expr . '?' "as" "type" '<' $@23 type_declaration '>' $@24
  440     | expr . '?' "as" basic_type_declaration
  448     | expr . "<|" expr
  449     | expr . "|>" expr
  450     | expr . "|>" basic_type_declaration
  452     | "unsafe" '(' expr . ')'
  461 expr_mtag: expr . '.' "$f" '(' expr ')'
  462          | expr . "?." "$f" '(' expr ')'
  463          | expr . '.' '.' "$f" '(' expr ')'
  464          | expr . '.' "?." "$f" '(' expr ')'
  465          | expr . "as" "$f" '(' expr ')'
  466          | expr . '?' "as" "$f" '(' expr ')'
  467          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 648
    "as"   shift, and go to state 649
    "<<"   shift, and go to state 650
    ">>"   shift, and go to state 651
    "++"   shift, and go to state 652
    "--"   shift, and go to state 653
    "<="   shift, and go to state 654
    ">="   shift, and go to state 655
    "=="   shift, and go to state 656
    "!="   shift, and go to state 657
    "->"   shift, and go to state 658
    "??"   shift, and go to state 659
    "?."   shift, and go to state 660
    "?["   shift, and go to state 661
    "<|"   shift, and go to state 662
    "|>"   shift, and go to state 663
    "<<<"  shift, and go to state 664
    ">>>"  shift, and go to state 665
    "&&"   shift, and go to state 666
    "||"   shift, and go to state 667
    "^^"   shift, and go to state 668
    ".."   shift, and go to state 669
    '?'    shift, and go to state 670
    '|'    shift, and go to state 671
    '^'    shift, and go to state 672
    '&'    shift, and go to state 673
    '<'    shift, and go to state 674
    '>'    shift, and go to state 675
    '-'    shift, and go to state 676
    '+'    shift, and go to state 677
    '*'    shift, and go to state 678
    '/'    shift, and go to state 679
    '%'    shift, and go to state 680
    '.'    shift, and go to state 681
    '['    shift, and go to state 682
    ')'    shift, and go to state 1008


State 808

  779 make_dim_decl: "fixed_array" '<' $@91 . type_declaration_no_options '>' $@92 '(' expr_list optional_comma ')'

    "type"       shift, and go to state 219
    "array"      shift, and go to state 220
    "table"      shift, and go to state 221
    "typedecl"   shift, and go to state 222
    "iterator"   shift, and go to state 223
    "smart_ptr"  shift, and go to state 224
    "bool"       shift, and go to state 225
    "void"       shift, and go to state 226
    "string"     shift, and go to state 227
    "auto"       shift, and go to state 228
    "int"        shift, and go to state 229
    "int2"       shift, and go to state 230
    "int3"       shift, and go to state 231
    "int4"       shift, and go to state 232
    "uint"       shift, and go to state 233
    "bitfield"   shift, and go to state 234
    "uint2"      shift, and go to state 235
    "uint3"      shift, and go to state 236
    "uint4"      shift, and go to state 237
    "float"      shift, and go to state 238
    "float2"     shift, and go to state 239
    "float3"     shift, and go to state 240
    "float4"     shift, and go to state 241
    "range"      shift, and go to state 242
    "urange"     shift, and go to state 243
    "range64"    shift, and go to state 244
    "urange64"   shift, and go to state 245
    "block"      shift, and go to state 246
    "int64"      shift, and go to state 247
    "uint64"     shift, and go to state 248
    "double"     shift, and go to state 249
    "function"   shift, and go to state 250
    "lambda"     shift, and go to state 251
    "int8"       shift, and go to state 252
    "uint8"      shift, and go to state 253
    "int16"      shift, and go to state 254
    "uint16"     shift, and go to state 255
    "tuple"      shift, and go to state 256
    "variant"    shift, and go to state 257
    "::"         shift, and go to state 55
    "$t"         shift, and go to state 258
    "name"       shift, and go to state 56
    '$'          shift, and go to state 259

    name_in_namespace                   go to state 260
    basic_type_declaration              go to state 261
    structure_type_declaration          go to state 262
    auto_type_declaration               go to state 263
    bitfield_type_declaration           go to state 264
    type_declaration_no_options         go to state 1009
    type_declaration_no_options_no_dim  go to state 266


State 809

  295 expr_list: expr_list . ',' expr
  776 make_dim_decl: "fixed_array" '(' expr_list . optional_comma ')'

    ','  shift, and go to state 830

    $default  reduce using rule 788 (optional_comma)

    optional_comma  go to state 1010


State 810

  755 make_struct_decl: "default" '<' $@79 . type_declaration_no_options '>' $@80 use_initializer

    "type"       shift, and go to state 219
    "array"      shift, and go to state 220
    "table"      shift, and go to state 221
    "typedecl"   shift, and go to state 222
    "iterator"   shift, and go to state 223
    "smart_ptr"  shift, and go to state 224
    "bool"       shift, and go to state 225
    "void"       shift, and go to state 226
    "string"     shift, and go to state 227
    "auto"       shift, and go to state 228
    "int"        shift, and go to state 229
    "int2"       shift, and go to state 230
    "int3"       shift, and go to state 231
    "int4"       shift, and go to state 232
    "uint"       shift, and go to state 233
    "bitfield"   shift, and go to state 234
    "uint2"      shift, and go to state 235
    "uint3"      shift, and go to state 236
    "uint4"      shift, and go to state 237
    "float"      shift, and go to state 238
    "float2"     shift, and go to state 239
    "float3"     shift, and go to state 240
    "float4"     shift, and go to state 241
    "range"      shift, and go to state 242
    "urange"     shift, and go to state 243
    "range64"    shift, and go to state 244
    "urange64"   shift, and go to state 245
    "block"      shift, and go to state 246
    "int64"      shift, and go to state 247
    "uint64"     shift, and go to state 248
    "double"     shift, and go to state 249
    "function"   shift, and go to state 250
    "lambda"     shift, and go to state 251
    "int8"       shift, and go to state 252
    "uint8"      shift, and go to state 253
    "int16"      shift, and go to state 254
    "uint16"     shift, and go to state 255
    "tuple"      shift, and go to state 256
    "variant"    shift, and go to state 257
    "::"         shift, and go to state 55
    "$t"         shift, and go to state 258
    "name"       shift, and go to state 56
    '$'          shift, and go to state 259

    name_in_namespace                   go to state 260
    basic_type_declaration              go to state 261
    structure_type_declaration          go to state 262
    auto_type_declaration               go to state 263
    bitfield_type_declaration           go to state 264
    type_declaration_no_options         go to state 1011
    type_declaration_no_options_no_dim  go to state 266


State 811

  761 make_tuple_call: "tuple" '<' $@81 . type_declaration_no_options '>' $@82 '(' use_initializer optional_make_struct_dim_decl ')'

    "type"       shift, and go to state 219
    "array"      shift, and go to state 220
    "table"      shift, and go to state 221
    "typedecl"   shift, and go to state 222
    "iterator"   shift, and go to state 223
    "smart_ptr"  shift, and go to state 224
    "bool"       shift, and go to state 225
    "void"       shift, and go to state 226
    "string"     shift, and go to state 227
    "auto"       shift, and go to state 228
    "int"        shift, and go to state 229
    "int2"       shift, and go to state 230
    "int3"       shift, and go to state 231
    "int4"       shift, and go to state 232
    "uint"       shift, and go to state 233
    "bitfield"   shift, and go to state 234
    "uint2"      shift, and go to state 235
    "uint3"      shift, and go to state 236
    "uint4"      shift, and go to state 237
    "float"      shift, and go to state 238
    "float2"     shift, and go to state 239
    "float3"     shift, and go to state 240
    "float4"     shift, and go to state 241
    "range"      shift, and go to state 242
    "urange"     shift, and go to state 243
    "range64"    shift, and go to state 244
    "urange64"   shift, and go to state 245
    "block"      shift, and go to state 246
    "int64"      shift, and go to state 247
    "uint64"     shift, and go to state 248
    "double"     shift, and go to state 249
    "function"   shift, and go to state 250
    "lambda"     shift, and go to state 251
    "int8"       shift, and go to state 252
    "uint8"      shift, and go to state 253
    "int16"      shift, and go to state 254
    "uint16"     shift, and go to state 255
    "tuple"      shift, and go to state 256
    "variant"    shift, and go to state 257
    "::"         shift, and go to state 55
    "$t"         shift, and go to state 258
    "name"       shift, and go to state 56
    '$'          shift, and go to state 259

    name_in_namespace                   go to state 260
    basic_type_declaration              go to state 261
    structure_type_declaration          go to state 262
    auto_type_declaration               go to state 263
    bitfield_type_declaration           go to state 264
    type_declaration_no_options         go to state 1012
    type_declaration_no_options_no_dim  go to state 266


State 812

  295 expr_list: expr_list . ',' expr
  758 make_tuple_call: "tuple" '(' expr_list . optional_comma ')'

    ','  shift, and go to state 830

    $default  reduce using rule 788 (optional_comma)

    optional_comma  go to state 1013


State 813

  752 make_struct_decl: "variant" '<' $@77 . type_declaration_no_options '>' $@78 '(' make_variant_dim ')'

    "type"       shift, and go to state 219
    "array"      shift, and go to state 220
    "table"      shift, and go to state 221
    "typedecl"   shift, and go to state 222
    "iterator"   shift, and go to state 223
    "smart_ptr"  shift, and go to state 224
    "bool"       shift, and go to state 225
    "void"       shift, and go to state 226
    "string"     shift, and go to state 227
    "auto"       shift, and go to state 228
    "int"        shift, and go to state 229
    "int2"       shift, and go to state 230
    "int3"       shift, and go to state 231
    "int4"       shift, and go to state 232
    "uint"       shift, and go to state 233
    "bitfield"   shift, and go to state 234
    "uint2"      shift, and go to state 235
    "uint3"      shift, and go to state 236
    "uint4"      shift, and go to state 237
    "float"      shift, and go to state 238
    "float2"     shift, and go to state 239
    "float3"     shift, and go to state 240
    "float4"     shift, and go to state 241
    "range"      shift, and go to state 242
    "urange"     shift, and go to state 243
    "range64"    shift, and go to state 244
    "urange64"   shift, and go to state 245
    "block"      shift, and go to state 246
    "int64"      shift, and go to state 247
    "uint64"     shift, and go to state 248
    "double"     shift, and go to state 249
    "function"   shift, and go to state 250
    "lambda"     shift, and go to state 251
    "int8"       shift, and go to state 252
    "uint8"      shift, and go to state 253
    "int16"      shift, and go to state 254
    "uint16"     shift, and go to state 255
    "tuple"      shift, and go to state 256
    "variant"    shift, and go to state 257
    "::"         shift, and go to state 55
    "$t"         shift, and go to state 258
    "name"       shift, and go to state 56
    '$'          shift, and go to state 259

    name_in_namespace                   go to state 260
    basic_type_declaration              go to state 261
    structure_type_declaration          go to state 262
    auto_type_declaration               go to state 263
    bitfield_type_declaration           go to state 264
    type_declaration_no_options         go to state 1014
    type_declaration_no_options_no_dim  go to state 266


State 814

  421 expr: "generator" '<' type_declaration_no_options . '>' optional_capture_list '(' ')'
  422     | "generator" '<' type_declaration_no_options . '>' optional_capture_list '(' expr ')'
  423     | "generator" '<' type_declaration_no_options . '>' optional_capture_list expression_block

    '>'  shift, and go to state 1015


State 815

  342 expr_method_call: expr . "->" "name" '(' ')'
  343                 | expr . "->" "name" '(' expr_list ')'
  353 expr_field: expr . '.' "name"
  354           | expr . '.' '.' "name"
  355           | expr . '.' "name" '(' ')'
  356           | expr . '.' "name" '(' expr_list ')'
  357           | expr . '.' basic_type_declaration '(' ')'
  358           | expr . '.' basic_type_declaration '(' expr_list ')'
  361           | expr . '.' $@17 error $@18
  383 expr: expr . "<<" expr
  384     | expr . ">>" expr
  385     | expr . "<<<" expr
  386     | expr . ">>>" expr
  387     | expr . '+' expr
  388     | expr . '-' expr
  389     | expr . '*' expr
  390     | expr . '/' expr
  391     | expr . '%' expr
  392     | expr . '<' expr
  393     | expr . '>' expr
  394     | expr . "==" expr
  395     | expr . "!=" expr
  396     | expr . "<=" expr
  397     | expr . ">=" expr
  398     | expr . '&' expr
  399     | expr . '|' expr
  400     | expr . '^' expr
  401     | expr . "&&" expr
  402     | expr . "||" expr
  403     | expr . "^^" expr
  404     | expr . ".." expr
  407     | expr . "++"
  408     | expr . "--"
  410     | expr . '[' expr ']'
  411     | expr . '.' '[' expr ']'
  412     | expr . "?[" expr ']'
  413     | expr . '.' "?[" expr ']'
  414     | expr . "?." "name"
  415     | expr . '.' "?." "name"
  424     | expr . "??" expr
  425     | expr . '?' expr ':' expr
  428     | expr . "is" "type" '<' $@19 type_declaration_no_options '>' $@20
  429     | expr . "is" basic_type_declaration
  430     | expr . "is" "name"
  431     | expr . "as" "name"
  434     | expr . "as" "type" '<' $@21 type_declaration '>' $@22
  435     | expr . "as" basic_type_declaration
  436     | expr . '?' "as" "name"
  439     | expr . '?' "as" "type" '<' $@23 type_declaration '>' $@24
  440     | expr . '?' "as" basic_type_declaration
  448     | expr . "<|" expr
  449     | expr . "|>" expr
  450     | expr . "|>" basic_type_declaration
  453 expr_mtag: "$$" '(' expr . ')'
  461          | expr . '.' "$f" '(' expr ')'
  462          | expr . "?." "$f" '(' expr ')'
  463          | expr . '.' '.' "$f" '(' expr ')'
  464          | expr . '.' "?." "$f" '(' expr ')'
  465          | expr . "as" "$f" '(' expr ')'
  466          | expr . '?' "as" "$f" '(' expr ')'
  467          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 648
    "as"   shift, and go to state 649
    "<<"   shift, and go to state 650
    ">>"   shift, and go to state 651
    "++"   shift, and go to state 652
    "--"   shift, and go to state 653
    "<="   shift, and go to state 654
    ">="   shift, and go to state 655
    "=="   shift, and go to state 656
    "!="   shift, and go to state 657
    "->"   shift, and go to state 658
    "??"   shift, and go to state 659
    "?."   shift, and go to state 660
    "?["   shift, and go to state 661
    "<|"   shift, and go to state 662
    "|>"   shift, and go to state 663
    "<<<"  shift, and go to state 664
    ">>>"  shift, and go to state 665
    "&&"   shift, and go to state 666
    "||"   shift, and go to state 667
    "^^"   shift, and go to state 668
    ".."   shift, and go to state 669
    '?'    shift, and go to state 670
    '|'    shift, and go to state 671
    '^'    shift, and go to state 672
    '&'    shift, and go to state 673
    '<'    shift, and go to state 674
    '>'    shift, and go to state 675
    '-'    shift, and go to state 676
    '+'    shift, and go to state 677
    '*'    shift, and go to state 678
    '/'    shift, and go to state 679
    '%'    shift, and go to state 680
    '.'    shift, and go to state 681
    '['    shift, and go to state 682
    ')'    shift, and go to state 1016


State 816

  342 expr_method_call: expr . "->" "name" '(' ')'
  343                 | expr . "->" "name" '(' expr_list ')'
  353 expr_field: expr . '.' "name"
  354           | expr . '.' '.' "name"
  355           | expr . '.' "name" '(' ')'
  356           | expr . '.' "name" '(' expr_list ')'
  357           | expr . '.' basic_type_declaration '(' ')'
  358           | expr . '.' basic_type_declaration '(' expr_list ')'
  361           | expr . '.' $@17 error $@18
  383 expr: expr . "<<" expr
  384     | expr . ">>" expr
  385     | expr . "<<<" expr
  386     | expr . ">>>" expr
  387     | expr . '+' expr
  388     | expr . '-' expr
  389     | expr . '*' expr
  390     | expr . '/' expr
  391     | expr . '%' expr
  392     | expr . '<' expr
  393     | expr . '>' expr
  394     | expr . "==" expr
  395     | expr . "!=" expr
  396     | expr . "<=" expr
  397     | expr . ">=" expr
  398     | expr . '&' expr
  399     | expr . '|' expr
  400     | expr . '^' expr
  401     | expr . "&&" expr
  402     | expr . "||" expr
  403     | expr . "^^" expr
  404     | expr . ".." expr
  407     | expr . "++"
  408     | expr . "--"
  410     | expr . '[' expr ']'
  411     | expr . '.' '[' expr ']'
  412     | expr . "?[" expr ']'
  413     | expr . '.' "?[" expr ']'
  414     | expr . "?." "name"
  415     | expr . '.' "?." "name"
  424     | expr . "??" expr
  425     | expr . '?' expr ':' expr
  428     | expr . "is" "type" '<' $@19 type_declaration_no_options '>' $@20
  429     | expr . "is" basic_type_declaration
  430     | expr . "is" "name"
  431     | expr . "as" "name"
  434     | expr . "as" "type" '<' $@21 type_declaration '>' $@22
  435     | expr . "as" basic_type_declaration
  436     | expr . '?' "as" "name"
  439     | expr . '?' "as" "type" '<' $@23 type_declaration '>' $@24
  440     | expr . '?' "as" basic_type_declaration
  448     | expr . "<|" expr
  449     | expr . "|>" expr
  450     | expr . "|>" basic_type_declaration
  454 expr_mtag: "$i" '(' expr . ')'
  461          | expr . '.' "$f" '(' expr ')'
  462          | expr . "?." "$f" '(' expr ')'
  463          | expr . '.' '.' "$f" '(' expr ')'
  464          | expr . '.' "?." "$f" '(' expr ')'
  465          | expr . "as" "$f" '(' expr ')'
  466          | expr . '?' "as" "$f" '(' expr ')'
  467          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 648
    "as"   shift, and go to state 649
    "<<"   shift, and go to state 650
    ">>"   shift, and go to state 651
    "++"   shift, and go to state 652
    "--"   shift, and go to state 653
    "<="   shift, and go to state 654
    ">="   shift, and go to state 655
    "=="   shift, and go to state 656
    "!="   shift, and go to state 657
    "->"   shift, and go to state 658
    "??"   shift, and go to state 659
    "?."   shift, and go to state 660
    "?["   shift, and go to state 661
    "<|"   shift, and go to state 662
    "|>"   shift, and go to state 663
    "<<<"  shift, and go to state 664
    ">>>"  shift, and go to state 665
    "&&"   shift, and go to state 666
    "||"   shift, and go to state 667
    "^^"   shift, and go to state 668
    ".."   shift, and go to state 669
    '?'    shift, and go to state 670
    '|'    shift, and go to state 671
    '^'    shift, and go to state 672
    '&'    shift, and go to state 673
    '<'    shift, and go to state 674
    '>'    shift, and go to state 675
    '-'    shift, and go to state 676
    '+'    shift, and go to state 677
    '*'    shift, and go to state 678
    '/'    shift, and go to state 679
    '%'    shift, and go to state 680
    '.'    shift, and go to state 681
    '['    shift, and go to state 682
    ')'    shift, and go to state 1017


State 817

  342 expr_method_call: expr . "->" "name" '(' ')'
  343                 | expr . "->" "name" '(' expr_list ')'
  353 expr_field: expr . '.' "name"
  354           | expr . '.' '.' "name"
  355           | expr . '.' "name" '(' ')'
  356           | expr . '.' "name" '(' expr_list ')'
  357           | expr . '.' basic_type_declaration '(' ')'
  358           | expr . '.' basic_type_declaration '(' expr_list ')'
  361           | expr . '.' $@17 error $@18
  383 expr: expr . "<<" expr
  384     | expr . ">>" expr
  385     | expr . "<<<" expr
  386     | expr . ">>>" expr
  387     | expr . '+' expr
  388     | expr . '-' expr
  389     | expr . '*' expr
  390     | expr . '/' expr
  391     | expr . '%' expr
  392     | expr . '<' expr
  393     | expr . '>' expr
  394     | expr . "==" expr
  395     | expr . "!=" expr
  396     | expr . "<=" expr
  397     | expr . ">=" expr
  398     | expr . '&' expr
  399     | expr . '|' expr
  400     | expr . '^' expr
  401     | expr . "&&" expr
  402     | expr . "||" expr
  403     | expr . "^^" expr
  404     | expr . ".." expr
  407     | expr . "++"
  408     | expr . "--"
  410     | expr . '[' expr ']'
  411     | expr . '.' '[' expr ']'
  412     | expr . "?[" expr ']'
  413     | expr . '.' "?[" expr ']'
  414     | expr . "?." "name"
  415     | expr . '.' "?." "name"
  424     | expr . "??" expr
  425     | expr . '?' expr ':' expr
  428     | expr . "is" "type" '<' $@19 type_declaration_no_options '>' $@20
  429     | expr . "is" basic_type_declaration
  430     | expr . "is" "name"
  431     | expr . "as" "name"
  434     | expr . "as" "type" '<' $@21 type_declaration '>' $@22
  435     | expr . "as" basic_type_declaration
  436     | expr . '?' "as" "name"
  439     | expr . '?' "as" "type" '<' $@23 type_declaration '>' $@24
  440     | expr . '?' "as" basic_type_declaration
  448     | expr . "<|" expr
  449     | expr . "|>" expr
  450     | expr . "|>" basic_type_declaration
  455 expr_mtag: "$v" '(' expr . ')'
  461          | expr . '.' "$f" '(' expr ')'
  462          | expr . "?." "$f" '(' expr ')'
  463          | expr . '.' '.' "$f" '(' expr ')'
  464          | expr . '.' "?." "$f" '(' expr ')'
  465          | expr . "as" "$f" '(' expr ')'
  466          | expr . '?' "as" "$f" '(' expr ')'
  467          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 648
    "as"   shift, and go to state 649
    "<<"   shift, and go to state 650
    ">>"   shift, and go to state 651
    "++"   shift, and go to state 652
    "--"   shift, and go to state 653
    "<="   shift, and go to state 654
    ">="   shift, and go to state 655
    "=="   shift, and go to state 656
    "!="   shift, and go to state 657
    "->"   shift, and go to state 658
    "??"   shift, and go to state 659
    "?."   shift, and go to state 660
    "?["   shift, and go to state 661
    "<|"   shift, and go to state 662
    "|>"   shift, and go to state 663
    "<<<"  shift, and go to state 664
    ">>>"  shift, and go to state 665
    "&&"   shift, and go to state 666
    "||"   shift, and go to state 667
    "^^"   shift, and go to state 668
    ".."   shift, and go to state 669
    '?'    shift, and go to state 670
    '|'    shift, and go to state 671
    '^'    shift, and go to state 672
    '&'    shift, and go to state 673
    '<'    shift, and go to state 674
    '>'    shift, and go to state 675
    '-'    shift, and go to state 676
    '+'    shift, and go to state 677
    '*'    shift, and go to state 678
    '/'    shift, and go to state 679
    '%'    shift, and go to state 680
    '.'    shift, and go to state 681
    '['    shift, and go to state 682
    ')'    shift, and go to state 1018


State 818

  342 expr_method_call: expr . "->" "name" '(' ')'
  343                 | expr . "->" "name" '(' expr_list ')'
  353 expr_field: expr . '.' "name"
  354           | expr . '.' '.' "name"
  355           | expr . '.' "name" '(' ')'
  356           | expr . '.' "name" '(' expr_list ')'
  357           | expr . '.' basic_type_declaration '(' ')'
  358           | expr . '.' basic_type_declaration '(' expr_list ')'
  361           | expr . '.' $@17 error $@18
  383 expr: expr . "<<" expr
  384     | expr . ">>" expr
  385     | expr . "<<<" expr
  386     | expr . ">>>" expr
  387     | expr . '+' expr
  388     | expr . '-' expr
  389     | expr . '*' expr
  390     | expr . '/' expr
  391     | expr . '%' expr
  392     | expr . '<' expr
  393     | expr . '>' expr
  394     | expr . "==" expr
  395     | expr . "!=" expr
  396     | expr . "<=" expr
  397     | expr . ">=" expr
  398     | expr . '&' expr
  399     | expr . '|' expr
  400     | expr . '^' expr
  401     | expr . "&&" expr
  402     | expr . "||" expr
  403     | expr . "^^" expr
  404     | expr . ".." expr
  407     | expr . "++"
  408     | expr . "--"
  410     | expr . '[' expr ']'
  411     | expr . '.' '[' expr ']'
  412     | expr . "?[" expr ']'
  413     | expr . '.' "?[" expr ']'
  414     | expr . "?." "name"
  415     | expr . '.' "?." "name"
  424     | expr . "??" expr
  425     | expr . '?' expr ':' expr
  428     | expr . "is" "type" '<' $@19 type_declaration_no_options '>' $@20
  429     | expr . "is" basic_type_declaration
  430     | expr . "is" "name"
  431     | expr . "as" "name"
  434     | expr . "as" "type" '<' $@21 type_declaration '>' $@22
  435     | expr . "as" basic_type_declaration
  436     | expr . '?' "as" "name"
  439     | expr . '?' "as" "type" '<' $@23 type_declaration '>' $@24
  440     | expr . '?' "as" basic_type_declaration
  448     | expr . "<|" expr
  449     | expr . "|>" expr
  450     | expr . "|>" basic_type_declaration
  456 expr_mtag: "$b" '(' expr . ')'
  461          | expr . '.' "$f" '(' expr ')'
  462          | expr . "?." "$f" '(' expr ')'
  463          | expr . '.' '.' "$f" '(' expr ')'
  464          | expr . '.' "?." "$f" '(' expr ')'
  465          | expr . "as" "$f" '(' expr ')'
  466          | expr . '?' "as" "$f" '(' expr ')'
  467          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 648
    "as"   shift, and go to state 649
    "<<"   shift, and go to state 650
    ">>"   shift, and go to state 651
    "++"   shift, and go to state 652
    "--"   shift, and go to state 653
    "<="   shift, and go to state 654
    ">="   shift, and go to state 655
    "=="   shift, and go to state 656
    "!="   shift, and go to state 657
    "->"   shift, and go to state 658
    "??"   shift, and go to state 659
    "?."   shift, and go to state 660
    "?["   shift, and go to state 661
    "<|"   shift, and go to state 662
    "|>"   shift, and go to state 663
    "<<<"  shift, and go to state 664
    ">>>"  shift, and go to state 665
    "&&"   shift, and go to state 666
    "||"   shift, and go to state 667
    "^^"   shift, and go to state 668
    ".."   shift, and go to state 669
    '?'    shift, and go to state 670
    '|'    shift, and go to state 671
    '^'    shift, and go to state 672
    '&'    shift, and go to state 673
    '<'    shift, and go to state 674
    '>'    shift, and go to state 675
    '-'    shift, and go to state 676
    '+'    shift, and go to state 677
    '*'    shift, and go to state 678
    '/'    shift, and go to state 679
    '%'    shift, and go to state 680
    '.'    shift, and go to state 681
    '['    shift, and go to state 682
    ')'    shift, and go to state 1019


State 819

  342 expr_method_call: expr . "->" "name" '(' ')'
  343                 | expr . "->" "name" '(' expr_list ')'
  353 expr_field: expr . '.' "name"
  354           | expr . '.' '.' "name"
  355           | expr . '.' "name" '(' ')'
  356           | expr . '.' "name" '(' expr_list ')'
  357           | expr . '.' basic_type_declaration '(' ')'
  358           | expr . '.' basic_type_declaration '(' expr_list ')'
  361           | expr . '.' $@17 error $@18
  383 expr: expr . "<<" expr
  384     | expr . ">>" expr
  385     | expr . "<<<" expr
  386     | expr . ">>>" expr
  387     | expr . '+' expr
  388     | expr . '-' expr
  389     | expr . '*' expr
  390     | expr . '/' expr
  391     | expr . '%' expr
  392     | expr . '<' expr
  393     | expr . '>' expr
  394     | expr . "==" expr
  395     | expr . "!=" expr
  396     | expr . "<=" expr
  397     | expr . ">=" expr
  398     | expr . '&' expr
  399     | expr . '|' expr
  400     | expr . '^' expr
  401     | expr . "&&" expr
  402     | expr . "||" expr
  403     | expr . "^^" expr
  404     | expr . ".." expr
  407     | expr . "++"
  408     | expr . "--"
  410     | expr . '[' expr ']'
  411     | expr . '.' '[' expr ']'
  412     | expr . "?[" expr ']'
  413     | expr . '.' "?[" expr ']'
  414     | expr . "?." "name"
  415     | expr . '.' "?." "name"
  424     | expr . "??" expr
  425     | expr . '?' expr ':' expr
  428     | expr . "is" "type" '<' $@19 type_declaration_no_options '>' $@20
  429     | expr . "is" basic_type_declaration
  430     | expr . "is" "name"
  431     | expr . "as" "name"
  434     | expr . "as" "type" '<' $@21 type_declaration '>' $@22
  435     | expr . "as" basic_type_declaration
  436     | expr . '?' "as" "name"
  439     | expr . '?' "as" "type" '<' $@23 type_declaration '>' $@24
  440     | expr . '?' "as" basic_type_declaration
  448     | expr . "<|" expr
  449     | expr . "|>" expr
  450     | expr . "|>" basic_type_declaration
  457 expr_mtag: "$a" '(' expr . ')'
  461          | expr . '.' "$f" '(' expr ')'
  462          | expr . "?." "$f" '(' expr ')'
  463          | expr . '.' '.' "$f" '(' expr ')'
  464          | expr . '.' "?." "$f" '(' expr ')'
  465          | expr . "as" "$f" '(' expr ')'
  466          | expr . '?' "as" "$f" '(' expr ')'
  467          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 648
    "as"   shift, and go to state 649
    "<<"   shift, and go to state 650
    ">>"   shift, and go to state 651
    "++"   shift, and go to state 652
    "--"   shift, and go to state 653
    "<="   shift, and go to state 654
    ">="   shift, and go to state 655
    "=="   shift, and go to state 656
    "!="   shift, and go to state 657
    "->"   shift, and go to state 658
    "??"   shift, and go to state 659
    "?."   shift, and go to state 660
    "?["   shift, and go to state 661
    "<|"   shift, and go to state 662
    "|>"   shift, and go to state 663
    "<<<"  shift, and go to state 664
    ">>>"  shift, and go to state 665
    "&&"   shift, and go to state 666
    "||"   shift, and go to state 667
    "^^"   shift, and go to state 668
    ".."   shift, and go to state 669
    '?'    shift, and go to state 670
    '|'    shift, and go to state 671
    '^'    shift, and go to state 672
    '&'    shift, and go to state 673
    '<'    shift, and go to state 674
    '>'    shift, and go to state 675
    '-'    shift, and go to state 676
    '+'    shift, and go to state 677
    '*'    shift, and go to state 678
    '/'    shift, and go to state 679
    '%'    shift, and go to state 680
    '.'    shift, and go to state 681
    '['    shift, and go to state 682
    ')'    shift, and go to state 1020


State 820

  342 expr_method_call: expr . "->" "name" '(' ')'
  343                 | expr . "->" "name" '(' expr_list ')'
  353 expr_field: expr . '.' "name"
  354           | expr . '.' '.' "name"
  355           | expr . '.' "name" '(' ')'
  356           | expr . '.' "name" '(' expr_list ')'
  357           | expr . '.' basic_type_declaration '(' ')'
  358           | expr . '.' basic_type_declaration '(' expr_list ')'
  361           | expr . '.' $@17 error $@18
  383 expr: expr . "<<" expr
  384     | expr . ">>" expr
  385     | expr . "<<<" expr
  386     | expr . ">>>" expr
  387     | expr . '+' expr
  388     | expr . '-' expr
  389     | expr . '*' expr
  390     | expr . '/' expr
  391     | expr . '%' expr
  392     | expr . '<' expr
  393     | expr . '>' expr
  394     | expr . "==" expr
  395     | expr . "!=" expr
  396     | expr . "<=" expr
  397     | expr . ">=" expr
  398     | expr . '&' expr
  399     | expr . '|' expr
  400     | expr . '^' expr
  401     | expr . "&&" expr
  402     | expr . "||" expr
  403     | expr . "^^" expr
  404     | expr . ".." expr
  407     | expr . "++"
  408     | expr . "--"
  410     | expr . '[' expr ']'
  411     | expr . '.' '[' expr ']'
  412     | expr . "?[" expr ']'
  413     | expr . '.' "?[" expr ']'
  414     | expr . "?." "name"
  415     | expr . '.' "?." "name"
  424     | expr . "??" expr
  425     | expr . '?' expr ':' expr
  428     | expr . "is" "type" '<' $@19 type_declaration_no_options '>' $@20
  429     | expr . "is" basic_type_declaration
  430     | expr . "is" "name"
  431     | expr . "as" "name"
  434     | expr . "as" "type" '<' $@21 type_declaration '>' $@22
  435     | expr . "as" basic_type_declaration
  436     | expr . '?' "as" "name"
  439     | expr . '?' "as" "type" '<' $@23 type_declaration '>' $@24
  440     | expr . '?' "as" basic_type_declaration
  448     | expr . "<|" expr
  449     | expr . "|>" expr
  450     | expr . "|>" basic_type_declaration
  459 expr_mtag: "$c" '(' expr . ')' '(' ')'
  460          | "$c" '(' expr . ')' '(' expr_list ')'
  461          | expr . '.' "$f" '(' expr ')'
  462          | expr . "?." "$f" '(' expr ')'
  463          | expr . '.' '.' "$f" '(' expr ')'
  464          | expr . '.' "?." "$f" '(' expr ')'
  465          | expr . "as" "$f" '(' expr ')'
  466          | expr . '?' "as" "$f" '(' expr ')'
  467          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 648
    "as"   shift, and go to state 649
    "<<"   shift, and go to state 650
    ">>"   shift, and go to state 651
    "++"   shift, and go to state 652
    "--"   shift, and go to state 653
    "<="   shift, and go to state 654
    ">="   shift, and go to state 655
    "=="   shift, and go to state 656
    "!="   shift, and go to state 657
    "->"   shift, and go to state 658
    "??"   shift, and go to state 659
    "?."   shift, and go to state 660
    "?["   shift, and go to state 661
    "<|"   shift, and go to state 662
    "|>"   shift, and go to state 663
    "<<<"  shift, and go to state 664
    ">>>"  shift, and go to state 665
    "&&"   shift, and go to state 666
    "||"   shift, and go to state 667
    "^^"   shift, and go to state 668
    ".."   shift, and go to state 669
    '?'    shift, and go to state 670
    '|'    shift, and go to state 671
    '^'    shift, and go to state 672
    '&'    shift, and go to state 673
    '<'    shift, and go to state 674
    '>'    shift, and go to state 675
    '-'    shift, and go to state 676
    '+'    shift, and go to state 677
    '*'    shift, and go to state 678
    '/'    shift, and go to state 679
    '%'    shift, and go to state 680
    '.'    shift, and go to state 681
    '['    shift, and go to state 682
    ')'    shift, and go to state 1021


State 821

   32 string_builder: "start of the string" string_builder_body "end of the string" .

    $default  reduce using rule 32 (string_builder)


State 822

   31 string_builder_body: string_builder_body "{" . expr "}"

    "struct"                          shift, and go to state 409
    "class"                           shift, and go to state 410
    "true"                            shift, and go to state 411
    "false"                           shift, and go to state 412
    "new"                             shift, and go to state 413
    "typeinfo"                        shift, and go to state 414
    "type"                            shift, and go to state 415
    "array"                           shift, and go to state 416
    "null"                            shift, and go to state 417
    "table"                           shift, and go to state 418
    "deref"                           shift, and go to state 419
    "cast"                            shift, and go to state 420
    "upcast"                          shift, and go to state 421
    "addr"                            shift, and go to state 422
    "reinterpret"                     shift, and go to state 423
    "unsafe"                          shift, and go to state 424
    "fixed_array"                     shift, and go to state 425
    "default"                         shift, and go to state 426
    "bool"                            shift, and go to state 225
    "void"                            shift, and go to state 226
    "string"                          shift, and go to state 227
    "int"                             shift, and go to state 229
    "int2"                            shift, and go to state 230
    "int3"                            shift, and go to state 231
    "int4"                            shift, and go to state 232
    "uint"                            shift, and go to state 233
    "bitfield"                        shift, and go to state 427
    "uint2"                           shift, and go to state 235
    "uint3"                           shift, and go to state 236
    "uint4"                           shift, and go to state 237
    "float"                           shift, and go to state 238
    "float2"                          shift, and go to state 239
    "float3"                          shift, and go to state 240
    "float4"                          shift, and go to state 241
    "range"                           shift, and go to state 242
    "urange"                          shift, and go to state 243
    "range64"                         shift, and go to state 244
    "urange64"                        shift, and go to state 245
    "int64"                           shift, and go to state 247
    "uint64"                          shift, and go to state 248
    "double"                          shift, and go to state 249
    "int8"                            shift, and go to state 252
    "uint8"                           shift, and go to state 253
    "int16"                           shift, and go to state 254
    "uint16"                          shift, and go to state 255
    "tuple"                           shift, and go to state 428
    "variant"                         shift, and go to state 429
    "generator"                       shift, and go to state 430
    "++"                              shift, and go to state 431
    "--"                              shift, and go to state 432
    "::"                              shift, and go to state 55
    "$$"                              shift, and go to state 433
    "$i"                              shift, and go to state 434
    "$v"                              shift, and go to state 435
    "$b"                              shift, and go to state 436
    "$a"                              shift, and go to state 437
    "$c"                              shift, and go to state 438
    "..."                             shift, and go to state 439
    "integer constant"                shift, and go to state 440
    "long integer constant"           shift, and go to state 441
    "unsigned integer constant"       shift, and go to state 442
    "unsigned long integer constant"  shift, and go to state 443
    "unsigned int8 constant"          shift, and go to state 444
    "floating point constant"         shift, and go to state 445
    "double constant"                 shift, and go to state 446
    "name"                            shift, and go to state 56
    "start of the string"             shift, and go to state 447
    "begin of code block"             shift, and go to state 448
    '-'                               shift, and go to state 449
    '+'                               shift, and go to state 450
    '*'                               shift, and go to state 451
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 452
    '!'                               shift, and go to state 453
    '['                               shift, and go to state 454
    '('                               shift, and go to state 455
    '$'                               shift, and go to state 456
    '@'                               shift, and go to state 457

    string_builder          go to state 458
    expr_reader             go to state 459
    expr_call_pipe          go to state 460
    name_in_namespace       go to state 461
    expr_new                go to state 462
    expr_cast               go to state 463
    expr_type_decl          go to state 464
    expr_type_info          go to state 465
    block_or_lambda         go to state 466
    expr_full_block         go to state 467
    expr_numeric_const      go to state 468
    expr_named_call         go to state 469
    expr_method_call        go to state 470
    func_addr_expr          go to state 471
    expr_field              go to state 472
    expr_call               go to state 473
    expr                    go to state 1022
    expr_mtag               go to state 475
    basic_type_declaration  go to state 476
    make_decl               go to state 477
    make_struct_decl        go to state 478
    make_tuple_call         go to state 479
    make_dim_decl           go to state 480
    make_table_decl         go to state 481
    array_comprehension     go to state 482


State 823

   25 character_sequence: character_sequence . STRING_CHARACTER
   26                   | character_sequence . STRING_CHARACTER_ESC
   30 string_builder_body: string_builder_body character_sequence .

    STRING_CHARACTER      shift, and go to state 214
    STRING_CHARACTER_ESC  shift, and go to state 215

    $default  reduce using rule 30 (string_builder_body)


State 824

  792 array_comprehension: "begin of code block" "for" '(' . variable_name_with_pos_list "in" expr_list ')' "end of expression" make_map_tuple array_comprehension_where "end of code block"

    "$i"    shift, and go to state 717
    "name"  shift, and go to state 718

    variable_name_with_pos_list  go to state 1023


State 825

  756 make_map_tuple: expr "=>" . expr

    "struct"                          shift, and go to state 409
    "class"                           shift, and go to state 410
    "true"                            shift, and go to state 411
    "false"                           shift, and go to state 412
    "new"                             shift, and go to state 413
    "typeinfo"                        shift, and go to state 414
    "type"                            shift, and go to state 415
    "array"                           shift, and go to state 416
    "null"                            shift, and go to state 417
    "table"                           shift, and go to state 418
    "deref"                           shift, and go to state 419
    "cast"                            shift, and go to state 420
    "upcast"                          shift, and go to state 421
    "addr"                            shift, and go to state 422
    "reinterpret"                     shift, and go to state 423
    "unsafe"                          shift, and go to state 424
    "fixed_array"                     shift, and go to state 425
    "default"                         shift, and go to state 426
    "bool"                            shift, and go to state 225
    "void"                            shift, and go to state 226
    "string"                          shift, and go to state 227
    "int"                             shift, and go to state 229
    "int2"                            shift, and go to state 230
    "int3"                            shift, and go to state 231
    "int4"                            shift, and go to state 232
    "uint"                            shift, and go to state 233
    "bitfield"                        shift, and go to state 427
    "uint2"                           shift, and go to state 235
    "uint3"                           shift, and go to state 236
    "uint4"                           shift, and go to state 237
    "float"                           shift, and go to state 238
    "float2"                          shift, and go to state 239
    "float3"                          shift, and go to state 240
    "float4"                          shift, and go to state 241
    "range"                           shift, and go to state 242
    "urange"                          shift, and go to state 243
    "range64"                         shift, and go to state 244
    "urange64"                        shift, and go to state 245
    "int64"                           shift, and go to state 247
    "uint64"                          shift, and go to state 248
    "double"                          shift, and go to state 249
    "int8"                            shift, and go to state 252
    "uint8"                           shift, and go to state 253
    "int16"                           shift, and go to state 254
    "uint16"                          shift, and go to state 255
    "tuple"                           shift, and go to state 428
    "variant"                         shift, and go to state 429
    "generator"                       shift, and go to state 430
    "++"                              shift, and go to state 431
    "--"                              shift, and go to state 432
    "::"                              shift, and go to state 55
    "$$"                              shift, and go to state 433
    "$i"                              shift, and go to state 434
    "$v"                              shift, and go to state 435
    "$b"                              shift, and go to state 436
    "$a"                              shift, and go to state 437
    "$c"                              shift, and go to state 438
    "..."                             shift, and go to state 439
    "integer constant"                shift, and go to state 440
    "long integer constant"           shift, and go to state 441
    "unsigned integer constant"       shift, and go to state 442
    "unsigned long integer constant"  shift, and go to state 443
    "unsigned int8 constant"          shift, and go to state 444
    "floating point constant"         shift, and go to state 445
    "double constant"                 shift, and go to state 446
    "name"                            shift, and go to state 56
    "start of the string"             shift, and go to state 447
    "begin of code block"             shift, and go to state 448
    '-'                               shift, and go to state 449
    '+'                               shift, and go to state 450
    '*'                               shift, and go to state 451
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 452
    '!'                               shift, and go to state 453
    '['                               shift, and go to state 454
    '('                               shift, and go to state 455
    '$'                               shift, and go to state 456
    '@'                               shift, and go to state 457

    string_builder          go to state 458
    expr_reader             go to state 459
    expr_call_pipe          go to state 460
    name_in_namespace       go to state 461
    expr_new                go to state 462
    expr_cast               go to state 463
    expr_type_decl          go to state 464
    expr_type_info          go to state 465
    block_or_lambda         go to state 466
    expr_full_block         go to state 467
    expr_numeric_const      go to state 468
    expr_named_call         go to state 469
    expr_method_call        go to state 470
    func_addr_expr          go to state 471
    expr_field              go to state 472
    expr_call               go to state 473
    expr                    go to state 1024
    expr_mtag               go to state 475
    basic_type_declaration  go to state 476
    make_decl               go to state 477
    make_struct_decl        go to state 478
    make_tuple_call         go to state 479
    make_dim_decl           go to state 480
    make_table_decl         go to state 481
    array_comprehension     go to state 482


State 826

  781 expr_map_tuple_list: expr_map_tuple_list ',' . make_map_tuple
  789 optional_comma: ',' .

    "struct"                          shift, and go to state 409
    "class"                           shift, and go to state 410
    "true"                            shift, and go to state 411
    "false"                           shift, and go to state 412
    "new"                             shift, and go to state 413
    "typeinfo"                        shift, and go to state 414
    "type"                            shift, and go to state 415
    "array"                           shift, and go to state 416
    "null"                            shift, and go to state 417
    "table"                           shift, and go to state 418
    "deref"                           shift, and go to state 419
    "cast"                            shift, and go to state 420
    "upcast"                          shift, and go to state 421
    "addr"                            shift, and go to state 422
    "reinterpret"                     shift, and go to state 423
    "unsafe"                          shift, and go to state 424
    "fixed_array"                     shift, and go to state 425
    "default"                         shift, and go to state 426
    "bool"                            shift, and go to state 225
    "void"                            shift, and go to state 226
    "string"                          shift, and go to state 227
    "int"                             shift, and go to state 229
    "int2"                            shift, and go to state 230
    "int3"                            shift, and go to state 231
    "int4"                            shift, and go to state 232
    "uint"                            shift, and go to state 233
    "bitfield"                        shift, and go to state 427
    "uint2"                           shift, and go to state 235
    "uint3"                           shift, and go to state 236
    "uint4"                           shift, and go to state 237
    "float"                           shift, and go to state 238
    "float2"                          shift, and go to state 239
    "float3"                          shift, and go to state 240
    "float4"                          shift, and go to state 241
    "range"                           shift, and go to state 242
    "urange"                          shift, and go to state 243
    "range64"                         shift, and go to state 244
    "urange64"                        shift, and go to state 245
    "int64"                           shift, and go to state 247
    "uint64"                          shift, and go to state 248
    "double"                          shift, and go to state 249
    "int8"                            shift, and go to state 252
    "uint8"                           shift, and go to state 253
    "int16"                           shift, and go to state 254
    "uint16"                          shift, and go to state 255
    "tuple"                           shift, and go to state 428
    "variant"                         shift, and go to state 429
    "generator"                       shift, and go to state 430
    "++"                              shift, and go to state 431
    "--"                              shift, and go to state 432
    "::"                              shift, and go to state 55
    "$$"                              shift, and go to state 433
    "$i"                              shift, and go to state 434
    "$v"                              shift, and go to state 435
    "$b"                              shift, and go to state 436
    "$a"                              shift, and go to state 437
    "$c"                              shift, and go to state 438
    "..."                             shift, and go to state 439
    "integer constant"                shift, and go to state 440
    "long integer constant"           shift, and go to state 441
    "unsigned integer constant"       shift, and go to state 442
    "unsigned long integer constant"  shift, and go to state 443
    "unsigned int8 constant"          shift, and go to state 444
    "floating point constant"         shift, and go to state 445
    "double constant"                 shift, and go to state 446
    "name"                            shift, and go to state 56
    "start of the string"             shift, and go to state 447
    "begin of code block"             shift, and go to state 448
    '-'                               shift, and go to state 449
    '+'                               shift, and go to state 450
    '*'                               shift, and go to state 451
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 452
    '!'                               shift, and go to state 453
    '['                               shift, and go to state 454
    '('                               shift, and go to state 455
    '$'                               shift, and go to state 456
    '@'                               shift, and go to state 457

    $default  reduce using rule 789 (optional_comma)

    string_builder          go to state 458
    expr_reader             go to state 459
    expr_call_pipe          go to state 460
    name_in_namespace       go to state 461
    expr_new                go to state 462
    expr_cast               go to state 463
    expr_type_decl          go to state 464
    expr_type_info          go to state 465
    block_or_lambda         go to state 466
    expr_full_block         go to state 467
    expr_numeric_const      go to state 468
    expr_named_call         go to state 469
    expr_method_call        go to state 470
    func_addr_expr          go to state 471
    expr_field              go to state 472
    expr_call               go to state 473
    expr                    go to state 628
    expr_mtag               go to state 475
    basic_type_declaration  go to state 476
    make_decl               go to state 477
    make_struct_decl        go to state 478
    make_map_tuple          go to state 1025
    make_tuple_call         go to state 479
    make_dim_decl           go to state 480
    make_table_decl         go to state 481
    array_comprehension     go to state 482


State 827

  782 make_table_decl: "begin of code block" expr_map_tuple_list optional_comma . "end of code block"

    "end of code block"  shift, and go to state 1026


State 828

  790 array_comprehension: '[' "for" '(' . variable_name_with_pos_list "in" expr_list ')' "end of expression" expr array_comprehension_where ']'

    "$i"    shift, and go to state 717
    "name"  shift, and go to state 718

    variable_name_with_pos_list  go to state 1027


State 829

  791 array_comprehension: '[' "iterator" "for" . '(' variable_name_with_pos_list "in" expr_list ')' "end of expression" expr array_comprehension_where ']'

    '('  shift, and go to state 1028


State 830

  295 expr_list: expr_list ',' . expr
  789 optional_comma: ',' .

    "struct"                          shift, and go to state 409
    "class"                           shift, and go to state 410
    "true"                            shift, and go to state 411
    "false"                           shift, and go to state 412
    "new"                             shift, and go to state 413
    "typeinfo"                        shift, and go to state 414
    "type"                            shift, and go to state 415
    "array"                           shift, and go to state 416
    "null"                            shift, and go to state 417
    "table"                           shift, and go to state 418
    "deref"                           shift, and go to state 419
    "cast"                            shift, and go to state 420
    "upcast"                          shift, and go to state 421
    "addr"                            shift, and go to state 422
    "reinterpret"                     shift, and go to state 423
    "unsafe"                          shift, and go to state 424
    "fixed_array"                     shift, and go to state 425
    "default"                         shift, and go to state 426
    "bool"                            shift, and go to state 225
    "void"                            shift, and go to state 226
    "string"                          shift, and go to state 227
    "int"                             shift, and go to state 229
    "int2"                            shift, and go to state 230
    "int3"                            shift, and go to state 231
    "int4"                            shift, and go to state 232
    "uint"                            shift, and go to state 233
    "bitfield"                        shift, and go to state 427
    "uint2"                           shift, and go to state 235
    "uint3"                           shift, and go to state 236
    "uint4"                           shift, and go to state 237
    "float"                           shift, and go to state 238
    "float2"                          shift, and go to state 239
    "float3"                          shift, and go to state 240
    "float4"                          shift, and go to state 241
    "range"                           shift, and go to state 242
    "urange"                          shift, and go to state 243
    "range64"                         shift, and go to state 244
    "urange64"                        shift, and go to state 245
    "int64"                           shift, and go to state 247
    "uint64"                          shift, and go to state 248
    "double"                          shift, and go to state 249
    "int8"                            shift, and go to state 252
    "uint8"                           shift, and go to state 253
    "int16"                           shift, and go to state 254
    "uint16"                          shift, and go to state 255
    "tuple"                           shift, and go to state 428
    "variant"                         shift, and go to state 429
    "generator"                       shift, and go to state 430
    "++"                              shift, and go to state 431
    "--"                              shift, and go to state 432
    "::"                              shift, and go to state 55
    "$$"                              shift, and go to state 433
    "$i"                              shift, and go to state 434
    "$v"                              shift, and go to state 435
    "$b"                              shift, and go to state 436
    "$a"                              shift, and go to state 437
    "$c"                              shift, and go to state 438
    "..."                             shift, and go to state 439
    "integer constant"                shift, and go to state 440
    "long integer constant"           shift, and go to state 441
    "unsigned integer constant"       shift, and go to state 442
    "unsigned long integer constant"  shift, and go to state 443
    "unsigned int8 constant"          shift, and go to state 444
    "floating point constant"         shift, and go to state 445
    "double constant"                 shift, and go to state 446
    "name"                            shift, and go to state 56
    "start of the string"             shift, and go to state 447
    "begin of code block"             shift, and go to state 448
    '-'                               shift, and go to state 449
    '+'                               shift, and go to state 450
    '*'                               shift, and go to state 451
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 452
    '!'                               shift, and go to state 453
    '['                               shift, and go to state 454
    '('                               shift, and go to state 455
    '$'                               shift, and go to state 456
    '@'                               shift, and go to state 457

    $default  reduce using rule 789 (optional_comma)

    string_builder          go to state 458
    expr_reader             go to state 459
    expr_call_pipe          go to state 460
    name_in_namespace       go to state 461
    expr_new                go to state 462
    expr_cast               go to state 463
    expr_type_decl          go to state 464
    expr_type_info          go to state 465
    block_or_lambda         go to state 466
    expr_full_block         go to state 467
    expr_numeric_const      go to state 468
    expr_named_call         go to state 469
    expr_method_call        go to state 470
    func_addr_expr          go to state 471
    expr_field              go to state 472
    expr_call               go to state 473
    expr                    go to state 1029
    expr_mtag               go to state 475
    basic_type_declaration  go to state 476
    make_decl               go to state 477
    make_struct_decl        go to state 478
    make_tuple_call         go to state 479
    make_dim_decl           go to state 480
    make_table_decl         go to state 481
    array_comprehension     go to state 482


State 831

  762 make_dim_decl: '[' expr_list optional_comma . ']'

    ']'  shift, and go to state 1030


State 832

  409 expr: '(' expr_list optional_comma . ')'

    ')'  shift, and go to state 1031


State 833

  345 func_addr_name: "$i" . '(' expr ')'

    '('  shift, and go to state 1032


State 834

  468 expr_mtag: '@' '@' "$c" . '(' expr ')'

    '('  shift, and go to state 1033


State 835

  349 func_addr_expr: '@' '@' '<' . $@13 type_declaration_no_options '>' $@14 func_addr_name
  352               | '@' '@' '<' . $@15 optional_function_argument_list optional_function_type '>' $@16 func_addr_name

    ':'       reduce using rule 350 ($@15)
    '>'       reduce using rule 350 ($@15)
    '('       reduce using rule 350 ($@15)
    $default  reduce using rule 347 ($@13)

    $@13  go to state 1034
    $@15  go to state 1035


State 836

  344 func_addr_name: name_in_namespace .

    $default  reduce using rule 344 (func_addr_name)


State 837

  346 func_addr_expr: '@' '@' func_addr_name .

    $default  reduce using rule 346 (func_addr_expr)


State 838

  363 expr_call: name_in_namespace '(' "uninitialized" . ')'
  365          | name_in_namespace '(' "uninitialized" . make_struct_single ')'

    "$f"    shift, and go to state 839
    "name"  shift, and go to state 1036
    ')'     shift, and go to state 1037

    make_struct_fields  go to state 844
    make_struct_single  go to state 1038


State 839

  730 make_struct_fields: "$f" . '(' expr ')' copy_or_move expr
  731                   | "$f" . '(' expr ')' ":=" expr

    '('  shift, and go to state 1039


State 840

  242 name_in_namespace: "name" .
  243                  | "name" . "::" "name"
  726 make_struct_fields: "name" . copy_or_move expr
  727                   | "name" . ":=" expr

    "<-"  shift, and go to state 927
    ":="  shift, and go to state 1040
    "::"  shift, and go to state 95
    '='   shift, and go to state 929

    $default  reduce using rule 242 (name_in_namespace)

    copy_or_move  go to state 1041


State 841

  340 expr_named_call: name_in_namespace '(' '[' . make_struct_fields ']' ')'
  762 make_dim_decl: '[' . expr_list optional_comma ']'
  790 array_comprehension: '[' . "for" '(' variable_name_with_pos_list "in" expr_list ')' "end of expression" expr array_comprehension_where ']'
  791                    | '[' . "iterator" "for" '(' variable_name_with_pos_list "in" expr_list ')' "end of expression" expr array_comprehension_where ']'

    "struct"                          shift, and go to state 409
    "class"                           shift, and go to state 410
    "for"                             shift, and go to state 636
    "true"                            shift, and go to state 411
    "false"                           shift, and go to state 412
    "new"                             shift, and go to state 413
    "typeinfo"                        shift, and go to state 414
    "type"                            shift, and go to state 415
    "array"                           shift, and go to state 416
    "null"                            shift, and go to state 417
    "table"                           shift, and go to state 418
    "deref"                           shift, and go to state 419
    "cast"                            shift, and go to state 420
    "upcast"                          shift, and go to state 421
    "iterator"                        shift, and go to state 637
    "addr"                            shift, and go to state 422
    "reinterpret"                     shift, and go to state 423
    "unsafe"                          shift, and go to state 424
    "fixed_array"                     shift, and go to state 425
    "default"                         shift, and go to state 426
    "bool"                            shift, and go to state 225
    "void"                            shift, and go to state 226
    "string"                          shift, and go to state 227
    "int"                             shift, and go to state 229
    "int2"                            shift, and go to state 230
    "int3"                            shift, and go to state 231
    "int4"                            shift, and go to state 232
    "uint"                            shift, and go to state 233
    "bitfield"                        shift, and go to state 427
    "uint2"                           shift, and go to state 235
    "uint3"                           shift, and go to state 236
    "uint4"                           shift, and go to state 237
    "float"                           shift, and go to state 238
    "float2"                          shift, and go to state 239
    "float3"                          shift, and go to state 240
    "float4"                          shift, and go to state 241
    "range"                           shift, and go to state 242
    "urange"                          shift, and go to state 243
    "range64"                         shift, and go to state 244
    "urange64"                        shift, and go to state 245
    "int64"                           shift, and go to state 247
    "uint64"                          shift, and go to state 248
    "double"                          shift, and go to state 249
    "int8"                            shift, and go to state 252
    "uint8"                           shift, and go to state 253
    "int16"                           shift, and go to state 254
    "uint16"                          shift, and go to state 255
    "tuple"                           shift, and go to state 428
    "variant"                         shift, and go to state 429
    "generator"                       shift, and go to state 430
    "++"                              shift, and go to state 431
    "--"                              shift, and go to state 432
    "::"                              shift, and go to state 55
    "$$"                              shift, and go to state 433
    "$i"                              shift, and go to state 434
    "$v"                              shift, and go to state 435
    "$b"                              shift, and go to state 436
    "$a"                              shift, and go to state 437
    "$c"                              shift, and go to state 438
    "$f"                              shift, and go to state 839
    "..."                             shift, and go to state 439
    "integer constant"                shift, and go to state 440
    "long integer constant"           shift, and go to state 441
    "unsigned integer constant"       shift, and go to state 442
    "unsigned long integer constant"  shift, and go to state 443
    "unsigned int8 constant"          shift, and go to state 444
    "floating point constant"         shift, and go to state 445
    "double constant"                 shift, and go to state 446
    "name"                            shift, and go to state 840
    "start of the string"             shift, and go to state 447
    "begin of code block"             shift, and go to state 448
    '-'                               shift, and go to state 449
    '+'                               shift, and go to state 450
    '*'                               shift, and go to state 451
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 452
    '!'                               shift, and go to state 453
    '['                               shift, and go to state 454
    '('                               shift, and go to state 455
    '$'                               shift, and go to state 456
    '@'                               shift, and go to state 457

    string_builder          go to state 458
    expr_reader             go to state 459
    expr_call_pipe          go to state 460
    name_in_namespace       go to state 461
    expr_new                go to state 462
    expr_cast               go to state 463
    expr_type_decl          go to state 464
    expr_type_info          go to state 465
    expr_list               go to state 638
    block_or_lambda         go to state 466
    expr_full_block         go to state 467
    expr_numeric_const      go to state 468
    expr_named_call         go to state 469
    expr_method_call        go to state 470
    func_addr_expr          go to state 471
    expr_field              go to state 472
    expr_call               go to state 473
    expr                    go to state 639
    expr_mtag               go to state 475
    basic_type_declaration  go to state 476
    make_decl               go to state 477
    make_struct_fields      go to state 1042
    make_struct_decl        go to state 478
    make_tuple_call         go to state 479
    make_dim_decl           go to state 480
    make_table_decl         go to state 481
    array_comprehension     go to state 482


State 842

  362 expr_call: name_in_namespace '(' ')' .

    $default  reduce using rule 362 (expr_call)


State 843

  295 expr_list: expr_list . ',' expr
  341 expr_named_call: name_in_namespace '(' expr_list . ',' '[' make_struct_fields ']' ')'
  366 expr_call: name_in_namespace '(' expr_list . ')'

    ','  shift, and go to state 1043
    ')'  shift, and go to state 1044


State 844

  728 make_struct_fields: make_struct_fields . ',' "name" copy_or_move expr
  729                   | make_struct_fields . ',' "name" ":=" expr
  732                   | make_struct_fields . ',' "$f" '(' expr ')' copy_or_move expr
  733                   | make_struct_fields . ',' "$f" '(' expr ')' ":=" expr
  735 make_struct_single: make_struct_fields .

    ','  shift, and go to state 1045

    $default  reduce using rule 735 (make_struct_single)


State 845

  364 expr_call: name_in_namespace '(' make_struct_single . ')'

    ')'  shift, and go to state 1046


State 846

  310 optional_capture_list: "capture" . '(' capture_list ')'

    '('  shift, and go to state 1047


State 847

  311 expr_full_block: block_or_lambda optional_annotation_list optional_capture_list . optional_function_argument_list optional_function_type block_or_simple_block

    '('  shift, and go to state 324

    $default  reduce using rule 115 (optional_function_argument_list)

    optional_function_argument_list  go to state 1048


State 848

  234 expressions: expressions . expression_any
  235            | expressions . error
  313 expr_full_block_assumed_piped: "begin of code block" expressions . "end of code block"

    error                             shift, and go to state 531
    "struct"                          shift, and go to state 409
    "class"                           shift, and go to state 410
    "let"                             shift, and go to state 3
    "while"                           shift, and go to state 532
    "if"                              shift, and go to state 533
    "static_if"                       shift, and go to state 534
    "for"                             shift, and go to state 535
    "true"                            shift, and go to state 411
    "false"                           shift, and go to state 412
    "new"                             shift, and go to state 413
    "typeinfo"                        shift, and go to state 414
    "type"                            shift, and go to state 415
    "array"                           shift, and go to state 416
    "return"                          shift, and go to state 536
    "null"                            shift, and go to state 417
    "break"                           shift, and go to state 537
    "try"                             shift, and go to state 538
    "table"                           shift, and go to state 418
    "delete"                          shift, and go to state 539
    "deref"                           shift, and go to state 419
    "with"                            shift, and go to state 540
    "assume"                          shift, and go to state 541
    "cast"                            shift, and go to state 420
    "upcast"                          shift, and go to state 421
    "var"                             shift, and go to state 8
    "addr"                            shift, and go to state 422
    "continue"                        shift, and go to state 542
    "pass"                            shift, and go to state 543
    "reinterpret"                     shift, and go to state 423
    "label"                           shift, and go to state 544
    "goto"                            shift, and go to state 545
    "unsafe"                          shift, and go to state 546
    "fixed_array"                     shift, and go to state 425
    "default"                         shift, and go to state 426
    "bool"                            shift, and go to state 225
    "void"                            shift, and go to state 226
    "string"                          shift, and go to state 227
    "int"                             shift, and go to state 229
    "int2"                            shift, and go to state 230
    "int3"                            shift, and go to state 231
    "int4"                            shift, and go to state 232
    "uint"                            shift, and go to state 233
    "bitfield"                        shift, and go to state 427
    "uint2"                           shift, and go to state 235
    "uint3"                           shift, and go to state 236
    "uint4"                           shift, and go to state 237
    "float"                           shift, and go to state 238
    "float2"                          shift, and go to state 239
    "float3"                          shift, and go to state 240
    "float4"                          shift, and go to state 241
    "range"                           shift, and go to state 242
    "urange"                          shift, and go to state 243
    "range64"                         shift, and go to state 244
    "urange64"                        shift, and go to state 245
    "int64"                           shift, and go to state 247
    "uint64"                          shift, and go to state 248
    "double"                          shift, and go to state 249
    "int8"                            shift, and go to state 252
    "uint8"                           shift, and go to state 253
    "int16"                           shift, and go to state 254
    "uint16"                          shift, and go to state 255
    "tuple"                           shift, and go to state 428
    "variant"                         shift, and go to state 429
    "generator"                       shift, and go to state 430
    "yield"                           shift, and go to state 547
    "++"                              shift, and go to state 431
    "--"                              shift, and go to state 432
    "::"                              shift, and go to state 55
    "$$"                              shift, and go to state 433
    "$i"                              shift, and go to state 434
    "$v"                              shift, and go to state 435
    "$b"                              shift, and go to state 436
    "$a"                              shift, and go to state 437
    "$c"                              shift, and go to state 438
    "..."                             shift, and go to state 439
    "integer constant"                shift, and go to state 440
    "long integer constant"           shift, and go to state 441
    "unsigned integer constant"       shift, and go to state 442
    "unsigned long integer constant"  shift, and go to state 443
    "unsigned int8 constant"          shift, and go to state 444
    "floating point constant"         shift, and go to state 445
    "double constant"                 shift, and go to state 446
    "name"                            shift, and go to state 56
    "start of the string"             shift, and go to state 447
    "begin of code block"             shift, and go to state 448
    "end of code block"               shift, and go to state 1049
    "end of expression"               shift, and go to state 549
    '-'                               shift, and go to state 449
    '+'                               shift, and go to state 450
    '*'                               shift, and go to state 451
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 452
    '!'                               shift, and go to state 453
    '['                               shift, and go to state 454
    '('                               shift, and go to state 455
    '$'                               shift, and go to state 456
    '@'                               shift, and go to state 457

    string_builder           go to state 458
    expr_reader              go to state 459
    expression_label         go to state 550
    expression_goto          go to state 551
    if_or_static_if          go to state 552
    expression_if_one_liner  go to state 553
    expression_if_then_else  go to state 554
    expression_for_loop      go to state 555
    expression_unsafe        go to state 556
    expression_while_loop    go to state 557
    expression_with          go to state 558
    expression_with_alias    go to state 559
    expr_call_pipe           go to state 460
    expression_any           go to state 560
    name_in_namespace        go to state 461
    expression_delete        go to state 561
    expr_new                 go to state 462
    expression_break         go to state 562
    expression_continue      go to state 563
    expression_return        go to state 564
    expression_yield         go to state 565
    expression_try_catch     go to state 566
    kwd_let                  go to state 567
    expression_let           go to state 568
    expr_cast                go to state 463
    expr_type_decl           go to state 464
    expr_type_info           go to state 465
    block_or_lambda          go to state 466
    expr_full_block          go to state 467
    expr_numeric_const       go to state 468
    expr_assign              go to state 569
    expr_named_call          go to state 469
    expr_method_call         go to state 470
    func_addr_expr           go to state 471
    expr_field               go to state 472
    expr_call                go to state 473
    expr                     go to state 570
    expr_mtag                go to state 475
    basic_type_declaration   go to state 476
    make_decl                go to state 477
    make_struct_decl         go to state 478
    make_tuple_call          go to state 479
    make_dim_decl            go to state 480
    make_table_decl          go to state 481
    array_comprehension      go to state 482


State 849

  301 block_or_lambda: '@' '@' .

    $default  reduce using rule 301 (block_or_lambda)


State 850

  312 expr_full_block_assumed_piped: block_or_lambda optional_annotation_list . optional_capture_list optional_function_argument_list optional_function_type expression_block

    "capture"  shift, and go to state 846

    $default  reduce using rule 309 (optional_capture_list)

    optional_capture_list  go to state 1050


State 851

  428 expr: expr "is" "type" . '<' $@19 type_declaration_no_options '>' $@20

    '<'  shift, and go to state 1051


State 852

  467 expr_mtag: expr "is" "$f" . '(' expr ')'

    '('  shift, and go to state 1052


State 853

  430 expr: expr "is" "name" .

    $default  reduce using rule 430 (expr)


State 854

  429 expr: expr "is" basic_type_declaration .

    $default  reduce using rule 429 (expr)


State 855

  434 expr: expr "as" "type" . '<' $@21 type_declaration '>' $@22

    '<'  shift, and go to state 1053


State 856

  465 expr_mtag: expr "as" "$f" . '(' expr ')'

    '('  shift, and go to state 1054


State 857

  431 expr: expr "as" "name" .

    $default  reduce using rule 431 (expr)


State 858

  435 expr: expr "as" basic_type_declaration .

    $default  reduce using rule 435 (expr)


State 859

  342 expr_method_call: expr . "->" "name" '(' ')'
  343                 | expr . "->" "name" '(' expr_list ')'
  353 expr_field: expr . '.' "name"
  354           | expr . '.' '.' "name"
  355           | expr . '.' "name" '(' ')'
  356           | expr . '.' "name" '(' expr_list ')'
  357           | expr . '.' basic_type_declaration '(' ')'
  358           | expr . '.' basic_type_declaration '(' expr_list ')'
  361           | expr . '.' $@17 error $@18
  383 expr: expr . "<<" expr
  383     | expr "<<" expr .
  384     | expr . ">>" expr
  385     | expr . "<<<" expr
  386     | expr . ">>>" expr
  387     | expr . '+' expr
  388     | expr . '-' expr
  389     | expr . '*' expr
  390     | expr . '/' expr
  391     | expr . '%' expr
  392     | expr . '<' expr
  393     | expr . '>' expr
  394     | expr . "==" expr
  395     | expr . "!=" expr
  396     | expr . "<=" expr
  397     | expr . ">=" expr
  398     | expr . '&' expr
  399     | expr . '|' expr
  400     | expr . '^' expr
  401     | expr . "&&" expr
  402     | expr . "||" expr
  403     | expr . "^^" expr
  404     | expr . ".." expr
  407     | expr . "++"
  408     | expr . "--"
  410     | expr . '[' expr ']'
  411     | expr . '.' '[' expr ']'
  412     | expr . "?[" expr ']'
  413     | expr . '.' "?[" expr ']'
  414     | expr . "?." "name"
  415     | expr . '.' "?." "name"
  424     | expr . "??" expr
  425     | expr . '?' expr ':' expr
  428     | expr . "is" "type" '<' $@19 type_declaration_no_options '>' $@20
  429     | expr . "is" basic_type_declaration
  430     | expr . "is" "name"
  431     | expr . "as" "name"
  434     | expr . "as" "type" '<' $@21 type_declaration '>' $@22
  435     | expr . "as" basic_type_declaration
  436     | expr . '?' "as" "name"
  439     | expr . '?' "as" "type" '<' $@23 type_declaration '>' $@24
  440     | expr . '?' "as" basic_type_declaration
  448     | expr . "<|" expr
  449     | expr . "|>" expr
  450     | expr . "|>" basic_type_declaration
  461 expr_mtag: expr . '.' "$f" '(' expr ')'
  462          | expr . "?." "$f" '(' expr ')'
  463          | expr . '.' '.' "$f" '(' expr ')'
  464          | expr . '.' "?." "$f" '(' expr ')'
  465          | expr . "as" "$f" '(' expr ')'
  466          | expr . '?' "as" "$f" '(' expr ')'
  467          | expr . "is" "$f" '(' expr ')'

    "is"  shift, and go to state 648
    "as"  shift, and go to state 649
    "++"  shift, and go to state 652
    "--"  shift, and go to state 653
    "->"  shift, and go to state 658
    "??"  shift, and go to state 659
    "?."  shift, and go to state 660
    "?["  shift, and go to state 661
    "<|"  shift, and go to state 662
    "|>"  shift, and go to state 663
    '-'   shift, and go to state 676
    '+'   shift, and go to state 677
    '*'   shift, and go to state 678
    '/'   shift, and go to state 679
    '%'   shift, and go to state 680
    '.'   shift, and go to state 681
    '['   shift, and go to state 682

    $default  reduce using rule 383 (expr)


State 860

  342 expr_method_call: expr . "->" "name" '(' ')'
  343                 | expr . "->" "name" '(' expr_list ')'
  353 expr_field: expr . '.' "name"
  354           | expr . '.' '.' "name"
  355           | expr . '.' "name" '(' ')'
  356           | expr . '.' "name" '(' expr_list ')'
  357           | expr . '.' basic_type_declaration '(' ')'
  358           | expr . '.' basic_type_declaration '(' expr_list ')'
  361           | expr . '.' $@17 error $@18
  383 expr: expr . "<<" expr
  384     | expr . ">>" expr
  384     | expr ">>" expr .
  385     | expr . "<<<" expr
  386     | expr . ">>>" expr
  387     | expr . '+' expr
  388     | expr . '-' expr
  389     | expr . '*' expr
  390     | expr . '/' expr
  391     | expr . '%' expr
  392     | expr . '<' expr
  393     | expr . '>' expr
  394     | expr . "==" expr
  395     | expr . "!=" expr
  396     | expr . "<=" expr
  397     | expr . ">=" expr
  398     | expr . '&' expr
  399     | expr . '|' expr
  400     | expr . '^' expr
  401     | expr . "&&" expr
  402     | expr . "||" expr
  403     | expr . "^^" expr
  404     | expr . ".." expr
  407     | expr . "++"
  408     | expr . "--"
  410     | expr . '[' expr ']'
  411     | expr . '.' '[' expr ']'
  412     | expr . "?[" expr ']'
  413     | expr . '.' "?[" expr ']'
  414     | expr . "?." "name"
  415     | expr . '.' "?." "name"
  424     | expr . "??" expr
  425     | expr . '?' expr ':' expr
  428     | expr . "is" "type" '<' $@19 type_declaration_no_options '>' $@20
  429     | expr . "is" basic_type_declaration
  430     | expr . "is" "name"
  431     | expr . "as" "name"
  434     | expr . "as" "type" '<' $@21 type_declaration '>' $@22
  435     | expr . "as" basic_type_declaration
  436     | expr . '?' "as" "name"
  439     | expr . '?' "as" "type" '<' $@23 type_declaration '>' $@24
  440     | expr . '?' "as" basic_type_declaration
  448     | expr . "<|" expr
  449     | expr . "|>" expr
  450     | expr . "|>" basic_type_declaration
  461 expr_mtag: expr . '.' "$f" '(' expr ')'
  462          | expr . "?." "$f" '(' expr ')'
  463          | expr . '.' '.' "$f" '(' expr ')'
  464          | expr . '.' "?." "$f" '(' expr ')'
  465          | expr . "as" "$f" '(' expr ')'
  466          | expr . '?' "as" "$f" '(' expr ')'
  467          | expr . "is" "$f" '(' expr ')'

    "is"  shift, and go to state 648
    "as"  shift, and go to state 649
    "++"  shift, and go to state 652
    "--"  shift, and go to state 653
    "->"  shift, and go to state 658
    "??"  shift, and go to state 659
    "?."  shift, and go to state 660
    "?["  shift, and go to state 661
    "<|"  shift, and go to state 662
    "|>"  shift, and go to state 663
    '-'   shift, and go to state 676
    '+'   shift, and go to state 677
    '*'   shift, and go to state 678
    '/'   shift, and go to state 679
    '%'   shift, and go to state 680
    '.'   shift, and go to state 681
    '['   shift, and go to state 682

    $default  reduce using rule 384 (expr)


State 861

  342 expr_method_call: expr . "->" "name" '(' ')'
  343                 | expr . "->" "name" '(' expr_list ')'
  353 expr_field: expr . '.' "name"
  354           | expr . '.' '.' "name"
  355           | expr . '.' "name" '(' ')'
  356           | expr . '.' "name" '(' expr_list ')'
  357           | expr . '.' basic_type_declaration '(' ')'
  358           | expr . '.' basic_type_declaration '(' expr_list ')'
  361           | expr . '.' $@17 error $@18
  383 expr: expr . "<<" expr
  384     | expr . ">>" expr
  385     | expr . "<<<" expr
  386     | expr . ">>>" expr
  387     | expr . '+' expr
  388     | expr . '-' expr
  389     | expr . '*' expr
  390     | expr . '/' expr
  391     | expr . '%' expr
  392     | expr . '<' expr
  393     | expr . '>' expr
  394     | expr . "==" expr
  395     | expr . "!=" expr
  396     | expr . "<=" expr
  396     | expr "<=" expr .
  397     | expr . ">=" expr
  398     | expr . '&' expr
  399     | expr . '|' expr
  400     | expr . '^' expr
  401     | expr . "&&" expr
  402     | expr . "||" expr
  403     | expr . "^^" expr
  404     | expr . ".." expr
  407     | expr . "++"
  408     | expr . "--"
  410     | expr . '[' expr ']'
  411     | expr . '.' '[' expr ']'
  412     | expr . "?[" expr ']'
  413     | expr . '.' "?[" expr ']'
  414     | expr . "?." "name"
  415     | expr . '.' "?." "name"
  424     | expr . "??" expr
  425     | expr . '?' expr ':' expr
  428     | expr . "is" "type" '<' $@19 type_declaration_no_options '>' $@20
  429     | expr . "is" basic_type_declaration
  430     | expr . "is" "name"
  431     | expr . "as" "name"
  434     | expr . "as" "type" '<' $@21 type_declaration '>' $@22
  435     | expr . "as" basic_type_declaration
  436     | expr . '?' "as" "name"
  439     | expr . '?' "as" "type" '<' $@23 type_declaration '>' $@24
  440     | expr . '?' "as" basic_type_declaration
  448     | expr . "<|" expr
  449     | expr . "|>" expr
  450     | expr . "|>" basic_type_declaration
  461 expr_mtag: expr . '.' "$f" '(' expr ')'
  462          | expr . "?." "$f" '(' expr ')'
  463          | expr . '.' '.' "$f" '(' expr ')'
  464          | expr . '.' "?." "$f" '(' expr ')'
  465          | expr . "as" "$f" '(' expr ')'
  466          | expr . '?' "as" "$f" '(' expr ')'
  467          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 648
    "as"   shift, and go to state 649
    "<<"   shift, and go to state 650
    ">>"   shift, and go to state 651
    "++"   shift, and go to state 652
    "--"   shift, and go to state 653
    "->"   shift, and go to state 658
    "??"   shift, and go to state 659
    "?."   shift, and go to state 660
    "?["   shift, and go to state 661
    "<|"   shift, and go to state 662
    "|>"   shift, and go to state 663
    "<<<"  shift, and go to state 664
    ">>>"  shift, and go to state 665
    '-'    shift, and go to state 676
    '+'    shift, and go to state 677
    '*'    shift, and go to state 678
    '/'    shift, and go to state 679
    '%'    shift, and go to state 680
    '.'    shift, and go to state 681
    '['    shift, and go to state 682

    $default  reduce using rule 396 (expr)


State 862

  342 expr_method_call: expr . "->" "name" '(' ')'
  343                 | expr . "->" "name" '(' expr_list ')'
  353 expr_field: expr . '.' "name"
  354           | expr . '.' '.' "name"
  355           | expr . '.' "name" '(' ')'
  356           | expr . '.' "name" '(' expr_list ')'
  357           | expr . '.' basic_type_declaration '(' ')'
  358           | expr . '.' basic_type_declaration '(' expr_list ')'
  361           | expr . '.' $@17 error $@18
  383 expr: expr . "<<" expr
  384     | expr . ">>" expr
  385     | expr . "<<<" expr
  386     | expr . ">>>" expr
  387     | expr . '+' expr
  388     | expr . '-' expr
  389     | expr . '*' expr
  390     | expr . '/' expr
  391     | expr . '%' expr
  392     | expr . '<' expr
  393     | expr . '>' expr
  394     | expr . "==" expr
  395     | expr . "!=" expr
  396     | expr . "<=" expr
  397     | expr . ">=" expr
  397     | expr ">=" expr .
  398     | expr . '&' expr
  399     | expr . '|' expr
  400     | expr . '^' expr
  401     | expr . "&&" expr
  402     | expr . "||" expr
  403     | expr . "^^" expr
  404     | expr . ".." expr
  407     | expr . "++"
  408     | expr . "--"
  410     | expr . '[' expr ']'
  411     | expr . '.' '[' expr ']'
  412     | expr . "?[" expr ']'
  413     | expr . '.' "?[" expr ']'
  414     | expr . "?." "name"
  415     | expr . '.' "?." "name"
  424     | expr . "??" expr
  425     | expr . '?' expr ':' expr
  428     | expr . "is" "type" '<' $@19 type_declaration_no_options '>' $@20
  429     | expr . "is" basic_type_declaration
  430     | expr . "is" "name"
  431     | expr . "as" "name"
  434     | expr . "as" "type" '<' $@21 type_declaration '>' $@22
  435     | expr . "as" basic_type_declaration
  436     | expr . '?' "as" "name"
  439     | expr . '?' "as" "type" '<' $@23 type_declaration '>' $@24
  440     | expr . '?' "as" basic_type_declaration
  448     | expr . "<|" expr
  449     | expr . "|>" expr
  450     | expr . "|>" basic_type_declaration
  461 expr_mtag: expr . '.' "$f" '(' expr ')'
  462          | expr . "?." "$f" '(' expr ')'
  463          | expr . '.' '.' "$f" '(' expr ')'
  464          | expr . '.' "?." "$f" '(' expr ')'
  465          | expr . "as" "$f" '(' expr ')'
  466          | expr . '?' "as" "$f" '(' expr ')'
  467          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 648
    "as"   shift, and go to state 649
    "<<"   shift, and go to state 650
    ">>"   shift, and go to state 651
    "++"   shift, and go to state 652
    "--"   shift, and go to state 653
    "->"   shift, and go to state 658
    "??"   shift, and go to state 659
    "?."   shift, and go to state 660
    "?["   shift, and go to state 661
    "<|"   shift, and go to state 662
    "|>"   shift, and go to state 663
    "<<<"  shift, and go to state 664
    ">>>"  shift, and go to state 665
    '-'    shift, and go to state 676
    '+'    shift, and go to state 677
    '*'    shift, and go to state 678
    '/'    shift, and go to state 679
    '%'    shift, and go to state 680
    '.'    shift, and go to state 681
    '['    shift, and go to state 682

    $default  reduce using rule 397 (expr)


State 863

  342 expr_method_call: expr . "->" "name" '(' ')'
  343                 | expr . "->" "name" '(' expr_list ')'
  353 expr_field: expr . '.' "name"
  354           | expr . '.' '.' "name"
  355           | expr . '.' "name" '(' ')'
  356           | expr . '.' "name" '(' expr_list ')'
  357           | expr . '.' basic_type_declaration '(' ')'
  358           | expr . '.' basic_type_declaration '(' expr_list ')'
  361           | expr . '.' $@17 error $@18
  383 expr: expr . "<<" expr
  384     | expr . ">>" expr
  385     | expr . "<<<" expr
  386     | expr . ">>>" expr
  387     | expr . '+' expr
  388     | expr . '-' expr
  389     | expr . '*' expr
  390     | expr . '/' expr
  391     | expr . '%' expr
  392     | expr . '<' expr
  393     | expr . '>' expr
  394     | expr . "==" expr
  394     | expr "==" expr .
  395     | expr . "!=" expr
  396     | expr . "<=" expr
  397     | expr . ">=" expr
  398     | expr . '&' expr
  399     | expr . '|' expr
  400     | expr . '^' expr
  401     | expr . "&&" expr
  402     | expr . "||" expr
  403     | expr . "^^" expr
  404     | expr . ".." expr
  407     | expr . "++"
  408     | expr . "--"
  410     | expr . '[' expr ']'
  411     | expr . '.' '[' expr ']'
  412     | expr . "?[" expr ']'
  413     | expr . '.' "?[" expr ']'
  414     | expr . "?." "name"
  415     | expr . '.' "?." "name"
  424     | expr . "??" expr
  425     | expr . '?' expr ':' expr
  428     | expr . "is" "type" '<' $@19 type_declaration_no_options '>' $@20
  429     | expr . "is" basic_type_declaration
  430     | expr . "is" "name"
  431     | expr . "as" "name"
  434     | expr . "as" "type" '<' $@21 type_declaration '>' $@22
  435     | expr . "as" basic_type_declaration
  436     | expr . '?' "as" "name"
  439     | expr . '?' "as" "type" '<' $@23 type_declaration '>' $@24
  440     | expr . '?' "as" basic_type_declaration
  448     | expr . "<|" expr
  449     | expr . "|>" expr
  450     | expr . "|>" basic_type_declaration
  461 expr_mtag: expr . '.' "$f" '(' expr ')'
  462          | expr . "?." "$f" '(' expr ')'
  463          | expr . '.' '.' "$f" '(' expr ')'
  464          | expr . '.' "?." "$f" '(' expr ')'
  465          | expr . "as" "$f" '(' expr ')'
  466          | expr . '?' "as" "$f" '(' expr ')'
  467          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 648
    "as"   shift, and go to state 649
    "<<"   shift, and go to state 650
    ">>"   shift, and go to state 651
    "++"   shift, and go to state 652
    "--"   shift, and go to state 653
    "<="   shift, and go to state 654
    ">="   shift, and go to state 655
    "->"   shift, and go to state 658
    "??"   shift, and go to state 659
    "?."   shift, and go to state 660
    "?["   shift, and go to state 661
    "<|"   shift, and go to state 662
    "|>"   shift, and go to state 663
    "<<<"  shift, and go to state 664
    ">>>"  shift, and go to state 665
    '<'    shift, and go to state 674
    '>'    shift, and go to state 675
    '-'    shift, and go to state 676
    '+'    shift, and go to state 677
    '*'    shift, and go to state 678
    '/'    shift, and go to state 679
    '%'    shift, and go to state 680
    '.'    shift, and go to state 681
    '['    shift, and go to state 682

    $default  reduce using rule 394 (expr)


State 864

  342 expr_method_call: expr . "->" "name" '(' ')'
  343                 | expr . "->" "name" '(' expr_list ')'
  353 expr_field: expr . '.' "name"
  354           | expr . '.' '.' "name"
  355           | expr . '.' "name" '(' ')'
  356           | expr . '.' "name" '(' expr_list ')'
  357           | expr . '.' basic_type_declaration '(' ')'
  358           | expr . '.' basic_type_declaration '(' expr_list ')'
  361           | expr . '.' $@17 error $@18
  383 expr: expr . "<<" expr
  384     | expr . ">>" expr
  385     | expr . "<<<" expr
  386     | expr . ">>>" expr
  387     | expr . '+' expr
  388     | expr . '-' expr
  389     | expr . '*' expr
  390     | expr . '/' expr
  391     | expr . '%' expr
  392     | expr . '<' expr
  393     | expr . '>' expr
  394     | expr . "==" expr
  395     | expr . "!=" expr
  395     | expr "!=" expr .
  396     | expr . "<=" expr
  397     | expr . ">=" expr
  398     | expr . '&' expr
  399     | expr . '|' expr
  400     | expr . '^' expr
  401     | expr . "&&" expr
  402     | expr . "||" expr
  403     | expr . "^^" expr
  404     | expr . ".." expr
  407     | expr . "++"
  408     | expr . "--"
  410     | expr . '[' expr ']'
  411     | expr . '.' '[' expr ']'
  412     | expr . "?[" expr ']'
  413     | expr . '.' "?[" expr ']'
  414     | expr . "?." "name"
  415     | expr . '.' "?." "name"
  424     | expr . "??" expr
  425     | expr . '?' expr ':' expr
  428     | expr . "is" "type" '<' $@19 type_declaration_no_options '>' $@20
  429     | expr . "is" basic_type_declaration
  430     | expr . "is" "name"
  431     | expr . "as" "name"
  434     | expr . "as" "type" '<' $@21 type_declaration '>' $@22
  435     | expr . "as" basic_type_declaration
  436     | expr . '?' "as" "name"
  439     | expr . '?' "as" "type" '<' $@23 type_declaration '>' $@24
  440     | expr . '?' "as" basic_type_declaration
  448     | expr . "<|" expr
  449     | expr . "|>" expr
  450     | expr . "|>" basic_type_declaration
  461 expr_mtag: expr . '.' "$f" '(' expr ')'
  462          | expr . "?." "$f" '(' expr ')'
  463          | expr . '.' '.' "$f" '(' expr ')'
  464          | expr . '.' "?." "$f" '(' expr ')'
  465          | expr . "as" "$f" '(' expr ')'
  466          | expr . '?' "as" "$f" '(' expr ')'
  467          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 648
    "as"   shift, and go to state 649
    "<<"   shift, and go to state 650
    ">>"   shift, and go to state 651
    "++"   shift, and go to state 652
    "--"   shift, and go to state 653
    "<="   shift, and go to state 654
    ">="   shift, and go to state 655
    "->"   shift, and go to state 658
    "??"   shift, and go to state 659
    "?."   shift, and go to state 660
    "?["   shift, and go to state 661
    "<|"   shift, and go to state 662
    "|>"   shift, and go to state 663
    "<<<"  shift, and go to state 664
    ">>>"  shift, and go to state 665
    '<'    shift, and go to state 674
    '>'    shift, and go to state 675
    '-'    shift, and go to state 676
    '+'    shift, and go to state 677
    '*'    shift, and go to state 678
    '/'    shift, and go to state 679
    '%'    shift, and go to state 680
    '.'    shift, and go to state 681
    '['    shift, and go to state 682

    $default  reduce using rule 395 (expr)


State 865

  342 expr_method_call: expr "->" "name" . '(' ')'
  343                 | expr "->" "name" . '(' expr_list ')'

    '('  shift, and go to state 1055


State 866

  342 expr_method_call: expr . "->" "name" '(' ')'
  343                 | expr . "->" "name" '(' expr_list ')'
  353 expr_field: expr . '.' "name"
  354           | expr . '.' '.' "name"
  355           | expr . '.' "name" '(' ')'
  356           | expr . '.' "name" '(' expr_list ')'
  357           | expr . '.' basic_type_declaration '(' ')'
  358           | expr . '.' basic_type_declaration '(' expr_list ')'
  361           | expr . '.' $@17 error $@18
  383 expr: expr . "<<" expr
  384     | expr . ">>" expr
  385     | expr . "<<<" expr
  386     | expr . ">>>" expr
  387     | expr . '+' expr
  388     | expr . '-' expr
  389     | expr . '*' expr
  390     | expr . '/' expr
  391     | expr . '%' expr
  392     | expr . '<' expr
  393     | expr . '>' expr
  394     | expr . "==" expr
  395     | expr . "!=" expr
  396     | expr . "<=" expr
  397     | expr . ">=" expr
  398     | expr . '&' expr
  399     | expr . '|' expr
  400     | expr . '^' expr
  401     | expr . "&&" expr
  402     | expr . "||" expr
  403     | expr . "^^" expr
  404     | expr . ".." expr
  407     | expr . "++"
  408     | expr . "--"
  410     | expr . '[' expr ']'
  411     | expr . '.' '[' expr ']'
  412     | expr . "?[" expr ']'
  413     | expr . '.' "?[" expr ']'
  414     | expr . "?." "name"
  415     | expr . '.' "?." "name"
  424     | expr . "??" expr
  424     | expr "??" expr .
  425     | expr . '?' expr ':' expr
  428     | expr . "is" "type" '<' $@19 type_declaration_no_options '>' $@20
  429     | expr . "is" basic_type_declaration
  430     | expr . "is" "name"
  431     | expr . "as" "name"
  434     | expr . "as" "type" '<' $@21 type_declaration '>' $@22
  435     | expr . "as" basic_type_declaration
  436     | expr . '?' "as" "name"
  439     | expr . '?' "as" "type" '<' $@23 type_declaration '>' $@24
  440     | expr . '?' "as" basic_type_declaration
  448     | expr . "<|" expr
  449     | expr . "|>" expr
  450     | expr . "|>" basic_type_declaration
  461 expr_mtag: expr . '.' "$f" '(' expr ')'
  462          | expr . "?." "$f" '(' expr ')'
  463          | expr . '.' '.' "$f" '(' expr ')'
  464          | expr . '.' "?." "$f" '(' expr ')'
  465          | expr . "as" "$f" '(' expr ')'
  466          | expr . '?' "as" "$f" '(' expr ')'
  467          | expr . "is" "$f" '(' expr ')'

    "is"  shift, and go to state 648
    "as"  shift, and go to state 649
    "++"  shift, and go to state 652
    "--"  shift, and go to state 653
    "->"  shift, and go to state 658
    "??"  shift, and go to state 659
    "?."  shift, and go to state 660
    "?["  shift, and go to state 661
    "<|"  shift, and go to state 662
    "|>"  shift, and go to state 663
    '.'   shift, and go to state 681
    '['   shift, and go to state 682

    $default  reduce using rule 424 (expr)


State 867

  462 expr_mtag: expr "?." "$f" . '(' expr ')'

    '('  shift, and go to state 1056


State 868

  414 expr: expr "?." "name" .

    $default  reduce using rule 414 (expr)


State 869

  342 expr_method_call: expr . "->" "name" '(' ')'
  343                 | expr . "->" "name" '(' expr_list ')'
  353 expr_field: expr . '.' "name"
  354           | expr . '.' '.' "name"
  355           | expr . '.' "name" '(' ')'
  356           | expr . '.' "name" '(' expr_list ')'
  357           | expr . '.' basic_type_declaration '(' ')'
  358           | expr . '.' basic_type_declaration '(' expr_list ')'
  361           | expr . '.' $@17 error $@18
  383 expr: expr . "<<" expr
  384     | expr . ">>" expr
  385     | expr . "<<<" expr
  386     | expr . ">>>" expr
  387     | expr . '+' expr
  388     | expr . '-' expr
  389     | expr . '*' expr
  390     | expr . '/' expr
  391     | expr . '%' expr
  392     | expr . '<' expr
  393     | expr . '>' expr
  394     | expr . "==" expr
  395     | expr . "!=" expr
  396     | expr . "<=" expr
  397     | expr . ">=" expr
  398     | expr . '&' expr
  399     | expr . '|' expr
  400     | expr . '^' expr
  401     | expr . "&&" expr
  402     | expr . "||" expr
  403     | expr . "^^" expr
  404     | expr . ".." expr
  407     | expr . "++"
  408     | expr . "--"
  410     | expr . '[' expr ']'
  411     | expr . '.' '[' expr ']'
  412     | expr . "?[" expr ']'
  412     | expr "?[" expr . ']'
  413     | expr . '.' "?[" expr ']'
  414     | expr . "?." "name"
  415     | expr . '.' "?." "name"
  424     | expr . "??" expr
  425     | expr . '?' expr ':' expr
  428     | expr . "is" "type" '<' $@19 type_declaration_no_options '>' $@20
  429     | expr . "is" basic_type_declaration
  430     | expr . "is" "name"
  431     | expr . "as" "name"
  434     | expr . "as" "type" '<' $@21 type_declaration '>' $@22
  435     | expr . "as" basic_type_declaration
  436     | expr . '?' "as" "name"
  439     | expr . '?' "as" "type" '<' $@23 type_declaration '>' $@24
  440     | expr . '?' "as" basic_type_declaration
  448     | expr . "<|" expr
  449     | expr . "|>" expr
  450     | expr . "|>" basic_type_declaration
  461 expr_mtag: expr . '.' "$f" '(' expr ')'
  462          | expr . "?." "$f" '(' expr ')'
  463          | expr . '.' '.' "$f" '(' expr ')'
  464          | expr . '.' "?." "$f" '(' expr ')'
  465          | expr . "as" "$f" '(' expr ')'
  466          | expr . '?' "as" "$f" '(' expr ')'
  467          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 648
    "as"   shift, and go to state 649
    "<<"   shift, and go to state 650
    ">>"   shift, and go to state 651
    "++"   shift, and go to state 652
    "--"   shift, and go to state 653
    "<="   shift, and go to state 654
    ">="   shift, and go to state 655
    "=="   shift, and go to state 656
    "!="   shift, and go to state 657
    "->"   shift, and go to state 658
    "??"   shift, and go to state 659
    "?."   shift, and go to state 660
    "?["   shift, and go to state 661
    "<|"   shift, and go to state 662
    "|>"   shift, and go to state 663
    "<<<"  shift, and go to state 664
    ">>>"  shift, and go to state 665
    "&&"   shift, and go to state 666
    "||"   shift, and go to state 667
    "^^"   shift, and go to state 668
    ".."   shift, and go to state 669
    '?'    shift, and go to state 670
    '|'    shift, and go to state 671
    '^'    shift, and go to state 672
    '&'    shift, and go to state 673
    '<'    shift, and go to state 674
    '>'    shift, and go to state 675
    '-'    shift, and go to state 676
    '+'    shift, and go to state 677
    '*'    shift, and go to state 678
    '/'    shift, and go to state 679
    '%'    shift, and go to state 680
    '.'    shift, and go to state 681
    '['    shift, and go to state 682
    ']'    shift, and go to state 1057


State 870

  342 expr_method_call: expr . "->" "name" '(' ')'
  343                 | expr . "->" "name" '(' expr_list ')'
  353 expr_field: expr . '.' "name"
  354           | expr . '.' '.' "name"
  355           | expr . '.' "name" '(' ')'
  356           | expr . '.' "name" '(' expr_list ')'
  357           | expr . '.' basic_type_declaration '(' ')'
  358           | expr . '.' basic_type_declaration '(' expr_list ')'
  361           | expr . '.' $@17 error $@18
  383 expr: expr . "<<" expr
  384     | expr . ">>" expr
  385     | expr . "<<<" expr
  386     | expr . ">>>" expr
  387     | expr . '+' expr
  388     | expr . '-' expr
  389     | expr . '*' expr
  390     | expr . '/' expr
  391     | expr . '%' expr
  392     | expr . '<' expr
  393     | expr . '>' expr
  394     | expr . "==" expr
  395     | expr . "!=" expr
  396     | expr . "<=" expr
  397     | expr . ">=" expr
  398     | expr . '&' expr
  399     | expr . '|' expr
  400     | expr . '^' expr
  401     | expr . "&&" expr
  402     | expr . "||" expr
  403     | expr . "^^" expr
  404     | expr . ".." expr
  407     | expr . "++"
  408     | expr . "--"
  410     | expr . '[' expr ']'
  411     | expr . '.' '[' expr ']'
  412     | expr . "?[" expr ']'
  413     | expr . '.' "?[" expr ']'
  414     | expr . "?." "name"
  415     | expr . '.' "?." "name"
  424     | expr . "??" expr
  425     | expr . '?' expr ':' expr
  428     | expr . "is" "type" '<' $@19 type_declaration_no_options '>' $@20
  429     | expr . "is" basic_type_declaration
  430     | expr . "is" "name"
  431     | expr . "as" "name"
  434     | expr . "as" "type" '<' $@21 type_declaration '>' $@22
  435     | expr . "as" basic_type_declaration
  436     | expr . '?' "as" "name"
  439     | expr . '?' "as" "type" '<' $@23 type_declaration '>' $@24
  440     | expr . '?' "as" basic_type_declaration
  448     | expr . "<|" expr
  448     | expr "<|" expr .
  449     | expr . "|>" expr
  450     | expr . "|>" basic_type_declaration
  461 expr_mtag: expr . '.' "$f" '(' expr ')'
  462          | expr . "?." "$f" '(' expr ')'
  463          | expr . '.' '.' "$f" '(' expr ')'
  464          | expr . '.' "?." "$f" '(' expr ')'
  465          | expr . "as" "$f" '(' expr ')'
  466          | expr . '?' "as" "$f" '(' expr ')'
  467          | expr . "is" "$f" '(' expr ')'

    "->"  shift, and go to state 658
    "?."  shift, and go to state 660
    "?["  shift, and go to state 661
    '.'   shift, and go to state 681
    '['   shift, and go to state 682

    $default  reduce using rule 448 (expr)


State 871

  342 expr_method_call: expr . "->" "name" '(' ')'
  343                 | expr . "->" "name" '(' expr_list ')'
  353 expr_field: expr . '.' "name"
  354           | expr . '.' '.' "name"
  355           | expr . '.' "name" '(' ')'
  356           | expr . '.' "name" '(' expr_list ')'
  357           | expr . '.' basic_type_declaration '(' ')'
  358           | expr . '.' basic_type_declaration '(' expr_list ')'
  361           | expr . '.' $@17 error $@18
  383 expr: expr . "<<" expr
  384     | expr . ">>" expr
  385     | expr . "<<<" expr
  386     | expr . ">>>" expr
  387     | expr . '+' expr
  388     | expr . '-' expr
  389     | expr . '*' expr
  390     | expr . '/' expr
  391     | expr . '%' expr
  392     | expr . '<' expr
  393     | expr . '>' expr
  394     | expr . "==" expr
  395     | expr . "!=" expr
  396     | expr . "<=" expr
  397     | expr . ">=" expr
  398     | expr . '&' expr
  399     | expr . '|' expr
  400     | expr . '^' expr
  401     | expr . "&&" expr
  402     | expr . "||" expr
  403     | expr . "^^" expr
  404     | expr . ".." expr
  407     | expr . "++"
  408     | expr . "--"
  410     | expr . '[' expr ']'
  411     | expr . '.' '[' expr ']'
  412     | expr . "?[" expr ']'
  413     | expr . '.' "?[" expr ']'
  414     | expr . "?." "name"
  415     | expr . '.' "?." "name"
  424     | expr . "??" expr
  425     | expr . '?' expr ':' expr
  428     | expr . "is" "type" '<' $@19 type_declaration_no_options '>' $@20
  429     | expr . "is" basic_type_declaration
  430     | expr . "is" "name"
  431     | expr . "as" "name"
  434     | expr . "as" "type" '<' $@21 type_declaration '>' $@22
  435     | expr . "as" basic_type_declaration
  436     | expr . '?' "as" "name"
  439     | expr . '?' "as" "type" '<' $@23 type_declaration '>' $@24
  440     | expr . '?' "as" basic_type_declaration
  448     | expr . "<|" expr
  449     | expr . "|>" expr
  449     | expr "|>" expr .
  450     | expr . "|>" basic_type_declaration
  461 expr_mtag: expr . '.' "$f" '(' expr ')'
  462          | expr . "?." "$f" '(' expr ')'
  463          | expr . '.' '.' "$f" '(' expr ')'
  464          | expr . '.' "?." "$f" '(' expr ')'
  465          | expr . "as" "$f" '(' expr ')'
  466          | expr . '?' "as" "$f" '(' expr ')'
  467          | expr . "is" "$f" '(' expr ')'

    "->"  shift, and go to state 658
    "?."  shift, and go to state 660
    "?["  shift, and go to state 661
    '.'   shift, and go to state 681
    '['   shift, and go to state 682

    $default  reduce using rule 449 (expr)


State 872

  367 expr_call: basic_type_declaration . '(' ')'
  368          | basic_type_declaration . '(' expr_list ')'
  450 expr: expr "|>" basic_type_declaration .

    '('  shift, and go to state 684

    $default  reduce using rule 450 (expr)


State 873

  342 expr_method_call: expr . "->" "name" '(' ')'
  343                 | expr . "->" "name" '(' expr_list ')'
  353 expr_field: expr . '.' "name"
  354           | expr . '.' '.' "name"
  355           | expr . '.' "name" '(' ')'
  356           | expr . '.' "name" '(' expr_list ')'
  357           | expr . '.' basic_type_declaration '(' ')'
  358           | expr . '.' basic_type_declaration '(' expr_list ')'
  361           | expr . '.' $@17 error $@18
  383 expr: expr . "<<" expr
  384     | expr . ">>" expr
  385     | expr . "<<<" expr
  385     | expr "<<<" expr .
  386     | expr . ">>>" expr
  387     | expr . '+' expr
  388     | expr . '-' expr
  389     | expr . '*' expr
  390     | expr . '/' expr
  391     | expr . '%' expr
  392     | expr . '<' expr
  393     | expr . '>' expr
  394     | expr . "==" expr
  395     | expr . "!=" expr
  396     | expr . "<=" expr
  397     | expr . ">=" expr
  398     | expr . '&' expr
  399     | expr . '|' expr
  400     | expr . '^' expr
  401     | expr . "&&" expr
  402     | expr . "||" expr
  403     | expr . "^^" expr
  404     | expr . ".." expr
  407     | expr . "++"
  408     | expr . "--"
  410     | expr . '[' expr ']'
  411     | expr . '.' '[' expr ']'
  412     | expr . "?[" expr ']'
  413     | expr . '.' "?[" expr ']'
  414     | expr . "?." "name"
  415     | expr . '.' "?." "name"
  424     | expr . "??" expr
  425     | expr . '?' expr ':' expr
  428     | expr . "is" "type" '<' $@19 type_declaration_no_options '>' $@20
  429     | expr . "is" basic_type_declaration
  430     | expr . "is" "name"
  431     | expr . "as" "name"
  434     | expr . "as" "type" '<' $@21 type_declaration '>' $@22
  435     | expr . "as" basic_type_declaration
  436     | expr . '?' "as" "name"
  439     | expr . '?' "as" "type" '<' $@23 type_declaration '>' $@24
  440     | expr . '?' "as" basic_type_declaration
  448     | expr . "<|" expr
  449     | expr . "|>" expr
  450     | expr . "|>" basic_type_declaration
  461 expr_mtag: expr . '.' "$f" '(' expr ')'
  462          | expr . "?." "$f" '(' expr ')'
  463          | expr . '.' '.' "$f" '(' expr ')'
  464          | expr . '.' "?." "$f" '(' expr ')'
  465          | expr . "as" "$f" '(' expr ')'
  466          | expr . '?' "as" "$f" '(' expr ')'
  467          | expr . "is" "$f" '(' expr ')'

    "is"  shift, and go to state 648
    "as"  shift, and go to state 649
    "++"  shift, and go to state 652
    "--"  shift, and go to state 653
    "->"  shift, and go to state 658
    "??"  shift, and go to state 659
    "?."  shift, and go to state 660
    "?["  shift, and go to state 661
    "<|"  shift, and go to state 662
    "|>"  shift, and go to state 663
    '-'   shift, and go to state 676
    '+'   shift, and go to state 677
    '*'   shift, and go to state 678
    '/'   shift, and go to state 679
    '%'   shift, and go to state 680
    '.'   shift, and go to state 681
    '['   shift, and go to state 682

    $default  reduce using rule 385 (expr)


State 874

  342 expr_method_call: expr . "->" "name" '(' ')'
  343                 | expr . "->" "name" '(' expr_list ')'
  353 expr_field: expr . '.' "name"
  354           | expr . '.' '.' "name"
  355           | expr . '.' "name" '(' ')'
  356           | expr . '.' "name" '(' expr_list ')'
  357           | expr . '.' basic_type_declaration '(' ')'
  358           | expr . '.' basic_type_declaration '(' expr_list ')'
  361           | expr . '.' $@17 error $@18
  383 expr: expr . "<<" expr
  384     | expr . ">>" expr
  385     | expr . "<<<" expr
  386     | expr . ">>>" expr
  386     | expr ">>>" expr .
  387     | expr . '+' expr
  388     | expr . '-' expr
  389     | expr . '*' expr
  390     | expr . '/' expr
  391     | expr . '%' expr
  392     | expr . '<' expr
  393     | expr . '>' expr
  394     | expr . "==" expr
  395     | expr . "!=" expr
  396     | expr . "<=" expr
  397     | expr . ">=" expr
  398     | expr . '&' expr
  399     | expr . '|' expr
  400     | expr . '^' expr
  401     | expr . "&&" expr
  402     | expr . "||" expr
  403     | expr . "^^" expr
  404     | expr . ".." expr
  407     | expr . "++"
  408     | expr . "--"
  410     | expr . '[' expr ']'
  411     | expr . '.' '[' expr ']'
  412     | expr . "?[" expr ']'
  413     | expr . '.' "?[" expr ']'
  414     | expr . "?." "name"
  415     | expr . '.' "?." "name"
  424     | expr . "??" expr
  425     | expr . '?' expr ':' expr
  428     | expr . "is" "type" '<' $@19 type_declaration_no_options '>' $@20
  429     | expr . "is" basic_type_declaration
  430     | expr . "is" "name"
  431     | expr . "as" "name"
  434     | expr . "as" "type" '<' $@21 type_declaration '>' $@22
  435     | expr . "as" basic_type_declaration
  436     | expr . '?' "as" "name"
  439     | expr . '?' "as" "type" '<' $@23 type_declaration '>' $@24
  440     | expr . '?' "as" basic_type_declaration
  448     | expr . "<|" expr
  449     | expr . "|>" expr
  450     | expr . "|>" basic_type_declaration
  461 expr_mtag: expr . '.' "$f" '(' expr ')'
  462          | expr . "?." "$f" '(' expr ')'
  463          | expr . '.' '.' "$f" '(' expr ')'
  464          | expr . '.' "?." "$f" '(' expr ')'
  465          | expr . "as" "$f" '(' expr ')'
  466          | expr . '?' "as" "$f" '(' expr ')'
  467          | expr . "is" "$f" '(' expr ')'

    "is"  shift, and go to state 648
    "as"  shift, and go to state 649
    "++"  shift, and go to state 652
    "--"  shift, and go to state 653
    "->"  shift, and go to state 658
    "??"  shift, and go to state 659
    "?."  shift, and go to state 660
    "?["  shift, and go to state 661
    "<|"  shift, and go to state 662
    "|>"  shift, and go to state 663
    '-'   shift, and go to state 676
    '+'   shift, and go to state 677
    '*'   shift, and go to state 678
    '/'   shift, and go to state 679
    '%'   shift, and go to state 680
    '.'   shift, and go to state 681
    '['   shift, and go to state 682

    $default  reduce using rule 386 (expr)


State 875

  342 expr_method_call: expr . "->" "name" '(' ')'
  343                 | expr . "->" "name" '(' expr_list ')'
  353 expr_field: expr . '.' "name"
  354           | expr . '.' '.' "name"
  355           | expr . '.' "name" '(' ')'
  356           | expr . '.' "name" '(' expr_list ')'
  357           | expr . '.' basic_type_declaration '(' ')'
  358           | expr . '.' basic_type_declaration '(' expr_list ')'
  361           | expr . '.' $@17 error $@18
  383 expr: expr . "<<" expr
  384     | expr . ">>" expr
  385     | expr . "<<<" expr
  386     | expr . ">>>" expr
  387     | expr . '+' expr
  388     | expr . '-' expr
  389     | expr . '*' expr
  390     | expr . '/' expr
  391     | expr . '%' expr
  392     | expr . '<' expr
  393     | expr . '>' expr
  394     | expr . "==" expr
  395     | expr . "!=" expr
  396     | expr . "<=" expr
  397     | expr . ">=" expr
  398     | expr . '&' expr
  399     | expr . '|' expr
  400     | expr . '^' expr
  401     | expr . "&&" expr
  401     | expr "&&" expr .
  402     | expr . "||" expr
  403     | expr . "^^" expr
  404     | expr . ".." expr
  407     | expr . "++"
  408     | expr . "--"
  410     | expr . '[' expr ']'
  411     | expr . '.' '[' expr ']'
  412     | expr . "?[" expr ']'
  413     | expr . '.' "?[" expr ']'
  414     | expr . "?." "name"
  415     | expr . '.' "?." "name"
  424     | expr . "??" expr
  425     | expr . '?' expr ':' expr
  428     | expr . "is" "type" '<' $@19 type_declaration_no_options '>' $@20
  429     | expr . "is" basic_type_declaration
  430     | expr . "is" "name"
  431     | expr . "as" "name"
  434     | expr . "as" "type" '<' $@21 type_declaration '>' $@22
  435     | expr . "as" basic_type_declaration
  436     | expr . '?' "as" "name"
  439     | expr . '?' "as" "type" '<' $@23 type_declaration '>' $@24
  440     | expr . '?' "as" basic_type_declaration
  448     | expr . "<|" expr
  449     | expr . "|>" expr
  450     | expr . "|>" basic_type_declaration
  461 expr_mtag: expr . '.' "$f" '(' expr ')'
  462          | expr . "?." "$f" '(' expr ')'
  463          | expr . '.' '.' "$f" '(' expr ')'
  464          | expr . '.' "?." "$f" '(' expr ')'
  465          | expr . "as" "$f" '(' expr ')'
  466          | expr . '?' "as" "$f" '(' expr ')'
  467          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 648
    "as"   shift, and go to state 649
    "<<"   shift, and go to state 650
    ">>"   shift, and go to state 651
    "++"   shift, and go to state 652
    "--"   shift, and go to state 653
    "<="   shift, and go to state 654
    ">="   shift, and go to state 655
    "=="   shift, and go to state 656
    "!="   shift, and go to state 657
    "->"   shift, and go to state 658
    "??"   shift, and go to state 659
    "?."   shift, and go to state 660
    "?["   shift, and go to state 661
    "<|"   shift, and go to state 662
    "|>"   shift, and go to state 663
    "<<<"  shift, and go to state 664
    ">>>"  shift, and go to state 665
    '|'    shift, and go to state 671
    '^'    shift, and go to state 672
    '&'    shift, and go to state 673
    '<'    shift, and go to state 674
    '>'    shift, and go to state 675
    '-'    shift, and go to state 676
    '+'    shift, and go to state 677
    '*'    shift, and go to state 678
    '/'    shift, and go to state 679
    '%'    shift, and go to state 680
    '.'    shift, and go to state 681
    '['    shift, and go to state 682

    $default  reduce using rule 401 (expr)


State 876

  342 expr_method_call: expr . "->" "name" '(' ')'
  343                 | expr . "->" "name" '(' expr_list ')'
  353 expr_field: expr . '.' "name"
  354           | expr . '.' '.' "name"
  355           | expr . '.' "name" '(' ')'
  356           | expr . '.' "name" '(' expr_list ')'
  357           | expr . '.' basic_type_declaration '(' ')'
  358           | expr . '.' basic_type_declaration '(' expr_list ')'
  361           | expr . '.' $@17 error $@18
  383 expr: expr . "<<" expr
  384     | expr . ">>" expr
  385     | expr . "<<<" expr
  386     | expr . ">>>" expr
  387     | expr . '+' expr
  388     | expr . '-' expr
  389     | expr . '*' expr
  390     | expr . '/' expr
  391     | expr . '%' expr
  392     | expr . '<' expr
  393     | expr . '>' expr
  394     | expr . "==" expr
  395     | expr . "!=" expr
  396     | expr . "<=" expr
  397     | expr . ">=" expr
  398     | expr . '&' expr
  399     | expr . '|' expr
  400     | expr . '^' expr
  401     | expr . "&&" expr
  402     | expr . "||" expr
  402     | expr "||" expr .
  403     | expr . "^^" expr
  404     | expr . ".." expr
  407     | expr . "++"
  408     | expr . "--"
  410     | expr . '[' expr ']'
  411     | expr . '.' '[' expr ']'
  412     | expr . "?[" expr ']'
  413     | expr . '.' "?[" expr ']'
  414     | expr . "?." "name"
  415     | expr . '.' "?." "name"
  424     | expr . "??" expr
  425     | expr . '?' expr ':' expr
  428     | expr . "is" "type" '<' $@19 type_declaration_no_options '>' $@20
  429     | expr . "is" basic_type_declaration
  430     | expr . "is" "name"
  431     | expr . "as" "name"
  434     | expr . "as" "type" '<' $@21 type_declaration '>' $@22
  435     | expr . "as" basic_type_declaration
  436     | expr . '?' "as" "name"
  439     | expr . '?' "as" "type" '<' $@23 type_declaration '>' $@24
  440     | expr . '?' "as" basic_type_declaration
  448     | expr . "<|" expr
  449     | expr . "|>" expr
  450     | expr . "|>" basic_type_declaration
  461 expr_mtag: expr . '.' "$f" '(' expr ')'
  462          | expr . "?." "$f" '(' expr ')'
  463          | expr . '.' '.' "$f" '(' expr ')'
  464          | expr . '.' "?." "$f" '(' expr ')'
  465          | expr . "as" "$f" '(' expr ')'
  466          | expr . '?' "as" "$f" '(' expr ')'
  467          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 648
    "as"   shift, and go to state 649
    "<<"   shift, and go to state 650
    ">>"   shift, and go to state 651
    "++"   shift, and go to state 652
    "--"   shift, and go to state 653
    "<="   shift, and go to state 654
    ">="   shift, and go to state 655
    "=="   shift, and go to state 656
    "!="   shift, and go to state 657
    "->"   shift, and go to state 658
    "??"   shift, and go to state 659
    "?."   shift, and go to state 660
    "?["   shift, and go to state 661
    "<|"   shift, and go to state 662
    "|>"   shift, and go to state 663
    "<<<"  shift, and go to state 664
    ">>>"  shift, and go to state 665
    "&&"   shift, and go to state 666
    "^^"   shift, and go to state 668
    '|'    shift, and go to state 671
    '^'    shift, and go to state 672
    '&'    shift, and go to state 673
    '<'    shift, and go to state 674
    '>'    shift, and go to state 675
    '-'    shift, and go to state 676
    '+'    shift, and go to state 677
    '*'    shift, and go to state 678
    '/'    shift, and go to state 679
    '%'    shift, and go to state 680
    '.'    shift, and go to state 681
    '['    shift, and go to state 682

    $default  reduce using rule 402 (expr)


State 877

  342 expr_method_call: expr . "->" "name" '(' ')'
  343                 | expr . "->" "name" '(' expr_list ')'
  353 expr_field: expr . '.' "name"
  354           | expr . '.' '.' "name"
  355           | expr . '.' "name" '(' ')'
  356           | expr . '.' "name" '(' expr_list ')'
  357           | expr . '.' basic_type_declaration '(' ')'
  358           | expr . '.' basic_type_declaration '(' expr_list ')'
  361           | expr . '.' $@17 error $@18
  383 expr: expr . "<<" expr
  384     | expr . ">>" expr
  385     | expr . "<<<" expr
  386     | expr . ">>>" expr
  387     | expr . '+' expr
  388     | expr . '-' expr
  389     | expr . '*' expr
  390     | expr . '/' expr
  391     | expr . '%' expr
  392     | expr . '<' expr
  393     | expr . '>' expr
  394     | expr . "==" expr
  395     | expr . "!=" expr
  396     | expr . "<=" expr
  397     | expr . ">=" expr
  398     | expr . '&' expr
  399     | expr . '|' expr
  400     | expr . '^' expr
  401     | expr . "&&" expr
  402     | expr . "||" expr
  403     | expr . "^^" expr
  403     | expr "^^" expr .
  404     | expr . ".." expr
  407     | expr . "++"
  408     | expr . "--"
  410     | expr . '[' expr ']'
  411     | expr . '.' '[' expr ']'
  412     | expr . "?[" expr ']'
  413     | expr . '.' "?[" expr ']'
  414     | expr . "?." "name"
  415     | expr . '.' "?." "name"
  424     | expr . "??" expr
  425     | expr . '?' expr ':' expr
  428     | expr . "is" "type" '<' $@19 type_declaration_no_options '>' $@20
  429     | expr . "is" basic_type_declaration
  430     | expr . "is" "name"
  431     | expr . "as" "name"
  434     | expr . "as" "type" '<' $@21 type_declaration '>' $@22
  435     | expr . "as" basic_type_declaration
  436     | expr . '?' "as" "name"
  439     | expr . '?' "as" "type" '<' $@23 type_declaration '>' $@24
  440     | expr . '?' "as" basic_type_declaration
  448     | expr . "<|" expr
  449     | expr . "|>" expr
  450     | expr . "|>" basic_type_declaration
  461 expr_mtag: expr . '.' "$f" '(' expr ')'
  462          | expr . "?." "$f" '(' expr ')'
  463          | expr . '.' '.' "$f" '(' expr ')'
  464          | expr . '.' "?." "$f" '(' expr ')'
  465          | expr . "as" "$f" '(' expr ')'
  466          | expr . '?' "as" "$f" '(' expr ')'
  467          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 648
    "as"   shift, and go to state 649
    "<<"   shift, and go to state 650
    ">>"   shift, and go to state 651
    "++"   shift, and go to state 652
    "--"   shift, and go to state 653
    "<="   shift, and go to state 654
    ">="   shift, and go to state 655
    "=="   shift, and go to state 656
    "!="   shift, and go to state 657
    "->"   shift, and go to state 658
    "??"   shift, and go to state 659
    "?."   shift, and go to state 660
    "?["   shift, and go to state 661
    "<|"   shift, and go to state 662
    "|>"   shift, and go to state 663
    "<<<"  shift, and go to state 664
    ">>>"  shift, and go to state 665
    "&&"   shift, and go to state 666
    '|'    shift, and go to state 671
    '^'    shift, and go to state 672
    '&'    shift, and go to state 673
    '<'    shift, and go to state 674
    '>'    shift, and go to state 675
    '-'    shift, and go to state 676
    '+'    shift, and go to state 677
    '*'    shift, and go to state 678
    '/'    shift, and go to state 679
    '%'    shift, and go to state 680
    '.'    shift, and go to state 681
    '['    shift, and go to state 682

    $default  reduce using rule 403 (expr)


State 878

  342 expr_method_call: expr . "->" "name" '(' ')'
  343                 | expr . "->" "name" '(' expr_list ')'
  353 expr_field: expr . '.' "name"
  354           | expr . '.' '.' "name"
  355           | expr . '.' "name" '(' ')'
  356           | expr . '.' "name" '(' expr_list ')'
  357           | expr . '.' basic_type_declaration '(' ')'
  358           | expr . '.' basic_type_declaration '(' expr_list ')'
  361           | expr . '.' $@17 error $@18
  383 expr: expr . "<<" expr
  384     | expr . ">>" expr
  385     | expr . "<<<" expr
  386     | expr . ">>>" expr
  387     | expr . '+' expr
  388     | expr . '-' expr
  389     | expr . '*' expr
  390     | expr . '/' expr
  391     | expr . '%' expr
  392     | expr . '<' expr
  393     | expr . '>' expr
  394     | expr . "==" expr
  395     | expr . "!=" expr
  396     | expr . "<=" expr
  397     | expr . ">=" expr
  398     | expr . '&' expr
  399     | expr . '|' expr
  400     | expr . '^' expr
  401     | expr . "&&" expr
  402     | expr . "||" expr
  403     | expr . "^^" expr
  404     | expr . ".." expr
  404     | expr ".." expr .
  407     | expr . "++"
  408     | expr . "--"
  410     | expr . '[' expr ']'
  411     | expr . '.' '[' expr ']'
  412     | expr . "?[" expr ']'
  413     | expr . '.' "?[" expr ']'
  414     | expr . "?." "name"
  415     | expr . '.' "?." "name"
  424     | expr . "??" expr
  425     | expr . '?' expr ':' expr
  428     | expr . "is" "type" '<' $@19 type_declaration_no_options '>' $@20
  429     | expr . "is" basic_type_declaration
  430     | expr . "is" "name"
  431     | expr . "as" "name"
  434     | expr . "as" "type" '<' $@21 type_declaration '>' $@22
  435     | expr . "as" basic_type_declaration
  436     | expr . '?' "as" "name"
  439     | expr . '?' "as" "type" '<' $@23 type_declaration '>' $@24
  440     | expr . '?' "as" basic_type_declaration
  448     | expr . "<|" expr
  449     | expr . "|>" expr
  450     | expr . "|>" basic_type_declaration
  461 expr_mtag: expr . '.' "$f" '(' expr ')'
  462          | expr . "?." "$f" '(' expr ')'
  463          | expr . '.' '.' "$f" '(' expr ')'
  464          | expr . '.' "?." "$f" '(' expr ')'
  465          | expr . "as" "$f" '(' expr ')'
  466          | expr . '?' "as" "$f" '(' expr ')'
  467          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 648
    "as"   shift, and go to state 649
    "<<"   shift, and go to state 650
    ">>"   shift, and go to state 651
    "++"   shift, and go to state 652
    "--"   shift, and go to state 653
    "<="   shift, and go to state 654
    ">="   shift, and go to state 655
    "=="   shift, and go to state 656
    "!="   shift, and go to state 657
    "->"   shift, and go to state 658
    "??"   shift, and go to state 659
    "?."   shift, and go to state 660
    "?["   shift, and go to state 661
    "<|"   shift, and go to state 662
    "|>"   shift, and go to state 663
    "<<<"  shift, and go to state 664
    ">>>"  shift, and go to state 665
    "&&"   shift, and go to state 666
    "||"   shift, and go to state 667
    "^^"   shift, and go to state 668
    '?'    shift, and go to state 670
    '|'    shift, and go to state 671
    '^'    shift, and go to state 672
    '&'    shift, and go to state 673
    '<'    shift, and go to state 674
    '>'    shift, and go to state 675
    '-'    shift, and go to state 676
    '+'    shift, and go to state 677
    '*'    shift, and go to state 678
    '/'    shift, and go to state 679
    '%'    shift, and go to state 680
    '.'    shift, and go to state 681
    '['    shift, and go to state 682

    ".."  error (nonassociative)

    $default  reduce using rule 404 (expr)


State 879

  436 expr: expr '?' "as" . "name"
  439     | expr '?' "as" . "type" '<' $@23 type_declaration '>' $@24
  440     | expr '?' "as" . basic_type_declaration
  466 expr_mtag: expr '?' "as" . "$f" '(' expr ')'

    "type"      shift, and go to state 1058
    "bool"      shift, and go to state 225
    "void"      shift, and go to state 226
    "string"    shift, and go to state 227
    "int"       shift, and go to state 229
    "int2"      shift, and go to state 230
    "int3"      shift, and go to state 231
    "int4"      shift, and go to state 232
    "uint"      shift, and go to state 233
    "bitfield"  shift, and go to state 427
    "uint2"     shift, and go to state 235
    "uint3"     shift, and go to state 236
    "uint4"     shift, and go to state 237
    "float"     shift, and go to state 238
    "float2"    shift, and go to state 239
    "float3"    shift, and go to state 240
    "float4"    shift, and go to state 241
    "range"     shift, and go to state 242
    "urange"    shift, and go to state 243
    "range64"   shift, and go to state 244
    "urange64"  shift, and go to state 245
    "int64"     shift, and go to state 247
    "uint64"    shift, and go to state 248
    "double"    shift, and go to state 249
    "int8"      shift, and go to state 252
    "uint8"     shift, and go to state 253
    "int16"     shift, and go to state 254
    "uint16"    shift, and go to state 255
    "$f"        shift, and go to state 1059
    "name"      shift, and go to state 1060

    basic_type_declaration  go to state 1061


State 880

  342 expr_method_call: expr . "->" "name" '(' ')'
  343                 | expr . "->" "name" '(' expr_list ')'
  353 expr_field: expr . '.' "name"
  354           | expr . '.' '.' "name"
  355           | expr . '.' "name" '(' ')'
  356           | expr . '.' "name" '(' expr_list ')'
  357           | expr . '.' basic_type_declaration '(' ')'
  358           | expr . '.' basic_type_declaration '(' expr_list ')'
  361           | expr . '.' $@17 error $@18
  383 expr: expr . "<<" expr
  384     | expr . ">>" expr
  385     | expr . "<<<" expr
  386     | expr . ">>>" expr
  387     | expr . '+' expr
  388     | expr . '-' expr
  389     | expr . '*' expr
  390     | expr . '/' expr
  391     | expr . '%' expr
  392     | expr . '<' expr
  393     | expr . '>' expr
  394     | expr . "==" expr
  395     | expr . "!=" expr
  396     | expr . "<=" expr
  397     | expr . ">=" expr
  398     | expr . '&' expr
  399     | expr . '|' expr
  400     | expr . '^' expr
  401     | expr . "&&" expr
  402     | expr . "||" expr
  403     | expr . "^^" expr
  404     | expr . ".." expr
  407     | expr . "++"
  408     | expr . "--"
  410     | expr . '[' expr ']'
  411     | expr . '.' '[' expr ']'
  412     | expr . "?[" expr ']'
  413     | expr . '.' "?[" expr ']'
  414     | expr . "?." "name"
  415     | expr . '.' "?." "name"
  424     | expr . "??" expr
  425     | expr . '?' expr ':' expr
  425     | expr '?' expr . ':' expr
  428     | expr . "is" "type" '<' $@19 type_declaration_no_options '>' $@20
  429     | expr . "is" basic_type_declaration
  430     | expr . "is" "name"
  431     | expr . "as" "name"
  434     | expr . "as" "type" '<' $@21 type_declaration '>' $@22
  435     | expr . "as" basic_type_declaration
  436     | expr . '?' "as" "name"
  439     | expr . '?' "as" "type" '<' $@23 type_declaration '>' $@24
  440     | expr . '?' "as" basic_type_declaration
  448     | expr . "<|" expr
  449     | expr . "|>" expr
  450     | expr . "|>" basic_type_declaration
  461 expr_mtag: expr . '.' "$f" '(' expr ')'
  462          | expr . "?." "$f" '(' expr ')'
  463          | expr . '.' '.' "$f" '(' expr ')'
  464          | expr . '.' "?." "$f" '(' expr ')'
  465          | expr . "as" "$f" '(' expr ')'
  466          | expr . '?' "as" "$f" '(' expr ')'
  467          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 648
    "as"   shift, and go to state 649
    "<<"   shift, and go to state 650
    ">>"   shift, and go to state 651
    "++"   shift, and go to state 652
    "--"   shift, and go to state 653
    "<="   shift, and go to state 654
    ">="   shift, and go to state 655
    "=="   shift, and go to state 656
    "!="   shift, and go to state 657
    "->"   shift, and go to state 658
    "??"   shift, and go to state 659
    "?."   shift, and go to state 660
    "?["   shift, and go to state 661
    "<|"   shift, and go to state 662
    "|>"   shift, and go to state 663
    "<<<"  shift, and go to state 664
    ">>>"  shift, and go to state 665
    "&&"   shift, and go to state 666
    "||"   shift, and go to state 667
    "^^"   shift, and go to state 668
    ".."   shift, and go to state 669
    '?'    shift, and go to state 670
    ':'    shift, and go to state 1062
    '|'    shift, and go to state 671
    '^'    shift, and go to state 672
    '&'    shift, and go to state 673
    '<'    shift, and go to state 674
    '>'    shift, and go to state 675
    '-'    shift, and go to state 676
    '+'    shift, and go to state 677
    '*'    shift, and go to state 678
    '/'    shift, and go to state 679
    '%'    shift, and go to state 680
    '.'    shift, and go to state 681
    '['    shift, and go to state 682


State 881

  342 expr_method_call: expr . "->" "name" '(' ')'
  343                 | expr . "->" "name" '(' expr_list ')'
  353 expr_field: expr . '.' "name"
  354           | expr . '.' '.' "name"
  355           | expr . '.' "name" '(' ')'
  356           | expr . '.' "name" '(' expr_list ')'
  357           | expr . '.' basic_type_declaration '(' ')'
  358           | expr . '.' basic_type_declaration '(' expr_list ')'
  361           | expr . '.' $@17 error $@18
  383 expr: expr . "<<" expr
  384     | expr . ">>" expr
  385     | expr . "<<<" expr
  386     | expr . ">>>" expr
  387     | expr . '+' expr
  388     | expr . '-' expr
  389     | expr . '*' expr
  390     | expr . '/' expr
  391     | expr . '%' expr
  392     | expr . '<' expr
  393     | expr . '>' expr
  394     | expr . "==" expr
  395     | expr . "!=" expr
  396     | expr . "<=" expr
  397     | expr . ">=" expr
  398     | expr . '&' expr
  399     | expr . '|' expr
  399     | expr '|' expr .
  400     | expr . '^' expr
  401     | expr . "&&" expr
  402     | expr . "||" expr
  403     | expr . "^^" expr
  404     | expr . ".." expr
  407     | expr . "++"
  408     | expr . "--"
  410     | expr . '[' expr ']'
  411     | expr . '.' '[' expr ']'
  412     | expr . "?[" expr ']'
  413     | expr . '.' "?[" expr ']'
  414     | expr . "?." "name"
  415     | expr . '.' "?." "name"
  424     | expr . "??" expr
  425     | expr . '?' expr ':' expr
  428     | expr . "is" "type" '<' $@19 type_declaration_no_options '>' $@20
  429     | expr . "is" basic_type_declaration
  430     | expr . "is" "name"
  431     | expr . "as" "name"
  434     | expr . "as" "type" '<' $@21 type_declaration '>' $@22
  435     | expr . "as" basic_type_declaration
  436     | expr . '?' "as" "name"
  439     | expr . '?' "as" "type" '<' $@23 type_declaration '>' $@24
  440     | expr . '?' "as" basic_type_declaration
  448     | expr . "<|" expr
  449     | expr . "|>" expr
  450     | expr . "|>" basic_type_declaration
  461 expr_mtag: expr . '.' "$f" '(' expr ')'
  462          | expr . "?." "$f" '(' expr ')'
  463          | expr . '.' '.' "$f" '(' expr ')'
  464          | expr . '.' "?." "$f" '(' expr ')'
  465          | expr . "as" "$f" '(' expr ')'
  466          | expr . '?' "as" "$f" '(' expr ')'
  467          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 648
    "as"   shift, and go to state 649
    "<<"   shift, and go to state 650
    ">>"   shift, and go to state 651
    "++"   shift, and go to state 652
    "--"   shift, and go to state 653
    "<="   shift, and go to state 654
    ">="   shift, and go to state 655
    "=="   shift, and go to state 656
    "!="   shift, and go to state 657
    "->"   shift, and go to state 658
    "??"   shift, and go to state 659
    "?."   shift, and go to state 660
    "?["   shift, and go to state 661
    "<|"   shift, and go to state 662
    "|>"   shift, and go to state 663
    "<<<"  shift, and go to state 664
    ">>>"  shift, and go to state 665
    '^'    shift, and go to state 672
    '&'    shift, and go to state 673
    '<'    shift, and go to state 674
    '>'    shift, and go to state 675
    '-'    shift, and go to state 676
    '+'    shift, and go to state 677
    '*'    shift, and go to state 678
    '/'    shift, and go to state 679
    '%'    shift, and go to state 680
    '.'    shift, and go to state 681
    '['    shift, and go to state 682

    $default  reduce using rule 399 (expr)


State 882

  342 expr_method_call: expr . "->" "name" '(' ')'
  343                 | expr . "->" "name" '(' expr_list ')'
  353 expr_field: expr . '.' "name"
  354           | expr . '.' '.' "name"
  355           | expr . '.' "name" '(' ')'
  356           | expr . '.' "name" '(' expr_list ')'
  357           | expr . '.' basic_type_declaration '(' ')'
  358           | expr . '.' basic_type_declaration '(' expr_list ')'
  361           | expr . '.' $@17 error $@18
  383 expr: expr . "<<" expr
  384     | expr . ">>" expr
  385     | expr . "<<<" expr
  386     | expr . ">>>" expr
  387     | expr . '+' expr
  388     | expr . '-' expr
  389     | expr . '*' expr
  390     | expr . '/' expr
  391     | expr . '%' expr
  392     | expr . '<' expr
  393     | expr . '>' expr
  394     | expr . "==" expr
  395     | expr . "!=" expr
  396     | expr . "<=" expr
  397     | expr . ">=" expr
  398     | expr . '&' expr
  399     | expr . '|' expr
  400     | expr . '^' expr
  400     | expr '^' expr .
  401     | expr . "&&" expr
  402     | expr . "||" expr
  403     | expr . "^^" expr
  404     | expr . ".." expr
  407     | expr . "++"
  408     | expr . "--"
  410     | expr . '[' expr ']'
  411     | expr . '.' '[' expr ']'
  412     | expr . "?[" expr ']'
  413     | expr . '.' "?[" expr ']'
  414     | expr . "?." "name"
  415     | expr . '.' "?." "name"
  424     | expr . "??" expr
  425     | expr . '?' expr ':' expr
  428     | expr . "is" "type" '<' $@19 type_declaration_no_options '>' $@20
  429     | expr . "is" basic_type_declaration
  430     | expr . "is" "name"
  431     | expr . "as" "name"
  434     | expr . "as" "type" '<' $@21 type_declaration '>' $@22
  435     | expr . "as" basic_type_declaration
  436     | expr . '?' "as" "name"
  439     | expr . '?' "as" "type" '<' $@23 type_declaration '>' $@24
  440     | expr . '?' "as" basic_type_declaration
  448     | expr . "<|" expr
  449     | expr . "|>" expr
  450     | expr . "|>" basic_type_declaration
  461 expr_mtag: expr . '.' "$f" '(' expr ')'
  462          | expr . "?." "$f" '(' expr ')'
  463          | expr . '.' '.' "$f" '(' expr ')'
  464          | expr . '.' "?." "$f" '(' expr ')'
  465          | expr . "as" "$f" '(' expr ')'
  466          | expr . '?' "as" "$f" '(' expr ')'
  467          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 648
    "as"   shift, and go to state 649
    "<<"   shift, and go to state 650
    ">>"   shift, and go to state 651
    "++"   shift, and go to state 652
    "--"   shift, and go to state 653
    "<="   shift, and go to state 654
    ">="   shift, and go to state 655
    "=="   shift, and go to state 656
    "!="   shift, and go to state 657
    "->"   shift, and go to state 658
    "??"   shift, and go to state 659
    "?."   shift, and go to state 660
    "?["   shift, and go to state 661
    "<|"   shift, and go to state 662
    "|>"   shift, and go to state 663
    "<<<"  shift, and go to state 664
    ">>>"  shift, and go to state 665
    '&'    shift, and go to state 673
    '<'    shift, and go to state 674
    '>'    shift, and go to state 675
    '-'    shift, and go to state 676
    '+'    shift, and go to state 677
    '*'    shift, and go to state 678
    '/'    shift, and go to state 679
    '%'    shift, and go to state 680
    '.'    shift, and go to state 681
    '['    shift, and go to state 682

    $default  reduce using rule 400 (expr)


State 883

  342 expr_method_call: expr . "->" "name" '(' ')'
  343                 | expr . "->" "name" '(' expr_list ')'
  353 expr_field: expr . '.' "name"
  354           | expr . '.' '.' "name"
  355           | expr . '.' "name" '(' ')'
  356           | expr . '.' "name" '(' expr_list ')'
  357           | expr . '.' basic_type_declaration '(' ')'
  358           | expr . '.' basic_type_declaration '(' expr_list ')'
  361           | expr . '.' $@17 error $@18
  383 expr: expr . "<<" expr
  384     | expr . ">>" expr
  385     | expr . "<<<" expr
  386     | expr . ">>>" expr
  387     | expr . '+' expr
  388     | expr . '-' expr
  389     | expr . '*' expr
  390     | expr . '/' expr
  391     | expr . '%' expr
  392     | expr . '<' expr
  393     | expr . '>' expr
  394     | expr . "==" expr
  395     | expr . "!=" expr
  396     | expr . "<=" expr
  397     | expr . ">=" expr
  398     | expr . '&' expr
  398     | expr '&' expr .
  399     | expr . '|' expr
  400     | expr . '^' expr
  401     | expr . "&&" expr
  402     | expr . "||" expr
  403     | expr . "^^" expr
  404     | expr . ".." expr
  407     | expr . "++"
  408     | expr . "--"
  410     | expr . '[' expr ']'
  411     | expr . '.' '[' expr ']'
  412     | expr . "?[" expr ']'
  413     | expr . '.' "?[" expr ']'
  414     | expr . "?." "name"
  415     | expr . '.' "?." "name"
  424     | expr . "??" expr
  425     | expr . '?' expr ':' expr
  428     | expr . "is" "type" '<' $@19 type_declaration_no_options '>' $@20
  429     | expr . "is" basic_type_declaration
  430     | expr . "is" "name"
  431     | expr . "as" "name"
  434     | expr . "as" "type" '<' $@21 type_declaration '>' $@22
  435     | expr . "as" basic_type_declaration
  436     | expr . '?' "as" "name"
  439     | expr . '?' "as" "type" '<' $@23 type_declaration '>' $@24
  440     | expr . '?' "as" basic_type_declaration
  448     | expr . "<|" expr
  449     | expr . "|>" expr
  450     | expr . "|>" basic_type_declaration
  461 expr_mtag: expr . '.' "$f" '(' expr ')'
  462          | expr . "?." "$f" '(' expr ')'
  463          | expr . '.' '.' "$f" '(' expr ')'
  464          | expr . '.' "?." "$f" '(' expr ')'
  465          | expr . "as" "$f" '(' expr ')'
  466          | expr . '?' "as" "$f" '(' expr ')'
  467          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 648
    "as"   shift, and go to state 649
    "<<"   shift, and go to state 650
    ">>"   shift, and go to state 651
    "++"   shift, and go to state 652
    "--"   shift, and go to state 653
    "<="   shift, and go to state 654
    ">="   shift, and go to state 655
    "=="   shift, and go to state 656
    "!="   shift, and go to state 657
    "->"   shift, and go to state 658
    "??"   shift, and go to state 659
    "?."   shift, and go to state 660
    "?["   shift, and go to state 661
    "<|"   shift, and go to state 662
    "|>"   shift, and go to state 663
    "<<<"  shift, and go to state 664
    ">>>"  shift, and go to state 665
    '<'    shift, and go to state 674
    '>'    shift, and go to state 675
    '-'    shift, and go to state 676
    '+'    shift, and go to state 677
    '*'    shift, and go to state 678
    '/'    shift, and go to state 679
    '%'    shift, and go to state 680
    '.'    shift, and go to state 681
    '['    shift, and go to state 682

    $default  reduce using rule 398 (expr)


State 884

  342 expr_method_call: expr . "->" "name" '(' ')'
  343                 | expr . "->" "name" '(' expr_list ')'
  353 expr_field: expr . '.' "name"
  354           | expr . '.' '.' "name"
  355           | expr . '.' "name" '(' ')'
  356           | expr . '.' "name" '(' expr_list ')'
  357           | expr . '.' basic_type_declaration '(' ')'
  358           | expr . '.' basic_type_declaration '(' expr_list ')'
  361           | expr . '.' $@17 error $@18
  383 expr: expr . "<<" expr
  384     | expr . ">>" expr
  385     | expr . "<<<" expr
  386     | expr . ">>>" expr
  387     | expr . '+' expr
  388     | expr . '-' expr
  389     | expr . '*' expr
  390     | expr . '/' expr
  391     | expr . '%' expr
  392     | expr . '<' expr
  392     | expr '<' expr .
  393     | expr . '>' expr
  394     | expr . "==" expr
  395     | expr . "!=" expr
  396     | expr . "<=" expr
  397     | expr . ">=" expr
  398     | expr . '&' expr
  399     | expr . '|' expr
  400     | expr . '^' expr
  401     | expr . "&&" expr
  402     | expr . "||" expr
  403     | expr . "^^" expr
  404     | expr . ".." expr
  407     | expr . "++"
  408     | expr . "--"
  410     | expr . '[' expr ']'
  411     | expr . '.' '[' expr ']'
  412     | expr . "?[" expr ']'
  413     | expr . '.' "?[" expr ']'
  414     | expr . "?." "name"
  415     | expr . '.' "?." "name"
  424     | expr . "??" expr
  425     | expr . '?' expr ':' expr
  428     | expr . "is" "type" '<' $@19 type_declaration_no_options '>' $@20
  429     | expr . "is" basic_type_declaration
  430     | expr . "is" "name"
  431     | expr . "as" "name"
  434     | expr . "as" "type" '<' $@21 type_declaration '>' $@22
  435     | expr . "as" basic_type_declaration
  436     | expr . '?' "as" "name"
  439     | expr . '?' "as" "type" '<' $@23 type_declaration '>' $@24
  440     | expr . '?' "as" basic_type_declaration
  448     | expr . "<|" expr
  449     | expr . "|>" expr
  450     | expr . "|>" basic_type_declaration
  461 expr_mtag: expr . '.' "$f" '(' expr ')'
  462          | expr . "?." "$f" '(' expr ')'
  463          | expr . '.' '.' "$f" '(' expr ')'
  464          | expr . '.' "?." "$f" '(' expr ')'
  465          | expr . "as" "$f" '(' expr ')'
  466          | expr . '?' "as" "$f" '(' expr ')'
  467          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 648
    "as"   shift, and go to state 649
    "<<"   shift, and go to state 650
    ">>"   shift, and go to state 651
    "++"   shift, and go to state 652
    "--"   shift, and go to state 653
    "->"   shift, and go to state 658
    "??"   shift, and go to state 659
    "?."   shift, and go to state 660
    "?["   shift, and go to state 661
    "<|"   shift, and go to state 662
    "|>"   shift, and go to state 663
    "<<<"  shift, and go to state 664
    ">>>"  shift, and go to state 665
    '-'    shift, and go to state 676
    '+'    shift, and go to state 677
    '*'    shift, and go to state 678
    '/'    shift, and go to state 679
    '%'    shift, and go to state 680
    '.'    shift, and go to state 681
    '['    shift, and go to state 682

    $default  reduce using rule 392 (expr)


State 885

  342 expr_method_call: expr . "->" "name" '(' ')'
  343                 | expr . "->" "name" '(' expr_list ')'
  353 expr_field: expr . '.' "name"
  354           | expr . '.' '.' "name"
  355           | expr . '.' "name" '(' ')'
  356           | expr . '.' "name" '(' expr_list ')'
  357           | expr . '.' basic_type_declaration '(' ')'
  358           | expr . '.' basic_type_declaration '(' expr_list ')'
  361           | expr . '.' $@17 error $@18
  383 expr: expr . "<<" expr
  384     | expr . ">>" expr
  385     | expr . "<<<" expr
  386     | expr . ">>>" expr
  387     | expr . '+' expr
  388     | expr . '-' expr
  389     | expr . '*' expr
  390     | expr . '/' expr
  391     | expr . '%' expr
  392     | expr . '<' expr
  393     | expr . '>' expr
  393     | expr '>' expr .
  394     | expr . "==" expr
  395     | expr . "!=" expr
  396     | expr . "<=" expr
  397     | expr . ">=" expr
  398     | expr . '&' expr
  399     | expr . '|' expr
  400     | expr . '^' expr
  401     | expr . "&&" expr
  402     | expr . "||" expr
  403     | expr . "^^" expr
  404     | expr . ".." expr
  407     | expr . "++"
  408     | expr . "--"
  410     | expr . '[' expr ']'
  411     | expr . '.' '[' expr ']'
  412     | expr . "?[" expr ']'
  413     | expr . '.' "?[" expr ']'
  414     | expr . "?." "name"
  415     | expr . '.' "?." "name"
  424     | expr . "??" expr
  425     | expr . '?' expr ':' expr
  428     | expr . "is" "type" '<' $@19 type_declaration_no_options '>' $@20
  429     | expr . "is" basic_type_declaration
  430     | expr . "is" "name"
  431     | expr . "as" "name"
  434     | expr . "as" "type" '<' $@21 type_declaration '>' $@22
  435     | expr . "as" basic_type_declaration
  436     | expr . '?' "as" "name"
  439     | expr . '?' "as" "type" '<' $@23 type_declaration '>' $@24
  440     | expr . '?' "as" basic_type_declaration
  448     | expr . "<|" expr
  449     | expr . "|>" expr
  450     | expr . "|>" basic_type_declaration
  461 expr_mtag: expr . '.' "$f" '(' expr ')'
  462          | expr . "?." "$f" '(' expr ')'
  463          | expr . '.' '.' "$f" '(' expr ')'
  464          | expr . '.' "?." "$f" '(' expr ')'
  465          | expr . "as" "$f" '(' expr ')'
  466          | expr . '?' "as" "$f" '(' expr ')'
  467          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 648
    "as"   shift, and go to state 649
    "<<"   shift, and go to state 650
    ">>"   shift, and go to state 651
    "++"   shift, and go to state 652
    "--"   shift, and go to state 653
    "->"   shift, and go to state 658
    "??"   shift, and go to state 659
    "?."   shift, and go to state 660
    "?["   shift, and go to state 661
    "<|"   shift, and go to state 662
    "|>"   shift, and go to state 663
    "<<<"  shift, and go to state 664
    ">>>"  shift, and go to state 665
    '-'    shift, and go to state 676
    '+'    shift, and go to state 677
    '*'    shift, and go to state 678
    '/'    shift, and go to state 679
    '%'    shift, and go to state 680
    '.'    shift, and go to state 681
    '['    shift, and go to state 682

    $default  reduce using rule 393 (expr)


State 886

  342 expr_method_call: expr . "->" "name" '(' ')'
  343                 | expr . "->" "name" '(' expr_list ')'
  353 expr_field: expr . '.' "name"
  354           | expr . '.' '.' "name"
  355           | expr . '.' "name" '(' ')'
  356           | expr . '.' "name" '(' expr_list ')'
  357           | expr . '.' basic_type_declaration '(' ')'
  358           | expr . '.' basic_type_declaration '(' expr_list ')'
  361           | expr . '.' $@17 error $@18
  383 expr: expr . "<<" expr
  384     | expr . ">>" expr
  385     | expr . "<<<" expr
  386     | expr . ">>>" expr
  387     | expr . '+' expr
  388     | expr . '-' expr
  388     | expr '-' expr .
  389     | expr . '*' expr
  390     | expr . '/' expr
  391     | expr . '%' expr
  392     | expr . '<' expr
  393     | expr . '>' expr
  394     | expr . "==" expr
  395     | expr . "!=" expr
  396     | expr . "<=" expr
  397     | expr . ">=" expr
  398     | expr . '&' expr
  399     | expr . '|' expr
  400     | expr . '^' expr
  401     | expr . "&&" expr
  402     | expr . "||" expr
  403     | expr . "^^" expr
  404     | expr . ".." expr
  407     | expr . "++"
  408     | expr . "--"
  410     | expr . '[' expr ']'
  411     | expr . '.' '[' expr ']'
  412     | expr . "?[" expr ']'
  413     | expr . '.' "?[" expr ']'
  414     | expr . "?." "name"
  415     | expr . '.' "?." "name"
  424     | expr . "??" expr
  425     | expr . '?' expr ':' expr
  428     | expr . "is" "type" '<' $@19 type_declaration_no_options '>' $@20
  429     | expr . "is" basic_type_declaration
  430     | expr . "is" "name"
  431     | expr . "as" "name"
  434     | expr . "as" "type" '<' $@21 type_declaration '>' $@22
  435     | expr . "as" basic_type_declaration
  436     | expr . '?' "as" "name"
  439     | expr . '?' "as" "type" '<' $@23 type_declaration '>' $@24
  440     | expr . '?' "as" basic_type_declaration
  448     | expr . "<|" expr
  449     | expr . "|>" expr
  450     | expr . "|>" basic_type_declaration
  461 expr_mtag: expr . '.' "$f" '(' expr ')'
  462          | expr . "?." "$f" '(' expr ')'
  463          | expr . '.' '.' "$f" '(' expr ')'
  464          | expr . '.' "?." "$f" '(' expr ')'
  465          | expr . "as" "$f" '(' expr ')'
  466          | expr . '?' "as" "$f" '(' expr ')'
  467          | expr . "is" "$f" '(' expr ')'

    "is"  shift, and go to state 648
    "as"  shift, and go to state 649
    "++"  shift, and go to state 652
    "--"  shift, and go to state 653
    "->"  shift, and go to state 658
    "??"  shift, and go to state 659
    "?."  shift, and go to state 660
    "?["  shift, and go to state 661
    "<|"  shift, and go to state 662
    "|>"  shift, and go to state 663
    '*'   shift, and go to state 678
    '/'   shift, and go to state 679
    '%'   shift, and go to state 680
    '.'   shift, and go to state 681
    '['   shift, and go to state 682

    $default  reduce using rule 388 (expr)


State 887

  342 expr_method_call: expr . "->" "name" '(' ')'
  343                 | expr . "->" "name" '(' expr_list ')'
  353 expr_field: expr . '.' "name"
  354           | expr . '.' '.' "name"
  355           | expr . '.' "name" '(' ')'
  356           | expr . '.' "name" '(' expr_list ')'
  357           | expr . '.' basic_type_declaration '(' ')'
  358           | expr . '.' basic_type_declaration '(' expr_list ')'
  361           | expr . '.' $@17 error $@18
  383 expr: expr . "<<" expr
  384     | expr . ">>" expr
  385     | expr . "<<<" expr
  386     | expr . ">>>" expr
  387     | expr . '+' expr
  387     | expr '+' expr .
  388     | expr . '-' expr
  389     | expr . '*' expr
  390     | expr . '/' expr
  391     | expr . '%' expr
  392     | expr . '<' expr
  393     | expr . '>' expr
  394     | expr . "==" expr
  395     | expr . "!=" expr
  396     | expr . "<=" expr
  397     | expr . ">=" expr
  398     | expr . '&' expr
  399     | expr . '|' expr
  400     | expr . '^' expr
  401     | expr . "&&" expr
  402     | expr . "||" expr
  403     | expr . "^^" expr
  404     | expr . ".." expr
  407     | expr . "++"
  408     | expr . "--"
  410     | expr . '[' expr ']'
  411     | expr . '.' '[' expr ']'
  412     | expr . "?[" expr ']'
  413     | expr . '.' "?[" expr ']'
  414     | expr . "?." "name"
  415     | expr . '.' "?." "name"
  424     | expr . "??" expr
  425     | expr . '?' expr ':' expr
  428     | expr . "is" "type" '<' $@19 type_declaration_no_options '>' $@20
  429     | expr . "is" basic_type_declaration
  430     | expr . "is" "name"
  431     | expr . "as" "name"
  434     | expr . "as" "type" '<' $@21 type_declaration '>' $@22
  435     | expr . "as" basic_type_declaration
  436     | expr . '?' "as" "name"
  439     | expr . '?' "as" "type" '<' $@23 type_declaration '>' $@24
  440     | expr . '?' "as" basic_type_declaration
  448     | expr . "<|" expr
  449     | expr . "|>" expr
  450     | expr . "|>" basic_type_declaration
  461 expr_mtag: expr . '.' "$f" '(' expr ')'
  462          | expr . "?." "$f" '(' expr ')'
  463          | expr . '.' '.' "$f" '(' expr ')'
  464          | expr . '.' "?." "$f" '(' expr ')'
  465          | expr . "as" "$f" '(' expr ')'
  466          | expr . '?' "as" "$f" '(' expr ')'
  467          | expr . "is" "$f" '(' expr ')'

    "is"  shift, and go to state 648
    "as"  shift, and go to state 649
    "++"  shift, and go to state 652
    "--"  shift, and go to state 653
    "->"  shift, and go to state 658
    "??"  shift, and go to state 659
    "?."  shift, and go to state 660
    "?["  shift, and go to state 661
    "<|"  shift, and go to state 662
    "|>"  shift, and go to state 663
    '*'   shift, and go to state 678
    '/'   shift, and go to state 679
    '%'   shift, and go to state 680
    '.'   shift, and go to state 681
    '['   shift, and go to state 682

    $default  reduce using rule 387 (expr)


State 888

  342 expr_method_call: expr . "->" "name" '(' ')'
  343                 | expr . "->" "name" '(' expr_list ')'
  353 expr_field: expr . '.' "name"
  354           | expr . '.' '.' "name"
  355           | expr . '.' "name" '(' ')'
  356           | expr . '.' "name" '(' expr_list ')'
  357           | expr . '.' basic_type_declaration '(' ')'
  358           | expr . '.' basic_type_declaration '(' expr_list ')'
  361           | expr . '.' $@17 error $@18
  383 expr: expr . "<<" expr
  384     | expr . ">>" expr
  385     | expr . "<<<" expr
  386     | expr . ">>>" expr
  387     | expr . '+' expr
  388     | expr . '-' expr
  389     | expr . '*' expr
  389     | expr '*' expr .
  390     | expr . '/' expr
  391     | expr . '%' expr
  392     | expr . '<' expr
  393     | expr . '>' expr
  394     | expr . "==" expr
  395     | expr . "!=" expr
  396     | expr . "<=" expr
  397     | expr . ">=" expr
  398     | expr . '&' expr
  399     | expr . '|' expr
  400     | expr . '^' expr
  401     | expr . "&&" expr
  402     | expr . "||" expr
  403     | expr . "^^" expr
  404     | expr . ".." expr
  407     | expr . "++"
  408     | expr . "--"
  410     | expr . '[' expr ']'
  411     | expr . '.' '[' expr ']'
  412     | expr . "?[" expr ']'
  413     | expr . '.' "?[" expr ']'
  414     | expr . "?." "name"
  415     | expr . '.' "?." "name"
  424     | expr . "??" expr
  425     | expr . '?' expr ':' expr
  428     | expr . "is" "type" '<' $@19 type_declaration_no_options '>' $@20
  429     | expr . "is" basic_type_declaration
  430     | expr . "is" "name"
  431     | expr . "as" "name"
  434     | expr . "as" "type" '<' $@21 type_declaration '>' $@22
  435     | expr . "as" basic_type_declaration
  436     | expr . '?' "as" "name"
  439     | expr . '?' "as" "type" '<' $@23 type_declaration '>' $@24
  440     | expr . '?' "as" basic_type_declaration
  448     | expr . "<|" expr
  449     | expr . "|>" expr
  450     | expr . "|>" basic_type_declaration
  461 expr_mtag: expr . '.' "$f" '(' expr ')'
  462          | expr . "?." "$f" '(' expr ')'
  463          | expr . '.' '.' "$f" '(' expr ')'
  464          | expr . '.' "?." "$f" '(' expr ')'
  465          | expr . "as" "$f" '(' expr ')'
  466          | expr . '?' "as" "$f" '(' expr ')'
  467          | expr . "is" "$f" '(' expr ')'

    "is"  shift, and go to state 648
    "as"  shift, and go to state 649
    "++"  shift, and go to state 652
    "--"  shift, and go to state 653
    "->"  shift, and go to state 658
    "??"  shift, and go to state 659
    "?."  shift, and go to state 660
    "?["  shift, and go to state 661
    "<|"  shift, and go to state 662
    "|>"  shift, and go to state 663
    '.'   shift, and go to state 681
    '['   shift, and go to state 682

    $default  reduce using rule 389 (expr)


State 889

  342 expr_method_call: expr . "->" "name" '(' ')'
  343                 | expr . "->" "name" '(' expr_list ')'
  353 expr_field: expr . '.' "name"
  354           | expr . '.' '.' "name"
  355           | expr . '.' "name" '(' ')'
  356           | expr . '.' "name" '(' expr_list ')'
  357           | expr . '.' basic_type_declaration '(' ')'
  358           | expr . '.' basic_type_declaration '(' expr_list ')'
  361           | expr . '.' $@17 error $@18
  383 expr: expr . "<<" expr
  384     | expr . ">>" expr
  385     | expr . "<<<" expr
  386     | expr . ">>>" expr
  387     | expr . '+' expr
  388     | expr . '-' expr
  389     | expr . '*' expr
  390     | expr . '/' expr
  390     | expr '/' expr .
  391     | expr . '%' expr
  392     | expr . '<' expr
  393     | expr . '>' expr
  394     | expr . "==" expr
  395     | expr . "!=" expr
  396     | expr . "<=" expr
  397     | expr . ">=" expr
  398     | expr . '&' expr
  399     | expr . '|' expr
  400     | expr . '^' expr
  401     | expr . "&&" expr
  402     | expr . "||" expr
  403     | expr . "^^" expr
  404     | expr . ".." expr
  407     | expr . "++"
  408     | expr . "--"
  410     | expr . '[' expr ']'
  411     | expr . '.' '[' expr ']'
  412     | expr . "?[" expr ']'
  413     | expr . '.' "?[" expr ']'
  414     | expr . "?." "name"
  415     | expr . '.' "?." "name"
  424     | expr . "??" expr
  425     | expr . '?' expr ':' expr
  428     | expr . "is" "type" '<' $@19 type_declaration_no_options '>' $@20
  429     | expr . "is" basic_type_declaration
  430     | expr . "is" "name"
  431     | expr . "as" "name"
  434     | expr . "as" "type" '<' $@21 type_declaration '>' $@22
  435     | expr . "as" basic_type_declaration
  436     | expr . '?' "as" "name"
  439     | expr . '?' "as" "type" '<' $@23 type_declaration '>' $@24
  440     | expr . '?' "as" basic_type_declaration
  448     | expr . "<|" expr
  449     | expr . "|>" expr
  450     | expr . "|>" basic_type_declaration
  461 expr_mtag: expr . '.' "$f" '(' expr ')'
  462          | expr . "?." "$f" '(' expr ')'
  463          | expr . '.' '.' "$f" '(' expr ')'
  464          | expr . '.' "?." "$f" '(' expr ')'
  465          | expr . "as" "$f" '(' expr ')'
  466          | expr . '?' "as" "$f" '(' expr ')'
  467          | expr . "is" "$f" '(' expr ')'

    "is"  shift, and go to state 648
    "as"  shift, and go to state 649
    "++"  shift, and go to state 652
    "--"  shift, and go to state 653
    "->"  shift, and go to state 658
    "??"  shift, and go to state 659
    "?."  shift, and go to state 660
    "?["  shift, and go to state 661
    "<|"  shift, and go to state 662
    "|>"  shift, and go to state 663
    '.'   shift, and go to state 681
    '['   shift, and go to state 682

    $default  reduce using rule 390 (expr)


State 890

  342 expr_method_call: expr . "->" "name" '(' ')'
  343                 | expr . "->" "name" '(' expr_list ')'
  353 expr_field: expr . '.' "name"
  354           | expr . '.' '.' "name"
  355           | expr . '.' "name" '(' ')'
  356           | expr . '.' "name" '(' expr_list ')'
  357           | expr . '.' basic_type_declaration '(' ')'
  358           | expr . '.' basic_type_declaration '(' expr_list ')'
  361           | expr . '.' $@17 error $@18
  383 expr: expr . "<<" expr
  384     | expr . ">>" expr
  385     | expr . "<<<" expr
  386     | expr . ">>>" expr
  387     | expr . '+' expr
  388     | expr . '-' expr
  389     | expr . '*' expr
  390     | expr . '/' expr
  391     | expr . '%' expr
  391     | expr '%' expr .
  392     | expr . '<' expr
  393     | expr . '>' expr
  394     | expr . "==" expr
  395     | expr . "!=" expr
  396     | expr . "<=" expr
  397     | expr . ">=" expr
  398     | expr . '&' expr
  399     | expr . '|' expr
  400     | expr . '^' expr
  401     | expr . "&&" expr
  402     | expr . "||" expr
  403     | expr . "^^" expr
  404     | expr . ".." expr
  407     | expr . "++"
  408     | expr . "--"
  410     | expr . '[' expr ']'
  411     | expr . '.' '[' expr ']'
  412     | expr . "?[" expr ']'
  413     | expr . '.' "?[" expr ']'
  414     | expr . "?." "name"
  415     | expr . '.' "?." "name"
  424     | expr . "??" expr
  425     | expr . '?' expr ':' expr
  428     | expr . "is" "type" '<' $@19 type_declaration_no_options '>' $@20
  429     | expr . "is" basic_type_declaration
  430     | expr . "is" "name"
  431     | expr . "as" "name"
  434     | expr . "as" "type" '<' $@21 type_declaration '>' $@22
  435     | expr . "as" basic_type_declaration
  436     | expr . '?' "as" "name"
  439     | expr . '?' "as" "type" '<' $@23 type_declaration '>' $@24
  440     | expr . '?' "as" basic_type_declaration
  448     | expr . "<|" expr
  449     | expr . "|>" expr
  450     | expr . "|>" basic_type_declaration
  461 expr_mtag: expr . '.' "$f" '(' expr ')'
  462          | expr . "?." "$f" '(' expr ')'
  463          | expr . '.' '.' "$f" '(' expr ')'
  464          | expr . '.' "?." "$f" '(' expr ')'
  465          | expr . "as" "$f" '(' expr ')'
  466          | expr . '?' "as" "$f" '(' expr ')'
  467          | expr . "is" "$f" '(' expr ')'

    "is"  shift, and go to state 648
    "as"  shift, and go to state 649
    "++"  shift, and go to state 652
    "--"  shift, and go to state 653
    "->"  shift, and go to state 658
    "??"  shift, and go to state 659
    "?."  shift, and go to state 660
    "?["  shift, and go to state 661
    "<|"  shift, and go to state 662
    "|>"  shift, and go to state 663
    '.'   shift, and go to state 681
    '['   shift, and go to state 682

    $default  reduce using rule 391 (expr)


State 891

  415 expr: expr '.' "?." . "name"
  464 expr_mtag: expr '.' "?." . "$f" '(' expr ')'

    "$f"    shift, and go to state 1063
    "name"  shift, and go to state 1064


State 892

  413 expr: expr '.' "?[" . expr ']'

    "struct"                          shift, and go to state 409
    "class"                           shift, and go to state 410
    "true"                            shift, and go to state 411
    "false"                           shift, and go to state 412
    "new"                             shift, and go to state 413
    "typeinfo"                        shift, and go to state 414
    "type"                            shift, and go to state 415
    "array"                           shift, and go to state 416
    "null"                            shift, and go to state 417
    "table"                           shift, and go to state 418
    "deref"                           shift, and go to state 419
    "cast"                            shift, and go to state 420
    "upcast"                          shift, and go to state 421
    "addr"                            shift, and go to state 422
    "reinterpret"                     shift, and go to state 423
    "unsafe"                          shift, and go to state 424
    "fixed_array"                     shift, and go to state 425
    "default"                         shift, and go to state 426
    "bool"                            shift, and go to state 225
    "void"                            shift, and go to state 226
    "string"                          shift, and go to state 227
    "int"                             shift, and go to state 229
    "int2"                            shift, and go to state 230
    "int3"                            shift, and go to state 231
    "int4"                            shift, and go to state 232
    "uint"                            shift, and go to state 233
    "bitfield"                        shift, and go to state 427
    "uint2"                           shift, and go to state 235
    "uint3"                           shift, and go to state 236
    "uint4"                           shift, and go to state 237
    "float"                           shift, and go to state 238
    "float2"                          shift, and go to state 239
    "float3"                          shift, and go to state 240
    "float4"                          shift, and go to state 241
    "range"                           shift, and go to state 242
    "urange"                          shift, and go to state 243
    "range64"                         shift, and go to state 244
    "urange64"                        shift, and go to state 245
    "int64"                           shift, and go to state 247
    "uint64"                          shift, and go to state 248
    "double"                          shift, and go to state 249
    "int8"                            shift, and go to state 252
    "uint8"                           shift, and go to state 253
    "int16"                           shift, and go to state 254
    "uint16"                          shift, and go to state 255
    "tuple"                           shift, and go to state 428
    "variant"                         shift, and go to state 429
    "generator"                       shift, and go to state 430
    "++"                              shift, and go to state 431
    "--"                              shift, and go to state 432
    "::"                              shift, and go to state 55
    "$$"                              shift, and go to state 433
    "$i"                              shift, and go to state 434
    "$v"                              shift, and go to state 435
    "$b"                              shift, and go to state 436
    "$a"                              shift, and go to state 437
    "$c"                              shift, and go to state 438
    "..."                             shift, and go to state 439
    "integer constant"                shift, and go to state 440
    "long integer constant"           shift, and go to state 441
    "unsigned integer constant"       shift, and go to state 442
    "unsigned long integer constant"  shift, and go to state 443
    "unsigned int8 constant"          shift, and go to state 444
    "floating point constant"         shift, and go to state 445
    "double constant"                 shift, and go to state 446
    "name"                            shift, and go to state 56
    "start of the string"             shift, and go to state 447
    "begin of code block"             shift, and go to state 448
    '-'                               shift, and go to state 449
    '+'                               shift, and go to state 450
    '*'                               shift, and go to state 451
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 452
    '!'                               shift, and go to state 453
    '['                               shift, and go to state 454
    '('                               shift, and go to state 455
    '$'                               shift, and go to state 456
    '@'                               shift, and go to state 457

    string_builder          go to state 458
    expr_reader             go to state 459
    expr_call_pipe          go to state 460
    name_in_namespace       go to state 461
    expr_new                go to state 462
    expr_cast               go to state 463
    expr_type_decl          go to state 464
    expr_type_info          go to state 465
    block_or_lambda         go to state 466
    expr_full_block         go to state 467
    expr_numeric_const      go to state 468
    expr_named_call         go to state 469
    expr_method_call        go to state 470
    func_addr_expr          go to state 471
    expr_field              go to state 472
    expr_call               go to state 473
    expr                    go to state 1065
    expr_mtag               go to state 475
    basic_type_declaration  go to state 476
    make_decl               go to state 477
    make_struct_decl        go to state 478
    make_tuple_call         go to state 479
    make_dim_decl           go to state 480
    make_table_decl         go to state 481
    array_comprehension     go to state 482


State 893

  461 expr_mtag: expr '.' "$f" . '(' expr ')'

    '('  shift, and go to state 1066


State 894

  353 expr_field: expr '.' "name" .
  355           | expr '.' "name" . '(' ')'
  356           | expr '.' "name" . '(' expr_list ')'

    '('  shift, and go to state 1067

    $default  reduce using rule 353 (expr_field)


State 895

  354 expr_field: expr '.' '.' . "name"
  463 expr_mtag: expr '.' '.' . "$f" '(' expr ')'

    "$f"    shift, and go to state 1068
    "name"  shift, and go to state 1069


State 896

  411 expr: expr '.' '[' . expr ']'

    "struct"                          shift, and go to state 409
    "class"                           shift, and go to state 410
    "true"                            shift, and go to state 411
    "false"                           shift, and go to state 412
    "new"                             shift, and go to state 413
    "typeinfo"                        shift, and go to state 414
    "type"                            shift, and go to state 415
    "array"                           shift, and go to state 416
    "null"                            shift, and go to state 417
    "table"                           shift, and go to state 418
    "deref"                           shift, and go to state 419
    "cast"                            shift, and go to state 420
    "upcast"                          shift, and go to state 421
    "addr"                            shift, and go to state 422
    "reinterpret"                     shift, and go to state 423
    "unsafe"                          shift, and go to state 424
    "fixed_array"                     shift, and go to state 425
    "default"                         shift, and go to state 426
    "bool"                            shift, and go to state 225
    "void"                            shift, and go to state 226
    "string"                          shift, and go to state 227
    "int"                             shift, and go to state 229
    "int2"                            shift, and go to state 230
    "int3"                            shift, and go to state 231
    "int4"                            shift, and go to state 232
    "uint"                            shift, and go to state 233
    "bitfield"                        shift, and go to state 427
    "uint2"                           shift, and go to state 235
    "uint3"                           shift, and go to state 236
    "uint4"                           shift, and go to state 237
    "float"                           shift, and go to state 238
    "float2"                          shift, and go to state 239
    "float3"                          shift, and go to state 240
    "float4"                          shift, and go to state 241
    "range"                           shift, and go to state 242
    "urange"                          shift, and go to state 243
    "range64"                         shift, and go to state 244
    "urange64"                        shift, and go to state 245
    "int64"                           shift, and go to state 247
    "uint64"                          shift, and go to state 248
    "double"                          shift, and go to state 249
    "int8"                            shift, and go to state 252
    "uint8"                           shift, and go to state 253
    "int16"                           shift, and go to state 254
    "uint16"                          shift, and go to state 255
    "tuple"                           shift, and go to state 428
    "variant"                         shift, and go to state 429
    "generator"                       shift, and go to state 430
    "++"                              shift, and go to state 431
    "--"                              shift, and go to state 432
    "::"                              shift, and go to state 55
    "$$"                              shift, and go to state 433
    "$i"                              shift, and go to state 434
    "$v"                              shift, and go to state 435
    "$b"                              shift, and go to state 436
    "$a"                              shift, and go to state 437
    "$c"                              shift, and go to state 438
    "..."                             shift, and go to state 439
    "integer constant"                shift, and go to state 440
    "long integer constant"           shift, and go to state 441
    "unsigned integer constant"       shift, and go to state 442
    "unsigned long integer constant"  shift, and go to state 443
    "unsigned int8 constant"          shift, and go to state 444
    "floating point constant"         shift, and go to state 445
    "double constant"                 shift, and go to state 446
    "name"                            shift, and go to state 56
    "start of the string"             shift, and go to state 447
    "begin of code block"             shift, and go to state 448
    '-'                               shift, and go to state 449
    '+'                               shift, and go to state 450
    '*'                               shift, and go to state 451
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 452
    '!'                               shift, and go to state 453
    '['                               shift, and go to state 454
    '('                               shift, and go to state 455
    '$'                               shift, and go to state 456
    '@'                               shift, and go to state 457

    string_builder          go to state 458
    expr_reader             go to state 459
    expr_call_pipe          go to state 460
    name_in_namespace       go to state 461
    expr_new                go to state 462
    expr_cast               go to state 463
    expr_type_decl          go to state 464
    expr_type_info          go to state 465
    block_or_lambda         go to state 466
    expr_full_block         go to state 467
    expr_numeric_const      go to state 468
    expr_named_call         go to state 469
    expr_method_call        go to state 470
    func_addr_expr          go to state 471
    expr_field              go to state 472
    expr_call               go to state 473
    expr                    go to state 1070
    expr_mtag               go to state 475
    basic_type_declaration  go to state 476
    make_decl               go to state 477
    make_struct_decl        go to state 478
    make_tuple_call         go to state 479
    make_dim_decl           go to state 480
    make_table_decl         go to state 481
    array_comprehension     go to state 482


State 897

  361 expr_field: expr '.' $@17 . error $@18

    error  shift, and go to state 1071


State 898

  357 expr_field: expr '.' basic_type_declaration . '(' ')'
  358           | expr '.' basic_type_declaration . '(' expr_list ')'

    '('  shift, and go to state 1072


State 899

  342 expr_method_call: expr . "->" "name" '(' ')'
  343                 | expr . "->" "name" '(' expr_list ')'
  353 expr_field: expr . '.' "name"
  354           | expr . '.' '.' "name"
  355           | expr . '.' "name" '(' ')'
  356           | expr . '.' "name" '(' expr_list ')'
  357           | expr . '.' basic_type_declaration '(' ')'
  358           | expr . '.' basic_type_declaration '(' expr_list ')'
  361           | expr . '.' $@17 error $@18
  383 expr: expr . "<<" expr
  384     | expr . ">>" expr
  385     | expr . "<<<" expr
  386     | expr . ">>>" expr
  387     | expr . '+' expr
  388     | expr . '-' expr
  389     | expr . '*' expr
  390     | expr . '/' expr
  391     | expr . '%' expr
  392     | expr . '<' expr
  393     | expr . '>' expr
  394     | expr . "==" expr
  395     | expr . "!=" expr
  396     | expr . "<=" expr
  397     | expr . ">=" expr
  398     | expr . '&' expr
  399     | expr . '|' expr
  400     | expr . '^' expr
  401     | expr . "&&" expr
  402     | expr . "||" expr
  403     | expr . "^^" expr
  404     | expr . ".." expr
  407     | expr . "++"
  408     | expr . "--"
  410     | expr . '[' expr ']'
  410     | expr '[' expr . ']'
  411     | expr . '.' '[' expr ']'
  412     | expr . "?[" expr ']'
  413     | expr . '.' "?[" expr ']'
  414     | expr . "?." "name"
  415     | expr . '.' "?." "name"
  424     | expr . "??" expr
  425     | expr . '?' expr ':' expr
  428     | expr . "is" "type" '<' $@19 type_declaration_no_options '>' $@20
  429     | expr . "is" basic_type_declaration
  430     | expr . "is" "name"
  431     | expr . "as" "name"
  434     | expr . "as" "type" '<' $@21 type_declaration '>' $@22
  435     | expr . "as" basic_type_declaration
  436     | expr . '?' "as" "name"
  439     | expr . '?' "as" "type" '<' $@23 type_declaration '>' $@24
  440     | expr . '?' "as" basic_type_declaration
  448     | expr . "<|" expr
  449     | expr . "|>" expr
  450     | expr . "|>" basic_type_declaration
  461 expr_mtag: expr . '.' "$f" '(' expr ')'
  462          | expr . "?." "$f" '(' expr ')'
  463          | expr . '.' '.' "$f" '(' expr ')'
  464          | expr . '.' "?." "$f" '(' expr ')'
  465          | expr . "as" "$f" '(' expr ')'
  466          | expr . '?' "as" "$f" '(' expr ')'
  467          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 648
    "as"   shift, and go to state 649
    "<<"   shift, and go to state 650
    ">>"   shift, and go to state 651
    "++"   shift, and go to state 652
    "--"   shift, and go to state 653
    "<="   shift, and go to state 654
    ">="   shift, and go to state 655
    "=="   shift, and go to state 656
    "!="   shift, and go to state 657
    "->"   shift, and go to state 658
    "??"   shift, and go to state 659
    "?."   shift, and go to state 660
    "?["   shift, and go to state 661
    "<|"   shift, and go to state 662
    "|>"   shift, and go to state 663
    "<<<"  shift, and go to state 664
    ">>>"  shift, and go to state 665
    "&&"   shift, and go to state 666
    "||"   shift, and go to state 667
    "^^"   shift, and go to state 668
    ".."   shift, and go to state 669
    '?'    shift, and go to state 670
    '|'    shift, and go to state 671
    '^'    shift, and go to state 672
    '&'    shift, and go to state 673
    '<'    shift, and go to state 674
    '>'    shift, and go to state 675
    '-'    shift, and go to state 676
    '+'    shift, and go to state 677
    '*'    shift, and go to state 678
    '/'    shift, and go to state 679
    '%'    shift, and go to state 680
    '.'    shift, and go to state 681
    '['    shift, and go to state 682
    ']'    shift, and go to state 1073


State 900

  367 expr_call: basic_type_declaration '(' ')' .

    $default  reduce using rule 367 (expr_call)


State 901

  295 expr_list: expr_list . ',' expr
  368 expr_call: basic_type_declaration '(' expr_list . ')'

    ','  shift, and go to state 1074
    ')'  shift, and go to state 1075


State 902

  678 type_declaration_no_options_no_dim: "iterator" '<' $@46 type_declaration '>' . $@47

    $default  reduce using rule 677 ($@47)

    $@47  go to state 1076


State 903

  668 type_declaration_no_options_no_dim: "smart_ptr" '<' $@40 type_declaration '>' . $@41

    $default  reduce using rule 667 ($@41)

    $@41  go to state 1077


State 904

  626 bitfield_bits: bitfield_bits "end of expression" . "name"

    "name"  shift, and go to state 1078


State 905

  632 bitfield_type_declaration: "bitfield" '<' $@35 bitfield_bits '>' . $@36

    $default  reduce using rule 631 ($@36)

    $@36  go to state 1079


State 906

  682 type_declaration_no_options_no_dim: "block" '<' $@48 type_declaration '>' . $@49

    $default  reduce using rule 681 ($@49)

    $@49  go to state 1080


State 907

  685 type_declaration_no_options_no_dim: "block" '<' $@50 optional_function_argument_list optional_function_type . '>' $@51

    '>'  shift, and go to state 1081


State 908

  689 type_declaration_no_options_no_dim: "function" '<' $@52 type_declaration '>' . $@53

    $default  reduce using rule 688 ($@53)

    $@53  go to state 1082


State 909

  692 type_declaration_no_options_no_dim: "function" '<' $@54 optional_function_argument_list optional_function_type . '>' $@55

    '>'  shift, and go to state 1083


State 910

  696 type_declaration_no_options_no_dim: "lambda" '<' $@56 type_declaration '>' . $@57

    $default  reduce using rule 695 ($@57)

    $@57  go to state 1084


State 911

  699 type_declaration_no_options_no_dim: "lambda" '<' $@58 optional_function_argument_list optional_function_type . '>' $@59

    '>'  shift, and go to state 1085


State 912

  702 type_declaration_no_options_no_dim: "tuple" '<' $@60 tuple_type_list '>' . $@61

    $default  reduce using rule 701 ($@61)

    $@61  go to state 1086


State 913

  496 tuple_type_list: tuple_type_list c_or_s . tuple_type

    "type"       shift, and go to state 219
    "array"      shift, and go to state 220
    "table"      shift, and go to state 221
    "typedecl"   shift, and go to state 222
    "iterator"   shift, and go to state 223
    "smart_ptr"  shift, and go to state 224
    "bool"       shift, and go to state 225
    "void"       shift, and go to state 226
    "string"     shift, and go to state 227
    "auto"       shift, and go to state 228
    "int"        shift, and go to state 229
    "int2"       shift, and go to state 230
    "int3"       shift, and go to state 231
    "int4"       shift, and go to state 232
    "uint"       shift, and go to state 233
    "bitfield"   shift, and go to state 234
    "uint2"      shift, and go to state 235
    "uint3"      shift, and go to state 236
    "uint4"      shift, and go to state 237
    "float"      shift, and go to state 238
    "float2"     shift, and go to state 239
    "float3"     shift, and go to state 240
    "float4"     shift, and go to state 241
    "range"      shift, and go to state 242
    "urange"     shift, and go to state 243
    "range64"    shift, and go to state 244
    "urange64"   shift, and go to state 245
    "block"      shift, and go to state 246
    "int64"      shift, and go to state 247
    "uint64"     shift, and go to state 248
    "double"     shift, and go to state 249
    "function"   shift, and go to state 250
    "lambda"     shift, and go to state 251
    "int8"       shift, and go to state 252
    "uint8"      shift, and go to state 253
    "int16"      shift, and go to state 254
    "uint16"     shift, and go to state 255
    "tuple"      shift, and go to state 256
    "variant"    shift, and go to state 257
    "::"         shift, and go to state 55
    "$t"         shift, and go to state 258
    "name"       shift, and go to state 511
    '$'          shift, and go to state 259

    name_in_namespace                   go to state 260
    tuple_type                          go to state 1087
    basic_type_declaration              go to state 261
    structure_type_declaration          go to state 262
    auto_type_declaration               go to state 263
    bitfield_type_declaration           go to state 264
    type_declaration_no_options         go to state 265
    type_declaration_no_options_no_dim  go to state 266
    type_declaration                    go to state 516


State 914

  705 type_declaration_no_options_no_dim: "variant" '<' $@62 variant_type_list '>' . $@63

    $default  reduce using rule 704 ($@63)

    $@63  go to state 1088


State 915

  502 variant_type_list: variant_type_list c_or_s . variant_type

    "name"  shift, and go to state 518

    variant_type  go to state 1089


State 916

  241 type_declaration_no_options_list: type_declaration_no_options_list . c_or_s type_declaration
  653 type_declaration_no_options_no_dim: '$' name_in_namespace '<' $@39 type_declaration_no_options_list . '>' '(' optional_expr_list ')'

    "end of expression"  shift, and go to state 512
    ','                  shift, and go to state 513
    '>'                  shift, and go to state 1090

    c_or_s  go to state 1091


State 917

  240 type_declaration_no_options_list: type_declaration .
  707 type_declaration: type_declaration . '|' type_declaration_no_options
  708                 | type_declaration . '|' '#'

    '|'  shift, and go to state 375

    $default  reduce using rule 240 (type_declaration_no_options_list)


State 918

  651 type_declaration_no_options_no_dim: '$' name_in_namespace '(' optional_expr_list ')' .

    $default  reduce using rule 651 (type_declaration_no_options_no_dim)


State 919

  237 optional_expr_list: expr_list optional_comma .

    $default  reduce using rule 237 (optional_expr_list)


State 920

  639 dim_list: dim_list '[' expr ']' .

    $default  reduce using rule 639 (dim_list)


State 921

  720 bitfield_alias_declaration: "bitfield" optional_public_or_private_alias "name" $@70 "begin of code block" $@71 bitfield_alias_bits optional_comma $@72 "end of code block" .

    $default  reduce using rule 720 (bitfield_alias_declaration)


State 922

  494 tuple_type: "name" ':' type_declaration .
  707 type_declaration: type_declaration . '|' type_declaration_no_options
  708                 | type_declaration . '|' '#'

    '|'  shift, and go to state 375

    $default  reduce using rule 494 (tuple_type)


State 923

  500 variant_type: "name" ':' type_declaration .
  707 type_declaration: type_declaration . '|' type_declaration_no_options
  708                 | type_declaration . '|' '#'

    '|'  shift, and go to state 375

    $default  reduce using rule 500 (variant_type)


State 924

  490 function_argument_declaration: "$a" '(' expr ')' .

    $default  reduce using rule 490 (function_argument_declaration)


State 925

  582 variable_name_with_pos_list: "$i" '(' . expr ')'

    "struct"                          shift, and go to state 409
    "class"                           shift, and go to state 410
    "true"                            shift, and go to state 411
    "false"                           shift, and go to state 412
    "new"                             shift, and go to state 413
    "typeinfo"                        shift, and go to state 414
    "type"                            shift, and go to state 415
    "array"                           shift, and go to state 416
    "null"                            shift, and go to state 417
    "table"                           shift, and go to state 418
    "deref"                           shift, and go to state 419
    "cast"                            shift, and go to state 420
    "upcast"                          shift, and go to state 421
    "addr"                            shift, and go to state 422
    "reinterpret"                     shift, and go to state 423
    "unsafe"                          shift, and go to state 424
    "fixed_array"                     shift, and go to state 425
    "default"                         shift, and go to state 426
    "bool"                            shift, and go to state 225
    "void"                            shift, and go to state 226
    "string"                          shift, and go to state 227
    "int"                             shift, and go to state 229
    "int2"                            shift, and go to state 230
    "int3"                            shift, and go to state 231
    "int4"                            shift, and go to state 232
    "uint"                            shift, and go to state 233
    "bitfield"                        shift, and go to state 427
    "uint2"                           shift, and go to state 235
    "uint3"                           shift, and go to state 236
    "uint4"                           shift, and go to state 237
    "float"                           shift, and go to state 238
    "float2"                          shift, and go to state 239
    "float3"                          shift, and go to state 240
    "float4"                          shift, and go to state 241
    "range"                           shift, and go to state 242
    "urange"                          shift, and go to state 243
    "range64"                         shift, and go to state 244
    "urange64"                        shift, and go to state 245
    "int64"                           shift, and go to state 247
    "uint64"                          shift, and go to state 248
    "double"                          shift, and go to state 249
    "int8"                            shift, and go to state 252
    "uint8"                           shift, and go to state 253
    "int16"                           shift, and go to state 254
    "uint16"                          shift, and go to state 255
    "tuple"                           shift, and go to state 428
    "variant"                         shift, and go to state 429
    "generator"                       shift, and go to state 430
    "++"                              shift, and go to state 431
    "--"                              shift, and go to state 432
    "::"                              shift, and go to state 55
    "$$"                              shift, and go to state 433
    "$i"                              shift, and go to state 434
    "$v"                              shift, and go to state 435
    "$b"                              shift, and go to state 436
    "$a"                              shift, and go to state 437
    "$c"                              shift, and go to state 438
    "..."                             shift, and go to state 439
    "integer constant"                shift, and go to state 440
    "long integer constant"           shift, and go to state 441
    "unsigned integer constant"       shift, and go to state 442
    "unsigned long integer constant"  shift, and go to state 443
    "unsigned int8 constant"          shift, and go to state 444
    "floating point constant"         shift, and go to state 445
    "double constant"                 shift, and go to state 446
    "name"                            shift, and go to state 56
    "start of the string"             shift, and go to state 447
    "begin of code block"             shift, and go to state 448
    '-'                               shift, and go to state 449
    '+'                               shift, and go to state 450
    '*'                               shift, and go to state 451
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 452
    '!'                               shift, and go to state 453
    '['                               shift, and go to state 454
    '('                               shift, and go to state 455
    '$'                               shift, and go to state 456
    '@'                               shift, and go to state 457

    string_builder          go to state 458
    expr_reader             go to state 459
    expr_call_pipe          go to state 460
    name_in_namespace       go to state 461
    expr_new                go to state 462
    expr_cast               go to state 463
    expr_type_decl          go to state 464
    expr_type_info          go to state 465
    block_or_lambda         go to state 466
    expr_full_block         go to state 467
    expr_numeric_const      go to state 468
    expr_named_call         go to state 469
    expr_method_call        go to state 470
    func_addr_expr          go to state 471
    expr_field              go to state 472
    expr_call               go to state 473
    expr                    go to state 1092
    expr_mtag               go to state 475
    basic_type_declaration  go to state 476
    make_decl               go to state 477
    make_struct_decl        go to state 478
    make_tuple_call         go to state 479
    make_dim_decl           go to state 480
    make_table_decl         go to state 481
    array_comprehension     go to state 482


State 926

  583 variable_name_with_pos_list: "name" "aka" . "name"

    "name"  shift, and go to state 1093


State 927

  507 copy_or_move: "<-" .

    $default  reduce using rule 507 (copy_or_move)


State 928

  584 variable_name_with_pos_list: variable_name_with_pos_list ',' . "name"
  585                            | variable_name_with_pos_list ',' . "name" "aka" "name"

    "name"  shift, and go to state 1094


State 929

  506 copy_or_move: '=' .

    $default  reduce using rule 506 (copy_or_move)


State 930

  510 variable_declaration: variable_name_with_pos_list ':' . type_declaration
  511                     | variable_name_with_pos_list ':' . type_declaration copy_or_move expr

    "type"       shift, and go to state 219
    "array"      shift, and go to state 220
    "table"      shift, and go to state 221
    "typedecl"   shift, and go to state 222
    "iterator"   shift, and go to state 223
    "smart_ptr"  shift, and go to state 224
    "bool"       shift, and go to state 225
    "void"       shift, and go to state 226
    "string"     shift, and go to state 227
    "auto"       shift, and go to state 228
    "int"        shift, and go to state 229
    "int2"       shift, and go to state 230
    "int3"       shift, and go to state 231
    "int4"       shift, and go to state 232
    "uint"       shift, and go to state 233
    "bitfield"   shift, and go to state 234
    "uint2"      shift, and go to state 235
    "uint3"      shift, and go to state 236
    "uint4"      shift, and go to state 237
    "float"      shift, and go to state 238
    "float2"     shift, and go to state 239
    "float3"     shift, and go to state 240
    "float4"     shift, and go to state 241
    "range"      shift, and go to state 242
    "urange"     shift, and go to state 243
    "range64"    shift, and go to state 244
    "urange64"   shift, and go to state 245
    "block"      shift, and go to state 246
    "int64"      shift, and go to state 247
    "uint64"     shift, and go to state 248
    "double"     shift, and go to state 249
    "function"   shift, and go to state 250
    "lambda"     shift, and go to state 251
    "int8"       shift, and go to state 252
    "uint8"      shift, and go to state 253
    "int16"      shift, and go to state 254
    "uint16"     shift, and go to state 255
    "tuple"      shift, and go to state 256
    "variant"    shift, and go to state 257
    "::"         shift, and go to state 55
    "$t"         shift, and go to state 258
    "name"       shift, and go to state 56
    '$'          shift, and go to state 259

    name_in_namespace                   go to state 260
    basic_type_declaration              go to state 261
    structure_type_declaration          go to state 262
    auto_type_declaration               go to state 263
    bitfield_type_declaration           go to state 264
    type_declaration_no_options         go to state 265
    type_declaration_no_options_no_dim  go to state 266
    type_declaration                    go to state 1095


State 931

  509 variable_declaration: variable_name_with_pos_list '&' .

    $default  reduce using rule 509 (variable_declaration)


State 932

  512 variable_declaration: variable_name_with_pos_list copy_or_move . expr

    "struct"                          shift, and go to state 409
    "class"                           shift, and go to state 410
    "true"                            shift, and go to state 411
    "false"                           shift, and go to state 412
    "new"                             shift, and go to state 413
    "typeinfo"                        shift, and go to state 414
    "type"                            shift, and go to state 415
    "array"                           shift, and go to state 416
    "null"                            shift, and go to state 417
    "table"                           shift, and go to state 418
    "deref"                           shift, and go to state 419
    "cast"                            shift, and go to state 420
    "upcast"                          shift, and go to state 421
    "addr"                            shift, and go to state 422
    "reinterpret"                     shift, and go to state 423
    "unsafe"                          shift, and go to state 424
    "fixed_array"                     shift, and go to state 425
    "default"                         shift, and go to state 426
    "bool"                            shift, and go to state 225
    "void"                            shift, and go to state 226
    "string"                          shift, and go to state 227
    "int"                             shift, and go to state 229
    "int2"                            shift, and go to state 230
    "int3"                            shift, and go to state 231
    "int4"                            shift, and go to state 232
    "uint"                            shift, and go to state 233
    "bitfield"                        shift, and go to state 427
    "uint2"                           shift, and go to state 235
    "uint3"                           shift, and go to state 236
    "uint4"                           shift, and go to state 237
    "float"                           shift, and go to state 238
    "float2"                          shift, and go to state 239
    "float3"                          shift, and go to state 240
    "float4"                          shift, and go to state 241
    "range"                           shift, and go to state 242
    "urange"                          shift, and go to state 243
    "range64"                         shift, and go to state 244
    "urange64"                        shift, and go to state 245
    "int64"                           shift, and go to state 247
    "uint64"                          shift, and go to state 248
    "double"                          shift, and go to state 249
    "int8"                            shift, and go to state 252
    "uint8"                           shift, and go to state 253
    "int16"                           shift, and go to state 254
    "uint16"                          shift, and go to state 255
    "tuple"                           shift, and go to state 428
    "variant"                         shift, and go to state 429
    "generator"                       shift, and go to state 430
    "++"                              shift, and go to state 431
    "--"                              shift, and go to state 432
    "::"                              shift, and go to state 55
    "$$"                              shift, and go to state 433
    "$i"                              shift, and go to state 434
    "$v"                              shift, and go to state 435
    "$b"                              shift, and go to state 436
    "$a"                              shift, and go to state 437
    "$c"                              shift, and go to state 438
    "..."                             shift, and go to state 439
    "integer constant"                shift, and go to state 440
    "long integer constant"           shift, and go to state 441
    "unsigned integer constant"       shift, and go to state 442
    "unsigned long integer constant"  shift, and go to state 443
    "unsigned int8 constant"          shift, and go to state 444
    "floating point constant"         shift, and go to state 445
    "double constant"                 shift, and go to state 446
    "name"                            shift, and go to state 56
    "start of the string"             shift, and go to state 447
    "begin of code block"             shift, and go to state 448
    '-'                               shift, and go to state 449
    '+'                               shift, and go to state 450
    '*'                               shift, and go to state 451
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 452
    '!'                               shift, and go to state 453
    '['                               shift, and go to state 454
    '('                               shift, and go to state 455
    '$'                               shift, and go to state 456
    '@'                               shift, and go to state 457

    string_builder          go to state 458
    expr_reader             go to state 459
    expr_call_pipe          go to state 460
    name_in_namespace       go to state 461
    expr_new                go to state 462
    expr_cast               go to state 463
    expr_type_decl          go to state 464
    expr_type_info          go to state 465
    block_or_lambda         go to state 466
    expr_full_block         go to state 467
    expr_numeric_const      go to state 468
    expr_named_call         go to state 469
    expr_method_call        go to state 470
    func_addr_expr          go to state 471
    expr_field              go to state 472
    expr_call               go to state 473
    expr                    go to state 1096
    expr_mtag               go to state 475
    basic_type_declaration  go to state 476
    make_decl               go to state 477
    make_struct_decl        go to state 478
    make_tuple_call         go to state 479
    make_dim_decl           go to state 480
    make_table_decl         go to state 481
    array_comprehension     go to state 482


State 933

   73 expression_while_loop: "while" '(' expr . ')' expression_block
  342 expr_method_call: expr . "->" "name" '(' ')'
  343                 | expr . "->" "name" '(' expr_list ')'
  353 expr_field: expr . '.' "name"
  354           | expr . '.' '.' "name"
  355           | expr . '.' "name" '(' ')'
  356           | expr . '.' "name" '(' expr_list ')'
  357           | expr . '.' basic_type_declaration '(' ')'
  358           | expr . '.' basic_type_declaration '(' expr_list ')'
  361           | expr . '.' $@17 error $@18
  383 expr: expr . "<<" expr
  384     | expr . ">>" expr
  385     | expr . "<<<" expr
  386     | expr . ">>>" expr
  387     | expr . '+' expr
  388     | expr . '-' expr
  389     | expr . '*' expr
  390     | expr . '/' expr
  391     | expr . '%' expr
  392     | expr . '<' expr
  393     | expr . '>' expr
  394     | expr . "==" expr
  395     | expr . "!=" expr
  396     | expr . "<=" expr
  397     | expr . ">=" expr
  398     | expr . '&' expr
  399     | expr . '|' expr
  400     | expr . '^' expr
  401     | expr . "&&" expr
  402     | expr . "||" expr
  403     | expr . "^^" expr
  404     | expr . ".." expr
  407     | expr . "++"
  408     | expr . "--"
  410     | expr . '[' expr ']'
  411     | expr . '.' '[' expr ']'
  412     | expr . "?[" expr ']'
  413     | expr . '.' "?[" expr ']'
  414     | expr . "?." "name"
  415     | expr . '.' "?." "name"
  424     | expr . "??" expr
  425     | expr . '?' expr ':' expr
  428     | expr . "is" "type" '<' $@19 type_declaration_no_options '>' $@20
  429     | expr . "is" basic_type_declaration
  430     | expr . "is" "name"
  431     | expr . "as" "name"
  434     | expr . "as" "type" '<' $@21 type_declaration '>' $@22
  435     | expr . "as" basic_type_declaration
  436     | expr . '?' "as" "name"
  439     | expr . '?' "as" "type" '<' $@23 type_declaration '>' $@24
  440     | expr . '?' "as" basic_type_declaration
  448     | expr . "<|" expr
  449     | expr . "|>" expr
  450     | expr . "|>" basic_type_declaration
  461 expr_mtag: expr . '.' "$f" '(' expr ')'
  462          | expr . "?." "$f" '(' expr ')'
  463          | expr . '.' '.' "$f" '(' expr ')'
  464          | expr . '.' "?." "$f" '(' expr ')'
  465          | expr . "as" "$f" '(' expr ')'
  466          | expr . '?' "as" "$f" '(' expr ')'
  467          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 648
    "as"   shift, and go to state 649
    "<<"   shift, and go to state 650
    ">>"   shift, and go to state 651
    "++"   shift, and go to state 652
    "--"   shift, and go to state 653
    "<="   shift, and go to state 654
    ">="   shift, and go to state 655
    "=="   shift, and go to state 656
    "!="   shift, and go to state 657
    "->"   shift, and go to state 658
    "??"   shift, and go to state 659
    "?."   shift, and go to state 660
    "?["   shift, and go to state 661
    "<|"   shift, and go to state 662
    "|>"   shift, and go to state 663
    "<<<"  shift, and go to state 664
    ">>>"  shift, and go to state 665
    "&&"   shift, and go to state 666
    "||"   shift, and go to state 667
    "^^"   shift, and go to state 668
    ".."   shift, and go to state 669
    '?'    shift, and go to state 670
    '|'    shift, and go to state 671
    '^'    shift, and go to state 672
    '&'    shift, and go to state 673
    '<'    shift, and go to state 674
    '>'    shift, and go to state 675
    '-'    shift, and go to state 676
    '+'    shift, and go to state 677
    '*'    shift, and go to state 678
    '/'    shift, and go to state 679
    '%'    shift, and go to state 680
    '.'    shift, and go to state 681
    '['    shift, and go to state 682
    ')'    shift, and go to state 1097


State 934

   71 expression_for_loop: "for" '(' variable_name_with_pos_list . "in" expr_list ')' expression_block
  584 variable_name_with_pos_list: variable_name_with_pos_list . ',' "name"
  585                            | variable_name_with_pos_list . ',' "name" "aka" "name"

    "in"  shift, and go to state 1098
    ','   shift, and go to state 928


State 935

  261 expression_return: "return" "<-" expr .
  342 expr_method_call: expr . "->" "name" '(' ')'
  343                 | expr . "->" "name" '(' expr_list ')'
  353 expr_field: expr . '.' "name"
  354           | expr . '.' '.' "name"
  355           | expr . '.' "name" '(' ')'
  356           | expr . '.' "name" '(' expr_list ')'
  357           | expr . '.' basic_type_declaration '(' ')'
  358           | expr . '.' basic_type_declaration '(' expr_list ')'
  361           | expr . '.' $@17 error $@18
  383 expr: expr . "<<" expr
  384     | expr . ">>" expr
  385     | expr . "<<<" expr
  386     | expr . ">>>" expr
  387     | expr . '+' expr
  388     | expr . '-' expr
  389     | expr . '*' expr
  390     | expr . '/' expr
  391     | expr . '%' expr
  392     | expr . '<' expr
  393     | expr . '>' expr
  394     | expr . "==" expr
  395     | expr . "!=" expr
  396     | expr . "<=" expr
  397     | expr . ">=" expr
  398     | expr . '&' expr
  399     | expr . '|' expr
  400     | expr . '^' expr
  401     | expr . "&&" expr
  402     | expr . "||" expr
  403     | expr . "^^" expr
  404     | expr . ".." expr
  407     | expr . "++"
  408     | expr . "--"
  410     | expr . '[' expr ']'
  411     | expr . '.' '[' expr ']'
  412     | expr . "?[" expr ']'
  413     | expr . '.' "?[" expr ']'
  414     | expr . "?." "name"
  415     | expr . '.' "?." "name"
  424     | expr . "??" expr
  425     | expr . '?' expr ':' expr
  428     | expr . "is" "type" '<' $@19 type_declaration_no_options '>' $@20
  429     | expr . "is" basic_type_declaration
  430     | expr . "is" "name"
  431     | expr . "as" "name"
  434     | expr . "as" "type" '<' $@21 type_declaration '>' $@22
  435     | expr . "as" basic_type_declaration
  436     | expr . '?' "as" "name"
  439     | expr . '?' "as" "type" '<' $@23 type_declaration '>' $@24
  440     | expr . '?' "as" basic_type_declaration
  448     | expr . "<|" expr
  449     | expr . "|>" expr
  450     | expr . "|>" basic_type_declaration
  461 expr_mtag: expr . '.' "$f" '(' expr ')'
  462          | expr . "?." "$f" '(' expr ')'
  463          | expr . '.' '.' "$f" '(' expr ')'
  464          | expr . '.' "?." "$f" '(' expr ')'
  465          | expr . "as" "$f" '(' expr ')'
  466          | expr . '?' "as" "$f" '(' expr ')'
  467          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 648
    "as"   shift, and go to state 649
    "<<"   shift, and go to state 650
    ">>"   shift, and go to state 651
    "++"   shift, and go to state 652
    "--"   shift, and go to state 653
    "<="   shift, and go to state 654
    ">="   shift, and go to state 655
    "=="   shift, and go to state 656
    "!="   shift, and go to state 657
    "->"   shift, and go to state 658
    "??"   shift, and go to state 659
    "?."   shift, and go to state 660
    "?["   shift, and go to state 661
    "<|"   shift, and go to state 662
    "|>"   shift, and go to state 663
    "<<<"  shift, and go to state 664
    ">>>"  shift, and go to state 665
    "&&"   shift, and go to state 666
    "||"   shift, and go to state 667
    "^^"   shift, and go to state 668
    ".."   shift, and go to state 669
    '?'    shift, and go to state 670
    '|'    shift, and go to state 671
    '^'    shift, and go to state 672
    '&'    shift, and go to state 673
    '<'    shift, and go to state 674
    '>'    shift, and go to state 675
    '-'    shift, and go to state 676
    '+'    shift, and go to state 677
    '*'    shift, and go to state 678
    '/'    shift, and go to state 679
    '%'    shift, and go to state 680
    '.'    shift, and go to state 681
    '['    shift, and go to state 682

    $default  reduce using rule 261 (expression_return)


State 936

  264 expression_try_catch: "try" expression_block "recover" . expression_block

    "begin of code block"  shift, and go to state 326

    expression_block  go to state 1099


State 937

  246 expression_delete: "delete" "explicit" expr .
  342 expr_method_call: expr . "->" "name" '(' ')'
  343                 | expr . "->" "name" '(' expr_list ')'
  353 expr_field: expr . '.' "name"
  354           | expr . '.' '.' "name"
  355           | expr . '.' "name" '(' ')'
  356           | expr . '.' "name" '(' expr_list ')'
  357           | expr . '.' basic_type_declaration '(' ')'
  358           | expr . '.' basic_type_declaration '(' expr_list ')'
  361           | expr . '.' $@17 error $@18
  383 expr: expr . "<<" expr
  384     | expr . ">>" expr
  385     | expr . "<<<" expr
  386     | expr . ">>>" expr
  387     | expr . '+' expr
  388     | expr . '-' expr
  389     | expr . '*' expr
  390     | expr . '/' expr
  391     | expr . '%' expr
  392     | expr . '<' expr
  393     | expr . '>' expr
  394     | expr . "==" expr
  395     | expr . "!=" expr
  396     | expr . "<=" expr
  397     | expr . ">=" expr
  398     | expr . '&' expr
  399     | expr . '|' expr
  400     | expr . '^' expr
  401     | expr . "&&" expr
  402     | expr . "||" expr
  403     | expr . "^^" expr
  404     | expr . ".." expr
  407     | expr . "++"
  408     | expr . "--"
  410     | expr . '[' expr ']'
  411     | expr . '.' '[' expr ']'
  412     | expr . "?[" expr ']'
  413     | expr . '.' "?[" expr ']'
  414     | expr . "?." "name"
  415     | expr . '.' "?." "name"
  424     | expr . "??" expr
  425     | expr . '?' expr ':' expr
  428     | expr . "is" "type" '<' $@19 type_declaration_no_options '>' $@20
  429     | expr . "is" basic_type_declaration
  430     | expr . "is" "name"
  431     | expr . "as" "name"
  434     | expr . "as" "type" '<' $@21 type_declaration '>' $@22
  435     | expr . "as" basic_type_declaration
  436     | expr . '?' "as" "name"
  439     | expr . '?' "as" "type" '<' $@23 type_declaration '>' $@24
  440     | expr . '?' "as" basic_type_declaration
  448     | expr . "<|" expr
  449     | expr . "|>" expr
  450     | expr . "|>" basic_type_declaration
  461 expr_mtag: expr . '.' "$f" '(' expr ')'
  462          | expr . "?." "$f" '(' expr ')'
  463          | expr . '.' '.' "$f" '(' expr ')'
  464          | expr . '.' "?." "$f" '(' expr ')'
  465          | expr . "as" "$f" '(' expr ')'
  466          | expr . '?' "as" "$f" '(' expr ')'
  467          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 648
    "as"   shift, and go to state 649
    "<<"   shift, and go to state 650
    ">>"   shift, and go to state 651
    "++"   shift, and go to state 652
    "--"   shift, and go to state 653
    "<="   shift, and go to state 654
    ">="   shift, and go to state 655
    "=="   shift, and go to state 656
    "!="   shift, and go to state 657
    "->"   shift, and go to state 658
    "??"   shift, and go to state 659
    "?."   shift, and go to state 660
    "?["   shift, and go to state 661
    "<|"   shift, and go to state 662
    "|>"   shift, and go to state 663
    "<<<"  shift, and go to state 664
    ">>>"  shift, and go to state 665
    "&&"   shift, and go to state 666
    "||"   shift, and go to state 667
    "^^"   shift, and go to state 668
    ".."   shift, and go to state 669
    '?'    shift, and go to state 670
    '|'    shift, and go to state 671
    '^'    shift, and go to state 672
    '&'    shift, and go to state 673
    '<'    shift, and go to state 674
    '>'    shift, and go to state 675
    '-'    shift, and go to state 676
    '+'    shift, and go to state 677
    '*'    shift, and go to state 678
    '/'    shift, and go to state 679
    '%'    shift, and go to state 680
    '.'    shift, and go to state 681
    '['    shift, and go to state 682

    $default  reduce using rule 246 (expression_delete)


State 938

   74 expression_with: "with" '(' expr . ')' expression_block
  342 expr_method_call: expr . "->" "name" '(' ')'
  343                 | expr . "->" "name" '(' expr_list ')'
  353 expr_field: expr . '.' "name"
  354           | expr . '.' '.' "name"
  355           | expr . '.' "name" '(' ')'
  356           | expr . '.' "name" '(' expr_list ')'
  357           | expr . '.' basic_type_declaration '(' ')'
  358           | expr . '.' basic_type_declaration '(' expr_list ')'
  361           | expr . '.' $@17 error $@18
  383 expr: expr . "<<" expr
  384     | expr . ">>" expr
  385     | expr . "<<<" expr
  386     | expr . ">>>" expr
  387     | expr . '+' expr
  388     | expr . '-' expr
  389     | expr . '*' expr
  390     | expr . '/' expr
  391     | expr . '%' expr
  392     | expr . '<' expr
  393     | expr . '>' expr
  394     | expr . "==" expr
  395     | expr . "!=" expr
  396     | expr . "<=" expr
  397     | expr . ">=" expr
  398     | expr . '&' expr
  399     | expr . '|' expr
  400     | expr . '^' expr
  401     | expr . "&&" expr
  402     | expr . "||" expr
  403     | expr . "^^" expr
  404     | expr . ".." expr
  407     | expr . "++"
  408     | expr . "--"
  410     | expr . '[' expr ']'
  411     | expr . '.' '[' expr ']'
  412     | expr . "?[" expr ']'
  413     | expr . '.' "?[" expr ']'
  414     | expr . "?." "name"
  415     | expr . '.' "?." "name"
  424     | expr . "??" expr
  425     | expr . '?' expr ':' expr
  428     | expr . "is" "type" '<' $@19 type_declaration_no_options '>' $@20
  429     | expr . "is" basic_type_declaration
  430     | expr . "is" "name"
  431     | expr . "as" "name"
  434     | expr . "as" "type" '<' $@21 type_declaration '>' $@22
  435     | expr . "as" basic_type_declaration
  436     | expr . '?' "as" "name"
  439     | expr . '?' "as" "type" '<' $@23 type_declaration '>' $@24
  440     | expr . '?' "as" basic_type_declaration
  448     | expr . "<|" expr
  449     | expr . "|>" expr
  450     | expr . "|>" basic_type_declaration
  461 expr_mtag: expr . '.' "$f" '(' expr ')'
  462          | expr . "?." "$f" '(' expr ')'
  463          | expr . '.' '.' "$f" '(' expr ')'
  464          | expr . '.' "?." "$f" '(' expr ')'
  465          | expr . "as" "$f" '(' expr ')'
  466          | expr . '?' "as" "$f" '(' expr ')'
  467          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 648
    "as"   shift, and go to state 649
    "<<"   shift, and go to state 650
    ">>"   shift, and go to state 651
    "++"   shift, and go to state 652
    "--"   shift, and go to state 653
    "<="   shift, and go to state 654
    ">="   shift, and go to state 655
    "=="   shift, and go to state 656
    "!="   shift, and go to state 657
    "->"   shift, and go to state 658
    "??"   shift, and go to state 659
    "?."   shift, and go to state 660
    "?["   shift, and go to state 661
    "<|"   shift, and go to state 662
    "|>"   shift, and go to state 663
    "<<<"  shift, and go to state 664
    ">>>"  shift, and go to state 665
    "&&"   shift, and go to state 666
    "||"   shift, and go to state 667
    "^^"   shift, and go to state 668
    ".."   shift, and go to state 669
    '?'    shift, and go to state 670
    '|'    shift, and go to state 671
    '^'    shift, and go to state 672
    '&'    shift, and go to state 673
    '<'    shift, and go to state 674
    '>'    shift, and go to state 675
    '-'    shift, and go to state 676
    '+'    shift, and go to state 677
    '*'    shift, and go to state 678
    '/'    shift, and go to state 679
    '%'    shift, and go to state 680
    '.'    shift, and go to state 681
    '['    shift, and go to state 682
    ')'    shift, and go to state 1100


State 939

   75 expression_with_alias: "assume" "name" '=' . expr

    "struct"                          shift, and go to state 409
    "class"                           shift, and go to state 410
    "true"                            shift, and go to state 411
    "false"                           shift, and go to state 412
    "new"                             shift, and go to state 413
    "typeinfo"                        shift, and go to state 414
    "type"                            shift, and go to state 415
    "array"                           shift, and go to state 416
    "null"                            shift, and go to state 417
    "table"                           shift, and go to state 418
    "deref"                           shift, and go to state 419
    "cast"                            shift, and go to state 420
    "upcast"                          shift, and go to state 421
    "addr"                            shift, and go to state 422
    "reinterpret"                     shift, and go to state 423
    "unsafe"                          shift, and go to state 424
    "fixed_array"                     shift, and go to state 425
    "default"                         shift, and go to state 426
    "bool"                            shift, and go to state 225
    "void"                            shift, and go to state 226
    "string"                          shift, and go to state 227
    "int"                             shift, and go to state 229
    "int2"                            shift, and go to state 230
    "int3"                            shift, and go to state 231
    "int4"                            shift, and go to state 232
    "uint"                            shift, and go to state 233
    "bitfield"                        shift, and go to state 427
    "uint2"                           shift, and go to state 235
    "uint3"                           shift, and go to state 236
    "uint4"                           shift, and go to state 237
    "float"                           shift, and go to state 238
    "float2"                          shift, and go to state 239
    "float3"                          shift, and go to state 240
    "float4"                          shift, and go to state 241
    "range"                           shift, and go to state 242
    "urange"                          shift, and go to state 243
    "range64"                         shift, and go to state 244
    "urange64"                        shift, and go to state 245
    "int64"                           shift, and go to state 247
    "uint64"                          shift, and go to state 248
    "double"                          shift, and go to state 249
    "int8"                            shift, and go to state 252
    "uint8"                           shift, and go to state 253
    "int16"                           shift, and go to state 254
    "uint16"                          shift, and go to state 255
    "tuple"                           shift, and go to state 428
    "variant"                         shift, and go to state 429
    "generator"                       shift, and go to state 430
    "++"                              shift, and go to state 431
    "--"                              shift, and go to state 432
    "::"                              shift, and go to state 55
    "$$"                              shift, and go to state 433
    "$i"                              shift, and go to state 434
    "$v"                              shift, and go to state 435
    "$b"                              shift, and go to state 436
    "$a"                              shift, and go to state 437
    "$c"                              shift, and go to state 438
    "..."                             shift, and go to state 439
    "integer constant"                shift, and go to state 440
    "long integer constant"           shift, and go to state 441
    "unsigned integer constant"       shift, and go to state 442
    "unsigned long integer constant"  shift, and go to state 443
    "unsigned int8 constant"          shift, and go to state 444
    "floating point constant"         shift, and go to state 445
    "double constant"                 shift, and go to state 446
    "name"                            shift, and go to state 56
    "start of the string"             shift, and go to state 447
    "begin of code block"             shift, and go to state 448
    '-'                               shift, and go to state 449
    '+'                               shift, and go to state 450
    '*'                               shift, and go to state 451
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 452
    '!'                               shift, and go to state 453
    '['                               shift, and go to state 454
    '('                               shift, and go to state 455
    '$'                               shift, and go to state 456
    '@'                               shift, and go to state 457

    string_builder          go to state 458
    expr_reader             go to state 459
    expr_call_pipe          go to state 460
    name_in_namespace       go to state 461
    expr_new                go to state 462
    expr_cast               go to state 463
    expr_type_decl          go to state 464
    expr_type_info          go to state 465
    block_or_lambda         go to state 466
    expr_full_block         go to state 467
    expr_numeric_const      go to state 468
    expr_named_call         go to state 469
    expr_method_call        go to state 470
    func_addr_expr          go to state 471
    expr_field              go to state 472
    expr_call               go to state 473
    expr                    go to state 1101
    expr_mtag               go to state 475
    basic_type_declaration  go to state 476
    make_decl               go to state 477
    make_struct_decl        go to state 478
    make_tuple_call         go to state 479
    make_dim_decl           go to state 480
    make_table_decl         go to state 481
    array_comprehension     go to state 482


State 940

   52 expression_label: "label" "integer constant" ':' .

    $default  reduce using rule 52 (expression_label)


State 941

   53 expression_goto: "goto" "label" "integer constant" .

    $default  reduce using rule 53 (expression_goto)


State 942

  263 expression_yield: "yield" "<-" expr .
  342 expr_method_call: expr . "->" "name" '(' ')'
  343                 | expr . "->" "name" '(' expr_list ')'
  353 expr_field: expr . '.' "name"
  354           | expr . '.' '.' "name"
  355           | expr . '.' "name" '(' ')'
  356           | expr . '.' "name" '(' expr_list ')'
  357           | expr . '.' basic_type_declaration '(' ')'
  358           | expr . '.' basic_type_declaration '(' expr_list ')'
  361           | expr . '.' $@17 error $@18
  383 expr: expr . "<<" expr
  384     | expr . ">>" expr
  385     | expr . "<<<" expr
  386     | expr . ">>>" expr
  387     | expr . '+' expr
  388     | expr . '-' expr
  389     | expr . '*' expr
  390     | expr . '/' expr
  391     | expr . '%' expr
  392     | expr . '<' expr
  393     | expr . '>' expr
  394     | expr . "==" expr
  395     | expr . "!=" expr
  396     | expr . "<=" expr
  397     | expr . ">=" expr
  398     | expr . '&' expr
  399     | expr . '|' expr
  400     | expr . '^' expr
  401     | expr . "&&" expr
  402     | expr . "||" expr
  403     | expr . "^^" expr
  404     | expr . ".." expr
  407     | expr . "++"
  408     | expr . "--"
  410     | expr . '[' expr ']'
  411     | expr . '.' '[' expr ']'
  412     | expr . "?[" expr ']'
  413     | expr . '.' "?[" expr ']'
  414     | expr . "?." "name"
  415     | expr . '.' "?." "name"
  424     | expr . "??" expr
  425     | expr . '?' expr ':' expr
  428     | expr . "is" "type" '<' $@19 type_declaration_no_options '>' $@20
  429     | expr . "is" basic_type_declaration
  430     | expr . "is" "name"
  431     | expr . "as" "name"
  434     | expr . "as" "type" '<' $@21 type_declaration '>' $@22
  435     | expr . "as" basic_type_declaration
  436     | expr . '?' "as" "name"
  439     | expr . '?' "as" "type" '<' $@23 type_declaration '>' $@24
  440     | expr . '?' "as" basic_type_declaration
  448     | expr . "<|" expr
  449     | expr . "|>" expr
  450     | expr . "|>" basic_type_declaration
  461 expr_mtag: expr . '.' "$f" '(' expr ')'
  462          | expr . "?." "$f" '(' expr ')'
  463          | expr . '.' '.' "$f" '(' expr ')'
  464          | expr . '.' "?." "$f" '(' expr ')'
  465          | expr . "as" "$f" '(' expr ')'
  466          | expr . '?' "as" "$f" '(' expr ')'
  467          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 648
    "as"   shift, and go to state 649
    "<<"   shift, and go to state 650
    ">>"   shift, and go to state 651
    "++"   shift, and go to state 652
    "--"   shift, and go to state 653
    "<="   shift, and go to state 654
    ">="   shift, and go to state 655
    "=="   shift, and go to state 656
    "!="   shift, and go to state 657
    "->"   shift, and go to state 658
    "??"   shift, and go to state 659
    "?."   shift, and go to state 660
    "?["   shift, and go to state 661
    "<|"   shift, and go to state 662
    "|>"   shift, and go to state 663
    "<<<"  shift, and go to state 664
    ">>>"  shift, and go to state 665
    "&&"   shift, and go to state 666
    "||"   shift, and go to state 667
    "^^"   shift, and go to state 668
    ".."   shift, and go to state 669
    '?'    shift, and go to state 670
    '|'    shift, and go to state 671
    '^'    shift, and go to state 672
    '&'    shift, and go to state 673
    '<'    shift, and go to state 674
    '>'    shift, and go to state 675
    '-'    shift, and go to state 676
    '+'    shift, and go to state 677
    '*'    shift, and go to state 678
    '/'    shift, and go to state 679
    '%'    shift, and go to state 680
    '.'    shift, and go to state 681
    '['    shift, and go to state 682

    $default  reduce using rule 263 (expression_yield)


State 943

  213 expression_block: "begin of code block" expressions "end of code block" "finally" "begin of code block" . expressions "end of code block"

    $default  reduce using rule 233 (expressions)

    expressions  go to state 1102


State 944

   69 expression_if_then_else: if_or_static_if '(' expr . ')' expression_block expression_else
  342 expr_method_call: expr . "->" "name" '(' ')'
  343                 | expr . "->" "name" '(' expr_list ')'
  353 expr_field: expr . '.' "name"
  354           | expr . '.' '.' "name"
  355           | expr . '.' "name" '(' ')'
  356           | expr . '.' "name" '(' expr_list ')'
  357           | expr . '.' basic_type_declaration '(' ')'
  358           | expr . '.' basic_type_declaration '(' expr_list ')'
  361           | expr . '.' $@17 error $@18
  383 expr: expr . "<<" expr
  384     | expr . ">>" expr
  385     | expr . "<<<" expr
  386     | expr . ">>>" expr
  387     | expr . '+' expr
  388     | expr . '-' expr
  389     | expr . '*' expr
  390     | expr . '/' expr
  391     | expr . '%' expr
  392     | expr . '<' expr
  393     | expr . '>' expr
  394     | expr . "==" expr
  395     | expr . "!=" expr
  396     | expr . "<=" expr
  397     | expr . ">=" expr
  398     | expr . '&' expr
  399     | expr . '|' expr
  400     | expr . '^' expr
  401     | expr . "&&" expr
  402     | expr . "||" expr
  403     | expr . "^^" expr
  404     | expr . ".." expr
  407     | expr . "++"
  408     | expr . "--"
  410     | expr . '[' expr ']'
  411     | expr . '.' '[' expr ']'
  412     | expr . "?[" expr ']'
  413     | expr . '.' "?[" expr ']'
  414     | expr . "?." "name"
  415     | expr . '.' "?." "name"
  424     | expr . "??" expr
  425     | expr . '?' expr ':' expr
  428     | expr . "is" "type" '<' $@19 type_declaration_no_options '>' $@20
  429     | expr . "is" basic_type_declaration
  430     | expr . "is" "name"
  431     | expr . "as" "name"
  434     | expr . "as" "type" '<' $@21 type_declaration '>' $@22
  435     | expr . "as" basic_type_declaration
  436     | expr . '?' "as" "name"
  439     | expr . '?' "as" "type" '<' $@23 type_declaration '>' $@24
  440     | expr . '?' "as" basic_type_declaration
  448     | expr . "<|" expr
  449     | expr . "|>" expr
  450     | expr . "|>" basic_type_declaration
  461 expr_mtag: expr . '.' "$f" '(' expr ')'
  462          | expr . "?." "$f" '(' expr ')'
  463          | expr . '.' '.' "$f" '(' expr ')'
  464          | expr . '.' "?." "$f" '(' expr ')'
  465          | expr . "as" "$f" '(' expr ')'
  466          | expr . '?' "as" "$f" '(' expr ')'
  467          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 648
    "as"   shift, and go to state 649
    "<<"   shift, and go to state 650
    ">>"   shift, and go to state 651
    "++"   shift, and go to state 652
    "--"   shift, and go to state 653
    "<="   shift, and go to state 654
    ">="   shift, and go to state 655
    "=="   shift, and go to state 656
    "!="   shift, and go to state 657
    "->"   shift, and go to state 658
    "??"   shift, and go to state 659
    "?."   shift, and go to state 660
    "?["   shift, and go to state 661
    "<|"   shift, and go to state 662
    "|>"   shift, and go to state 663
    "<<<"  shift, and go to state 664
    ">>>"  shift, and go to state 665
    "&&"   shift, and go to state 666
    "||"   shift, and go to state 667
    "^^"   shift, and go to state 668
    ".."   shift, and go to state 669
    '?'    shift, and go to state 670
    '|'    shift, and go to state 671
    '^'    shift, and go to state 672
    '&'    shift, and go to state 673
    '<'    shift, and go to state 674
    '>'    shift, and go to state 675
    '-'    shift, and go to state 676
    '+'    shift, and go to state 677
    '*'    shift, and go to state 678
    '/'    shift, and go to state 679
    '%'    shift, and go to state 680
    '.'    shift, and go to state 681
    '['    shift, and go to state 682
    ')'    shift, and go to state 1103


State 945

   70 expression_if_then_else: expression_if_one_liner "if" '(' . expr ')' expression_else_one_liner "end of expression"

    "struct"                          shift, and go to state 409
    "class"                           shift, and go to state 410
    "true"                            shift, and go to state 411
    "false"                           shift, and go to state 412
    "new"                             shift, and go to state 413
    "typeinfo"                        shift, and go to state 414
    "type"                            shift, and go to state 415
    "array"                           shift, and go to state 416
    "null"                            shift, and go to state 417
    "table"                           shift, and go to state 418
    "deref"                           shift, and go to state 419
    "cast"                            shift, and go to state 420
    "upcast"                          shift, and go to state 421
    "addr"                            shift, and go to state 422
    "reinterpret"                     shift, and go to state 423
    "unsafe"                          shift, and go to state 424
    "fixed_array"                     shift, and go to state 425
    "default"                         shift, and go to state 426
    "bool"                            shift, and go to state 225
    "void"                            shift, and go to state 226
    "string"                          shift, and go to state 227
    "int"                             shift, and go to state 229
    "int2"                            shift, and go to state 230
    "int3"                            shift, and go to state 231
    "int4"                            shift, and go to state 232
    "uint"                            shift, and go to state 233
    "bitfield"                        shift, and go to state 427
    "uint2"                           shift, and go to state 235
    "uint3"                           shift, and go to state 236
    "uint4"                           shift, and go to state 237
    "float"                           shift, and go to state 238
    "float2"                          shift, and go to state 239
    "float3"                          shift, and go to state 240
    "float4"                          shift, and go to state 241
    "range"                           shift, and go to state 242
    "urange"                          shift, and go to state 243
    "range64"                         shift, and go to state 244
    "urange64"                        shift, and go to state 245
    "int64"                           shift, and go to state 247
    "uint64"                          shift, and go to state 248
    "double"                          shift, and go to state 249
    "int8"                            shift, and go to state 252
    "uint8"                           shift, and go to state 253
    "int16"                           shift, and go to state 254
    "uint16"                          shift, and go to state 255
    "tuple"                           shift, and go to state 428
    "variant"                         shift, and go to state 429
    "generator"                       shift, and go to state 430
    "++"                              shift, and go to state 431
    "--"                              shift, and go to state 432
    "::"                              shift, and go to state 55
    "$$"                              shift, and go to state 433
    "$i"                              shift, and go to state 434
    "$v"                              shift, and go to state 435
    "$b"                              shift, and go to state 436
    "$a"                              shift, and go to state 437
    "$c"                              shift, and go to state 438
    "..."                             shift, and go to state 439
    "integer constant"                shift, and go to state 440
    "long integer constant"           shift, and go to state 441
    "unsigned integer constant"       shift, and go to state 442
    "unsigned long integer constant"  shift, and go to state 443
    "unsigned int8 constant"          shift, and go to state 444
    "floating point constant"         shift, and go to state 445
    "double constant"                 shift, and go to state 446
    "name"                            shift, and go to state 56
    "start of the string"             shift, and go to state 447
    "begin of code block"             shift, and go to state 448
    '-'                               shift, and go to state 449
    '+'                               shift, and go to state 450
    '*'                               shift, and go to state 451
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 452
    '!'                               shift, and go to state 453
    '['                               shift, and go to state 454
    '('                               shift, and go to state 455
    '$'                               shift, and go to state 456
    '@'                               shift, and go to state 457

    string_builder          go to state 458
    expr_reader             go to state 459
    expr_call_pipe          go to state 460
    name_in_namespace       go to state 461
    expr_new                go to state 462
    expr_cast               go to state 463
    expr_type_decl          go to state 464
    expr_type_info          go to state 465
    block_or_lambda         go to state 466
    expr_full_block         go to state 467
    expr_numeric_const      go to state 468
    expr_named_call         go to state 469
    expr_method_call        go to state 470
    func_addr_expr          go to state 471
    expr_field              go to state 472
    expr_call               go to state 473
    expr                    go to state 1104
    expr_mtag               go to state 475
    basic_type_declaration  go to state 476
    make_decl               go to state 477
    make_struct_decl        go to state 478
    make_tuple_call         go to state 479
    make_dim_decl           go to state 480
    make_table_decl         go to state 481
    array_comprehension     go to state 482


State 946

  278 expression_let: kwd_let optional_in_scope "begin of code block" . variable_declaration_list "end of code block"

    $default  reduce using rule 525 (variable_declaration_list)

    variable_declaration_list  go to state 1105


State 947

  274 tuple_expansion_variable_declaration: '(' . tuple_expansion ')' ':' type_declaration_no_options copy_or_move_or_clone expr "end of expression"
  275                                     | '(' . tuple_expansion ')' optional_ref copy_or_move_or_clone expr "end of expression"

    "name"  shift, and go to state 1106

    tuple_expansion  go to state 1107


State 948

  277 expression_let: kwd_let optional_in_scope tuple_expansion_variable_declaration .

    $default  reduce using rule 277 (expression_let)


State 949

  276 expression_let: kwd_let optional_in_scope let_variable_declaration .

    $default  reduce using rule 276 (expression_let)


State 950

  331 expr_assign: expr "+=" expr .
  342 expr_method_call: expr . "->" "name" '(' ')'
  343                 | expr . "->" "name" '(' expr_list ')'
  353 expr_field: expr . '.' "name"
  354           | expr . '.' '.' "name"
  355           | expr . '.' "name" '(' ')'
  356           | expr . '.' "name" '(' expr_list ')'
  357           | expr . '.' basic_type_declaration '(' ')'
  358           | expr . '.' basic_type_declaration '(' expr_list ')'
  361           | expr . '.' $@17 error $@18
  383 expr: expr . "<<" expr
  384     | expr . ">>" expr
  385     | expr . "<<<" expr
  386     | expr . ">>>" expr
  387     | expr . '+' expr
  388     | expr . '-' expr
  389     | expr . '*' expr
  390     | expr . '/' expr
  391     | expr . '%' expr
  392     | expr . '<' expr
  393     | expr . '>' expr
  394     | expr . "==" expr
  395     | expr . "!=" expr
  396     | expr . "<=" expr
  397     | expr . ">=" expr
  398     | expr . '&' expr
  399     | expr . '|' expr
  400     | expr . '^' expr
  401     | expr . "&&" expr
  402     | expr . "||" expr
  403     | expr . "^^" expr
  404     | expr . ".." expr
  407     | expr . "++"
  408     | expr . "--"
  410     | expr . '[' expr ']'
  411     | expr . '.' '[' expr ']'
  412     | expr . "?[" expr ']'
  413     | expr . '.' "?[" expr ']'
  414     | expr . "?." "name"
  415     | expr . '.' "?." "name"
  424     | expr . "??" expr
  425     | expr . '?' expr ':' expr
  428     | expr . "is" "type" '<' $@19 type_declaration_no_options '>' $@20
  429     | expr . "is" basic_type_declaration
  430     | expr . "is" "name"
  431     | expr . "as" "name"
  434     | expr . "as" "type" '<' $@21 type_declaration '>' $@22
  435     | expr . "as" basic_type_declaration
  436     | expr . '?' "as" "name"
  439     | expr . '?' "as" "type" '<' $@23 type_declaration '>' $@24
  440     | expr . '?' "as" basic_type_declaration
  448     | expr . "<|" expr
  449     | expr . "|>" expr
  450     | expr . "|>" basic_type_declaration
  461 expr_mtag: expr . '.' "$f" '(' expr ')'
  462          | expr . "?." "$f" '(' expr ')'
  463          | expr . '.' '.' "$f" '(' expr ')'
  464          | expr . '.' "?." "$f" '(' expr ')'
  465          | expr . "as" "$f" '(' expr ')'
  466          | expr . '?' "as" "$f" '(' expr ')'
  467          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 648
    "as"   shift, and go to state 649
    "<<"   shift, and go to state 650
    ">>"   shift, and go to state 651
    "++"   shift, and go to state 652
    "--"   shift, and go to state 653
    "<="   shift, and go to state 654
    ">="   shift, and go to state 655
    "=="   shift, and go to state 656
    "!="   shift, and go to state 657
    "->"   shift, and go to state 658
    "??"   shift, and go to state 659
    "?."   shift, and go to state 660
    "?["   shift, and go to state 661
    "<|"   shift, and go to state 662
    "|>"   shift, and go to state 663
    "<<<"  shift, and go to state 664
    ">>>"  shift, and go to state 665
    "&&"   shift, and go to state 666
    "||"   shift, and go to state 667
    "^^"   shift, and go to state 668
    ".."   shift, and go to state 669
    '?'    shift, and go to state 670
    '|'    shift, and go to state 671
    '^'    shift, and go to state 672
    '&'    shift, and go to state 673
    '<'    shift, and go to state 674
    '>'    shift, and go to state 675
    '-'    shift, and go to state 676
    '+'    shift, and go to state 677
    '*'    shift, and go to state 678
    '/'    shift, and go to state 679
    '%'    shift, and go to state 680
    '.'    shift, and go to state 681
    '['    shift, and go to state 682

    $default  reduce using rule 331 (expr_assign)


State 951

  332 expr_assign: expr "-=" expr .
  342 expr_method_call: expr . "->" "name" '(' ')'
  343                 | expr . "->" "name" '(' expr_list ')'
  353 expr_field: expr . '.' "name"
  354           | expr . '.' '.' "name"
  355           | expr . '.' "name" '(' ')'
  356           | expr . '.' "name" '(' expr_list ')'
  357           | expr . '.' basic_type_declaration '(' ')'
  358           | expr . '.' basic_type_declaration '(' expr_list ')'
  361           | expr . '.' $@17 error $@18
  383 expr: expr . "<<" expr
  384     | expr . ">>" expr
  385     | expr . "<<<" expr
  386     | expr . ">>>" expr
  387     | expr . '+' expr
  388     | expr . '-' expr
  389     | expr . '*' expr
  390     | expr . '/' expr
  391     | expr . '%' expr
  392     | expr . '<' expr
  393     | expr . '>' expr
  394     | expr . "==" expr
  395     | expr . "!=" expr
  396     | expr . "<=" expr
  397     | expr . ">=" expr
  398     | expr . '&' expr
  399     | expr . '|' expr
  400     | expr . '^' expr
  401     | expr . "&&" expr
  402     | expr . "||" expr
  403     | expr . "^^" expr
  404     | expr . ".." expr
  407     | expr . "++"
  408     | expr . "--"
  410     | expr . '[' expr ']'
  411     | expr . '.' '[' expr ']'
  412     | expr . "?[" expr ']'
  413     | expr . '.' "?[" expr ']'
  414     | expr . "?." "name"
  415     | expr . '.' "?." "name"
  424     | expr . "??" expr
  425     | expr . '?' expr ':' expr
  428     | expr . "is" "type" '<' $@19 type_declaration_no_options '>' $@20
  429     | expr . "is" basic_type_declaration
  430     | expr . "is" "name"
  431     | expr . "as" "name"
  434     | expr . "as" "type" '<' $@21 type_declaration '>' $@22
  435     | expr . "as" basic_type_declaration
  436     | expr . '?' "as" "name"
  439     | expr . '?' "as" "type" '<' $@23 type_declaration '>' $@24
  440     | expr . '?' "as" basic_type_declaration
  448     | expr . "<|" expr
  449     | expr . "|>" expr
  450     | expr . "|>" basic_type_declaration
  461 expr_mtag: expr . '.' "$f" '(' expr ')'
  462          | expr . "?." "$f" '(' expr ')'
  463          | expr . '.' '.' "$f" '(' expr ')'
  464          | expr . '.' "?." "$f" '(' expr ')'
  465          | expr . "as" "$f" '(' expr ')'
  466          | expr . '?' "as" "$f" '(' expr ')'
  467          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 648
    "as"   shift, and go to state 649
    "<<"   shift, and go to state 650
    ">>"   shift, and go to state 651
    "++"   shift, and go to state 652
    "--"   shift, and go to state 653
    "<="   shift, and go to state 654
    ">="   shift, and go to state 655
    "=="   shift, and go to state 656
    "!="   shift, and go to state 657
    "->"   shift, and go to state 658
    "??"   shift, and go to state 659
    "?."   shift, and go to state 660
    "?["   shift, and go to state 661
    "<|"   shift, and go to state 662
    "|>"   shift, and go to state 663
    "<<<"  shift, and go to state 664
    ">>>"  shift, and go to state 665
    "&&"   shift, and go to state 666
    "||"   shift, and go to state 667
    "^^"   shift, and go to state 668
    ".."   shift, and go to state 669
    '?'    shift, and go to state 670
    '|'    shift, and go to state 671
    '^'    shift, and go to state 672
    '&'    shift, and go to state 673
    '<'    shift, and go to state 674
    '>'    shift, and go to state 675
    '-'    shift, and go to state 676
    '+'    shift, and go to state 677
    '*'    shift, and go to state 678
    '/'    shift, and go to state 679
    '%'    shift, and go to state 680
    '.'    shift, and go to state 681
    '['    shift, and go to state 682

    $default  reduce using rule 332 (expr_assign)


State 952

  334 expr_assign: expr "/=" expr .
  342 expr_method_call: expr . "->" "name" '(' ')'
  343                 | expr . "->" "name" '(' expr_list ')'
  353 expr_field: expr . '.' "name"
  354           | expr . '.' '.' "name"
  355           | expr . '.' "name" '(' ')'
  356           | expr . '.' "name" '(' expr_list ')'
  357           | expr . '.' basic_type_declaration '(' ')'
  358           | expr . '.' basic_type_declaration '(' expr_list ')'
  361           | expr . '.' $@17 error $@18
  383 expr: expr . "<<" expr
  384     | expr . ">>" expr
  385     | expr . "<<<" expr
  386     | expr . ">>>" expr
  387     | expr . '+' expr
  388     | expr . '-' expr
  389     | expr . '*' expr
  390     | expr . '/' expr
  391     | expr . '%' expr
  392     | expr . '<' expr
  393     | expr . '>' expr
  394     | expr . "==" expr
  395     | expr . "!=" expr
  396     | expr . "<=" expr
  397     | expr . ">=" expr
  398     | expr . '&' expr
  399     | expr . '|' expr
  400     | expr . '^' expr
  401     | expr . "&&" expr
  402     | expr . "||" expr
  403     | expr . "^^" expr
  404     | expr . ".." expr
  407     | expr . "++"
  408     | expr . "--"
  410     | expr . '[' expr ']'
  411     | expr . '.' '[' expr ']'
  412     | expr . "?[" expr ']'
  413     | expr . '.' "?[" expr ']'
  414     | expr . "?." "name"
  415     | expr . '.' "?." "name"
  424     | expr . "??" expr
  425     | expr . '?' expr ':' expr
  428     | expr . "is" "type" '<' $@19 type_declaration_no_options '>' $@20
  429     | expr . "is" basic_type_declaration
  430     | expr . "is" "name"
  431     | expr . "as" "name"
  434     | expr . "as" "type" '<' $@21 type_declaration '>' $@22
  435     | expr . "as" basic_type_declaration
  436     | expr . '?' "as" "name"
  439     | expr . '?' "as" "type" '<' $@23 type_declaration '>' $@24
  440     | expr . '?' "as" basic_type_declaration
  448     | expr . "<|" expr
  449     | expr . "|>" expr
  450     | expr . "|>" basic_type_declaration
  461 expr_mtag: expr . '.' "$f" '(' expr ')'
  462          | expr . "?." "$f" '(' expr ')'
  463          | expr . '.' '.' "$f" '(' expr ')'
  464          | expr . '.' "?." "$f" '(' expr ')'
  465          | expr . "as" "$f" '(' expr ')'
  466          | expr . '?' "as" "$f" '(' expr ')'
  467          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 648
    "as"   shift, and go to state 649
    "<<"   shift, and go to state 650
    ">>"   shift, and go to state 651
    "++"   shift, and go to state 652
    "--"   shift, and go to state 653
    "<="   shift, and go to state 654
    ">="   shift, and go to state 655
    "=="   shift, and go to state 656
    "!="   shift, and go to state 657
    "->"   shift, and go to state 658
    "??"   shift, and go to state 659
    "?."   shift, and go to state 660
    "?["   shift, and go to state 661
    "<|"   shift, and go to state 662
    "|>"   shift, and go to state 663
    "<<<"  shift, and go to state 664
    ">>>"  shift, and go to state 665
    "&&"   shift, and go to state 666
    "||"   shift, and go to state 667
    "^^"   shift, and go to state 668
    ".."   shift, and go to state 669
    '?'    shift, and go to state 670
    '|'    shift, and go to state 671
    '^'    shift, and go to state 672
    '&'    shift, and go to state 673
    '<'    shift, and go to state 674
    '>'    shift, and go to state 675
    '-'    shift, and go to state 676
    '+'    shift, and go to state 677
    '*'    shift, and go to state 678
    '/'    shift, and go to state 679
    '%'    shift, and go to state 680
    '.'    shift, and go to state 681
    '['    shift, and go to state 682

    $default  reduce using rule 334 (expr_assign)


State 953

  333 expr_assign: expr "*=" expr .
  342 expr_method_call: expr . "->" "name" '(' ')'
  343                 | expr . "->" "name" '(' expr_list ')'
  353 expr_field: expr . '.' "name"
  354           | expr . '.' '.' "name"
  355           | expr . '.' "name" '(' ')'
  356           | expr . '.' "name" '(' expr_list ')'
  357           | expr . '.' basic_type_declaration '(' ')'
  358           | expr . '.' basic_type_declaration '(' expr_list ')'
  361           | expr . '.' $@17 error $@18
  383 expr: expr . "<<" expr
  384     | expr . ">>" expr
  385     | expr . "<<<" expr
  386     | expr . ">>>" expr
  387     | expr . '+' expr
  388     | expr . '-' expr
  389     | expr . '*' expr
  390     | expr . '/' expr
  391     | expr . '%' expr
  392     | expr . '<' expr
  393     | expr . '>' expr
  394     | expr . "==" expr
  395     | expr . "!=" expr
  396     | expr . "<=" expr
  397     | expr . ">=" expr
  398     | expr . '&' expr
  399     | expr . '|' expr
  400     | expr . '^' expr
  401     | expr . "&&" expr
  402     | expr . "||" expr
  403     | expr . "^^" expr
  404     | expr . ".." expr
  407     | expr . "++"
  408     | expr . "--"
  410     | expr . '[' expr ']'
  411     | expr . '.' '[' expr ']'
  412     | expr . "?[" expr ']'
  413     | expr . '.' "?[" expr ']'
  414     | expr . "?." "name"
  415     | expr . '.' "?." "name"
  424     | expr . "??" expr
  425     | expr . '?' expr ':' expr
  428     | expr . "is" "type" '<' $@19 type_declaration_no_options '>' $@20
  429     | expr . "is" basic_type_declaration
  430     | expr . "is" "name"
  431     | expr . "as" "name"
  434     | expr . "as" "type" '<' $@21 type_declaration '>' $@22
  435     | expr . "as" basic_type_declaration
  436     | expr . '?' "as" "name"
  439     | expr . '?' "as" "type" '<' $@23 type_declaration '>' $@24
  440     | expr . '?' "as" basic_type_declaration
  448     | expr . "<|" expr
  449     | expr . "|>" expr
  450     | expr . "|>" basic_type_declaration
  461 expr_mtag: expr . '.' "$f" '(' expr ')'
  462          | expr . "?." "$f" '(' expr ')'
  463          | expr . '.' '.' "$f" '(' expr ')'
  464          | expr . '.' "?." "$f" '(' expr ')'
  465          | expr . "as" "$f" '(' expr ')'
  466          | expr . '?' "as" "$f" '(' expr ')'
  467          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 648
    "as"   shift, and go to state 649
    "<<"   shift, and go to state 650
    ">>"   shift, and go to state 651
    "++"   shift, and go to state 652
    "--"   shift, and go to state 653
    "<="   shift, and go to state 654
    ">="   shift, and go to state 655
    "=="   shift, and go to state 656
    "!="   shift, and go to state 657
    "->"   shift, and go to state 658
    "??"   shift, and go to state 659
    "?."   shift, and go to state 660
    "?["   shift, and go to state 661
    "<|"   shift, and go to state 662
    "|>"   shift, and go to state 663
    "<<<"  shift, and go to state 664
    ">>>"  shift, and go to state 665
    "&&"   shift, and go to state 666
    "||"   shift, and go to state 667
    "^^"   shift, and go to state 668
    ".."   shift, and go to state 669
    '?'    shift, and go to state 670
    '|'    shift, and go to state 671
    '^'    shift, and go to state 672
    '&'    shift, and go to state 673
    '<'    shift, and go to state 674
    '>'    shift, and go to state 675
    '-'    shift, and go to state 676
    '+'    shift, and go to state 677
    '*'    shift, and go to state 678
    '/'    shift, and go to state 679
    '%'    shift, and go to state 680
    '.'    shift, and go to state 681
    '['    shift, and go to state 682

    $default  reduce using rule 333 (expr_assign)


State 954

  335 expr_assign: expr "%=" expr .
  342 expr_method_call: expr . "->" "name" '(' ')'
  343                 | expr . "->" "name" '(' expr_list ')'
  353 expr_field: expr . '.' "name"
  354           | expr . '.' '.' "name"
  355           | expr . '.' "name" '(' ')'
  356           | expr . '.' "name" '(' expr_list ')'
  357           | expr . '.' basic_type_declaration '(' ')'
  358           | expr . '.' basic_type_declaration '(' expr_list ')'
  361           | expr . '.' $@17 error $@18
  383 expr: expr . "<<" expr
  384     | expr . ">>" expr
  385     | expr . "<<<" expr
  386     | expr . ">>>" expr
  387     | expr . '+' expr
  388     | expr . '-' expr
  389     | expr . '*' expr
  390     | expr . '/' expr
  391     | expr . '%' expr
  392     | expr . '<' expr
  393     | expr . '>' expr
  394     | expr . "==" expr
  395     | expr . "!=" expr
  396     | expr . "<=" expr
  397     | expr . ">=" expr
  398     | expr . '&' expr
  399     | expr . '|' expr
  400     | expr . '^' expr
  401     | expr . "&&" expr
  402     | expr . "||" expr
  403     | expr . "^^" expr
  404     | expr . ".." expr
  407     | expr . "++"
  408     | expr . "--"
  410     | expr . '[' expr ']'
  411     | expr . '.' '[' expr ']'
  412     | expr . "?[" expr ']'
  413     | expr . '.' "?[" expr ']'
  414     | expr . "?." "name"
  415     | expr . '.' "?." "name"
  424     | expr . "??" expr
  425     | expr . '?' expr ':' expr
  428     | expr . "is" "type" '<' $@19 type_declaration_no_options '>' $@20
  429     | expr . "is" basic_type_declaration
  430     | expr . "is" "name"
  431     | expr . "as" "name"
  434     | expr . "as" "type" '<' $@21 type_declaration '>' $@22
  435     | expr . "as" basic_type_declaration
  436     | expr . '?' "as" "name"
  439     | expr . '?' "as" "type" '<' $@23 type_declaration '>' $@24
  440     | expr . '?' "as" basic_type_declaration
  448     | expr . "<|" expr
  449     | expr . "|>" expr
  450     | expr . "|>" basic_type_declaration
  461 expr_mtag: expr . '.' "$f" '(' expr ')'
  462          | expr . "?." "$f" '(' expr ')'
  463          | expr . '.' '.' "$f" '(' expr ')'
  464          | expr . '.' "?." "$f" '(' expr ')'
  465          | expr . "as" "$f" '(' expr ')'
  466          | expr . '?' "as" "$f" '(' expr ')'
  467          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 648
    "as"   shift, and go to state 649
    "<<"   shift, and go to state 650
    ">>"   shift, and go to state 651
    "++"   shift, and go to state 652
    "--"   shift, and go to state 653
    "<="   shift, and go to state 654
    ">="   shift, and go to state 655
    "=="   shift, and go to state 656
    "!="   shift, and go to state 657
    "->"   shift, and go to state 658
    "??"   shift, and go to state 659
    "?."   shift, and go to state 660
    "?["   shift, and go to state 661
    "<|"   shift, and go to state 662
    "|>"   shift, and go to state 663
    "<<<"  shift, and go to state 664
    ">>>"  shift, and go to state 665
    "&&"   shift, and go to state 666
    "||"   shift, and go to state 667
    "^^"   shift, and go to state 668
    ".."   shift, and go to state 669
    '?'    shift, and go to state 670
    '|'    shift, and go to state 671
    '^'    shift, and go to state 672
    '&'    shift, and go to state 673
    '<'    shift, and go to state 674
    '>'    shift, and go to state 675
    '-'    shift, and go to state 676
    '+'    shift, and go to state 677
    '*'    shift, and go to state 678
    '/'    shift, and go to state 679
    '%'    shift, and go to state 680
    '.'    shift, and go to state 681
    '['    shift, and go to state 682

    $default  reduce using rule 335 (expr_assign)


State 955

  325 expr_assign: expr "&=" expr .
  342 expr_method_call: expr . "->" "name" '(' ')'
  343                 | expr . "->" "name" '(' expr_list ')'
  353 expr_field: expr . '.' "name"
  354           | expr . '.' '.' "name"
  355           | expr . '.' "name" '(' ')'
  356           | expr . '.' "name" '(' expr_list ')'
  357           | expr . '.' basic_type_declaration '(' ')'
  358           | expr . '.' basic_type_declaration '(' expr_list ')'
  361           | expr . '.' $@17 error $@18
  383 expr: expr . "<<" expr
  384     | expr . ">>" expr
  385     | expr . "<<<" expr
  386     | expr . ">>>" expr
  387     | expr . '+' expr
  388     | expr . '-' expr
  389     | expr . '*' expr
  390     | expr . '/' expr
  391     | expr . '%' expr
  392     | expr . '<' expr
  393     | expr . '>' expr
  394     | expr . "==" expr
  395     | expr . "!=" expr
  396     | expr . "<=" expr
  397     | expr . ">=" expr
  398     | expr . '&' expr
  399     | expr . '|' expr
  400     | expr . '^' expr
  401     | expr . "&&" expr
  402     | expr . "||" expr
  403     | expr . "^^" expr
  404     | expr . ".." expr
  407     | expr . "++"
  408     | expr . "--"
  410     | expr . '[' expr ']'
  411     | expr . '.' '[' expr ']'
  412     | expr . "?[" expr ']'
  413     | expr . '.' "?[" expr ']'
  414     | expr . "?." "name"
  415     | expr . '.' "?." "name"
  424     | expr . "??" expr
  425     | expr . '?' expr ':' expr
  428     | expr . "is" "type" '<' $@19 type_declaration_no_options '>' $@20
  429     | expr . "is" basic_type_declaration
  430     | expr . "is" "name"
  431     | expr . "as" "name"
  434     | expr . "as" "type" '<' $@21 type_declaration '>' $@22
  435     | expr . "as" basic_type_declaration
  436     | expr . '?' "as" "name"
  439     | expr . '?' "as" "type" '<' $@23 type_declaration '>' $@24
  440     | expr . '?' "as" basic_type_declaration
  448     | expr . "<|" expr
  449     | expr . "|>" expr
  450     | expr . "|>" basic_type_declaration
  461 expr_mtag: expr . '.' "$f" '(' expr ')'
  462          | expr . "?." "$f" '(' expr ')'
  463          | expr . '.' '.' "$f" '(' expr ')'
  464          | expr . '.' "?." "$f" '(' expr ')'
  465          | expr . "as" "$f" '(' expr ')'
  466          | expr . '?' "as" "$f" '(' expr ')'
  467          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 648
    "as"   shift, and go to state 649
    "<<"   shift, and go to state 650
    ">>"   shift, and go to state 651
    "++"   shift, and go to state 652
    "--"   shift, and go to state 653
    "<="   shift, and go to state 654
    ">="   shift, and go to state 655
    "=="   shift, and go to state 656
    "!="   shift, and go to state 657
    "->"   shift, and go to state 658
    "??"   shift, and go to state 659
    "?."   shift, and go to state 660
    "?["   shift, and go to state 661
    "<|"   shift, and go to state 662
    "|>"   shift, and go to state 663
    "<<<"  shift, and go to state 664
    ">>>"  shift, and go to state 665
    "&&"   shift, and go to state 666
    "||"   shift, and go to state 667
    "^^"   shift, and go to state 668
    ".."   shift, and go to state 669
    '?'    shift, and go to state 670
    '|'    shift, and go to state 671
    '^'    shift, and go to state 672
    '&'    shift, and go to state 673
    '<'    shift, and go to state 674
    '>'    shift, and go to state 675
    '-'    shift, and go to state 676
    '+'    shift, and go to state 677
    '*'    shift, and go to state 678
    '/'    shift, and go to state 679
    '%'    shift, and go to state 680
    '.'    shift, and go to state 681
    '['    shift, and go to state 682

    $default  reduce using rule 325 (expr_assign)


State 956

  326 expr_assign: expr "|=" expr .
  342 expr_method_call: expr . "->" "name" '(' ')'
  343                 | expr . "->" "name" '(' expr_list ')'
  353 expr_field: expr . '.' "name"
  354           | expr . '.' '.' "name"
  355           | expr . '.' "name" '(' ')'
  356           | expr . '.' "name" '(' expr_list ')'
  357           | expr . '.' basic_type_declaration '(' ')'
  358           | expr . '.' basic_type_declaration '(' expr_list ')'
  361           | expr . '.' $@17 error $@18
  383 expr: expr . "<<" expr
  384     | expr . ">>" expr
  385     | expr . "<<<" expr
  386     | expr . ">>>" expr
  387     | expr . '+' expr
  388     | expr . '-' expr
  389     | expr . '*' expr
  390     | expr . '/' expr
  391     | expr . '%' expr
  392     | expr . '<' expr
  393     | expr . '>' expr
  394     | expr . "==" expr
  395     | expr . "!=" expr
  396     | expr . "<=" expr
  397     | expr . ">=" expr
  398     | expr . '&' expr
  399     | expr . '|' expr
  400     | expr . '^' expr
  401     | expr . "&&" expr
  402     | expr . "||" expr
  403     | expr . "^^" expr
  404     | expr . ".." expr
  407     | expr . "++"
  408     | expr . "--"
  410     | expr . '[' expr ']'
  411     | expr . '.' '[' expr ']'
  412     | expr . "?[" expr ']'
  413     | expr . '.' "?[" expr ']'
  414     | expr . "?." "name"
  415     | expr . '.' "?." "name"
  424     | expr . "??" expr
  425     | expr . '?' expr ':' expr
  428     | expr . "is" "type" '<' $@19 type_declaration_no_options '>' $@20
  429     | expr . "is" basic_type_declaration
  430     | expr . "is" "name"
  431     | expr . "as" "name"
  434     | expr . "as" "type" '<' $@21 type_declaration '>' $@22
  435     | expr . "as" basic_type_declaration
  436     | expr . '?' "as" "name"
  439     | expr . '?' "as" "type" '<' $@23 type_declaration '>' $@24
  440     | expr . '?' "as" basic_type_declaration
  448     | expr . "<|" expr
  449     | expr . "|>" expr
  450     | expr . "|>" basic_type_declaration
  461 expr_mtag: expr . '.' "$f" '(' expr ')'
  462          | expr . "?." "$f" '(' expr ')'
  463          | expr . '.' '.' "$f" '(' expr ')'
  464          | expr . '.' "?." "$f" '(' expr ')'
  465          | expr . "as" "$f" '(' expr ')'
  466          | expr . '?' "as" "$f" '(' expr ')'
  467          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 648
    "as"   shift, and go to state 649
    "<<"   shift, and go to state 650
    ">>"   shift, and go to state 651
    "++"   shift, and go to state 652
    "--"   shift, and go to state 653
    "<="   shift, and go to state 654
    ">="   shift, and go to state 655
    "=="   shift, and go to state 656
    "!="   shift, and go to state 657
    "->"   shift, and go to state 658
    "??"   shift, and go to state 659
    "?."   shift, and go to state 660
    "?["   shift, and go to state 661
    "<|"   shift, and go to state 662
    "|>"   shift, and go to state 663
    "<<<"  shift, and go to state 664
    ">>>"  shift, and go to state 665
    "&&"   shift, and go to state 666
    "||"   shift, and go to state 667
    "^^"   shift, and go to state 668
    ".."   shift, and go to state 669
    '?'    shift, and go to state 670
    '|'    shift, and go to state 671
    '^'    shift, and go to state 672
    '&'    shift, and go to state 673
    '<'    shift, and go to state 674
    '>'    shift, and go to state 675
    '-'    shift, and go to state 676
    '+'    shift, and go to state 677
    '*'    shift, and go to state 678
    '/'    shift, and go to state 679
    '%'    shift, and go to state 680
    '.'    shift, and go to state 681
    '['    shift, and go to state 682

    $default  reduce using rule 326 (expr_assign)


State 957

  327 expr_assign: expr "^=" expr .
  342 expr_method_call: expr . "->" "name" '(' ')'
  343                 | expr . "->" "name" '(' expr_list ')'
  353 expr_field: expr . '.' "name"
  354           | expr . '.' '.' "name"
  355           | expr . '.' "name" '(' ')'
  356           | expr . '.' "name" '(' expr_list ')'
  357           | expr . '.' basic_type_declaration '(' ')'
  358           | expr . '.' basic_type_declaration '(' expr_list ')'
  361           | expr . '.' $@17 error $@18
  383 expr: expr . "<<" expr
  384     | expr . ">>" expr
  385     | expr . "<<<" expr
  386     | expr . ">>>" expr
  387     | expr . '+' expr
  388     | expr . '-' expr
  389     | expr . '*' expr
  390     | expr . '/' expr
  391     | expr . '%' expr
  392     | expr . '<' expr
  393     | expr . '>' expr
  394     | expr . "==" expr
  395     | expr . "!=" expr
  396     | expr . "<=" expr
  397     | expr . ">=" expr
  398     | expr . '&' expr
  399     | expr . '|' expr
  400     | expr . '^' expr
  401     | expr . "&&" expr
  402     | expr . "||" expr
  403     | expr . "^^" expr
  404     | expr . ".." expr
  407     | expr . "++"
  408     | expr . "--"
  410     | expr . '[' expr ']'
  411     | expr . '.' '[' expr ']'
  412     | expr . "?[" expr ']'
  413     | expr . '.' "?[" expr ']'
  414     | expr . "?." "name"
  415     | expr . '.' "?." "name"
  424     | expr . "??" expr
  425     | expr . '?' expr ':' expr
  428     | expr . "is" "type" '<' $@19 type_declaration_no_options '>' $@20
  429     | expr . "is" basic_type_declaration
  430     | expr . "is" "name"
  431     | expr . "as" "name"
  434     | expr . "as" "type" '<' $@21 type_declaration '>' $@22
  435     | expr . "as" basic_type_declaration
  436     | expr . '?' "as" "name"
  439     | expr . '?' "as" "type" '<' $@23 type_declaration '>' $@24
  440     | expr . '?' "as" basic_type_declaration
  448     | expr . "<|" expr
  449     | expr . "|>" expr
  450     | expr . "|>" basic_type_declaration
  461 expr_mtag: expr . '.' "$f" '(' expr ')'
  462          | expr . "?." "$f" '(' expr ')'
  463          | expr . '.' '.' "$f" '(' expr ')'
  464          | expr . '.' "?." "$f" '(' expr ')'
  465          | expr . "as" "$f" '(' expr ')'
  466          | expr . '?' "as" "$f" '(' expr ')'
  467          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 648
    "as"   shift, and go to state 649
    "<<"   shift, and go to state 650
    ">>"   shift, and go to state 651
    "++"   shift, and go to state 652
    "--"   shift, and go to state 653
    "<="   shift, and go to state 654
    ">="   shift, and go to state 655
    "=="   shift, and go to state 656
    "!="   shift, and go to state 657
    "->"   shift, and go to state 658
    "??"   shift, and go to state 659
    "?."   shift, and go to state 660
    "?["   shift, and go to state 661
    "<|"   shift, and go to state 662
    "|>"   shift, and go to state 663
    "<<<"  shift, and go to state 664
    ">>>"  shift, and go to state 665
    "&&"   shift, and go to state 666
    "||"   shift, and go to state 667
    "^^"   shift, and go to state 668
    ".."   shift, and go to state 669
    '?'    shift, and go to state 670
    '|'    shift, and go to state 671
    '^'    shift, and go to state 672
    '&'    shift, and go to state 673
    '<'    shift, and go to state 674
    '>'    shift, and go to state 675
    '-'    shift, and go to state 676
    '+'    shift, and go to state 677
    '*'    shift, and go to state 678
    '/'    shift, and go to state 679
    '%'    shift, and go to state 680
    '.'    shift, and go to state 681
    '['    shift, and go to state 682

    $default  reduce using rule 327 (expr_assign)


State 958

  336 expr_assign: expr "<<=" expr .
  342 expr_method_call: expr . "->" "name" '(' ')'
  343                 | expr . "->" "name" '(' expr_list ')'
  353 expr_field: expr . '.' "name"
  354           | expr . '.' '.' "name"
  355           | expr . '.' "name" '(' ')'
  356           | expr . '.' "name" '(' expr_list ')'
  357           | expr . '.' basic_type_declaration '(' ')'
  358           | expr . '.' basic_type_declaration '(' expr_list ')'
  361           | expr . '.' $@17 error $@18
  383 expr: expr . "<<" expr
  384     | expr . ">>" expr
  385     | expr . "<<<" expr
  386     | expr . ">>>" expr
  387     | expr . '+' expr
  388     | expr . '-' expr
  389     | expr . '*' expr
  390     | expr . '/' expr
  391     | expr . '%' expr
  392     | expr . '<' expr
  393     | expr . '>' expr
  394     | expr . "==" expr
  395     | expr . "!=" expr
  396     | expr . "<=" expr
  397     | expr . ">=" expr
  398     | expr . '&' expr
  399     | expr . '|' expr
  400     | expr . '^' expr
  401     | expr . "&&" expr
  402     | expr . "||" expr
  403     | expr . "^^" expr
  404     | expr . ".." expr
  407     | expr . "++"
  408     | expr . "--"
  410     | expr . '[' expr ']'
  411     | expr . '.' '[' expr ']'
  412     | expr . "?[" expr ']'
  413     | expr . '.' "?[" expr ']'
  414     | expr . "?." "name"
  415     | expr . '.' "?." "name"
  424     | expr . "??" expr
  425     | expr . '?' expr ':' expr
  428     | expr . "is" "type" '<' $@19 type_declaration_no_options '>' $@20
  429     | expr . "is" basic_type_declaration
  430     | expr . "is" "name"
  431     | expr . "as" "name"
  434     | expr . "as" "type" '<' $@21 type_declaration '>' $@22
  435     | expr . "as" basic_type_declaration
  436     | expr . '?' "as" "name"
  439     | expr . '?' "as" "type" '<' $@23 type_declaration '>' $@24
  440     | expr . '?' "as" basic_type_declaration
  448     | expr . "<|" expr
  449     | expr . "|>" expr
  450     | expr . "|>" basic_type_declaration
  461 expr_mtag: expr . '.' "$f" '(' expr ')'
  462          | expr . "?." "$f" '(' expr ')'
  463          | expr . '.' '.' "$f" '(' expr ')'
  464          | expr . '.' "?." "$f" '(' expr ')'
  465          | expr . "as" "$f" '(' expr ')'
  466          | expr . '?' "as" "$f" '(' expr ')'
  467          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 648
    "as"   shift, and go to state 649
    "<<"   shift, and go to state 650
    ">>"   shift, and go to state 651
    "++"   shift, and go to state 652
    "--"   shift, and go to state 653
    "<="   shift, and go to state 654
    ">="   shift, and go to state 655
    "=="   shift, and go to state 656
    "!="   shift, and go to state 657
    "->"   shift, and go to state 658
    "??"   shift, and go to state 659
    "?."   shift, and go to state 660
    "?["   shift, and go to state 661
    "<|"   shift, and go to state 662
    "|>"   shift, and go to state 663
    "<<<"  shift, and go to state 664
    ">>>"  shift, and go to state 665
    "&&"   shift, and go to state 666
    "||"   shift, and go to state 667
    "^^"   shift, and go to state 668
    ".."   shift, and go to state 669
    '?'    shift, and go to state 670
    '|'    shift, and go to state 671
    '^'    shift, and go to state 672
    '&'    shift, and go to state 673
    '<'    shift, and go to state 674
    '>'    shift, and go to state 675
    '-'    shift, and go to state 676
    '+'    shift, and go to state 677
    '*'    shift, and go to state 678
    '/'    shift, and go to state 679
    '%'    shift, and go to state 680
    '.'    shift, and go to state 681
    '['    shift, and go to state 682

    $default  reduce using rule 336 (expr_assign)


State 959

  337 expr_assign: expr ">>=" expr .
  342 expr_method_call: expr . "->" "name" '(' ')'
  343                 | expr . "->" "name" '(' expr_list ')'
  353 expr_field: expr . '.' "name"
  354           | expr . '.' '.' "name"
  355           | expr . '.' "name" '(' ')'
  356           | expr . '.' "name" '(' expr_list ')'
  357           | expr . '.' basic_type_declaration '(' ')'
  358           | expr . '.' basic_type_declaration '(' expr_list ')'
  361           | expr . '.' $@17 error $@18
  383 expr: expr . "<<" expr
  384     | expr . ">>" expr
  385     | expr . "<<<" expr
  386     | expr . ">>>" expr
  387     | expr . '+' expr
  388     | expr . '-' expr
  389     | expr . '*' expr
  390     | expr . '/' expr
  391     | expr . '%' expr
  392     | expr . '<' expr
  393     | expr . '>' expr
  394     | expr . "==" expr
  395     | expr . "!=" expr
  396     | expr . "<=" expr
  397     | expr . ">=" expr
  398     | expr . '&' expr
  399     | expr . '|' expr
  400     | expr . '^' expr
  401     | expr . "&&" expr
  402     | expr . "||" expr
  403     | expr . "^^" expr
  404     | expr . ".." expr
  407     | expr . "++"
  408     | expr . "--"
  410     | expr . '[' expr ']'
  411     | expr . '.' '[' expr ']'
  412     | expr . "?[" expr ']'
  413     | expr . '.' "?[" expr ']'
  414     | expr . "?." "name"
  415     | expr . '.' "?." "name"
  424     | expr . "??" expr
  425     | expr . '?' expr ':' expr
  428     | expr . "is" "type" '<' $@19 type_declaration_no_options '>' $@20
  429     | expr . "is" basic_type_declaration
  430     | expr . "is" "name"
  431     | expr . "as" "name"
  434     | expr . "as" "type" '<' $@21 type_declaration '>' $@22
  435     | expr . "as" basic_type_declaration
  436     | expr . '?' "as" "name"
  439     | expr . '?' "as" "type" '<' $@23 type_declaration '>' $@24
  440     | expr . '?' "as" basic_type_declaration
  448     | expr . "<|" expr
  449     | expr . "|>" expr
  450     | expr . "|>" basic_type_declaration
  461 expr_mtag: expr . '.' "$f" '(' expr ')'
  462          | expr . "?." "$f" '(' expr ')'
  463          | expr . '.' '.' "$f" '(' expr ')'
  464          | expr . '.' "?." "$f" '(' expr ')'
  465          | expr . "as" "$f" '(' expr ')'
  466          | expr . '?' "as" "$f" '(' expr ')'
  467          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 648
    "as"   shift, and go to state 649
    "<<"   shift, and go to state 650
    ">>"   shift, and go to state 651
    "++"   shift, and go to state 652
    "--"   shift, and go to state 653
    "<="   shift, and go to state 654
    ">="   shift, and go to state 655
    "=="   shift, and go to state 656
    "!="   shift, and go to state 657
    "->"   shift, and go to state 658
    "??"   shift, and go to state 659
    "?."   shift, and go to state 660
    "?["   shift, and go to state 661
    "<|"   shift, and go to state 662
    "|>"   shift, and go to state 663
    "<<<"  shift, and go to state 664
    ">>>"  shift, and go to state 665
    "&&"   shift, and go to state 666
    "||"   shift, and go to state 667
    "^^"   shift, and go to state 668
    ".."   shift, and go to state 669
    '?'    shift, and go to state 670
    '|'    shift, and go to state 671
    '^'    shift, and go to state 672
    '&'    shift, and go to state 673
    '<'    shift, and go to state 674
    '>'    shift, and go to state 675
    '-'    shift, and go to state 676
    '+'    shift, and go to state 677
    '*'    shift, and go to state 678
    '/'    shift, and go to state 679
    '%'    shift, and go to state 680
    '.'    shift, and go to state 681
    '['    shift, and go to state 682

    $default  reduce using rule 337 (expr_assign)


State 960

  323 expr_assign: expr "<-" expr .
  342 expr_method_call: expr . "->" "name" '(' ')'
  343                 | expr . "->" "name" '(' expr_list ')'
  353 expr_field: expr . '.' "name"
  354           | expr . '.' '.' "name"
  355           | expr . '.' "name" '(' ')'
  356           | expr . '.' "name" '(' expr_list ')'
  357           | expr . '.' basic_type_declaration '(' ')'
  358           | expr . '.' basic_type_declaration '(' expr_list ')'
  361           | expr . '.' $@17 error $@18
  383 expr: expr . "<<" expr
  384     | expr . ">>" expr
  385     | expr . "<<<" expr
  386     | expr . ">>>" expr
  387     | expr . '+' expr
  388     | expr . '-' expr
  389     | expr . '*' expr
  390     | expr . '/' expr
  391     | expr . '%' expr
  392     | expr . '<' expr
  393     | expr . '>' expr
  394     | expr . "==" expr
  395     | expr . "!=" expr
  396     | expr . "<=" expr
  397     | expr . ">=" expr
  398     | expr . '&' expr
  399     | expr . '|' expr
  400     | expr . '^' expr
  401     | expr . "&&" expr
  402     | expr . "||" expr
  403     | expr . "^^" expr
  404     | expr . ".." expr
  407     | expr . "++"
  408     | expr . "--"
  410     | expr . '[' expr ']'
  411     | expr . '.' '[' expr ']'
  412     | expr . "?[" expr ']'
  413     | expr . '.' "?[" expr ']'
  414     | expr . "?." "name"
  415     | expr . '.' "?." "name"
  424     | expr . "??" expr
  425     | expr . '?' expr ':' expr
  428     | expr . "is" "type" '<' $@19 type_declaration_no_options '>' $@20
  429     | expr . "is" basic_type_declaration
  430     | expr . "is" "name"
  431     | expr . "as" "name"
  434     | expr . "as" "type" '<' $@21 type_declaration '>' $@22
  435     | expr . "as" basic_type_declaration
  436     | expr . '?' "as" "name"
  439     | expr . '?' "as" "type" '<' $@23 type_declaration '>' $@24
  440     | expr . '?' "as" basic_type_declaration
  448     | expr . "<|" expr
  449     | expr . "|>" expr
  450     | expr . "|>" basic_type_declaration
  461 expr_mtag: expr . '.' "$f" '(' expr ')'
  462          | expr . "?." "$f" '(' expr ')'
  463          | expr . '.' '.' "$f" '(' expr ')'
  464          | expr . '.' "?." "$f" '(' expr ')'
  465          | expr . "as" "$f" '(' expr ')'
  466          | expr . '?' "as" "$f" '(' expr ')'
  467          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 648
    "as"   shift, and go to state 649
    "<<"   shift, and go to state 650
    ">>"   shift, and go to state 651
    "++"   shift, and go to state 652
    "--"   shift, and go to state 653
    "<="   shift, and go to state 654
    ">="   shift, and go to state 655
    "=="   shift, and go to state 656
    "!="   shift, and go to state 657
    "->"   shift, and go to state 658
    "??"   shift, and go to state 659
    "?."   shift, and go to state 660
    "?["   shift, and go to state 661
    "<|"   shift, and go to state 662
    "|>"   shift, and go to state 663
    "<<<"  shift, and go to state 664
    ">>>"  shift, and go to state 665
    "&&"   shift, and go to state 666
    "||"   shift, and go to state 667
    "^^"   shift, and go to state 668
    ".."   shift, and go to state 669
    '?'    shift, and go to state 670
    '|'    shift, and go to state 671
    '^'    shift, and go to state 672
    '&'    shift, and go to state 673
    '<'    shift, and go to state 674
    '>'    shift, and go to state 675
    '-'    shift, and go to state 676
    '+'    shift, and go to state 677
    '*'    shift, and go to state 678
    '/'    shift, and go to state 679
    '%'    shift, and go to state 680
    '.'    shift, and go to state 681
    '['    shift, and go to state 682

    $default  reduce using rule 323 (expr_assign)


State 961

  324 expr_assign: expr ":=" expr .
  342 expr_method_call: expr . "->" "name" '(' ')'
  343                 | expr . "->" "name" '(' expr_list ')'
  353 expr_field: expr . '.' "name"
  354           | expr . '.' '.' "name"
  355           | expr . '.' "name" '(' ')'
  356           | expr . '.' "name" '(' expr_list ')'
  357           | expr . '.' basic_type_declaration '(' ')'
  358           | expr . '.' basic_type_declaration '(' expr_list ')'
  361           | expr . '.' $@17 error $@18
  383 expr: expr . "<<" expr
  384     | expr . ">>" expr
  385     | expr . "<<<" expr
  386     | expr . ">>>" expr
  387     | expr . '+' expr
  388     | expr . '-' expr
  389     | expr . '*' expr
  390     | expr . '/' expr
  391     | expr . '%' expr
  392     | expr . '<' expr
  393     | expr . '>' expr
  394     | expr . "==" expr
  395     | expr . "!=" expr
  396     | expr . "<=" expr
  397     | expr . ">=" expr
  398     | expr . '&' expr
  399     | expr . '|' expr
  400     | expr . '^' expr
  401     | expr . "&&" expr
  402     | expr . "||" expr
  403     | expr . "^^" expr
  404     | expr . ".." expr
  407     | expr . "++"
  408     | expr . "--"
  410     | expr . '[' expr ']'
  411     | expr . '.' '[' expr ']'
  412     | expr . "?[" expr ']'
  413     | expr . '.' "?[" expr ']'
  414     | expr . "?." "name"
  415     | expr . '.' "?." "name"
  424     | expr . "??" expr
  425     | expr . '?' expr ':' expr
  428     | expr . "is" "type" '<' $@19 type_declaration_no_options '>' $@20
  429     | expr . "is" basic_type_declaration
  430     | expr . "is" "name"
  431     | expr . "as" "name"
  434     | expr . "as" "type" '<' $@21 type_declaration '>' $@22
  435     | expr . "as" basic_type_declaration
  436     | expr . '?' "as" "name"
  439     | expr . '?' "as" "type" '<' $@23 type_declaration '>' $@24
  440     | expr . '?' "as" basic_type_declaration
  448     | expr . "<|" expr
  449     | expr . "|>" expr
  450     | expr . "|>" basic_type_declaration
  461 expr_mtag: expr . '.' "$f" '(' expr ')'
  462          | expr . "?." "$f" '(' expr ')'
  463          | expr . '.' '.' "$f" '(' expr ')'
  464          | expr . '.' "?." "$f" '(' expr ')'
  465          | expr . "as" "$f" '(' expr ')'
  466          | expr . '?' "as" "$f" '(' expr ')'
  467          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 648
    "as"   shift, and go to state 649
    "<<"   shift, and go to state 650
    ">>"   shift, and go to state 651
    "++"   shift, and go to state 652
    "--"   shift, and go to state 653
    "<="   shift, and go to state 654
    ">="   shift, and go to state 655
    "=="   shift, and go to state 656
    "!="   shift, and go to state 657
    "->"   shift, and go to state 658
    "??"   shift, and go to state 659
    "?."   shift, and go to state 660
    "?["   shift, and go to state 661
    "<|"   shift, and go to state 662
    "|>"   shift, and go to state 663
    "<<<"  shift, and go to state 664
    ">>>"  shift, and go to state 665
    "&&"   shift, and go to state 666
    "||"   shift, and go to state 667
    "^^"   shift, and go to state 668
    ".."   shift, and go to state 669
    '?'    shift, and go to state 670
    '|'    shift, and go to state 671
    '^'    shift, and go to state 672
    '&'    shift, and go to state 673
    '<'    shift, and go to state 674
    '>'    shift, and go to state 675
    '-'    shift, and go to state 676
    '+'    shift, and go to state 677
    '*'    shift, and go to state 678
    '/'    shift, and go to state 679
    '%'    shift, and go to state 680
    '.'    shift, and go to state 681
    '['    shift, and go to state 682

    $default  reduce using rule 324 (expr_assign)


State 962

  338 expr_assign: expr "<<<=" expr .
  342 expr_method_call: expr . "->" "name" '(' ')'
  343                 | expr . "->" "name" '(' expr_list ')'
  353 expr_field: expr . '.' "name"
  354           | expr . '.' '.' "name"
  355           | expr . '.' "name" '(' ')'
  356           | expr . '.' "name" '(' expr_list ')'
  357           | expr . '.' basic_type_declaration '(' ')'
  358           | expr . '.' basic_type_declaration '(' expr_list ')'
  361           | expr . '.' $@17 error $@18
  383 expr: expr . "<<" expr
  384     | expr . ">>" expr
  385     | expr . "<<<" expr
  386     | expr . ">>>" expr
  387     | expr . '+' expr
  388     | expr . '-' expr
  389     | expr . '*' expr
  390     | expr . '/' expr
  391     | expr . '%' expr
  392     | expr . '<' expr
  393     | expr . '>' expr
  394     | expr . "==" expr
  395     | expr . "!=" expr
  396     | expr . "<=" expr
  397     | expr . ">=" expr
  398     | expr . '&' expr
  399     | expr . '|' expr
  400     | expr . '^' expr
  401     | expr . "&&" expr
  402     | expr . "||" expr
  403     | expr . "^^" expr
  404     | expr . ".." expr
  407     | expr . "++"
  408     | expr . "--"
  410     | expr . '[' expr ']'
  411     | expr . '.' '[' expr ']'
  412     | expr . "?[" expr ']'
  413     | expr . '.' "?[" expr ']'
  414     | expr . "?." "name"
  415     | expr . '.' "?." "name"
  424     | expr . "??" expr
  425     | expr . '?' expr ':' expr
  428     | expr . "is" "type" '<' $@19 type_declaration_no_options '>' $@20
  429     | expr . "is" basic_type_declaration
  430     | expr . "is" "name"
  431     | expr . "as" "name"
  434     | expr . "as" "type" '<' $@21 type_declaration '>' $@22
  435     | expr . "as" basic_type_declaration
  436     | expr . '?' "as" "name"
  439     | expr . '?' "as" "type" '<' $@23 type_declaration '>' $@24
  440     | expr . '?' "as" basic_type_declaration
  448     | expr . "<|" expr
  449     | expr . "|>" expr
  450     | expr . "|>" basic_type_declaration
  461 expr_mtag: expr . '.' "$f" '(' expr ')'
  462          | expr . "?." "$f" '(' expr ')'
  463          | expr . '.' '.' "$f" '(' expr ')'
  464          | expr . '.' "?." "$f" '(' expr ')'
  465          | expr . "as" "$f" '(' expr ')'
  466          | expr . '?' "as" "$f" '(' expr ')'
  467          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 648
    "as"   shift, and go to state 649
    "<<"   shift, and go to state 650
    ">>"   shift, and go to state 651
    "++"   shift, and go to state 652
    "--"   shift, and go to state 653
    "<="   shift, and go to state 654
    ">="   shift, and go to state 655
    "=="   shift, and go to state 656
    "!="   shift, and go to state 657
    "->"   shift, and go to state 658
    "??"   shift, and go to state 659
    "?."   shift, and go to state 660
    "?["   shift, and go to state 661
    "<|"   shift, and go to state 662
    "|>"   shift, and go to state 663
    "<<<"  shift, and go to state 664
    ">>>"  shift, and go to state 665
    "&&"   shift, and go to state 666
    "||"   shift, and go to state 667
    "^^"   shift, and go to state 668
    ".."   shift, and go to state 669
    '?'    shift, and go to state 670
    '|'    shift, and go to state 671
    '^'    shift, and go to state 672
    '&'    shift, and go to state 673
    '<'    shift, and go to state 674
    '>'    shift, and go to state 675
    '-'    shift, and go to state 676
    '+'    shift, and go to state 677
    '*'    shift, and go to state 678
    '/'    shift, and go to state 679
    '%'    shift, and go to state 680
    '.'    shift, and go to state 681
    '['    shift, and go to state 682

    $default  reduce using rule 338 (expr_assign)


State 963

  339 expr_assign: expr ">>>=" expr .
  342 expr_method_call: expr . "->" "name" '(' ')'
  343                 | expr . "->" "name" '(' expr_list ')'
  353 expr_field: expr . '.' "name"
  354           | expr . '.' '.' "name"
  355           | expr . '.' "name" '(' ')'
  356           | expr . '.' "name" '(' expr_list ')'
  357           | expr . '.' basic_type_declaration '(' ')'
  358           | expr . '.' basic_type_declaration '(' expr_list ')'
  361           | expr . '.' $@17 error $@18
  383 expr: expr . "<<" expr
  384     | expr . ">>" expr
  385     | expr . "<<<" expr
  386     | expr . ">>>" expr
  387     | expr . '+' expr
  388     | expr . '-' expr
  389     | expr . '*' expr
  390     | expr . '/' expr
  391     | expr . '%' expr
  392     | expr . '<' expr
  393     | expr . '>' expr
  394     | expr . "==" expr
  395     | expr . "!=" expr
  396     | expr . "<=" expr
  397     | expr . ">=" expr
  398     | expr . '&' expr
  399     | expr . '|' expr
  400     | expr . '^' expr
  401     | expr . "&&" expr
  402     | expr . "||" expr
  403     | expr . "^^" expr
  404     | expr . ".." expr
  407     | expr . "++"
  408     | expr . "--"
  410     | expr . '[' expr ']'
  411     | expr . '.' '[' expr ']'
  412     | expr . "?[" expr ']'
  413     | expr . '.' "?[" expr ']'
  414     | expr . "?." "name"
  415     | expr . '.' "?." "name"
  424     | expr . "??" expr
  425     | expr . '?' expr ':' expr
  428     | expr . "is" "type" '<' $@19 type_declaration_no_options '>' $@20
  429     | expr . "is" basic_type_declaration
  430     | expr . "is" "name"
  431     | expr . "as" "name"
  434     | expr . "as" "type" '<' $@21 type_declaration '>' $@22
  435     | expr . "as" basic_type_declaration
  436     | expr . '?' "as" "name"
  439     | expr . '?' "as" "type" '<' $@23 type_declaration '>' $@24
  440     | expr . '?' "as" basic_type_declaration
  448     | expr . "<|" expr
  449     | expr . "|>" expr
  450     | expr . "|>" basic_type_declaration
  461 expr_mtag: expr . '.' "$f" '(' expr ')'
  462          | expr . "?." "$f" '(' expr ')'
  463          | expr . '.' '.' "$f" '(' expr ')'
  464          | expr . '.' "?." "$f" '(' expr ')'
  465          | expr . "as" "$f" '(' expr ')'
  466          | expr . '?' "as" "$f" '(' expr ')'
  467          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 648
    "as"   shift, and go to state 649
    "<<"   shift, and go to state 650
    ">>"   shift, and go to state 651
    "++"   shift, and go to state 652
    "--"   shift, and go to state 653
    "<="   shift, and go to state 654
    ">="   shift, and go to state 655
    "=="   shift, and go to state 656
    "!="   shift, and go to state 657
    "->"   shift, and go to state 658
    "??"   shift, and go to state 659
    "?."   shift, and go to state 660
    "?["   shift, and go to state 661
    "<|"   shift, and go to state 662
    "|>"   shift, and go to state 663
    "<<<"  shift, and go to state 664
    ">>>"  shift, and go to state 665
    "&&"   shift, and go to state 666
    "||"   shift, and go to state 667
    "^^"   shift, and go to state 668
    ".."   shift, and go to state 669
    '?'    shift, and go to state 670
    '|'    shift, and go to state 671
    '^'    shift, and go to state 672
    '&'    shift, and go to state 673
    '<'    shift, and go to state 674
    '>'    shift, and go to state 675
    '-'    shift, and go to state 676
    '+'    shift, and go to state 677
    '*'    shift, and go to state 678
    '/'    shift, and go to state 679
    '%'    shift, and go to state 680
    '.'    shift, and go to state 681
    '['    shift, and go to state 682

    $default  reduce using rule 339 (expr_assign)


State 964

  328 expr_assign: expr "&&=" expr .
  342 expr_method_call: expr . "->" "name" '(' ')'
  343                 | expr . "->" "name" '(' expr_list ')'
  353 expr_field: expr . '.' "name"
  354           | expr . '.' '.' "name"
  355           | expr . '.' "name" '(' ')'
  356           | expr . '.' "name" '(' expr_list ')'
  357           | expr . '.' basic_type_declaration '(' ')'
  358           | expr . '.' basic_type_declaration '(' expr_list ')'
  361           | expr . '.' $@17 error $@18
  383 expr: expr . "<<" expr
  384     | expr . ">>" expr
  385     | expr . "<<<" expr
  386     | expr . ">>>" expr
  387     | expr . '+' expr
  388     | expr . '-' expr
  389     | expr . '*' expr
  390     | expr . '/' expr
  391     | expr . '%' expr
  392     | expr . '<' expr
  393     | expr . '>' expr
  394     | expr . "==" expr
  395     | expr . "!=" expr
  396     | expr . "<=" expr
  397     | expr . ">=" expr
  398     | expr . '&' expr
  399     | expr . '|' expr
  400     | expr . '^' expr
  401     | expr . "&&" expr
  402     | expr . "||" expr
  403     | expr . "^^" expr
  404     | expr . ".." expr
  407     | expr . "++"
  408     | expr . "--"
  410     | expr . '[' expr ']'
  411     | expr . '.' '[' expr ']'
  412     | expr . "?[" expr ']'
  413     | expr . '.' "?[" expr ']'
  414     | expr . "?." "name"
  415     | expr . '.' "?." "name"
  424     | expr . "??" expr
  425     | expr . '?' expr ':' expr
  428     | expr . "is" "type" '<' $@19 type_declaration_no_options '>' $@20
  429     | expr . "is" basic_type_declaration
  430     | expr . "is" "name"
  431     | expr . "as" "name"
  434     | expr . "as" "type" '<' $@21 type_declaration '>' $@22
  435     | expr . "as" basic_type_declaration
  436     | expr . '?' "as" "name"
  439     | expr . '?' "as" "type" '<' $@23 type_declaration '>' $@24
  440     | expr . '?' "as" basic_type_declaration
  448     | expr . "<|" expr
  449     | expr . "|>" expr
  450     | expr . "|>" basic_type_declaration
  461 expr_mtag: expr . '.' "$f" '(' expr ')'
  462          | expr . "?." "$f" '(' expr ')'
  463          | expr . '.' '.' "$f" '(' expr ')'
  464          | expr . '.' "?." "$f" '(' expr ')'
  465          | expr . "as" "$f" '(' expr ')'
  466          | expr . '?' "as" "$f" '(' expr ')'
  467          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 648
    "as"   shift, and go to state 649
    "<<"   shift, and go to state 650
    ">>"   shift, and go to state 651
    "++"   shift, and go to state 652
    "--"   shift, and go to state 653
    "<="   shift, and go to state 654
    ">="   shift, and go to state 655
    "=="   shift, and go to state 656
    "!="   shift, and go to state 657
    "->"   shift, and go to state 658
    "??"   shift, and go to state 659
    "?."   shift, and go to state 660
    "?["   shift, and go to state 661
    "<|"   shift, and go to state 662
    "|>"   shift, and go to state 663
    "<<<"  shift, and go to state 664
    ">>>"  shift, and go to state 665
    "&&"   shift, and go to state 666
    "||"   shift, and go to state 667
    "^^"   shift, and go to state 668
    ".."   shift, and go to state 669
    '?'    shift, and go to state 670
    '|'    shift, and go to state 671
    '^'    shift, and go to state 672
    '&'    shift, and go to state 673
    '<'    shift, and go to state 674
    '>'    shift, and go to state 675
    '-'    shift, and go to state 676
    '+'    shift, and go to state 677
    '*'    shift, and go to state 678
    '/'    shift, and go to state 679
    '%'    shift, and go to state 680
    '.'    shift, and go to state 681
    '['    shift, and go to state 682

    $default  reduce using rule 328 (expr_assign)


State 965

  329 expr_assign: expr "||=" expr .
  342 expr_method_call: expr . "->" "name" '(' ')'
  343                 | expr . "->" "name" '(' expr_list ')'
  353 expr_field: expr . '.' "name"
  354           | expr . '.' '.' "name"
  355           | expr . '.' "name" '(' ')'
  356           | expr . '.' "name" '(' expr_list ')'
  357           | expr . '.' basic_type_declaration '(' ')'
  358           | expr . '.' basic_type_declaration '(' expr_list ')'
  361           | expr . '.' $@17 error $@18
  383 expr: expr . "<<" expr
  384     | expr . ">>" expr
  385     | expr . "<<<" expr
  386     | expr . ">>>" expr
  387     | expr . '+' expr
  388     | expr . '-' expr
  389     | expr . '*' expr
  390     | expr . '/' expr
  391     | expr . '%' expr
  392     | expr . '<' expr
  393     | expr . '>' expr
  394     | expr . "==" expr
  395     | expr . "!=" expr
  396     | expr . "<=" expr
  397     | expr . ">=" expr
  398     | expr . '&' expr
  399     | expr . '|' expr
  400     | expr . '^' expr
  401     | expr . "&&" expr
  402     | expr . "||" expr
  403     | expr . "^^" expr
  404     | expr . ".." expr
  407     | expr . "++"
  408     | expr . "--"
  410     | expr . '[' expr ']'
  411     | expr . '.' '[' expr ']'
  412     | expr . "?[" expr ']'
  413     | expr . '.' "?[" expr ']'
  414     | expr . "?." "name"
  415     | expr . '.' "?." "name"
  424     | expr . "??" expr
  425     | expr . '?' expr ':' expr
  428     | expr . "is" "type" '<' $@19 type_declaration_no_options '>' $@20
  429     | expr . "is" basic_type_declaration
  430     | expr . "is" "name"
  431     | expr . "as" "name"
  434     | expr . "as" "type" '<' $@21 type_declaration '>' $@22
  435     | expr . "as" basic_type_declaration
  436     | expr . '?' "as" "name"
  439     | expr . '?' "as" "type" '<' $@23 type_declaration '>' $@24
  440     | expr . '?' "as" basic_type_declaration
  448     | expr . "<|" expr
  449     | expr . "|>" expr
  450     | expr . "|>" basic_type_declaration
  461 expr_mtag: expr . '.' "$f" '(' expr ')'
  462          | expr . "?." "$f" '(' expr ')'
  463          | expr . '.' '.' "$f" '(' expr ')'
  464          | expr . '.' "?." "$f" '(' expr ')'
  465          | expr . "as" "$f" '(' expr ')'
  466          | expr . '?' "as" "$f" '(' expr ')'
  467          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 648
    "as"   shift, and go to state 649
    "<<"   shift, and go to state 650
    ">>"   shift, and go to state 651
    "++"   shift, and go to state 652
    "--"   shift, and go to state 653
    "<="   shift, and go to state 654
    ">="   shift, and go to state 655
    "=="   shift, and go to state 656
    "!="   shift, and go to state 657
    "->"   shift, and go to state 658
    "??"   shift, and go to state 659
    "?."   shift, and go to state 660
    "?["   shift, and go to state 661
    "<|"   shift, and go to state 662
    "|>"   shift, and go to state 663
    "<<<"  shift, and go to state 664
    ">>>"  shift, and go to state 665
    "&&"   shift, and go to state 666
    "||"   shift, and go to state 667
    "^^"   shift, and go to state 668
    ".."   shift, and go to state 669
    '?'    shift, and go to state 670
    '|'    shift, and go to state 671
    '^'    shift, and go to state 672
    '&'    shift, and go to state 673
    '<'    shift, and go to state 674
    '>'    shift, and go to state 675
    '-'    shift, and go to state 676
    '+'    shift, and go to state 677
    '*'    shift, and go to state 678
    '/'    shift, and go to state 679
    '%'    shift, and go to state 680
    '.'    shift, and go to state 681
    '['    shift, and go to state 682

    $default  reduce using rule 329 (expr_assign)


State 966

  330 expr_assign: expr "^^=" expr .
  342 expr_method_call: expr . "->" "name" '(' ')'
  343                 | expr . "->" "name" '(' expr_list ')'
  353 expr_field: expr . '.' "name"
  354           | expr . '.' '.' "name"
  355           | expr . '.' "name" '(' ')'
  356           | expr . '.' "name" '(' expr_list ')'
  357           | expr . '.' basic_type_declaration '(' ')'
  358           | expr . '.' basic_type_declaration '(' expr_list ')'
  361           | expr . '.' $@17 error $@18
  383 expr: expr . "<<" expr
  384     | expr . ">>" expr
  385     | expr . "<<<" expr
  386     | expr . ">>>" expr
  387     | expr . '+' expr
  388     | expr . '-' expr
  389     | expr . '*' expr
  390     | expr . '/' expr
  391     | expr . '%' expr
  392     | expr . '<' expr
  393     | expr . '>' expr
  394     | expr . "==" expr
  395     | expr . "!=" expr
  396     | expr . "<=" expr
  397     | expr . ">=" expr
  398     | expr . '&' expr
  399     | expr . '|' expr
  400     | expr . '^' expr
  401     | expr . "&&" expr
  402     | expr . "||" expr
  403     | expr . "^^" expr
  404     | expr . ".." expr
  407     | expr . "++"
  408     | expr . "--"
  410     | expr . '[' expr ']'
  411     | expr . '.' '[' expr ']'
  412     | expr . "?[" expr ']'
  413     | expr . '.' "?[" expr ']'
  414     | expr . "?." "name"
  415     | expr . '.' "?." "name"
  424     | expr . "??" expr
  425     | expr . '?' expr ':' expr
  428     | expr . "is" "type" '<' $@19 type_declaration_no_options '>' $@20
  429     | expr . "is" basic_type_declaration
  430     | expr . "is" "name"
  431     | expr . "as" "name"
  434     | expr . "as" "type" '<' $@21 type_declaration '>' $@22
  435     | expr . "as" basic_type_declaration
  436     | expr . '?' "as" "name"
  439     | expr . '?' "as" "type" '<' $@23 type_declaration '>' $@24
  440     | expr . '?' "as" basic_type_declaration
  448     | expr . "<|" expr
  449     | expr . "|>" expr
  450     | expr . "|>" basic_type_declaration
  461 expr_mtag: expr . '.' "$f" '(' expr ')'
  462          | expr . "?." "$f" '(' expr ')'
  463          | expr . '.' '.' "$f" '(' expr ')'
  464          | expr . '.' "?." "$f" '(' expr ')'
  465          | expr . "as" "$f" '(' expr ')'
  466          | expr . '?' "as" "$f" '(' expr ')'
  467          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 648
    "as"   shift, and go to state 649
    "<<"   shift, and go to state 650
    ">>"   shift, and go to state 651
    "++"   shift, and go to state 652
    "--"   shift, and go to state 653
    "<="   shift, and go to state 654
    ">="   shift, and go to state 655
    "=="   shift, and go to state 656
    "!="   shift, and go to state 657
    "->"   shift, and go to state 658
    "??"   shift, and go to state 659
    "?."   shift, and go to state 660
    "?["   shift, and go to state 661
    "<|"   shift, and go to state 662
    "|>"   shift, and go to state 663
    "<<<"  shift, and go to state 664
    ">>>"  shift, and go to state 665
    "&&"   shift, and go to state 666
    "||"   shift, and go to state 667
    "^^"   shift, and go to state 668
    ".."   shift, and go to state 669
    '?'    shift, and go to state 670
    '|'    shift, and go to state 671
    '^'    shift, and go to state 672
    '&'    shift, and go to state 673
    '<'    shift, and go to state 674
    '>'    shift, and go to state 675
    '-'    shift, and go to state 676
    '+'    shift, and go to state 677
    '*'    shift, and go to state 678
    '/'    shift, and go to state 679
    '%'    shift, and go to state 680
    '.'    shift, and go to state 681
    '['    shift, and go to state 682

    $default  reduce using rule 330 (expr_assign)


State 967

  322 expr_assign: expr '=' expr .
  342 expr_method_call: expr . "->" "name" '(' ')'
  343                 | expr . "->" "name" '(' expr_list ')'
  353 expr_field: expr . '.' "name"
  354           | expr . '.' '.' "name"
  355           | expr . '.' "name" '(' ')'
  356           | expr . '.' "name" '(' expr_list ')'
  357           | expr . '.' basic_type_declaration '(' ')'
  358           | expr . '.' basic_type_declaration '(' expr_list ')'
  361           | expr . '.' $@17 error $@18
  383 expr: expr . "<<" expr
  384     | expr . ">>" expr
  385     | expr . "<<<" expr
  386     | expr . ">>>" expr
  387     | expr . '+' expr
  388     | expr . '-' expr
  389     | expr . '*' expr
  390     | expr . '/' expr
  391     | expr . '%' expr
  392     | expr . '<' expr
  393     | expr . '>' expr
  394     | expr . "==" expr
  395     | expr . "!=" expr
  396     | expr . "<=" expr
  397     | expr . ">=" expr
  398     | expr . '&' expr
  399     | expr . '|' expr
  400     | expr . '^' expr
  401     | expr . "&&" expr
  402     | expr . "||" expr
  403     | expr . "^^" expr
  404     | expr . ".." expr
  407     | expr . "++"
  408     | expr . "--"
  410     | expr . '[' expr ']'
  411     | expr . '.' '[' expr ']'
  412     | expr . "?[" expr ']'
  413     | expr . '.' "?[" expr ']'
  414     | expr . "?." "name"
  415     | expr . '.' "?." "name"
  424     | expr . "??" expr
  425     | expr . '?' expr ':' expr
  428     | expr . "is" "type" '<' $@19 type_declaration_no_options '>' $@20
  429     | expr . "is" basic_type_declaration
  430     | expr . "is" "name"
  431     | expr . "as" "name"
  434     | expr . "as" "type" '<' $@21 type_declaration '>' $@22
  435     | expr . "as" basic_type_declaration
  436     | expr . '?' "as" "name"
  439     | expr . '?' "as" "type" '<' $@23 type_declaration '>' $@24
  440     | expr . '?' "as" basic_type_declaration
  448     | expr . "<|" expr
  449     | expr . "|>" expr
  450     | expr . "|>" basic_type_declaration
  461 expr_mtag: expr . '.' "$f" '(' expr ')'
  462          | expr . "?." "$f" '(' expr ')'
  463          | expr . '.' '.' "$f" '(' expr ')'
  464          | expr . '.' "?." "$f" '(' expr ')'
  465          | expr . "as" "$f" '(' expr ')'
  466          | expr . '?' "as" "$f" '(' expr ')'
  467          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 648
    "as"   shift, and go to state 649
    "<<"   shift, and go to state 650
    ">>"   shift, and go to state 651
    "++"   shift, and go to state 652
    "--"   shift, and go to state 653
    "<="   shift, and go to state 654
    ">="   shift, and go to state 655
    "=="   shift, and go to state 656
    "!="   shift, and go to state 657
    "->"   shift, and go to state 658
    "??"   shift, and go to state 659
    "?."   shift, and go to state 660
    "?["   shift, and go to state 661
    "<|"   shift, and go to state 662
    "|>"   shift, and go to state 663
    "<<<"  shift, and go to state 664
    ">>>"  shift, and go to state 665
    "&&"   shift, and go to state 666
    "||"   shift, and go to state 667
    "^^"   shift, and go to state 668
    ".."   shift, and go to state 669
    '?'    shift, and go to state 670
    '|'    shift, and go to state 671
    '^'    shift, and go to state 672
    '&'    shift, and go to state 673
    '<'    shift, and go to state 674
    '>'    shift, and go to state 675
    '-'    shift, and go to state 676
    '+'    shift, and go to state 677
    '*'    shift, and go to state 678
    '/'    shift, and go to state 679
    '%'    shift, and go to state 680
    '.'    shift, and go to state 681
    '['    shift, and go to state 682

    $default  reduce using rule 322 (expr_assign)


State 968

  342 expr_method_call: expr . "->" "name" '(' ')'
  343                 | expr . "->" "name" '(' expr_list ')'
  353 expr_field: expr . '.' "name"
  354           | expr . '.' '.' "name"
  355           | expr . '.' "name" '(' ')'
  356           | expr . '.' "name" '(' expr_list ')'
  357           | expr . '.' basic_type_declaration '(' ')'
  358           | expr . '.' basic_type_declaration '(' expr_list ')'
  361           | expr . '.' $@17 error $@18
  383 expr: expr . "<<" expr
  384     | expr . ">>" expr
  385     | expr . "<<<" expr
  386     | expr . ">>>" expr
  387     | expr . '+' expr
  388     | expr . '-' expr
  389     | expr . '*' expr
  390     | expr . '/' expr
  391     | expr . '%' expr
  392     | expr . '<' expr
  393     | expr . '>' expr
  394     | expr . "==" expr
  395     | expr . "!=" expr
  396     | expr . "<=" expr
  397     | expr . ">=" expr
  398     | expr . '&' expr
  399     | expr . '|' expr
  400     | expr . '^' expr
  401     | expr . "&&" expr
  402     | expr . "||" expr
  403     | expr . "^^" expr
  404     | expr . ".." expr
  407     | expr . "++"
  408     | expr . "--"
  410     | expr . '[' expr ']'
  411     | expr . '.' '[' expr ']'
  412     | expr . "?[" expr ']'
  413     | expr . '.' "?[" expr ']'
  414     | expr . "?." "name"
  415     | expr . '.' "?." "name"
  424     | expr . "??" expr
  425     | expr . '?' expr ':' expr
  428     | expr . "is" "type" '<' $@19 type_declaration_no_options '>' $@20
  429     | expr . "is" basic_type_declaration
  430     | expr . "is" "name"
  431     | expr . "as" "name"
  434     | expr . "as" "type" '<' $@21 type_declaration '>' $@22
  435     | expr . "as" basic_type_declaration
  436     | expr . '?' "as" "name"
  439     | expr . '?' "as" "type" '<' $@23 type_declaration '>' $@24
  440     | expr . '?' "as" basic_type_declaration
  448     | expr . "<|" expr
  449     | expr . "|>" expr
  450     | expr . "|>" basic_type_declaration
  461 expr_mtag: expr . '.' "$f" '(' expr ')'
  462          | expr . "?." "$f" '(' expr ')'
  463          | expr . '.' '.' "$f" '(' expr ')'
  464          | expr . '.' "?." "$f" '(' expr ')'
  465          | expr . "as" "$f" '(' expr ')'
  466          | expr . '?' "as" "$f" '(' expr ')'
  467          | expr . "is" "$f" '(' expr ')'
  547 enum_expression: "name" '=' expr .

    "is"   shift, and go to state 648
    "as"   shift, and go to state 649
    "<<"   shift, and go to state 650
    ">>"   shift, and go to state 651
    "++"   shift, and go to state 652
    "--"   shift, and go to state 653
    "<="   shift, and go to state 654
    ">="   shift, and go to state 655
    "=="   shift, and go to state 656
    "!="   shift, and go to state 657
    "->"   shift, and go to state 658
    "??"   shift, and go to state 659
    "?."   shift, and go to state 660
    "?["   shift, and go to state 661
    "<|"   shift, and go to state 662
    "|>"   shift, and go to state 663
    "<<<"  shift, and go to state 664
    ">>>"  shift, and go to state 665
    "&&"   shift, and go to state 666
    "||"   shift, and go to state 667
    "^^"   shift, and go to state 668
    ".."   shift, and go to state 669
    '?'    shift, and go to state 670
    '|'    shift, and go to state 671
    '^'    shift, and go to state 672
    '&'    shift, and go to state 673
    '<'    shift, and go to state 674
    '>'    shift, and go to state 675
    '-'    shift, and go to state 676
    '+'    shift, and go to state 677
    '*'    shift, and go to state 678
    '/'    shift, and go to state 679
    '%'    shift, and go to state 680
    '.'    shift, and go to state 681
    '['    shift, and go to state 682

    $default  reduce using rule 547 (enum_expression)


State 969

  550 enum_list: enum_list ',' enum_expression .

    $default  reduce using rule 550 (enum_list)


State 970

  565 enum_declaration: optional_annotation_list "enum" optional_public_or_private_enum enum_name optional_enum_basic_type_declaration "begin of code block" $@31 enum_list optional_comma $@32 . "end of code block"

    "end of code block"  shift, and go to state 1108


State 971

  486 struct_variable_declaration_list: struct_variable_declaration_list optional_annotation_list "def" . optional_public_or_private_member_variable "abstract" optional_constant $@26 function_declaration_header "end of expression"
  488                                 | struct_variable_declaration_list optional_annotation_list "def" . optional_public_or_private_member_variable optional_static_member_variable optional_override optional_constant $@27 function_declaration_header expression_block

    "public"   shift, and go to state 1109
    "private"  shift, and go to state 1110

    $default  reduce using rule 476 (optional_public_or_private_member_variable)

    optional_public_or_private_member_variable  go to state 1111


State 972

  481 structure_variable_declaration: optional_field_annotation . optional_static_member_variable optional_override optional_public_or_private_member_variable variable_declaration

    "static"  shift, and go to state 1112

    $default  reduce using rule 479 (optional_static_member_variable)

    optional_static_member_variable  go to state 1113


State 973

  484 struct_variable_declaration_list: struct_variable_declaration_list $@25 structure_variable_declaration . "end of expression"

    "end of expression"  shift, and go to state 1114


State 974

  342 expr_method_call: expr . "->" "name" '(' ')'
  343                 | expr . "->" "name" '(' expr_list ')'
  353 expr_field: expr . '.' "name"
  354           | expr . '.' '.' "name"
  355           | expr . '.' "name" '(' ')'
  356           | expr . '.' "name" '(' expr_list ')'
  357           | expr . '.' basic_type_declaration '(' ')'
  358           | expr . '.' basic_type_declaration '(' expr_list ')'
  361           | expr . '.' $@17 error $@18
  383 expr: expr . "<<" expr
  384     | expr . ">>" expr
  385     | expr . "<<<" expr
  386     | expr . ">>>" expr
  387     | expr . '+' expr
  388     | expr . '-' expr
  389     | expr . '*' expr
  390     | expr . '/' expr
  391     | expr . '%' expr
  392     | expr . '<' expr
  393     | expr . '>' expr
  394     | expr . "==" expr
  395     | expr . "!=" expr
  396     | expr . "<=" expr
  397     | expr . ">=" expr
  398     | expr . '&' expr
  399     | expr . '|' expr
  400     | expr . '^' expr
  401     | expr . "&&" expr
  402     | expr . "||" expr
  403     | expr . "^^" expr
  404     | expr . ".." expr
  407     | expr . "++"
  408     | expr . "--"
  410     | expr . '[' expr ']'
  411     | expr . '.' '[' expr ']'
  412     | expr . "?[" expr ']'
  413     | expr . '.' "?[" expr ']'
  414     | expr . "?." "name"
  415     | expr . '.' "?." "name"
  424     | expr . "??" expr
  425     | expr . '?' expr ':' expr
  428     | expr . "is" "type" '<' $@19 type_declaration_no_options '>' $@20
  429     | expr . "is" basic_type_declaration
  430     | expr . "is" "name"
  431     | expr . "as" "name"
  434     | expr . "as" "type" '<' $@21 type_declaration '>' $@22
  435     | expr . "as" basic_type_declaration
  436     | expr . '?' "as" "name"
  439     | expr . '?' "as" "type" '<' $@23 type_declaration '>' $@24
  440     | expr . '?' "as" basic_type_declaration
  448     | expr . "<|" expr
  449     | expr . "|>" expr
  450     | expr . "|>" basic_type_declaration
  461 expr_mtag: expr . '.' "$f" '(' expr ')'
  462          | expr . "?." "$f" '(' expr ')'
  463          | expr . '.' '.' "$f" '(' expr ')'
  464          | expr . '.' "?." "$f" '(' expr ')'
  465          | expr . "as" "$f" '(' expr ')'
  466          | expr . '?' "as" "$f" '(' expr ')'
  467          | expr . "is" "$f" '(' expr ')'
  519 let_variable_name_with_pos_list: "$i" '(' expr . ')'

    "is"   shift, and go to state 648
    "as"   shift, and go to state 649
    "<<"   shift, and go to state 650
    ">>"   shift, and go to state 651
    "++"   shift, and go to state 652
    "--"   shift, and go to state 653
    "<="   shift, and go to state 654
    ">="   shift, and go to state 655
    "=="   shift, and go to state 656
    "!="   shift, and go to state 657
    "->"   shift, and go to state 658
    "??"   shift, and go to state 659
    "?."   shift, and go to state 660
    "?["   shift, and go to state 661
    "<|"   shift, and go to state 662
    "|>"   shift, and go to state 663
    "<<<"  shift, and go to state 664
    ">>>"  shift, and go to state 665
    "&&"   shift, and go to state 666
    "||"   shift, and go to state 667
    "^^"   shift, and go to state 668
    ".."   shift, and go to state 669
    '?'    shift, and go to state 670
    '|'    shift, and go to state 671
    '^'    shift, and go to state 672
    '&'    shift, and go to state 673
    '<'    shift, and go to state 674
    '>'    shift, and go to state 675
    '-'    shift, and go to state 676
    '+'    shift, and go to state 677
    '*'    shift, and go to state 678
    '/'    shift, and go to state 679
    '%'    shift, and go to state 680
    '.'    shift, and go to state 681
    '['    shift, and go to state 682
    ')'    shift, and go to state 1115


State 975

  520 let_variable_name_with_pos_list: "name" "aka" "name" .

    $default  reduce using rule 520 (let_variable_name_with_pos_list)


State 976

  521 let_variable_name_with_pos_list: let_variable_name_with_pos_list ',' "name" .
  522                                | let_variable_name_with_pos_list ',' "name" . "aka" "name"

    "aka"  shift, and go to state 1116

    $default  reduce using rule 521 (let_variable_name_with_pos_list)


State 977

  528 let_variable_declaration: let_variable_name_with_pos_list ':' type_declaration_no_options . "end of expression"
  529                         | let_variable_name_with_pos_list ':' type_declaration_no_options . copy_or_move_or_clone expr "end of expression"

    "<-"                 shift, and go to state 582
    ":="                 shift, and go to state 583
    "end of expression"  shift, and go to state 1117
    '='                  shift, and go to state 584

    copy_or_move_or_clone  go to state 1118


State 978

  530 let_variable_declaration: let_variable_name_with_pos_list optional_ref copy_or_move_or_clone . expr "end of expression"

    "struct"                          shift, and go to state 409
    "class"                           shift, and go to state 410
    "true"                            shift, and go to state 411
    "false"                           shift, and go to state 412
    "new"                             shift, and go to state 413
    "typeinfo"                        shift, and go to state 414
    "type"                            shift, and go to state 415
    "array"                           shift, and go to state 416
    "null"                            shift, and go to state 417
    "table"                           shift, and go to state 418
    "deref"                           shift, and go to state 419
    "cast"                            shift, and go to state 420
    "upcast"                          shift, and go to state 421
    "addr"                            shift, and go to state 422
    "reinterpret"                     shift, and go to state 423
    "unsafe"                          shift, and go to state 424
    "fixed_array"                     shift, and go to state 425
    "default"                         shift, and go to state 426
    "bool"                            shift, and go to state 225
    "void"                            shift, and go to state 226
    "string"                          shift, and go to state 227
    "int"                             shift, and go to state 229
    "int2"                            shift, and go to state 230
    "int3"                            shift, and go to state 231
    "int4"                            shift, and go to state 232
    "uint"                            shift, and go to state 233
    "bitfield"                        shift, and go to state 427
    "uint2"                           shift, and go to state 235
    "uint3"                           shift, and go to state 236
    "uint4"                           shift, and go to state 237
    "float"                           shift, and go to state 238
    "float2"                          shift, and go to state 239
    "float3"                          shift, and go to state 240
    "float4"                          shift, and go to state 241
    "range"                           shift, and go to state 242
    "urange"                          shift, and go to state 243
    "range64"                         shift, and go to state 244
    "urange64"                        shift, and go to state 245
    "int64"                           shift, and go to state 247
    "uint64"                          shift, and go to state 248
    "double"                          shift, and go to state 249
    "int8"                            shift, and go to state 252
    "uint8"                           shift, and go to state 253
    "int16"                           shift, and go to state 254
    "uint16"                          shift, and go to state 255
    "tuple"                           shift, and go to state 428
    "variant"                         shift, and go to state 429
    "generator"                       shift, and go to state 430
    "++"                              shift, and go to state 431
    "--"                              shift, and go to state 432
    "::"                              shift, and go to state 55
    "$$"                              shift, and go to state 433
    "$i"                              shift, and go to state 434
    "$v"                              shift, and go to state 435
    "$b"                              shift, and go to state 436
    "$a"                              shift, and go to state 437
    "$c"                              shift, and go to state 438
    "..."                             shift, and go to state 439
    "integer constant"                shift, and go to state 440
    "long integer constant"           shift, and go to state 441
    "unsigned integer constant"       shift, and go to state 442
    "unsigned long integer constant"  shift, and go to state 443
    "unsigned int8 constant"          shift, and go to state 444
    "floating point constant"         shift, and go to state 445
    "double constant"                 shift, and go to state 446
    "name"                            shift, and go to state 56
    "start of the string"             shift, and go to state 447
    "begin of code block"             shift, and go to state 448
    '-'                               shift, and go to state 449
    '+'                               shift, and go to state 450
    '*'                               shift, and go to state 451
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 452
    '!'                               shift, and go to state 453
    '['                               shift, and go to state 454
    '('                               shift, and go to state 455
    '$'                               shift, and go to state 456
    '@'                               shift, and go to state 457

    string_builder          go to state 458
    expr_reader             go to state 459
    expr_call_pipe          go to state 460
    name_in_namespace       go to state 461
    expr_new                go to state 462
    expr_cast               go to state 463
    expr_type_decl          go to state 464
    expr_type_info          go to state 465
    block_or_lambda         go to state 466
    expr_full_block         go to state 467
    expr_numeric_const      go to state 468
    expr_named_call         go to state 469
    expr_method_call        go to state 470
    func_addr_expr          go to state 471
    expr_field              go to state 472
    expr_call               go to state 473
    expr                    go to state 1119
    expr_mtag               go to state 475
    basic_type_declaration  go to state 476
    make_decl               go to state 477
    make_struct_decl        go to state 478
    make_tuple_call         go to state 479
    make_dim_decl           go to state 480
    make_table_decl         go to state 481
    array_comprehension     go to state 482


State 979

  342 expr_method_call: expr . "->" "name" '(' ')'
  343                 | expr . "->" "name" '(' expr_list ')'
  353 expr_field: expr . '.' "name"
  354           | expr . '.' '.' "name"
  355           | expr . '.' "name" '(' ')'
  356           | expr . '.' "name" '(' expr_list ')'
  357           | expr . '.' basic_type_declaration '(' ')'
  358           | expr . '.' basic_type_declaration '(' expr_list ')'
  361           | expr . '.' $@17 error $@18
  383 expr: expr . "<<" expr
  384     | expr . ">>" expr
  385     | expr . "<<<" expr
  386     | expr . ">>>" expr
  387     | expr . '+' expr
  388     | expr . '-' expr
  389     | expr . '*' expr
  390     | expr . '/' expr
  391     | expr . '%' expr
  392     | expr . '<' expr
  393     | expr . '>' expr
  394     | expr . "==" expr
  395     | expr . "!=" expr
  396     | expr . "<=" expr
  397     | expr . ">=" expr
  398     | expr . '&' expr
  399     | expr . '|' expr
  400     | expr . '^' expr
  401     | expr . "&&" expr
  402     | expr . "||" expr
  403     | expr . "^^" expr
  404     | expr . ".." expr
  407     | expr . "++"
  408     | expr . "--"
  410     | expr . '[' expr ']'
  411     | expr . '.' '[' expr ']'
  412     | expr . "?[" expr ']'
  413     | expr . '.' "?[" expr ']'
  414     | expr . "?." "name"
  415     | expr . '.' "?." "name"
  424     | expr . "??" expr
  425     | expr . '?' expr ':' expr
  428     | expr . "is" "type" '<' $@19 type_declaration_no_options '>' $@20
  429     | expr . "is" basic_type_declaration
  430     | expr . "is" "name"
  431     | expr . "as" "name"
  434     | expr . "as" "type" '<' $@21 type_declaration '>' $@22
  435     | expr . "as" basic_type_declaration
  436     | expr . '?' "as" "name"
  439     | expr . '?' "as" "type" '<' $@23 type_declaration '>' $@24
  440     | expr . '?' "as" basic_type_declaration
  448     | expr . "<|" expr
  449     | expr . "|>" expr
  450     | expr . "|>" basic_type_declaration
  461 expr_mtag: expr . '.' "$f" '(' expr ')'
  462          | expr . "?." "$f" '(' expr ')'
  463          | expr . '.' '.' "$f" '(' expr ')'
  464          | expr . '.' "?." "$f" '(' expr ')'
  465          | expr . "as" "$f" '(' expr ')'
  466          | expr . '?' "as" "$f" '(' expr ')'
  467          | expr . "is" "$f" '(' expr ')'
  532 global_let_variable_declaration: global_let_variable_name_with_pos_list ':' type_declaration_no_options copy_or_move_or_clone expr . "end of expression"

    "is"                 shift, and go to state 648
    "as"                 shift, and go to state 649
    "<<"                 shift, and go to state 650
    ">>"                 shift, and go to state 651
    "++"                 shift, and go to state 652
    "--"                 shift, and go to state 653
    "<="                 shift, and go to state 654
    ">="                 shift, and go to state 655
    "=="                 shift, and go to state 656
    "!="                 shift, and go to state 657
    "->"                 shift, and go to state 658
    "??"                 shift, and go to state 659
    "?."                 shift, and go to state 660
    "?["                 shift, and go to state 661
    "<|"                 shift, and go to state 662
    "|>"                 shift, and go to state 663
    "<<<"                shift, and go to state 664
    ">>>"                shift, and go to state 665
    "&&"                 shift, and go to state 666
    "||"                 shift, and go to state 667
    "^^"                 shift, and go to state 668
    ".."                 shift, and go to state 669
    "end of expression"  shift, and go to state 1120
    '?'                  shift, and go to state 670
    '|'                  shift, and go to state 671
    '^'                  shift, and go to state 672
    '&'                  shift, and go to state 673
    '<'                  shift, and go to state 674
    '>'                  shift, and go to state 675
    '-'                  shift, and go to state 676
    '+'                  shift, and go to state 677
    '*'                  shift, and go to state 678
    '/'                  shift, and go to state 679
    '%'                  shift, and go to state 680
    '.'                  shift, and go to state 681
    '['                  shift, and go to state 682


State 980

  533 global_let_variable_declaration: global_let_variable_name_with_pos_list optional_ref copy_or_move_or_clone expr "end of expression" .

    $default  reduce using rule 533 (global_let_variable_declaration)


State 981

  649 type_declaration_no_options_no_dim: "type" '<' $@37 type_declaration '>' $@38 .

    $default  reduce using rule 649 (type_declaration_no_options_no_dim)


State 982

  672 type_declaration_no_options_no_dim: "array" '<' $@42 type_declaration '>' $@43 .

    $default  reduce using rule 672 (type_declaration_no_options_no_dim)


State 983

  675 type_declaration_no_options_no_dim: "table" '<' $@44 table_type_pair '>' $@45 .

    $default  reduce using rule 675 (type_declaration_no_options_no_dim)


State 984

  636 table_type_pair: type_declaration c_or_s type_declaration .
  707 type_declaration: type_declaration . '|' type_declaration_no_options
  708                 | type_declaration . '|' '#'

    '|'  shift, and go to state 375

    $default  reduce using rule 636 (table_type_pair)


State 985

  746 make_struct_decl: "struct" '<' $@73 type_declaration_no_options . '>' $@74 '(' use_initializer optional_make_struct_dim_decl ')'

    '>'  shift, and go to state 1121


State 986

  749 make_struct_decl: "class" '<' $@75 type_declaration_no_options . '>' $@76 '(' use_initializer optional_make_struct_dim_decl ')'

    '>'  shift, and go to state 1122


State 987

  249 new_type_declaration: '<' $@3 type_declaration . '>' $@4
  707 type_declaration: type_declaration . '|' type_declaration_no_options
  708                 | type_declaration . '|' '#'

    '|'  shift, and go to state 375
    '>'  shift, and go to state 1123


State 988

  255 expr_new: "new" new_type_declaration '(' "uninitialized" . make_struct_single ')'
  743 use_initializer: "uninitialized" .

    "$f"    shift, and go to state 839
    "name"  shift, and go to state 1036

    $default  reduce using rule 743 (use_initializer)

    make_struct_fields  go to state 844
    make_struct_single  go to state 1124


State 989

  253 expr_new: "new" new_type_declaration '(' expr_list . ')'
  295 expr_list: expr_list . ',' expr

    ','  shift, and go to state 1074
    ')'  shift, and go to state 1125


State 990

  254 expr_new: "new" new_type_declaration '(' make_struct_single . ')'

    ')'  shift, and go to state 1126


State 991

  252 expr_new: "new" new_type_declaration '(' use_initializer . ')'

    ')'  shift, and go to state 1127


State 992

  292 expr_type_info: "typeinfo" name_in_namespace '<' "name" . '>' '(' expr ')'
  293               | "typeinfo" name_in_namespace '<' "name" . c_or_s "name" '>' '(' expr ')'

    "end of expression"  shift, and go to state 512
    ','                  shift, and go to state 513
    '>'                  shift, and go to state 1128

    c_or_s  go to state 1129


State 993

  291 expr_type_info: "typeinfo" name_in_namespace '(' expr . ')'
  342 expr_method_call: expr . "->" "name" '(' ')'
  343                 | expr . "->" "name" '(' expr_list ')'
  353 expr_field: expr . '.' "name"
  354           | expr . '.' '.' "name"
  355           | expr . '.' "name" '(' ')'
  356           | expr . '.' "name" '(' expr_list ')'
  357           | expr . '.' basic_type_declaration '(' ')'
  358           | expr . '.' basic_type_declaration '(' expr_list ')'
  361           | expr . '.' $@17 error $@18
  383 expr: expr . "<<" expr
  384     | expr . ">>" expr
  385     | expr . "<<<" expr
  386     | expr . ">>>" expr
  387     | expr . '+' expr
  388     | expr . '-' expr
  389     | expr . '*' expr
  390     | expr . '/' expr
  391     | expr . '%' expr
  392     | expr . '<' expr
  393     | expr . '>' expr
  394     | expr . "==" expr
  395     | expr . "!=" expr
  396     | expr . "<=" expr
  397     | expr . ">=" expr
  398     | expr . '&' expr
  399     | expr . '|' expr
  400     | expr . '^' expr
  401     | expr . "&&" expr
  402     | expr . "||" expr
  403     | expr . "^^" expr
  404     | expr . ".." expr
  407     | expr . "++"
  408     | expr . "--"
  410     | expr . '[' expr ']'
  411     | expr . '.' '[' expr ']'
  412     | expr . "?[" expr ']'
  413     | expr . '.' "?[" expr ']'
  414     | expr . "?." "name"
  415     | expr . '.' "?." "name"
  424     | expr . "??" expr
  425     | expr . '?' expr ':' expr
  428     | expr . "is" "type" '<' $@19 type_declaration_no_options '>' $@20
  429     | expr . "is" basic_type_declaration
  430     | expr . "is" "name"
  431     | expr . "as" "name"
  434     | expr . "as" "type" '<' $@21 type_declaration '>' $@22
  435     | expr . "as" basic_type_declaration
  436     | expr . '?' "as" "name"
  439     | expr . '?' "as" "type" '<' $@23 type_declaration '>' $@24
  440     | expr . '?' "as" basic_type_declaration
  448     | expr . "<|" expr
  449     | expr . "|>" expr
  450     | expr . "|>" basic_type_declaration
  461 expr_mtag: expr . '.' "$f" '(' expr ')'
  462          | expr . "?." "$f" '(' expr ')'
  463          | expr . '.' '.' "$f" '(' expr ')'
  464          | expr . '.' "?." "$f" '(' expr ')'
  465          | expr . "as" "$f" '(' expr ')'
  466          | expr . '?' "as" "$f" '(' expr ')'
  467          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 648
    "as"   shift, and go to state 649
    "<<"   shift, and go to state 650
    ">>"   shift, and go to state 651
    "++"   shift, and go to state 652
    "--"   shift, and go to state 653
    "<="   shift, and go to state 654
    ">="   shift, and go to state 655
    "=="   shift, and go to state 656
    "!="   shift, and go to state 657
    "->"   shift, and go to state 658
    "??"   shift, and go to state 659
    "?."   shift, and go to state 660
    "?["   shift, and go to state 661
    "<|"   shift, and go to state 662
    "|>"   shift, and go to state 663
    "<<<"  shift, and go to state 664
    ">>>"  shift, and go to state 665
    "&&"   shift, and go to state 666
    "||"   shift, and go to state 667
    "^^"   shift, and go to state 668
    ".."   shift, and go to state 669
    '?'    shift, and go to state 670
    '|'    shift, and go to state 671
    '^'    shift, and go to state 672
    '&'    shift, and go to state 673
    '<'    shift, and go to state 674
    '>'    shift, and go to state 675
    '-'    shift, and go to state 676
    '+'    shift, and go to state 677
    '*'    shift, and go to state 678
    '/'    shift, and go to state 679
    '%'    shift, and go to state 680
    '.'    shift, and go to state 681
    '['    shift, and go to state 682
    ')'    shift, and go to state 1130


State 994

  290 expr_type_decl: "type" '<' $@11 type_declaration . '>' $@12
  707 type_declaration: type_declaration . '|' type_declaration_no_options
  708                 | type_declaration . '|' '#'

    '|'  shift, and go to state 375
    '>'  shift, and go to state 1131


State 995

  765 make_dim_decl: "array" "struct" '<' $@83 . type_declaration_no_options '>' $@84 '(' use_initializer optional_make_struct_dim_decl ')'

    "type"       shift, and go to state 219
    "array"      shift, and go to state 220
    "table"      shift, and go to state 221
    "typedecl"   shift, and go to state 222
    "iterator"   shift, and go to state 223
    "smart_ptr"  shift, and go to state 224
    "bool"       shift, and go to state 225
    "void"       shift, and go to state 226
    "string"     shift, and go to state 227
    "auto"       shift, and go to state 228
    "int"        shift, and go to state 229
    "int2"       shift, and go to state 230
    "int3"       shift, and go to state 231
    "int4"       shift, and go to state 232
    "uint"       shift, and go to state 233
    "bitfield"   shift, and go to state 234
    "uint2"      shift, and go to state 235
    "uint3"      shift, and go to state 236
    "uint4"      shift, and go to state 237
    "float"      shift, and go to state 238
    "float2"     shift, and go to state 239
    "float3"     shift, and go to state 240
    "float4"     shift, and go to state 241
    "range"      shift, and go to state 242
    "urange"     shift, and go to state 243
    "range64"    shift, and go to state 244
    "urange64"   shift, and go to state 245
    "block"      shift, and go to state 246
    "int64"      shift, and go to state 247
    "uint64"     shift, and go to state 248
    "double"     shift, and go to state 249
    "function"   shift, and go to state 250
    "lambda"     shift, and go to state 251
    "int8"       shift, and go to state 252
    "uint8"      shift, and go to state 253
    "int16"      shift, and go to state 254
    "uint16"     shift, and go to state 255
    "tuple"      shift, and go to state 256
    "variant"    shift, and go to state 257
    "::"         shift, and go to state 55
    "$t"         shift, and go to state 258
    "name"       shift, and go to state 56
    '$'          shift, and go to state 259

    name_in_namespace                   go to state 260
    basic_type_declaration              go to state 261
    structure_type_declaration          go to state 262
    auto_type_declaration               go to state 263
    bitfield_type_declaration           go to state 264
    type_declaration_no_options         go to state 1132
    type_declaration_no_options_no_dim  go to state 266


State 996

  768 make_dim_decl: "array" "tuple" '<' $@85 . type_declaration_no_options '>' $@86 '(' use_initializer optional_make_struct_dim_decl ')'

    "type"       shift, and go to state 219
    "array"      shift, and go to state 220
    "table"      shift, and go to state 221
    "typedecl"   shift, and go to state 222
    "iterator"   shift, and go to state 223
    "smart_ptr"  shift, and go to state 224
    "bool"       shift, and go to state 225
    "void"       shift, and go to state 226
    "string"     shift, and go to state 227
    "auto"       shift, and go to state 228
    "int"        shift, and go to state 229
    "int2"       shift, and go to state 230
    "int3"       shift, and go to state 231
    "int4"       shift, and go to state 232
    "uint"       shift, and go to state 233
    "bitfield"   shift, and go to state 234
    "uint2"      shift, and go to state 235
    "uint3"      shift, and go to state 236
    "uint4"      shift, and go to state 237
    "float"      shift, and go to state 238
    "float2"     shift, and go to state 239
    "float3"     shift, and go to state 240
    "float4"     shift, and go to state 241
    "range"      shift, and go to state 242
    "urange"     shift, and go to state 243
    "range64"    shift, and go to state 244
    "urange64"   shift, and go to state 245
    "block"      shift, and go to state 246
    "int64"      shift, and go to state 247
    "uint64"     shift, and go to state 248
    "double"     shift, and go to state 249
    "function"   shift, and go to state 250
    "lambda"     shift, and go to state 251
    "int8"       shift, and go to state 252
    "uint8"      shift, and go to state 253
    "int16"      shift, and go to state 254
    "uint16"     shift, and go to state 255
    "tuple"      shift, and go to state 256
    "variant"    shift, and go to state 257
    "::"         shift, and go to state 55
    "$t"         shift, and go to state 258
    "name"       shift, and go to state 56
    '$'          shift, and go to state 259

    name_in_namespace                   go to state 260
    basic_type_declaration              go to state 261
    structure_type_declaration          go to state 262
    auto_type_declaration               go to state 263
    bitfield_type_declaration           go to state 264
    type_declaration_no_options         go to state 1133
    type_declaration_no_options_no_dim  go to state 266


State 997

  771 make_dim_decl: "array" "variant" '<' $@87 . type_declaration_no_options '>' $@88 '(' make_variant_dim ')'

    "type"       shift, and go to state 219
    "array"      shift, and go to state 220
    "table"      shift, and go to state 221
    "typedecl"   shift, and go to state 222
    "iterator"   shift, and go to state 223
    "smart_ptr"  shift, and go to state 224
    "bool"       shift, and go to state 225
    "void"       shift, and go to state 226
    "string"     shift, and go to state 227
    "auto"       shift, and go to state 228
    "int"        shift, and go to state 229
    "int2"       shift, and go to state 230
    "int3"       shift, and go to state 231
    "int4"       shift, and go to state 232
    "uint"       shift, and go to state 233
    "bitfield"   shift, and go to state 234
    "uint2"      shift, and go to state 235
    "uint3"      shift, and go to state 236
    "uint4"      shift, and go to state 237
    "float"      shift, and go to state 238
    "float2"     shift, and go to state 239
    "float3"     shift, and go to state 240
    "float4"     shift, and go to state 241
    "range"      shift, and go to state 242
    "urange"     shift, and go to state 243
    "range64"    shift, and go to state 244
    "urange64"   shift, and go to state 245
    "block"      shift, and go to state 246
    "int64"      shift, and go to state 247
    "uint64"     shift, and go to state 248
    "double"     shift, and go to state 249
    "function"   shift, and go to state 250
    "lambda"     shift, and go to state 251
    "int8"       shift, and go to state 252
    "uint8"      shift, and go to state 253
    "int16"      shift, and go to state 254
    "uint16"     shift, and go to state 255
    "tuple"      shift, and go to state 256
    "variant"    shift, and go to state 257
    "::"         shift, and go to state 55
    "$t"         shift, and go to state 258
    "name"       shift, and go to state 56
    '$'          shift, and go to state 259

    name_in_namespace                   go to state 260
    basic_type_declaration              go to state 261
    structure_type_declaration          go to state 262
    auto_type_declaration               go to state 263
    bitfield_type_declaration           go to state 264
    type_declaration_no_options         go to state 1134
    type_declaration_no_options_no_dim  go to state 266


State 998

  775 make_dim_decl: "array" '<' $@89 type_declaration_no_options . '>' $@90 '(' optional_expr_list ')'

    '>'  shift, and go to state 1135


State 999

  772 make_dim_decl: "array" '(' expr_list optional_comma . ')'

    ')'  shift, and go to state 1136


State 1000

  784 make_table_decl: "table" '<' type_declaration_no_options '>' . '(' optional_expr_map_tuple_list ')'

    '('  shift, and go to state 1137


State 1001

  785 make_table_decl: "table" '<' type_declaration_no_options c_or_s . type_declaration_no_options '>' '(' optional_expr_map_tuple_list ')'

    "type"       shift, and go to state 219
    "array"      shift, and go to state 220
    "table"      shift, and go to state 221
    "typedecl"   shift, and go to state 222
    "iterator"   shift, and go to state 223
    "smart_ptr"  shift, and go to state 224
    "bool"       shift, and go to state 225
    "void"       shift, and go to state 226
    "string"     shift, and go to state 227
    "auto"       shift, and go to state 228
    "int"        shift, and go to state 229
    "int2"       shift, and go to state 230
    "int3"       shift, and go to state 231
    "int4"       shift, and go to state 232
    "uint"       shift, and go to state 233
    "bitfield"   shift, and go to state 234
    "uint2"      shift, and go to state 235
    "uint3"      shift, and go to state 236
    "uint4"      shift, and go to state 237
    "float"      shift, and go to state 238
    "float2"     shift, and go to state 239
    "float3"     shift, and go to state 240
    "float4"     shift, and go to state 241
    "range"      shift, and go to state 242
    "urange"     shift, and go to state 243
    "range64"    shift, and go to state 244
    "urange64"   shift, and go to state 245
    "block"      shift, and go to state 246
    "int64"      shift, and go to state 247
    "uint64"     shift, and go to state 248
    "double"     shift, and go to state 249
    "function"   shift, and go to state 250
    "lambda"     shift, and go to state 251
    "int8"       shift, and go to state 252
    "uint8"      shift, and go to state 253
    "int16"      shift, and go to state 254
    "uint16"     shift, and go to state 255
    "tuple"      shift, and go to state 256
    "variant"    shift, and go to state 257
    "::"         shift, and go to state 55
    "$t"         shift, and go to state 258
    "name"       shift, and go to state 56
    '$'          shift, and go to state 259

    name_in_namespace                   go to state 260
    basic_type_declaration              go to state 261
    structure_type_declaration          go to state 262
    auto_type_declaration               go to state 263
    bitfield_type_declaration           go to state 264
    type_declaration_no_options         go to state 1138
    type_declaration_no_options_no_dim  go to state 266


State 1002

  783 make_table_decl: "table" '(' expr_map_tuple_list optional_comma . ')'

    ')'  shift, and go to state 1139


State 1003

  419 expr: "deref" '(' expr ')' .

    $default  reduce using rule 419 (expr)


State 1004

  281 expr_cast: "cast" '<' $@5 type_declaration_no_options . '>' $@6 expr

    '>'  shift, and go to state 1140


State 1005

  284 expr_cast: "upcast" '<' $@7 type_declaration_no_options . '>' $@8 expr

    '>'  shift, and go to state 1141


State 1006

  420 expr: "addr" '(' expr ')' .

    $default  reduce using rule 420 (expr)


State 1007

  287 expr_cast: "reinterpret" '<' $@9 type_declaration_no_options . '>' $@10 expr

    '>'  shift, and go to state 1142


State 1008

  452 expr: "unsafe" '(' expr ')' .

    $default  reduce using rule 452 (expr)


State 1009

  779 make_dim_decl: "fixed_array" '<' $@91 type_declaration_no_options . '>' $@92 '(' expr_list optional_comma ')'

    '>'  shift, and go to state 1143


State 1010

  776 make_dim_decl: "fixed_array" '(' expr_list optional_comma . ')'

    ')'  shift, and go to state 1144


State 1011

  755 make_struct_decl: "default" '<' $@79 type_declaration_no_options . '>' $@80 use_initializer

    '>'  shift, and go to state 1145


State 1012

  761 make_tuple_call: "tuple" '<' $@81 type_declaration_no_options . '>' $@82 '(' use_initializer optional_make_struct_dim_decl ')'

    '>'  shift, and go to state 1146


State 1013

  758 make_tuple_call: "tuple" '(' expr_list optional_comma . ')'

    ')'  shift, and go to state 1147


State 1014

  752 make_struct_decl: "variant" '<' $@77 type_declaration_no_options . '>' $@78 '(' make_variant_dim ')'

    '>'  shift, and go to state 1148


State 1015

  421 expr: "generator" '<' type_declaration_no_options '>' . optional_capture_list '(' ')'
  422     | "generator" '<' type_declaration_no_options '>' . optional_capture_list '(' expr ')'
  423     | "generator" '<' type_declaration_no_options '>' . optional_capture_list expression_block

    "capture"  shift, and go to state 846

    $default  reduce using rule 309 (optional_capture_list)

    optional_capture_list  go to state 1149


State 1016

  453 expr_mtag: "$$" '(' expr ')' .

    $default  reduce using rule 453 (expr_mtag)


State 1017

  454 expr_mtag: "$i" '(' expr ')' .

    $default  reduce using rule 454 (expr_mtag)


State 1018

  455 expr_mtag: "$v" '(' expr ')' .

    $default  reduce using rule 455 (expr_mtag)


State 1019

  456 expr_mtag: "$b" '(' expr ')' .

    $default  reduce using rule 456 (expr_mtag)


State 1020

  457 expr_mtag: "$a" '(' expr ')' .

    $default  reduce using rule 457 (expr_mtag)


State 1021

  459 expr_mtag: "$c" '(' expr ')' . '(' ')'
  460          | "$c" '(' expr ')' . '(' expr_list ')'

    '('  shift, and go to state 1150


State 1022

   31 string_builder_body: string_builder_body "{" expr . "}"
  342 expr_method_call: expr . "->" "name" '(' ')'
  343                 | expr . "->" "name" '(' expr_list ')'
  353 expr_field: expr . '.' "name"
  354           | expr . '.' '.' "name"
  355           | expr . '.' "name" '(' ')'
  356           | expr . '.' "name" '(' expr_list ')'
  357           | expr . '.' basic_type_declaration '(' ')'
  358           | expr . '.' basic_type_declaration '(' expr_list ')'
  361           | expr . '.' $@17 error $@18
  383 expr: expr . "<<" expr
  384     | expr . ">>" expr
  385     | expr . "<<<" expr
  386     | expr . ">>>" expr
  387     | expr . '+' expr
  388     | expr . '-' expr
  389     | expr . '*' expr
  390     | expr . '/' expr
  391     | expr . '%' expr
  392     | expr . '<' expr
  393     | expr . '>' expr
  394     | expr . "==" expr
  395     | expr . "!=" expr
  396     | expr . "<=" expr
  397     | expr . ">=" expr
  398     | expr . '&' expr
  399     | expr . '|' expr
  400     | expr . '^' expr
  401     | expr . "&&" expr
  402     | expr . "||" expr
  403     | expr . "^^" expr
  404     | expr . ".." expr
  407     | expr . "++"
  408     | expr . "--"
  410     | expr . '[' expr ']'
  411     | expr . '.' '[' expr ']'
  412     | expr . "?[" expr ']'
  413     | expr . '.' "?[" expr ']'
  414     | expr . "?." "name"
  415     | expr . '.' "?." "name"
  424     | expr . "??" expr
  425     | expr . '?' expr ':' expr
  428     | expr . "is" "type" '<' $@19 type_declaration_no_options '>' $@20
  429     | expr . "is" basic_type_declaration
  430     | expr . "is" "name"
  431     | expr . "as" "name"
  434     | expr . "as" "type" '<' $@21 type_declaration '>' $@22
  435     | expr . "as" basic_type_declaration
  436     | expr . '?' "as" "name"
  439     | expr . '?' "as" "type" '<' $@23 type_declaration '>' $@24
  440     | expr . '?' "as" basic_type_declaration
  448     | expr . "<|" expr
  449     | expr . "|>" expr
  450     | expr . "|>" basic_type_declaration
  461 expr_mtag: expr . '.' "$f" '(' expr ')'
  462          | expr . "?." "$f" '(' expr ')'
  463          | expr . '.' '.' "$f" '(' expr ')'
  464          | expr . '.' "?." "$f" '(' expr ')'
  465          | expr . "as" "$f" '(' expr ')'
  466          | expr . '?' "as" "$f" '(' expr ')'
  467          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 648
    "as"   shift, and go to state 649
    "<<"   shift, and go to state 650
    ">>"   shift, and go to state 651
    "++"   shift, and go to state 652
    "--"   shift, and go to state 653
    "<="   shift, and go to state 654
    ">="   shift, and go to state 655
    "=="   shift, and go to state 656
    "!="   shift, and go to state 657
    "->"   shift, and go to state 658
    "??"   shift, and go to state 659
    "?."   shift, and go to state 660
    "?["   shift, and go to state 661
    "<|"   shift, and go to state 662
    "|>"   shift, and go to state 663
    "<<<"  shift, and go to state 664
    ">>>"  shift, and go to state 665
    "&&"   shift, and go to state 666
    "||"   shift, and go to state 667
    "^^"   shift, and go to state 668
    ".."   shift, and go to state 669
    "}"    shift, and go to state 1151
    '?'    shift, and go to state 670
    '|'    shift, and go to state 671
    '^'    shift, and go to state 672
    '&'    shift, and go to state 673
    '<'    shift, and go to state 674
    '>'    shift, and go to state 675
    '-'    shift, and go to state 676
    '+'    shift, and go to state 677
    '*'    shift, and go to state 678
    '/'    shift, and go to state 679
    '%'    shift, and go to state 680
    '.'    shift, and go to state 681
    '['    shift, and go to state 682


State 1023

  584 variable_name_with_pos_list: variable_name_with_pos_list . ',' "name"
  585                            | variable_name_with_pos_list . ',' "name" "aka" "name"
  792 array_comprehension: "begin of code block" "for" '(' variable_name_with_pos_list . "in" expr_list ')' "end of expression" make_map_tuple array_comprehension_where "end of code block"

    "in"  shift, and go to state 1152
    ','   shift, and go to state 928


State 1024

  342 expr_method_call: expr . "->" "name" '(' ')'
  343                 | expr . "->" "name" '(' expr_list ')'
  353 expr_field: expr . '.' "name"
  354           | expr . '.' '.' "name"
  355           | expr . '.' "name" '(' ')'
  356           | expr . '.' "name" '(' expr_list ')'
  357           | expr . '.' basic_type_declaration '(' ')'
  358           | expr . '.' basic_type_declaration '(' expr_list ')'
  361           | expr . '.' $@17 error $@18
  383 expr: expr . "<<" expr
  384     | expr . ">>" expr
  385     | expr . "<<<" expr
  386     | expr . ">>>" expr
  387     | expr . '+' expr
  388     | expr . '-' expr
  389     | expr . '*' expr
  390     | expr . '/' expr
  391     | expr . '%' expr
  392     | expr . '<' expr
  393     | expr . '>' expr
  394     | expr . "==" expr
  395     | expr . "!=" expr
  396     | expr . "<=" expr
  397     | expr . ">=" expr
  398     | expr . '&' expr
  399     | expr . '|' expr
  400     | expr . '^' expr
  401     | expr . "&&" expr
  402     | expr . "||" expr
  403     | expr . "^^" expr
  404     | expr . ".." expr
  407     | expr . "++"
  408     | expr . "--"
  410     | expr . '[' expr ']'
  411     | expr . '.' '[' expr ']'
  412     | expr . "?[" expr ']'
  413     | expr . '.' "?[" expr ']'
  414     | expr . "?." "name"
  415     | expr . '.' "?." "name"
  424     | expr . "??" expr
  425     | expr . '?' expr ':' expr
  428     | expr . "is" "type" '<' $@19 type_declaration_no_options '>' $@20
  429     | expr . "is" basic_type_declaration
  430     | expr . "is" "name"
  431     | expr . "as" "name"
  434     | expr . "as" "type" '<' $@21 type_declaration '>' $@22
  435     | expr . "as" basic_type_declaration
  436     | expr . '?' "as" "name"
  439     | expr . '?' "as" "type" '<' $@23 type_declaration '>' $@24
  440     | expr . '?' "as" basic_type_declaration
  448     | expr . "<|" expr
  449     | expr . "|>" expr
  450     | expr . "|>" basic_type_declaration
  461 expr_mtag: expr . '.' "$f" '(' expr ')'
  462          | expr . "?." "$f" '(' expr ')'
  463          | expr . '.' '.' "$f" '(' expr ')'
  464          | expr . '.' "?." "$f" '(' expr ')'
  465          | expr . "as" "$f" '(' expr ')'
  466          | expr . '?' "as" "$f" '(' expr ')'
  467          | expr . "is" "$f" '(' expr ')'
  756 make_map_tuple: expr "=>" expr .

    "is"   shift, and go to state 648
    "as"   shift, and go to state 649
    "<<"   shift, and go to state 650
    ">>"   shift, and go to state 651
    "++"   shift, and go to state 652
    "--"   shift, and go to state 653
    "<="   shift, and go to state 654
    ">="   shift, and go to state 655
    "=="   shift, and go to state 656
    "!="   shift, and go to state 657
    "->"   shift, and go to state 658
    "??"   shift, and go to state 659
    "?."   shift, and go to state 660
    "?["   shift, and go to state 661
    "<|"   shift, and go to state 662
    "|>"   shift, and go to state 663
    "<<<"  shift, and go to state 664
    ">>>"  shift, and go to state 665
    "&&"   shift, and go to state 666
    "||"   shift, and go to state 667
    "^^"   shift, and go to state 668
    ".."   shift, and go to state 669
    '?'    shift, and go to state 670
    '|'    shift, and go to state 671
    '^'    shift, and go to state 672
    '&'    shift, and go to state 673
    '<'    shift, and go to state 674
    '>'    shift, and go to state 675
    '-'    shift, and go to state 676
    '+'    shift, and go to state 677
    '*'    shift, and go to state 678
    '/'    shift, and go to state 679
    '%'    shift, and go to state 680
    '.'    shift, and go to state 681
    '['    shift, and go to state 682

    $default  reduce using rule 756 (make_map_tuple)


State 1025

  781 expr_map_tuple_list: expr_map_tuple_list ',' make_map_tuple .

    $default  reduce using rule 781 (expr_map_tuple_list)


State 1026

  782 make_table_decl: "begin of code block" expr_map_tuple_list optional_comma "end of code block" .

    $default  reduce using rule 782 (make_table_decl)


State 1027

  584 variable_name_with_pos_list: variable_name_with_pos_list . ',' "name"
  585                            | variable_name_with_pos_list . ',' "name" "aka" "name"
  790 array_comprehension: '[' "for" '(' variable_name_with_pos_list . "in" expr_list ')' "end of expression" expr array_comprehension_where ']'

    "in"  shift, and go to state 1153
    ','   shift, and go to state 928


State 1028

  791 array_comprehension: '[' "iterator" "for" '(' . variable_name_with_pos_list "in" expr_list ')' "end of expression" expr array_comprehension_where ']'

    "$i"    shift, and go to state 717
    "name"  shift, and go to state 718

    variable_name_with_pos_list  go to state 1154


State 1029

  295 expr_list: expr_list ',' expr .
  342 expr_method_call: expr . "->" "name" '(' ')'
  343                 | expr . "->" "name" '(' expr_list ')'
  353 expr_field: expr . '.' "name"
  354           | expr . '.' '.' "name"
  355           | expr . '.' "name" '(' ')'
  356           | expr . '.' "name" '(' expr_list ')'
  357           | expr . '.' basic_type_declaration '(' ')'
  358           | expr . '.' basic_type_declaration '(' expr_list ')'
  361           | expr . '.' $@17 error $@18
  383 expr: expr . "<<" expr
  384     | expr . ">>" expr
  385     | expr . "<<<" expr
  386     | expr . ">>>" expr
  387     | expr . '+' expr
  388     | expr . '-' expr
  389     | expr . '*' expr
  390     | expr . '/' expr
  391     | expr . '%' expr
  392     | expr . '<' expr
  393     | expr . '>' expr
  394     | expr . "==" expr
  395     | expr . "!=" expr
  396     | expr . "<=" expr
  397     | expr . ">=" expr
  398     | expr . '&' expr
  399     | expr . '|' expr
  400     | expr . '^' expr
  401     | expr . "&&" expr
  402     | expr . "||" expr
  403     | expr . "^^" expr
  404     | expr . ".." expr
  407     | expr . "++"
  408     | expr . "--"
  410     | expr . '[' expr ']'
  411     | expr . '.' '[' expr ']'
  412     | expr . "?[" expr ']'
  413     | expr . '.' "?[" expr ']'
  414     | expr . "?." "name"
  415     | expr . '.' "?." "name"
  424     | expr . "??" expr
  425     | expr . '?' expr ':' expr
  428     | expr . "is" "type" '<' $@19 type_declaration_no_options '>' $@20
  429     | expr . "is" basic_type_declaration
  430     | expr . "is" "name"
  431     | expr . "as" "name"
  434     | expr . "as" "type" '<' $@21 type_declaration '>' $@22
  435     | expr . "as" basic_type_declaration
  436     | expr . '?' "as" "name"
  439     | expr . '?' "as" "type" '<' $@23 type_declaration '>' $@24
  440     | expr . '?' "as" basic_type_declaration
  448     | expr . "<|" expr
  449     | expr . "|>" expr
  450     | expr . "|>" basic_type_declaration
  461 expr_mtag: expr . '.' "$f" '(' expr ')'
  462          | expr . "?." "$f" '(' expr ')'
  463          | expr . '.' '.' "$f" '(' expr ')'
  464          | expr . '.' "?." "$f" '(' expr ')'
  465          | expr . "as" "$f" '(' expr ')'
  466          | expr . '?' "as" "$f" '(' expr ')'
  467          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 648
    "as"   shift, and go to state 649
    "<<"   shift, and go to state 650
    ">>"   shift, and go to state 651
    "++"   shift, and go to state 652
    "--"   shift, and go to state 653
    "<="   shift, and go to state 654
    ">="   shift, and go to state 655
    "=="   shift, and go to state 656
    "!="   shift, and go to state 657
    "->"   shift, and go to state 658
    "??"   shift, and go to state 659
    "?."   shift, and go to state 660
    "?["   shift, and go to state 661
    "<|"   shift, and go to state 662
    "|>"   shift, and go to state 663
    "<<<"  shift, and go to state 664
    ">>>"  shift, and go to state 665
    "&&"   shift, and go to state 666
    "||"   shift, and go to state 667
    "^^"   shift, and go to state 668
    ".."   shift, and go to state 669
    '?'    shift, and go to state 670
    '|'    shift, and go to state 671
    '^'    shift, and go to state 672
    '&'    shift, and go to state 673
    '<'    shift, and go to state 674
    '>'    shift, and go to state 675
    '-'    shift, and go to state 676
    '+'    shift, and go to state 677
    '*'    shift, and go to state 678
    '/'    shift, and go to state 679
    '%'    shift, and go to state 680
    '.'    shift, and go to state 681
    '['    shift, and go to state 682

    $default  reduce using rule 295 (expr_list)


State 1030

  762 make_dim_decl: '[' expr_list optional_comma ']' .

    $default  reduce using rule 762 (make_dim_decl)


State 1031

  409 expr: '(' expr_list optional_comma ')' .

    $default  reduce using rule 409 (expr)


State 1032

  345 func_addr_name: "$i" '(' . expr ')'

    "struct"                          shift, and go to state 409
    "class"                           shift, and go to state 410
    "true"                            shift, and go to state 411
    "false"                           shift, and go to state 412
    "new"                             shift, and go to state 413
    "typeinfo"                        shift, and go to state 414
    "type"                            shift, and go to state 415
    "array"                           shift, and go to state 416
    "null"                            shift, and go to state 417
    "table"                           shift, and go to state 418
    "deref"                           shift, and go to state 419
    "cast"                            shift, and go to state 420
    "upcast"                          shift, and go to state 421
    "addr"                            shift, and go to state 422
    "reinterpret"                     shift, and go to state 423
    "unsafe"                          shift, and go to state 424
    "fixed_array"                     shift, and go to state 425
    "default"                         shift, and go to state 426
    "bool"                            shift, and go to state 225
    "void"                            shift, and go to state 226
    "string"                          shift, and go to state 227
    "int"                             shift, and go to state 229
    "int2"                            shift, and go to state 230
    "int3"                            shift, and go to state 231
    "int4"                            shift, and go to state 232
    "uint"                            shift, and go to state 233
    "bitfield"                        shift, and go to state 427
    "uint2"                           shift, and go to state 235
    "uint3"                           shift, and go to state 236
    "uint4"                           shift, and go to state 237
    "float"                           shift, and go to state 238
    "float2"                          shift, and go to state 239
    "float3"                          shift, and go to state 240
    "float4"                          shift, and go to state 241
    "range"                           shift, and go to state 242
    "urange"                          shift, and go to state 243
    "range64"                         shift, and go to state 244
    "urange64"                        shift, and go to state 245
    "int64"                           shift, and go to state 247
    "uint64"                          shift, and go to state 248
    "double"                          shift, and go to state 249
    "int8"                            shift, and go to state 252
    "uint8"                           shift, and go to state 253
    "int16"                           shift, and go to state 254
    "uint16"                          shift, and go to state 255
    "tuple"                           shift, and go to state 428
    "variant"                         shift, and go to state 429
    "generator"                       shift, and go to state 430
    "++"                              shift, and go to state 431
    "--"                              shift, and go to state 432
    "::"                              shift, and go to state 55
    "$$"                              shift, and go to state 433
    "$i"                              shift, and go to state 434
    "$v"                              shift, and go to state 435
    "$b"                              shift, and go to state 436
    "$a"                              shift, and go to state 437
    "$c"                              shift, and go to state 438
    "..."                             shift, and go to state 439
    "integer constant"                shift, and go to state 440
    "long integer constant"           shift, and go to state 441
    "unsigned integer constant"       shift, and go to state 442
    "unsigned long integer constant"  shift, and go to state 443
    "unsigned int8 constant"          shift, and go to state 444
    "floating point constant"         shift, and go to state 445
    "double constant"                 shift, and go to state 446
    "name"                            shift, and go to state 56
    "start of the string"             shift, and go to state 447
    "begin of code block"             shift, and go to state 448
    '-'                               shift, and go to state 449
    '+'                               shift, and go to state 450
    '*'                               shift, and go to state 451
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 452
    '!'                               shift, and go to state 453
    '['                               shift, and go to state 454
    '('                               shift, and go to state 455
    '$'                               shift, and go to state 456
    '@'                               shift, and go to state 457

    string_builder          go to state 458
    expr_reader             go to state 459
    expr_call_pipe          go to state 460
    name_in_namespace       go to state 461
    expr_new                go to state 462
    expr_cast               go to state 463
    expr_type_decl          go to state 464
    expr_type_info          go to state 465
    block_or_lambda         go to state 466
    expr_full_block         go to state 467
    expr_numeric_const      go to state 468
    expr_named_call         go to state 469
    expr_method_call        go to state 470
    func_addr_expr          go to state 471
    expr_field              go to state 472
    expr_call               go to state 473
    expr                    go to state 1155
    expr_mtag               go to state 475
    basic_type_declaration  go to state 476
    make_decl               go to state 477
    make_struct_decl        go to state 478
    make_tuple_call         go to state 479
    make_dim_decl           go to state 480
    make_table_decl         go to state 481
    array_comprehension     go to state 482


State 1033

  468 expr_mtag: '@' '@' "$c" '(' . expr ')'

    "struct"                          shift, and go to state 409
    "class"                           shift, and go to state 410
    "true"                            shift, and go to state 411
    "false"                           shift, and go to state 412
    "new"                             shift, and go to state 413
    "typeinfo"                        shift, and go to state 414
    "type"                            shift, and go to state 415
    "array"                           shift, and go to state 416
    "null"                            shift, and go to state 417
    "table"                           shift, and go to state 418
    "deref"                           shift, and go to state 419
    "cast"                            shift, and go to state 420
    "upcast"                          shift, and go to state 421
    "addr"                            shift, and go to state 422
    "reinterpret"                     shift, and go to state 423
    "unsafe"                          shift, and go to state 424
    "fixed_array"                     shift, and go to state 425
    "default"                         shift, and go to state 426
    "bool"                            shift, and go to state 225
    "void"                            shift, and go to state 226
    "string"                          shift, and go to state 227
    "int"                             shift, and go to state 229
    "int2"                            shift, and go to state 230
    "int3"                            shift, and go to state 231
    "int4"                            shift, and go to state 232
    "uint"                            shift, and go to state 233
    "bitfield"                        shift, and go to state 427
    "uint2"                           shift, and go to state 235
    "uint3"                           shift, and go to state 236
    "uint4"                           shift, and go to state 237
    "float"                           shift, and go to state 238
    "float2"                          shift, and go to state 239
    "float3"                          shift, and go to state 240
    "float4"                          shift, and go to state 241
    "range"                           shift, and go to state 242
    "urange"                          shift, and go to state 243
    "range64"                         shift, and go to state 244
    "urange64"                        shift, and go to state 245
    "int64"                           shift, and go to state 247
    "uint64"                          shift, and go to state 248
    "double"                          shift, and go to state 249
    "int8"                            shift, and go to state 252
    "uint8"                           shift, and go to state 253
    "int16"                           shift, and go to state 254
    "uint16"                          shift, and go to state 255
    "tuple"                           shift, and go to state 428
    "variant"                         shift, and go to state 429
    "generator"                       shift, and go to state 430
    "++"                              shift, and go to state 431
    "--"                              shift, and go to state 432
    "::"                              shift, and go to state 55
    "$$"                              shift, and go to state 433
    "$i"                              shift, and go to state 434
    "$v"                              shift, and go to state 435
    "$b"                              shift, and go to state 436
    "$a"                              shift, and go to state 437
    "$c"                              shift, and go to state 438
    "..."                             shift, and go to state 439
    "integer constant"                shift, and go to state 440
    "long integer constant"           shift, and go to state 441
    "unsigned integer constant"       shift, and go to state 442
    "unsigned long integer constant"  shift, and go to state 443
    "unsigned int8 constant"          shift, and go to state 444
    "floating point constant"         shift, and go to state 445
    "double constant"                 shift, and go to state 446
    "name"                            shift, and go to state 56
    "start of the string"             shift, and go to state 447
    "begin of code block"             shift, and go to state 448
    '-'                               shift, and go to state 449
    '+'                               shift, and go to state 450
    '*'                               shift, and go to state 451
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 452
    '!'                               shift, and go to state 453
    '['                               shift, and go to state 454
    '('                               shift, and go to state 455
    '$'                               shift, and go to state 456
    '@'                               shift, and go to state 457

    string_builder          go to state 458
    expr_reader             go to state 459
    expr_call_pipe          go to state 460
    name_in_namespace       go to state 461
    expr_new                go to state 462
    expr_cast               go to state 463
    expr_type_decl          go to state 464
    expr_type_info          go to state 465
    block_or_lambda         go to state 466
    expr_full_block         go to state 467
    expr_numeric_const      go to state 468
    expr_named_call         go to state 469
    expr_method_call        go to state 470
    func_addr_expr          go to state 471
    expr_field              go to state 472
    expr_call               go to state 473
    expr                    go to state 1156
    expr_mtag               go to state 475
    basic_type_declaration  go to state 476
    make_decl               go to state 477
    make_struct_decl        go to state 478
    make_tuple_call         go to state 479
    make_dim_decl           go to state 480
    make_table_decl         go to state 481
    array_comprehension     go to state 482


State 1034

  349 func_addr_expr: '@' '@' '<' $@13 . type_declaration_no_options '>' $@14 func_addr_name

    "type"       shift, and go to state 219
    "array"      shift, and go to state 220
    "table"      shift, and go to state 221
    "typedecl"   shift, and go to state 222
    "iterator"   shift, and go to state 223
    "smart_ptr"  shift, and go to state 224
    "bool"       shift, and go to state 225
    "void"       shift, and go to state 226
    "string"     shift, and go to state 227
    "auto"       shift, and go to state 228
    "int"        shift, and go to state 229
    "int2"       shift, and go to state 230
    "int3"       shift, and go to state 231
    "int4"       shift, and go to state 232
    "uint"       shift, and go to state 233
    "bitfield"   shift, and go to state 234
    "uint2"      shift, and go to state 235
    "uint3"      shift, and go to state 236
    "uint4"      shift, and go to state 237
    "float"      shift, and go to state 238
    "float2"     shift, and go to state 239
    "float3"     shift, and go to state 240
    "float4"     shift, and go to state 241
    "range"      shift, and go to state 242
    "urange"     shift, and go to state 243
    "range64"    shift, and go to state 244
    "urange64"   shift, and go to state 245
    "block"      shift, and go to state 246
    "int64"      shift, and go to state 247
    "uint64"     shift, and go to state 248
    "double"     shift, and go to state 249
    "function"   shift, and go to state 250
    "lambda"     shift, and go to state 251
    "int8"       shift, and go to state 252
    "uint8"      shift, and go to state 253
    "int16"      shift, and go to state 254
    "uint16"     shift, and go to state 255
    "tuple"      shift, and go to state 256
    "variant"    shift, and go to state 257
    "::"         shift, and go to state 55
    "$t"         shift, and go to state 258
    "name"       shift, and go to state 56
    '$'          shift, and go to state 259

    name_in_namespace                   go to state 260
    basic_type_declaration              go to state 261
    structure_type_declaration          go to state 262
    auto_type_declaration               go to state 263
    bitfield_type_declaration           go to state 264
    type_declaration_no_options         go to state 1157
    type_declaration_no_options_no_dim  go to state 266


State 1035

  352 func_addr_expr: '@' '@' '<' $@15 . optional_function_argument_list optional_function_type '>' $@16 func_addr_name

    '('  shift, and go to state 324

    $default  reduce using rule 115 (optional_function_argument_list)

    optional_function_argument_list  go to state 1158


State 1036

  726 make_struct_fields: "name" . copy_or_move expr
  727                   | "name" . ":=" expr

    "<-"  shift, and go to state 927
    ":="  shift, and go to state 1040
    '='   shift, and go to state 929

    copy_or_move  go to state 1041


State 1037

  363 expr_call: name_in_namespace '(' "uninitialized" ')' .

    $default  reduce using rule 363 (expr_call)


State 1038

  365 expr_call: name_in_namespace '(' "uninitialized" make_struct_single . ')'

    ')'  shift, and go to state 1159


State 1039

  730 make_struct_fields: "$f" '(' . expr ')' copy_or_move expr
  731                   | "$f" '(' . expr ')' ":=" expr

    "struct"                          shift, and go to state 409
    "class"                           shift, and go to state 410
    "true"                            shift, and go to state 411
    "false"                           shift, and go to state 412
    "new"                             shift, and go to state 413
    "typeinfo"                        shift, and go to state 414
    "type"                            shift, and go to state 415
    "array"                           shift, and go to state 416
    "null"                            shift, and go to state 417
    "table"                           shift, and go to state 418
    "deref"                           shift, and go to state 419
    "cast"                            shift, and go to state 420
    "upcast"                          shift, and go to state 421
    "addr"                            shift, and go to state 422
    "reinterpret"                     shift, and go to state 423
    "unsafe"                          shift, and go to state 424
    "fixed_array"                     shift, and go to state 425
    "default"                         shift, and go to state 426
    "bool"                            shift, and go to state 225
    "void"                            shift, and go to state 226
    "string"                          shift, and go to state 227
    "int"                             shift, and go to state 229
    "int2"                            shift, and go to state 230
    "int3"                            shift, and go to state 231
    "int4"                            shift, and go to state 232
    "uint"                            shift, and go to state 233
    "bitfield"                        shift, and go to state 427
    "uint2"                           shift, and go to state 235
    "uint3"                           shift, and go to state 236
    "uint4"                           shift, and go to state 237
    "float"                           shift, and go to state 238
    "float2"                          shift, and go to state 239
    "float3"                          shift, and go to state 240
    "float4"                          shift, and go to state 241
    "range"                           shift, and go to state 242
    "urange"                          shift, and go to state 243
    "range64"                         shift, and go to state 244
    "urange64"                        shift, and go to state 245
    "int64"                           shift, and go to state 247
    "uint64"                          shift, and go to state 248
    "double"                          shift, and go to state 249
    "int8"                            shift, and go to state 252
    "uint8"                           shift, and go to state 253
    "int16"                           shift, and go to state 254
    "uint16"                          shift, and go to state 255
    "tuple"                           shift, and go to state 428
    "variant"                         shift, and go to state 429
    "generator"                       shift, and go to state 430
    "++"                              shift, and go to state 431
    "--"                              shift, and go to state 432
    "::"                              shift, and go to state 55
    "$$"                              shift, and go to state 433
    "$i"                              shift, and go to state 434
    "$v"                              shift, and go to state 435
    "$b"                              shift, and go to state 436
    "$a"                              shift, and go to state 437
    "$c"                              shift, and go to state 438
    "..."                             shift, and go to state 439
    "integer constant"                shift, and go to state 440
    "long integer constant"           shift, and go to state 441
    "unsigned integer constant"       shift, and go to state 442
    "unsigned long integer constant"  shift, and go to state 443
    "unsigned int8 constant"          shift, and go to state 444
    "floating point constant"         shift, and go to state 445
    "double constant"                 shift, and go to state 446
    "name"                            shift, and go to state 56
    "start of the string"             shift, and go to state 447
    "begin of code block"             shift, and go to state 448
    '-'                               shift, and go to state 449
    '+'                               shift, and go to state 450
    '*'                               shift, and go to state 451
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 452
    '!'                               shift, and go to state 453
    '['                               shift, and go to state 454
    '('                               shift, and go to state 455
    '$'                               shift, and go to state 456
    '@'                               shift, and go to state 457

    string_builder          go to state 458
    expr_reader             go to state 459
    expr_call_pipe          go to state 460
    name_in_namespace       go to state 461
    expr_new                go to state 462
    expr_cast               go to state 463
    expr_type_decl          go to state 464
    expr_type_info          go to state 465
    block_or_lambda         go to state 466
    expr_full_block         go to state 467
    expr_numeric_const      go to state 468
    expr_named_call         go to state 469
    expr_method_call        go to state 470
    func_addr_expr          go to state 471
    expr_field              go to state 472
    expr_call               go to state 473
    expr                    go to state 1160
    expr_mtag               go to state 475
    basic_type_declaration  go to state 476
    make_decl               go to state 477
    make_struct_decl        go to state 478
    make_tuple_call         go to state 479
    make_dim_decl           go to state 480
    make_table_decl         go to state 481
    array_comprehension     go to state 482


State 1040

  727 make_struct_fields: "name" ":=" . expr

    "struct"                          shift, and go to state 409
    "class"                           shift, and go to state 410
    "true"                            shift, and go to state 411
    "false"                           shift, and go to state 412
    "new"                             shift, and go to state 413
    "typeinfo"                        shift, and go to state 414
    "type"                            shift, and go to state 415
    "array"                           shift, and go to state 416
    "null"                            shift, and go to state 417
    "table"                           shift, and go to state 418
    "deref"                           shift, and go to state 419
    "cast"                            shift, and go to state 420
    "upcast"                          shift, and go to state 421
    "addr"                            shift, and go to state 422
    "reinterpret"                     shift, and go to state 423
    "unsafe"                          shift, and go to state 424
    "fixed_array"                     shift, and go to state 425
    "default"                         shift, and go to state 426
    "bool"                            shift, and go to state 225
    "void"                            shift, and go to state 226
    "string"                          shift, and go to state 227
    "int"                             shift, and go to state 229
    "int2"                            shift, and go to state 230
    "int3"                            shift, and go to state 231
    "int4"                            shift, and go to state 232
    "uint"                            shift, and go to state 233
    "bitfield"                        shift, and go to state 427
    "uint2"                           shift, and go to state 235
    "uint3"                           shift, and go to state 236
    "uint4"                           shift, and go to state 237
    "float"                           shift, and go to state 238
    "float2"                          shift, and go to state 239
    "float3"                          shift, and go to state 240
    "float4"                          shift, and go to state 241
    "range"                           shift, and go to state 242
    "urange"                          shift, and go to state 243
    "range64"                         shift, and go to state 244
    "urange64"                        shift, and go to state 245
    "int64"                           shift, and go to state 247
    "uint64"                          shift, and go to state 248
    "double"                          shift, and go to state 249
    "int8"                            shift, and go to state 252
    "uint8"                           shift, and go to state 253
    "int16"                           shift, and go to state 254
    "uint16"                          shift, and go to state 255
    "tuple"                           shift, and go to state 428
    "variant"                         shift, and go to state 429
    "generator"                       shift, and go to state 430
    "++"                              shift, and go to state 431
    "--"                              shift, and go to state 432
    "::"                              shift, and go to state 55
    "$$"                              shift, and go to state 433
    "$i"                              shift, and go to state 434
    "$v"                              shift, and go to state 435
    "$b"                              shift, and go to state 436
    "$a"                              shift, and go to state 437
    "$c"                              shift, and go to state 438
    "..."                             shift, and go to state 439
    "integer constant"                shift, and go to state 440
    "long integer constant"           shift, and go to state 441
    "unsigned integer constant"       shift, and go to state 442
    "unsigned long integer constant"  shift, and go to state 443
    "unsigned int8 constant"          shift, and go to state 444
    "floating point constant"         shift, and go to state 445
    "double constant"                 shift, and go to state 446
    "name"                            shift, and go to state 56
    "start of the string"             shift, and go to state 447
    "begin of code block"             shift, and go to state 448
    '-'                               shift, and go to state 449
    '+'                               shift, and go to state 450
    '*'                               shift, and go to state 451
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 452
    '!'                               shift, and go to state 453
    '['                               shift, and go to state 454
    '('                               shift, and go to state 455
    '$'                               shift, and go to state 456
    '@'                               shift, and go to state 457

    string_builder          go to state 458
    expr_reader             go to state 459
    expr_call_pipe          go to state 460
    name_in_namespace       go to state 461
    expr_new                go to state 462
    expr_cast               go to state 463
    expr_type_decl          go to state 464
    expr_type_info          go to state 465
    block_or_lambda         go to state 466
    expr_full_block         go to state 467
    expr_numeric_const      go to state 468
    expr_named_call         go to state 469
    expr_method_call        go to state 470
    func_addr_expr          go to state 471
    expr_field              go to state 472
    expr_call               go to state 473
    expr                    go to state 1161
    expr_mtag               go to state 475
    basic_type_declaration  go to state 476
    make_decl               go to state 477
    make_struct_decl        go to state 478
    make_tuple_call         go to state 479
    make_dim_decl           go to state 480
    make_table_decl         go to state 481
    array_comprehension     go to state 482


State 1041

  726 make_struct_fields: "name" copy_or_move . expr

    "struct"                          shift, and go to state 409
    "class"                           shift, and go to state 410
    "true"                            shift, and go to state 411
    "false"                           shift, and go to state 412
    "new"                             shift, and go to state 413
    "typeinfo"                        shift, and go to state 414
    "type"                            shift, and go to state 415
    "array"                           shift, and go to state 416
    "null"                            shift, and go to state 417
    "table"                           shift, and go to state 418
    "deref"                           shift, and go to state 419
    "cast"                            shift, and go to state 420
    "upcast"                          shift, and go to state 421
    "addr"                            shift, and go to state 422
    "reinterpret"                     shift, and go to state 423
    "unsafe"                          shift, and go to state 424
    "fixed_array"                     shift, and go to state 425
    "default"                         shift, and go to state 426
    "bool"                            shift, and go to state 225
    "void"                            shift, and go to state 226
    "string"                          shift, and go to state 227
    "int"                             shift, and go to state 229
    "int2"                            shift, and go to state 230
    "int3"                            shift, and go to state 231
    "int4"                            shift, and go to state 232
    "uint"                            shift, and go to state 233
    "bitfield"                        shift, and go to state 427
    "uint2"                           shift, and go to state 235
    "uint3"                           shift, and go to state 236
    "uint4"                           shift, and go to state 237
    "float"                           shift, and go to state 238
    "float2"                          shift, and go to state 239
    "float3"                          shift, and go to state 240
    "float4"                          shift, and go to state 241
    "range"                           shift, and go to state 242
    "urange"                          shift, and go to state 243
    "range64"                         shift, and go to state 244
    "urange64"                        shift, and go to state 245
    "int64"                           shift, and go to state 247
    "uint64"                          shift, and go to state 248
    "double"                          shift, and go to state 249
    "int8"                            shift, and go to state 252
    "uint8"                           shift, and go to state 253
    "int16"                           shift, and go to state 254
    "uint16"                          shift, and go to state 255
    "tuple"                           shift, and go to state 428
    "variant"                         shift, and go to state 429
    "generator"                       shift, and go to state 430
    "++"                              shift, and go to state 431
    "--"                              shift, and go to state 432
    "::"                              shift, and go to state 55
    "$$"                              shift, and go to state 433
    "$i"                              shift, and go to state 434
    "$v"                              shift, and go to state 435
    "$b"                              shift, and go to state 436
    "$a"                              shift, and go to state 437
    "$c"                              shift, and go to state 438
    "..."                             shift, and go to state 439
    "integer constant"                shift, and go to state 440
    "long integer constant"           shift, and go to state 441
    "unsigned integer constant"       shift, and go to state 442
    "unsigned long integer constant"  shift, and go to state 443
    "unsigned int8 constant"          shift, and go to state 444
    "floating point constant"         shift, and go to state 445
    "double constant"                 shift, and go to state 446
    "name"                            shift, and go to state 56
    "start of the string"             shift, and go to state 447
    "begin of code block"             shift, and go to state 448
    '-'                               shift, and go to state 449
    '+'                               shift, and go to state 450
    '*'                               shift, and go to state 451
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 452
    '!'                               shift, and go to state 453
    '['                               shift, and go to state 454
    '('                               shift, and go to state 455
    '$'                               shift, and go to state 456
    '@'                               shift, and go to state 457

    string_builder          go to state 458
    expr_reader             go to state 459
    expr_call_pipe          go to state 460
    name_in_namespace       go to state 461
    expr_new                go to state 462
    expr_cast               go to state 463
    expr_type_decl          go to state 464
    expr_type_info          go to state 465
    block_or_lambda         go to state 466
    expr_full_block         go to state 467
    expr_numeric_const      go to state 468
    expr_named_call         go to state 469
    expr_method_call        go to state 470
    func_addr_expr          go to state 471
    expr_field              go to state 472
    expr_call               go to state 473
    expr                    go to state 1162
    expr_mtag               go to state 475
    basic_type_declaration  go to state 476
    make_decl               go to state 477
    make_struct_decl        go to state 478
    make_tuple_call         go to state 479
    make_dim_decl           go to state 480
    make_table_decl         go to state 481
    array_comprehension     go to state 482


State 1042

  340 expr_named_call: name_in_namespace '(' '[' make_struct_fields . ']' ')'
  728 make_struct_fields: make_struct_fields . ',' "name" copy_or_move expr
  729                   | make_struct_fields . ',' "name" ":=" expr
  732                   | make_struct_fields . ',' "$f" '(' expr ')' copy_or_move expr
  733                   | make_struct_fields . ',' "$f" '(' expr ')' ":=" expr

    ','  shift, and go to state 1045
    ']'  shift, and go to state 1163


State 1043

  295 expr_list: expr_list ',' . expr
  341 expr_named_call: name_in_namespace '(' expr_list ',' . '[' make_struct_fields ']' ')'

    "struct"                          shift, and go to state 409
    "class"                           shift, and go to state 410
    "true"                            shift, and go to state 411
    "false"                           shift, and go to state 412
    "new"                             shift, and go to state 413
    "typeinfo"                        shift, and go to state 414
    "type"                            shift, and go to state 415
    "array"                           shift, and go to state 416
    "null"                            shift, and go to state 417
    "table"                           shift, and go to state 418
    "deref"                           shift, and go to state 419
    "cast"                            shift, and go to state 420
    "upcast"                          shift, and go to state 421
    "addr"                            shift, and go to state 422
    "reinterpret"                     shift, and go to state 423
    "unsafe"                          shift, and go to state 424
    "fixed_array"                     shift, and go to state 425
    "default"                         shift, and go to state 426
    "bool"                            shift, and go to state 225
    "void"                            shift, and go to state 226
    "string"                          shift, and go to state 227
    "int"                             shift, and go to state 229
    "int2"                            shift, and go to state 230
    "int3"                            shift, and go to state 231
    "int4"                            shift, and go to state 232
    "uint"                            shift, and go to state 233
    "bitfield"                        shift, and go to state 427
    "uint2"                           shift, and go to state 235
    "uint3"                           shift, and go to state 236
    "uint4"                           shift, and go to state 237
    "float"                           shift, and go to state 238
    "float2"                          shift, and go to state 239
    "float3"                          shift, and go to state 240
    "float4"                          shift, and go to state 241
    "range"                           shift, and go to state 242
    "urange"                          shift, and go to state 243
    "range64"                         shift, and go to state 244
    "urange64"                        shift, and go to state 245
    "int64"                           shift, and go to state 247
    "uint64"                          shift, and go to state 248
    "double"                          shift, and go to state 249
    "int8"                            shift, and go to state 252
    "uint8"                           shift, and go to state 253
    "int16"                           shift, and go to state 254
    "uint16"                          shift, and go to state 255
    "tuple"                           shift, and go to state 428
    "variant"                         shift, and go to state 429
    "generator"                       shift, and go to state 430
    "++"                              shift, and go to state 431
    "--"                              shift, and go to state 432
    "::"                              shift, and go to state 55
    "$$"                              shift, and go to state 433
    "$i"                              shift, and go to state 434
    "$v"                              shift, and go to state 435
    "$b"                              shift, and go to state 436
    "$a"                              shift, and go to state 437
    "$c"                              shift, and go to state 438
    "..."                             shift, and go to state 439
    "integer constant"                shift, and go to state 440
    "long integer constant"           shift, and go to state 441
    "unsigned integer constant"       shift, and go to state 442
    "unsigned long integer constant"  shift, and go to state 443
    "unsigned int8 constant"          shift, and go to state 444
    "floating point constant"         shift, and go to state 445
    "double constant"                 shift, and go to state 446
    "name"                            shift, and go to state 56
    "start of the string"             shift, and go to state 447
    "begin of code block"             shift, and go to state 448
    '-'                               shift, and go to state 449
    '+'                               shift, and go to state 450
    '*'                               shift, and go to state 451
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 452
    '!'                               shift, and go to state 453
    '['                               shift, and go to state 1164
    '('                               shift, and go to state 455
    '$'                               shift, and go to state 456
    '@'                               shift, and go to state 457

    string_builder          go to state 458
    expr_reader             go to state 459
    expr_call_pipe          go to state 460
    name_in_namespace       go to state 461
    expr_new                go to state 462
    expr_cast               go to state 463
    expr_type_decl          go to state 464
    expr_type_info          go to state 465
    block_or_lambda         go to state 466
    expr_full_block         go to state 467
    expr_numeric_const      go to state 468
    expr_named_call         go to state 469
    expr_method_call        go to state 470
    func_addr_expr          go to state 471
    expr_field              go to state 472
    expr_call               go to state 473
    expr                    go to state 1029
    expr_mtag               go to state 475
    basic_type_declaration  go to state 476
    make_decl               go to state 477
    make_struct_decl        go to state 478
    make_tuple_call         go to state 479
    make_dim_decl           go to state 480
    make_table_decl         go to state 481
    array_comprehension     go to state 482


State 1044

  366 expr_call: name_in_namespace '(' expr_list ')' .

    $default  reduce using rule 366 (expr_call)


State 1045

  728 make_struct_fields: make_struct_fields ',' . "name" copy_or_move expr
  729                   | make_struct_fields ',' . "name" ":=" expr
  732                   | make_struct_fields ',' . "$f" '(' expr ')' copy_or_move expr
  733                   | make_struct_fields ',' . "$f" '(' expr ')' ":=" expr

    "$f"    shift, and go to state 1165
    "name"  shift, and go to state 1166


State 1046

  364 expr_call: name_in_namespace '(' make_struct_single ')' .

    $default  reduce using rule 364 (expr_call)


State 1047

  310 optional_capture_list: "capture" '(' . capture_list ')'

    "<-"    shift, and go to state 1167
    ":="    shift, and go to state 1168
    "name"  shift, and go to state 1169
    '='     shift, and go to state 1170
    '&'     shift, and go to state 1171

    capture_entry  go to state 1172
    capture_list   go to state 1173


State 1048

  311 expr_full_block: block_or_lambda optional_annotation_list optional_capture_list optional_function_argument_list . optional_function_type block_or_simple_block

    ':'  shift, and go to state 392

    $default  reduce using rule 118 (optional_function_type)

    optional_function_type  go to state 1174


State 1049

  313 expr_full_block_assumed_piped: "begin of code block" expressions "end of code block" .

    $default  reduce using rule 313 (expr_full_block_assumed_piped)


State 1050

  312 expr_full_block_assumed_piped: block_or_lambda optional_annotation_list optional_capture_list . optional_function_argument_list optional_function_type expression_block

    '('  shift, and go to state 324

    $default  reduce using rule 115 (optional_function_argument_list)

    optional_function_argument_list  go to state 1175


State 1051

  428 expr: expr "is" "type" '<' . $@19 type_declaration_no_options '>' $@20

    $default  reduce using rule 426 ($@19)

    $@19  go to state 1176


State 1052

  467 expr_mtag: expr "is" "$f" '(' . expr ')'

    "struct"                          shift, and go to state 409
    "class"                           shift, and go to state 410
    "true"                            shift, and go to state 411
    "false"                           shift, and go to state 412
    "new"                             shift, and go to state 413
    "typeinfo"                        shift, and go to state 414
    "type"                            shift, and go to state 415
    "array"                           shift, and go to state 416
    "null"                            shift, and go to state 417
    "table"                           shift, and go to state 418
    "deref"                           shift, and go to state 419
    "cast"                            shift, and go to state 420
    "upcast"                          shift, and go to state 421
    "addr"                            shift, and go to state 422
    "reinterpret"                     shift, and go to state 423
    "unsafe"                          shift, and go to state 424
    "fixed_array"                     shift, and go to state 425
    "default"                         shift, and go to state 426
    "bool"                            shift, and go to state 225
    "void"                            shift, and go to state 226
    "string"                          shift, and go to state 227
    "int"                             shift, and go to state 229
    "int2"                            shift, and go to state 230
    "int3"                            shift, and go to state 231
    "int4"                            shift, and go to state 232
    "uint"                            shift, and go to state 233
    "bitfield"                        shift, and go to state 427
    "uint2"                           shift, and go to state 235
    "uint3"                           shift, and go to state 236
    "uint4"                           shift, and go to state 237
    "float"                           shift, and go to state 238
    "float2"                          shift, and go to state 239
    "float3"                          shift, and go to state 240
    "float4"                          shift, and go to state 241
    "range"                           shift, and go to state 242
    "urange"                          shift, and go to state 243
    "range64"                         shift, and go to state 244
    "urange64"                        shift, and go to state 245
    "int64"                           shift, and go to state 247
    "uint64"                          shift, and go to state 248
    "double"                          shift, and go to state 249
    "int8"                            shift, and go to state 252
    "uint8"                           shift, and go to state 253
    "int16"                           shift, and go to state 254
    "uint16"                          shift, and go to state 255
    "tuple"                           shift, and go to state 428
    "variant"                         shift, and go to state 429
    "generator"                       shift, and go to state 430
    "++"                              shift, and go to state 431
    "--"                              shift, and go to state 432
    "::"                              shift, and go to state 55
    "$$"                              shift, and go to state 433
    "$i"                              shift, and go to state 434
    "$v"                              shift, and go to state 435
    "$b"                              shift, and go to state 436
    "$a"                              shift, and go to state 437
    "$c"                              shift, and go to state 438
    "..."                             shift, and go to state 439
    "integer constant"                shift, and go to state 440
    "long integer constant"           shift, and go to state 441
    "unsigned integer constant"       shift, and go to state 442
    "unsigned long integer constant"  shift, and go to state 443
    "unsigned int8 constant"          shift, and go to state 444
    "floating point constant"         shift, and go to state 445
    "double constant"                 shift, and go to state 446
    "name"                            shift, and go to state 56
    "start of the string"             shift, and go to state 447
    "begin of code block"             shift, and go to state 448
    '-'                               shift, and go to state 449
    '+'                               shift, and go to state 450
    '*'                               shift, and go to state 451
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 452
    '!'                               shift, and go to state 453
    '['                               shift, and go to state 454
    '('                               shift, and go to state 455
    '$'                               shift, and go to state 456
    '@'                               shift, and go to state 457

    string_builder          go to state 458
    expr_reader             go to state 459
    expr_call_pipe          go to state 460
    name_in_namespace       go to state 461
    expr_new                go to state 462
    expr_cast               go to state 463
    expr_type_decl          go to state 464
    expr_type_info          go to state 465
    block_or_lambda         go to state 466
    expr_full_block         go to state 467
    expr_numeric_const      go to state 468
    expr_named_call         go to state 469
    expr_method_call        go to state 470
    func_addr_expr          go to state 471
    expr_field              go to state 472
    expr_call               go to state 473
    expr                    go to state 1177
    expr_mtag               go to state 475
    basic_type_declaration  go to state 476
    make_decl               go to state 477
    make_struct_decl        go to state 478
    make_tuple_call         go to state 479
    make_dim_decl           go to state 480
    make_table_decl         go to state 481
    array_comprehension     go to state 482


State 1053

  434 expr: expr "as" "type" '<' . $@21 type_declaration '>' $@22

    $default  reduce using rule 432 ($@21)

    $@21  go to state 1178


State 1054

  465 expr_mtag: expr "as" "$f" '(' . expr ')'

    "struct"                          shift, and go to state 409
    "class"                           shift, and go to state 410
    "true"                            shift, and go to state 411
    "false"                           shift, and go to state 412
    "new"                             shift, and go to state 413
    "typeinfo"                        shift, and go to state 414
    "type"                            shift, and go to state 415
    "array"                           shift, and go to state 416
    "null"                            shift, and go to state 417
    "table"                           shift, and go to state 418
    "deref"                           shift, and go to state 419
    "cast"                            shift, and go to state 420
    "upcast"                          shift, and go to state 421
    "addr"                            shift, and go to state 422
    "reinterpret"                     shift, and go to state 423
    "unsafe"                          shift, and go to state 424
    "fixed_array"                     shift, and go to state 425
    "default"                         shift, and go to state 426
    "bool"                            shift, and go to state 225
    "void"                            shift, and go to state 226
    "string"                          shift, and go to state 227
    "int"                             shift, and go to state 229
    "int2"                            shift, and go to state 230
    "int3"                            shift, and go to state 231
    "int4"                            shift, and go to state 232
    "uint"                            shift, and go to state 233
    "bitfield"                        shift, and go to state 427
    "uint2"                           shift, and go to state 235
    "uint3"                           shift, and go to state 236
    "uint4"                           shift, and go to state 237
    "float"                           shift, and go to state 238
    "float2"                          shift, and go to state 239
    "float3"                          shift, and go to state 240
    "float4"                          shift, and go to state 241
    "range"                           shift, and go to state 242
    "urange"                          shift, and go to state 243
    "range64"                         shift, and go to state 244
    "urange64"                        shift, and go to state 245
    "int64"                           shift, and go to state 247
    "uint64"                          shift, and go to state 248
    "double"                          shift, and go to state 249
    "int8"                            shift, and go to state 252
    "uint8"                           shift, and go to state 253
    "int16"                           shift, and go to state 254
    "uint16"                          shift, and go to state 255
    "tuple"                           shift, and go to state 428
    "variant"                         shift, and go to state 429
    "generator"                       shift, and go to state 430
    "++"                              shift, and go to state 431
    "--"                              shift, and go to state 432
    "::"                              shift, and go to state 55
    "$$"                              shift, and go to state 433
    "$i"                              shift, and go to state 434
    "$v"                              shift, and go to state 435
    "$b"                              shift, and go to state 436
    "$a"                              shift, and go to state 437
    "$c"                              shift, and go to state 438
    "..."                             shift, and go to state 439
    "integer constant"                shift, and go to state 440
    "long integer constant"           shift, and go to state 441
    "unsigned integer constant"       shift, and go to state 442
    "unsigned long integer constant"  shift, and go to state 443
    "unsigned int8 constant"          shift, and go to state 444
    "floating point constant"         shift, and go to state 445
    "double constant"                 shift, and go to state 446
    "name"                            shift, and go to state 56
    "start of the string"             shift, and go to state 447
    "begin of code block"             shift, and go to state 448
    '-'                               shift, and go to state 449
    '+'                               shift, and go to state 450
    '*'                               shift, and go to state 451
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 452
    '!'                               shift, and go to state 453
    '['                               shift, and go to state 454
    '('                               shift, and go to state 455
    '$'                               shift, and go to state 456
    '@'                               shift, and go to state 457

    string_builder          go to state 458
    expr_reader             go to state 459
    expr_call_pipe          go to state 460
    name_in_namespace       go to state 461
    expr_new                go to state 462
    expr_cast               go to state 463
    expr_type_decl          go to state 464
    expr_type_info          go to state 465
    block_or_lambda         go to state 466
    expr_full_block         go to state 467
    expr_numeric_const      go to state 468
    expr_named_call         go to state 469
    expr_method_call        go to state 470
    func_addr_expr          go to state 471
    expr_field              go to state 472
    expr_call               go to state 473
    expr                    go to state 1179
    expr_mtag               go to state 475
    basic_type_declaration  go to state 476
    make_decl               go to state 477
    make_struct_decl        go to state 478
    make_tuple_call         go to state 479
    make_dim_decl           go to state 480
    make_table_decl         go to state 481
    array_comprehension     go to state 482


State 1055

  342 expr_method_call: expr "->" "name" '(' . ')'
  343                 | expr "->" "name" '(' . expr_list ')'

    "struct"                          shift, and go to state 409
    "class"                           shift, and go to state 410
    "true"                            shift, and go to state 411
    "false"                           shift, and go to state 412
    "new"                             shift, and go to state 413
    "typeinfo"                        shift, and go to state 414
    "type"                            shift, and go to state 415
    "array"                           shift, and go to state 416
    "null"                            shift, and go to state 417
    "table"                           shift, and go to state 418
    "deref"                           shift, and go to state 419
    "cast"                            shift, and go to state 420
    "upcast"                          shift, and go to state 421
    "addr"                            shift, and go to state 422
    "reinterpret"                     shift, and go to state 423
    "unsafe"                          shift, and go to state 424
    "fixed_array"                     shift, and go to state 425
    "default"                         shift, and go to state 426
    "bool"                            shift, and go to state 225
    "void"                            shift, and go to state 226
    "string"                          shift, and go to state 227
    "int"                             shift, and go to state 229
    "int2"                            shift, and go to state 230
    "int3"                            shift, and go to state 231
    "int4"                            shift, and go to state 232
    "uint"                            shift, and go to state 233
    "bitfield"                        shift, and go to state 427
    "uint2"                           shift, and go to state 235
    "uint3"                           shift, and go to state 236
    "uint4"                           shift, and go to state 237
    "float"                           shift, and go to state 238
    "float2"                          shift, and go to state 239
    "float3"                          shift, and go to state 240
    "float4"                          shift, and go to state 241
    "range"                           shift, and go to state 242
    "urange"                          shift, and go to state 243
    "range64"                         shift, and go to state 244
    "urange64"                        shift, and go to state 245
    "int64"                           shift, and go to state 247
    "uint64"                          shift, and go to state 248
    "double"                          shift, and go to state 249
    "int8"                            shift, and go to state 252
    "uint8"                           shift, and go to state 253
    "int16"                           shift, and go to state 254
    "uint16"                          shift, and go to state 255
    "tuple"                           shift, and go to state 428
    "variant"                         shift, and go to state 429
    "generator"                       shift, and go to state 430
    "++"                              shift, and go to state 431
    "--"                              shift, and go to state 432
    "::"                              shift, and go to state 55
    "$$"                              shift, and go to state 433
    "$i"                              shift, and go to state 434
    "$v"                              shift, and go to state 435
    "$b"                              shift, and go to state 436
    "$a"                              shift, and go to state 437
    "$c"                              shift, and go to state 438
    "..."                             shift, and go to state 439
    "integer constant"                shift, and go to state 440
    "long integer constant"           shift, and go to state 441
    "unsigned integer constant"       shift, and go to state 442
    "unsigned long integer constant"  shift, and go to state 443
    "unsigned int8 constant"          shift, and go to state 444
    "floating point constant"         shift, and go to state 445
    "double constant"                 shift, and go to state 446
    "name"                            shift, and go to state 56
    "start of the string"             shift, and go to state 447
    "begin of code block"             shift, and go to state 448
    '-'                               shift, and go to state 449
    '+'                               shift, and go to state 450
    '*'                               shift, and go to state 451
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 452
    '!'                               shift, and go to state 453
    '['                               shift, and go to state 454
    '('                               shift, and go to state 455
    ')'                               shift, and go to state 1180
    '$'                               shift, and go to state 456
    '@'                               shift, and go to state 457

    string_builder          go to state 458
    expr_reader             go to state 459
    expr_call_pipe          go to state 460
    name_in_namespace       go to state 461
    expr_new                go to state 462
    expr_cast               go to state 463
    expr_type_decl          go to state 464
    expr_type_info          go to state 465
    expr_list               go to state 1181
    block_or_lambda         go to state 466
    expr_full_block         go to state 467
    expr_numeric_const      go to state 468
    expr_named_call         go to state 469
    expr_method_call        go to state 470
    func_addr_expr          go to state 471
    expr_field              go to state 472
    expr_call               go to state 473
    expr                    go to state 639
    expr_mtag               go to state 475
    basic_type_declaration  go to state 476
    make_decl               go to state 477
    make_struct_decl        go to state 478
    make_tuple_call         go to state 479
    make_dim_decl           go to state 480
    make_table_decl         go to state 481
    array_comprehension     go to state 482


State 1056

  462 expr_mtag: expr "?." "$f" '(' . expr ')'

    "struct"                          shift, and go to state 409
    "class"                           shift, and go to state 410
    "true"                            shift, and go to state 411
    "false"                           shift, and go to state 412
    "new"                             shift, and go to state 413
    "typeinfo"                        shift, and go to state 414
    "type"                            shift, and go to state 415
    "array"                           shift, and go to state 416
    "null"                            shift, and go to state 417
    "table"                           shift, and go to state 418
    "deref"                           shift, and go to state 419
    "cast"                            shift, and go to state 420
    "upcast"                          shift, and go to state 421
    "addr"                            shift, and go to state 422
    "reinterpret"                     shift, and go to state 423
    "unsafe"                          shift, and go to state 424
    "fixed_array"                     shift, and go to state 425
    "default"                         shift, and go to state 426
    "bool"                            shift, and go to state 225
    "void"                            shift, and go to state 226
    "string"                          shift, and go to state 227
    "int"                             shift, and go to state 229
    "int2"                            shift, and go to state 230
    "int3"                            shift, and go to state 231
    "int4"                            shift, and go to state 232
    "uint"                            shift, and go to state 233
    "bitfield"                        shift, and go to state 427
    "uint2"                           shift, and go to state 235
    "uint3"                           shift, and go to state 236
    "uint4"                           shift, and go to state 237
    "float"                           shift, and go to state 238
    "float2"                          shift, and go to state 239
    "float3"                          shift, and go to state 240
    "float4"                          shift, and go to state 241
    "range"                           shift, and go to state 242
    "urange"                          shift, and go to state 243
    "range64"                         shift, and go to state 244
    "urange64"                        shift, and go to state 245
    "int64"                           shift, and go to state 247
    "uint64"                          shift, and go to state 248
    "double"                          shift, and go to state 249
    "int8"                            shift, and go to state 252
    "uint8"                           shift, and go to state 253
    "int16"                           shift, and go to state 254
    "uint16"                          shift, and go to state 255
    "tuple"                           shift, and go to state 428
    "variant"                         shift, and go to state 429
    "generator"                       shift, and go to state 430
    "++"                              shift, and go to state 431
    "--"                              shift, and go to state 432
    "::"                              shift, and go to state 55
    "$$"                              shift, and go to state 433
    "$i"                              shift, and go to state 434
    "$v"                              shift, and go to state 435
    "$b"                              shift, and go to state 436
    "$a"                              shift, and go to state 437
    "$c"                              shift, and go to state 438
    "..."                             shift, and go to state 439
    "integer constant"                shift, and go to state 440
    "long integer constant"           shift, and go to state 441
    "unsigned integer constant"       shift, and go to state 442
    "unsigned long integer constant"  shift, and go to state 443
    "unsigned int8 constant"          shift, and go to state 444
    "floating point constant"         shift, and go to state 445
    "double constant"                 shift, and go to state 446
    "name"                            shift, and go to state 56
    "start of the string"             shift, and go to state 447
    "begin of code block"             shift, and go to state 448
    '-'                               shift, and go to state 449
    '+'                               shift, and go to state 450
    '*'                               shift, and go to state 451
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 452
    '!'                               shift, and go to state 453
    '['                               shift, and go to state 454
    '('                               shift, and go to state 455
    '$'                               shift, and go to state 456
    '@'                               shift, and go to state 457

    string_builder          go to state 458
    expr_reader             go to state 459
    expr_call_pipe          go to state 460
    name_in_namespace       go to state 461
    expr_new                go to state 462
    expr_cast               go to state 463
    expr_type_decl          go to state 464
    expr_type_info          go to state 465
    block_or_lambda         go to state 466
    expr_full_block         go to state 467
    expr_numeric_const      go to state 468
    expr_named_call         go to state 469
    expr_method_call        go to state 470
    func_addr_expr          go to state 471
    expr_field              go to state 472
    expr_call               go to state 473
    expr                    go to state 1182
    expr_mtag               go to state 475
    basic_type_declaration  go to state 476
    make_decl               go to state 477
    make_struct_decl        go to state 478
    make_tuple_call         go to state 479
    make_dim_decl           go to state 480
    make_table_decl         go to state 481
    array_comprehension     go to state 482


State 1057

  412 expr: expr "?[" expr ']' .

    $default  reduce using rule 412 (expr)


State 1058

  439 expr: expr '?' "as" "type" . '<' $@23 type_declaration '>' $@24

    '<'  shift, and go to state 1183


State 1059

  466 expr_mtag: expr '?' "as" "$f" . '(' expr ')'

    '('  shift, and go to state 1184


State 1060

  436 expr: expr '?' "as" "name" .

    $default  reduce using rule 436 (expr)


State 1061

  440 expr: expr '?' "as" basic_type_declaration .

    $default  reduce using rule 440 (expr)


State 1062

  425 expr: expr '?' expr ':' . expr

    "struct"                          shift, and go to state 409
    "class"                           shift, and go to state 410
    "true"                            shift, and go to state 411
    "false"                           shift, and go to state 412
    "new"                             shift, and go to state 413
    "typeinfo"                        shift, and go to state 414
    "type"                            shift, and go to state 415
    "array"                           shift, and go to state 416
    "null"                            shift, and go to state 417
    "table"                           shift, and go to state 418
    "deref"                           shift, and go to state 419
    "cast"                            shift, and go to state 420
    "upcast"                          shift, and go to state 421
    "addr"                            shift, and go to state 422
    "reinterpret"                     shift, and go to state 423
    "unsafe"                          shift, and go to state 424
    "fixed_array"                     shift, and go to state 425
    "default"                         shift, and go to state 426
    "bool"                            shift, and go to state 225
    "void"                            shift, and go to state 226
    "string"                          shift, and go to state 227
    "int"                             shift, and go to state 229
    "int2"                            shift, and go to state 230
    "int3"                            shift, and go to state 231
    "int4"                            shift, and go to state 232
    "uint"                            shift, and go to state 233
    "bitfield"                        shift, and go to state 427
    "uint2"                           shift, and go to state 235
    "uint3"                           shift, and go to state 236
    "uint4"                           shift, and go to state 237
    "float"                           shift, and go to state 238
    "float2"                          shift, and go to state 239
    "float3"                          shift, and go to state 240
    "float4"                          shift, and go to state 241
    "range"                           shift, and go to state 242
    "urange"                          shift, and go to state 243
    "range64"                         shift, and go to state 244
    "urange64"                        shift, and go to state 245
    "int64"                           shift, and go to state 247
    "uint64"                          shift, and go to state 248
    "double"                          shift, and go to state 249
    "int8"                            shift, and go to state 252
    "uint8"                           shift, and go to state 253
    "int16"                           shift, and go to state 254
    "uint16"                          shift, and go to state 255
    "tuple"                           shift, and go to state 428
    "variant"                         shift, and go to state 429
    "generator"                       shift, and go to state 430
    "++"                              shift, and go to state 431
    "--"                              shift, and go to state 432
    "::"                              shift, and go to state 55
    "$$"                              shift, and go to state 433
    "$i"                              shift, and go to state 434
    "$v"                              shift, and go to state 435
    "$b"                              shift, and go to state 436
    "$a"                              shift, and go to state 437
    "$c"                              shift, and go to state 438
    "..."                             shift, and go to state 439
    "integer constant"                shift, and go to state 440
    "long integer constant"           shift, and go to state 441
    "unsigned integer constant"       shift, and go to state 442
    "unsigned long integer constant"  shift, and go to state 443
    "unsigned int8 constant"          shift, and go to state 444
    "floating point constant"         shift, and go to state 445
    "double constant"                 shift, and go to state 446
    "name"                            shift, and go to state 56
    "start of the string"             shift, and go to state 447
    "begin of code block"             shift, and go to state 448
    '-'                               shift, and go to state 449
    '+'                               shift, and go to state 450
    '*'                               shift, and go to state 451
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 452
    '!'                               shift, and go to state 453
    '['                               shift, and go to state 454
    '('                               shift, and go to state 455
    '$'                               shift, and go to state 456
    '@'                               shift, and go to state 457

    string_builder          go to state 458
    expr_reader             go to state 459
    expr_call_pipe          go to state 460
    name_in_namespace       go to state 461
    expr_new                go to state 462
    expr_cast               go to state 463
    expr_type_decl          go to state 464
    expr_type_info          go to state 465
    block_or_lambda         go to state 466
    expr_full_block         go to state 467
    expr_numeric_const      go to state 468
    expr_named_call         go to state 469
    expr_method_call        go to state 470
    func_addr_expr          go to state 471
    expr_field              go to state 472
    expr_call               go to state 473
    expr                    go to state 1185
    expr_mtag               go to state 475
    basic_type_declaration  go to state 476
    make_decl               go to state 477
    make_struct_decl        go to state 478
    make_tuple_call         go to state 479
    make_dim_decl           go to state 480
    make_table_decl         go to state 481
    array_comprehension     go to state 482


State 1063

  464 expr_mtag: expr '.' "?." "$f" . '(' expr ')'

    '('  shift, and go to state 1186


State 1064

  415 expr: expr '.' "?." "name" .

    $default  reduce using rule 415 (expr)


State 1065

  342 expr_method_call: expr . "->" "name" '(' ')'
  343                 | expr . "->" "name" '(' expr_list ')'
  353 expr_field: expr . '.' "name"
  354           | expr . '.' '.' "name"
  355           | expr . '.' "name" '(' ')'
  356           | expr . '.' "name" '(' expr_list ')'
  357           | expr . '.' basic_type_declaration '(' ')'
  358           | expr . '.' basic_type_declaration '(' expr_list ')'
  361           | expr . '.' $@17 error $@18
  383 expr: expr . "<<" expr
  384     | expr . ">>" expr
  385     | expr . "<<<" expr
  386     | expr . ">>>" expr
  387     | expr . '+' expr
  388     | expr . '-' expr
  389     | expr . '*' expr
  390     | expr . '/' expr
  391     | expr . '%' expr
  392     | expr . '<' expr
  393     | expr . '>' expr
  394     | expr . "==" expr
  395     | expr . "!=" expr
  396     | expr . "<=" expr
  397     | expr . ">=" expr
  398     | expr . '&' expr
  399     | expr . '|' expr
  400     | expr . '^' expr
  401     | expr . "&&" expr
  402     | expr . "||" expr
  403     | expr . "^^" expr
  404     | expr . ".." expr
  407     | expr . "++"
  408     | expr . "--"
  410     | expr . '[' expr ']'
  411     | expr . '.' '[' expr ']'
  412     | expr . "?[" expr ']'
  413     | expr . '.' "?[" expr ']'
  413     | expr '.' "?[" expr . ']'
  414     | expr . "?." "name"
  415     | expr . '.' "?." "name"
  424     | expr . "??" expr
  425     | expr . '?' expr ':' expr
  428     | expr . "is" "type" '<' $@19 type_declaration_no_options '>' $@20
  429     | expr . "is" basic_type_declaration
  430     | expr . "is" "name"
  431     | expr . "as" "name"
  434     | expr . "as" "type" '<' $@21 type_declaration '>' $@22
  435     | expr . "as" basic_type_declaration
  436     | expr . '?' "as" "name"
  439     | expr . '?' "as" "type" '<' $@23 type_declaration '>' $@24
  440     | expr . '?' "as" basic_type_declaration
  448     | expr . "<|" expr
  449     | expr . "|>" expr
  450     | expr . "|>" basic_type_declaration
  461 expr_mtag: expr . '.' "$f" '(' expr ')'
  462          | expr . "?." "$f" '(' expr ')'
  463          | expr . '.' '.' "$f" '(' expr ')'
  464          | expr . '.' "?." "$f" '(' expr ')'
  465          | expr . "as" "$f" '(' expr ')'
  466          | expr . '?' "as" "$f" '(' expr ')'
  467          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 648
    "as"   shift, and go to state 649
    "<<"   shift, and go to state 650
    ">>"   shift, and go to state 651
    "++"   shift, and go to state 652
    "--"   shift, and go to state 653
    "<="   shift, and go to state 654
    ">="   shift, and go to state 655
    "=="   shift, and go to state 656
    "!="   shift, and go to state 657
    "->"   shift, and go to state 658
    "??"   shift, and go to state 659
    "?."   shift, and go to state 660
    "?["   shift, and go to state 661
    "<|"   shift, and go to state 662
    "|>"   shift, and go to state 663
    "<<<"  shift, and go to state 664
    ">>>"  shift, and go to state 665
    "&&"   shift, and go to state 666
    "||"   shift, and go to state 667
    "^^"   shift, and go to state 668
    ".."   shift, and go to state 669
    '?'    shift, and go to state 670
    '|'    shift, and go to state 671
    '^'    shift, and go to state 672
    '&'    shift, and go to state 673
    '<'    shift, and go to state 674
    '>'    shift, and go to state 675
    '-'    shift, and go to state 676
    '+'    shift, and go to state 677
    '*'    shift, and go to state 678
    '/'    shift, and go to state 679
    '%'    shift, and go to state 680
    '.'    shift, and go to state 681
    '['    shift, and go to state 682
    ']'    shift, and go to state 1187


State 1066

  461 expr_mtag: expr '.' "$f" '(' . expr ')'

    "struct"                          shift, and go to state 409
    "class"                           shift, and go to state 410
    "true"                            shift, and go to state 411
    "false"                           shift, and go to state 412
    "new"                             shift, and go to state 413
    "typeinfo"                        shift, and go to state 414
    "type"                            shift, and go to state 415
    "array"                           shift, and go to state 416
    "null"                            shift, and go to state 417
    "table"                           shift, and go to state 418
    "deref"                           shift, and go to state 419
    "cast"                            shift, and go to state 420
    "upcast"                          shift, and go to state 421
    "addr"                            shift, and go to state 422
    "reinterpret"                     shift, and go to state 423
    "unsafe"                          shift, and go to state 424
    "fixed_array"                     shift, and go to state 425
    "default"                         shift, and go to state 426
    "bool"                            shift, and go to state 225
    "void"                            shift, and go to state 226
    "string"                          shift, and go to state 227
    "int"                             shift, and go to state 229
    "int2"                            shift, and go to state 230
    "int3"                            shift, and go to state 231
    "int4"                            shift, and go to state 232
    "uint"                            shift, and go to state 233
    "bitfield"                        shift, and go to state 427
    "uint2"                           shift, and go to state 235
    "uint3"                           shift, and go to state 236
    "uint4"                           shift, and go to state 237
    "float"                           shift, and go to state 238
    "float2"                          shift, and go to state 239
    "float3"                          shift, and go to state 240
    "float4"                          shift, and go to state 241
    "range"                           shift, and go to state 242
    "urange"                          shift, and go to state 243
    "range64"                         shift, and go to state 244
    "urange64"                        shift, and go to state 245
    "int64"                           shift, and go to state 247
    "uint64"                          shift, and go to state 248
    "double"                          shift, and go to state 249
    "int8"                            shift, and go to state 252
    "uint8"                           shift, and go to state 253
    "int16"                           shift, and go to state 254
    "uint16"                          shift, and go to state 255
    "tuple"                           shift, and go to state 428
    "variant"                         shift, and go to state 429
    "generator"                       shift, and go to state 430
    "++"                              shift, and go to state 431
    "--"                              shift, and go to state 432
    "::"                              shift, and go to state 55
    "$$"                              shift, and go to state 433
    "$i"                              shift, and go to state 434
    "$v"                              shift, and go to state 435
    "$b"                              shift, and go to state 436
    "$a"                              shift, and go to state 437
    "$c"                              shift, and go to state 438
    "..."                             shift, and go to state 439
    "integer constant"                shift, and go to state 440
    "long integer constant"           shift, and go to state 441
    "unsigned integer constant"       shift, and go to state 442
    "unsigned long integer constant"  shift, and go to state 443
    "unsigned int8 constant"          shift, and go to state 444
    "floating point constant"         shift, and go to state 445
    "double constant"                 shift, and go to state 446
    "name"                            shift, and go to state 56
    "start of the string"             shift, and go to state 447
    "begin of code block"             shift, and go to state 448
    '-'                               shift, and go to state 449
    '+'                               shift, and go to state 450
    '*'                               shift, and go to state 451
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 452
    '!'                               shift, and go to state 453
    '['                               shift, and go to state 454
    '('                               shift, and go to state 455
    '$'                               shift, and go to state 456
    '@'                               shift, and go to state 457

    string_builder          go to state 458
    expr_reader             go to state 459
    expr_call_pipe          go to state 460
    name_in_namespace       go to state 461
    expr_new                go to state 462
    expr_cast               go to state 463
    expr_type_decl          go to state 464
    expr_type_info          go to state 465
    block_or_lambda         go to state 466
    expr_full_block         go to state 467
    expr_numeric_const      go to state 468
    expr_named_call         go to state 469
    expr_method_call        go to state 470
    func_addr_expr          go to state 471
    expr_field              go to state 472
    expr_call               go to state 473
    expr                    go to state 1188
    expr_mtag               go to state 475
    basic_type_declaration  go to state 476
    make_decl               go to state 477
    make_struct_decl        go to state 478
    make_tuple_call         go to state 479
    make_dim_decl           go to state 480
    make_table_decl         go to state 481
    array_comprehension     go to state 482


State 1067

  355 expr_field: expr '.' "name" '(' . ')'
  356           | expr '.' "name" '(' . expr_list ')'

    "struct"                          shift, and go to state 409
    "class"                           shift, and go to state 410
    "true"                            shift, and go to state 411
    "false"                           shift, and go to state 412
    "new"                             shift, and go to state 413
    "typeinfo"                        shift, and go to state 414
    "type"                            shift, and go to state 415
    "array"                           shift, and go to state 416
    "null"                            shift, and go to state 417
    "table"                           shift, and go to state 418
    "deref"                           shift, and go to state 419
    "cast"                            shift, and go to state 420
    "upcast"                          shift, and go to state 421
    "addr"                            shift, and go to state 422
    "reinterpret"                     shift, and go to state 423
    "unsafe"                          shift, and go to state 424
    "fixed_array"                     shift, and go to state 425
    "default"                         shift, and go to state 426
    "bool"                            shift, and go to state 225
    "void"                            shift, and go to state 226
    "string"                          shift, and go to state 227
    "int"                             shift, and go to state 229
    "int2"                            shift, and go to state 230
    "int3"                            shift, and go to state 231
    "int4"                            shift, and go to state 232
    "uint"                            shift, and go to state 233
    "bitfield"                        shift, and go to state 427
    "uint2"                           shift, and go to state 235
    "uint3"                           shift, and go to state 236
    "uint4"                           shift, and go to state 237
    "float"                           shift, and go to state 238
    "float2"                          shift, and go to state 239
    "float3"                          shift, and go to state 240
    "float4"                          shift, and go to state 241
    "range"                           shift, and go to state 242
    "urange"                          shift, and go to state 243
    "range64"                         shift, and go to state 244
    "urange64"                        shift, and go to state 245
    "int64"                           shift, and go to state 247
    "uint64"                          shift, and go to state 248
    "double"                          shift, and go to state 249
    "int8"                            shift, and go to state 252
    "uint8"                           shift, and go to state 253
    "int16"                           shift, and go to state 254
    "uint16"                          shift, and go to state 255
    "tuple"                           shift, and go to state 428
    "variant"                         shift, and go to state 429
    "generator"                       shift, and go to state 430
    "++"                              shift, and go to state 431
    "--"                              shift, and go to state 432
    "::"                              shift, and go to state 55
    "$$"                              shift, and go to state 433
    "$i"                              shift, and go to state 434
    "$v"                              shift, and go to state 435
    "$b"                              shift, and go to state 436
    "$a"                              shift, and go to state 437
    "$c"                              shift, and go to state 438
    "..."                             shift, and go to state 439
    "integer constant"                shift, and go to state 440
    "long integer constant"           shift, and go to state 441
    "unsigned integer constant"       shift, and go to state 442
    "unsigned long integer constant"  shift, and go to state 443
    "unsigned int8 constant"          shift, and go to state 444
    "floating point constant"         shift, and go to state 445
    "double constant"                 shift, and go to state 446
    "name"                            shift, and go to state 56
    "start of the string"             shift, and go to state 447
    "begin of code block"             shift, and go to state 448
    '-'                               shift, and go to state 449
    '+'                               shift, and go to state 450
    '*'                               shift, and go to state 451
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 452
    '!'                               shift, and go to state 453
    '['                               shift, and go to state 454
    '('                               shift, and go to state 455
    ')'                               shift, and go to state 1189
    '$'                               shift, and go to state 456
    '@'                               shift, and go to state 457

    string_builder          go to state 458
    expr_reader             go to state 459
    expr_call_pipe          go to state 460
    name_in_namespace       go to state 461
    expr_new                go to state 462
    expr_cast               go to state 463
    expr_type_decl          go to state 464
    expr_type_info          go to state 465
    expr_list               go to state 1190
    block_or_lambda         go to state 466
    expr_full_block         go to state 467
    expr_numeric_const      go to state 468
    expr_named_call         go to state 469
    expr_method_call        go to state 470
    func_addr_expr          go to state 471
    expr_field              go to state 472
    expr_call               go to state 473
    expr                    go to state 639
    expr_mtag               go to state 475
    basic_type_declaration  go to state 476
    make_decl               go to state 477
    make_struct_decl        go to state 478
    make_tuple_call         go to state 479
    make_dim_decl           go to state 480
    make_table_decl         go to state 481
    array_comprehension     go to state 482


State 1068

  463 expr_mtag: expr '.' '.' "$f" . '(' expr ')'

    '('  shift, and go to state 1191


State 1069

  354 expr_field: expr '.' '.' "name" .

    $default  reduce using rule 354 (expr_field)


State 1070

  342 expr_method_call: expr . "->" "name" '(' ')'
  343                 | expr . "->" "name" '(' expr_list ')'
  353 expr_field: expr . '.' "name"
  354           | expr . '.' '.' "name"
  355           | expr . '.' "name" '(' ')'
  356           | expr . '.' "name" '(' expr_list ')'
  357           | expr . '.' basic_type_declaration '(' ')'
  358           | expr . '.' basic_type_declaration '(' expr_list ')'
  361           | expr . '.' $@17 error $@18
  383 expr: expr . "<<" expr
  384     | expr . ">>" expr
  385     | expr . "<<<" expr
  386     | expr . ">>>" expr
  387     | expr . '+' expr
  388     | expr . '-' expr
  389     | expr . '*' expr
  390     | expr . '/' expr
  391     | expr . '%' expr
  392     | expr . '<' expr
  393     | expr . '>' expr
  394     | expr . "==" expr
  395     | expr . "!=" expr
  396     | expr . "<=" expr
  397     | expr . ">=" expr
  398     | expr . '&' expr
  399     | expr . '|' expr
  400     | expr . '^' expr
  401     | expr . "&&" expr
  402     | expr . "||" expr
  403     | expr . "^^" expr
  404     | expr . ".." expr
  407     | expr . "++"
  408     | expr . "--"
  410     | expr . '[' expr ']'
  411     | expr . '.' '[' expr ']'
  411     | expr '.' '[' expr . ']'
  412     | expr . "?[" expr ']'
  413     | expr . '.' "?[" expr ']'
  414     | expr . "?." "name"
  415     | expr . '.' "?." "name"
  424     | expr . "??" expr
  425     | expr . '?' expr ':' expr
  428     | expr . "is" "type" '<' $@19 type_declaration_no_options '>' $@20
  429     | expr . "is" basic_type_declaration
  430     | expr . "is" "name"
  431     | expr . "as" "name"
  434     | expr . "as" "type" '<' $@21 type_declaration '>' $@22
  435     | expr . "as" basic_type_declaration
  436     | expr . '?' "as" "name"
  439     | expr . '?' "as" "type" '<' $@23 type_declaration '>' $@24
  440     | expr . '?' "as" basic_type_declaration
  448     | expr . "<|" expr
  449     | expr . "|>" expr
  450     | expr . "|>" basic_type_declaration
  461 expr_mtag: expr . '.' "$f" '(' expr ')'
  462          | expr . "?." "$f" '(' expr ')'
  463          | expr . '.' '.' "$f" '(' expr ')'
  464          | expr . '.' "?." "$f" '(' expr ')'
  465          | expr . "as" "$f" '(' expr ')'
  466          | expr . '?' "as" "$f" '(' expr ')'
  467          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 648
    "as"   shift, and go to state 649
    "<<"   shift, and go to state 650
    ">>"   shift, and go to state 651
    "++"   shift, and go to state 652
    "--"   shift, and go to state 653
    "<="   shift, and go to state 654
    ">="   shift, and go to state 655
    "=="   shift, and go to state 656
    "!="   shift, and go to state 657
    "->"   shift, and go to state 658
    "??"   shift, and go to state 659
    "?."   shift, and go to state 660
    "?["   shift, and go to state 661
    "<|"   shift, and go to state 662
    "|>"   shift, and go to state 663
    "<<<"  shift, and go to state 664
    ">>>"  shift, and go to state 665
    "&&"   shift, and go to state 666
    "||"   shift, and go to state 667
    "^^"   shift, and go to state 668
    ".."   shift, and go to state 669
    '?'    shift, and go to state 670
    '|'    shift, and go to state 671
    '^'    shift, and go to state 672
    '&'    shift, and go to state 673
    '<'    shift, and go to state 674
    '>'    shift, and go to state 675
    '-'    shift, and go to state 676
    '+'    shift, and go to state 677
    '*'    shift, and go to state 678
    '/'    shift, and go to state 679
    '%'    shift, and go to state 680
    '.'    shift, and go to state 681
    '['    shift, and go to state 682
    ']'    shift, and go to state 1192


State 1071

  361 expr_field: expr '.' $@17 error . $@18

    $default  reduce using rule 360 ($@18)

    $@18  go to state 1193


State 1072

  357 expr_field: expr '.' basic_type_declaration '(' . ')'
  358           | expr '.' basic_type_declaration '(' . expr_list ')'

    "struct"                          shift, and go to state 409
    "class"                           shift, and go to state 410
    "true"                            shift, and go to state 411
    "false"                           shift, and go to state 412
    "new"                             shift, and go to state 413
    "typeinfo"                        shift, and go to state 414
    "type"                            shift, and go to state 415
    "array"                           shift, and go to state 416
    "null"                            shift, and go to state 417
    "table"                           shift, and go to state 418
    "deref"                           shift, and go to state 419
    "cast"                            shift, and go to state 420
    "upcast"                          shift, and go to state 421
    "addr"                            shift, and go to state 422
    "reinterpret"                     shift, and go to state 423
    "unsafe"                          shift, and go to state 424
    "fixed_array"                     shift, and go to state 425
    "default"                         shift, and go to state 426
    "bool"                            shift, and go to state 225
    "void"                            shift, and go to state 226
    "string"                          shift, and go to state 227
    "int"                             shift, and go to state 229
    "int2"                            shift, and go to state 230
    "int3"                            shift, and go to state 231
    "int4"                            shift, and go to state 232
    "uint"                            shift, and go to state 233
    "bitfield"                        shift, and go to state 427
    "uint2"                           shift, and go to state 235
    "uint3"                           shift, and go to state 236
    "uint4"                           shift, and go to state 237
    "float"                           shift, and go to state 238
    "float2"                          shift, and go to state 239
    "float3"                          shift, and go to state 240
    "float4"                          shift, and go to state 241
    "range"                           shift, and go to state 242
    "urange"                          shift, and go to state 243
    "range64"                         shift, and go to state 244
    "urange64"                        shift, and go to state 245
    "int64"                           shift, and go to state 247
    "uint64"                          shift, and go to state 248
    "double"                          shift, and go to state 249
    "int8"                            shift, and go to state 252
    "uint8"                           shift, and go to state 253
    "int16"                           shift, and go to state 254
    "uint16"                          shift, and go to state 255
    "tuple"                           shift, and go to state 428
    "variant"                         shift, and go to state 429
    "generator"                       shift, and go to state 430
    "++"                              shift, and go to state 431
    "--"                              shift, and go to state 432
    "::"                              shift, and go to state 55
    "$$"                              shift, and go to state 433
    "$i"                              shift, and go to state 434
    "$v"                              shift, and go to state 435
    "$b"                              shift, and go to state 436
    "$a"                              shift, and go to state 437
    "$c"                              shift, and go to state 438
    "..."                             shift, and go to state 439
    "integer constant"                shift, and go to state 440
    "long integer constant"           shift, and go to state 441
    "unsigned integer constant"       shift, and go to state 442
    "unsigned long integer constant"  shift, and go to state 443
    "unsigned int8 constant"          shift, and go to state 444
    "floating point constant"         shift, and go to state 445
    "double constant"                 shift, and go to state 446
    "name"                            shift, and go to state 56
    "start of the string"             shift, and go to state 447
    "begin of code block"             shift, and go to state 448
    '-'                               shift, and go to state 449
    '+'                               shift, and go to state 450
    '*'                               shift, and go to state 451
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 452
    '!'                               shift, and go to state 453
    '['                               shift, and go to state 454
    '('                               shift, and go to state 455
    ')'                               shift, and go to state 1194
    '$'                               shift, and go to state 456
    '@'                               shift, and go to state 457

    string_builder          go to state 458
    expr_reader             go to state 459
    expr_call_pipe          go to state 460
    name_in_namespace       go to state 461
    expr_new                go to state 462
    expr_cast               go to state 463
    expr_type_decl          go to state 464
    expr_type_info          go to state 465
    expr_list               go to state 1195
    block_or_lambda         go to state 466
    expr_full_block         go to state 467
    expr_numeric_const      go to state 468
    expr_named_call         go to state 469
    expr_method_call        go to state 470
    func_addr_expr          go to state 471
    expr_field              go to state 472
    expr_call               go to state 473
    expr                    go to state 639
    expr_mtag               go to state 475
    basic_type_declaration  go to state 476
    make_decl               go to state 477
    make_struct_decl        go to state 478
    make_tuple_call         go to state 479
    make_dim_decl           go to state 480
    make_table_decl         go to state 481
    array_comprehension     go to state 482


State 1073

  410 expr: expr '[' expr ']' .

    $default  reduce using rule 410 (expr)


State 1074

  295 expr_list: expr_list ',' . expr

    "struct"                          shift, and go to state 409
    "class"                           shift, and go to state 410
    "true"                            shift, and go to state 411
    "false"                           shift, and go to state 412
    "new"                             shift, and go to state 413
    "typeinfo"                        shift, and go to state 414
    "type"                            shift, and go to state 415
    "array"                           shift, and go to state 416
    "null"                            shift, and go to state 417
    "table"                           shift, and go to state 418
    "deref"                           shift, and go to state 419
    "cast"                            shift, and go to state 420
    "upcast"                          shift, and go to state 421
    "addr"                            shift, and go to state 422
    "reinterpret"                     shift, and go to state 423
    "unsafe"                          shift, and go to state 424
    "fixed_array"                     shift, and go to state 425
    "default"                         shift, and go to state 426
    "bool"                            shift, and go to state 225
    "void"                            shift, and go to state 226
    "string"                          shift, and go to state 227
    "int"                             shift, and go to state 229
    "int2"                            shift, and go to state 230
    "int3"                            shift, and go to state 231
    "int4"                            shift, and go to state 232
    "uint"                            shift, and go to state 233
    "bitfield"                        shift, and go to state 427
    "uint2"                           shift, and go to state 235
    "uint3"                           shift, and go to state 236
    "uint4"                           shift, and go to state 237
    "float"                           shift, and go to state 238
    "float2"                          shift, and go to state 239
    "float3"                          shift, and go to state 240
    "float4"                          shift, and go to state 241
    "range"                           shift, and go to state 242
    "urange"                          shift, and go to state 243
    "range64"                         shift, and go to state 244
    "urange64"                        shift, and go to state 245
    "int64"                           shift, and go to state 247
    "uint64"                          shift, and go to state 248
    "double"                          shift, and go to state 249
    "int8"                            shift, and go to state 252
    "uint8"                           shift, and go to state 253
    "int16"                           shift, and go to state 254
    "uint16"                          shift, and go to state 255
    "tuple"                           shift, and go to state 428
    "variant"                         shift, and go to state 429
    "generator"                       shift, and go to state 430
    "++"                              shift, and go to state 431
    "--"                              shift, and go to state 432
    "::"                              shift, and go to state 55
    "$$"                              shift, and go to state 433
    "$i"                              shift, and go to state 434
    "$v"                              shift, and go to state 435
    "$b"                              shift, and go to state 436
    "$a"                              shift, and go to state 437
    "$c"                              shift, and go to state 438
    "..."                             shift, and go to state 439
    "integer constant"                shift, and go to state 440
    "long integer constant"           shift, and go to state 441
    "unsigned integer constant"       shift, and go to state 442
    "unsigned long integer constant"  shift, and go to state 443
    "unsigned int8 constant"          shift, and go to state 444
    "floating point constant"         shift, and go to state 445
    "double constant"                 shift, and go to state 446
    "name"                            shift, and go to state 56
    "start of the string"             shift, and go to state 447
    "begin of code block"             shift, and go to state 448
    '-'                               shift, and go to state 449
    '+'                               shift, and go to state 450
    '*'                               shift, and go to state 451
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 452
    '!'                               shift, and go to state 453
    '['                               shift, and go to state 454
    '('                               shift, and go to state 455
    '$'                               shift, and go to state 456
    '@'                               shift, and go to state 457

    string_builder          go to state 458
    expr_reader             go to state 459
    expr_call_pipe          go to state 460
    name_in_namespace       go to state 461
    expr_new                go to state 462
    expr_cast               go to state 463
    expr_type_decl          go to state 464
    expr_type_info          go to state 465
    block_or_lambda         go to state 466
    expr_full_block         go to state 467
    expr_numeric_const      go to state 468
    expr_named_call         go to state 469
    expr_method_call        go to state 470
    func_addr_expr          go to state 471
    expr_field              go to state 472
    expr_call               go to state 473
    expr                    go to state 1029
    expr_mtag               go to state 475
    basic_type_declaration  go to state 476
    make_decl               go to state 477
    make_struct_decl        go to state 478
    make_tuple_call         go to state 479
    make_dim_decl           go to state 480
    make_table_decl         go to state 481
    array_comprehension     go to state 482


State 1075

  368 expr_call: basic_type_declaration '(' expr_list ')' .

    $default  reduce using rule 368 (expr_call)


State 1076

  678 type_declaration_no_options_no_dim: "iterator" '<' $@46 type_declaration '>' $@47 .

    $default  reduce using rule 678 (type_declaration_no_options_no_dim)


State 1077

  668 type_declaration_no_options_no_dim: "smart_ptr" '<' $@40 type_declaration '>' $@41 .

    $default  reduce using rule 668 (type_declaration_no_options_no_dim)


State 1078

  626 bitfield_bits: bitfield_bits "end of expression" "name" .

    $default  reduce using rule 626 (bitfield_bits)


State 1079

  632 bitfield_type_declaration: "bitfield" '<' $@35 bitfield_bits '>' $@36 .

    $default  reduce using rule 632 (bitfield_type_declaration)


State 1080

  682 type_declaration_no_options_no_dim: "block" '<' $@48 type_declaration '>' $@49 .

    $default  reduce using rule 682 (type_declaration_no_options_no_dim)


State 1081

  685 type_declaration_no_options_no_dim: "block" '<' $@50 optional_function_argument_list optional_function_type '>' . $@51

    $default  reduce using rule 684 ($@51)

    $@51  go to state 1196


State 1082

  689 type_declaration_no_options_no_dim: "function" '<' $@52 type_declaration '>' $@53 .

    $default  reduce using rule 689 (type_declaration_no_options_no_dim)


State 1083

  692 type_declaration_no_options_no_dim: "function" '<' $@54 optional_function_argument_list optional_function_type '>' . $@55

    $default  reduce using rule 691 ($@55)

    $@55  go to state 1197


State 1084

  696 type_declaration_no_options_no_dim: "lambda" '<' $@56 type_declaration '>' $@57 .

    $default  reduce using rule 696 (type_declaration_no_options_no_dim)


State 1085

  699 type_declaration_no_options_no_dim: "lambda" '<' $@58 optional_function_argument_list optional_function_type '>' . $@59

    $default  reduce using rule 698 ($@59)

    $@59  go to state 1198


State 1086

  702 type_declaration_no_options_no_dim: "tuple" '<' $@60 tuple_type_list '>' $@61 .

    $default  reduce using rule 702 (type_declaration_no_options_no_dim)


State 1087

  496 tuple_type_list: tuple_type_list c_or_s tuple_type .

    $default  reduce using rule 496 (tuple_type_list)


State 1088

  705 type_declaration_no_options_no_dim: "variant" '<' $@62 variant_type_list '>' $@63 .

    $default  reduce using rule 705 (type_declaration_no_options_no_dim)


State 1089

  502 variant_type_list: variant_type_list c_or_s variant_type .

    $default  reduce using rule 502 (variant_type_list)


State 1090

  653 type_declaration_no_options_no_dim: '$' name_in_namespace '<' $@39 type_declaration_no_options_list '>' . '(' optional_expr_list ')'

    '('  shift, and go to state 1199


State 1091

  241 type_declaration_no_options_list: type_declaration_no_options_list c_or_s . type_declaration

    "type"       shift, and go to state 219
    "array"      shift, and go to state 220
    "table"      shift, and go to state 221
    "typedecl"   shift, and go to state 222
    "iterator"   shift, and go to state 223
    "smart_ptr"  shift, and go to state 224
    "bool"       shift, and go to state 225
    "void"       shift, and go to state 226
    "string"     shift, and go to state 227
    "auto"       shift, and go to state 228
    "int"        shift, and go to state 229
    "int2"       shift, and go to state 230
    "int3"       shift, and go to state 231
    "int4"       shift, and go to state 232
    "uint"       shift, and go to state 233
    "bitfield"   shift, and go to state 234
    "uint2"      shift, and go to state 235
    "uint3"      shift, and go to state 236
    "uint4"      shift, and go to state 237
    "float"      shift, and go to state 238
    "float2"     shift, and go to state 239
    "float3"     shift, and go to state 240
    "float4"     shift, and go to state 241
    "range"      shift, and go to state 242
    "urange"     shift, and go to state 243
    "range64"    shift, and go to state 244
    "urange64"   shift, and go to state 245
    "block"      shift, and go to state 246
    "int64"      shift, and go to state 247
    "uint64"     shift, and go to state 248
    "double"     shift, and go to state 249
    "function"   shift, and go to state 250
    "lambda"     shift, and go to state 251
    "int8"       shift, and go to state 252
    "uint8"      shift, and go to state 253
    "int16"      shift, and go to state 254
    "uint16"     shift, and go to state 255
    "tuple"      shift, and go to state 256
    "variant"    shift, and go to state 257
    "::"         shift, and go to state 55
    "$t"         shift, and go to state 258
    "name"       shift, and go to state 56
    '$'          shift, and go to state 259

    name_in_namespace                   go to state 260
    basic_type_declaration              go to state 261
    structure_type_declaration          go to state 262
    auto_type_declaration               go to state 263
    bitfield_type_declaration           go to state 264
    type_declaration_no_options         go to state 265
    type_declaration_no_options_no_dim  go to state 266
    type_declaration                    go to state 1200


State 1092

  342 expr_method_call: expr . "->" "name" '(' ')'
  343                 | expr . "->" "name" '(' expr_list ')'
  353 expr_field: expr . '.' "name"
  354           | expr . '.' '.' "name"
  355           | expr . '.' "name" '(' ')'
  356           | expr . '.' "name" '(' expr_list ')'
  357           | expr . '.' basic_type_declaration '(' ')'
  358           | expr . '.' basic_type_declaration '(' expr_list ')'
  361           | expr . '.' $@17 error $@18
  383 expr: expr . "<<" expr
  384     | expr . ">>" expr
  385     | expr . "<<<" expr
  386     | expr . ">>>" expr
  387     | expr . '+' expr
  388     | expr . '-' expr
  389     | expr . '*' expr
  390     | expr . '/' expr
  391     | expr . '%' expr
  392     | expr . '<' expr
  393     | expr . '>' expr
  394     | expr . "==" expr
  395     | expr . "!=" expr
  396     | expr . "<=" expr
  397     | expr . ">=" expr
  398     | expr . '&' expr
  399     | expr . '|' expr
  400     | expr . '^' expr
  401     | expr . "&&" expr
  402     | expr . "||" expr
  403     | expr . "^^" expr
  404     | expr . ".." expr
  407     | expr . "++"
  408     | expr . "--"
  410     | expr . '[' expr ']'
  411     | expr . '.' '[' expr ']'
  412     | expr . "?[" expr ']'
  413     | expr . '.' "?[" expr ']'
  414     | expr . "?." "name"
  415     | expr . '.' "?." "name"
  424     | expr . "??" expr
  425     | expr . '?' expr ':' expr
  428     | expr . "is" "type" '<' $@19 type_declaration_no_options '>' $@20
  429     | expr . "is" basic_type_declaration
  430     | expr . "is" "name"
  431     | expr . "as" "name"
  434     | expr . "as" "type" '<' $@21 type_declaration '>' $@22
  435     | expr . "as" basic_type_declaration
  436     | expr . '?' "as" "name"
  439     | expr . '?' "as" "type" '<' $@23 type_declaration '>' $@24
  440     | expr . '?' "as" basic_type_declaration
  448     | expr . "<|" expr
  449     | expr . "|>" expr
  450     | expr . "|>" basic_type_declaration
  461 expr_mtag: expr . '.' "$f" '(' expr ')'
  462          | expr . "?." "$f" '(' expr ')'
  463          | expr . '.' '.' "$f" '(' expr ')'
  464          | expr . '.' "?." "$f" '(' expr ')'
  465          | expr . "as" "$f" '(' expr ')'
  466          | expr . '?' "as" "$f" '(' expr ')'
  467          | expr . "is" "$f" '(' expr ')'
  582 variable_name_with_pos_list: "$i" '(' expr . ')'

    "is"   shift, and go to state 648
    "as"   shift, and go to state 649
    "<<"   shift, and go to state 650
    ">>"   shift, and go to state 651
    "++"   shift, and go to state 652
    "--"   shift, and go to state 653
    "<="   shift, and go to state 654
    ">="   shift, and go to state 655
    "=="   shift, and go to state 656
    "!="   shift, and go to state 657
    "->"   shift, and go to state 658
    "??"   shift, and go to state 659
    "?."   shift, and go to state 660
    "?["   shift, and go to state 661
    "<|"   shift, and go to state 662
    "|>"   shift, and go to state 663
    "<<<"  shift, and go to state 664
    ">>>"  shift, and go to state 665
    "&&"   shift, and go to state 666
    "||"   shift, and go to state 667
    "^^"   shift, and go to state 668
    ".."   shift, and go to state 669
    '?'    shift, and go to state 670
    '|'    shift, and go to state 671
    '^'    shift, and go to state 672
    '&'    shift, and go to state 673
    '<'    shift, and go to state 674
    '>'    shift, and go to state 675
    '-'    shift, and go to state 676
    '+'    shift, and go to state 677
    '*'    shift, and go to state 678
    '/'    shift, and go to state 679
    '%'    shift, and go to state 680
    '.'    shift, and go to state 681
    '['    shift, and go to state 682
    ')'    shift, and go to state 1201


State 1093

  583 variable_name_with_pos_list: "name" "aka" "name" .

    $default  reduce using rule 583 (variable_name_with_pos_list)


State 1094

  584 variable_name_with_pos_list: variable_name_with_pos_list ',' "name" .
  585                            | variable_name_with_pos_list ',' "name" . "aka" "name"

    "aka"  shift, and go to state 1202

    $default  reduce using rule 584 (variable_name_with_pos_list)


State 1095

  510 variable_declaration: variable_name_with_pos_list ':' type_declaration .
  511                     | variable_name_with_pos_list ':' type_declaration . copy_or_move expr
  707 type_declaration: type_declaration . '|' type_declaration_no_options
  708                 | type_declaration . '|' '#'

    "<-"  shift, and go to state 927
    '='   shift, and go to state 929
    '|'   shift, and go to state 375

    $default  reduce using rule 510 (variable_declaration)

    copy_or_move  go to state 1203


State 1096

  342 expr_method_call: expr . "->" "name" '(' ')'
  343                 | expr . "->" "name" '(' expr_list ')'
  353 expr_field: expr . '.' "name"
  354           | expr . '.' '.' "name"
  355           | expr . '.' "name" '(' ')'
  356           | expr . '.' "name" '(' expr_list ')'
  357           | expr . '.' basic_type_declaration '(' ')'
  358           | expr . '.' basic_type_declaration '(' expr_list ')'
  361           | expr . '.' $@17 error $@18
  383 expr: expr . "<<" expr
  384     | expr . ">>" expr
  385     | expr . "<<<" expr
  386     | expr . ">>>" expr
  387     | expr . '+' expr
  388     | expr . '-' expr
  389     | expr . '*' expr
  390     | expr . '/' expr
  391     | expr . '%' expr
  392     | expr . '<' expr
  393     | expr . '>' expr
  394     | expr . "==" expr
  395     | expr . "!=" expr
  396     | expr . "<=" expr
  397     | expr . ">=" expr
  398     | expr . '&' expr
  399     | expr . '|' expr
  400     | expr . '^' expr
  401     | expr . "&&" expr
  402     | expr . "||" expr
  403     | expr . "^^" expr
  404     | expr . ".." expr
  407     | expr . "++"
  408     | expr . "--"
  410     | expr . '[' expr ']'
  411     | expr . '.' '[' expr ']'
  412     | expr . "?[" expr ']'
  413     | expr . '.' "?[" expr ']'
  414     | expr . "?." "name"
  415     | expr . '.' "?." "name"
  424     | expr . "??" expr
  425     | expr . '?' expr ':' expr
  428     | expr . "is" "type" '<' $@19 type_declaration_no_options '>' $@20
  429     | expr . "is" basic_type_declaration
  430     | expr . "is" "name"
  431     | expr . "as" "name"
  434     | expr . "as" "type" '<' $@21 type_declaration '>' $@22
  435     | expr . "as" basic_type_declaration
  436     | expr . '?' "as" "name"
  439     | expr . '?' "as" "type" '<' $@23 type_declaration '>' $@24
  440     | expr . '?' "as" basic_type_declaration
  448     | expr . "<|" expr
  449     | expr . "|>" expr
  450     | expr . "|>" basic_type_declaration
  461 expr_mtag: expr . '.' "$f" '(' expr ')'
  462          | expr . "?." "$f" '(' expr ')'
  463          | expr . '.' '.' "$f" '(' expr ')'
  464          | expr . '.' "?." "$f" '(' expr ')'
  465          | expr . "as" "$f" '(' expr ')'
  466          | expr . '?' "as" "$f" '(' expr ')'
  467          | expr . "is" "$f" '(' expr ')'
  512 variable_declaration: variable_name_with_pos_list copy_or_move expr .

    "is"   shift, and go to state 648
    "as"   shift, and go to state 649
    "<<"   shift, and go to state 650
    ">>"   shift, and go to state 651
    "++"   shift, and go to state 652
    "--"   shift, and go to state 653
    "<="   shift, and go to state 654
    ">="   shift, and go to state 655
    "=="   shift, and go to state 656
    "!="   shift, and go to state 657
    "->"   shift, and go to state 658
    "??"   shift, and go to state 659
    "?."   shift, and go to state 660
    "?["   shift, and go to state 661
    "<|"   shift, and go to state 662
    "|>"   shift, and go to state 663
    "<<<"  shift, and go to state 664
    ">>>"  shift, and go to state 665
    "&&"   shift, and go to state 666
    "||"   shift, and go to state 667
    "^^"   shift, and go to state 668
    ".."   shift, and go to state 669
    '?'    shift, and go to state 670
    '|'    shift, and go to state 671
    '^'    shift, and go to state 672
    '&'    shift, and go to state 673
    '<'    shift, and go to state 674
    '>'    shift, and go to state 675
    '-'    shift, and go to state 676
    '+'    shift, and go to state 677
    '*'    shift, and go to state 678
    '/'    shift, and go to state 679
    '%'    shift, and go to state 680
    '.'    shift, and go to state 681
    '['    shift, and go to state 682

    $default  reduce using rule 512 (variable_declaration)


State 1097

   73 expression_while_loop: "while" '(' expr ')' . expression_block

    "begin of code block"  shift, and go to state 326

    expression_block  go to state 1204


State 1098

   71 expression_for_loop: "for" '(' variable_name_with_pos_list "in" . expr_list ')' expression_block

    "struct"                          shift, and go to state 409
    "class"                           shift, and go to state 410
    "true"                            shift, and go to state 411
    "false"                           shift, and go to state 412
    "new"                             shift, and go to state 413
    "typeinfo"                        shift, and go to state 414
    "type"                            shift, and go to state 415
    "array"                           shift, and go to state 416
    "null"                            shift, and go to state 417
    "table"                           shift, and go to state 418
    "deref"                           shift, and go to state 419
    "cast"                            shift, and go to state 420
    "upcast"                          shift, and go to state 421
    "addr"                            shift, and go to state 422
    "reinterpret"                     shift, and go to state 423
    "unsafe"                          shift, and go to state 424
    "fixed_array"                     shift, and go to state 425
    "default"                         shift, and go to state 426
    "bool"                            shift, and go to state 225
    "void"                            shift, and go to state 226
    "string"                          shift, and go to state 227
    "int"                             shift, and go to state 229
    "int2"                            shift, and go to state 230
    "int3"                            shift, and go to state 231
    "int4"                            shift, and go to state 232
    "uint"                            shift, and go to state 233
    "bitfield"                        shift, and go to state 427
    "uint2"                           shift, and go to state 235
    "uint3"                           shift, and go to state 236
    "uint4"                           shift, and go to state 237
    "float"                           shift, and go to state 238
    "float2"                          shift, and go to state 239
    "float3"                          shift, and go to state 240
    "float4"                          shift, and go to state 241
    "range"                           shift, and go to state 242
    "urange"                          shift, and go to state 243
    "range64"                         shift, and go to state 244
    "urange64"                        shift, and go to state 245
    "int64"                           shift, and go to state 247
    "uint64"                          shift, and go to state 248
    "double"                          shift, and go to state 249
    "int8"                            shift, and go to state 252
    "uint8"                           shift, and go to state 253
    "int16"                           shift, and go to state 254
    "uint16"                          shift, and go to state 255
    "tuple"                           shift, and go to state 428
    "variant"                         shift, and go to state 429
    "generator"                       shift, and go to state 430
    "++"                              shift, and go to state 431
    "--"                              shift, and go to state 432
    "::"                              shift, and go to state 55
    "$$"                              shift, and go to state 433
    "$i"                              shift, and go to state 434
    "$v"                              shift, and go to state 435
    "$b"                              shift, and go to state 436
    "$a"                              shift, and go to state 437
    "$c"                              shift, and go to state 438
    "..."                             shift, and go to state 439
    "integer constant"                shift, and go to state 440
    "long integer constant"           shift, and go to state 441
    "unsigned integer constant"       shift, and go to state 442
    "unsigned long integer constant"  shift, and go to state 443
    "unsigned int8 constant"          shift, and go to state 444
    "floating point constant"         shift, and go to state 445
    "double constant"                 shift, and go to state 446
    "name"                            shift, and go to state 56
    "start of the string"             shift, and go to state 447
    "begin of code block"             shift, and go to state 448
    '-'                               shift, and go to state 449
    '+'                               shift, and go to state 450
    '*'                               shift, and go to state 451
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 452
    '!'                               shift, and go to state 453
    '['                               shift, and go to state 454
    '('                               shift, and go to state 455
    '$'                               shift, and go to state 456
    '@'                               shift, and go to state 457

    string_builder          go to state 458
    expr_reader             go to state 459
    expr_call_pipe          go to state 460
    name_in_namespace       go to state 461
    expr_new                go to state 462
    expr_cast               go to state 463
    expr_type_decl          go to state 464
    expr_type_info          go to state 465
    expr_list               go to state 1205
    block_or_lambda         go to state 466
    expr_full_block         go to state 467
    expr_numeric_const      go to state 468
    expr_named_call         go to state 469
    expr_method_call        go to state 470
    func_addr_expr          go to state 471
    expr_field              go to state 472
    expr_call               go to state 473
    expr                    go to state 639
    expr_mtag               go to state 475
    basic_type_declaration  go to state 476
    make_decl               go to state 477
    make_struct_decl        go to state 478
    make_tuple_call         go to state 479
    make_dim_decl           go to state 480
    make_table_decl         go to state 481
    array_comprehension     go to state 482


State 1099

  264 expression_try_catch: "try" expression_block "recover" expression_block .

    $default  reduce using rule 264 (expression_try_catch)


State 1100

   74 expression_with: "with" '(' expr ')' . expression_block

    "begin of code block"  shift, and go to state 326

    expression_block  go to state 1206


State 1101

   75 expression_with_alias: "assume" "name" '=' expr .
  342 expr_method_call: expr . "->" "name" '(' ')'
  343                 | expr . "->" "name" '(' expr_list ')'
  353 expr_field: expr . '.' "name"
  354           | expr . '.' '.' "name"
  355           | expr . '.' "name" '(' ')'
  356           | expr . '.' "name" '(' expr_list ')'
  357           | expr . '.' basic_type_declaration '(' ')'
  358           | expr . '.' basic_type_declaration '(' expr_list ')'
  361           | expr . '.' $@17 error $@18
  383 expr: expr . "<<" expr
  384     | expr . ">>" expr
  385     | expr . "<<<" expr
  386     | expr . ">>>" expr
  387     | expr . '+' expr
  388     | expr . '-' expr
  389     | expr . '*' expr
  390     | expr . '/' expr
  391     | expr . '%' expr
  392     | expr . '<' expr
  393     | expr . '>' expr
  394     | expr . "==" expr
  395     | expr . "!=" expr
  396     | expr . "<=" expr
  397     | expr . ">=" expr
  398     | expr . '&' expr
  399     | expr . '|' expr
  400     | expr . '^' expr
  401     | expr . "&&" expr
  402     | expr . "||" expr
  403     | expr . "^^" expr
  404     | expr . ".." expr
  407     | expr . "++"
  408     | expr . "--"
  410     | expr . '[' expr ']'
  411     | expr . '.' '[' expr ']'
  412     | expr . "?[" expr ']'
  413     | expr . '.' "?[" expr ']'
  414     | expr . "?." "name"
  415     | expr . '.' "?." "name"
  424     | expr . "??" expr
  425     | expr . '?' expr ':' expr
  428     | expr . "is" "type" '<' $@19 type_declaration_no_options '>' $@20
  429     | expr . "is" basic_type_declaration
  430     | expr . "is" "name"
  431     | expr . "as" "name"
  434     | expr . "as" "type" '<' $@21 type_declaration '>' $@22
  435     | expr . "as" basic_type_declaration
  436     | expr . '?' "as" "name"
  439     | expr . '?' "as" "type" '<' $@23 type_declaration '>' $@24
  440     | expr . '?' "as" basic_type_declaration
  448     | expr . "<|" expr
  449     | expr . "|>" expr
  450     | expr . "|>" basic_type_declaration
  461 expr_mtag: expr . '.' "$f" '(' expr ')'
  462          | expr . "?." "$f" '(' expr ')'
  463          | expr . '.' '.' "$f" '(' expr ')'
  464          | expr . '.' "?." "$f" '(' expr ')'
  465          | expr . "as" "$f" '(' expr ')'
  466          | expr . '?' "as" "$f" '(' expr ')'
  467          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 648
    "as"   shift, and go to state 649
    "<<"   shift, and go to state 650
    ">>"   shift, and go to state 651
    "++"   shift, and go to state 652
    "--"   shift, and go to state 653
    "<="   shift, and go to state 654
    ">="   shift, and go to state 655
    "=="   shift, and go to state 656
    "!="   shift, and go to state 657
    "->"   shift, and go to state 658
    "??"   shift, and go to state 659
    "?."   shift, and go to state 660
    "?["   shift, and go to state 661
    "<|"   shift, and go to state 662
    "|>"   shift, and go to state 663
    "<<<"  shift, and go to state 664
    ">>>"  shift, and go to state 665
    "&&"   shift, and go to state 666
    "||"   shift, and go to state 667
    "^^"   shift, and go to state 668
    ".."   shift, and go to state 669
    '?'    shift, and go to state 670
    '|'    shift, and go to state 671
    '^'    shift, and go to state 672
    '&'    shift, and go to state 673
    '<'    shift, and go to state 674
    '>'    shift, and go to state 675
    '-'    shift, and go to state 676
    '+'    shift, and go to state 677
    '*'    shift, and go to state 678
    '/'    shift, and go to state 679
    '%'    shift, and go to state 680
    '.'    shift, and go to state 681
    '['    shift, and go to state 682

    $default  reduce using rule 75 (expression_with_alias)


State 1102

  213 expression_block: "begin of code block" expressions "end of code block" "finally" "begin of code block" expressions . "end of code block"
  234 expressions: expressions . expression_any
  235            | expressions . error

    error                             shift, and go to state 531
    "struct"                          shift, and go to state 409
    "class"                           shift, and go to state 410
    "let"                             shift, and go to state 3
    "while"                           shift, and go to state 532
    "if"                              shift, and go to state 533
    "static_if"                       shift, and go to state 534
    "for"                             shift, and go to state 535
    "true"                            shift, and go to state 411
    "false"                           shift, and go to state 412
    "new"                             shift, and go to state 413
    "typeinfo"                        shift, and go to state 414
    "type"                            shift, and go to state 415
    "array"                           shift, and go to state 416
    "return"                          shift, and go to state 536
    "null"                            shift, and go to state 417
    "break"                           shift, and go to state 537
    "try"                             shift, and go to state 538
    "table"                           shift, and go to state 418
    "delete"                          shift, and go to state 539
    "deref"                           shift, and go to state 419
    "with"                            shift, and go to state 540
    "assume"                          shift, and go to state 541
    "cast"                            shift, and go to state 420
    "upcast"                          shift, and go to state 421
    "var"                             shift, and go to state 8
    "addr"                            shift, and go to state 422
    "continue"                        shift, and go to state 542
    "pass"                            shift, and go to state 543
    "reinterpret"                     shift, and go to state 423
    "label"                           shift, and go to state 544
    "goto"                            shift, and go to state 545
    "unsafe"                          shift, and go to state 546
    "fixed_array"                     shift, and go to state 425
    "default"                         shift, and go to state 426
    "bool"                            shift, and go to state 225
    "void"                            shift, and go to state 226
    "string"                          shift, and go to state 227
    "int"                             shift, and go to state 229
    "int2"                            shift, and go to state 230
    "int3"                            shift, and go to state 231
    "int4"                            shift, and go to state 232
    "uint"                            shift, and go to state 233
    "bitfield"                        shift, and go to state 427
    "uint2"                           shift, and go to state 235
    "uint3"                           shift, and go to state 236
    "uint4"                           shift, and go to state 237
    "float"                           shift, and go to state 238
    "float2"                          shift, and go to state 239
    "float3"                          shift, and go to state 240
    "float4"                          shift, and go to state 241
    "range"                           shift, and go to state 242
    "urange"                          shift, and go to state 243
    "range64"                         shift, and go to state 244
    "urange64"                        shift, and go to state 245
    "int64"                           shift, and go to state 247
    "uint64"                          shift, and go to state 248
    "double"                          shift, and go to state 249
    "int8"                            shift, and go to state 252
    "uint8"                           shift, and go to state 253
    "int16"                           shift, and go to state 254
    "uint16"                          shift, and go to state 255
    "tuple"                           shift, and go to state 428
    "variant"                         shift, and go to state 429
    "generator"                       shift, and go to state 430
    "yield"                           shift, and go to state 547
    "++"                              shift, and go to state 431
    "--"                              shift, and go to state 432
    "::"                              shift, and go to state 55
    "$$"                              shift, and go to state 433
    "$i"                              shift, and go to state 434
    "$v"                              shift, and go to state 435
    "$b"                              shift, and go to state 436
    "$a"                              shift, and go to state 437
    "$c"                              shift, and go to state 438
    "..."                             shift, and go to state 439
    "integer constant"                shift, and go to state 440
    "long integer constant"           shift, and go to state 441
    "unsigned integer constant"       shift, and go to state 442
    "unsigned long integer constant"  shift, and go to state 443
    "unsigned int8 constant"          shift, and go to state 444
    "floating point constant"         shift, and go to state 445
    "double constant"                 shift, and go to state 446
    "name"                            shift, and go to state 56
    "start of the string"             shift, and go to state 447
    "begin of code block"             shift, and go to state 448
    "end of code block"               shift, and go to state 1207
    "end of expression"               shift, and go to state 549
    '-'                               shift, and go to state 449
    '+'                               shift, and go to state 450
    '*'                               shift, and go to state 451
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 452
    '!'                               shift, and go to state 453
    '['                               shift, and go to state 454
    '('                               shift, and go to state 455
    '$'                               shift, and go to state 456
    '@'                               shift, and go to state 457

    string_builder           go to state 458
    expr_reader              go to state 459
    expression_label         go to state 550
    expression_goto          go to state 551
    if_or_static_if          go to state 552
    expression_if_one_liner  go to state 553
    expression_if_then_else  go to state 554
    expression_for_loop      go to state 555
    expression_unsafe        go to state 556
    expression_while_loop    go to state 557
    expression_with          go to state 558
    expression_with_alias    go to state 559
    expr_call_pipe           go to state 460
    expression_any           go to state 560
    name_in_namespace        go to state 461
    expression_delete        go to state 561
    expr_new                 go to state 462
    expression_break         go to state 562
    expression_continue      go to state 563
    expression_return        go to state 564
    expression_yield         go to state 565
    expression_try_catch     go to state 566
    kwd_let                  go to state 567
    expression_let           go to state 568
    expr_cast                go to state 463
    expr_type_decl           go to state 464
    expr_type_info           go to state 465
    block_or_lambda          go to state 466
    expr_full_block          go to state 467
    expr_numeric_const       go to state 468
    expr_assign              go to state 569
    expr_named_call          go to state 469
    expr_method_call         go to state 470
    func_addr_expr           go to state 471
    expr_field               go to state 472
    expr_call                go to state 473
    expr                     go to state 570
    expr_mtag                go to state 475
    basic_type_declaration   go to state 476
    make_decl                go to state 477
    make_struct_decl         go to state 478
    make_tuple_call          go to state 479
    make_dim_decl            go to state 480
    make_table_decl          go to state 481
    array_comprehension      go to state 482


State 1103

   69 expression_if_then_else: if_or_static_if '(' expr ')' . expression_block expression_else

    "begin of code block"  shift, and go to state 326

    expression_block  go to state 1208


State 1104

   70 expression_if_then_else: expression_if_one_liner "if" '(' expr . ')' expression_else_one_liner "end of expression"
  342 expr_method_call: expr . "->" "name" '(' ')'
  343                 | expr . "->" "name" '(' expr_list ')'
  353 expr_field: expr . '.' "name"
  354           | expr . '.' '.' "name"
  355           | expr . '.' "name" '(' ')'
  356           | expr . '.' "name" '(' expr_list ')'
  357           | expr . '.' basic_type_declaration '(' ')'
  358           | expr . '.' basic_type_declaration '(' expr_list ')'
  361           | expr . '.' $@17 error $@18
  383 expr: expr . "<<" expr
  384     | expr . ">>" expr
  385     | expr . "<<<" expr
  386     | expr . ">>>" expr
  387     | expr . '+' expr
  388     | expr . '-' expr
  389     | expr . '*' expr
  390     | expr . '/' expr
  391     | expr . '%' expr
  392     | expr . '<' expr
  393     | expr . '>' expr
  394     | expr . "==" expr
  395     | expr . "!=" expr
  396     | expr . "<=" expr
  397     | expr . ">=" expr
  398     | expr . '&' expr
  399     | expr . '|' expr
  400     | expr . '^' expr
  401     | expr . "&&" expr
  402     | expr . "||" expr
  403     | expr . "^^" expr
  404     | expr . ".." expr
  407     | expr . "++"
  408     | expr . "--"
  410     | expr . '[' expr ']'
  411     | expr . '.' '[' expr ']'
  412     | expr . "?[" expr ']'
  413     | expr . '.' "?[" expr ']'
  414     | expr . "?." "name"
  415     | expr . '.' "?." "name"
  424     | expr . "??" expr
  425     | expr . '?' expr ':' expr
  428     | expr . "is" "type" '<' $@19 type_declaration_no_options '>' $@20
  429     | expr . "is" basic_type_declaration
  430     | expr . "is" "name"
  431     | expr . "as" "name"
  434     | expr . "as" "type" '<' $@21 type_declaration '>' $@22
  435     | expr . "as" basic_type_declaration
  436     | expr . '?' "as" "name"
  439     | expr . '?' "as" "type" '<' $@23 type_declaration '>' $@24
  440     | expr . '?' "as" basic_type_declaration
  448     | expr . "<|" expr
  449     | expr . "|>" expr
  450     | expr . "|>" basic_type_declaration
  461 expr_mtag: expr . '.' "$f" '(' expr ')'
  462          | expr . "?." "$f" '(' expr ')'
  463          | expr . '.' '.' "$f" '(' expr ')'
  464          | expr . '.' "?." "$f" '(' expr ')'
  465          | expr . "as" "$f" '(' expr ')'
  466          | expr . '?' "as" "$f" '(' expr ')'
  467          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 648
    "as"   shift, and go to state 649
    "<<"   shift, and go to state 650
    ">>"   shift, and go to state 651
    "++"   shift, and go to state 652
    "--"   shift, and go to state 653
    "<="   shift, and go to state 654
    ">="   shift, and go to state 655
    "=="   shift, and go to state 656
    "!="   shift, and go to state 657
    "->"   shift, and go to state 658
    "??"   shift, and go to state 659
    "?."   shift, and go to state 660
    "?["   shift, and go to state 661
    "<|"   shift, and go to state 662
    "|>"   shift, and go to state 663
    "<<<"  shift, and go to state 664
    ">>>"  shift, and go to state 665
    "&&"   shift, and go to state 666
    "||"   shift, and go to state 667
    "^^"   shift, and go to state 668
    ".."   shift, and go to state 669
    '?'    shift, and go to state 670
    '|'    shift, and go to state 671
    '^'    shift, and go to state 672
    '&'    shift, and go to state 673
    '<'    shift, and go to state 674
    '>'    shift, and go to state 675
    '-'    shift, and go to state 676
    '+'    shift, and go to state 677
    '*'    shift, and go to state 678
    '/'    shift, and go to state 679
    '%'    shift, and go to state 680
    '.'    shift, and go to state 681
    '['    shift, and go to state 682
    ')'    shift, and go to state 1209


State 1105

  278 expression_let: kwd_let optional_in_scope "begin of code block" variable_declaration_list . "end of code block"
  526 variable_declaration_list: variable_declaration_list . "end of expression"
  527                          | variable_declaration_list . let_variable_declaration

    "$i"                 shift, and go to state 576
    "name"               shift, and go to state 577
    "end of code block"  shift, and go to state 1210
    "end of expression"  shift, and go to state 1211

    let_variable_name_with_pos_list  go to state 578
    let_variable_declaration         go to state 1212


State 1106

  272 tuple_expansion: "name" .

    $default  reduce using rule 272 (tuple_expansion)


State 1107

  273 tuple_expansion: tuple_expansion . ',' "name"
  274 tuple_expansion_variable_declaration: '(' tuple_expansion . ')' ':' type_declaration_no_options copy_or_move_or_clone expr "end of expression"
  275                                     | '(' tuple_expansion . ')' optional_ref copy_or_move_or_clone expr "end of expression"

    ','  shift, and go to state 1213
    ')'  shift, and go to state 1214


State 1108

  565 enum_declaration: optional_annotation_list "enum" optional_public_or_private_enum enum_name optional_enum_basic_type_declaration "begin of code block" $@31 enum_list optional_comma $@32 "end of code block" .

    $default  reduce using rule 565 (enum_declaration)


State 1109

  477 optional_public_or_private_member_variable: "public" .

    $default  reduce using rule 477 (optional_public_or_private_member_variable)


State 1110

  478 optional_public_or_private_member_variable: "private" .

    $default  reduce using rule 478 (optional_public_or_private_member_variable)


State 1111

  486 struct_variable_declaration_list: struct_variable_declaration_list optional_annotation_list "def" optional_public_or_private_member_variable . "abstract" optional_constant $@26 function_declaration_header "end of expression"
  488                                 | struct_variable_declaration_list optional_annotation_list "def" optional_public_or_private_member_variable . optional_static_member_variable optional_override optional_constant $@27 function_declaration_header expression_block

    "abstract"  shift, and go to state 1215
    "static"    shift, and go to state 1112

    $default  reduce using rule 479 (optional_static_member_variable)

    optional_static_member_variable  go to state 1216


State 1112

  480 optional_static_member_variable: "static" .

    $default  reduce using rule 480 (optional_static_member_variable)


State 1113

  481 structure_variable_declaration: optional_field_annotation optional_static_member_variable . optional_override optional_public_or_private_member_variable variable_declaration

    "override"  shift, and go to state 1217
    "sealed"    shift, and go to state 1218

    $default  reduce using rule 471 (optional_override)

    optional_override  go to state 1219


State 1114

  484 struct_variable_declaration_list: struct_variable_declaration_list $@25 structure_variable_declaration "end of expression" .

    $default  reduce using rule 484 (struct_variable_declaration_list)


State 1115

  519 let_variable_name_with_pos_list: "$i" '(' expr ')' .

    $default  reduce using rule 519 (let_variable_name_with_pos_list)


State 1116

  522 let_variable_name_with_pos_list: let_variable_name_with_pos_list ',' "name" "aka" . "name"

    "name"  shift, and go to state 1220


State 1117

  528 let_variable_declaration: let_variable_name_with_pos_list ':' type_declaration_no_options "end of expression" .

    $default  reduce using rule 528 (let_variable_declaration)


State 1118

  529 let_variable_declaration: let_variable_name_with_pos_list ':' type_declaration_no_options copy_or_move_or_clone . expr "end of expression"

    "struct"                          shift, and go to state 409
    "class"                           shift, and go to state 410
    "true"                            shift, and go to state 411
    "false"                           shift, and go to state 412
    "new"                             shift, and go to state 413
    "typeinfo"                        shift, and go to state 414
    "type"                            shift, and go to state 415
    "array"                           shift, and go to state 416
    "null"                            shift, and go to state 417
    "table"                           shift, and go to state 418
    "deref"                           shift, and go to state 419
    "cast"                            shift, and go to state 420
    "upcast"                          shift, and go to state 421
    "addr"                            shift, and go to state 422
    "reinterpret"                     shift, and go to state 423
    "unsafe"                          shift, and go to state 424
    "fixed_array"                     shift, and go to state 425
    "default"                         shift, and go to state 426
    "bool"                            shift, and go to state 225
    "void"                            shift, and go to state 226
    "string"                          shift, and go to state 227
    "int"                             shift, and go to state 229
    "int2"                            shift, and go to state 230
    "int3"                            shift, and go to state 231
    "int4"                            shift, and go to state 232
    "uint"                            shift, and go to state 233
    "bitfield"                        shift, and go to state 427
    "uint2"                           shift, and go to state 235
    "uint3"                           shift, and go to state 236
    "uint4"                           shift, and go to state 237
    "float"                           shift, and go to state 238
    "float2"                          shift, and go to state 239
    "float3"                          shift, and go to state 240
    "float4"                          shift, and go to state 241
    "range"                           shift, and go to state 242
    "urange"                          shift, and go to state 243
    "range64"                         shift, and go to state 244
    "urange64"                        shift, and go to state 245
    "int64"                           shift, and go to state 247
    "uint64"                          shift, and go to state 248
    "double"                          shift, and go to state 249
    "int8"                            shift, and go to state 252
    "uint8"                           shift, and go to state 253
    "int16"                           shift, and go to state 254
    "uint16"                          shift, and go to state 255
    "tuple"                           shift, and go to state 428
    "variant"                         shift, and go to state 429
    "generator"                       shift, and go to state 430
    "++"                              shift, and go to state 431
    "--"                              shift, and go to state 432
    "::"                              shift, and go to state 55
    "$$"                              shift, and go to state 433
    "$i"                              shift, and go to state 434
    "$v"                              shift, and go to state 435
    "$b"                              shift, and go to state 436
    "$a"                              shift, and go to state 437
    "$c"                              shift, and go to state 438
    "..."                             shift, and go to state 439
    "integer constant"                shift, and go to state 440
    "long integer constant"           shift, and go to state 441
    "unsigned integer constant"       shift, and go to state 442
    "unsigned long integer constant"  shift, and go to state 443
    "unsigned int8 constant"          shift, and go to state 444
    "floating point constant"         shift, and go to state 445
    "double constant"                 shift, and go to state 446
    "name"                            shift, and go to state 56
    "start of the string"             shift, and go to state 447
    "begin of code block"             shift, and go to state 448
    '-'                               shift, and go to state 449
    '+'                               shift, and go to state 450
    '*'                               shift, and go to state 451
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 452
    '!'                               shift, and go to state 453
    '['                               shift, and go to state 454
    '('                               shift, and go to state 455
    '$'                               shift, and go to state 456
    '@'                               shift, and go to state 457

    string_builder          go to state 458
    expr_reader             go to state 459
    expr_call_pipe          go to state 460
    name_in_namespace       go to state 461
    expr_new                go to state 462
    expr_cast               go to state 463
    expr_type_decl          go to state 464
    expr_type_info          go to state 465
    block_or_lambda         go to state 466
    expr_full_block         go to state 467
    expr_numeric_const      go to state 468
    expr_named_call         go to state 469
    expr_method_call        go to state 470
    func_addr_expr          go to state 471
    expr_field              go to state 472
    expr_call               go to state 473
    expr                    go to state 1221
    expr_mtag               go to state 475
    basic_type_declaration  go to state 476
    make_decl               go to state 477
    make_struct_decl        go to state 478
    make_tuple_call         go to state 479
    make_dim_decl           go to state 480
    make_table_decl         go to state 481
    array_comprehension     go to state 482


State 1119

  342 expr_method_call: expr . "->" "name" '(' ')'
  343                 | expr . "->" "name" '(' expr_list ')'
  353 expr_field: expr . '.' "name"
  354           | expr . '.' '.' "name"
  355           | expr . '.' "name" '(' ')'
  356           | expr . '.' "name" '(' expr_list ')'
  357           | expr . '.' basic_type_declaration '(' ')'
  358           | expr . '.' basic_type_declaration '(' expr_list ')'
  361           | expr . '.' $@17 error $@18
  383 expr: expr . "<<" expr
  384     | expr . ">>" expr
  385     | expr . "<<<" expr
  386     | expr . ">>>" expr
  387     | expr . '+' expr
  388     | expr . '-' expr
  389     | expr . '*' expr
  390     | expr . '/' expr
  391     | expr . '%' expr
  392     | expr . '<' expr
  393     | expr . '>' expr
  394     | expr . "==" expr
  395     | expr . "!=" expr
  396     | expr . "<=" expr
  397     | expr . ">=" expr
  398     | expr . '&' expr
  399     | expr . '|' expr
  400     | expr . '^' expr
  401     | expr . "&&" expr
  402     | expr . "||" expr
  403     | expr . "^^" expr
  404     | expr . ".." expr
  407     | expr . "++"
  408     | expr . "--"
  410     | expr . '[' expr ']'
  411     | expr . '.' '[' expr ']'
  412     | expr . "?[" expr ']'
  413     | expr . '.' "?[" expr ']'
  414     | expr . "?." "name"
  415     | expr . '.' "?." "name"
  424     | expr . "??" expr
  425     | expr . '?' expr ':' expr
  428     | expr . "is" "type" '<' $@19 type_declaration_no_options '>' $@20
  429     | expr . "is" basic_type_declaration
  430     | expr . "is" "name"
  431     | expr . "as" "name"
  434     | expr . "as" "type" '<' $@21 type_declaration '>' $@22
  435     | expr . "as" basic_type_declaration
  436     | expr . '?' "as" "name"
  439     | expr . '?' "as" "type" '<' $@23 type_declaration '>' $@24
  440     | expr . '?' "as" basic_type_declaration
  448     | expr . "<|" expr
  449     | expr . "|>" expr
  450     | expr . "|>" basic_type_declaration
  461 expr_mtag: expr . '.' "$f" '(' expr ')'
  462          | expr . "?." "$f" '(' expr ')'
  463          | expr . '.' '.' "$f" '(' expr ')'
  464          | expr . '.' "?." "$f" '(' expr ')'
  465          | expr . "as" "$f" '(' expr ')'
  466          | expr . '?' "as" "$f" '(' expr ')'
  467          | expr . "is" "$f" '(' expr ')'
  530 let_variable_declaration: let_variable_name_with_pos_list optional_ref copy_or_move_or_clone expr . "end of expression"

    "is"                 shift, and go to state 648
    "as"                 shift, and go to state 649
    "<<"                 shift, and go to state 650
    ">>"                 shift, and go to state 651
    "++"                 shift, and go to state 652
    "--"                 shift, and go to state 653
    "<="                 shift, and go to state 654
    ">="                 shift, and go to state 655
    "=="                 shift, and go to state 656
    "!="                 shift, and go to state 657
    "->"                 shift, and go to state 658
    "??"                 shift, and go to state 659
    "?."                 shift, and go to state 660
    "?["                 shift, and go to state 661
    "<|"                 shift, and go to state 662
    "|>"                 shift, and go to state 663
    "<<<"                shift, and go to state 664
    ">>>"                shift, and go to state 665
    "&&"                 shift, and go to state 666
    "||"                 shift, and go to state 667
    "^^"                 shift, and go to state 668
    ".."                 shift, and go to state 669
    "end of expression"  shift, and go to state 1222
    '?'                  shift, and go to state 670
    '|'                  shift, and go to state 671
    '^'                  shift, and go to state 672
    '&'                  shift, and go to state 673
    '<'                  shift, and go to state 674
    '>'                  shift, and go to state 675
    '-'                  shift, and go to state 676
    '+'                  shift, and go to state 677
    '*'                  shift, and go to state 678
    '/'                  shift, and go to state 679
    '%'                  shift, and go to state 680
    '.'                  shift, and go to state 681
    '['                  shift, and go to state 682


State 1120

  532 global_let_variable_declaration: global_let_variable_name_with_pos_list ':' type_declaration_no_options copy_or_move_or_clone expr "end of expression" .

    $default  reduce using rule 532 (global_let_variable_declaration)


State 1121

  746 make_struct_decl: "struct" '<' $@73 type_declaration_no_options '>' . $@74 '(' use_initializer optional_make_struct_dim_decl ')'

    $default  reduce using rule 745 ($@74)

    $@74  go to state 1223


State 1122

  749 make_struct_decl: "class" '<' $@75 type_declaration_no_options '>' . $@76 '(' use_initializer optional_make_struct_dim_decl ')'

    $default  reduce using rule 748 ($@76)

    $@76  go to state 1224


State 1123

  249 new_type_declaration: '<' $@3 type_declaration '>' . $@4

    $default  reduce using rule 248 ($@4)

    $@4  go to state 1225


State 1124

  255 expr_new: "new" new_type_declaration '(' "uninitialized" make_struct_single . ')'

    ')'  shift, and go to state 1226


State 1125

  253 expr_new: "new" new_type_declaration '(' expr_list ')' .

    $default  reduce using rule 253 (expr_new)


State 1126

  254 expr_new: "new" new_type_declaration '(' make_struct_single ')' .

    $default  reduce using rule 254 (expr_new)


State 1127

  252 expr_new: "new" new_type_declaration '(' use_initializer ')' .

    $default  reduce using rule 252 (expr_new)


State 1128

  292 expr_type_info: "typeinfo" name_in_namespace '<' "name" '>' . '(' expr ')'

    '('  shift, and go to state 1227


State 1129

  293 expr_type_info: "typeinfo" name_in_namespace '<' "name" c_or_s . "name" '>' '(' expr ')'

    "name"  shift, and go to state 1228


State 1130

  291 expr_type_info: "typeinfo" name_in_namespace '(' expr ')' .

    $default  reduce using rule 291 (expr_type_info)


State 1131

  290 expr_type_decl: "type" '<' $@11 type_declaration '>' . $@12

    $default  reduce using rule 289 ($@12)

    $@12  go to state 1229


State 1132

  765 make_dim_decl: "array" "struct" '<' $@83 type_declaration_no_options . '>' $@84 '(' use_initializer optional_make_struct_dim_decl ')'

    '>'  shift, and go to state 1230


State 1133

  768 make_dim_decl: "array" "tuple" '<' $@85 type_declaration_no_options . '>' $@86 '(' use_initializer optional_make_struct_dim_decl ')'

    '>'  shift, and go to state 1231


State 1134

  771 make_dim_decl: "array" "variant" '<' $@87 type_declaration_no_options . '>' $@88 '(' make_variant_dim ')'

    '>'  shift, and go to state 1232


State 1135

  775 make_dim_decl: "array" '<' $@89 type_declaration_no_options '>' . $@90 '(' optional_expr_list ')'

    $default  reduce using rule 774 ($@90)

    $@90  go to state 1233


State 1136

  772 make_dim_decl: "array" '(' expr_list optional_comma ')' .

    $default  reduce using rule 772 (make_dim_decl)


State 1137

  784 make_table_decl: "table" '<' type_declaration_no_options '>' '(' . optional_expr_map_tuple_list ')'

    "struct"                          shift, and go to state 409
    "class"                           shift, and go to state 410
    "true"                            shift, and go to state 411
    "false"                           shift, and go to state 412
    "new"                             shift, and go to state 413
    "typeinfo"                        shift, and go to state 414
    "type"                            shift, and go to state 415
    "array"                           shift, and go to state 416
    "null"                            shift, and go to state 417
    "table"                           shift, and go to state 418
    "deref"                           shift, and go to state 419
    "cast"                            shift, and go to state 420
    "upcast"                          shift, and go to state 421
    "addr"                            shift, and go to state 422
    "reinterpret"                     shift, and go to state 423
    "unsafe"                          shift, and go to state 424
    "fixed_array"                     shift, and go to state 425
    "default"                         shift, and go to state 426
    "bool"                            shift, and go to state 225
    "void"                            shift, and go to state 226
    "string"                          shift, and go to state 227
    "int"                             shift, and go to state 229
    "int2"                            shift, and go to state 230
    "int3"                            shift, and go to state 231
    "int4"                            shift, and go to state 232
    "uint"                            shift, and go to state 233
    "bitfield"                        shift, and go to state 427
    "uint2"                           shift, and go to state 235
    "uint3"                           shift, and go to state 236
    "uint4"                           shift, and go to state 237
    "float"                           shift, and go to state 238
    "float2"                          shift, and go to state 239
    "float3"                          shift, and go to state 240
    "float4"                          shift, and go to state 241
    "range"                           shift, and go to state 242
    "urange"                          shift, and go to state 243
    "range64"                         shift, and go to state 244
    "urange64"                        shift, and go to state 245
    "int64"                           shift, and go to state 247
    "uint64"                          shift, and go to state 248
    "double"                          shift, and go to state 249
    "int8"                            shift, and go to state 252
    "uint8"                           shift, and go to state 253
    "int16"                           shift, and go to state 254
    "uint16"                          shift, and go to state 255
    "tuple"                           shift, and go to state 428
    "variant"                         shift, and go to state 429
    "generator"                       shift, and go to state 430
    "++"                              shift, and go to state 431
    "--"                              shift, and go to state 432
    "::"                              shift, and go to state 55
    "$$"                              shift, and go to state 433
    "$i"                              shift, and go to state 434
    "$v"                              shift, and go to state 435
    "$b"                              shift, and go to state 436
    "$a"                              shift, and go to state 437
    "$c"                              shift, and go to state 438
    "..."                             shift, and go to state 439
    "integer constant"                shift, and go to state 440
    "long integer constant"           shift, and go to state 441
    "unsigned integer constant"       shift, and go to state 442
    "unsigned long integer constant"  shift, and go to state 443
    "unsigned int8 constant"          shift, and go to state 444
    "floating point constant"         shift, and go to state 445
    "double constant"                 shift, and go to state 446
    "name"                            shift, and go to state 56
    "start of the string"             shift, and go to state 447
    "begin of code block"             shift, and go to state 448
    '-'                               shift, and go to state 449
    '+'                               shift, and go to state 450
    '*'                               shift, and go to state 451
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 452
    '!'                               shift, and go to state 453
    '['                               shift, and go to state 454
    '('                               shift, and go to state 455
    '$'                               shift, and go to state 456
    '@'                               shift, and go to state 457

    $default  reduce using rule 238 (optional_expr_map_tuple_list)

    string_builder                go to state 458
    expr_reader                   go to state 459
    expr_call_pipe                go to state 460
    optional_expr_map_tuple_list  go to state 1234
    name_in_namespace             go to state 461
    expr_new                      go to state 462
    expr_cast                     go to state 463
    expr_type_decl                go to state 464
    expr_type_info                go to state 465
    block_or_lambda               go to state 466
    expr_full_block               go to state 467
    expr_numeric_const            go to state 468
    expr_named_call               go to state 469
    expr_method_call              go to state 470
    func_addr_expr                go to state 471
    expr_field                    go to state 472
    expr_call                     go to state 473
    expr                          go to state 628
    expr_mtag                     go to state 475
    basic_type_declaration        go to state 476
    make_decl                     go to state 477
    make_struct_decl              go to state 478
    make_map_tuple                go to state 629
    make_tuple_call               go to state 479
    make_dim_decl                 go to state 480
    expr_map_tuple_list           go to state 1235
    make_table_decl               go to state 481
    array_comprehension           go to state 482


State 1138

  785 make_table_decl: "table" '<' type_declaration_no_options c_or_s type_declaration_no_options . '>' '(' optional_expr_map_tuple_list ')'

    '>'  shift, and go to state 1236


State 1139

  783 make_table_decl: "table" '(' expr_map_tuple_list optional_comma ')' .

    $default  reduce using rule 783 (make_table_decl)


State 1140

  281 expr_cast: "cast" '<' $@5 type_declaration_no_options '>' . $@6 expr

    $default  reduce using rule 280 ($@6)

    $@6  go to state 1237


State 1141

  284 expr_cast: "upcast" '<' $@7 type_declaration_no_options '>' . $@8 expr

    $default  reduce using rule 283 ($@8)

    $@8  go to state 1238


State 1142

  287 expr_cast: "reinterpret" '<' $@9 type_declaration_no_options '>' . $@10 expr

    $default  reduce using rule 286 ($@10)

    $@10  go to state 1239


State 1143

  779 make_dim_decl: "fixed_array" '<' $@91 type_declaration_no_options '>' . $@92 '(' expr_list optional_comma ')'

    $default  reduce using rule 778 ($@92)

    $@92  go to state 1240


State 1144

  776 make_dim_decl: "fixed_array" '(' expr_list optional_comma ')' .

    $default  reduce using rule 776 (make_dim_decl)


State 1145

  755 make_struct_decl: "default" '<' $@79 type_declaration_no_options '>' . $@80 use_initializer

    $default  reduce using rule 754 ($@80)

    $@80  go to state 1241


State 1146

  761 make_tuple_call: "tuple" '<' $@81 type_declaration_no_options '>' . $@82 '(' use_initializer optional_make_struct_dim_decl ')'

    $default  reduce using rule 760 ($@82)

    $@82  go to state 1242


State 1147

  758 make_tuple_call: "tuple" '(' expr_list optional_comma ')' .

    $default  reduce using rule 758 (make_tuple_call)


State 1148

  752 make_struct_decl: "variant" '<' $@77 type_declaration_no_options '>' . $@78 '(' make_variant_dim ')'

    $default  reduce using rule 751 ($@78)

    $@78  go to state 1243


State 1149

  421 expr: "generator" '<' type_declaration_no_options '>' optional_capture_list . '(' ')'
  422     | "generator" '<' type_declaration_no_options '>' optional_capture_list . '(' expr ')'
  423     | "generator" '<' type_declaration_no_options '>' optional_capture_list . expression_block

    "begin of code block"  shift, and go to state 326
    '('                    shift, and go to state 1244

    expression_block  go to state 1245


State 1150

  459 expr_mtag: "$c" '(' expr ')' '(' . ')'
  460          | "$c" '(' expr ')' '(' . expr_list ')'

    "struct"                          shift, and go to state 409
    "class"                           shift, and go to state 410
    "true"                            shift, and go to state 411
    "false"                           shift, and go to state 412
    "new"                             shift, and go to state 413
    "typeinfo"                        shift, and go to state 414
    "type"                            shift, and go to state 415
    "array"                           shift, and go to state 416
    "null"                            shift, and go to state 417
    "table"                           shift, and go to state 418
    "deref"                           shift, and go to state 419
    "cast"                            shift, and go to state 420
    "upcast"                          shift, and go to state 421
    "addr"                            shift, and go to state 422
    "reinterpret"                     shift, and go to state 423
    "unsafe"                          shift, and go to state 424
    "fixed_array"                     shift, and go to state 425
    "default"                         shift, and go to state 426
    "bool"                            shift, and go to state 225
    "void"                            shift, and go to state 226
    "string"                          shift, and go to state 227
    "int"                             shift, and go to state 229
    "int2"                            shift, and go to state 230
    "int3"                            shift, and go to state 231
    "int4"                            shift, and go to state 232
    "uint"                            shift, and go to state 233
    "bitfield"                        shift, and go to state 427
    "uint2"                           shift, and go to state 235
    "uint3"                           shift, and go to state 236
    "uint4"                           shift, and go to state 237
    "float"                           shift, and go to state 238
    "float2"                          shift, and go to state 239
    "float3"                          shift, and go to state 240
    "float4"                          shift, and go to state 241
    "range"                           shift, and go to state 242
    "urange"                          shift, and go to state 243
    "range64"                         shift, and go to state 244
    "urange64"                        shift, and go to state 245
    "int64"                           shift, and go to state 247
    "uint64"                          shift, and go to state 248
    "double"                          shift, and go to state 249
    "int8"                            shift, and go to state 252
    "uint8"                           shift, and go to state 253
    "int16"                           shift, and go to state 254
    "uint16"                          shift, and go to state 255
    "tuple"                           shift, and go to state 428
    "variant"                         shift, and go to state 429
    "generator"                       shift, and go to state 430
    "++"                              shift, and go to state 431
    "--"                              shift, and go to state 432
    "::"                              shift, and go to state 55
    "$$"                              shift, and go to state 433
    "$i"                              shift, and go to state 434
    "$v"                              shift, and go to state 435
    "$b"                              shift, and go to state 436
    "$a"                              shift, and go to state 437
    "$c"                              shift, and go to state 438
    "..."                             shift, and go to state 439
    "integer constant"                shift, and go to state 440
    "long integer constant"           shift, and go to state 441
    "unsigned integer constant"       shift, and go to state 442
    "unsigned long integer constant"  shift, and go to state 443
    "unsigned int8 constant"          shift, and go to state 444
    "floating point constant"         shift, and go to state 445
    "double constant"                 shift, and go to state 446
    "name"                            shift, and go to state 56
    "start of the string"             shift, and go to state 447
    "begin of code block"             shift, and go to state 448
    '-'                               shift, and go to state 449
    '+'                               shift, and go to state 450
    '*'                               shift, and go to state 451
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 452
    '!'                               shift, and go to state 453
    '['                               shift, and go to state 454
    '('                               shift, and go to state 455
    ')'                               shift, and go to state 1246
    '$'                               shift, and go to state 456
    '@'                               shift, and go to state 457

    string_builder          go to state 458
    expr_reader             go to state 459
    expr_call_pipe          go to state 460
    name_in_namespace       go to state 461
    expr_new                go to state 462
    expr_cast               go to state 463
    expr_type_decl          go to state 464
    expr_type_info          go to state 465
    expr_list               go to state 1247
    block_or_lambda         go to state 466
    expr_full_block         go to state 467
    expr_numeric_const      go to state 468
    expr_named_call         go to state 469
    expr_method_call        go to state 470
    func_addr_expr          go to state 471
    expr_field              go to state 472
    expr_call               go to state 473
    expr                    go to state 639
    expr_mtag               go to state 475
    basic_type_declaration  go to state 476
    make_decl               go to state 477
    make_struct_decl        go to state 478
    make_tuple_call         go to state 479
    make_dim_decl           go to state 480
    make_table_decl         go to state 481
    array_comprehension     go to state 482


State 1151

   31 string_builder_body: string_builder_body "{" expr "}" .

    $default  reduce using rule 31 (string_builder_body)


State 1152

  792 array_comprehension: "begin of code block" "for" '(' variable_name_with_pos_list "in" . expr_list ')' "end of expression" make_map_tuple array_comprehension_where "end of code block"

    "struct"                          shift, and go to state 409
    "class"                           shift, and go to state 410
    "true"                            shift, and go to state 411
    "false"                           shift, and go to state 412
    "new"                             shift, and go to state 413
    "typeinfo"                        shift, and go to state 414
    "type"                            shift, and go to state 415
    "array"                           shift, and go to state 416
    "null"                            shift, and go to state 417
    "table"                           shift, and go to state 418
    "deref"                           shift, and go to state 419
    "cast"                            shift, and go to state 420
    "upcast"                          shift, and go to state 421
    "addr"                            shift, and go to state 422
    "reinterpret"                     shift, and go to state 423
    "unsafe"                          shift, and go to state 424
    "fixed_array"                     shift, and go to state 425
    "default"                         shift, and go to state 426
    "bool"                            shift, and go to state 225
    "void"                            shift, and go to state 226
    "string"                          shift, and go to state 227
    "int"                             shift, and go to state 229
    "int2"                            shift, and go to state 230
    "int3"                            shift, and go to state 231
    "int4"                            shift, and go to state 232
    "uint"                            shift, and go to state 233
    "bitfield"                        shift, and go to state 427
    "uint2"                           shift, and go to state 235
    "uint3"                           shift, and go to state 236
    "uint4"                           shift, and go to state 237
    "float"                           shift, and go to state 238
    "float2"                          shift, and go to state 239
    "float3"                          shift, and go to state 240
    "float4"                          shift, and go to state 241
    "range"                           shift, and go to state 242
    "urange"                          shift, and go to state 243
    "range64"                         shift, and go to state 244
    "urange64"                        shift, and go to state 245
    "int64"                           shift, and go to state 247
    "uint64"                          shift, and go to state 248
    "double"                          shift, and go to state 249
    "int8"                            shift, and go to state 252
    "uint8"                           shift, and go to state 253
    "int16"                           shift, and go to state 254
    "uint16"                          shift, and go to state 255
    "tuple"                           shift, and go to state 428
    "variant"                         shift, and go to state 429
    "generator"                       shift, and go to state 430
    "++"                              shift, and go to state 431
    "--"                              shift, and go to state 432
    "::"                              shift, and go to state 55
    "$$"                              shift, and go to state 433
    "$i"                              shift, and go to state 434
    "$v"                              shift, and go to state 435
    "$b"                              shift, and go to state 436
    "$a"                              shift, and go to state 437
    "$c"                              shift, and go to state 438
    "..."                             shift, and go to state 439
    "integer constant"                shift, and go to state 440
    "long integer constant"           shift, and go to state 441
    "unsigned integer constant"       shift, and go to state 442
    "unsigned long integer constant"  shift, and go to state 443
    "unsigned int8 constant"          shift, and go to state 444
    "floating point constant"         shift, and go to state 445
    "double constant"                 shift, and go to state 446
    "name"                            shift, and go to state 56
    "start of the string"             shift, and go to state 447
    "begin of code block"             shift, and go to state 448
    '-'                               shift, and go to state 449
    '+'                               shift, and go to state 450
    '*'                               shift, and go to state 451
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 452
    '!'                               shift, and go to state 453
    '['                               shift, and go to state 454
    '('                               shift, and go to state 455
    '$'                               shift, and go to state 456
    '@'                               shift, and go to state 457

    string_builder          go to state 458
    expr_reader             go to state 459
    expr_call_pipe          go to state 460
    name_in_namespace       go to state 461
    expr_new                go to state 462
    expr_cast               go to state 463
    expr_type_decl          go to state 464
    expr_type_info          go to state 465
    expr_list               go to state 1248
    block_or_lambda         go to state 466
    expr_full_block         go to state 467
    expr_numeric_const      go to state 468
    expr_named_call         go to state 469
    expr_method_call        go to state 470
    func_addr_expr          go to state 471
    expr_field              go to state 472
    expr_call               go to state 473
    expr                    go to state 639
    expr_mtag               go to state 475
    basic_type_declaration  go to state 476
    make_decl               go to state 477
    make_struct_decl        go to state 478
    make_tuple_call         go to state 479
    make_dim_decl           go to state 480
    make_table_decl         go to state 481
    array_comprehension     go to state 482


State 1153

  790 array_comprehension: '[' "for" '(' variable_name_with_pos_list "in" . expr_list ')' "end of expression" expr array_comprehension_where ']'

    "struct"                          shift, and go to state 409
    "class"                           shift, and go to state 410
    "true"                            shift, and go to state 411
    "false"                           shift, and go to state 412
    "new"                             shift, and go to state 413
    "typeinfo"                        shift, and go to state 414
    "type"                            shift, and go to state 415
    "array"                           shift, and go to state 416
    "null"                            shift, and go to state 417
    "table"                           shift, and go to state 418
    "deref"                           shift, and go to state 419
    "cast"                            shift, and go to state 420
    "upcast"                          shift, and go to state 421
    "addr"                            shift, and go to state 422
    "reinterpret"                     shift, and go to state 423
    "unsafe"                          shift, and go to state 424
    "fixed_array"                     shift, and go to state 425
    "default"                         shift, and go to state 426
    "bool"                            shift, and go to state 225
    "void"                            shift, and go to state 226
    "string"                          shift, and go to state 227
    "int"                             shift, and go to state 229
    "int2"                            shift, and go to state 230
    "int3"                            shift, and go to state 231
    "int4"                            shift, and go to state 232
    "uint"                            shift, and go to state 233
    "bitfield"                        shift, and go to state 427
    "uint2"                           shift, and go to state 235
    "uint3"                           shift, and go to state 236
    "uint4"                           shift, and go to state 237
    "float"                           shift, and go to state 238
    "float2"                          shift, and go to state 239
    "float3"                          shift, and go to state 240
    "float4"                          shift, and go to state 241
    "range"                           shift, and go to state 242
    "urange"                          shift, and go to state 243
    "range64"                         shift, and go to state 244
    "urange64"                        shift, and go to state 245
    "int64"                           shift, and go to state 247
    "uint64"                          shift, and go to state 248
    "double"                          shift, and go to state 249
    "int8"                            shift, and go to state 252
    "uint8"                           shift, and go to state 253
    "int16"                           shift, and go to state 254
    "uint16"                          shift, and go to state 255
    "tuple"                           shift, and go to state 428
    "variant"                         shift, and go to state 429
    "generator"                       shift, and go to state 430
    "++"                              shift, and go to state 431
    "--"                              shift, and go to state 432
    "::"                              shift, and go to state 55
    "$$"                              shift, and go to state 433
    "$i"                              shift, and go to state 434
    "$v"                              shift, and go to state 435
    "$b"                              shift, and go to state 436
    "$a"                              shift, and go to state 437
    "$c"                              shift, and go to state 438
    "..."                             shift, and go to state 439
    "integer constant"                shift, and go to state 440
    "long integer constant"           shift, and go to state 441
    "unsigned integer constant"       shift, and go to state 442
    "unsigned long integer constant"  shift, and go to state 443
    "unsigned int8 constant"          shift, and go to state 444
    "floating point constant"         shift, and go to state 445
    "double constant"                 shift, and go to state 446
    "name"                            shift, and go to state 56
    "start of the string"             shift, and go to state 447
    "begin of code block"             shift, and go to state 448
    '-'                               shift, and go to state 449
    '+'                               shift, and go to state 450
    '*'                               shift, and go to state 451
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 452
    '!'                               shift, and go to state 453
    '['                               shift, and go to state 454
    '('                               shift, and go to state 455
    '$'                               shift, and go to state 456
    '@'                               shift, and go to state 457

    string_builder          go to state 458
    expr_reader             go to state 459
    expr_call_pipe          go to state 460
    name_in_namespace       go to state 461
    expr_new                go to state 462
    expr_cast               go to state 463
    expr_type_decl          go to state 464
    expr_type_info          go to state 465
    expr_list               go to state 1249
    block_or_lambda         go to state 466
    expr_full_block         go to state 467
    expr_numeric_const      go to state 468
    expr_named_call         go to state 469
    expr_method_call        go to state 470
    func_addr_expr          go to state 471
    expr_field              go to state 472
    expr_call               go to state 473
    expr                    go to state 639
    expr_mtag               go to state 475
    basic_type_declaration  go to state 476
    make_decl               go to state 477
    make_struct_decl        go to state 478
    make_tuple_call         go to state 479
    make_dim_decl           go to state 480
    make_table_decl         go to state 481
    array_comprehension     go to state 482


State 1154

  584 variable_name_with_pos_list: variable_name_with_pos_list . ',' "name"
  585                            | variable_name_with_pos_list . ',' "name" "aka" "name"
  791 array_comprehension: '[' "iterator" "for" '(' variable_name_with_pos_list . "in" expr_list ')' "end of expression" expr array_comprehension_where ']'

    "in"  shift, and go to state 1250
    ','   shift, and go to state 928


State 1155

  342 expr_method_call: expr . "->" "name" '(' ')'
  343                 | expr . "->" "name" '(' expr_list ')'
  345 func_addr_name: "$i" '(' expr . ')'
  353 expr_field: expr . '.' "name"
  354           | expr . '.' '.' "name"
  355           | expr . '.' "name" '(' ')'
  356           | expr . '.' "name" '(' expr_list ')'
  357           | expr . '.' basic_type_declaration '(' ')'
  358           | expr . '.' basic_type_declaration '(' expr_list ')'
  361           | expr . '.' $@17 error $@18
  383 expr: expr . "<<" expr
  384     | expr . ">>" expr
  385     | expr . "<<<" expr
  386     | expr . ">>>" expr
  387     | expr . '+' expr
  388     | expr . '-' expr
  389     | expr . '*' expr
  390     | expr . '/' expr
  391     | expr . '%' expr
  392     | expr . '<' expr
  393     | expr . '>' expr
  394     | expr . "==" expr
  395     | expr . "!=" expr
  396     | expr . "<=" expr
  397     | expr . ">=" expr
  398     | expr . '&' expr
  399     | expr . '|' expr
  400     | expr . '^' expr
  401     | expr . "&&" expr
  402     | expr . "||" expr
  403     | expr . "^^" expr
  404     | expr . ".." expr
  407     | expr . "++"
  408     | expr . "--"
  410     | expr . '[' expr ']'
  411     | expr . '.' '[' expr ']'
  412     | expr . "?[" expr ']'
  413     | expr . '.' "?[" expr ']'
  414     | expr . "?." "name"
  415     | expr . '.' "?." "name"
  424     | expr . "??" expr
  425     | expr . '?' expr ':' expr
  428     | expr . "is" "type" '<' $@19 type_declaration_no_options '>' $@20
  429     | expr . "is" basic_type_declaration
  430     | expr . "is" "name"
  431     | expr . "as" "name"
  434     | expr . "as" "type" '<' $@21 type_declaration '>' $@22
  435     | expr . "as" basic_type_declaration
  436     | expr . '?' "as" "name"
  439     | expr . '?' "as" "type" '<' $@23 type_declaration '>' $@24
  440     | expr . '?' "as" basic_type_declaration
  448     | expr . "<|" expr
  449     | expr . "|>" expr
  450     | expr . "|>" basic_type_declaration
  461 expr_mtag: expr . '.' "$f" '(' expr ')'
  462          | expr . "?." "$f" '(' expr ')'
  463          | expr . '.' '.' "$f" '(' expr ')'
  464          | expr . '.' "?." "$f" '(' expr ')'
  465          | expr . "as" "$f" '(' expr ')'
  466          | expr . '?' "as" "$f" '(' expr ')'
  467          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 648
    "as"   shift, and go to state 649
    "<<"   shift, and go to state 650
    ">>"   shift, and go to state 651
    "++"   shift, and go to state 652
    "--"   shift, and go to state 653
    "<="   shift, and go to state 654
    ">="   shift, and go to state 655
    "=="   shift, and go to state 656
    "!="   shift, and go to state 657
    "->"   shift, and go to state 658
    "??"   shift, and go to state 659
    "?."   shift, and go to state 660
    "?["   shift, and go to state 661
    "<|"   shift, and go to state 662
    "|>"   shift, and go to state 663
    "<<<"  shift, and go to state 664
    ">>>"  shift, and go to state 665
    "&&"   shift, and go to state 666
    "||"   shift, and go to state 667
    "^^"   shift, and go to state 668
    ".."   shift, and go to state 669
    '?'    shift, and go to state 670
    '|'    shift, and go to state 671
    '^'    shift, and go to state 672
    '&'    shift, and go to state 673
    '<'    shift, and go to state 674
    '>'    shift, and go to state 675
    '-'    shift, and go to state 676
    '+'    shift, and go to state 677
    '*'    shift, and go to state 678
    '/'    shift, and go to state 679
    '%'    shift, and go to state 680
    '.'    shift, and go to state 681
    '['    shift, and go to state 682
    ')'    shift, and go to state 1251


State 1156

  342 expr_method_call: expr . "->" "name" '(' ')'
  343                 | expr . "->" "name" '(' expr_list ')'
  353 expr_field: expr . '.' "name"
  354           | expr . '.' '.' "name"
  355           | expr . '.' "name" '(' ')'
  356           | expr . '.' "name" '(' expr_list ')'
  357           | expr . '.' basic_type_declaration '(' ')'
  358           | expr . '.' basic_type_declaration '(' expr_list ')'
  361           | expr . '.' $@17 error $@18
  383 expr: expr . "<<" expr
  384     | expr . ">>" expr
  385     | expr . "<<<" expr
  386     | expr . ">>>" expr
  387     | expr . '+' expr
  388     | expr . '-' expr
  389     | expr . '*' expr
  390     | expr . '/' expr
  391     | expr . '%' expr
  392     | expr . '<' expr
  393     | expr . '>' expr
  394     | expr . "==" expr
  395     | expr . "!=" expr
  396     | expr . "<=" expr
  397     | expr . ">=" expr
  398     | expr . '&' expr
  399     | expr . '|' expr
  400     | expr . '^' expr
  401     | expr . "&&" expr
  402     | expr . "||" expr
  403     | expr . "^^" expr
  404     | expr . ".." expr
  407     | expr . "++"
  408     | expr . "--"
  410     | expr . '[' expr ']'
  411     | expr . '.' '[' expr ']'
  412     | expr . "?[" expr ']'
  413     | expr . '.' "?[" expr ']'
  414     | expr . "?." "name"
  415     | expr . '.' "?." "name"
  424     | expr . "??" expr
  425     | expr . '?' expr ':' expr
  428     | expr . "is" "type" '<' $@19 type_declaration_no_options '>' $@20
  429     | expr . "is" basic_type_declaration
  430     | expr . "is" "name"
  431     | expr . "as" "name"
  434     | expr . "as" "type" '<' $@21 type_declaration '>' $@22
  435     | expr . "as" basic_type_declaration
  436     | expr . '?' "as" "name"
  439     | expr . '?' "as" "type" '<' $@23 type_declaration '>' $@24
  440     | expr . '?' "as" basic_type_declaration
  448     | expr . "<|" expr
  449     | expr . "|>" expr
  450     | expr . "|>" basic_type_declaration
  461 expr_mtag: expr . '.' "$f" '(' expr ')'
  462          | expr . "?." "$f" '(' expr ')'
  463          | expr . '.' '.' "$f" '(' expr ')'
  464          | expr . '.' "?." "$f" '(' expr ')'
  465          | expr . "as" "$f" '(' expr ')'
  466          | expr . '?' "as" "$f" '(' expr ')'
  467          | expr . "is" "$f" '(' expr ')'
  468          | '@' '@' "$c" '(' expr . ')'

    "is"   shift, and go to state 648
    "as"   shift, and go to state 649
    "<<"   shift, and go to state 650
    ">>"   shift, and go to state 651
    "++"   shift, and go to state 652
    "--"   shift, and go to state 653
    "<="   shift, and go to state 654
    ">="   shift, and go to state 655
    "=="   shift, and go to state 656
    "!="   shift, and go to state 657
    "->"   shift, and go to state 658
    "??"   shift, and go to state 659
    "?."   shift, and go to state 660
    "?["   shift, and go to state 661
    "<|"   shift, and go to state 662
    "|>"   shift, and go to state 663
    "<<<"  shift, and go to state 664
    ">>>"  shift, and go to state 665
    "&&"   shift, and go to state 666
    "||"   shift, and go to state 667
    "^^"   shift, and go to state 668
    ".."   shift, and go to state 669
    '?'    shift, and go to state 670
    '|'    shift, and go to state 671
    '^'    shift, and go to state 672
    '&'    shift, and go to state 673
    '<'    shift, and go to state 674
    '>'    shift, and go to state 675
    '-'    shift, and go to state 676
    '+'    shift, and go to state 677
    '*'    shift, and go to state 678
    '/'    shift, and go to state 679
    '%'    shift, and go to state 680
    '.'    shift, and go to state 681
    '['    shift, and go to state 682
    ')'    shift, and go to state 1252


State 1157

  349 func_addr_expr: '@' '@' '<' $@13 type_declaration_no_options . '>' $@14 func_addr_name

    '>'  shift, and go to state 1253


State 1158

  352 func_addr_expr: '@' '@' '<' $@15 optional_function_argument_list . optional_function_type '>' $@16 func_addr_name

    ':'  shift, and go to state 392

    $default  reduce using rule 118 (optional_function_type)

    optional_function_type  go to state 1254


State 1159

  365 expr_call: name_in_namespace '(' "uninitialized" make_struct_single ')' .

    $default  reduce using rule 365 (expr_call)


State 1160

  342 expr_method_call: expr . "->" "name" '(' ')'
  343                 | expr . "->" "name" '(' expr_list ')'
  353 expr_field: expr . '.' "name"
  354           | expr . '.' '.' "name"
  355           | expr . '.' "name" '(' ')'
  356           | expr . '.' "name" '(' expr_list ')'
  357           | expr . '.' basic_type_declaration '(' ')'
  358           | expr . '.' basic_type_declaration '(' expr_list ')'
  361           | expr . '.' $@17 error $@18
  383 expr: expr . "<<" expr
  384     | expr . ">>" expr
  385     | expr . "<<<" expr
  386     | expr . ">>>" expr
  387     | expr . '+' expr
  388     | expr . '-' expr
  389     | expr . '*' expr
  390     | expr . '/' expr
  391     | expr . '%' expr
  392     | expr . '<' expr
  393     | expr . '>' expr
  394     | expr . "==" expr
  395     | expr . "!=" expr
  396     | expr . "<=" expr
  397     | expr . ">=" expr
  398     | expr . '&' expr
  399     | expr . '|' expr
  400     | expr . '^' expr
  401     | expr . "&&" expr
  402     | expr . "||" expr
  403     | expr . "^^" expr
  404     | expr . ".." expr
  407     | expr . "++"
  408     | expr . "--"
  410     | expr . '[' expr ']'
  411     | expr . '.' '[' expr ']'
  412     | expr . "?[" expr ']'
  413     | expr . '.' "?[" expr ']'
  414     | expr . "?." "name"
  415     | expr . '.' "?." "name"
  424     | expr . "??" expr
  425     | expr . '?' expr ':' expr
  428     | expr . "is" "type" '<' $@19 type_declaration_no_options '>' $@20
  429     | expr . "is" basic_type_declaration
  430     | expr . "is" "name"
  431     | expr . "as" "name"
  434     | expr . "as" "type" '<' $@21 type_declaration '>' $@22
  435     | expr . "as" basic_type_declaration
  436     | expr . '?' "as" "name"
  439     | expr . '?' "as" "type" '<' $@23 type_declaration '>' $@24
  440     | expr . '?' "as" basic_type_declaration
  448     | expr . "<|" expr
  449     | expr . "|>" expr
  450     | expr . "|>" basic_type_declaration
  461 expr_mtag: expr . '.' "$f" '(' expr ')'
  462          | expr . "?." "$f" '(' expr ')'
  463          | expr . '.' '.' "$f" '(' expr ')'
  464          | expr . '.' "?." "$f" '(' expr ')'
  465          | expr . "as" "$f" '(' expr ')'
  466          | expr . '?' "as" "$f" '(' expr ')'
  467          | expr . "is" "$f" '(' expr ')'
  730 make_struct_fields: "$f" '(' expr . ')' copy_or_move expr
  731                   | "$f" '(' expr . ')' ":=" expr

    "is"   shift, and go to state 648
    "as"   shift, and go to state 649
    "<<"   shift, and go to state 650
    ">>"   shift, and go to state 651
    "++"   shift, and go to state 652
    "--"   shift, and go to state 653
    "<="   shift, and go to state 654
    ">="   shift, and go to state 655
    "=="   shift, and go to state 656
    "!="   shift, and go to state 657
    "->"   shift, and go to state 658
    "??"   shift, and go to state 659
    "?."   shift, and go to state 660
    "?["   shift, and go to state 661
    "<|"   shift, and go to state 662
    "|>"   shift, and go to state 663
    "<<<"  shift, and go to state 664
    ">>>"  shift, and go to state 665
    "&&"   shift, and go to state 666
    "||"   shift, and go to state 667
    "^^"   shift, and go to state 668
    ".."   shift, and go to state 669
    '?'    shift, and go to state 670
    '|'    shift, and go to state 671
    '^'    shift, and go to state 672
    '&'    shift, and go to state 673
    '<'    shift, and go to state 674
    '>'    shift, and go to state 675
    '-'    shift, and go to state 676
    '+'    shift, and go to state 677
    '*'    shift, and go to state 678
    '/'    shift, and go to state 679
    '%'    shift, and go to state 680
    '.'    shift, and go to state 681
    '['    shift, and go to state 682
    ')'    shift, and go to state 1255


State 1161

  342 expr_method_call: expr . "->" "name" '(' ')'
  343                 | expr . "->" "name" '(' expr_list ')'
  353 expr_field: expr . '.' "name"
  354           | expr . '.' '.' "name"
  355           | expr . '.' "name" '(' ')'
  356           | expr . '.' "name" '(' expr_list ')'
  357           | expr . '.' basic_type_declaration '(' ')'
  358           | expr . '.' basic_type_declaration '(' expr_list ')'
  361           | expr . '.' $@17 error $@18
  383 expr: expr . "<<" expr
  384     | expr . ">>" expr
  385     | expr . "<<<" expr
  386     | expr . ">>>" expr
  387     | expr . '+' expr
  388     | expr . '-' expr
  389     | expr . '*' expr
  390     | expr . '/' expr
  391     | expr . '%' expr
  392     | expr . '<' expr
  393     | expr . '>' expr
  394     | expr . "==" expr
  395     | expr . "!=" expr
  396     | expr . "<=" expr
  397     | expr . ">=" expr
  398     | expr . '&' expr
  399     | expr . '|' expr
  400     | expr . '^' expr
  401     | expr . "&&" expr
  402     | expr . "||" expr
  403     | expr . "^^" expr
  404     | expr . ".." expr
  407     | expr . "++"
  408     | expr . "--"
  410     | expr . '[' expr ']'
  411     | expr . '.' '[' expr ']'
  412     | expr . "?[" expr ']'
  413     | expr . '.' "?[" expr ']'
  414     | expr . "?." "name"
  415     | expr . '.' "?." "name"
  424     | expr . "??" expr
  425     | expr . '?' expr ':' expr
  428     | expr . "is" "type" '<' $@19 type_declaration_no_options '>' $@20
  429     | expr . "is" basic_type_declaration
  430     | expr . "is" "name"
  431     | expr . "as" "name"
  434     | expr . "as" "type" '<' $@21 type_declaration '>' $@22
  435     | expr . "as" basic_type_declaration
  436     | expr . '?' "as" "name"
  439     | expr . '?' "as" "type" '<' $@23 type_declaration '>' $@24
  440     | expr . '?' "as" basic_type_declaration
  448     | expr . "<|" expr
  449     | expr . "|>" expr
  450     | expr . "|>" basic_type_declaration
  461 expr_mtag: expr . '.' "$f" '(' expr ')'
  462          | expr . "?." "$f" '(' expr ')'
  463          | expr . '.' '.' "$f" '(' expr ')'
  464          | expr . '.' "?." "$f" '(' expr ')'
  465          | expr . "as" "$f" '(' expr ')'
  466          | expr . '?' "as" "$f" '(' expr ')'
  467          | expr . "is" "$f" '(' expr ')'
  727 make_struct_fields: "name" ":=" expr .

    "is"   shift, and go to state 648
    "as"   shift, and go to state 649
    "<<"   shift, and go to state 650
    ">>"   shift, and go to state 651
    "++"   shift, and go to state 652
    "--"   shift, and go to state 653
    "<="   shift, and go to state 654
    ">="   shift, and go to state 655
    "=="   shift, and go to state 656
    "!="   shift, and go to state 657
    "->"   shift, and go to state 658
    "??"   shift, and go to state 659
    "?."   shift, and go to state 660
    "?["   shift, and go to state 661
    "<|"   shift, and go to state 662
    "|>"   shift, and go to state 663
    "<<<"  shift, and go to state 664
    ">>>"  shift, and go to state 665
    "&&"   shift, and go to state 666
    "||"   shift, and go to state 667
    "^^"   shift, and go to state 668
    ".."   shift, and go to state 669
    '?'    shift, and go to state 670
    '|'    shift, and go to state 671
    '^'    shift, and go to state 672
    '&'    shift, and go to state 673
    '<'    shift, and go to state 674
    '>'    shift, and go to state 675
    '-'    shift, and go to state 676
    '+'    shift, and go to state 677
    '*'    shift, and go to state 678
    '/'    shift, and go to state 679
    '%'    shift, and go to state 680
    '.'    shift, and go to state 681
    '['    shift, and go to state 682

    $default  reduce using rule 727 (make_struct_fields)


State 1162

  342 expr_method_call: expr . "->" "name" '(' ')'
  343                 | expr . "->" "name" '(' expr_list ')'
  353 expr_field: expr . '.' "name"
  354           | expr . '.' '.' "name"
  355           | expr . '.' "name" '(' ')'
  356           | expr . '.' "name" '(' expr_list ')'
  357           | expr . '.' basic_type_declaration '(' ')'
  358           | expr . '.' basic_type_declaration '(' expr_list ')'
  361           | expr . '.' $@17 error $@18
  383 expr: expr . "<<" expr
  384     | expr . ">>" expr
  385     | expr . "<<<" expr
  386     | expr . ">>>" expr
  387     | expr . '+' expr
  388     | expr . '-' expr
  389     | expr . '*' expr
  390     | expr . '/' expr
  391     | expr . '%' expr
  392     | expr . '<' expr
  393     | expr . '>' expr
  394     | expr . "==" expr
  395     | expr . "!=" expr
  396     | expr . "<=" expr
  397     | expr . ">=" expr
  398     | expr . '&' expr
  399     | expr . '|' expr
  400     | expr . '^' expr
  401     | expr . "&&" expr
  402     | expr . "||" expr
  403     | expr . "^^" expr
  404     | expr . ".." expr
  407     | expr . "++"
  408     | expr . "--"
  410     | expr . '[' expr ']'
  411     | expr . '.' '[' expr ']'
  412     | expr . "?[" expr ']'
  413     | expr . '.' "?[" expr ']'
  414     | expr . "?." "name"
  415     | expr . '.' "?." "name"
  424     | expr . "??" expr
  425     | expr . '?' expr ':' expr
  428     | expr . "is" "type" '<' $@19 type_declaration_no_options '>' $@20
  429     | expr . "is" basic_type_declaration
  430     | expr . "is" "name"
  431     | expr . "as" "name"
  434     | expr . "as" "type" '<' $@21 type_declaration '>' $@22
  435     | expr . "as" basic_type_declaration
  436     | expr . '?' "as" "name"
  439     | expr . '?' "as" "type" '<' $@23 type_declaration '>' $@24
  440     | expr . '?' "as" basic_type_declaration
  448     | expr . "<|" expr
  449     | expr . "|>" expr
  450     | expr . "|>" basic_type_declaration
  461 expr_mtag: expr . '.' "$f" '(' expr ')'
  462          | expr . "?." "$f" '(' expr ')'
  463          | expr . '.' '.' "$f" '(' expr ')'
  464          | expr . '.' "?." "$f" '(' expr ')'
  465          | expr . "as" "$f" '(' expr ')'
  466          | expr . '?' "as" "$f" '(' expr ')'
  467          | expr . "is" "$f" '(' expr ')'
  726 make_struct_fields: "name" copy_or_move expr .

    "is"   shift, and go to state 648
    "as"   shift, and go to state 649
    "<<"   shift, and go to state 650
    ">>"   shift, and go to state 651
    "++"   shift, and go to state 652
    "--"   shift, and go to state 653
    "<="   shift, and go to state 654
    ">="   shift, and go to state 655
    "=="   shift, and go to state 656
    "!="   shift, and go to state 657
    "->"   shift, and go to state 658
    "??"   shift, and go to state 659
    "?."   shift, and go to state 660
    "?["   shift, and go to state 661
    "<|"   shift, and go to state 662
    "|>"   shift, and go to state 663
    "<<<"  shift, and go to state 664
    ">>>"  shift, and go to state 665
    "&&"   shift, and go to state 666
    "||"   shift, and go to state 667
    "^^"   shift, and go to state 668
    ".."   shift, and go to state 669
    '?'    shift, and go to state 670
    '|'    shift, and go to state 671
    '^'    shift, and go to state 672
    '&'    shift, and go to state 673
    '<'    shift, and go to state 674
    '>'    shift, and go to state 675
    '-'    shift, and go to state 676
    '+'    shift, and go to state 677
    '*'    shift, and go to state 678
    '/'    shift, and go to state 679
    '%'    shift, and go to state 680
    '.'    shift, and go to state 681
    '['    shift, and go to state 682

    $default  reduce using rule 726 (make_struct_fields)


State 1163

  340 expr_named_call: name_in_namespace '(' '[' make_struct_fields ']' . ')'

    ')'  shift, and go to state 1256


State 1164

  341 expr_named_call: name_in_namespace '(' expr_list ',' '[' . make_struct_fields ']' ')'
  762 make_dim_decl: '[' . expr_list optional_comma ']'
  790 array_comprehension: '[' . "for" '(' variable_name_with_pos_list "in" expr_list ')' "end of expression" expr array_comprehension_where ']'
  791                    | '[' . "iterator" "for" '(' variable_name_with_pos_list "in" expr_list ')' "end of expression" expr array_comprehension_where ']'

    "struct"                          shift, and go to state 409
    "class"                           shift, and go to state 410
    "for"                             shift, and go to state 636
    "true"                            shift, and go to state 411
    "false"                           shift, and go to state 412
    "new"                             shift, and go to state 413
    "typeinfo"                        shift, and go to state 414
    "type"                            shift, and go to state 415
    "array"                           shift, and go to state 416
    "null"                            shift, and go to state 417
    "table"                           shift, and go to state 418
    "deref"                           shift, and go to state 419
    "cast"                            shift, and go to state 420
    "upcast"                          shift, and go to state 421
    "iterator"                        shift, and go to state 637
    "addr"                            shift, and go to state 422
    "reinterpret"                     shift, and go to state 423
    "unsafe"                          shift, and go to state 424
    "fixed_array"                     shift, and go to state 425
    "default"                         shift, and go to state 426
    "bool"                            shift, and go to state 225
    "void"                            shift, and go to state 226
    "string"                          shift, and go to state 227
    "int"                             shift, and go to state 229
    "int2"                            shift, and go to state 230
    "int3"                            shift, and go to state 231
    "int4"                            shift, and go to state 232
    "uint"                            shift, and go to state 233
    "bitfield"                        shift, and go to state 427
    "uint2"                           shift, and go to state 235
    "uint3"                           shift, and go to state 236
    "uint4"                           shift, and go to state 237
    "float"                           shift, and go to state 238
    "float2"                          shift, and go to state 239
    "float3"                          shift, and go to state 240
    "float4"                          shift, and go to state 241
    "range"                           shift, and go to state 242
    "urange"                          shift, and go to state 243
    "range64"                         shift, and go to state 244
    "urange64"                        shift, and go to state 245
    "int64"                           shift, and go to state 247
    "uint64"                          shift, and go to state 248
    "double"                          shift, and go to state 249
    "int8"                            shift, and go to state 252
    "uint8"                           shift, and go to state 253
    "int16"                           shift, and go to state 254
    "uint16"                          shift, and go to state 255
    "tuple"                           shift, and go to state 428
    "variant"                         shift, and go to state 429
    "generator"                       shift, and go to state 430
    "++"                              shift, and go to state 431
    "--"                              shift, and go to state 432
    "::"                              shift, and go to state 55
    "$$"                              shift, and go to state 433
    "$i"                              shift, and go to state 434
    "$v"                              shift, and go to state 435
    "$b"                              shift, and go to state 436
    "$a"                              shift, and go to state 437
    "$c"                              shift, and go to state 438
    "$f"                              shift, and go to state 839
    "..."                             shift, and go to state 439
    "integer constant"                shift, and go to state 440
    "long integer constant"           shift, and go to state 441
    "unsigned integer constant"       shift, and go to state 442
    "unsigned long integer constant"  shift, and go to state 443
    "unsigned int8 constant"          shift, and go to state 444
    "floating point constant"         shift, and go to state 445
    "double constant"                 shift, and go to state 446
    "name"                            shift, and go to state 840
    "start of the string"             shift, and go to state 447
    "begin of code block"             shift, and go to state 448
    '-'                               shift, and go to state 449
    '+'                               shift, and go to state 450
    '*'                               shift, and go to state 451
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 452
    '!'                               shift, and go to state 453
    '['                               shift, and go to state 454
    '('                               shift, and go to state 455
    '$'                               shift, and go to state 456
    '@'                               shift, and go to state 457

    string_builder          go to state 458
    expr_reader             go to state 459
    expr_call_pipe          go to state 460
    name_in_namespace       go to state 461
    expr_new                go to state 462
    expr_cast               go to state 463
    expr_type_decl          go to state 464
    expr_type_info          go to state 465
    expr_list               go to state 638
    block_or_lambda         go to state 466
    expr_full_block         go to state 467
    expr_numeric_const      go to state 468
    expr_named_call         go to state 469
    expr_method_call        go to state 470
    func_addr_expr          go to state 471
    expr_field              go to state 472
    expr_call               go to state 473
    expr                    go to state 639
    expr_mtag               go to state 475
    basic_type_declaration  go to state 476
    make_decl               go to state 477
    make_struct_fields      go to state 1257
    make_struct_decl        go to state 478
    make_tuple_call         go to state 479
    make_dim_decl           go to state 480
    make_table_decl         go to state 481
    array_comprehension     go to state 482


State 1165

  732 make_struct_fields: make_struct_fields ',' "$f" . '(' expr ')' copy_or_move expr
  733                   | make_struct_fields ',' "$f" . '(' expr ')' ":=" expr

    '('  shift, and go to state 1258


State 1166

  728 make_struct_fields: make_struct_fields ',' "name" . copy_or_move expr
  729                   | make_struct_fields ',' "name" . ":=" expr

    "<-"  shift, and go to state 927
    ":="  shift, and go to state 1259
    '='   shift, and go to state 929

    copy_or_move  go to state 1260


State 1167

  304 capture_entry: "<-" . "name"

    "name"  shift, and go to state 1261


State 1168

  305 capture_entry: ":=" . "name"

    "name"  shift, and go to state 1262


State 1169

  306 capture_entry: "name" . '(' "name" ')'

    '('  shift, and go to state 1263


State 1170

  303 capture_entry: '=' . "name"

    "name"  shift, and go to state 1264


State 1171

  302 capture_entry: '&' . "name"

    "name"  shift, and go to state 1265


State 1172

  307 capture_list: capture_entry .

    $default  reduce using rule 307 (capture_list)


State 1173

  308 capture_list: capture_list . ',' capture_entry
  310 optional_capture_list: "capture" '(' capture_list . ')'

    ','  shift, and go to state 1266
    ')'  shift, and go to state 1267


State 1174

  311 expr_full_block: block_or_lambda optional_annotation_list optional_capture_list optional_function_argument_list optional_function_type . block_or_simple_block

    "=>"                   shift, and go to state 1268
    "begin of code block"  shift, and go to state 326

    expression_block       go to state 1269
    block_or_simple_block  go to state 1270


State 1175

  312 expr_full_block_assumed_piped: block_or_lambda optional_annotation_list optional_capture_list optional_function_argument_list . optional_function_type expression_block

    ':'  shift, and go to state 392

    $default  reduce using rule 118 (optional_function_type)

    optional_function_type  go to state 1271


State 1176

  428 expr: expr "is" "type" '<' $@19 . type_declaration_no_options '>' $@20

    "type"       shift, and go to state 219
    "array"      shift, and go to state 220
    "table"      shift, and go to state 221
    "typedecl"   shift, and go to state 222
    "iterator"   shift, and go to state 223
    "smart_ptr"  shift, and go to state 224
    "bool"       shift, and go to state 225
    "void"       shift, and go to state 226
    "string"     shift, and go to state 227
    "auto"       shift, and go to state 228
    "int"        shift, and go to state 229
    "int2"       shift, and go to state 230
    "int3"       shift, and go to state 231
    "int4"       shift, and go to state 232
    "uint"       shift, and go to state 233
    "bitfield"   shift, and go to state 234
    "uint2"      shift, and go to state 235
    "uint3"      shift, and go to state 236
    "uint4"      shift, and go to state 237
    "float"      shift, and go to state 238
    "float2"     shift, and go to state 239
    "float3"     shift, and go to state 240
    "float4"     shift, and go to state 241
    "range"      shift, and go to state 242
    "urange"     shift, and go to state 243
    "range64"    shift, and go to state 244
    "urange64"   shift, and go to state 245
    "block"      shift, and go to state 246
    "int64"      shift, and go to state 247
    "uint64"     shift, and go to state 248
    "double"     shift, and go to state 249
    "function"   shift, and go to state 250
    "lambda"     shift, and go to state 251
    "int8"       shift, and go to state 252
    "uint8"      shift, and go to state 253
    "int16"      shift, and go to state 254
    "uint16"     shift, and go to state 255
    "tuple"      shift, and go to state 256
    "variant"    shift, and go to state 257
    "::"         shift, and go to state 55
    "$t"         shift, and go to state 258
    "name"       shift, and go to state 56
    '$'          shift, and go to state 259

    name_in_namespace                   go to state 260
    basic_type_declaration              go to state 261
    structure_type_declaration          go to state 262
    auto_type_declaration               go to state 263
    bitfield_type_declaration           go to state 264
    type_declaration_no_options         go to state 1272
    type_declaration_no_options_no_dim  go to state 266


State 1177

  342 expr_method_call: expr . "->" "name" '(' ')'
  343                 | expr . "->" "name" '(' expr_list ')'
  353 expr_field: expr . '.' "name"
  354           | expr . '.' '.' "name"
  355           | expr . '.' "name" '(' ')'
  356           | expr . '.' "name" '(' expr_list ')'
  357           | expr . '.' basic_type_declaration '(' ')'
  358           | expr . '.' basic_type_declaration '(' expr_list ')'
  361           | expr . '.' $@17 error $@18
  383 expr: expr . "<<" expr
  384     | expr . ">>" expr
  385     | expr . "<<<" expr
  386     | expr . ">>>" expr
  387     | expr . '+' expr
  388     | expr . '-' expr
  389     | expr . '*' expr
  390     | expr . '/' expr
  391     | expr . '%' expr
  392     | expr . '<' expr
  393     | expr . '>' expr
  394     | expr . "==" expr
  395     | expr . "!=" expr
  396     | expr . "<=" expr
  397     | expr . ">=" expr
  398     | expr . '&' expr
  399     | expr . '|' expr
  400     | expr . '^' expr
  401     | expr . "&&" expr
  402     | expr . "||" expr
  403     | expr . "^^" expr
  404     | expr . ".." expr
  407     | expr . "++"
  408     | expr . "--"
  410     | expr . '[' expr ']'
  411     | expr . '.' '[' expr ']'
  412     | expr . "?[" expr ']'
  413     | expr . '.' "?[" expr ']'
  414     | expr . "?." "name"
  415     | expr . '.' "?." "name"
  424     | expr . "??" expr
  425     | expr . '?' expr ':' expr
  428     | expr . "is" "type" '<' $@19 type_declaration_no_options '>' $@20
  429     | expr . "is" basic_type_declaration
  430     | expr . "is" "name"
  431     | expr . "as" "name"
  434     | expr . "as" "type" '<' $@21 type_declaration '>' $@22
  435     | expr . "as" basic_type_declaration
  436     | expr . '?' "as" "name"
  439     | expr . '?' "as" "type" '<' $@23 type_declaration '>' $@24
  440     | expr . '?' "as" basic_type_declaration
  448     | expr . "<|" expr
  449     | expr . "|>" expr
  450     | expr . "|>" basic_type_declaration
  461 expr_mtag: expr . '.' "$f" '(' expr ')'
  462          | expr . "?." "$f" '(' expr ')'
  463          | expr . '.' '.' "$f" '(' expr ')'
  464          | expr . '.' "?." "$f" '(' expr ')'
  465          | expr . "as" "$f" '(' expr ')'
  466          | expr . '?' "as" "$f" '(' expr ')'
  467          | expr . "is" "$f" '(' expr ')'
  467          | expr "is" "$f" '(' expr . ')'

    "is"   shift, and go to state 648
    "as"   shift, and go to state 649
    "<<"   shift, and go to state 650
    ">>"   shift, and go to state 651
    "++"   shift, and go to state 652
    "--"   shift, and go to state 653
    "<="   shift, and go to state 654
    ">="   shift, and go to state 655
    "=="   shift, and go to state 656
    "!="   shift, and go to state 657
    "->"   shift, and go to state 658
    "??"   shift, and go to state 659
    "?."   shift, and go to state 660
    "?["   shift, and go to state 661
    "<|"   shift, and go to state 662
    "|>"   shift, and go to state 663
    "<<<"  shift, and go to state 664
    ">>>"  shift, and go to state 665
    "&&"   shift, and go to state 666
    "||"   shift, and go to state 667
    "^^"   shift, and go to state 668
    ".."   shift, and go to state 669
    '?'    shift, and go to state 670
    '|'    shift, and go to state 671
    '^'    shift, and go to state 672
    '&'    shift, and go to state 673
    '<'    shift, and go to state 674
    '>'    shift, and go to state 675
    '-'    shift, and go to state 676
    '+'    shift, and go to state 677
    '*'    shift, and go to state 678
    '/'    shift, and go to state 679
    '%'    shift, and go to state 680
    '.'    shift, and go to state 681
    '['    shift, and go to state 682
    ')'    shift, and go to state 1273


State 1178

  434 expr: expr "as" "type" '<' $@21 . type_declaration '>' $@22

    "type"       shift, and go to state 219
    "array"      shift, and go to state 220
    "table"      shift, and go to state 221
    "typedecl"   shift, and go to state 222
    "iterator"   shift, and go to state 223
    "smart_ptr"  shift, and go to state 224
    "bool"       shift, and go to state 225
    "void"       shift, and go to state 226
    "string"     shift, and go to state 227
    "auto"       shift, and go to state 228
    "int"        shift, and go to state 229
    "int2"       shift, and go to state 230
    "int3"       shift, and go to state 231
    "int4"       shift, and go to state 232
    "uint"       shift, and go to state 233
    "bitfield"   shift, and go to state 234
    "uint2"      shift, and go to state 235
    "uint3"      shift, and go to state 236
    "uint4"      shift, and go to state 237
    "float"      shift, and go to state 238
    "float2"     shift, and go to state 239
    "float3"     shift, and go to state 240
    "float4"     shift, and go to state 241
    "range"      shift, and go to state 242
    "urange"     shift, and go to state 243
    "range64"    shift, and go to state 244
    "urange64"   shift, and go to state 245
    "block"      shift, and go to state 246
    "int64"      shift, and go to state 247
    "uint64"     shift, and go to state 248
    "double"     shift, and go to state 249
    "function"   shift, and go to state 250
    "lambda"     shift, and go to state 251
    "int8"       shift, and go to state 252
    "uint8"      shift, and go to state 253
    "int16"      shift, and go to state 254
    "uint16"     shift, and go to state 255
    "tuple"      shift, and go to state 256
    "variant"    shift, and go to state 257
    "::"         shift, and go to state 55
    "$t"         shift, and go to state 258
    "name"       shift, and go to state 56
    '$'          shift, and go to state 259

    name_in_namespace                   go to state 260
    basic_type_declaration              go to state 261
    structure_type_declaration          go to state 262
    auto_type_declaration               go to state 263
    bitfield_type_declaration           go to state 264
    type_declaration_no_options         go to state 265
    type_declaration_no_options_no_dim  go to state 266
    type_declaration                    go to state 1274


State 1179

  342 expr_method_call: expr . "->" "name" '(' ')'
  343                 | expr . "->" "name" '(' expr_list ')'
  353 expr_field: expr . '.' "name"
  354           | expr . '.' '.' "name"
  355           | expr . '.' "name" '(' ')'
  356           | expr . '.' "name" '(' expr_list ')'
  357           | expr . '.' basic_type_declaration '(' ')'
  358           | expr . '.' basic_type_declaration '(' expr_list ')'
  361           | expr . '.' $@17 error $@18
  383 expr: expr . "<<" expr
  384     | expr . ">>" expr
  385     | expr . "<<<" expr
  386     | expr . ">>>" expr
  387     | expr . '+' expr
  388     | expr . '-' expr
  389     | expr . '*' expr
  390     | expr . '/' expr
  391     | expr . '%' expr
  392     | expr . '<' expr
  393     | expr . '>' expr
  394     | expr . "==" expr
  395     | expr . "!=" expr
  396     | expr . "<=" expr
  397     | expr . ">=" expr
  398     | expr . '&' expr
  399     | expr . '|' expr
  400     | expr . '^' expr
  401     | expr . "&&" expr
  402     | expr . "||" expr
  403     | expr . "^^" expr
  404     | expr . ".." expr
  407     | expr . "++"
  408     | expr . "--"
  410     | expr . '[' expr ']'
  411     | expr . '.' '[' expr ']'
  412     | expr . "?[" expr ']'
  413     | expr . '.' "?[" expr ']'
  414     | expr . "?." "name"
  415     | expr . '.' "?." "name"
  424     | expr . "??" expr
  425     | expr . '?' expr ':' expr
  428     | expr . "is" "type" '<' $@19 type_declaration_no_options '>' $@20
  429     | expr . "is" basic_type_declaration
  430     | expr . "is" "name"
  431     | expr . "as" "name"
  434     | expr . "as" "type" '<' $@21 type_declaration '>' $@22
  435     | expr . "as" basic_type_declaration
  436     | expr . '?' "as" "name"
  439     | expr . '?' "as" "type" '<' $@23 type_declaration '>' $@24
  440     | expr . '?' "as" basic_type_declaration
  448     | expr . "<|" expr
  449     | expr . "|>" expr
  450     | expr . "|>" basic_type_declaration
  461 expr_mtag: expr . '.' "$f" '(' expr ')'
  462          | expr . "?." "$f" '(' expr ')'
  463          | expr . '.' '.' "$f" '(' expr ')'
  464          | expr . '.' "?." "$f" '(' expr ')'
  465          | expr . "as" "$f" '(' expr ')'
  465          | expr "as" "$f" '(' expr . ')'
  466          | expr . '?' "as" "$f" '(' expr ')'
  467          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 648
    "as"   shift, and go to state 649
    "<<"   shift, and go to state 650
    ">>"   shift, and go to state 651
    "++"   shift, and go to state 652
    "--"   shift, and go to state 653
    "<="   shift, and go to state 654
    ">="   shift, and go to state 655
    "=="   shift, and go to state 656
    "!="   shift, and go to state 657
    "->"   shift, and go to state 658
    "??"   shift, and go to state 659
    "?."   shift, and go to state 660
    "?["   shift, and go to state 661
    "<|"   shift, and go to state 662
    "|>"   shift, and go to state 663
    "<<<"  shift, and go to state 664
    ">>>"  shift, and go to state 665
    "&&"   shift, and go to state 666
    "||"   shift, and go to state 667
    "^^"   shift, and go to state 668
    ".."   shift, and go to state 669
    '?'    shift, and go to state 670
    '|'    shift, and go to state 671
    '^'    shift, and go to state 672
    '&'    shift, and go to state 673
    '<'    shift, and go to state 674
    '>'    shift, and go to state 675
    '-'    shift, and go to state 676
    '+'    shift, and go to state 677
    '*'    shift, and go to state 678
    '/'    shift, and go to state 679
    '%'    shift, and go to state 680
    '.'    shift, and go to state 681
    '['    shift, and go to state 682
    ')'    shift, and go to state 1275


State 1180

  342 expr_method_call: expr "->" "name" '(' ')' .

    $default  reduce using rule 342 (expr_method_call)


State 1181

  295 expr_list: expr_list . ',' expr
  343 expr_method_call: expr "->" "name" '(' expr_list . ')'

    ','  shift, and go to state 1074
    ')'  shift, and go to state 1276


State 1182

  342 expr_method_call: expr . "->" "name" '(' ')'
  343                 | expr . "->" "name" '(' expr_list ')'
  353 expr_field: expr . '.' "name"
  354           | expr . '.' '.' "name"
  355           | expr . '.' "name" '(' ')'
  356           | expr . '.' "name" '(' expr_list ')'
  357           | expr . '.' basic_type_declaration '(' ')'
  358           | expr . '.' basic_type_declaration '(' expr_list ')'
  361           | expr . '.' $@17 error $@18
  383 expr: expr . "<<" expr
  384     | expr . ">>" expr
  385     | expr . "<<<" expr
  386     | expr . ">>>" expr
  387     | expr . '+' expr
  388     | expr . '-' expr
  389     | expr . '*' expr
  390     | expr . '/' expr
  391     | expr . '%' expr
  392     | expr . '<' expr
  393     | expr . '>' expr
  394     | expr . "==" expr
  395     | expr . "!=" expr
  396     | expr . "<=" expr
  397     | expr . ">=" expr
  398     | expr . '&' expr
  399     | expr . '|' expr
  400     | expr . '^' expr
  401     | expr . "&&" expr
  402     | expr . "||" expr
  403     | expr . "^^" expr
  404     | expr . ".." expr
  407     | expr . "++"
  408     | expr . "--"
  410     | expr . '[' expr ']'
  411     | expr . '.' '[' expr ']'
  412     | expr . "?[" expr ']'
  413     | expr . '.' "?[" expr ']'
  414     | expr . "?." "name"
  415     | expr . '.' "?." "name"
  424     | expr . "??" expr
  425     | expr . '?' expr ':' expr
  428     | expr . "is" "type" '<' $@19 type_declaration_no_options '>' $@20
  429     | expr . "is" basic_type_declaration
  430     | expr . "is" "name"
  431     | expr . "as" "name"
  434     | expr . "as" "type" '<' $@21 type_declaration '>' $@22
  435     | expr . "as" basic_type_declaration
  436     | expr . '?' "as" "name"
  439     | expr . '?' "as" "type" '<' $@23 type_declaration '>' $@24
  440     | expr . '?' "as" basic_type_declaration
  448     | expr . "<|" expr
  449     | expr . "|>" expr
  450     | expr . "|>" basic_type_declaration
  461 expr_mtag: expr . '.' "$f" '(' expr ')'
  462          | expr . "?." "$f" '(' expr ')'
  462          | expr "?." "$f" '(' expr . ')'
  463          | expr . '.' '.' "$f" '(' expr ')'
  464          | expr . '.' "?." "$f" '(' expr ')'
  465          | expr . "as" "$f" '(' expr ')'
  466          | expr . '?' "as" "$f" '(' expr ')'
  467          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 648
    "as"   shift, and go to state 649
    "<<"   shift, and go to state 650
    ">>"   shift, and go to state 651
    "++"   shift, and go to state 652
    "--"   shift, and go to state 653
    "<="   shift, and go to state 654
    ">="   shift, and go to state 655
    "=="   shift, and go to state 656
    "!="   shift, and go to state 657
    "->"   shift, and go to state 658
    "??"   shift, and go to state 659
    "?."   shift, and go to state 660
    "?["   shift, and go to state 661
    "<|"   shift, and go to state 662
    "|>"   shift, and go to state 663
    "<<<"  shift, and go to state 664
    ">>>"  shift, and go to state 665
    "&&"   shift, and go to state 666
    "||"   shift, and go to state 667
    "^^"   shift, and go to state 668
    ".."   shift, and go to state 669
    '?'    shift, and go to state 670
    '|'    shift, and go to state 671
    '^'    shift, and go to state 672
    '&'    shift, and go to state 673
    '<'    shift, and go to state 674
    '>'    shift, and go to state 675
    '-'    shift, and go to state 676
    '+'    shift, and go to state 677
    '*'    shift, and go to state 678
    '/'    shift, and go to state 679
    '%'    shift, and go to state 680
    '.'    shift, and go to state 681
    '['    shift, and go to state 682
    ')'    shift, and go to state 1277


State 1183

  439 expr: expr '?' "as" "type" '<' . $@23 type_declaration '>' $@24

    $default  reduce using rule 437 ($@23)

    $@23  go to state 1278


State 1184

  466 expr_mtag: expr '?' "as" "$f" '(' . expr ')'

    "struct"                          shift, and go to state 409
    "class"                           shift, and go to state 410
    "true"                            shift, and go to state 411
    "false"                           shift, and go to state 412
    "new"                             shift, and go to state 413
    "typeinfo"                        shift, and go to state 414
    "type"                            shift, and go to state 415
    "array"                           shift, and go to state 416
    "null"                            shift, and go to state 417
    "table"                           shift, and go to state 418
    "deref"                           shift, and go to state 419
    "cast"                            shift, and go to state 420
    "upcast"                          shift, and go to state 421
    "addr"                            shift, and go to state 422
    "reinterpret"                     shift, and go to state 423
    "unsafe"                          shift, and go to state 424
    "fixed_array"                     shift, and go to state 425
    "default"                         shift, and go to state 426
    "bool"                            shift, and go to state 225
    "void"                            shift, and go to state 226
    "string"                          shift, and go to state 227
    "int"                             shift, and go to state 229
    "int2"                            shift, and go to state 230
    "int3"                            shift, and go to state 231
    "int4"                            shift, and go to state 232
    "uint"                            shift, and go to state 233
    "bitfield"                        shift, and go to state 427
    "uint2"                           shift, and go to state 235
    "uint3"                           shift, and go to state 236
    "uint4"                           shift, and go to state 237
    "float"                           shift, and go to state 238
    "float2"                          shift, and go to state 239
    "float3"                          shift, and go to state 240
    "float4"                          shift, and go to state 241
    "range"                           shift, and go to state 242
    "urange"                          shift, and go to state 243
    "range64"                         shift, and go to state 244
    "urange64"                        shift, and go to state 245
    "int64"                           shift, and go to state 247
    "uint64"                          shift, and go to state 248
    "double"                          shift, and go to state 249
    "int8"                            shift, and go to state 252
    "uint8"                           shift, and go to state 253
    "int16"                           shift, and go to state 254
    "uint16"                          shift, and go to state 255
    "tuple"                           shift, and go to state 428
    "variant"                         shift, and go to state 429
    "generator"                       shift, and go to state 430
    "++"                              shift, and go to state 431
    "--"                              shift, and go to state 432
    "::"                              shift, and go to state 55
    "$$"                              shift, and go to state 433
    "$i"                              shift, and go to state 434
    "$v"                              shift, and go to state 435
    "$b"                              shift, and go to state 436
    "$a"                              shift, and go to state 437
    "$c"                              shift, and go to state 438
    "..."                             shift, and go to state 439
    "integer constant"                shift, and go to state 440
    "long integer constant"           shift, and go to state 441
    "unsigned integer constant"       shift, and go to state 442
    "unsigned long integer constant"  shift, and go to state 443
    "unsigned int8 constant"          shift, and go to state 444
    "floating point constant"         shift, and go to state 445
    "double constant"                 shift, and go to state 446
    "name"                            shift, and go to state 56
    "start of the string"             shift, and go to state 447
    "begin of code block"             shift, and go to state 448
    '-'                               shift, and go to state 449
    '+'                               shift, and go to state 450
    '*'                               shift, and go to state 451
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 452
    '!'                               shift, and go to state 453
    '['                               shift, and go to state 454
    '('                               shift, and go to state 455
    '$'                               shift, and go to state 456
    '@'                               shift, and go to state 457

    string_builder          go to state 458
    expr_reader             go to state 459
    expr_call_pipe          go to state 460
    name_in_namespace       go to state 461
    expr_new                go to state 462
    expr_cast               go to state 463
    expr_type_decl          go to state 464
    expr_type_info          go to state 465
    block_or_lambda         go to state 466
    expr_full_block         go to state 467
    expr_numeric_const      go to state 468
    expr_named_call         go to state 469
    expr_method_call        go to state 470
    func_addr_expr          go to state 471
    expr_field              go to state 472
    expr_call               go to state 473
    expr                    go to state 1279
    expr_mtag               go to state 475
    basic_type_declaration  go to state 476
    make_decl               go to state 477
    make_struct_decl        go to state 478
    make_tuple_call         go to state 479
    make_dim_decl           go to state 480
    make_table_decl         go to state 481
    array_comprehension     go to state 482


State 1185

  342 expr_method_call: expr . "->" "name" '(' ')'
  343                 | expr . "->" "name" '(' expr_list ')'
  353 expr_field: expr . '.' "name"
  354           | expr . '.' '.' "name"
  355           | expr . '.' "name" '(' ')'
  356           | expr . '.' "name" '(' expr_list ')'
  357           | expr . '.' basic_type_declaration '(' ')'
  358           | expr . '.' basic_type_declaration '(' expr_list ')'
  361           | expr . '.' $@17 error $@18
  383 expr: expr . "<<" expr
  384     | expr . ">>" expr
  385     | expr . "<<<" expr
  386     | expr . ">>>" expr
  387     | expr . '+' expr
  388     | expr . '-' expr
  389     | expr . '*' expr
  390     | expr . '/' expr
  391     | expr . '%' expr
  392     | expr . '<' expr
  393     | expr . '>' expr
  394     | expr . "==" expr
  395     | expr . "!=" expr
  396     | expr . "<=" expr
  397     | expr . ">=" expr
  398     | expr . '&' expr
  399     | expr . '|' expr
  400     | expr . '^' expr
  401     | expr . "&&" expr
  402     | expr . "||" expr
  403     | expr . "^^" expr
  404     | expr . ".." expr
  407     | expr . "++"
  408     | expr . "--"
  410     | expr . '[' expr ']'
  411     | expr . '.' '[' expr ']'
  412     | expr . "?[" expr ']'
  413     | expr . '.' "?[" expr ']'
  414     | expr . "?." "name"
  415     | expr . '.' "?." "name"
  424     | expr . "??" expr
  425     | expr . '?' expr ':' expr
  425     | expr '?' expr ':' expr .
  428     | expr . "is" "type" '<' $@19 type_declaration_no_options '>' $@20
  429     | expr . "is" basic_type_declaration
  430     | expr . "is" "name"
  431     | expr . "as" "name"
  434     | expr . "as" "type" '<' $@21 type_declaration '>' $@22
  435     | expr . "as" basic_type_declaration
  436     | expr . '?' "as" "name"
  439     | expr . '?' "as" "type" '<' $@23 type_declaration '>' $@24
  440     | expr . '?' "as" basic_type_declaration
  448     | expr . "<|" expr
  449     | expr . "|>" expr
  450     | expr . "|>" basic_type_declaration
  461 expr_mtag: expr . '.' "$f" '(' expr ')'
  462          | expr . "?." "$f" '(' expr ')'
  463          | expr . '.' '.' "$f" '(' expr ')'
  464          | expr . '.' "?." "$f" '(' expr ')'
  465          | expr . "as" "$f" '(' expr ')'
  466          | expr . '?' "as" "$f" '(' expr ')'
  467          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 648
    "as"   shift, and go to state 649
    "<<"   shift, and go to state 650
    ">>"   shift, and go to state 651
    "++"   shift, and go to state 652
    "--"   shift, and go to state 653
    "<="   shift, and go to state 654
    ">="   shift, and go to state 655
    "=="   shift, and go to state 656
    "!="   shift, and go to state 657
    "->"   shift, and go to state 658
    "??"   shift, and go to state 659
    "?."   shift, and go to state 660
    "?["   shift, and go to state 661
    "<|"   shift, and go to state 662
    "|>"   shift, and go to state 663
    "<<<"  shift, and go to state 664
    ">>>"  shift, and go to state 665
    "&&"   shift, and go to state 666
    "||"   shift, and go to state 667
    "^^"   shift, and go to state 668
    '?'    shift, and go to state 670
    '|'    shift, and go to state 671
    '^'    shift, and go to state 672
    '&'    shift, and go to state 673
    '<'    shift, and go to state 674
    '>'    shift, and go to state 675
    '-'    shift, and go to state 676
    '+'    shift, and go to state 677
    '*'    shift, and go to state 678
    '/'    shift, and go to state 679
    '%'    shift, and go to state 680
    '.'    shift, and go to state 681
    '['    shift, and go to state 682

    $default  reduce using rule 425 (expr)


State 1186

  464 expr_mtag: expr '.' "?." "$f" '(' . expr ')'

    "struct"                          shift, and go to state 409
    "class"                           shift, and go to state 410
    "true"                            shift, and go to state 411
    "false"                           shift, and go to state 412
    "new"                             shift, and go to state 413
    "typeinfo"                        shift, and go to state 414
    "type"                            shift, and go to state 415
    "array"                           shift, and go to state 416
    "null"                            shift, and go to state 417
    "table"                           shift, and go to state 418
    "deref"                           shift, and go to state 419
    "cast"                            shift, and go to state 420
    "upcast"                          shift, and go to state 421
    "addr"                            shift, and go to state 422
    "reinterpret"                     shift, and go to state 423
    "unsafe"                          shift, and go to state 424
    "fixed_array"                     shift, and go to state 425
    "default"                         shift, and go to state 426
    "bool"                            shift, and go to state 225
    "void"                            shift, and go to state 226
    "string"                          shift, and go to state 227
    "int"                             shift, and go to state 229
    "int2"                            shift, and go to state 230
    "int3"                            shift, and go to state 231
    "int4"                            shift, and go to state 232
    "uint"                            shift, and go to state 233
    "bitfield"                        shift, and go to state 427
    "uint2"                           shift, and go to state 235
    "uint3"                           shift, and go to state 236
    "uint4"                           shift, and go to state 237
    "float"                           shift, and go to state 238
    "float2"                          shift, and go to state 239
    "float3"                          shift, and go to state 240
    "float4"                          shift, and go to state 241
    "range"                           shift, and go to state 242
    "urange"                          shift, and go to state 243
    "range64"                         shift, and go to state 244
    "urange64"                        shift, and go to state 245
    "int64"                           shift, and go to state 247
    "uint64"                          shift, and go to state 248
    "double"                          shift, and go to state 249
    "int8"                            shift, and go to state 252
    "uint8"                           shift, and go to state 253
    "int16"                           shift, and go to state 254
    "uint16"                          shift, and go to state 255
    "tuple"                           shift, and go to state 428
    "variant"                         shift, and go to state 429
    "generator"                       shift, and go to state 430
    "++"                              shift, and go to state 431
    "--"                              shift, and go to state 432
    "::"                              shift, and go to state 55
    "$$"                              shift, and go to state 433
    "$i"                              shift, and go to state 434
    "$v"                              shift, and go to state 435
    "$b"                              shift, and go to state 436
    "$a"                              shift, and go to state 437
    "$c"                              shift, and go to state 438
    "..."                             shift, and go to state 439
    "integer constant"                shift, and go to state 440
    "long integer constant"           shift, and go to state 441
    "unsigned integer constant"       shift, and go to state 442
    "unsigned long integer constant"  shift, and go to state 443
    "unsigned int8 constant"          shift, and go to state 444
    "floating point constant"         shift, and go to state 445
    "double constant"                 shift, and go to state 446
    "name"                            shift, and go to state 56
    "start of the string"             shift, and go to state 447
    "begin of code block"             shift, and go to state 448
    '-'                               shift, and go to state 449
    '+'                               shift, and go to state 450
    '*'                               shift, and go to state 451
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 452
    '!'                               shift, and go to state 453
    '['                               shift, and go to state 454
    '('                               shift, and go to state 455
    '$'                               shift, and go to state 456
    '@'                               shift, and go to state 457

    string_builder          go to state 458
    expr_reader             go to state 459
    expr_call_pipe          go to state 460
    name_in_namespace       go to state 461
    expr_new                go to state 462
    expr_cast               go to state 463
    expr_type_decl          go to state 464
    expr_type_info          go to state 465
    block_or_lambda         go to state 466
    expr_full_block         go to state 467
    expr_numeric_const      go to state 468
    expr_named_call         go to state 469
    expr_method_call        go to state 470
    func_addr_expr          go to state 471
    expr_field              go to state 472
    expr_call               go to state 473
    expr                    go to state 1280
    expr_mtag               go to state 475
    basic_type_declaration  go to state 476
    make_decl               go to state 477
    make_struct_decl        go to state 478
    make_tuple_call         go to state 479
    make_dim_decl           go to state 480
    make_table_decl         go to state 481
    array_comprehension     go to state 482


State 1187

  413 expr: expr '.' "?[" expr ']' .

    $default  reduce using rule 413 (expr)


State 1188

  342 expr_method_call: expr . "->" "name" '(' ')'
  343                 | expr . "->" "name" '(' expr_list ')'
  353 expr_field: expr . '.' "name"
  354           | expr . '.' '.' "name"
  355           | expr . '.' "name" '(' ')'
  356           | expr . '.' "name" '(' expr_list ')'
  357           | expr . '.' basic_type_declaration '(' ')'
  358           | expr . '.' basic_type_declaration '(' expr_list ')'
  361           | expr . '.' $@17 error $@18
  383 expr: expr . "<<" expr
  384     | expr . ">>" expr
  385     | expr . "<<<" expr
  386     | expr . ">>>" expr
  387     | expr . '+' expr
  388     | expr . '-' expr
  389     | expr . '*' expr
  390     | expr . '/' expr
  391     | expr . '%' expr
  392     | expr . '<' expr
  393     | expr . '>' expr
  394     | expr . "==" expr
  395     | expr . "!=" expr
  396     | expr . "<=" expr
  397     | expr . ">=" expr
  398     | expr . '&' expr
  399     | expr . '|' expr
  400     | expr . '^' expr
  401     | expr . "&&" expr
  402     | expr . "||" expr
  403     | expr . "^^" expr
  404     | expr . ".." expr
  407     | expr . "++"
  408     | expr . "--"
  410     | expr . '[' expr ']'
  411     | expr . '.' '[' expr ']'
  412     | expr . "?[" expr ']'
  413     | expr . '.' "?[" expr ']'
  414     | expr . "?." "name"
  415     | expr . '.' "?." "name"
  424     | expr . "??" expr
  425     | expr . '?' expr ':' expr
  428     | expr . "is" "type" '<' $@19 type_declaration_no_options '>' $@20
  429     | expr . "is" basic_type_declaration
  430     | expr . "is" "name"
  431     | expr . "as" "name"
  434     | expr . "as" "type" '<' $@21 type_declaration '>' $@22
  435     | expr . "as" basic_type_declaration
  436     | expr . '?' "as" "name"
  439     | expr . '?' "as" "type" '<' $@23 type_declaration '>' $@24
  440     | expr . '?' "as" basic_type_declaration
  448     | expr . "<|" expr
  449     | expr . "|>" expr
  450     | expr . "|>" basic_type_declaration
  461 expr_mtag: expr . '.' "$f" '(' expr ')'
  461          | expr '.' "$f" '(' expr . ')'
  462          | expr . "?." "$f" '(' expr ')'
  463          | expr . '.' '.' "$f" '(' expr ')'
  464          | expr . '.' "?." "$f" '(' expr ')'
  465          | expr . "as" "$f" '(' expr ')'
  466          | expr . '?' "as" "$f" '(' expr ')'
  467          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 648
    "as"   shift, and go to state 649
    "<<"   shift, and go to state 650
    ">>"   shift, and go to state 651
    "++"   shift, and go to state 652
    "--"   shift, and go to state 653
    "<="   shift, and go to state 654
    ">="   shift, and go to state 655
    "=="   shift, and go to state 656
    "!="   shift, and go to state 657
    "->"   shift, and go to state 658
    "??"   shift, and go to state 659
    "?."   shift, and go to state 660
    "?["   shift, and go to state 661
    "<|"   shift, and go to state 662
    "|>"   shift, and go to state 663
    "<<<"  shift, and go to state 664
    ">>>"  shift, and go to state 665
    "&&"   shift, and go to state 666
    "||"   shift, and go to state 667
    "^^"   shift, and go to state 668
    ".."   shift, and go to state 669
    '?'    shift, and go to state 670
    '|'    shift, and go to state 671
    '^'    shift, and go to state 672
    '&'    shift, and go to state 673
    '<'    shift, and go to state 674
    '>'    shift, and go to state 675
    '-'    shift, and go to state 676
    '+'    shift, and go to state 677
    '*'    shift, and go to state 678
    '/'    shift, and go to state 679
    '%'    shift, and go to state 680
    '.'    shift, and go to state 681
    '['    shift, and go to state 682
    ')'    shift, and go to state 1281


State 1189

  355 expr_field: expr '.' "name" '(' ')' .

    $default  reduce using rule 355 (expr_field)


State 1190

  295 expr_list: expr_list . ',' expr
  356 expr_field: expr '.' "name" '(' expr_list . ')'

    ','  shift, and go to state 1074
    ')'  shift, and go to state 1282


State 1191

  463 expr_mtag: expr '.' '.' "$f" '(' . expr ')'

    "struct"                          shift, and go to state 409
    "class"                           shift, and go to state 410
    "true"                            shift, and go to state 411
    "false"                           shift, and go to state 412
    "new"                             shift, and go to state 413
    "typeinfo"                        shift, and go to state 414
    "type"                            shift, and go to state 415
    "array"                           shift, and go to state 416
    "null"                            shift, and go to state 417
    "table"                           shift, and go to state 418
    "deref"                           shift, and go to state 419
    "cast"                            shift, and go to state 420
    "upcast"                          shift, and go to state 421
    "addr"                            shift, and go to state 422
    "reinterpret"                     shift, and go to state 423
    "unsafe"                          shift, and go to state 424
    "fixed_array"                     shift, and go to state 425
    "default"                         shift, and go to state 426
    "bool"                            shift, and go to state 225
    "void"                            shift, and go to state 226
    "string"                          shift, and go to state 227
    "int"                             shift, and go to state 229
    "int2"                            shift, and go to state 230
    "int3"                            shift, and go to state 231
    "int4"                            shift, and go to state 232
    "uint"                            shift, and go to state 233
    "bitfield"                        shift, and go to state 427
    "uint2"                           shift, and go to state 235
    "uint3"                           shift, and go to state 236
    "uint4"                           shift, and go to state 237
    "float"                           shift, and go to state 238
    "float2"                          shift, and go to state 239
    "float3"                          shift, and go to state 240
    "float4"                          shift, and go to state 241
    "range"                           shift, and go to state 242
    "urange"                          shift, and go to state 243
    "range64"                         shift, and go to state 244
    "urange64"                        shift, and go to state 245
    "int64"                           shift, and go to state 247
    "uint64"                          shift, and go to state 248
    "double"                          shift, and go to state 249
    "int8"                            shift, and go to state 252
    "uint8"                           shift, and go to state 253
    "int16"                           shift, and go to state 254
    "uint16"                          shift, and go to state 255
    "tuple"                           shift, and go to state 428
    "variant"                         shift, and go to state 429
    "generator"                       shift, and go to state 430
    "++"                              shift, and go to state 431
    "--"                              shift, and go to state 432
    "::"                              shift, and go to state 55
    "$$"                              shift, and go to state 433
    "$i"                              shift, and go to state 434
    "$v"                              shift, and go to state 435
    "$b"                              shift, and go to state 436
    "$a"                              shift, and go to state 437
    "$c"                              shift, and go to state 438
    "..."                             shift, and go to state 439
    "integer constant"                shift, and go to state 440
    "long integer constant"           shift, and go to state 441
    "unsigned integer constant"       shift, and go to state 442
    "unsigned long integer constant"  shift, and go to state 443
    "unsigned int8 constant"          shift, and go to state 444
    "floating point constant"         shift, and go to state 445
    "double constant"                 shift, and go to state 446
    "name"                            shift, and go to state 56
    "start of the string"             shift, and go to state 447
    "begin of code block"             shift, and go to state 448
    '-'                               shift, and go to state 449
    '+'                               shift, and go to state 450
    '*'                               shift, and go to state 451
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 452
    '!'                               shift, and go to state 453
    '['                               shift, and go to state 454
    '('                               shift, and go to state 455
    '$'                               shift, and go to state 456
    '@'                               shift, and go to state 457

    string_builder          go to state 458
    expr_reader             go to state 459
    expr_call_pipe          go to state 460
    name_in_namespace       go to state 461
    expr_new                go to state 462
    expr_cast               go to state 463
    expr_type_decl          go to state 464
    expr_type_info          go to state 465
    block_or_lambda         go to state 466
    expr_full_block         go to state 467
    expr_numeric_const      go to state 468
    expr_named_call         go to state 469
    expr_method_call        go to state 470
    func_addr_expr          go to state 471
    expr_field              go to state 472
    expr_call               go to state 473
    expr                    go to state 1283
    expr_mtag               go to state 475
    basic_type_declaration  go to state 476
    make_decl               go to state 477
    make_struct_decl        go to state 478
    make_tuple_call         go to state 479
    make_dim_decl           go to state 480
    make_table_decl         go to state 481
    array_comprehension     go to state 482


State 1192

  411 expr: expr '.' '[' expr ']' .

    $default  reduce using rule 411 (expr)


State 1193

  361 expr_field: expr '.' $@17 error $@18 .

    $default  reduce using rule 361 (expr_field)


State 1194

  357 expr_field: expr '.' basic_type_declaration '(' ')' .

    $default  reduce using rule 357 (expr_field)


State 1195

  295 expr_list: expr_list . ',' expr
  358 expr_field: expr '.' basic_type_declaration '(' expr_list . ')'

    ','  shift, and go to state 1074
    ')'  shift, and go to state 1284


State 1196

  685 type_declaration_no_options_no_dim: "block" '<' $@50 optional_function_argument_list optional_function_type '>' $@51 .

    $default  reduce using rule 685 (type_declaration_no_options_no_dim)


State 1197

  692 type_declaration_no_options_no_dim: "function" '<' $@54 optional_function_argument_list optional_function_type '>' $@55 .

    $default  reduce using rule 692 (type_declaration_no_options_no_dim)


State 1198

  699 type_declaration_no_options_no_dim: "lambda" '<' $@58 optional_function_argument_list optional_function_type '>' $@59 .

    $default  reduce using rule 699 (type_declaration_no_options_no_dim)


State 1199

  653 type_declaration_no_options_no_dim: '$' name_in_namespace '<' $@39 type_declaration_no_options_list '>' '(' . optional_expr_list ')'

    "struct"                          shift, and go to state 409
    "class"                           shift, and go to state 410
    "true"                            shift, and go to state 411
    "false"                           shift, and go to state 412
    "new"                             shift, and go to state 413
    "typeinfo"                        shift, and go to state 414
    "type"                            shift, and go to state 415
    "array"                           shift, and go to state 416
    "null"                            shift, and go to state 417
    "table"                           shift, and go to state 418
    "deref"                           shift, and go to state 419
    "cast"                            shift, and go to state 420
    "upcast"                          shift, and go to state 421
    "addr"                            shift, and go to state 422
    "reinterpret"                     shift, and go to state 423
    "unsafe"                          shift, and go to state 424
    "fixed_array"                     shift, and go to state 425
    "default"                         shift, and go to state 426
    "bool"                            shift, and go to state 225
    "void"                            shift, and go to state 226
    "string"                          shift, and go to state 227
    "int"                             shift, and go to state 229
    "int2"                            shift, and go to state 230
    "int3"                            shift, and go to state 231
    "int4"                            shift, and go to state 232
    "uint"                            shift, and go to state 233
    "bitfield"                        shift, and go to state 427
    "uint2"                           shift, and go to state 235
    "uint3"                           shift, and go to state 236
    "uint4"                           shift, and go to state 237
    "float"                           shift, and go to state 238
    "float2"                          shift, and go to state 239
    "float3"                          shift, and go to state 240
    "float4"                          shift, and go to state 241
    "range"                           shift, and go to state 242
    "urange"                          shift, and go to state 243
    "range64"                         shift, and go to state 244
    "urange64"                        shift, and go to state 245
    "int64"                           shift, and go to state 247
    "uint64"                          shift, and go to state 248
    "double"                          shift, and go to state 249
    "int8"                            shift, and go to state 252
    "uint8"                           shift, and go to state 253
    "int16"                           shift, and go to state 254
    "uint16"                          shift, and go to state 255
    "tuple"                           shift, and go to state 428
    "variant"                         shift, and go to state 429
    "generator"                       shift, and go to state 430
    "++"                              shift, and go to state 431
    "--"                              shift, and go to state 432
    "::"                              shift, and go to state 55
    "$$"                              shift, and go to state 433
    "$i"                              shift, and go to state 434
    "$v"                              shift, and go to state 435
    "$b"                              shift, and go to state 436
    "$a"                              shift, and go to state 437
    "$c"                              shift, and go to state 438
    "..."                             shift, and go to state 439
    "integer constant"                shift, and go to state 440
    "long integer constant"           shift, and go to state 441
    "unsigned integer constant"       shift, and go to state 442
    "unsigned long integer constant"  shift, and go to state 443
    "unsigned int8 constant"          shift, and go to state 444
    "floating point constant"         shift, and go to state 445
    "double constant"                 shift, and go to state 446
    "name"                            shift, and go to state 56
    "start of the string"             shift, and go to state 447
    "begin of code block"             shift, and go to state 448
    '-'                               shift, and go to state 449
    '+'                               shift, and go to state 450
    '*'                               shift, and go to state 451
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 452
    '!'                               shift, and go to state 453
    '['                               shift, and go to state 454
    '('                               shift, and go to state 455
    '$'                               shift, and go to state 456
    '@'                               shift, and go to state 457

    $default  reduce using rule 236 (optional_expr_list)

    string_builder          go to state 458
    expr_reader             go to state 459
    expr_call_pipe          go to state 460
    optional_expr_list      go to state 1285
    name_in_namespace       go to state 461
    expr_new                go to state 462
    expr_cast               go to state 463
    expr_type_decl          go to state 464
    expr_type_info          go to state 465
    expr_list               go to state 703
    block_or_lambda         go to state 466
    expr_full_block         go to state 467
    expr_numeric_const      go to state 468
    expr_named_call         go to state 469
    expr_method_call        go to state 470
    func_addr_expr          go to state 471
    expr_field              go to state 472
    expr_call               go to state 473
    expr                    go to state 639
    expr_mtag               go to state 475
    basic_type_declaration  go to state 476
    make_decl               go to state 477
    make_struct_decl        go to state 478
    make_tuple_call         go to state 479
    make_dim_decl           go to state 480
    make_table_decl         go to state 481
    array_comprehension     go to state 482


State 1200

  241 type_declaration_no_options_list: type_declaration_no_options_list c_or_s type_declaration .
  707 type_declaration: type_declaration . '|' type_declaration_no_options
  708                 | type_declaration . '|' '#'

    '|'  shift, and go to state 375

    $default  reduce using rule 241 (type_declaration_no_options_list)


State 1201

  582 variable_name_with_pos_list: "$i" '(' expr ')' .

    $default  reduce using rule 582 (variable_name_with_pos_list)


State 1202

  585 variable_name_with_pos_list: variable_name_with_pos_list ',' "name" "aka" . "name"

    "name"  shift, and go to state 1286


State 1203

  511 variable_declaration: variable_name_with_pos_list ':' type_declaration copy_or_move . expr

    "struct"                          shift, and go to state 409
    "class"                           shift, and go to state 410
    "true"                            shift, and go to state 411
    "false"                           shift, and go to state 412
    "new"                             shift, and go to state 413
    "typeinfo"                        shift, and go to state 414
    "type"                            shift, and go to state 415
    "array"                           shift, and go to state 416
    "null"                            shift, and go to state 417
    "table"                           shift, and go to state 418
    "deref"                           shift, and go to state 419
    "cast"                            shift, and go to state 420
    "upcast"                          shift, and go to state 421
    "addr"                            shift, and go to state 422
    "reinterpret"                     shift, and go to state 423
    "unsafe"                          shift, and go to state 424
    "fixed_array"                     shift, and go to state 425
    "default"                         shift, and go to state 426
    "bool"                            shift, and go to state 225
    "void"                            shift, and go to state 226
    "string"                          shift, and go to state 227
    "int"                             shift, and go to state 229
    "int2"                            shift, and go to state 230
    "int3"                            shift, and go to state 231
    "int4"                            shift, and go to state 232
    "uint"                            shift, and go to state 233
    "bitfield"                        shift, and go to state 427
    "uint2"                           shift, and go to state 235
    "uint3"                           shift, and go to state 236
    "uint4"                           shift, and go to state 237
    "float"                           shift, and go to state 238
    "float2"                          shift, and go to state 239
    "float3"                          shift, and go to state 240
    "float4"                          shift, and go to state 241
    "range"                           shift, and go to state 242
    "urange"                          shift, and go to state 243
    "range64"                         shift, and go to state 244
    "urange64"                        shift, and go to state 245
    "int64"                           shift, and go to state 247
    "uint64"                          shift, and go to state 248
    "double"                          shift, and go to state 249
    "int8"                            shift, and go to state 252
    "uint8"                           shift, and go to state 253
    "int16"                           shift, and go to state 254
    "uint16"                          shift, and go to state 255
    "tuple"                           shift, and go to state 428
    "variant"                         shift, and go to state 429
    "generator"                       shift, and go to state 430
    "++"                              shift, and go to state 431
    "--"                              shift, and go to state 432
    "::"                              shift, and go to state 55
    "$$"                              shift, and go to state 433
    "$i"                              shift, and go to state 434
    "$v"                              shift, and go to state 435
    "$b"                              shift, and go to state 436
    "$a"                              shift, and go to state 437
    "$c"                              shift, and go to state 438
    "..."                             shift, and go to state 439
    "integer constant"                shift, and go to state 440
    "long integer constant"           shift, and go to state 441
    "unsigned integer constant"       shift, and go to state 442
    "unsigned long integer constant"  shift, and go to state 443
    "unsigned int8 constant"          shift, and go to state 444
    "floating point constant"         shift, and go to state 445
    "double constant"                 shift, and go to state 446
    "name"                            shift, and go to state 56
    "start of the string"             shift, and go to state 447
    "begin of code block"             shift, and go to state 448
    '-'                               shift, and go to state 449
    '+'                               shift, and go to state 450
    '*'                               shift, and go to state 451
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 452
    '!'                               shift, and go to state 453
    '['                               shift, and go to state 454
    '('                               shift, and go to state 455
    '$'                               shift, and go to state 456
    '@'                               shift, and go to state 457

    string_builder          go to state 458
    expr_reader             go to state 459
    expr_call_pipe          go to state 460
    name_in_namespace       go to state 461
    expr_new                go to state 462
    expr_cast               go to state 463
    expr_type_decl          go to state 464
    expr_type_info          go to state 465
    block_or_lambda         go to state 466
    expr_full_block         go to state 467
    expr_numeric_const      go to state 468
    expr_named_call         go to state 469
    expr_method_call        go to state 470
    func_addr_expr          go to state 471
    expr_field              go to state 472
    expr_call               go to state 473
    expr                    go to state 1287
    expr_mtag               go to state 475
    basic_type_declaration  go to state 476
    make_decl               go to state 477
    make_struct_decl        go to state 478
    make_tuple_call         go to state 479
    make_dim_decl           go to state 480
    make_table_decl         go to state 481
    array_comprehension     go to state 482


State 1204

   73 expression_while_loop: "while" '(' expr ')' expression_block .

    $default  reduce using rule 73 (expression_while_loop)


State 1205

   71 expression_for_loop: "for" '(' variable_name_with_pos_list "in" expr_list . ')' expression_block
  295 expr_list: expr_list . ',' expr

    ','  shift, and go to state 1074
    ')'  shift, and go to state 1288


State 1206

   74 expression_with: "with" '(' expr ')' expression_block .

    $default  reduce using rule 74 (expression_with)


State 1207

  213 expression_block: "begin of code block" expressions "end of code block" "finally" "begin of code block" expressions "end of code block" .

    $default  reduce using rule 213 (expression_block)


State 1208

   69 expression_if_then_else: if_or_static_if '(' expr ')' expression_block . expression_else

    "else"         shift, and go to state 1289
    "elif"         shift, and go to state 1290
    "static_elif"  shift, and go to state 1291

    $default  reduce using rule 57 (expression_else)

    elif_or_static_elif  go to state 1292
    expression_else      go to state 1293


State 1209

   70 expression_if_then_else: expression_if_one_liner "if" '(' expr ')' . expression_else_one_liner "end of expression"

    "else"  shift, and go to state 1294

    $default  reduce using rule 62 (expression_else_one_liner)

    expression_else_one_liner  go to state 1295


State 1210

  278 expression_let: kwd_let optional_in_scope "begin of code block" variable_declaration_list "end of code block" .

    $default  reduce using rule 278 (expression_let)


State 1211

  526 variable_declaration_list: variable_declaration_list "end of expression" .

    $default  reduce using rule 526 (variable_declaration_list)


State 1212

  527 variable_declaration_list: variable_declaration_list let_variable_declaration .

    $default  reduce using rule 527 (variable_declaration_list)


State 1213

  273 tuple_expansion: tuple_expansion ',' . "name"

    "name"  shift, and go to state 1296


State 1214

  274 tuple_expansion_variable_declaration: '(' tuple_expansion ')' . ':' type_declaration_no_options copy_or_move_or_clone expr "end of expression"
  275                                     | '(' tuple_expansion ')' . optional_ref copy_or_move_or_clone expr "end of expression"

    ':'  shift, and go to state 1297
    '&'  shift, and go to state 404

    $default  reduce using rule 516 (optional_ref)

    optional_ref  go to state 1298


State 1215

  486 struct_variable_declaration_list: struct_variable_declaration_list optional_annotation_list "def" optional_public_or_private_member_variable "abstract" . optional_constant $@26 function_declaration_header "end of expression"

    "const"  shift, and go to state 1299

    $default  reduce using rule 474 (optional_constant)

    optional_constant  go to state 1300


State 1216

  488 struct_variable_declaration_list: struct_variable_declaration_list optional_annotation_list "def" optional_public_or_private_member_variable optional_static_member_variable . optional_override optional_constant $@27 function_declaration_header expression_block

    "override"  shift, and go to state 1217
    "sealed"    shift, and go to state 1218

    $default  reduce using rule 471 (optional_override)

    optional_override  go to state 1301


State 1217

  472 optional_override: "override" .

    $default  reduce using rule 472 (optional_override)


State 1218

  473 optional_override: "sealed" .

    $default  reduce using rule 473 (optional_override)


State 1219

  481 structure_variable_declaration: optional_field_annotation optional_static_member_variable optional_override . optional_public_or_private_member_variable variable_declaration

    "public"   shift, and go to state 1109
    "private"  shift, and go to state 1110

    $default  reduce using rule 476 (optional_public_or_private_member_variable)

    optional_public_or_private_member_variable  go to state 1302


State 1220

  522 let_variable_name_with_pos_list: let_variable_name_with_pos_list ',' "name" "aka" "name" .

    $default  reduce using rule 522 (let_variable_name_with_pos_list)


State 1221

  342 expr_method_call: expr . "->" "name" '(' ')'
  343                 | expr . "->" "name" '(' expr_list ')'
  353 expr_field: expr . '.' "name"
  354           | expr . '.' '.' "name"
  355           | expr . '.' "name" '(' ')'
  356           | expr . '.' "name" '(' expr_list ')'
  357           | expr . '.' basic_type_declaration '(' ')'
  358           | expr . '.' basic_type_declaration '(' expr_list ')'
  361           | expr . '.' $@17 error $@18
  383 expr: expr . "<<" expr
  384     | expr . ">>" expr
  385     | expr . "<<<" expr
  386     | expr . ">>>" expr
  387     | expr . '+' expr
  388     | expr . '-' expr
  389     | expr . '*' expr
  390     | expr . '/' expr
  391     | expr . '%' expr
  392     | expr . '<' expr
  393     | expr . '>' expr
  394     | expr . "==" expr
  395     | expr . "!=" expr
  396     | expr . "<=" expr
  397     | expr . ">=" expr
  398     | expr . '&' expr
  399     | expr . '|' expr
  400     | expr . '^' expr
  401     | expr . "&&" expr
  402     | expr . "||" expr
  403     | expr . "^^" expr
  404     | expr . ".." expr
  407     | expr . "++"
  408     | expr . "--"
  410     | expr . '[' expr ']'
  411     | expr . '.' '[' expr ']'
  412     | expr . "?[" expr ']'
  413     | expr . '.' "?[" expr ']'
  414     | expr . "?." "name"
  415     | expr . '.' "?." "name"
  424     | expr . "??" expr
  425     | expr . '?' expr ':' expr
  428     | expr . "is" "type" '<' $@19 type_declaration_no_options '>' $@20
  429     | expr . "is" basic_type_declaration
  430     | expr . "is" "name"
  431     | expr . "as" "name"
  434     | expr . "as" "type" '<' $@21 type_declaration '>' $@22
  435     | expr . "as" basic_type_declaration
  436     | expr . '?' "as" "name"
  439     | expr . '?' "as" "type" '<' $@23 type_declaration '>' $@24
  440     | expr . '?' "as" basic_type_declaration
  448     | expr . "<|" expr
  449     | expr . "|>" expr
  450     | expr . "|>" basic_type_declaration
  461 expr_mtag: expr . '.' "$f" '(' expr ')'
  462          | expr . "?." "$f" '(' expr ')'
  463          | expr . '.' '.' "$f" '(' expr ')'
  464          | expr . '.' "?." "$f" '(' expr ')'
  465          | expr . "as" "$f" '(' expr ')'
  466          | expr . '?' "as" "$f" '(' expr ')'
  467          | expr . "is" "$f" '(' expr ')'
  529 let_variable_declaration: let_variable_name_with_pos_list ':' type_declaration_no_options copy_or_move_or_clone expr . "end of expression"

    "is"                 shift, and go to state 648
    "as"                 shift, and go to state 649
    "<<"                 shift, and go to state 650
    ">>"                 shift, and go to state 651
    "++"                 shift, and go to state 652
    "--"                 shift, and go to state 653
    "<="                 shift, and go to state 654
    ">="                 shift, and go to state 655
    "=="                 shift, and go to state 656
    "!="                 shift, and go to state 657
    "->"                 shift, and go to state 658
    "??"                 shift, and go to state 659
    "?."                 shift, and go to state 660
    "?["                 shift, and go to state 661
    "<|"                 shift, and go to state 662
    "|>"                 shift, and go to state 663
    "<<<"                shift, and go to state 664
    ">>>"                shift, and go to state 665
    "&&"                 shift, and go to state 666
    "||"                 shift, and go to state 667
    "^^"                 shift, and go to state 668
    ".."                 shift, and go to state 669
    "end of expression"  shift, and go to state 1303
    '?'                  shift, and go to state 670
    '|'                  shift, and go to state 671
    '^'                  shift, and go to state 672
    '&'                  shift, and go to state 673
    '<'                  shift, and go to state 674
    '>'                  shift, and go to state 675
    '-'                  shift, and go to state 676
    '+'                  shift, and go to state 677
    '*'                  shift, and go to state 678
    '/'                  shift, and go to state 679
    '%'                  shift, and go to state 680
    '.'                  shift, and go to state 681
    '['                  shift, and go to state 682


State 1222

  530 let_variable_declaration: let_variable_name_with_pos_list optional_ref copy_or_move_or_clone expr "end of expression" .

    $default  reduce using rule 530 (let_variable_declaration)


State 1223

  746 make_struct_decl: "struct" '<' $@73 type_declaration_no_options '>' $@74 . '(' use_initializer optional_make_struct_dim_decl ')'

    '('  shift, and go to state 1304


State 1224

  749 make_struct_decl: "class" '<' $@75 type_declaration_no_options '>' $@76 . '(' use_initializer optional_make_struct_dim_decl ')'

    '('  shift, and go to state 1305


State 1225

  249 new_type_declaration: '<' $@3 type_declaration '>' $@4 .

    $default  reduce using rule 249 (new_type_declaration)


State 1226

  255 expr_new: "new" new_type_declaration '(' "uninitialized" make_struct_single ')' .

    $default  reduce using rule 255 (expr_new)


State 1227

  292 expr_type_info: "typeinfo" name_in_namespace '<' "name" '>' '(' . expr ')'

    "struct"                          shift, and go to state 409
    "class"                           shift, and go to state 410
    "true"                            shift, and go to state 411
    "false"                           shift, and go to state 412
    "new"                             shift, and go to state 413
    "typeinfo"                        shift, and go to state 414
    "type"                            shift, and go to state 415
    "array"                           shift, and go to state 416
    "null"                            shift, and go to state 417
    "table"                           shift, and go to state 418
    "deref"                           shift, and go to state 419
    "cast"                            shift, and go to state 420
    "upcast"                          shift, and go to state 421
    "addr"                            shift, and go to state 422
    "reinterpret"                     shift, and go to state 423
    "unsafe"                          shift, and go to state 424
    "fixed_array"                     shift, and go to state 425
    "default"                         shift, and go to state 426
    "bool"                            shift, and go to state 225
    "void"                            shift, and go to state 226
    "string"                          shift, and go to state 227
    "int"                             shift, and go to state 229
    "int2"                            shift, and go to state 230
    "int3"                            shift, and go to state 231
    "int4"                            shift, and go to state 232
    "uint"                            shift, and go to state 233
    "bitfield"                        shift, and go to state 427
    "uint2"                           shift, and go to state 235
    "uint3"                           shift, and go to state 236
    "uint4"                           shift, and go to state 237
    "float"                           shift, and go to state 238
    "float2"                          shift, and go to state 239
    "float3"                          shift, and go to state 240
    "float4"                          shift, and go to state 241
    "range"                           shift, and go to state 242
    "urange"                          shift, and go to state 243
    "range64"                         shift, and go to state 244
    "urange64"                        shift, and go to state 245
    "int64"                           shift, and go to state 247
    "uint64"                          shift, and go to state 248
    "double"                          shift, and go to state 249
    "int8"                            shift, and go to state 252
    "uint8"                           shift, and go to state 253
    "int16"                           shift, and go to state 254
    "uint16"                          shift, and go to state 255
    "tuple"                           shift, and go to state 428
    "variant"                         shift, and go to state 429
    "generator"                       shift, and go to state 430
    "++"                              shift, and go to state 431
    "--"                              shift, and go to state 432
    "::"                              shift, and go to state 55
    "$$"                              shift, and go to state 433
    "$i"                              shift, and go to state 434
    "$v"                              shift, and go to state 435
    "$b"                              shift, and go to state 436
    "$a"                              shift, and go to state 437
    "$c"                              shift, and go to state 438
    "..."                             shift, and go to state 439
    "integer constant"                shift, and go to state 440
    "long integer constant"           shift, and go to state 441
    "unsigned integer constant"       shift, and go to state 442
    "unsigned long integer constant"  shift, and go to state 443
    "unsigned int8 constant"          shift, and go to state 444
    "floating point constant"         shift, and go to state 445
    "double constant"                 shift, and go to state 446
    "name"                            shift, and go to state 56
    "start of the string"             shift, and go to state 447
    "begin of code block"             shift, and go to state 448
    '-'                               shift, and go to state 449
    '+'                               shift, and go to state 450
    '*'                               shift, and go to state 451
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 452
    '!'                               shift, and go to state 453
    '['                               shift, and go to state 454
    '('                               shift, and go to state 455
    '$'                               shift, and go to state 456
    '@'                               shift, and go to state 457

    string_builder          go to state 458
    expr_reader             go to state 459
    expr_call_pipe          go to state 460
    name_in_namespace       go to state 461
    expr_new                go to state 462
    expr_cast               go to state 463
    expr_type_decl          go to state 464
    expr_type_info          go to state 465
    block_or_lambda         go to state 466
    expr_full_block         go to state 467
    expr_numeric_const      go to state 468
    expr_named_call         go to state 469
    expr_method_call        go to state 470
    func_addr_expr          go to state 471
    expr_field              go to state 472
    expr_call               go to state 473
    expr                    go to state 1306
    expr_mtag               go to state 475
    basic_type_declaration  go to state 476
    make_decl               go to state 477
    make_struct_decl        go to state 478
    make_tuple_call         go to state 479
    make_dim_decl           go to state 480
    make_table_decl         go to state 481
    array_comprehension     go to state 482


State 1228

  293 expr_type_info: "typeinfo" name_in_namespace '<' "name" c_or_s "name" . '>' '(' expr ')'

    '>'  shift, and go to state 1307


State 1229

  290 expr_type_decl: "type" '<' $@11 type_declaration '>' $@12 .

    $default  reduce using rule 290 (expr_type_decl)


State 1230

  765 make_dim_decl: "array" "struct" '<' $@83 type_declaration_no_options '>' . $@84 '(' use_initializer optional_make_struct_dim_decl ')'

    $default  reduce using rule 764 ($@84)

    $@84  go to state 1308


State 1231

  768 make_dim_decl: "array" "tuple" '<' $@85 type_declaration_no_options '>' . $@86 '(' use_initializer optional_make_struct_dim_decl ')'

    $default  reduce using rule 767 ($@86)

    $@86  go to state 1309


State 1232

  771 make_dim_decl: "array" "variant" '<' $@87 type_declaration_no_options '>' . $@88 '(' make_variant_dim ')'

    $default  reduce using rule 770 ($@88)

    $@88  go to state 1310


State 1233

  775 make_dim_decl: "array" '<' $@89 type_declaration_no_options '>' $@90 . '(' optional_expr_list ')'

    '('  shift, and go to state 1311


State 1234

  784 make_table_decl: "table" '<' type_declaration_no_options '>' '(' optional_expr_map_tuple_list . ')'

    ')'  shift, and go to state 1312


State 1235

  239 optional_expr_map_tuple_list: expr_map_tuple_list . optional_comma
  781 expr_map_tuple_list: expr_map_tuple_list . ',' make_map_tuple

    ','  shift, and go to state 826

    $default  reduce using rule 788 (optional_comma)

    optional_comma  go to state 1313


State 1236

  785 make_table_decl: "table" '<' type_declaration_no_options c_or_s type_declaration_no_options '>' . '(' optional_expr_map_tuple_list ')'

    '('  shift, and go to state 1314


State 1237

  281 expr_cast: "cast" '<' $@5 type_declaration_no_options '>' $@6 . expr

    "struct"                          shift, and go to state 409
    "class"                           shift, and go to state 410
    "true"                            shift, and go to state 411
    "false"                           shift, and go to state 412
    "new"                             shift, and go to state 413
    "typeinfo"                        shift, and go to state 414
    "type"                            shift, and go to state 415
    "array"                           shift, and go to state 416
    "null"                            shift, and go to state 417
    "table"                           shift, and go to state 418
    "deref"                           shift, and go to state 419
    "cast"                            shift, and go to state 420
    "upcast"                          shift, and go to state 421
    "addr"                            shift, and go to state 422
    "reinterpret"                     shift, and go to state 423
    "unsafe"                          shift, and go to state 424
    "fixed_array"                     shift, and go to state 425
    "default"                         shift, and go to state 426
    "bool"                            shift, and go to state 225
    "void"                            shift, and go to state 226
    "string"                          shift, and go to state 227
    "int"                             shift, and go to state 229
    "int2"                            shift, and go to state 230
    "int3"                            shift, and go to state 231
    "int4"                            shift, and go to state 232
    "uint"                            shift, and go to state 233
    "bitfield"                        shift, and go to state 427
    "uint2"                           shift, and go to state 235
    "uint3"                           shift, and go to state 236
    "uint4"                           shift, and go to state 237
    "float"                           shift, and go to state 238
    "float2"                          shift, and go to state 239
    "float3"                          shift, and go to state 240
    "float4"                          shift, and go to state 241
    "range"                           shift, and go to state 242
    "urange"                          shift, and go to state 243
    "range64"                         shift, and go to state 244
    "urange64"                        shift, and go to state 245
    "int64"                           shift, and go to state 247
    "uint64"                          shift, and go to state 248
    "double"                          shift, and go to state 249
    "int8"                            shift, and go to state 252
    "uint8"                           shift, and go to state 253
    "int16"                           shift, and go to state 254
    "uint16"                          shift, and go to state 255
    "tuple"                           shift, and go to state 428
    "variant"                         shift, and go to state 429
    "generator"                       shift, and go to state 430
    "++"                              shift, and go to state 431
    "--"                              shift, and go to state 432
    "::"                              shift, and go to state 55
    "$$"                              shift, and go to state 433
    "$i"                              shift, and go to state 434
    "$v"                              shift, and go to state 435
    "$b"                              shift, and go to state 436
    "$a"                              shift, and go to state 437
    "$c"                              shift, and go to state 438
    "..."                             shift, and go to state 439
    "integer constant"                shift, and go to state 440
    "long integer constant"           shift, and go to state 441
    "unsigned integer constant"       shift, and go to state 442
    "unsigned long integer constant"  shift, and go to state 443
    "unsigned int8 constant"          shift, and go to state 444
    "floating point constant"         shift, and go to state 445
    "double constant"                 shift, and go to state 446
    "name"                            shift, and go to state 56
    "start of the string"             shift, and go to state 447
    "begin of code block"             shift, and go to state 448
    '-'                               shift, and go to state 449
    '+'                               shift, and go to state 450
    '*'                               shift, and go to state 451
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 452
    '!'                               shift, and go to state 453
    '['                               shift, and go to state 454
    '('                               shift, and go to state 455
    '$'                               shift, and go to state 456
    '@'                               shift, and go to state 457

    string_builder          go to state 458
    expr_reader             go to state 459
    expr_call_pipe          go to state 460
    name_in_namespace       go to state 461
    expr_new                go to state 462
    expr_cast               go to state 463
    expr_type_decl          go to state 464
    expr_type_info          go to state 465
    block_or_lambda         go to state 466
    expr_full_block         go to state 467
    expr_numeric_const      go to state 468
    expr_named_call         go to state 469
    expr_method_call        go to state 470
    func_addr_expr          go to state 471
    expr_field              go to state 472
    expr_call               go to state 473
    expr                    go to state 1315
    expr_mtag               go to state 475
    basic_type_declaration  go to state 476
    make_decl               go to state 477
    make_struct_decl        go to state 478
    make_tuple_call         go to state 479
    make_dim_decl           go to state 480
    make_table_decl         go to state 481
    array_comprehension     go to state 482


State 1238

  284 expr_cast: "upcast" '<' $@7 type_declaration_no_options '>' $@8 . expr

    "struct"                          shift, and go to state 409
    "class"                           shift, and go to state 410
    "true"                            shift, and go to state 411
    "false"                           shift, and go to state 412
    "new"                             shift, and go to state 413
    "typeinfo"                        shift, and go to state 414
    "type"                            shift, and go to state 415
    "array"                           shift, and go to state 416
    "null"                            shift, and go to state 417
    "table"                           shift, and go to state 418
    "deref"                           shift, and go to state 419
    "cast"                            shift, and go to state 420
    "upcast"                          shift, and go to state 421
    "addr"                            shift, and go to state 422
    "reinterpret"                     shift, and go to state 423
    "unsafe"                          shift, and go to state 424
    "fixed_array"                     shift, and go to state 425
    "default"                         shift, and go to state 426
    "bool"                            shift, and go to state 225
    "void"                            shift, and go to state 226
    "string"                          shift, and go to state 227
    "int"                             shift, and go to state 229
    "int2"                            shift, and go to state 230
    "int3"                            shift, and go to state 231
    "int4"                            shift, and go to state 232
    "uint"                            shift, and go to state 233
    "bitfield"                        shift, and go to state 427
    "uint2"                           shift, and go to state 235
    "uint3"                           shift, and go to state 236
    "uint4"                           shift, and go to state 237
    "float"                           shift, and go to state 238
    "float2"                          shift, and go to state 239
    "float3"                          shift, and go to state 240
    "float4"                          shift, and go to state 241
    "range"                           shift, and go to state 242
    "urange"                          shift, and go to state 243
    "range64"                         shift, and go to state 244
    "urange64"                        shift, and go to state 245
    "int64"                           shift, and go to state 247
    "uint64"                          shift, and go to state 248
    "double"                          shift, and go to state 249
    "int8"                            shift, and go to state 252
    "uint8"                           shift, and go to state 253
    "int16"                           shift, and go to state 254
    "uint16"                          shift, and go to state 255
    "tuple"                           shift, and go to state 428
    "variant"                         shift, and go to state 429
    "generator"                       shift, and go to state 430
    "++"                              shift, and go to state 431
    "--"                              shift, and go to state 432
    "::"                              shift, and go to state 55
    "$$"                              shift, and go to state 433
    "$i"                              shift, and go to state 434
    "$v"                              shift, and go to state 435
    "$b"                              shift, and go to state 436
    "$a"                              shift, and go to state 437
    "$c"                              shift, and go to state 438
    "..."                             shift, and go to state 439
    "integer constant"                shift, and go to state 440
    "long integer constant"           shift, and go to state 441
    "unsigned integer constant"       shift, and go to state 442
    "unsigned long integer constant"  shift, and go to state 443
    "unsigned int8 constant"          shift, and go to state 444
    "floating point constant"         shift, and go to state 445
    "double constant"                 shift, and go to state 446
    "name"                            shift, and go to state 56
    "start of the string"             shift, and go to state 447
    "begin of code block"             shift, and go to state 448
    '-'                               shift, and go to state 449
    '+'                               shift, and go to state 450
    '*'                               shift, and go to state 451
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 452
    '!'                               shift, and go to state 453
    '['                               shift, and go to state 454
    '('                               shift, and go to state 455
    '$'                               shift, and go to state 456
    '@'                               shift, and go to state 457

    string_builder          go to state 458
    expr_reader             go to state 459
    expr_call_pipe          go to state 460
    name_in_namespace       go to state 461
    expr_new                go to state 462
    expr_cast               go to state 463
    expr_type_decl          go to state 464
    expr_type_info          go to state 465
    block_or_lambda         go to state 466
    expr_full_block         go to state 467
    expr_numeric_const      go to state 468
    expr_named_call         go to state 469
    expr_method_call        go to state 470
    func_addr_expr          go to state 471
    expr_field              go to state 472
    expr_call               go to state 473
    expr                    go to state 1316
    expr_mtag               go to state 475
    basic_type_declaration  go to state 476
    make_decl               go to state 477
    make_struct_decl        go to state 478
    make_tuple_call         go to state 479
    make_dim_decl           go to state 480
    make_table_decl         go to state 481
    array_comprehension     go to state 482


State 1239

  287 expr_cast: "reinterpret" '<' $@9 type_declaration_no_options '>' $@10 . expr

    "struct"                          shift, and go to state 409
    "class"                           shift, and go to state 410
    "true"                            shift, and go to state 411
    "false"                           shift, and go to state 412
    "new"                             shift, and go to state 413
    "typeinfo"                        shift, and go to state 414
    "type"                            shift, and go to state 415
    "array"                           shift, and go to state 416
    "null"                            shift, and go to state 417
    "table"                           shift, and go to state 418
    "deref"                           shift, and go to state 419
    "cast"                            shift, and go to state 420
    "upcast"                          shift, and go to state 421
    "addr"                            shift, and go to state 422
    "reinterpret"                     shift, and go to state 423
    "unsafe"                          shift, and go to state 424
    "fixed_array"                     shift, and go to state 425
    "default"                         shift, and go to state 426
    "bool"                            shift, and go to state 225
    "void"                            shift, and go to state 226
    "string"                          shift, and go to state 227
    "int"                             shift, and go to state 229
    "int2"                            shift, and go to state 230
    "int3"                            shift, and go to state 231
    "int4"                            shift, and go to state 232
    "uint"                            shift, and go to state 233
    "bitfield"                        shift, and go to state 427
    "uint2"                           shift, and go to state 235
    "uint3"                           shift, and go to state 236
    "uint4"                           shift, and go to state 237
    "float"                           shift, and go to state 238
    "float2"                          shift, and go to state 239
    "float3"                          shift, and go to state 240
    "float4"                          shift, and go to state 241
    "range"                           shift, and go to state 242
    "urange"                          shift, and go to state 243
    "range64"                         shift, and go to state 244
    "urange64"                        shift, and go to state 245
    "int64"                           shift, and go to state 247
    "uint64"                          shift, and go to state 248
    "double"                          shift, and go to state 249
    "int8"                            shift, and go to state 252
    "uint8"                           shift, and go to state 253
    "int16"                           shift, and go to state 254
    "uint16"                          shift, and go to state 255
    "tuple"                           shift, and go to state 428
    "variant"                         shift, and go to state 429
    "generator"                       shift, and go to state 430
    "++"                              shift, and go to state 431
    "--"                              shift, and go to state 432
    "::"                              shift, and go to state 55
    "$$"                              shift, and go to state 433
    "$i"                              shift, and go to state 434
    "$v"                              shift, and go to state 435
    "$b"                              shift, and go to state 436
    "$a"                              shift, and go to state 437
    "$c"                              shift, and go to state 438
    "..."                             shift, and go to state 439
    "integer constant"                shift, and go to state 440
    "long integer constant"           shift, and go to state 441
    "unsigned integer constant"       shift, and go to state 442
    "unsigned long integer constant"  shift, and go to state 443
    "unsigned int8 constant"          shift, and go to state 444
    "floating point constant"         shift, and go to state 445
    "double constant"                 shift, and go to state 446
    "name"                            shift, and go to state 56
    "start of the string"             shift, and go to state 447
    "begin of code block"             shift, and go to state 448
    '-'                               shift, and go to state 449
    '+'                               shift, and go to state 450
    '*'                               shift, and go to state 451
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 452
    '!'                               shift, and go to state 453
    '['                               shift, and go to state 454
    '('                               shift, and go to state 455
    '$'                               shift, and go to state 456
    '@'                               shift, and go to state 457

    string_builder          go to state 458
    expr_reader             go to state 459
    expr_call_pipe          go to state 460
    name_in_namespace       go to state 461
    expr_new                go to state 462
    expr_cast               go to state 463
    expr_type_decl          go to state 464
    expr_type_info          go to state 465
    block_or_lambda         go to state 466
    expr_full_block         go to state 467
    expr_numeric_const      go to state 468
    expr_named_call         go to state 469
    expr_method_call        go to state 470
    func_addr_expr          go to state 471
    expr_field              go to state 472
    expr_call               go to state 473
    expr                    go to state 1317
    expr_mtag               go to state 475
    basic_type_declaration  go to state 476
    make_decl               go to state 477
    make_struct_decl        go to state 478
    make_tuple_call         go to state 479
    make_dim_decl           go to state 480
    make_table_decl         go to state 481
    array_comprehension     go to state 482


State 1240

  779 make_dim_decl: "fixed_array" '<' $@91 type_declaration_no_options '>' $@92 . '(' expr_list optional_comma ')'

    '('  shift, and go to state 1318


State 1241

  755 make_struct_decl: "default" '<' $@79 type_declaration_no_options '>' $@80 . use_initializer

    "uninitialized"  shift, and go to state 1319

    $default  reduce using rule 742 (use_initializer)

    use_initializer  go to state 1320


State 1242

  761 make_tuple_call: "tuple" '<' $@81 type_declaration_no_options '>' $@82 . '(' use_initializer optional_make_struct_dim_decl ')'

    '('  shift, and go to state 1321


State 1243

  752 make_struct_decl: "variant" '<' $@77 type_declaration_no_options '>' $@78 . '(' make_variant_dim ')'

    '('  shift, and go to state 1322


State 1244

  421 expr: "generator" '<' type_declaration_no_options '>' optional_capture_list '(' . ')'
  422     | "generator" '<' type_declaration_no_options '>' optional_capture_list '(' . expr ')'

    "struct"                          shift, and go to state 409
    "class"                           shift, and go to state 410
    "true"                            shift, and go to state 411
    "false"                           shift, and go to state 412
    "new"                             shift, and go to state 413
    "typeinfo"                        shift, and go to state 414
    "type"                            shift, and go to state 415
    "array"                           shift, and go to state 416
    "null"                            shift, and go to state 417
    "table"                           shift, and go to state 418
    "deref"                           shift, and go to state 419
    "cast"                            shift, and go to state 420
    "upcast"                          shift, and go to state 421
    "addr"                            shift, and go to state 422
    "reinterpret"                     shift, and go to state 423
    "unsafe"                          shift, and go to state 424
    "fixed_array"                     shift, and go to state 425
    "default"                         shift, and go to state 426
    "bool"                            shift, and go to state 225
    "void"                            shift, and go to state 226
    "string"                          shift, and go to state 227
    "int"                             shift, and go to state 229
    "int2"                            shift, and go to state 230
    "int3"                            shift, and go to state 231
    "int4"                            shift, and go to state 232
    "uint"                            shift, and go to state 233
    "bitfield"                        shift, and go to state 427
    "uint2"                           shift, and go to state 235
    "uint3"                           shift, and go to state 236
    "uint4"                           shift, and go to state 237
    "float"                           shift, and go to state 238
    "float2"                          shift, and go to state 239
    "float3"                          shift, and go to state 240
    "float4"                          shift, and go to state 241
    "range"                           shift, and go to state 242
    "urange"                          shift, and go to state 243
    "range64"                         shift, and go to state 244
    "urange64"                        shift, and go to state 245
    "int64"                           shift, and go to state 247
    "uint64"                          shift, and go to state 248
    "double"                          shift, and go to state 249
    "int8"                            shift, and go to state 252
    "uint8"                           shift, and go to state 253
    "int16"                           shift, and go to state 254
    "uint16"                          shift, and go to state 255
    "tuple"                           shift, and go to state 428
    "variant"                         shift, and go to state 429
    "generator"                       shift, and go to state 430
    "++"                              shift, and go to state 431
    "--"                              shift, and go to state 432
    "::"                              shift, and go to state 55
    "$$"                              shift, and go to state 433
    "$i"                              shift, and go to state 434
    "$v"                              shift, and go to state 435
    "$b"                              shift, and go to state 436
    "$a"                              shift, and go to state 437
    "$c"                              shift, and go to state 438
    "..."                             shift, and go to state 439
    "integer constant"                shift, and go to state 440
    "long integer constant"           shift, and go to state 441
    "unsigned integer constant"       shift, and go to state 442
    "unsigned long integer constant"  shift, and go to state 443
    "unsigned int8 constant"          shift, and go to state 444
    "floating point constant"         shift, and go to state 445
    "double constant"                 shift, and go to state 446
    "name"                            shift, and go to state 56
    "start of the string"             shift, and go to state 447
    "begin of code block"             shift, and go to state 448
    '-'                               shift, and go to state 449
    '+'                               shift, and go to state 450
    '*'                               shift, and go to state 451
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 452
    '!'                               shift, and go to state 453
    '['                               shift, and go to state 454
    '('                               shift, and go to state 455
    ')'                               shift, and go to state 1323
    '$'                               shift, and go to state 456
    '@'                               shift, and go to state 457

    string_builder          go to state 458
    expr_reader             go to state 459
    expr_call_pipe          go to state 460
    name_in_namespace       go to state 461
    expr_new                go to state 462
    expr_cast               go to state 463
    expr_type_decl          go to state 464
    expr_type_info          go to state 465
    block_or_lambda         go to state 466
    expr_full_block         go to state 467
    expr_numeric_const      go to state 468
    expr_named_call         go to state 469
    expr_method_call        go to state 470
    func_addr_expr          go to state 471
    expr_field              go to state 472
    expr_call               go to state 473
    expr                    go to state 1324
    expr_mtag               go to state 475
    basic_type_declaration  go to state 476
    make_decl               go to state 477
    make_struct_decl        go to state 478
    make_tuple_call         go to state 479
    make_dim_decl           go to state 480
    make_table_decl         go to state 481
    array_comprehension     go to state 482


State 1245

  423 expr: "generator" '<' type_declaration_no_options '>' optional_capture_list expression_block .

    $default  reduce using rule 423 (expr)


State 1246

  459 expr_mtag: "$c" '(' expr ')' '(' ')' .

    $default  reduce using rule 459 (expr_mtag)


State 1247

  295 expr_list: expr_list . ',' expr
  460 expr_mtag: "$c" '(' expr ')' '(' expr_list . ')'

    ','  shift, and go to state 1074
    ')'  shift, and go to state 1325


State 1248

  295 expr_list: expr_list . ',' expr
  792 array_comprehension: "begin of code block" "for" '(' variable_name_with_pos_list "in" expr_list . ')' "end of expression" make_map_tuple array_comprehension_where "end of code block"

    ','  shift, and go to state 1074
    ')'  shift, and go to state 1326


State 1249

  295 expr_list: expr_list . ',' expr
  790 array_comprehension: '[' "for" '(' variable_name_with_pos_list "in" expr_list . ')' "end of expression" expr array_comprehension_where ']'

    ','  shift, and go to state 1074
    ')'  shift, and go to state 1327


State 1250

  791 array_comprehension: '[' "iterator" "for" '(' variable_name_with_pos_list "in" . expr_list ')' "end of expression" expr array_comprehension_where ']'

    "struct"                          shift, and go to state 409
    "class"                           shift, and go to state 410
    "true"                            shift, and go to state 411
    "false"                           shift, and go to state 412
    "new"                             shift, and go to state 413
    "typeinfo"                        shift, and go to state 414
    "type"                            shift, and go to state 415
    "array"                           shift, and go to state 416
    "null"                            shift, and go to state 417
    "table"                           shift, and go to state 418
    "deref"                           shift, and go to state 419
    "cast"                            shift, and go to state 420
    "upcast"                          shift, and go to state 421
    "addr"                            shift, and go to state 422
    "reinterpret"                     shift, and go to state 423
    "unsafe"                          shift, and go to state 424
    "fixed_array"                     shift, and go to state 425
    "default"                         shift, and go to state 426
    "bool"                            shift, and go to state 225
    "void"                            shift, and go to state 226
    "string"                          shift, and go to state 227
    "int"                             shift, and go to state 229
    "int2"                            shift, and go to state 230
    "int3"                            shift, and go to state 231
    "int4"                            shift, and go to state 232
    "uint"                            shift, and go to state 233
    "bitfield"                        shift, and go to state 427
    "uint2"                           shift, and go to state 235
    "uint3"                           shift, and go to state 236
    "uint4"                           shift, and go to state 237
    "float"                           shift, and go to state 238
    "float2"                          shift, and go to state 239
    "float3"                          shift, and go to state 240
    "float4"                          shift, and go to state 241
    "range"                           shift, and go to state 242
    "urange"                          shift, and go to state 243
    "range64"                         shift, and go to state 244
    "urange64"                        shift, and go to state 245
    "int64"                           shift, and go to state 247
    "uint64"                          shift, and go to state 248
    "double"                          shift, and go to state 249
    "int8"                            shift, and go to state 252
    "uint8"                           shift, and go to state 253
    "int16"                           shift, and go to state 254
    "uint16"                          shift, and go to state 255
    "tuple"                           shift, and go to state 428
    "variant"                         shift, and go to state 429
    "generator"                       shift, and go to state 430
    "++"                              shift, and go to state 431
    "--"                              shift, and go to state 432
    "::"                              shift, and go to state 55
    "$$"                              shift, and go to state 433
    "$i"                              shift, and go to state 434
    "$v"                              shift, and go to state 435
    "$b"                              shift, and go to state 436
    "$a"                              shift, and go to state 437
    "$c"                              shift, and go to state 438
    "..."                             shift, and go to state 439
    "integer constant"                shift, and go to state 440
    "long integer constant"           shift, and go to state 441
    "unsigned integer constant"       shift, and go to state 442
    "unsigned long integer constant"  shift, and go to state 443
    "unsigned int8 constant"          shift, and go to state 444
    "floating point constant"         shift, and go to state 445
    "double constant"                 shift, and go to state 446
    "name"                            shift, and go to state 56
    "start of the string"             shift, and go to state 447
    "begin of code block"             shift, and go to state 448
    '-'                               shift, and go to state 449
    '+'                               shift, and go to state 450
    '*'                               shift, and go to state 451
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 452
    '!'                               shift, and go to state 453
    '['                               shift, and go to state 454
    '('                               shift, and go to state 455
    '$'                               shift, and go to state 456
    '@'                               shift, and go to state 457

    string_builder          go to state 458
    expr_reader             go to state 459
    expr_call_pipe          go to state 460
    name_in_namespace       go to state 461
    expr_new                go to state 462
    expr_cast               go to state 463
    expr_type_decl          go to state 464
    expr_type_info          go to state 465
    expr_list               go to state 1328
    block_or_lambda         go to state 466
    expr_full_block         go to state 467
    expr_numeric_const      go to state 468
    expr_named_call         go to state 469
    expr_method_call        go to state 470
    func_addr_expr          go to state 471
    expr_field              go to state 472
    expr_call               go to state 473
    expr                    go to state 639
    expr_mtag               go to state 475
    basic_type_declaration  go to state 476
    make_decl               go to state 477
    make_struct_decl        go to state 478
    make_tuple_call         go to state 479
    make_dim_decl           go to state 480
    make_table_decl         go to state 481
    array_comprehension     go to state 482


State 1251

  345 func_addr_name: "$i" '(' expr ')' .

    $default  reduce using rule 345 (func_addr_name)


State 1252

  468 expr_mtag: '@' '@' "$c" '(' expr ')' .

    $default  reduce using rule 468 (expr_mtag)


State 1253

  349 func_addr_expr: '@' '@' '<' $@13 type_declaration_no_options '>' . $@14 func_addr_name

    $default  reduce using rule 348 ($@14)

    $@14  go to state 1329


State 1254

  352 func_addr_expr: '@' '@' '<' $@15 optional_function_argument_list optional_function_type . '>' $@16 func_addr_name

    '>'  shift, and go to state 1330


State 1255

  730 make_struct_fields: "$f" '(' expr ')' . copy_or_move expr
  731                   | "$f" '(' expr ')' . ":=" expr

    "<-"  shift, and go to state 927
    ":="  shift, and go to state 1331
    '='   shift, and go to state 929

    copy_or_move  go to state 1332


State 1256

  340 expr_named_call: name_in_namespace '(' '[' make_struct_fields ']' ')' .

    $default  reduce using rule 340 (expr_named_call)


State 1257

  341 expr_named_call: name_in_namespace '(' expr_list ',' '[' make_struct_fields . ']' ')'
  728 make_struct_fields: make_struct_fields . ',' "name" copy_or_move expr
  729                   | make_struct_fields . ',' "name" ":=" expr
  732                   | make_struct_fields . ',' "$f" '(' expr ')' copy_or_move expr
  733                   | make_struct_fields . ',' "$f" '(' expr ')' ":=" expr

    ','  shift, and go to state 1045
    ']'  shift, and go to state 1333


State 1258

  732 make_struct_fields: make_struct_fields ',' "$f" '(' . expr ')' copy_or_move expr
  733                   | make_struct_fields ',' "$f" '(' . expr ')' ":=" expr

    "struct"                          shift, and go to state 409
    "class"                           shift, and go to state 410
    "true"                            shift, and go to state 411
    "false"                           shift, and go to state 412
    "new"                             shift, and go to state 413
    "typeinfo"                        shift, and go to state 414
    "type"                            shift, and go to state 415
    "array"                           shift, and go to state 416
    "null"                            shift, and go to state 417
    "table"                           shift, and go to state 418
    "deref"                           shift, and go to state 419
    "cast"                            shift, and go to state 420
    "upcast"                          shift, and go to state 421
    "addr"                            shift, and go to state 422
    "reinterpret"                     shift, and go to state 423
    "unsafe"                          shift, and go to state 424
    "fixed_array"                     shift, and go to state 425
    "default"                         shift, and go to state 426
    "bool"                            shift, and go to state 225
    "void"                            shift, and go to state 226
    "string"                          shift, and go to state 227
    "int"                             shift, and go to state 229
    "int2"                            shift, and go to state 230
    "int3"                            shift, and go to state 231
    "int4"                            shift, and go to state 232
    "uint"                            shift, and go to state 233
    "bitfield"                        shift, and go to state 427
    "uint2"                           shift, and go to state 235
    "uint3"                           shift, and go to state 236
    "uint4"                           shift, and go to state 237
    "float"                           shift, and go to state 238
    "float2"                          shift, and go to state 239
    "float3"                          shift, and go to state 240
    "float4"                          shift, and go to state 241
    "range"                           shift, and go to state 242
    "urange"                          shift, and go to state 243
    "range64"                         shift, and go to state 244
    "urange64"                        shift, and go to state 245
    "int64"                           shift, and go to state 247
    "uint64"                          shift, and go to state 248
    "double"                          shift, and go to state 249
    "int8"                            shift, and go to state 252
    "uint8"                           shift, and go to state 253
    "int16"                           shift, and go to state 254
    "uint16"                          shift, and go to state 255
    "tuple"                           shift, and go to state 428
    "variant"                         shift, and go to state 429
    "generator"                       shift, and go to state 430
    "++"                              shift, and go to state 431
    "--"                              shift, and go to state 432
    "::"                              shift, and go to state 55
    "$$"                              shift, and go to state 433
    "$i"                              shift, and go to state 434
    "$v"                              shift, and go to state 435
    "$b"                              shift, and go to state 436
    "$a"                              shift, and go to state 437
    "$c"                              shift, and go to state 438
    "..."                             shift, and go to state 439
    "integer constant"                shift, and go to state 440
    "long integer constant"           shift, and go to state 441
    "unsigned integer constant"       shift, and go to state 442
    "unsigned long integer constant"  shift, and go to state 443
    "unsigned int8 constant"          shift, and go to state 444
    "floating point constant"         shift, and go to state 445
    "double constant"                 shift, and go to state 446
    "name"                            shift, and go to state 56
    "start of the string"             shift, and go to state 447
    "begin of code block"             shift, and go to state 448
    '-'                               shift, and go to state 449
    '+'                               shift, and go to state 450
    '*'                               shift, and go to state 451
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 452
    '!'                               shift, and go to state 453
    '['                               shift, and go to state 454
    '('                               shift, and go to state 455
    '$'                               shift, and go to state 456
    '@'                               shift, and go to state 457

    string_builder          go to state 458
    expr_reader             go to state 459
    expr_call_pipe          go to state 460
    name_in_namespace       go to state 461
    expr_new                go to state 462
    expr_cast               go to state 463
    expr_type_decl          go to state 464
    expr_type_info          go to state 465
    block_or_lambda         go to state 466
    expr_full_block         go to state 467
    expr_numeric_const      go to state 468
    expr_named_call         go to state 469
    expr_method_call        go to state 470
    func_addr_expr          go to state 471
    expr_field              go to state 472
    expr_call               go to state 473
    expr                    go to state 1334
    expr_mtag               go to state 475
    basic_type_declaration  go to state 476
    make_decl               go to state 477
    make_struct_decl        go to state 478
    make_tuple_call         go to state 479
    make_dim_decl           go to state 480
    make_table_decl         go to state 481
    array_comprehension     go to state 482


State 1259

  729 make_struct_fields: make_struct_fields ',' "name" ":=" . expr

    "struct"                          shift, and go to state 409
    "class"                           shift, and go to state 410
    "true"                            shift, and go to state 411
    "false"                           shift, and go to state 412
    "new"                             shift, and go to state 413
    "typeinfo"                        shift, and go to state 414
    "type"                            shift, and go to state 415
    "array"                           shift, and go to state 416
    "null"                            shift, and go to state 417
    "table"                           shift, and go to state 418
    "deref"                           shift, and go to state 419
    "cast"                            shift, and go to state 420
    "upcast"                          shift, and go to state 421
    "addr"                            shift, and go to state 422
    "reinterpret"                     shift, and go to state 423
    "unsafe"                          shift, and go to state 424
    "fixed_array"                     shift, and go to state 425
    "default"                         shift, and go to state 426
    "bool"                            shift, and go to state 225
    "void"                            shift, and go to state 226
    "string"                          shift, and go to state 227
    "int"                             shift, and go to state 229
    "int2"                            shift, and go to state 230
    "int3"                            shift, and go to state 231
    "int4"                            shift, and go to state 232
    "uint"                            shift, and go to state 233
    "bitfield"                        shift, and go to state 427
    "uint2"                           shift, and go to state 235
    "uint3"                           shift, and go to state 236
    "uint4"                           shift, and go to state 237
    "float"                           shift, and go to state 238
    "float2"                          shift, and go to state 239
    "float3"                          shift, and go to state 240
    "float4"                          shift, and go to state 241
    "range"                           shift, and go to state 242
    "urange"                          shift, and go to state 243
    "range64"                         shift, and go to state 244
    "urange64"                        shift, and go to state 245
    "int64"                           shift, and go to state 247
    "uint64"                          shift, and go to state 248
    "double"                          shift, and go to state 249
    "int8"                            shift, and go to state 252
    "uint8"                           shift, and go to state 253
    "int16"                           shift, and go to state 254
    "uint16"                          shift, and go to state 255
    "tuple"                           shift, and go to state 428
    "variant"                         shift, and go to state 429
    "generator"                       shift, and go to state 430
    "++"                              shift, and go to state 431
    "--"                              shift, and go to state 432
    "::"                              shift, and go to state 55
    "$$"                              shift, and go to state 433
    "$i"                              shift, and go to state 434
    "$v"                              shift, and go to state 435
    "$b"                              shift, and go to state 436
    "$a"                              shift, and go to state 437
    "$c"                              shift, and go to state 438
    "..."                             shift, and go to state 439
    "integer constant"                shift, and go to state 440
    "long integer constant"           shift, and go to state 441
    "unsigned integer constant"       shift, and go to state 442
    "unsigned long integer constant"  shift, and go to state 443
    "unsigned int8 constant"          shift, and go to state 444
    "floating point constant"         shift, and go to state 445
    "double constant"                 shift, and go to state 446
    "name"                            shift, and go to state 56
    "start of the string"             shift, and go to state 447
    "begin of code block"             shift, and go to state 448
    '-'                               shift, and go to state 449
    '+'                               shift, and go to state 450
    '*'                               shift, and go to state 451
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 452
    '!'                               shift, and go to state 453
    '['                               shift, and go to state 454
    '('                               shift, and go to state 455
    '$'                               shift, and go to state 456
    '@'                               shift, and go to state 457

    string_builder          go to state 458
    expr_reader             go to state 459
    expr_call_pipe          go to state 460
    name_in_namespace       go to state 461
    expr_new                go to state 462
    expr_cast               go to state 463
    expr_type_decl          go to state 464
    expr_type_info          go to state 465
    block_or_lambda         go to state 466
    expr_full_block         go to state 467
    expr_numeric_const      go to state 468
    expr_named_call         go to state 469
    expr_method_call        go to state 470
    func_addr_expr          go to state 471
    expr_field              go to state 472
    expr_call               go to state 473
    expr                    go to state 1335
    expr_mtag               go to state 475
    basic_type_declaration  go to state 476
    make_decl               go to state 477
    make_struct_decl        go to state 478
    make_tuple_call         go to state 479
    make_dim_decl           go to state 480
    make_table_decl         go to state 481
    array_comprehension     go to state 482


State 1260

  728 make_struct_fields: make_struct_fields ',' "name" copy_or_move . expr

    "struct"                          shift, and go to state 409
    "class"                           shift, and go to state 410
    "true"                            shift, and go to state 411
    "false"                           shift, and go to state 412
    "new"                             shift, and go to state 413
    "typeinfo"                        shift, and go to state 414
    "type"                            shift, and go to state 415
    "array"                           shift, and go to state 416
    "null"                            shift, and go to state 417
    "table"                           shift, and go to state 418
    "deref"                           shift, and go to state 419
    "cast"                            shift, and go to state 420
    "upcast"                          shift, and go to state 421
    "addr"                            shift, and go to state 422
    "reinterpret"                     shift, and go to state 423
    "unsafe"                          shift, and go to state 424
    "fixed_array"                     shift, and go to state 425
    "default"                         shift, and go to state 426
    "bool"                            shift, and go to state 225
    "void"                            shift, and go to state 226
    "string"                          shift, and go to state 227
    "int"                             shift, and go to state 229
    "int2"                            shift, and go to state 230
    "int3"                            shift, and go to state 231
    "int4"                            shift, and go to state 232
    "uint"                            shift, and go to state 233
    "bitfield"                        shift, and go to state 427
    "uint2"                           shift, and go to state 235
    "uint3"                           shift, and go to state 236
    "uint4"                           shift, and go to state 237
    "float"                           shift, and go to state 238
    "float2"                          shift, and go to state 239
    "float3"                          shift, and go to state 240
    "float4"                          shift, and go to state 241
    "range"                           shift, and go to state 242
    "urange"                          shift, and go to state 243
    "range64"                         shift, and go to state 244
    "urange64"                        shift, and go to state 245
    "int64"                           shift, and go to state 247
    "uint64"                          shift, and go to state 248
    "double"                          shift, and go to state 249
    "int8"                            shift, and go to state 252
    "uint8"                           shift, and go to state 253
    "int16"                           shift, and go to state 254
    "uint16"                          shift, and go to state 255
    "tuple"                           shift, and go to state 428
    "variant"                         shift, and go to state 429
    "generator"                       shift, and go to state 430
    "++"                              shift, and go to state 431
    "--"                              shift, and go to state 432
    "::"                              shift, and go to state 55
    "$$"                              shift, and go to state 433
    "$i"                              shift, and go to state 434
    "$v"                              shift, and go to state 435
    "$b"                              shift, and go to state 436
    "$a"                              shift, and go to state 437
    "$c"                              shift, and go to state 438
    "..."                             shift, and go to state 439
    "integer constant"                shift, and go to state 440
    "long integer constant"           shift, and go to state 441
    "unsigned integer constant"       shift, and go to state 442
    "unsigned long integer constant"  shift, and go to state 443
    "unsigned int8 constant"          shift, and go to state 444
    "floating point constant"         shift, and go to state 445
    "double constant"                 shift, and go to state 446
    "name"                            shift, and go to state 56
    "start of the string"             shift, and go to state 447
    "begin of code block"             shift, and go to state 448
    '-'                               shift, and go to state 449
    '+'                               shift, and go to state 450
    '*'                               shift, and go to state 451
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 452
    '!'                               shift, and go to state 453
    '['                               shift, and go to state 454
    '('                               shift, and go to state 455
    '$'                               shift, and go to state 456
    '@'                               shift, and go to state 457

    string_builder          go to state 458
    expr_reader             go to state 459
    expr_call_pipe          go to state 460
    name_in_namespace       go to state 461
    expr_new                go to state 462
    expr_cast               go to state 463
    expr_type_decl          go to state 464
    expr_type_info          go to state 465
    block_or_lambda         go to state 466
    expr_full_block         go to state 467
    expr_numeric_const      go to state 468
    expr_named_call         go to state 469
    expr_method_call        go to state 470
    func_addr_expr          go to state 471
    expr_field              go to state 472
    expr_call               go to state 473
    expr                    go to state 1336
    expr_mtag               go to state 475
    basic_type_declaration  go to state 476
    make_decl               go to state 477
    make_struct_decl        go to state 478
    make_tuple_call         go to state 479
    make_dim_decl           go to state 480
    make_table_decl         go to state 481
    array_comprehension     go to state 482


State 1261

  304 capture_entry: "<-" "name" .

    $default  reduce using rule 304 (capture_entry)


State 1262

  305 capture_entry: ":=" "name" .

    $default  reduce using rule 305 (capture_entry)


State 1263

  306 capture_entry: "name" '(' . "name" ')'

    "name"  shift, and go to state 1337


State 1264

  303 capture_entry: '=' "name" .

    $default  reduce using rule 303 (capture_entry)


State 1265

  302 capture_entry: '&' "name" .

    $default  reduce using rule 302 (capture_entry)


State 1266

  308 capture_list: capture_list ',' . capture_entry

    "<-"    shift, and go to state 1167
    ":="    shift, and go to state 1168
    "name"  shift, and go to state 1169
    '='     shift, and go to state 1170
    '&'     shift, and go to state 1171

    capture_entry  go to state 1338


State 1267

  310 optional_capture_list: "capture" '(' capture_list ')' .

    $default  reduce using rule 310 (optional_capture_list)


State 1268

  297 block_or_simple_block: "=>" . expr
  298                      | "=>" . "<-" expr

    "struct"                          shift, and go to state 409
    "class"                           shift, and go to state 410
    "true"                            shift, and go to state 411
    "false"                           shift, and go to state 412
    "new"                             shift, and go to state 413
    "typeinfo"                        shift, and go to state 414
    "type"                            shift, and go to state 415
    "array"                           shift, and go to state 416
    "null"                            shift, and go to state 417
    "table"                           shift, and go to state 418
    "deref"                           shift, and go to state 419
    "cast"                            shift, and go to state 420
    "upcast"                          shift, and go to state 421
    "addr"                            shift, and go to state 422
    "reinterpret"                     shift, and go to state 423
    "unsafe"                          shift, and go to state 424
    "fixed_array"                     shift, and go to state 425
    "default"                         shift, and go to state 426
    "bool"                            shift, and go to state 225
    "void"                            shift, and go to state 226
    "string"                          shift, and go to state 227
    "int"                             shift, and go to state 229
    "int2"                            shift, and go to state 230
    "int3"                            shift, and go to state 231
    "int4"                            shift, and go to state 232
    "uint"                            shift, and go to state 233
    "bitfield"                        shift, and go to state 427
    "uint2"                           shift, and go to state 235
    "uint3"                           shift, and go to state 236
    "uint4"                           shift, and go to state 237
    "float"                           shift, and go to state 238
    "float2"                          shift, and go to state 239
    "float3"                          shift, and go to state 240
    "float4"                          shift, and go to state 241
    "range"                           shift, and go to state 242
    "urange"                          shift, and go to state 243
    "range64"                         shift, and go to state 244
    "urange64"                        shift, and go to state 245
    "int64"                           shift, and go to state 247
    "uint64"                          shift, and go to state 248
    "double"                          shift, and go to state 249
    "int8"                            shift, and go to state 252
    "uint8"                           shift, and go to state 253
    "int16"                           shift, and go to state 254
    "uint16"                          shift, and go to state 255
    "tuple"                           shift, and go to state 428
    "variant"                         shift, and go to state 429
    "generator"                       shift, and go to state 430
    "++"                              shift, and go to state 431
    "--"                              shift, and go to state 432
    "<-"                              shift, and go to state 1339
    "::"                              shift, and go to state 55
    "$$"                              shift, and go to state 433
    "$i"                              shift, and go to state 434
    "$v"                              shift, and go to state 435
    "$b"                              shift, and go to state 436
    "$a"                              shift, and go to state 437
    "$c"                              shift, and go to state 438
    "..."                             shift, and go to state 439
    "integer constant"                shift, and go to state 440
    "long integer constant"           shift, and go to state 441
    "unsigned integer constant"       shift, and go to state 442
    "unsigned long integer constant"  shift, and go to state 443
    "unsigned int8 constant"          shift, and go to state 444
    "floating point constant"         shift, and go to state 445
    "double constant"                 shift, and go to state 446
    "name"                            shift, and go to state 56
    "start of the string"             shift, and go to state 447
    "begin of code block"             shift, and go to state 448
    '-'                               shift, and go to state 449
    '+'                               shift, and go to state 450
    '*'                               shift, and go to state 451
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 452
    '!'                               shift, and go to state 453
    '['                               shift, and go to state 454
    '('                               shift, and go to state 455
    '$'                               shift, and go to state 456
    '@'                               shift, and go to state 457

    string_builder          go to state 458
    expr_reader             go to state 459
    expr_call_pipe          go to state 460
    name_in_namespace       go to state 461
    expr_new                go to state 462
    expr_cast               go to state 463
    expr_type_decl          go to state 464
    expr_type_info          go to state 465
    block_or_lambda         go to state 466
    expr_full_block         go to state 467
    expr_numeric_const      go to state 468
    expr_named_call         go to state 469
    expr_method_call        go to state 470
    func_addr_expr          go to state 471
    expr_field              go to state 472
    expr_call               go to state 473
    expr                    go to state 1340
    expr_mtag               go to state 475
    basic_type_declaration  go to state 476
    make_decl               go to state 477
    make_struct_decl        go to state 478
    make_tuple_call         go to state 479
    make_dim_decl           go to state 480
    make_table_decl         go to state 481
    array_comprehension     go to state 482


State 1269

  296 block_or_simple_block: expression_block .

    $default  reduce using rule 296 (block_or_simple_block)


State 1270

  311 expr_full_block: block_or_lambda optional_annotation_list optional_capture_list optional_function_argument_list optional_function_type block_or_simple_block .

    $default  reduce using rule 311 (expr_full_block)


State 1271

  312 expr_full_block_assumed_piped: block_or_lambda optional_annotation_list optional_capture_list optional_function_argument_list optional_function_type . expression_block

    "begin of code block"  shift, and go to state 326

    expression_block  go to state 1341


State 1272

  428 expr: expr "is" "type" '<' $@19 type_declaration_no_options . '>' $@20

    '>'  shift, and go to state 1342


State 1273

  467 expr_mtag: expr "is" "$f" '(' expr ')' .

    $default  reduce using rule 467 (expr_mtag)


State 1274

  434 expr: expr "as" "type" '<' $@21 type_declaration . '>' $@22
  707 type_declaration: type_declaration . '|' type_declaration_no_options
  708                 | type_declaration . '|' '#'

    '|'  shift, and go to state 375
    '>'  shift, and go to state 1343


State 1275

  465 expr_mtag: expr "as" "$f" '(' expr ')' .

    $default  reduce using rule 465 (expr_mtag)


State 1276

  343 expr_method_call: expr "->" "name" '(' expr_list ')' .

    $default  reduce using rule 343 (expr_method_call)


State 1277

  462 expr_mtag: expr "?." "$f" '(' expr ')' .

    $default  reduce using rule 462 (expr_mtag)


State 1278

  439 expr: expr '?' "as" "type" '<' $@23 . type_declaration '>' $@24

    "type"       shift, and go to state 219
    "array"      shift, and go to state 220
    "table"      shift, and go to state 221
    "typedecl"   shift, and go to state 222
    "iterator"   shift, and go to state 223
    "smart_ptr"  shift, and go to state 224
    "bool"       shift, and go to state 225
    "void"       shift, and go to state 226
    "string"     shift, and go to state 227
    "auto"       shift, and go to state 228
    "int"        shift, and go to state 229
    "int2"       shift, and go to state 230
    "int3"       shift, and go to state 231
    "int4"       shift, and go to state 232
    "uint"       shift, and go to state 233
    "bitfield"   shift, and go to state 234
    "uint2"      shift, and go to state 235
    "uint3"      shift, and go to state 236
    "uint4"      shift, and go to state 237
    "float"      shift, and go to state 238
    "float2"     shift, and go to state 239
    "float3"     shift, and go to state 240
    "float4"     shift, and go to state 241
    "range"      shift, and go to state 242
    "urange"     shift, and go to state 243
    "range64"    shift, and go to state 244
    "urange64"   shift, and go to state 245
    "block"      shift, and go to state 246
    "int64"      shift, and go to state 247
    "uint64"     shift, and go to state 248
    "double"     shift, and go to state 249
    "function"   shift, and go to state 250
    "lambda"     shift, and go to state 251
    "int8"       shift, and go to state 252
    "uint8"      shift, and go to state 253
    "int16"      shift, and go to state 254
    "uint16"     shift, and go to state 255
    "tuple"      shift, and go to state 256
    "variant"    shift, and go to state 257
    "::"         shift, and go to state 55
    "$t"         shift, and go to state 258
    "name"       shift, and go to state 56
    '$'          shift, and go to state 259

    name_in_namespace                   go to state 260
    basic_type_declaration              go to state 261
    structure_type_declaration          go to state 262
    auto_type_declaration               go to state 263
    bitfield_type_declaration           go to state 264
    type_declaration_no_options         go to state 265
    type_declaration_no_options_no_dim  go to state 266
    type_declaration                    go to state 1344


State 1279

  342 expr_method_call: expr . "->" "name" '(' ')'
  343                 | expr . "->" "name" '(' expr_list ')'
  353 expr_field: expr . '.' "name"
  354           | expr . '.' '.' "name"
  355           | expr . '.' "name" '(' ')'
  356           | expr . '.' "name" '(' expr_list ')'
  357           | expr . '.' basic_type_declaration '(' ')'
  358           | expr . '.' basic_type_declaration '(' expr_list ')'
  361           | expr . '.' $@17 error $@18
  383 expr: expr . "<<" expr
  384     | expr . ">>" expr
  385     | expr . "<<<" expr
  386     | expr . ">>>" expr
  387     | expr . '+' expr
  388     | expr . '-' expr
  389     | expr . '*' expr
  390     | expr . '/' expr
  391     | expr . '%' expr
  392     | expr . '<' expr
  393     | expr . '>' expr
  394     | expr . "==" expr
  395     | expr . "!=" expr
  396     | expr . "<=" expr
  397     | expr . ">=" expr
  398     | expr . '&' expr
  399     | expr . '|' expr
  400     | expr . '^' expr
  401     | expr . "&&" expr
  402     | expr . "||" expr
  403     | expr . "^^" expr
  404     | expr . ".." expr
  407     | expr . "++"
  408     | expr . "--"
  410     | expr . '[' expr ']'
  411     | expr . '.' '[' expr ']'
  412     | expr . "?[" expr ']'
  413     | expr . '.' "?[" expr ']'
  414     | expr . "?." "name"
  415     | expr . '.' "?." "name"
  424     | expr . "??" expr
  425     | expr . '?' expr ':' expr
  428     | expr . "is" "type" '<' $@19 type_declaration_no_options '>' $@20
  429     | expr . "is" basic_type_declaration
  430     | expr . "is" "name"
  431     | expr . "as" "name"
  434     | expr . "as" "type" '<' $@21 type_declaration '>' $@22
  435     | expr . "as" basic_type_declaration
  436     | expr . '?' "as" "name"
  439     | expr . '?' "as" "type" '<' $@23 type_declaration '>' $@24
  440     | expr . '?' "as" basic_type_declaration
  448     | expr . "<|" expr
  449     | expr . "|>" expr
  450     | expr . "|>" basic_type_declaration
  461 expr_mtag: expr . '.' "$f" '(' expr ')'
  462          | expr . "?." "$f" '(' expr ')'
  463          | expr . '.' '.' "$f" '(' expr ')'
  464          | expr . '.' "?." "$f" '(' expr ')'
  465          | expr . "as" "$f" '(' expr ')'
  466          | expr . '?' "as" "$f" '(' expr ')'
  466          | expr '?' "as" "$f" '(' expr . ')'
  467          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 648
    "as"   shift, and go to state 649
    "<<"   shift, and go to state 650
    ">>"   shift, and go to state 651
    "++"   shift, and go to state 652
    "--"   shift, and go to state 653
    "<="   shift, and go to state 654
    ">="   shift, and go to state 655
    "=="   shift, and go to state 656
    "!="   shift, and go to state 657
    "->"   shift, and go to state 658
    "??"   shift, and go to state 659
    "?."   shift, and go to state 660
    "?["   shift, and go to state 661
    "<|"   shift, and go to state 662
    "|>"   shift, and go to state 663
    "<<<"  shift, and go to state 664
    ">>>"  shift, and go to state 665
    "&&"   shift, and go to state 666
    "||"   shift, and go to state 667
    "^^"   shift, and go to state 668
    ".."   shift, and go to state 669
    '?'    shift, and go to state 670
    '|'    shift, and go to state 671
    '^'    shift, and go to state 672
    '&'    shift, and go to state 673
    '<'    shift, and go to state 674
    '>'    shift, and go to state 675
    '-'    shift, and go to state 676
    '+'    shift, and go to state 677
    '*'    shift, and go to state 678
    '/'    shift, and go to state 679
    '%'    shift, and go to state 680
    '.'    shift, and go to state 681
    '['    shift, and go to state 682
    ')'    shift, and go to state 1345


State 1280

  342 expr_method_call: expr . "->" "name" '(' ')'
  343                 | expr . "->" "name" '(' expr_list ')'
  353 expr_field: expr . '.' "name"
  354           | expr . '.' '.' "name"
  355           | expr . '.' "name" '(' ')'
  356           | expr . '.' "name" '(' expr_list ')'
  357           | expr . '.' basic_type_declaration '(' ')'
  358           | expr . '.' basic_type_declaration '(' expr_list ')'
  361           | expr . '.' $@17 error $@18
  383 expr: expr . "<<" expr
  384     | expr . ">>" expr
  385     | expr . "<<<" expr
  386     | expr . ">>>" expr
  387     | expr . '+' expr
  388     | expr . '-' expr
  389     | expr . '*' expr
  390     | expr . '/' expr
  391     | expr . '%' expr
  392     | expr . '<' expr
  393     | expr . '>' expr
  394     | expr . "==" expr
  395     | expr . "!=" expr
  396     | expr . "<=" expr
  397     | expr . ">=" expr
  398     | expr . '&' expr
  399     | expr . '|' expr
  400     | expr . '^' expr
  401     | expr . "&&" expr
  402     | expr . "||" expr
  403     | expr . "^^" expr
  404     | expr . ".." expr
  407     | expr . "++"
  408     | expr . "--"
  410     | expr . '[' expr ']'
  411     | expr . '.' '[' expr ']'
  412     | expr . "?[" expr ']'
  413     | expr . '.' "?[" expr ']'
  414     | expr . "?." "name"
  415     | expr . '.' "?." "name"
  424     | expr . "??" expr
  425     | expr . '?' expr ':' expr
  428     | expr . "is" "type" '<' $@19 type_declaration_no_options '>' $@20
  429     | expr . "is" basic_type_declaration
  430     | expr . "is" "name"
  431     | expr . "as" "name"
  434     | expr . "as" "type" '<' $@21 type_declaration '>' $@22
  435     | expr . "as" basic_type_declaration
  436     | expr . '?' "as" "name"
  439     | expr . '?' "as" "type" '<' $@23 type_declaration '>' $@24
  440     | expr . '?' "as" basic_type_declaration
  448     | expr . "<|" expr
  449     | expr . "|>" expr
  450     | expr . "|>" basic_type_declaration
  461 expr_mtag: expr . '.' "$f" '(' expr ')'
  462          | expr . "?." "$f" '(' expr ')'
  463          | expr . '.' '.' "$f" '(' expr ')'
  464          | expr . '.' "?." "$f" '(' expr ')'
  464          | expr '.' "?." "$f" '(' expr . ')'
  465          | expr . "as" "$f" '(' expr ')'
  466          | expr . '?' "as" "$f" '(' expr ')'
  467          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 648
    "as"   shift, and go to state 649
    "<<"   shift, and go to state 650
    ">>"   shift, and go to state 651
    "++"   shift, and go to state 652
    "--"   shift, and go to state 653
    "<="   shift, and go to state 654
    ">="   shift, and go to state 655
    "=="   shift, and go to state 656
    "!="   shift, and go to state 657
    "->"   shift, and go to state 658
    "??"   shift, and go to state 659
    "?."   shift, and go to state 660
    "?["   shift, and go to state 661
    "<|"   shift, and go to state 662
    "|>"   shift, and go to state 663
    "<<<"  shift, and go to state 664
    ">>>"  shift, and go to state 665
    "&&"   shift, and go to state 666
    "||"   shift, and go to state 667
    "^^"   shift, and go to state 668
    ".."   shift, and go to state 669
    '?'    shift, and go to state 670
    '|'    shift, and go to state 671
    '^'    shift, and go to state 672
    '&'    shift, and go to state 673
    '<'    shift, and go to state 674
    '>'    shift, and go to state 675
    '-'    shift, and go to state 676
    '+'    shift, and go to state 677
    '*'    shift, and go to state 678
    '/'    shift, and go to state 679
    '%'    shift, and go to state 680
    '.'    shift, and go to state 681
    '['    shift, and go to state 682
    ')'    shift, and go to state 1346


State 1281

  461 expr_mtag: expr '.' "$f" '(' expr ')' .

    $default  reduce using rule 461 (expr_mtag)


State 1282

  356 expr_field: expr '.' "name" '(' expr_list ')' .

    $default  reduce using rule 356 (expr_field)


State 1283

  342 expr_method_call: expr . "->" "name" '(' ')'
  343                 | expr . "->" "name" '(' expr_list ')'
  353 expr_field: expr . '.' "name"
  354           | expr . '.' '.' "name"
  355           | expr . '.' "name" '(' ')'
  356           | expr . '.' "name" '(' expr_list ')'
  357           | expr . '.' basic_type_declaration '(' ')'
  358           | expr . '.' basic_type_declaration '(' expr_list ')'
  361           | expr . '.' $@17 error $@18
  383 expr: expr . "<<" expr
  384     | expr . ">>" expr
  385     | expr . "<<<" expr
  386     | expr . ">>>" expr
  387     | expr . '+' expr
  388     | expr . '-' expr
  389     | expr . '*' expr
  390     | expr . '/' expr
  391     | expr . '%' expr
  392     | expr . '<' expr
  393     | expr . '>' expr
  394     | expr . "==" expr
  395     | expr . "!=" expr
  396     | expr . "<=" expr
  397     | expr . ">=" expr
  398     | expr . '&' expr
  399     | expr . '|' expr
  400     | expr . '^' expr
  401     | expr . "&&" expr
  402     | expr . "||" expr
  403     | expr . "^^" expr
  404     | expr . ".." expr
  407     | expr . "++"
  408     | expr . "--"
  410     | expr . '[' expr ']'
  411     | expr . '.' '[' expr ']'
  412     | expr . "?[" expr ']'
  413     | expr . '.' "?[" expr ']'
  414     | expr . "?." "name"
  415     | expr . '.' "?." "name"
  424     | expr . "??" expr
  425     | expr . '?' expr ':' expr
  428     | expr . "is" "type" '<' $@19 type_declaration_no_options '>' $@20
  429     | expr . "is" basic_type_declaration
  430     | expr . "is" "name"
  431     | expr . "as" "name"
  434     | expr . "as" "type" '<' $@21 type_declaration '>' $@22
  435     | expr . "as" basic_type_declaration
  436     | expr . '?' "as" "name"
  439     | expr . '?' "as" "type" '<' $@23 type_declaration '>' $@24
  440     | expr . '?' "as" basic_type_declaration
  448     | expr . "<|" expr
  449     | expr . "|>" expr
  450     | expr . "|>" basic_type_declaration
  461 expr_mtag: expr . '.' "$f" '(' expr ')'
  462          | expr . "?." "$f" '(' expr ')'
  463          | expr . '.' '.' "$f" '(' expr ')'
  463          | expr '.' '.' "$f" '(' expr . ')'
  464          | expr . '.' "?." "$f" '(' expr ')'
  465          | expr . "as" "$f" '(' expr ')'
  466          | expr . '?' "as" "$f" '(' expr ')'
  467          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 648
    "as"   shift, and go to state 649
    "<<"   shift, and go to state 650
    ">>"   shift, and go to state 651
    "++"   shift, and go to state 652
    "--"   shift, and go to state 653
    "<="   shift, and go to state 654
    ">="   shift, and go to state 655
    "=="   shift, and go to state 656
    "!="   shift, and go to state 657
    "->"   shift, and go to state 658
    "??"   shift, and go to state 659
    "?."   shift, and go to state 660
    "?["   shift, and go to state 661
    "<|"   shift, and go to state 662
    "|>"   shift, and go to state 663
    "<<<"  shift, and go to state 664
    ">>>"  shift, and go to state 665
    "&&"   shift, and go to state 666
    "||"   shift, and go to state 667
    "^^"   shift, and go to state 668
    ".."   shift, and go to state 669
    '?'    shift, and go to state 670
    '|'    shift, and go to state 671
    '^'    shift, and go to state 672
    '&'    shift, and go to state 673
    '<'    shift, and go to state 674
    '>'    shift, and go to state 675
    '-'    shift, and go to state 676
    '+'    shift, and go to state 677
    '*'    shift, and go to state 678
    '/'    shift, and go to state 679
    '%'    shift, and go to state 680
    '.'    shift, and go to state 681
    '['    shift, and go to state 682
    ')'    shift, and go to state 1347


State 1284

  358 expr_field: expr '.' basic_type_declaration '(' expr_list ')' .

    $default  reduce using rule 358 (expr_field)


State 1285

  653 type_declaration_no_options_no_dim: '$' name_in_namespace '<' $@39 type_declaration_no_options_list '>' '(' optional_expr_list . ')'

    ')'  shift, and go to state 1348


State 1286

  585 variable_name_with_pos_list: variable_name_with_pos_list ',' "name" "aka" "name" .

    $default  reduce using rule 585 (variable_name_with_pos_list)


State 1287

  342 expr_method_call: expr . "->" "name" '(' ')'
  343                 | expr . "->" "name" '(' expr_list ')'
  353 expr_field: expr . '.' "name"
  354           | expr . '.' '.' "name"
  355           | expr . '.' "name" '(' ')'
  356           | expr . '.' "name" '(' expr_list ')'
  357           | expr . '.' basic_type_declaration '(' ')'
  358           | expr . '.' basic_type_declaration '(' expr_list ')'
  361           | expr . '.' $@17 error $@18
  383 expr: expr . "<<" expr
  384     | expr . ">>" expr
  385     | expr . "<<<" expr
  386     | expr . ">>>" expr
  387     | expr . '+' expr
  388     | expr . '-' expr
  389     | expr . '*' expr
  390     | expr . '/' expr
  391     | expr . '%' expr
  392     | expr . '<' expr
  393     | expr . '>' expr
  394     | expr . "==" expr
  395     | expr . "!=" expr
  396     | expr . "<=" expr
  397     | expr . ">=" expr
  398     | expr . '&' expr
  399     | expr . '|' expr
  400     | expr . '^' expr
  401     | expr . "&&" expr
  402     | expr . "||" expr
  403     | expr . "^^" expr
  404     | expr . ".." expr
  407     | expr . "++"
  408     | expr . "--"
  410     | expr . '[' expr ']'
  411     | expr . '.' '[' expr ']'
  412     | expr . "?[" expr ']'
  413     | expr . '.' "?[" expr ']'
  414     | expr . "?." "name"
  415     | expr . '.' "?." "name"
  424     | expr . "??" expr
  425     | expr . '?' expr ':' expr
  428     | expr . "is" "type" '<' $@19 type_declaration_no_options '>' $@20
  429     | expr . "is" basic_type_declaration
  430     | expr . "is" "name"
  431     | expr . "as" "name"
  434     | expr . "as" "type" '<' $@21 type_declaration '>' $@22
  435     | expr . "as" basic_type_declaration
  436     | expr . '?' "as" "name"
  439     | expr . '?' "as" "type" '<' $@23 type_declaration '>' $@24
  440     | expr . '?' "as" basic_type_declaration
  448     | expr . "<|" expr
  449     | expr . "|>" expr
  450     | expr . "|>" basic_type_declaration
  461 expr_mtag: expr . '.' "$f" '(' expr ')'
  462          | expr . "?." "$f" '(' expr ')'
  463          | expr . '.' '.' "$f" '(' expr ')'
  464          | expr . '.' "?." "$f" '(' expr ')'
  465          | expr . "as" "$f" '(' expr ')'
  466          | expr . '?' "as" "$f" '(' expr ')'
  467          | expr . "is" "$f" '(' expr ')'
  511 variable_declaration: variable_name_with_pos_list ':' type_declaration copy_or_move expr .

    "is"   shift, and go to state 648
    "as"   shift, and go to state 649
    "<<"   shift, and go to state 650
    ">>"   shift, and go to state 651
    "++"   shift, and go to state 652
    "--"   shift, and go to state 653
    "<="   shift, and go to state 654
    ">="   shift, and go to state 655
    "=="   shift, and go to state 656
    "!="   shift, and go to state 657
    "->"   shift, and go to state 658
    "??"   shift, and go to state 659
    "?."   shift, and go to state 660
    "?["   shift, and go to state 661
    "<|"   shift, and go to state 662
    "|>"   shift, and go to state 663
    "<<<"  shift, and go to state 664
    ">>>"  shift, and go to state 665
    "&&"   shift, and go to state 666
    "||"   shift, and go to state 667
    "^^"   shift, and go to state 668
    ".."   shift, and go to state 669
    '?'    shift, and go to state 670
    '|'    shift, and go to state 671
    '^'    shift, and go to state 672
    '&'    shift, and go to state 673
    '<'    shift, and go to state 674
    '>'    shift, and go to state 675
    '-'    shift, and go to state 676
    '+'    shift, and go to state 677
    '*'    shift, and go to state 678
    '/'    shift, and go to state 679
    '%'    shift, and go to state 680
    '.'    shift, and go to state 681
    '['    shift, and go to state 682

    $default  reduce using rule 511 (variable_declaration)


State 1288

   71 expression_for_loop: "for" '(' variable_name_with_pos_list "in" expr_list ')' . expression_block

    "begin of code block"  shift, and go to state 326

    expression_block  go to state 1349


State 1289

   58 expression_else: "else" . expression_block

    "begin of code block"  shift, and go to state 326

    expression_block  go to state 1350


State 1290

   55 elif_or_static_elif: "elif" .

    $default  reduce using rule 55 (elif_or_static_elif)


State 1291

   56 elif_or_static_elif: "static_elif" .

    $default  reduce using rule 56 (elif_or_static_elif)


State 1292

   59 expression_else: elif_or_static_elif . '(' expr ')' expression_block expression_else

    '('  shift, and go to state 1351


State 1293

   69 expression_if_then_else: if_or_static_if '(' expr ')' expression_block expression_else .

    $default  reduce using rule 69 (expression_if_then_else)


State 1294

   63 expression_else_one_liner: "else" . expression_if_one_liner

    "struct"                          shift, and go to state 409
    "class"                           shift, and go to state 410
    "true"                            shift, and go to state 411
    "false"                           shift, and go to state 412
    "new"                             shift, and go to state 413
    "typeinfo"                        shift, and go to state 414
    "type"                            shift, and go to state 415
    "array"                           shift, and go to state 416
    "return"                          shift, and go to state 536
    "null"                            shift, and go to state 417
    "break"                           shift, and go to state 537
    "table"                           shift, and go to state 418
    "deref"                           shift, and go to state 419
    "cast"                            shift, and go to state 420
    "upcast"                          shift, and go to state 421
    "addr"                            shift, and go to state 422
    "continue"                        shift, and go to state 542
    "reinterpret"                     shift, and go to state 423
    "unsafe"                          shift, and go to state 424
    "fixed_array"                     shift, and go to state 425
    "default"                         shift, and go to state 426
    "bool"                            shift, and go to state 225
    "void"                            shift, and go to state 226
    "string"                          shift, and go to state 227
    "int"                             shift, and go to state 229
    "int2"                            shift, and go to state 230
    "int3"                            shift, and go to state 231
    "int4"                            shift, and go to state 232
    "uint"                            shift, and go to state 233
    "bitfield"                        shift, and go to state 427
    "uint2"                           shift, and go to state 235
    "uint3"                           shift, and go to state 236
    "uint4"                           shift, and go to state 237
    "float"                           shift, and go to state 238
    "float2"                          shift, and go to state 239
    "float3"                          shift, and go to state 240
    "float4"                          shift, and go to state 241
    "range"                           shift, and go to state 242
    "urange"                          shift, and go to state 243
    "range64"                         shift, and go to state 244
    "urange64"                        shift, and go to state 245
    "int64"                           shift, and go to state 247
    "uint64"                          shift, and go to state 248
    "double"                          shift, and go to state 249
    "int8"                            shift, and go to state 252
    "uint8"                           shift, and go to state 253
    "int16"                           shift, and go to state 254
    "uint16"                          shift, and go to state 255
    "tuple"                           shift, and go to state 428
    "variant"                         shift, and go to state 429
    "generator"                       shift, and go to state 430
    "yield"                           shift, and go to state 547
    "++"                              shift, and go to state 431
    "--"                              shift, and go to state 432
    "::"                              shift, and go to state 55
    "$$"                              shift, and go to state 433
    "$i"                              shift, and go to state 434
    "$v"                              shift, and go to state 435
    "$b"                              shift, and go to state 436
    "$a"                              shift, and go to state 437
    "$c"                              shift, and go to state 438
    "..."                             shift, and go to state 439
    "integer constant"                shift, and go to state 440
    "long integer constant"           shift, and go to state 441
    "unsigned integer constant"       shift, and go to state 442
    "unsigned long integer constant"  shift, and go to state 443
    "unsigned int8 constant"          shift, and go to state 444
    "floating point constant"         shift, and go to state 445
    "double constant"                 shift, and go to state 446
    "name"                            shift, and go to state 56
    "start of the string"             shift, and go to state 447
    "begin of code block"             shift, and go to state 448
    '-'                               shift, and go to state 449
    '+'                               shift, and go to state 450
    '*'                               shift, and go to state 451
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 452
    '!'                               shift, and go to state 453
    '['                               shift, and go to state 454
    '('                               shift, and go to state 455
    '$'                               shift, and go to state 456
    '@'                               shift, and go to state 457

    string_builder           go to state 458
    expr_reader              go to state 459
    expression_if_one_liner  go to state 1352
    expr_call_pipe           go to state 460
    name_in_namespace        go to state 461
    expr_new                 go to state 462
    expression_break         go to state 1353
    expression_continue      go to state 1354
    expression_return        go to state 1355
    expression_yield         go to state 1356
    expr_cast                go to state 463
    expr_type_decl           go to state 464
    expr_type_info           go to state 465
    block_or_lambda          go to state 466
    expr_full_block          go to state 467
    expr_numeric_const       go to state 468
    expr_named_call          go to state 469
    expr_method_call         go to state 470
    func_addr_expr           go to state 471
    expr_field               go to state 472
    expr_call                go to state 473
    expr                     go to state 1357
    expr_mtag                go to state 475
    basic_type_declaration   go to state 476
    make_decl                go to state 477
    make_struct_decl         go to state 478
    make_tuple_call          go to state 479
    make_dim_decl            go to state 480
    make_table_decl          go to state 481
    array_comprehension      go to state 482


State 1295

   70 expression_if_then_else: expression_if_one_liner "if" '(' expr ')' expression_else_one_liner . "end of expression"

    "end of expression"  shift, and go to state 1358


State 1296

  273 tuple_expansion: tuple_expansion ',' "name" .

    $default  reduce using rule 273 (tuple_expansion)


State 1297

  274 tuple_expansion_variable_declaration: '(' tuple_expansion ')' ':' . type_declaration_no_options copy_or_move_or_clone expr "end of expression"

    "type"       shift, and go to state 219
    "array"      shift, and go to state 220
    "table"      shift, and go to state 221
    "typedecl"   shift, and go to state 222
    "iterator"   shift, and go to state 223
    "smart_ptr"  shift, and go to state 224
    "bool"       shift, and go to state 225
    "void"       shift, and go to state 226
    "string"     shift, and go to state 227
    "auto"       shift, and go to state 228
    "int"        shift, and go to state 229
    "int2"       shift, and go to state 230
    "int3"       shift, and go to state 231
    "int4"       shift, and go to state 232
    "uint"       shift, and go to state 233
    "bitfield"   shift, and go to state 234
    "uint2"      shift, and go to state 235
    "uint3"      shift, and go to state 236
    "uint4"      shift, and go to state 237
    "float"      shift, and go to state 238
    "float2"     shift, and go to state 239
    "float3"     shift, and go to state 240
    "float4"     shift, and go to state 241
    "range"      shift, and go to state 242
    "urange"     shift, and go to state 243
    "range64"    shift, and go to state 244
    "urange64"   shift, and go to state 245
    "block"      shift, and go to state 246
    "int64"      shift, and go to state 247
    "uint64"     shift, and go to state 248
    "double"     shift, and go to state 249
    "function"   shift, and go to state 250
    "lambda"     shift, and go to state 251
    "int8"       shift, and go to state 252
    "uint8"      shift, and go to state 253
    "int16"      shift, and go to state 254
    "uint16"     shift, and go to state 255
    "tuple"      shift, and go to state 256
    "variant"    shift, and go to state 257
    "::"         shift, and go to state 55
    "$t"         shift, and go to state 258
    "name"       shift, and go to state 56
    '$'          shift, and go to state 259

    name_in_namespace                   go to state 260
    basic_type_declaration              go to state 261
    structure_type_declaration          go to state 262
    auto_type_declaration               go to state 263
    bitfield_type_declaration           go to state 264
    type_declaration_no_options         go to state 1359
    type_declaration_no_options_no_dim  go to state 266


State 1298

  275 tuple_expansion_variable_declaration: '(' tuple_expansion ')' optional_ref . copy_or_move_or_clone expr "end of expression"

    "<-"  shift, and go to state 582
    ":="  shift, and go to state 583
    '='   shift, and go to state 584

    copy_or_move_or_clone  go to state 1360


State 1299

  475 optional_constant: "const" .

    $default  reduce using rule 475 (optional_constant)


State 1300

  486 struct_variable_declaration_list: struct_variable_declaration_list optional_annotation_list "def" optional_public_or_private_member_variable "abstract" optional_constant . $@26 function_declaration_header "end of expression"

    $default  reduce using rule 485 ($@26)

    $@26  go to state 1361


State 1301

  488 struct_variable_declaration_list: struct_variable_declaration_list optional_annotation_list "def" optional_public_or_private_member_variable optional_static_member_variable optional_override . optional_constant $@27 function_declaration_header expression_block

    "const"  shift, and go to state 1299

    $default  reduce using rule 474 (optional_constant)

    optional_constant  go to state 1362


State 1302

  481 structure_variable_declaration: optional_field_annotation optional_static_member_variable optional_override optional_public_or_private_member_variable . variable_declaration

    "$i"    shift, and go to state 717
    "name"  shift, and go to state 718

    variable_declaration         go to state 1363
    variable_name_with_pos_list  go to state 720


State 1303

  529 let_variable_declaration: let_variable_name_with_pos_list ':' type_declaration_no_options copy_or_move_or_clone expr "end of expression" .

    $default  reduce using rule 529 (let_variable_declaration)


State 1304

  746 make_struct_decl: "struct" '<' $@73 type_declaration_no_options '>' $@74 '(' . use_initializer optional_make_struct_dim_decl ')'

    "uninitialized"  shift, and go to state 1319

    $default  reduce using rule 742 (use_initializer)

    use_initializer  go to state 1364


State 1305

  749 make_struct_decl: "class" '<' $@75 type_declaration_no_options '>' $@76 '(' . use_initializer optional_make_struct_dim_decl ')'

    "uninitialized"  shift, and go to state 1319

    $default  reduce using rule 742 (use_initializer)

    use_initializer  go to state 1365


State 1306

  292 expr_type_info: "typeinfo" name_in_namespace '<' "name" '>' '(' expr . ')'
  342 expr_method_call: expr . "->" "name" '(' ')'
  343                 | expr . "->" "name" '(' expr_list ')'
  353 expr_field: expr . '.' "name"
  354           | expr . '.' '.' "name"
  355           | expr . '.' "name" '(' ')'
  356           | expr . '.' "name" '(' expr_list ')'
  357           | expr . '.' basic_type_declaration '(' ')'
  358           | expr . '.' basic_type_declaration '(' expr_list ')'
  361           | expr . '.' $@17 error $@18
  383 expr: expr . "<<" expr
  384     | expr . ">>" expr
  385     | expr . "<<<" expr
  386     | expr . ">>>" expr
  387     | expr . '+' expr
  388     | expr . '-' expr
  389     | expr . '*' expr
  390     | expr . '/' expr
  391     | expr . '%' expr
  392     | expr . '<' expr
  393     | expr . '>' expr
  394     | expr . "==" expr
  395     | expr . "!=" expr
  396     | expr . "<=" expr
  397     | expr . ">=" expr
  398     | expr . '&' expr
  399     | expr . '|' expr
  400     | expr . '^' expr
  401     | expr . "&&" expr
  402     | expr . "||" expr
  403     | expr . "^^" expr
  404     | expr . ".." expr
  407     | expr . "++"
  408     | expr . "--"
  410     | expr . '[' expr ']'
  411     | expr . '.' '[' expr ']'
  412     | expr . "?[" expr ']'
  413     | expr . '.' "?[" expr ']'
  414     | expr . "?." "name"
  415     | expr . '.' "?." "name"
  424     | expr . "??" expr
  425     | expr . '?' expr ':' expr
  428     | expr . "is" "type" '<' $@19 type_declaration_no_options '>' $@20
  429     | expr . "is" basic_type_declaration
  430     | expr . "is" "name"
  431     | expr . "as" "name"
  434     | expr . "as" "type" '<' $@21 type_declaration '>' $@22
  435     | expr . "as" basic_type_declaration
  436     | expr . '?' "as" "name"
  439     | expr . '?' "as" "type" '<' $@23 type_declaration '>' $@24
  440     | expr . '?' "as" basic_type_declaration
  448     | expr . "<|" expr
  449     | expr . "|>" expr
  450     | expr . "|>" basic_type_declaration
  461 expr_mtag: expr . '.' "$f" '(' expr ')'
  462          | expr . "?." "$f" '(' expr ')'
  463          | expr . '.' '.' "$f" '(' expr ')'
  464          | expr . '.' "?." "$f" '(' expr ')'
  465          | expr . "as" "$f" '(' expr ')'
  466          | expr . '?' "as" "$f" '(' expr ')'
  467          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 648
    "as"   shift, and go to state 649
    "<<"   shift, and go to state 650
    ">>"   shift, and go to state 651
    "++"   shift, and go to state 652
    "--"   shift, and go to state 653
    "<="   shift, and go to state 654
    ">="   shift, and go to state 655
    "=="   shift, and go to state 656
    "!="   shift, and go to state 657
    "->"   shift, and go to state 658
    "??"   shift, and go to state 659
    "?."   shift, and go to state 660
    "?["   shift, and go to state 661
    "<|"   shift, and go to state 662
    "|>"   shift, and go to state 663
    "<<<"  shift, and go to state 664
    ">>>"  shift, and go to state 665
    "&&"   shift, and go to state 666
    "||"   shift, and go to state 667
    "^^"   shift, and go to state 668
    ".."   shift, and go to state 669
    '?'    shift, and go to state 670
    '|'    shift, and go to state 671
    '^'    shift, and go to state 672
    '&'    shift, and go to state 673
    '<'    shift, and go to state 674
    '>'    shift, and go to state 675
    '-'    shift, and go to state 676
    '+'    shift, and go to state 677
    '*'    shift, and go to state 678
    '/'    shift, and go to state 679
    '%'    shift, and go to state 680
    '.'    shift, and go to state 681
    '['    shift, and go to state 682
    ')'    shift, and go to state 1366


State 1307

  293 expr_type_info: "typeinfo" name_in_namespace '<' "name" c_or_s "name" '>' . '(' expr ')'

    '('  shift, and go to state 1367


State 1308

  765 make_dim_decl: "array" "struct" '<' $@83 type_declaration_no_options '>' $@84 . '(' use_initializer optional_make_struct_dim_decl ')'

    '('  shift, and go to state 1368


State 1309

  768 make_dim_decl: "array" "tuple" '<' $@85 type_declaration_no_options '>' $@86 . '(' use_initializer optional_make_struct_dim_decl ')'

    '('  shift, and go to state 1369


State 1310

  771 make_dim_decl: "array" "variant" '<' $@87 type_declaration_no_options '>' $@88 . '(' make_variant_dim ')'

    '('  shift, and go to state 1370


State 1311

  775 make_dim_decl: "array" '<' $@89 type_declaration_no_options '>' $@90 '(' . optional_expr_list ')'

    "struct"                          shift, and go to state 409
    "class"                           shift, and go to state 410
    "true"                            shift, and go to state 411
    "false"                           shift, and go to state 412
    "new"                             shift, and go to state 413
    "typeinfo"                        shift, and go to state 414
    "type"                            shift, and go to state 415
    "array"                           shift, and go to state 416
    "null"                            shift, and go to state 417
    "table"                           shift, and go to state 418
    "deref"                           shift, and go to state 419
    "cast"                            shift, and go to state 420
    "upcast"                          shift, and go to state 421
    "addr"                            shift, and go to state 422
    "reinterpret"                     shift, and go to state 423
    "unsafe"                          shift, and go to state 424
    "fixed_array"                     shift, and go to state 425
    "default"                         shift, and go to state 426
    "bool"                            shift, and go to state 225
    "void"                            shift, and go to state 226
    "string"                          shift, and go to state 227
    "int"                             shift, and go to state 229
    "int2"                            shift, and go to state 230
    "int3"                            shift, and go to state 231
    "int4"                            shift, and go to state 232
    "uint"                            shift, and go to state 233
    "bitfield"                        shift, and go to state 427
    "uint2"                           shift, and go to state 235
    "uint3"                           shift, and go to state 236
    "uint4"                           shift, and go to state 237
    "float"                           shift, and go to state 238
    "float2"                          shift, and go to state 239
    "float3"                          shift, and go to state 240
    "float4"                          shift, and go to state 241
    "range"                           shift, and go to state 242
    "urange"                          shift, and go to state 243
    "range64"                         shift, and go to state 244
    "urange64"                        shift, and go to state 245
    "int64"                           shift, and go to state 247
    "uint64"                          shift, and go to state 248
    "double"                          shift, and go to state 249
    "int8"                            shift, and go to state 252
    "uint8"                           shift, and go to state 253
    "int16"                           shift, and go to state 254
    "uint16"                          shift, and go to state 255
    "tuple"                           shift, and go to state 428
    "variant"                         shift, and go to state 429
    "generator"                       shift, and go to state 430
    "++"                              shift, and go to state 431
    "--"                              shift, and go to state 432
    "::"                              shift, and go to state 55
    "$$"                              shift, and go to state 433
    "$i"                              shift, and go to state 434
    "$v"                              shift, and go to state 435
    "$b"                              shift, and go to state 436
    "$a"                              shift, and go to state 437
    "$c"                              shift, and go to state 438
    "..."                             shift, and go to state 439
    "integer constant"                shift, and go to state 440
    "long integer constant"           shift, and go to state 441
    "unsigned integer constant"       shift, and go to state 442
    "unsigned long integer constant"  shift, and go to state 443
    "unsigned int8 constant"          shift, and go to state 444
    "floating point constant"         shift, and go to state 445
    "double constant"                 shift, and go to state 446
    "name"                            shift, and go to state 56
    "start of the string"             shift, and go to state 447
    "begin of code block"             shift, and go to state 448
    '-'                               shift, and go to state 449
    '+'                               shift, and go to state 450
    '*'                               shift, and go to state 451
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 452
    '!'                               shift, and go to state 453
    '['                               shift, and go to state 454
    '('                               shift, and go to state 455
    '$'                               shift, and go to state 456
    '@'                               shift, and go to state 457

    $default  reduce using rule 236 (optional_expr_list)

    string_builder          go to state 458
    expr_reader             go to state 459
    expr_call_pipe          go to state 460
    optional_expr_list      go to state 1371
    name_in_namespace       go to state 461
    expr_new                go to state 462
    expr_cast               go to state 463
    expr_type_decl          go to state 464
    expr_type_info          go to state 465
    expr_list               go to state 703
    block_or_lambda         go to state 466
    expr_full_block         go to state 467
    expr_numeric_const      go to state 468
    expr_named_call         go to state 469
    expr_method_call        go to state 470
    func_addr_expr          go to state 471
    expr_field              go to state 472
    expr_call               go to state 473
    expr                    go to state 639
    expr_mtag               go to state 475
    basic_type_declaration  go to state 476
    make_decl               go to state 477
    make_struct_decl        go to state 478
    make_tuple_call         go to state 479
    make_dim_decl           go to state 480
    make_table_decl         go to state 481
    array_comprehension     go to state 482


State 1312

  784 make_table_decl: "table" '<' type_declaration_no_options '>' '(' optional_expr_map_tuple_list ')' .

    $default  reduce using rule 784 (make_table_decl)


State 1313

  239 optional_expr_map_tuple_list: expr_map_tuple_list optional_comma .

    $default  reduce using rule 239 (optional_expr_map_tuple_list)


State 1314

  785 make_table_decl: "table" '<' type_declaration_no_options c_or_s type_declaration_no_options '>' '(' . optional_expr_map_tuple_list ')'

    "struct"                          shift, and go to state 409
    "class"                           shift, and go to state 410
    "true"                            shift, and go to state 411
    "false"                           shift, and go to state 412
    "new"                             shift, and go to state 413
    "typeinfo"                        shift, and go to state 414
    "type"                            shift, and go to state 415
    "array"                           shift, and go to state 416
    "null"                            shift, and go to state 417
    "table"                           shift, and go to state 418
    "deref"                           shift, and go to state 419
    "cast"                            shift, and go to state 420
    "upcast"                          shift, and go to state 421
    "addr"                            shift, and go to state 422
    "reinterpret"                     shift, and go to state 423
    "unsafe"                          shift, and go to state 424
    "fixed_array"                     shift, and go to state 425
    "default"                         shift, and go to state 426
    "bool"                            shift, and go to state 225
    "void"                            shift, and go to state 226
    "string"                          shift, and go to state 227
    "int"                             shift, and go to state 229
    "int2"                            shift, and go to state 230
    "int3"                            shift, and go to state 231
    "int4"                            shift, and go to state 232
    "uint"                            shift, and go to state 233
    "bitfield"                        shift, and go to state 427
    "uint2"                           shift, and go to state 235
    "uint3"                           shift, and go to state 236
    "uint4"                           shift, and go to state 237
    "float"                           shift, and go to state 238
    "float2"                          shift, and go to state 239
    "float3"                          shift, and go to state 240
    "float4"                          shift, and go to state 241
    "range"                           shift, and go to state 242
    "urange"                          shift, and go to state 243
    "range64"                         shift, and go to state 244
    "urange64"                        shift, and go to state 245
    "int64"                           shift, and go to state 247
    "uint64"                          shift, and go to state 248
    "double"                          shift, and go to state 249
    "int8"                            shift, and go to state 252
    "uint8"                           shift, and go to state 253
    "int16"                           shift, and go to state 254
    "uint16"                          shift, and go to state 255
    "tuple"                           shift, and go to state 428
    "variant"                         shift, and go to state 429
    "generator"                       shift, and go to state 430
    "++"                              shift, and go to state 431
    "--"                              shift, and go to state 432
    "::"                              shift, and go to state 55
    "$$"                              shift, and go to state 433
    "$i"                              shift, and go to state 434
    "$v"                              shift, and go to state 435
    "$b"                              shift, and go to state 436
    "$a"                              shift, and go to state 437
    "$c"                              shift, and go to state 438
    "..."                             shift, and go to state 439
    "integer constant"                shift, and go to state 440
    "long integer constant"           shift, and go to state 441
    "unsigned integer constant"       shift, and go to state 442
    "unsigned long integer constant"  shift, and go to state 443
    "unsigned int8 constant"          shift, and go to state 444
    "floating point constant"         shift, and go to state 445
    "double constant"                 shift, and go to state 446
    "name"                            shift, and go to state 56
    "start of the string"             shift, and go to state 447
    "begin of code block"             shift, and go to state 448
    '-'                               shift, and go to state 449
    '+'                               shift, and go to state 450
    '*'                               shift, and go to state 451
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 452
    '!'                               shift, and go to state 453
    '['                               shift, and go to state 454
    '('                               shift, and go to state 455
    '$'                               shift, and go to state 456
    '@'                               shift, and go to state 457

    $default  reduce using rule 238 (optional_expr_map_tuple_list)

    string_builder                go to state 458
    expr_reader                   go to state 459
    expr_call_pipe                go to state 460
    optional_expr_map_tuple_list  go to state 1372
    name_in_namespace             go to state 461
    expr_new                      go to state 462
    expr_cast                     go to state 463
    expr_type_decl                go to state 464
    expr_type_info                go to state 465
    block_or_lambda               go to state 466
    expr_full_block               go to state 467
    expr_numeric_const            go to state 468
    expr_named_call               go to state 469
    expr_method_call              go to state 470
    func_addr_expr                go to state 471
    expr_field                    go to state 472
    expr_call                     go to state 473
    expr                          go to state 628
    expr_mtag                     go to state 475
    basic_type_declaration        go to state 476
    make_decl                     go to state 477
    make_struct_decl              go to state 478
    make_map_tuple                go to state 629
    make_tuple_call               go to state 479
    make_dim_decl                 go to state 480
    expr_map_tuple_list           go to state 1235
    make_table_decl               go to state 481
    array_comprehension           go to state 482


State 1315

  281 expr_cast: "cast" '<' $@5 type_declaration_no_options '>' $@6 expr .
  342 expr_method_call: expr . "->" "name" '(' ')'
  343                 | expr . "->" "name" '(' expr_list ')'
  353 expr_field: expr . '.' "name"
  354           | expr . '.' '.' "name"
  355           | expr . '.' "name" '(' ')'
  356           | expr . '.' "name" '(' expr_list ')'
  357           | expr . '.' basic_type_declaration '(' ')'
  358           | expr . '.' basic_type_declaration '(' expr_list ')'
  361           | expr . '.' $@17 error $@18
  383 expr: expr . "<<" expr
  384     | expr . ">>" expr
  385     | expr . "<<<" expr
  386     | expr . ">>>" expr
  387     | expr . '+' expr
  388     | expr . '-' expr
  389     | expr . '*' expr
  390     | expr . '/' expr
  391     | expr . '%' expr
  392     | expr . '<' expr
  393     | expr . '>' expr
  394     | expr . "==" expr
  395     | expr . "!=" expr
  396     | expr . "<=" expr
  397     | expr . ">=" expr
  398     | expr . '&' expr
  399     | expr . '|' expr
  400     | expr . '^' expr
  401     | expr . "&&" expr
  402     | expr . "||" expr
  403     | expr . "^^" expr
  404     | expr . ".." expr
  407     | expr . "++"
  408     | expr . "--"
  410     | expr . '[' expr ']'
  411     | expr . '.' '[' expr ']'
  412     | expr . "?[" expr ']'
  413     | expr . '.' "?[" expr ']'
  414     | expr . "?." "name"
  415     | expr . '.' "?." "name"
  424     | expr . "??" expr
  425     | expr . '?' expr ':' expr
  428     | expr . "is" "type" '<' $@19 type_declaration_no_options '>' $@20
  429     | expr . "is" basic_type_declaration
  430     | expr . "is" "name"
  431     | expr . "as" "name"
  434     | expr . "as" "type" '<' $@21 type_declaration '>' $@22
  435     | expr . "as" basic_type_declaration
  436     | expr . '?' "as" "name"
  439     | expr . '?' "as" "type" '<' $@23 type_declaration '>' $@24
  440     | expr . '?' "as" basic_type_declaration
  448     | expr . "<|" expr
  449     | expr . "|>" expr
  450     | expr . "|>" basic_type_declaration
  461 expr_mtag: expr . '.' "$f" '(' expr ')'
  462          | expr . "?." "$f" '(' expr ')'
  463          | expr . '.' '.' "$f" '(' expr ')'
  464          | expr . '.' "?." "$f" '(' expr ')'
  465          | expr . "as" "$f" '(' expr ')'
  466          | expr . '?' "as" "$f" '(' expr ')'
  467          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 648
    "as"   shift, and go to state 649
    "<<"   shift, and go to state 650
    ">>"   shift, and go to state 651
    "++"   shift, and go to state 652
    "--"   shift, and go to state 653
    "->"   shift, and go to state 658
    "??"   shift, and go to state 659
    "?."   shift, and go to state 660
    "?["   shift, and go to state 661
    "<|"   shift, and go to state 662
    "|>"   shift, and go to state 663
    "<<<"  shift, and go to state 664
    ">>>"  shift, and go to state 665
    '-'    shift, and go to state 676
    '+'    shift, and go to state 677
    '*'    shift, and go to state 678
    '/'    shift, and go to state 679
    '%'    shift, and go to state 680
    '.'    shift, and go to state 681
    '['    shift, and go to state 682

    $default  reduce using rule 281 (expr_cast)


State 1316

  284 expr_cast: "upcast" '<' $@7 type_declaration_no_options '>' $@8 expr .
  342 expr_method_call: expr . "->" "name" '(' ')'
  343                 | expr . "->" "name" '(' expr_list ')'
  353 expr_field: expr . '.' "name"
  354           | expr . '.' '.' "name"
  355           | expr . '.' "name" '(' ')'
  356           | expr . '.' "name" '(' expr_list ')'
  357           | expr . '.' basic_type_declaration '(' ')'
  358           | expr . '.' basic_type_declaration '(' expr_list ')'
  361           | expr . '.' $@17 error $@18
  383 expr: expr . "<<" expr
  384     | expr . ">>" expr
  385     | expr . "<<<" expr
  386     | expr . ">>>" expr
  387     | expr . '+' expr
  388     | expr . '-' expr
  389     | expr . '*' expr
  390     | expr . '/' expr
  391     | expr . '%' expr
  392     | expr . '<' expr
  393     | expr . '>' expr
  394     | expr . "==" expr
  395     | expr . "!=" expr
  396     | expr . "<=" expr
  397     | expr . ">=" expr
  398     | expr . '&' expr
  399     | expr . '|' expr
  400     | expr . '^' expr
  401     | expr . "&&" expr
  402     | expr . "||" expr
  403     | expr . "^^" expr
  404     | expr . ".." expr
  407     | expr . "++"
  408     | expr . "--"
  410     | expr . '[' expr ']'
  411     | expr . '.' '[' expr ']'
  412     | expr . "?[" expr ']'
  413     | expr . '.' "?[" expr ']'
  414     | expr . "?." "name"
  415     | expr . '.' "?." "name"
  424     | expr . "??" expr
  425     | expr . '?' expr ':' expr
  428     | expr . "is" "type" '<' $@19 type_declaration_no_options '>' $@20
  429     | expr . "is" basic_type_declaration
  430     | expr . "is" "name"
  431     | expr . "as" "name"
  434     | expr . "as" "type" '<' $@21 type_declaration '>' $@22
  435     | expr . "as" basic_type_declaration
  436     | expr . '?' "as" "name"
  439     | expr . '?' "as" "type" '<' $@23 type_declaration '>' $@24
  440     | expr . '?' "as" basic_type_declaration
  448     | expr . "<|" expr
  449     | expr . "|>" expr
  450     | expr . "|>" basic_type_declaration
  461 expr_mtag: expr . '.' "$f" '(' expr ')'
  462          | expr . "?." "$f" '(' expr ')'
  463          | expr . '.' '.' "$f" '(' expr ')'
  464          | expr . '.' "?." "$f" '(' expr ')'
  465          | expr . "as" "$f" '(' expr ')'
  466          | expr . '?' "as" "$f" '(' expr ')'
  467          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 648
    "as"   shift, and go to state 649
    "<<"   shift, and go to state 650
    ">>"   shift, and go to state 651
    "++"   shift, and go to state 652
    "--"   shift, and go to state 653
    "->"   shift, and go to state 658
    "??"   shift, and go to state 659
    "?."   shift, and go to state 660
    "?["   shift, and go to state 661
    "<|"   shift, and go to state 662
    "|>"   shift, and go to state 663
    "<<<"  shift, and go to state 664
    ">>>"  shift, and go to state 665
    '-'    shift, and go to state 676
    '+'    shift, and go to state 677
    '*'    shift, and go to state 678
    '/'    shift, and go to state 679
    '%'    shift, and go to state 680
    '.'    shift, and go to state 681
    '['    shift, and go to state 682

    $default  reduce using rule 284 (expr_cast)


State 1317

  287 expr_cast: "reinterpret" '<' $@9 type_declaration_no_options '>' $@10 expr .
  342 expr_method_call: expr . "->" "name" '(' ')'
  343                 | expr . "->" "name" '(' expr_list ')'
  353 expr_field: expr . '.' "name"
  354           | expr . '.' '.' "name"
  355           | expr . '.' "name" '(' ')'
  356           | expr . '.' "name" '(' expr_list ')'
  357           | expr . '.' basic_type_declaration '(' ')'
  358           | expr . '.' basic_type_declaration '(' expr_list ')'
  361           | expr . '.' $@17 error $@18
  383 expr: expr . "<<" expr
  384     | expr . ">>" expr
  385     | expr . "<<<" expr
  386     | expr . ">>>" expr
  387     | expr . '+' expr
  388     | expr . '-' expr
  389     | expr . '*' expr
  390     | expr . '/' expr
  391     | expr . '%' expr
  392     | expr . '<' expr
  393     | expr . '>' expr
  394     | expr . "==" expr
  395     | expr . "!=" expr
  396     | expr . "<=" expr
  397     | expr . ">=" expr
  398     | expr . '&' expr
  399     | expr . '|' expr
  400     | expr . '^' expr
  401     | expr . "&&" expr
  402     | expr . "||" expr
  403     | expr . "^^" expr
  404     | expr . ".." expr
  407     | expr . "++"
  408     | expr . "--"
  410     | expr . '[' expr ']'
  411     | expr . '.' '[' expr ']'
  412     | expr . "?[" expr ']'
  413     | expr . '.' "?[" expr ']'
  414     | expr . "?." "name"
  415     | expr . '.' "?." "name"
  424     | expr . "??" expr
  425     | expr . '?' expr ':' expr
  428     | expr . "is" "type" '<' $@19 type_declaration_no_options '>' $@20
  429     | expr . "is" basic_type_declaration
  430     | expr . "is" "name"
  431     | expr . "as" "name"
  434     | expr . "as" "type" '<' $@21 type_declaration '>' $@22
  435     | expr . "as" basic_type_declaration
  436     | expr . '?' "as" "name"
  439     | expr . '?' "as" "type" '<' $@23 type_declaration '>' $@24
  440     | expr . '?' "as" basic_type_declaration
  448     | expr . "<|" expr
  449     | expr . "|>" expr
  450     | expr . "|>" basic_type_declaration
  461 expr_mtag: expr . '.' "$f" '(' expr ')'
  462          | expr . "?." "$f" '(' expr ')'
  463          | expr . '.' '.' "$f" '(' expr ')'
  464          | expr . '.' "?." "$f" '(' expr ')'
  465          | expr . "as" "$f" '(' expr ')'
  466          | expr . '?' "as" "$f" '(' expr ')'
  467          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 648
    "as"   shift, and go to state 649
    "<<"   shift, and go to state 650
    ">>"   shift, and go to state 651
    "++"   shift, and go to state 652
    "--"   shift, and go to state 653
    "->"   shift, and go to state 658
    "??"   shift, and go to state 659
    "?."   shift, and go to state 660
    "?["   shift, and go to state 661
    "<|"   shift, and go to state 662
    "|>"   shift, and go to state 663
    "<<<"  shift, and go to state 664
    ">>>"  shift, and go to state 665
    '-'    shift, and go to state 676
    '+'    shift, and go to state 677
    '*'    shift, and go to state 678
    '/'    shift, and go to state 679
    '%'    shift, and go to state 680
    '.'    shift, and go to state 681
    '['    shift, and go to state 682

    $default  reduce using rule 287 (expr_cast)


State 1318

  779 make_dim_decl: "fixed_array" '<' $@91 type_declaration_no_options '>' $@92 '(' . expr_list optional_comma ')'

    "struct"                          shift, and go to state 409
    "class"                           shift, and go to state 410
    "true"                            shift, and go to state 411
    "false"                           shift, and go to state 412
    "new"                             shift, and go to state 413
    "typeinfo"                        shift, and go to state 414
    "type"                            shift, and go to state 415
    "array"                           shift, and go to state 416
    "null"                            shift, and go to state 417
    "table"                           shift, and go to state 418
    "deref"                           shift, and go to state 419
    "cast"                            shift, and go to state 420
    "upcast"                          shift, and go to state 421
    "addr"                            shift, and go to state 422
    "reinterpret"                     shift, and go to state 423
    "unsafe"                          shift, and go to state 424
    "fixed_array"                     shift, and go to state 425
    "default"                         shift, and go to state 426
    "bool"                            shift, and go to state 225
    "void"                            shift, and go to state 226
    "string"                          shift, and go to state 227
    "int"                             shift, and go to state 229
    "int2"                            shift, and go to state 230
    "int3"                            shift, and go to state 231
    "int4"                            shift, and go to state 232
    "uint"                            shift, and go to state 233
    "bitfield"                        shift, and go to state 427
    "uint2"                           shift, and go to state 235
    "uint3"                           shift, and go to state 236
    "uint4"                           shift, and go to state 237
    "float"                           shift, and go to state 238
    "float2"                          shift, and go to state 239
    "float3"                          shift, and go to state 240
    "float4"                          shift, and go to state 241
    "range"                           shift, and go to state 242
    "urange"                          shift, and go to state 243
    "range64"                         shift, and go to state 244
    "urange64"                        shift, and go to state 245
    "int64"                           shift, and go to state 247
    "uint64"                          shift, and go to state 248
    "double"                          shift, and go to state 249
    "int8"                            shift, and go to state 252
    "uint8"                           shift, and go to state 253
    "int16"                           shift, and go to state 254
    "uint16"                          shift, and go to state 255
    "tuple"                           shift, and go to state 428
    "variant"                         shift, and go to state 429
    "generator"                       shift, and go to state 430
    "++"                              shift, and go to state 431
    "--"                              shift, and go to state 432
    "::"                              shift, and go to state 55
    "$$"                              shift, and go to state 433
    "$i"                              shift, and go to state 434
    "$v"                              shift, and go to state 435
    "$b"                              shift, and go to state 436
    "$a"                              shift, and go to state 437
    "$c"                              shift, and go to state 438
    "..."                             shift, and go to state 439
    "integer constant"                shift, and go to state 440
    "long integer constant"           shift, and go to state 441
    "unsigned integer constant"       shift, and go to state 442
    "unsigned long integer constant"  shift, and go to state 443
    "unsigned int8 constant"          shift, and go to state 444
    "floating point constant"         shift, and go to state 445
    "double constant"                 shift, and go to state 446
    "name"                            shift, and go to state 56
    "start of the string"             shift, and go to state 447
    "begin of code block"             shift, and go to state 448
    '-'                               shift, and go to state 449
    '+'                               shift, and go to state 450
    '*'                               shift, and go to state 451
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 452
    '!'                               shift, and go to state 453
    '['                               shift, and go to state 454
    '('                               shift, and go to state 455
    '$'                               shift, and go to state 456
    '@'                               shift, and go to state 457

    string_builder          go to state 458
    expr_reader             go to state 459
    expr_call_pipe          go to state 460
    name_in_namespace       go to state 461
    expr_new                go to state 462
    expr_cast               go to state 463
    expr_type_decl          go to state 464
    expr_type_info          go to state 465
    expr_list               go to state 1373
    block_or_lambda         go to state 466
    expr_full_block         go to state 467
    expr_numeric_const      go to state 468
    expr_named_call         go to state 469
    expr_method_call        go to state 470
    func_addr_expr          go to state 471
    expr_field              go to state 472
    expr_call               go to state 473
    expr                    go to state 639
    expr_mtag               go to state 475
    basic_type_declaration  go to state 476
    make_decl               go to state 477
    make_struct_decl        go to state 478
    make_tuple_call         go to state 479
    make_dim_decl           go to state 480
    make_table_decl         go to state 481
    array_comprehension     go to state 482


State 1319

  743 use_initializer: "uninitialized" .

    $default  reduce using rule 743 (use_initializer)


State 1320

  755 make_struct_decl: "default" '<' $@79 type_declaration_no_options '>' $@80 use_initializer .

    $default  reduce using rule 755 (make_struct_decl)


State 1321

  761 make_tuple_call: "tuple" '<' $@81 type_declaration_no_options '>' $@82 '(' . use_initializer optional_make_struct_dim_decl ')'

    "uninitialized"  shift, and go to state 1319

    $default  reduce using rule 742 (use_initializer)

    use_initializer  go to state 1374


State 1322

  752 make_struct_decl: "variant" '<' $@77 type_declaration_no_options '>' $@78 '(' . make_variant_dim ')'

    "$f"    shift, and go to state 839
    "name"  shift, and go to state 1036

    make_struct_fields  go to state 1375
    make_variant_dim    go to state 1376


State 1323

  421 expr: "generator" '<' type_declaration_no_options '>' optional_capture_list '(' ')' .

    $default  reduce using rule 421 (expr)


State 1324

  342 expr_method_call: expr . "->" "name" '(' ')'
  343                 | expr . "->" "name" '(' expr_list ')'
  353 expr_field: expr . '.' "name"
  354           | expr . '.' '.' "name"
  355           | expr . '.' "name" '(' ')'
  356           | expr . '.' "name" '(' expr_list ')'
  357           | expr . '.' basic_type_declaration '(' ')'
  358           | expr . '.' basic_type_declaration '(' expr_list ')'
  361           | expr . '.' $@17 error $@18
  383 expr: expr . "<<" expr
  384     | expr . ">>" expr
  385     | expr . "<<<" expr
  386     | expr . ">>>" expr
  387     | expr . '+' expr
  388     | expr . '-' expr
  389     | expr . '*' expr
  390     | expr . '/' expr
  391     | expr . '%' expr
  392     | expr . '<' expr
  393     | expr . '>' expr
  394     | expr . "==" expr
  395     | expr . "!=" expr
  396     | expr . "<=" expr
  397     | expr . ">=" expr
  398     | expr . '&' expr
  399     | expr . '|' expr
  400     | expr . '^' expr
  401     | expr . "&&" expr
  402     | expr . "||" expr
  403     | expr . "^^" expr
  404     | expr . ".." expr
  407     | expr . "++"
  408     | expr . "--"
  410     | expr . '[' expr ']'
  411     | expr . '.' '[' expr ']'
  412     | expr . "?[" expr ']'
  413     | expr . '.' "?[" expr ']'
  414     | expr . "?." "name"
  415     | expr . '.' "?." "name"
  422     | "generator" '<' type_declaration_no_options '>' optional_capture_list '(' expr . ')'
  424     | expr . "??" expr
  425     | expr . '?' expr ':' expr
  428     | expr . "is" "type" '<' $@19 type_declaration_no_options '>' $@20
  429     | expr . "is" basic_type_declaration
  430     | expr . "is" "name"
  431     | expr . "as" "name"
  434     | expr . "as" "type" '<' $@21 type_declaration '>' $@22
  435     | expr . "as" basic_type_declaration
  436     | expr . '?' "as" "name"
  439     | expr . '?' "as" "type" '<' $@23 type_declaration '>' $@24
  440     | expr . '?' "as" basic_type_declaration
  448     | expr . "<|" expr
  449     | expr . "|>" expr
  450     | expr . "|>" basic_type_declaration
  461 expr_mtag: expr . '.' "$f" '(' expr ')'
  462          | expr . "?." "$f" '(' expr ')'
  463          | expr . '.' '.' "$f" '(' expr ')'
  464          | expr . '.' "?." "$f" '(' expr ')'
  465          | expr . "as" "$f" '(' expr ')'
  466          | expr . '?' "as" "$f" '(' expr ')'
  467          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 648
    "as"   shift, and go to state 649
    "<<"   shift, and go to state 650
    ">>"   shift, and go to state 651
    "++"   shift, and go to state 652
    "--"   shift, and go to state 653
    "<="   shift, and go to state 654
    ">="   shift, and go to state 655
    "=="   shift, and go to state 656
    "!="   shift, and go to state 657
    "->"   shift, and go to state 658
    "??"   shift, and go to state 659
    "?."   shift, and go to state 660
    "?["   shift, and go to state 661
    "<|"   shift, and go to state 662
    "|>"   shift, and go to state 663
    "<<<"  shift, and go to state 664
    ">>>"  shift, and go to state 665
    "&&"   shift, and go to state 666
    "||"   shift, and go to state 667
    "^^"   shift, and go to state 668
    ".."   shift, and go to state 669
    '?'    shift, and go to state 670
    '|'    shift, and go to state 671
    '^'    shift, and go to state 672
    '&'    shift, and go to state 673
    '<'    shift, and go to state 674
    '>'    shift, and go to state 675
    '-'    shift, and go to state 676
    '+'    shift, and go to state 677
    '*'    shift, and go to state 678
    '/'    shift, and go to state 679
    '%'    shift, and go to state 680
    '.'    shift, and go to state 681
    '['    shift, and go to state 682
    ')'    shift, and go to state 1377


State 1325

  460 expr_mtag: "$c" '(' expr ')' '(' expr_list ')' .

    $default  reduce using rule 460 (expr_mtag)


State 1326

  792 array_comprehension: "begin of code block" "for" '(' variable_name_with_pos_list "in" expr_list ')' . "end of expression" make_map_tuple array_comprehension_where "end of code block"

    "end of expression"  shift, and go to state 1378


State 1327

  790 array_comprehension: '[' "for" '(' variable_name_with_pos_list "in" expr_list ')' . "end of expression" expr array_comprehension_where ']'

    "end of expression"  shift, and go to state 1379


State 1328

  295 expr_list: expr_list . ',' expr
  791 array_comprehension: '[' "iterator" "for" '(' variable_name_with_pos_list "in" expr_list . ')' "end of expression" expr array_comprehension_where ']'

    ','  shift, and go to state 1074
    ')'  shift, and go to state 1380


State 1329

  349 func_addr_expr: '@' '@' '<' $@13 type_declaration_no_options '>' $@14 . func_addr_name

    "::"    shift, and go to state 55
    "$i"    shift, and go to state 833
    "name"  shift, and go to state 56

    name_in_namespace  go to state 836
    func_addr_name     go to state 1381


State 1330

  352 func_addr_expr: '@' '@' '<' $@15 optional_function_argument_list optional_function_type '>' . $@16 func_addr_name

    $default  reduce using rule 351 ($@16)

    $@16  go to state 1382


State 1331

  731 make_struct_fields: "$f" '(' expr ')' ":=" . expr

    "struct"                          shift, and go to state 409
    "class"                           shift, and go to state 410
    "true"                            shift, and go to state 411
    "false"                           shift, and go to state 412
    "new"                             shift, and go to state 413
    "typeinfo"                        shift, and go to state 414
    "type"                            shift, and go to state 415
    "array"                           shift, and go to state 416
    "null"                            shift, and go to state 417
    "table"                           shift, and go to state 418
    "deref"                           shift, and go to state 419
    "cast"                            shift, and go to state 420
    "upcast"                          shift, and go to state 421
    "addr"                            shift, and go to state 422
    "reinterpret"                     shift, and go to state 423
    "unsafe"                          shift, and go to state 424
    "fixed_array"                     shift, and go to state 425
    "default"                         shift, and go to state 426
    "bool"                            shift, and go to state 225
    "void"                            shift, and go to state 226
    "string"                          shift, and go to state 227
    "int"                             shift, and go to state 229
    "int2"                            shift, and go to state 230
    "int3"                            shift, and go to state 231
    "int4"                            shift, and go to state 232
    "uint"                            shift, and go to state 233
    "bitfield"                        shift, and go to state 427
    "uint2"                           shift, and go to state 235
    "uint3"                           shift, and go to state 236
    "uint4"                           shift, and go to state 237
    "float"                           shift, and go to state 238
    "float2"                          shift, and go to state 239
    "float3"                          shift, and go to state 240
    "float4"                          shift, and go to state 241
    "range"                           shift, and go to state 242
    "urange"                          shift, and go to state 243
    "range64"                         shift, and go to state 244
    "urange64"                        shift, and go to state 245
    "int64"                           shift, and go to state 247
    "uint64"                          shift, and go to state 248
    "double"                          shift, and go to state 249
    "int8"                            shift, and go to state 252
    "uint8"                           shift, and go to state 253
    "int16"                           shift, and go to state 254
    "uint16"                          shift, and go to state 255
    "tuple"                           shift, and go to state 428
    "variant"                         shift, and go to state 429
    "generator"                       shift, and go to state 430
    "++"                              shift, and go to state 431
    "--"                              shift, and go to state 432
    "::"                              shift, and go to state 55
    "$$"                              shift, and go to state 433
    "$i"                              shift, and go to state 434
    "$v"                              shift, and go to state 435
    "$b"                              shift, and go to state 436
    "$a"                              shift, and go to state 437
    "$c"                              shift, and go to state 438
    "..."                             shift, and go to state 439
    "integer constant"                shift, and go to state 440
    "long integer constant"           shift, and go to state 441
    "unsigned integer constant"       shift, and go to state 442
    "unsigned long integer constant"  shift, and go to state 443
    "unsigned int8 constant"          shift, and go to state 444
    "floating point constant"         shift, and go to state 445
    "double constant"                 shift, and go to state 446
    "name"                            shift, and go to state 56
    "start of the string"             shift, and go to state 447
    "begin of code block"             shift, and go to state 448
    '-'                               shift, and go to state 449
    '+'                               shift, and go to state 450
    '*'                               shift, and go to state 451
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 452
    '!'                               shift, and go to state 453
    '['                               shift, and go to state 454
    '('                               shift, and go to state 455
    '$'                               shift, and go to state 456
    '@'                               shift, and go to state 457

    string_builder          go to state 458
    expr_reader             go to state 459
    expr_call_pipe          go to state 460
    name_in_namespace       go to state 461
    expr_new                go to state 462
    expr_cast               go to state 463
    expr_type_decl          go to state 464
    expr_type_info          go to state 465
    block_or_lambda         go to state 466
    expr_full_block         go to state 467
    expr_numeric_const      go to state 468
    expr_named_call         go to state 469
    expr_method_call        go to state 470
    func_addr_expr          go to state 471
    expr_field              go to state 472
    expr_call               go to state 473
    expr                    go to state 1383
    expr_mtag               go to state 475
    basic_type_declaration  go to state 476
    make_decl               go to state 477
    make_struct_decl        go to state 478
    make_tuple_call         go to state 479
    make_dim_decl           go to state 480
    make_table_decl         go to state 481
    array_comprehension     go to state 482


State 1332

  730 make_struct_fields: "$f" '(' expr ')' copy_or_move . expr

    "struct"                          shift, and go to state 409
    "class"                           shift, and go to state 410
    "true"                            shift, and go to state 411
    "false"                           shift, and go to state 412
    "new"                             shift, and go to state 413
    "typeinfo"                        shift, and go to state 414
    "type"                            shift, and go to state 415
    "array"                           shift, and go to state 416
    "null"                            shift, and go to state 417
    "table"                           shift, and go to state 418
    "deref"                           shift, and go to state 419
    "cast"                            shift, and go to state 420
    "upcast"                          shift, and go to state 421
    "addr"                            shift, and go to state 422
    "reinterpret"                     shift, and go to state 423
    "unsafe"                          shift, and go to state 424
    "fixed_array"                     shift, and go to state 425
    "default"                         shift, and go to state 426
    "bool"                            shift, and go to state 225
    "void"                            shift, and go to state 226
    "string"                          shift, and go to state 227
    "int"                             shift, and go to state 229
    "int2"                            shift, and go to state 230
    "int3"                            shift, and go to state 231
    "int4"                            shift, and go to state 232
    "uint"                            shift, and go to state 233
    "bitfield"                        shift, and go to state 427
    "uint2"                           shift, and go to state 235
    "uint3"                           shift, and go to state 236
    "uint4"                           shift, and go to state 237
    "float"                           shift, and go to state 238
    "float2"                          shift, and go to state 239
    "float3"                          shift, and go to state 240
    "float4"                          shift, and go to state 241
    "range"                           shift, and go to state 242
    "urange"                          shift, and go to state 243
    "range64"                         shift, and go to state 244
    "urange64"                        shift, and go to state 245
    "int64"                           shift, and go to state 247
    "uint64"                          shift, and go to state 248
    "double"                          shift, and go to state 249
    "int8"                            shift, and go to state 252
    "uint8"                           shift, and go to state 253
    "int16"                           shift, and go to state 254
    "uint16"                          shift, and go to state 255
    "tuple"                           shift, and go to state 428
    "variant"                         shift, and go to state 429
    "generator"                       shift, and go to state 430
    "++"                              shift, and go to state 431
    "--"                              shift, and go to state 432
    "::"                              shift, and go to state 55
    "$$"                              shift, and go to state 433
    "$i"                              shift, and go to state 434
    "$v"                              shift, and go to state 435
    "$b"                              shift, and go to state 436
    "$a"                              shift, and go to state 437
    "$c"                              shift, and go to state 438
    "..."                             shift, and go to state 439
    "integer constant"                shift, and go to state 440
    "long integer constant"           shift, and go to state 441
    "unsigned integer constant"       shift, and go to state 442
    "unsigned long integer constant"  shift, and go to state 443
    "unsigned int8 constant"          shift, and go to state 444
    "floating point constant"         shift, and go to state 445
    "double constant"                 shift, and go to state 446
    "name"                            shift, and go to state 56
    "start of the string"             shift, and go to state 447
    "begin of code block"             shift, and go to state 448
    '-'                               shift, and go to state 449
    '+'                               shift, and go to state 450
    '*'                               shift, and go to state 451
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 452
    '!'                               shift, and go to state 453
    '['                               shift, and go to state 454
    '('                               shift, and go to state 455
    '$'                               shift, and go to state 456
    '@'                               shift, and go to state 457

    string_builder          go to state 458
    expr_reader             go to state 459
    expr_call_pipe          go to state 460
    name_in_namespace       go to state 461
    expr_new                go to state 462
    expr_cast               go to state 463
    expr_type_decl          go to state 464
    expr_type_info          go to state 465
    block_or_lambda         go to state 466
    expr_full_block         go to state 467
    expr_numeric_const      go to state 468
    expr_named_call         go to state 469
    expr_method_call        go to state 470
    func_addr_expr          go to state 471
    expr_field              go to state 472
    expr_call               go to state 473
    expr                    go to state 1384
    expr_mtag               go to state 475
    basic_type_declaration  go to state 476
    make_decl               go to state 477
    make_struct_decl        go to state 478
    make_tuple_call         go to state 479
    make_dim_decl           go to state 480
    make_table_decl         go to state 481
    array_comprehension     go to state 482


State 1333

  341 expr_named_call: name_in_namespace '(' expr_list ',' '[' make_struct_fields ']' . ')'

    ')'  shift, and go to state 1385


State 1334

  342 expr_method_call: expr . "->" "name" '(' ')'
  343                 | expr . "->" "name" '(' expr_list ')'
  353 expr_field: expr . '.' "name"
  354           | expr . '.' '.' "name"
  355           | expr . '.' "name" '(' ')'
  356           | expr . '.' "name" '(' expr_list ')'
  357           | expr . '.' basic_type_declaration '(' ')'
  358           | expr . '.' basic_type_declaration '(' expr_list ')'
  361           | expr . '.' $@17 error $@18
  383 expr: expr . "<<" expr
  384     | expr . ">>" expr
  385     | expr . "<<<" expr
  386     | expr . ">>>" expr
  387     | expr . '+' expr
  388     | expr . '-' expr
  389     | expr . '*' expr
  390     | expr . '/' expr
  391     | expr . '%' expr
  392     | expr . '<' expr
  393     | expr . '>' expr
  394     | expr . "==" expr
  395     | expr . "!=" expr
  396     | expr . "<=" expr
  397     | expr . ">=" expr
  398     | expr . '&' expr
  399     | expr . '|' expr
  400     | expr . '^' expr
  401     | expr . "&&" expr
  402     | expr . "||" expr
  403     | expr . "^^" expr
  404     | expr . ".." expr
  407     | expr . "++"
  408     | expr . "--"
  410     | expr . '[' expr ']'
  411     | expr . '.' '[' expr ']'
  412     | expr . "?[" expr ']'
  413     | expr . '.' "?[" expr ']'
  414     | expr . "?." "name"
  415     | expr . '.' "?." "name"
  424     | expr . "??" expr
  425     | expr . '?' expr ':' expr
  428     | expr . "is" "type" '<' $@19 type_declaration_no_options '>' $@20
  429     | expr . "is" basic_type_declaration
  430     | expr . "is" "name"
  431     | expr . "as" "name"
  434     | expr . "as" "type" '<' $@21 type_declaration '>' $@22
  435     | expr . "as" basic_type_declaration
  436     | expr . '?' "as" "name"
  439     | expr . '?' "as" "type" '<' $@23 type_declaration '>' $@24
  440     | expr . '?' "as" basic_type_declaration
  448     | expr . "<|" expr
  449     | expr . "|>" expr
  450     | expr . "|>" basic_type_declaration
  461 expr_mtag: expr . '.' "$f" '(' expr ')'
  462          | expr . "?." "$f" '(' expr ')'
  463          | expr . '.' '.' "$f" '(' expr ')'
  464          | expr . '.' "?." "$f" '(' expr ')'
  465          | expr . "as" "$f" '(' expr ')'
  466          | expr . '?' "as" "$f" '(' expr ')'
  467          | expr . "is" "$f" '(' expr ')'
  732 make_struct_fields: make_struct_fields ',' "$f" '(' expr . ')' copy_or_move expr
  733                   | make_struct_fields ',' "$f" '(' expr . ')' ":=" expr

    "is"   shift, and go to state 648
    "as"   shift, and go to state 649
    "<<"   shift, and go to state 650
    ">>"   shift, and go to state 651
    "++"   shift, and go to state 652
    "--"   shift, and go to state 653
    "<="   shift, and go to state 654
    ">="   shift, and go to state 655
    "=="   shift, and go to state 656
    "!="   shift, and go to state 657
    "->"   shift, and go to state 658
    "??"   shift, and go to state 659
    "?."   shift, and go to state 660
    "?["   shift, and go to state 661
    "<|"   shift, and go to state 662
    "|>"   shift, and go to state 663
    "<<<"  shift, and go to state 664
    ">>>"  shift, and go to state 665
    "&&"   shift, and go to state 666
    "||"   shift, and go to state 667
    "^^"   shift, and go to state 668
    ".."   shift, and go to state 669
    '?'    shift, and go to state 670
    '|'    shift, and go to state 671
    '^'    shift, and go to state 672
    '&'    shift, and go to state 673
    '<'    shift, and go to state 674
    '>'    shift, and go to state 675
    '-'    shift, and go to state 676
    '+'    shift, and go to state 677
    '*'    shift, and go to state 678
    '/'    shift, and go to state 679
    '%'    shift, and go to state 680
    '.'    shift, and go to state 681
    '['    shift, and go to state 682
    ')'    shift, and go to state 1386


State 1335

  342 expr_method_call: expr . "->" "name" '(' ')'
  343                 | expr . "->" "name" '(' expr_list ')'
  353 expr_field: expr . '.' "name"
  354           | expr . '.' '.' "name"
  355           | expr . '.' "name" '(' ')'
  356           | expr . '.' "name" '(' expr_list ')'
  357           | expr . '.' basic_type_declaration '(' ')'
  358           | expr . '.' basic_type_declaration '(' expr_list ')'
  361           | expr . '.' $@17 error $@18
  383 expr: expr . "<<" expr
  384     | expr . ">>" expr
  385     | expr . "<<<" expr
  386     | expr . ">>>" expr
  387     | expr . '+' expr
  388     | expr . '-' expr
  389     | expr . '*' expr
  390     | expr . '/' expr
  391     | expr . '%' expr
  392     | expr . '<' expr
  393     | expr . '>' expr
  394     | expr . "==" expr
  395     | expr . "!=" expr
  396     | expr . "<=" expr
  397     | expr . ">=" expr
  398     | expr . '&' expr
  399     | expr . '|' expr
  400     | expr . '^' expr
  401     | expr . "&&" expr
  402     | expr . "||" expr
  403     | expr . "^^" expr
  404     | expr . ".." expr
  407     | expr . "++"
  408     | expr . "--"
  410     | expr . '[' expr ']'
  411     | expr . '.' '[' expr ']'
  412     | expr . "?[" expr ']'
  413     | expr . '.' "?[" expr ']'
  414     | expr . "?." "name"
  415     | expr . '.' "?." "name"
  424     | expr . "??" expr
  425     | expr . '?' expr ':' expr
  428     | expr . "is" "type" '<' $@19 type_declaration_no_options '>' $@20
  429     | expr . "is" basic_type_declaration
  430     | expr . "is" "name"
  431     | expr . "as" "name"
  434     | expr . "as" "type" '<' $@21 type_declaration '>' $@22
  435     | expr . "as" basic_type_declaration
  436     | expr . '?' "as" "name"
  439     | expr . '?' "as" "type" '<' $@23 type_declaration '>' $@24
  440     | expr . '?' "as" basic_type_declaration
  448     | expr . "<|" expr
  449     | expr . "|>" expr
  450     | expr . "|>" basic_type_declaration
  461 expr_mtag: expr . '.' "$f" '(' expr ')'
  462          | expr . "?." "$f" '(' expr ')'
  463          | expr . '.' '.' "$f" '(' expr ')'
  464          | expr . '.' "?." "$f" '(' expr ')'
  465          | expr . "as" "$f" '(' expr ')'
  466          | expr . '?' "as" "$f" '(' expr ')'
  467          | expr . "is" "$f" '(' expr ')'
  729 make_struct_fields: make_struct_fields ',' "name" ":=" expr .

    "is"   shift, and go to state 648
    "as"   shift, and go to state 649
    "<<"   shift, and go to state 650
    ">>"   shift, and go to state 651
    "++"   shift, and go to state 652
    "--"   shift, and go to state 653
    "<="   shift, and go to state 654
    ">="   shift, and go to state 655
    "=="   shift, and go to state 656
    "!="   shift, and go to state 657
    "->"   shift, and go to state 658
    "??"   shift, and go to state 659
    "?."   shift, and go to state 660
    "?["   shift, and go to state 661
    "<|"   shift, and go to state 662
    "|>"   shift, and go to state 663
    "<<<"  shift, and go to state 664
    ">>>"  shift, and go to state 665
    "&&"   shift, and go to state 666
    "||"   shift, and go to state 667
    "^^"   shift, and go to state 668
    ".."   shift, and go to state 669
    '?'    shift, and go to state 670
    '|'    shift, and go to state 671
    '^'    shift, and go to state 672
    '&'    shift, and go to state 673
    '<'    shift, and go to state 674
    '>'    shift, and go to state 675
    '-'    shift, and go to state 676
    '+'    shift, and go to state 677
    '*'    shift, and go to state 678
    '/'    shift, and go to state 679
    '%'    shift, and go to state 680
    '.'    shift, and go to state 681
    '['    shift, and go to state 682

    $default  reduce using rule 729 (make_struct_fields)


State 1336

  342 expr_method_call: expr . "->" "name" '(' ')'
  343                 | expr . "->" "name" '(' expr_list ')'
  353 expr_field: expr . '.' "name"
  354           | expr . '.' '.' "name"
  355           | expr . '.' "name" '(' ')'
  356           | expr . '.' "name" '(' expr_list ')'
  357           | expr . '.' basic_type_declaration '(' ')'
  358           | expr . '.' basic_type_declaration '(' expr_list ')'
  361           | expr . '.' $@17 error $@18
  383 expr: expr . "<<" expr
  384     | expr . ">>" expr
  385     | expr . "<<<" expr
  386     | expr . ">>>" expr
  387     | expr . '+' expr
  388     | expr . '-' expr
  389     | expr . '*' expr
  390     | expr . '/' expr
  391     | expr . '%' expr
  392     | expr . '<' expr
  393     | expr . '>' expr
  394     | expr . "==" expr
  395     | expr . "!=" expr
  396     | expr . "<=" expr
  397     | expr . ">=" expr
  398     | expr . '&' expr
  399     | expr . '|' expr
  400     | expr . '^' expr
  401     | expr . "&&" expr
  402     | expr . "||" expr
  403     | expr . "^^" expr
  404     | expr . ".." expr
  407     | expr . "++"
  408     | expr . "--"
  410     | expr . '[' expr ']'
  411     | expr . '.' '[' expr ']'
  412     | expr . "?[" expr ']'
  413     | expr . '.' "?[" expr ']'
  414     | expr . "?." "name"
  415     | expr . '.' "?." "name"
  424     | expr . "??" expr
  425     | expr . '?' expr ':' expr
  428     | expr . "is" "type" '<' $@19 type_declaration_no_options '>' $@20
  429     | expr . "is" basic_type_declaration
  430     | expr . "is" "name"
  431     | expr . "as" "name"
  434     | expr . "as" "type" '<' $@21 type_declaration '>' $@22
  435     | expr . "as" basic_type_declaration
  436     | expr . '?' "as" "name"
  439     | expr . '?' "as" "type" '<' $@23 type_declaration '>' $@24
  440     | expr . '?' "as" basic_type_declaration
  448     | expr . "<|" expr
  449     | expr . "|>" expr
  450     | expr . "|>" basic_type_declaration
  461 expr_mtag: expr . '.' "$f" '(' expr ')'
  462          | expr . "?." "$f" '(' expr ')'
  463          | expr . '.' '.' "$f" '(' expr ')'
  464          | expr . '.' "?." "$f" '(' expr ')'
  465          | expr . "as" "$f" '(' expr ')'
  466          | expr . '?' "as" "$f" '(' expr ')'
  467          | expr . "is" "$f" '(' expr ')'
  728 make_struct_fields: make_struct_fields ',' "name" copy_or_move expr .

    "is"   shift, and go to state 648
    "as"   shift, and go to state 649
    "<<"   shift, and go to state 650
    ">>"   shift, and go to state 651
    "++"   shift, and go to state 652
    "--"   shift, and go to state 653
    "<="   shift, and go to state 654
    ">="   shift, and go to state 655
    "=="   shift, and go to state 656
    "!="   shift, and go to state 657
    "->"   shift, and go to state 658
    "??"   shift, and go to state 659
    "?."   shift, and go to state 660
    "?["   shift, and go to state 661
    "<|"   shift, and go to state 662
    "|>"   shift, and go to state 663
    "<<<"  shift, and go to state 664
    ">>>"  shift, and go to state 665
    "&&"   shift, and go to state 666
    "||"   shift, and go to state 667
    "^^"   shift, and go to state 668
    ".."   shift, and go to state 669
    '?'    shift, and go to state 670
    '|'    shift, and go to state 671
    '^'    shift, and go to state 672
    '&'    shift, and go to state 673
    '<'    shift, and go to state 674
    '>'    shift, and go to state 675
    '-'    shift, and go to state 676
    '+'    shift, and go to state 677
    '*'    shift, and go to state 678
    '/'    shift, and go to state 679
    '%'    shift, and go to state 680
    '.'    shift, and go to state 681
    '['    shift, and go to state 682

    $default  reduce using rule 728 (make_struct_fields)


State 1337

  306 capture_entry: "name" '(' "name" . ')'

    ')'  shift, and go to state 1387


State 1338

  308 capture_list: capture_list ',' capture_entry .

    $default  reduce using rule 308 (capture_list)


State 1339

  298 block_or_simple_block: "=>" "<-" . expr

    "struct"                          shift, and go to state 409
    "class"                           shift, and go to state 410
    "true"                            shift, and go to state 411
    "false"                           shift, and go to state 412
    "new"                             shift, and go to state 413
    "typeinfo"                        shift, and go to state 414
    "type"                            shift, and go to state 415
    "array"                           shift, and go to state 416
    "null"                            shift, and go to state 417
    "table"                           shift, and go to state 418
    "deref"                           shift, and go to state 419
    "cast"                            shift, and go to state 420
    "upcast"                          shift, and go to state 421
    "addr"                            shift, and go to state 422
    "reinterpret"                     shift, and go to state 423
    "unsafe"                          shift, and go to state 424
    "fixed_array"                     shift, and go to state 425
    "default"                         shift, and go to state 426
    "bool"                            shift, and go to state 225
    "void"                            shift, and go to state 226
    "string"                          shift, and go to state 227
    "int"                             shift, and go to state 229
    "int2"                            shift, and go to state 230
    "int3"                            shift, and go to state 231
    "int4"                            shift, and go to state 232
    "uint"                            shift, and go to state 233
    "bitfield"                        shift, and go to state 427
    "uint2"                           shift, and go to state 235
    "uint3"                           shift, and go to state 236
    "uint4"                           shift, and go to state 237
    "float"                           shift, and go to state 238
    "float2"                          shift, and go to state 239
    "float3"                          shift, and go to state 240
    "float4"                          shift, and go to state 241
    "range"                           shift, and go to state 242
    "urange"                          shift, and go to state 243
    "range64"                         shift, and go to state 244
    "urange64"                        shift, and go to state 245
    "int64"                           shift, and go to state 247
    "uint64"                          shift, and go to state 248
    "double"                          shift, and go to state 249
    "int8"                            shift, and go to state 252
    "uint8"                           shift, and go to state 253
    "int16"                           shift, and go to state 254
    "uint16"                          shift, and go to state 255
    "tuple"                           shift, and go to state 428
    "variant"                         shift, and go to state 429
    "generator"                       shift, and go to state 430
    "++"                              shift, and go to state 431
    "--"                              shift, and go to state 432
    "::"                              shift, and go to state 55
    "$$"                              shift, and go to state 433
    "$i"                              shift, and go to state 434
    "$v"                              shift, and go to state 435
    "$b"                              shift, and go to state 436
    "$a"                              shift, and go to state 437
    "$c"                              shift, and go to state 438
    "..."                             shift, and go to state 439
    "integer constant"                shift, and go to state 440
    "long integer constant"           shift, and go to state 441
    "unsigned integer constant"       shift, and go to state 442
    "unsigned long integer constant"  shift, and go to state 443
    "unsigned int8 constant"          shift, and go to state 444
    "floating point constant"         shift, and go to state 445
    "double constant"                 shift, and go to state 446
    "name"                            shift, and go to state 56
    "start of the string"             shift, and go to state 447
    "begin of code block"             shift, and go to state 448
    '-'                               shift, and go to state 449
    '+'                               shift, and go to state 450
    '*'                               shift, and go to state 451
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 452
    '!'                               shift, and go to state 453
    '['                               shift, and go to state 454
    '('                               shift, and go to state 455
    '$'                               shift, and go to state 456
    '@'                               shift, and go to state 457

    string_builder          go to state 458
    expr_reader             go to state 459
    expr_call_pipe          go to state 460
    name_in_namespace       go to state 461
    expr_new                go to state 462
    expr_cast               go to state 463
    expr_type_decl          go to state 464
    expr_type_info          go to state 465
    block_or_lambda         go to state 466
    expr_full_block         go to state 467
    expr_numeric_const      go to state 468
    expr_named_call         go to state 469
    expr_method_call        go to state 470
    func_addr_expr          go to state 471
    expr_field              go to state 472
    expr_call               go to state 473
    expr                    go to state 1388
    expr_mtag               go to state 475
    basic_type_declaration  go to state 476
    make_decl               go to state 477
    make_struct_decl        go to state 478
    make_tuple_call         go to state 479
    make_dim_decl           go to state 480
    make_table_decl         go to state 481
    array_comprehension     go to state 482


State 1340

  297 block_or_simple_block: "=>" expr .
  342 expr_method_call: expr . "->" "name" '(' ')'
  343                 | expr . "->" "name" '(' expr_list ')'
  353 expr_field: expr . '.' "name"
  354           | expr . '.' '.' "name"
  355           | expr . '.' "name" '(' ')'
  356           | expr . '.' "name" '(' expr_list ')'
  357           | expr . '.' basic_type_declaration '(' ')'
  358           | expr . '.' basic_type_declaration '(' expr_list ')'
  361           | expr . '.' $@17 error $@18
  383 expr: expr . "<<" expr
  384     | expr . ">>" expr
  385     | expr . "<<<" expr
  386     | expr . ">>>" expr
  387     | expr . '+' expr
  388     | expr . '-' expr
  389     | expr . '*' expr
  390     | expr . '/' expr
  391     | expr . '%' expr
  392     | expr . '<' expr
  393     | expr . '>' expr
  394     | expr . "==" expr
  395     | expr . "!=" expr
  396     | expr . "<=" expr
  397     | expr . ">=" expr
  398     | expr . '&' expr
  399     | expr . '|' expr
  400     | expr . '^' expr
  401     | expr . "&&" expr
  402     | expr . "||" expr
  403     | expr . "^^" expr
  404     | expr . ".." expr
  407     | expr . "++"
  408     | expr . "--"
  410     | expr . '[' expr ']'
  411     | expr . '.' '[' expr ']'
  412     | expr . "?[" expr ']'
  413     | expr . '.' "?[" expr ']'
  414     | expr . "?." "name"
  415     | expr . '.' "?." "name"
  424     | expr . "??" expr
  425     | expr . '?' expr ':' expr
  428     | expr . "is" "type" '<' $@19 type_declaration_no_options '>' $@20
  429     | expr . "is" basic_type_declaration
  430     | expr . "is" "name"
  431     | expr . "as" "name"
  434     | expr . "as" "type" '<' $@21 type_declaration '>' $@22
  435     | expr . "as" basic_type_declaration
  436     | expr . '?' "as" "name"
  439     | expr . '?' "as" "type" '<' $@23 type_declaration '>' $@24
  440     | expr . '?' "as" basic_type_declaration
  448     | expr . "<|" expr
  449     | expr . "|>" expr
  450     | expr . "|>" basic_type_declaration
  461 expr_mtag: expr . '.' "$f" '(' expr ')'
  462          | expr . "?." "$f" '(' expr ')'
  463          | expr . '.' '.' "$f" '(' expr ')'
  464          | expr . '.' "?." "$f" '(' expr ')'
  465          | expr . "as" "$f" '(' expr ')'
  466          | expr . '?' "as" "$f" '(' expr ')'
  467          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 648
    "as"   shift, and go to state 649
    "<<"   shift, and go to state 650
    ">>"   shift, and go to state 651
    "++"   shift, and go to state 652
    "--"   shift, and go to state 653
    "<="   shift, and go to state 654
    ">="   shift, and go to state 655
    "=="   shift, and go to state 656
    "!="   shift, and go to state 657
    "->"   shift, and go to state 658
    "??"   shift, and go to state 659
    "?."   shift, and go to state 660
    "?["   shift, and go to state 661
    "<|"   shift, and go to state 662
    "|>"   shift, and go to state 663
    "<<<"  shift, and go to state 664
    ">>>"  shift, and go to state 665
    "&&"   shift, and go to state 666
    "||"   shift, and go to state 667
    "^^"   shift, and go to state 668
    '?'    shift, and go to state 670
    '|'    shift, and go to state 671
    '^'    shift, and go to state 672
    '&'    shift, and go to state 673
    '<'    shift, and go to state 674
    '>'    shift, and go to state 675
    '-'    shift, and go to state 676
    '+'    shift, and go to state 677
    '*'    shift, and go to state 678
    '/'    shift, and go to state 679
    '%'    shift, and go to state 680
    '.'    shift, and go to state 681
    '['    shift, and go to state 682

    ".."  error (nonassociative)

    $default  reduce using rule 297 (block_or_simple_block)


State 1341

  312 expr_full_block_assumed_piped: block_or_lambda optional_annotation_list optional_capture_list optional_function_argument_list optional_function_type expression_block .

    $default  reduce using rule 312 (expr_full_block_assumed_piped)


State 1342

  428 expr: expr "is" "type" '<' $@19 type_declaration_no_options '>' . $@20

    $default  reduce using rule 427 ($@20)

    $@20  go to state 1389


State 1343

  434 expr: expr "as" "type" '<' $@21 type_declaration '>' . $@22

    $default  reduce using rule 433 ($@22)

    $@22  go to state 1390


State 1344

  439 expr: expr '?' "as" "type" '<' $@23 type_declaration . '>' $@24
  707 type_declaration: type_declaration . '|' type_declaration_no_options
  708                 | type_declaration . '|' '#'

    '|'  shift, and go to state 375
    '>'  shift, and go to state 1391


State 1345

  466 expr_mtag: expr '?' "as" "$f" '(' expr ')' .

    $default  reduce using rule 466 (expr_mtag)


State 1346

  464 expr_mtag: expr '.' "?." "$f" '(' expr ')' .

    $default  reduce using rule 464 (expr_mtag)


State 1347

  463 expr_mtag: expr '.' '.' "$f" '(' expr ')' .

    $default  reduce using rule 463 (expr_mtag)


State 1348

  653 type_declaration_no_options_no_dim: '$' name_in_namespace '<' $@39 type_declaration_no_options_list '>' '(' optional_expr_list ')' .

    $default  reduce using rule 653 (type_declaration_no_options_no_dim)


State 1349

   71 expression_for_loop: "for" '(' variable_name_with_pos_list "in" expr_list ')' expression_block .

    $default  reduce using rule 71 (expression_for_loop)


State 1350

   58 expression_else: "else" expression_block .

    $default  reduce using rule 58 (expression_else)


State 1351

   59 expression_else: elif_or_static_elif '(' . expr ')' expression_block expression_else

    "struct"                          shift, and go to state 409
    "class"                           shift, and go to state 410
    "true"                            shift, and go to state 411
    "false"                           shift, and go to state 412
    "new"                             shift, and go to state 413
    "typeinfo"                        shift, and go to state 414
    "type"                            shift, and go to state 415
    "array"                           shift, and go to state 416
    "null"                            shift, and go to state 417
    "table"                           shift, and go to state 418
    "deref"                           shift, and go to state 419
    "cast"                            shift, and go to state 420
    "upcast"                          shift, and go to state 421
    "addr"                            shift, and go to state 422
    "reinterpret"                     shift, and go to state 423
    "unsafe"                          shift, and go to state 424
    "fixed_array"                     shift, and go to state 425
    "default"                         shift, and go to state 426
    "bool"                            shift, and go to state 225
    "void"                            shift, and go to state 226
    "string"                          shift, and go to state 227
    "int"                             shift, and go to state 229
    "int2"                            shift, and go to state 230
    "int3"                            shift, and go to state 231
    "int4"                            shift, and go to state 232
    "uint"                            shift, and go to state 233
    "bitfield"                        shift, and go to state 427
    "uint2"                           shift, and go to state 235
    "uint3"                           shift, and go to state 236
    "uint4"                           shift, and go to state 237
    "float"                           shift, and go to state 238
    "float2"                          shift, and go to state 239
    "float3"                          shift, and go to state 240
    "float4"                          shift, and go to state 241
    "range"                           shift, and go to state 242
    "urange"                          shift, and go to state 243
    "range64"                         shift, and go to state 244
    "urange64"                        shift, and go to state 245
    "int64"                           shift, and go to state 247
    "uint64"                          shift, and go to state 248
    "double"                          shift, and go to state 249
    "int8"                            shift, and go to state 252
    "uint8"                           shift, and go to state 253
    "int16"                           shift, and go to state 254
    "uint16"                          shift, and go to state 255
    "tuple"                           shift, and go to state 428
    "variant"                         shift, and go to state 429
    "generator"                       shift, and go to state 430
    "++"                              shift, and go to state 431
    "--"                              shift, and go to state 432
    "::"                              shift, and go to state 55
    "$$"                              shift, and go to state 433
    "$i"                              shift, and go to state 434
    "$v"                              shift, and go to state 435
    "$b"                              shift, and go to state 436
    "$a"                              shift, and go to state 437
    "$c"                              shift, and go to state 438
    "..."                             shift, and go to state 439
    "integer constant"                shift, and go to state 440
    "long integer constant"           shift, and go to state 441
    "unsigned integer constant"       shift, and go to state 442
    "unsigned long integer constant"  shift, and go to state 443
    "unsigned int8 constant"          shift, and go to state 444
    "floating point constant"         shift, and go to state 445
    "double constant"                 shift, and go to state 446
    "name"                            shift, and go to state 56
    "start of the string"             shift, and go to state 447
    "begin of code block"             shift, and go to state 448
    '-'                               shift, and go to state 449
    '+'                               shift, and go to state 450
    '*'                               shift, and go to state 451
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 452
    '!'                               shift, and go to state 453
    '['                               shift, and go to state 454
    '('                               shift, and go to state 455
    '$'                               shift, and go to state 456
    '@'                               shift, and go to state 457

    string_builder          go to state 458
    expr_reader             go to state 459
    expr_call_pipe          go to state 460
    name_in_namespace       go to state 461
    expr_new                go to state 462
    expr_cast               go to state 463
    expr_type_decl          go to state 464
    expr_type_info          go to state 465
    block_or_lambda         go to state 466
    expr_full_block         go to state 467
    expr_numeric_const      go to state 468
    expr_named_call         go to state 469
    expr_method_call        go to state 470
    func_addr_expr          go to state 471
    expr_field              go to state 472
    expr_call               go to state 473
    expr                    go to state 1392
    expr_mtag               go to state 475
    basic_type_declaration  go to state 476
    make_decl               go to state 477
    make_struct_decl        go to state 478
    make_tuple_call         go to state 479
    make_dim_decl           go to state 480
    make_table_decl         go to state 481
    array_comprehension     go to state 482


State 1352

   63 expression_else_one_liner: "else" expression_if_one_liner .

    $default  reduce using rule 63 (expression_else_one_liner)


State 1353

   67 expression_if_one_liner: expression_break .

    $default  reduce using rule 67 (expression_if_one_liner)


State 1354

   68 expression_if_one_liner: expression_continue .

    $default  reduce using rule 68 (expression_if_one_liner)


State 1355

   65 expression_if_one_liner: expression_return .

    $default  reduce using rule 65 (expression_if_one_liner)


State 1356

   66 expression_if_one_liner: expression_yield .

    $default  reduce using rule 66 (expression_if_one_liner)


State 1357

   64 expression_if_one_liner: expr .
  342 expr_method_call: expr . "->" "name" '(' ')'
  343                 | expr . "->" "name" '(' expr_list ')'
  353 expr_field: expr . '.' "name"
  354           | expr . '.' '.' "name"
  355           | expr . '.' "name" '(' ')'
  356           | expr . '.' "name" '(' expr_list ')'
  357           | expr . '.' basic_type_declaration '(' ')'
  358           | expr . '.' basic_type_declaration '(' expr_list ')'
  361           | expr . '.' $@17 error $@18
  383 expr: expr . "<<" expr
  384     | expr . ">>" expr
  385     | expr . "<<<" expr
  386     | expr . ">>>" expr
  387     | expr . '+' expr
  388     | expr . '-' expr
  389     | expr . '*' expr
  390     | expr . '/' expr
  391     | expr . '%' expr
  392     | expr . '<' expr
  393     | expr . '>' expr
  394     | expr . "==" expr
  395     | expr . "!=" expr
  396     | expr . "<=" expr
  397     | expr . ">=" expr
  398     | expr . '&' expr
  399     | expr . '|' expr
  400     | expr . '^' expr
  401     | expr . "&&" expr
  402     | expr . "||" expr
  403     | expr . "^^" expr
  404     | expr . ".." expr
  407     | expr . "++"
  408     | expr . "--"
  410     | expr . '[' expr ']'
  411     | expr . '.' '[' expr ']'
  412     | expr . "?[" expr ']'
  413     | expr . '.' "?[" expr ']'
  414     | expr . "?." "name"
  415     | expr . '.' "?." "name"
  424     | expr . "??" expr
  425     | expr . '?' expr ':' expr
  428     | expr . "is" "type" '<' $@19 type_declaration_no_options '>' $@20
  429     | expr . "is" basic_type_declaration
  430     | expr . "is" "name"
  431     | expr . "as" "name"
  434     | expr . "as" "type" '<' $@21 type_declaration '>' $@22
  435     | expr . "as" basic_type_declaration
  436     | expr . '?' "as" "name"
  439     | expr . '?' "as" "type" '<' $@23 type_declaration '>' $@24
  440     | expr . '?' "as" basic_type_declaration
  448     | expr . "<|" expr
  449     | expr . "|>" expr
  450     | expr . "|>" basic_type_declaration
  461 expr_mtag: expr . '.' "$f" '(' expr ')'
  462          | expr . "?." "$f" '(' expr ')'
  463          | expr . '.' '.' "$f" '(' expr ')'
  464          | expr . '.' "?." "$f" '(' expr ')'
  465          | expr . "as" "$f" '(' expr ')'
  466          | expr . '?' "as" "$f" '(' expr ')'
  467          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 648
    "as"   shift, and go to state 649
    "<<"   shift, and go to state 650
    ">>"   shift, and go to state 651
    "++"   shift, and go to state 652
    "--"   shift, and go to state 653
    "<="   shift, and go to state 654
    ">="   shift, and go to state 655
    "=="   shift, and go to state 656
    "!="   shift, and go to state 657
    "->"   shift, and go to state 658
    "??"   shift, and go to state 659
    "?."   shift, and go to state 660
    "?["   shift, and go to state 661
    "<|"   shift, and go to state 662
    "|>"   shift, and go to state 663
    "<<<"  shift, and go to state 664
    ">>>"  shift, and go to state 665
    "&&"   shift, and go to state 666
    "||"   shift, and go to state 667
    "^^"   shift, and go to state 668
    ".."   shift, and go to state 669
    '?'    shift, and go to state 670
    '|'    shift, and go to state 671
    '^'    shift, and go to state 672
    '&'    shift, and go to state 673
    '<'    shift, and go to state 674
    '>'    shift, and go to state 675
    '-'    shift, and go to state 676
    '+'    shift, and go to state 677
    '*'    shift, and go to state 678
    '/'    shift, and go to state 679
    '%'    shift, and go to state 680
    '.'    shift, and go to state 681
    '['    shift, and go to state 682

    $default  reduce using rule 64 (expression_if_one_liner)


State 1358

   70 expression_if_then_else: expression_if_one_liner "if" '(' expr ')' expression_else_one_liner "end of expression" .

    $default  reduce using rule 70 (expression_if_then_else)


State 1359

  274 tuple_expansion_variable_declaration: '(' tuple_expansion ')' ':' type_declaration_no_options . copy_or_move_or_clone expr "end of expression"

    "<-"  shift, and go to state 582
    ":="  shift, and go to state 583
    '='   shift, and go to state 584

    copy_or_move_or_clone  go to state 1393


State 1360

  275 tuple_expansion_variable_declaration: '(' tuple_expansion ')' optional_ref copy_or_move_or_clone . expr "end of expression"

    "struct"                          shift, and go to state 409
    "class"                           shift, and go to state 410
    "true"                            shift, and go to state 411
    "false"                           shift, and go to state 412
    "new"                             shift, and go to state 413
    "typeinfo"                        shift, and go to state 414
    "type"                            shift, and go to state 415
    "array"                           shift, and go to state 416
    "null"                            shift, and go to state 417
    "table"                           shift, and go to state 418
    "deref"                           shift, and go to state 419
    "cast"                            shift, and go to state 420
    "upcast"                          shift, and go to state 421
    "addr"                            shift, and go to state 422
    "reinterpret"                     shift, and go to state 423
    "unsafe"                          shift, and go to state 424
    "fixed_array"                     shift, and go to state 425
    "default"                         shift, and go to state 426
    "bool"                            shift, and go to state 225
    "void"                            shift, and go to state 226
    "string"                          shift, and go to state 227
    "int"                             shift, and go to state 229
    "int2"                            shift, and go to state 230
    "int3"                            shift, and go to state 231
    "int4"                            shift, and go to state 232
    "uint"                            shift, and go to state 233
    "bitfield"                        shift, and go to state 427
    "uint2"                           shift, and go to state 235
    "uint3"                           shift, and go to state 236
    "uint4"                           shift, and go to state 237
    "float"                           shift, and go to state 238
    "float2"                          shift, and go to state 239
    "float3"                          shift, and go to state 240
    "float4"                          shift, and go to state 241
    "range"                           shift, and go to state 242
    "urange"                          shift, and go to state 243
    "range64"                         shift, and go to state 244
    "urange64"                        shift, and go to state 245
    "int64"                           shift, and go to state 247
    "uint64"                          shift, and go to state 248
    "double"                          shift, and go to state 249
    "int8"                            shift, and go to state 252
    "uint8"                           shift, and go to state 253
    "int16"                           shift, and go to state 254
    "uint16"                          shift, and go to state 255
    "tuple"                           shift, and go to state 428
    "variant"                         shift, and go to state 429
    "generator"                       shift, and go to state 430
    "++"                              shift, and go to state 431
    "--"                              shift, and go to state 432
    "::"                              shift, and go to state 55
    "$$"                              shift, and go to state 433
    "$i"                              shift, and go to state 434
    "$v"                              shift, and go to state 435
    "$b"                              shift, and go to state 436
    "$a"                              shift, and go to state 437
    "$c"                              shift, and go to state 438
    "..."                             shift, and go to state 439
    "integer constant"                shift, and go to state 440
    "long integer constant"           shift, and go to state 441
    "unsigned integer constant"       shift, and go to state 442
    "unsigned long integer constant"  shift, and go to state 443
    "unsigned int8 constant"          shift, and go to state 444
    "floating point constant"         shift, and go to state 445
    "double constant"                 shift, and go to state 446
    "name"                            shift, and go to state 56
    "start of the string"             shift, and go to state 447
    "begin of code block"             shift, and go to state 448
    '-'                               shift, and go to state 449
    '+'                               shift, and go to state 450
    '*'                               shift, and go to state 451
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 452
    '!'                               shift, and go to state 453
    '['                               shift, and go to state 454
    '('                               shift, and go to state 455
    '$'                               shift, and go to state 456
    '@'                               shift, and go to state 457

    string_builder          go to state 458
    expr_reader             go to state 459
    expr_call_pipe          go to state 460
    name_in_namespace       go to state 461
    expr_new                go to state 462
    expr_cast               go to state 463
    expr_type_decl          go to state 464
    expr_type_info          go to state 465
    block_or_lambda         go to state 466
    expr_full_block         go to state 467
    expr_numeric_const      go to state 468
    expr_named_call         go to state 469
    expr_method_call        go to state 470
    func_addr_expr          go to state 471
    expr_field              go to state 472
    expr_call               go to state 473
    expr                    go to state 1394
    expr_mtag               go to state 475
    basic_type_declaration  go to state 476
    make_decl               go to state 477
    make_struct_decl        go to state 478
    make_tuple_call         go to state 479
    make_dim_decl           go to state 480
    make_table_decl         go to state 481
    array_comprehension     go to state 482


State 1361

  486 struct_variable_declaration_list: struct_variable_declaration_list optional_annotation_list "def" optional_public_or_private_member_variable "abstract" optional_constant $@26 . function_declaration_header "end of expression"

    "operator"  shift, and go to state 174
    "bool"      shift, and go to state 175
    "string"    shift, and go to state 176
    "int"       shift, and go to state 177
    "int2"      shift, and go to state 178
    "int3"      shift, and go to state 179
    "int4"      shift, and go to state 180
    "uint"      shift, and go to state 181
    "uint2"     shift, and go to state 182
    "uint3"     shift, and go to state 183
    "uint4"     shift, and go to state 184
    "float"     shift, and go to state 185
    "float2"    shift, and go to state 186
    "float3"    shift, and go to state 187
    "float4"    shift, and go to state 188
    "range"     shift, and go to state 189
    "urange"    shift, and go to state 190
    "range64"   shift, and go to state 191
    "urange64"  shift, and go to state 192
    "int64"     shift, and go to state 193
    "uint64"    shift, and go to state 194
    "double"    shift, and go to state 195
    "int8"      shift, and go to state 196
    "uint8"     shift, and go to state 197
    "int16"     shift, and go to state 198
    "uint16"    shift, and go to state 199
    "++"        shift, and go to state 200
    "--"        shift, and go to state 201
    "name"      shift, and go to state 202

    function_name                go to state 203
    function_declaration_header  go to state 1395


State 1362

  488 struct_variable_declaration_list: struct_variable_declaration_list optional_annotation_list "def" optional_public_or_private_member_variable optional_static_member_variable optional_override optional_constant . $@27 function_declaration_header expression_block

    $default  reduce using rule 487 ($@27)

    $@27  go to state 1396


State 1363

  481 structure_variable_declaration: optional_field_annotation optional_static_member_variable optional_override optional_public_or_private_member_variable variable_declaration .

    $default  reduce using rule 481 (structure_variable_declaration)


State 1364

  746 make_struct_decl: "struct" '<' $@73 type_declaration_no_options '>' $@74 '(' use_initializer . optional_make_struct_dim_decl ')'

    "$f"    shift, and go to state 839
    "name"  shift, and go to state 1036
    '('     shift, and go to state 1397

    $default  reduce using rule 741 (optional_make_struct_dim_decl)

    make_struct_fields             go to state 1398
    make_struct_dim_list           go to state 1399
    make_struct_dim_decl           go to state 1400
    optional_make_struct_dim_decl  go to state 1401


State 1365

  749 make_struct_decl: "class" '<' $@75 type_declaration_no_options '>' $@76 '(' use_initializer . optional_make_struct_dim_decl ')'

    "$f"    shift, and go to state 839
    "name"  shift, and go to state 1036
    '('     shift, and go to state 1397

    $default  reduce using rule 741 (optional_make_struct_dim_decl)

    make_struct_fields             go to state 1398
    make_struct_dim_list           go to state 1399
    make_struct_dim_decl           go to state 1400
    optional_make_struct_dim_decl  go to state 1402


State 1366

  292 expr_type_info: "typeinfo" name_in_namespace '<' "name" '>' '(' expr ')' .

    $default  reduce using rule 292 (expr_type_info)


State 1367

  293 expr_type_info: "typeinfo" name_in_namespace '<' "name" c_or_s "name" '>' '(' . expr ')'

    "struct"                          shift, and go to state 409
    "class"                           shift, and go to state 410
    "true"                            shift, and go to state 411
    "false"                           shift, and go to state 412
    "new"                             shift, and go to state 413
    "typeinfo"                        shift, and go to state 414
    "type"                            shift, and go to state 415
    "array"                           shift, and go to state 416
    "null"                            shift, and go to state 417
    "table"                           shift, and go to state 418
    "deref"                           shift, and go to state 419
    "cast"                            shift, and go to state 420
    "upcast"                          shift, and go to state 421
    "addr"                            shift, and go to state 422
    "reinterpret"                     shift, and go to state 423
    "unsafe"                          shift, and go to state 424
    "fixed_array"                     shift, and go to state 425
    "default"                         shift, and go to state 426
    "bool"                            shift, and go to state 225
    "void"                            shift, and go to state 226
    "string"                          shift, and go to state 227
    "int"                             shift, and go to state 229
    "int2"                            shift, and go to state 230
    "int3"                            shift, and go to state 231
    "int4"                            shift, and go to state 232
    "uint"                            shift, and go to state 233
    "bitfield"                        shift, and go to state 427
    "uint2"                           shift, and go to state 235
    "uint3"                           shift, and go to state 236
    "uint4"                           shift, and go to state 237
    "float"                           shift, and go to state 238
    "float2"                          shift, and go to state 239
    "float3"                          shift, and go to state 240
    "float4"                          shift, and go to state 241
    "range"                           shift, and go to state 242
    "urange"                          shift, and go to state 243
    "range64"                         shift, and go to state 244
    "urange64"                        shift, and go to state 245
    "int64"                           shift, and go to state 247
    "uint64"                          shift, and go to state 248
    "double"                          shift, and go to state 249
    "int8"                            shift, and go to state 252
    "uint8"                           shift, and go to state 253
    "int16"                           shift, and go to state 254
    "uint16"                          shift, and go to state 255
    "tuple"                           shift, and go to state 428
    "variant"                         shift, and go to state 429
    "generator"                       shift, and go to state 430
    "++"                              shift, and go to state 431
    "--"                              shift, and go to state 432
    "::"                              shift, and go to state 55
    "$$"                              shift, and go to state 433
    "$i"                              shift, and go to state 434
    "$v"                              shift, and go to state 435
    "$b"                              shift, and go to state 436
    "$a"                              shift, and go to state 437
    "$c"                              shift, and go to state 438
    "..."                             shift, and go to state 439
    "integer constant"                shift, and go to state 440
    "long integer constant"           shift, and go to state 441
    "unsigned integer constant"       shift, and go to state 442
    "unsigned long integer constant"  shift, and go to state 443
    "unsigned int8 constant"          shift, and go to state 444
    "floating point constant"         shift, and go to state 445
    "double constant"                 shift, and go to state 446
    "name"                            shift, and go to state 56
    "start of the string"             shift, and go to state 447
    "begin of code block"             shift, and go to state 448
    '-'                               shift, and go to state 449
    '+'                               shift, and go to state 450
    '*'                               shift, and go to state 451
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 452
    '!'                               shift, and go to state 453
    '['                               shift, and go to state 454
    '('                               shift, and go to state 455
    '$'                               shift, and go to state 456
    '@'                               shift, and go to state 457

    string_builder          go to state 458
    expr_reader             go to state 459
    expr_call_pipe          go to state 460
    name_in_namespace       go to state 461
    expr_new                go to state 462
    expr_cast               go to state 463
    expr_type_decl          go to state 464
    expr_type_info          go to state 465
    block_or_lambda         go to state 466
    expr_full_block         go to state 467
    expr_numeric_const      go to state 468
    expr_named_call         go to state 469
    expr_method_call        go to state 470
    func_addr_expr          go to state 471
    expr_field              go to state 472
    expr_call               go to state 473
    expr                    go to state 1403
    expr_mtag               go to state 475
    basic_type_declaration  go to state 476
    make_decl               go to state 477
    make_struct_decl        go to state 478
    make_tuple_call         go to state 479
    make_dim_decl           go to state 480
    make_table_decl         go to state 481
    array_comprehension     go to state 482


State 1368

  765 make_dim_decl: "array" "struct" '<' $@83 type_declaration_no_options '>' $@84 '(' . use_initializer optional_make_struct_dim_decl ')'

    "uninitialized"  shift, and go to state 1319

    $default  reduce using rule 742 (use_initializer)

    use_initializer  go to state 1404


State 1369

  768 make_dim_decl: "array" "tuple" '<' $@85 type_declaration_no_options '>' $@86 '(' . use_initializer optional_make_struct_dim_decl ')'

    "uninitialized"  shift, and go to state 1319

    $default  reduce using rule 742 (use_initializer)

    use_initializer  go to state 1405


State 1370

  771 make_dim_decl: "array" "variant" '<' $@87 type_declaration_no_options '>' $@88 '(' . make_variant_dim ')'

    "$f"    shift, and go to state 839
    "name"  shift, and go to state 1036

    make_struct_fields  go to state 1375
    make_variant_dim    go to state 1406


State 1371

  775 make_dim_decl: "array" '<' $@89 type_declaration_no_options '>' $@90 '(' optional_expr_list . ')'

    ')'  shift, and go to state 1407


State 1372

  785 make_table_decl: "table" '<' type_declaration_no_options c_or_s type_declaration_no_options '>' '(' optional_expr_map_tuple_list . ')'

    ')'  shift, and go to state 1408


State 1373

  295 expr_list: expr_list . ',' expr
  779 make_dim_decl: "fixed_array" '<' $@91 type_declaration_no_options '>' $@92 '(' expr_list . optional_comma ')'

    ','  shift, and go to state 830

    $default  reduce using rule 788 (optional_comma)

    optional_comma  go to state 1409


State 1374

  761 make_tuple_call: "tuple" '<' $@81 type_declaration_no_options '>' $@82 '(' use_initializer . optional_make_struct_dim_decl ')'

    "$f"    shift, and go to state 839
    "name"  shift, and go to state 1036
    '('     shift, and go to state 1397

    $default  reduce using rule 741 (optional_make_struct_dim_decl)

    make_struct_fields             go to state 1398
    make_struct_dim_list           go to state 1399
    make_struct_dim_decl           go to state 1400
    optional_make_struct_dim_decl  go to state 1410


State 1375

  728 make_struct_fields: make_struct_fields . ',' "name" copy_or_move expr
  729                   | make_struct_fields . ',' "name" ":=" expr
  732                   | make_struct_fields . ',' "$f" '(' expr ')' copy_or_move expr
  733                   | make_struct_fields . ',' "$f" '(' expr ')' ":=" expr
  734 make_variant_dim: make_struct_fields .

    ','  shift, and go to state 1045

    $default  reduce using rule 734 (make_variant_dim)


State 1376

  752 make_struct_decl: "variant" '<' $@77 type_declaration_no_options '>' $@78 '(' make_variant_dim . ')'

    ')'  shift, and go to state 1411


State 1377

  422 expr: "generator" '<' type_declaration_no_options '>' optional_capture_list '(' expr ')' .

    $default  reduce using rule 422 (expr)


State 1378

  792 array_comprehension: "begin of code block" "for" '(' variable_name_with_pos_list "in" expr_list ')' "end of expression" . make_map_tuple array_comprehension_where "end of code block"

    "struct"                          shift, and go to state 409
    "class"                           shift, and go to state 410
    "true"                            shift, and go to state 411
    "false"                           shift, and go to state 412
    "new"                             shift, and go to state 413
    "typeinfo"                        shift, and go to state 414
    "type"                            shift, and go to state 415
    "array"                           shift, and go to state 416
    "null"                            shift, and go to state 417
    "table"                           shift, and go to state 418
    "deref"                           shift, and go to state 419
    "cast"                            shift, and go to state 420
    "upcast"                          shift, and go to state 421
    "addr"                            shift, and go to state 422
    "reinterpret"                     shift, and go to state 423
    "unsafe"                          shift, and go to state 424
    "fixed_array"                     shift, and go to state 425
    "default"                         shift, and go to state 426
    "bool"                            shift, and go to state 225
    "void"                            shift, and go to state 226
    "string"                          shift, and go to state 227
    "int"                             shift, and go to state 229
    "int2"                            shift, and go to state 230
    "int3"                            shift, and go to state 231
    "int4"                            shift, and go to state 232
    "uint"                            shift, and go to state 233
    "bitfield"                        shift, and go to state 427
    "uint2"                           shift, and go to state 235
    "uint3"                           shift, and go to state 236
    "uint4"                           shift, and go to state 237
    "float"                           shift, and go to state 238
    "float2"                          shift, and go to state 239
    "float3"                          shift, and go to state 240
    "float4"                          shift, and go to state 241
    "range"                           shift, and go to state 242
    "urange"                          shift, and go to state 243
    "range64"                         shift, and go to state 244
    "urange64"                        shift, and go to state 245
    "int64"                           shift, and go to state 247
    "uint64"                          shift, and go to state 248
    "double"                          shift, and go to state 249
    "int8"                            shift, and go to state 252
    "uint8"                           shift, and go to state 253
    "int16"                           shift, and go to state 254
    "uint16"                          shift, and go to state 255
    "tuple"                           shift, and go to state 428
    "variant"                         shift, and go to state 429
    "generator"                       shift, and go to state 430
    "++"                              shift, and go to state 431
    "--"                              shift, and go to state 432
    "::"                              shift, and go to state 55
    "$$"                              shift, and go to state 433
    "$i"                              shift, and go to state 434
    "$v"                              shift, and go to state 435
    "$b"                              shift, and go to state 436
    "$a"                              shift, and go to state 437
    "$c"                              shift, and go to state 438
    "..."                             shift, and go to state 439
    "integer constant"                shift, and go to state 440
    "long integer constant"           shift, and go to state 441
    "unsigned integer constant"       shift, and go to state 442
    "unsigned long integer constant"  shift, and go to state 443
    "unsigned int8 constant"          shift, and go to state 444
    "floating point constant"         shift, and go to state 445
    "double constant"                 shift, and go to state 446
    "name"                            shift, and go to state 56
    "start of the string"             shift, and go to state 447
    "begin of code block"             shift, and go to state 448
    '-'                               shift, and go to state 449
    '+'                               shift, and go to state 450
    '*'                               shift, and go to state 451
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 452
    '!'                               shift, and go to state 453
    '['                               shift, and go to state 454
    '('                               shift, and go to state 455
    '$'                               shift, and go to state 456
    '@'                               shift, and go to state 457

    string_builder          go to state 458
    expr_reader             go to state 459
    expr_call_pipe          go to state 460
    name_in_namespace       go to state 461
    expr_new                go to state 462
    expr_cast               go to state 463
    expr_type_decl          go to state 464
    expr_type_info          go to state 465
    block_or_lambda         go to state 466
    expr_full_block         go to state 467
    expr_numeric_const      go to state 468
    expr_named_call         go to state 469
    expr_method_call        go to state 470
    func_addr_expr          go to state 471
    expr_field              go to state 472
    expr_call               go to state 473
    expr                    go to state 628
    expr_mtag               go to state 475
    basic_type_declaration  go to state 476
    make_decl               go to state 477
    make_struct_decl        go to state 478
    make_map_tuple          go to state 1412
    make_tuple_call         go to state 479
    make_dim_decl           go to state 480
    make_table_decl         go to state 481
    array_comprehension     go to state 482


State 1379

  790 array_comprehension: '[' "for" '(' variable_name_with_pos_list "in" expr_list ')' "end of expression" . expr array_comprehension_where ']'

    "struct"                          shift, and go to state 409
    "class"                           shift, and go to state 410
    "true"                            shift, and go to state 411
    "false"                           shift, and go to state 412
    "new"                             shift, and go to state 413
    "typeinfo"                        shift, and go to state 414
    "type"                            shift, and go to state 415
    "array"                           shift, and go to state 416
    "null"                            shift, and go to state 417
    "table"                           shift, and go to state 418
    "deref"                           shift, and go to state 419
    "cast"                            shift, and go to state 420
    "upcast"                          shift, and go to state 421
    "addr"                            shift, and go to state 422
    "reinterpret"                     shift, and go to state 423
    "unsafe"                          shift, and go to state 424
    "fixed_array"                     shift, and go to state 425
    "default"                         shift, and go to state 426
    "bool"                            shift, and go to state 225
    "void"                            shift, and go to state 226
    "string"                          shift, and go to state 227
    "int"                             shift, and go to state 229
    "int2"                            shift, and go to state 230
    "int3"                            shift, and go to state 231
    "int4"                            shift, and go to state 232
    "uint"                            shift, and go to state 233
    "bitfield"                        shift, and go to state 427
    "uint2"                           shift, and go to state 235
    "uint3"                           shift, and go to state 236
    "uint4"                           shift, and go to state 237
    "float"                           shift, and go to state 238
    "float2"                          shift, and go to state 239
    "float3"                          shift, and go to state 240
    "float4"                          shift, and go to state 241
    "range"                           shift, and go to state 242
    "urange"                          shift, and go to state 243
    "range64"                         shift, and go to state 244
    "urange64"                        shift, and go to state 245
    "int64"                           shift, and go to state 247
    "uint64"                          shift, and go to state 248
    "double"                          shift, and go to state 249
    "int8"                            shift, and go to state 252
    "uint8"                           shift, and go to state 253
    "int16"                           shift, and go to state 254
    "uint16"                          shift, and go to state 255
    "tuple"                           shift, and go to state 428
    "variant"                         shift, and go to state 429
    "generator"                       shift, and go to state 430
    "++"                              shift, and go to state 431
    "--"                              shift, and go to state 432
    "::"                              shift, and go to state 55
    "$$"                              shift, and go to state 433
    "$i"                              shift, and go to state 434
    "$v"                              shift, and go to state 435
    "$b"                              shift, and go to state 436
    "$a"                              shift, and go to state 437
    "$c"                              shift, and go to state 438
    "..."                             shift, and go to state 439
    "integer constant"                shift, and go to state 440
    "long integer constant"           shift, and go to state 441
    "unsigned integer constant"       shift, and go to state 442
    "unsigned long integer constant"  shift, and go to state 443
    "unsigned int8 constant"          shift, and go to state 444
    "floating point constant"         shift, and go to state 445
    "double constant"                 shift, and go to state 446
    "name"                            shift, and go to state 56
    "start of the string"             shift, and go to state 447
    "begin of code block"             shift, and go to state 448
    '-'                               shift, and go to state 449
    '+'                               shift, and go to state 450
    '*'                               shift, and go to state 451
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 452
    '!'                               shift, and go to state 453
    '['                               shift, and go to state 454
    '('                               shift, and go to state 455
    '$'                               shift, and go to state 456
    '@'                               shift, and go to state 457

    string_builder          go to state 458
    expr_reader             go to state 459
    expr_call_pipe          go to state 460
    name_in_namespace       go to state 461
    expr_new                go to state 462
    expr_cast               go to state 463
    expr_type_decl          go to state 464
    expr_type_info          go to state 465
    block_or_lambda         go to state 466
    expr_full_block         go to state 467
    expr_numeric_const      go to state 468
    expr_named_call         go to state 469
    expr_method_call        go to state 470
    func_addr_expr          go to state 471
    expr_field              go to state 472
    expr_call               go to state 473
    expr                    go to state 1413
    expr_mtag               go to state 475
    basic_type_declaration  go to state 476
    make_decl               go to state 477
    make_struct_decl        go to state 478
    make_tuple_call         go to state 479
    make_dim_decl           go to state 480
    make_table_decl         go to state 481
    array_comprehension     go to state 482


State 1380

  791 array_comprehension: '[' "iterator" "for" '(' variable_name_with_pos_list "in" expr_list ')' . "end of expression" expr array_comprehension_where ']'

    "end of expression"  shift, and go to state 1414


State 1381

  349 func_addr_expr: '@' '@' '<' $@13 type_declaration_no_options '>' $@14 func_addr_name .

    $default  reduce using rule 349 (func_addr_expr)


State 1382

  352 func_addr_expr: '@' '@' '<' $@15 optional_function_argument_list optional_function_type '>' $@16 . func_addr_name

    "::"    shift, and go to state 55
    "$i"    shift, and go to state 833
    "name"  shift, and go to state 56

    name_in_namespace  go to state 836
    func_addr_name     go to state 1415


State 1383

  342 expr_method_call: expr . "->" "name" '(' ')'
  343                 | expr . "->" "name" '(' expr_list ')'
  353 expr_field: expr . '.' "name"
  354           | expr . '.' '.' "name"
  355           | expr . '.' "name" '(' ')'
  356           | expr . '.' "name" '(' expr_list ')'
  357           | expr . '.' basic_type_declaration '(' ')'
  358           | expr . '.' basic_type_declaration '(' expr_list ')'
  361           | expr . '.' $@17 error $@18
  383 expr: expr . "<<" expr
  384     | expr . ">>" expr
  385     | expr . "<<<" expr
  386     | expr . ">>>" expr
  387     | expr . '+' expr
  388     | expr . '-' expr
  389     | expr . '*' expr
  390     | expr . '/' expr
  391     | expr . '%' expr
  392     | expr . '<' expr
  393     | expr . '>' expr
  394     | expr . "==" expr
  395     | expr . "!=" expr
  396     | expr . "<=" expr
  397     | expr . ">=" expr
  398     | expr . '&' expr
  399     | expr . '|' expr
  400     | expr . '^' expr
  401     | expr . "&&" expr
  402     | expr . "||" expr
  403     | expr . "^^" expr
  404     | expr . ".." expr
  407     | expr . "++"
  408     | expr . "--"
  410     | expr . '[' expr ']'
  411     | expr . '.' '[' expr ']'
  412     | expr . "?[" expr ']'
  413     | expr . '.' "?[" expr ']'
  414     | expr . "?." "name"
  415     | expr . '.' "?." "name"
  424     | expr . "??" expr
  425     | expr . '?' expr ':' expr
  428     | expr . "is" "type" '<' $@19 type_declaration_no_options '>' $@20
  429     | expr . "is" basic_type_declaration
  430     | expr . "is" "name"
  431     | expr . "as" "name"
  434     | expr . "as" "type" '<' $@21 type_declaration '>' $@22
  435     | expr . "as" basic_type_declaration
  436     | expr . '?' "as" "name"
  439     | expr . '?' "as" "type" '<' $@23 type_declaration '>' $@24
  440     | expr . '?' "as" basic_type_declaration
  448     | expr . "<|" expr
  449     | expr . "|>" expr
  450     | expr . "|>" basic_type_declaration
  461 expr_mtag: expr . '.' "$f" '(' expr ')'
  462          | expr . "?." "$f" '(' expr ')'
  463          | expr . '.' '.' "$f" '(' expr ')'
  464          | expr . '.' "?." "$f" '(' expr ')'
  465          | expr . "as" "$f" '(' expr ')'
  466          | expr . '?' "as" "$f" '(' expr ')'
  467          | expr . "is" "$f" '(' expr ')'
  731 make_struct_fields: "$f" '(' expr ')' ":=" expr .

    "is"   shift, and go to state 648
    "as"   shift, and go to state 649
    "<<"   shift, and go to state 650
    ">>"   shift, and go to state 651
    "++"   shift, and go to state 652
    "--"   shift, and go to state 653
    "<="   shift, and go to state 654
    ">="   shift, and go to state 655
    "=="   shift, and go to state 656
    "!="   shift, and go to state 657
    "->"   shift, and go to state 658
    "??"   shift, and go to state 659
    "?."   shift, and go to state 660
    "?["   shift, and go to state 661
    "<|"   shift, and go to state 662
    "|>"   shift, and go to state 663
    "<<<"  shift, and go to state 664
    ">>>"  shift, and go to state 665
    "&&"   shift, and go to state 666
    "||"   shift, and go to state 667
    "^^"   shift, and go to state 668
    ".."   shift, and go to state 669
    '?'    shift, and go to state 670
    '|'    shift, and go to state 671
    '^'    shift, and go to state 672
    '&'    shift, and go to state 673
    '<'    shift, and go to state 674
    '>'    shift, and go to state 675
    '-'    shift, and go to state 676
    '+'    shift, and go to state 677
    '*'    shift, and go to state 678
    '/'    shift, and go to state 679
    '%'    shift, and go to state 680
    '.'    shift, and go to state 681
    '['    shift, and go to state 682

    $default  reduce using rule 731 (make_struct_fields)


State 1384

  342 expr_method_call: expr . "->" "name" '(' ')'
  343                 | expr . "->" "name" '(' expr_list ')'
  353 expr_field: expr . '.' "name"
  354           | expr . '.' '.' "name"
  355           | expr . '.' "name" '(' ')'
  356           | expr . '.' "name" '(' expr_list ')'
  357           | expr . '.' basic_type_declaration '(' ')'
  358           | expr . '.' basic_type_declaration '(' expr_list ')'
  361           | expr . '.' $@17 error $@18
  383 expr: expr . "<<" expr
  384     | expr . ">>" expr
  385     | expr . "<<<" expr
  386     | expr . ">>>" expr
  387     | expr . '+' expr
  388     | expr . '-' expr
  389     | expr . '*' expr
  390     | expr . '/' expr
  391     | expr . '%' expr
  392     | expr . '<' expr
  393     | expr . '>' expr
  394     | expr . "==" expr
  395     | expr . "!=" expr
  396     | expr . "<=" expr
  397     | expr . ">=" expr
  398     | expr . '&' expr
  399     | expr . '|' expr
  400     | expr . '^' expr
  401     | expr . "&&" expr
  402     | expr . "||" expr
  403     | expr . "^^" expr
  404     | expr . ".." expr
  407     | expr . "++"
  408     | expr . "--"
  410     | expr . '[' expr ']'
  411     | expr . '.' '[' expr ']'
  412     | expr . "?[" expr ']'
  413     | expr . '.' "?[" expr ']'
  414     | expr . "?." "name"
  415     | expr . '.' "?." "name"
  424     | expr . "??" expr
  425     | expr . '?' expr ':' expr
  428     | expr . "is" "type" '<' $@19 type_declaration_no_options '>' $@20
  429     | expr . "is" basic_type_declaration
  430     | expr . "is" "name"
  431     | expr . "as" "name"
  434     | expr . "as" "type" '<' $@21 type_declaration '>' $@22
  435     | expr . "as" basic_type_declaration
  436     | expr . '?' "as" "name"
  439     | expr . '?' "as" "type" '<' $@23 type_declaration '>' $@24
  440     | expr . '?' "as" basic_type_declaration
  448     | expr . "<|" expr
  449     | expr . "|>" expr
  450     | expr . "|>" basic_type_declaration
  461 expr_mtag: expr . '.' "$f" '(' expr ')'
  462          | expr . "?." "$f" '(' expr ')'
  463          | expr . '.' '.' "$f" '(' expr ')'
  464          | expr . '.' "?." "$f" '(' expr ')'
  465          | expr . "as" "$f" '(' expr ')'
  466          | expr . '?' "as" "$f" '(' expr ')'
  467          | expr . "is" "$f" '(' expr ')'
  730 make_struct_fields: "$f" '(' expr ')' copy_or_move expr .

    "is"   shift, and go to state 648
    "as"   shift, and go to state 649
    "<<"   shift, and go to state 650
    ">>"   shift, and go to state 651
    "++"   shift, and go to state 652
    "--"   shift, and go to state 653
    "<="   shift, and go to state 654
    ">="   shift, and go to state 655
    "=="   shift, and go to state 656
    "!="   shift, and go to state 657
    "->"   shift, and go to state 658
    "??"   shift, and go to state 659
    "?."   shift, and go to state 660
    "?["   shift, and go to state 661
    "<|"   shift, and go to state 662
    "|>"   shift, and go to state 663
    "<<<"  shift, and go to state 664
    ">>>"  shift, and go to state 665
    "&&"   shift, and go to state 666
    "||"   shift, and go to state 667
    "^^"   shift, and go to state 668
    ".."   shift, and go to state 669
    '?'    shift, and go to state 670
    '|'    shift, and go to state 671
    '^'    shift, and go to state 672
    '&'    shift, and go to state 673
    '<'    shift, and go to state 674
    '>'    shift, and go to state 675
    '-'    shift, and go to state 676
    '+'    shift, and go to state 677
    '*'    shift, and go to state 678
    '/'    shift, and go to state 679
    '%'    shift, and go to state 680
    '.'    shift, and go to state 681
    '['    shift, and go to state 682

    $default  reduce using rule 730 (make_struct_fields)


State 1385

  341 expr_named_call: name_in_namespace '(' expr_list ',' '[' make_struct_fields ']' ')' .

    $default  reduce using rule 341 (expr_named_call)


State 1386

  732 make_struct_fields: make_struct_fields ',' "$f" '(' expr ')' . copy_or_move expr
  733                   | make_struct_fields ',' "$f" '(' expr ')' . ":=" expr

    "<-"  shift, and go to state 927
    ":="  shift, and go to state 1416
    '='   shift, and go to state 929

    copy_or_move  go to state 1417


State 1387

  306 capture_entry: "name" '(' "name" ')' .

    $default  reduce using rule 306 (capture_entry)


State 1388

  298 block_or_simple_block: "=>" "<-" expr .
  342 expr_method_call: expr . "->" "name" '(' ')'
  343                 | expr . "->" "name" '(' expr_list ')'
  353 expr_field: expr . '.' "name"
  354           | expr . '.' '.' "name"
  355           | expr . '.' "name" '(' ')'
  356           | expr . '.' "name" '(' expr_list ')'
  357           | expr . '.' basic_type_declaration '(' ')'
  358           | expr . '.' basic_type_declaration '(' expr_list ')'
  361           | expr . '.' $@17 error $@18
  383 expr: expr . "<<" expr
  384     | expr . ">>" expr
  385     | expr . "<<<" expr
  386     | expr . ">>>" expr
  387     | expr . '+' expr
  388     | expr . '-' expr
  389     | expr . '*' expr
  390     | expr . '/' expr
  391     | expr . '%' expr
  392     | expr . '<' expr
  393     | expr . '>' expr
  394     | expr . "==" expr
  395     | expr . "!=" expr
  396     | expr . "<=" expr
  397     | expr . ">=" expr
  398     | expr . '&' expr
  399     | expr . '|' expr
  400     | expr . '^' expr
  401     | expr . "&&" expr
  402     | expr . "||" expr
  403     | expr . "^^" expr
  404     | expr . ".." expr
  407     | expr . "++"
  408     | expr . "--"
  410     | expr . '[' expr ']'
  411     | expr . '.' '[' expr ']'
  412     | expr . "?[" expr ']'
  413     | expr . '.' "?[" expr ']'
  414     | expr . "?." "name"
  415     | expr . '.' "?." "name"
  424     | expr . "??" expr
  425     | expr . '?' expr ':' expr
  428     | expr . "is" "type" '<' $@19 type_declaration_no_options '>' $@20
  429     | expr . "is" basic_type_declaration
  430     | expr . "is" "name"
  431     | expr . "as" "name"
  434     | expr . "as" "type" '<' $@21 type_declaration '>' $@22
  435     | expr . "as" basic_type_declaration
  436     | expr . '?' "as" "name"
  439     | expr . '?' "as" "type" '<' $@23 type_declaration '>' $@24
  440     | expr . '?' "as" basic_type_declaration
  448     | expr . "<|" expr
  449     | expr . "|>" expr
  450     | expr . "|>" basic_type_declaration
  461 expr_mtag: expr . '.' "$f" '(' expr ')'
  462          | expr . "?." "$f" '(' expr ')'
  463          | expr . '.' '.' "$f" '(' expr ')'
  464          | expr . '.' "?." "$f" '(' expr ')'
  465          | expr . "as" "$f" '(' expr ')'
  466          | expr . '?' "as" "$f" '(' expr ')'
  467          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 648
    "as"   shift, and go to state 649
    "<<"   shift, and go to state 650
    ">>"   shift, and go to state 651
    "++"   shift, and go to state 652
    "--"   shift, and go to state 653
    "<="   shift, and go to state 654
    ">="   shift, and go to state 655
    "=="   shift, and go to state 656
    "!="   shift, and go to state 657
    "->"   shift, and go to state 658
    "??"   shift, and go to state 659
    "?."   shift, and go to state 660
    "?["   shift, and go to state 661
    "<|"   shift, and go to state 662
    "|>"   shift, and go to state 663
    "<<<"  shift, and go to state 664
    ">>>"  shift, and go to state 665
    "&&"   shift, and go to state 666
    "||"   shift, and go to state 667
    "^^"   shift, and go to state 668
    '?'    shift, and go to state 670
    '|'    shift, and go to state 671
    '^'    shift, and go to state 672
    '&'    shift, and go to state 673
    '<'    shift, and go to state 674
    '>'    shift, and go to state 675
    '-'    shift, and go to state 676
    '+'    shift, and go to state 677
    '*'    shift, and go to state 678
    '/'    shift, and go to state 679
    '%'    shift, and go to state 680
    '.'    shift, and go to state 681
    '['    shift, and go to state 682

    $default  reduce using rule 298 (block_or_simple_block)


State 1389

  428 expr: expr "is" "type" '<' $@19 type_declaration_no_options '>' $@20 .

    $default  reduce using rule 428 (expr)


State 1390

  434 expr: expr "as" "type" '<' $@21 type_declaration '>' $@22 .

    $default  reduce using rule 434 (expr)


State 1391

  439 expr: expr '?' "as" "type" '<' $@23 type_declaration '>' . $@24

    $default  reduce using rule 438 ($@24)

    $@24  go to state 1418


State 1392

   59 expression_else: elif_or_static_elif '(' expr . ')' expression_block expression_else
  342 expr_method_call: expr . "->" "name" '(' ')'
  343                 | expr . "->" "name" '(' expr_list ')'
  353 expr_field: expr . '.' "name"
  354           | expr . '.' '.' "name"
  355           | expr . '.' "name" '(' ')'
  356           | expr . '.' "name" '(' expr_list ')'
  357           | expr . '.' basic_type_declaration '(' ')'
  358           | expr . '.' basic_type_declaration '(' expr_list ')'
  361           | expr . '.' $@17 error $@18
  383 expr: expr . "<<" expr
  384     | expr . ">>" expr
  385     | expr . "<<<" expr
  386     | expr . ">>>" expr
  387     | expr . '+' expr
  388     | expr . '-' expr
  389     | expr . '*' expr
  390     | expr . '/' expr
  391     | expr . '%' expr
  392     | expr . '<' expr
  393     | expr . '>' expr
  394     | expr . "==" expr
  395     | expr . "!=" expr
  396     | expr . "<=" expr
  397     | expr . ">=" expr
  398     | expr . '&' expr
  399     | expr . '|' expr
  400     | expr . '^' expr
  401     | expr . "&&" expr
  402     | expr . "||" expr
  403     | expr . "^^" expr
  404     | expr . ".." expr
  407     | expr . "++"
  408     | expr . "--"
  410     | expr . '[' expr ']'
  411     | expr . '.' '[' expr ']'
  412     | expr . "?[" expr ']'
  413     | expr . '.' "?[" expr ']'
  414     | expr . "?." "name"
  415     | expr . '.' "?." "name"
  424     | expr . "??" expr
  425     | expr . '?' expr ':' expr
  428     | expr . "is" "type" '<' $@19 type_declaration_no_options '>' $@20
  429     | expr . "is" basic_type_declaration
  430     | expr . "is" "name"
  431     | expr . "as" "name"
  434     | expr . "as" "type" '<' $@21 type_declaration '>' $@22
  435     | expr . "as" basic_type_declaration
  436     | expr . '?' "as" "name"
  439     | expr . '?' "as" "type" '<' $@23 type_declaration '>' $@24
  440     | expr . '?' "as" basic_type_declaration
  448     | expr . "<|" expr
  449     | expr . "|>" expr
  450     | expr . "|>" basic_type_declaration
  461 expr_mtag: expr . '.' "$f" '(' expr ')'
  462          | expr . "?." "$f" '(' expr ')'
  463          | expr . '.' '.' "$f" '(' expr ')'
  464          | expr . '.' "?." "$f" '(' expr ')'
  465          | expr . "as" "$f" '(' expr ')'
  466          | expr . '?' "as" "$f" '(' expr ')'
  467          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 648
    "as"   shift, and go to state 649
    "<<"   shift, and go to state 650
    ">>"   shift, and go to state 651
    "++"   shift, and go to state 652
    "--"   shift, and go to state 653
    "<="   shift, and go to state 654
    ">="   shift, and go to state 655
    "=="   shift, and go to state 656
    "!="   shift, and go to state 657
    "->"   shift, and go to state 658
    "??"   shift, and go to state 659
    "?."   shift, and go to state 660
    "?["   shift, and go to state 661
    "<|"   shift, and go to state 662
    "|>"   shift, and go to state 663
    "<<<"  shift, and go to state 664
    ">>>"  shift, and go to state 665
    "&&"   shift, and go to state 666
    "||"   shift, and go to state 667
    "^^"   shift, and go to state 668
    ".."   shift, and go to state 669
    '?'    shift, and go to state 670
    '|'    shift, and go to state 671
    '^'    shift, and go to state 672
    '&'    shift, and go to state 673
    '<'    shift, and go to state 674
    '>'    shift, and go to state 675
    '-'    shift, and go to state 676
    '+'    shift, and go to state 677
    '*'    shift, and go to state 678
    '/'    shift, and go to state 679
    '%'    shift, and go to state 680
    '.'    shift, and go to state 681
    '['    shift, and go to state 682
    ')'    shift, and go to state 1419


State 1393

  274 tuple_expansion_variable_declaration: '(' tuple_expansion ')' ':' type_declaration_no_options copy_or_move_or_clone . expr "end of expression"

    "struct"                          shift, and go to state 409
    "class"                           shift, and go to state 410
    "true"                            shift, and go to state 411
    "false"                           shift, and go to state 412
    "new"                             shift, and go to state 413
    "typeinfo"                        shift, and go to state 414
    "type"                            shift, and go to state 415
    "array"                           shift, and go to state 416
    "null"                            shift, and go to state 417
    "table"                           shift, and go to state 418
    "deref"                           shift, and go to state 419
    "cast"                            shift, and go to state 420
    "upcast"                          shift, and go to state 421
    "addr"                            shift, and go to state 422
    "reinterpret"                     shift, and go to state 423
    "unsafe"                          shift, and go to state 424
    "fixed_array"                     shift, and go to state 425
    "default"                         shift, and go to state 426
    "bool"                            shift, and go to state 225
    "void"                            shift, and go to state 226
    "string"                          shift, and go to state 227
    "int"                             shift, and go to state 229
    "int2"                            shift, and go to state 230
    "int3"                            shift, and go to state 231
    "int4"                            shift, and go to state 232
    "uint"                            shift, and go to state 233
    "bitfield"                        shift, and go to state 427
    "uint2"                           shift, and go to state 235
    "uint3"                           shift, and go to state 236
    "uint4"                           shift, and go to state 237
    "float"                           shift, and go to state 238
    "float2"                          shift, and go to state 239
    "float3"                          shift, and go to state 240
    "float4"                          shift, and go to state 241
    "range"                           shift, and go to state 242
    "urange"                          shift, and go to state 243
    "range64"                         shift, and go to state 244
    "urange64"                        shift, and go to state 245
    "int64"                           shift, and go to state 247
    "uint64"                          shift, and go to state 248
    "double"                          shift, and go to state 249
    "int8"                            shift, and go to state 252
    "uint8"                           shift, and go to state 253
    "int16"                           shift, and go to state 254
    "uint16"                          shift, and go to state 255
    "tuple"                           shift, and go to state 428
    "variant"                         shift, and go to state 429
    "generator"                       shift, and go to state 430
    "++"                              shift, and go to state 431
    "--"                              shift, and go to state 432
    "::"                              shift, and go to state 55
    "$$"                              shift, and go to state 433
    "$i"                              shift, and go to state 434
    "$v"                              shift, and go to state 435
    "$b"                              shift, and go to state 436
    "$a"                              shift, and go to state 437
    "$c"                              shift, and go to state 438
    "..."                             shift, and go to state 439
    "integer constant"                shift, and go to state 440
    "long integer constant"           shift, and go to state 441
    "unsigned integer constant"       shift, and go to state 442
    "unsigned long integer constant"  shift, and go to state 443
    "unsigned int8 constant"          shift, and go to state 444
    "floating point constant"         shift, and go to state 445
    "double constant"                 shift, and go to state 446
    "name"                            shift, and go to state 56
    "start of the string"             shift, and go to state 447
    "begin of code block"             shift, and go to state 448
    '-'                               shift, and go to state 449
    '+'                               shift, and go to state 450
    '*'                               shift, and go to state 451
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 452
    '!'                               shift, and go to state 453
    '['                               shift, and go to state 454
    '('                               shift, and go to state 455
    '$'                               shift, and go to state 456
    '@'                               shift, and go to state 457

    string_builder          go to state 458
    expr_reader             go to state 459
    expr_call_pipe          go to state 460
    name_in_namespace       go to state 461
    expr_new                go to state 462
    expr_cast               go to state 463
    expr_type_decl          go to state 464
    expr_type_info          go to state 465
    block_or_lambda         go to state 466
    expr_full_block         go to state 467
    expr_numeric_const      go to state 468
    expr_named_call         go to state 469
    expr_method_call        go to state 470
    func_addr_expr          go to state 471
    expr_field              go to state 472
    expr_call               go to state 473
    expr                    go to state 1420
    expr_mtag               go to state 475
    basic_type_declaration  go to state 476
    make_decl               go to state 477
    make_struct_decl        go to state 478
    make_tuple_call         go to state 479
    make_dim_decl           go to state 480
    make_table_decl         go to state 481
    array_comprehension     go to state 482


State 1394

  275 tuple_expansion_variable_declaration: '(' tuple_expansion ')' optional_ref copy_or_move_or_clone expr . "end of expression"
  342 expr_method_call: expr . "->" "name" '(' ')'
  343                 | expr . "->" "name" '(' expr_list ')'
  353 expr_field: expr . '.' "name"
  354           | expr . '.' '.' "name"
  355           | expr . '.' "name" '(' ')'
  356           | expr . '.' "name" '(' expr_list ')'
  357           | expr . '.' basic_type_declaration '(' ')'
  358           | expr . '.' basic_type_declaration '(' expr_list ')'
  361           | expr . '.' $@17 error $@18
  383 expr: expr . "<<" expr
  384     | expr . ">>" expr
  385     | expr . "<<<" expr
  386     | expr . ">>>" expr
  387     | expr . '+' expr
  388     | expr . '-' expr
  389     | expr . '*' expr
  390     | expr . '/' expr
  391     | expr . '%' expr
  392     | expr . '<' expr
  393     | expr . '>' expr
  394     | expr . "==" expr
  395     | expr . "!=" expr
  396     | expr . "<=" expr
  397     | expr . ">=" expr
  398     | expr . '&' expr
  399     | expr . '|' expr
  400     | expr . '^' expr
  401     | expr . "&&" expr
  402     | expr . "||" expr
  403     | expr . "^^" expr
  404     | expr . ".." expr
  407     | expr . "++"
  408     | expr . "--"
  410     | expr . '[' expr ']'
  411     | expr . '.' '[' expr ']'
  412     | expr . "?[" expr ']'
  413     | expr . '.' "?[" expr ']'
  414     | expr . "?." "name"
  415     | expr . '.' "?." "name"
  424     | expr . "??" expr
  425     | expr . '?' expr ':' expr
  428     | expr . "is" "type" '<' $@19 type_declaration_no_options '>' $@20
  429     | expr . "is" basic_type_declaration
  430     | expr . "is" "name"
  431     | expr . "as" "name"
  434     | expr . "as" "type" '<' $@21 type_declaration '>' $@22
  435     | expr . "as" basic_type_declaration
  436     | expr . '?' "as" "name"
  439     | expr . '?' "as" "type" '<' $@23 type_declaration '>' $@24
  440     | expr . '?' "as" basic_type_declaration
  448     | expr . "<|" expr
  449     | expr . "|>" expr
  450     | expr . "|>" basic_type_declaration
  461 expr_mtag: expr . '.' "$f" '(' expr ')'
  462          | expr . "?." "$f" '(' expr ')'
  463          | expr . '.' '.' "$f" '(' expr ')'
  464          | expr . '.' "?." "$f" '(' expr ')'
  465          | expr . "as" "$f" '(' expr ')'
  466          | expr . '?' "as" "$f" '(' expr ')'
  467          | expr . "is" "$f" '(' expr ')'

    "is"                 shift, and go to state 648
    "as"                 shift, and go to state 649
    "<<"                 shift, and go to state 650
    ">>"                 shift, and go to state 651
    "++"                 shift, and go to state 652
    "--"                 shift, and go to state 653
    "<="                 shift, and go to state 654
    ">="                 shift, and go to state 655
    "=="                 shift, and go to state 656
    "!="                 shift, and go to state 657
    "->"                 shift, and go to state 658
    "??"                 shift, and go to state 659
    "?."                 shift, and go to state 660
    "?["                 shift, and go to state 661
    "<|"                 shift, and go to state 662
    "|>"                 shift, and go to state 663
    "<<<"                shift, and go to state 664
    ">>>"                shift, and go to state 665
    "&&"                 shift, and go to state 666
    "||"                 shift, and go to state 667
    "^^"                 shift, and go to state 668
    ".."                 shift, and go to state 669
    "end of expression"  shift, and go to state 1421
    '?'                  shift, and go to state 670
    '|'                  shift, and go to state 671
    '^'                  shift, and go to state 672
    '&'                  shift, and go to state 673
    '<'                  shift, and go to state 674
    '>'                  shift, and go to state 675
    '-'                  shift, and go to state 676
    '+'                  shift, and go to state 677
    '*'                  shift, and go to state 678
    '/'                  shift, and go to state 679
    '%'                  shift, and go to state 680
    '.'                  shift, and go to state 681
    '['                  shift, and go to state 682


State 1395

  486 struct_variable_declaration_list: struct_variable_declaration_list optional_annotation_list "def" optional_public_or_private_member_variable "abstract" optional_constant $@26 function_declaration_header . "end of expression"

    "end of expression"  shift, and go to state 1422


State 1396

  488 struct_variable_declaration_list: struct_variable_declaration_list optional_annotation_list "def" optional_public_or_private_member_variable optional_static_member_variable optional_override optional_constant $@27 . function_declaration_header expression_block

    "operator"  shift, and go to state 174
    "bool"      shift, and go to state 175
    "string"    shift, and go to state 176
    "int"       shift, and go to state 177
    "int2"      shift, and go to state 178
    "int3"      shift, and go to state 179
    "int4"      shift, and go to state 180
    "uint"      shift, and go to state 181
    "uint2"     shift, and go to state 182
    "uint3"     shift, and go to state 183
    "uint4"     shift, and go to state 184
    "float"     shift, and go to state 185
    "float2"    shift, and go to state 186
    "float3"    shift, and go to state 187
    "float4"    shift, and go to state 188
    "range"     shift, and go to state 189
    "urange"    shift, and go to state 190
    "range64"   shift, and go to state 191
    "urange64"  shift, and go to state 192
    "int64"     shift, and go to state 193
    "uint64"    shift, and go to state 194
    "double"    shift, and go to state 195
    "int8"      shift, and go to state 196
    "uint8"     shift, and go to state 197
    "int16"     shift, and go to state 198
    "uint16"    shift, and go to state 199
    "++"        shift, and go to state 200
    "--"        shift, and go to state 201
    "name"      shift, and go to state 202

    function_name                go to state 203
    function_declaration_header  go to state 1423


State 1397

  736 make_struct_dim_list: '(' . make_struct_fields ')'

    "$f"    shift, and go to state 839
    "name"  shift, and go to state 1036

    make_struct_fields  go to state 1424


State 1398

  728 make_struct_fields: make_struct_fields . ',' "name" copy_or_move expr
  729                   | make_struct_fields . ',' "name" ":=" expr
  732                   | make_struct_fields . ',' "$f" '(' expr ')' copy_or_move expr
  733                   | make_struct_fields . ',' "$f" '(' expr ')' ":=" expr
  738 make_struct_dim_decl: make_struct_fields .

    ','  shift, and go to state 1045

    $default  reduce using rule 738 (make_struct_dim_decl)


State 1399

  737 make_struct_dim_list: make_struct_dim_list . ',' '(' make_struct_fields ')'
  739 make_struct_dim_decl: make_struct_dim_list . optional_comma

    ','  shift, and go to state 1425

    $default  reduce using rule 788 (optional_comma)

    optional_comma  go to state 1426


State 1400

  740 optional_make_struct_dim_decl: make_struct_dim_decl .

    $default  reduce using rule 740 (optional_make_struct_dim_decl)


State 1401

  746 make_struct_decl: "struct" '<' $@73 type_declaration_no_options '>' $@74 '(' use_initializer optional_make_struct_dim_decl . ')'

    ')'  shift, and go to state 1427


State 1402

  749 make_struct_decl: "class" '<' $@75 type_declaration_no_options '>' $@76 '(' use_initializer optional_make_struct_dim_decl . ')'

    ')'  shift, and go to state 1428


State 1403

  293 expr_type_info: "typeinfo" name_in_namespace '<' "name" c_or_s "name" '>' '(' expr . ')'
  342 expr_method_call: expr . "->" "name" '(' ')'
  343                 | expr . "->" "name" '(' expr_list ')'
  353 expr_field: expr . '.' "name"
  354           | expr . '.' '.' "name"
  355           | expr . '.' "name" '(' ')'
  356           | expr . '.' "name" '(' expr_list ')'
  357           | expr . '.' basic_type_declaration '(' ')'
  358           | expr . '.' basic_type_declaration '(' expr_list ')'
  361           | expr . '.' $@17 error $@18
  383 expr: expr . "<<" expr
  384     | expr . ">>" expr
  385     | expr . "<<<" expr
  386     | expr . ">>>" expr
  387     | expr . '+' expr
  388     | expr . '-' expr
  389     | expr . '*' expr
  390     | expr . '/' expr
  391     | expr . '%' expr
  392     | expr . '<' expr
  393     | expr . '>' expr
  394     | expr . "==" expr
  395     | expr . "!=" expr
  396     | expr . "<=" expr
  397     | expr . ">=" expr
  398     | expr . '&' expr
  399     | expr . '|' expr
  400     | expr . '^' expr
  401     | expr . "&&" expr
  402     | expr . "||" expr
  403     | expr . "^^" expr
  404     | expr . ".." expr
  407     | expr . "++"
  408     | expr . "--"
  410     | expr . '[' expr ']'
  411     | expr . '.' '[' expr ']'
  412     | expr . "?[" expr ']'
  413     | expr . '.' "?[" expr ']'
  414     | expr . "?." "name"
  415     | expr . '.' "?." "name"
  424     | expr . "??" expr
  425     | expr . '?' expr ':' expr
  428     | expr . "is" "type" '<' $@19 type_declaration_no_options '>' $@20
  429     | expr . "is" basic_type_declaration
  430     | expr . "is" "name"
  431     | expr . "as" "name"
  434     | expr . "as" "type" '<' $@21 type_declaration '>' $@22
  435     | expr . "as" basic_type_declaration
  436     | expr . '?' "as" "name"
  439     | expr . '?' "as" "type" '<' $@23 type_declaration '>' $@24
  440     | expr . '?' "as" basic_type_declaration
  448     | expr . "<|" expr
  449     | expr . "|>" expr
  450     | expr . "|>" basic_type_declaration
  461 expr_mtag: expr . '.' "$f" '(' expr ')'
  462          | expr . "?." "$f" '(' expr ')'
  463          | expr . '.' '.' "$f" '(' expr ')'
  464          | expr . '.' "?." "$f" '(' expr ')'
  465          | expr . "as" "$f" '(' expr ')'
  466          | expr . '?' "as" "$f" '(' expr ')'
  467          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 648
    "as"   shift, and go to state 649
    "<<"   shift, and go to state 650
    ">>"   shift, and go to state 651
    "++"   shift, and go to state 652
    "--"   shift, and go to state 653
    "<="   shift, and go to state 654
    ">="   shift, and go to state 655
    "=="   shift, and go to state 656
    "!="   shift, and go to state 657
    "->"   shift, and go to state 658
    "??"   shift, and go to state 659
    "?."   shift, and go to state 660
    "?["   shift, and go to state 661
    "<|"   shift, and go to state 662
    "|>"   shift, and go to state 663
    "<<<"  shift, and go to state 664
    ">>>"  shift, and go to state 665
    "&&"   shift, and go to state 666
    "||"   shift, and go to state 667
    "^^"   shift, and go to state 668
    ".."   shift, and go to state 669
    '?'    shift, and go to state 670
    '|'    shift, and go to state 671
    '^'    shift, and go to state 672
    '&'    shift, and go to state 673
    '<'    shift, and go to state 674
    '>'    shift, and go to state 675
    '-'    shift, and go to state 676
    '+'    shift, and go to state 677
    '*'    shift, and go to state 678
    '/'    shift, and go to state 679
    '%'    shift, and go to state 680
    '.'    shift, and go to state 681
    '['    shift, and go to state 682
    ')'    shift, and go to state 1429


State 1404

  765 make_dim_decl: "array" "struct" '<' $@83 type_declaration_no_options '>' $@84 '(' use_initializer . optional_make_struct_dim_decl ')'

    "$f"    shift, and go to state 839
    "name"  shift, and go to state 1036
    '('     shift, and go to state 1397

    $default  reduce using rule 741 (optional_make_struct_dim_decl)

    make_struct_fields             go to state 1398
    make_struct_dim_list           go to state 1399
    make_struct_dim_decl           go to state 1400
    optional_make_struct_dim_decl  go to state 1430


State 1405

  768 make_dim_decl: "array" "tuple" '<' $@85 type_declaration_no_options '>' $@86 '(' use_initializer . optional_make_struct_dim_decl ')'

    "$f"    shift, and go to state 839
    "name"  shift, and go to state 1036
    '('     shift, and go to state 1397

    $default  reduce using rule 741 (optional_make_struct_dim_decl)

    make_struct_fields             go to state 1398
    make_struct_dim_list           go to state 1399
    make_struct_dim_decl           go to state 1400
    optional_make_struct_dim_decl  go to state 1431


State 1406

  771 make_dim_decl: "array" "variant" '<' $@87 type_declaration_no_options '>' $@88 '(' make_variant_dim . ')'

    ')'  shift, and go to state 1432


State 1407

  775 make_dim_decl: "array" '<' $@89 type_declaration_no_options '>' $@90 '(' optional_expr_list ')' .

    $default  reduce using rule 775 (make_dim_decl)


State 1408

  785 make_table_decl: "table" '<' type_declaration_no_options c_or_s type_declaration_no_options '>' '(' optional_expr_map_tuple_list ')' .

    $default  reduce using rule 785 (make_table_decl)


State 1409

  779 make_dim_decl: "fixed_array" '<' $@91 type_declaration_no_options '>' $@92 '(' expr_list optional_comma . ')'

    ')'  shift, and go to state 1433


State 1410

  761 make_tuple_call: "tuple" '<' $@81 type_declaration_no_options '>' $@82 '(' use_initializer optional_make_struct_dim_decl . ')'

    ')'  shift, and go to state 1434


State 1411

  752 make_struct_decl: "variant" '<' $@77 type_declaration_no_options '>' $@78 '(' make_variant_dim ')' .

    $default  reduce using rule 752 (make_struct_decl)


State 1412

  792 array_comprehension: "begin of code block" "for" '(' variable_name_with_pos_list "in" expr_list ')' "end of expression" make_map_tuple . array_comprehension_where "end of code block"

    "end of expression"  shift, and go to state 1435

    $default  reduce using rule 786 (array_comprehension_where)

    array_comprehension_where  go to state 1436


State 1413

  342 expr_method_call: expr . "->" "name" '(' ')'
  343                 | expr . "->" "name" '(' expr_list ')'
  353 expr_field: expr . '.' "name"
  354           | expr . '.' '.' "name"
  355           | expr . '.' "name" '(' ')'
  356           | expr . '.' "name" '(' expr_list ')'
  357           | expr . '.' basic_type_declaration '(' ')'
  358           | expr . '.' basic_type_declaration '(' expr_list ')'
  361           | expr . '.' $@17 error $@18
  383 expr: expr . "<<" expr
  384     | expr . ">>" expr
  385     | expr . "<<<" expr
  386     | expr . ">>>" expr
  387     | expr . '+' expr
  388     | expr . '-' expr
  389     | expr . '*' expr
  390     | expr . '/' expr
  391     | expr . '%' expr
  392     | expr . '<' expr
  393     | expr . '>' expr
  394     | expr . "==" expr
  395     | expr . "!=" expr
  396     | expr . "<=" expr
  397     | expr . ">=" expr
  398     | expr . '&' expr
  399     | expr . '|' expr
  400     | expr . '^' expr
  401     | expr . "&&" expr
  402     | expr . "||" expr
  403     | expr . "^^" expr
  404     | expr . ".." expr
  407     | expr . "++"
  408     | expr . "--"
  410     | expr . '[' expr ']'
  411     | expr . '.' '[' expr ']'
  412     | expr . "?[" expr ']'
  413     | expr . '.' "?[" expr ']'
  414     | expr . "?." "name"
  415     | expr . '.' "?." "name"
  424     | expr . "??" expr
  425     | expr . '?' expr ':' expr
  428     | expr . "is" "type" '<' $@19 type_declaration_no_options '>' $@20
  429     | expr . "is" basic_type_declaration
  430     | expr . "is" "name"
  431     | expr . "as" "name"
  434     | expr . "as" "type" '<' $@21 type_declaration '>' $@22
  435     | expr . "as" basic_type_declaration
  436     | expr . '?' "as" "name"
  439     | expr . '?' "as" "type" '<' $@23 type_declaration '>' $@24
  440     | expr . '?' "as" basic_type_declaration
  448     | expr . "<|" expr
  449     | expr . "|>" expr
  450     | expr . "|>" basic_type_declaration
  461 expr_mtag: expr . '.' "$f" '(' expr ')'
  462          | expr . "?." "$f" '(' expr ')'
  463          | expr . '.' '.' "$f" '(' expr ')'
  464          | expr . '.' "?." "$f" '(' expr ')'
  465          | expr . "as" "$f" '(' expr ')'
  466          | expr . '?' "as" "$f" '(' expr ')'
  467          | expr . "is" "$f" '(' expr ')'
  790 array_comprehension: '[' "for" '(' variable_name_with_pos_list "in" expr_list ')' "end of expression" expr . array_comprehension_where ']'

    "is"                 shift, and go to state 648
    "as"                 shift, and go to state 649
    "<<"                 shift, and go to state 650
    ">>"                 shift, and go to state 651
    "++"                 shift, and go to state 652
    "--"                 shift, and go to state 653
    "<="                 shift, and go to state 654
    ">="                 shift, and go to state 655
    "=="                 shift, and go to state 656
    "!="                 shift, and go to state 657
    "->"                 shift, and go to state 658
    "??"                 shift, and go to state 659
    "?."                 shift, and go to state 660
    "?["                 shift, and go to state 661
    "<|"                 shift, and go to state 662
    "|>"                 shift, and go to state 663
    "<<<"                shift, and go to state 664
    ">>>"                shift, and go to state 665
    "&&"                 shift, and go to state 666
    "||"                 shift, and go to state 667
    "^^"                 shift, and go to state 668
    ".."                 shift, and go to state 669
    "end of expression"  shift, and go to state 1435
    '?'                  shift, and go to state 670
    '|'                  shift, and go to state 671
    '^'                  shift, and go to state 672
    '&'                  shift, and go to state 673
    '<'                  shift, and go to state 674
    '>'                  shift, and go to state 675
    '-'                  shift, and go to state 676
    '+'                  shift, and go to state 677
    '*'                  shift, and go to state 678
    '/'                  shift, and go to state 679
    '%'                  shift, and go to state 680
    '.'                  shift, and go to state 681
    '['                  shift, and go to state 682

    $default  reduce using rule 786 (array_comprehension_where)

    array_comprehension_where  go to state 1437


State 1414

  791 array_comprehension: '[' "iterator" "for" '(' variable_name_with_pos_list "in" expr_list ')' "end of expression" . expr array_comprehension_where ']'

    "struct"                          shift, and go to state 409
    "class"                           shift, and go to state 410
    "true"                            shift, and go to state 411
    "false"                           shift, and go to state 412
    "new"                             shift, and go to state 413
    "typeinfo"                        shift, and go to state 414
    "type"                            shift, and go to state 415
    "array"                           shift, and go to state 416
    "null"                            shift, and go to state 417
    "table"                           shift, and go to state 418
    "deref"                           shift, and go to state 419
    "cast"                            shift, and go to state 420
    "upcast"                          shift, and go to state 421
    "addr"                            shift, and go to state 422
    "reinterpret"                     shift, and go to state 423
    "unsafe"                          shift, and go to state 424
    "fixed_array"                     shift, and go to state 425
    "default"                         shift, and go to state 426
    "bool"                            shift, and go to state 225
    "void"                            shift, and go to state 226
    "string"                          shift, and go to state 227
    "int"                             shift, and go to state 229
    "int2"                            shift, and go to state 230
    "int3"                            shift, and go to state 231
    "int4"                            shift, and go to state 232
    "uint"                            shift, and go to state 233
    "bitfield"                        shift, and go to state 427
    "uint2"                           shift, and go to state 235
    "uint3"                           shift, and go to state 236
    "uint4"                           shift, and go to state 237
    "float"                           shift, and go to state 238
    "float2"                          shift, and go to state 239
    "float3"                          shift, and go to state 240
    "float4"                          shift, and go to state 241
    "range"                           shift, and go to state 242
    "urange"                          shift, and go to state 243
    "range64"                         shift, and go to state 244
    "urange64"                        shift, and go to state 245
    "int64"                           shift, and go to state 247
    "uint64"                          shift, and go to state 248
    "double"                          shift, and go to state 249
    "int8"                            shift, and go to state 252
    "uint8"                           shift, and go to state 253
    "int16"                           shift, and go to state 254
    "uint16"                          shift, and go to state 255
    "tuple"                           shift, and go to state 428
    "variant"                         shift, and go to state 429
    "generator"                       shift, and go to state 430
    "++"                              shift, and go to state 431
    "--"                              shift, and go to state 432
    "::"                              shift, and go to state 55
    "$$"                              shift, and go to state 433
    "$i"                              shift, and go to state 434
    "$v"                              shift, and go to state 435
    "$b"                              shift, and go to state 436
    "$a"                              shift, and go to state 437
    "$c"                              shift, and go to state 438
    "..."                             shift, and go to state 439
    "integer constant"                shift, and go to state 440
    "long integer constant"           shift, and go to state 441
    "unsigned integer constant"       shift, and go to state 442
    "unsigned long integer constant"  shift, and go to state 443
    "unsigned int8 constant"          shift, and go to state 444
    "floating point constant"         shift, and go to state 445
    "double constant"                 shift, and go to state 446
    "name"                            shift, and go to state 56
    "start of the string"             shift, and go to state 447
    "begin of code block"             shift, and go to state 448
    '-'                               shift, and go to state 449
    '+'                               shift, and go to state 450
    '*'                               shift, and go to state 451
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 452
    '!'                               shift, and go to state 453
    '['                               shift, and go to state 454
    '('                               shift, and go to state 455
    '$'                               shift, and go to state 456
    '@'                               shift, and go to state 457

    string_builder          go to state 458
    expr_reader             go to state 459
    expr_call_pipe          go to state 460
    name_in_namespace       go to state 461
    expr_new                go to state 462
    expr_cast               go to state 463
    expr_type_decl          go to state 464
    expr_type_info          go to state 465
    block_or_lambda         go to state 466
    expr_full_block         go to state 467
    expr_numeric_const      go to state 468
    expr_named_call         go to state 469
    expr_method_call        go to state 470
    func_addr_expr          go to state 471
    expr_field              go to state 472
    expr_call               go to state 473
    expr                    go to state 1438
    expr_mtag               go to state 475
    basic_type_declaration  go to state 476
    make_decl               go to state 477
    make_struct_decl        go to state 478
    make_tuple_call         go to state 479
    make_dim_decl           go to state 480
    make_table_decl         go to state 481
    array_comprehension     go to state 482


State 1415

  352 func_addr_expr: '@' '@' '<' $@15 optional_function_argument_list optional_function_type '>' $@16 func_addr_name .

    $default  reduce using rule 352 (func_addr_expr)


State 1416

  733 make_struct_fields: make_struct_fields ',' "$f" '(' expr ')' ":=" . expr

    "struct"                          shift, and go to state 409
    "class"                           shift, and go to state 410
    "true"                            shift, and go to state 411
    "false"                           shift, and go to state 412
    "new"                             shift, and go to state 413
    "typeinfo"                        shift, and go to state 414
    "type"                            shift, and go to state 415
    "array"                           shift, and go to state 416
    "null"                            shift, and go to state 417
    "table"                           shift, and go to state 418
    "deref"                           shift, and go to state 419
    "cast"                            shift, and go to state 420
    "upcast"                          shift, and go to state 421
    "addr"                            shift, and go to state 422
    "reinterpret"                     shift, and go to state 423
    "unsafe"                          shift, and go to state 424
    "fixed_array"                     shift, and go to state 425
    "default"                         shift, and go to state 426
    "bool"                            shift, and go to state 225
    "void"                            shift, and go to state 226
    "string"                          shift, and go to state 227
    "int"                             shift, and go to state 229
    "int2"                            shift, and go to state 230
    "int3"                            shift, and go to state 231
    "int4"                            shift, and go to state 232
    "uint"                            shift, and go to state 233
    "bitfield"                        shift, and go to state 427
    "uint2"                           shift, and go to state 235
    "uint3"                           shift, and go to state 236
    "uint4"                           shift, and go to state 237
    "float"                           shift, and go to state 238
    "float2"                          shift, and go to state 239
    "float3"                          shift, and go to state 240
    "float4"                          shift, and go to state 241
    "range"                           shift, and go to state 242
    "urange"                          shift, and go to state 243
    "range64"                         shift, and go to state 244
    "urange64"                        shift, and go to state 245
    "int64"                           shift, and go to state 247
    "uint64"                          shift, and go to state 248
    "double"                          shift, and go to state 249
    "int8"                            shift, and go to state 252
    "uint8"                           shift, and go to state 253
    "int16"                           shift, and go to state 254
    "uint16"                          shift, and go to state 255
    "tuple"                           shift, and go to state 428
    "variant"                         shift, and go to state 429
    "generator"                       shift, and go to state 430
    "++"                              shift, and go to state 431
    "--"                              shift, and go to state 432
    "::"                              shift, and go to state 55
    "$$"                              shift, and go to state 433
    "$i"                              shift, and go to state 434
    "$v"                              shift, and go to state 435
    "$b"                              shift, and go to state 436
    "$a"                              shift, and go to state 437
    "$c"                              shift, and go to state 438
    "..."                             shift, and go to state 439
    "integer constant"                shift, and go to state 440
    "long integer constant"           shift, and go to state 441
    "unsigned integer constant"       shift, and go to state 442
    "unsigned long integer constant"  shift, and go to state 443
    "unsigned int8 constant"          shift, and go to state 444
    "floating point constant"         shift, and go to state 445
    "double constant"                 shift, and go to state 446
    "name"                            shift, and go to state 56
    "start of the string"             shift, and go to state 447
    "begin of code block"             shift, and go to state 448
    '-'                               shift, and go to state 449
    '+'                               shift, and go to state 450
    '*'                               shift, and go to state 451
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 452
    '!'                               shift, and go to state 453
    '['                               shift, and go to state 454
    '('                               shift, and go to state 455
    '$'                               shift, and go to state 456
    '@'                               shift, and go to state 457

    string_builder          go to state 458
    expr_reader             go to state 459
    expr_call_pipe          go to state 460
    name_in_namespace       go to state 461
    expr_new                go to state 462
    expr_cast               go to state 463
    expr_type_decl          go to state 464
    expr_type_info          go to state 465
    block_or_lambda         go to state 466
    expr_full_block         go to state 467
    expr_numeric_const      go to state 468
    expr_named_call         go to state 469
    expr_method_call        go to state 470
    func_addr_expr          go to state 471
    expr_field              go to state 472
    expr_call               go to state 473
    expr                    go to state 1439
    expr_mtag               go to state 475
    basic_type_declaration  go to state 476
    make_decl               go to state 477
    make_struct_decl        go to state 478
    make_tuple_call         go to state 479
    make_dim_decl           go to state 480
    make_table_decl         go to state 481
    array_comprehension     go to state 482


State 1417

  732 make_struct_fields: make_struct_fields ',' "$f" '(' expr ')' copy_or_move . expr

    "struct"                          shift, and go to state 409
    "class"                           shift, and go to state 410
    "true"                            shift, and go to state 411
    "false"                           shift, and go to state 412
    "new"                             shift, and go to state 413
    "typeinfo"                        shift, and go to state 414
    "type"                            shift, and go to state 415
    "array"                           shift, and go to state 416
    "null"                            shift, and go to state 417
    "table"                           shift, and go to state 418
    "deref"                           shift, and go to state 419
    "cast"                            shift, and go to state 420
    "upcast"                          shift, and go to state 421
    "addr"                            shift, and go to state 422
    "reinterpret"                     shift, and go to state 423
    "unsafe"                          shift, and go to state 424
    "fixed_array"                     shift, and go to state 425
    "default"                         shift, and go to state 426
    "bool"                            shift, and go to state 225
    "void"                            shift, and go to state 226
    "string"                          shift, and go to state 227
    "int"                             shift, and go to state 229
    "int2"                            shift, and go to state 230
    "int3"                            shift, and go to state 231
    "int4"                            shift, and go to state 232
    "uint"                            shift, and go to state 233
    "bitfield"                        shift, and go to state 427
    "uint2"                           shift, and go to state 235
    "uint3"                           shift, and go to state 236
    "uint4"                           shift, and go to state 237
    "float"                           shift, and go to state 238
    "float2"                          shift, and go to state 239
    "float3"                          shift, and go to state 240
    "float4"                          shift, and go to state 241
    "range"                           shift, and go to state 242
    "urange"                          shift, and go to state 243
    "range64"                         shift, and go to state 244
    "urange64"                        shift, and go to state 245
    "int64"                           shift, and go to state 247
    "uint64"                          shift, and go to state 248
    "double"                          shift, and go to state 249
    "int8"                            shift, and go to state 252
    "uint8"                           shift, and go to state 253
    "int16"                           shift, and go to state 254
    "uint16"                          shift, and go to state 255
    "tuple"                           shift, and go to state 428
    "variant"                         shift, and go to state 429
    "generator"                       shift, and go to state 430
    "++"                              shift, and go to state 431
    "--"                              shift, and go to state 432
    "::"                              shift, and go to state 55
    "$$"                              shift, and go to state 433
    "$i"                              shift, and go to state 434
    "$v"                              shift, and go to state 435
    "$b"                              shift, and go to state 436
    "$a"                              shift, and go to state 437
    "$c"                              shift, and go to state 438
    "..."                             shift, and go to state 439
    "integer constant"                shift, and go to state 440
    "long integer constant"           shift, and go to state 441
    "unsigned integer constant"       shift, and go to state 442
    "unsigned long integer constant"  shift, and go to state 443
    "unsigned int8 constant"          shift, and go to state 444
    "floating point constant"         shift, and go to state 445
    "double constant"                 shift, and go to state 446
    "name"                            shift, and go to state 56
    "start of the string"             shift, and go to state 447
    "begin of code block"             shift, and go to state 448
    '-'                               shift, and go to state 449
    '+'                               shift, and go to state 450
    '*'                               shift, and go to state 451
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 452
    '!'                               shift, and go to state 453
    '['                               shift, and go to state 454
    '('                               shift, and go to state 455
    '$'                               shift, and go to state 456
    '@'                               shift, and go to state 457

    string_builder          go to state 458
    expr_reader             go to state 459
    expr_call_pipe          go to state 460
    name_in_namespace       go to state 461
    expr_new                go to state 462
    expr_cast               go to state 463
    expr_type_decl          go to state 464
    expr_type_info          go to state 465
    block_or_lambda         go to state 466
    expr_full_block         go to state 467
    expr_numeric_const      go to state 468
    expr_named_call         go to state 469
    expr_method_call        go to state 470
    func_addr_expr          go to state 471
    expr_field              go to state 472
    expr_call               go to state 473
    expr                    go to state 1440
    expr_mtag               go to state 475
    basic_type_declaration  go to state 476
    make_decl               go to state 477
    make_struct_decl        go to state 478
    make_tuple_call         go to state 479
    make_dim_decl           go to state 480
    make_table_decl         go to state 481
    array_comprehension     go to state 482


State 1418

  439 expr: expr '?' "as" "type" '<' $@23 type_declaration '>' $@24 .

    $default  reduce using rule 439 (expr)


State 1419

   59 expression_else: elif_or_static_elif '(' expr ')' . expression_block expression_else

    "begin of code block"  shift, and go to state 326

    expression_block  go to state 1441


State 1420

  274 tuple_expansion_variable_declaration: '(' tuple_expansion ')' ':' type_declaration_no_options copy_or_move_or_clone expr . "end of expression"
  342 expr_method_call: expr . "->" "name" '(' ')'
  343                 | expr . "->" "name" '(' expr_list ')'
  353 expr_field: expr . '.' "name"
  354           | expr . '.' '.' "name"
  355           | expr . '.' "name" '(' ')'
  356           | expr . '.' "name" '(' expr_list ')'
  357           | expr . '.' basic_type_declaration '(' ')'
  358           | expr . '.' basic_type_declaration '(' expr_list ')'
  361           | expr . '.' $@17 error $@18
  383 expr: expr . "<<" expr
  384     | expr . ">>" expr
  385     | expr . "<<<" expr
  386     | expr . ">>>" expr
  387     | expr . '+' expr
  388     | expr . '-' expr
  389     | expr . '*' expr
  390     | expr . '/' expr
  391     | expr . '%' expr
  392     | expr . '<' expr
  393     | expr . '>' expr
  394     | expr . "==" expr
  395     | expr . "!=" expr
  396     | expr . "<=" expr
  397     | expr . ">=" expr
  398     | expr . '&' expr
  399     | expr . '|' expr
  400     | expr . '^' expr
  401     | expr . "&&" expr
  402     | expr . "||" expr
  403     | expr . "^^" expr
  404     | expr . ".." expr
  407     | expr . "++"
  408     | expr . "--"
  410     | expr . '[' expr ']'
  411     | expr . '.' '[' expr ']'
  412     | expr . "?[" expr ']'
  413     | expr . '.' "?[" expr ']'
  414     | expr . "?." "name"
  415     | expr . '.' "?." "name"
  424     | expr . "??" expr
  425     | expr . '?' expr ':' expr
  428     | expr . "is" "type" '<' $@19 type_declaration_no_options '>' $@20
  429     | expr . "is" basic_type_declaration
  430     | expr . "is" "name"
  431     | expr . "as" "name"
  434     | expr . "as" "type" '<' $@21 type_declaration '>' $@22
  435     | expr . "as" basic_type_declaration
  436     | expr . '?' "as" "name"
  439     | expr . '?' "as" "type" '<' $@23 type_declaration '>' $@24
  440     | expr . '?' "as" basic_type_declaration
  448     | expr . "<|" expr
  449     | expr . "|>" expr
  450     | expr . "|>" basic_type_declaration
  461 expr_mtag: expr . '.' "$f" '(' expr ')'
  462          | expr . "?." "$f" '(' expr ')'
  463          | expr . '.' '.' "$f" '(' expr ')'
  464          | expr . '.' "?." "$f" '(' expr ')'
  465          | expr . "as" "$f" '(' expr ')'
  466          | expr . '?' "as" "$f" '(' expr ')'
  467          | expr . "is" "$f" '(' expr ')'

    "is"                 shift, and go to state 648
    "as"                 shift, and go to state 649
    "<<"                 shift, and go to state 650
    ">>"                 shift, and go to state 651
    "++"                 shift, and go to state 652
    "--"                 shift, and go to state 653
    "<="                 shift, and go to state 654
    ">="                 shift, and go to state 655
    "=="                 shift, and go to state 656
    "!="                 shift, and go to state 657
    "->"                 shift, and go to state 658
    "??"                 shift, and go to state 659
    "?."                 shift, and go to state 660
    "?["                 shift, and go to state 661
    "<|"                 shift, and go to state 662
    "|>"                 shift, and go to state 663
    "<<<"                shift, and go to state 664
    ">>>"                shift, and go to state 665
    "&&"                 shift, and go to state 666
    "||"                 shift, and go to state 667
    "^^"                 shift, and go to state 668
    ".."                 shift, and go to state 669
    "end of expression"  shift, and go to state 1442
    '?'                  shift, and go to state 670
    '|'                  shift, and go to state 671
    '^'                  shift, and go to state 672
    '&'                  shift, and go to state 673
    '<'                  shift, and go to state 674
    '>'                  shift, and go to state 675
    '-'                  shift, and go to state 676
    '+'                  shift, and go to state 677
    '*'                  shift, and go to state 678
    '/'                  shift, and go to state 679
    '%'                  shift, and go to state 680
    '.'                  shift, and go to state 681
    '['                  shift, and go to state 682


State 1421

  275 tuple_expansion_variable_declaration: '(' tuple_expansion ')' optional_ref copy_or_move_or_clone expr "end of expression" .

    $default  reduce using rule 275 (tuple_expansion_variable_declaration)


State 1422

  486 struct_variable_declaration_list: struct_variable_declaration_list optional_annotation_list "def" optional_public_or_private_member_variable "abstract" optional_constant $@26 function_declaration_header "end of expression" .

    $default  reduce using rule 486 (struct_variable_declaration_list)


State 1423

  488 struct_variable_declaration_list: struct_variable_declaration_list optional_annotation_list "def" optional_public_or_private_member_variable optional_static_member_variable optional_override optional_constant $@27 function_declaration_header . expression_block

    "begin of code block"  shift, and go to state 326

    expression_block  go to state 1443


State 1424

  728 make_struct_fields: make_struct_fields . ',' "name" copy_or_move expr
  729                   | make_struct_fields . ',' "name" ":=" expr
  732                   | make_struct_fields . ',' "$f" '(' expr ')' copy_or_move expr
  733                   | make_struct_fields . ',' "$f" '(' expr ')' ":=" expr
  736 make_struct_dim_list: '(' make_struct_fields . ')'

    ','  shift, and go to state 1045
    ')'  shift, and go to state 1444


State 1425

  737 make_struct_dim_list: make_struct_dim_list ',' . '(' make_struct_fields ')'
  789 optional_comma: ',' .

    '('  shift, and go to state 1445

    $default  reduce using rule 789 (optional_comma)


State 1426

  739 make_struct_dim_decl: make_struct_dim_list optional_comma .

    $default  reduce using rule 739 (make_struct_dim_decl)


State 1427

  746 make_struct_decl: "struct" '<' $@73 type_declaration_no_options '>' $@74 '(' use_initializer optional_make_struct_dim_decl ')' .

    $default  reduce using rule 746 (make_struct_decl)


State 1428

  749 make_struct_decl: "class" '<' $@75 type_declaration_no_options '>' $@76 '(' use_initializer optional_make_struct_dim_decl ')' .

    $default  reduce using rule 749 (make_struct_decl)


State 1429

  293 expr_type_info: "typeinfo" name_in_namespace '<' "name" c_or_s "name" '>' '(' expr ')' .

    $default  reduce using rule 293 (expr_type_info)


State 1430

  765 make_dim_decl: "array" "struct" '<' $@83 type_declaration_no_options '>' $@84 '(' use_initializer optional_make_struct_dim_decl . ')'

    ')'  shift, and go to state 1446


State 1431

  768 make_dim_decl: "array" "tuple" '<' $@85 type_declaration_no_options '>' $@86 '(' use_initializer optional_make_struct_dim_decl . ')'

    ')'  shift, and go to state 1447


State 1432

  771 make_dim_decl: "array" "variant" '<' $@87 type_declaration_no_options '>' $@88 '(' make_variant_dim ')' .

    $default  reduce using rule 771 (make_dim_decl)


State 1433

  779 make_dim_decl: "fixed_array" '<' $@91 type_declaration_no_options '>' $@92 '(' expr_list optional_comma ')' .

    $default  reduce using rule 779 (make_dim_decl)


State 1434

  761 make_tuple_call: "tuple" '<' $@81 type_declaration_no_options '>' $@82 '(' use_initializer optional_make_struct_dim_decl ')' .

    $default  reduce using rule 761 (make_tuple_call)


State 1435

  787 array_comprehension_where: "end of expression" . "where" expr

    "where"  shift, and go to state 1448


State 1436

  792 array_comprehension: "begin of code block" "for" '(' variable_name_with_pos_list "in" expr_list ')' "end of expression" make_map_tuple array_comprehension_where . "end of code block"

    "end of code block"  shift, and go to state 1449


State 1437

  790 array_comprehension: '[' "for" '(' variable_name_with_pos_list "in" expr_list ')' "end of expression" expr array_comprehension_where . ']'

    ']'  shift, and go to state 1450


State 1438

  342 expr_method_call: expr . "->" "name" '(' ')'
  343                 | expr . "->" "name" '(' expr_list ')'
  353 expr_field: expr . '.' "name"
  354           | expr . '.' '.' "name"
  355           | expr . '.' "name" '(' ')'
  356           | expr . '.' "name" '(' expr_list ')'
  357           | expr . '.' basic_type_declaration '(' ')'
  358           | expr . '.' basic_type_declaration '(' expr_list ')'
  361           | expr . '.' $@17 error $@18
  383 expr: expr . "<<" expr
  384     | expr . ">>" expr
  385     | expr . "<<<" expr
  386     | expr . ">>>" expr
  387     | expr . '+' expr
  388     | expr . '-' expr
  389     | expr . '*' expr
  390     | expr . '/' expr
  391     | expr . '%' expr
  392     | expr . '<' expr
  393     | expr . '>' expr
  394     | expr . "==" expr
  395     | expr . "!=" expr
  396     | expr . "<=" expr
  397     | expr . ">=" expr
  398     | expr . '&' expr
  399     | expr . '|' expr
  400     | expr . '^' expr
  401     | expr . "&&" expr
  402     | expr . "||" expr
  403     | expr . "^^" expr
  404     | expr . ".." expr
  407     | expr . "++"
  408     | expr . "--"
  410     | expr . '[' expr ']'
  411     | expr . '.' '[' expr ']'
  412     | expr . "?[" expr ']'
  413     | expr . '.' "?[" expr ']'
  414     | expr . "?." "name"
  415     | expr . '.' "?." "name"
  424     | expr . "??" expr
  425     | expr . '?' expr ':' expr
  428     | expr . "is" "type" '<' $@19 type_declaration_no_options '>' $@20
  429     | expr . "is" basic_type_declaration
  430     | expr . "is" "name"
  431     | expr . "as" "name"
  434     | expr . "as" "type" '<' $@21 type_declaration '>' $@22
  435     | expr . "as" basic_type_declaration
  436     | expr . '?' "as" "name"
  439     | expr . '?' "as" "type" '<' $@23 type_declaration '>' $@24
  440     | expr . '?' "as" basic_type_declaration
  448     | expr . "<|" expr
  449     | expr . "|>" expr
  450     | expr . "|>" basic_type_declaration
  461 expr_mtag: expr . '.' "$f" '(' expr ')'
  462          | expr . "?." "$f" '(' expr ')'
  463          | expr . '.' '.' "$f" '(' expr ')'
  464          | expr . '.' "?." "$f" '(' expr ')'
  465          | expr . "as" "$f" '(' expr ')'
  466          | expr . '?' "as" "$f" '(' expr ')'
  467          | expr . "is" "$f" '(' expr ')'
  791 array_comprehension: '[' "iterator" "for" '(' variable_name_with_pos_list "in" expr_list ')' "end of expression" expr . array_comprehension_where ']'

    "is"                 shift, and go to state 648
    "as"                 shift, and go to state 649
    "<<"                 shift, and go to state 650
    ">>"                 shift, and go to state 651
    "++"                 shift, and go to state 652
    "--"                 shift, and go to state 653
    "<="                 shift, and go to state 654
    ">="                 shift, and go to state 655
    "=="                 shift, and go to state 656
    "!="                 shift, and go to state 657
    "->"                 shift, and go to state 658
    "??"                 shift, and go to state 659
    "?."                 shift, and go to state 660
    "?["                 shift, and go to state 661
    "<|"                 shift, and go to state 662
    "|>"                 shift, and go to state 663
    "<<<"                shift, and go to state 664
    ">>>"                shift, and go to state 665
    "&&"                 shift, and go to state 666
    "||"                 shift, and go to state 667
    "^^"                 shift, and go to state 668
    ".."                 shift, and go to state 669
    "end of expression"  shift, and go to state 1435
    '?'                  shift, and go to state 670
    '|'                  shift, and go to state 671
    '^'                  shift, and go to state 672
    '&'                  shift, and go to state 673
    '<'                  shift, and go to state 674
    '>'                  shift, and go to state 675
    '-'                  shift, and go to state 676
    '+'                  shift, and go to state 677
    '*'                  shift, and go to state 678
    '/'                  shift, and go to state 679
    '%'                  shift, and go to state 680
    '.'                  shift, and go to state 681
    '['                  shift, and go to state 682

    $default  reduce using rule 786 (array_comprehension_where)

    array_comprehension_where  go to state 1451


State 1439

  342 expr_method_call: expr . "->" "name" '(' ')'
  343                 | expr . "->" "name" '(' expr_list ')'
  353 expr_field: expr . '.' "name"
  354           | expr . '.' '.' "name"
  355           | expr . '.' "name" '(' ')'
  356           | expr . '.' "name" '(' expr_list ')'
  357           | expr . '.' basic_type_declaration '(' ')'
  358           | expr . '.' basic_type_declaration '(' expr_list ')'
  361           | expr . '.' $@17 error $@18
  383 expr: expr . "<<" expr
  384     | expr . ">>" expr
  385     | expr . "<<<" expr
  386     | expr . ">>>" expr
  387     | expr . '+' expr
  388     | expr . '-' expr
  389     | expr . '*' expr
  390     | expr . '/' expr
  391     | expr . '%' expr
  392     | expr . '<' expr
  393     | expr . '>' expr
  394     | expr . "==" expr
  395     | expr . "!=" expr
  396     | expr . "<=" expr
  397     | expr . ">=" expr
  398     | expr . '&' expr
  399     | expr . '|' expr
  400     | expr . '^' expr
  401     | expr . "&&" expr
  402     | expr . "||" expr
  403     | expr . "^^" expr
  404     | expr . ".." expr
  407     | expr . "++"
  408     | expr . "--"
  410     | expr . '[' expr ']'
  411     | expr . '.' '[' expr ']'
  412     | expr . "?[" expr ']'
  413     | expr . '.' "?[" expr ']'
  414     | expr . "?." "name"
  415     | expr . '.' "?." "name"
  424     | expr . "??" expr
  425     | expr . '?' expr ':' expr
  428     | expr . "is" "type" '<' $@19 type_declaration_no_options '>' $@20
  429     | expr . "is" basic_type_declaration
  430     | expr . "is" "name"
  431     | expr . "as" "name"
  434     | expr . "as" "type" '<' $@21 type_declaration '>' $@22
  435     | expr . "as" basic_type_declaration
  436     | expr . '?' "as" "name"
  439     | expr . '?' "as" "type" '<' $@23 type_declaration '>' $@24
  440     | expr . '?' "as" basic_type_declaration
  448     | expr . "<|" expr
  449     | expr . "|>" expr
  450     | expr . "|>" basic_type_declaration
  461 expr_mtag: expr . '.' "$f" '(' expr ')'
  462          | expr . "?." "$f" '(' expr ')'
  463          | expr . '.' '.' "$f" '(' expr ')'
  464          | expr . '.' "?." "$f" '(' expr ')'
  465          | expr . "as" "$f" '(' expr ')'
  466          | expr . '?' "as" "$f" '(' expr ')'
  467          | expr . "is" "$f" '(' expr ')'
  733 make_struct_fields: make_struct_fields ',' "$f" '(' expr ')' ":=" expr .

    "is"   shift, and go to state 648
    "as"   shift, and go to state 649
    "<<"   shift, and go to state 650
    ">>"   shift, and go to state 651
    "++"   shift, and go to state 652
    "--"   shift, and go to state 653
    "<="   shift, and go to state 654
    ">="   shift, and go to state 655
    "=="   shift, and go to state 656
    "!="   shift, and go to state 657
    "->"   shift, and go to state 658
    "??"   shift, and go to state 659
    "?."   shift, and go to state 660
    "?["   shift, and go to state 661
    "<|"   shift, and go to state 662
    "|>"   shift, and go to state 663
    "<<<"  shift, and go to state 664
    ">>>"  shift, and go to state 665
    "&&"   shift, and go to state 666
    "||"   shift, and go to state 667
    "^^"   shift, and go to state 668
    ".."   shift, and go to state 669
    '?'    shift, and go to state 670
    '|'    shift, and go to state 671
    '^'    shift, and go to state 672
    '&'    shift, and go to state 673
    '<'    shift, and go to state 674
    '>'    shift, and go to state 675
    '-'    shift, and go to state 676
    '+'    shift, and go to state 677
    '*'    shift, and go to state 678
    '/'    shift, and go to state 679
    '%'    shift, and go to state 680
    '.'    shift, and go to state 681
    '['    shift, and go to state 682

    $default  reduce using rule 733 (make_struct_fields)


State 1440

  342 expr_method_call: expr . "->" "name" '(' ')'
  343                 | expr . "->" "name" '(' expr_list ')'
  353 expr_field: expr . '.' "name"
  354           | expr . '.' '.' "name"
  355           | expr . '.' "name" '(' ')'
  356           | expr . '.' "name" '(' expr_list ')'
  357           | expr . '.' basic_type_declaration '(' ')'
  358           | expr . '.' basic_type_declaration '(' expr_list ')'
  361           | expr . '.' $@17 error $@18
  383 expr: expr . "<<" expr
  384     | expr . ">>" expr
  385     | expr . "<<<" expr
  386     | expr . ">>>" expr
  387     | expr . '+' expr
  388     | expr . '-' expr
  389     | expr . '*' expr
  390     | expr . '/' expr
  391     | expr . '%' expr
  392     | expr . '<' expr
  393     | expr . '>' expr
  394     | expr . "==" expr
  395     | expr . "!=" expr
  396     | expr . "<=" expr
  397     | expr . ">=" expr
  398     | expr . '&' expr
  399     | expr . '|' expr
  400     | expr . '^' expr
  401     | expr . "&&" expr
  402     | expr . "||" expr
  403     | expr . "^^" expr
  404     | expr . ".." expr
  407     | expr . "++"
  408     | expr . "--"
  410     | expr . '[' expr ']'
  411     | expr . '.' '[' expr ']'
  412     | expr . "?[" expr ']'
  413     | expr . '.' "?[" expr ']'
  414     | expr . "?." "name"
  415     | expr . '.' "?." "name"
  424     | expr . "??" expr
  425     | expr . '?' expr ':' expr
  428     | expr . "is" "type" '<' $@19 type_declaration_no_options '>' $@20
  429     | expr . "is" basic_type_declaration
  430     | expr . "is" "name"
  431     | expr . "as" "name"
  434     | expr . "as" "type" '<' $@21 type_declaration '>' $@22
  435     | expr . "as" basic_type_declaration
  436     | expr . '?' "as" "name"
  439     | expr . '?' "as" "type" '<' $@23 type_declaration '>' $@24
  440     | expr . '?' "as" basic_type_declaration
  448     | expr . "<|" expr
  449     | expr . "|>" expr
  450     | expr . "|>" basic_type_declaration
  461 expr_mtag: expr . '.' "$f" '(' expr ')'
  462          | expr . "?." "$f" '(' expr ')'
  463          | expr . '.' '.' "$f" '(' expr ')'
  464          | expr . '.' "?." "$f" '(' expr ')'
  465          | expr . "as" "$f" '(' expr ')'
  466          | expr . '?' "as" "$f" '(' expr ')'
  467          | expr . "is" "$f" '(' expr ')'
  732 make_struct_fields: make_struct_fields ',' "$f" '(' expr ')' copy_or_move expr .

    "is"   shift, and go to state 648
    "as"   shift, and go to state 649
    "<<"   shift, and go to state 650
    ">>"   shift, and go to state 651
    "++"   shift, and go to state 652
    "--"   shift, and go to state 653
    "<="   shift, and go to state 654
    ">="   shift, and go to state 655
    "=="   shift, and go to state 656
    "!="   shift, and go to state 657
    "->"   shift, and go to state 658
    "??"   shift, and go to state 659
    "?."   shift, and go to state 660
    "?["   shift, and go to state 661
    "<|"   shift, and go to state 662
    "|>"   shift, and go to state 663
    "<<<"  shift, and go to state 664
    ">>>"  shift, and go to state 665
    "&&"   shift, and go to state 666
    "||"   shift, and go to state 667
    "^^"   shift, and go to state 668
    ".."   shift, and go to state 669
    '?'    shift, and go to state 670
    '|'    shift, and go to state 671
    '^'    shift, and go to state 672
    '&'    shift, and go to state 673
    '<'    shift, and go to state 674
    '>'    shift, and go to state 675
    '-'    shift, and go to state 676
    '+'    shift, and go to state 677
    '*'    shift, and go to state 678
    '/'    shift, and go to state 679
    '%'    shift, and go to state 680
    '.'    shift, and go to state 681
    '['    shift, and go to state 682

    $default  reduce using rule 732 (make_struct_fields)


State 1441

   59 expression_else: elif_or_static_elif '(' expr ')' expression_block . expression_else

    "else"         shift, and go to state 1289
    "elif"         shift, and go to state 1290
    "static_elif"  shift, and go to state 1291

    $default  reduce using rule 57 (expression_else)

    elif_or_static_elif  go to state 1292
    expression_else      go to state 1452


State 1442

  274 tuple_expansion_variable_declaration: '(' tuple_expansion ')' ':' type_declaration_no_options copy_or_move_or_clone expr "end of expression" .

    $default  reduce using rule 274 (tuple_expansion_variable_declaration)


State 1443

  488 struct_variable_declaration_list: struct_variable_declaration_list optional_annotation_list "def" optional_public_or_private_member_variable optional_static_member_variable optional_override optional_constant $@27 function_declaration_header expression_block .

    $default  reduce using rule 488 (struct_variable_declaration_list)


State 1444

  736 make_struct_dim_list: '(' make_struct_fields ')' .

    $default  reduce using rule 736 (make_struct_dim_list)


State 1445

  737 make_struct_dim_list: make_struct_dim_list ',' '(' . make_struct_fields ')'

    "$f"    shift, and go to state 839
    "name"  shift, and go to state 1036

    make_struct_fields  go to state 1453


State 1446

  765 make_dim_decl: "array" "struct" '<' $@83 type_declaration_no_options '>' $@84 '(' use_initializer optional_make_struct_dim_decl ')' .

    $default  reduce using rule 765 (make_dim_decl)


State 1447

  768 make_dim_decl: "array" "tuple" '<' $@85 type_declaration_no_options '>' $@86 '(' use_initializer optional_make_struct_dim_decl ')' .

    $default  reduce using rule 768 (make_dim_decl)


State 1448

  787 array_comprehension_where: "end of expression" "where" . expr

    "struct"                          shift, and go to state 409
    "class"                           shift, and go to state 410
    "true"                            shift, and go to state 411
    "false"                           shift, and go to state 412
    "new"                             shift, and go to state 413
    "typeinfo"                        shift, and go to state 414
    "type"                            shift, and go to state 415
    "array"                           shift, and go to state 416
    "null"                            shift, and go to state 417
    "table"                           shift, and go to state 418
    "deref"                           shift, and go to state 419
    "cast"                            shift, and go to state 420
    "upcast"                          shift, and go to state 421
    "addr"                            shift, and go to state 422
    "reinterpret"                     shift, and go to state 423
    "unsafe"                          shift, and go to state 424
    "fixed_array"                     shift, and go to state 425
    "default"                         shift, and go to state 426
    "bool"                            shift, and go to state 225
    "void"                            shift, and go to state 226
    "string"                          shift, and go to state 227
    "int"                             shift, and go to state 229
    "int2"                            shift, and go to state 230
    "int3"                            shift, and go to state 231
    "int4"                            shift, and go to state 232
    "uint"                            shift, and go to state 233
    "bitfield"                        shift, and go to state 427
    "uint2"                           shift, and go to state 235
    "uint3"                           shift, and go to state 236
    "uint4"                           shift, and go to state 237
    "float"                           shift, and go to state 238
    "float2"                          shift, and go to state 239
    "float3"                          shift, and go to state 240
    "float4"                          shift, and go to state 241
    "range"                           shift, and go to state 242
    "urange"                          shift, and go to state 243
    "range64"                         shift, and go to state 244
    "urange64"                        shift, and go to state 245
    "int64"                           shift, and go to state 247
    "uint64"                          shift, and go to state 248
    "double"                          shift, and go to state 249
    "int8"                            shift, and go to state 252
    "uint8"                           shift, and go to state 253
    "int16"                           shift, and go to state 254
    "uint16"                          shift, and go to state 255
    "tuple"                           shift, and go to state 428
    "variant"                         shift, and go to state 429
    "generator"                       shift, and go to state 430
    "++"                              shift, and go to state 431
    "--"                              shift, and go to state 432
    "::"                              shift, and go to state 55
    "$$"                              shift, and go to state 433
    "$i"                              shift, and go to state 434
    "$v"                              shift, and go to state 435
    "$b"                              shift, and go to state 436
    "$a"                              shift, and go to state 437
    "$c"                              shift, and go to state 438
    "..."                             shift, and go to state 439
    "integer constant"                shift, and go to state 440
    "long integer constant"           shift, and go to state 441
    "unsigned integer constant"       shift, and go to state 442
    "unsigned long integer constant"  shift, and go to state 443
    "unsigned int8 constant"          shift, and go to state 444
    "floating point constant"         shift, and go to state 445
    "double constant"                 shift, and go to state 446
    "name"                            shift, and go to state 56
    "start of the string"             shift, and go to state 447
    "begin of code block"             shift, and go to state 448
    '-'                               shift, and go to state 449
    '+'                               shift, and go to state 450
    '*'                               shift, and go to state 451
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 452
    '!'                               shift, and go to state 453
    '['                               shift, and go to state 454
    '('                               shift, and go to state 455
    '$'                               shift, and go to state 456
    '@'                               shift, and go to state 457

    string_builder          go to state 458
    expr_reader             go to state 459
    expr_call_pipe          go to state 460
    name_in_namespace       go to state 461
    expr_new                go to state 462
    expr_cast               go to state 463
    expr_type_decl          go to state 464
    expr_type_info          go to state 465
    block_or_lambda         go to state 466
    expr_full_block         go to state 467
    expr_numeric_const      go to state 468
    expr_named_call         go to state 469
    expr_method_call        go to state 470
    func_addr_expr          go to state 471
    expr_field              go to state 472
    expr_call               go to state 473
    expr                    go to state 1454
    expr_mtag               go to state 475
    basic_type_declaration  go to state 476
    make_decl               go to state 477
    make_struct_decl        go to state 478
    make_tuple_call         go to state 479
    make_dim_decl           go to state 480
    make_table_decl         go to state 481
    array_comprehension     go to state 482


State 1449

  792 array_comprehension: "begin of code block" "for" '(' variable_name_with_pos_list "in" expr_list ')' "end of expression" make_map_tuple array_comprehension_where "end of code block" .

    $default  reduce using rule 792 (array_comprehension)


State 1450

  790 array_comprehension: '[' "for" '(' variable_name_with_pos_list "in" expr_list ')' "end of expression" expr array_comprehension_where ']' .

    $default  reduce using rule 790 (array_comprehension)


State 1451

  791 array_comprehension: '[' "iterator" "for" '(' variable_name_with_pos_list "in" expr_list ')' "end of expression" expr array_comprehension_where . ']'

    ']'  shift, and go to state 1455


State 1452

   59 expression_else: elif_or_static_elif '(' expr ')' expression_block expression_else .

    $default  reduce using rule 59 (expression_else)


State 1453

  728 make_struct_fields: make_struct_fields . ',' "name" copy_or_move expr
  729                   | make_struct_fields . ',' "name" ":=" expr
  732                   | make_struct_fields . ',' "$f" '(' expr ')' copy_or_move expr
  733                   | make_struct_fields . ',' "$f" '(' expr ')' ":=" expr
  737 make_struct_dim_list: make_struct_dim_list ',' '(' make_struct_fields . ')'

    ','  shift, and go to state 1045
    ')'  shift, and go to state 1456


State 1454

  342 expr_method_call: expr . "->" "name" '(' ')'
  343                 | expr . "->" "name" '(' expr_list ')'
  353 expr_field: expr . '.' "name"
  354           | expr . '.' '.' "name"
  355           | expr . '.' "name" '(' ')'
  356           | expr . '.' "name" '(' expr_list ')'
  357           | expr . '.' basic_type_declaration '(' ')'
  358           | expr . '.' basic_type_declaration '(' expr_list ')'
  361           | expr . '.' $@17 error $@18
  383 expr: expr . "<<" expr
  384     | expr . ">>" expr
  385     | expr . "<<<" expr
  386     | expr . ">>>" expr
  387     | expr . '+' expr
  388     | expr . '-' expr
  389     | expr . '*' expr
  390     | expr . '/' expr
  391     | expr . '%' expr
  392     | expr . '<' expr
  393     | expr . '>' expr
  394     | expr . "==" expr
  395     | expr . "!=" expr
  396     | expr . "<=" expr
  397     | expr . ">=" expr
  398     | expr . '&' expr
  399     | expr . '|' expr
  400     | expr . '^' expr
  401     | expr . "&&" expr
  402     | expr . "||" expr
  403     | expr . "^^" expr
  404     | expr . ".." expr
  407     | expr . "++"
  408     | expr . "--"
  410     | expr . '[' expr ']'
  411     | expr . '.' '[' expr ']'
  412     | expr . "?[" expr ']'
  413     | expr . '.' "?[" expr ']'
  414     | expr . "?." "name"
  415     | expr . '.' "?." "name"
  424     | expr . "??" expr
  425     | expr . '?' expr ':' expr
  428     | expr . "is" "type" '<' $@19 type_declaration_no_options '>' $@20
  429     | expr . "is" basic_type_declaration
  430     | expr . "is" "name"
  431     | expr . "as" "name"
  434     | expr . "as" "type" '<' $@21 type_declaration '>' $@22
  435     | expr . "as" basic_type_declaration
  436     | expr . '?' "as" "name"
  439     | expr . '?' "as" "type" '<' $@23 type_declaration '>' $@24
  440     | expr . '?' "as" basic_type_declaration
  448     | expr . "<|" expr
  449     | expr . "|>" expr
  450     | expr . "|>" basic_type_declaration
  461 expr_mtag: expr . '.' "$f" '(' expr ')'
  462          | expr . "?." "$f" '(' expr ')'
  463          | expr . '.' '.' "$f" '(' expr ')'
  464          | expr . '.' "?." "$f" '(' expr ')'
  465          | expr . "as" "$f" '(' expr ')'
  466          | expr . '?' "as" "$f" '(' expr ')'
  467          | expr . "is" "$f" '(' expr ')'
  787 array_comprehension_where: "end of expression" "where" expr .

    "is"   shift, and go to state 648
    "as"   shift, and go to state 649
    "<<"   shift, and go to state 650
    ">>"   shift, and go to state 651
    "++"   shift, and go to state 652
    "--"   shift, and go to state 653
    "<="   shift, and go to state 654
    ">="   shift, and go to state 655
    "=="   shift, and go to state 656
    "!="   shift, and go to state 657
    "->"   shift, and go to state 658
    "??"   shift, and go to state 659
    "?."   shift, and go to state 660
    "?["   shift, and go to state 661
    "<|"   shift, and go to state 662
    "|>"   shift, and go to state 663
    "<<<"  shift, and go to state 664
    ">>>"  shift, and go to state 665
    "&&"   shift, and go to state 666
    "||"   shift, and go to state 667
    "^^"   shift, and go to state 668
    ".."   shift, and go to state 669
    '?'    shift, and go to state 670
    '|'    shift, and go to state 671
    '^'    shift, and go to state 672
    '&'    shift, and go to state 673
    '<'    shift, and go to state 674
    '>'    shift, and go to state 675
    '-'    shift, and go to state 676
    '+'    shift, and go to state 677
    '*'    shift, and go to state 678
    '/'    shift, and go to state 679
    '%'    shift, and go to state 680
    '.'    shift, and go to state 681
    '['    shift, and go to state 682

    $default  reduce using rule 787 (array_comprehension_where)


State 1455

  791 array_comprehension: '[' "iterator" "for" '(' variable_name_with_pos_list "in" expr_list ')' "end of expression" expr array_comprehension_where ']' .

    $default  reduce using rule 791 (array_comprehension)


State 1456

  737 make_struct_dim_list: make_struct_dim_list ',' '(' make_struct_fields ')' .

    $default  reduce using rule 737 (make_struct_dim_list)
