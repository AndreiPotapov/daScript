Terminals unused in grammar

    "lexer error"
    "end of failed eader macro"
    ";}}"
    ";}]"
    ";]]"
    ",]]"
    ",}]"
    LLPIPE


Grammar

    0 $accept: program $end

    1 program: %empty
    2        | program module_declaration
    3        | program structure_declaration
    4        | program enum_declaration
    5        | program global_let
    6        | program global_function_declaration
    7        | program expect_declaration
    8        | program require_declaration
    9        | program options_declaration "end of expression"
   10        | program alias_declaration
   11        | program variant_alias_declaration
   12        | program tuple_alias_declaration
   13        | program bitfield_alias_declaration
   14        | program top_level_reader_macro
   15        | program "end of expression"

   16 top_level_reader_macro: expr_reader "end of expression"

   17 optional_public_or_private_module: %empty
   18                                  | "public"
   19                                  | "private"

   20 module_name: '$'
   21            | "name"

   22 module_declaration: "module" module_name optional_shared optional_public_or_private_module

   23 character_sequence: STRING_CHARACTER
   24                   | STRING_CHARACTER_ESC
   25                   | character_sequence STRING_CHARACTER
   26                   | character_sequence STRING_CHARACTER_ESC

   27 string_constant: "start of the string" character_sequence "end of the string"
   28                | "start of the string" "end of the string"

   29 string_builder_body: %empty
   30                    | string_builder_body character_sequence
   31                    | string_builder_body "{" expr "}"

   32 string_builder: "start of the string" string_builder_body "end of the string"

   33 reader_character_sequence: STRING_CHARACTER
   34                          | reader_character_sequence STRING_CHARACTER

   35 $@1: %empty

   36 expr_reader: '%' name_in_namespace $@1 reader_character_sequence

   37 options_declaration: "options" annotation_argument_list

   38 require_declaration: "require" require_module

   39 require_module_name: "name"
   40                    | '%' require_module_name
   41                    | require_module_name '.' "name"
   42                    | require_module_name '/' "name"

   43 require_module: require_module_name is_public_module
   44               | require_module_name "as" "name" is_public_module

   45 is_public_module: %empty
   46                 | "public"

   47 expect_declaration: "expect" expect_list

   48 expect_list: expect_error
   49            | expect_list ',' expect_error

   50 expect_error: "integer constant"
   51             | "integer constant" ':' "integer constant"

   52 expression_label: "label" "integer constant" ':'

   53 expression_goto: "goto" "label" "integer constant"
   54                | "goto" expr

   55 elif_or_static_elif: "elif"
   56                    | "static_elif"

   57 expression_else: %empty
   58                | "else" expression_block
   59                | elif_or_static_elif '(' expr ')' expression_block expression_else

   60 if_or_static_if: "if"
   61                | "static_if"

   62 expression_else_one_liner: %empty
   63                          | "else" expression_if_one_liner

   64 expression_if_one_liner: expr
   65                        | expression_return
   66                        | expression_yield
   67                        | expression_break
   68                        | expression_continue

   69 expression_if_then_else: if_or_static_if '(' expr ')' expression_block expression_else
   70                        | expression_if_one_liner "if" '(' expr ')' expression_else_one_liner "end of expression"

   71 expression_for_loop: "for" '(' variable_name_with_pos_list "in" expr_list ')' expression_block

   72 expression_unsafe: "unsafe" expression_block

   73 expression_while_loop: "while" '(' expr ')' expression_block

   74 expression_with: "with" '(' expr ')' expression_block

   75 expression_with_alias: "assume" "name" '=' expr

   76 annotation_argument_value: string_constant
   77                          | "name"
   78                          | "integer constant"
   79                          | "floating point constant"
   80                          | "true"
   81                          | "false"

   82 annotation_argument_value_list: annotation_argument_value
   83                               | annotation_argument_value_list ',' annotation_argument_value

   84 annotation_argument_name: "name"
   85                         | "type"
   86                         | "in"

   87 annotation_argument: annotation_argument_name '=' string_constant
   88                    | annotation_argument_name '=' "name"
   89                    | annotation_argument_name '=' "integer constant"
   90                    | annotation_argument_name '=' "floating point constant"
   91                    | annotation_argument_name '=' "true"
   92                    | annotation_argument_name '=' "false"
   93                    | annotation_argument_name
   94                    | annotation_argument_name '=' '(' annotation_argument_value_list ')'

   95 annotation_argument_list: annotation_argument
   96                         | annotation_argument_list ',' annotation_argument

   97 metadata_argument_list: '@' annotation_argument
   98                       | metadata_argument_list '@' annotation_argument

   99 annotation_declaration_name: name_in_namespace
  100                            | "require"
  101                            | "private"

  102 annotation_declaration_basic: annotation_declaration_name
  103                             | annotation_declaration_name '(' annotation_argument_list ')'

  104 annotation_declaration: annotation_declaration_basic
  105                       | '!' annotation_declaration
  106                       | annotation_declaration "&&" annotation_declaration
  107                       | annotation_declaration "||" annotation_declaration
  108                       | annotation_declaration "^^" annotation_declaration
  109                       | '(' annotation_declaration ')'
  110                       | "|>" annotation_declaration

  111 annotation_list: annotation_declaration
  112                | annotation_list ',' annotation_declaration

  113 optional_annotation_list: %empty
  114                         | '[' annotation_list ']'

  115 optional_function_argument_list: %empty
  116                                | '(' ')'
  117                                | '(' function_argument_list ')'

  118 optional_function_type: %empty
  119                       | ':' type_declaration

  120 function_name: "name"
  121              | "operator" '!'
  122              | "operator" '~'
  123              | "operator" "+="
  124              | "operator" "-="
  125              | "operator" "*="
  126              | "operator" "/="
  127              | "operator" "%="
  128              | "operator" "&="
  129              | "operator" "|="
  130              | "operator" "^="
  131              | "operator" "&&="
  132              | "operator" "||="
  133              | "operator" "^^="
  134              | "operator" "&&"
  135              | "operator" "||"
  136              | "operator" "^^"
  137              | "operator" '+'
  138              | "operator" '-'
  139              | "operator" '*'
  140              | "operator" '/'
  141              | "operator" '%'
  142              | "operator" '<'
  143              | "operator" '>'
  144              | "operator" ".."
  145              | "operator" "=="
  146              | "operator" "!="
  147              | "operator" "<="
  148              | "operator" ">="
  149              | "operator" '&'
  150              | "operator" '|'
  151              | "operator" '^'
  152              | "++" "operator"
  153              | "--" "operator"
  154              | "operator" "++"
  155              | "operator" "--"
  156              | "operator" "<<"
  157              | "operator" ">>"
  158              | "operator" "<<="
  159              | "operator" ">>="
  160              | "operator" "<<<"
  161              | "operator" ">>>"
  162              | "operator" "<<<="
  163              | "operator" ">>>="
  164              | "operator" '[' ']'
  165              | "operator" "?[" ']'
  166              | "operator" '.'
  167              | "operator" "?."
  168              | "operator" '.' "name"
  169              | "operator" '.' "name" ":="
  170              | "operator" "?." "name"
  171              | "operator" ":="
  172              | "operator" "delete"
  173              | "operator" "??"
  174              | "operator" "is"
  175              | "operator" "as"
  176              | "operator" "is" "name"
  177              | "operator" "as" "name"
  178              | "operator" '?' "as"
  179              | "operator" '?' "as" "name"
  180              | "bool"
  181              | "string"
  182              | "int"
  183              | "int2"
  184              | "int3"
  185              | "int4"
  186              | "uint"
  187              | "uint2"
  188              | "uint3"
  189              | "uint4"
  190              | "float"
  191              | "float2"
  192              | "float3"
  193              | "float4"
  194              | "range"
  195              | "urange"
  196              | "range64"
  197              | "urange64"
  198              | "int64"
  199              | "uint64"
  200              | "double"
  201              | "int8"
  202              | "uint8"
  203              | "int16"
  204              | "uint16"

  205 global_function_declaration: optional_annotation_list "def" function_declaration

  206 optional_public_or_private_function: %empty
  207                                    | "private"
  208                                    | "public"

  209 function_declaration_header: function_name optional_function_argument_list optional_function_type

  210 $@2: %empty

  211 function_declaration: optional_public_or_private_function $@2 function_declaration_header expression_block

  212 expression_block: "begin of code block" expressions "end of code block"
  213                 | "begin of code block" expressions "end of code block" "finally" "begin of code block" expressions "end of code block"

  214 expr_call_pipe: expr_call expr_full_block_assumed_piped

  215 expression_any: "end of expression"
  216               | expr_assign "end of expression"
  217               | expression_delete "end of expression"
  218               | expression_let
  219               | expression_while_loop
  220               | expression_unsafe
  221               | expression_with
  222               | expression_with_alias "end of expression"
  223               | expression_for_loop
  224               | expression_break "end of expression"
  225               | expression_continue "end of expression"
  226               | expression_return "end of expression"
  227               | expression_yield "end of expression"
  228               | expression_if_then_else
  229               | expression_try_catch
  230               | expression_label "end of expression"
  231               | expression_goto "end of expression"
  232               | "pass" "end of expression"

  233 expressions: %empty
  234            | expressions expression_any
  235            | expressions error

  236 optional_expr_list: %empty
  237                   | expr_list optional_comma

  238 optional_expr_map_tuple_list: %empty
  239                             | expr_map_tuple_list optional_comma

  240 type_declaration_no_options_list: type_declaration
  241                                 | type_declaration_no_options_list c_or_s type_declaration

  242 name_in_namespace: "name"
  243                  | "name" "::" "name"
  244                  | "::" "name"

  245 expression_delete: "delete" expr
  246                  | "delete" "explicit" expr

  247 $@3: %empty

  248 $@4: %empty

  249 new_type_declaration: '<' $@3 type_declaration '>' $@4

  250 expr_new: "new" structure_type_declaration
  251         | "new" structure_type_declaration '(' optional_expr_list ')'
  252         | "new" new_type_declaration '(' use_initializer ')'
  253         | "new" new_type_declaration '(' use_initializer make_struct_single ')'
  254         | "new" make_decl

  255 expression_break: "break"

  256 expression_continue: "continue"

  257 expression_return: "return"
  258                  | "return" expr
  259                  | "return" "<-" expr

  260 expression_yield: "yield" expr
  261                 | "yield" "<-" expr

  262 expression_try_catch: "try" expression_block "recover" expression_block

  263 kwd_let_var_or_nothing: "let"
  264                       | "var"
  265                       | %empty

  266 kwd_let: "let"
  267        | "var"

  268 optional_in_scope: "inscope"
  269                  | %empty

  270 tuple_expansion: "name"
  271                | tuple_expansion ',' "name"

  272 tuple_expansion_variable_declaration: '(' tuple_expansion ')' ':' type_declaration_no_options copy_or_move_or_clone expr "end of expression"
  273                                     | '(' tuple_expansion ')' optional_ref copy_or_move_or_clone expr "end of expression"

  274 expression_let: kwd_let optional_in_scope let_variable_declaration
  275               | kwd_let optional_in_scope tuple_expansion_variable_declaration

  276 $@5: %empty

  277 $@6: %empty

  278 expr_cast: "cast" '<' $@5 type_declaration_no_options '>' $@6 expr

  279 $@7: %empty

  280 $@8: %empty

  281 expr_cast: "upcast" '<' $@7 type_declaration_no_options '>' $@8 expr

  282 $@9: %empty

  283 $@10: %empty

  284 expr_cast: "reinterpret" '<' $@9 type_declaration_no_options '>' $@10 expr

  285 $@11: %empty

  286 $@12: %empty

  287 expr_type_decl: "type" '<' $@11 type_declaration '>' $@12

  288 expr_type_info: "typeinfo" name_in_namespace '(' expr ')'
  289               | "typeinfo" name_in_namespace '<' "name" '>' '(' expr ')'
  290               | "typeinfo" name_in_namespace '<' "name" c_or_s "name" '>' '(' expr ')'

  291 expr_list: expr
  292          | expr_list ',' expr

  293 block_or_simple_block: expression_block
  294                      | "=>" expr
  295                      | "=>" "<-" expr

  296 block_or_lambda: '$'
  297                | '@'
  298                | '@' '@'

  299 capture_entry: '&' "name"
  300              | '=' "name"
  301              | "<-" "name"
  302              | ":=" "name"
  303              | "name" '(' "name" ')'

  304 capture_list: capture_entry
  305             | capture_list ',' capture_entry

  306 optional_capture_list: %empty
  307                      | "capture" '(' capture_list ')'

  308 expr_full_block: block_or_lambda optional_annotation_list optional_capture_list optional_function_argument_list optional_function_type block_or_simple_block

  309 expr_full_block_assumed_piped: block_or_lambda optional_annotation_list optional_capture_list optional_function_argument_list optional_function_type expression_block
  310                              | "begin of code block" expressions "end of code block"

  311 expr_numeric_const: "integer constant"
  312                   | "unsigned integer constant"
  313                   | "long integer constant"
  314                   | "unsigned long integer constant"
  315                   | "unsigned int8 constant"
  316                   | "floating point constant"
  317                   | "double constant"

  318 expr_assign: expr
  319            | expr '=' expr
  320            | expr "<-" expr
  321            | expr ":=" expr
  322            | expr "&=" expr
  323            | expr "|=" expr
  324            | expr "^=" expr
  325            | expr "&&=" expr
  326            | expr "||=" expr
  327            | expr "^^=" expr
  328            | expr "+=" expr
  329            | expr "-=" expr
  330            | expr "*=" expr
  331            | expr "/=" expr
  332            | expr "%=" expr
  333            | expr "<<=" expr
  334            | expr ">>=" expr
  335            | expr "<<<=" expr
  336            | expr ">>>=" expr

  337 expr_named_call: name_in_namespace '(' '[' make_struct_fields ']' ')'
  338                | name_in_namespace '(' expr_list ',' '[' make_struct_fields ']' ')'

  339 expr_method_call: expr "->" "name" '(' ')'
  340                 | expr "->" "name" '(' expr_list ')'

  341 func_addr_name: name_in_namespace
  342               | "$i" '(' expr ')'

  343 func_addr_expr: '@' '@' func_addr_name

  344 $@13: %empty

  345 $@14: %empty

  346 func_addr_expr: '@' '@' '<' $@13 type_declaration_no_options '>' $@14 func_addr_name

  347 $@15: %empty

  348 $@16: %empty

  349 func_addr_expr: '@' '@' '<' $@15 optional_function_argument_list optional_function_type '>' $@16 func_addr_name

  350 expr_field: expr '.' "name"
  351           | expr '.' '.' "name"
  352           | expr '.' "name" '(' ')'
  353           | expr '.' "name" '(' expr_list ')'
  354           | expr '.' basic_type_declaration '(' ')'
  355           | expr '.' basic_type_declaration '(' expr_list ')'

  356 $@17: %empty

  357 $@18: %empty

  358 expr_field: expr '.' $@17 error $@18

  359 expr_call: name_in_namespace '(' ')'
  360          | name_in_namespace '(' "uninitialized" ')'
  361          | name_in_namespace '(' make_struct_single ')'
  362          | name_in_namespace '(' "uninitialized" make_struct_single ')'
  363          | name_in_namespace '(' expr_list ')'
  364          | basic_type_declaration '(' ')'
  365          | basic_type_declaration '(' expr_list ')'

  366 expr: "null"
  367     | name_in_namespace
  368     | expr_numeric_const
  369     | expr_reader
  370     | string_builder
  371     | make_decl
  372     | "true"
  373     | "false"
  374     | expr_field
  375     | expr_mtag
  376     | '!' expr
  377     | '~' expr
  378     | '+' expr
  379     | '-' expr
  380     | expr "<<" expr
  381     | expr ">>" expr
  382     | expr "<<<" expr
  383     | expr ">>>" expr
  384     | expr '+' expr
  385     | expr '-' expr
  386     | expr '*' expr
  387     | expr '/' expr
  388     | expr '%' expr
  389     | expr '<' expr
  390     | expr '>' expr
  391     | expr "==" expr
  392     | expr "!=" expr
  393     | expr "<=" expr
  394     | expr ">=" expr
  395     | expr '&' expr
  396     | expr '|' expr
  397     | expr '^' expr
  398     | expr "&&" expr
  399     | expr "||" expr
  400     | expr "^^" expr
  401     | expr ".." expr
  402     | "++" expr
  403     | "--" expr
  404     | expr "++"
  405     | expr "--"
  406     | '(' expr_list optional_comma ')'
  407     | expr '[' expr ']'
  408     | expr '.' '[' expr ']'
  409     | expr "?[" expr ']'
  410     | expr '.' "?[" expr ']'
  411     | expr "?." "name"
  412     | expr '.' "?." "name"
  413     | func_addr_expr
  414     | expr_call
  415     | '*' expr
  416     | "deref" '(' expr ')'
  417     | "addr" '(' expr ')'
  418     | "generator" '<' type_declaration_no_options '>' optional_capture_list '(' ')'
  419     | "generator" '<' type_declaration_no_options '>' optional_capture_list '(' expr ')'
  420     | "generator" '<' type_declaration_no_options '>' optional_capture_list expression_block
  421     | expr "??" expr
  422     | expr '?' expr ':' expr

  423 $@19: %empty

  424 $@20: %empty

  425 expr: expr "is" "type" '<' $@19 type_declaration_no_options '>' $@20
  426     | expr "is" basic_type_declaration
  427     | expr "is" "name"
  428     | expr "as" "name"

  429 $@21: %empty

  430 $@22: %empty

  431 expr: expr "as" "type" '<' $@21 type_declaration '>' $@22
  432     | expr "as" basic_type_declaration
  433     | expr '?' "as" "name"

  434 $@23: %empty

  435 $@24: %empty

  436 expr: expr '?' "as" "type" '<' $@23 type_declaration '>' $@24
  437     | expr '?' "as" basic_type_declaration
  438     | expr_type_info
  439     | expr_type_decl
  440     | expr_cast
  441     | expr_new
  442     | expr_method_call
  443     | expr_named_call
  444     | expr_full_block
  445     | expr "<|" expr
  446     | expr "|>" expr
  447     | expr "|>" basic_type_declaration
  448     | expr_call_pipe
  449     | "unsafe" '(' expr ')'

  450 expr_mtag: "$$" '(' expr ')'
  451          | "$i" '(' expr ')'
  452          | "$v" '(' expr ')'
  453          | "$b" '(' expr ')'
  454          | "$a" '(' expr ')'
  455          | "..."
  456          | "$c" '(' expr ')' '(' ')'
  457          | "$c" '(' expr ')' '(' expr_list ')'
  458          | expr '.' "$f" '(' expr ')'
  459          | expr "?." "$f" '(' expr ')'
  460          | expr '.' '.' "$f" '(' expr ')'
  461          | expr '.' "?." "$f" '(' expr ')'
  462          | expr "as" "$f" '(' expr ')'
  463          | expr '?' "as" "$f" '(' expr ')'
  464          | expr "is" "$f" '(' expr ')'
  465          | '@' '@' "$c" '(' expr ')'

  466 optional_field_annotation: %empty
  467                          | metadata_argument_list

  468 optional_override: %empty
  469                  | "override"
  470                  | "sealed"

  471 optional_constant: %empty
  472                  | "const"

  473 optional_public_or_private_member_variable: %empty
  474                                           | "public"
  475                                           | "private"

  476 optional_static_member_variable: %empty
  477                                | "static"

  478 structure_variable_declaration: optional_field_annotation optional_static_member_variable optional_override optional_public_or_private_member_variable variable_declaration

  479 struct_variable_declaration_list: %empty

  480 $@25: %empty

  481 struct_variable_declaration_list: struct_variable_declaration_list $@25 structure_variable_declaration "end of expression"

  482 $@26: %empty

  483 struct_variable_declaration_list: struct_variable_declaration_list optional_annotation_list "def" optional_public_or_private_member_variable "abstract" optional_constant $@26 function_declaration_header "end of expression"

  484 $@27: %empty

  485 struct_variable_declaration_list: struct_variable_declaration_list optional_annotation_list "def" optional_public_or_private_member_variable optional_static_member_variable optional_override optional_constant $@27 function_declaration_header expression_block

  486 function_argument_declaration: optional_field_annotation kwd_let_var_or_nothing variable_declaration
  487                              | "$a" '(' expr ')'

  488 function_argument_list: function_argument_declaration
  489                       | function_argument_list "end of expression" function_argument_declaration

  490 tuple_type: type_declaration
  491           | "name" ':' type_declaration

  492 tuple_type_list: tuple_type
  493                | tuple_type_list c_or_s tuple_type

  494 tuple_alias_type_list: %empty
  495                      | tuple_alias_type_list c_or_s
  496                      | tuple_alias_type_list tuple_type c_or_s

  497 variant_type: "name" ':' type_declaration

  498 variant_type_list: variant_type
  499                  | variant_type_list c_or_s variant_type

  500 variant_alias_type_list: %empty
  501                        | variant_alias_type_list c_or_s
  502                        | variant_alias_type_list variant_type c_or_s

  503 copy_or_move: '='
  504             | "<-"

  505 variable_declaration: variable_name_with_pos_list
  506                     | variable_name_with_pos_list '&'
  507                     | variable_name_with_pos_list ':' type_declaration
  508                     | variable_name_with_pos_list ':' type_declaration copy_or_move expr
  509                     | variable_name_with_pos_list copy_or_move expr

  510 copy_or_move_or_clone: '='
  511                      | "<-"
  512                      | ":="

  513 optional_ref: %empty
  514             | '&'

  515 let_variable_name_with_pos_list: "name"
  516                                | "$i" '(' expr ')'
  517                                | "name" "aka" "name"
  518                                | let_variable_name_with_pos_list ',' "name"
  519                                | let_variable_name_with_pos_list ',' "name" "aka" "name"

  520 global_let_variable_name_with_pos_list: "name"
  521                                       | global_let_variable_name_with_pos_list ',' "name"

  522 let_variable_declaration: let_variable_name_with_pos_list ':' type_declaration_no_options "end of expression"
  523                         | let_variable_name_with_pos_list ':' type_declaration_no_options copy_or_move_or_clone expr "end of expression"
  524                         | let_variable_name_with_pos_list optional_ref copy_or_move_or_clone expr "end of expression"

  525 global_let_variable_declaration: global_let_variable_name_with_pos_list ':' type_declaration_no_options "end of expression"
  526                                | global_let_variable_name_with_pos_list ':' type_declaration_no_options copy_or_move_or_clone expr "end of expression"
  527                                | global_let_variable_name_with_pos_list optional_ref copy_or_move_or_clone expr "end of expression"

  528 optional_shared: %empty
  529                | "shared"

  530 optional_public_or_private_variable: %empty
  531                                    | "private"
  532                                    | "public"

  533 $@28: %empty

  534 global_let: kwd_let optional_shared optional_public_or_private_variable $@28 optional_field_annotation global_let_variable_declaration

  535 enum_expression: "name"
  536                | "name" '=' expr

  537 enum_list: %empty
  538          | enum_expression
  539          | enum_list ',' enum_expression

  540 optional_public_or_private_alias: %empty
  541                                 | "private"
  542                                 | "public"

  543 $@29: %empty

  544 single_alias: optional_public_or_private_alias "name" $@29 '=' type_declaration

  545 alias_declaration: "typedef" single_alias "end of expression"

  546 optional_public_or_private_enum: %empty
  547                                | "private"
  548                                | "public"

  549 enum_name: "name"

  550 optional_enum_basic_type_declaration: %empty
  551                                     | ':' enum_basic_type_declaration

  552 $@30: %empty

  553 $@31: %empty

  554 enum_declaration: optional_annotation_list "enum" optional_public_or_private_enum enum_name optional_enum_basic_type_declaration "begin of code block" $@30 enum_list optional_comma $@31 "end of code block"

  555 optional_structure_parent: %empty
  556                          | ':' name_in_namespace

  557 optional_sealed: %empty
  558                | "sealed"

  559 structure_name: optional_sealed "name" optional_structure_parent

  560 class_or_struct: "class"
  561                | "struct"

  562 optional_public_or_private_structure: %empty
  563                                     | "private"
  564                                     | "public"

  565 optional_struct_variable_declaration_list: %empty
  566                                          | "begin of code block" struct_variable_declaration_list "end of code block"

  567 $@32: %empty

  568 $@33: %empty

  569 structure_declaration: optional_annotation_list class_or_struct optional_public_or_private_structure $@32 structure_name $@33 optional_struct_variable_declaration_list

  570 variable_name_with_pos_list: "name"
  571                            | "$i" '(' expr ')'
  572                            | "name" "aka" "name"
  573                            | variable_name_with_pos_list ',' "name"
  574                            | variable_name_with_pos_list ',' "name" "aka" "name"

  575 basic_type_declaration: "bool"
  576                       | "string"
  577                       | "int"
  578                       | "int8"
  579                       | "int16"
  580                       | "int64"
  581                       | "int2"
  582                       | "int3"
  583                       | "int4"
  584                       | "uint"
  585                       | "uint8"
  586                       | "uint16"
  587                       | "uint64"
  588                       | "uint2"
  589                       | "uint3"
  590                       | "uint4"
  591                       | "float"
  592                       | "float2"
  593                       | "float3"
  594                       | "float4"
  595                       | "void"
  596                       | "range"
  597                       | "urange"
  598                       | "range64"
  599                       | "urange64"
  600                       | "double"
  601                       | "bitfield"

  602 enum_basic_type_declaration: "int"
  603                            | "int8"
  604                            | "int16"
  605                            | "uint"
  606                            | "uint8"
  607                            | "uint16"
  608                            | "int64"
  609                            | "uint64"

  610 structure_type_declaration: name_in_namespace

  611 auto_type_declaration: "auto"
  612                      | "auto" '(' "name" ')'
  613                      | "$t" '(' expr ')'

  614 bitfield_bits: "name"
  615              | bitfield_bits "end of expression" "name"

  616 bitfield_alias_bits: %empty
  617                    | "name"
  618                    | bitfield_alias_bits ',' "name"

  619 $@34: %empty

  620 $@35: %empty

  621 bitfield_type_declaration: "bitfield" '<' $@34 bitfield_bits '>' $@35

  622 c_or_s: ','
  623       | "end of expression"

  624 table_type_pair: type_declaration
  625                | type_declaration c_or_s type_declaration

  626 dim_list: '[' expr ']'
  627         | '[' ']'
  628         | dim_list '[' expr ']'
  629         | dim_list '[' ']'

  630 type_declaration_no_options: type_declaration_no_options_no_dim
  631                            | type_declaration_no_options_no_dim dim_list

  632 type_declaration_no_options_no_dim: basic_type_declaration
  633                                   | auto_type_declaration
  634                                   | bitfield_type_declaration
  635                                   | structure_type_declaration

  636 $@36: %empty

  637 $@37: %empty

  638 type_declaration_no_options_no_dim: "type" '<' $@36 type_declaration '>' $@37
  639                                   | "typedecl" '(' expr ')'
  640                                   | '$' name_in_namespace '(' optional_expr_list ')'

  641 $@38: %empty

  642 type_declaration_no_options_no_dim: '$' name_in_namespace '<' $@38 type_declaration_no_options_list '>' '(' optional_expr_list ')'
  643                                   | type_declaration_no_options_no_dim '-' '[' ']'
  644                                   | type_declaration_no_options_no_dim "explicit"
  645                                   | type_declaration_no_options_no_dim "const"
  646                                   | type_declaration_no_options_no_dim '-' "const"
  647                                   | type_declaration_no_options_no_dim '&'
  648                                   | type_declaration_no_options_no_dim '-' '&'
  649                                   | type_declaration_no_options_no_dim '#'
  650                                   | type_declaration_no_options_no_dim "implicit"
  651                                   | type_declaration_no_options_no_dim '-' '#'
  652                                   | type_declaration_no_options_no_dim "==" "const"
  653                                   | type_declaration_no_options_no_dim "==" '&'
  654                                   | type_declaration_no_options_no_dim '?'

  655 $@39: %empty

  656 $@40: %empty

  657 type_declaration_no_options_no_dim: "smart_ptr" '<' $@39 type_declaration '>' $@40
  658                                   | type_declaration_no_options_no_dim "??"

  659 $@41: %empty

  660 $@42: %empty

  661 type_declaration_no_options_no_dim: "array" '<' $@41 type_declaration '>' $@42

  662 $@43: %empty

  663 $@44: %empty

  664 type_declaration_no_options_no_dim: "table" '<' $@43 table_type_pair '>' $@44

  665 $@45: %empty

  666 $@46: %empty

  667 type_declaration_no_options_no_dim: "iterator" '<' $@45 type_declaration '>' $@46
  668                                   | "block"

  669 $@47: %empty

  670 $@48: %empty

  671 type_declaration_no_options_no_dim: "block" '<' $@47 type_declaration '>' $@48

  672 $@49: %empty

  673 $@50: %empty

  674 type_declaration_no_options_no_dim: "block" '<' $@49 optional_function_argument_list optional_function_type '>' $@50
  675                                   | "function"

  676 $@51: %empty

  677 $@52: %empty

  678 type_declaration_no_options_no_dim: "function" '<' $@51 type_declaration '>' $@52

  679 $@53: %empty

  680 $@54: %empty

  681 type_declaration_no_options_no_dim: "function" '<' $@53 optional_function_argument_list optional_function_type '>' $@54
  682                                   | "lambda"

  683 $@55: %empty

  684 $@56: %empty

  685 type_declaration_no_options_no_dim: "lambda" '<' $@55 type_declaration '>' $@56

  686 $@57: %empty

  687 $@58: %empty

  688 type_declaration_no_options_no_dim: "lambda" '<' $@57 optional_function_argument_list optional_function_type '>' $@58

  689 $@59: %empty

  690 $@60: %empty

  691 type_declaration_no_options_no_dim: "tuple" '<' $@59 tuple_type_list '>' $@60

  692 $@61: %empty

  693 $@62: %empty

  694 type_declaration_no_options_no_dim: "variant" '<' $@61 variant_type_list '>' $@62

  695 type_declaration: type_declaration_no_options
  696                 | type_declaration '|' type_declaration_no_options
  697                 | type_declaration '|' '#'

  698 $@63: %empty

  699 $@64: %empty

  700 $@65: %empty

  701 tuple_alias_declaration: "tuple" optional_public_or_private_alias "name" $@63 "begin of code block" $@64 tuple_alias_type_list $@65 "end of code block"

  702 $@66: %empty

  703 $@67: %empty

  704 $@68: %empty

  705 variant_alias_declaration: "variant" optional_public_or_private_alias "name" $@66 "begin of code block" $@67 variant_alias_type_list $@68 "end of code block"

  706 $@69: %empty

  707 $@70: %empty

  708 $@71: %empty

  709 bitfield_alias_declaration: "bitfield" optional_public_or_private_alias "name" $@69 "begin of code block" $@70 bitfield_alias_bits optional_comma $@71 "end of code block"

  710 make_decl: make_struct_decl
  711          | make_dim_decl
  712          | make_table_decl
  713          | array_comprehension
  714          | make_tuple_call

  715 make_struct_fields: "name" copy_or_move expr
  716                   | "name" ":=" expr
  717                   | make_struct_fields ',' "name" copy_or_move expr
  718                   | make_struct_fields ',' "name" ":=" expr
  719                   | "$f" '(' expr ')' copy_or_move expr
  720                   | "$f" '(' expr ')' ":=" expr
  721                   | make_struct_fields ',' "$f" '(' expr ')' copy_or_move expr
  722                   | make_struct_fields ',' "$f" '(' expr ')' ":=" expr

  723 make_variant_dim: make_struct_fields

  724 make_struct_single: make_struct_fields

  725 make_struct_dim_list: '(' make_struct_fields ')'
  726                     | make_struct_dim_list ',' '(' make_struct_fields ')'

  727 make_struct_dim_decl: make_struct_fields
  728                     | make_struct_dim_list optional_comma

  729 optional_make_struct_dim_decl: make_struct_dim_decl
  730                              | %empty

  731 use_initializer: %empty
  732                | "uninitialized"

  733 $@72: %empty

  734 $@73: %empty

  735 make_struct_decl: "struct" '<' $@72 type_declaration_no_options '>' $@73 '(' use_initializer optional_make_struct_dim_decl ')'

  736 $@74: %empty

  737 $@75: %empty

  738 make_struct_decl: "class" '<' $@74 type_declaration_no_options '>' $@75 '(' use_initializer optional_make_struct_dim_decl ')'

  739 $@76: %empty

  740 $@77: %empty

  741 make_struct_decl: "variant" '<' $@76 type_declaration_no_options '>' $@77 '(' make_variant_dim ')'

  742 $@78: %empty

  743 $@79: %empty

  744 make_struct_decl: "default" '<' $@78 type_declaration_no_options '>' $@79 use_initializer

  745 make_map_tuple: expr "=>" expr
  746               | expr

  747 make_tuple_call: "tuple" '(' expr_list optional_comma ')'

  748 $@80: %empty

  749 $@81: %empty

  750 make_tuple_call: "tuple" '<' $@80 type_declaration_no_options '>' $@81 '(' use_initializer optional_make_struct_dim_decl ')'

  751 make_dim_decl: '[' expr_list optional_comma ']'

  752 $@82: %empty

  753 $@83: %empty

  754 make_dim_decl: "array" "struct" '<' $@82 type_declaration_no_options '>' $@83 '(' use_initializer optional_make_struct_dim_decl ')'

  755 $@84: %empty

  756 $@85: %empty

  757 make_dim_decl: "array" "tuple" '<' $@84 type_declaration_no_options '>' $@85 '(' use_initializer optional_make_struct_dim_decl ')'

  758 $@86: %empty

  759 $@87: %empty

  760 make_dim_decl: "array" "variant" '<' $@86 type_declaration_no_options '>' $@87 '(' make_variant_dim ')'
  761              | "array" '(' expr_list optional_comma ')'

  762 $@88: %empty

  763 $@89: %empty

  764 make_dim_decl: "array" '<' $@88 type_declaration_no_options '>' $@89 '(' optional_expr_list ')'
  765              | "fixed_array" '(' expr_list optional_comma ')'

  766 $@90: %empty

  767 $@91: %empty

  768 make_dim_decl: "fixed_array" '<' $@90 type_declaration_no_options '>' $@91 '(' expr_list optional_comma ')'

  769 expr_map_tuple_list: make_map_tuple
  770                    | expr_map_tuple_list ',' make_map_tuple

  771 make_table_decl: "begin of code block" expr_map_tuple_list optional_comma "end of code block"
  772                | "table" '(' expr_map_tuple_list optional_comma ')'
  773                | "table" '<' type_declaration_no_options '>' '(' optional_expr_map_tuple_list ')'
  774                | "table" '<' type_declaration_no_options c_or_s type_declaration_no_options '>' '(' optional_expr_map_tuple_list ')'

  775 array_comprehension_where: %empty
  776                          | "end of expression" "where" expr

  777 optional_comma: %empty
  778               | ','

  779 array_comprehension: '[' "for" variable_name_with_pos_list "in" expr_list "end of expression" expr array_comprehension_where ']'
  780                    | '[' "iterator" "for" variable_name_with_pos_list "in" expr_list "end of expression" expr array_comprehension_where ']'
  781                    | "begin of code block" "for" variable_name_with_pos_list "in" expr_list "end of expression" make_map_tuple array_comprehension_where "end of code block"


Terminals, with rules where they appear

    $end (0) 0
    '!' (33) 105 121 376
    '#' (35) 649 651 697
    '$' (36) 20 296 640 642
    '%' (37) 36 40 141 388
    '&' (38) 149 299 395 506 514 647 648 653
    '(' (40) 59 69 70 71 73 74 94 103 109 116 117 251 252 253 272 273 288 289 290 303 307 337 338 339 340 342 352 353 354 355 359 360 361 362 363 364 365 406 416 417 418 419 449 450 451 452 453 454 456 457 458 459 460 461 462 463 464 465 487 516 571 612 613 639 640 642 719 720 721 722 725 726 735 738 741 747 750 754 757 760 761 764 765 768 772 773 774
    ')' (41) 59 69 70 71 73 74 94 103 109 116 117 251 252 253 272 273 288 289 290 303 307 337 338 339 340 342 352 353 354 355 359 360 361 362 363 364 365 406 416 417 418 419 449 450 451 452 453 454 456 457 458 459 460 461 462 463 464 465 487 516 571 612 613 639 640 642 719 720 721 722 725 726 735 738 741 747 750 754 757 760 761 764 765 768 772 773 774
    '*' (42) 139 386 415
    '+' (43) 137 378 384
    ',' (44) 49 83 96 112 271 292 305 338 518 519 521 539 573 574 618 622 717 718 721 722 726 770 778
    '-' (45) 138 379 385 643 646 648 651
    '.' (46) 41 166 168 169 350 351 352 353 354 355 358 408 410 412 458 460 461
    '/' (47) 42 140 387
    ':' (58) 51 52 119 272 422 491 497 507 508 522 523 525 526 551 556
    "end of expression" (59) 9 15 16 70 215 216 217 222 224 225 226 227 230 231 232 272 273 481 483 489 522 523 524 525 526 527 545 615 623 776 779 780 781
    '<' (60) 142 249 278 281 284 287 289 290 346 349 389 418 419 420 425 431 436 621 638 642 657 661 664 667 671 674 678 681 685 688 691 694 735 738 741 744 750 754 757 760 764 768 773 774
    '=' (61) 75 87 88 89 90 91 92 94 300 319 503 510 536 544
    '>' (62) 143 249 278 281 284 287 289 290 346 349 390 418 419 420 425 431 436 621 638 642 657 661 664 667 671 674 678 681 685 688 691 694 735 738 741 744 750 754 757 760 764 768 773 774
    '?' (63) 178 179 422 433 436 437 463 654
    '@' (64) 97 98 297 298 343 346 349 465
    '[' (91) 114 164 337 338 407 408 626 627 628 629 643 751 779 780
    ']' (93) 114 164 165 337 338 407 408 409 410 626 627 628 629 643 751 779 780
    '^' (94) 151 397
    "begin of code block" (123) 212 213 310 554 566 701 705 709 771 781
    '|' (124) 150 396 696 697
    "end of code block" (125) 212 213 310 554 566 701 705 709 771 781
    '~' (126) 122 377
    error (256) 235 358
    "lexer error" (258)
    "capture" (259) 307
    "struct" (260) 561 735 754
    "class" (261) 560 738
    "let" (262) 263 266
    "def" (263) 205 483 485
    "while" (264) 73
    "if" (265) 60 70
    "static_if" (266) 61
    "else" (267) 58 63
    "for" (268) 71 779 780 781
    "recover" (269) 262
    "true" (270) 80 91 372
    "false" (271) 81 92 373
    "new" (272) 250 251 252 253 254
    "typeinfo" (273) 288 289 290
    "type" (274) 85 287 425 431 436 638
    "in" (275) 71 86 779 780 781
    "is" (276) 174 176 425 426 427 464
    "as" (277) 44 175 177 178 179 428 431 432 433 436 437 462 463
    "elif" (278) 55
    "static_elif" (279) 56
    "array" (280) 661 754 757 760 761 764
    "return" (281) 257 258 259
    "null" (282) 366
    "break" (283) 255
    "try" (284) 262
    "options" (285) 37
    "table" (286) 664 772 773 774
    "expect" (287) 47
    "const" (288) 472 645 646 652
    "require" (289) 38 100
    "operator" (290) 121 122 123 124 125 126 127 128 129 130 131 132 133 134 135 136 137 138 139 140 141 142 143 144 145 146 147 148 149 150 151 152 153 154 155 156 157 158 159 160 161 162 163 164 165 166 167 168 169 170 171 172 173 174 175 176 177 178 179
    "enum" (291) 554
    "finally" (292) 213
    "delete" (293) 172 245 246
    "deref" (294) 416
    "typedef" (295) 545
    "typedecl" (296) 639
    "with" (297) 74
    "aka" (298) 517 519 572 574
    "assume" (299) 75
    "cast" (300) 278
    "override" (301) 469
    "abstract" (302) 483
    "upcast" (303) 281
    "iterator" (304) 667 780
    "var" (305) 264 267
    "addr" (306) 417
    "continue" (307) 256
    "where" (308) 776
    "pass" (309) 232
    "reinterpret" (310) 284
    "module" (311) 22
    "public" (312) 18 46 208 474 532 542 548 564
    "label" (313) 52 53
    "goto" (314) 53 54
    "implicit" (315) 650
    "explicit" (316) 246 644
    "shared" (317) 529
    "private" (318) 19 101 207 475 531 541 547 563
    "smart_ptr" (319) 657
    "unsafe" (320) 72 449
    "inscope" (321) 268
    "static" (322) 477
    "fixed_array" (323) 765 768
    "default" (324) 744
    "uninitialized" (325) 360 362 732
    "bool" (326) 180 575
    "void" (327) 595
    "string" (328) 181 576
    "auto" (329) 611 612
    "int" (330) 182 577 602
    "int2" (331) 183 581
    "int3" (332) 184 582
    "int4" (333) 185 583
    "uint" (334) 186 584 605
    "bitfield" (335) 601 621 709
    "uint2" (336) 187 588
    "uint3" (337) 188 589
    "uint4" (338) 189 590
    "float" (339) 190 591
    "float2" (340) 191 592
    "float3" (341) 192 593
    "float4" (342) 193 594
    "range" (343) 194 596
    "urange" (344) 195 597
    "range64" (345) 196 598
    "urange64" (346) 197 599
    "block" (347) 668 671 674
    "int64" (348) 198 580 608
    "uint64" (349) 199 587 609
    "double" (350) 200 600
    "function" (351) 675 678 681
    "lambda" (352) 682 685 688
    "int8" (353) 201 578 603
    "uint8" (354) 202 585 606
    "int16" (355) 203 579 604
    "uint16" (356) 204 586 607
    "tuple" (357) 691 701 747 750 757
    "variant" (358) 694 705 741 760
    "generator" (359) 418 419 420
    "yield" (360) 260 261
    "sealed" (361) 470 558
    "+=" (362) 123 328
    "-=" (363) 124 329
    "/=" (364) 126 331
    "*=" (365) 125 330
    "%=" (366) 127 332
    "&=" (367) 128 322
    "|=" (368) 129 323
    "^=" (369) 130 324
    "<<" (370) 156 380
    ">>" (371) 157 381
    "++" (372) 152 154 402 404
    "--" (373) 153 155 403 405
    "<=" (374) 147 393
    "<<=" (375) 158 333
    ">>=" (376) 159 334
    ">=" (377) 148 394
    "==" (378) 145 391 652 653
    "!=" (379) 146 392
    "->" (380) 339 340
    "<-" (381) 259 261 295 301 320 504 511
    "??" (382) 173 421 658
    "?." (383) 167 170 411 412 459 461
    "?[" (384) 165 409 410
    "<|" (385) 445
    "|>" (386) 110 446 447
    ":=" (387) 169 171 302 321 512 716 718 720 722
    "<<<" (388) 160 382
    ">>>" (389) 161 383
    "<<<=" (390) 162 335
    ">>>=" (391) 163 336
    "=>" (392) 294 295 745
    "::" (393) 243 244
    "&&" (394) 106 134 398
    "||" (395) 107 135 399
    "^^" (396) 108 136 400
    "&&=" (397) 131 325
    "||=" (398) 132 326
    "^^=" (399) 133 327
    ".." (400) 144 401
    "$$" (401) 450
    "$i" (402) 342 451 516 571
    "$v" (403) 452
    "$b" (404) 453
    "$a" (405) 454 487
    "$t" (406) 613
    "$c" (407) 456 457 465
    "$f" (408) 458 459 460 461 462 463 464 719 720 721 722
    "..." (409) 455
    "integer constant" <i> (410) 50 51 52 53 78 89 311
    "long integer constant" <i64> (411) 313
    "unsigned integer constant" <ui> (412) 312
    "unsigned long integer constant" <ui64> (413) 314
    "unsigned int8 constant" <ui> (414) 315
    "floating point constant" <fd> (415) 79 90 316
    "double constant" <d> (416) 317
    "name" <s> (417) 21 39 41 42 44 75 77 84 88 120 168 169 170 176 177 179 242 243 244 270 271 289 290 299 300 301 302 303 339 340 350 351 352 353 411 412 427 428 433 491 497 515 517 518 519 520 521 535 536 544 549 559 570 572 573 574 612 614 615 617 618 701 705 709 715 716 717 718
    "start of the string" (418) 27 28 32
    STRING_CHARACTER <ch> (419) 23 25 33 34
    STRING_CHARACTER_ESC (420) 24 26
    "end of the string" (421) 27 28 32
    "{" (422) 31
    "}" (423) 31
    "end of failed eader macro" (424)
    ";}}" (425)
    ";}]" (426)
    ";]]" (427)
    ",]]" (428)
    ",}]" (429)
    UNARY_MINUS (430)
    UNARY_PLUS (431)
    PRE_INC (432)
    PRE_DEC (433)
    LLPIPE (434)
    POST_INC (435)
    POST_DEC (436)
    DEREF (437)


Nonterminals, with rules where they appear

    $accept (210)
        on left: 0
    program (211)
        on left: 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15
        on right: 0 2 3 4 5 6 7 8 9 10 11 12 13 14 15
    top_level_reader_macro (212)
        on left: 16
        on right: 14
    optional_public_or_private_module <b> (213)
        on left: 17 18 19
        on right: 22
    module_name <s> (214)
        on left: 20 21
        on right: 22
    module_declaration (215)
        on left: 22
        on right: 2
    character_sequence <s> (216)
        on left: 23 24 25 26
        on right: 25 26 27 30
    string_constant <s> (217)
        on left: 27 28
        on right: 76 87
    string_builder_body <pExpression> (218)
        on left: 29 30 31
        on right: 30 31 32
    string_builder <pExpression> (219)
        on left: 32
        on right: 370
    reader_character_sequence (220)
        on left: 33 34
        on right: 34 36
    expr_reader <pExpression> (221)
        on left: 36
        on right: 16 369
    $@1 (222)
        on left: 35
        on right: 36
    options_declaration (223)
        on left: 37
        on right: 9
    require_declaration (224)
        on left: 38
        on right: 8
    require_module_name <s> (225)
        on left: 39 40 41 42
        on right: 40 41 42 43 44
    require_module (226)
        on left: 43 44
        on right: 38
    is_public_module <b> (227)
        on left: 45 46
        on right: 43 44
    expect_declaration (228)
        on left: 47
        on right: 7
    expect_list (229)
        on left: 48 49
        on right: 47 49
    expect_error (230)
        on left: 50 51
        on right: 48 49
    expression_label <pExpression> (231)
        on left: 52
        on right: 230
    expression_goto <pExpression> (232)
        on left: 53 54
        on right: 231
    elif_or_static_elif <b> (233)
        on left: 55 56
        on right: 59
    expression_else <pExpression> (234)
        on left: 57 58 59
        on right: 59 69
    if_or_static_if <b> (235)
        on left: 60 61
        on right: 69
    expression_else_one_liner <pExpression> (236)
        on left: 62 63
        on right: 70
    expression_if_one_liner <pExpression> (237)
        on left: 64 65 66 67 68
        on right: 63 70
    expression_if_then_else <pExpression> (238)
        on left: 69 70
        on right: 228
    expression_for_loop <pExpression> (239)
        on left: 71
        on right: 223
    expression_unsafe <pExpression> (240)
        on left: 72
        on right: 220
    expression_while_loop <pExpression> (241)
        on left: 73
        on right: 219
    expression_with <pExpression> (242)
        on left: 74
        on right: 221
    expression_with_alias <pExpression> (243)
        on left: 75
        on right: 222
    annotation_argument_value <aa> (244)
        on left: 76 77 78 79 80 81
        on right: 82 83
    annotation_argument_value_list <aaList> (245)
        on left: 82 83
        on right: 83 94
    annotation_argument_name <s> (246)
        on left: 84 85 86
        on right: 87 88 89 90 91 92 93 94
    annotation_argument <aa> (247)
        on left: 87 88 89 90 91 92 93 94
        on right: 95 96 97 98
    annotation_argument_list <aaList> (248)
        on left: 95 96
        on right: 37 96 103
    metadata_argument_list <aaList> (249)
        on left: 97 98
        on right: 98 467
    annotation_declaration_name <s> (250)
        on left: 99 100 101
        on right: 102 103
    annotation_declaration_basic <fa> (251)
        on left: 102 103
        on right: 104
    annotation_declaration <fa> (252)
        on left: 104 105 106 107 108 109 110
        on right: 105 106 107 108 109 110 111 112
    annotation_list <faList> (253)
        on left: 111 112
        on right: 112 114
    optional_annotation_list <faList> (254)
        on left: 113 114
        on right: 205 308 309 483 485 554 569
    optional_function_argument_list <pVarDeclList> (255)
        on left: 115 116 117
        on right: 209 308 309 349 674 681 688
    optional_function_type <pTypeDecl> (256)
        on left: 118 119
        on right: 209 308 309 349 674 681 688
    function_name <s> (257)
        on left: 120 121 122 123 124 125 126 127 128 129 130 131 132 133 134 135 136 137 138 139 140 141 142 143 144 145 146 147 148 149 150 151 152 153 154 155 156 157 158 159 160 161 162 163 164 165 166 167 168 169 170 171 172 173 174 175 176 177 178 179 180 181 182 183 184 185 186 187 188 189 190 191 192 193 194 195 196 197 198 199 200 201 202 203 204
        on right: 209
    global_function_declaration (258)
        on left: 205
        on right: 6
    optional_public_or_private_function <b> (259)
        on left: 206 207 208
        on right: 211
    function_declaration_header <pFuncDecl> (260)
        on left: 209
        on right: 211 483 485
    function_declaration <pFuncDecl> (261)
        on left: 211
        on right: 205
    $@2 (262)
        on left: 210
        on right: 211
    expression_block <pExpression> (263)
        on left: 212 213
        on right: 58 59 69 71 72 73 74 211 262 293 309 420 485
    expr_call_pipe <pExpression> (264)
        on left: 214
        on right: 448
    expression_any <pExpression> (265)
        on left: 215 216 217 218 219 220 221 222 223 224 225 226 227 228 229 230 231 232
        on right: 234
    expressions <pExpression> (266)
        on left: 233 234 235
        on right: 212 213 234 235 310
    optional_expr_list <pExpression> (267)
        on left: 236 237
        on right: 251 640 642 764
    optional_expr_map_tuple_list <pExpression> (268)
        on left: 238 239
        on right: 773 774
    type_declaration_no_options_list <pTypeDeclList> (269)
        on left: 240 241
        on right: 241 642
    name_in_namespace <s> (270)
        on left: 242 243 244
        on right: 36 99 288 289 290 337 338 341 359 360 361 362 363 367 556 610 640 642
    expression_delete <pExpression> (271)
        on left: 245 246
        on right: 217
    new_type_declaration <pTypeDecl> (272)
        on left: 249
        on right: 252 253
    $@3 (273)
        on left: 247
        on right: 249
    $@4 (274)
        on left: 248
        on right: 249
    expr_new <pExpression> (275)
        on left: 250 251 252 253 254
        on right: 441
    expression_break <pExpression> (276)
        on left: 255
        on right: 67 224
    expression_continue <pExpression> (277)
        on left: 256
        on right: 68 225
    expression_return <pExpression> (278)
        on left: 257 258 259
        on right: 65 226
    expression_yield <pExpression> (279)
        on left: 260 261
        on right: 66 227
    expression_try_catch <pExpression> (280)
        on left: 262
        on right: 229
    kwd_let_var_or_nothing <b> (281)
        on left: 263 264 265
        on right: 486
    kwd_let <b> (282)
        on left: 266 267
        on right: 274 275 534
    optional_in_scope <b> (283)
        on left: 268 269
        on right: 274 275
    tuple_expansion <pNameList> (284)
        on left: 270 271
        on right: 271 272 273
    tuple_expansion_variable_declaration <pVarDecl> (285)
        on left: 272 273
        on right: 275
    expression_let <pExpression> (286)
        on left: 274 275
        on right: 218
    expr_cast <pExpression> (287)
        on left: 278 281 284
        on right: 440
    $@5 (288)
        on left: 276
        on right: 278
    $@6 (289)
        on left: 277
        on right: 278
    $@7 (290)
        on left: 279
        on right: 281
    $@8 (291)
        on left: 280
        on right: 281
    $@9 (292)
        on left: 282
        on right: 284
    $@10 (293)
        on left: 283
        on right: 284
    expr_type_decl <pExpression> (294)
        on left: 287
        on right: 439
    $@11 (295)
        on left: 285
        on right: 287
    $@12 (296)
        on left: 286
        on right: 287
    expr_type_info <pExpression> (297)
        on left: 288 289 290
        on right: 438
    expr_list <pExpression> (298)
        on left: 291 292
        on right: 71 237 292 338 340 353 355 363 365 406 457 747 751 761 765 768 779 780 781
    block_or_simple_block <pExpression> (299)
        on left: 293 294 295
        on right: 308
    block_or_lambda <i> (300)
        on left: 296 297 298
        on right: 308 309
    capture_entry <pCapt> (301)
        on left: 299 300 301 302 303
        on right: 304 305
    capture_list <pCaptList> (302)
        on left: 304 305
        on right: 305 307
    optional_capture_list <pCaptList> (303)
        on left: 306 307
        on right: 308 309 418 419 420
    expr_full_block <pExpression> (304)
        on left: 308
        on right: 444
    expr_full_block_assumed_piped <pExpression> (305)
        on left: 309 310
        on right: 214
    expr_numeric_const <pExpression> (306)
        on left: 311 312 313 314 315 316 317
        on right: 368
    expr_assign <pExpression> (307)
        on left: 318 319 320 321 322 323 324 325 326 327 328 329 330 331 332 333 334 335 336
        on right: 216
    expr_named_call <pExpression> (308)
        on left: 337 338
        on right: 443
    expr_method_call <pExpression> (309)
        on left: 339 340
        on right: 442
    func_addr_name <pExpression> (310)
        on left: 341 342
        on right: 343 346 349
    func_addr_expr <pExpression> (311)
        on left: 343 346 349
        on right: 413
    $@13 (312)
        on left: 344
        on right: 346
    $@14 (313)
        on left: 345
        on right: 346
    $@15 (314)
        on left: 347
        on right: 349
    $@16 (315)
        on left: 348
        on right: 349
    expr_field <pExpression> (316)
        on left: 350 351 352 353 354 355 358
        on right: 374
    $@17 (317)
        on left: 356
        on right: 358
    $@18 (318)
        on left: 357
        on right: 358
    expr_call <pExpression> (319)
        on left: 359 360 361 362 363 364 365
        on right: 214 414
    expr <pExpression> (320)
        on left: 366 367 368 369 370 371 372 373 374 375 376 377 378 379 380 381 382 383 384 385 386 387 388 389 390 391 392 393 394 395 396 397 398 399 400 401 402 403 404 405 406 407 408 409 410 411 412 413 414 415 416 417 418 419 420 421 422 425 426 427 428 431 432 433 436 437 438 439 440 441 442 443 444 445 446 447 448 449
        on right
    $@19 (321)
        on left: 423
        on right: 425
    $@20 (322)
        on left: 424
        on right: 425
    $@21 (323)
        on left: 429
        on right: 431
    $@22 (324)
        on left: 430
        on right: 431
    $@23 (325)
        on left: 434
        on right: 436
    $@24 (326)
        on left: 435
        on right: 436
    expr_mtag <pExpression> (327)
        on left: 450 451 452 453 454 455 456 457 458 459 460 461 462 463 464 465
        on right: 375
    optional_field_annotation <aaList> (328)
        on left: 466 467
        on right: 478 486 534
    optional_override <i> (329)
        on left: 468 469 470
        on right: 478 485
    optional_constant <b> (330)
        on left: 471 472
        on right: 483 485
    optional_public_or_private_member_variable <b> (331)
        on left: 473 474 475
        on right: 478 483 485
    optional_static_member_variable <b> (332)
        on left: 476 477
        on right: 478 485
    structure_variable_declaration <pVarDecl> (333)
        on left: 478
        on right: 481
    struct_variable_declaration_list <pVarDeclList> (334)
        on left: 479 481 483 485
        on right: 481 483 485 566
    $@25 (335)
        on left: 480
        on right: 481
    $@26 (336)
        on left: 482
        on right: 483
    $@27 (337)
        on left: 484
        on right: 485
    function_argument_declaration <pVarDecl> (338)
        on left: 486 487
        on right: 488 489
    function_argument_list <pVarDeclList> (339)
        on left: 488 489
        on right: 117 489
    tuple_type <pVarDecl> (340)
        on left: 490 491
        on right: 492 493 496
    tuple_type_list <pVarDeclList> (341)
        on left: 492 493
        on right: 493 691
    tuple_alias_type_list <pVarDeclList> (342)
        on left: 494 495 496
        on right: 495 496 701
    variant_type <pVarDecl> (343)
        on left: 497
        on right: 498 499 502
    variant_type_list <pVarDeclList> (344)
        on left: 498 499
        on right: 499 694
    variant_alias_type_list <pVarDeclList> (345)
        on left: 500 501 502
        on right: 501 502 705
    copy_or_move <b> (346)
        on left: 503 504
        on right: 508 509 715 717 719 721
    variable_declaration <pVarDecl> (347)
        on left: 505 506 507 508 509
        on right: 478 486
    copy_or_move_or_clone <i> (348)
        on left: 510 511 512
        on right: 272 273 523 524 526 527
    optional_ref <b> (349)
        on left: 513 514
        on right: 273 524 527
    let_variable_name_with_pos_list <pNameWithPosList> (350)
        on left: 515 516 517 518 519
        on right: 518 519 522 523 524
    global_let_variable_name_with_pos_list <pNameWithPosList> (351)
        on left: 520 521
        on right: 521 525 526 527
    let_variable_declaration <pVarDecl> (352)
        on left: 522 523 524
        on right: 274
    global_let_variable_declaration <pVarDecl> (353)
        on left: 525 526 527
        on right: 534
    optional_shared <b> (354)
        on left: 528 529
        on right: 22 534
    optional_public_or_private_variable <b> (355)
        on left: 530 531 532
        on right: 534
    global_let (356)
        on left: 534
        on right: 5
    $@28 (357)
        on left: 533
        on right: 534
    enum_expression <pEnumPair> (358)
        on left: 535 536
        on right: 538 539
    enum_list <pEnum> (359)
        on left: 537 538 539
        on right: 539 554
    optional_public_or_private_alias <b> (360)
        on left: 540 541 542
        on right: 544 701 705 709
    single_alias (361)
        on left: 544
        on right: 545
    $@29 (362)
        on left: 543
        on right: 544
    alias_declaration (363)
        on left: 545
        on right: 10
    optional_public_or_private_enum <b> (364)
        on left: 546 547 548
        on right: 554
    enum_name <pEnum> (365)
        on left: 549
        on right: 554
    optional_enum_basic_type_declaration <type> (366)
        on left: 550 551
        on right: 554
    enum_declaration (367)
        on left: 554
        on right: 4
    $@30 (368)
        on left: 552
        on right: 554
    $@31 (369)
        on left: 553
        on right: 554
    optional_structure_parent <s> (370)
        on left: 555 556
        on right: 559
    optional_sealed <b> (371)
        on left: 557 558
        on right: 559
    structure_name <pStructure> (372)
        on left: 559
        on right: 569
    class_or_struct <b> (373)
        on left: 560 561
        on right: 569
    optional_public_or_private_structure <b> (374)
        on left: 562 563 564
        on right: 569
    optional_struct_variable_declaration_list <pVarDeclList> (375)
        on left: 565 566
        on right: 569
    structure_declaration (376)
        on left: 569
        on right: 3
    $@32 (377)
        on left: 567
        on right: 569
    $@33 (378)
        on left: 568
        on right: 569
    variable_name_with_pos_list <pNameWithPosList> (379)
        on left: 570 571 572 573 574
        on right: 71 505 506 507 508 509 573 574 779 780 781
    basic_type_declaration <type> (380)
        on left: 575 576 577 578 579 580 581 582 583 584 585 586 587 588 589 590 591 592 593 594 595 596 597 598 599 600 601
        on right: 354 355 364 365 426 432 437 447 632
    enum_basic_type_declaration <type> (381)
        on left: 602 603 604 605 606 607 608 609
        on right: 551
    structure_type_declaration <pTypeDecl> (382)
        on left: 610
        on right: 250 251 635
    auto_type_declaration <pTypeDecl> (383)
        on left: 611 612 613
        on right: 633
    bitfield_bits <pNameList> (384)
        on left: 614 615
        on right: 615 621
    bitfield_alias_bits <pNameList> (385)
        on left: 616 617 618
        on right: 618 709
    bitfield_type_declaration <pTypeDecl> (386)
        on left: 621
        on right: 634
    $@34 (387)
        on left: 619
        on right: 621
    $@35 (388)
        on left: 620
        on right: 621
    c_or_s (389)
        on left: 622 623
        on right: 241 290 493 495 496 499 501 502 625 774
    table_type_pair <aTypePair> (390)
        on left: 624 625
        on right: 664
    dim_list <pTypeDecl> (391)
        on left: 626 627 628 629
        on right: 628 629 631
    type_declaration_no_options <pTypeDecl> (392)
        on left: 630 631
        on right: 272 278 281 284 346 418 419 420 425 522 523 525 526 695 696 735 738 741 744 750 754 757 760 764 768 773 774
    type_declaration_no_options_no_dim <pTypeDecl> (393)
        on left: 632 633 634 635 638 639 640 642 643 644 645 646 647 648 649 650 651 652 653 654 657 658 661 664 667 668 671 674 675 678 681 682 685 688 691 694
        on right: 630 631 643 644 645 646 647 648 649 650 651 652 653 654 658
    $@36 (394)
        on left: 636
        on right: 638
    $@37 (395)
        on left: 637
        on right: 638
    $@38 (396)
        on left: 641
        on right: 642
    $@39 (397)
        on left: 655
        on right: 657
    $@40 (398)
        on left: 656
        on right: 657
    $@41 (399)
        on left: 659
        on right: 661
    $@42 (400)
        on left: 660
        on right: 661
    $@43 (401)
        on left: 662
        on right: 664
    $@44 (402)
        on left: 663
        on right: 664
    $@45 (403)
        on left: 665
        on right: 667
    $@46 (404)
        on left: 666
        on right: 667
    $@47 (405)
        on left: 669
        on right: 671
    $@48 (406)
        on left: 670
        on right: 671
    $@49 (407)
        on left: 672
        on right: 674
    $@50 (408)
        on left: 673
        on right: 674
    $@51 (409)
        on left: 676
        on right: 678
    $@52 (410)
        on left: 677
        on right: 678
    $@53 (411)
        on left: 679
        on right: 681
    $@54 (412)
        on left: 680
        on right: 681
    $@55 (413)
        on left: 683
        on right: 685
    $@56 (414)
        on left: 684
        on right: 685
    $@57 (415)
        on left: 686
        on right: 688
    $@58 (416)
        on left: 687
        on right: 688
    $@59 (417)
        on left: 689
        on right: 691
    $@60 (418)
        on left: 690
        on right: 691
    $@61 (419)
        on left: 692
        on right: 694
    $@62 (420)
        on left: 693
        on right: 694
    type_declaration <pTypeDecl> (421)
        on left: 695 696 697
        on right: 119 240 241 249 287 431 436 490 491 497 507 508 544 624 625 638 657 661 667 671 678 685 696 697
    tuple_alias_declaration (422)
        on left: 701
        on right: 12
    $@63 (423)
        on left: 698
        on right: 701
    $@64 (424)
        on left: 699
        on right: 701
    $@65 (425)
        on left: 700
        on right: 701
    variant_alias_declaration (426)
        on left: 705
        on right: 11
    $@66 (427)
        on left: 702
        on right: 705
    $@67 (428)
        on left: 703
        on right: 705
    $@68 (429)
        on left: 704
        on right: 705
    bitfield_alias_declaration (430)
        on left: 709
        on right: 13
    $@69 (431)
        on left: 706
        on right: 709
    $@70 (432)
        on left: 707
        on right: 709
    $@71 (433)
        on left: 708
        on right: 709
    make_decl <pExpression> (434)
        on left: 710 711 712 713 714
        on right: 254 371
    make_struct_fields <pMakeStruct> (435)
        on left: 715 716 717 718 719 720 721 722
        on right: 337 338 717 718 721 722 723 724 725 726 727
    make_variant_dim <pExpression> (436)
        on left: 723
        on right: 741 760
    make_struct_single <pExpression> (437)
        on left: 724
        on right: 253 361 362
    make_struct_dim_list <pExpression> (438)
        on left: 725 726
        on right: 726 728
    make_struct_dim_decl <pExpression> (439)
        on left: 727 728
        on right: 729
    optional_make_struct_dim_decl <pExpression> (440)
        on left: 729 730
        on right: 735 738 750 754 757
    use_initializer <b> (441)
        on left: 731 732
        on right: 252 253 735 738 744 750 754 757
    make_struct_decl <pExpression> (442)
        on left: 735 738 741 744
        on right: 710
    $@72 (443)
        on left: 733
        on right: 735
    $@73 (444)
        on left: 734
        on right: 735
    $@74 (445)
        on left: 736
        on right: 738
    $@75 (446)
        on left: 737
        on right: 738
    $@76 (447)
        on left: 739
        on right: 741
    $@77 (448)
        on left: 740
        on right: 741
    $@78 (449)
        on left: 742
        on right: 744
    $@79 (450)
        on left: 743
        on right: 744
    make_map_tuple <pExpression> (451)
        on left: 745 746
        on right: 769 770 781
    make_tuple_call <pExpression> (452)
        on left: 747 750
        on right: 714
    $@80 (453)
        on left: 748
        on right: 750
    $@81 (454)
        on left: 749
        on right: 750
    make_dim_decl <pExpression> (455)
        on left: 751 754 757 760 761 764 765 768
        on right: 711
    $@82 (456)
        on left: 752
        on right: 754
    $@83 (457)
        on left: 753
        on right: 754
    $@84 (458)
        on left: 755
        on right: 757
    $@85 (459)
        on left: 756
        on right: 757
    $@86 (460)
        on left: 758
        on right: 760
    $@87 (461)
        on left: 759
        on right: 760
    $@88 (462)
        on left: 762
        on right: 764
    $@89 (463)
        on left: 763
        on right: 764
    $@90 (464)
        on left: 766
        on right: 768
    $@91 (465)
        on left: 767
        on right: 768
    expr_map_tuple_list <pExpression> (466)
        on left: 769 770
        on right: 239 770 771 772
    make_table_decl <pExpression> (467)
        on left: 771 772 773 774
        on right: 712
    array_comprehension_where <pExpression> (468)
        on left: 775 776
        on right: 779 780 781
    optional_comma <b> (469)
        on left: 777 778
        on right: 237 239 406 554 709 728 747 751 761 765 768 771 772
    array_comprehension <pExpression> (470)
        on left: 779 780 781
        on right: 713


State 0

    0 $accept: . program $end

    $default  reduce using rule 1 (program)

    program  go to state 1


State 1

    0 $accept: program . $end
    2 program: program . module_declaration
    3        | program . structure_declaration
    4        | program . enum_declaration
    5        | program . global_let
    6        | program . global_function_declaration
    7        | program . expect_declaration
    8        | program . require_declaration
    9        | program . options_declaration "end of expression"
   10        | program . alias_declaration
   11        | program . variant_alias_declaration
   12        | program . tuple_alias_declaration
   13        | program . bitfield_alias_declaration
   14        | program . top_level_reader_macro
   15        | program . "end of expression"

    $end                 shift, and go to state 2
    "let"                shift, and go to state 3
    "options"            shift, and go to state 4
    "expect"             shift, and go to state 5
    "require"            shift, and go to state 6
    "typedef"            shift, and go to state 7
    "var"                shift, and go to state 8
    "module"             shift, and go to state 9
    "bitfield"           shift, and go to state 10
    "tuple"              shift, and go to state 11
    "variant"            shift, and go to state 12
    "end of expression"  shift, and go to state 13
    '%'                  shift, and go to state 14
    '['                  shift, and go to state 15

    $default  reduce using rule 113 (optional_annotation_list)

    top_level_reader_macro       go to state 16
    module_declaration           go to state 17
    expr_reader                  go to state 18
    options_declaration          go to state 19
    require_declaration          go to state 20
    expect_declaration           go to state 21
    optional_annotation_list     go to state 22
    global_function_declaration  go to state 23
    kwd_let                      go to state 24
    global_let                   go to state 25
    alias_declaration            go to state 26
    enum_declaration             go to state 27
    structure_declaration        go to state 28
    tuple_alias_declaration      go to state 29
    variant_alias_declaration    go to state 30
    bitfield_alias_declaration   go to state 31


State 2

    0 $accept: program $end .

    $default  accept


State 3

  266 kwd_let: "let" .

    $default  reduce using rule 266 (kwd_let)


State 4

   37 options_declaration: "options" . annotation_argument_list

    "type"  shift, and go to state 32
    "in"    shift, and go to state 33
    "name"  shift, and go to state 34

    annotation_argument_name  go to state 35
    annotation_argument       go to state 36
    annotation_argument_list  go to state 37


State 5

   47 expect_declaration: "expect" . expect_list

    "integer constant"  shift, and go to state 38

    expect_list   go to state 39
    expect_error  go to state 40


State 6

   38 require_declaration: "require" . require_module

    "name"  shift, and go to state 41
    '%'     shift, and go to state 42

    require_module_name  go to state 43
    require_module       go to state 44


State 7

  545 alias_declaration: "typedef" . single_alias "end of expression"

    "public"   shift, and go to state 45
    "private"  shift, and go to state 46

    $default  reduce using rule 540 (optional_public_or_private_alias)

    optional_public_or_private_alias  go to state 47
    single_alias                      go to state 48


State 8

  267 kwd_let: "var" .

    $default  reduce using rule 267 (kwd_let)


State 9

   22 module_declaration: "module" . module_name optional_shared optional_public_or_private_module

    "name"  shift, and go to state 49
    '$'     shift, and go to state 50

    module_name  go to state 51


State 10

  709 bitfield_alias_declaration: "bitfield" . optional_public_or_private_alias "name" $@69 "begin of code block" $@70 bitfield_alias_bits optional_comma $@71 "end of code block"

    "public"   shift, and go to state 45
    "private"  shift, and go to state 46

    $default  reduce using rule 540 (optional_public_or_private_alias)

    optional_public_or_private_alias  go to state 52


State 11

  701 tuple_alias_declaration: "tuple" . optional_public_or_private_alias "name" $@63 "begin of code block" $@64 tuple_alias_type_list $@65 "end of code block"

    "public"   shift, and go to state 45
    "private"  shift, and go to state 46

    $default  reduce using rule 540 (optional_public_or_private_alias)

    optional_public_or_private_alias  go to state 53


State 12

  705 variant_alias_declaration: "variant" . optional_public_or_private_alias "name" $@66 "begin of code block" $@67 variant_alias_type_list $@68 "end of code block"

    "public"   shift, and go to state 45
    "private"  shift, and go to state 46

    $default  reduce using rule 540 (optional_public_or_private_alias)

    optional_public_or_private_alias  go to state 54


State 13

   15 program: program "end of expression" .

    $default  reduce using rule 15 (program)


State 14

   36 expr_reader: '%' . name_in_namespace $@1 reader_character_sequence

    "::"    shift, and go to state 55
    "name"  shift, and go to state 56

    name_in_namespace  go to state 57


State 15

  114 optional_annotation_list: '[' . annotation_list ']'

    "require"  shift, and go to state 58
    "private"  shift, and go to state 59
    "|>"       shift, and go to state 60
    "::"       shift, and go to state 55
    "name"     shift, and go to state 56
    '!'        shift, and go to state 61
    '('        shift, and go to state 62

    annotation_declaration_name   go to state 63
    annotation_declaration_basic  go to state 64
    annotation_declaration        go to state 65
    annotation_list               go to state 66
    name_in_namespace             go to state 67


State 16

   14 program: program top_level_reader_macro .

    $default  reduce using rule 14 (program)


State 17

    2 program: program module_declaration .

    $default  reduce using rule 2 (program)


State 18

   16 top_level_reader_macro: expr_reader . "end of expression"

    "end of expression"  shift, and go to state 68


State 19

    9 program: program options_declaration . "end of expression"

    "end of expression"  shift, and go to state 69


State 20

    8 program: program require_declaration .

    $default  reduce using rule 8 (program)


State 21

    7 program: program expect_declaration .

    $default  reduce using rule 7 (program)


State 22

  205 global_function_declaration: optional_annotation_list . "def" function_declaration
  554 enum_declaration: optional_annotation_list . "enum" optional_public_or_private_enum enum_name optional_enum_basic_type_declaration "begin of code block" $@30 enum_list optional_comma $@31 "end of code block"
  569 structure_declaration: optional_annotation_list . class_or_struct optional_public_or_private_structure $@32 structure_name $@33 optional_struct_variable_declaration_list

    "struct"  shift, and go to state 70
    "class"   shift, and go to state 71
    "def"     shift, and go to state 72
    "enum"    shift, and go to state 73

    class_or_struct  go to state 74


State 23

    6 program: program global_function_declaration .

    $default  reduce using rule 6 (program)


State 24

  534 global_let: kwd_let . optional_shared optional_public_or_private_variable $@28 optional_field_annotation global_let_variable_declaration

    "shared"  shift, and go to state 75

    $default  reduce using rule 528 (optional_shared)

    optional_shared  go to state 76


State 25

    5 program: program global_let .

    $default  reduce using rule 5 (program)


State 26

   10 program: program alias_declaration .

    $default  reduce using rule 10 (program)


State 27

    4 program: program enum_declaration .

    $default  reduce using rule 4 (program)


State 28

    3 program: program structure_declaration .

    $default  reduce using rule 3 (program)


State 29

   12 program: program tuple_alias_declaration .

    $default  reduce using rule 12 (program)


State 30

   11 program: program variant_alias_declaration .

    $default  reduce using rule 11 (program)


State 31

   13 program: program bitfield_alias_declaration .

    $default  reduce using rule 13 (program)


State 32

   85 annotation_argument_name: "type" .

    $default  reduce using rule 85 (annotation_argument_name)


State 33

   86 annotation_argument_name: "in" .

    $default  reduce using rule 86 (annotation_argument_name)


State 34

   84 annotation_argument_name: "name" .

    $default  reduce using rule 84 (annotation_argument_name)


State 35

   87 annotation_argument: annotation_argument_name . '=' string_constant
   88                    | annotation_argument_name . '=' "name"
   89                    | annotation_argument_name . '=' "integer constant"
   90                    | annotation_argument_name . '=' "floating point constant"
   91                    | annotation_argument_name . '=' "true"
   92                    | annotation_argument_name . '=' "false"
   93                    | annotation_argument_name .
   94                    | annotation_argument_name . '=' '(' annotation_argument_value_list ')'

    '='  shift, and go to state 77

    $default  reduce using rule 93 (annotation_argument)


State 36

   95 annotation_argument_list: annotation_argument .

    $default  reduce using rule 95 (annotation_argument_list)


State 37

   37 options_declaration: "options" annotation_argument_list .
   96 annotation_argument_list: annotation_argument_list . ',' annotation_argument

    ','  shift, and go to state 78

    $default  reduce using rule 37 (options_declaration)


State 38

   50 expect_error: "integer constant" .
   51             | "integer constant" . ':' "integer constant"

    ':'  shift, and go to state 79

    $default  reduce using rule 50 (expect_error)


State 39

   47 expect_declaration: "expect" expect_list .
   49 expect_list: expect_list . ',' expect_error

    ','  shift, and go to state 80

    $default  reduce using rule 47 (expect_declaration)


State 40

   48 expect_list: expect_error .

    $default  reduce using rule 48 (expect_list)


State 41

   39 require_module_name: "name" .

    $default  reduce using rule 39 (require_module_name)


State 42

   40 require_module_name: '%' . require_module_name

    "name"  shift, and go to state 41
    '%'     shift, and go to state 42

    require_module_name  go to state 81


State 43

   41 require_module_name: require_module_name . '.' "name"
   42                    | require_module_name . '/' "name"
   43 require_module: require_module_name . is_public_module
   44               | require_module_name . "as" "name" is_public_module

    "as"      shift, and go to state 82
    "public"  shift, and go to state 83
    '/'       shift, and go to state 84
    '.'       shift, and go to state 85

    $default  reduce using rule 45 (is_public_module)

    is_public_module  go to state 86


State 44

   38 require_declaration: "require" require_module .

    $default  reduce using rule 38 (require_declaration)


State 45

  542 optional_public_or_private_alias: "public" .

    $default  reduce using rule 542 (optional_public_or_private_alias)


State 46

  541 optional_public_or_private_alias: "private" .

    $default  reduce using rule 541 (optional_public_or_private_alias)


State 47

  544 single_alias: optional_public_or_private_alias . "name" $@29 '=' type_declaration

    "name"  shift, and go to state 87


State 48

  545 alias_declaration: "typedef" single_alias . "end of expression"

    "end of expression"  shift, and go to state 88


State 49

   21 module_name: "name" .

    $default  reduce using rule 21 (module_name)


State 50

   20 module_name: '$' .

    $default  reduce using rule 20 (module_name)


State 51

   22 module_declaration: "module" module_name . optional_shared optional_public_or_private_module

    "shared"  shift, and go to state 75

    $default  reduce using rule 528 (optional_shared)

    optional_shared  go to state 89


State 52

  709 bitfield_alias_declaration: "bitfield" optional_public_or_private_alias . "name" $@69 "begin of code block" $@70 bitfield_alias_bits optional_comma $@71 "end of code block"

    "name"  shift, and go to state 90


State 53

  701 tuple_alias_declaration: "tuple" optional_public_or_private_alias . "name" $@63 "begin of code block" $@64 tuple_alias_type_list $@65 "end of code block"

    "name"  shift, and go to state 91


State 54

  705 variant_alias_declaration: "variant" optional_public_or_private_alias . "name" $@66 "begin of code block" $@67 variant_alias_type_list $@68 "end of code block"

    "name"  shift, and go to state 92


State 55

  244 name_in_namespace: "::" . "name"

    "name"  shift, and go to state 93


State 56

  242 name_in_namespace: "name" .
  243                  | "name" . "::" "name"

    "::"  shift, and go to state 94

    $default  reduce using rule 242 (name_in_namespace)


State 57

   36 expr_reader: '%' name_in_namespace . $@1 reader_character_sequence

    $default  reduce using rule 35 ($@1)

    $@1  go to state 95


State 58

  100 annotation_declaration_name: "require" .

    $default  reduce using rule 100 (annotation_declaration_name)


State 59

  101 annotation_declaration_name: "private" .

    $default  reduce using rule 101 (annotation_declaration_name)


State 60

  110 annotation_declaration: "|>" . annotation_declaration

    "require"  shift, and go to state 58
    "private"  shift, and go to state 59
    "|>"       shift, and go to state 60
    "::"       shift, and go to state 55
    "name"     shift, and go to state 56
    '!'        shift, and go to state 61
    '('        shift, and go to state 62

    annotation_declaration_name   go to state 63
    annotation_declaration_basic  go to state 64
    annotation_declaration        go to state 96
    name_in_namespace             go to state 67


State 61

  105 annotation_declaration: '!' . annotation_declaration

    "require"  shift, and go to state 58
    "private"  shift, and go to state 59
    "|>"       shift, and go to state 60
    "::"       shift, and go to state 55
    "name"     shift, and go to state 56
    '!'        shift, and go to state 61
    '('        shift, and go to state 62

    annotation_declaration_name   go to state 63
    annotation_declaration_basic  go to state 64
    annotation_declaration        go to state 97
    name_in_namespace             go to state 67


State 62

  109 annotation_declaration: '(' . annotation_declaration ')'

    "require"  shift, and go to state 58
    "private"  shift, and go to state 59
    "|>"       shift, and go to state 60
    "::"       shift, and go to state 55
    "name"     shift, and go to state 56
    '!'        shift, and go to state 61
    '('        shift, and go to state 62

    annotation_declaration_name   go to state 63
    annotation_declaration_basic  go to state 64
    annotation_declaration        go to state 98
    name_in_namespace             go to state 67


State 63

  102 annotation_declaration_basic: annotation_declaration_name .
  103                             | annotation_declaration_name . '(' annotation_argument_list ')'

    '('  shift, and go to state 99

    $default  reduce using rule 102 (annotation_declaration_basic)


State 64

  104 annotation_declaration: annotation_declaration_basic .

    $default  reduce using rule 104 (annotation_declaration)


State 65

  106 annotation_declaration: annotation_declaration . "&&" annotation_declaration
  107                       | annotation_declaration . "||" annotation_declaration
  108                       | annotation_declaration . "^^" annotation_declaration
  111 annotation_list: annotation_declaration .

    "&&"  shift, and go to state 100
    "||"  shift, and go to state 101
    "^^"  shift, and go to state 102

    $default  reduce using rule 111 (annotation_list)


State 66

  112 annotation_list: annotation_list . ',' annotation_declaration
  114 optional_annotation_list: '[' annotation_list . ']'

    ','  shift, and go to state 103
    ']'  shift, and go to state 104


State 67

   99 annotation_declaration_name: name_in_namespace .

    $default  reduce using rule 99 (annotation_declaration_name)


State 68

   16 top_level_reader_macro: expr_reader "end of expression" .

    $default  reduce using rule 16 (top_level_reader_macro)


State 69

    9 program: program options_declaration "end of expression" .

    $default  reduce using rule 9 (program)


State 70

  561 class_or_struct: "struct" .

    $default  reduce using rule 561 (class_or_struct)


State 71

  560 class_or_struct: "class" .

    $default  reduce using rule 560 (class_or_struct)


State 72

  205 global_function_declaration: optional_annotation_list "def" . function_declaration

    "public"   shift, and go to state 105
    "private"  shift, and go to state 106

    $default  reduce using rule 206 (optional_public_or_private_function)

    optional_public_or_private_function  go to state 107
    function_declaration                 go to state 108


State 73

  554 enum_declaration: optional_annotation_list "enum" . optional_public_or_private_enum enum_name optional_enum_basic_type_declaration "begin of code block" $@30 enum_list optional_comma $@31 "end of code block"

    "public"   shift, and go to state 109
    "private"  shift, and go to state 110

    $default  reduce using rule 546 (optional_public_or_private_enum)

    optional_public_or_private_enum  go to state 111


State 74

  569 structure_declaration: optional_annotation_list class_or_struct . optional_public_or_private_structure $@32 structure_name $@33 optional_struct_variable_declaration_list

    "public"   shift, and go to state 112
    "private"  shift, and go to state 113

    $default  reduce using rule 562 (optional_public_or_private_structure)

    optional_public_or_private_structure  go to state 114


State 75

  529 optional_shared: "shared" .

    $default  reduce using rule 529 (optional_shared)


State 76

  534 global_let: kwd_let optional_shared . optional_public_or_private_variable $@28 optional_field_annotation global_let_variable_declaration

    "public"   shift, and go to state 115
    "private"  shift, and go to state 116

    $default  reduce using rule 530 (optional_public_or_private_variable)

    optional_public_or_private_variable  go to state 117


State 77

   87 annotation_argument: annotation_argument_name '=' . string_constant
   88                    | annotation_argument_name '=' . "name"
   89                    | annotation_argument_name '=' . "integer constant"
   90                    | annotation_argument_name '=' . "floating point constant"
   91                    | annotation_argument_name '=' . "true"
   92                    | annotation_argument_name '=' . "false"
   94                    | annotation_argument_name '=' . '(' annotation_argument_value_list ')'

    "true"                     shift, and go to state 118
    "false"                    shift, and go to state 119
    "integer constant"         shift, and go to state 120
    "floating point constant"  shift, and go to state 121
    "name"                     shift, and go to state 122
    "start of the string"      shift, and go to state 123
    '('                        shift, and go to state 124

    string_constant  go to state 125


State 78

   96 annotation_argument_list: annotation_argument_list ',' . annotation_argument

    "type"  shift, and go to state 32
    "in"    shift, and go to state 33
    "name"  shift, and go to state 34

    annotation_argument_name  go to state 35
    annotation_argument       go to state 126


State 79

   51 expect_error: "integer constant" ':' . "integer constant"

    "integer constant"  shift, and go to state 127


State 80

   49 expect_list: expect_list ',' . expect_error

    "integer constant"  shift, and go to state 38

    expect_error  go to state 128


State 81

   40 require_module_name: '%' require_module_name .
   41                    | require_module_name . '.' "name"
   42                    | require_module_name . '/' "name"

    '.'  shift, and go to state 85

    $default  reduce using rule 40 (require_module_name)


State 82

   44 require_module: require_module_name "as" . "name" is_public_module

    "name"  shift, and go to state 129


State 83

   46 is_public_module: "public" .

    $default  reduce using rule 46 (is_public_module)


State 84

   42 require_module_name: require_module_name '/' . "name"

    "name"  shift, and go to state 130


State 85

   41 require_module_name: require_module_name '.' . "name"

    "name"  shift, and go to state 131


State 86

   43 require_module: require_module_name is_public_module .

    $default  reduce using rule 43 (require_module)


State 87

  544 single_alias: optional_public_or_private_alias "name" . $@29 '=' type_declaration

    $default  reduce using rule 543 ($@29)

    $@29  go to state 132


State 88

  545 alias_declaration: "typedef" single_alias "end of expression" .

    $default  reduce using rule 545 (alias_declaration)


State 89

   22 module_declaration: "module" module_name optional_shared . optional_public_or_private_module

    "public"   shift, and go to state 133
    "private"  shift, and go to state 134

    $default  reduce using rule 17 (optional_public_or_private_module)

    optional_public_or_private_module  go to state 135


State 90

  709 bitfield_alias_declaration: "bitfield" optional_public_or_private_alias "name" . $@69 "begin of code block" $@70 bitfield_alias_bits optional_comma $@71 "end of code block"

    $default  reduce using rule 706 ($@69)

    $@69  go to state 136


State 91

  701 tuple_alias_declaration: "tuple" optional_public_or_private_alias "name" . $@63 "begin of code block" $@64 tuple_alias_type_list $@65 "end of code block"

    $default  reduce using rule 698 ($@63)

    $@63  go to state 137


State 92

  705 variant_alias_declaration: "variant" optional_public_or_private_alias "name" . $@66 "begin of code block" $@67 variant_alias_type_list $@68 "end of code block"

    $default  reduce using rule 702 ($@66)

    $@66  go to state 138


State 93

  244 name_in_namespace: "::" "name" .

    $default  reduce using rule 244 (name_in_namespace)


State 94

  243 name_in_namespace: "name" "::" . "name"

    "name"  shift, and go to state 139


State 95

   36 expr_reader: '%' name_in_namespace $@1 . reader_character_sequence

    STRING_CHARACTER  shift, and go to state 140

    reader_character_sequence  go to state 141


State 96

  106 annotation_declaration: annotation_declaration . "&&" annotation_declaration
  107                       | annotation_declaration . "||" annotation_declaration
  108                       | annotation_declaration . "^^" annotation_declaration
  110                       | "|>" annotation_declaration .

    $default  reduce using rule 110 (annotation_declaration)


State 97

  105 annotation_declaration: '!' annotation_declaration .
  106                       | annotation_declaration . "&&" annotation_declaration
  107                       | annotation_declaration . "||" annotation_declaration
  108                       | annotation_declaration . "^^" annotation_declaration

    $default  reduce using rule 105 (annotation_declaration)


State 98

  106 annotation_declaration: annotation_declaration . "&&" annotation_declaration
  107                       | annotation_declaration . "||" annotation_declaration
  108                       | annotation_declaration . "^^" annotation_declaration
  109                       | '(' annotation_declaration . ')'

    "&&"  shift, and go to state 100
    "||"  shift, and go to state 101
    "^^"  shift, and go to state 102
    ')'   shift, and go to state 142


State 99

  103 annotation_declaration_basic: annotation_declaration_name '(' . annotation_argument_list ')'

    "type"  shift, and go to state 32
    "in"    shift, and go to state 33
    "name"  shift, and go to state 34

    annotation_argument_name  go to state 35
    annotation_argument       go to state 36
    annotation_argument_list  go to state 143


State 100

  106 annotation_declaration: annotation_declaration "&&" . annotation_declaration

    "require"  shift, and go to state 58
    "private"  shift, and go to state 59
    "|>"       shift, and go to state 60
    "::"       shift, and go to state 55
    "name"     shift, and go to state 56
    '!'        shift, and go to state 61
    '('        shift, and go to state 62

    annotation_declaration_name   go to state 63
    annotation_declaration_basic  go to state 64
    annotation_declaration        go to state 144
    name_in_namespace             go to state 67


State 101

  107 annotation_declaration: annotation_declaration "||" . annotation_declaration

    "require"  shift, and go to state 58
    "private"  shift, and go to state 59
    "|>"       shift, and go to state 60
    "::"       shift, and go to state 55
    "name"     shift, and go to state 56
    '!'        shift, and go to state 61
    '('        shift, and go to state 62

    annotation_declaration_name   go to state 63
    annotation_declaration_basic  go to state 64
    annotation_declaration        go to state 145
    name_in_namespace             go to state 67


State 102

  108 annotation_declaration: annotation_declaration "^^" . annotation_declaration

    "require"  shift, and go to state 58
    "private"  shift, and go to state 59
    "|>"       shift, and go to state 60
    "::"       shift, and go to state 55
    "name"     shift, and go to state 56
    '!'        shift, and go to state 61
    '('        shift, and go to state 62

    annotation_declaration_name   go to state 63
    annotation_declaration_basic  go to state 64
    annotation_declaration        go to state 146
    name_in_namespace             go to state 67


State 103

  112 annotation_list: annotation_list ',' . annotation_declaration

    "require"  shift, and go to state 58
    "private"  shift, and go to state 59
    "|>"       shift, and go to state 60
    "::"       shift, and go to state 55
    "name"     shift, and go to state 56
    '!'        shift, and go to state 61
    '('        shift, and go to state 62

    annotation_declaration_name   go to state 63
    annotation_declaration_basic  go to state 64
    annotation_declaration        go to state 147
    name_in_namespace             go to state 67


State 104

  114 optional_annotation_list: '[' annotation_list ']' .

    $default  reduce using rule 114 (optional_annotation_list)


State 105

  208 optional_public_or_private_function: "public" .

    $default  reduce using rule 208 (optional_public_or_private_function)


State 106

  207 optional_public_or_private_function: "private" .

    $default  reduce using rule 207 (optional_public_or_private_function)


State 107

  211 function_declaration: optional_public_or_private_function . $@2 function_declaration_header expression_block

    $default  reduce using rule 210 ($@2)

    $@2  go to state 148


State 108

  205 global_function_declaration: optional_annotation_list "def" function_declaration .

    $default  reduce using rule 205 (global_function_declaration)


State 109

  548 optional_public_or_private_enum: "public" .

    $default  reduce using rule 548 (optional_public_or_private_enum)


State 110

  547 optional_public_or_private_enum: "private" .

    $default  reduce using rule 547 (optional_public_or_private_enum)


State 111

  554 enum_declaration: optional_annotation_list "enum" optional_public_or_private_enum . enum_name optional_enum_basic_type_declaration "begin of code block" $@30 enum_list optional_comma $@31 "end of code block"

    "name"  shift, and go to state 149

    enum_name  go to state 150


State 112

  564 optional_public_or_private_structure: "public" .

    $default  reduce using rule 564 (optional_public_or_private_structure)


State 113

  563 optional_public_or_private_structure: "private" .

    $default  reduce using rule 563 (optional_public_or_private_structure)


State 114

  569 structure_declaration: optional_annotation_list class_or_struct optional_public_or_private_structure . $@32 structure_name $@33 optional_struct_variable_declaration_list

    $default  reduce using rule 567 ($@32)

    $@32  go to state 151


State 115

  532 optional_public_or_private_variable: "public" .

    $default  reduce using rule 532 (optional_public_or_private_variable)


State 116

  531 optional_public_or_private_variable: "private" .

    $default  reduce using rule 531 (optional_public_or_private_variable)


State 117

  534 global_let: kwd_let optional_shared optional_public_or_private_variable . $@28 optional_field_annotation global_let_variable_declaration

    $default  reduce using rule 533 ($@28)

    $@28  go to state 152


State 118

   91 annotation_argument: annotation_argument_name '=' "true" .

    $default  reduce using rule 91 (annotation_argument)


State 119

   92 annotation_argument: annotation_argument_name '=' "false" .

    $default  reduce using rule 92 (annotation_argument)


State 120

   89 annotation_argument: annotation_argument_name '=' "integer constant" .

    $default  reduce using rule 89 (annotation_argument)


State 121

   90 annotation_argument: annotation_argument_name '=' "floating point constant" .

    $default  reduce using rule 90 (annotation_argument)


State 122

   88 annotation_argument: annotation_argument_name '=' "name" .

    $default  reduce using rule 88 (annotation_argument)


State 123

   27 string_constant: "start of the string" . character_sequence "end of the string"
   28                | "start of the string" . "end of the string"

    STRING_CHARACTER      shift, and go to state 153
    STRING_CHARACTER_ESC  shift, and go to state 154
    "end of the string"   shift, and go to state 155

    character_sequence  go to state 156


State 124

   94 annotation_argument: annotation_argument_name '=' '(' . annotation_argument_value_list ')'

    "true"                     shift, and go to state 157
    "false"                    shift, and go to state 158
    "integer constant"         shift, and go to state 159
    "floating point constant"  shift, and go to state 160
    "name"                     shift, and go to state 161
    "start of the string"      shift, and go to state 123

    string_constant                 go to state 162
    annotation_argument_value       go to state 163
    annotation_argument_value_list  go to state 164


State 125

   87 annotation_argument: annotation_argument_name '=' string_constant .

    $default  reduce using rule 87 (annotation_argument)


State 126

   96 annotation_argument_list: annotation_argument_list ',' annotation_argument .

    $default  reduce using rule 96 (annotation_argument_list)


State 127

   51 expect_error: "integer constant" ':' "integer constant" .

    $default  reduce using rule 51 (expect_error)


State 128

   49 expect_list: expect_list ',' expect_error .

    $default  reduce using rule 49 (expect_list)


State 129

   44 require_module: require_module_name "as" "name" . is_public_module

    "public"  shift, and go to state 83

    $default  reduce using rule 45 (is_public_module)

    is_public_module  go to state 165


State 130

   42 require_module_name: require_module_name '/' "name" .

    $default  reduce using rule 42 (require_module_name)


State 131

   41 require_module_name: require_module_name '.' "name" .

    $default  reduce using rule 41 (require_module_name)


State 132

  544 single_alias: optional_public_or_private_alias "name" $@29 . '=' type_declaration

    '='  shift, and go to state 166


State 133

   18 optional_public_or_private_module: "public" .

    $default  reduce using rule 18 (optional_public_or_private_module)


State 134

   19 optional_public_or_private_module: "private" .

    $default  reduce using rule 19 (optional_public_or_private_module)


State 135

   22 module_declaration: "module" module_name optional_shared optional_public_or_private_module .

    $default  reduce using rule 22 (module_declaration)


State 136

  709 bitfield_alias_declaration: "bitfield" optional_public_or_private_alias "name" $@69 . "begin of code block" $@70 bitfield_alias_bits optional_comma $@71 "end of code block"

    "begin of code block"  shift, and go to state 167


State 137

  701 tuple_alias_declaration: "tuple" optional_public_or_private_alias "name" $@63 . "begin of code block" $@64 tuple_alias_type_list $@65 "end of code block"

    "begin of code block"  shift, and go to state 168


State 138

  705 variant_alias_declaration: "variant" optional_public_or_private_alias "name" $@66 . "begin of code block" $@67 variant_alias_type_list $@68 "end of code block"

    "begin of code block"  shift, and go to state 169


State 139

  243 name_in_namespace: "name" "::" "name" .

    $default  reduce using rule 243 (name_in_namespace)


State 140

   33 reader_character_sequence: STRING_CHARACTER .

    $default  reduce using rule 33 (reader_character_sequence)


State 141

   34 reader_character_sequence: reader_character_sequence . STRING_CHARACTER
   36 expr_reader: '%' name_in_namespace $@1 reader_character_sequence .

    STRING_CHARACTER  shift, and go to state 170

    $default  reduce using rule 36 (expr_reader)


State 142

  109 annotation_declaration: '(' annotation_declaration ')' .

    $default  reduce using rule 109 (annotation_declaration)


State 143

   96 annotation_argument_list: annotation_argument_list . ',' annotation_argument
  103 annotation_declaration_basic: annotation_declaration_name '(' annotation_argument_list . ')'

    ','  shift, and go to state 78
    ')'  shift, and go to state 171


State 144

  106 annotation_declaration: annotation_declaration . "&&" annotation_declaration
  106                       | annotation_declaration "&&" annotation_declaration .
  107                       | annotation_declaration . "||" annotation_declaration
  108                       | annotation_declaration . "^^" annotation_declaration

    $default  reduce using rule 106 (annotation_declaration)


State 145

  106 annotation_declaration: annotation_declaration . "&&" annotation_declaration
  107                       | annotation_declaration . "||" annotation_declaration
  107                       | annotation_declaration "||" annotation_declaration .
  108                       | annotation_declaration . "^^" annotation_declaration

    "&&"  shift, and go to state 100
    "^^"  shift, and go to state 102

    $default  reduce using rule 107 (annotation_declaration)


State 146

  106 annotation_declaration: annotation_declaration . "&&" annotation_declaration
  107                       | annotation_declaration . "||" annotation_declaration
  108                       | annotation_declaration . "^^" annotation_declaration
  108                       | annotation_declaration "^^" annotation_declaration .

    "&&"  shift, and go to state 100

    $default  reduce using rule 108 (annotation_declaration)


State 147

  106 annotation_declaration: annotation_declaration . "&&" annotation_declaration
  107                       | annotation_declaration . "||" annotation_declaration
  108                       | annotation_declaration . "^^" annotation_declaration
  112 annotation_list: annotation_list ',' annotation_declaration .

    "&&"  shift, and go to state 100
    "||"  shift, and go to state 101
    "^^"  shift, and go to state 102

    $default  reduce using rule 112 (annotation_list)


State 148

  211 function_declaration: optional_public_or_private_function $@2 . function_declaration_header expression_block

    "operator"  shift, and go to state 172
    "bool"      shift, and go to state 173
    "string"    shift, and go to state 174
    "int"       shift, and go to state 175
    "int2"      shift, and go to state 176
    "int3"      shift, and go to state 177
    "int4"      shift, and go to state 178
    "uint"      shift, and go to state 179
    "uint2"     shift, and go to state 180
    "uint3"     shift, and go to state 181
    "uint4"     shift, and go to state 182
    "float"     shift, and go to state 183
    "float2"    shift, and go to state 184
    "float3"    shift, and go to state 185
    "float4"    shift, and go to state 186
    "range"     shift, and go to state 187
    "urange"    shift, and go to state 188
    "range64"   shift, and go to state 189
    "urange64"  shift, and go to state 190
    "int64"     shift, and go to state 191
    "uint64"    shift, and go to state 192
    "double"    shift, and go to state 193
    "int8"      shift, and go to state 194
    "uint8"     shift, and go to state 195
    "int16"     shift, and go to state 196
    "uint16"    shift, and go to state 197
    "++"        shift, and go to state 198
    "--"        shift, and go to state 199
    "name"      shift, and go to state 200

    function_name                go to state 201
    function_declaration_header  go to state 202


State 149

  549 enum_name: "name" .

    $default  reduce using rule 549 (enum_name)


State 150

  554 enum_declaration: optional_annotation_list "enum" optional_public_or_private_enum enum_name . optional_enum_basic_type_declaration "begin of code block" $@30 enum_list optional_comma $@31 "end of code block"

    ':'  shift, and go to state 203

    $default  reduce using rule 550 (optional_enum_basic_type_declaration)

    optional_enum_basic_type_declaration  go to state 204


State 151

  569 structure_declaration: optional_annotation_list class_or_struct optional_public_or_private_structure $@32 . structure_name $@33 optional_struct_variable_declaration_list

    "sealed"  shift, and go to state 205

    $default  reduce using rule 557 (optional_sealed)

    optional_sealed  go to state 206
    structure_name   go to state 207


State 152

  534 global_let: kwd_let optional_shared optional_public_or_private_variable $@28 . optional_field_annotation global_let_variable_declaration

    '@'  shift, and go to state 208

    $default  reduce using rule 466 (optional_field_annotation)

    metadata_argument_list     go to state 209
    optional_field_annotation  go to state 210


State 153

   23 character_sequence: STRING_CHARACTER .

    $default  reduce using rule 23 (character_sequence)


State 154

   24 character_sequence: STRING_CHARACTER_ESC .

    $default  reduce using rule 24 (character_sequence)


State 155

   28 string_constant: "start of the string" "end of the string" .

    $default  reduce using rule 28 (string_constant)


State 156

   25 character_sequence: character_sequence . STRING_CHARACTER
   26                   | character_sequence . STRING_CHARACTER_ESC
   27 string_constant: "start of the string" character_sequence . "end of the string"

    STRING_CHARACTER      shift, and go to state 211
    STRING_CHARACTER_ESC  shift, and go to state 212
    "end of the string"   shift, and go to state 213


State 157

   80 annotation_argument_value: "true" .

    $default  reduce using rule 80 (annotation_argument_value)


State 158

   81 annotation_argument_value: "false" .

    $default  reduce using rule 81 (annotation_argument_value)


State 159

   78 annotation_argument_value: "integer constant" .

    $default  reduce using rule 78 (annotation_argument_value)


State 160

   79 annotation_argument_value: "floating point constant" .

    $default  reduce using rule 79 (annotation_argument_value)


State 161

   77 annotation_argument_value: "name" .

    $default  reduce using rule 77 (annotation_argument_value)


State 162

   76 annotation_argument_value: string_constant .

    $default  reduce using rule 76 (annotation_argument_value)


State 163

   82 annotation_argument_value_list: annotation_argument_value .

    $default  reduce using rule 82 (annotation_argument_value_list)


State 164

   83 annotation_argument_value_list: annotation_argument_value_list . ',' annotation_argument_value
   94 annotation_argument: annotation_argument_name '=' '(' annotation_argument_value_list . ')'

    ','  shift, and go to state 214
    ')'  shift, and go to state 215


State 165

   44 require_module: require_module_name "as" "name" is_public_module .

    $default  reduce using rule 44 (require_module)


State 166

  544 single_alias: optional_public_or_private_alias "name" $@29 '=' . type_declaration

    "type"       shift, and go to state 216
    "array"      shift, and go to state 217
    "table"      shift, and go to state 218
    "typedecl"   shift, and go to state 219
    "iterator"   shift, and go to state 220
    "smart_ptr"  shift, and go to state 221
    "bool"       shift, and go to state 222
    "void"       shift, and go to state 223
    "string"     shift, and go to state 224
    "auto"       shift, and go to state 225
    "int"        shift, and go to state 226
    "int2"       shift, and go to state 227
    "int3"       shift, and go to state 228
    "int4"       shift, and go to state 229
    "uint"       shift, and go to state 230
    "bitfield"   shift, and go to state 231
    "uint2"      shift, and go to state 232
    "uint3"      shift, and go to state 233
    "uint4"      shift, and go to state 234
    "float"      shift, and go to state 235
    "float2"     shift, and go to state 236
    "float3"     shift, and go to state 237
    "float4"     shift, and go to state 238
    "range"      shift, and go to state 239
    "urange"     shift, and go to state 240
    "range64"    shift, and go to state 241
    "urange64"   shift, and go to state 242
    "block"      shift, and go to state 243
    "int64"      shift, and go to state 244
    "uint64"     shift, and go to state 245
    "double"     shift, and go to state 246
    "function"   shift, and go to state 247
    "lambda"     shift, and go to state 248
    "int8"       shift, and go to state 249
    "uint8"      shift, and go to state 250
    "int16"      shift, and go to state 251
    "uint16"     shift, and go to state 252
    "tuple"      shift, and go to state 253
    "variant"    shift, and go to state 254
    "::"         shift, and go to state 55
    "$t"         shift, and go to state 255
    "name"       shift, and go to state 56
    '$'          shift, and go to state 256

    name_in_namespace                   go to state 257
    basic_type_declaration              go to state 258
    structure_type_declaration          go to state 259
    auto_type_declaration               go to state 260
    bitfield_type_declaration           go to state 261
    type_declaration_no_options         go to state 262
    type_declaration_no_options_no_dim  go to state 263
    type_declaration                    go to state 264


State 167

  709 bitfield_alias_declaration: "bitfield" optional_public_or_private_alias "name" $@69 "begin of code block" . $@70 bitfield_alias_bits optional_comma $@71 "end of code block"

    $default  reduce using rule 707 ($@70)

    $@70  go to state 265


State 168

  701 tuple_alias_declaration: "tuple" optional_public_or_private_alias "name" $@63 "begin of code block" . $@64 tuple_alias_type_list $@65 "end of code block"

    $default  reduce using rule 699 ($@64)

    $@64  go to state 266


State 169

  705 variant_alias_declaration: "variant" optional_public_or_private_alias "name" $@66 "begin of code block" . $@67 variant_alias_type_list $@68 "end of code block"

    $default  reduce using rule 703 ($@67)

    $@67  go to state 267


State 170

   34 reader_character_sequence: reader_character_sequence STRING_CHARACTER .

    $default  reduce using rule 34 (reader_character_sequence)


State 171

  103 annotation_declaration_basic: annotation_declaration_name '(' annotation_argument_list ')' .

    $default  reduce using rule 103 (annotation_declaration_basic)


State 172

  121 function_name: "operator" . '!'
  122              | "operator" . '~'
  123              | "operator" . "+="
  124              | "operator" . "-="
  125              | "operator" . "*="
  126              | "operator" . "/="
  127              | "operator" . "%="
  128              | "operator" . "&="
  129              | "operator" . "|="
  130              | "operator" . "^="
  131              | "operator" . "&&="
  132              | "operator" . "||="
  133              | "operator" . "^^="
  134              | "operator" . "&&"
  135              | "operator" . "||"
  136              | "operator" . "^^"
  137              | "operator" . '+'
  138              | "operator" . '-'
  139              | "operator" . '*'
  140              | "operator" . '/'
  141              | "operator" . '%'
  142              | "operator" . '<'
  143              | "operator" . '>'
  144              | "operator" . ".."
  145              | "operator" . "=="
  146              | "operator" . "!="
  147              | "operator" . "<="
  148              | "operator" . ">="
  149              | "operator" . '&'
  150              | "operator" . '|'
  151              | "operator" . '^'
  154              | "operator" . "++"
  155              | "operator" . "--"
  156              | "operator" . "<<"
  157              | "operator" . ">>"
  158              | "operator" . "<<="
  159              | "operator" . ">>="
  160              | "operator" . "<<<"
  161              | "operator" . ">>>"
  162              | "operator" . "<<<="
  163              | "operator" . ">>>="
  164              | "operator" . '[' ']'
  165              | "operator" . "?[" ']'
  166              | "operator" . '.'
  167              | "operator" . "?."
  168              | "operator" . '.' "name"
  169              | "operator" . '.' "name" ":="
  170              | "operator" . "?." "name"
  171              | "operator" . ":="
  172              | "operator" . "delete"
  173              | "operator" . "??"
  174              | "operator" . "is"
  175              | "operator" . "as"
  176              | "operator" . "is" "name"
  177              | "operator" . "as" "name"
  178              | "operator" . '?' "as"
  179              | "operator" . '?' "as" "name"

    "is"      shift, and go to state 268
    "as"      shift, and go to state 269
    "delete"  shift, and go to state 270
    "+="      shift, and go to state 271
    "-="      shift, and go to state 272
    "/="      shift, and go to state 273
    "*="      shift, and go to state 274
    "%="      shift, and go to state 275
    "&="      shift, and go to state 276
    "|="      shift, and go to state 277
    "^="      shift, and go to state 278
    "<<"      shift, and go to state 279
    ">>"      shift, and go to state 280
    "++"      shift, and go to state 281
    "--"      shift, and go to state 282
    "<="      shift, and go to state 283
    "<<="     shift, and go to state 284
    ">>="     shift, and go to state 285
    ">="      shift, and go to state 286
    "=="      shift, and go to state 287
    "!="      shift, and go to state 288
    "??"      shift, and go to state 289
    "?."      shift, and go to state 290
    "?["      shift, and go to state 291
    ":="      shift, and go to state 292
    "<<<"     shift, and go to state 293
    ">>>"     shift, and go to state 294
    "<<<="    shift, and go to state 295
    ">>>="    shift, and go to state 296
    "&&"      shift, and go to state 297
    "||"      shift, and go to state 298
    "^^"      shift, and go to state 299
    "&&="     shift, and go to state 300
    "||="     shift, and go to state 301
    "^^="     shift, and go to state 302
    ".."      shift, and go to state 303
    '?'       shift, and go to state 304
    '|'       shift, and go to state 305
    '^'       shift, and go to state 306
    '&'       shift, and go to state 307
    '<'       shift, and go to state 308
    '>'       shift, and go to state 309
    '-'       shift, and go to state 310
    '+'       shift, and go to state 311
    '*'       shift, and go to state 312
    '/'       shift, and go to state 313
    '%'       shift, and go to state 314
    '~'       shift, and go to state 315
    '!'       shift, and go to state 316
    '.'       shift, and go to state 317
    '['       shift, and go to state 318


State 173

  180 function_name: "bool" .

    $default  reduce using rule 180 (function_name)


State 174

  181 function_name: "string" .

    $default  reduce using rule 181 (function_name)


State 175

  182 function_name: "int" .

    $default  reduce using rule 182 (function_name)


State 176

  183 function_name: "int2" .

    $default  reduce using rule 183 (function_name)


State 177

  184 function_name: "int3" .

    $default  reduce using rule 184 (function_name)


State 178

  185 function_name: "int4" .

    $default  reduce using rule 185 (function_name)


State 179

  186 function_name: "uint" .

    $default  reduce using rule 186 (function_name)


State 180

  187 function_name: "uint2" .

    $default  reduce using rule 187 (function_name)


State 181

  188 function_name: "uint3" .

    $default  reduce using rule 188 (function_name)


State 182

  189 function_name: "uint4" .

    $default  reduce using rule 189 (function_name)


State 183

  190 function_name: "float" .

    $default  reduce using rule 190 (function_name)


State 184

  191 function_name: "float2" .

    $default  reduce using rule 191 (function_name)


State 185

  192 function_name: "float3" .

    $default  reduce using rule 192 (function_name)


State 186

  193 function_name: "float4" .

    $default  reduce using rule 193 (function_name)


State 187

  194 function_name: "range" .

    $default  reduce using rule 194 (function_name)


State 188

  195 function_name: "urange" .

    $default  reduce using rule 195 (function_name)


State 189

  196 function_name: "range64" .

    $default  reduce using rule 196 (function_name)


State 190

  197 function_name: "urange64" .

    $default  reduce using rule 197 (function_name)


State 191

  198 function_name: "int64" .

    $default  reduce using rule 198 (function_name)


State 192

  199 function_name: "uint64" .

    $default  reduce using rule 199 (function_name)


State 193

  200 function_name: "double" .

    $default  reduce using rule 200 (function_name)


State 194

  201 function_name: "int8" .

    $default  reduce using rule 201 (function_name)


State 195

  202 function_name: "uint8" .

    $default  reduce using rule 202 (function_name)


State 196

  203 function_name: "int16" .

    $default  reduce using rule 203 (function_name)


State 197

  204 function_name: "uint16" .

    $default  reduce using rule 204 (function_name)


State 198

  152 function_name: "++" . "operator"

    "operator"  shift, and go to state 319


State 199

  153 function_name: "--" . "operator"

    "operator"  shift, and go to state 320


State 200

  120 function_name: "name" .

    $default  reduce using rule 120 (function_name)


State 201

  209 function_declaration_header: function_name . optional_function_argument_list optional_function_type

    '('  shift, and go to state 321

    $default  reduce using rule 115 (optional_function_argument_list)

    optional_function_argument_list  go to state 322


State 202

  211 function_declaration: optional_public_or_private_function $@2 function_declaration_header . expression_block

    "begin of code block"  shift, and go to state 323

    expression_block  go to state 324


State 203

  551 optional_enum_basic_type_declaration: ':' . enum_basic_type_declaration

    "int"     shift, and go to state 325
    "uint"    shift, and go to state 326
    "int64"   shift, and go to state 327
    "uint64"  shift, and go to state 328
    "int8"    shift, and go to state 329
    "uint8"   shift, and go to state 330
    "int16"   shift, and go to state 331
    "uint16"  shift, and go to state 332

    enum_basic_type_declaration  go to state 333


State 204

  554 enum_declaration: optional_annotation_list "enum" optional_public_or_private_enum enum_name optional_enum_basic_type_declaration . "begin of code block" $@30 enum_list optional_comma $@31 "end of code block"

    "begin of code block"  shift, and go to state 334


State 205

  558 optional_sealed: "sealed" .

    $default  reduce using rule 558 (optional_sealed)


State 206

  559 structure_name: optional_sealed . "name" optional_structure_parent

    "name"  shift, and go to state 335


State 207

  569 structure_declaration: optional_annotation_list class_or_struct optional_public_or_private_structure $@32 structure_name . $@33 optional_struct_variable_declaration_list

    $default  reduce using rule 568 ($@33)

    $@33  go to state 336


State 208

   97 metadata_argument_list: '@' . annotation_argument

    "type"  shift, and go to state 32
    "in"    shift, and go to state 33
    "name"  shift, and go to state 34

    annotation_argument_name  go to state 35
    annotation_argument       go to state 337


State 209

   98 metadata_argument_list: metadata_argument_list . '@' annotation_argument
  467 optional_field_annotation: metadata_argument_list .

    '@'  shift, and go to state 338

    $default  reduce using rule 467 (optional_field_annotation)


State 210

  534 global_let: kwd_let optional_shared optional_public_or_private_variable $@28 optional_field_annotation . global_let_variable_declaration

    "name"  shift, and go to state 339

    global_let_variable_name_with_pos_list  go to state 340
    global_let_variable_declaration         go to state 341


State 211

   25 character_sequence: character_sequence STRING_CHARACTER .

    $default  reduce using rule 25 (character_sequence)


State 212

   26 character_sequence: character_sequence STRING_CHARACTER_ESC .

    $default  reduce using rule 26 (character_sequence)


State 213

   27 string_constant: "start of the string" character_sequence "end of the string" .

    $default  reduce using rule 27 (string_constant)


State 214

   83 annotation_argument_value_list: annotation_argument_value_list ',' . annotation_argument_value

    "true"                     shift, and go to state 157
    "false"                    shift, and go to state 158
    "integer constant"         shift, and go to state 159
    "floating point constant"  shift, and go to state 160
    "name"                     shift, and go to state 161
    "start of the string"      shift, and go to state 123

    string_constant            go to state 162
    annotation_argument_value  go to state 342


State 215

   94 annotation_argument: annotation_argument_name '=' '(' annotation_argument_value_list ')' .

    $default  reduce using rule 94 (annotation_argument)


State 216

  638 type_declaration_no_options_no_dim: "type" . '<' $@36 type_declaration '>' $@37

    '<'  shift, and go to state 343


State 217

  661 type_declaration_no_options_no_dim: "array" . '<' $@41 type_declaration '>' $@42

    '<'  shift, and go to state 344


State 218

  664 type_declaration_no_options_no_dim: "table" . '<' $@43 table_type_pair '>' $@44

    '<'  shift, and go to state 345


State 219

  639 type_declaration_no_options_no_dim: "typedecl" . '(' expr ')'

    '('  shift, and go to state 346


State 220

  667 type_declaration_no_options_no_dim: "iterator" . '<' $@45 type_declaration '>' $@46

    '<'  shift, and go to state 347


State 221

  657 type_declaration_no_options_no_dim: "smart_ptr" . '<' $@39 type_declaration '>' $@40

    '<'  shift, and go to state 348


State 222

  575 basic_type_declaration: "bool" .

    $default  reduce using rule 575 (basic_type_declaration)


State 223

  595 basic_type_declaration: "void" .

    $default  reduce using rule 595 (basic_type_declaration)


State 224

  576 basic_type_declaration: "string" .

    $default  reduce using rule 576 (basic_type_declaration)


State 225

  611 auto_type_declaration: "auto" .
  612                      | "auto" . '(' "name" ')'

    '('  shift, and go to state 349

    $default  reduce using rule 611 (auto_type_declaration)


State 226

  577 basic_type_declaration: "int" .

    $default  reduce using rule 577 (basic_type_declaration)


State 227

  581 basic_type_declaration: "int2" .

    $default  reduce using rule 581 (basic_type_declaration)


State 228

  582 basic_type_declaration: "int3" .

    $default  reduce using rule 582 (basic_type_declaration)


State 229

  583 basic_type_declaration: "int4" .

    $default  reduce using rule 583 (basic_type_declaration)


State 230

  584 basic_type_declaration: "uint" .

    $default  reduce using rule 584 (basic_type_declaration)


State 231

  601 basic_type_declaration: "bitfield" .
  621 bitfield_type_declaration: "bitfield" . '<' $@34 bitfield_bits '>' $@35

    '<'  shift, and go to state 350

    $default  reduce using rule 601 (basic_type_declaration)


State 232

  588 basic_type_declaration: "uint2" .

    $default  reduce using rule 588 (basic_type_declaration)


State 233

  589 basic_type_declaration: "uint3" .

    $default  reduce using rule 589 (basic_type_declaration)


State 234

  590 basic_type_declaration: "uint4" .

    $default  reduce using rule 590 (basic_type_declaration)


State 235

  591 basic_type_declaration: "float" .

    $default  reduce using rule 591 (basic_type_declaration)


State 236

  592 basic_type_declaration: "float2" .

    $default  reduce using rule 592 (basic_type_declaration)


State 237

  593 basic_type_declaration: "float3" .

    $default  reduce using rule 593 (basic_type_declaration)


State 238

  594 basic_type_declaration: "float4" .

    $default  reduce using rule 594 (basic_type_declaration)


State 239

  596 basic_type_declaration: "range" .

    $default  reduce using rule 596 (basic_type_declaration)


State 240

  597 basic_type_declaration: "urange" .

    $default  reduce using rule 597 (basic_type_declaration)


State 241

  598 basic_type_declaration: "range64" .

    $default  reduce using rule 598 (basic_type_declaration)


State 242

  599 basic_type_declaration: "urange64" .

    $default  reduce using rule 599 (basic_type_declaration)


State 243

  668 type_declaration_no_options_no_dim: "block" .
  671                                   | "block" . '<' $@47 type_declaration '>' $@48
  674                                   | "block" . '<' $@49 optional_function_argument_list optional_function_type '>' $@50

    '<'  shift, and go to state 351

    $default  reduce using rule 668 (type_declaration_no_options_no_dim)


State 244

  580 basic_type_declaration: "int64" .

    $default  reduce using rule 580 (basic_type_declaration)


State 245

  587 basic_type_declaration: "uint64" .

    $default  reduce using rule 587 (basic_type_declaration)


State 246

  600 basic_type_declaration: "double" .

    $default  reduce using rule 600 (basic_type_declaration)


State 247

  675 type_declaration_no_options_no_dim: "function" .
  678                                   | "function" . '<' $@51 type_declaration '>' $@52
  681                                   | "function" . '<' $@53 optional_function_argument_list optional_function_type '>' $@54

    '<'  shift, and go to state 352

    $default  reduce using rule 675 (type_declaration_no_options_no_dim)


State 248

  682 type_declaration_no_options_no_dim: "lambda" .
  685                                   | "lambda" . '<' $@55 type_declaration '>' $@56
  688                                   | "lambda" . '<' $@57 optional_function_argument_list optional_function_type '>' $@58

    '<'  shift, and go to state 353

    $default  reduce using rule 682 (type_declaration_no_options_no_dim)


State 249

  578 basic_type_declaration: "int8" .

    $default  reduce using rule 578 (basic_type_declaration)


State 250

  585 basic_type_declaration: "uint8" .

    $default  reduce using rule 585 (basic_type_declaration)


State 251

  579 basic_type_declaration: "int16" .

    $default  reduce using rule 579 (basic_type_declaration)


State 252

  586 basic_type_declaration: "uint16" .

    $default  reduce using rule 586 (basic_type_declaration)


State 253

  691 type_declaration_no_options_no_dim: "tuple" . '<' $@59 tuple_type_list '>' $@60

    '<'  shift, and go to state 354


State 254

  694 type_declaration_no_options_no_dim: "variant" . '<' $@61 variant_type_list '>' $@62

    '<'  shift, and go to state 355


State 255

  613 auto_type_declaration: "$t" . '(' expr ')'

    '('  shift, and go to state 356


State 256

  640 type_declaration_no_options_no_dim: '$' . name_in_namespace '(' optional_expr_list ')'
  642                                   | '$' . name_in_namespace '<' $@38 type_declaration_no_options_list '>' '(' optional_expr_list ')'

    "::"    shift, and go to state 55
    "name"  shift, and go to state 56

    name_in_namespace  go to state 357


State 257

  610 structure_type_declaration: name_in_namespace .

    $default  reduce using rule 610 (structure_type_declaration)


State 258

  632 type_declaration_no_options_no_dim: basic_type_declaration .

    $default  reduce using rule 632 (type_declaration_no_options_no_dim)


State 259

  635 type_declaration_no_options_no_dim: structure_type_declaration .

    $default  reduce using rule 635 (type_declaration_no_options_no_dim)


State 260

  633 type_declaration_no_options_no_dim: auto_type_declaration .

    $default  reduce using rule 633 (type_declaration_no_options_no_dim)


State 261

  634 type_declaration_no_options_no_dim: bitfield_type_declaration .

    $default  reduce using rule 634 (type_declaration_no_options_no_dim)


State 262

  695 type_declaration: type_declaration_no_options .

    $default  reduce using rule 695 (type_declaration)


State 263

  630 type_declaration_no_options: type_declaration_no_options_no_dim .
  631                            | type_declaration_no_options_no_dim . dim_list
  643 type_declaration_no_options_no_dim: type_declaration_no_options_no_dim . '-' '[' ']'
  644                                   | type_declaration_no_options_no_dim . "explicit"
  645                                   | type_declaration_no_options_no_dim . "const"
  646                                   | type_declaration_no_options_no_dim . '-' "const"
  647                                   | type_declaration_no_options_no_dim . '&'
  648                                   | type_declaration_no_options_no_dim . '-' '&'
  649                                   | type_declaration_no_options_no_dim . '#'
  650                                   | type_declaration_no_options_no_dim . "implicit"
  651                                   | type_declaration_no_options_no_dim . '-' '#'
  652                                   | type_declaration_no_options_no_dim . "==" "const"
  653                                   | type_declaration_no_options_no_dim . "==" '&'
  654                                   | type_declaration_no_options_no_dim . '?'
  658                                   | type_declaration_no_options_no_dim . "??"

    "const"     shift, and go to state 358
    "implicit"  shift, and go to state 359
    "explicit"  shift, and go to state 360
    "=="        shift, and go to state 361
    "??"        shift, and go to state 362
    '?'         shift, and go to state 363
    '&'         shift, and go to state 364
    '-'         shift, and go to state 365
    '['         shift, and go to state 366
    '#'         shift, and go to state 367

    $default  reduce using rule 630 (type_declaration_no_options)

    dim_list  go to state 368


State 264

  544 single_alias: optional_public_or_private_alias "name" $@29 '=' type_declaration .
  696 type_declaration: type_declaration . '|' type_declaration_no_options
  697                 | type_declaration . '|' '#'

    '|'  shift, and go to state 369

    $default  reduce using rule 544 (single_alias)


State 265

  709 bitfield_alias_declaration: "bitfield" optional_public_or_private_alias "name" $@69 "begin of code block" $@70 . bitfield_alias_bits optional_comma $@71 "end of code block"

    "name"  shift, and go to state 370

    $default  reduce using rule 616 (bitfield_alias_bits)

    bitfield_alias_bits  go to state 371


State 266

  701 tuple_alias_declaration: "tuple" optional_public_or_private_alias "name" $@63 "begin of code block" $@64 . tuple_alias_type_list $@65 "end of code block"

    $default  reduce using rule 494 (tuple_alias_type_list)

    tuple_alias_type_list  go to state 372


State 267

  705 variant_alias_declaration: "variant" optional_public_or_private_alias "name" $@66 "begin of code block" $@67 . variant_alias_type_list $@68 "end of code block"

    $default  reduce using rule 500 (variant_alias_type_list)

    variant_alias_type_list  go to state 373


State 268

  174 function_name: "operator" "is" .
  176              | "operator" "is" . "name"

    "name"  shift, and go to state 374

    $default  reduce using rule 174 (function_name)


State 269

  175 function_name: "operator" "as" .
  177              | "operator" "as" . "name"

    "name"  shift, and go to state 375

    $default  reduce using rule 175 (function_name)


State 270

  172 function_name: "operator" "delete" .

    $default  reduce using rule 172 (function_name)


State 271

  123 function_name: "operator" "+=" .

    $default  reduce using rule 123 (function_name)


State 272

  124 function_name: "operator" "-=" .

    $default  reduce using rule 124 (function_name)


State 273

  126 function_name: "operator" "/=" .

    $default  reduce using rule 126 (function_name)


State 274

  125 function_name: "operator" "*=" .

    $default  reduce using rule 125 (function_name)


State 275

  127 function_name: "operator" "%=" .

    $default  reduce using rule 127 (function_name)


State 276

  128 function_name: "operator" "&=" .

    $default  reduce using rule 128 (function_name)


State 277

  129 function_name: "operator" "|=" .

    $default  reduce using rule 129 (function_name)


State 278

  130 function_name: "operator" "^=" .

    $default  reduce using rule 130 (function_name)


State 279

  156 function_name: "operator" "<<" .

    $default  reduce using rule 156 (function_name)


State 280

  157 function_name: "operator" ">>" .

    $default  reduce using rule 157 (function_name)


State 281

  154 function_name: "operator" "++" .

    $default  reduce using rule 154 (function_name)


State 282

  155 function_name: "operator" "--" .

    $default  reduce using rule 155 (function_name)


State 283

  147 function_name: "operator" "<=" .

    $default  reduce using rule 147 (function_name)


State 284

  158 function_name: "operator" "<<=" .

    $default  reduce using rule 158 (function_name)


State 285

  159 function_name: "operator" ">>=" .

    $default  reduce using rule 159 (function_name)


State 286

  148 function_name: "operator" ">=" .

    $default  reduce using rule 148 (function_name)


State 287

  145 function_name: "operator" "==" .

    $default  reduce using rule 145 (function_name)


State 288

  146 function_name: "operator" "!=" .

    $default  reduce using rule 146 (function_name)


State 289

  173 function_name: "operator" "??" .

    $default  reduce using rule 173 (function_name)


State 290

  167 function_name: "operator" "?." .
  170              | "operator" "?." . "name"

    "name"  shift, and go to state 376

    $default  reduce using rule 167 (function_name)


State 291

  165 function_name: "operator" "?[" . ']'

    ']'  shift, and go to state 377


State 292

  171 function_name: "operator" ":=" .

    $default  reduce using rule 171 (function_name)


State 293

  160 function_name: "operator" "<<<" .

    $default  reduce using rule 160 (function_name)


State 294

  161 function_name: "operator" ">>>" .

    $default  reduce using rule 161 (function_name)


State 295

  162 function_name: "operator" "<<<=" .

    $default  reduce using rule 162 (function_name)


State 296

  163 function_name: "operator" ">>>=" .

    $default  reduce using rule 163 (function_name)


State 297

  134 function_name: "operator" "&&" .

    $default  reduce using rule 134 (function_name)


State 298

  135 function_name: "operator" "||" .

    $default  reduce using rule 135 (function_name)


State 299

  136 function_name: "operator" "^^" .

    $default  reduce using rule 136 (function_name)


State 300

  131 function_name: "operator" "&&=" .

    $default  reduce using rule 131 (function_name)


State 301

  132 function_name: "operator" "||=" .

    $default  reduce using rule 132 (function_name)


State 302

  133 function_name: "operator" "^^=" .

    $default  reduce using rule 133 (function_name)


State 303

  144 function_name: "operator" ".." .

    $default  reduce using rule 144 (function_name)


State 304

  178 function_name: "operator" '?' . "as"
  179              | "operator" '?' . "as" "name"

    "as"  shift, and go to state 378


State 305

  150 function_name: "operator" '|' .

    $default  reduce using rule 150 (function_name)


State 306

  151 function_name: "operator" '^' .

    $default  reduce using rule 151 (function_name)


State 307

  149 function_name: "operator" '&' .

    $default  reduce using rule 149 (function_name)


State 308

  142 function_name: "operator" '<' .

    $default  reduce using rule 142 (function_name)


State 309

  143 function_name: "operator" '>' .

    $default  reduce using rule 143 (function_name)


State 310

  138 function_name: "operator" '-' .

    $default  reduce using rule 138 (function_name)


State 311

  137 function_name: "operator" '+' .

    $default  reduce using rule 137 (function_name)


State 312

  139 function_name: "operator" '*' .

    $default  reduce using rule 139 (function_name)


State 313

  140 function_name: "operator" '/' .

    $default  reduce using rule 140 (function_name)


State 314

  141 function_name: "operator" '%' .

    $default  reduce using rule 141 (function_name)


State 315

  122 function_name: "operator" '~' .

    $default  reduce using rule 122 (function_name)


State 316

  121 function_name: "operator" '!' .

    $default  reduce using rule 121 (function_name)


State 317

  166 function_name: "operator" '.' .
  168              | "operator" '.' . "name"
  169              | "operator" '.' . "name" ":="

    "name"  shift, and go to state 379

    $default  reduce using rule 166 (function_name)


State 318

  164 function_name: "operator" '[' . ']'

    ']'  shift, and go to state 380


State 319

  152 function_name: "++" "operator" .

    $default  reduce using rule 152 (function_name)


State 320

  153 function_name: "--" "operator" .

    $default  reduce using rule 153 (function_name)


State 321

  116 optional_function_argument_list: '(' . ')'
  117                                | '(' . function_argument_list ')'

    "$a"  shift, and go to state 381
    ')'   shift, and go to state 382
    '@'   shift, and go to state 208

    $default  reduce using rule 466 (optional_field_annotation)

    metadata_argument_list         go to state 209
    optional_field_annotation      go to state 383
    function_argument_declaration  go to state 384
    function_argument_list         go to state 385


State 322

  209 function_declaration_header: function_name optional_function_argument_list . optional_function_type

    ':'  shift, and go to state 386

    $default  reduce using rule 118 (optional_function_type)

    optional_function_type  go to state 387


State 323

  212 expression_block: "begin of code block" . expressions "end of code block"
  213                 | "begin of code block" . expressions "end of code block" "finally" "begin of code block" expressions "end of code block"

    $default  reduce using rule 233 (expressions)

    expressions  go to state 388


State 324

  211 function_declaration: optional_public_or_private_function $@2 function_declaration_header expression_block .

    $default  reduce using rule 211 (function_declaration)


State 325

  602 enum_basic_type_declaration: "int" .

    $default  reduce using rule 602 (enum_basic_type_declaration)


State 326

  605 enum_basic_type_declaration: "uint" .

    $default  reduce using rule 605 (enum_basic_type_declaration)


State 327

  608 enum_basic_type_declaration: "int64" .

    $default  reduce using rule 608 (enum_basic_type_declaration)


State 328

  609 enum_basic_type_declaration: "uint64" .

    $default  reduce using rule 609 (enum_basic_type_declaration)


State 329

  603 enum_basic_type_declaration: "int8" .

    $default  reduce using rule 603 (enum_basic_type_declaration)


State 330

  606 enum_basic_type_declaration: "uint8" .

    $default  reduce using rule 606 (enum_basic_type_declaration)


State 331

  604 enum_basic_type_declaration: "int16" .

    $default  reduce using rule 604 (enum_basic_type_declaration)


State 332

  607 enum_basic_type_declaration: "uint16" .

    $default  reduce using rule 607 (enum_basic_type_declaration)


State 333

  551 optional_enum_basic_type_declaration: ':' enum_basic_type_declaration .

    $default  reduce using rule 551 (optional_enum_basic_type_declaration)


State 334

  554 enum_declaration: optional_annotation_list "enum" optional_public_or_private_enum enum_name optional_enum_basic_type_declaration "begin of code block" . $@30 enum_list optional_comma $@31 "end of code block"

    $default  reduce using rule 552 ($@30)

    $@30  go to state 389


State 335

  559 structure_name: optional_sealed "name" . optional_structure_parent

    ':'  shift, and go to state 390

    $default  reduce using rule 555 (optional_structure_parent)

    optional_structure_parent  go to state 391


State 336

  569 structure_declaration: optional_annotation_list class_or_struct optional_public_or_private_structure $@32 structure_name $@33 . optional_struct_variable_declaration_list

    "begin of code block"  shift, and go to state 392

    $default  reduce using rule 565 (optional_struct_variable_declaration_list)

    optional_struct_variable_declaration_list  go to state 393


State 337

   97 metadata_argument_list: '@' annotation_argument .

    $default  reduce using rule 97 (metadata_argument_list)


State 338

   98 metadata_argument_list: metadata_argument_list '@' . annotation_argument

    "type"  shift, and go to state 32
    "in"    shift, and go to state 33
    "name"  shift, and go to state 34

    annotation_argument_name  go to state 35
    annotation_argument       go to state 394


State 339

  520 global_let_variable_name_with_pos_list: "name" .

    $default  reduce using rule 520 (global_let_variable_name_with_pos_list)


State 340

  521 global_let_variable_name_with_pos_list: global_let_variable_name_with_pos_list . ',' "name"
  525 global_let_variable_declaration: global_let_variable_name_with_pos_list . ':' type_declaration_no_options "end of expression"
  526                                | global_let_variable_name_with_pos_list . ':' type_declaration_no_options copy_or_move_or_clone expr "end of expression"
  527                                | global_let_variable_name_with_pos_list . optional_ref copy_or_move_or_clone expr "end of expression"

    ','  shift, and go to state 395
    ':'  shift, and go to state 396
    '&'  shift, and go to state 397

    $default  reduce using rule 513 (optional_ref)

    optional_ref  go to state 398


State 341

  534 global_let: kwd_let optional_shared optional_public_or_private_variable $@28 optional_field_annotation global_let_variable_declaration .

    $default  reduce using rule 534 (global_let)


State 342

   83 annotation_argument_value_list: annotation_argument_value_list ',' annotation_argument_value .

    $default  reduce using rule 83 (annotation_argument_value_list)


State 343

  638 type_declaration_no_options_no_dim: "type" '<' . $@36 type_declaration '>' $@37

    $default  reduce using rule 636 ($@36)

    $@36  go to state 399


State 344

  661 type_declaration_no_options_no_dim: "array" '<' . $@41 type_declaration '>' $@42

    $default  reduce using rule 659 ($@41)

    $@41  go to state 400


State 345

  664 type_declaration_no_options_no_dim: "table" '<' . $@43 table_type_pair '>' $@44

    $default  reduce using rule 662 ($@43)

    $@43  go to state 401


State 346

  639 type_declaration_no_options_no_dim: "typedecl" '(' . expr ')'

    "struct"                          shift, and go to state 402
    "class"                           shift, and go to state 403
    "true"                            shift, and go to state 404
    "false"                           shift, and go to state 405
    "new"                             shift, and go to state 406
    "typeinfo"                        shift, and go to state 407
    "type"                            shift, and go to state 408
    "array"                           shift, and go to state 409
    "null"                            shift, and go to state 410
    "table"                           shift, and go to state 411
    "deref"                           shift, and go to state 412
    "cast"                            shift, and go to state 413
    "upcast"                          shift, and go to state 414
    "addr"                            shift, and go to state 415
    "reinterpret"                     shift, and go to state 416
    "unsafe"                          shift, and go to state 417
    "fixed_array"                     shift, and go to state 418
    "default"                         shift, and go to state 419
    "bool"                            shift, and go to state 222
    "void"                            shift, and go to state 223
    "string"                          shift, and go to state 224
    "int"                             shift, and go to state 226
    "int2"                            shift, and go to state 227
    "int3"                            shift, and go to state 228
    "int4"                            shift, and go to state 229
    "uint"                            shift, and go to state 230
    "bitfield"                        shift, and go to state 420
    "uint2"                           shift, and go to state 232
    "uint3"                           shift, and go to state 233
    "uint4"                           shift, and go to state 234
    "float"                           shift, and go to state 235
    "float2"                          shift, and go to state 236
    "float3"                          shift, and go to state 237
    "float4"                          shift, and go to state 238
    "range"                           shift, and go to state 239
    "urange"                          shift, and go to state 240
    "range64"                         shift, and go to state 241
    "urange64"                        shift, and go to state 242
    "int64"                           shift, and go to state 244
    "uint64"                          shift, and go to state 245
    "double"                          shift, and go to state 246
    "int8"                            shift, and go to state 249
    "uint8"                           shift, and go to state 250
    "int16"                           shift, and go to state 251
    "uint16"                          shift, and go to state 252
    "tuple"                           shift, and go to state 421
    "variant"                         shift, and go to state 422
    "generator"                       shift, and go to state 423
    "++"                              shift, and go to state 424
    "--"                              shift, and go to state 425
    "::"                              shift, and go to state 55
    "$$"                              shift, and go to state 426
    "$i"                              shift, and go to state 427
    "$v"                              shift, and go to state 428
    "$b"                              shift, and go to state 429
    "$a"                              shift, and go to state 430
    "$c"                              shift, and go to state 431
    "..."                             shift, and go to state 432
    "integer constant"                shift, and go to state 433
    "long integer constant"           shift, and go to state 434
    "unsigned integer constant"       shift, and go to state 435
    "unsigned long integer constant"  shift, and go to state 436
    "unsigned int8 constant"          shift, and go to state 437
    "floating point constant"         shift, and go to state 438
    "double constant"                 shift, and go to state 439
    "name"                            shift, and go to state 56
    "start of the string"             shift, and go to state 440
    "begin of code block"             shift, and go to state 441
    '-'                               shift, and go to state 442
    '+'                               shift, and go to state 443
    '*'                               shift, and go to state 444
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 445
    '!'                               shift, and go to state 446
    '['                               shift, and go to state 447
    '('                               shift, and go to state 448
    '$'                               shift, and go to state 449
    '@'                               shift, and go to state 450

    string_builder          go to state 451
    expr_reader             go to state 452
    expr_call_pipe          go to state 453
    name_in_namespace       go to state 454
    expr_new                go to state 455
    expr_cast               go to state 456
    expr_type_decl          go to state 457
    expr_type_info          go to state 458
    block_or_lambda         go to state 459
    expr_full_block         go to state 460
    expr_numeric_const      go to state 461
    expr_named_call         go to state 462
    expr_method_call        go to state 463
    func_addr_expr          go to state 464
    expr_field              go to state 465
    expr_call               go to state 466
    expr                    go to state 467
    expr_mtag               go to state 468
    basic_type_declaration  go to state 469
    make_decl               go to state 470
    make_struct_decl        go to state 471
    make_tuple_call         go to state 472
    make_dim_decl           go to state 473
    make_table_decl         go to state 474
    array_comprehension     go to state 475


State 347

  667 type_declaration_no_options_no_dim: "iterator" '<' . $@45 type_declaration '>' $@46

    $default  reduce using rule 665 ($@45)

    $@45  go to state 476


State 348

  657 type_declaration_no_options_no_dim: "smart_ptr" '<' . $@39 type_declaration '>' $@40

    $default  reduce using rule 655 ($@39)

    $@39  go to state 477


State 349

  612 auto_type_declaration: "auto" '(' . "name" ')'

    "name"  shift, and go to state 478


State 350

  621 bitfield_type_declaration: "bitfield" '<' . $@34 bitfield_bits '>' $@35

    $default  reduce using rule 619 ($@34)

    $@34  go to state 479


State 351

  671 type_declaration_no_options_no_dim: "block" '<' . $@47 type_declaration '>' $@48
  674                                   | "block" '<' . $@49 optional_function_argument_list optional_function_type '>' $@50

    ':'       reduce using rule 672 ($@49)
    '>'       reduce using rule 672 ($@49)
    '('       reduce using rule 672 ($@49)
    $default  reduce using rule 669 ($@47)

    $@47  go to state 480
    $@49  go to state 481


State 352

  678 type_declaration_no_options_no_dim: "function" '<' . $@51 type_declaration '>' $@52
  681                                   | "function" '<' . $@53 optional_function_argument_list optional_function_type '>' $@54

    ':'       reduce using rule 679 ($@53)
    '>'       reduce using rule 679 ($@53)
    '('       reduce using rule 679 ($@53)
    $default  reduce using rule 676 ($@51)

    $@51  go to state 482
    $@53  go to state 483


State 353

  685 type_declaration_no_options_no_dim: "lambda" '<' . $@55 type_declaration '>' $@56
  688                                   | "lambda" '<' . $@57 optional_function_argument_list optional_function_type '>' $@58

    ':'       reduce using rule 686 ($@57)
    '>'       reduce using rule 686 ($@57)
    '('       reduce using rule 686 ($@57)
    $default  reduce using rule 683 ($@55)

    $@55  go to state 484
    $@57  go to state 485


State 354

  691 type_declaration_no_options_no_dim: "tuple" '<' . $@59 tuple_type_list '>' $@60

    $default  reduce using rule 689 ($@59)

    $@59  go to state 486


State 355

  694 type_declaration_no_options_no_dim: "variant" '<' . $@61 variant_type_list '>' $@62

    $default  reduce using rule 692 ($@61)

    $@61  go to state 487


State 356

  613 auto_type_declaration: "$t" '(' . expr ')'

    "struct"                          shift, and go to state 402
    "class"                           shift, and go to state 403
    "true"                            shift, and go to state 404
    "false"                           shift, and go to state 405
    "new"                             shift, and go to state 406
    "typeinfo"                        shift, and go to state 407
    "type"                            shift, and go to state 408
    "array"                           shift, and go to state 409
    "null"                            shift, and go to state 410
    "table"                           shift, and go to state 411
    "deref"                           shift, and go to state 412
    "cast"                            shift, and go to state 413
    "upcast"                          shift, and go to state 414
    "addr"                            shift, and go to state 415
    "reinterpret"                     shift, and go to state 416
    "unsafe"                          shift, and go to state 417
    "fixed_array"                     shift, and go to state 418
    "default"                         shift, and go to state 419
    "bool"                            shift, and go to state 222
    "void"                            shift, and go to state 223
    "string"                          shift, and go to state 224
    "int"                             shift, and go to state 226
    "int2"                            shift, and go to state 227
    "int3"                            shift, and go to state 228
    "int4"                            shift, and go to state 229
    "uint"                            shift, and go to state 230
    "bitfield"                        shift, and go to state 420
    "uint2"                           shift, and go to state 232
    "uint3"                           shift, and go to state 233
    "uint4"                           shift, and go to state 234
    "float"                           shift, and go to state 235
    "float2"                          shift, and go to state 236
    "float3"                          shift, and go to state 237
    "float4"                          shift, and go to state 238
    "range"                           shift, and go to state 239
    "urange"                          shift, and go to state 240
    "range64"                         shift, and go to state 241
    "urange64"                        shift, and go to state 242
    "int64"                           shift, and go to state 244
    "uint64"                          shift, and go to state 245
    "double"                          shift, and go to state 246
    "int8"                            shift, and go to state 249
    "uint8"                           shift, and go to state 250
    "int16"                           shift, and go to state 251
    "uint16"                          shift, and go to state 252
    "tuple"                           shift, and go to state 421
    "variant"                         shift, and go to state 422
    "generator"                       shift, and go to state 423
    "++"                              shift, and go to state 424
    "--"                              shift, and go to state 425
    "::"                              shift, and go to state 55
    "$$"                              shift, and go to state 426
    "$i"                              shift, and go to state 427
    "$v"                              shift, and go to state 428
    "$b"                              shift, and go to state 429
    "$a"                              shift, and go to state 430
    "$c"                              shift, and go to state 431
    "..."                             shift, and go to state 432
    "integer constant"                shift, and go to state 433
    "long integer constant"           shift, and go to state 434
    "unsigned integer constant"       shift, and go to state 435
    "unsigned long integer constant"  shift, and go to state 436
    "unsigned int8 constant"          shift, and go to state 437
    "floating point constant"         shift, and go to state 438
    "double constant"                 shift, and go to state 439
    "name"                            shift, and go to state 56
    "start of the string"             shift, and go to state 440
    "begin of code block"             shift, and go to state 441
    '-'                               shift, and go to state 442
    '+'                               shift, and go to state 443
    '*'                               shift, and go to state 444
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 445
    '!'                               shift, and go to state 446
    '['                               shift, and go to state 447
    '('                               shift, and go to state 448
    '$'                               shift, and go to state 449
    '@'                               shift, and go to state 450

    string_builder          go to state 451
    expr_reader             go to state 452
    expr_call_pipe          go to state 453
    name_in_namespace       go to state 454
    expr_new                go to state 455
    expr_cast               go to state 456
    expr_type_decl          go to state 457
    expr_type_info          go to state 458
    block_or_lambda         go to state 459
    expr_full_block         go to state 460
    expr_numeric_const      go to state 461
    expr_named_call         go to state 462
    expr_method_call        go to state 463
    func_addr_expr          go to state 464
    expr_field              go to state 465
    expr_call               go to state 466
    expr                    go to state 488
    expr_mtag               go to state 468
    basic_type_declaration  go to state 469
    make_decl               go to state 470
    make_struct_decl        go to state 471
    make_tuple_call         go to state 472
    make_dim_decl           go to state 473
    make_table_decl         go to state 474
    array_comprehension     go to state 475


State 357

  640 type_declaration_no_options_no_dim: '$' name_in_namespace . '(' optional_expr_list ')'
  642                                   | '$' name_in_namespace . '<' $@38 type_declaration_no_options_list '>' '(' optional_expr_list ')'

    '<'  shift, and go to state 489
    '('  shift, and go to state 490


State 358

  645 type_declaration_no_options_no_dim: type_declaration_no_options_no_dim "const" .

    $default  reduce using rule 645 (type_declaration_no_options_no_dim)


State 359

  650 type_declaration_no_options_no_dim: type_declaration_no_options_no_dim "implicit" .

    $default  reduce using rule 650 (type_declaration_no_options_no_dim)


State 360

  644 type_declaration_no_options_no_dim: type_declaration_no_options_no_dim "explicit" .

    $default  reduce using rule 644 (type_declaration_no_options_no_dim)


State 361

  652 type_declaration_no_options_no_dim: type_declaration_no_options_no_dim "==" . "const"
  653                                   | type_declaration_no_options_no_dim "==" . '&'

    "const"  shift, and go to state 491
    '&'      shift, and go to state 492


State 362

  658 type_declaration_no_options_no_dim: type_declaration_no_options_no_dim "??" .

    $default  reduce using rule 658 (type_declaration_no_options_no_dim)


State 363

  654 type_declaration_no_options_no_dim: type_declaration_no_options_no_dim '?' .

    $default  reduce using rule 654 (type_declaration_no_options_no_dim)


State 364

  647 type_declaration_no_options_no_dim: type_declaration_no_options_no_dim '&' .

    $default  reduce using rule 647 (type_declaration_no_options_no_dim)


State 365

  643 type_declaration_no_options_no_dim: type_declaration_no_options_no_dim '-' . '[' ']'
  646                                   | type_declaration_no_options_no_dim '-' . "const"
  648                                   | type_declaration_no_options_no_dim '-' . '&'
  651                                   | type_declaration_no_options_no_dim '-' . '#'

    "const"  shift, and go to state 493
    '&'      shift, and go to state 494
    '['      shift, and go to state 495
    '#'      shift, and go to state 496


State 366

  626 dim_list: '[' . expr ']'
  627         | '[' . ']'

    "struct"                          shift, and go to state 402
    "class"                           shift, and go to state 403
    "true"                            shift, and go to state 404
    "false"                           shift, and go to state 405
    "new"                             shift, and go to state 406
    "typeinfo"                        shift, and go to state 407
    "type"                            shift, and go to state 408
    "array"                           shift, and go to state 409
    "null"                            shift, and go to state 410
    "table"                           shift, and go to state 411
    "deref"                           shift, and go to state 412
    "cast"                            shift, and go to state 413
    "upcast"                          shift, and go to state 414
    "addr"                            shift, and go to state 415
    "reinterpret"                     shift, and go to state 416
    "unsafe"                          shift, and go to state 417
    "fixed_array"                     shift, and go to state 418
    "default"                         shift, and go to state 419
    "bool"                            shift, and go to state 222
    "void"                            shift, and go to state 223
    "string"                          shift, and go to state 224
    "int"                             shift, and go to state 226
    "int2"                            shift, and go to state 227
    "int3"                            shift, and go to state 228
    "int4"                            shift, and go to state 229
    "uint"                            shift, and go to state 230
    "bitfield"                        shift, and go to state 420
    "uint2"                           shift, and go to state 232
    "uint3"                           shift, and go to state 233
    "uint4"                           shift, and go to state 234
    "float"                           shift, and go to state 235
    "float2"                          shift, and go to state 236
    "float3"                          shift, and go to state 237
    "float4"                          shift, and go to state 238
    "range"                           shift, and go to state 239
    "urange"                          shift, and go to state 240
    "range64"                         shift, and go to state 241
    "urange64"                        shift, and go to state 242
    "int64"                           shift, and go to state 244
    "uint64"                          shift, and go to state 245
    "double"                          shift, and go to state 246
    "int8"                            shift, and go to state 249
    "uint8"                           shift, and go to state 250
    "int16"                           shift, and go to state 251
    "uint16"                          shift, and go to state 252
    "tuple"                           shift, and go to state 421
    "variant"                         shift, and go to state 422
    "generator"                       shift, and go to state 423
    "++"                              shift, and go to state 424
    "--"                              shift, and go to state 425
    "::"                              shift, and go to state 55
    "$$"                              shift, and go to state 426
    "$i"                              shift, and go to state 427
    "$v"                              shift, and go to state 428
    "$b"                              shift, and go to state 429
    "$a"                              shift, and go to state 430
    "$c"                              shift, and go to state 431
    "..."                             shift, and go to state 432
    "integer constant"                shift, and go to state 433
    "long integer constant"           shift, and go to state 434
    "unsigned integer constant"       shift, and go to state 435
    "unsigned long integer constant"  shift, and go to state 436
    "unsigned int8 constant"          shift, and go to state 437
    "floating point constant"         shift, and go to state 438
    "double constant"                 shift, and go to state 439
    "name"                            shift, and go to state 56
    "start of the string"             shift, and go to state 440
    "begin of code block"             shift, and go to state 441
    '-'                               shift, and go to state 442
    '+'                               shift, and go to state 443
    '*'                               shift, and go to state 444
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 445
    '!'                               shift, and go to state 446
    '['                               shift, and go to state 447
    ']'                               shift, and go to state 497
    '('                               shift, and go to state 448
    '$'                               shift, and go to state 449
    '@'                               shift, and go to state 450

    string_builder          go to state 451
    expr_reader             go to state 452
    expr_call_pipe          go to state 453
    name_in_namespace       go to state 454
    expr_new                go to state 455
    expr_cast               go to state 456
    expr_type_decl          go to state 457
    expr_type_info          go to state 458
    block_or_lambda         go to state 459
    expr_full_block         go to state 460
    expr_numeric_const      go to state 461
    expr_named_call         go to state 462
    expr_method_call        go to state 463
    func_addr_expr          go to state 464
    expr_field              go to state 465
    expr_call               go to state 466
    expr                    go to state 498
    expr_mtag               go to state 468
    basic_type_declaration  go to state 469
    make_decl               go to state 470
    make_struct_decl        go to state 471
    make_tuple_call         go to state 472
    make_dim_decl           go to state 473
    make_table_decl         go to state 474
    array_comprehension     go to state 475


State 367

  649 type_declaration_no_options_no_dim: type_declaration_no_options_no_dim '#' .

    $default  reduce using rule 649 (type_declaration_no_options_no_dim)


State 368

  628 dim_list: dim_list . '[' expr ']'
  629         | dim_list . '[' ']'
  631 type_declaration_no_options: type_declaration_no_options_no_dim dim_list .

    '['  shift, and go to state 499

    $default  reduce using rule 631 (type_declaration_no_options)


State 369

  696 type_declaration: type_declaration '|' . type_declaration_no_options
  697                 | type_declaration '|' . '#'

    "type"       shift, and go to state 216
    "array"      shift, and go to state 217
    "table"      shift, and go to state 218
    "typedecl"   shift, and go to state 219
    "iterator"   shift, and go to state 220
    "smart_ptr"  shift, and go to state 221
    "bool"       shift, and go to state 222
    "void"       shift, and go to state 223
    "string"     shift, and go to state 224
    "auto"       shift, and go to state 225
    "int"        shift, and go to state 226
    "int2"       shift, and go to state 227
    "int3"       shift, and go to state 228
    "int4"       shift, and go to state 229
    "uint"       shift, and go to state 230
    "bitfield"   shift, and go to state 231
    "uint2"      shift, and go to state 232
    "uint3"      shift, and go to state 233
    "uint4"      shift, and go to state 234
    "float"      shift, and go to state 235
    "float2"     shift, and go to state 236
    "float3"     shift, and go to state 237
    "float4"     shift, and go to state 238
    "range"      shift, and go to state 239
    "urange"     shift, and go to state 240
    "range64"    shift, and go to state 241
    "urange64"   shift, and go to state 242
    "block"      shift, and go to state 243
    "int64"      shift, and go to state 244
    "uint64"     shift, and go to state 245
    "double"     shift, and go to state 246
    "function"   shift, and go to state 247
    "lambda"     shift, and go to state 248
    "int8"       shift, and go to state 249
    "uint8"      shift, and go to state 250
    "int16"      shift, and go to state 251
    "uint16"     shift, and go to state 252
    "tuple"      shift, and go to state 253
    "variant"    shift, and go to state 254
    "::"         shift, and go to state 55
    "$t"         shift, and go to state 255
    "name"       shift, and go to state 56
    '$'          shift, and go to state 256
    '#'          shift, and go to state 500

    name_in_namespace                   go to state 257
    basic_type_declaration              go to state 258
    structure_type_declaration          go to state 259
    auto_type_declaration               go to state 260
    bitfield_type_declaration           go to state 261
    type_declaration_no_options         go to state 501
    type_declaration_no_options_no_dim  go to state 263


State 370

  617 bitfield_alias_bits: "name" .

    $default  reduce using rule 617 (bitfield_alias_bits)


State 371

  618 bitfield_alias_bits: bitfield_alias_bits . ',' "name"
  709 bitfield_alias_declaration: "bitfield" optional_public_or_private_alias "name" $@69 "begin of code block" $@70 bitfield_alias_bits . optional_comma $@71 "end of code block"

    ','  shift, and go to state 502

    $default  reduce using rule 777 (optional_comma)

    optional_comma  go to state 503


State 372

  495 tuple_alias_type_list: tuple_alias_type_list . c_or_s
  496                      | tuple_alias_type_list . tuple_type c_or_s
  701 tuple_alias_declaration: "tuple" optional_public_or_private_alias "name" $@63 "begin of code block" $@64 tuple_alias_type_list . $@65 "end of code block"

    "type"               shift, and go to state 216
    "array"              shift, and go to state 217
    "table"              shift, and go to state 218
    "typedecl"           shift, and go to state 219
    "iterator"           shift, and go to state 220
    "smart_ptr"          shift, and go to state 221
    "bool"               shift, and go to state 222
    "void"               shift, and go to state 223
    "string"             shift, and go to state 224
    "auto"               shift, and go to state 225
    "int"                shift, and go to state 226
    "int2"               shift, and go to state 227
    "int3"               shift, and go to state 228
    "int4"               shift, and go to state 229
    "uint"               shift, and go to state 230
    "bitfield"           shift, and go to state 231
    "uint2"              shift, and go to state 232
    "uint3"              shift, and go to state 233
    "uint4"              shift, and go to state 234
    "float"              shift, and go to state 235
    "float2"             shift, and go to state 236
    "float3"             shift, and go to state 237
    "float4"             shift, and go to state 238
    "range"              shift, and go to state 239
    "urange"             shift, and go to state 240
    "range64"            shift, and go to state 241
    "urange64"           shift, and go to state 242
    "block"              shift, and go to state 243
    "int64"              shift, and go to state 244
    "uint64"             shift, and go to state 245
    "double"             shift, and go to state 246
    "function"           shift, and go to state 247
    "lambda"             shift, and go to state 248
    "int8"               shift, and go to state 249
    "uint8"              shift, and go to state 250
    "int16"              shift, and go to state 251
    "uint16"             shift, and go to state 252
    "tuple"              shift, and go to state 253
    "variant"            shift, and go to state 254
    "::"                 shift, and go to state 55
    "$t"                 shift, and go to state 255
    "name"               shift, and go to state 504
    "end of expression"  shift, and go to state 505
    ','                  shift, and go to state 506
    '$'                  shift, and go to state 256

    $default  reduce using rule 700 ($@65)

    name_in_namespace                   go to state 257
    tuple_type                          go to state 507
    basic_type_declaration              go to state 258
    structure_type_declaration          go to state 259
    auto_type_declaration               go to state 260
    bitfield_type_declaration           go to state 261
    c_or_s                              go to state 508
    type_declaration_no_options         go to state 262
    type_declaration_no_options_no_dim  go to state 263
    type_declaration                    go to state 509
    $@65                                go to state 510


State 373

  501 variant_alias_type_list: variant_alias_type_list . c_or_s
  502                        | variant_alias_type_list . variant_type c_or_s
  705 variant_alias_declaration: "variant" optional_public_or_private_alias "name" $@66 "begin of code block" $@67 variant_alias_type_list . $@68 "end of code block"

    "name"               shift, and go to state 511
    "end of expression"  shift, and go to state 505
    ','                  shift, and go to state 506

    $default  reduce using rule 704 ($@68)

    variant_type  go to state 512
    c_or_s        go to state 513
    $@68          go to state 514


State 374

  176 function_name: "operator" "is" "name" .

    $default  reduce using rule 176 (function_name)


State 375

  177 function_name: "operator" "as" "name" .

    $default  reduce using rule 177 (function_name)


State 376

  170 function_name: "operator" "?." "name" .

    $default  reduce using rule 170 (function_name)


State 377

  165 function_name: "operator" "?[" ']' .

    $default  reduce using rule 165 (function_name)


State 378

  178 function_name: "operator" '?' "as" .
  179              | "operator" '?' "as" . "name"

    "name"  shift, and go to state 515

    $default  reduce using rule 178 (function_name)


State 379

  168 function_name: "operator" '.' "name" .
  169              | "operator" '.' "name" . ":="

    ":="  shift, and go to state 516

    $default  reduce using rule 168 (function_name)


State 380

  164 function_name: "operator" '[' ']' .

    $default  reduce using rule 164 (function_name)


State 381

  487 function_argument_declaration: "$a" . '(' expr ')'

    '('  shift, and go to state 517


State 382

  116 optional_function_argument_list: '(' ')' .

    $default  reduce using rule 116 (optional_function_argument_list)


State 383

  486 function_argument_declaration: optional_field_annotation . kwd_let_var_or_nothing variable_declaration

    "let"  shift, and go to state 518
    "var"  shift, and go to state 519

    $default  reduce using rule 265 (kwd_let_var_or_nothing)

    kwd_let_var_or_nothing  go to state 520


State 384

  488 function_argument_list: function_argument_declaration .

    $default  reduce using rule 488 (function_argument_list)


State 385

  117 optional_function_argument_list: '(' function_argument_list . ')'
  489 function_argument_list: function_argument_list . "end of expression" function_argument_declaration

    "end of expression"  shift, and go to state 521
    ')'                  shift, and go to state 522


State 386

  119 optional_function_type: ':' . type_declaration

    "type"       shift, and go to state 216
    "array"      shift, and go to state 217
    "table"      shift, and go to state 218
    "typedecl"   shift, and go to state 219
    "iterator"   shift, and go to state 220
    "smart_ptr"  shift, and go to state 221
    "bool"       shift, and go to state 222
    "void"       shift, and go to state 223
    "string"     shift, and go to state 224
    "auto"       shift, and go to state 225
    "int"        shift, and go to state 226
    "int2"       shift, and go to state 227
    "int3"       shift, and go to state 228
    "int4"       shift, and go to state 229
    "uint"       shift, and go to state 230
    "bitfield"   shift, and go to state 231
    "uint2"      shift, and go to state 232
    "uint3"      shift, and go to state 233
    "uint4"      shift, and go to state 234
    "float"      shift, and go to state 235
    "float2"     shift, and go to state 236
    "float3"     shift, and go to state 237
    "float4"     shift, and go to state 238
    "range"      shift, and go to state 239
    "urange"     shift, and go to state 240
    "range64"    shift, and go to state 241
    "urange64"   shift, and go to state 242
    "block"      shift, and go to state 243
    "int64"      shift, and go to state 244
    "uint64"     shift, and go to state 245
    "double"     shift, and go to state 246
    "function"   shift, and go to state 247
    "lambda"     shift, and go to state 248
    "int8"       shift, and go to state 249
    "uint8"      shift, and go to state 250
    "int16"      shift, and go to state 251
    "uint16"     shift, and go to state 252
    "tuple"      shift, and go to state 253
    "variant"    shift, and go to state 254
    "::"         shift, and go to state 55
    "$t"         shift, and go to state 255
    "name"       shift, and go to state 56
    '$'          shift, and go to state 256

    name_in_namespace                   go to state 257
    basic_type_declaration              go to state 258
    structure_type_declaration          go to state 259
    auto_type_declaration               go to state 260
    bitfield_type_declaration           go to state 261
    type_declaration_no_options         go to state 262
    type_declaration_no_options_no_dim  go to state 263
    type_declaration                    go to state 523


State 387

  209 function_declaration_header: function_name optional_function_argument_list optional_function_type .

    $default  reduce using rule 209 (function_declaration_header)


State 388

  212 expression_block: "begin of code block" expressions . "end of code block"
  213                 | "begin of code block" expressions . "end of code block" "finally" "begin of code block" expressions "end of code block"
  234 expressions: expressions . expression_any
  235            | expressions . error

    error                             shift, and go to state 524
    "struct"                          shift, and go to state 402
    "class"                           shift, and go to state 403
    "let"                             shift, and go to state 3
    "while"                           shift, and go to state 525
    "if"                              shift, and go to state 526
    "static_if"                       shift, and go to state 527
    "for"                             shift, and go to state 528
    "true"                            shift, and go to state 404
    "false"                           shift, and go to state 405
    "new"                             shift, and go to state 406
    "typeinfo"                        shift, and go to state 407
    "type"                            shift, and go to state 408
    "array"                           shift, and go to state 409
    "return"                          shift, and go to state 529
    "null"                            shift, and go to state 410
    "break"                           shift, and go to state 530
    "try"                             shift, and go to state 531
    "table"                           shift, and go to state 411
    "delete"                          shift, and go to state 532
    "deref"                           shift, and go to state 412
    "with"                            shift, and go to state 533
    "assume"                          shift, and go to state 534
    "cast"                            shift, and go to state 413
    "upcast"                          shift, and go to state 414
    "var"                             shift, and go to state 8
    "addr"                            shift, and go to state 415
    "continue"                        shift, and go to state 535
    "pass"                            shift, and go to state 536
    "reinterpret"                     shift, and go to state 416
    "label"                           shift, and go to state 537
    "goto"                            shift, and go to state 538
    "unsafe"                          shift, and go to state 539
    "fixed_array"                     shift, and go to state 418
    "default"                         shift, and go to state 419
    "bool"                            shift, and go to state 222
    "void"                            shift, and go to state 223
    "string"                          shift, and go to state 224
    "int"                             shift, and go to state 226
    "int2"                            shift, and go to state 227
    "int3"                            shift, and go to state 228
    "int4"                            shift, and go to state 229
    "uint"                            shift, and go to state 230
    "bitfield"                        shift, and go to state 420
    "uint2"                           shift, and go to state 232
    "uint3"                           shift, and go to state 233
    "uint4"                           shift, and go to state 234
    "float"                           shift, and go to state 235
    "float2"                          shift, and go to state 236
    "float3"                          shift, and go to state 237
    "float4"                          shift, and go to state 238
    "range"                           shift, and go to state 239
    "urange"                          shift, and go to state 240
    "range64"                         shift, and go to state 241
    "urange64"                        shift, and go to state 242
    "int64"                           shift, and go to state 244
    "uint64"                          shift, and go to state 245
    "double"                          shift, and go to state 246
    "int8"                            shift, and go to state 249
    "uint8"                           shift, and go to state 250
    "int16"                           shift, and go to state 251
    "uint16"                          shift, and go to state 252
    "tuple"                           shift, and go to state 421
    "variant"                         shift, and go to state 422
    "generator"                       shift, and go to state 423
    "yield"                           shift, and go to state 540
    "++"                              shift, and go to state 424
    "--"                              shift, and go to state 425
    "::"                              shift, and go to state 55
    "$$"                              shift, and go to state 426
    "$i"                              shift, and go to state 427
    "$v"                              shift, and go to state 428
    "$b"                              shift, and go to state 429
    "$a"                              shift, and go to state 430
    "$c"                              shift, and go to state 431
    "..."                             shift, and go to state 432
    "integer constant"                shift, and go to state 433
    "long integer constant"           shift, and go to state 434
    "unsigned integer constant"       shift, and go to state 435
    "unsigned long integer constant"  shift, and go to state 436
    "unsigned int8 constant"          shift, and go to state 437
    "floating point constant"         shift, and go to state 438
    "double constant"                 shift, and go to state 439
    "name"                            shift, and go to state 56
    "start of the string"             shift, and go to state 440
    "begin of code block"             shift, and go to state 441
    "end of code block"               shift, and go to state 541
    "end of expression"               shift, and go to state 542
    '-'                               shift, and go to state 442
    '+'                               shift, and go to state 443
    '*'                               shift, and go to state 444
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 445
    '!'                               shift, and go to state 446
    '['                               shift, and go to state 447
    '('                               shift, and go to state 448
    '$'                               shift, and go to state 449
    '@'                               shift, and go to state 450

    string_builder           go to state 451
    expr_reader              go to state 452
    expression_label         go to state 543
    expression_goto          go to state 544
    if_or_static_if          go to state 545
    expression_if_one_liner  go to state 546
    expression_if_then_else  go to state 547
    expression_for_loop      go to state 548
    expression_unsafe        go to state 549
    expression_while_loop    go to state 550
    expression_with          go to state 551
    expression_with_alias    go to state 552
    expr_call_pipe           go to state 453
    expression_any           go to state 553
    name_in_namespace        go to state 454
    expression_delete        go to state 554
    expr_new                 go to state 455
    expression_break         go to state 555
    expression_continue      go to state 556
    expression_return        go to state 557
    expression_yield         go to state 558
    expression_try_catch     go to state 559
    kwd_let                  go to state 560
    expression_let           go to state 561
    expr_cast                go to state 456
    expr_type_decl           go to state 457
    expr_type_info           go to state 458
    block_or_lambda          go to state 459
    expr_full_block          go to state 460
    expr_numeric_const       go to state 461
    expr_assign              go to state 562
    expr_named_call          go to state 462
    expr_method_call         go to state 463
    func_addr_expr           go to state 464
    expr_field               go to state 465
    expr_call                go to state 466
    expr                     go to state 563
    expr_mtag                go to state 468
    basic_type_declaration   go to state 469
    make_decl                go to state 470
    make_struct_decl         go to state 471
    make_tuple_call          go to state 472
    make_dim_decl            go to state 473
    make_table_decl          go to state 474
    array_comprehension      go to state 475


State 389

  554 enum_declaration: optional_annotation_list "enum" optional_public_or_private_enum enum_name optional_enum_basic_type_declaration "begin of code block" $@30 . enum_list optional_comma $@31 "end of code block"

    "name"  shift, and go to state 564

    $default  reduce using rule 537 (enum_list)

    enum_expression  go to state 565
    enum_list        go to state 566


State 390

  556 optional_structure_parent: ':' . name_in_namespace

    "::"    shift, and go to state 55
    "name"  shift, and go to state 56

    name_in_namespace  go to state 567


State 391

  559 structure_name: optional_sealed "name" optional_structure_parent .

    $default  reduce using rule 559 (structure_name)


State 392

  566 optional_struct_variable_declaration_list: "begin of code block" . struct_variable_declaration_list "end of code block"

    $default  reduce using rule 479 (struct_variable_declaration_list)

    struct_variable_declaration_list  go to state 568


State 393

  569 structure_declaration: optional_annotation_list class_or_struct optional_public_or_private_structure $@32 structure_name $@33 optional_struct_variable_declaration_list .

    $default  reduce using rule 569 (structure_declaration)


State 394

   98 metadata_argument_list: metadata_argument_list '@' annotation_argument .

    $default  reduce using rule 98 (metadata_argument_list)


State 395

  521 global_let_variable_name_with_pos_list: global_let_variable_name_with_pos_list ',' . "name"

    "name"  shift, and go to state 569


State 396

  525 global_let_variable_declaration: global_let_variable_name_with_pos_list ':' . type_declaration_no_options "end of expression"
  526                                | global_let_variable_name_with_pos_list ':' . type_declaration_no_options copy_or_move_or_clone expr "end of expression"

    "type"       shift, and go to state 216
    "array"      shift, and go to state 217
    "table"      shift, and go to state 218
    "typedecl"   shift, and go to state 219
    "iterator"   shift, and go to state 220
    "smart_ptr"  shift, and go to state 221
    "bool"       shift, and go to state 222
    "void"       shift, and go to state 223
    "string"     shift, and go to state 224
    "auto"       shift, and go to state 225
    "int"        shift, and go to state 226
    "int2"       shift, and go to state 227
    "int3"       shift, and go to state 228
    "int4"       shift, and go to state 229
    "uint"       shift, and go to state 230
    "bitfield"   shift, and go to state 231
    "uint2"      shift, and go to state 232
    "uint3"      shift, and go to state 233
    "uint4"      shift, and go to state 234
    "float"      shift, and go to state 235
    "float2"     shift, and go to state 236
    "float3"     shift, and go to state 237
    "float4"     shift, and go to state 238
    "range"      shift, and go to state 239
    "urange"     shift, and go to state 240
    "range64"    shift, and go to state 241
    "urange64"   shift, and go to state 242
    "block"      shift, and go to state 243
    "int64"      shift, and go to state 244
    "uint64"     shift, and go to state 245
    "double"     shift, and go to state 246
    "function"   shift, and go to state 247
    "lambda"     shift, and go to state 248
    "int8"       shift, and go to state 249
    "uint8"      shift, and go to state 250
    "int16"      shift, and go to state 251
    "uint16"     shift, and go to state 252
    "tuple"      shift, and go to state 253
    "variant"    shift, and go to state 254
    "::"         shift, and go to state 55
    "$t"         shift, and go to state 255
    "name"       shift, and go to state 56
    '$'          shift, and go to state 256

    name_in_namespace                   go to state 257
    basic_type_declaration              go to state 258
    structure_type_declaration          go to state 259
    auto_type_declaration               go to state 260
    bitfield_type_declaration           go to state 261
    type_declaration_no_options         go to state 570
    type_declaration_no_options_no_dim  go to state 263


State 397

  514 optional_ref: '&' .

    $default  reduce using rule 514 (optional_ref)


State 398

  527 global_let_variable_declaration: global_let_variable_name_with_pos_list optional_ref . copy_or_move_or_clone expr "end of expression"

    "<-"  shift, and go to state 571
    ":="  shift, and go to state 572
    '='   shift, and go to state 573

    copy_or_move_or_clone  go to state 574


State 399

  638 type_declaration_no_options_no_dim: "type" '<' $@36 . type_declaration '>' $@37

    "type"       shift, and go to state 216
    "array"      shift, and go to state 217
    "table"      shift, and go to state 218
    "typedecl"   shift, and go to state 219
    "iterator"   shift, and go to state 220
    "smart_ptr"  shift, and go to state 221
    "bool"       shift, and go to state 222
    "void"       shift, and go to state 223
    "string"     shift, and go to state 224
    "auto"       shift, and go to state 225
    "int"        shift, and go to state 226
    "int2"       shift, and go to state 227
    "int3"       shift, and go to state 228
    "int4"       shift, and go to state 229
    "uint"       shift, and go to state 230
    "bitfield"   shift, and go to state 231
    "uint2"      shift, and go to state 232
    "uint3"      shift, and go to state 233
    "uint4"      shift, and go to state 234
    "float"      shift, and go to state 235
    "float2"     shift, and go to state 236
    "float3"     shift, and go to state 237
    "float4"     shift, and go to state 238
    "range"      shift, and go to state 239
    "urange"     shift, and go to state 240
    "range64"    shift, and go to state 241
    "urange64"   shift, and go to state 242
    "block"      shift, and go to state 243
    "int64"      shift, and go to state 244
    "uint64"     shift, and go to state 245
    "double"     shift, and go to state 246
    "function"   shift, and go to state 247
    "lambda"     shift, and go to state 248
    "int8"       shift, and go to state 249
    "uint8"      shift, and go to state 250
    "int16"      shift, and go to state 251
    "uint16"     shift, and go to state 252
    "tuple"      shift, and go to state 253
    "variant"    shift, and go to state 254
    "::"         shift, and go to state 55
    "$t"         shift, and go to state 255
    "name"       shift, and go to state 56
    '$'          shift, and go to state 256

    name_in_namespace                   go to state 257
    basic_type_declaration              go to state 258
    structure_type_declaration          go to state 259
    auto_type_declaration               go to state 260
    bitfield_type_declaration           go to state 261
    type_declaration_no_options         go to state 262
    type_declaration_no_options_no_dim  go to state 263
    type_declaration                    go to state 575


State 400

  661 type_declaration_no_options_no_dim: "array" '<' $@41 . type_declaration '>' $@42

    "type"       shift, and go to state 216
    "array"      shift, and go to state 217
    "table"      shift, and go to state 218
    "typedecl"   shift, and go to state 219
    "iterator"   shift, and go to state 220
    "smart_ptr"  shift, and go to state 221
    "bool"       shift, and go to state 222
    "void"       shift, and go to state 223
    "string"     shift, and go to state 224
    "auto"       shift, and go to state 225
    "int"        shift, and go to state 226
    "int2"       shift, and go to state 227
    "int3"       shift, and go to state 228
    "int4"       shift, and go to state 229
    "uint"       shift, and go to state 230
    "bitfield"   shift, and go to state 231
    "uint2"      shift, and go to state 232
    "uint3"      shift, and go to state 233
    "uint4"      shift, and go to state 234
    "float"      shift, and go to state 235
    "float2"     shift, and go to state 236
    "float3"     shift, and go to state 237
    "float4"     shift, and go to state 238
    "range"      shift, and go to state 239
    "urange"     shift, and go to state 240
    "range64"    shift, and go to state 241
    "urange64"   shift, and go to state 242
    "block"      shift, and go to state 243
    "int64"      shift, and go to state 244
    "uint64"     shift, and go to state 245
    "double"     shift, and go to state 246
    "function"   shift, and go to state 247
    "lambda"     shift, and go to state 248
    "int8"       shift, and go to state 249
    "uint8"      shift, and go to state 250
    "int16"      shift, and go to state 251
    "uint16"     shift, and go to state 252
    "tuple"      shift, and go to state 253
    "variant"    shift, and go to state 254
    "::"         shift, and go to state 55
    "$t"         shift, and go to state 255
    "name"       shift, and go to state 56
    '$'          shift, and go to state 256

    name_in_namespace                   go to state 257
    basic_type_declaration              go to state 258
    structure_type_declaration          go to state 259
    auto_type_declaration               go to state 260
    bitfield_type_declaration           go to state 261
    type_declaration_no_options         go to state 262
    type_declaration_no_options_no_dim  go to state 263
    type_declaration                    go to state 576


State 401

  664 type_declaration_no_options_no_dim: "table" '<' $@43 . table_type_pair '>' $@44

    "type"       shift, and go to state 216
    "array"      shift, and go to state 217
    "table"      shift, and go to state 218
    "typedecl"   shift, and go to state 219
    "iterator"   shift, and go to state 220
    "smart_ptr"  shift, and go to state 221
    "bool"       shift, and go to state 222
    "void"       shift, and go to state 223
    "string"     shift, and go to state 224
    "auto"       shift, and go to state 225
    "int"        shift, and go to state 226
    "int2"       shift, and go to state 227
    "int3"       shift, and go to state 228
    "int4"       shift, and go to state 229
    "uint"       shift, and go to state 230
    "bitfield"   shift, and go to state 231
    "uint2"      shift, and go to state 232
    "uint3"      shift, and go to state 233
    "uint4"      shift, and go to state 234
    "float"      shift, and go to state 235
    "float2"     shift, and go to state 236
    "float3"     shift, and go to state 237
    "float4"     shift, and go to state 238
    "range"      shift, and go to state 239
    "urange"     shift, and go to state 240
    "range64"    shift, and go to state 241
    "urange64"   shift, and go to state 242
    "block"      shift, and go to state 243
    "int64"      shift, and go to state 244
    "uint64"     shift, and go to state 245
    "double"     shift, and go to state 246
    "function"   shift, and go to state 247
    "lambda"     shift, and go to state 248
    "int8"       shift, and go to state 249
    "uint8"      shift, and go to state 250
    "int16"      shift, and go to state 251
    "uint16"     shift, and go to state 252
    "tuple"      shift, and go to state 253
    "variant"    shift, and go to state 254
    "::"         shift, and go to state 55
    "$t"         shift, and go to state 255
    "name"       shift, and go to state 56
    '$'          shift, and go to state 256

    name_in_namespace                   go to state 257
    basic_type_declaration              go to state 258
    structure_type_declaration          go to state 259
    auto_type_declaration               go to state 260
    bitfield_type_declaration           go to state 261
    table_type_pair                     go to state 577
    type_declaration_no_options         go to state 262
    type_declaration_no_options_no_dim  go to state 263
    type_declaration                    go to state 578


State 402

  735 make_struct_decl: "struct" . '<' $@72 type_declaration_no_options '>' $@73 '(' use_initializer optional_make_struct_dim_decl ')'

    '<'  shift, and go to state 579


State 403

  738 make_struct_decl: "class" . '<' $@74 type_declaration_no_options '>' $@75 '(' use_initializer optional_make_struct_dim_decl ')'

    '<'  shift, and go to state 580


State 404

  372 expr: "true" .

    $default  reduce using rule 372 (expr)


State 405

  373 expr: "false" .

    $default  reduce using rule 373 (expr)


State 406

  250 expr_new: "new" . structure_type_declaration
  251         | "new" . structure_type_declaration '(' optional_expr_list ')'
  252         | "new" . new_type_declaration '(' use_initializer ')'
  253         | "new" . new_type_declaration '(' use_initializer make_struct_single ')'
  254         | "new" . make_decl

    "struct"               shift, and go to state 402
    "class"                shift, and go to state 403
    "array"                shift, and go to state 409
    "table"                shift, and go to state 411
    "fixed_array"          shift, and go to state 418
    "default"              shift, and go to state 419
    "tuple"                shift, and go to state 421
    "variant"              shift, and go to state 422
    "::"                   shift, and go to state 55
    "name"                 shift, and go to state 56
    "begin of code block"  shift, and go to state 441
    '<'                    shift, and go to state 581
    '['                    shift, and go to state 447

    name_in_namespace           go to state 257
    new_type_declaration        go to state 582
    structure_type_declaration  go to state 583
    make_decl                   go to state 584
    make_struct_decl            go to state 471
    make_tuple_call             go to state 472
    make_dim_decl               go to state 473
    make_table_decl             go to state 474
    array_comprehension         go to state 475


State 407

  288 expr_type_info: "typeinfo" . name_in_namespace '(' expr ')'
  289               | "typeinfo" . name_in_namespace '<' "name" '>' '(' expr ')'
  290               | "typeinfo" . name_in_namespace '<' "name" c_or_s "name" '>' '(' expr ')'

    "::"    shift, and go to state 55
    "name"  shift, and go to state 56

    name_in_namespace  go to state 585


State 408

  287 expr_type_decl: "type" . '<' $@11 type_declaration '>' $@12

    '<'  shift, and go to state 586


State 409

  754 make_dim_decl: "array" . "struct" '<' $@82 type_declaration_no_options '>' $@83 '(' use_initializer optional_make_struct_dim_decl ')'
  757              | "array" . "tuple" '<' $@84 type_declaration_no_options '>' $@85 '(' use_initializer optional_make_struct_dim_decl ')'
  760              | "array" . "variant" '<' $@86 type_declaration_no_options '>' $@87 '(' make_variant_dim ')'
  761              | "array" . '(' expr_list optional_comma ')'
  764              | "array" . '<' $@88 type_declaration_no_options '>' $@89 '(' optional_expr_list ')'

    "struct"   shift, and go to state 587
    "tuple"    shift, and go to state 588
    "variant"  shift, and go to state 589
    '<'        shift, and go to state 590
    '('        shift, and go to state 591


State 410

  366 expr: "null" .

    $default  reduce using rule 366 (expr)


State 411

  772 make_table_decl: "table" . '(' expr_map_tuple_list optional_comma ')'
  773                | "table" . '<' type_declaration_no_options '>' '(' optional_expr_map_tuple_list ')'
  774                | "table" . '<' type_declaration_no_options c_or_s type_declaration_no_options '>' '(' optional_expr_map_tuple_list ')'

    '<'  shift, and go to state 592
    '('  shift, and go to state 593


State 412

  416 expr: "deref" . '(' expr ')'

    '('  shift, and go to state 594


State 413

  278 expr_cast: "cast" . '<' $@5 type_declaration_no_options '>' $@6 expr

    '<'  shift, and go to state 595


State 414

  281 expr_cast: "upcast" . '<' $@7 type_declaration_no_options '>' $@8 expr

    '<'  shift, and go to state 596


State 415

  417 expr: "addr" . '(' expr ')'

    '('  shift, and go to state 597


State 416

  284 expr_cast: "reinterpret" . '<' $@9 type_declaration_no_options '>' $@10 expr

    '<'  shift, and go to state 598


State 417

  449 expr: "unsafe" . '(' expr ')'

    '('  shift, and go to state 599


State 418

  765 make_dim_decl: "fixed_array" . '(' expr_list optional_comma ')'
  768              | "fixed_array" . '<' $@90 type_declaration_no_options '>' $@91 '(' expr_list optional_comma ')'

    '<'  shift, and go to state 600
    '('  shift, and go to state 601


State 419

  744 make_struct_decl: "default" . '<' $@78 type_declaration_no_options '>' $@79 use_initializer

    '<'  shift, and go to state 602


State 420

  601 basic_type_declaration: "bitfield" .

    $default  reduce using rule 601 (basic_type_declaration)


State 421

  747 make_tuple_call: "tuple" . '(' expr_list optional_comma ')'
  750                | "tuple" . '<' $@80 type_declaration_no_options '>' $@81 '(' use_initializer optional_make_struct_dim_decl ')'

    '<'  shift, and go to state 603
    '('  shift, and go to state 604


State 422

  741 make_struct_decl: "variant" . '<' $@76 type_declaration_no_options '>' $@77 '(' make_variant_dim ')'

    '<'  shift, and go to state 605


State 423

  418 expr: "generator" . '<' type_declaration_no_options '>' optional_capture_list '(' ')'
  419     | "generator" . '<' type_declaration_no_options '>' optional_capture_list '(' expr ')'
  420     | "generator" . '<' type_declaration_no_options '>' optional_capture_list expression_block

    '<'  shift, and go to state 606


State 424

  402 expr: "++" . expr

    "struct"                          shift, and go to state 402
    "class"                           shift, and go to state 403
    "true"                            shift, and go to state 404
    "false"                           shift, and go to state 405
    "new"                             shift, and go to state 406
    "typeinfo"                        shift, and go to state 407
    "type"                            shift, and go to state 408
    "array"                           shift, and go to state 409
    "null"                            shift, and go to state 410
    "table"                           shift, and go to state 411
    "deref"                           shift, and go to state 412
    "cast"                            shift, and go to state 413
    "upcast"                          shift, and go to state 414
    "addr"                            shift, and go to state 415
    "reinterpret"                     shift, and go to state 416
    "unsafe"                          shift, and go to state 417
    "fixed_array"                     shift, and go to state 418
    "default"                         shift, and go to state 419
    "bool"                            shift, and go to state 222
    "void"                            shift, and go to state 223
    "string"                          shift, and go to state 224
    "int"                             shift, and go to state 226
    "int2"                            shift, and go to state 227
    "int3"                            shift, and go to state 228
    "int4"                            shift, and go to state 229
    "uint"                            shift, and go to state 230
    "bitfield"                        shift, and go to state 420
    "uint2"                           shift, and go to state 232
    "uint3"                           shift, and go to state 233
    "uint4"                           shift, and go to state 234
    "float"                           shift, and go to state 235
    "float2"                          shift, and go to state 236
    "float3"                          shift, and go to state 237
    "float4"                          shift, and go to state 238
    "range"                           shift, and go to state 239
    "urange"                          shift, and go to state 240
    "range64"                         shift, and go to state 241
    "urange64"                        shift, and go to state 242
    "int64"                           shift, and go to state 244
    "uint64"                          shift, and go to state 245
    "double"                          shift, and go to state 246
    "int8"                            shift, and go to state 249
    "uint8"                           shift, and go to state 250
    "int16"                           shift, and go to state 251
    "uint16"                          shift, and go to state 252
    "tuple"                           shift, and go to state 421
    "variant"                         shift, and go to state 422
    "generator"                       shift, and go to state 423
    "++"                              shift, and go to state 424
    "--"                              shift, and go to state 425
    "::"                              shift, and go to state 55
    "$$"                              shift, and go to state 426
    "$i"                              shift, and go to state 427
    "$v"                              shift, and go to state 428
    "$b"                              shift, and go to state 429
    "$a"                              shift, and go to state 430
    "$c"                              shift, and go to state 431
    "..."                             shift, and go to state 432
    "integer constant"                shift, and go to state 433
    "long integer constant"           shift, and go to state 434
    "unsigned integer constant"       shift, and go to state 435
    "unsigned long integer constant"  shift, and go to state 436
    "unsigned int8 constant"          shift, and go to state 437
    "floating point constant"         shift, and go to state 438
    "double constant"                 shift, and go to state 439
    "name"                            shift, and go to state 56
    "start of the string"             shift, and go to state 440
    "begin of code block"             shift, and go to state 441
    '-'                               shift, and go to state 442
    '+'                               shift, and go to state 443
    '*'                               shift, and go to state 444
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 445
    '!'                               shift, and go to state 446
    '['                               shift, and go to state 447
    '('                               shift, and go to state 448
    '$'                               shift, and go to state 449
    '@'                               shift, and go to state 450

    string_builder          go to state 451
    expr_reader             go to state 452
    expr_call_pipe          go to state 453
    name_in_namespace       go to state 454
    expr_new                go to state 455
    expr_cast               go to state 456
    expr_type_decl          go to state 457
    expr_type_info          go to state 458
    block_or_lambda         go to state 459
    expr_full_block         go to state 460
    expr_numeric_const      go to state 461
    expr_named_call         go to state 462
    expr_method_call        go to state 463
    func_addr_expr          go to state 464
    expr_field              go to state 465
    expr_call               go to state 466
    expr                    go to state 607
    expr_mtag               go to state 468
    basic_type_declaration  go to state 469
    make_decl               go to state 470
    make_struct_decl        go to state 471
    make_tuple_call         go to state 472
    make_dim_decl           go to state 473
    make_table_decl         go to state 474
    array_comprehension     go to state 475


State 425

  403 expr: "--" . expr

    "struct"                          shift, and go to state 402
    "class"                           shift, and go to state 403
    "true"                            shift, and go to state 404
    "false"                           shift, and go to state 405
    "new"                             shift, and go to state 406
    "typeinfo"                        shift, and go to state 407
    "type"                            shift, and go to state 408
    "array"                           shift, and go to state 409
    "null"                            shift, and go to state 410
    "table"                           shift, and go to state 411
    "deref"                           shift, and go to state 412
    "cast"                            shift, and go to state 413
    "upcast"                          shift, and go to state 414
    "addr"                            shift, and go to state 415
    "reinterpret"                     shift, and go to state 416
    "unsafe"                          shift, and go to state 417
    "fixed_array"                     shift, and go to state 418
    "default"                         shift, and go to state 419
    "bool"                            shift, and go to state 222
    "void"                            shift, and go to state 223
    "string"                          shift, and go to state 224
    "int"                             shift, and go to state 226
    "int2"                            shift, and go to state 227
    "int3"                            shift, and go to state 228
    "int4"                            shift, and go to state 229
    "uint"                            shift, and go to state 230
    "bitfield"                        shift, and go to state 420
    "uint2"                           shift, and go to state 232
    "uint3"                           shift, and go to state 233
    "uint4"                           shift, and go to state 234
    "float"                           shift, and go to state 235
    "float2"                          shift, and go to state 236
    "float3"                          shift, and go to state 237
    "float4"                          shift, and go to state 238
    "range"                           shift, and go to state 239
    "urange"                          shift, and go to state 240
    "range64"                         shift, and go to state 241
    "urange64"                        shift, and go to state 242
    "int64"                           shift, and go to state 244
    "uint64"                          shift, and go to state 245
    "double"                          shift, and go to state 246
    "int8"                            shift, and go to state 249
    "uint8"                           shift, and go to state 250
    "int16"                           shift, and go to state 251
    "uint16"                          shift, and go to state 252
    "tuple"                           shift, and go to state 421
    "variant"                         shift, and go to state 422
    "generator"                       shift, and go to state 423
    "++"                              shift, and go to state 424
    "--"                              shift, and go to state 425
    "::"                              shift, and go to state 55
    "$$"                              shift, and go to state 426
    "$i"                              shift, and go to state 427
    "$v"                              shift, and go to state 428
    "$b"                              shift, and go to state 429
    "$a"                              shift, and go to state 430
    "$c"                              shift, and go to state 431
    "..."                             shift, and go to state 432
    "integer constant"                shift, and go to state 433
    "long integer constant"           shift, and go to state 434
    "unsigned integer constant"       shift, and go to state 435
    "unsigned long integer constant"  shift, and go to state 436
    "unsigned int8 constant"          shift, and go to state 437
    "floating point constant"         shift, and go to state 438
    "double constant"                 shift, and go to state 439
    "name"                            shift, and go to state 56
    "start of the string"             shift, and go to state 440
    "begin of code block"             shift, and go to state 441
    '-'                               shift, and go to state 442
    '+'                               shift, and go to state 443
    '*'                               shift, and go to state 444
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 445
    '!'                               shift, and go to state 446
    '['                               shift, and go to state 447
    '('                               shift, and go to state 448
    '$'                               shift, and go to state 449
    '@'                               shift, and go to state 450

    string_builder          go to state 451
    expr_reader             go to state 452
    expr_call_pipe          go to state 453
    name_in_namespace       go to state 454
    expr_new                go to state 455
    expr_cast               go to state 456
    expr_type_decl          go to state 457
    expr_type_info          go to state 458
    block_or_lambda         go to state 459
    expr_full_block         go to state 460
    expr_numeric_const      go to state 461
    expr_named_call         go to state 462
    expr_method_call        go to state 463
    func_addr_expr          go to state 464
    expr_field              go to state 465
    expr_call               go to state 466
    expr                    go to state 608
    expr_mtag               go to state 468
    basic_type_declaration  go to state 469
    make_decl               go to state 470
    make_struct_decl        go to state 471
    make_tuple_call         go to state 472
    make_dim_decl           go to state 473
    make_table_decl         go to state 474
    array_comprehension     go to state 475


State 426

  450 expr_mtag: "$$" . '(' expr ')'

    '('  shift, and go to state 609


State 427

  451 expr_mtag: "$i" . '(' expr ')'

    '('  shift, and go to state 610


State 428

  452 expr_mtag: "$v" . '(' expr ')'

    '('  shift, and go to state 611


State 429

  453 expr_mtag: "$b" . '(' expr ')'

    '('  shift, and go to state 612


State 430

  454 expr_mtag: "$a" . '(' expr ')'

    '('  shift, and go to state 613


State 431

  456 expr_mtag: "$c" . '(' expr ')' '(' ')'
  457          | "$c" . '(' expr ')' '(' expr_list ')'

    '('  shift, and go to state 614


State 432

  455 expr_mtag: "..." .

    $default  reduce using rule 455 (expr_mtag)


State 433

  311 expr_numeric_const: "integer constant" .

    $default  reduce using rule 311 (expr_numeric_const)


State 434

  313 expr_numeric_const: "long integer constant" .

    $default  reduce using rule 313 (expr_numeric_const)


State 435

  312 expr_numeric_const: "unsigned integer constant" .

    $default  reduce using rule 312 (expr_numeric_const)


State 436

  314 expr_numeric_const: "unsigned long integer constant" .

    $default  reduce using rule 314 (expr_numeric_const)


State 437

  315 expr_numeric_const: "unsigned int8 constant" .

    $default  reduce using rule 315 (expr_numeric_const)


State 438

  316 expr_numeric_const: "floating point constant" .

    $default  reduce using rule 316 (expr_numeric_const)


State 439

  317 expr_numeric_const: "double constant" .

    $default  reduce using rule 317 (expr_numeric_const)


State 440

   32 string_builder: "start of the string" . string_builder_body "end of the string"

    $default  reduce using rule 29 (string_builder_body)

    string_builder_body  go to state 615


State 441

  771 make_table_decl: "begin of code block" . expr_map_tuple_list optional_comma "end of code block"
  781 array_comprehension: "begin of code block" . "for" variable_name_with_pos_list "in" expr_list "end of expression" make_map_tuple array_comprehension_where "end of code block"

    "struct"                          shift, and go to state 402
    "class"                           shift, and go to state 403
    "for"                             shift, and go to state 616
    "true"                            shift, and go to state 404
    "false"                           shift, and go to state 405
    "new"                             shift, and go to state 406
    "typeinfo"                        shift, and go to state 407
    "type"                            shift, and go to state 408
    "array"                           shift, and go to state 409
    "null"                            shift, and go to state 410
    "table"                           shift, and go to state 411
    "deref"                           shift, and go to state 412
    "cast"                            shift, and go to state 413
    "upcast"                          shift, and go to state 414
    "addr"                            shift, and go to state 415
    "reinterpret"                     shift, and go to state 416
    "unsafe"                          shift, and go to state 417
    "fixed_array"                     shift, and go to state 418
    "default"                         shift, and go to state 419
    "bool"                            shift, and go to state 222
    "void"                            shift, and go to state 223
    "string"                          shift, and go to state 224
    "int"                             shift, and go to state 226
    "int2"                            shift, and go to state 227
    "int3"                            shift, and go to state 228
    "int4"                            shift, and go to state 229
    "uint"                            shift, and go to state 230
    "bitfield"                        shift, and go to state 420
    "uint2"                           shift, and go to state 232
    "uint3"                           shift, and go to state 233
    "uint4"                           shift, and go to state 234
    "float"                           shift, and go to state 235
    "float2"                          shift, and go to state 236
    "float3"                          shift, and go to state 237
    "float4"                          shift, and go to state 238
    "range"                           shift, and go to state 239
    "urange"                          shift, and go to state 240
    "range64"                         shift, and go to state 241
    "urange64"                        shift, and go to state 242
    "int64"                           shift, and go to state 244
    "uint64"                          shift, and go to state 245
    "double"                          shift, and go to state 246
    "int8"                            shift, and go to state 249
    "uint8"                           shift, and go to state 250
    "int16"                           shift, and go to state 251
    "uint16"                          shift, and go to state 252
    "tuple"                           shift, and go to state 421
    "variant"                         shift, and go to state 422
    "generator"                       shift, and go to state 423
    "++"                              shift, and go to state 424
    "--"                              shift, and go to state 425
    "::"                              shift, and go to state 55
    "$$"                              shift, and go to state 426
    "$i"                              shift, and go to state 427
    "$v"                              shift, and go to state 428
    "$b"                              shift, and go to state 429
    "$a"                              shift, and go to state 430
    "$c"                              shift, and go to state 431
    "..."                             shift, and go to state 432
    "integer constant"                shift, and go to state 433
    "long integer constant"           shift, and go to state 434
    "unsigned integer constant"       shift, and go to state 435
    "unsigned long integer constant"  shift, and go to state 436
    "unsigned int8 constant"          shift, and go to state 437
    "floating point constant"         shift, and go to state 438
    "double constant"                 shift, and go to state 439
    "name"                            shift, and go to state 56
    "start of the string"             shift, and go to state 440
    "begin of code block"             shift, and go to state 441
    '-'                               shift, and go to state 442
    '+'                               shift, and go to state 443
    '*'                               shift, and go to state 444
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 445
    '!'                               shift, and go to state 446
    '['                               shift, and go to state 447
    '('                               shift, and go to state 448
    '$'                               shift, and go to state 449
    '@'                               shift, and go to state 450

    string_builder          go to state 451
    expr_reader             go to state 452
    expr_call_pipe          go to state 453
    name_in_namespace       go to state 454
    expr_new                go to state 455
    expr_cast               go to state 456
    expr_type_decl          go to state 457
    expr_type_info          go to state 458
    block_or_lambda         go to state 459
    expr_full_block         go to state 460
    expr_numeric_const      go to state 461
    expr_named_call         go to state 462
    expr_method_call        go to state 463
    func_addr_expr          go to state 464
    expr_field              go to state 465
    expr_call               go to state 466
    expr                    go to state 617
    expr_mtag               go to state 468
    basic_type_declaration  go to state 469
    make_decl               go to state 470
    make_struct_decl        go to state 471
    make_map_tuple          go to state 618
    make_tuple_call         go to state 472
    make_dim_decl           go to state 473
    expr_map_tuple_list     go to state 619
    make_table_decl         go to state 474
    array_comprehension     go to state 475


State 442

  379 expr: '-' . expr

    "struct"                          shift, and go to state 402
    "class"                           shift, and go to state 403
    "true"                            shift, and go to state 404
    "false"                           shift, and go to state 405
    "new"                             shift, and go to state 406
    "typeinfo"                        shift, and go to state 407
    "type"                            shift, and go to state 408
    "array"                           shift, and go to state 409
    "null"                            shift, and go to state 410
    "table"                           shift, and go to state 411
    "deref"                           shift, and go to state 412
    "cast"                            shift, and go to state 413
    "upcast"                          shift, and go to state 414
    "addr"                            shift, and go to state 415
    "reinterpret"                     shift, and go to state 416
    "unsafe"                          shift, and go to state 417
    "fixed_array"                     shift, and go to state 418
    "default"                         shift, and go to state 419
    "bool"                            shift, and go to state 222
    "void"                            shift, and go to state 223
    "string"                          shift, and go to state 224
    "int"                             shift, and go to state 226
    "int2"                            shift, and go to state 227
    "int3"                            shift, and go to state 228
    "int4"                            shift, and go to state 229
    "uint"                            shift, and go to state 230
    "bitfield"                        shift, and go to state 420
    "uint2"                           shift, and go to state 232
    "uint3"                           shift, and go to state 233
    "uint4"                           shift, and go to state 234
    "float"                           shift, and go to state 235
    "float2"                          shift, and go to state 236
    "float3"                          shift, and go to state 237
    "float4"                          shift, and go to state 238
    "range"                           shift, and go to state 239
    "urange"                          shift, and go to state 240
    "range64"                         shift, and go to state 241
    "urange64"                        shift, and go to state 242
    "int64"                           shift, and go to state 244
    "uint64"                          shift, and go to state 245
    "double"                          shift, and go to state 246
    "int8"                            shift, and go to state 249
    "uint8"                           shift, and go to state 250
    "int16"                           shift, and go to state 251
    "uint16"                          shift, and go to state 252
    "tuple"                           shift, and go to state 421
    "variant"                         shift, and go to state 422
    "generator"                       shift, and go to state 423
    "++"                              shift, and go to state 424
    "--"                              shift, and go to state 425
    "::"                              shift, and go to state 55
    "$$"                              shift, and go to state 426
    "$i"                              shift, and go to state 427
    "$v"                              shift, and go to state 428
    "$b"                              shift, and go to state 429
    "$a"                              shift, and go to state 430
    "$c"                              shift, and go to state 431
    "..."                             shift, and go to state 432
    "integer constant"                shift, and go to state 433
    "long integer constant"           shift, and go to state 434
    "unsigned integer constant"       shift, and go to state 435
    "unsigned long integer constant"  shift, and go to state 436
    "unsigned int8 constant"          shift, and go to state 437
    "floating point constant"         shift, and go to state 438
    "double constant"                 shift, and go to state 439
    "name"                            shift, and go to state 56
    "start of the string"             shift, and go to state 440
    "begin of code block"             shift, and go to state 441
    '-'                               shift, and go to state 442
    '+'                               shift, and go to state 443
    '*'                               shift, and go to state 444
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 445
    '!'                               shift, and go to state 446
    '['                               shift, and go to state 447
    '('                               shift, and go to state 448
    '$'                               shift, and go to state 449
    '@'                               shift, and go to state 450

    string_builder          go to state 451
    expr_reader             go to state 452
    expr_call_pipe          go to state 453
    name_in_namespace       go to state 454
    expr_new                go to state 455
    expr_cast               go to state 456
    expr_type_decl          go to state 457
    expr_type_info          go to state 458
    block_or_lambda         go to state 459
    expr_full_block         go to state 460
    expr_numeric_const      go to state 461
    expr_named_call         go to state 462
    expr_method_call        go to state 463
    func_addr_expr          go to state 464
    expr_field              go to state 465
    expr_call               go to state 466
    expr                    go to state 620
    expr_mtag               go to state 468
    basic_type_declaration  go to state 469
    make_decl               go to state 470
    make_struct_decl        go to state 471
    make_tuple_call         go to state 472
    make_dim_decl           go to state 473
    make_table_decl         go to state 474
    array_comprehension     go to state 475


State 443

  378 expr: '+' . expr

    "struct"                          shift, and go to state 402
    "class"                           shift, and go to state 403
    "true"                            shift, and go to state 404
    "false"                           shift, and go to state 405
    "new"                             shift, and go to state 406
    "typeinfo"                        shift, and go to state 407
    "type"                            shift, and go to state 408
    "array"                           shift, and go to state 409
    "null"                            shift, and go to state 410
    "table"                           shift, and go to state 411
    "deref"                           shift, and go to state 412
    "cast"                            shift, and go to state 413
    "upcast"                          shift, and go to state 414
    "addr"                            shift, and go to state 415
    "reinterpret"                     shift, and go to state 416
    "unsafe"                          shift, and go to state 417
    "fixed_array"                     shift, and go to state 418
    "default"                         shift, and go to state 419
    "bool"                            shift, and go to state 222
    "void"                            shift, and go to state 223
    "string"                          shift, and go to state 224
    "int"                             shift, and go to state 226
    "int2"                            shift, and go to state 227
    "int3"                            shift, and go to state 228
    "int4"                            shift, and go to state 229
    "uint"                            shift, and go to state 230
    "bitfield"                        shift, and go to state 420
    "uint2"                           shift, and go to state 232
    "uint3"                           shift, and go to state 233
    "uint4"                           shift, and go to state 234
    "float"                           shift, and go to state 235
    "float2"                          shift, and go to state 236
    "float3"                          shift, and go to state 237
    "float4"                          shift, and go to state 238
    "range"                           shift, and go to state 239
    "urange"                          shift, and go to state 240
    "range64"                         shift, and go to state 241
    "urange64"                        shift, and go to state 242
    "int64"                           shift, and go to state 244
    "uint64"                          shift, and go to state 245
    "double"                          shift, and go to state 246
    "int8"                            shift, and go to state 249
    "uint8"                           shift, and go to state 250
    "int16"                           shift, and go to state 251
    "uint16"                          shift, and go to state 252
    "tuple"                           shift, and go to state 421
    "variant"                         shift, and go to state 422
    "generator"                       shift, and go to state 423
    "++"                              shift, and go to state 424
    "--"                              shift, and go to state 425
    "::"                              shift, and go to state 55
    "$$"                              shift, and go to state 426
    "$i"                              shift, and go to state 427
    "$v"                              shift, and go to state 428
    "$b"                              shift, and go to state 429
    "$a"                              shift, and go to state 430
    "$c"                              shift, and go to state 431
    "..."                             shift, and go to state 432
    "integer constant"                shift, and go to state 433
    "long integer constant"           shift, and go to state 434
    "unsigned integer constant"       shift, and go to state 435
    "unsigned long integer constant"  shift, and go to state 436
    "unsigned int8 constant"          shift, and go to state 437
    "floating point constant"         shift, and go to state 438
    "double constant"                 shift, and go to state 439
    "name"                            shift, and go to state 56
    "start of the string"             shift, and go to state 440
    "begin of code block"             shift, and go to state 441
    '-'                               shift, and go to state 442
    '+'                               shift, and go to state 443
    '*'                               shift, and go to state 444
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 445
    '!'                               shift, and go to state 446
    '['                               shift, and go to state 447
    '('                               shift, and go to state 448
    '$'                               shift, and go to state 449
    '@'                               shift, and go to state 450

    string_builder          go to state 451
    expr_reader             go to state 452
    expr_call_pipe          go to state 453
    name_in_namespace       go to state 454
    expr_new                go to state 455
    expr_cast               go to state 456
    expr_type_decl          go to state 457
    expr_type_info          go to state 458
    block_or_lambda         go to state 459
    expr_full_block         go to state 460
    expr_numeric_const      go to state 461
    expr_named_call         go to state 462
    expr_method_call        go to state 463
    func_addr_expr          go to state 464
    expr_field              go to state 465
    expr_call               go to state 466
    expr                    go to state 621
    expr_mtag               go to state 468
    basic_type_declaration  go to state 469
    make_decl               go to state 470
    make_struct_decl        go to state 471
    make_tuple_call         go to state 472
    make_dim_decl           go to state 473
    make_table_decl         go to state 474
    array_comprehension     go to state 475


State 444

  415 expr: '*' . expr

    "struct"                          shift, and go to state 402
    "class"                           shift, and go to state 403
    "true"                            shift, and go to state 404
    "false"                           shift, and go to state 405
    "new"                             shift, and go to state 406
    "typeinfo"                        shift, and go to state 407
    "type"                            shift, and go to state 408
    "array"                           shift, and go to state 409
    "null"                            shift, and go to state 410
    "table"                           shift, and go to state 411
    "deref"                           shift, and go to state 412
    "cast"                            shift, and go to state 413
    "upcast"                          shift, and go to state 414
    "addr"                            shift, and go to state 415
    "reinterpret"                     shift, and go to state 416
    "unsafe"                          shift, and go to state 417
    "fixed_array"                     shift, and go to state 418
    "default"                         shift, and go to state 419
    "bool"                            shift, and go to state 222
    "void"                            shift, and go to state 223
    "string"                          shift, and go to state 224
    "int"                             shift, and go to state 226
    "int2"                            shift, and go to state 227
    "int3"                            shift, and go to state 228
    "int4"                            shift, and go to state 229
    "uint"                            shift, and go to state 230
    "bitfield"                        shift, and go to state 420
    "uint2"                           shift, and go to state 232
    "uint3"                           shift, and go to state 233
    "uint4"                           shift, and go to state 234
    "float"                           shift, and go to state 235
    "float2"                          shift, and go to state 236
    "float3"                          shift, and go to state 237
    "float4"                          shift, and go to state 238
    "range"                           shift, and go to state 239
    "urange"                          shift, and go to state 240
    "range64"                         shift, and go to state 241
    "urange64"                        shift, and go to state 242
    "int64"                           shift, and go to state 244
    "uint64"                          shift, and go to state 245
    "double"                          shift, and go to state 246
    "int8"                            shift, and go to state 249
    "uint8"                           shift, and go to state 250
    "int16"                           shift, and go to state 251
    "uint16"                          shift, and go to state 252
    "tuple"                           shift, and go to state 421
    "variant"                         shift, and go to state 422
    "generator"                       shift, and go to state 423
    "++"                              shift, and go to state 424
    "--"                              shift, and go to state 425
    "::"                              shift, and go to state 55
    "$$"                              shift, and go to state 426
    "$i"                              shift, and go to state 427
    "$v"                              shift, and go to state 428
    "$b"                              shift, and go to state 429
    "$a"                              shift, and go to state 430
    "$c"                              shift, and go to state 431
    "..."                             shift, and go to state 432
    "integer constant"                shift, and go to state 433
    "long integer constant"           shift, and go to state 434
    "unsigned integer constant"       shift, and go to state 435
    "unsigned long integer constant"  shift, and go to state 436
    "unsigned int8 constant"          shift, and go to state 437
    "floating point constant"         shift, and go to state 438
    "double constant"                 shift, and go to state 439
    "name"                            shift, and go to state 56
    "start of the string"             shift, and go to state 440
    "begin of code block"             shift, and go to state 441
    '-'                               shift, and go to state 442
    '+'                               shift, and go to state 443
    '*'                               shift, and go to state 444
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 445
    '!'                               shift, and go to state 446
    '['                               shift, and go to state 447
    '('                               shift, and go to state 448
    '$'                               shift, and go to state 449
    '@'                               shift, and go to state 450

    string_builder          go to state 451
    expr_reader             go to state 452
    expr_call_pipe          go to state 453
    name_in_namespace       go to state 454
    expr_new                go to state 455
    expr_cast               go to state 456
    expr_type_decl          go to state 457
    expr_type_info          go to state 458
    block_or_lambda         go to state 459
    expr_full_block         go to state 460
    expr_numeric_const      go to state 461
    expr_named_call         go to state 462
    expr_method_call        go to state 463
    func_addr_expr          go to state 464
    expr_field              go to state 465
    expr_call               go to state 466
    expr                    go to state 622
    expr_mtag               go to state 468
    basic_type_declaration  go to state 469
    make_decl               go to state 470
    make_struct_decl        go to state 471
    make_tuple_call         go to state 472
    make_dim_decl           go to state 473
    make_table_decl         go to state 474
    array_comprehension     go to state 475


State 445

  377 expr: '~' . expr

    "struct"                          shift, and go to state 402
    "class"                           shift, and go to state 403
    "true"                            shift, and go to state 404
    "false"                           shift, and go to state 405
    "new"                             shift, and go to state 406
    "typeinfo"                        shift, and go to state 407
    "type"                            shift, and go to state 408
    "array"                           shift, and go to state 409
    "null"                            shift, and go to state 410
    "table"                           shift, and go to state 411
    "deref"                           shift, and go to state 412
    "cast"                            shift, and go to state 413
    "upcast"                          shift, and go to state 414
    "addr"                            shift, and go to state 415
    "reinterpret"                     shift, and go to state 416
    "unsafe"                          shift, and go to state 417
    "fixed_array"                     shift, and go to state 418
    "default"                         shift, and go to state 419
    "bool"                            shift, and go to state 222
    "void"                            shift, and go to state 223
    "string"                          shift, and go to state 224
    "int"                             shift, and go to state 226
    "int2"                            shift, and go to state 227
    "int3"                            shift, and go to state 228
    "int4"                            shift, and go to state 229
    "uint"                            shift, and go to state 230
    "bitfield"                        shift, and go to state 420
    "uint2"                           shift, and go to state 232
    "uint3"                           shift, and go to state 233
    "uint4"                           shift, and go to state 234
    "float"                           shift, and go to state 235
    "float2"                          shift, and go to state 236
    "float3"                          shift, and go to state 237
    "float4"                          shift, and go to state 238
    "range"                           shift, and go to state 239
    "urange"                          shift, and go to state 240
    "range64"                         shift, and go to state 241
    "urange64"                        shift, and go to state 242
    "int64"                           shift, and go to state 244
    "uint64"                          shift, and go to state 245
    "double"                          shift, and go to state 246
    "int8"                            shift, and go to state 249
    "uint8"                           shift, and go to state 250
    "int16"                           shift, and go to state 251
    "uint16"                          shift, and go to state 252
    "tuple"                           shift, and go to state 421
    "variant"                         shift, and go to state 422
    "generator"                       shift, and go to state 423
    "++"                              shift, and go to state 424
    "--"                              shift, and go to state 425
    "::"                              shift, and go to state 55
    "$$"                              shift, and go to state 426
    "$i"                              shift, and go to state 427
    "$v"                              shift, and go to state 428
    "$b"                              shift, and go to state 429
    "$a"                              shift, and go to state 430
    "$c"                              shift, and go to state 431
    "..."                             shift, and go to state 432
    "integer constant"                shift, and go to state 433
    "long integer constant"           shift, and go to state 434
    "unsigned integer constant"       shift, and go to state 435
    "unsigned long integer constant"  shift, and go to state 436
    "unsigned int8 constant"          shift, and go to state 437
    "floating point constant"         shift, and go to state 438
    "double constant"                 shift, and go to state 439
    "name"                            shift, and go to state 56
    "start of the string"             shift, and go to state 440
    "begin of code block"             shift, and go to state 441
    '-'                               shift, and go to state 442
    '+'                               shift, and go to state 443
    '*'                               shift, and go to state 444
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 445
    '!'                               shift, and go to state 446
    '['                               shift, and go to state 447
    '('                               shift, and go to state 448
    '$'                               shift, and go to state 449
    '@'                               shift, and go to state 450

    string_builder          go to state 451
    expr_reader             go to state 452
    expr_call_pipe          go to state 453
    name_in_namespace       go to state 454
    expr_new                go to state 455
    expr_cast               go to state 456
    expr_type_decl          go to state 457
    expr_type_info          go to state 458
    block_or_lambda         go to state 459
    expr_full_block         go to state 460
    expr_numeric_const      go to state 461
    expr_named_call         go to state 462
    expr_method_call        go to state 463
    func_addr_expr          go to state 464
    expr_field              go to state 465
    expr_call               go to state 466
    expr                    go to state 623
    expr_mtag               go to state 468
    basic_type_declaration  go to state 469
    make_decl               go to state 470
    make_struct_decl        go to state 471
    make_tuple_call         go to state 472
    make_dim_decl           go to state 473
    make_table_decl         go to state 474
    array_comprehension     go to state 475


State 446

  376 expr: '!' . expr

    "struct"                          shift, and go to state 402
    "class"                           shift, and go to state 403
    "true"                            shift, and go to state 404
    "false"                           shift, and go to state 405
    "new"                             shift, and go to state 406
    "typeinfo"                        shift, and go to state 407
    "type"                            shift, and go to state 408
    "array"                           shift, and go to state 409
    "null"                            shift, and go to state 410
    "table"                           shift, and go to state 411
    "deref"                           shift, and go to state 412
    "cast"                            shift, and go to state 413
    "upcast"                          shift, and go to state 414
    "addr"                            shift, and go to state 415
    "reinterpret"                     shift, and go to state 416
    "unsafe"                          shift, and go to state 417
    "fixed_array"                     shift, and go to state 418
    "default"                         shift, and go to state 419
    "bool"                            shift, and go to state 222
    "void"                            shift, and go to state 223
    "string"                          shift, and go to state 224
    "int"                             shift, and go to state 226
    "int2"                            shift, and go to state 227
    "int3"                            shift, and go to state 228
    "int4"                            shift, and go to state 229
    "uint"                            shift, and go to state 230
    "bitfield"                        shift, and go to state 420
    "uint2"                           shift, and go to state 232
    "uint3"                           shift, and go to state 233
    "uint4"                           shift, and go to state 234
    "float"                           shift, and go to state 235
    "float2"                          shift, and go to state 236
    "float3"                          shift, and go to state 237
    "float4"                          shift, and go to state 238
    "range"                           shift, and go to state 239
    "urange"                          shift, and go to state 240
    "range64"                         shift, and go to state 241
    "urange64"                        shift, and go to state 242
    "int64"                           shift, and go to state 244
    "uint64"                          shift, and go to state 245
    "double"                          shift, and go to state 246
    "int8"                            shift, and go to state 249
    "uint8"                           shift, and go to state 250
    "int16"                           shift, and go to state 251
    "uint16"                          shift, and go to state 252
    "tuple"                           shift, and go to state 421
    "variant"                         shift, and go to state 422
    "generator"                       shift, and go to state 423
    "++"                              shift, and go to state 424
    "--"                              shift, and go to state 425
    "::"                              shift, and go to state 55
    "$$"                              shift, and go to state 426
    "$i"                              shift, and go to state 427
    "$v"                              shift, and go to state 428
    "$b"                              shift, and go to state 429
    "$a"                              shift, and go to state 430
    "$c"                              shift, and go to state 431
    "..."                             shift, and go to state 432
    "integer constant"                shift, and go to state 433
    "long integer constant"           shift, and go to state 434
    "unsigned integer constant"       shift, and go to state 435
    "unsigned long integer constant"  shift, and go to state 436
    "unsigned int8 constant"          shift, and go to state 437
    "floating point constant"         shift, and go to state 438
    "double constant"                 shift, and go to state 439
    "name"                            shift, and go to state 56
    "start of the string"             shift, and go to state 440
    "begin of code block"             shift, and go to state 441
    '-'                               shift, and go to state 442
    '+'                               shift, and go to state 443
    '*'                               shift, and go to state 444
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 445
    '!'                               shift, and go to state 446
    '['                               shift, and go to state 447
    '('                               shift, and go to state 448
    '$'                               shift, and go to state 449
    '@'                               shift, and go to state 450

    string_builder          go to state 451
    expr_reader             go to state 452
    expr_call_pipe          go to state 453
    name_in_namespace       go to state 454
    expr_new                go to state 455
    expr_cast               go to state 456
    expr_type_decl          go to state 457
    expr_type_info          go to state 458
    block_or_lambda         go to state 459
    expr_full_block         go to state 460
    expr_numeric_const      go to state 461
    expr_named_call         go to state 462
    expr_method_call        go to state 463
    func_addr_expr          go to state 464
    expr_field              go to state 465
    expr_call               go to state 466
    expr                    go to state 624
    expr_mtag               go to state 468
    basic_type_declaration  go to state 469
    make_decl               go to state 470
    make_struct_decl        go to state 471
    make_tuple_call         go to state 472
    make_dim_decl           go to state 473
    make_table_decl         go to state 474
    array_comprehension     go to state 475


State 447

  751 make_dim_decl: '[' . expr_list optional_comma ']'
  779 array_comprehension: '[' . "for" variable_name_with_pos_list "in" expr_list "end of expression" expr array_comprehension_where ']'
  780                    | '[' . "iterator" "for" variable_name_with_pos_list "in" expr_list "end of expression" expr array_comprehension_where ']'

    "struct"                          shift, and go to state 402
    "class"                           shift, and go to state 403
    "for"                             shift, and go to state 625
    "true"                            shift, and go to state 404
    "false"                           shift, and go to state 405
    "new"                             shift, and go to state 406
    "typeinfo"                        shift, and go to state 407
    "type"                            shift, and go to state 408
    "array"                           shift, and go to state 409
    "null"                            shift, and go to state 410
    "table"                           shift, and go to state 411
    "deref"                           shift, and go to state 412
    "cast"                            shift, and go to state 413
    "upcast"                          shift, and go to state 414
    "iterator"                        shift, and go to state 626
    "addr"                            shift, and go to state 415
    "reinterpret"                     shift, and go to state 416
    "unsafe"                          shift, and go to state 417
    "fixed_array"                     shift, and go to state 418
    "default"                         shift, and go to state 419
    "bool"                            shift, and go to state 222
    "void"                            shift, and go to state 223
    "string"                          shift, and go to state 224
    "int"                             shift, and go to state 226
    "int2"                            shift, and go to state 227
    "int3"                            shift, and go to state 228
    "int4"                            shift, and go to state 229
    "uint"                            shift, and go to state 230
    "bitfield"                        shift, and go to state 420
    "uint2"                           shift, and go to state 232
    "uint3"                           shift, and go to state 233
    "uint4"                           shift, and go to state 234
    "float"                           shift, and go to state 235
    "float2"                          shift, and go to state 236
    "float3"                          shift, and go to state 237
    "float4"                          shift, and go to state 238
    "range"                           shift, and go to state 239
    "urange"                          shift, and go to state 240
    "range64"                         shift, and go to state 241
    "urange64"                        shift, and go to state 242
    "int64"                           shift, and go to state 244
    "uint64"                          shift, and go to state 245
    "double"                          shift, and go to state 246
    "int8"                            shift, and go to state 249
    "uint8"                           shift, and go to state 250
    "int16"                           shift, and go to state 251
    "uint16"                          shift, and go to state 252
    "tuple"                           shift, and go to state 421
    "variant"                         shift, and go to state 422
    "generator"                       shift, and go to state 423
    "++"                              shift, and go to state 424
    "--"                              shift, and go to state 425
    "::"                              shift, and go to state 55
    "$$"                              shift, and go to state 426
    "$i"                              shift, and go to state 427
    "$v"                              shift, and go to state 428
    "$b"                              shift, and go to state 429
    "$a"                              shift, and go to state 430
    "$c"                              shift, and go to state 431
    "..."                             shift, and go to state 432
    "integer constant"                shift, and go to state 433
    "long integer constant"           shift, and go to state 434
    "unsigned integer constant"       shift, and go to state 435
    "unsigned long integer constant"  shift, and go to state 436
    "unsigned int8 constant"          shift, and go to state 437
    "floating point constant"         shift, and go to state 438
    "double constant"                 shift, and go to state 439
    "name"                            shift, and go to state 56
    "start of the string"             shift, and go to state 440
    "begin of code block"             shift, and go to state 441
    '-'                               shift, and go to state 442
    '+'                               shift, and go to state 443
    '*'                               shift, and go to state 444
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 445
    '!'                               shift, and go to state 446
    '['                               shift, and go to state 447
    '('                               shift, and go to state 448
    '$'                               shift, and go to state 449
    '@'                               shift, and go to state 450

    string_builder          go to state 451
    expr_reader             go to state 452
    expr_call_pipe          go to state 453
    name_in_namespace       go to state 454
    expr_new                go to state 455
    expr_cast               go to state 456
    expr_type_decl          go to state 457
    expr_type_info          go to state 458
    expr_list               go to state 627
    block_or_lambda         go to state 459
    expr_full_block         go to state 460
    expr_numeric_const      go to state 461
    expr_named_call         go to state 462
    expr_method_call        go to state 463
    func_addr_expr          go to state 464
    expr_field              go to state 465
    expr_call               go to state 466
    expr                    go to state 628
    expr_mtag               go to state 468
    basic_type_declaration  go to state 469
    make_decl               go to state 470
    make_struct_decl        go to state 471
    make_tuple_call         go to state 472
    make_dim_decl           go to state 473
    make_table_decl         go to state 474
    array_comprehension     go to state 475


State 448

  406 expr: '(' . expr_list optional_comma ')'

    "struct"                          shift, and go to state 402
    "class"                           shift, and go to state 403
    "true"                            shift, and go to state 404
    "false"                           shift, and go to state 405
    "new"                             shift, and go to state 406
    "typeinfo"                        shift, and go to state 407
    "type"                            shift, and go to state 408
    "array"                           shift, and go to state 409
    "null"                            shift, and go to state 410
    "table"                           shift, and go to state 411
    "deref"                           shift, and go to state 412
    "cast"                            shift, and go to state 413
    "upcast"                          shift, and go to state 414
    "addr"                            shift, and go to state 415
    "reinterpret"                     shift, and go to state 416
    "unsafe"                          shift, and go to state 417
    "fixed_array"                     shift, and go to state 418
    "default"                         shift, and go to state 419
    "bool"                            shift, and go to state 222
    "void"                            shift, and go to state 223
    "string"                          shift, and go to state 224
    "int"                             shift, and go to state 226
    "int2"                            shift, and go to state 227
    "int3"                            shift, and go to state 228
    "int4"                            shift, and go to state 229
    "uint"                            shift, and go to state 230
    "bitfield"                        shift, and go to state 420
    "uint2"                           shift, and go to state 232
    "uint3"                           shift, and go to state 233
    "uint4"                           shift, and go to state 234
    "float"                           shift, and go to state 235
    "float2"                          shift, and go to state 236
    "float3"                          shift, and go to state 237
    "float4"                          shift, and go to state 238
    "range"                           shift, and go to state 239
    "urange"                          shift, and go to state 240
    "range64"                         shift, and go to state 241
    "urange64"                        shift, and go to state 242
    "int64"                           shift, and go to state 244
    "uint64"                          shift, and go to state 245
    "double"                          shift, and go to state 246
    "int8"                            shift, and go to state 249
    "uint8"                           shift, and go to state 250
    "int16"                           shift, and go to state 251
    "uint16"                          shift, and go to state 252
    "tuple"                           shift, and go to state 421
    "variant"                         shift, and go to state 422
    "generator"                       shift, and go to state 423
    "++"                              shift, and go to state 424
    "--"                              shift, and go to state 425
    "::"                              shift, and go to state 55
    "$$"                              shift, and go to state 426
    "$i"                              shift, and go to state 427
    "$v"                              shift, and go to state 428
    "$b"                              shift, and go to state 429
    "$a"                              shift, and go to state 430
    "$c"                              shift, and go to state 431
    "..."                             shift, and go to state 432
    "integer constant"                shift, and go to state 433
    "long integer constant"           shift, and go to state 434
    "unsigned integer constant"       shift, and go to state 435
    "unsigned long integer constant"  shift, and go to state 436
    "unsigned int8 constant"          shift, and go to state 437
    "floating point constant"         shift, and go to state 438
    "double constant"                 shift, and go to state 439
    "name"                            shift, and go to state 56
    "start of the string"             shift, and go to state 440
    "begin of code block"             shift, and go to state 441
    '-'                               shift, and go to state 442
    '+'                               shift, and go to state 443
    '*'                               shift, and go to state 444
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 445
    '!'                               shift, and go to state 446
    '['                               shift, and go to state 447
    '('                               shift, and go to state 448
    '$'                               shift, and go to state 449
    '@'                               shift, and go to state 450

    string_builder          go to state 451
    expr_reader             go to state 452
    expr_call_pipe          go to state 453
    name_in_namespace       go to state 454
    expr_new                go to state 455
    expr_cast               go to state 456
    expr_type_decl          go to state 457
    expr_type_info          go to state 458
    expr_list               go to state 629
    block_or_lambda         go to state 459
    expr_full_block         go to state 460
    expr_numeric_const      go to state 461
    expr_named_call         go to state 462
    expr_method_call        go to state 463
    func_addr_expr          go to state 464
    expr_field              go to state 465
    expr_call               go to state 466
    expr                    go to state 628
    expr_mtag               go to state 468
    basic_type_declaration  go to state 469
    make_decl               go to state 470
    make_struct_decl        go to state 471
    make_tuple_call         go to state 472
    make_dim_decl           go to state 473
    make_table_decl         go to state 474
    array_comprehension     go to state 475


State 449

  296 block_or_lambda: '$' .

    $default  reduce using rule 296 (block_or_lambda)


State 450

  297 block_or_lambda: '@' .
  298                | '@' . '@'
  343 func_addr_expr: '@' . '@' func_addr_name
  346               | '@' . '@' '<' $@13 type_declaration_no_options '>' $@14 func_addr_name
  349               | '@' . '@' '<' $@15 optional_function_argument_list optional_function_type '>' $@16 func_addr_name
  465 expr_mtag: '@' . '@' "$c" '(' expr ')'

    '@'  shift, and go to state 630

    $default  reduce using rule 297 (block_or_lambda)


State 451

  370 expr: string_builder .

    $default  reduce using rule 370 (expr)


State 452

  369 expr: expr_reader .

    $default  reduce using rule 369 (expr)


State 453

  448 expr: expr_call_pipe .

    $default  reduce using rule 448 (expr)


State 454

  337 expr_named_call: name_in_namespace . '(' '[' make_struct_fields ']' ')'
  338                | name_in_namespace . '(' expr_list ',' '[' make_struct_fields ']' ')'
  359 expr_call: name_in_namespace . '(' ')'
  360          | name_in_namespace . '(' "uninitialized" ')'
  361          | name_in_namespace . '(' make_struct_single ')'
  362          | name_in_namespace . '(' "uninitialized" make_struct_single ')'
  363          | name_in_namespace . '(' expr_list ')'
  367 expr: name_in_namespace .

    '('  shift, and go to state 631

    $default  reduce using rule 367 (expr)


State 455

  441 expr: expr_new .

    $default  reduce using rule 441 (expr)


State 456

  440 expr: expr_cast .

    $default  reduce using rule 440 (expr)


State 457

  439 expr: expr_type_decl .

    $default  reduce using rule 439 (expr)


State 458

  438 expr: expr_type_info .

    $default  reduce using rule 438 (expr)


State 459

  308 expr_full_block: block_or_lambda . optional_annotation_list optional_capture_list optional_function_argument_list optional_function_type block_or_simple_block

    '['  shift, and go to state 15

    $default  reduce using rule 113 (optional_annotation_list)

    optional_annotation_list  go to state 632


State 460

  444 expr: expr_full_block .

    $default  reduce using rule 444 (expr)


State 461

  368 expr: expr_numeric_const .

    $default  reduce using rule 368 (expr)


State 462

  443 expr: expr_named_call .

    $default  reduce using rule 443 (expr)


State 463

  442 expr: expr_method_call .

    $default  reduce using rule 442 (expr)


State 464

  413 expr: func_addr_expr .

    $default  reduce using rule 413 (expr)


State 465

  374 expr: expr_field .

    $default  reduce using rule 374 (expr)


State 466

  214 expr_call_pipe: expr_call . expr_full_block_assumed_piped
  414 expr: expr_call .

    "begin of code block"  shift, and go to state 633
    '$'                    shift, and go to state 449
    '@'                    shift, and go to state 634

    $default  reduce using rule 414 (expr)

    block_or_lambda                go to state 635
    expr_full_block_assumed_piped  go to state 636


State 467

  339 expr_method_call: expr . "->" "name" '(' ')'
  340                 | expr . "->" "name" '(' expr_list ')'
  350 expr_field: expr . '.' "name"
  351           | expr . '.' '.' "name"
  352           | expr . '.' "name" '(' ')'
  353           | expr . '.' "name" '(' expr_list ')'
  354           | expr . '.' basic_type_declaration '(' ')'
  355           | expr . '.' basic_type_declaration '(' expr_list ')'
  358           | expr . '.' $@17 error $@18
  380 expr: expr . "<<" expr
  381     | expr . ">>" expr
  382     | expr . "<<<" expr
  383     | expr . ">>>" expr
  384     | expr . '+' expr
  385     | expr . '-' expr
  386     | expr . '*' expr
  387     | expr . '/' expr
  388     | expr . '%' expr
  389     | expr . '<' expr
  390     | expr . '>' expr
  391     | expr . "==" expr
  392     | expr . "!=" expr
  393     | expr . "<=" expr
  394     | expr . ">=" expr
  395     | expr . '&' expr
  396     | expr . '|' expr
  397     | expr . '^' expr
  398     | expr . "&&" expr
  399     | expr . "||" expr
  400     | expr . "^^" expr
  401     | expr . ".." expr
  404     | expr . "++"
  405     | expr . "--"
  407     | expr . '[' expr ']'
  408     | expr . '.' '[' expr ']'
  409     | expr . "?[" expr ']'
  410     | expr . '.' "?[" expr ']'
  411     | expr . "?." "name"
  412     | expr . '.' "?." "name"
  421     | expr . "??" expr
  422     | expr . '?' expr ':' expr
  425     | expr . "is" "type" '<' $@19 type_declaration_no_options '>' $@20
  426     | expr . "is" basic_type_declaration
  427     | expr . "is" "name"
  428     | expr . "as" "name"
  431     | expr . "as" "type" '<' $@21 type_declaration '>' $@22
  432     | expr . "as" basic_type_declaration
  433     | expr . '?' "as" "name"
  436     | expr . '?' "as" "type" '<' $@23 type_declaration '>' $@24
  437     | expr . '?' "as" basic_type_declaration
  445     | expr . "<|" expr
  446     | expr . "|>" expr
  447     | expr . "|>" basic_type_declaration
  458 expr_mtag: expr . '.' "$f" '(' expr ')'
  459          | expr . "?." "$f" '(' expr ')'
  460          | expr . '.' '.' "$f" '(' expr ')'
  461          | expr . '.' "?." "$f" '(' expr ')'
  462          | expr . "as" "$f" '(' expr ')'
  463          | expr . '?' "as" "$f" '(' expr ')'
  464          | expr . "is" "$f" '(' expr ')'
  639 type_declaration_no_options_no_dim: "typedecl" '(' expr . ')'

    "is"   shift, and go to state 637
    "as"   shift, and go to state 638
    "<<"   shift, and go to state 639
    ">>"   shift, and go to state 640
    "++"   shift, and go to state 641
    "--"   shift, and go to state 642
    "<="   shift, and go to state 643
    ">="   shift, and go to state 644
    "=="   shift, and go to state 645
    "!="   shift, and go to state 646
    "->"   shift, and go to state 647
    "??"   shift, and go to state 648
    "?."   shift, and go to state 649
    "?["   shift, and go to state 650
    "<|"   shift, and go to state 651
    "|>"   shift, and go to state 652
    "<<<"  shift, and go to state 653
    ">>>"  shift, and go to state 654
    "&&"   shift, and go to state 655
    "||"   shift, and go to state 656
    "^^"   shift, and go to state 657
    ".."   shift, and go to state 658
    '?'    shift, and go to state 659
    '|'    shift, and go to state 660
    '^'    shift, and go to state 661
    '&'    shift, and go to state 662
    '<'    shift, and go to state 663
    '>'    shift, and go to state 664
    '-'    shift, and go to state 665
    '+'    shift, and go to state 666
    '*'    shift, and go to state 667
    '/'    shift, and go to state 668
    '%'    shift, and go to state 669
    '.'    shift, and go to state 670
    '['    shift, and go to state 671
    ')'    shift, and go to state 672


State 468

  375 expr: expr_mtag .

    $default  reduce using rule 375 (expr)


State 469

  364 expr_call: basic_type_declaration . '(' ')'
  365          | basic_type_declaration . '(' expr_list ')'

    '('  shift, and go to state 673


State 470

  371 expr: make_decl .

    $default  reduce using rule 371 (expr)


State 471

  710 make_decl: make_struct_decl .

    $default  reduce using rule 710 (make_decl)


State 472

  714 make_decl: make_tuple_call .

    $default  reduce using rule 714 (make_decl)


State 473

  711 make_decl: make_dim_decl .

    $default  reduce using rule 711 (make_decl)


State 474

  712 make_decl: make_table_decl .

    $default  reduce using rule 712 (make_decl)


State 475

  713 make_decl: array_comprehension .

    $default  reduce using rule 713 (make_decl)


State 476

  667 type_declaration_no_options_no_dim: "iterator" '<' $@45 . type_declaration '>' $@46

    "type"       shift, and go to state 216
    "array"      shift, and go to state 217
    "table"      shift, and go to state 218
    "typedecl"   shift, and go to state 219
    "iterator"   shift, and go to state 220
    "smart_ptr"  shift, and go to state 221
    "bool"       shift, and go to state 222
    "void"       shift, and go to state 223
    "string"     shift, and go to state 224
    "auto"       shift, and go to state 225
    "int"        shift, and go to state 226
    "int2"       shift, and go to state 227
    "int3"       shift, and go to state 228
    "int4"       shift, and go to state 229
    "uint"       shift, and go to state 230
    "bitfield"   shift, and go to state 231
    "uint2"      shift, and go to state 232
    "uint3"      shift, and go to state 233
    "uint4"      shift, and go to state 234
    "float"      shift, and go to state 235
    "float2"     shift, and go to state 236
    "float3"     shift, and go to state 237
    "float4"     shift, and go to state 238
    "range"      shift, and go to state 239
    "urange"     shift, and go to state 240
    "range64"    shift, and go to state 241
    "urange64"   shift, and go to state 242
    "block"      shift, and go to state 243
    "int64"      shift, and go to state 244
    "uint64"     shift, and go to state 245
    "double"     shift, and go to state 246
    "function"   shift, and go to state 247
    "lambda"     shift, and go to state 248
    "int8"       shift, and go to state 249
    "uint8"      shift, and go to state 250
    "int16"      shift, and go to state 251
    "uint16"     shift, and go to state 252
    "tuple"      shift, and go to state 253
    "variant"    shift, and go to state 254
    "::"         shift, and go to state 55
    "$t"         shift, and go to state 255
    "name"       shift, and go to state 56
    '$'          shift, and go to state 256

    name_in_namespace                   go to state 257
    basic_type_declaration              go to state 258
    structure_type_declaration          go to state 259
    auto_type_declaration               go to state 260
    bitfield_type_declaration           go to state 261
    type_declaration_no_options         go to state 262
    type_declaration_no_options_no_dim  go to state 263
    type_declaration                    go to state 674


State 477

  657 type_declaration_no_options_no_dim: "smart_ptr" '<' $@39 . type_declaration '>' $@40

    "type"       shift, and go to state 216
    "array"      shift, and go to state 217
    "table"      shift, and go to state 218
    "typedecl"   shift, and go to state 219
    "iterator"   shift, and go to state 220
    "smart_ptr"  shift, and go to state 221
    "bool"       shift, and go to state 222
    "void"       shift, and go to state 223
    "string"     shift, and go to state 224
    "auto"       shift, and go to state 225
    "int"        shift, and go to state 226
    "int2"       shift, and go to state 227
    "int3"       shift, and go to state 228
    "int4"       shift, and go to state 229
    "uint"       shift, and go to state 230
    "bitfield"   shift, and go to state 231
    "uint2"      shift, and go to state 232
    "uint3"      shift, and go to state 233
    "uint4"      shift, and go to state 234
    "float"      shift, and go to state 235
    "float2"     shift, and go to state 236
    "float3"     shift, and go to state 237
    "float4"     shift, and go to state 238
    "range"      shift, and go to state 239
    "urange"     shift, and go to state 240
    "range64"    shift, and go to state 241
    "urange64"   shift, and go to state 242
    "block"      shift, and go to state 243
    "int64"      shift, and go to state 244
    "uint64"     shift, and go to state 245
    "double"     shift, and go to state 246
    "function"   shift, and go to state 247
    "lambda"     shift, and go to state 248
    "int8"       shift, and go to state 249
    "uint8"      shift, and go to state 250
    "int16"      shift, and go to state 251
    "uint16"     shift, and go to state 252
    "tuple"      shift, and go to state 253
    "variant"    shift, and go to state 254
    "::"         shift, and go to state 55
    "$t"         shift, and go to state 255
    "name"       shift, and go to state 56
    '$'          shift, and go to state 256

    name_in_namespace                   go to state 257
    basic_type_declaration              go to state 258
    structure_type_declaration          go to state 259
    auto_type_declaration               go to state 260
    bitfield_type_declaration           go to state 261
    type_declaration_no_options         go to state 262
    type_declaration_no_options_no_dim  go to state 263
    type_declaration                    go to state 675


State 478

  612 auto_type_declaration: "auto" '(' "name" . ')'

    ')'  shift, and go to state 676


State 479

  621 bitfield_type_declaration: "bitfield" '<' $@34 . bitfield_bits '>' $@35

    "name"  shift, and go to state 677

    bitfield_bits  go to state 678


State 480

  671 type_declaration_no_options_no_dim: "block" '<' $@47 . type_declaration '>' $@48

    "type"       shift, and go to state 216
    "array"      shift, and go to state 217
    "table"      shift, and go to state 218
    "typedecl"   shift, and go to state 219
    "iterator"   shift, and go to state 220
    "smart_ptr"  shift, and go to state 221
    "bool"       shift, and go to state 222
    "void"       shift, and go to state 223
    "string"     shift, and go to state 224
    "auto"       shift, and go to state 225
    "int"        shift, and go to state 226
    "int2"       shift, and go to state 227
    "int3"       shift, and go to state 228
    "int4"       shift, and go to state 229
    "uint"       shift, and go to state 230
    "bitfield"   shift, and go to state 231
    "uint2"      shift, and go to state 232
    "uint3"      shift, and go to state 233
    "uint4"      shift, and go to state 234
    "float"      shift, and go to state 235
    "float2"     shift, and go to state 236
    "float3"     shift, and go to state 237
    "float4"     shift, and go to state 238
    "range"      shift, and go to state 239
    "urange"     shift, and go to state 240
    "range64"    shift, and go to state 241
    "urange64"   shift, and go to state 242
    "block"      shift, and go to state 243
    "int64"      shift, and go to state 244
    "uint64"     shift, and go to state 245
    "double"     shift, and go to state 246
    "function"   shift, and go to state 247
    "lambda"     shift, and go to state 248
    "int8"       shift, and go to state 249
    "uint8"      shift, and go to state 250
    "int16"      shift, and go to state 251
    "uint16"     shift, and go to state 252
    "tuple"      shift, and go to state 253
    "variant"    shift, and go to state 254
    "::"         shift, and go to state 55
    "$t"         shift, and go to state 255
    "name"       shift, and go to state 56
    '$'          shift, and go to state 256

    name_in_namespace                   go to state 257
    basic_type_declaration              go to state 258
    structure_type_declaration          go to state 259
    auto_type_declaration               go to state 260
    bitfield_type_declaration           go to state 261
    type_declaration_no_options         go to state 262
    type_declaration_no_options_no_dim  go to state 263
    type_declaration                    go to state 679


State 481

  674 type_declaration_no_options_no_dim: "block" '<' $@49 . optional_function_argument_list optional_function_type '>' $@50

    '('  shift, and go to state 321

    $default  reduce using rule 115 (optional_function_argument_list)

    optional_function_argument_list  go to state 680


State 482

  678 type_declaration_no_options_no_dim: "function" '<' $@51 . type_declaration '>' $@52

    "type"       shift, and go to state 216
    "array"      shift, and go to state 217
    "table"      shift, and go to state 218
    "typedecl"   shift, and go to state 219
    "iterator"   shift, and go to state 220
    "smart_ptr"  shift, and go to state 221
    "bool"       shift, and go to state 222
    "void"       shift, and go to state 223
    "string"     shift, and go to state 224
    "auto"       shift, and go to state 225
    "int"        shift, and go to state 226
    "int2"       shift, and go to state 227
    "int3"       shift, and go to state 228
    "int4"       shift, and go to state 229
    "uint"       shift, and go to state 230
    "bitfield"   shift, and go to state 231
    "uint2"      shift, and go to state 232
    "uint3"      shift, and go to state 233
    "uint4"      shift, and go to state 234
    "float"      shift, and go to state 235
    "float2"     shift, and go to state 236
    "float3"     shift, and go to state 237
    "float4"     shift, and go to state 238
    "range"      shift, and go to state 239
    "urange"     shift, and go to state 240
    "range64"    shift, and go to state 241
    "urange64"   shift, and go to state 242
    "block"      shift, and go to state 243
    "int64"      shift, and go to state 244
    "uint64"     shift, and go to state 245
    "double"     shift, and go to state 246
    "function"   shift, and go to state 247
    "lambda"     shift, and go to state 248
    "int8"       shift, and go to state 249
    "uint8"      shift, and go to state 250
    "int16"      shift, and go to state 251
    "uint16"     shift, and go to state 252
    "tuple"      shift, and go to state 253
    "variant"    shift, and go to state 254
    "::"         shift, and go to state 55
    "$t"         shift, and go to state 255
    "name"       shift, and go to state 56
    '$'          shift, and go to state 256

    name_in_namespace                   go to state 257
    basic_type_declaration              go to state 258
    structure_type_declaration          go to state 259
    auto_type_declaration               go to state 260
    bitfield_type_declaration           go to state 261
    type_declaration_no_options         go to state 262
    type_declaration_no_options_no_dim  go to state 263
    type_declaration                    go to state 681


State 483

  681 type_declaration_no_options_no_dim: "function" '<' $@53 . optional_function_argument_list optional_function_type '>' $@54

    '('  shift, and go to state 321

    $default  reduce using rule 115 (optional_function_argument_list)

    optional_function_argument_list  go to state 682


State 484

  685 type_declaration_no_options_no_dim: "lambda" '<' $@55 . type_declaration '>' $@56

    "type"       shift, and go to state 216
    "array"      shift, and go to state 217
    "table"      shift, and go to state 218
    "typedecl"   shift, and go to state 219
    "iterator"   shift, and go to state 220
    "smart_ptr"  shift, and go to state 221
    "bool"       shift, and go to state 222
    "void"       shift, and go to state 223
    "string"     shift, and go to state 224
    "auto"       shift, and go to state 225
    "int"        shift, and go to state 226
    "int2"       shift, and go to state 227
    "int3"       shift, and go to state 228
    "int4"       shift, and go to state 229
    "uint"       shift, and go to state 230
    "bitfield"   shift, and go to state 231
    "uint2"      shift, and go to state 232
    "uint3"      shift, and go to state 233
    "uint4"      shift, and go to state 234
    "float"      shift, and go to state 235
    "float2"     shift, and go to state 236
    "float3"     shift, and go to state 237
    "float4"     shift, and go to state 238
    "range"      shift, and go to state 239
    "urange"     shift, and go to state 240
    "range64"    shift, and go to state 241
    "urange64"   shift, and go to state 242
    "block"      shift, and go to state 243
    "int64"      shift, and go to state 244
    "uint64"     shift, and go to state 245
    "double"     shift, and go to state 246
    "function"   shift, and go to state 247
    "lambda"     shift, and go to state 248
    "int8"       shift, and go to state 249
    "uint8"      shift, and go to state 250
    "int16"      shift, and go to state 251
    "uint16"     shift, and go to state 252
    "tuple"      shift, and go to state 253
    "variant"    shift, and go to state 254
    "::"         shift, and go to state 55
    "$t"         shift, and go to state 255
    "name"       shift, and go to state 56
    '$'          shift, and go to state 256

    name_in_namespace                   go to state 257
    basic_type_declaration              go to state 258
    structure_type_declaration          go to state 259
    auto_type_declaration               go to state 260
    bitfield_type_declaration           go to state 261
    type_declaration_no_options         go to state 262
    type_declaration_no_options_no_dim  go to state 263
    type_declaration                    go to state 683


State 485

  688 type_declaration_no_options_no_dim: "lambda" '<' $@57 . optional_function_argument_list optional_function_type '>' $@58

    '('  shift, and go to state 321

    $default  reduce using rule 115 (optional_function_argument_list)

    optional_function_argument_list  go to state 684


State 486

  691 type_declaration_no_options_no_dim: "tuple" '<' $@59 . tuple_type_list '>' $@60

    "type"       shift, and go to state 216
    "array"      shift, and go to state 217
    "table"      shift, and go to state 218
    "typedecl"   shift, and go to state 219
    "iterator"   shift, and go to state 220
    "smart_ptr"  shift, and go to state 221
    "bool"       shift, and go to state 222
    "void"       shift, and go to state 223
    "string"     shift, and go to state 224
    "auto"       shift, and go to state 225
    "int"        shift, and go to state 226
    "int2"       shift, and go to state 227
    "int3"       shift, and go to state 228
    "int4"       shift, and go to state 229
    "uint"       shift, and go to state 230
    "bitfield"   shift, and go to state 231
    "uint2"      shift, and go to state 232
    "uint3"      shift, and go to state 233
    "uint4"      shift, and go to state 234
    "float"      shift, and go to state 235
    "float2"     shift, and go to state 236
    "float3"     shift, and go to state 237
    "float4"     shift, and go to state 238
    "range"      shift, and go to state 239
    "urange"     shift, and go to state 240
    "range64"    shift, and go to state 241
    "urange64"   shift, and go to state 242
    "block"      shift, and go to state 243
    "int64"      shift, and go to state 244
    "uint64"     shift, and go to state 245
    "double"     shift, and go to state 246
    "function"   shift, and go to state 247
    "lambda"     shift, and go to state 248
    "int8"       shift, and go to state 249
    "uint8"      shift, and go to state 250
    "int16"      shift, and go to state 251
    "uint16"     shift, and go to state 252
    "tuple"      shift, and go to state 253
    "variant"    shift, and go to state 254
    "::"         shift, and go to state 55
    "$t"         shift, and go to state 255
    "name"       shift, and go to state 504
    '$'          shift, and go to state 256

    name_in_namespace                   go to state 257
    tuple_type                          go to state 685
    tuple_type_list                     go to state 686
    basic_type_declaration              go to state 258
    structure_type_declaration          go to state 259
    auto_type_declaration               go to state 260
    bitfield_type_declaration           go to state 261
    type_declaration_no_options         go to state 262
    type_declaration_no_options_no_dim  go to state 263
    type_declaration                    go to state 509


State 487

  694 type_declaration_no_options_no_dim: "variant" '<' $@61 . variant_type_list '>' $@62

    "name"  shift, and go to state 511

    variant_type       go to state 687
    variant_type_list  go to state 688


State 488

  339 expr_method_call: expr . "->" "name" '(' ')'
  340                 | expr . "->" "name" '(' expr_list ')'
  350 expr_field: expr . '.' "name"
  351           | expr . '.' '.' "name"
  352           | expr . '.' "name" '(' ')'
  353           | expr . '.' "name" '(' expr_list ')'
  354           | expr . '.' basic_type_declaration '(' ')'
  355           | expr . '.' basic_type_declaration '(' expr_list ')'
  358           | expr . '.' $@17 error $@18
  380 expr: expr . "<<" expr
  381     | expr . ">>" expr
  382     | expr . "<<<" expr
  383     | expr . ">>>" expr
  384     | expr . '+' expr
  385     | expr . '-' expr
  386     | expr . '*' expr
  387     | expr . '/' expr
  388     | expr . '%' expr
  389     | expr . '<' expr
  390     | expr . '>' expr
  391     | expr . "==" expr
  392     | expr . "!=" expr
  393     | expr . "<=" expr
  394     | expr . ">=" expr
  395     | expr . '&' expr
  396     | expr . '|' expr
  397     | expr . '^' expr
  398     | expr . "&&" expr
  399     | expr . "||" expr
  400     | expr . "^^" expr
  401     | expr . ".." expr
  404     | expr . "++"
  405     | expr . "--"
  407     | expr . '[' expr ']'
  408     | expr . '.' '[' expr ']'
  409     | expr . "?[" expr ']'
  410     | expr . '.' "?[" expr ']'
  411     | expr . "?." "name"
  412     | expr . '.' "?." "name"
  421     | expr . "??" expr
  422     | expr . '?' expr ':' expr
  425     | expr . "is" "type" '<' $@19 type_declaration_no_options '>' $@20
  426     | expr . "is" basic_type_declaration
  427     | expr . "is" "name"
  428     | expr . "as" "name"
  431     | expr . "as" "type" '<' $@21 type_declaration '>' $@22
  432     | expr . "as" basic_type_declaration
  433     | expr . '?' "as" "name"
  436     | expr . '?' "as" "type" '<' $@23 type_declaration '>' $@24
  437     | expr . '?' "as" basic_type_declaration
  445     | expr . "<|" expr
  446     | expr . "|>" expr
  447     | expr . "|>" basic_type_declaration
  458 expr_mtag: expr . '.' "$f" '(' expr ')'
  459          | expr . "?." "$f" '(' expr ')'
  460          | expr . '.' '.' "$f" '(' expr ')'
  461          | expr . '.' "?." "$f" '(' expr ')'
  462          | expr . "as" "$f" '(' expr ')'
  463          | expr . '?' "as" "$f" '(' expr ')'
  464          | expr . "is" "$f" '(' expr ')'
  613 auto_type_declaration: "$t" '(' expr . ')'

    "is"   shift, and go to state 637
    "as"   shift, and go to state 638
    "<<"   shift, and go to state 639
    ">>"   shift, and go to state 640
    "++"   shift, and go to state 641
    "--"   shift, and go to state 642
    "<="   shift, and go to state 643
    ">="   shift, and go to state 644
    "=="   shift, and go to state 645
    "!="   shift, and go to state 646
    "->"   shift, and go to state 647
    "??"   shift, and go to state 648
    "?."   shift, and go to state 649
    "?["   shift, and go to state 650
    "<|"   shift, and go to state 651
    "|>"   shift, and go to state 652
    "<<<"  shift, and go to state 653
    ">>>"  shift, and go to state 654
    "&&"   shift, and go to state 655
    "||"   shift, and go to state 656
    "^^"   shift, and go to state 657
    ".."   shift, and go to state 658
    '?'    shift, and go to state 659
    '|'    shift, and go to state 660
    '^'    shift, and go to state 661
    '&'    shift, and go to state 662
    '<'    shift, and go to state 663
    '>'    shift, and go to state 664
    '-'    shift, and go to state 665
    '+'    shift, and go to state 666
    '*'    shift, and go to state 667
    '/'    shift, and go to state 668
    '%'    shift, and go to state 669
    '.'    shift, and go to state 670
    '['    shift, and go to state 671
    ')'    shift, and go to state 689


State 489

  642 type_declaration_no_options_no_dim: '$' name_in_namespace '<' . $@38 type_declaration_no_options_list '>' '(' optional_expr_list ')'

    $default  reduce using rule 641 ($@38)

    $@38  go to state 690


State 490

  640 type_declaration_no_options_no_dim: '$' name_in_namespace '(' . optional_expr_list ')'

    "struct"                          shift, and go to state 402
    "class"                           shift, and go to state 403
    "true"                            shift, and go to state 404
    "false"                           shift, and go to state 405
    "new"                             shift, and go to state 406
    "typeinfo"                        shift, and go to state 407
    "type"                            shift, and go to state 408
    "array"                           shift, and go to state 409
    "null"                            shift, and go to state 410
    "table"                           shift, and go to state 411
    "deref"                           shift, and go to state 412
    "cast"                            shift, and go to state 413
    "upcast"                          shift, and go to state 414
    "addr"                            shift, and go to state 415
    "reinterpret"                     shift, and go to state 416
    "unsafe"                          shift, and go to state 417
    "fixed_array"                     shift, and go to state 418
    "default"                         shift, and go to state 419
    "bool"                            shift, and go to state 222
    "void"                            shift, and go to state 223
    "string"                          shift, and go to state 224
    "int"                             shift, and go to state 226
    "int2"                            shift, and go to state 227
    "int3"                            shift, and go to state 228
    "int4"                            shift, and go to state 229
    "uint"                            shift, and go to state 230
    "bitfield"                        shift, and go to state 420
    "uint2"                           shift, and go to state 232
    "uint3"                           shift, and go to state 233
    "uint4"                           shift, and go to state 234
    "float"                           shift, and go to state 235
    "float2"                          shift, and go to state 236
    "float3"                          shift, and go to state 237
    "float4"                          shift, and go to state 238
    "range"                           shift, and go to state 239
    "urange"                          shift, and go to state 240
    "range64"                         shift, and go to state 241
    "urange64"                        shift, and go to state 242
    "int64"                           shift, and go to state 244
    "uint64"                          shift, and go to state 245
    "double"                          shift, and go to state 246
    "int8"                            shift, and go to state 249
    "uint8"                           shift, and go to state 250
    "int16"                           shift, and go to state 251
    "uint16"                          shift, and go to state 252
    "tuple"                           shift, and go to state 421
    "variant"                         shift, and go to state 422
    "generator"                       shift, and go to state 423
    "++"                              shift, and go to state 424
    "--"                              shift, and go to state 425
    "::"                              shift, and go to state 55
    "$$"                              shift, and go to state 426
    "$i"                              shift, and go to state 427
    "$v"                              shift, and go to state 428
    "$b"                              shift, and go to state 429
    "$a"                              shift, and go to state 430
    "$c"                              shift, and go to state 431
    "..."                             shift, and go to state 432
    "integer constant"                shift, and go to state 433
    "long integer constant"           shift, and go to state 434
    "unsigned integer constant"       shift, and go to state 435
    "unsigned long integer constant"  shift, and go to state 436
    "unsigned int8 constant"          shift, and go to state 437
    "floating point constant"         shift, and go to state 438
    "double constant"                 shift, and go to state 439
    "name"                            shift, and go to state 56
    "start of the string"             shift, and go to state 440
    "begin of code block"             shift, and go to state 441
    '-'                               shift, and go to state 442
    '+'                               shift, and go to state 443
    '*'                               shift, and go to state 444
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 445
    '!'                               shift, and go to state 446
    '['                               shift, and go to state 447
    '('                               shift, and go to state 448
    '$'                               shift, and go to state 449
    '@'                               shift, and go to state 450

    $default  reduce using rule 236 (optional_expr_list)

    string_builder          go to state 451
    expr_reader             go to state 452
    expr_call_pipe          go to state 453
    optional_expr_list      go to state 691
    name_in_namespace       go to state 454
    expr_new                go to state 455
    expr_cast               go to state 456
    expr_type_decl          go to state 457
    expr_type_info          go to state 458
    expr_list               go to state 692
    block_or_lambda         go to state 459
    expr_full_block         go to state 460
    expr_numeric_const      go to state 461
    expr_named_call         go to state 462
    expr_method_call        go to state 463
    func_addr_expr          go to state 464
    expr_field              go to state 465
    expr_call               go to state 466
    expr                    go to state 628
    expr_mtag               go to state 468
    basic_type_declaration  go to state 469
    make_decl               go to state 470
    make_struct_decl        go to state 471
    make_tuple_call         go to state 472
    make_dim_decl           go to state 473
    make_table_decl         go to state 474
    array_comprehension     go to state 475


State 491

  652 type_declaration_no_options_no_dim: type_declaration_no_options_no_dim "==" "const" .

    $default  reduce using rule 652 (type_declaration_no_options_no_dim)


State 492

  653 type_declaration_no_options_no_dim: type_declaration_no_options_no_dim "==" '&' .

    $default  reduce using rule 653 (type_declaration_no_options_no_dim)


State 493

  646 type_declaration_no_options_no_dim: type_declaration_no_options_no_dim '-' "const" .

    $default  reduce using rule 646 (type_declaration_no_options_no_dim)


State 494

  648 type_declaration_no_options_no_dim: type_declaration_no_options_no_dim '-' '&' .

    $default  reduce using rule 648 (type_declaration_no_options_no_dim)


State 495

  643 type_declaration_no_options_no_dim: type_declaration_no_options_no_dim '-' '[' . ']'

    ']'  shift, and go to state 693


State 496

  651 type_declaration_no_options_no_dim: type_declaration_no_options_no_dim '-' '#' .

    $default  reduce using rule 651 (type_declaration_no_options_no_dim)


State 497

  627 dim_list: '[' ']' .

    $default  reduce using rule 627 (dim_list)


State 498

  339 expr_method_call: expr . "->" "name" '(' ')'
  340                 | expr . "->" "name" '(' expr_list ')'
  350 expr_field: expr . '.' "name"
  351           | expr . '.' '.' "name"
  352           | expr . '.' "name" '(' ')'
  353           | expr . '.' "name" '(' expr_list ')'
  354           | expr . '.' basic_type_declaration '(' ')'
  355           | expr . '.' basic_type_declaration '(' expr_list ')'
  358           | expr . '.' $@17 error $@18
  380 expr: expr . "<<" expr
  381     | expr . ">>" expr
  382     | expr . "<<<" expr
  383     | expr . ">>>" expr
  384     | expr . '+' expr
  385     | expr . '-' expr
  386     | expr . '*' expr
  387     | expr . '/' expr
  388     | expr . '%' expr
  389     | expr . '<' expr
  390     | expr . '>' expr
  391     | expr . "==" expr
  392     | expr . "!=" expr
  393     | expr . "<=" expr
  394     | expr . ">=" expr
  395     | expr . '&' expr
  396     | expr . '|' expr
  397     | expr . '^' expr
  398     | expr . "&&" expr
  399     | expr . "||" expr
  400     | expr . "^^" expr
  401     | expr . ".." expr
  404     | expr . "++"
  405     | expr . "--"
  407     | expr . '[' expr ']'
  408     | expr . '.' '[' expr ']'
  409     | expr . "?[" expr ']'
  410     | expr . '.' "?[" expr ']'
  411     | expr . "?." "name"
  412     | expr . '.' "?." "name"
  421     | expr . "??" expr
  422     | expr . '?' expr ':' expr
  425     | expr . "is" "type" '<' $@19 type_declaration_no_options '>' $@20
  426     | expr . "is" basic_type_declaration
  427     | expr . "is" "name"
  428     | expr . "as" "name"
  431     | expr . "as" "type" '<' $@21 type_declaration '>' $@22
  432     | expr . "as" basic_type_declaration
  433     | expr . '?' "as" "name"
  436     | expr . '?' "as" "type" '<' $@23 type_declaration '>' $@24
  437     | expr . '?' "as" basic_type_declaration
  445     | expr . "<|" expr
  446     | expr . "|>" expr
  447     | expr . "|>" basic_type_declaration
  458 expr_mtag: expr . '.' "$f" '(' expr ')'
  459          | expr . "?." "$f" '(' expr ')'
  460          | expr . '.' '.' "$f" '(' expr ')'
  461          | expr . '.' "?." "$f" '(' expr ')'
  462          | expr . "as" "$f" '(' expr ')'
  463          | expr . '?' "as" "$f" '(' expr ')'
  464          | expr . "is" "$f" '(' expr ')'
  626 dim_list: '[' expr . ']'

    "is"   shift, and go to state 637
    "as"   shift, and go to state 638
    "<<"   shift, and go to state 639
    ">>"   shift, and go to state 640
    "++"   shift, and go to state 641
    "--"   shift, and go to state 642
    "<="   shift, and go to state 643
    ">="   shift, and go to state 644
    "=="   shift, and go to state 645
    "!="   shift, and go to state 646
    "->"   shift, and go to state 647
    "??"   shift, and go to state 648
    "?."   shift, and go to state 649
    "?["   shift, and go to state 650
    "<|"   shift, and go to state 651
    "|>"   shift, and go to state 652
    "<<<"  shift, and go to state 653
    ">>>"  shift, and go to state 654
    "&&"   shift, and go to state 655
    "||"   shift, and go to state 656
    "^^"   shift, and go to state 657
    ".."   shift, and go to state 658
    '?'    shift, and go to state 659
    '|'    shift, and go to state 660
    '^'    shift, and go to state 661
    '&'    shift, and go to state 662
    '<'    shift, and go to state 663
    '>'    shift, and go to state 664
    '-'    shift, and go to state 665
    '+'    shift, and go to state 666
    '*'    shift, and go to state 667
    '/'    shift, and go to state 668
    '%'    shift, and go to state 669
    '.'    shift, and go to state 670
    '['    shift, and go to state 671
    ']'    shift, and go to state 694


State 499

  628 dim_list: dim_list '[' . expr ']'
  629         | dim_list '[' . ']'

    "struct"                          shift, and go to state 402
    "class"                           shift, and go to state 403
    "true"                            shift, and go to state 404
    "false"                           shift, and go to state 405
    "new"                             shift, and go to state 406
    "typeinfo"                        shift, and go to state 407
    "type"                            shift, and go to state 408
    "array"                           shift, and go to state 409
    "null"                            shift, and go to state 410
    "table"                           shift, and go to state 411
    "deref"                           shift, and go to state 412
    "cast"                            shift, and go to state 413
    "upcast"                          shift, and go to state 414
    "addr"                            shift, and go to state 415
    "reinterpret"                     shift, and go to state 416
    "unsafe"                          shift, and go to state 417
    "fixed_array"                     shift, and go to state 418
    "default"                         shift, and go to state 419
    "bool"                            shift, and go to state 222
    "void"                            shift, and go to state 223
    "string"                          shift, and go to state 224
    "int"                             shift, and go to state 226
    "int2"                            shift, and go to state 227
    "int3"                            shift, and go to state 228
    "int4"                            shift, and go to state 229
    "uint"                            shift, and go to state 230
    "bitfield"                        shift, and go to state 420
    "uint2"                           shift, and go to state 232
    "uint3"                           shift, and go to state 233
    "uint4"                           shift, and go to state 234
    "float"                           shift, and go to state 235
    "float2"                          shift, and go to state 236
    "float3"                          shift, and go to state 237
    "float4"                          shift, and go to state 238
    "range"                           shift, and go to state 239
    "urange"                          shift, and go to state 240
    "range64"                         shift, and go to state 241
    "urange64"                        shift, and go to state 242
    "int64"                           shift, and go to state 244
    "uint64"                          shift, and go to state 245
    "double"                          shift, and go to state 246
    "int8"                            shift, and go to state 249
    "uint8"                           shift, and go to state 250
    "int16"                           shift, and go to state 251
    "uint16"                          shift, and go to state 252
    "tuple"                           shift, and go to state 421
    "variant"                         shift, and go to state 422
    "generator"                       shift, and go to state 423
    "++"                              shift, and go to state 424
    "--"                              shift, and go to state 425
    "::"                              shift, and go to state 55
    "$$"                              shift, and go to state 426
    "$i"                              shift, and go to state 427
    "$v"                              shift, and go to state 428
    "$b"                              shift, and go to state 429
    "$a"                              shift, and go to state 430
    "$c"                              shift, and go to state 431
    "..."                             shift, and go to state 432
    "integer constant"                shift, and go to state 433
    "long integer constant"           shift, and go to state 434
    "unsigned integer constant"       shift, and go to state 435
    "unsigned long integer constant"  shift, and go to state 436
    "unsigned int8 constant"          shift, and go to state 437
    "floating point constant"         shift, and go to state 438
    "double constant"                 shift, and go to state 439
    "name"                            shift, and go to state 56
    "start of the string"             shift, and go to state 440
    "begin of code block"             shift, and go to state 441
    '-'                               shift, and go to state 442
    '+'                               shift, and go to state 443
    '*'                               shift, and go to state 444
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 445
    '!'                               shift, and go to state 446
    '['                               shift, and go to state 447
    ']'                               shift, and go to state 695
    '('                               shift, and go to state 448
    '$'                               shift, and go to state 449
    '@'                               shift, and go to state 450

    string_builder          go to state 451
    expr_reader             go to state 452
    expr_call_pipe          go to state 453
    name_in_namespace       go to state 454
    expr_new                go to state 455
    expr_cast               go to state 456
    expr_type_decl          go to state 457
    expr_type_info          go to state 458
    block_or_lambda         go to state 459
    expr_full_block         go to state 460
    expr_numeric_const      go to state 461
    expr_named_call         go to state 462
    expr_method_call        go to state 463
    func_addr_expr          go to state 464
    expr_field              go to state 465
    expr_call               go to state 466
    expr                    go to state 696
    expr_mtag               go to state 468
    basic_type_declaration  go to state 469
    make_decl               go to state 470
    make_struct_decl        go to state 471
    make_tuple_call         go to state 472
    make_dim_decl           go to state 473
    make_table_decl         go to state 474
    array_comprehension     go to state 475


State 500

  697 type_declaration: type_declaration '|' '#' .

    $default  reduce using rule 697 (type_declaration)


State 501

  696 type_declaration: type_declaration '|' type_declaration_no_options .

    $default  reduce using rule 696 (type_declaration)


State 502

  618 bitfield_alias_bits: bitfield_alias_bits ',' . "name"
  778 optional_comma: ',' .

    "name"  shift, and go to state 697

    $default  reduce using rule 778 (optional_comma)


State 503

  709 bitfield_alias_declaration: "bitfield" optional_public_or_private_alias "name" $@69 "begin of code block" $@70 bitfield_alias_bits optional_comma . $@71 "end of code block"

    $default  reduce using rule 708 ($@71)

    $@71  go to state 698


State 504

  242 name_in_namespace: "name" .
  243                  | "name" . "::" "name"
  491 tuple_type: "name" . ':' type_declaration

    "::"  shift, and go to state 94
    ':'   shift, and go to state 699

    $default  reduce using rule 242 (name_in_namespace)


State 505

  623 c_or_s: "end of expression" .

    $default  reduce using rule 623 (c_or_s)


State 506

  622 c_or_s: ',' .

    $default  reduce using rule 622 (c_or_s)


State 507

  496 tuple_alias_type_list: tuple_alias_type_list tuple_type . c_or_s

    "end of expression"  shift, and go to state 505
    ','                  shift, and go to state 506

    c_or_s  go to state 700


State 508

  495 tuple_alias_type_list: tuple_alias_type_list c_or_s .

    $default  reduce using rule 495 (tuple_alias_type_list)


State 509

  490 tuple_type: type_declaration .
  696 type_declaration: type_declaration . '|' type_declaration_no_options
  697                 | type_declaration . '|' '#'

    '|'  shift, and go to state 369

    $default  reduce using rule 490 (tuple_type)


State 510

  701 tuple_alias_declaration: "tuple" optional_public_or_private_alias "name" $@63 "begin of code block" $@64 tuple_alias_type_list $@65 . "end of code block"

    "end of code block"  shift, and go to state 701


State 511

  497 variant_type: "name" . ':' type_declaration

    ':'  shift, and go to state 702


State 512

  502 variant_alias_type_list: variant_alias_type_list variant_type . c_or_s

    "end of expression"  shift, and go to state 505
    ','                  shift, and go to state 506

    c_or_s  go to state 703


State 513

  501 variant_alias_type_list: variant_alias_type_list c_or_s .

    $default  reduce using rule 501 (variant_alias_type_list)


State 514

  705 variant_alias_declaration: "variant" optional_public_or_private_alias "name" $@66 "begin of code block" $@67 variant_alias_type_list $@68 . "end of code block"

    "end of code block"  shift, and go to state 704


State 515

  179 function_name: "operator" '?' "as" "name" .

    $default  reduce using rule 179 (function_name)


State 516

  169 function_name: "operator" '.' "name" ":=" .

    $default  reduce using rule 169 (function_name)


State 517

  487 function_argument_declaration: "$a" '(' . expr ')'

    "struct"                          shift, and go to state 402
    "class"                           shift, and go to state 403
    "true"                            shift, and go to state 404
    "false"                           shift, and go to state 405
    "new"                             shift, and go to state 406
    "typeinfo"                        shift, and go to state 407
    "type"                            shift, and go to state 408
    "array"                           shift, and go to state 409
    "null"                            shift, and go to state 410
    "table"                           shift, and go to state 411
    "deref"                           shift, and go to state 412
    "cast"                            shift, and go to state 413
    "upcast"                          shift, and go to state 414
    "addr"                            shift, and go to state 415
    "reinterpret"                     shift, and go to state 416
    "unsafe"                          shift, and go to state 417
    "fixed_array"                     shift, and go to state 418
    "default"                         shift, and go to state 419
    "bool"                            shift, and go to state 222
    "void"                            shift, and go to state 223
    "string"                          shift, and go to state 224
    "int"                             shift, and go to state 226
    "int2"                            shift, and go to state 227
    "int3"                            shift, and go to state 228
    "int4"                            shift, and go to state 229
    "uint"                            shift, and go to state 230
    "bitfield"                        shift, and go to state 420
    "uint2"                           shift, and go to state 232
    "uint3"                           shift, and go to state 233
    "uint4"                           shift, and go to state 234
    "float"                           shift, and go to state 235
    "float2"                          shift, and go to state 236
    "float3"                          shift, and go to state 237
    "float4"                          shift, and go to state 238
    "range"                           shift, and go to state 239
    "urange"                          shift, and go to state 240
    "range64"                         shift, and go to state 241
    "urange64"                        shift, and go to state 242
    "int64"                           shift, and go to state 244
    "uint64"                          shift, and go to state 245
    "double"                          shift, and go to state 246
    "int8"                            shift, and go to state 249
    "uint8"                           shift, and go to state 250
    "int16"                           shift, and go to state 251
    "uint16"                          shift, and go to state 252
    "tuple"                           shift, and go to state 421
    "variant"                         shift, and go to state 422
    "generator"                       shift, and go to state 423
    "++"                              shift, and go to state 424
    "--"                              shift, and go to state 425
    "::"                              shift, and go to state 55
    "$$"                              shift, and go to state 426
    "$i"                              shift, and go to state 427
    "$v"                              shift, and go to state 428
    "$b"                              shift, and go to state 429
    "$a"                              shift, and go to state 430
    "$c"                              shift, and go to state 431
    "..."                             shift, and go to state 432
    "integer constant"                shift, and go to state 433
    "long integer constant"           shift, and go to state 434
    "unsigned integer constant"       shift, and go to state 435
    "unsigned long integer constant"  shift, and go to state 436
    "unsigned int8 constant"          shift, and go to state 437
    "floating point constant"         shift, and go to state 438
    "double constant"                 shift, and go to state 439
    "name"                            shift, and go to state 56
    "start of the string"             shift, and go to state 440
    "begin of code block"             shift, and go to state 441
    '-'                               shift, and go to state 442
    '+'                               shift, and go to state 443
    '*'                               shift, and go to state 444
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 445
    '!'                               shift, and go to state 446
    '['                               shift, and go to state 447
    '('                               shift, and go to state 448
    '$'                               shift, and go to state 449
    '@'                               shift, and go to state 450

    string_builder          go to state 451
    expr_reader             go to state 452
    expr_call_pipe          go to state 453
    name_in_namespace       go to state 454
    expr_new                go to state 455
    expr_cast               go to state 456
    expr_type_decl          go to state 457
    expr_type_info          go to state 458
    block_or_lambda         go to state 459
    expr_full_block         go to state 460
    expr_numeric_const      go to state 461
    expr_named_call         go to state 462
    expr_method_call        go to state 463
    func_addr_expr          go to state 464
    expr_field              go to state 465
    expr_call               go to state 466
    expr                    go to state 705
    expr_mtag               go to state 468
    basic_type_declaration  go to state 469
    make_decl               go to state 470
    make_struct_decl        go to state 471
    make_tuple_call         go to state 472
    make_dim_decl           go to state 473
    make_table_decl         go to state 474
    array_comprehension     go to state 475


State 518

  263 kwd_let_var_or_nothing: "let" .

    $default  reduce using rule 263 (kwd_let_var_or_nothing)


State 519

  264 kwd_let_var_or_nothing: "var" .

    $default  reduce using rule 264 (kwd_let_var_or_nothing)


State 520

  486 function_argument_declaration: optional_field_annotation kwd_let_var_or_nothing . variable_declaration

    "$i"    shift, and go to state 706
    "name"  shift, and go to state 707

    variable_declaration         go to state 708
    variable_name_with_pos_list  go to state 709


State 521

  489 function_argument_list: function_argument_list "end of expression" . function_argument_declaration

    "$a"  shift, and go to state 381
    '@'   shift, and go to state 208

    $default  reduce using rule 466 (optional_field_annotation)

    metadata_argument_list         go to state 209
    optional_field_annotation      go to state 383
    function_argument_declaration  go to state 710


State 522

  117 optional_function_argument_list: '(' function_argument_list ')' .

    $default  reduce using rule 117 (optional_function_argument_list)


State 523

  119 optional_function_type: ':' type_declaration .
  696 type_declaration: type_declaration . '|' type_declaration_no_options
  697                 | type_declaration . '|' '#'

    '|'  shift, and go to state 369

    $default  reduce using rule 119 (optional_function_type)


State 524

  235 expressions: expressions error .

    $default  reduce using rule 235 (expressions)


State 525

   73 expression_while_loop: "while" . '(' expr ')' expression_block

    '('  shift, and go to state 711


State 526

   60 if_or_static_if: "if" .

    $default  reduce using rule 60 (if_or_static_if)


State 527

   61 if_or_static_if: "static_if" .

    $default  reduce using rule 61 (if_or_static_if)


State 528

   71 expression_for_loop: "for" . '(' variable_name_with_pos_list "in" expr_list ')' expression_block

    '('  shift, and go to state 712


State 529

  257 expression_return: "return" .
  258                  | "return" . expr
  259                  | "return" . "<-" expr

    "struct"                          shift, and go to state 402
    "class"                           shift, and go to state 403
    "true"                            shift, and go to state 404
    "false"                           shift, and go to state 405
    "new"                             shift, and go to state 406
    "typeinfo"                        shift, and go to state 407
    "type"                            shift, and go to state 408
    "array"                           shift, and go to state 409
    "null"                            shift, and go to state 410
    "table"                           shift, and go to state 411
    "deref"                           shift, and go to state 412
    "cast"                            shift, and go to state 413
    "upcast"                          shift, and go to state 414
    "addr"                            shift, and go to state 415
    "reinterpret"                     shift, and go to state 416
    "unsafe"                          shift, and go to state 417
    "fixed_array"                     shift, and go to state 418
    "default"                         shift, and go to state 419
    "bool"                            shift, and go to state 222
    "void"                            shift, and go to state 223
    "string"                          shift, and go to state 224
    "int"                             shift, and go to state 226
    "int2"                            shift, and go to state 227
    "int3"                            shift, and go to state 228
    "int4"                            shift, and go to state 229
    "uint"                            shift, and go to state 230
    "bitfield"                        shift, and go to state 420
    "uint2"                           shift, and go to state 232
    "uint3"                           shift, and go to state 233
    "uint4"                           shift, and go to state 234
    "float"                           shift, and go to state 235
    "float2"                          shift, and go to state 236
    "float3"                          shift, and go to state 237
    "float4"                          shift, and go to state 238
    "range"                           shift, and go to state 239
    "urange"                          shift, and go to state 240
    "range64"                         shift, and go to state 241
    "urange64"                        shift, and go to state 242
    "int64"                           shift, and go to state 244
    "uint64"                          shift, and go to state 245
    "double"                          shift, and go to state 246
    "int8"                            shift, and go to state 249
    "uint8"                           shift, and go to state 250
    "int16"                           shift, and go to state 251
    "uint16"                          shift, and go to state 252
    "tuple"                           shift, and go to state 421
    "variant"                         shift, and go to state 422
    "generator"                       shift, and go to state 423
    "++"                              shift, and go to state 424
    "--"                              shift, and go to state 425
    "<-"                              shift, and go to state 713
    "::"                              shift, and go to state 55
    "$$"                              shift, and go to state 426
    "$i"                              shift, and go to state 427
    "$v"                              shift, and go to state 428
    "$b"                              shift, and go to state 429
    "$a"                              shift, and go to state 430
    "$c"                              shift, and go to state 431
    "..."                             shift, and go to state 432
    "integer constant"                shift, and go to state 433
    "long integer constant"           shift, and go to state 434
    "unsigned integer constant"       shift, and go to state 435
    "unsigned long integer constant"  shift, and go to state 436
    "unsigned int8 constant"          shift, and go to state 437
    "floating point constant"         shift, and go to state 438
    "double constant"                 shift, and go to state 439
    "name"                            shift, and go to state 56
    "start of the string"             shift, and go to state 440
    "begin of code block"             shift, and go to state 441
    '-'                               shift, and go to state 442
    '+'                               shift, and go to state 443
    '*'                               shift, and go to state 444
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 445
    '!'                               shift, and go to state 446
    '['                               shift, and go to state 447
    '('                               shift, and go to state 448
    '$'                               shift, and go to state 449
    '@'                               shift, and go to state 450

    $default  reduce using rule 257 (expression_return)

    string_builder          go to state 451
    expr_reader             go to state 452
    expr_call_pipe          go to state 453
    name_in_namespace       go to state 454
    expr_new                go to state 455
    expr_cast               go to state 456
    expr_type_decl          go to state 457
    expr_type_info          go to state 458
    block_or_lambda         go to state 459
    expr_full_block         go to state 460
    expr_numeric_const      go to state 461
    expr_named_call         go to state 462
    expr_method_call        go to state 463
    func_addr_expr          go to state 464
    expr_field              go to state 465
    expr_call               go to state 466
    expr                    go to state 714
    expr_mtag               go to state 468
    basic_type_declaration  go to state 469
    make_decl               go to state 470
    make_struct_decl        go to state 471
    make_tuple_call         go to state 472
    make_dim_decl           go to state 473
    make_table_decl         go to state 474
    array_comprehension     go to state 475


State 530

  255 expression_break: "break" .

    $default  reduce using rule 255 (expression_break)


State 531

  262 expression_try_catch: "try" . expression_block "recover" expression_block

    "begin of code block"  shift, and go to state 323

    expression_block  go to state 715


State 532

  245 expression_delete: "delete" . expr
  246                  | "delete" . "explicit" expr

    "struct"                          shift, and go to state 402
    "class"                           shift, and go to state 403
    "true"                            shift, and go to state 404
    "false"                           shift, and go to state 405
    "new"                             shift, and go to state 406
    "typeinfo"                        shift, and go to state 407
    "type"                            shift, and go to state 408
    "array"                           shift, and go to state 409
    "null"                            shift, and go to state 410
    "table"                           shift, and go to state 411
    "deref"                           shift, and go to state 412
    "cast"                            shift, and go to state 413
    "upcast"                          shift, and go to state 414
    "addr"                            shift, and go to state 415
    "reinterpret"                     shift, and go to state 416
    "explicit"                        shift, and go to state 716
    "unsafe"                          shift, and go to state 417
    "fixed_array"                     shift, and go to state 418
    "default"                         shift, and go to state 419
    "bool"                            shift, and go to state 222
    "void"                            shift, and go to state 223
    "string"                          shift, and go to state 224
    "int"                             shift, and go to state 226
    "int2"                            shift, and go to state 227
    "int3"                            shift, and go to state 228
    "int4"                            shift, and go to state 229
    "uint"                            shift, and go to state 230
    "bitfield"                        shift, and go to state 420
    "uint2"                           shift, and go to state 232
    "uint3"                           shift, and go to state 233
    "uint4"                           shift, and go to state 234
    "float"                           shift, and go to state 235
    "float2"                          shift, and go to state 236
    "float3"                          shift, and go to state 237
    "float4"                          shift, and go to state 238
    "range"                           shift, and go to state 239
    "urange"                          shift, and go to state 240
    "range64"                         shift, and go to state 241
    "urange64"                        shift, and go to state 242
    "int64"                           shift, and go to state 244
    "uint64"                          shift, and go to state 245
    "double"                          shift, and go to state 246
    "int8"                            shift, and go to state 249
    "uint8"                           shift, and go to state 250
    "int16"                           shift, and go to state 251
    "uint16"                          shift, and go to state 252
    "tuple"                           shift, and go to state 421
    "variant"                         shift, and go to state 422
    "generator"                       shift, and go to state 423
    "++"                              shift, and go to state 424
    "--"                              shift, and go to state 425
    "::"                              shift, and go to state 55
    "$$"                              shift, and go to state 426
    "$i"                              shift, and go to state 427
    "$v"                              shift, and go to state 428
    "$b"                              shift, and go to state 429
    "$a"                              shift, and go to state 430
    "$c"                              shift, and go to state 431
    "..."                             shift, and go to state 432
    "integer constant"                shift, and go to state 433
    "long integer constant"           shift, and go to state 434
    "unsigned integer constant"       shift, and go to state 435
    "unsigned long integer constant"  shift, and go to state 436
    "unsigned int8 constant"          shift, and go to state 437
    "floating point constant"         shift, and go to state 438
    "double constant"                 shift, and go to state 439
    "name"                            shift, and go to state 56
    "start of the string"             shift, and go to state 440
    "begin of code block"             shift, and go to state 441
    '-'                               shift, and go to state 442
    '+'                               shift, and go to state 443
    '*'                               shift, and go to state 444
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 445
    '!'                               shift, and go to state 446
    '['                               shift, and go to state 447
    '('                               shift, and go to state 448
    '$'                               shift, and go to state 449
    '@'                               shift, and go to state 450

    string_builder          go to state 451
    expr_reader             go to state 452
    expr_call_pipe          go to state 453
    name_in_namespace       go to state 454
    expr_new                go to state 455
    expr_cast               go to state 456
    expr_type_decl          go to state 457
    expr_type_info          go to state 458
    block_or_lambda         go to state 459
    expr_full_block         go to state 460
    expr_numeric_const      go to state 461
    expr_named_call         go to state 462
    expr_method_call        go to state 463
    func_addr_expr          go to state 464
    expr_field              go to state 465
    expr_call               go to state 466
    expr                    go to state 717
    expr_mtag               go to state 468
    basic_type_declaration  go to state 469
    make_decl               go to state 470
    make_struct_decl        go to state 471
    make_tuple_call         go to state 472
    make_dim_decl           go to state 473
    make_table_decl         go to state 474
    array_comprehension     go to state 475


State 533

   74 expression_with: "with" . '(' expr ')' expression_block

    '('  shift, and go to state 718


State 534

   75 expression_with_alias: "assume" . "name" '=' expr

    "name"  shift, and go to state 719


State 535

  256 expression_continue: "continue" .

    $default  reduce using rule 256 (expression_continue)


State 536

  232 expression_any: "pass" . "end of expression"

    "end of expression"  shift, and go to state 720


State 537

   52 expression_label: "label" . "integer constant" ':'

    "integer constant"  shift, and go to state 721


State 538

   53 expression_goto: "goto" . "label" "integer constant"
   54                | "goto" . expr

    "struct"                          shift, and go to state 402
    "class"                           shift, and go to state 403
    "true"                            shift, and go to state 404
    "false"                           shift, and go to state 405
    "new"                             shift, and go to state 406
    "typeinfo"                        shift, and go to state 407
    "type"                            shift, and go to state 408
    "array"                           shift, and go to state 409
    "null"                            shift, and go to state 410
    "table"                           shift, and go to state 411
    "deref"                           shift, and go to state 412
    "cast"                            shift, and go to state 413
    "upcast"                          shift, and go to state 414
    "addr"                            shift, and go to state 415
    "reinterpret"                     shift, and go to state 416
    "label"                           shift, and go to state 722
    "unsafe"                          shift, and go to state 417
    "fixed_array"                     shift, and go to state 418
    "default"                         shift, and go to state 419
    "bool"                            shift, and go to state 222
    "void"                            shift, and go to state 223
    "string"                          shift, and go to state 224
    "int"                             shift, and go to state 226
    "int2"                            shift, and go to state 227
    "int3"                            shift, and go to state 228
    "int4"                            shift, and go to state 229
    "uint"                            shift, and go to state 230
    "bitfield"                        shift, and go to state 420
    "uint2"                           shift, and go to state 232
    "uint3"                           shift, and go to state 233
    "uint4"                           shift, and go to state 234
    "float"                           shift, and go to state 235
    "float2"                          shift, and go to state 236
    "float3"                          shift, and go to state 237
    "float4"                          shift, and go to state 238
    "range"                           shift, and go to state 239
    "urange"                          shift, and go to state 240
    "range64"                         shift, and go to state 241
    "urange64"                        shift, and go to state 242
    "int64"                           shift, and go to state 244
    "uint64"                          shift, and go to state 245
    "double"                          shift, and go to state 246
    "int8"                            shift, and go to state 249
    "uint8"                           shift, and go to state 250
    "int16"                           shift, and go to state 251
    "uint16"                          shift, and go to state 252
    "tuple"                           shift, and go to state 421
    "variant"                         shift, and go to state 422
    "generator"                       shift, and go to state 423
    "++"                              shift, and go to state 424
    "--"                              shift, and go to state 425
    "::"                              shift, and go to state 55
    "$$"                              shift, and go to state 426
    "$i"                              shift, and go to state 427
    "$v"                              shift, and go to state 428
    "$b"                              shift, and go to state 429
    "$a"                              shift, and go to state 430
    "$c"                              shift, and go to state 431
    "..."                             shift, and go to state 432
    "integer constant"                shift, and go to state 433
    "long integer constant"           shift, and go to state 434
    "unsigned integer constant"       shift, and go to state 435
    "unsigned long integer constant"  shift, and go to state 436
    "unsigned int8 constant"          shift, and go to state 437
    "floating point constant"         shift, and go to state 438
    "double constant"                 shift, and go to state 439
    "name"                            shift, and go to state 56
    "start of the string"             shift, and go to state 440
    "begin of code block"             shift, and go to state 441
    '-'                               shift, and go to state 442
    '+'                               shift, and go to state 443
    '*'                               shift, and go to state 444
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 445
    '!'                               shift, and go to state 446
    '['                               shift, and go to state 447
    '('                               shift, and go to state 448
    '$'                               shift, and go to state 449
    '@'                               shift, and go to state 450

    string_builder          go to state 451
    expr_reader             go to state 452
    expr_call_pipe          go to state 453
    name_in_namespace       go to state 454
    expr_new                go to state 455
    expr_cast               go to state 456
    expr_type_decl          go to state 457
    expr_type_info          go to state 458
    block_or_lambda         go to state 459
    expr_full_block         go to state 460
    expr_numeric_const      go to state 461
    expr_named_call         go to state 462
    expr_method_call        go to state 463
    func_addr_expr          go to state 464
    expr_field              go to state 465
    expr_call               go to state 466
    expr                    go to state 723
    expr_mtag               go to state 468
    basic_type_declaration  go to state 469
    make_decl               go to state 470
    make_struct_decl        go to state 471
    make_tuple_call         go to state 472
    make_dim_decl           go to state 473
    make_table_decl         go to state 474
    array_comprehension     go to state 475


State 539

   72 expression_unsafe: "unsafe" . expression_block
  449 expr: "unsafe" . '(' expr ')'

    "begin of code block"  shift, and go to state 323
    '('                    shift, and go to state 599

    expression_block  go to state 724


State 540

  260 expression_yield: "yield" . expr
  261                 | "yield" . "<-" expr

    "struct"                          shift, and go to state 402
    "class"                           shift, and go to state 403
    "true"                            shift, and go to state 404
    "false"                           shift, and go to state 405
    "new"                             shift, and go to state 406
    "typeinfo"                        shift, and go to state 407
    "type"                            shift, and go to state 408
    "array"                           shift, and go to state 409
    "null"                            shift, and go to state 410
    "table"                           shift, and go to state 411
    "deref"                           shift, and go to state 412
    "cast"                            shift, and go to state 413
    "upcast"                          shift, and go to state 414
    "addr"                            shift, and go to state 415
    "reinterpret"                     shift, and go to state 416
    "unsafe"                          shift, and go to state 417
    "fixed_array"                     shift, and go to state 418
    "default"                         shift, and go to state 419
    "bool"                            shift, and go to state 222
    "void"                            shift, and go to state 223
    "string"                          shift, and go to state 224
    "int"                             shift, and go to state 226
    "int2"                            shift, and go to state 227
    "int3"                            shift, and go to state 228
    "int4"                            shift, and go to state 229
    "uint"                            shift, and go to state 230
    "bitfield"                        shift, and go to state 420
    "uint2"                           shift, and go to state 232
    "uint3"                           shift, and go to state 233
    "uint4"                           shift, and go to state 234
    "float"                           shift, and go to state 235
    "float2"                          shift, and go to state 236
    "float3"                          shift, and go to state 237
    "float4"                          shift, and go to state 238
    "range"                           shift, and go to state 239
    "urange"                          shift, and go to state 240
    "range64"                         shift, and go to state 241
    "urange64"                        shift, and go to state 242
    "int64"                           shift, and go to state 244
    "uint64"                          shift, and go to state 245
    "double"                          shift, and go to state 246
    "int8"                            shift, and go to state 249
    "uint8"                           shift, and go to state 250
    "int16"                           shift, and go to state 251
    "uint16"                          shift, and go to state 252
    "tuple"                           shift, and go to state 421
    "variant"                         shift, and go to state 422
    "generator"                       shift, and go to state 423
    "++"                              shift, and go to state 424
    "--"                              shift, and go to state 425
    "<-"                              shift, and go to state 725
    "::"                              shift, and go to state 55
    "$$"                              shift, and go to state 426
    "$i"                              shift, and go to state 427
    "$v"                              shift, and go to state 428
    "$b"                              shift, and go to state 429
    "$a"                              shift, and go to state 430
    "$c"                              shift, and go to state 431
    "..."                             shift, and go to state 432
    "integer constant"                shift, and go to state 433
    "long integer constant"           shift, and go to state 434
    "unsigned integer constant"       shift, and go to state 435
    "unsigned long integer constant"  shift, and go to state 436
    "unsigned int8 constant"          shift, and go to state 437
    "floating point constant"         shift, and go to state 438
    "double constant"                 shift, and go to state 439
    "name"                            shift, and go to state 56
    "start of the string"             shift, and go to state 440
    "begin of code block"             shift, and go to state 441
    '-'                               shift, and go to state 442
    '+'                               shift, and go to state 443
    '*'                               shift, and go to state 444
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 445
    '!'                               shift, and go to state 446
    '['                               shift, and go to state 447
    '('                               shift, and go to state 448
    '$'                               shift, and go to state 449
    '@'                               shift, and go to state 450

    string_builder          go to state 451
    expr_reader             go to state 452
    expr_call_pipe          go to state 453
    name_in_namespace       go to state 454
    expr_new                go to state 455
    expr_cast               go to state 456
    expr_type_decl          go to state 457
    expr_type_info          go to state 458
    block_or_lambda         go to state 459
    expr_full_block         go to state 460
    expr_numeric_const      go to state 461
    expr_named_call         go to state 462
    expr_method_call        go to state 463
    func_addr_expr          go to state 464
    expr_field              go to state 465
    expr_call               go to state 466
    expr                    go to state 726
    expr_mtag               go to state 468
    basic_type_declaration  go to state 469
    make_decl               go to state 470
    make_struct_decl        go to state 471
    make_tuple_call         go to state 472
    make_dim_decl           go to state 473
    make_table_decl         go to state 474
    array_comprehension     go to state 475


State 541

  212 expression_block: "begin of code block" expressions "end of code block" .
  213                 | "begin of code block" expressions "end of code block" . "finally" "begin of code block" expressions "end of code block"

    "finally"  shift, and go to state 727

    $default  reduce using rule 212 (expression_block)


State 542

  215 expression_any: "end of expression" .

    $default  reduce using rule 215 (expression_any)


State 543

  230 expression_any: expression_label . "end of expression"

    "end of expression"  shift, and go to state 728


State 544

  231 expression_any: expression_goto . "end of expression"

    "end of expression"  shift, and go to state 729


State 545

   69 expression_if_then_else: if_or_static_if . '(' expr ')' expression_block expression_else

    '('  shift, and go to state 730


State 546

   70 expression_if_then_else: expression_if_one_liner . "if" '(' expr ')' expression_else_one_liner "end of expression"

    "if"  shift, and go to state 731


State 547

  228 expression_any: expression_if_then_else .

    $default  reduce using rule 228 (expression_any)


State 548

  223 expression_any: expression_for_loop .

    $default  reduce using rule 223 (expression_any)


State 549

  220 expression_any: expression_unsafe .

    $default  reduce using rule 220 (expression_any)


State 550

  219 expression_any: expression_while_loop .

    $default  reduce using rule 219 (expression_any)


State 551

  221 expression_any: expression_with .

    $default  reduce using rule 221 (expression_any)


State 552

  222 expression_any: expression_with_alias . "end of expression"

    "end of expression"  shift, and go to state 732


State 553

  234 expressions: expressions expression_any .

    $default  reduce using rule 234 (expressions)


State 554

  217 expression_any: expression_delete . "end of expression"

    "end of expression"  shift, and go to state 733


State 555

   67 expression_if_one_liner: expression_break .
  224 expression_any: expression_break . "end of expression"

    "end of expression"  shift, and go to state 734

    $default  reduce using rule 67 (expression_if_one_liner)


State 556

   68 expression_if_one_liner: expression_continue .
  225 expression_any: expression_continue . "end of expression"

    "end of expression"  shift, and go to state 735

    $default  reduce using rule 68 (expression_if_one_liner)


State 557

   65 expression_if_one_liner: expression_return .
  226 expression_any: expression_return . "end of expression"

    "end of expression"  shift, and go to state 736

    $default  reduce using rule 65 (expression_if_one_liner)


State 558

   66 expression_if_one_liner: expression_yield .
  227 expression_any: expression_yield . "end of expression"

    "end of expression"  shift, and go to state 737

    $default  reduce using rule 66 (expression_if_one_liner)


State 559

  229 expression_any: expression_try_catch .

    $default  reduce using rule 229 (expression_any)


State 560

  274 expression_let: kwd_let . optional_in_scope let_variable_declaration
  275               | kwd_let . optional_in_scope tuple_expansion_variable_declaration

    "inscope"  shift, and go to state 738

    $default  reduce using rule 269 (optional_in_scope)

    optional_in_scope  go to state 739


State 561

  218 expression_any: expression_let .

    $default  reduce using rule 218 (expression_any)


State 562

  216 expression_any: expr_assign . "end of expression"

    "end of expression"  shift, and go to state 740


State 563

   64 expression_if_one_liner: expr .
  318 expr_assign: expr .
  319            | expr . '=' expr
  320            | expr . "<-" expr
  321            | expr . ":=" expr
  322            | expr . "&=" expr
  323            | expr . "|=" expr
  324            | expr . "^=" expr
  325            | expr . "&&=" expr
  326            | expr . "||=" expr
  327            | expr . "^^=" expr
  328            | expr . "+=" expr
  329            | expr . "-=" expr
  330            | expr . "*=" expr
  331            | expr . "/=" expr
  332            | expr . "%=" expr
  333            | expr . "<<=" expr
  334            | expr . ">>=" expr
  335            | expr . "<<<=" expr
  336            | expr . ">>>=" expr
  339 expr_method_call: expr . "->" "name" '(' ')'
  340                 | expr . "->" "name" '(' expr_list ')'
  350 expr_field: expr . '.' "name"
  351           | expr . '.' '.' "name"
  352           | expr . '.' "name" '(' ')'
  353           | expr . '.' "name" '(' expr_list ')'
  354           | expr . '.' basic_type_declaration '(' ')'
  355           | expr . '.' basic_type_declaration '(' expr_list ')'
  358           | expr . '.' $@17 error $@18
  380 expr: expr . "<<" expr
  381     | expr . ">>" expr
  382     | expr . "<<<" expr
  383     | expr . ">>>" expr
  384     | expr . '+' expr
  385     | expr . '-' expr
  386     | expr . '*' expr
  387     | expr . '/' expr
  388     | expr . '%' expr
  389     | expr . '<' expr
  390     | expr . '>' expr
  391     | expr . "==" expr
  392     | expr . "!=" expr
  393     | expr . "<=" expr
  394     | expr . ">=" expr
  395     | expr . '&' expr
  396     | expr . '|' expr
  397     | expr . '^' expr
  398     | expr . "&&" expr
  399     | expr . "||" expr
  400     | expr . "^^" expr
  401     | expr . ".." expr
  404     | expr . "++"
  405     | expr . "--"
  407     | expr . '[' expr ']'
  408     | expr . '.' '[' expr ']'
  409     | expr . "?[" expr ']'
  410     | expr . '.' "?[" expr ']'
  411     | expr . "?." "name"
  412     | expr . '.' "?." "name"
  421     | expr . "??" expr
  422     | expr . '?' expr ':' expr
  425     | expr . "is" "type" '<' $@19 type_declaration_no_options '>' $@20
  426     | expr . "is" basic_type_declaration
  427     | expr . "is" "name"
  428     | expr . "as" "name"
  431     | expr . "as" "type" '<' $@21 type_declaration '>' $@22
  432     | expr . "as" basic_type_declaration
  433     | expr . '?' "as" "name"
  436     | expr . '?' "as" "type" '<' $@23 type_declaration '>' $@24
  437     | expr . '?' "as" basic_type_declaration
  445     | expr . "<|" expr
  446     | expr . "|>" expr
  447     | expr . "|>" basic_type_declaration
  458 expr_mtag: expr . '.' "$f" '(' expr ')'
  459          | expr . "?." "$f" '(' expr ')'
  460          | expr . '.' '.' "$f" '(' expr ')'
  461          | expr . '.' "?." "$f" '(' expr ')'
  462          | expr . "as" "$f" '(' expr ')'
  463          | expr . '?' "as" "$f" '(' expr ')'
  464          | expr . "is" "$f" '(' expr ')'

    "is"    shift, and go to state 637
    "as"    shift, and go to state 638
    "+="    shift, and go to state 741
    "-="    shift, and go to state 742
    "/="    shift, and go to state 743
    "*="    shift, and go to state 744
    "%="    shift, and go to state 745
    "&="    shift, and go to state 746
    "|="    shift, and go to state 747
    "^="    shift, and go to state 748
    "<<"    shift, and go to state 639
    ">>"    shift, and go to state 640
    "++"    shift, and go to state 641
    "--"    shift, and go to state 642
    "<="    shift, and go to state 643
    "<<="   shift, and go to state 749
    ">>="   shift, and go to state 750
    ">="    shift, and go to state 644
    "=="    shift, and go to state 645
    "!="    shift, and go to state 646
    "->"    shift, and go to state 647
    "<-"    shift, and go to state 751
    "??"    shift, and go to state 648
    "?."    shift, and go to state 649
    "?["    shift, and go to state 650
    "<|"    shift, and go to state 651
    "|>"    shift, and go to state 652
    ":="    shift, and go to state 752
    "<<<"   shift, and go to state 653
    ">>>"   shift, and go to state 654
    "<<<="  shift, and go to state 753
    ">>>="  shift, and go to state 754
    "&&"    shift, and go to state 655
    "||"    shift, and go to state 656
    "^^"    shift, and go to state 657
    "&&="   shift, and go to state 755
    "||="   shift, and go to state 756
    "^^="   shift, and go to state 757
    ".."    shift, and go to state 658
    '='     shift, and go to state 758
    '?'     shift, and go to state 659
    '|'     shift, and go to state 660
    '^'     shift, and go to state 661
    '&'     shift, and go to state 662
    '<'     shift, and go to state 663
    '>'     shift, and go to state 664
    '-'     shift, and go to state 665
    '+'     shift, and go to state 666
    '*'     shift, and go to state 667
    '/'     shift, and go to state 668
    '%'     shift, and go to state 669
    '.'     shift, and go to state 670
    '['     shift, and go to state 671

    "end of expression"  reduce using rule 318 (expr_assign)
    $default             reduce using rule 64 (expression_if_one_liner)


State 564

  535 enum_expression: "name" .
  536                | "name" . '=' expr

    '='  shift, and go to state 759

    $default  reduce using rule 535 (enum_expression)


State 565

  538 enum_list: enum_expression .

    $default  reduce using rule 538 (enum_list)


State 566

  539 enum_list: enum_list . ',' enum_expression
  554 enum_declaration: optional_annotation_list "enum" optional_public_or_private_enum enum_name optional_enum_basic_type_declaration "begin of code block" $@30 enum_list . optional_comma $@31 "end of code block"

    ','  shift, and go to state 760

    $default  reduce using rule 777 (optional_comma)

    optional_comma  go to state 761


State 567

  556 optional_structure_parent: ':' name_in_namespace .

    $default  reduce using rule 556 (optional_structure_parent)


State 568

  481 struct_variable_declaration_list: struct_variable_declaration_list . $@25 structure_variable_declaration "end of expression"
  483                                 | struct_variable_declaration_list . optional_annotation_list "def" optional_public_or_private_member_variable "abstract" optional_constant $@26 function_declaration_header "end of expression"
  485                                 | struct_variable_declaration_list . optional_annotation_list "def" optional_public_or_private_member_variable optional_static_member_variable optional_override optional_constant $@27 function_declaration_header expression_block
  566 optional_struct_variable_declaration_list: "begin of code block" struct_variable_declaration_list . "end of code block"

    "end of code block"  shift, and go to state 762
    '['                  shift, and go to state 15

    "def"     reduce using rule 113 (optional_annotation_list)
    $default  reduce using rule 480 ($@25)

    optional_annotation_list  go to state 763
    $@25                      go to state 764


State 569

  521 global_let_variable_name_with_pos_list: global_let_variable_name_with_pos_list ',' "name" .

    $default  reduce using rule 521 (global_let_variable_name_with_pos_list)


State 570

  525 global_let_variable_declaration: global_let_variable_name_with_pos_list ':' type_declaration_no_options . "end of expression"
  526                                | global_let_variable_name_with_pos_list ':' type_declaration_no_options . copy_or_move_or_clone expr "end of expression"

    "<-"                 shift, and go to state 571
    ":="                 shift, and go to state 572
    "end of expression"  shift, and go to state 765
    '='                  shift, and go to state 573

    copy_or_move_or_clone  go to state 766


State 571

  511 copy_or_move_or_clone: "<-" .

    $default  reduce using rule 511 (copy_or_move_or_clone)


State 572

  512 copy_or_move_or_clone: ":=" .

    $default  reduce using rule 512 (copy_or_move_or_clone)


State 573

  510 copy_or_move_or_clone: '=' .

    $default  reduce using rule 510 (copy_or_move_or_clone)


State 574

  527 global_let_variable_declaration: global_let_variable_name_with_pos_list optional_ref copy_or_move_or_clone . expr "end of expression"

    "struct"                          shift, and go to state 402
    "class"                           shift, and go to state 403
    "true"                            shift, and go to state 404
    "false"                           shift, and go to state 405
    "new"                             shift, and go to state 406
    "typeinfo"                        shift, and go to state 407
    "type"                            shift, and go to state 408
    "array"                           shift, and go to state 409
    "null"                            shift, and go to state 410
    "table"                           shift, and go to state 411
    "deref"                           shift, and go to state 412
    "cast"                            shift, and go to state 413
    "upcast"                          shift, and go to state 414
    "addr"                            shift, and go to state 415
    "reinterpret"                     shift, and go to state 416
    "unsafe"                          shift, and go to state 417
    "fixed_array"                     shift, and go to state 418
    "default"                         shift, and go to state 419
    "bool"                            shift, and go to state 222
    "void"                            shift, and go to state 223
    "string"                          shift, and go to state 224
    "int"                             shift, and go to state 226
    "int2"                            shift, and go to state 227
    "int3"                            shift, and go to state 228
    "int4"                            shift, and go to state 229
    "uint"                            shift, and go to state 230
    "bitfield"                        shift, and go to state 420
    "uint2"                           shift, and go to state 232
    "uint3"                           shift, and go to state 233
    "uint4"                           shift, and go to state 234
    "float"                           shift, and go to state 235
    "float2"                          shift, and go to state 236
    "float3"                          shift, and go to state 237
    "float4"                          shift, and go to state 238
    "range"                           shift, and go to state 239
    "urange"                          shift, and go to state 240
    "range64"                         shift, and go to state 241
    "urange64"                        shift, and go to state 242
    "int64"                           shift, and go to state 244
    "uint64"                          shift, and go to state 245
    "double"                          shift, and go to state 246
    "int8"                            shift, and go to state 249
    "uint8"                           shift, and go to state 250
    "int16"                           shift, and go to state 251
    "uint16"                          shift, and go to state 252
    "tuple"                           shift, and go to state 421
    "variant"                         shift, and go to state 422
    "generator"                       shift, and go to state 423
    "++"                              shift, and go to state 424
    "--"                              shift, and go to state 425
    "::"                              shift, and go to state 55
    "$$"                              shift, and go to state 426
    "$i"                              shift, and go to state 427
    "$v"                              shift, and go to state 428
    "$b"                              shift, and go to state 429
    "$a"                              shift, and go to state 430
    "$c"                              shift, and go to state 431
    "..."                             shift, and go to state 432
    "integer constant"                shift, and go to state 433
    "long integer constant"           shift, and go to state 434
    "unsigned integer constant"       shift, and go to state 435
    "unsigned long integer constant"  shift, and go to state 436
    "unsigned int8 constant"          shift, and go to state 437
    "floating point constant"         shift, and go to state 438
    "double constant"                 shift, and go to state 439
    "name"                            shift, and go to state 56
    "start of the string"             shift, and go to state 440
    "begin of code block"             shift, and go to state 441
    '-'                               shift, and go to state 442
    '+'                               shift, and go to state 443
    '*'                               shift, and go to state 444
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 445
    '!'                               shift, and go to state 446
    '['                               shift, and go to state 447
    '('                               shift, and go to state 448
    '$'                               shift, and go to state 449
    '@'                               shift, and go to state 450

    string_builder          go to state 451
    expr_reader             go to state 452
    expr_call_pipe          go to state 453
    name_in_namespace       go to state 454
    expr_new                go to state 455
    expr_cast               go to state 456
    expr_type_decl          go to state 457
    expr_type_info          go to state 458
    block_or_lambda         go to state 459
    expr_full_block         go to state 460
    expr_numeric_const      go to state 461
    expr_named_call         go to state 462
    expr_method_call        go to state 463
    func_addr_expr          go to state 464
    expr_field              go to state 465
    expr_call               go to state 466
    expr                    go to state 767
    expr_mtag               go to state 468
    basic_type_declaration  go to state 469
    make_decl               go to state 470
    make_struct_decl        go to state 471
    make_tuple_call         go to state 472
    make_dim_decl           go to state 473
    make_table_decl         go to state 474
    array_comprehension     go to state 475


State 575

  638 type_declaration_no_options_no_dim: "type" '<' $@36 type_declaration . '>' $@37
  696 type_declaration: type_declaration . '|' type_declaration_no_options
  697                 | type_declaration . '|' '#'

    '|'  shift, and go to state 369
    '>'  shift, and go to state 768


State 576

  661 type_declaration_no_options_no_dim: "array" '<' $@41 type_declaration . '>' $@42
  696 type_declaration: type_declaration . '|' type_declaration_no_options
  697                 | type_declaration . '|' '#'

    '|'  shift, and go to state 369
    '>'  shift, and go to state 769


State 577

  664 type_declaration_no_options_no_dim: "table" '<' $@43 table_type_pair . '>' $@44

    '>'  shift, and go to state 770


State 578

  624 table_type_pair: type_declaration .
  625                | type_declaration . c_or_s type_declaration
  696 type_declaration: type_declaration . '|' type_declaration_no_options
  697                 | type_declaration . '|' '#'

    "end of expression"  shift, and go to state 505
    ','                  shift, and go to state 506
    '|'                  shift, and go to state 369

    $default  reduce using rule 624 (table_type_pair)

    c_or_s  go to state 771


State 579

  735 make_struct_decl: "struct" '<' . $@72 type_declaration_no_options '>' $@73 '(' use_initializer optional_make_struct_dim_decl ')'

    $default  reduce using rule 733 ($@72)

    $@72  go to state 772


State 580

  738 make_struct_decl: "class" '<' . $@74 type_declaration_no_options '>' $@75 '(' use_initializer optional_make_struct_dim_decl ')'

    $default  reduce using rule 736 ($@74)

    $@74  go to state 773


State 581

  249 new_type_declaration: '<' . $@3 type_declaration '>' $@4

    $default  reduce using rule 247 ($@3)

    $@3  go to state 774


State 582

  252 expr_new: "new" new_type_declaration . '(' use_initializer ')'
  253         | "new" new_type_declaration . '(' use_initializer make_struct_single ')'

    '('  shift, and go to state 775


State 583

  250 expr_new: "new" structure_type_declaration .
  251         | "new" structure_type_declaration . '(' optional_expr_list ')'

    '('  shift, and go to state 776

    $default  reduce using rule 250 (expr_new)


State 584

  254 expr_new: "new" make_decl .

    $default  reduce using rule 254 (expr_new)


State 585

  288 expr_type_info: "typeinfo" name_in_namespace . '(' expr ')'
  289               | "typeinfo" name_in_namespace . '<' "name" '>' '(' expr ')'
  290               | "typeinfo" name_in_namespace . '<' "name" c_or_s "name" '>' '(' expr ')'

    '<'  shift, and go to state 777
    '('  shift, and go to state 778


State 586

  287 expr_type_decl: "type" '<' . $@11 type_declaration '>' $@12

    $default  reduce using rule 285 ($@11)

    $@11  go to state 779


State 587

  754 make_dim_decl: "array" "struct" . '<' $@82 type_declaration_no_options '>' $@83 '(' use_initializer optional_make_struct_dim_decl ')'

    '<'  shift, and go to state 780


State 588

  757 make_dim_decl: "array" "tuple" . '<' $@84 type_declaration_no_options '>' $@85 '(' use_initializer optional_make_struct_dim_decl ')'

    '<'  shift, and go to state 781


State 589

  760 make_dim_decl: "array" "variant" . '<' $@86 type_declaration_no_options '>' $@87 '(' make_variant_dim ')'

    '<'  shift, and go to state 782


State 590

  764 make_dim_decl: "array" '<' . $@88 type_declaration_no_options '>' $@89 '(' optional_expr_list ')'

    $default  reduce using rule 762 ($@88)

    $@88  go to state 783


State 591

  761 make_dim_decl: "array" '(' . expr_list optional_comma ')'

    "struct"                          shift, and go to state 402
    "class"                           shift, and go to state 403
    "true"                            shift, and go to state 404
    "false"                           shift, and go to state 405
    "new"                             shift, and go to state 406
    "typeinfo"                        shift, and go to state 407
    "type"                            shift, and go to state 408
    "array"                           shift, and go to state 409
    "null"                            shift, and go to state 410
    "table"                           shift, and go to state 411
    "deref"                           shift, and go to state 412
    "cast"                            shift, and go to state 413
    "upcast"                          shift, and go to state 414
    "addr"                            shift, and go to state 415
    "reinterpret"                     shift, and go to state 416
    "unsafe"                          shift, and go to state 417
    "fixed_array"                     shift, and go to state 418
    "default"                         shift, and go to state 419
    "bool"                            shift, and go to state 222
    "void"                            shift, and go to state 223
    "string"                          shift, and go to state 224
    "int"                             shift, and go to state 226
    "int2"                            shift, and go to state 227
    "int3"                            shift, and go to state 228
    "int4"                            shift, and go to state 229
    "uint"                            shift, and go to state 230
    "bitfield"                        shift, and go to state 420
    "uint2"                           shift, and go to state 232
    "uint3"                           shift, and go to state 233
    "uint4"                           shift, and go to state 234
    "float"                           shift, and go to state 235
    "float2"                          shift, and go to state 236
    "float3"                          shift, and go to state 237
    "float4"                          shift, and go to state 238
    "range"                           shift, and go to state 239
    "urange"                          shift, and go to state 240
    "range64"                         shift, and go to state 241
    "urange64"                        shift, and go to state 242
    "int64"                           shift, and go to state 244
    "uint64"                          shift, and go to state 245
    "double"                          shift, and go to state 246
    "int8"                            shift, and go to state 249
    "uint8"                           shift, and go to state 250
    "int16"                           shift, and go to state 251
    "uint16"                          shift, and go to state 252
    "tuple"                           shift, and go to state 421
    "variant"                         shift, and go to state 422
    "generator"                       shift, and go to state 423
    "++"                              shift, and go to state 424
    "--"                              shift, and go to state 425
    "::"                              shift, and go to state 55
    "$$"                              shift, and go to state 426
    "$i"                              shift, and go to state 427
    "$v"                              shift, and go to state 428
    "$b"                              shift, and go to state 429
    "$a"                              shift, and go to state 430
    "$c"                              shift, and go to state 431
    "..."                             shift, and go to state 432
    "integer constant"                shift, and go to state 433
    "long integer constant"           shift, and go to state 434
    "unsigned integer constant"       shift, and go to state 435
    "unsigned long integer constant"  shift, and go to state 436
    "unsigned int8 constant"          shift, and go to state 437
    "floating point constant"         shift, and go to state 438
    "double constant"                 shift, and go to state 439
    "name"                            shift, and go to state 56
    "start of the string"             shift, and go to state 440
    "begin of code block"             shift, and go to state 441
    '-'                               shift, and go to state 442
    '+'                               shift, and go to state 443
    '*'                               shift, and go to state 444
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 445
    '!'                               shift, and go to state 446
    '['                               shift, and go to state 447
    '('                               shift, and go to state 448
    '$'                               shift, and go to state 449
    '@'                               shift, and go to state 450

    string_builder          go to state 451
    expr_reader             go to state 452
    expr_call_pipe          go to state 453
    name_in_namespace       go to state 454
    expr_new                go to state 455
    expr_cast               go to state 456
    expr_type_decl          go to state 457
    expr_type_info          go to state 458
    expr_list               go to state 784
    block_or_lambda         go to state 459
    expr_full_block         go to state 460
    expr_numeric_const      go to state 461
    expr_named_call         go to state 462
    expr_method_call        go to state 463
    func_addr_expr          go to state 464
    expr_field              go to state 465
    expr_call               go to state 466
    expr                    go to state 628
    expr_mtag               go to state 468
    basic_type_declaration  go to state 469
    make_decl               go to state 470
    make_struct_decl        go to state 471
    make_tuple_call         go to state 472
    make_dim_decl           go to state 473
    make_table_decl         go to state 474
    array_comprehension     go to state 475


State 592

  773 make_table_decl: "table" '<' . type_declaration_no_options '>' '(' optional_expr_map_tuple_list ')'
  774                | "table" '<' . type_declaration_no_options c_or_s type_declaration_no_options '>' '(' optional_expr_map_tuple_list ')'

    "type"       shift, and go to state 216
    "array"      shift, and go to state 217
    "table"      shift, and go to state 218
    "typedecl"   shift, and go to state 219
    "iterator"   shift, and go to state 220
    "smart_ptr"  shift, and go to state 221
    "bool"       shift, and go to state 222
    "void"       shift, and go to state 223
    "string"     shift, and go to state 224
    "auto"       shift, and go to state 225
    "int"        shift, and go to state 226
    "int2"       shift, and go to state 227
    "int3"       shift, and go to state 228
    "int4"       shift, and go to state 229
    "uint"       shift, and go to state 230
    "bitfield"   shift, and go to state 231
    "uint2"      shift, and go to state 232
    "uint3"      shift, and go to state 233
    "uint4"      shift, and go to state 234
    "float"      shift, and go to state 235
    "float2"     shift, and go to state 236
    "float3"     shift, and go to state 237
    "float4"     shift, and go to state 238
    "range"      shift, and go to state 239
    "urange"     shift, and go to state 240
    "range64"    shift, and go to state 241
    "urange64"   shift, and go to state 242
    "block"      shift, and go to state 243
    "int64"      shift, and go to state 244
    "uint64"     shift, and go to state 245
    "double"     shift, and go to state 246
    "function"   shift, and go to state 247
    "lambda"     shift, and go to state 248
    "int8"       shift, and go to state 249
    "uint8"      shift, and go to state 250
    "int16"      shift, and go to state 251
    "uint16"     shift, and go to state 252
    "tuple"      shift, and go to state 253
    "variant"    shift, and go to state 254
    "::"         shift, and go to state 55
    "$t"         shift, and go to state 255
    "name"       shift, and go to state 56
    '$'          shift, and go to state 256

    name_in_namespace                   go to state 257
    basic_type_declaration              go to state 258
    structure_type_declaration          go to state 259
    auto_type_declaration               go to state 260
    bitfield_type_declaration           go to state 261
    type_declaration_no_options         go to state 785
    type_declaration_no_options_no_dim  go to state 263


State 593

  772 make_table_decl: "table" '(' . expr_map_tuple_list optional_comma ')'

    "struct"                          shift, and go to state 402
    "class"                           shift, and go to state 403
    "true"                            shift, and go to state 404
    "false"                           shift, and go to state 405
    "new"                             shift, and go to state 406
    "typeinfo"                        shift, and go to state 407
    "type"                            shift, and go to state 408
    "array"                           shift, and go to state 409
    "null"                            shift, and go to state 410
    "table"                           shift, and go to state 411
    "deref"                           shift, and go to state 412
    "cast"                            shift, and go to state 413
    "upcast"                          shift, and go to state 414
    "addr"                            shift, and go to state 415
    "reinterpret"                     shift, and go to state 416
    "unsafe"                          shift, and go to state 417
    "fixed_array"                     shift, and go to state 418
    "default"                         shift, and go to state 419
    "bool"                            shift, and go to state 222
    "void"                            shift, and go to state 223
    "string"                          shift, and go to state 224
    "int"                             shift, and go to state 226
    "int2"                            shift, and go to state 227
    "int3"                            shift, and go to state 228
    "int4"                            shift, and go to state 229
    "uint"                            shift, and go to state 230
    "bitfield"                        shift, and go to state 420
    "uint2"                           shift, and go to state 232
    "uint3"                           shift, and go to state 233
    "uint4"                           shift, and go to state 234
    "float"                           shift, and go to state 235
    "float2"                          shift, and go to state 236
    "float3"                          shift, and go to state 237
    "float4"                          shift, and go to state 238
    "range"                           shift, and go to state 239
    "urange"                          shift, and go to state 240
    "range64"                         shift, and go to state 241
    "urange64"                        shift, and go to state 242
    "int64"                           shift, and go to state 244
    "uint64"                          shift, and go to state 245
    "double"                          shift, and go to state 246
    "int8"                            shift, and go to state 249
    "uint8"                           shift, and go to state 250
    "int16"                           shift, and go to state 251
    "uint16"                          shift, and go to state 252
    "tuple"                           shift, and go to state 421
    "variant"                         shift, and go to state 422
    "generator"                       shift, and go to state 423
    "++"                              shift, and go to state 424
    "--"                              shift, and go to state 425
    "::"                              shift, and go to state 55
    "$$"                              shift, and go to state 426
    "$i"                              shift, and go to state 427
    "$v"                              shift, and go to state 428
    "$b"                              shift, and go to state 429
    "$a"                              shift, and go to state 430
    "$c"                              shift, and go to state 431
    "..."                             shift, and go to state 432
    "integer constant"                shift, and go to state 433
    "long integer constant"           shift, and go to state 434
    "unsigned integer constant"       shift, and go to state 435
    "unsigned long integer constant"  shift, and go to state 436
    "unsigned int8 constant"          shift, and go to state 437
    "floating point constant"         shift, and go to state 438
    "double constant"                 shift, and go to state 439
    "name"                            shift, and go to state 56
    "start of the string"             shift, and go to state 440
    "begin of code block"             shift, and go to state 441
    '-'                               shift, and go to state 442
    '+'                               shift, and go to state 443
    '*'                               shift, and go to state 444
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 445
    '!'                               shift, and go to state 446
    '['                               shift, and go to state 447
    '('                               shift, and go to state 448
    '$'                               shift, and go to state 449
    '@'                               shift, and go to state 450

    string_builder          go to state 451
    expr_reader             go to state 452
    expr_call_pipe          go to state 453
    name_in_namespace       go to state 454
    expr_new                go to state 455
    expr_cast               go to state 456
    expr_type_decl          go to state 457
    expr_type_info          go to state 458
    block_or_lambda         go to state 459
    expr_full_block         go to state 460
    expr_numeric_const      go to state 461
    expr_named_call         go to state 462
    expr_method_call        go to state 463
    func_addr_expr          go to state 464
    expr_field              go to state 465
    expr_call               go to state 466
    expr                    go to state 617
    expr_mtag               go to state 468
    basic_type_declaration  go to state 469
    make_decl               go to state 470
    make_struct_decl        go to state 471
    make_map_tuple          go to state 618
    make_tuple_call         go to state 472
    make_dim_decl           go to state 473
    expr_map_tuple_list     go to state 786
    make_table_decl         go to state 474
    array_comprehension     go to state 475


State 594

  416 expr: "deref" '(' . expr ')'

    "struct"                          shift, and go to state 402
    "class"                           shift, and go to state 403
    "true"                            shift, and go to state 404
    "false"                           shift, and go to state 405
    "new"                             shift, and go to state 406
    "typeinfo"                        shift, and go to state 407
    "type"                            shift, and go to state 408
    "array"                           shift, and go to state 409
    "null"                            shift, and go to state 410
    "table"                           shift, and go to state 411
    "deref"                           shift, and go to state 412
    "cast"                            shift, and go to state 413
    "upcast"                          shift, and go to state 414
    "addr"                            shift, and go to state 415
    "reinterpret"                     shift, and go to state 416
    "unsafe"                          shift, and go to state 417
    "fixed_array"                     shift, and go to state 418
    "default"                         shift, and go to state 419
    "bool"                            shift, and go to state 222
    "void"                            shift, and go to state 223
    "string"                          shift, and go to state 224
    "int"                             shift, and go to state 226
    "int2"                            shift, and go to state 227
    "int3"                            shift, and go to state 228
    "int4"                            shift, and go to state 229
    "uint"                            shift, and go to state 230
    "bitfield"                        shift, and go to state 420
    "uint2"                           shift, and go to state 232
    "uint3"                           shift, and go to state 233
    "uint4"                           shift, and go to state 234
    "float"                           shift, and go to state 235
    "float2"                          shift, and go to state 236
    "float3"                          shift, and go to state 237
    "float4"                          shift, and go to state 238
    "range"                           shift, and go to state 239
    "urange"                          shift, and go to state 240
    "range64"                         shift, and go to state 241
    "urange64"                        shift, and go to state 242
    "int64"                           shift, and go to state 244
    "uint64"                          shift, and go to state 245
    "double"                          shift, and go to state 246
    "int8"                            shift, and go to state 249
    "uint8"                           shift, and go to state 250
    "int16"                           shift, and go to state 251
    "uint16"                          shift, and go to state 252
    "tuple"                           shift, and go to state 421
    "variant"                         shift, and go to state 422
    "generator"                       shift, and go to state 423
    "++"                              shift, and go to state 424
    "--"                              shift, and go to state 425
    "::"                              shift, and go to state 55
    "$$"                              shift, and go to state 426
    "$i"                              shift, and go to state 427
    "$v"                              shift, and go to state 428
    "$b"                              shift, and go to state 429
    "$a"                              shift, and go to state 430
    "$c"                              shift, and go to state 431
    "..."                             shift, and go to state 432
    "integer constant"                shift, and go to state 433
    "long integer constant"           shift, and go to state 434
    "unsigned integer constant"       shift, and go to state 435
    "unsigned long integer constant"  shift, and go to state 436
    "unsigned int8 constant"          shift, and go to state 437
    "floating point constant"         shift, and go to state 438
    "double constant"                 shift, and go to state 439
    "name"                            shift, and go to state 56
    "start of the string"             shift, and go to state 440
    "begin of code block"             shift, and go to state 441
    '-'                               shift, and go to state 442
    '+'                               shift, and go to state 443
    '*'                               shift, and go to state 444
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 445
    '!'                               shift, and go to state 446
    '['                               shift, and go to state 447
    '('                               shift, and go to state 448
    '$'                               shift, and go to state 449
    '@'                               shift, and go to state 450

    string_builder          go to state 451
    expr_reader             go to state 452
    expr_call_pipe          go to state 453
    name_in_namespace       go to state 454
    expr_new                go to state 455
    expr_cast               go to state 456
    expr_type_decl          go to state 457
    expr_type_info          go to state 458
    block_or_lambda         go to state 459
    expr_full_block         go to state 460
    expr_numeric_const      go to state 461
    expr_named_call         go to state 462
    expr_method_call        go to state 463
    func_addr_expr          go to state 464
    expr_field              go to state 465
    expr_call               go to state 466
    expr                    go to state 787
    expr_mtag               go to state 468
    basic_type_declaration  go to state 469
    make_decl               go to state 470
    make_struct_decl        go to state 471
    make_tuple_call         go to state 472
    make_dim_decl           go to state 473
    make_table_decl         go to state 474
    array_comprehension     go to state 475


State 595

  278 expr_cast: "cast" '<' . $@5 type_declaration_no_options '>' $@6 expr

    $default  reduce using rule 276 ($@5)

    $@5  go to state 788


State 596

  281 expr_cast: "upcast" '<' . $@7 type_declaration_no_options '>' $@8 expr

    $default  reduce using rule 279 ($@7)

    $@7  go to state 789


State 597

  417 expr: "addr" '(' . expr ')'

    "struct"                          shift, and go to state 402
    "class"                           shift, and go to state 403
    "true"                            shift, and go to state 404
    "false"                           shift, and go to state 405
    "new"                             shift, and go to state 406
    "typeinfo"                        shift, and go to state 407
    "type"                            shift, and go to state 408
    "array"                           shift, and go to state 409
    "null"                            shift, and go to state 410
    "table"                           shift, and go to state 411
    "deref"                           shift, and go to state 412
    "cast"                            shift, and go to state 413
    "upcast"                          shift, and go to state 414
    "addr"                            shift, and go to state 415
    "reinterpret"                     shift, and go to state 416
    "unsafe"                          shift, and go to state 417
    "fixed_array"                     shift, and go to state 418
    "default"                         shift, and go to state 419
    "bool"                            shift, and go to state 222
    "void"                            shift, and go to state 223
    "string"                          shift, and go to state 224
    "int"                             shift, and go to state 226
    "int2"                            shift, and go to state 227
    "int3"                            shift, and go to state 228
    "int4"                            shift, and go to state 229
    "uint"                            shift, and go to state 230
    "bitfield"                        shift, and go to state 420
    "uint2"                           shift, and go to state 232
    "uint3"                           shift, and go to state 233
    "uint4"                           shift, and go to state 234
    "float"                           shift, and go to state 235
    "float2"                          shift, and go to state 236
    "float3"                          shift, and go to state 237
    "float4"                          shift, and go to state 238
    "range"                           shift, and go to state 239
    "urange"                          shift, and go to state 240
    "range64"                         shift, and go to state 241
    "urange64"                        shift, and go to state 242
    "int64"                           shift, and go to state 244
    "uint64"                          shift, and go to state 245
    "double"                          shift, and go to state 246
    "int8"                            shift, and go to state 249
    "uint8"                           shift, and go to state 250
    "int16"                           shift, and go to state 251
    "uint16"                          shift, and go to state 252
    "tuple"                           shift, and go to state 421
    "variant"                         shift, and go to state 422
    "generator"                       shift, and go to state 423
    "++"                              shift, and go to state 424
    "--"                              shift, and go to state 425
    "::"                              shift, and go to state 55
    "$$"                              shift, and go to state 426
    "$i"                              shift, and go to state 427
    "$v"                              shift, and go to state 428
    "$b"                              shift, and go to state 429
    "$a"                              shift, and go to state 430
    "$c"                              shift, and go to state 431
    "..."                             shift, and go to state 432
    "integer constant"                shift, and go to state 433
    "long integer constant"           shift, and go to state 434
    "unsigned integer constant"       shift, and go to state 435
    "unsigned long integer constant"  shift, and go to state 436
    "unsigned int8 constant"          shift, and go to state 437
    "floating point constant"         shift, and go to state 438
    "double constant"                 shift, and go to state 439
    "name"                            shift, and go to state 56
    "start of the string"             shift, and go to state 440
    "begin of code block"             shift, and go to state 441
    '-'                               shift, and go to state 442
    '+'                               shift, and go to state 443
    '*'                               shift, and go to state 444
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 445
    '!'                               shift, and go to state 446
    '['                               shift, and go to state 447
    '('                               shift, and go to state 448
    '$'                               shift, and go to state 449
    '@'                               shift, and go to state 450

    string_builder          go to state 451
    expr_reader             go to state 452
    expr_call_pipe          go to state 453
    name_in_namespace       go to state 454
    expr_new                go to state 455
    expr_cast               go to state 456
    expr_type_decl          go to state 457
    expr_type_info          go to state 458
    block_or_lambda         go to state 459
    expr_full_block         go to state 460
    expr_numeric_const      go to state 461
    expr_named_call         go to state 462
    expr_method_call        go to state 463
    func_addr_expr          go to state 464
    expr_field              go to state 465
    expr_call               go to state 466
    expr                    go to state 790
    expr_mtag               go to state 468
    basic_type_declaration  go to state 469
    make_decl               go to state 470
    make_struct_decl        go to state 471
    make_tuple_call         go to state 472
    make_dim_decl           go to state 473
    make_table_decl         go to state 474
    array_comprehension     go to state 475


State 598

  284 expr_cast: "reinterpret" '<' . $@9 type_declaration_no_options '>' $@10 expr

    $default  reduce using rule 282 ($@9)

    $@9  go to state 791


State 599

  449 expr: "unsafe" '(' . expr ')'

    "struct"                          shift, and go to state 402
    "class"                           shift, and go to state 403
    "true"                            shift, and go to state 404
    "false"                           shift, and go to state 405
    "new"                             shift, and go to state 406
    "typeinfo"                        shift, and go to state 407
    "type"                            shift, and go to state 408
    "array"                           shift, and go to state 409
    "null"                            shift, and go to state 410
    "table"                           shift, and go to state 411
    "deref"                           shift, and go to state 412
    "cast"                            shift, and go to state 413
    "upcast"                          shift, and go to state 414
    "addr"                            shift, and go to state 415
    "reinterpret"                     shift, and go to state 416
    "unsafe"                          shift, and go to state 417
    "fixed_array"                     shift, and go to state 418
    "default"                         shift, and go to state 419
    "bool"                            shift, and go to state 222
    "void"                            shift, and go to state 223
    "string"                          shift, and go to state 224
    "int"                             shift, and go to state 226
    "int2"                            shift, and go to state 227
    "int3"                            shift, and go to state 228
    "int4"                            shift, and go to state 229
    "uint"                            shift, and go to state 230
    "bitfield"                        shift, and go to state 420
    "uint2"                           shift, and go to state 232
    "uint3"                           shift, and go to state 233
    "uint4"                           shift, and go to state 234
    "float"                           shift, and go to state 235
    "float2"                          shift, and go to state 236
    "float3"                          shift, and go to state 237
    "float4"                          shift, and go to state 238
    "range"                           shift, and go to state 239
    "urange"                          shift, and go to state 240
    "range64"                         shift, and go to state 241
    "urange64"                        shift, and go to state 242
    "int64"                           shift, and go to state 244
    "uint64"                          shift, and go to state 245
    "double"                          shift, and go to state 246
    "int8"                            shift, and go to state 249
    "uint8"                           shift, and go to state 250
    "int16"                           shift, and go to state 251
    "uint16"                          shift, and go to state 252
    "tuple"                           shift, and go to state 421
    "variant"                         shift, and go to state 422
    "generator"                       shift, and go to state 423
    "++"                              shift, and go to state 424
    "--"                              shift, and go to state 425
    "::"                              shift, and go to state 55
    "$$"                              shift, and go to state 426
    "$i"                              shift, and go to state 427
    "$v"                              shift, and go to state 428
    "$b"                              shift, and go to state 429
    "$a"                              shift, and go to state 430
    "$c"                              shift, and go to state 431
    "..."                             shift, and go to state 432
    "integer constant"                shift, and go to state 433
    "long integer constant"           shift, and go to state 434
    "unsigned integer constant"       shift, and go to state 435
    "unsigned long integer constant"  shift, and go to state 436
    "unsigned int8 constant"          shift, and go to state 437
    "floating point constant"         shift, and go to state 438
    "double constant"                 shift, and go to state 439
    "name"                            shift, and go to state 56
    "start of the string"             shift, and go to state 440
    "begin of code block"             shift, and go to state 441
    '-'                               shift, and go to state 442
    '+'                               shift, and go to state 443
    '*'                               shift, and go to state 444
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 445
    '!'                               shift, and go to state 446
    '['                               shift, and go to state 447
    '('                               shift, and go to state 448
    '$'                               shift, and go to state 449
    '@'                               shift, and go to state 450

    string_builder          go to state 451
    expr_reader             go to state 452
    expr_call_pipe          go to state 453
    name_in_namespace       go to state 454
    expr_new                go to state 455
    expr_cast               go to state 456
    expr_type_decl          go to state 457
    expr_type_info          go to state 458
    block_or_lambda         go to state 459
    expr_full_block         go to state 460
    expr_numeric_const      go to state 461
    expr_named_call         go to state 462
    expr_method_call        go to state 463
    func_addr_expr          go to state 464
    expr_field              go to state 465
    expr_call               go to state 466
    expr                    go to state 792
    expr_mtag               go to state 468
    basic_type_declaration  go to state 469
    make_decl               go to state 470
    make_struct_decl        go to state 471
    make_tuple_call         go to state 472
    make_dim_decl           go to state 473
    make_table_decl         go to state 474
    array_comprehension     go to state 475


State 600

  768 make_dim_decl: "fixed_array" '<' . $@90 type_declaration_no_options '>' $@91 '(' expr_list optional_comma ')'

    $default  reduce using rule 766 ($@90)

    $@90  go to state 793


State 601

  765 make_dim_decl: "fixed_array" '(' . expr_list optional_comma ')'

    "struct"                          shift, and go to state 402
    "class"                           shift, and go to state 403
    "true"                            shift, and go to state 404
    "false"                           shift, and go to state 405
    "new"                             shift, and go to state 406
    "typeinfo"                        shift, and go to state 407
    "type"                            shift, and go to state 408
    "array"                           shift, and go to state 409
    "null"                            shift, and go to state 410
    "table"                           shift, and go to state 411
    "deref"                           shift, and go to state 412
    "cast"                            shift, and go to state 413
    "upcast"                          shift, and go to state 414
    "addr"                            shift, and go to state 415
    "reinterpret"                     shift, and go to state 416
    "unsafe"                          shift, and go to state 417
    "fixed_array"                     shift, and go to state 418
    "default"                         shift, and go to state 419
    "bool"                            shift, and go to state 222
    "void"                            shift, and go to state 223
    "string"                          shift, and go to state 224
    "int"                             shift, and go to state 226
    "int2"                            shift, and go to state 227
    "int3"                            shift, and go to state 228
    "int4"                            shift, and go to state 229
    "uint"                            shift, and go to state 230
    "bitfield"                        shift, and go to state 420
    "uint2"                           shift, and go to state 232
    "uint3"                           shift, and go to state 233
    "uint4"                           shift, and go to state 234
    "float"                           shift, and go to state 235
    "float2"                          shift, and go to state 236
    "float3"                          shift, and go to state 237
    "float4"                          shift, and go to state 238
    "range"                           shift, and go to state 239
    "urange"                          shift, and go to state 240
    "range64"                         shift, and go to state 241
    "urange64"                        shift, and go to state 242
    "int64"                           shift, and go to state 244
    "uint64"                          shift, and go to state 245
    "double"                          shift, and go to state 246
    "int8"                            shift, and go to state 249
    "uint8"                           shift, and go to state 250
    "int16"                           shift, and go to state 251
    "uint16"                          shift, and go to state 252
    "tuple"                           shift, and go to state 421
    "variant"                         shift, and go to state 422
    "generator"                       shift, and go to state 423
    "++"                              shift, and go to state 424
    "--"                              shift, and go to state 425
    "::"                              shift, and go to state 55
    "$$"                              shift, and go to state 426
    "$i"                              shift, and go to state 427
    "$v"                              shift, and go to state 428
    "$b"                              shift, and go to state 429
    "$a"                              shift, and go to state 430
    "$c"                              shift, and go to state 431
    "..."                             shift, and go to state 432
    "integer constant"                shift, and go to state 433
    "long integer constant"           shift, and go to state 434
    "unsigned integer constant"       shift, and go to state 435
    "unsigned long integer constant"  shift, and go to state 436
    "unsigned int8 constant"          shift, and go to state 437
    "floating point constant"         shift, and go to state 438
    "double constant"                 shift, and go to state 439
    "name"                            shift, and go to state 56
    "start of the string"             shift, and go to state 440
    "begin of code block"             shift, and go to state 441
    '-'                               shift, and go to state 442
    '+'                               shift, and go to state 443
    '*'                               shift, and go to state 444
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 445
    '!'                               shift, and go to state 446
    '['                               shift, and go to state 447
    '('                               shift, and go to state 448
    '$'                               shift, and go to state 449
    '@'                               shift, and go to state 450

    string_builder          go to state 451
    expr_reader             go to state 452
    expr_call_pipe          go to state 453
    name_in_namespace       go to state 454
    expr_new                go to state 455
    expr_cast               go to state 456
    expr_type_decl          go to state 457
    expr_type_info          go to state 458
    expr_list               go to state 794
    block_or_lambda         go to state 459
    expr_full_block         go to state 460
    expr_numeric_const      go to state 461
    expr_named_call         go to state 462
    expr_method_call        go to state 463
    func_addr_expr          go to state 464
    expr_field              go to state 465
    expr_call               go to state 466
    expr                    go to state 628
    expr_mtag               go to state 468
    basic_type_declaration  go to state 469
    make_decl               go to state 470
    make_struct_decl        go to state 471
    make_tuple_call         go to state 472
    make_dim_decl           go to state 473
    make_table_decl         go to state 474
    array_comprehension     go to state 475


State 602

  744 make_struct_decl: "default" '<' . $@78 type_declaration_no_options '>' $@79 use_initializer

    $default  reduce using rule 742 ($@78)

    $@78  go to state 795


State 603

  750 make_tuple_call: "tuple" '<' . $@80 type_declaration_no_options '>' $@81 '(' use_initializer optional_make_struct_dim_decl ')'

    $default  reduce using rule 748 ($@80)

    $@80  go to state 796


State 604

  747 make_tuple_call: "tuple" '(' . expr_list optional_comma ')'

    "struct"                          shift, and go to state 402
    "class"                           shift, and go to state 403
    "true"                            shift, and go to state 404
    "false"                           shift, and go to state 405
    "new"                             shift, and go to state 406
    "typeinfo"                        shift, and go to state 407
    "type"                            shift, and go to state 408
    "array"                           shift, and go to state 409
    "null"                            shift, and go to state 410
    "table"                           shift, and go to state 411
    "deref"                           shift, and go to state 412
    "cast"                            shift, and go to state 413
    "upcast"                          shift, and go to state 414
    "addr"                            shift, and go to state 415
    "reinterpret"                     shift, and go to state 416
    "unsafe"                          shift, and go to state 417
    "fixed_array"                     shift, and go to state 418
    "default"                         shift, and go to state 419
    "bool"                            shift, and go to state 222
    "void"                            shift, and go to state 223
    "string"                          shift, and go to state 224
    "int"                             shift, and go to state 226
    "int2"                            shift, and go to state 227
    "int3"                            shift, and go to state 228
    "int4"                            shift, and go to state 229
    "uint"                            shift, and go to state 230
    "bitfield"                        shift, and go to state 420
    "uint2"                           shift, and go to state 232
    "uint3"                           shift, and go to state 233
    "uint4"                           shift, and go to state 234
    "float"                           shift, and go to state 235
    "float2"                          shift, and go to state 236
    "float3"                          shift, and go to state 237
    "float4"                          shift, and go to state 238
    "range"                           shift, and go to state 239
    "urange"                          shift, and go to state 240
    "range64"                         shift, and go to state 241
    "urange64"                        shift, and go to state 242
    "int64"                           shift, and go to state 244
    "uint64"                          shift, and go to state 245
    "double"                          shift, and go to state 246
    "int8"                            shift, and go to state 249
    "uint8"                           shift, and go to state 250
    "int16"                           shift, and go to state 251
    "uint16"                          shift, and go to state 252
    "tuple"                           shift, and go to state 421
    "variant"                         shift, and go to state 422
    "generator"                       shift, and go to state 423
    "++"                              shift, and go to state 424
    "--"                              shift, and go to state 425
    "::"                              shift, and go to state 55
    "$$"                              shift, and go to state 426
    "$i"                              shift, and go to state 427
    "$v"                              shift, and go to state 428
    "$b"                              shift, and go to state 429
    "$a"                              shift, and go to state 430
    "$c"                              shift, and go to state 431
    "..."                             shift, and go to state 432
    "integer constant"                shift, and go to state 433
    "long integer constant"           shift, and go to state 434
    "unsigned integer constant"       shift, and go to state 435
    "unsigned long integer constant"  shift, and go to state 436
    "unsigned int8 constant"          shift, and go to state 437
    "floating point constant"         shift, and go to state 438
    "double constant"                 shift, and go to state 439
    "name"                            shift, and go to state 56
    "start of the string"             shift, and go to state 440
    "begin of code block"             shift, and go to state 441
    '-'                               shift, and go to state 442
    '+'                               shift, and go to state 443
    '*'                               shift, and go to state 444
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 445
    '!'                               shift, and go to state 446
    '['                               shift, and go to state 447
    '('                               shift, and go to state 448
    '$'                               shift, and go to state 449
    '@'                               shift, and go to state 450

    string_builder          go to state 451
    expr_reader             go to state 452
    expr_call_pipe          go to state 453
    name_in_namespace       go to state 454
    expr_new                go to state 455
    expr_cast               go to state 456
    expr_type_decl          go to state 457
    expr_type_info          go to state 458
    expr_list               go to state 797
    block_or_lambda         go to state 459
    expr_full_block         go to state 460
    expr_numeric_const      go to state 461
    expr_named_call         go to state 462
    expr_method_call        go to state 463
    func_addr_expr          go to state 464
    expr_field              go to state 465
    expr_call               go to state 466
    expr                    go to state 628
    expr_mtag               go to state 468
    basic_type_declaration  go to state 469
    make_decl               go to state 470
    make_struct_decl        go to state 471
    make_tuple_call         go to state 472
    make_dim_decl           go to state 473
    make_table_decl         go to state 474
    array_comprehension     go to state 475


State 605

  741 make_struct_decl: "variant" '<' . $@76 type_declaration_no_options '>' $@77 '(' make_variant_dim ')'

    $default  reduce using rule 739 ($@76)

    $@76  go to state 798


State 606

  418 expr: "generator" '<' . type_declaration_no_options '>' optional_capture_list '(' ')'
  419     | "generator" '<' . type_declaration_no_options '>' optional_capture_list '(' expr ')'
  420     | "generator" '<' . type_declaration_no_options '>' optional_capture_list expression_block

    "type"       shift, and go to state 216
    "array"      shift, and go to state 217
    "table"      shift, and go to state 218
    "typedecl"   shift, and go to state 219
    "iterator"   shift, and go to state 220
    "smart_ptr"  shift, and go to state 221
    "bool"       shift, and go to state 222
    "void"       shift, and go to state 223
    "string"     shift, and go to state 224
    "auto"       shift, and go to state 225
    "int"        shift, and go to state 226
    "int2"       shift, and go to state 227
    "int3"       shift, and go to state 228
    "int4"       shift, and go to state 229
    "uint"       shift, and go to state 230
    "bitfield"   shift, and go to state 231
    "uint2"      shift, and go to state 232
    "uint3"      shift, and go to state 233
    "uint4"      shift, and go to state 234
    "float"      shift, and go to state 235
    "float2"     shift, and go to state 236
    "float3"     shift, and go to state 237
    "float4"     shift, and go to state 238
    "range"      shift, and go to state 239
    "urange"     shift, and go to state 240
    "range64"    shift, and go to state 241
    "urange64"   shift, and go to state 242
    "block"      shift, and go to state 243
    "int64"      shift, and go to state 244
    "uint64"     shift, and go to state 245
    "double"     shift, and go to state 246
    "function"   shift, and go to state 247
    "lambda"     shift, and go to state 248
    "int8"       shift, and go to state 249
    "uint8"      shift, and go to state 250
    "int16"      shift, and go to state 251
    "uint16"     shift, and go to state 252
    "tuple"      shift, and go to state 253
    "variant"    shift, and go to state 254
    "::"         shift, and go to state 55
    "$t"         shift, and go to state 255
    "name"       shift, and go to state 56
    '$'          shift, and go to state 256

    name_in_namespace                   go to state 257
    basic_type_declaration              go to state 258
    structure_type_declaration          go to state 259
    auto_type_declaration               go to state 260
    bitfield_type_declaration           go to state 261
    type_declaration_no_options         go to state 799
    type_declaration_no_options_no_dim  go to state 263


State 607

  339 expr_method_call: expr . "->" "name" '(' ')'
  340                 | expr . "->" "name" '(' expr_list ')'
  350 expr_field: expr . '.' "name"
  351           | expr . '.' '.' "name"
  352           | expr . '.' "name" '(' ')'
  353           | expr . '.' "name" '(' expr_list ')'
  354           | expr . '.' basic_type_declaration '(' ')'
  355           | expr . '.' basic_type_declaration '(' expr_list ')'
  358           | expr . '.' $@17 error $@18
  380 expr: expr . "<<" expr
  381     | expr . ">>" expr
  382     | expr . "<<<" expr
  383     | expr . ">>>" expr
  384     | expr . '+' expr
  385     | expr . '-' expr
  386     | expr . '*' expr
  387     | expr . '/' expr
  388     | expr . '%' expr
  389     | expr . '<' expr
  390     | expr . '>' expr
  391     | expr . "==" expr
  392     | expr . "!=" expr
  393     | expr . "<=" expr
  394     | expr . ">=" expr
  395     | expr . '&' expr
  396     | expr . '|' expr
  397     | expr . '^' expr
  398     | expr . "&&" expr
  399     | expr . "||" expr
  400     | expr . "^^" expr
  401     | expr . ".." expr
  402     | "++" expr .
  404     | expr . "++"
  405     | expr . "--"
  407     | expr . '[' expr ']'
  408     | expr . '.' '[' expr ']'
  409     | expr . "?[" expr ']'
  410     | expr . '.' "?[" expr ']'
  411     | expr . "?." "name"
  412     | expr . '.' "?." "name"
  421     | expr . "??" expr
  422     | expr . '?' expr ':' expr
  425     | expr . "is" "type" '<' $@19 type_declaration_no_options '>' $@20
  426     | expr . "is" basic_type_declaration
  427     | expr . "is" "name"
  428     | expr . "as" "name"
  431     | expr . "as" "type" '<' $@21 type_declaration '>' $@22
  432     | expr . "as" basic_type_declaration
  433     | expr . '?' "as" "name"
  436     | expr . '?' "as" "type" '<' $@23 type_declaration '>' $@24
  437     | expr . '?' "as" basic_type_declaration
  445     | expr . "<|" expr
  446     | expr . "|>" expr
  447     | expr . "|>" basic_type_declaration
  458 expr_mtag: expr . '.' "$f" '(' expr ')'
  459          | expr . "?." "$f" '(' expr ')'
  460          | expr . '.' '.' "$f" '(' expr ')'
  461          | expr . '.' "?." "$f" '(' expr ')'
  462          | expr . "as" "$f" '(' expr ')'
  463          | expr . '?' "as" "$f" '(' expr ')'
  464          | expr . "is" "$f" '(' expr ')'

    "is"  shift, and go to state 637
    "as"  shift, and go to state 638
    "++"  shift, and go to state 641
    "--"  shift, and go to state 642
    "->"  shift, and go to state 647
    "?."  shift, and go to state 649
    "?["  shift, and go to state 650
    "<|"  shift, and go to state 651
    "|>"  shift, and go to state 652
    '.'   shift, and go to state 670
    '['   shift, and go to state 671

    $default  reduce using rule 402 (expr)


State 608

  339 expr_method_call: expr . "->" "name" '(' ')'
  340                 | expr . "->" "name" '(' expr_list ')'
  350 expr_field: expr . '.' "name"
  351           | expr . '.' '.' "name"
  352           | expr . '.' "name" '(' ')'
  353           | expr . '.' "name" '(' expr_list ')'
  354           | expr . '.' basic_type_declaration '(' ')'
  355           | expr . '.' basic_type_declaration '(' expr_list ')'
  358           | expr . '.' $@17 error $@18
  380 expr: expr . "<<" expr
  381     | expr . ">>" expr
  382     | expr . "<<<" expr
  383     | expr . ">>>" expr
  384     | expr . '+' expr
  385     | expr . '-' expr
  386     | expr . '*' expr
  387     | expr . '/' expr
  388     | expr . '%' expr
  389     | expr . '<' expr
  390     | expr . '>' expr
  391     | expr . "==" expr
  392     | expr . "!=" expr
  393     | expr . "<=" expr
  394     | expr . ">=" expr
  395     | expr . '&' expr
  396     | expr . '|' expr
  397     | expr . '^' expr
  398     | expr . "&&" expr
  399     | expr . "||" expr
  400     | expr . "^^" expr
  401     | expr . ".." expr
  403     | "--" expr .
  404     | expr . "++"
  405     | expr . "--"
  407     | expr . '[' expr ']'
  408     | expr . '.' '[' expr ']'
  409     | expr . "?[" expr ']'
  410     | expr . '.' "?[" expr ']'
  411     | expr . "?." "name"
  412     | expr . '.' "?." "name"
  421     | expr . "??" expr
  422     | expr . '?' expr ':' expr
  425     | expr . "is" "type" '<' $@19 type_declaration_no_options '>' $@20
  426     | expr . "is" basic_type_declaration
  427     | expr . "is" "name"
  428     | expr . "as" "name"
  431     | expr . "as" "type" '<' $@21 type_declaration '>' $@22
  432     | expr . "as" basic_type_declaration
  433     | expr . '?' "as" "name"
  436     | expr . '?' "as" "type" '<' $@23 type_declaration '>' $@24
  437     | expr . '?' "as" basic_type_declaration
  445     | expr . "<|" expr
  446     | expr . "|>" expr
  447     | expr . "|>" basic_type_declaration
  458 expr_mtag: expr . '.' "$f" '(' expr ')'
  459          | expr . "?." "$f" '(' expr ')'
  460          | expr . '.' '.' "$f" '(' expr ')'
  461          | expr . '.' "?." "$f" '(' expr ')'
  462          | expr . "as" "$f" '(' expr ')'
  463          | expr . '?' "as" "$f" '(' expr ')'
  464          | expr . "is" "$f" '(' expr ')'

    "is"  shift, and go to state 637
    "as"  shift, and go to state 638
    "++"  shift, and go to state 641
    "--"  shift, and go to state 642
    "->"  shift, and go to state 647
    "?."  shift, and go to state 649
    "?["  shift, and go to state 650
    "<|"  shift, and go to state 651
    "|>"  shift, and go to state 652
    '.'   shift, and go to state 670
    '['   shift, and go to state 671

    $default  reduce using rule 403 (expr)


State 609

  450 expr_mtag: "$$" '(' . expr ')'

    "struct"                          shift, and go to state 402
    "class"                           shift, and go to state 403
    "true"                            shift, and go to state 404
    "false"                           shift, and go to state 405
    "new"                             shift, and go to state 406
    "typeinfo"                        shift, and go to state 407
    "type"                            shift, and go to state 408
    "array"                           shift, and go to state 409
    "null"                            shift, and go to state 410
    "table"                           shift, and go to state 411
    "deref"                           shift, and go to state 412
    "cast"                            shift, and go to state 413
    "upcast"                          shift, and go to state 414
    "addr"                            shift, and go to state 415
    "reinterpret"                     shift, and go to state 416
    "unsafe"                          shift, and go to state 417
    "fixed_array"                     shift, and go to state 418
    "default"                         shift, and go to state 419
    "bool"                            shift, and go to state 222
    "void"                            shift, and go to state 223
    "string"                          shift, and go to state 224
    "int"                             shift, and go to state 226
    "int2"                            shift, and go to state 227
    "int3"                            shift, and go to state 228
    "int4"                            shift, and go to state 229
    "uint"                            shift, and go to state 230
    "bitfield"                        shift, and go to state 420
    "uint2"                           shift, and go to state 232
    "uint3"                           shift, and go to state 233
    "uint4"                           shift, and go to state 234
    "float"                           shift, and go to state 235
    "float2"                          shift, and go to state 236
    "float3"                          shift, and go to state 237
    "float4"                          shift, and go to state 238
    "range"                           shift, and go to state 239
    "urange"                          shift, and go to state 240
    "range64"                         shift, and go to state 241
    "urange64"                        shift, and go to state 242
    "int64"                           shift, and go to state 244
    "uint64"                          shift, and go to state 245
    "double"                          shift, and go to state 246
    "int8"                            shift, and go to state 249
    "uint8"                           shift, and go to state 250
    "int16"                           shift, and go to state 251
    "uint16"                          shift, and go to state 252
    "tuple"                           shift, and go to state 421
    "variant"                         shift, and go to state 422
    "generator"                       shift, and go to state 423
    "++"                              shift, and go to state 424
    "--"                              shift, and go to state 425
    "::"                              shift, and go to state 55
    "$$"                              shift, and go to state 426
    "$i"                              shift, and go to state 427
    "$v"                              shift, and go to state 428
    "$b"                              shift, and go to state 429
    "$a"                              shift, and go to state 430
    "$c"                              shift, and go to state 431
    "..."                             shift, and go to state 432
    "integer constant"                shift, and go to state 433
    "long integer constant"           shift, and go to state 434
    "unsigned integer constant"       shift, and go to state 435
    "unsigned long integer constant"  shift, and go to state 436
    "unsigned int8 constant"          shift, and go to state 437
    "floating point constant"         shift, and go to state 438
    "double constant"                 shift, and go to state 439
    "name"                            shift, and go to state 56
    "start of the string"             shift, and go to state 440
    "begin of code block"             shift, and go to state 441
    '-'                               shift, and go to state 442
    '+'                               shift, and go to state 443
    '*'                               shift, and go to state 444
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 445
    '!'                               shift, and go to state 446
    '['                               shift, and go to state 447
    '('                               shift, and go to state 448
    '$'                               shift, and go to state 449
    '@'                               shift, and go to state 450

    string_builder          go to state 451
    expr_reader             go to state 452
    expr_call_pipe          go to state 453
    name_in_namespace       go to state 454
    expr_new                go to state 455
    expr_cast               go to state 456
    expr_type_decl          go to state 457
    expr_type_info          go to state 458
    block_or_lambda         go to state 459
    expr_full_block         go to state 460
    expr_numeric_const      go to state 461
    expr_named_call         go to state 462
    expr_method_call        go to state 463
    func_addr_expr          go to state 464
    expr_field              go to state 465
    expr_call               go to state 466
    expr                    go to state 800
    expr_mtag               go to state 468
    basic_type_declaration  go to state 469
    make_decl               go to state 470
    make_struct_decl        go to state 471
    make_tuple_call         go to state 472
    make_dim_decl           go to state 473
    make_table_decl         go to state 474
    array_comprehension     go to state 475


State 610

  451 expr_mtag: "$i" '(' . expr ')'

    "struct"                          shift, and go to state 402
    "class"                           shift, and go to state 403
    "true"                            shift, and go to state 404
    "false"                           shift, and go to state 405
    "new"                             shift, and go to state 406
    "typeinfo"                        shift, and go to state 407
    "type"                            shift, and go to state 408
    "array"                           shift, and go to state 409
    "null"                            shift, and go to state 410
    "table"                           shift, and go to state 411
    "deref"                           shift, and go to state 412
    "cast"                            shift, and go to state 413
    "upcast"                          shift, and go to state 414
    "addr"                            shift, and go to state 415
    "reinterpret"                     shift, and go to state 416
    "unsafe"                          shift, and go to state 417
    "fixed_array"                     shift, and go to state 418
    "default"                         shift, and go to state 419
    "bool"                            shift, and go to state 222
    "void"                            shift, and go to state 223
    "string"                          shift, and go to state 224
    "int"                             shift, and go to state 226
    "int2"                            shift, and go to state 227
    "int3"                            shift, and go to state 228
    "int4"                            shift, and go to state 229
    "uint"                            shift, and go to state 230
    "bitfield"                        shift, and go to state 420
    "uint2"                           shift, and go to state 232
    "uint3"                           shift, and go to state 233
    "uint4"                           shift, and go to state 234
    "float"                           shift, and go to state 235
    "float2"                          shift, and go to state 236
    "float3"                          shift, and go to state 237
    "float4"                          shift, and go to state 238
    "range"                           shift, and go to state 239
    "urange"                          shift, and go to state 240
    "range64"                         shift, and go to state 241
    "urange64"                        shift, and go to state 242
    "int64"                           shift, and go to state 244
    "uint64"                          shift, and go to state 245
    "double"                          shift, and go to state 246
    "int8"                            shift, and go to state 249
    "uint8"                           shift, and go to state 250
    "int16"                           shift, and go to state 251
    "uint16"                          shift, and go to state 252
    "tuple"                           shift, and go to state 421
    "variant"                         shift, and go to state 422
    "generator"                       shift, and go to state 423
    "++"                              shift, and go to state 424
    "--"                              shift, and go to state 425
    "::"                              shift, and go to state 55
    "$$"                              shift, and go to state 426
    "$i"                              shift, and go to state 427
    "$v"                              shift, and go to state 428
    "$b"                              shift, and go to state 429
    "$a"                              shift, and go to state 430
    "$c"                              shift, and go to state 431
    "..."                             shift, and go to state 432
    "integer constant"                shift, and go to state 433
    "long integer constant"           shift, and go to state 434
    "unsigned integer constant"       shift, and go to state 435
    "unsigned long integer constant"  shift, and go to state 436
    "unsigned int8 constant"          shift, and go to state 437
    "floating point constant"         shift, and go to state 438
    "double constant"                 shift, and go to state 439
    "name"                            shift, and go to state 56
    "start of the string"             shift, and go to state 440
    "begin of code block"             shift, and go to state 441
    '-'                               shift, and go to state 442
    '+'                               shift, and go to state 443
    '*'                               shift, and go to state 444
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 445
    '!'                               shift, and go to state 446
    '['                               shift, and go to state 447
    '('                               shift, and go to state 448
    '$'                               shift, and go to state 449
    '@'                               shift, and go to state 450

    string_builder          go to state 451
    expr_reader             go to state 452
    expr_call_pipe          go to state 453
    name_in_namespace       go to state 454
    expr_new                go to state 455
    expr_cast               go to state 456
    expr_type_decl          go to state 457
    expr_type_info          go to state 458
    block_or_lambda         go to state 459
    expr_full_block         go to state 460
    expr_numeric_const      go to state 461
    expr_named_call         go to state 462
    expr_method_call        go to state 463
    func_addr_expr          go to state 464
    expr_field              go to state 465
    expr_call               go to state 466
    expr                    go to state 801
    expr_mtag               go to state 468
    basic_type_declaration  go to state 469
    make_decl               go to state 470
    make_struct_decl        go to state 471
    make_tuple_call         go to state 472
    make_dim_decl           go to state 473
    make_table_decl         go to state 474
    array_comprehension     go to state 475


State 611

  452 expr_mtag: "$v" '(' . expr ')'

    "struct"                          shift, and go to state 402
    "class"                           shift, and go to state 403
    "true"                            shift, and go to state 404
    "false"                           shift, and go to state 405
    "new"                             shift, and go to state 406
    "typeinfo"                        shift, and go to state 407
    "type"                            shift, and go to state 408
    "array"                           shift, and go to state 409
    "null"                            shift, and go to state 410
    "table"                           shift, and go to state 411
    "deref"                           shift, and go to state 412
    "cast"                            shift, and go to state 413
    "upcast"                          shift, and go to state 414
    "addr"                            shift, and go to state 415
    "reinterpret"                     shift, and go to state 416
    "unsafe"                          shift, and go to state 417
    "fixed_array"                     shift, and go to state 418
    "default"                         shift, and go to state 419
    "bool"                            shift, and go to state 222
    "void"                            shift, and go to state 223
    "string"                          shift, and go to state 224
    "int"                             shift, and go to state 226
    "int2"                            shift, and go to state 227
    "int3"                            shift, and go to state 228
    "int4"                            shift, and go to state 229
    "uint"                            shift, and go to state 230
    "bitfield"                        shift, and go to state 420
    "uint2"                           shift, and go to state 232
    "uint3"                           shift, and go to state 233
    "uint4"                           shift, and go to state 234
    "float"                           shift, and go to state 235
    "float2"                          shift, and go to state 236
    "float3"                          shift, and go to state 237
    "float4"                          shift, and go to state 238
    "range"                           shift, and go to state 239
    "urange"                          shift, and go to state 240
    "range64"                         shift, and go to state 241
    "urange64"                        shift, and go to state 242
    "int64"                           shift, and go to state 244
    "uint64"                          shift, and go to state 245
    "double"                          shift, and go to state 246
    "int8"                            shift, and go to state 249
    "uint8"                           shift, and go to state 250
    "int16"                           shift, and go to state 251
    "uint16"                          shift, and go to state 252
    "tuple"                           shift, and go to state 421
    "variant"                         shift, and go to state 422
    "generator"                       shift, and go to state 423
    "++"                              shift, and go to state 424
    "--"                              shift, and go to state 425
    "::"                              shift, and go to state 55
    "$$"                              shift, and go to state 426
    "$i"                              shift, and go to state 427
    "$v"                              shift, and go to state 428
    "$b"                              shift, and go to state 429
    "$a"                              shift, and go to state 430
    "$c"                              shift, and go to state 431
    "..."                             shift, and go to state 432
    "integer constant"                shift, and go to state 433
    "long integer constant"           shift, and go to state 434
    "unsigned integer constant"       shift, and go to state 435
    "unsigned long integer constant"  shift, and go to state 436
    "unsigned int8 constant"          shift, and go to state 437
    "floating point constant"         shift, and go to state 438
    "double constant"                 shift, and go to state 439
    "name"                            shift, and go to state 56
    "start of the string"             shift, and go to state 440
    "begin of code block"             shift, and go to state 441
    '-'                               shift, and go to state 442
    '+'                               shift, and go to state 443
    '*'                               shift, and go to state 444
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 445
    '!'                               shift, and go to state 446
    '['                               shift, and go to state 447
    '('                               shift, and go to state 448
    '$'                               shift, and go to state 449
    '@'                               shift, and go to state 450

    string_builder          go to state 451
    expr_reader             go to state 452
    expr_call_pipe          go to state 453
    name_in_namespace       go to state 454
    expr_new                go to state 455
    expr_cast               go to state 456
    expr_type_decl          go to state 457
    expr_type_info          go to state 458
    block_or_lambda         go to state 459
    expr_full_block         go to state 460
    expr_numeric_const      go to state 461
    expr_named_call         go to state 462
    expr_method_call        go to state 463
    func_addr_expr          go to state 464
    expr_field              go to state 465
    expr_call               go to state 466
    expr                    go to state 802
    expr_mtag               go to state 468
    basic_type_declaration  go to state 469
    make_decl               go to state 470
    make_struct_decl        go to state 471
    make_tuple_call         go to state 472
    make_dim_decl           go to state 473
    make_table_decl         go to state 474
    array_comprehension     go to state 475


State 612

  453 expr_mtag: "$b" '(' . expr ')'

    "struct"                          shift, and go to state 402
    "class"                           shift, and go to state 403
    "true"                            shift, and go to state 404
    "false"                           shift, and go to state 405
    "new"                             shift, and go to state 406
    "typeinfo"                        shift, and go to state 407
    "type"                            shift, and go to state 408
    "array"                           shift, and go to state 409
    "null"                            shift, and go to state 410
    "table"                           shift, and go to state 411
    "deref"                           shift, and go to state 412
    "cast"                            shift, and go to state 413
    "upcast"                          shift, and go to state 414
    "addr"                            shift, and go to state 415
    "reinterpret"                     shift, and go to state 416
    "unsafe"                          shift, and go to state 417
    "fixed_array"                     shift, and go to state 418
    "default"                         shift, and go to state 419
    "bool"                            shift, and go to state 222
    "void"                            shift, and go to state 223
    "string"                          shift, and go to state 224
    "int"                             shift, and go to state 226
    "int2"                            shift, and go to state 227
    "int3"                            shift, and go to state 228
    "int4"                            shift, and go to state 229
    "uint"                            shift, and go to state 230
    "bitfield"                        shift, and go to state 420
    "uint2"                           shift, and go to state 232
    "uint3"                           shift, and go to state 233
    "uint4"                           shift, and go to state 234
    "float"                           shift, and go to state 235
    "float2"                          shift, and go to state 236
    "float3"                          shift, and go to state 237
    "float4"                          shift, and go to state 238
    "range"                           shift, and go to state 239
    "urange"                          shift, and go to state 240
    "range64"                         shift, and go to state 241
    "urange64"                        shift, and go to state 242
    "int64"                           shift, and go to state 244
    "uint64"                          shift, and go to state 245
    "double"                          shift, and go to state 246
    "int8"                            shift, and go to state 249
    "uint8"                           shift, and go to state 250
    "int16"                           shift, and go to state 251
    "uint16"                          shift, and go to state 252
    "tuple"                           shift, and go to state 421
    "variant"                         shift, and go to state 422
    "generator"                       shift, and go to state 423
    "++"                              shift, and go to state 424
    "--"                              shift, and go to state 425
    "::"                              shift, and go to state 55
    "$$"                              shift, and go to state 426
    "$i"                              shift, and go to state 427
    "$v"                              shift, and go to state 428
    "$b"                              shift, and go to state 429
    "$a"                              shift, and go to state 430
    "$c"                              shift, and go to state 431
    "..."                             shift, and go to state 432
    "integer constant"                shift, and go to state 433
    "long integer constant"           shift, and go to state 434
    "unsigned integer constant"       shift, and go to state 435
    "unsigned long integer constant"  shift, and go to state 436
    "unsigned int8 constant"          shift, and go to state 437
    "floating point constant"         shift, and go to state 438
    "double constant"                 shift, and go to state 439
    "name"                            shift, and go to state 56
    "start of the string"             shift, and go to state 440
    "begin of code block"             shift, and go to state 441
    '-'                               shift, and go to state 442
    '+'                               shift, and go to state 443
    '*'                               shift, and go to state 444
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 445
    '!'                               shift, and go to state 446
    '['                               shift, and go to state 447
    '('                               shift, and go to state 448
    '$'                               shift, and go to state 449
    '@'                               shift, and go to state 450

    string_builder          go to state 451
    expr_reader             go to state 452
    expr_call_pipe          go to state 453
    name_in_namespace       go to state 454
    expr_new                go to state 455
    expr_cast               go to state 456
    expr_type_decl          go to state 457
    expr_type_info          go to state 458
    block_or_lambda         go to state 459
    expr_full_block         go to state 460
    expr_numeric_const      go to state 461
    expr_named_call         go to state 462
    expr_method_call        go to state 463
    func_addr_expr          go to state 464
    expr_field              go to state 465
    expr_call               go to state 466
    expr                    go to state 803
    expr_mtag               go to state 468
    basic_type_declaration  go to state 469
    make_decl               go to state 470
    make_struct_decl        go to state 471
    make_tuple_call         go to state 472
    make_dim_decl           go to state 473
    make_table_decl         go to state 474
    array_comprehension     go to state 475


State 613

  454 expr_mtag: "$a" '(' . expr ')'

    "struct"                          shift, and go to state 402
    "class"                           shift, and go to state 403
    "true"                            shift, and go to state 404
    "false"                           shift, and go to state 405
    "new"                             shift, and go to state 406
    "typeinfo"                        shift, and go to state 407
    "type"                            shift, and go to state 408
    "array"                           shift, and go to state 409
    "null"                            shift, and go to state 410
    "table"                           shift, and go to state 411
    "deref"                           shift, and go to state 412
    "cast"                            shift, and go to state 413
    "upcast"                          shift, and go to state 414
    "addr"                            shift, and go to state 415
    "reinterpret"                     shift, and go to state 416
    "unsafe"                          shift, and go to state 417
    "fixed_array"                     shift, and go to state 418
    "default"                         shift, and go to state 419
    "bool"                            shift, and go to state 222
    "void"                            shift, and go to state 223
    "string"                          shift, and go to state 224
    "int"                             shift, and go to state 226
    "int2"                            shift, and go to state 227
    "int3"                            shift, and go to state 228
    "int4"                            shift, and go to state 229
    "uint"                            shift, and go to state 230
    "bitfield"                        shift, and go to state 420
    "uint2"                           shift, and go to state 232
    "uint3"                           shift, and go to state 233
    "uint4"                           shift, and go to state 234
    "float"                           shift, and go to state 235
    "float2"                          shift, and go to state 236
    "float3"                          shift, and go to state 237
    "float4"                          shift, and go to state 238
    "range"                           shift, and go to state 239
    "urange"                          shift, and go to state 240
    "range64"                         shift, and go to state 241
    "urange64"                        shift, and go to state 242
    "int64"                           shift, and go to state 244
    "uint64"                          shift, and go to state 245
    "double"                          shift, and go to state 246
    "int8"                            shift, and go to state 249
    "uint8"                           shift, and go to state 250
    "int16"                           shift, and go to state 251
    "uint16"                          shift, and go to state 252
    "tuple"                           shift, and go to state 421
    "variant"                         shift, and go to state 422
    "generator"                       shift, and go to state 423
    "++"                              shift, and go to state 424
    "--"                              shift, and go to state 425
    "::"                              shift, and go to state 55
    "$$"                              shift, and go to state 426
    "$i"                              shift, and go to state 427
    "$v"                              shift, and go to state 428
    "$b"                              shift, and go to state 429
    "$a"                              shift, and go to state 430
    "$c"                              shift, and go to state 431
    "..."                             shift, and go to state 432
    "integer constant"                shift, and go to state 433
    "long integer constant"           shift, and go to state 434
    "unsigned integer constant"       shift, and go to state 435
    "unsigned long integer constant"  shift, and go to state 436
    "unsigned int8 constant"          shift, and go to state 437
    "floating point constant"         shift, and go to state 438
    "double constant"                 shift, and go to state 439
    "name"                            shift, and go to state 56
    "start of the string"             shift, and go to state 440
    "begin of code block"             shift, and go to state 441
    '-'                               shift, and go to state 442
    '+'                               shift, and go to state 443
    '*'                               shift, and go to state 444
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 445
    '!'                               shift, and go to state 446
    '['                               shift, and go to state 447
    '('                               shift, and go to state 448
    '$'                               shift, and go to state 449
    '@'                               shift, and go to state 450

    string_builder          go to state 451
    expr_reader             go to state 452
    expr_call_pipe          go to state 453
    name_in_namespace       go to state 454
    expr_new                go to state 455
    expr_cast               go to state 456
    expr_type_decl          go to state 457
    expr_type_info          go to state 458
    block_or_lambda         go to state 459
    expr_full_block         go to state 460
    expr_numeric_const      go to state 461
    expr_named_call         go to state 462
    expr_method_call        go to state 463
    func_addr_expr          go to state 464
    expr_field              go to state 465
    expr_call               go to state 466
    expr                    go to state 804
    expr_mtag               go to state 468
    basic_type_declaration  go to state 469
    make_decl               go to state 470
    make_struct_decl        go to state 471
    make_tuple_call         go to state 472
    make_dim_decl           go to state 473
    make_table_decl         go to state 474
    array_comprehension     go to state 475


State 614

  456 expr_mtag: "$c" '(' . expr ')' '(' ')'
  457          | "$c" '(' . expr ')' '(' expr_list ')'

    "struct"                          shift, and go to state 402
    "class"                           shift, and go to state 403
    "true"                            shift, and go to state 404
    "false"                           shift, and go to state 405
    "new"                             shift, and go to state 406
    "typeinfo"                        shift, and go to state 407
    "type"                            shift, and go to state 408
    "array"                           shift, and go to state 409
    "null"                            shift, and go to state 410
    "table"                           shift, and go to state 411
    "deref"                           shift, and go to state 412
    "cast"                            shift, and go to state 413
    "upcast"                          shift, and go to state 414
    "addr"                            shift, and go to state 415
    "reinterpret"                     shift, and go to state 416
    "unsafe"                          shift, and go to state 417
    "fixed_array"                     shift, and go to state 418
    "default"                         shift, and go to state 419
    "bool"                            shift, and go to state 222
    "void"                            shift, and go to state 223
    "string"                          shift, and go to state 224
    "int"                             shift, and go to state 226
    "int2"                            shift, and go to state 227
    "int3"                            shift, and go to state 228
    "int4"                            shift, and go to state 229
    "uint"                            shift, and go to state 230
    "bitfield"                        shift, and go to state 420
    "uint2"                           shift, and go to state 232
    "uint3"                           shift, and go to state 233
    "uint4"                           shift, and go to state 234
    "float"                           shift, and go to state 235
    "float2"                          shift, and go to state 236
    "float3"                          shift, and go to state 237
    "float4"                          shift, and go to state 238
    "range"                           shift, and go to state 239
    "urange"                          shift, and go to state 240
    "range64"                         shift, and go to state 241
    "urange64"                        shift, and go to state 242
    "int64"                           shift, and go to state 244
    "uint64"                          shift, and go to state 245
    "double"                          shift, and go to state 246
    "int8"                            shift, and go to state 249
    "uint8"                           shift, and go to state 250
    "int16"                           shift, and go to state 251
    "uint16"                          shift, and go to state 252
    "tuple"                           shift, and go to state 421
    "variant"                         shift, and go to state 422
    "generator"                       shift, and go to state 423
    "++"                              shift, and go to state 424
    "--"                              shift, and go to state 425
    "::"                              shift, and go to state 55
    "$$"                              shift, and go to state 426
    "$i"                              shift, and go to state 427
    "$v"                              shift, and go to state 428
    "$b"                              shift, and go to state 429
    "$a"                              shift, and go to state 430
    "$c"                              shift, and go to state 431
    "..."                             shift, and go to state 432
    "integer constant"                shift, and go to state 433
    "long integer constant"           shift, and go to state 434
    "unsigned integer constant"       shift, and go to state 435
    "unsigned long integer constant"  shift, and go to state 436
    "unsigned int8 constant"          shift, and go to state 437
    "floating point constant"         shift, and go to state 438
    "double constant"                 shift, and go to state 439
    "name"                            shift, and go to state 56
    "start of the string"             shift, and go to state 440
    "begin of code block"             shift, and go to state 441
    '-'                               shift, and go to state 442
    '+'                               shift, and go to state 443
    '*'                               shift, and go to state 444
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 445
    '!'                               shift, and go to state 446
    '['                               shift, and go to state 447
    '('                               shift, and go to state 448
    '$'                               shift, and go to state 449
    '@'                               shift, and go to state 450

    string_builder          go to state 451
    expr_reader             go to state 452
    expr_call_pipe          go to state 453
    name_in_namespace       go to state 454
    expr_new                go to state 455
    expr_cast               go to state 456
    expr_type_decl          go to state 457
    expr_type_info          go to state 458
    block_or_lambda         go to state 459
    expr_full_block         go to state 460
    expr_numeric_const      go to state 461
    expr_named_call         go to state 462
    expr_method_call        go to state 463
    func_addr_expr          go to state 464
    expr_field              go to state 465
    expr_call               go to state 466
    expr                    go to state 805
    expr_mtag               go to state 468
    basic_type_declaration  go to state 469
    make_decl               go to state 470
    make_struct_decl        go to state 471
    make_tuple_call         go to state 472
    make_dim_decl           go to state 473
    make_table_decl         go to state 474
    array_comprehension     go to state 475


State 615

   30 string_builder_body: string_builder_body . character_sequence
   31                    | string_builder_body . "{" expr "}"
   32 string_builder: "start of the string" string_builder_body . "end of the string"

    STRING_CHARACTER      shift, and go to state 153
    STRING_CHARACTER_ESC  shift, and go to state 154
    "end of the string"   shift, and go to state 806
    "{"                   shift, and go to state 807

    character_sequence  go to state 808


State 616

  781 array_comprehension: "begin of code block" "for" . variable_name_with_pos_list "in" expr_list "end of expression" make_map_tuple array_comprehension_where "end of code block"

    "$i"    shift, and go to state 706
    "name"  shift, and go to state 707

    variable_name_with_pos_list  go to state 809


State 617

  339 expr_method_call: expr . "->" "name" '(' ')'
  340                 | expr . "->" "name" '(' expr_list ')'
  350 expr_field: expr . '.' "name"
  351           | expr . '.' '.' "name"
  352           | expr . '.' "name" '(' ')'
  353           | expr . '.' "name" '(' expr_list ')'
  354           | expr . '.' basic_type_declaration '(' ')'
  355           | expr . '.' basic_type_declaration '(' expr_list ')'
  358           | expr . '.' $@17 error $@18
  380 expr: expr . "<<" expr
  381     | expr . ">>" expr
  382     | expr . "<<<" expr
  383     | expr . ">>>" expr
  384     | expr . '+' expr
  385     | expr . '-' expr
  386     | expr . '*' expr
  387     | expr . '/' expr
  388     | expr . '%' expr
  389     | expr . '<' expr
  390     | expr . '>' expr
  391     | expr . "==" expr
  392     | expr . "!=" expr
  393     | expr . "<=" expr
  394     | expr . ">=" expr
  395     | expr . '&' expr
  396     | expr . '|' expr
  397     | expr . '^' expr
  398     | expr . "&&" expr
  399     | expr . "||" expr
  400     | expr . "^^" expr
  401     | expr . ".." expr
  404     | expr . "++"
  405     | expr . "--"
  407     | expr . '[' expr ']'
  408     | expr . '.' '[' expr ']'
  409     | expr . "?[" expr ']'
  410     | expr . '.' "?[" expr ']'
  411     | expr . "?." "name"
  412     | expr . '.' "?." "name"
  421     | expr . "??" expr
  422     | expr . '?' expr ':' expr
  425     | expr . "is" "type" '<' $@19 type_declaration_no_options '>' $@20
  426     | expr . "is" basic_type_declaration
  427     | expr . "is" "name"
  428     | expr . "as" "name"
  431     | expr . "as" "type" '<' $@21 type_declaration '>' $@22
  432     | expr . "as" basic_type_declaration
  433     | expr . '?' "as" "name"
  436     | expr . '?' "as" "type" '<' $@23 type_declaration '>' $@24
  437     | expr . '?' "as" basic_type_declaration
  445     | expr . "<|" expr
  446     | expr . "|>" expr
  447     | expr . "|>" basic_type_declaration
  458 expr_mtag: expr . '.' "$f" '(' expr ')'
  459          | expr . "?." "$f" '(' expr ')'
  460          | expr . '.' '.' "$f" '(' expr ')'
  461          | expr . '.' "?." "$f" '(' expr ')'
  462          | expr . "as" "$f" '(' expr ')'
  463          | expr . '?' "as" "$f" '(' expr ')'
  464          | expr . "is" "$f" '(' expr ')'
  745 make_map_tuple: expr . "=>" expr
  746               | expr .

    "is"   shift, and go to state 637
    "as"   shift, and go to state 638
    "<<"   shift, and go to state 639
    ">>"   shift, and go to state 640
    "++"   shift, and go to state 641
    "--"   shift, and go to state 642
    "<="   shift, and go to state 643
    ">="   shift, and go to state 644
    "=="   shift, and go to state 645
    "!="   shift, and go to state 646
    "->"   shift, and go to state 647
    "??"   shift, and go to state 648
    "?."   shift, and go to state 649
    "?["   shift, and go to state 650
    "<|"   shift, and go to state 651
    "|>"   shift, and go to state 652
    "<<<"  shift, and go to state 653
    ">>>"  shift, and go to state 654
    "=>"   shift, and go to state 810
    "&&"   shift, and go to state 655
    "||"   shift, and go to state 656
    "^^"   shift, and go to state 657
    ".."   shift, and go to state 658
    '?'    shift, and go to state 659
    '|'    shift, and go to state 660
    '^'    shift, and go to state 661
    '&'    shift, and go to state 662
    '<'    shift, and go to state 663
    '>'    shift, and go to state 664
    '-'    shift, and go to state 665
    '+'    shift, and go to state 666
    '*'    shift, and go to state 667
    '/'    shift, and go to state 668
    '%'    shift, and go to state 669
    '.'    shift, and go to state 670
    '['    shift, and go to state 671

    $default  reduce using rule 746 (make_map_tuple)


State 618

  769 expr_map_tuple_list: make_map_tuple .

    $default  reduce using rule 769 (expr_map_tuple_list)


State 619

  770 expr_map_tuple_list: expr_map_tuple_list . ',' make_map_tuple
  771 make_table_decl: "begin of code block" expr_map_tuple_list . optional_comma "end of code block"

    ','  shift, and go to state 811

    $default  reduce using rule 777 (optional_comma)

    optional_comma  go to state 812


State 620

  339 expr_method_call: expr . "->" "name" '(' ')'
  340                 | expr . "->" "name" '(' expr_list ')'
  350 expr_field: expr . '.' "name"
  351           | expr . '.' '.' "name"
  352           | expr . '.' "name" '(' ')'
  353           | expr . '.' "name" '(' expr_list ')'
  354           | expr . '.' basic_type_declaration '(' ')'
  355           | expr . '.' basic_type_declaration '(' expr_list ')'
  358           | expr . '.' $@17 error $@18
  379 expr: '-' expr .
  380     | expr . "<<" expr
  381     | expr . ">>" expr
  382     | expr . "<<<" expr
  383     | expr . ">>>" expr
  384     | expr . '+' expr
  385     | expr . '-' expr
  386     | expr . '*' expr
  387     | expr . '/' expr
  388     | expr . '%' expr
  389     | expr . '<' expr
  390     | expr . '>' expr
  391     | expr . "==" expr
  392     | expr . "!=" expr
  393     | expr . "<=" expr
  394     | expr . ">=" expr
  395     | expr . '&' expr
  396     | expr . '|' expr
  397     | expr . '^' expr
  398     | expr . "&&" expr
  399     | expr . "||" expr
  400     | expr . "^^" expr
  401     | expr . ".." expr
  404     | expr . "++"
  405     | expr . "--"
  407     | expr . '[' expr ']'
  408     | expr . '.' '[' expr ']'
  409     | expr . "?[" expr ']'
  410     | expr . '.' "?[" expr ']'
  411     | expr . "?." "name"
  412     | expr . '.' "?." "name"
  421     | expr . "??" expr
  422     | expr . '?' expr ':' expr
  425     | expr . "is" "type" '<' $@19 type_declaration_no_options '>' $@20
  426     | expr . "is" basic_type_declaration
  427     | expr . "is" "name"
  428     | expr . "as" "name"
  431     | expr . "as" "type" '<' $@21 type_declaration '>' $@22
  432     | expr . "as" basic_type_declaration
  433     | expr . '?' "as" "name"
  436     | expr . '?' "as" "type" '<' $@23 type_declaration '>' $@24
  437     | expr . '?' "as" basic_type_declaration
  445     | expr . "<|" expr
  446     | expr . "|>" expr
  447     | expr . "|>" basic_type_declaration
  458 expr_mtag: expr . '.' "$f" '(' expr ')'
  459          | expr . "?." "$f" '(' expr ')'
  460          | expr . '.' '.' "$f" '(' expr ')'
  461          | expr . '.' "?." "$f" '(' expr ')'
  462          | expr . "as" "$f" '(' expr ')'
  463          | expr . '?' "as" "$f" '(' expr ')'
  464          | expr . "is" "$f" '(' expr ')'

    "is"  shift, and go to state 637
    "as"  shift, and go to state 638
    "++"  shift, and go to state 641
    "--"  shift, and go to state 642
    "->"  shift, and go to state 647
    "?."  shift, and go to state 649
    "?["  shift, and go to state 650
    "<|"  shift, and go to state 651
    "|>"  shift, and go to state 652
    '.'   shift, and go to state 670
    '['   shift, and go to state 671

    $default  reduce using rule 379 (expr)


State 621

  339 expr_method_call: expr . "->" "name" '(' ')'
  340                 | expr . "->" "name" '(' expr_list ')'
  350 expr_field: expr . '.' "name"
  351           | expr . '.' '.' "name"
  352           | expr . '.' "name" '(' ')'
  353           | expr . '.' "name" '(' expr_list ')'
  354           | expr . '.' basic_type_declaration '(' ')'
  355           | expr . '.' basic_type_declaration '(' expr_list ')'
  358           | expr . '.' $@17 error $@18
  378 expr: '+' expr .
  380     | expr . "<<" expr
  381     | expr . ">>" expr
  382     | expr . "<<<" expr
  383     | expr . ">>>" expr
  384     | expr . '+' expr
  385     | expr . '-' expr
  386     | expr . '*' expr
  387     | expr . '/' expr
  388     | expr . '%' expr
  389     | expr . '<' expr
  390     | expr . '>' expr
  391     | expr . "==" expr
  392     | expr . "!=" expr
  393     | expr . "<=" expr
  394     | expr . ">=" expr
  395     | expr . '&' expr
  396     | expr . '|' expr
  397     | expr . '^' expr
  398     | expr . "&&" expr
  399     | expr . "||" expr
  400     | expr . "^^" expr
  401     | expr . ".." expr
  404     | expr . "++"
  405     | expr . "--"
  407     | expr . '[' expr ']'
  408     | expr . '.' '[' expr ']'
  409     | expr . "?[" expr ']'
  410     | expr . '.' "?[" expr ']'
  411     | expr . "?." "name"
  412     | expr . '.' "?." "name"
  421     | expr . "??" expr
  422     | expr . '?' expr ':' expr
  425     | expr . "is" "type" '<' $@19 type_declaration_no_options '>' $@20
  426     | expr . "is" basic_type_declaration
  427     | expr . "is" "name"
  428     | expr . "as" "name"
  431     | expr . "as" "type" '<' $@21 type_declaration '>' $@22
  432     | expr . "as" basic_type_declaration
  433     | expr . '?' "as" "name"
  436     | expr . '?' "as" "type" '<' $@23 type_declaration '>' $@24
  437     | expr . '?' "as" basic_type_declaration
  445     | expr . "<|" expr
  446     | expr . "|>" expr
  447     | expr . "|>" basic_type_declaration
  458 expr_mtag: expr . '.' "$f" '(' expr ')'
  459          | expr . "?." "$f" '(' expr ')'
  460          | expr . '.' '.' "$f" '(' expr ')'
  461          | expr . '.' "?." "$f" '(' expr ')'
  462          | expr . "as" "$f" '(' expr ')'
  463          | expr . '?' "as" "$f" '(' expr ')'
  464          | expr . "is" "$f" '(' expr ')'

    "is"  shift, and go to state 637
    "as"  shift, and go to state 638
    "++"  shift, and go to state 641
    "--"  shift, and go to state 642
    "->"  shift, and go to state 647
    "?."  shift, and go to state 649
    "?["  shift, and go to state 650
    "<|"  shift, and go to state 651
    "|>"  shift, and go to state 652
    '.'   shift, and go to state 670
    '['   shift, and go to state 671

    $default  reduce using rule 378 (expr)


State 622

  339 expr_method_call: expr . "->" "name" '(' ')'
  340                 | expr . "->" "name" '(' expr_list ')'
  350 expr_field: expr . '.' "name"
  351           | expr . '.' '.' "name"
  352           | expr . '.' "name" '(' ')'
  353           | expr . '.' "name" '(' expr_list ')'
  354           | expr . '.' basic_type_declaration '(' ')'
  355           | expr . '.' basic_type_declaration '(' expr_list ')'
  358           | expr . '.' $@17 error $@18
  380 expr: expr . "<<" expr
  381     | expr . ">>" expr
  382     | expr . "<<<" expr
  383     | expr . ">>>" expr
  384     | expr . '+' expr
  385     | expr . '-' expr
  386     | expr . '*' expr
  387     | expr . '/' expr
  388     | expr . '%' expr
  389     | expr . '<' expr
  390     | expr . '>' expr
  391     | expr . "==" expr
  392     | expr . "!=" expr
  393     | expr . "<=" expr
  394     | expr . ">=" expr
  395     | expr . '&' expr
  396     | expr . '|' expr
  397     | expr . '^' expr
  398     | expr . "&&" expr
  399     | expr . "||" expr
  400     | expr . "^^" expr
  401     | expr . ".." expr
  404     | expr . "++"
  405     | expr . "--"
  407     | expr . '[' expr ']'
  408     | expr . '.' '[' expr ']'
  409     | expr . "?[" expr ']'
  410     | expr . '.' "?[" expr ']'
  411     | expr . "?." "name"
  412     | expr . '.' "?." "name"
  415     | '*' expr .
  421     | expr . "??" expr
  422     | expr . '?' expr ':' expr
  425     | expr . "is" "type" '<' $@19 type_declaration_no_options '>' $@20
  426     | expr . "is" basic_type_declaration
  427     | expr . "is" "name"
  428     | expr . "as" "name"
  431     | expr . "as" "type" '<' $@21 type_declaration '>' $@22
  432     | expr . "as" basic_type_declaration
  433     | expr . '?' "as" "name"
  436     | expr . '?' "as" "type" '<' $@23 type_declaration '>' $@24
  437     | expr . '?' "as" basic_type_declaration
  445     | expr . "<|" expr
  446     | expr . "|>" expr
  447     | expr . "|>" basic_type_declaration
  458 expr_mtag: expr . '.' "$f" '(' expr ')'
  459          | expr . "?." "$f" '(' expr ')'
  460          | expr . '.' '.' "$f" '(' expr ')'
  461          | expr . '.' "?." "$f" '(' expr ')'
  462          | expr . "as" "$f" '(' expr ')'
  463          | expr . '?' "as" "$f" '(' expr ')'
  464          | expr . "is" "$f" '(' expr ')'

    "?."  shift, and go to state 649
    "?["  shift, and go to state 650
    '.'   shift, and go to state 670
    '['   shift, and go to state 671

    $default  reduce using rule 415 (expr)


State 623

  339 expr_method_call: expr . "->" "name" '(' ')'
  340                 | expr . "->" "name" '(' expr_list ')'
  350 expr_field: expr . '.' "name"
  351           | expr . '.' '.' "name"
  352           | expr . '.' "name" '(' ')'
  353           | expr . '.' "name" '(' expr_list ')'
  354           | expr . '.' basic_type_declaration '(' ')'
  355           | expr . '.' basic_type_declaration '(' expr_list ')'
  358           | expr . '.' $@17 error $@18
  377 expr: '~' expr .
  380     | expr . "<<" expr
  381     | expr . ">>" expr
  382     | expr . "<<<" expr
  383     | expr . ">>>" expr
  384     | expr . '+' expr
  385     | expr . '-' expr
  386     | expr . '*' expr
  387     | expr . '/' expr
  388     | expr . '%' expr
  389     | expr . '<' expr
  390     | expr . '>' expr
  391     | expr . "==" expr
  392     | expr . "!=" expr
  393     | expr . "<=" expr
  394     | expr . ">=" expr
  395     | expr . '&' expr
  396     | expr . '|' expr
  397     | expr . '^' expr
  398     | expr . "&&" expr
  399     | expr . "||" expr
  400     | expr . "^^" expr
  401     | expr . ".." expr
  404     | expr . "++"
  405     | expr . "--"
  407     | expr . '[' expr ']'
  408     | expr . '.' '[' expr ']'
  409     | expr . "?[" expr ']'
  410     | expr . '.' "?[" expr ']'
  411     | expr . "?." "name"
  412     | expr . '.' "?." "name"
  421     | expr . "??" expr
  422     | expr . '?' expr ':' expr
  425     | expr . "is" "type" '<' $@19 type_declaration_no_options '>' $@20
  426     | expr . "is" basic_type_declaration
  427     | expr . "is" "name"
  428     | expr . "as" "name"
  431     | expr . "as" "type" '<' $@21 type_declaration '>' $@22
  432     | expr . "as" basic_type_declaration
  433     | expr . '?' "as" "name"
  436     | expr . '?' "as" "type" '<' $@23 type_declaration '>' $@24
  437     | expr . '?' "as" basic_type_declaration
  445     | expr . "<|" expr
  446     | expr . "|>" expr
  447     | expr . "|>" basic_type_declaration
  458 expr_mtag: expr . '.' "$f" '(' expr ')'
  459          | expr . "?." "$f" '(' expr ')'
  460          | expr . '.' '.' "$f" '(' expr ')'
  461          | expr . '.' "?." "$f" '(' expr ')'
  462          | expr . "as" "$f" '(' expr ')'
  463          | expr . '?' "as" "$f" '(' expr ')'
  464          | expr . "is" "$f" '(' expr ')'

    "is"  shift, and go to state 637
    "as"  shift, and go to state 638
    "++"  shift, and go to state 641
    "--"  shift, and go to state 642
    "->"  shift, and go to state 647
    "?."  shift, and go to state 649
    "?["  shift, and go to state 650
    "<|"  shift, and go to state 651
    "|>"  shift, and go to state 652
    '.'   shift, and go to state 670
    '['   shift, and go to state 671

    $default  reduce using rule 377 (expr)


State 624

  339 expr_method_call: expr . "->" "name" '(' ')'
  340                 | expr . "->" "name" '(' expr_list ')'
  350 expr_field: expr . '.' "name"
  351           | expr . '.' '.' "name"
  352           | expr . '.' "name" '(' ')'
  353           | expr . '.' "name" '(' expr_list ')'
  354           | expr . '.' basic_type_declaration '(' ')'
  355           | expr . '.' basic_type_declaration '(' expr_list ')'
  358           | expr . '.' $@17 error $@18
  376 expr: '!' expr .
  380     | expr . "<<" expr
  381     | expr . ">>" expr
  382     | expr . "<<<" expr
  383     | expr . ">>>" expr
  384     | expr . '+' expr
  385     | expr . '-' expr
  386     | expr . '*' expr
  387     | expr . '/' expr
  388     | expr . '%' expr
  389     | expr . '<' expr
  390     | expr . '>' expr
  391     | expr . "==" expr
  392     | expr . "!=" expr
  393     | expr . "<=" expr
  394     | expr . ">=" expr
  395     | expr . '&' expr
  396     | expr . '|' expr
  397     | expr . '^' expr
  398     | expr . "&&" expr
  399     | expr . "||" expr
  400     | expr . "^^" expr
  401     | expr . ".." expr
  404     | expr . "++"
  405     | expr . "--"
  407     | expr . '[' expr ']'
  408     | expr . '.' '[' expr ']'
  409     | expr . "?[" expr ']'
  410     | expr . '.' "?[" expr ']'
  411     | expr . "?." "name"
  412     | expr . '.' "?." "name"
  421     | expr . "??" expr
  422     | expr . '?' expr ':' expr
  425     | expr . "is" "type" '<' $@19 type_declaration_no_options '>' $@20
  426     | expr . "is" basic_type_declaration
  427     | expr . "is" "name"
  428     | expr . "as" "name"
  431     | expr . "as" "type" '<' $@21 type_declaration '>' $@22
  432     | expr . "as" basic_type_declaration
  433     | expr . '?' "as" "name"
  436     | expr . '?' "as" "type" '<' $@23 type_declaration '>' $@24
  437     | expr . '?' "as" basic_type_declaration
  445     | expr . "<|" expr
  446     | expr . "|>" expr
  447     | expr . "|>" basic_type_declaration
  458 expr_mtag: expr . '.' "$f" '(' expr ')'
  459          | expr . "?." "$f" '(' expr ')'
  460          | expr . '.' '.' "$f" '(' expr ')'
  461          | expr . '.' "?." "$f" '(' expr ')'
  462          | expr . "as" "$f" '(' expr ')'
  463          | expr . '?' "as" "$f" '(' expr ')'
  464          | expr . "is" "$f" '(' expr ')'

    "is"  shift, and go to state 637
    "as"  shift, and go to state 638
    "++"  shift, and go to state 641
    "--"  shift, and go to state 642
    "->"  shift, and go to state 647
    "?."  shift, and go to state 649
    "?["  shift, and go to state 650
    "<|"  shift, and go to state 651
    "|>"  shift, and go to state 652
    '.'   shift, and go to state 670
    '['   shift, and go to state 671

    $default  reduce using rule 376 (expr)


State 625

  779 array_comprehension: '[' "for" . variable_name_with_pos_list "in" expr_list "end of expression" expr array_comprehension_where ']'

    "$i"    shift, and go to state 706
    "name"  shift, and go to state 707

    variable_name_with_pos_list  go to state 813


State 626

  780 array_comprehension: '[' "iterator" . "for" variable_name_with_pos_list "in" expr_list "end of expression" expr array_comprehension_where ']'

    "for"  shift, and go to state 814


State 627

  292 expr_list: expr_list . ',' expr
  751 make_dim_decl: '[' expr_list . optional_comma ']'

    ','  shift, and go to state 815

    $default  reduce using rule 777 (optional_comma)

    optional_comma  go to state 816


State 628

  291 expr_list: expr .
  339 expr_method_call: expr . "->" "name" '(' ')'
  340                 | expr . "->" "name" '(' expr_list ')'
  350 expr_field: expr . '.' "name"
  351           | expr . '.' '.' "name"
  352           | expr . '.' "name" '(' ')'
  353           | expr . '.' "name" '(' expr_list ')'
  354           | expr . '.' basic_type_declaration '(' ')'
  355           | expr . '.' basic_type_declaration '(' expr_list ')'
  358           | expr . '.' $@17 error $@18
  380 expr: expr . "<<" expr
  381     | expr . ">>" expr
  382     | expr . "<<<" expr
  383     | expr . ">>>" expr
  384     | expr . '+' expr
  385     | expr . '-' expr
  386     | expr . '*' expr
  387     | expr . '/' expr
  388     | expr . '%' expr
  389     | expr . '<' expr
  390     | expr . '>' expr
  391     | expr . "==" expr
  392     | expr . "!=" expr
  393     | expr . "<=" expr
  394     | expr . ">=" expr
  395     | expr . '&' expr
  396     | expr . '|' expr
  397     | expr . '^' expr
  398     | expr . "&&" expr
  399     | expr . "||" expr
  400     | expr . "^^" expr
  401     | expr . ".." expr
  404     | expr . "++"
  405     | expr . "--"
  407     | expr . '[' expr ']'
  408     | expr . '.' '[' expr ']'
  409     | expr . "?[" expr ']'
  410     | expr . '.' "?[" expr ']'
  411     | expr . "?." "name"
  412     | expr . '.' "?." "name"
  421     | expr . "??" expr
  422     | expr . '?' expr ':' expr
  425     | expr . "is" "type" '<' $@19 type_declaration_no_options '>' $@20
  426     | expr . "is" basic_type_declaration
  427     | expr . "is" "name"
  428     | expr . "as" "name"
  431     | expr . "as" "type" '<' $@21 type_declaration '>' $@22
  432     | expr . "as" basic_type_declaration
  433     | expr . '?' "as" "name"
  436     | expr . '?' "as" "type" '<' $@23 type_declaration '>' $@24
  437     | expr . '?' "as" basic_type_declaration
  445     | expr . "<|" expr
  446     | expr . "|>" expr
  447     | expr . "|>" basic_type_declaration
  458 expr_mtag: expr . '.' "$f" '(' expr ')'
  459          | expr . "?." "$f" '(' expr ')'
  460          | expr . '.' '.' "$f" '(' expr ')'
  461          | expr . '.' "?." "$f" '(' expr ')'
  462          | expr . "as" "$f" '(' expr ')'
  463          | expr . '?' "as" "$f" '(' expr ')'
  464          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 637
    "as"   shift, and go to state 638
    "<<"   shift, and go to state 639
    ">>"   shift, and go to state 640
    "++"   shift, and go to state 641
    "--"   shift, and go to state 642
    "<="   shift, and go to state 643
    ">="   shift, and go to state 644
    "=="   shift, and go to state 645
    "!="   shift, and go to state 646
    "->"   shift, and go to state 647
    "??"   shift, and go to state 648
    "?."   shift, and go to state 649
    "?["   shift, and go to state 650
    "<|"   shift, and go to state 651
    "|>"   shift, and go to state 652
    "<<<"  shift, and go to state 653
    ">>>"  shift, and go to state 654
    "&&"   shift, and go to state 655
    "||"   shift, and go to state 656
    "^^"   shift, and go to state 657
    ".."   shift, and go to state 658
    '?'    shift, and go to state 659
    '|'    shift, and go to state 660
    '^'    shift, and go to state 661
    '&'    shift, and go to state 662
    '<'    shift, and go to state 663
    '>'    shift, and go to state 664
    '-'    shift, and go to state 665
    '+'    shift, and go to state 666
    '*'    shift, and go to state 667
    '/'    shift, and go to state 668
    '%'    shift, and go to state 669
    '.'    shift, and go to state 670
    '['    shift, and go to state 671

    $default  reduce using rule 291 (expr_list)


State 629

  292 expr_list: expr_list . ',' expr
  406 expr: '(' expr_list . optional_comma ')'

    ','  shift, and go to state 815

    $default  reduce using rule 777 (optional_comma)

    optional_comma  go to state 817


State 630

  298 block_or_lambda: '@' '@' .
  343 func_addr_expr: '@' '@' . func_addr_name
  346               | '@' '@' . '<' $@13 type_declaration_no_options '>' $@14 func_addr_name
  349               | '@' '@' . '<' $@15 optional_function_argument_list optional_function_type '>' $@16 func_addr_name
  465 expr_mtag: '@' '@' . "$c" '(' expr ')'

    "::"    shift, and go to state 55
    "$i"    shift, and go to state 818
    "$c"    shift, and go to state 819
    "name"  shift, and go to state 56
    '<'     shift, and go to state 820

    $default  reduce using rule 298 (block_or_lambda)

    name_in_namespace  go to state 821
    func_addr_name     go to state 822


State 631

  337 expr_named_call: name_in_namespace '(' . '[' make_struct_fields ']' ')'
  338                | name_in_namespace '(' . expr_list ',' '[' make_struct_fields ']' ')'
  359 expr_call: name_in_namespace '(' . ')'
  360          | name_in_namespace '(' . "uninitialized" ')'
  361          | name_in_namespace '(' . make_struct_single ')'
  362          | name_in_namespace '(' . "uninitialized" make_struct_single ')'
  363          | name_in_namespace '(' . expr_list ')'

    "struct"                          shift, and go to state 402
    "class"                           shift, and go to state 403
    "true"                            shift, and go to state 404
    "false"                           shift, and go to state 405
    "new"                             shift, and go to state 406
    "typeinfo"                        shift, and go to state 407
    "type"                            shift, and go to state 408
    "array"                           shift, and go to state 409
    "null"                            shift, and go to state 410
    "table"                           shift, and go to state 411
    "deref"                           shift, and go to state 412
    "cast"                            shift, and go to state 413
    "upcast"                          shift, and go to state 414
    "addr"                            shift, and go to state 415
    "reinterpret"                     shift, and go to state 416
    "unsafe"                          shift, and go to state 417
    "fixed_array"                     shift, and go to state 418
    "default"                         shift, and go to state 419
    "uninitialized"                   shift, and go to state 823
    "bool"                            shift, and go to state 222
    "void"                            shift, and go to state 223
    "string"                          shift, and go to state 224
    "int"                             shift, and go to state 226
    "int2"                            shift, and go to state 227
    "int3"                            shift, and go to state 228
    "int4"                            shift, and go to state 229
    "uint"                            shift, and go to state 230
    "bitfield"                        shift, and go to state 420
    "uint2"                           shift, and go to state 232
    "uint3"                           shift, and go to state 233
    "uint4"                           shift, and go to state 234
    "float"                           shift, and go to state 235
    "float2"                          shift, and go to state 236
    "float3"                          shift, and go to state 237
    "float4"                          shift, and go to state 238
    "range"                           shift, and go to state 239
    "urange"                          shift, and go to state 240
    "range64"                         shift, and go to state 241
    "urange64"                        shift, and go to state 242
    "int64"                           shift, and go to state 244
    "uint64"                          shift, and go to state 245
    "double"                          shift, and go to state 246
    "int8"                            shift, and go to state 249
    "uint8"                           shift, and go to state 250
    "int16"                           shift, and go to state 251
    "uint16"                          shift, and go to state 252
    "tuple"                           shift, and go to state 421
    "variant"                         shift, and go to state 422
    "generator"                       shift, and go to state 423
    "++"                              shift, and go to state 424
    "--"                              shift, and go to state 425
    "::"                              shift, and go to state 55
    "$$"                              shift, and go to state 426
    "$i"                              shift, and go to state 427
    "$v"                              shift, and go to state 428
    "$b"                              shift, and go to state 429
    "$a"                              shift, and go to state 430
    "$c"                              shift, and go to state 431
    "$f"                              shift, and go to state 824
    "..."                             shift, and go to state 432
    "integer constant"                shift, and go to state 433
    "long integer constant"           shift, and go to state 434
    "unsigned integer constant"       shift, and go to state 435
    "unsigned long integer constant"  shift, and go to state 436
    "unsigned int8 constant"          shift, and go to state 437
    "floating point constant"         shift, and go to state 438
    "double constant"                 shift, and go to state 439
    "name"                            shift, and go to state 825
    "start of the string"             shift, and go to state 440
    "begin of code block"             shift, and go to state 441
    '-'                               shift, and go to state 442
    '+'                               shift, and go to state 443
    '*'                               shift, and go to state 444
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 445
    '!'                               shift, and go to state 446
    '['                               shift, and go to state 826
    '('                               shift, and go to state 448
    ')'                               shift, and go to state 827
    '$'                               shift, and go to state 449
    '@'                               shift, and go to state 450

    string_builder          go to state 451
    expr_reader             go to state 452
    expr_call_pipe          go to state 453
    name_in_namespace       go to state 454
    expr_new                go to state 455
    expr_cast               go to state 456
    expr_type_decl          go to state 457
    expr_type_info          go to state 458
    expr_list               go to state 828
    block_or_lambda         go to state 459
    expr_full_block         go to state 460
    expr_numeric_const      go to state 461
    expr_named_call         go to state 462
    expr_method_call        go to state 463
    func_addr_expr          go to state 464
    expr_field              go to state 465
    expr_call               go to state 466
    expr                    go to state 628
    expr_mtag               go to state 468
    basic_type_declaration  go to state 469
    make_decl               go to state 470
    make_struct_fields      go to state 829
    make_struct_single      go to state 830
    make_struct_decl        go to state 471
    make_tuple_call         go to state 472
    make_dim_decl           go to state 473
    make_table_decl         go to state 474
    array_comprehension     go to state 475


State 632

  308 expr_full_block: block_or_lambda optional_annotation_list . optional_capture_list optional_function_argument_list optional_function_type block_or_simple_block

    "capture"  shift, and go to state 831

    $default  reduce using rule 306 (optional_capture_list)

    optional_capture_list  go to state 832


State 633

  310 expr_full_block_assumed_piped: "begin of code block" . expressions "end of code block"

    $default  reduce using rule 233 (expressions)

    expressions  go to state 833


State 634

  297 block_or_lambda: '@' .
  298                | '@' . '@'

    '@'  shift, and go to state 834

    $default  reduce using rule 297 (block_or_lambda)


State 635

  309 expr_full_block_assumed_piped: block_or_lambda . optional_annotation_list optional_capture_list optional_function_argument_list optional_function_type expression_block

    '['  shift, and go to state 15

    $default  reduce using rule 113 (optional_annotation_list)

    optional_annotation_list  go to state 835


State 636

  214 expr_call_pipe: expr_call expr_full_block_assumed_piped .

    $default  reduce using rule 214 (expr_call_pipe)


State 637

  425 expr: expr "is" . "type" '<' $@19 type_declaration_no_options '>' $@20
  426     | expr "is" . basic_type_declaration
  427     | expr "is" . "name"
  464 expr_mtag: expr "is" . "$f" '(' expr ')'

    "type"      shift, and go to state 836
    "bool"      shift, and go to state 222
    "void"      shift, and go to state 223
    "string"    shift, and go to state 224
    "int"       shift, and go to state 226
    "int2"      shift, and go to state 227
    "int3"      shift, and go to state 228
    "int4"      shift, and go to state 229
    "uint"      shift, and go to state 230
    "bitfield"  shift, and go to state 420
    "uint2"     shift, and go to state 232
    "uint3"     shift, and go to state 233
    "uint4"     shift, and go to state 234
    "float"     shift, and go to state 235
    "float2"    shift, and go to state 236
    "float3"    shift, and go to state 237
    "float4"    shift, and go to state 238
    "range"     shift, and go to state 239
    "urange"    shift, and go to state 240
    "range64"   shift, and go to state 241
    "urange64"  shift, and go to state 242
    "int64"     shift, and go to state 244
    "uint64"    shift, and go to state 245
    "double"    shift, and go to state 246
    "int8"      shift, and go to state 249
    "uint8"     shift, and go to state 250
    "int16"     shift, and go to state 251
    "uint16"    shift, and go to state 252
    "$f"        shift, and go to state 837
    "name"      shift, and go to state 838

    basic_type_declaration  go to state 839


State 638

  428 expr: expr "as" . "name"
  431     | expr "as" . "type" '<' $@21 type_declaration '>' $@22
  432     | expr "as" . basic_type_declaration
  462 expr_mtag: expr "as" . "$f" '(' expr ')'

    "type"      shift, and go to state 840
    "bool"      shift, and go to state 222
    "void"      shift, and go to state 223
    "string"    shift, and go to state 224
    "int"       shift, and go to state 226
    "int2"      shift, and go to state 227
    "int3"      shift, and go to state 228
    "int4"      shift, and go to state 229
    "uint"      shift, and go to state 230
    "bitfield"  shift, and go to state 420
    "uint2"     shift, and go to state 232
    "uint3"     shift, and go to state 233
    "uint4"     shift, and go to state 234
    "float"     shift, and go to state 235
    "float2"    shift, and go to state 236
    "float3"    shift, and go to state 237
    "float4"    shift, and go to state 238
    "range"     shift, and go to state 239
    "urange"    shift, and go to state 240
    "range64"   shift, and go to state 241
    "urange64"  shift, and go to state 242
    "int64"     shift, and go to state 244
    "uint64"    shift, and go to state 245
    "double"    shift, and go to state 246
    "int8"      shift, and go to state 249
    "uint8"     shift, and go to state 250
    "int16"     shift, and go to state 251
    "uint16"    shift, and go to state 252
    "$f"        shift, and go to state 841
    "name"      shift, and go to state 842

    basic_type_declaration  go to state 843


State 639

  380 expr: expr "<<" . expr

    "struct"                          shift, and go to state 402
    "class"                           shift, and go to state 403
    "true"                            shift, and go to state 404
    "false"                           shift, and go to state 405
    "new"                             shift, and go to state 406
    "typeinfo"                        shift, and go to state 407
    "type"                            shift, and go to state 408
    "array"                           shift, and go to state 409
    "null"                            shift, and go to state 410
    "table"                           shift, and go to state 411
    "deref"                           shift, and go to state 412
    "cast"                            shift, and go to state 413
    "upcast"                          shift, and go to state 414
    "addr"                            shift, and go to state 415
    "reinterpret"                     shift, and go to state 416
    "unsafe"                          shift, and go to state 417
    "fixed_array"                     shift, and go to state 418
    "default"                         shift, and go to state 419
    "bool"                            shift, and go to state 222
    "void"                            shift, and go to state 223
    "string"                          shift, and go to state 224
    "int"                             shift, and go to state 226
    "int2"                            shift, and go to state 227
    "int3"                            shift, and go to state 228
    "int4"                            shift, and go to state 229
    "uint"                            shift, and go to state 230
    "bitfield"                        shift, and go to state 420
    "uint2"                           shift, and go to state 232
    "uint3"                           shift, and go to state 233
    "uint4"                           shift, and go to state 234
    "float"                           shift, and go to state 235
    "float2"                          shift, and go to state 236
    "float3"                          shift, and go to state 237
    "float4"                          shift, and go to state 238
    "range"                           shift, and go to state 239
    "urange"                          shift, and go to state 240
    "range64"                         shift, and go to state 241
    "urange64"                        shift, and go to state 242
    "int64"                           shift, and go to state 244
    "uint64"                          shift, and go to state 245
    "double"                          shift, and go to state 246
    "int8"                            shift, and go to state 249
    "uint8"                           shift, and go to state 250
    "int16"                           shift, and go to state 251
    "uint16"                          shift, and go to state 252
    "tuple"                           shift, and go to state 421
    "variant"                         shift, and go to state 422
    "generator"                       shift, and go to state 423
    "++"                              shift, and go to state 424
    "--"                              shift, and go to state 425
    "::"                              shift, and go to state 55
    "$$"                              shift, and go to state 426
    "$i"                              shift, and go to state 427
    "$v"                              shift, and go to state 428
    "$b"                              shift, and go to state 429
    "$a"                              shift, and go to state 430
    "$c"                              shift, and go to state 431
    "..."                             shift, and go to state 432
    "integer constant"                shift, and go to state 433
    "long integer constant"           shift, and go to state 434
    "unsigned integer constant"       shift, and go to state 435
    "unsigned long integer constant"  shift, and go to state 436
    "unsigned int8 constant"          shift, and go to state 437
    "floating point constant"         shift, and go to state 438
    "double constant"                 shift, and go to state 439
    "name"                            shift, and go to state 56
    "start of the string"             shift, and go to state 440
    "begin of code block"             shift, and go to state 441
    '-'                               shift, and go to state 442
    '+'                               shift, and go to state 443
    '*'                               shift, and go to state 444
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 445
    '!'                               shift, and go to state 446
    '['                               shift, and go to state 447
    '('                               shift, and go to state 448
    '$'                               shift, and go to state 449
    '@'                               shift, and go to state 450

    string_builder          go to state 451
    expr_reader             go to state 452
    expr_call_pipe          go to state 453
    name_in_namespace       go to state 454
    expr_new                go to state 455
    expr_cast               go to state 456
    expr_type_decl          go to state 457
    expr_type_info          go to state 458
    block_or_lambda         go to state 459
    expr_full_block         go to state 460
    expr_numeric_const      go to state 461
    expr_named_call         go to state 462
    expr_method_call        go to state 463
    func_addr_expr          go to state 464
    expr_field              go to state 465
    expr_call               go to state 466
    expr                    go to state 844
    expr_mtag               go to state 468
    basic_type_declaration  go to state 469
    make_decl               go to state 470
    make_struct_decl        go to state 471
    make_tuple_call         go to state 472
    make_dim_decl           go to state 473
    make_table_decl         go to state 474
    array_comprehension     go to state 475


State 640

  381 expr: expr ">>" . expr

    "struct"                          shift, and go to state 402
    "class"                           shift, and go to state 403
    "true"                            shift, and go to state 404
    "false"                           shift, and go to state 405
    "new"                             shift, and go to state 406
    "typeinfo"                        shift, and go to state 407
    "type"                            shift, and go to state 408
    "array"                           shift, and go to state 409
    "null"                            shift, and go to state 410
    "table"                           shift, and go to state 411
    "deref"                           shift, and go to state 412
    "cast"                            shift, and go to state 413
    "upcast"                          shift, and go to state 414
    "addr"                            shift, and go to state 415
    "reinterpret"                     shift, and go to state 416
    "unsafe"                          shift, and go to state 417
    "fixed_array"                     shift, and go to state 418
    "default"                         shift, and go to state 419
    "bool"                            shift, and go to state 222
    "void"                            shift, and go to state 223
    "string"                          shift, and go to state 224
    "int"                             shift, and go to state 226
    "int2"                            shift, and go to state 227
    "int3"                            shift, and go to state 228
    "int4"                            shift, and go to state 229
    "uint"                            shift, and go to state 230
    "bitfield"                        shift, and go to state 420
    "uint2"                           shift, and go to state 232
    "uint3"                           shift, and go to state 233
    "uint4"                           shift, and go to state 234
    "float"                           shift, and go to state 235
    "float2"                          shift, and go to state 236
    "float3"                          shift, and go to state 237
    "float4"                          shift, and go to state 238
    "range"                           shift, and go to state 239
    "urange"                          shift, and go to state 240
    "range64"                         shift, and go to state 241
    "urange64"                        shift, and go to state 242
    "int64"                           shift, and go to state 244
    "uint64"                          shift, and go to state 245
    "double"                          shift, and go to state 246
    "int8"                            shift, and go to state 249
    "uint8"                           shift, and go to state 250
    "int16"                           shift, and go to state 251
    "uint16"                          shift, and go to state 252
    "tuple"                           shift, and go to state 421
    "variant"                         shift, and go to state 422
    "generator"                       shift, and go to state 423
    "++"                              shift, and go to state 424
    "--"                              shift, and go to state 425
    "::"                              shift, and go to state 55
    "$$"                              shift, and go to state 426
    "$i"                              shift, and go to state 427
    "$v"                              shift, and go to state 428
    "$b"                              shift, and go to state 429
    "$a"                              shift, and go to state 430
    "$c"                              shift, and go to state 431
    "..."                             shift, and go to state 432
    "integer constant"                shift, and go to state 433
    "long integer constant"           shift, and go to state 434
    "unsigned integer constant"       shift, and go to state 435
    "unsigned long integer constant"  shift, and go to state 436
    "unsigned int8 constant"          shift, and go to state 437
    "floating point constant"         shift, and go to state 438
    "double constant"                 shift, and go to state 439
    "name"                            shift, and go to state 56
    "start of the string"             shift, and go to state 440
    "begin of code block"             shift, and go to state 441
    '-'                               shift, and go to state 442
    '+'                               shift, and go to state 443
    '*'                               shift, and go to state 444
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 445
    '!'                               shift, and go to state 446
    '['                               shift, and go to state 447
    '('                               shift, and go to state 448
    '$'                               shift, and go to state 449
    '@'                               shift, and go to state 450

    string_builder          go to state 451
    expr_reader             go to state 452
    expr_call_pipe          go to state 453
    name_in_namespace       go to state 454
    expr_new                go to state 455
    expr_cast               go to state 456
    expr_type_decl          go to state 457
    expr_type_info          go to state 458
    block_or_lambda         go to state 459
    expr_full_block         go to state 460
    expr_numeric_const      go to state 461
    expr_named_call         go to state 462
    expr_method_call        go to state 463
    func_addr_expr          go to state 464
    expr_field              go to state 465
    expr_call               go to state 466
    expr                    go to state 845
    expr_mtag               go to state 468
    basic_type_declaration  go to state 469
    make_decl               go to state 470
    make_struct_decl        go to state 471
    make_tuple_call         go to state 472
    make_dim_decl           go to state 473
    make_table_decl         go to state 474
    array_comprehension     go to state 475


State 641

  404 expr: expr "++" .

    $default  reduce using rule 404 (expr)


State 642

  405 expr: expr "--" .

    $default  reduce using rule 405 (expr)


State 643

  393 expr: expr "<=" . expr

    "struct"                          shift, and go to state 402
    "class"                           shift, and go to state 403
    "true"                            shift, and go to state 404
    "false"                           shift, and go to state 405
    "new"                             shift, and go to state 406
    "typeinfo"                        shift, and go to state 407
    "type"                            shift, and go to state 408
    "array"                           shift, and go to state 409
    "null"                            shift, and go to state 410
    "table"                           shift, and go to state 411
    "deref"                           shift, and go to state 412
    "cast"                            shift, and go to state 413
    "upcast"                          shift, and go to state 414
    "addr"                            shift, and go to state 415
    "reinterpret"                     shift, and go to state 416
    "unsafe"                          shift, and go to state 417
    "fixed_array"                     shift, and go to state 418
    "default"                         shift, and go to state 419
    "bool"                            shift, and go to state 222
    "void"                            shift, and go to state 223
    "string"                          shift, and go to state 224
    "int"                             shift, and go to state 226
    "int2"                            shift, and go to state 227
    "int3"                            shift, and go to state 228
    "int4"                            shift, and go to state 229
    "uint"                            shift, and go to state 230
    "bitfield"                        shift, and go to state 420
    "uint2"                           shift, and go to state 232
    "uint3"                           shift, and go to state 233
    "uint4"                           shift, and go to state 234
    "float"                           shift, and go to state 235
    "float2"                          shift, and go to state 236
    "float3"                          shift, and go to state 237
    "float4"                          shift, and go to state 238
    "range"                           shift, and go to state 239
    "urange"                          shift, and go to state 240
    "range64"                         shift, and go to state 241
    "urange64"                        shift, and go to state 242
    "int64"                           shift, and go to state 244
    "uint64"                          shift, and go to state 245
    "double"                          shift, and go to state 246
    "int8"                            shift, and go to state 249
    "uint8"                           shift, and go to state 250
    "int16"                           shift, and go to state 251
    "uint16"                          shift, and go to state 252
    "tuple"                           shift, and go to state 421
    "variant"                         shift, and go to state 422
    "generator"                       shift, and go to state 423
    "++"                              shift, and go to state 424
    "--"                              shift, and go to state 425
    "::"                              shift, and go to state 55
    "$$"                              shift, and go to state 426
    "$i"                              shift, and go to state 427
    "$v"                              shift, and go to state 428
    "$b"                              shift, and go to state 429
    "$a"                              shift, and go to state 430
    "$c"                              shift, and go to state 431
    "..."                             shift, and go to state 432
    "integer constant"                shift, and go to state 433
    "long integer constant"           shift, and go to state 434
    "unsigned integer constant"       shift, and go to state 435
    "unsigned long integer constant"  shift, and go to state 436
    "unsigned int8 constant"          shift, and go to state 437
    "floating point constant"         shift, and go to state 438
    "double constant"                 shift, and go to state 439
    "name"                            shift, and go to state 56
    "start of the string"             shift, and go to state 440
    "begin of code block"             shift, and go to state 441
    '-'                               shift, and go to state 442
    '+'                               shift, and go to state 443
    '*'                               shift, and go to state 444
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 445
    '!'                               shift, and go to state 446
    '['                               shift, and go to state 447
    '('                               shift, and go to state 448
    '$'                               shift, and go to state 449
    '@'                               shift, and go to state 450

    string_builder          go to state 451
    expr_reader             go to state 452
    expr_call_pipe          go to state 453
    name_in_namespace       go to state 454
    expr_new                go to state 455
    expr_cast               go to state 456
    expr_type_decl          go to state 457
    expr_type_info          go to state 458
    block_or_lambda         go to state 459
    expr_full_block         go to state 460
    expr_numeric_const      go to state 461
    expr_named_call         go to state 462
    expr_method_call        go to state 463
    func_addr_expr          go to state 464
    expr_field              go to state 465
    expr_call               go to state 466
    expr                    go to state 846
    expr_mtag               go to state 468
    basic_type_declaration  go to state 469
    make_decl               go to state 470
    make_struct_decl        go to state 471
    make_tuple_call         go to state 472
    make_dim_decl           go to state 473
    make_table_decl         go to state 474
    array_comprehension     go to state 475


State 644

  394 expr: expr ">=" . expr

    "struct"                          shift, and go to state 402
    "class"                           shift, and go to state 403
    "true"                            shift, and go to state 404
    "false"                           shift, and go to state 405
    "new"                             shift, and go to state 406
    "typeinfo"                        shift, and go to state 407
    "type"                            shift, and go to state 408
    "array"                           shift, and go to state 409
    "null"                            shift, and go to state 410
    "table"                           shift, and go to state 411
    "deref"                           shift, and go to state 412
    "cast"                            shift, and go to state 413
    "upcast"                          shift, and go to state 414
    "addr"                            shift, and go to state 415
    "reinterpret"                     shift, and go to state 416
    "unsafe"                          shift, and go to state 417
    "fixed_array"                     shift, and go to state 418
    "default"                         shift, and go to state 419
    "bool"                            shift, and go to state 222
    "void"                            shift, and go to state 223
    "string"                          shift, and go to state 224
    "int"                             shift, and go to state 226
    "int2"                            shift, and go to state 227
    "int3"                            shift, and go to state 228
    "int4"                            shift, and go to state 229
    "uint"                            shift, and go to state 230
    "bitfield"                        shift, and go to state 420
    "uint2"                           shift, and go to state 232
    "uint3"                           shift, and go to state 233
    "uint4"                           shift, and go to state 234
    "float"                           shift, and go to state 235
    "float2"                          shift, and go to state 236
    "float3"                          shift, and go to state 237
    "float4"                          shift, and go to state 238
    "range"                           shift, and go to state 239
    "urange"                          shift, and go to state 240
    "range64"                         shift, and go to state 241
    "urange64"                        shift, and go to state 242
    "int64"                           shift, and go to state 244
    "uint64"                          shift, and go to state 245
    "double"                          shift, and go to state 246
    "int8"                            shift, and go to state 249
    "uint8"                           shift, and go to state 250
    "int16"                           shift, and go to state 251
    "uint16"                          shift, and go to state 252
    "tuple"                           shift, and go to state 421
    "variant"                         shift, and go to state 422
    "generator"                       shift, and go to state 423
    "++"                              shift, and go to state 424
    "--"                              shift, and go to state 425
    "::"                              shift, and go to state 55
    "$$"                              shift, and go to state 426
    "$i"                              shift, and go to state 427
    "$v"                              shift, and go to state 428
    "$b"                              shift, and go to state 429
    "$a"                              shift, and go to state 430
    "$c"                              shift, and go to state 431
    "..."                             shift, and go to state 432
    "integer constant"                shift, and go to state 433
    "long integer constant"           shift, and go to state 434
    "unsigned integer constant"       shift, and go to state 435
    "unsigned long integer constant"  shift, and go to state 436
    "unsigned int8 constant"          shift, and go to state 437
    "floating point constant"         shift, and go to state 438
    "double constant"                 shift, and go to state 439
    "name"                            shift, and go to state 56
    "start of the string"             shift, and go to state 440
    "begin of code block"             shift, and go to state 441
    '-'                               shift, and go to state 442
    '+'                               shift, and go to state 443
    '*'                               shift, and go to state 444
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 445
    '!'                               shift, and go to state 446
    '['                               shift, and go to state 447
    '('                               shift, and go to state 448
    '$'                               shift, and go to state 449
    '@'                               shift, and go to state 450

    string_builder          go to state 451
    expr_reader             go to state 452
    expr_call_pipe          go to state 453
    name_in_namespace       go to state 454
    expr_new                go to state 455
    expr_cast               go to state 456
    expr_type_decl          go to state 457
    expr_type_info          go to state 458
    block_or_lambda         go to state 459
    expr_full_block         go to state 460
    expr_numeric_const      go to state 461
    expr_named_call         go to state 462
    expr_method_call        go to state 463
    func_addr_expr          go to state 464
    expr_field              go to state 465
    expr_call               go to state 466
    expr                    go to state 847
    expr_mtag               go to state 468
    basic_type_declaration  go to state 469
    make_decl               go to state 470
    make_struct_decl        go to state 471
    make_tuple_call         go to state 472
    make_dim_decl           go to state 473
    make_table_decl         go to state 474
    array_comprehension     go to state 475


State 645

  391 expr: expr "==" . expr

    "struct"                          shift, and go to state 402
    "class"                           shift, and go to state 403
    "true"                            shift, and go to state 404
    "false"                           shift, and go to state 405
    "new"                             shift, and go to state 406
    "typeinfo"                        shift, and go to state 407
    "type"                            shift, and go to state 408
    "array"                           shift, and go to state 409
    "null"                            shift, and go to state 410
    "table"                           shift, and go to state 411
    "deref"                           shift, and go to state 412
    "cast"                            shift, and go to state 413
    "upcast"                          shift, and go to state 414
    "addr"                            shift, and go to state 415
    "reinterpret"                     shift, and go to state 416
    "unsafe"                          shift, and go to state 417
    "fixed_array"                     shift, and go to state 418
    "default"                         shift, and go to state 419
    "bool"                            shift, and go to state 222
    "void"                            shift, and go to state 223
    "string"                          shift, and go to state 224
    "int"                             shift, and go to state 226
    "int2"                            shift, and go to state 227
    "int3"                            shift, and go to state 228
    "int4"                            shift, and go to state 229
    "uint"                            shift, and go to state 230
    "bitfield"                        shift, and go to state 420
    "uint2"                           shift, and go to state 232
    "uint3"                           shift, and go to state 233
    "uint4"                           shift, and go to state 234
    "float"                           shift, and go to state 235
    "float2"                          shift, and go to state 236
    "float3"                          shift, and go to state 237
    "float4"                          shift, and go to state 238
    "range"                           shift, and go to state 239
    "urange"                          shift, and go to state 240
    "range64"                         shift, and go to state 241
    "urange64"                        shift, and go to state 242
    "int64"                           shift, and go to state 244
    "uint64"                          shift, and go to state 245
    "double"                          shift, and go to state 246
    "int8"                            shift, and go to state 249
    "uint8"                           shift, and go to state 250
    "int16"                           shift, and go to state 251
    "uint16"                          shift, and go to state 252
    "tuple"                           shift, and go to state 421
    "variant"                         shift, and go to state 422
    "generator"                       shift, and go to state 423
    "++"                              shift, and go to state 424
    "--"                              shift, and go to state 425
    "::"                              shift, and go to state 55
    "$$"                              shift, and go to state 426
    "$i"                              shift, and go to state 427
    "$v"                              shift, and go to state 428
    "$b"                              shift, and go to state 429
    "$a"                              shift, and go to state 430
    "$c"                              shift, and go to state 431
    "..."                             shift, and go to state 432
    "integer constant"                shift, and go to state 433
    "long integer constant"           shift, and go to state 434
    "unsigned integer constant"       shift, and go to state 435
    "unsigned long integer constant"  shift, and go to state 436
    "unsigned int8 constant"          shift, and go to state 437
    "floating point constant"         shift, and go to state 438
    "double constant"                 shift, and go to state 439
    "name"                            shift, and go to state 56
    "start of the string"             shift, and go to state 440
    "begin of code block"             shift, and go to state 441
    '-'                               shift, and go to state 442
    '+'                               shift, and go to state 443
    '*'                               shift, and go to state 444
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 445
    '!'                               shift, and go to state 446
    '['                               shift, and go to state 447
    '('                               shift, and go to state 448
    '$'                               shift, and go to state 449
    '@'                               shift, and go to state 450

    string_builder          go to state 451
    expr_reader             go to state 452
    expr_call_pipe          go to state 453
    name_in_namespace       go to state 454
    expr_new                go to state 455
    expr_cast               go to state 456
    expr_type_decl          go to state 457
    expr_type_info          go to state 458
    block_or_lambda         go to state 459
    expr_full_block         go to state 460
    expr_numeric_const      go to state 461
    expr_named_call         go to state 462
    expr_method_call        go to state 463
    func_addr_expr          go to state 464
    expr_field              go to state 465
    expr_call               go to state 466
    expr                    go to state 848
    expr_mtag               go to state 468
    basic_type_declaration  go to state 469
    make_decl               go to state 470
    make_struct_decl        go to state 471
    make_tuple_call         go to state 472
    make_dim_decl           go to state 473
    make_table_decl         go to state 474
    array_comprehension     go to state 475


State 646

  392 expr: expr "!=" . expr

    "struct"                          shift, and go to state 402
    "class"                           shift, and go to state 403
    "true"                            shift, and go to state 404
    "false"                           shift, and go to state 405
    "new"                             shift, and go to state 406
    "typeinfo"                        shift, and go to state 407
    "type"                            shift, and go to state 408
    "array"                           shift, and go to state 409
    "null"                            shift, and go to state 410
    "table"                           shift, and go to state 411
    "deref"                           shift, and go to state 412
    "cast"                            shift, and go to state 413
    "upcast"                          shift, and go to state 414
    "addr"                            shift, and go to state 415
    "reinterpret"                     shift, and go to state 416
    "unsafe"                          shift, and go to state 417
    "fixed_array"                     shift, and go to state 418
    "default"                         shift, and go to state 419
    "bool"                            shift, and go to state 222
    "void"                            shift, and go to state 223
    "string"                          shift, and go to state 224
    "int"                             shift, and go to state 226
    "int2"                            shift, and go to state 227
    "int3"                            shift, and go to state 228
    "int4"                            shift, and go to state 229
    "uint"                            shift, and go to state 230
    "bitfield"                        shift, and go to state 420
    "uint2"                           shift, and go to state 232
    "uint3"                           shift, and go to state 233
    "uint4"                           shift, and go to state 234
    "float"                           shift, and go to state 235
    "float2"                          shift, and go to state 236
    "float3"                          shift, and go to state 237
    "float4"                          shift, and go to state 238
    "range"                           shift, and go to state 239
    "urange"                          shift, and go to state 240
    "range64"                         shift, and go to state 241
    "urange64"                        shift, and go to state 242
    "int64"                           shift, and go to state 244
    "uint64"                          shift, and go to state 245
    "double"                          shift, and go to state 246
    "int8"                            shift, and go to state 249
    "uint8"                           shift, and go to state 250
    "int16"                           shift, and go to state 251
    "uint16"                          shift, and go to state 252
    "tuple"                           shift, and go to state 421
    "variant"                         shift, and go to state 422
    "generator"                       shift, and go to state 423
    "++"                              shift, and go to state 424
    "--"                              shift, and go to state 425
    "::"                              shift, and go to state 55
    "$$"                              shift, and go to state 426
    "$i"                              shift, and go to state 427
    "$v"                              shift, and go to state 428
    "$b"                              shift, and go to state 429
    "$a"                              shift, and go to state 430
    "$c"                              shift, and go to state 431
    "..."                             shift, and go to state 432
    "integer constant"                shift, and go to state 433
    "long integer constant"           shift, and go to state 434
    "unsigned integer constant"       shift, and go to state 435
    "unsigned long integer constant"  shift, and go to state 436
    "unsigned int8 constant"          shift, and go to state 437
    "floating point constant"         shift, and go to state 438
    "double constant"                 shift, and go to state 439
    "name"                            shift, and go to state 56
    "start of the string"             shift, and go to state 440
    "begin of code block"             shift, and go to state 441
    '-'                               shift, and go to state 442
    '+'                               shift, and go to state 443
    '*'                               shift, and go to state 444
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 445
    '!'                               shift, and go to state 446
    '['                               shift, and go to state 447
    '('                               shift, and go to state 448
    '$'                               shift, and go to state 449
    '@'                               shift, and go to state 450

    string_builder          go to state 451
    expr_reader             go to state 452
    expr_call_pipe          go to state 453
    name_in_namespace       go to state 454
    expr_new                go to state 455
    expr_cast               go to state 456
    expr_type_decl          go to state 457
    expr_type_info          go to state 458
    block_or_lambda         go to state 459
    expr_full_block         go to state 460
    expr_numeric_const      go to state 461
    expr_named_call         go to state 462
    expr_method_call        go to state 463
    func_addr_expr          go to state 464
    expr_field              go to state 465
    expr_call               go to state 466
    expr                    go to state 849
    expr_mtag               go to state 468
    basic_type_declaration  go to state 469
    make_decl               go to state 470
    make_struct_decl        go to state 471
    make_tuple_call         go to state 472
    make_dim_decl           go to state 473
    make_table_decl         go to state 474
    array_comprehension     go to state 475


State 647

  339 expr_method_call: expr "->" . "name" '(' ')'
  340                 | expr "->" . "name" '(' expr_list ')'

    "name"  shift, and go to state 850


State 648

  421 expr: expr "??" . expr

    "struct"                          shift, and go to state 402
    "class"                           shift, and go to state 403
    "true"                            shift, and go to state 404
    "false"                           shift, and go to state 405
    "new"                             shift, and go to state 406
    "typeinfo"                        shift, and go to state 407
    "type"                            shift, and go to state 408
    "array"                           shift, and go to state 409
    "null"                            shift, and go to state 410
    "table"                           shift, and go to state 411
    "deref"                           shift, and go to state 412
    "cast"                            shift, and go to state 413
    "upcast"                          shift, and go to state 414
    "addr"                            shift, and go to state 415
    "reinterpret"                     shift, and go to state 416
    "unsafe"                          shift, and go to state 417
    "fixed_array"                     shift, and go to state 418
    "default"                         shift, and go to state 419
    "bool"                            shift, and go to state 222
    "void"                            shift, and go to state 223
    "string"                          shift, and go to state 224
    "int"                             shift, and go to state 226
    "int2"                            shift, and go to state 227
    "int3"                            shift, and go to state 228
    "int4"                            shift, and go to state 229
    "uint"                            shift, and go to state 230
    "bitfield"                        shift, and go to state 420
    "uint2"                           shift, and go to state 232
    "uint3"                           shift, and go to state 233
    "uint4"                           shift, and go to state 234
    "float"                           shift, and go to state 235
    "float2"                          shift, and go to state 236
    "float3"                          shift, and go to state 237
    "float4"                          shift, and go to state 238
    "range"                           shift, and go to state 239
    "urange"                          shift, and go to state 240
    "range64"                         shift, and go to state 241
    "urange64"                        shift, and go to state 242
    "int64"                           shift, and go to state 244
    "uint64"                          shift, and go to state 245
    "double"                          shift, and go to state 246
    "int8"                            shift, and go to state 249
    "uint8"                           shift, and go to state 250
    "int16"                           shift, and go to state 251
    "uint16"                          shift, and go to state 252
    "tuple"                           shift, and go to state 421
    "variant"                         shift, and go to state 422
    "generator"                       shift, and go to state 423
    "++"                              shift, and go to state 424
    "--"                              shift, and go to state 425
    "::"                              shift, and go to state 55
    "$$"                              shift, and go to state 426
    "$i"                              shift, and go to state 427
    "$v"                              shift, and go to state 428
    "$b"                              shift, and go to state 429
    "$a"                              shift, and go to state 430
    "$c"                              shift, and go to state 431
    "..."                             shift, and go to state 432
    "integer constant"                shift, and go to state 433
    "long integer constant"           shift, and go to state 434
    "unsigned integer constant"       shift, and go to state 435
    "unsigned long integer constant"  shift, and go to state 436
    "unsigned int8 constant"          shift, and go to state 437
    "floating point constant"         shift, and go to state 438
    "double constant"                 shift, and go to state 439
    "name"                            shift, and go to state 56
    "start of the string"             shift, and go to state 440
    "begin of code block"             shift, and go to state 441
    '-'                               shift, and go to state 442
    '+'                               shift, and go to state 443
    '*'                               shift, and go to state 444
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 445
    '!'                               shift, and go to state 446
    '['                               shift, and go to state 447
    '('                               shift, and go to state 448
    '$'                               shift, and go to state 449
    '@'                               shift, and go to state 450

    string_builder          go to state 451
    expr_reader             go to state 452
    expr_call_pipe          go to state 453
    name_in_namespace       go to state 454
    expr_new                go to state 455
    expr_cast               go to state 456
    expr_type_decl          go to state 457
    expr_type_info          go to state 458
    block_or_lambda         go to state 459
    expr_full_block         go to state 460
    expr_numeric_const      go to state 461
    expr_named_call         go to state 462
    expr_method_call        go to state 463
    func_addr_expr          go to state 464
    expr_field              go to state 465
    expr_call               go to state 466
    expr                    go to state 851
    expr_mtag               go to state 468
    basic_type_declaration  go to state 469
    make_decl               go to state 470
    make_struct_decl        go to state 471
    make_tuple_call         go to state 472
    make_dim_decl           go to state 473
    make_table_decl         go to state 474
    array_comprehension     go to state 475


State 649

  411 expr: expr "?." . "name"
  459 expr_mtag: expr "?." . "$f" '(' expr ')'

    "$f"    shift, and go to state 852
    "name"  shift, and go to state 853


State 650

  409 expr: expr "?[" . expr ']'

    "struct"                          shift, and go to state 402
    "class"                           shift, and go to state 403
    "true"                            shift, and go to state 404
    "false"                           shift, and go to state 405
    "new"                             shift, and go to state 406
    "typeinfo"                        shift, and go to state 407
    "type"                            shift, and go to state 408
    "array"                           shift, and go to state 409
    "null"                            shift, and go to state 410
    "table"                           shift, and go to state 411
    "deref"                           shift, and go to state 412
    "cast"                            shift, and go to state 413
    "upcast"                          shift, and go to state 414
    "addr"                            shift, and go to state 415
    "reinterpret"                     shift, and go to state 416
    "unsafe"                          shift, and go to state 417
    "fixed_array"                     shift, and go to state 418
    "default"                         shift, and go to state 419
    "bool"                            shift, and go to state 222
    "void"                            shift, and go to state 223
    "string"                          shift, and go to state 224
    "int"                             shift, and go to state 226
    "int2"                            shift, and go to state 227
    "int3"                            shift, and go to state 228
    "int4"                            shift, and go to state 229
    "uint"                            shift, and go to state 230
    "bitfield"                        shift, and go to state 420
    "uint2"                           shift, and go to state 232
    "uint3"                           shift, and go to state 233
    "uint4"                           shift, and go to state 234
    "float"                           shift, and go to state 235
    "float2"                          shift, and go to state 236
    "float3"                          shift, and go to state 237
    "float4"                          shift, and go to state 238
    "range"                           shift, and go to state 239
    "urange"                          shift, and go to state 240
    "range64"                         shift, and go to state 241
    "urange64"                        shift, and go to state 242
    "int64"                           shift, and go to state 244
    "uint64"                          shift, and go to state 245
    "double"                          shift, and go to state 246
    "int8"                            shift, and go to state 249
    "uint8"                           shift, and go to state 250
    "int16"                           shift, and go to state 251
    "uint16"                          shift, and go to state 252
    "tuple"                           shift, and go to state 421
    "variant"                         shift, and go to state 422
    "generator"                       shift, and go to state 423
    "++"                              shift, and go to state 424
    "--"                              shift, and go to state 425
    "::"                              shift, and go to state 55
    "$$"                              shift, and go to state 426
    "$i"                              shift, and go to state 427
    "$v"                              shift, and go to state 428
    "$b"                              shift, and go to state 429
    "$a"                              shift, and go to state 430
    "$c"                              shift, and go to state 431
    "..."                             shift, and go to state 432
    "integer constant"                shift, and go to state 433
    "long integer constant"           shift, and go to state 434
    "unsigned integer constant"       shift, and go to state 435
    "unsigned long integer constant"  shift, and go to state 436
    "unsigned int8 constant"          shift, and go to state 437
    "floating point constant"         shift, and go to state 438
    "double constant"                 shift, and go to state 439
    "name"                            shift, and go to state 56
    "start of the string"             shift, and go to state 440
    "begin of code block"             shift, and go to state 441
    '-'                               shift, and go to state 442
    '+'                               shift, and go to state 443
    '*'                               shift, and go to state 444
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 445
    '!'                               shift, and go to state 446
    '['                               shift, and go to state 447
    '('                               shift, and go to state 448
    '$'                               shift, and go to state 449
    '@'                               shift, and go to state 450

    string_builder          go to state 451
    expr_reader             go to state 452
    expr_call_pipe          go to state 453
    name_in_namespace       go to state 454
    expr_new                go to state 455
    expr_cast               go to state 456
    expr_type_decl          go to state 457
    expr_type_info          go to state 458
    block_or_lambda         go to state 459
    expr_full_block         go to state 460
    expr_numeric_const      go to state 461
    expr_named_call         go to state 462
    expr_method_call        go to state 463
    func_addr_expr          go to state 464
    expr_field              go to state 465
    expr_call               go to state 466
    expr                    go to state 854
    expr_mtag               go to state 468
    basic_type_declaration  go to state 469
    make_decl               go to state 470
    make_struct_decl        go to state 471
    make_tuple_call         go to state 472
    make_dim_decl           go to state 473
    make_table_decl         go to state 474
    array_comprehension     go to state 475


State 651

  445 expr: expr "<|" . expr

    "struct"                          shift, and go to state 402
    "class"                           shift, and go to state 403
    "true"                            shift, and go to state 404
    "false"                           shift, and go to state 405
    "new"                             shift, and go to state 406
    "typeinfo"                        shift, and go to state 407
    "type"                            shift, and go to state 408
    "array"                           shift, and go to state 409
    "null"                            shift, and go to state 410
    "table"                           shift, and go to state 411
    "deref"                           shift, and go to state 412
    "cast"                            shift, and go to state 413
    "upcast"                          shift, and go to state 414
    "addr"                            shift, and go to state 415
    "reinterpret"                     shift, and go to state 416
    "unsafe"                          shift, and go to state 417
    "fixed_array"                     shift, and go to state 418
    "default"                         shift, and go to state 419
    "bool"                            shift, and go to state 222
    "void"                            shift, and go to state 223
    "string"                          shift, and go to state 224
    "int"                             shift, and go to state 226
    "int2"                            shift, and go to state 227
    "int3"                            shift, and go to state 228
    "int4"                            shift, and go to state 229
    "uint"                            shift, and go to state 230
    "bitfield"                        shift, and go to state 420
    "uint2"                           shift, and go to state 232
    "uint3"                           shift, and go to state 233
    "uint4"                           shift, and go to state 234
    "float"                           shift, and go to state 235
    "float2"                          shift, and go to state 236
    "float3"                          shift, and go to state 237
    "float4"                          shift, and go to state 238
    "range"                           shift, and go to state 239
    "urange"                          shift, and go to state 240
    "range64"                         shift, and go to state 241
    "urange64"                        shift, and go to state 242
    "int64"                           shift, and go to state 244
    "uint64"                          shift, and go to state 245
    "double"                          shift, and go to state 246
    "int8"                            shift, and go to state 249
    "uint8"                           shift, and go to state 250
    "int16"                           shift, and go to state 251
    "uint16"                          shift, and go to state 252
    "tuple"                           shift, and go to state 421
    "variant"                         shift, and go to state 422
    "generator"                       shift, and go to state 423
    "++"                              shift, and go to state 424
    "--"                              shift, and go to state 425
    "::"                              shift, and go to state 55
    "$$"                              shift, and go to state 426
    "$i"                              shift, and go to state 427
    "$v"                              shift, and go to state 428
    "$b"                              shift, and go to state 429
    "$a"                              shift, and go to state 430
    "$c"                              shift, and go to state 431
    "..."                             shift, and go to state 432
    "integer constant"                shift, and go to state 433
    "long integer constant"           shift, and go to state 434
    "unsigned integer constant"       shift, and go to state 435
    "unsigned long integer constant"  shift, and go to state 436
    "unsigned int8 constant"          shift, and go to state 437
    "floating point constant"         shift, and go to state 438
    "double constant"                 shift, and go to state 439
    "name"                            shift, and go to state 56
    "start of the string"             shift, and go to state 440
    "begin of code block"             shift, and go to state 441
    '-'                               shift, and go to state 442
    '+'                               shift, and go to state 443
    '*'                               shift, and go to state 444
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 445
    '!'                               shift, and go to state 446
    '['                               shift, and go to state 447
    '('                               shift, and go to state 448
    '$'                               shift, and go to state 449
    '@'                               shift, and go to state 450

    string_builder          go to state 451
    expr_reader             go to state 452
    expr_call_pipe          go to state 453
    name_in_namespace       go to state 454
    expr_new                go to state 455
    expr_cast               go to state 456
    expr_type_decl          go to state 457
    expr_type_info          go to state 458
    block_or_lambda         go to state 459
    expr_full_block         go to state 460
    expr_numeric_const      go to state 461
    expr_named_call         go to state 462
    expr_method_call        go to state 463
    func_addr_expr          go to state 464
    expr_field              go to state 465
    expr_call               go to state 466
    expr                    go to state 855
    expr_mtag               go to state 468
    basic_type_declaration  go to state 469
    make_decl               go to state 470
    make_struct_decl        go to state 471
    make_tuple_call         go to state 472
    make_dim_decl           go to state 473
    make_table_decl         go to state 474
    array_comprehension     go to state 475


State 652

  446 expr: expr "|>" . expr
  447     | expr "|>" . basic_type_declaration

    "struct"                          shift, and go to state 402
    "class"                           shift, and go to state 403
    "true"                            shift, and go to state 404
    "false"                           shift, and go to state 405
    "new"                             shift, and go to state 406
    "typeinfo"                        shift, and go to state 407
    "type"                            shift, and go to state 408
    "array"                           shift, and go to state 409
    "null"                            shift, and go to state 410
    "table"                           shift, and go to state 411
    "deref"                           shift, and go to state 412
    "cast"                            shift, and go to state 413
    "upcast"                          shift, and go to state 414
    "addr"                            shift, and go to state 415
    "reinterpret"                     shift, and go to state 416
    "unsafe"                          shift, and go to state 417
    "fixed_array"                     shift, and go to state 418
    "default"                         shift, and go to state 419
    "bool"                            shift, and go to state 222
    "void"                            shift, and go to state 223
    "string"                          shift, and go to state 224
    "int"                             shift, and go to state 226
    "int2"                            shift, and go to state 227
    "int3"                            shift, and go to state 228
    "int4"                            shift, and go to state 229
    "uint"                            shift, and go to state 230
    "bitfield"                        shift, and go to state 420
    "uint2"                           shift, and go to state 232
    "uint3"                           shift, and go to state 233
    "uint4"                           shift, and go to state 234
    "float"                           shift, and go to state 235
    "float2"                          shift, and go to state 236
    "float3"                          shift, and go to state 237
    "float4"                          shift, and go to state 238
    "range"                           shift, and go to state 239
    "urange"                          shift, and go to state 240
    "range64"                         shift, and go to state 241
    "urange64"                        shift, and go to state 242
    "int64"                           shift, and go to state 244
    "uint64"                          shift, and go to state 245
    "double"                          shift, and go to state 246
    "int8"                            shift, and go to state 249
    "uint8"                           shift, and go to state 250
    "int16"                           shift, and go to state 251
    "uint16"                          shift, and go to state 252
    "tuple"                           shift, and go to state 421
    "variant"                         shift, and go to state 422
    "generator"                       shift, and go to state 423
    "++"                              shift, and go to state 424
    "--"                              shift, and go to state 425
    "::"                              shift, and go to state 55
    "$$"                              shift, and go to state 426
    "$i"                              shift, and go to state 427
    "$v"                              shift, and go to state 428
    "$b"                              shift, and go to state 429
    "$a"                              shift, and go to state 430
    "$c"                              shift, and go to state 431
    "..."                             shift, and go to state 432
    "integer constant"                shift, and go to state 433
    "long integer constant"           shift, and go to state 434
    "unsigned integer constant"       shift, and go to state 435
    "unsigned long integer constant"  shift, and go to state 436
    "unsigned int8 constant"          shift, and go to state 437
    "floating point constant"         shift, and go to state 438
    "double constant"                 shift, and go to state 439
    "name"                            shift, and go to state 56
    "start of the string"             shift, and go to state 440
    "begin of code block"             shift, and go to state 441
    '-'                               shift, and go to state 442
    '+'                               shift, and go to state 443
    '*'                               shift, and go to state 444
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 445
    '!'                               shift, and go to state 446
    '['                               shift, and go to state 447
    '('                               shift, and go to state 448
    '$'                               shift, and go to state 449
    '@'                               shift, and go to state 450

    string_builder          go to state 451
    expr_reader             go to state 452
    expr_call_pipe          go to state 453
    name_in_namespace       go to state 454
    expr_new                go to state 455
    expr_cast               go to state 456
    expr_type_decl          go to state 457
    expr_type_info          go to state 458
    block_or_lambda         go to state 459
    expr_full_block         go to state 460
    expr_numeric_const      go to state 461
    expr_named_call         go to state 462
    expr_method_call        go to state 463
    func_addr_expr          go to state 464
    expr_field              go to state 465
    expr_call               go to state 466
    expr                    go to state 856
    expr_mtag               go to state 468
    basic_type_declaration  go to state 857
    make_decl               go to state 470
    make_struct_decl        go to state 471
    make_tuple_call         go to state 472
    make_dim_decl           go to state 473
    make_table_decl         go to state 474
    array_comprehension     go to state 475


State 653

  382 expr: expr "<<<" . expr

    "struct"                          shift, and go to state 402
    "class"                           shift, and go to state 403
    "true"                            shift, and go to state 404
    "false"                           shift, and go to state 405
    "new"                             shift, and go to state 406
    "typeinfo"                        shift, and go to state 407
    "type"                            shift, and go to state 408
    "array"                           shift, and go to state 409
    "null"                            shift, and go to state 410
    "table"                           shift, and go to state 411
    "deref"                           shift, and go to state 412
    "cast"                            shift, and go to state 413
    "upcast"                          shift, and go to state 414
    "addr"                            shift, and go to state 415
    "reinterpret"                     shift, and go to state 416
    "unsafe"                          shift, and go to state 417
    "fixed_array"                     shift, and go to state 418
    "default"                         shift, and go to state 419
    "bool"                            shift, and go to state 222
    "void"                            shift, and go to state 223
    "string"                          shift, and go to state 224
    "int"                             shift, and go to state 226
    "int2"                            shift, and go to state 227
    "int3"                            shift, and go to state 228
    "int4"                            shift, and go to state 229
    "uint"                            shift, and go to state 230
    "bitfield"                        shift, and go to state 420
    "uint2"                           shift, and go to state 232
    "uint3"                           shift, and go to state 233
    "uint4"                           shift, and go to state 234
    "float"                           shift, and go to state 235
    "float2"                          shift, and go to state 236
    "float3"                          shift, and go to state 237
    "float4"                          shift, and go to state 238
    "range"                           shift, and go to state 239
    "urange"                          shift, and go to state 240
    "range64"                         shift, and go to state 241
    "urange64"                        shift, and go to state 242
    "int64"                           shift, and go to state 244
    "uint64"                          shift, and go to state 245
    "double"                          shift, and go to state 246
    "int8"                            shift, and go to state 249
    "uint8"                           shift, and go to state 250
    "int16"                           shift, and go to state 251
    "uint16"                          shift, and go to state 252
    "tuple"                           shift, and go to state 421
    "variant"                         shift, and go to state 422
    "generator"                       shift, and go to state 423
    "++"                              shift, and go to state 424
    "--"                              shift, and go to state 425
    "::"                              shift, and go to state 55
    "$$"                              shift, and go to state 426
    "$i"                              shift, and go to state 427
    "$v"                              shift, and go to state 428
    "$b"                              shift, and go to state 429
    "$a"                              shift, and go to state 430
    "$c"                              shift, and go to state 431
    "..."                             shift, and go to state 432
    "integer constant"                shift, and go to state 433
    "long integer constant"           shift, and go to state 434
    "unsigned integer constant"       shift, and go to state 435
    "unsigned long integer constant"  shift, and go to state 436
    "unsigned int8 constant"          shift, and go to state 437
    "floating point constant"         shift, and go to state 438
    "double constant"                 shift, and go to state 439
    "name"                            shift, and go to state 56
    "start of the string"             shift, and go to state 440
    "begin of code block"             shift, and go to state 441
    '-'                               shift, and go to state 442
    '+'                               shift, and go to state 443
    '*'                               shift, and go to state 444
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 445
    '!'                               shift, and go to state 446
    '['                               shift, and go to state 447
    '('                               shift, and go to state 448
    '$'                               shift, and go to state 449
    '@'                               shift, and go to state 450

    string_builder          go to state 451
    expr_reader             go to state 452
    expr_call_pipe          go to state 453
    name_in_namespace       go to state 454
    expr_new                go to state 455
    expr_cast               go to state 456
    expr_type_decl          go to state 457
    expr_type_info          go to state 458
    block_or_lambda         go to state 459
    expr_full_block         go to state 460
    expr_numeric_const      go to state 461
    expr_named_call         go to state 462
    expr_method_call        go to state 463
    func_addr_expr          go to state 464
    expr_field              go to state 465
    expr_call               go to state 466
    expr                    go to state 858
    expr_mtag               go to state 468
    basic_type_declaration  go to state 469
    make_decl               go to state 470
    make_struct_decl        go to state 471
    make_tuple_call         go to state 472
    make_dim_decl           go to state 473
    make_table_decl         go to state 474
    array_comprehension     go to state 475


State 654

  383 expr: expr ">>>" . expr

    "struct"                          shift, and go to state 402
    "class"                           shift, and go to state 403
    "true"                            shift, and go to state 404
    "false"                           shift, and go to state 405
    "new"                             shift, and go to state 406
    "typeinfo"                        shift, and go to state 407
    "type"                            shift, and go to state 408
    "array"                           shift, and go to state 409
    "null"                            shift, and go to state 410
    "table"                           shift, and go to state 411
    "deref"                           shift, and go to state 412
    "cast"                            shift, and go to state 413
    "upcast"                          shift, and go to state 414
    "addr"                            shift, and go to state 415
    "reinterpret"                     shift, and go to state 416
    "unsafe"                          shift, and go to state 417
    "fixed_array"                     shift, and go to state 418
    "default"                         shift, and go to state 419
    "bool"                            shift, and go to state 222
    "void"                            shift, and go to state 223
    "string"                          shift, and go to state 224
    "int"                             shift, and go to state 226
    "int2"                            shift, and go to state 227
    "int3"                            shift, and go to state 228
    "int4"                            shift, and go to state 229
    "uint"                            shift, and go to state 230
    "bitfield"                        shift, and go to state 420
    "uint2"                           shift, and go to state 232
    "uint3"                           shift, and go to state 233
    "uint4"                           shift, and go to state 234
    "float"                           shift, and go to state 235
    "float2"                          shift, and go to state 236
    "float3"                          shift, and go to state 237
    "float4"                          shift, and go to state 238
    "range"                           shift, and go to state 239
    "urange"                          shift, and go to state 240
    "range64"                         shift, and go to state 241
    "urange64"                        shift, and go to state 242
    "int64"                           shift, and go to state 244
    "uint64"                          shift, and go to state 245
    "double"                          shift, and go to state 246
    "int8"                            shift, and go to state 249
    "uint8"                           shift, and go to state 250
    "int16"                           shift, and go to state 251
    "uint16"                          shift, and go to state 252
    "tuple"                           shift, and go to state 421
    "variant"                         shift, and go to state 422
    "generator"                       shift, and go to state 423
    "++"                              shift, and go to state 424
    "--"                              shift, and go to state 425
    "::"                              shift, and go to state 55
    "$$"                              shift, and go to state 426
    "$i"                              shift, and go to state 427
    "$v"                              shift, and go to state 428
    "$b"                              shift, and go to state 429
    "$a"                              shift, and go to state 430
    "$c"                              shift, and go to state 431
    "..."                             shift, and go to state 432
    "integer constant"                shift, and go to state 433
    "long integer constant"           shift, and go to state 434
    "unsigned integer constant"       shift, and go to state 435
    "unsigned long integer constant"  shift, and go to state 436
    "unsigned int8 constant"          shift, and go to state 437
    "floating point constant"         shift, and go to state 438
    "double constant"                 shift, and go to state 439
    "name"                            shift, and go to state 56
    "start of the string"             shift, and go to state 440
    "begin of code block"             shift, and go to state 441
    '-'                               shift, and go to state 442
    '+'                               shift, and go to state 443
    '*'                               shift, and go to state 444
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 445
    '!'                               shift, and go to state 446
    '['                               shift, and go to state 447
    '('                               shift, and go to state 448
    '$'                               shift, and go to state 449
    '@'                               shift, and go to state 450

    string_builder          go to state 451
    expr_reader             go to state 452
    expr_call_pipe          go to state 453
    name_in_namespace       go to state 454
    expr_new                go to state 455
    expr_cast               go to state 456
    expr_type_decl          go to state 457
    expr_type_info          go to state 458
    block_or_lambda         go to state 459
    expr_full_block         go to state 460
    expr_numeric_const      go to state 461
    expr_named_call         go to state 462
    expr_method_call        go to state 463
    func_addr_expr          go to state 464
    expr_field              go to state 465
    expr_call               go to state 466
    expr                    go to state 859
    expr_mtag               go to state 468
    basic_type_declaration  go to state 469
    make_decl               go to state 470
    make_struct_decl        go to state 471
    make_tuple_call         go to state 472
    make_dim_decl           go to state 473
    make_table_decl         go to state 474
    array_comprehension     go to state 475


State 655

  398 expr: expr "&&" . expr

    "struct"                          shift, and go to state 402
    "class"                           shift, and go to state 403
    "true"                            shift, and go to state 404
    "false"                           shift, and go to state 405
    "new"                             shift, and go to state 406
    "typeinfo"                        shift, and go to state 407
    "type"                            shift, and go to state 408
    "array"                           shift, and go to state 409
    "null"                            shift, and go to state 410
    "table"                           shift, and go to state 411
    "deref"                           shift, and go to state 412
    "cast"                            shift, and go to state 413
    "upcast"                          shift, and go to state 414
    "addr"                            shift, and go to state 415
    "reinterpret"                     shift, and go to state 416
    "unsafe"                          shift, and go to state 417
    "fixed_array"                     shift, and go to state 418
    "default"                         shift, and go to state 419
    "bool"                            shift, and go to state 222
    "void"                            shift, and go to state 223
    "string"                          shift, and go to state 224
    "int"                             shift, and go to state 226
    "int2"                            shift, and go to state 227
    "int3"                            shift, and go to state 228
    "int4"                            shift, and go to state 229
    "uint"                            shift, and go to state 230
    "bitfield"                        shift, and go to state 420
    "uint2"                           shift, and go to state 232
    "uint3"                           shift, and go to state 233
    "uint4"                           shift, and go to state 234
    "float"                           shift, and go to state 235
    "float2"                          shift, and go to state 236
    "float3"                          shift, and go to state 237
    "float4"                          shift, and go to state 238
    "range"                           shift, and go to state 239
    "urange"                          shift, and go to state 240
    "range64"                         shift, and go to state 241
    "urange64"                        shift, and go to state 242
    "int64"                           shift, and go to state 244
    "uint64"                          shift, and go to state 245
    "double"                          shift, and go to state 246
    "int8"                            shift, and go to state 249
    "uint8"                           shift, and go to state 250
    "int16"                           shift, and go to state 251
    "uint16"                          shift, and go to state 252
    "tuple"                           shift, and go to state 421
    "variant"                         shift, and go to state 422
    "generator"                       shift, and go to state 423
    "++"                              shift, and go to state 424
    "--"                              shift, and go to state 425
    "::"                              shift, and go to state 55
    "$$"                              shift, and go to state 426
    "$i"                              shift, and go to state 427
    "$v"                              shift, and go to state 428
    "$b"                              shift, and go to state 429
    "$a"                              shift, and go to state 430
    "$c"                              shift, and go to state 431
    "..."                             shift, and go to state 432
    "integer constant"                shift, and go to state 433
    "long integer constant"           shift, and go to state 434
    "unsigned integer constant"       shift, and go to state 435
    "unsigned long integer constant"  shift, and go to state 436
    "unsigned int8 constant"          shift, and go to state 437
    "floating point constant"         shift, and go to state 438
    "double constant"                 shift, and go to state 439
    "name"                            shift, and go to state 56
    "start of the string"             shift, and go to state 440
    "begin of code block"             shift, and go to state 441
    '-'                               shift, and go to state 442
    '+'                               shift, and go to state 443
    '*'                               shift, and go to state 444
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 445
    '!'                               shift, and go to state 446
    '['                               shift, and go to state 447
    '('                               shift, and go to state 448
    '$'                               shift, and go to state 449
    '@'                               shift, and go to state 450

    string_builder          go to state 451
    expr_reader             go to state 452
    expr_call_pipe          go to state 453
    name_in_namespace       go to state 454
    expr_new                go to state 455
    expr_cast               go to state 456
    expr_type_decl          go to state 457
    expr_type_info          go to state 458
    block_or_lambda         go to state 459
    expr_full_block         go to state 460
    expr_numeric_const      go to state 461
    expr_named_call         go to state 462
    expr_method_call        go to state 463
    func_addr_expr          go to state 464
    expr_field              go to state 465
    expr_call               go to state 466
    expr                    go to state 860
    expr_mtag               go to state 468
    basic_type_declaration  go to state 469
    make_decl               go to state 470
    make_struct_decl        go to state 471
    make_tuple_call         go to state 472
    make_dim_decl           go to state 473
    make_table_decl         go to state 474
    array_comprehension     go to state 475


State 656

  399 expr: expr "||" . expr

    "struct"                          shift, and go to state 402
    "class"                           shift, and go to state 403
    "true"                            shift, and go to state 404
    "false"                           shift, and go to state 405
    "new"                             shift, and go to state 406
    "typeinfo"                        shift, and go to state 407
    "type"                            shift, and go to state 408
    "array"                           shift, and go to state 409
    "null"                            shift, and go to state 410
    "table"                           shift, and go to state 411
    "deref"                           shift, and go to state 412
    "cast"                            shift, and go to state 413
    "upcast"                          shift, and go to state 414
    "addr"                            shift, and go to state 415
    "reinterpret"                     shift, and go to state 416
    "unsafe"                          shift, and go to state 417
    "fixed_array"                     shift, and go to state 418
    "default"                         shift, and go to state 419
    "bool"                            shift, and go to state 222
    "void"                            shift, and go to state 223
    "string"                          shift, and go to state 224
    "int"                             shift, and go to state 226
    "int2"                            shift, and go to state 227
    "int3"                            shift, and go to state 228
    "int4"                            shift, and go to state 229
    "uint"                            shift, and go to state 230
    "bitfield"                        shift, and go to state 420
    "uint2"                           shift, and go to state 232
    "uint3"                           shift, and go to state 233
    "uint4"                           shift, and go to state 234
    "float"                           shift, and go to state 235
    "float2"                          shift, and go to state 236
    "float3"                          shift, and go to state 237
    "float4"                          shift, and go to state 238
    "range"                           shift, and go to state 239
    "urange"                          shift, and go to state 240
    "range64"                         shift, and go to state 241
    "urange64"                        shift, and go to state 242
    "int64"                           shift, and go to state 244
    "uint64"                          shift, and go to state 245
    "double"                          shift, and go to state 246
    "int8"                            shift, and go to state 249
    "uint8"                           shift, and go to state 250
    "int16"                           shift, and go to state 251
    "uint16"                          shift, and go to state 252
    "tuple"                           shift, and go to state 421
    "variant"                         shift, and go to state 422
    "generator"                       shift, and go to state 423
    "++"                              shift, and go to state 424
    "--"                              shift, and go to state 425
    "::"                              shift, and go to state 55
    "$$"                              shift, and go to state 426
    "$i"                              shift, and go to state 427
    "$v"                              shift, and go to state 428
    "$b"                              shift, and go to state 429
    "$a"                              shift, and go to state 430
    "$c"                              shift, and go to state 431
    "..."                             shift, and go to state 432
    "integer constant"                shift, and go to state 433
    "long integer constant"           shift, and go to state 434
    "unsigned integer constant"       shift, and go to state 435
    "unsigned long integer constant"  shift, and go to state 436
    "unsigned int8 constant"          shift, and go to state 437
    "floating point constant"         shift, and go to state 438
    "double constant"                 shift, and go to state 439
    "name"                            shift, and go to state 56
    "start of the string"             shift, and go to state 440
    "begin of code block"             shift, and go to state 441
    '-'                               shift, and go to state 442
    '+'                               shift, and go to state 443
    '*'                               shift, and go to state 444
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 445
    '!'                               shift, and go to state 446
    '['                               shift, and go to state 447
    '('                               shift, and go to state 448
    '$'                               shift, and go to state 449
    '@'                               shift, and go to state 450

    string_builder          go to state 451
    expr_reader             go to state 452
    expr_call_pipe          go to state 453
    name_in_namespace       go to state 454
    expr_new                go to state 455
    expr_cast               go to state 456
    expr_type_decl          go to state 457
    expr_type_info          go to state 458
    block_or_lambda         go to state 459
    expr_full_block         go to state 460
    expr_numeric_const      go to state 461
    expr_named_call         go to state 462
    expr_method_call        go to state 463
    func_addr_expr          go to state 464
    expr_field              go to state 465
    expr_call               go to state 466
    expr                    go to state 861
    expr_mtag               go to state 468
    basic_type_declaration  go to state 469
    make_decl               go to state 470
    make_struct_decl        go to state 471
    make_tuple_call         go to state 472
    make_dim_decl           go to state 473
    make_table_decl         go to state 474
    array_comprehension     go to state 475


State 657

  400 expr: expr "^^" . expr

    "struct"                          shift, and go to state 402
    "class"                           shift, and go to state 403
    "true"                            shift, and go to state 404
    "false"                           shift, and go to state 405
    "new"                             shift, and go to state 406
    "typeinfo"                        shift, and go to state 407
    "type"                            shift, and go to state 408
    "array"                           shift, and go to state 409
    "null"                            shift, and go to state 410
    "table"                           shift, and go to state 411
    "deref"                           shift, and go to state 412
    "cast"                            shift, and go to state 413
    "upcast"                          shift, and go to state 414
    "addr"                            shift, and go to state 415
    "reinterpret"                     shift, and go to state 416
    "unsafe"                          shift, and go to state 417
    "fixed_array"                     shift, and go to state 418
    "default"                         shift, and go to state 419
    "bool"                            shift, and go to state 222
    "void"                            shift, and go to state 223
    "string"                          shift, and go to state 224
    "int"                             shift, and go to state 226
    "int2"                            shift, and go to state 227
    "int3"                            shift, and go to state 228
    "int4"                            shift, and go to state 229
    "uint"                            shift, and go to state 230
    "bitfield"                        shift, and go to state 420
    "uint2"                           shift, and go to state 232
    "uint3"                           shift, and go to state 233
    "uint4"                           shift, and go to state 234
    "float"                           shift, and go to state 235
    "float2"                          shift, and go to state 236
    "float3"                          shift, and go to state 237
    "float4"                          shift, and go to state 238
    "range"                           shift, and go to state 239
    "urange"                          shift, and go to state 240
    "range64"                         shift, and go to state 241
    "urange64"                        shift, and go to state 242
    "int64"                           shift, and go to state 244
    "uint64"                          shift, and go to state 245
    "double"                          shift, and go to state 246
    "int8"                            shift, and go to state 249
    "uint8"                           shift, and go to state 250
    "int16"                           shift, and go to state 251
    "uint16"                          shift, and go to state 252
    "tuple"                           shift, and go to state 421
    "variant"                         shift, and go to state 422
    "generator"                       shift, and go to state 423
    "++"                              shift, and go to state 424
    "--"                              shift, and go to state 425
    "::"                              shift, and go to state 55
    "$$"                              shift, and go to state 426
    "$i"                              shift, and go to state 427
    "$v"                              shift, and go to state 428
    "$b"                              shift, and go to state 429
    "$a"                              shift, and go to state 430
    "$c"                              shift, and go to state 431
    "..."                             shift, and go to state 432
    "integer constant"                shift, and go to state 433
    "long integer constant"           shift, and go to state 434
    "unsigned integer constant"       shift, and go to state 435
    "unsigned long integer constant"  shift, and go to state 436
    "unsigned int8 constant"          shift, and go to state 437
    "floating point constant"         shift, and go to state 438
    "double constant"                 shift, and go to state 439
    "name"                            shift, and go to state 56
    "start of the string"             shift, and go to state 440
    "begin of code block"             shift, and go to state 441
    '-'                               shift, and go to state 442
    '+'                               shift, and go to state 443
    '*'                               shift, and go to state 444
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 445
    '!'                               shift, and go to state 446
    '['                               shift, and go to state 447
    '('                               shift, and go to state 448
    '$'                               shift, and go to state 449
    '@'                               shift, and go to state 450

    string_builder          go to state 451
    expr_reader             go to state 452
    expr_call_pipe          go to state 453
    name_in_namespace       go to state 454
    expr_new                go to state 455
    expr_cast               go to state 456
    expr_type_decl          go to state 457
    expr_type_info          go to state 458
    block_or_lambda         go to state 459
    expr_full_block         go to state 460
    expr_numeric_const      go to state 461
    expr_named_call         go to state 462
    expr_method_call        go to state 463
    func_addr_expr          go to state 464
    expr_field              go to state 465
    expr_call               go to state 466
    expr                    go to state 862
    expr_mtag               go to state 468
    basic_type_declaration  go to state 469
    make_decl               go to state 470
    make_struct_decl        go to state 471
    make_tuple_call         go to state 472
    make_dim_decl           go to state 473
    make_table_decl         go to state 474
    array_comprehension     go to state 475


State 658

  401 expr: expr ".." . expr

    "struct"                          shift, and go to state 402
    "class"                           shift, and go to state 403
    "true"                            shift, and go to state 404
    "false"                           shift, and go to state 405
    "new"                             shift, and go to state 406
    "typeinfo"                        shift, and go to state 407
    "type"                            shift, and go to state 408
    "array"                           shift, and go to state 409
    "null"                            shift, and go to state 410
    "table"                           shift, and go to state 411
    "deref"                           shift, and go to state 412
    "cast"                            shift, and go to state 413
    "upcast"                          shift, and go to state 414
    "addr"                            shift, and go to state 415
    "reinterpret"                     shift, and go to state 416
    "unsafe"                          shift, and go to state 417
    "fixed_array"                     shift, and go to state 418
    "default"                         shift, and go to state 419
    "bool"                            shift, and go to state 222
    "void"                            shift, and go to state 223
    "string"                          shift, and go to state 224
    "int"                             shift, and go to state 226
    "int2"                            shift, and go to state 227
    "int3"                            shift, and go to state 228
    "int4"                            shift, and go to state 229
    "uint"                            shift, and go to state 230
    "bitfield"                        shift, and go to state 420
    "uint2"                           shift, and go to state 232
    "uint3"                           shift, and go to state 233
    "uint4"                           shift, and go to state 234
    "float"                           shift, and go to state 235
    "float2"                          shift, and go to state 236
    "float3"                          shift, and go to state 237
    "float4"                          shift, and go to state 238
    "range"                           shift, and go to state 239
    "urange"                          shift, and go to state 240
    "range64"                         shift, and go to state 241
    "urange64"                        shift, and go to state 242
    "int64"                           shift, and go to state 244
    "uint64"                          shift, and go to state 245
    "double"                          shift, and go to state 246
    "int8"                            shift, and go to state 249
    "uint8"                           shift, and go to state 250
    "int16"                           shift, and go to state 251
    "uint16"                          shift, and go to state 252
    "tuple"                           shift, and go to state 421
    "variant"                         shift, and go to state 422
    "generator"                       shift, and go to state 423
    "++"                              shift, and go to state 424
    "--"                              shift, and go to state 425
    "::"                              shift, and go to state 55
    "$$"                              shift, and go to state 426
    "$i"                              shift, and go to state 427
    "$v"                              shift, and go to state 428
    "$b"                              shift, and go to state 429
    "$a"                              shift, and go to state 430
    "$c"                              shift, and go to state 431
    "..."                             shift, and go to state 432
    "integer constant"                shift, and go to state 433
    "long integer constant"           shift, and go to state 434
    "unsigned integer constant"       shift, and go to state 435
    "unsigned long integer constant"  shift, and go to state 436
    "unsigned int8 constant"          shift, and go to state 437
    "floating point constant"         shift, and go to state 438
    "double constant"                 shift, and go to state 439
    "name"                            shift, and go to state 56
    "start of the string"             shift, and go to state 440
    "begin of code block"             shift, and go to state 441
    '-'                               shift, and go to state 442
    '+'                               shift, and go to state 443
    '*'                               shift, and go to state 444
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 445
    '!'                               shift, and go to state 446
    '['                               shift, and go to state 447
    '('                               shift, and go to state 448
    '$'                               shift, and go to state 449
    '@'                               shift, and go to state 450

    string_builder          go to state 451
    expr_reader             go to state 452
    expr_call_pipe          go to state 453
    name_in_namespace       go to state 454
    expr_new                go to state 455
    expr_cast               go to state 456
    expr_type_decl          go to state 457
    expr_type_info          go to state 458
    block_or_lambda         go to state 459
    expr_full_block         go to state 460
    expr_numeric_const      go to state 461
    expr_named_call         go to state 462
    expr_method_call        go to state 463
    func_addr_expr          go to state 464
    expr_field              go to state 465
    expr_call               go to state 466
    expr                    go to state 863
    expr_mtag               go to state 468
    basic_type_declaration  go to state 469
    make_decl               go to state 470
    make_struct_decl        go to state 471
    make_tuple_call         go to state 472
    make_dim_decl           go to state 473
    make_table_decl         go to state 474
    array_comprehension     go to state 475


State 659

  422 expr: expr '?' . expr ':' expr
  433     | expr '?' . "as" "name"
  436     | expr '?' . "as" "type" '<' $@23 type_declaration '>' $@24
  437     | expr '?' . "as" basic_type_declaration
  463 expr_mtag: expr '?' . "as" "$f" '(' expr ')'

    "struct"                          shift, and go to state 402
    "class"                           shift, and go to state 403
    "true"                            shift, and go to state 404
    "false"                           shift, and go to state 405
    "new"                             shift, and go to state 406
    "typeinfo"                        shift, and go to state 407
    "type"                            shift, and go to state 408
    "as"                              shift, and go to state 864
    "array"                           shift, and go to state 409
    "null"                            shift, and go to state 410
    "table"                           shift, and go to state 411
    "deref"                           shift, and go to state 412
    "cast"                            shift, and go to state 413
    "upcast"                          shift, and go to state 414
    "addr"                            shift, and go to state 415
    "reinterpret"                     shift, and go to state 416
    "unsafe"                          shift, and go to state 417
    "fixed_array"                     shift, and go to state 418
    "default"                         shift, and go to state 419
    "bool"                            shift, and go to state 222
    "void"                            shift, and go to state 223
    "string"                          shift, and go to state 224
    "int"                             shift, and go to state 226
    "int2"                            shift, and go to state 227
    "int3"                            shift, and go to state 228
    "int4"                            shift, and go to state 229
    "uint"                            shift, and go to state 230
    "bitfield"                        shift, and go to state 420
    "uint2"                           shift, and go to state 232
    "uint3"                           shift, and go to state 233
    "uint4"                           shift, and go to state 234
    "float"                           shift, and go to state 235
    "float2"                          shift, and go to state 236
    "float3"                          shift, and go to state 237
    "float4"                          shift, and go to state 238
    "range"                           shift, and go to state 239
    "urange"                          shift, and go to state 240
    "range64"                         shift, and go to state 241
    "urange64"                        shift, and go to state 242
    "int64"                           shift, and go to state 244
    "uint64"                          shift, and go to state 245
    "double"                          shift, and go to state 246
    "int8"                            shift, and go to state 249
    "uint8"                           shift, and go to state 250
    "int16"                           shift, and go to state 251
    "uint16"                          shift, and go to state 252
    "tuple"                           shift, and go to state 421
    "variant"                         shift, and go to state 422
    "generator"                       shift, and go to state 423
    "++"                              shift, and go to state 424
    "--"                              shift, and go to state 425
    "::"                              shift, and go to state 55
    "$$"                              shift, and go to state 426
    "$i"                              shift, and go to state 427
    "$v"                              shift, and go to state 428
    "$b"                              shift, and go to state 429
    "$a"                              shift, and go to state 430
    "$c"                              shift, and go to state 431
    "..."                             shift, and go to state 432
    "integer constant"                shift, and go to state 433
    "long integer constant"           shift, and go to state 434
    "unsigned integer constant"       shift, and go to state 435
    "unsigned long integer constant"  shift, and go to state 436
    "unsigned int8 constant"          shift, and go to state 437
    "floating point constant"         shift, and go to state 438
    "double constant"                 shift, and go to state 439
    "name"                            shift, and go to state 56
    "start of the string"             shift, and go to state 440
    "begin of code block"             shift, and go to state 441
    '-'                               shift, and go to state 442
    '+'                               shift, and go to state 443
    '*'                               shift, and go to state 444
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 445
    '!'                               shift, and go to state 446
    '['                               shift, and go to state 447
    '('                               shift, and go to state 448
    '$'                               shift, and go to state 449
    '@'                               shift, and go to state 450

    string_builder          go to state 451
    expr_reader             go to state 452
    expr_call_pipe          go to state 453
    name_in_namespace       go to state 454
    expr_new                go to state 455
    expr_cast               go to state 456
    expr_type_decl          go to state 457
    expr_type_info          go to state 458
    block_or_lambda         go to state 459
    expr_full_block         go to state 460
    expr_numeric_const      go to state 461
    expr_named_call         go to state 462
    expr_method_call        go to state 463
    func_addr_expr          go to state 464
    expr_field              go to state 465
    expr_call               go to state 466
    expr                    go to state 865
    expr_mtag               go to state 468
    basic_type_declaration  go to state 469
    make_decl               go to state 470
    make_struct_decl        go to state 471
    make_tuple_call         go to state 472
    make_dim_decl           go to state 473
    make_table_decl         go to state 474
    array_comprehension     go to state 475


State 660

  396 expr: expr '|' . expr

    "struct"                          shift, and go to state 402
    "class"                           shift, and go to state 403
    "true"                            shift, and go to state 404
    "false"                           shift, and go to state 405
    "new"                             shift, and go to state 406
    "typeinfo"                        shift, and go to state 407
    "type"                            shift, and go to state 408
    "array"                           shift, and go to state 409
    "null"                            shift, and go to state 410
    "table"                           shift, and go to state 411
    "deref"                           shift, and go to state 412
    "cast"                            shift, and go to state 413
    "upcast"                          shift, and go to state 414
    "addr"                            shift, and go to state 415
    "reinterpret"                     shift, and go to state 416
    "unsafe"                          shift, and go to state 417
    "fixed_array"                     shift, and go to state 418
    "default"                         shift, and go to state 419
    "bool"                            shift, and go to state 222
    "void"                            shift, and go to state 223
    "string"                          shift, and go to state 224
    "int"                             shift, and go to state 226
    "int2"                            shift, and go to state 227
    "int3"                            shift, and go to state 228
    "int4"                            shift, and go to state 229
    "uint"                            shift, and go to state 230
    "bitfield"                        shift, and go to state 420
    "uint2"                           shift, and go to state 232
    "uint3"                           shift, and go to state 233
    "uint4"                           shift, and go to state 234
    "float"                           shift, and go to state 235
    "float2"                          shift, and go to state 236
    "float3"                          shift, and go to state 237
    "float4"                          shift, and go to state 238
    "range"                           shift, and go to state 239
    "urange"                          shift, and go to state 240
    "range64"                         shift, and go to state 241
    "urange64"                        shift, and go to state 242
    "int64"                           shift, and go to state 244
    "uint64"                          shift, and go to state 245
    "double"                          shift, and go to state 246
    "int8"                            shift, and go to state 249
    "uint8"                           shift, and go to state 250
    "int16"                           shift, and go to state 251
    "uint16"                          shift, and go to state 252
    "tuple"                           shift, and go to state 421
    "variant"                         shift, and go to state 422
    "generator"                       shift, and go to state 423
    "++"                              shift, and go to state 424
    "--"                              shift, and go to state 425
    "::"                              shift, and go to state 55
    "$$"                              shift, and go to state 426
    "$i"                              shift, and go to state 427
    "$v"                              shift, and go to state 428
    "$b"                              shift, and go to state 429
    "$a"                              shift, and go to state 430
    "$c"                              shift, and go to state 431
    "..."                             shift, and go to state 432
    "integer constant"                shift, and go to state 433
    "long integer constant"           shift, and go to state 434
    "unsigned integer constant"       shift, and go to state 435
    "unsigned long integer constant"  shift, and go to state 436
    "unsigned int8 constant"          shift, and go to state 437
    "floating point constant"         shift, and go to state 438
    "double constant"                 shift, and go to state 439
    "name"                            shift, and go to state 56
    "start of the string"             shift, and go to state 440
    "begin of code block"             shift, and go to state 441
    '-'                               shift, and go to state 442
    '+'                               shift, and go to state 443
    '*'                               shift, and go to state 444
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 445
    '!'                               shift, and go to state 446
    '['                               shift, and go to state 447
    '('                               shift, and go to state 448
    '$'                               shift, and go to state 449
    '@'                               shift, and go to state 450

    string_builder          go to state 451
    expr_reader             go to state 452
    expr_call_pipe          go to state 453
    name_in_namespace       go to state 454
    expr_new                go to state 455
    expr_cast               go to state 456
    expr_type_decl          go to state 457
    expr_type_info          go to state 458
    block_or_lambda         go to state 459
    expr_full_block         go to state 460
    expr_numeric_const      go to state 461
    expr_named_call         go to state 462
    expr_method_call        go to state 463
    func_addr_expr          go to state 464
    expr_field              go to state 465
    expr_call               go to state 466
    expr                    go to state 866
    expr_mtag               go to state 468
    basic_type_declaration  go to state 469
    make_decl               go to state 470
    make_struct_decl        go to state 471
    make_tuple_call         go to state 472
    make_dim_decl           go to state 473
    make_table_decl         go to state 474
    array_comprehension     go to state 475


State 661

  397 expr: expr '^' . expr

    "struct"                          shift, and go to state 402
    "class"                           shift, and go to state 403
    "true"                            shift, and go to state 404
    "false"                           shift, and go to state 405
    "new"                             shift, and go to state 406
    "typeinfo"                        shift, and go to state 407
    "type"                            shift, and go to state 408
    "array"                           shift, and go to state 409
    "null"                            shift, and go to state 410
    "table"                           shift, and go to state 411
    "deref"                           shift, and go to state 412
    "cast"                            shift, and go to state 413
    "upcast"                          shift, and go to state 414
    "addr"                            shift, and go to state 415
    "reinterpret"                     shift, and go to state 416
    "unsafe"                          shift, and go to state 417
    "fixed_array"                     shift, and go to state 418
    "default"                         shift, and go to state 419
    "bool"                            shift, and go to state 222
    "void"                            shift, and go to state 223
    "string"                          shift, and go to state 224
    "int"                             shift, and go to state 226
    "int2"                            shift, and go to state 227
    "int3"                            shift, and go to state 228
    "int4"                            shift, and go to state 229
    "uint"                            shift, and go to state 230
    "bitfield"                        shift, and go to state 420
    "uint2"                           shift, and go to state 232
    "uint3"                           shift, and go to state 233
    "uint4"                           shift, and go to state 234
    "float"                           shift, and go to state 235
    "float2"                          shift, and go to state 236
    "float3"                          shift, and go to state 237
    "float4"                          shift, and go to state 238
    "range"                           shift, and go to state 239
    "urange"                          shift, and go to state 240
    "range64"                         shift, and go to state 241
    "urange64"                        shift, and go to state 242
    "int64"                           shift, and go to state 244
    "uint64"                          shift, and go to state 245
    "double"                          shift, and go to state 246
    "int8"                            shift, and go to state 249
    "uint8"                           shift, and go to state 250
    "int16"                           shift, and go to state 251
    "uint16"                          shift, and go to state 252
    "tuple"                           shift, and go to state 421
    "variant"                         shift, and go to state 422
    "generator"                       shift, and go to state 423
    "++"                              shift, and go to state 424
    "--"                              shift, and go to state 425
    "::"                              shift, and go to state 55
    "$$"                              shift, and go to state 426
    "$i"                              shift, and go to state 427
    "$v"                              shift, and go to state 428
    "$b"                              shift, and go to state 429
    "$a"                              shift, and go to state 430
    "$c"                              shift, and go to state 431
    "..."                             shift, and go to state 432
    "integer constant"                shift, and go to state 433
    "long integer constant"           shift, and go to state 434
    "unsigned integer constant"       shift, and go to state 435
    "unsigned long integer constant"  shift, and go to state 436
    "unsigned int8 constant"          shift, and go to state 437
    "floating point constant"         shift, and go to state 438
    "double constant"                 shift, and go to state 439
    "name"                            shift, and go to state 56
    "start of the string"             shift, and go to state 440
    "begin of code block"             shift, and go to state 441
    '-'                               shift, and go to state 442
    '+'                               shift, and go to state 443
    '*'                               shift, and go to state 444
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 445
    '!'                               shift, and go to state 446
    '['                               shift, and go to state 447
    '('                               shift, and go to state 448
    '$'                               shift, and go to state 449
    '@'                               shift, and go to state 450

    string_builder          go to state 451
    expr_reader             go to state 452
    expr_call_pipe          go to state 453
    name_in_namespace       go to state 454
    expr_new                go to state 455
    expr_cast               go to state 456
    expr_type_decl          go to state 457
    expr_type_info          go to state 458
    block_or_lambda         go to state 459
    expr_full_block         go to state 460
    expr_numeric_const      go to state 461
    expr_named_call         go to state 462
    expr_method_call        go to state 463
    func_addr_expr          go to state 464
    expr_field              go to state 465
    expr_call               go to state 466
    expr                    go to state 867
    expr_mtag               go to state 468
    basic_type_declaration  go to state 469
    make_decl               go to state 470
    make_struct_decl        go to state 471
    make_tuple_call         go to state 472
    make_dim_decl           go to state 473
    make_table_decl         go to state 474
    array_comprehension     go to state 475


State 662

  395 expr: expr '&' . expr

    "struct"                          shift, and go to state 402
    "class"                           shift, and go to state 403
    "true"                            shift, and go to state 404
    "false"                           shift, and go to state 405
    "new"                             shift, and go to state 406
    "typeinfo"                        shift, and go to state 407
    "type"                            shift, and go to state 408
    "array"                           shift, and go to state 409
    "null"                            shift, and go to state 410
    "table"                           shift, and go to state 411
    "deref"                           shift, and go to state 412
    "cast"                            shift, and go to state 413
    "upcast"                          shift, and go to state 414
    "addr"                            shift, and go to state 415
    "reinterpret"                     shift, and go to state 416
    "unsafe"                          shift, and go to state 417
    "fixed_array"                     shift, and go to state 418
    "default"                         shift, and go to state 419
    "bool"                            shift, and go to state 222
    "void"                            shift, and go to state 223
    "string"                          shift, and go to state 224
    "int"                             shift, and go to state 226
    "int2"                            shift, and go to state 227
    "int3"                            shift, and go to state 228
    "int4"                            shift, and go to state 229
    "uint"                            shift, and go to state 230
    "bitfield"                        shift, and go to state 420
    "uint2"                           shift, and go to state 232
    "uint3"                           shift, and go to state 233
    "uint4"                           shift, and go to state 234
    "float"                           shift, and go to state 235
    "float2"                          shift, and go to state 236
    "float3"                          shift, and go to state 237
    "float4"                          shift, and go to state 238
    "range"                           shift, and go to state 239
    "urange"                          shift, and go to state 240
    "range64"                         shift, and go to state 241
    "urange64"                        shift, and go to state 242
    "int64"                           shift, and go to state 244
    "uint64"                          shift, and go to state 245
    "double"                          shift, and go to state 246
    "int8"                            shift, and go to state 249
    "uint8"                           shift, and go to state 250
    "int16"                           shift, and go to state 251
    "uint16"                          shift, and go to state 252
    "tuple"                           shift, and go to state 421
    "variant"                         shift, and go to state 422
    "generator"                       shift, and go to state 423
    "++"                              shift, and go to state 424
    "--"                              shift, and go to state 425
    "::"                              shift, and go to state 55
    "$$"                              shift, and go to state 426
    "$i"                              shift, and go to state 427
    "$v"                              shift, and go to state 428
    "$b"                              shift, and go to state 429
    "$a"                              shift, and go to state 430
    "$c"                              shift, and go to state 431
    "..."                             shift, and go to state 432
    "integer constant"                shift, and go to state 433
    "long integer constant"           shift, and go to state 434
    "unsigned integer constant"       shift, and go to state 435
    "unsigned long integer constant"  shift, and go to state 436
    "unsigned int8 constant"          shift, and go to state 437
    "floating point constant"         shift, and go to state 438
    "double constant"                 shift, and go to state 439
    "name"                            shift, and go to state 56
    "start of the string"             shift, and go to state 440
    "begin of code block"             shift, and go to state 441
    '-'                               shift, and go to state 442
    '+'                               shift, and go to state 443
    '*'                               shift, and go to state 444
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 445
    '!'                               shift, and go to state 446
    '['                               shift, and go to state 447
    '('                               shift, and go to state 448
    '$'                               shift, and go to state 449
    '@'                               shift, and go to state 450

    string_builder          go to state 451
    expr_reader             go to state 452
    expr_call_pipe          go to state 453
    name_in_namespace       go to state 454
    expr_new                go to state 455
    expr_cast               go to state 456
    expr_type_decl          go to state 457
    expr_type_info          go to state 458
    block_or_lambda         go to state 459
    expr_full_block         go to state 460
    expr_numeric_const      go to state 461
    expr_named_call         go to state 462
    expr_method_call        go to state 463
    func_addr_expr          go to state 464
    expr_field              go to state 465
    expr_call               go to state 466
    expr                    go to state 868
    expr_mtag               go to state 468
    basic_type_declaration  go to state 469
    make_decl               go to state 470
    make_struct_decl        go to state 471
    make_tuple_call         go to state 472
    make_dim_decl           go to state 473
    make_table_decl         go to state 474
    array_comprehension     go to state 475


State 663

  389 expr: expr '<' . expr

    "struct"                          shift, and go to state 402
    "class"                           shift, and go to state 403
    "true"                            shift, and go to state 404
    "false"                           shift, and go to state 405
    "new"                             shift, and go to state 406
    "typeinfo"                        shift, and go to state 407
    "type"                            shift, and go to state 408
    "array"                           shift, and go to state 409
    "null"                            shift, and go to state 410
    "table"                           shift, and go to state 411
    "deref"                           shift, and go to state 412
    "cast"                            shift, and go to state 413
    "upcast"                          shift, and go to state 414
    "addr"                            shift, and go to state 415
    "reinterpret"                     shift, and go to state 416
    "unsafe"                          shift, and go to state 417
    "fixed_array"                     shift, and go to state 418
    "default"                         shift, and go to state 419
    "bool"                            shift, and go to state 222
    "void"                            shift, and go to state 223
    "string"                          shift, and go to state 224
    "int"                             shift, and go to state 226
    "int2"                            shift, and go to state 227
    "int3"                            shift, and go to state 228
    "int4"                            shift, and go to state 229
    "uint"                            shift, and go to state 230
    "bitfield"                        shift, and go to state 420
    "uint2"                           shift, and go to state 232
    "uint3"                           shift, and go to state 233
    "uint4"                           shift, and go to state 234
    "float"                           shift, and go to state 235
    "float2"                          shift, and go to state 236
    "float3"                          shift, and go to state 237
    "float4"                          shift, and go to state 238
    "range"                           shift, and go to state 239
    "urange"                          shift, and go to state 240
    "range64"                         shift, and go to state 241
    "urange64"                        shift, and go to state 242
    "int64"                           shift, and go to state 244
    "uint64"                          shift, and go to state 245
    "double"                          shift, and go to state 246
    "int8"                            shift, and go to state 249
    "uint8"                           shift, and go to state 250
    "int16"                           shift, and go to state 251
    "uint16"                          shift, and go to state 252
    "tuple"                           shift, and go to state 421
    "variant"                         shift, and go to state 422
    "generator"                       shift, and go to state 423
    "++"                              shift, and go to state 424
    "--"                              shift, and go to state 425
    "::"                              shift, and go to state 55
    "$$"                              shift, and go to state 426
    "$i"                              shift, and go to state 427
    "$v"                              shift, and go to state 428
    "$b"                              shift, and go to state 429
    "$a"                              shift, and go to state 430
    "$c"                              shift, and go to state 431
    "..."                             shift, and go to state 432
    "integer constant"                shift, and go to state 433
    "long integer constant"           shift, and go to state 434
    "unsigned integer constant"       shift, and go to state 435
    "unsigned long integer constant"  shift, and go to state 436
    "unsigned int8 constant"          shift, and go to state 437
    "floating point constant"         shift, and go to state 438
    "double constant"                 shift, and go to state 439
    "name"                            shift, and go to state 56
    "start of the string"             shift, and go to state 440
    "begin of code block"             shift, and go to state 441
    '-'                               shift, and go to state 442
    '+'                               shift, and go to state 443
    '*'                               shift, and go to state 444
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 445
    '!'                               shift, and go to state 446
    '['                               shift, and go to state 447
    '('                               shift, and go to state 448
    '$'                               shift, and go to state 449
    '@'                               shift, and go to state 450

    string_builder          go to state 451
    expr_reader             go to state 452
    expr_call_pipe          go to state 453
    name_in_namespace       go to state 454
    expr_new                go to state 455
    expr_cast               go to state 456
    expr_type_decl          go to state 457
    expr_type_info          go to state 458
    block_or_lambda         go to state 459
    expr_full_block         go to state 460
    expr_numeric_const      go to state 461
    expr_named_call         go to state 462
    expr_method_call        go to state 463
    func_addr_expr          go to state 464
    expr_field              go to state 465
    expr_call               go to state 466
    expr                    go to state 869
    expr_mtag               go to state 468
    basic_type_declaration  go to state 469
    make_decl               go to state 470
    make_struct_decl        go to state 471
    make_tuple_call         go to state 472
    make_dim_decl           go to state 473
    make_table_decl         go to state 474
    array_comprehension     go to state 475


State 664

  390 expr: expr '>' . expr

    "struct"                          shift, and go to state 402
    "class"                           shift, and go to state 403
    "true"                            shift, and go to state 404
    "false"                           shift, and go to state 405
    "new"                             shift, and go to state 406
    "typeinfo"                        shift, and go to state 407
    "type"                            shift, and go to state 408
    "array"                           shift, and go to state 409
    "null"                            shift, and go to state 410
    "table"                           shift, and go to state 411
    "deref"                           shift, and go to state 412
    "cast"                            shift, and go to state 413
    "upcast"                          shift, and go to state 414
    "addr"                            shift, and go to state 415
    "reinterpret"                     shift, and go to state 416
    "unsafe"                          shift, and go to state 417
    "fixed_array"                     shift, and go to state 418
    "default"                         shift, and go to state 419
    "bool"                            shift, and go to state 222
    "void"                            shift, and go to state 223
    "string"                          shift, and go to state 224
    "int"                             shift, and go to state 226
    "int2"                            shift, and go to state 227
    "int3"                            shift, and go to state 228
    "int4"                            shift, and go to state 229
    "uint"                            shift, and go to state 230
    "bitfield"                        shift, and go to state 420
    "uint2"                           shift, and go to state 232
    "uint3"                           shift, and go to state 233
    "uint4"                           shift, and go to state 234
    "float"                           shift, and go to state 235
    "float2"                          shift, and go to state 236
    "float3"                          shift, and go to state 237
    "float4"                          shift, and go to state 238
    "range"                           shift, and go to state 239
    "urange"                          shift, and go to state 240
    "range64"                         shift, and go to state 241
    "urange64"                        shift, and go to state 242
    "int64"                           shift, and go to state 244
    "uint64"                          shift, and go to state 245
    "double"                          shift, and go to state 246
    "int8"                            shift, and go to state 249
    "uint8"                           shift, and go to state 250
    "int16"                           shift, and go to state 251
    "uint16"                          shift, and go to state 252
    "tuple"                           shift, and go to state 421
    "variant"                         shift, and go to state 422
    "generator"                       shift, and go to state 423
    "++"                              shift, and go to state 424
    "--"                              shift, and go to state 425
    "::"                              shift, and go to state 55
    "$$"                              shift, and go to state 426
    "$i"                              shift, and go to state 427
    "$v"                              shift, and go to state 428
    "$b"                              shift, and go to state 429
    "$a"                              shift, and go to state 430
    "$c"                              shift, and go to state 431
    "..."                             shift, and go to state 432
    "integer constant"                shift, and go to state 433
    "long integer constant"           shift, and go to state 434
    "unsigned integer constant"       shift, and go to state 435
    "unsigned long integer constant"  shift, and go to state 436
    "unsigned int8 constant"          shift, and go to state 437
    "floating point constant"         shift, and go to state 438
    "double constant"                 shift, and go to state 439
    "name"                            shift, and go to state 56
    "start of the string"             shift, and go to state 440
    "begin of code block"             shift, and go to state 441
    '-'                               shift, and go to state 442
    '+'                               shift, and go to state 443
    '*'                               shift, and go to state 444
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 445
    '!'                               shift, and go to state 446
    '['                               shift, and go to state 447
    '('                               shift, and go to state 448
    '$'                               shift, and go to state 449
    '@'                               shift, and go to state 450

    string_builder          go to state 451
    expr_reader             go to state 452
    expr_call_pipe          go to state 453
    name_in_namespace       go to state 454
    expr_new                go to state 455
    expr_cast               go to state 456
    expr_type_decl          go to state 457
    expr_type_info          go to state 458
    block_or_lambda         go to state 459
    expr_full_block         go to state 460
    expr_numeric_const      go to state 461
    expr_named_call         go to state 462
    expr_method_call        go to state 463
    func_addr_expr          go to state 464
    expr_field              go to state 465
    expr_call               go to state 466
    expr                    go to state 870
    expr_mtag               go to state 468
    basic_type_declaration  go to state 469
    make_decl               go to state 470
    make_struct_decl        go to state 471
    make_tuple_call         go to state 472
    make_dim_decl           go to state 473
    make_table_decl         go to state 474
    array_comprehension     go to state 475


State 665

  385 expr: expr '-' . expr

    "struct"                          shift, and go to state 402
    "class"                           shift, and go to state 403
    "true"                            shift, and go to state 404
    "false"                           shift, and go to state 405
    "new"                             shift, and go to state 406
    "typeinfo"                        shift, and go to state 407
    "type"                            shift, and go to state 408
    "array"                           shift, and go to state 409
    "null"                            shift, and go to state 410
    "table"                           shift, and go to state 411
    "deref"                           shift, and go to state 412
    "cast"                            shift, and go to state 413
    "upcast"                          shift, and go to state 414
    "addr"                            shift, and go to state 415
    "reinterpret"                     shift, and go to state 416
    "unsafe"                          shift, and go to state 417
    "fixed_array"                     shift, and go to state 418
    "default"                         shift, and go to state 419
    "bool"                            shift, and go to state 222
    "void"                            shift, and go to state 223
    "string"                          shift, and go to state 224
    "int"                             shift, and go to state 226
    "int2"                            shift, and go to state 227
    "int3"                            shift, and go to state 228
    "int4"                            shift, and go to state 229
    "uint"                            shift, and go to state 230
    "bitfield"                        shift, and go to state 420
    "uint2"                           shift, and go to state 232
    "uint3"                           shift, and go to state 233
    "uint4"                           shift, and go to state 234
    "float"                           shift, and go to state 235
    "float2"                          shift, and go to state 236
    "float3"                          shift, and go to state 237
    "float4"                          shift, and go to state 238
    "range"                           shift, and go to state 239
    "urange"                          shift, and go to state 240
    "range64"                         shift, and go to state 241
    "urange64"                        shift, and go to state 242
    "int64"                           shift, and go to state 244
    "uint64"                          shift, and go to state 245
    "double"                          shift, and go to state 246
    "int8"                            shift, and go to state 249
    "uint8"                           shift, and go to state 250
    "int16"                           shift, and go to state 251
    "uint16"                          shift, and go to state 252
    "tuple"                           shift, and go to state 421
    "variant"                         shift, and go to state 422
    "generator"                       shift, and go to state 423
    "++"                              shift, and go to state 424
    "--"                              shift, and go to state 425
    "::"                              shift, and go to state 55
    "$$"                              shift, and go to state 426
    "$i"                              shift, and go to state 427
    "$v"                              shift, and go to state 428
    "$b"                              shift, and go to state 429
    "$a"                              shift, and go to state 430
    "$c"                              shift, and go to state 431
    "..."                             shift, and go to state 432
    "integer constant"                shift, and go to state 433
    "long integer constant"           shift, and go to state 434
    "unsigned integer constant"       shift, and go to state 435
    "unsigned long integer constant"  shift, and go to state 436
    "unsigned int8 constant"          shift, and go to state 437
    "floating point constant"         shift, and go to state 438
    "double constant"                 shift, and go to state 439
    "name"                            shift, and go to state 56
    "start of the string"             shift, and go to state 440
    "begin of code block"             shift, and go to state 441
    '-'                               shift, and go to state 442
    '+'                               shift, and go to state 443
    '*'                               shift, and go to state 444
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 445
    '!'                               shift, and go to state 446
    '['                               shift, and go to state 447
    '('                               shift, and go to state 448
    '$'                               shift, and go to state 449
    '@'                               shift, and go to state 450

    string_builder          go to state 451
    expr_reader             go to state 452
    expr_call_pipe          go to state 453
    name_in_namespace       go to state 454
    expr_new                go to state 455
    expr_cast               go to state 456
    expr_type_decl          go to state 457
    expr_type_info          go to state 458
    block_or_lambda         go to state 459
    expr_full_block         go to state 460
    expr_numeric_const      go to state 461
    expr_named_call         go to state 462
    expr_method_call        go to state 463
    func_addr_expr          go to state 464
    expr_field              go to state 465
    expr_call               go to state 466
    expr                    go to state 871
    expr_mtag               go to state 468
    basic_type_declaration  go to state 469
    make_decl               go to state 470
    make_struct_decl        go to state 471
    make_tuple_call         go to state 472
    make_dim_decl           go to state 473
    make_table_decl         go to state 474
    array_comprehension     go to state 475


State 666

  384 expr: expr '+' . expr

    "struct"                          shift, and go to state 402
    "class"                           shift, and go to state 403
    "true"                            shift, and go to state 404
    "false"                           shift, and go to state 405
    "new"                             shift, and go to state 406
    "typeinfo"                        shift, and go to state 407
    "type"                            shift, and go to state 408
    "array"                           shift, and go to state 409
    "null"                            shift, and go to state 410
    "table"                           shift, and go to state 411
    "deref"                           shift, and go to state 412
    "cast"                            shift, and go to state 413
    "upcast"                          shift, and go to state 414
    "addr"                            shift, and go to state 415
    "reinterpret"                     shift, and go to state 416
    "unsafe"                          shift, and go to state 417
    "fixed_array"                     shift, and go to state 418
    "default"                         shift, and go to state 419
    "bool"                            shift, and go to state 222
    "void"                            shift, and go to state 223
    "string"                          shift, and go to state 224
    "int"                             shift, and go to state 226
    "int2"                            shift, and go to state 227
    "int3"                            shift, and go to state 228
    "int4"                            shift, and go to state 229
    "uint"                            shift, and go to state 230
    "bitfield"                        shift, and go to state 420
    "uint2"                           shift, and go to state 232
    "uint3"                           shift, and go to state 233
    "uint4"                           shift, and go to state 234
    "float"                           shift, and go to state 235
    "float2"                          shift, and go to state 236
    "float3"                          shift, and go to state 237
    "float4"                          shift, and go to state 238
    "range"                           shift, and go to state 239
    "urange"                          shift, and go to state 240
    "range64"                         shift, and go to state 241
    "urange64"                        shift, and go to state 242
    "int64"                           shift, and go to state 244
    "uint64"                          shift, and go to state 245
    "double"                          shift, and go to state 246
    "int8"                            shift, and go to state 249
    "uint8"                           shift, and go to state 250
    "int16"                           shift, and go to state 251
    "uint16"                          shift, and go to state 252
    "tuple"                           shift, and go to state 421
    "variant"                         shift, and go to state 422
    "generator"                       shift, and go to state 423
    "++"                              shift, and go to state 424
    "--"                              shift, and go to state 425
    "::"                              shift, and go to state 55
    "$$"                              shift, and go to state 426
    "$i"                              shift, and go to state 427
    "$v"                              shift, and go to state 428
    "$b"                              shift, and go to state 429
    "$a"                              shift, and go to state 430
    "$c"                              shift, and go to state 431
    "..."                             shift, and go to state 432
    "integer constant"                shift, and go to state 433
    "long integer constant"           shift, and go to state 434
    "unsigned integer constant"       shift, and go to state 435
    "unsigned long integer constant"  shift, and go to state 436
    "unsigned int8 constant"          shift, and go to state 437
    "floating point constant"         shift, and go to state 438
    "double constant"                 shift, and go to state 439
    "name"                            shift, and go to state 56
    "start of the string"             shift, and go to state 440
    "begin of code block"             shift, and go to state 441
    '-'                               shift, and go to state 442
    '+'                               shift, and go to state 443
    '*'                               shift, and go to state 444
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 445
    '!'                               shift, and go to state 446
    '['                               shift, and go to state 447
    '('                               shift, and go to state 448
    '$'                               shift, and go to state 449
    '@'                               shift, and go to state 450

    string_builder          go to state 451
    expr_reader             go to state 452
    expr_call_pipe          go to state 453
    name_in_namespace       go to state 454
    expr_new                go to state 455
    expr_cast               go to state 456
    expr_type_decl          go to state 457
    expr_type_info          go to state 458
    block_or_lambda         go to state 459
    expr_full_block         go to state 460
    expr_numeric_const      go to state 461
    expr_named_call         go to state 462
    expr_method_call        go to state 463
    func_addr_expr          go to state 464
    expr_field              go to state 465
    expr_call               go to state 466
    expr                    go to state 872
    expr_mtag               go to state 468
    basic_type_declaration  go to state 469
    make_decl               go to state 470
    make_struct_decl        go to state 471
    make_tuple_call         go to state 472
    make_dim_decl           go to state 473
    make_table_decl         go to state 474
    array_comprehension     go to state 475


State 667

  386 expr: expr '*' . expr

    "struct"                          shift, and go to state 402
    "class"                           shift, and go to state 403
    "true"                            shift, and go to state 404
    "false"                           shift, and go to state 405
    "new"                             shift, and go to state 406
    "typeinfo"                        shift, and go to state 407
    "type"                            shift, and go to state 408
    "array"                           shift, and go to state 409
    "null"                            shift, and go to state 410
    "table"                           shift, and go to state 411
    "deref"                           shift, and go to state 412
    "cast"                            shift, and go to state 413
    "upcast"                          shift, and go to state 414
    "addr"                            shift, and go to state 415
    "reinterpret"                     shift, and go to state 416
    "unsafe"                          shift, and go to state 417
    "fixed_array"                     shift, and go to state 418
    "default"                         shift, and go to state 419
    "bool"                            shift, and go to state 222
    "void"                            shift, and go to state 223
    "string"                          shift, and go to state 224
    "int"                             shift, and go to state 226
    "int2"                            shift, and go to state 227
    "int3"                            shift, and go to state 228
    "int4"                            shift, and go to state 229
    "uint"                            shift, and go to state 230
    "bitfield"                        shift, and go to state 420
    "uint2"                           shift, and go to state 232
    "uint3"                           shift, and go to state 233
    "uint4"                           shift, and go to state 234
    "float"                           shift, and go to state 235
    "float2"                          shift, and go to state 236
    "float3"                          shift, and go to state 237
    "float4"                          shift, and go to state 238
    "range"                           shift, and go to state 239
    "urange"                          shift, and go to state 240
    "range64"                         shift, and go to state 241
    "urange64"                        shift, and go to state 242
    "int64"                           shift, and go to state 244
    "uint64"                          shift, and go to state 245
    "double"                          shift, and go to state 246
    "int8"                            shift, and go to state 249
    "uint8"                           shift, and go to state 250
    "int16"                           shift, and go to state 251
    "uint16"                          shift, and go to state 252
    "tuple"                           shift, and go to state 421
    "variant"                         shift, and go to state 422
    "generator"                       shift, and go to state 423
    "++"                              shift, and go to state 424
    "--"                              shift, and go to state 425
    "::"                              shift, and go to state 55
    "$$"                              shift, and go to state 426
    "$i"                              shift, and go to state 427
    "$v"                              shift, and go to state 428
    "$b"                              shift, and go to state 429
    "$a"                              shift, and go to state 430
    "$c"                              shift, and go to state 431
    "..."                             shift, and go to state 432
    "integer constant"                shift, and go to state 433
    "long integer constant"           shift, and go to state 434
    "unsigned integer constant"       shift, and go to state 435
    "unsigned long integer constant"  shift, and go to state 436
    "unsigned int8 constant"          shift, and go to state 437
    "floating point constant"         shift, and go to state 438
    "double constant"                 shift, and go to state 439
    "name"                            shift, and go to state 56
    "start of the string"             shift, and go to state 440
    "begin of code block"             shift, and go to state 441
    '-'                               shift, and go to state 442
    '+'                               shift, and go to state 443
    '*'                               shift, and go to state 444
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 445
    '!'                               shift, and go to state 446
    '['                               shift, and go to state 447
    '('                               shift, and go to state 448
    '$'                               shift, and go to state 449
    '@'                               shift, and go to state 450

    string_builder          go to state 451
    expr_reader             go to state 452
    expr_call_pipe          go to state 453
    name_in_namespace       go to state 454
    expr_new                go to state 455
    expr_cast               go to state 456
    expr_type_decl          go to state 457
    expr_type_info          go to state 458
    block_or_lambda         go to state 459
    expr_full_block         go to state 460
    expr_numeric_const      go to state 461
    expr_named_call         go to state 462
    expr_method_call        go to state 463
    func_addr_expr          go to state 464
    expr_field              go to state 465
    expr_call               go to state 466
    expr                    go to state 873
    expr_mtag               go to state 468
    basic_type_declaration  go to state 469
    make_decl               go to state 470
    make_struct_decl        go to state 471
    make_tuple_call         go to state 472
    make_dim_decl           go to state 473
    make_table_decl         go to state 474
    array_comprehension     go to state 475


State 668

  387 expr: expr '/' . expr

    "struct"                          shift, and go to state 402
    "class"                           shift, and go to state 403
    "true"                            shift, and go to state 404
    "false"                           shift, and go to state 405
    "new"                             shift, and go to state 406
    "typeinfo"                        shift, and go to state 407
    "type"                            shift, and go to state 408
    "array"                           shift, and go to state 409
    "null"                            shift, and go to state 410
    "table"                           shift, and go to state 411
    "deref"                           shift, and go to state 412
    "cast"                            shift, and go to state 413
    "upcast"                          shift, and go to state 414
    "addr"                            shift, and go to state 415
    "reinterpret"                     shift, and go to state 416
    "unsafe"                          shift, and go to state 417
    "fixed_array"                     shift, and go to state 418
    "default"                         shift, and go to state 419
    "bool"                            shift, and go to state 222
    "void"                            shift, and go to state 223
    "string"                          shift, and go to state 224
    "int"                             shift, and go to state 226
    "int2"                            shift, and go to state 227
    "int3"                            shift, and go to state 228
    "int4"                            shift, and go to state 229
    "uint"                            shift, and go to state 230
    "bitfield"                        shift, and go to state 420
    "uint2"                           shift, and go to state 232
    "uint3"                           shift, and go to state 233
    "uint4"                           shift, and go to state 234
    "float"                           shift, and go to state 235
    "float2"                          shift, and go to state 236
    "float3"                          shift, and go to state 237
    "float4"                          shift, and go to state 238
    "range"                           shift, and go to state 239
    "urange"                          shift, and go to state 240
    "range64"                         shift, and go to state 241
    "urange64"                        shift, and go to state 242
    "int64"                           shift, and go to state 244
    "uint64"                          shift, and go to state 245
    "double"                          shift, and go to state 246
    "int8"                            shift, and go to state 249
    "uint8"                           shift, and go to state 250
    "int16"                           shift, and go to state 251
    "uint16"                          shift, and go to state 252
    "tuple"                           shift, and go to state 421
    "variant"                         shift, and go to state 422
    "generator"                       shift, and go to state 423
    "++"                              shift, and go to state 424
    "--"                              shift, and go to state 425
    "::"                              shift, and go to state 55
    "$$"                              shift, and go to state 426
    "$i"                              shift, and go to state 427
    "$v"                              shift, and go to state 428
    "$b"                              shift, and go to state 429
    "$a"                              shift, and go to state 430
    "$c"                              shift, and go to state 431
    "..."                             shift, and go to state 432
    "integer constant"                shift, and go to state 433
    "long integer constant"           shift, and go to state 434
    "unsigned integer constant"       shift, and go to state 435
    "unsigned long integer constant"  shift, and go to state 436
    "unsigned int8 constant"          shift, and go to state 437
    "floating point constant"         shift, and go to state 438
    "double constant"                 shift, and go to state 439
    "name"                            shift, and go to state 56
    "start of the string"             shift, and go to state 440
    "begin of code block"             shift, and go to state 441
    '-'                               shift, and go to state 442
    '+'                               shift, and go to state 443
    '*'                               shift, and go to state 444
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 445
    '!'                               shift, and go to state 446
    '['                               shift, and go to state 447
    '('                               shift, and go to state 448
    '$'                               shift, and go to state 449
    '@'                               shift, and go to state 450

    string_builder          go to state 451
    expr_reader             go to state 452
    expr_call_pipe          go to state 453
    name_in_namespace       go to state 454
    expr_new                go to state 455
    expr_cast               go to state 456
    expr_type_decl          go to state 457
    expr_type_info          go to state 458
    block_or_lambda         go to state 459
    expr_full_block         go to state 460
    expr_numeric_const      go to state 461
    expr_named_call         go to state 462
    expr_method_call        go to state 463
    func_addr_expr          go to state 464
    expr_field              go to state 465
    expr_call               go to state 466
    expr                    go to state 874
    expr_mtag               go to state 468
    basic_type_declaration  go to state 469
    make_decl               go to state 470
    make_struct_decl        go to state 471
    make_tuple_call         go to state 472
    make_dim_decl           go to state 473
    make_table_decl         go to state 474
    array_comprehension     go to state 475


State 669

  388 expr: expr '%' . expr

    "struct"                          shift, and go to state 402
    "class"                           shift, and go to state 403
    "true"                            shift, and go to state 404
    "false"                           shift, and go to state 405
    "new"                             shift, and go to state 406
    "typeinfo"                        shift, and go to state 407
    "type"                            shift, and go to state 408
    "array"                           shift, and go to state 409
    "null"                            shift, and go to state 410
    "table"                           shift, and go to state 411
    "deref"                           shift, and go to state 412
    "cast"                            shift, and go to state 413
    "upcast"                          shift, and go to state 414
    "addr"                            shift, and go to state 415
    "reinterpret"                     shift, and go to state 416
    "unsafe"                          shift, and go to state 417
    "fixed_array"                     shift, and go to state 418
    "default"                         shift, and go to state 419
    "bool"                            shift, and go to state 222
    "void"                            shift, and go to state 223
    "string"                          shift, and go to state 224
    "int"                             shift, and go to state 226
    "int2"                            shift, and go to state 227
    "int3"                            shift, and go to state 228
    "int4"                            shift, and go to state 229
    "uint"                            shift, and go to state 230
    "bitfield"                        shift, and go to state 420
    "uint2"                           shift, and go to state 232
    "uint3"                           shift, and go to state 233
    "uint4"                           shift, and go to state 234
    "float"                           shift, and go to state 235
    "float2"                          shift, and go to state 236
    "float3"                          shift, and go to state 237
    "float4"                          shift, and go to state 238
    "range"                           shift, and go to state 239
    "urange"                          shift, and go to state 240
    "range64"                         shift, and go to state 241
    "urange64"                        shift, and go to state 242
    "int64"                           shift, and go to state 244
    "uint64"                          shift, and go to state 245
    "double"                          shift, and go to state 246
    "int8"                            shift, and go to state 249
    "uint8"                           shift, and go to state 250
    "int16"                           shift, and go to state 251
    "uint16"                          shift, and go to state 252
    "tuple"                           shift, and go to state 421
    "variant"                         shift, and go to state 422
    "generator"                       shift, and go to state 423
    "++"                              shift, and go to state 424
    "--"                              shift, and go to state 425
    "::"                              shift, and go to state 55
    "$$"                              shift, and go to state 426
    "$i"                              shift, and go to state 427
    "$v"                              shift, and go to state 428
    "$b"                              shift, and go to state 429
    "$a"                              shift, and go to state 430
    "$c"                              shift, and go to state 431
    "..."                             shift, and go to state 432
    "integer constant"                shift, and go to state 433
    "long integer constant"           shift, and go to state 434
    "unsigned integer constant"       shift, and go to state 435
    "unsigned long integer constant"  shift, and go to state 436
    "unsigned int8 constant"          shift, and go to state 437
    "floating point constant"         shift, and go to state 438
    "double constant"                 shift, and go to state 439
    "name"                            shift, and go to state 56
    "start of the string"             shift, and go to state 440
    "begin of code block"             shift, and go to state 441
    '-'                               shift, and go to state 442
    '+'                               shift, and go to state 443
    '*'                               shift, and go to state 444
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 445
    '!'                               shift, and go to state 446
    '['                               shift, and go to state 447
    '('                               shift, and go to state 448
    '$'                               shift, and go to state 449
    '@'                               shift, and go to state 450

    string_builder          go to state 451
    expr_reader             go to state 452
    expr_call_pipe          go to state 453
    name_in_namespace       go to state 454
    expr_new                go to state 455
    expr_cast               go to state 456
    expr_type_decl          go to state 457
    expr_type_info          go to state 458
    block_or_lambda         go to state 459
    expr_full_block         go to state 460
    expr_numeric_const      go to state 461
    expr_named_call         go to state 462
    expr_method_call        go to state 463
    func_addr_expr          go to state 464
    expr_field              go to state 465
    expr_call               go to state 466
    expr                    go to state 875
    expr_mtag               go to state 468
    basic_type_declaration  go to state 469
    make_decl               go to state 470
    make_struct_decl        go to state 471
    make_tuple_call         go to state 472
    make_dim_decl           go to state 473
    make_table_decl         go to state 474
    array_comprehension     go to state 475


State 670

  350 expr_field: expr '.' . "name"
  351           | expr '.' . '.' "name"
  352           | expr '.' . "name" '(' ')'
  353           | expr '.' . "name" '(' expr_list ')'
  354           | expr '.' . basic_type_declaration '(' ')'
  355           | expr '.' . basic_type_declaration '(' expr_list ')'
  358           | expr '.' . $@17 error $@18
  408 expr: expr '.' . '[' expr ']'
  410     | expr '.' . "?[" expr ']'
  412     | expr '.' . "?." "name"
  458 expr_mtag: expr '.' . "$f" '(' expr ')'
  460          | expr '.' . '.' "$f" '(' expr ')'
  461          | expr '.' . "?." "$f" '(' expr ')'

    "bool"      shift, and go to state 222
    "void"      shift, and go to state 223
    "string"    shift, and go to state 224
    "int"       shift, and go to state 226
    "int2"      shift, and go to state 227
    "int3"      shift, and go to state 228
    "int4"      shift, and go to state 229
    "uint"      shift, and go to state 230
    "bitfield"  shift, and go to state 420
    "uint2"     shift, and go to state 232
    "uint3"     shift, and go to state 233
    "uint4"     shift, and go to state 234
    "float"     shift, and go to state 235
    "float2"    shift, and go to state 236
    "float3"    shift, and go to state 237
    "float4"    shift, and go to state 238
    "range"     shift, and go to state 239
    "urange"    shift, and go to state 240
    "range64"   shift, and go to state 241
    "urange64"  shift, and go to state 242
    "int64"     shift, and go to state 244
    "uint64"    shift, and go to state 245
    "double"    shift, and go to state 246
    "int8"      shift, and go to state 249
    "uint8"     shift, and go to state 250
    "int16"     shift, and go to state 251
    "uint16"    shift, and go to state 252
    "?."        shift, and go to state 876
    "?["        shift, and go to state 877
    "$f"        shift, and go to state 878
    "name"      shift, and go to state 879
    '.'         shift, and go to state 880
    '['         shift, and go to state 881

    $default  reduce using rule 356 ($@17)

    $@17                    go to state 882
    basic_type_declaration  go to state 883


State 671

  407 expr: expr '[' . expr ']'

    "struct"                          shift, and go to state 402
    "class"                           shift, and go to state 403
    "true"                            shift, and go to state 404
    "false"                           shift, and go to state 405
    "new"                             shift, and go to state 406
    "typeinfo"                        shift, and go to state 407
    "type"                            shift, and go to state 408
    "array"                           shift, and go to state 409
    "null"                            shift, and go to state 410
    "table"                           shift, and go to state 411
    "deref"                           shift, and go to state 412
    "cast"                            shift, and go to state 413
    "upcast"                          shift, and go to state 414
    "addr"                            shift, and go to state 415
    "reinterpret"                     shift, and go to state 416
    "unsafe"                          shift, and go to state 417
    "fixed_array"                     shift, and go to state 418
    "default"                         shift, and go to state 419
    "bool"                            shift, and go to state 222
    "void"                            shift, and go to state 223
    "string"                          shift, and go to state 224
    "int"                             shift, and go to state 226
    "int2"                            shift, and go to state 227
    "int3"                            shift, and go to state 228
    "int4"                            shift, and go to state 229
    "uint"                            shift, and go to state 230
    "bitfield"                        shift, and go to state 420
    "uint2"                           shift, and go to state 232
    "uint3"                           shift, and go to state 233
    "uint4"                           shift, and go to state 234
    "float"                           shift, and go to state 235
    "float2"                          shift, and go to state 236
    "float3"                          shift, and go to state 237
    "float4"                          shift, and go to state 238
    "range"                           shift, and go to state 239
    "urange"                          shift, and go to state 240
    "range64"                         shift, and go to state 241
    "urange64"                        shift, and go to state 242
    "int64"                           shift, and go to state 244
    "uint64"                          shift, and go to state 245
    "double"                          shift, and go to state 246
    "int8"                            shift, and go to state 249
    "uint8"                           shift, and go to state 250
    "int16"                           shift, and go to state 251
    "uint16"                          shift, and go to state 252
    "tuple"                           shift, and go to state 421
    "variant"                         shift, and go to state 422
    "generator"                       shift, and go to state 423
    "++"                              shift, and go to state 424
    "--"                              shift, and go to state 425
    "::"                              shift, and go to state 55
    "$$"                              shift, and go to state 426
    "$i"                              shift, and go to state 427
    "$v"                              shift, and go to state 428
    "$b"                              shift, and go to state 429
    "$a"                              shift, and go to state 430
    "$c"                              shift, and go to state 431
    "..."                             shift, and go to state 432
    "integer constant"                shift, and go to state 433
    "long integer constant"           shift, and go to state 434
    "unsigned integer constant"       shift, and go to state 435
    "unsigned long integer constant"  shift, and go to state 436
    "unsigned int8 constant"          shift, and go to state 437
    "floating point constant"         shift, and go to state 438
    "double constant"                 shift, and go to state 439
    "name"                            shift, and go to state 56
    "start of the string"             shift, and go to state 440
    "begin of code block"             shift, and go to state 441
    '-'                               shift, and go to state 442
    '+'                               shift, and go to state 443
    '*'                               shift, and go to state 444
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 445
    '!'                               shift, and go to state 446
    '['                               shift, and go to state 447
    '('                               shift, and go to state 448
    '$'                               shift, and go to state 449
    '@'                               shift, and go to state 450

    string_builder          go to state 451
    expr_reader             go to state 452
    expr_call_pipe          go to state 453
    name_in_namespace       go to state 454
    expr_new                go to state 455
    expr_cast               go to state 456
    expr_type_decl          go to state 457
    expr_type_info          go to state 458
    block_or_lambda         go to state 459
    expr_full_block         go to state 460
    expr_numeric_const      go to state 461
    expr_named_call         go to state 462
    expr_method_call        go to state 463
    func_addr_expr          go to state 464
    expr_field              go to state 465
    expr_call               go to state 466
    expr                    go to state 884
    expr_mtag               go to state 468
    basic_type_declaration  go to state 469
    make_decl               go to state 470
    make_struct_decl        go to state 471
    make_tuple_call         go to state 472
    make_dim_decl           go to state 473
    make_table_decl         go to state 474
    array_comprehension     go to state 475


State 672

  639 type_declaration_no_options_no_dim: "typedecl" '(' expr ')' .

    $default  reduce using rule 639 (type_declaration_no_options_no_dim)


State 673

  364 expr_call: basic_type_declaration '(' . ')'
  365          | basic_type_declaration '(' . expr_list ')'

    "struct"                          shift, and go to state 402
    "class"                           shift, and go to state 403
    "true"                            shift, and go to state 404
    "false"                           shift, and go to state 405
    "new"                             shift, and go to state 406
    "typeinfo"                        shift, and go to state 407
    "type"                            shift, and go to state 408
    "array"                           shift, and go to state 409
    "null"                            shift, and go to state 410
    "table"                           shift, and go to state 411
    "deref"                           shift, and go to state 412
    "cast"                            shift, and go to state 413
    "upcast"                          shift, and go to state 414
    "addr"                            shift, and go to state 415
    "reinterpret"                     shift, and go to state 416
    "unsafe"                          shift, and go to state 417
    "fixed_array"                     shift, and go to state 418
    "default"                         shift, and go to state 419
    "bool"                            shift, and go to state 222
    "void"                            shift, and go to state 223
    "string"                          shift, and go to state 224
    "int"                             shift, and go to state 226
    "int2"                            shift, and go to state 227
    "int3"                            shift, and go to state 228
    "int4"                            shift, and go to state 229
    "uint"                            shift, and go to state 230
    "bitfield"                        shift, and go to state 420
    "uint2"                           shift, and go to state 232
    "uint3"                           shift, and go to state 233
    "uint4"                           shift, and go to state 234
    "float"                           shift, and go to state 235
    "float2"                          shift, and go to state 236
    "float3"                          shift, and go to state 237
    "float4"                          shift, and go to state 238
    "range"                           shift, and go to state 239
    "urange"                          shift, and go to state 240
    "range64"                         shift, and go to state 241
    "urange64"                        shift, and go to state 242
    "int64"                           shift, and go to state 244
    "uint64"                          shift, and go to state 245
    "double"                          shift, and go to state 246
    "int8"                            shift, and go to state 249
    "uint8"                           shift, and go to state 250
    "int16"                           shift, and go to state 251
    "uint16"                          shift, and go to state 252
    "tuple"                           shift, and go to state 421
    "variant"                         shift, and go to state 422
    "generator"                       shift, and go to state 423
    "++"                              shift, and go to state 424
    "--"                              shift, and go to state 425
    "::"                              shift, and go to state 55
    "$$"                              shift, and go to state 426
    "$i"                              shift, and go to state 427
    "$v"                              shift, and go to state 428
    "$b"                              shift, and go to state 429
    "$a"                              shift, and go to state 430
    "$c"                              shift, and go to state 431
    "..."                             shift, and go to state 432
    "integer constant"                shift, and go to state 433
    "long integer constant"           shift, and go to state 434
    "unsigned integer constant"       shift, and go to state 435
    "unsigned long integer constant"  shift, and go to state 436
    "unsigned int8 constant"          shift, and go to state 437
    "floating point constant"         shift, and go to state 438
    "double constant"                 shift, and go to state 439
    "name"                            shift, and go to state 56
    "start of the string"             shift, and go to state 440
    "begin of code block"             shift, and go to state 441
    '-'                               shift, and go to state 442
    '+'                               shift, and go to state 443
    '*'                               shift, and go to state 444
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 445
    '!'                               shift, and go to state 446
    '['                               shift, and go to state 447
    '('                               shift, and go to state 448
    ')'                               shift, and go to state 885
    '$'                               shift, and go to state 449
    '@'                               shift, and go to state 450

    string_builder          go to state 451
    expr_reader             go to state 452
    expr_call_pipe          go to state 453
    name_in_namespace       go to state 454
    expr_new                go to state 455
    expr_cast               go to state 456
    expr_type_decl          go to state 457
    expr_type_info          go to state 458
    expr_list               go to state 886
    block_or_lambda         go to state 459
    expr_full_block         go to state 460
    expr_numeric_const      go to state 461
    expr_named_call         go to state 462
    expr_method_call        go to state 463
    func_addr_expr          go to state 464
    expr_field              go to state 465
    expr_call               go to state 466
    expr                    go to state 628
    expr_mtag               go to state 468
    basic_type_declaration  go to state 469
    make_decl               go to state 470
    make_struct_decl        go to state 471
    make_tuple_call         go to state 472
    make_dim_decl           go to state 473
    make_table_decl         go to state 474
    array_comprehension     go to state 475


State 674

  667 type_declaration_no_options_no_dim: "iterator" '<' $@45 type_declaration . '>' $@46
  696 type_declaration: type_declaration . '|' type_declaration_no_options
  697                 | type_declaration . '|' '#'

    '|'  shift, and go to state 369
    '>'  shift, and go to state 887


State 675

  657 type_declaration_no_options_no_dim: "smart_ptr" '<' $@39 type_declaration . '>' $@40
  696 type_declaration: type_declaration . '|' type_declaration_no_options
  697                 | type_declaration . '|' '#'

    '|'  shift, and go to state 369
    '>'  shift, and go to state 888


State 676

  612 auto_type_declaration: "auto" '(' "name" ')' .

    $default  reduce using rule 612 (auto_type_declaration)


State 677

  614 bitfield_bits: "name" .

    $default  reduce using rule 614 (bitfield_bits)


State 678

  615 bitfield_bits: bitfield_bits . "end of expression" "name"
  621 bitfield_type_declaration: "bitfield" '<' $@34 bitfield_bits . '>' $@35

    "end of expression"  shift, and go to state 889
    '>'                  shift, and go to state 890


State 679

  671 type_declaration_no_options_no_dim: "block" '<' $@47 type_declaration . '>' $@48
  696 type_declaration: type_declaration . '|' type_declaration_no_options
  697                 | type_declaration . '|' '#'

    '|'  shift, and go to state 369
    '>'  shift, and go to state 891


State 680

  674 type_declaration_no_options_no_dim: "block" '<' $@49 optional_function_argument_list . optional_function_type '>' $@50

    ':'  shift, and go to state 386

    $default  reduce using rule 118 (optional_function_type)

    optional_function_type  go to state 892


State 681

  678 type_declaration_no_options_no_dim: "function" '<' $@51 type_declaration . '>' $@52
  696 type_declaration: type_declaration . '|' type_declaration_no_options
  697                 | type_declaration . '|' '#'

    '|'  shift, and go to state 369
    '>'  shift, and go to state 893


State 682

  681 type_declaration_no_options_no_dim: "function" '<' $@53 optional_function_argument_list . optional_function_type '>' $@54

    ':'  shift, and go to state 386

    $default  reduce using rule 118 (optional_function_type)

    optional_function_type  go to state 894


State 683

  685 type_declaration_no_options_no_dim: "lambda" '<' $@55 type_declaration . '>' $@56
  696 type_declaration: type_declaration . '|' type_declaration_no_options
  697                 | type_declaration . '|' '#'

    '|'  shift, and go to state 369
    '>'  shift, and go to state 895


State 684

  688 type_declaration_no_options_no_dim: "lambda" '<' $@57 optional_function_argument_list . optional_function_type '>' $@58

    ':'  shift, and go to state 386

    $default  reduce using rule 118 (optional_function_type)

    optional_function_type  go to state 896


State 685

  492 tuple_type_list: tuple_type .

    $default  reduce using rule 492 (tuple_type_list)


State 686

  493 tuple_type_list: tuple_type_list . c_or_s tuple_type
  691 type_declaration_no_options_no_dim: "tuple" '<' $@59 tuple_type_list . '>' $@60

    "end of expression"  shift, and go to state 505
    ','                  shift, and go to state 506
    '>'                  shift, and go to state 897

    c_or_s  go to state 898


State 687

  498 variant_type_list: variant_type .

    $default  reduce using rule 498 (variant_type_list)


State 688

  499 variant_type_list: variant_type_list . c_or_s variant_type
  694 type_declaration_no_options_no_dim: "variant" '<' $@61 variant_type_list . '>' $@62

    "end of expression"  shift, and go to state 505
    ','                  shift, and go to state 506
    '>'                  shift, and go to state 899

    c_or_s  go to state 900


State 689

  613 auto_type_declaration: "$t" '(' expr ')' .

    $default  reduce using rule 613 (auto_type_declaration)


State 690

  642 type_declaration_no_options_no_dim: '$' name_in_namespace '<' $@38 . type_declaration_no_options_list '>' '(' optional_expr_list ')'

    "type"       shift, and go to state 216
    "array"      shift, and go to state 217
    "table"      shift, and go to state 218
    "typedecl"   shift, and go to state 219
    "iterator"   shift, and go to state 220
    "smart_ptr"  shift, and go to state 221
    "bool"       shift, and go to state 222
    "void"       shift, and go to state 223
    "string"     shift, and go to state 224
    "auto"       shift, and go to state 225
    "int"        shift, and go to state 226
    "int2"       shift, and go to state 227
    "int3"       shift, and go to state 228
    "int4"       shift, and go to state 229
    "uint"       shift, and go to state 230
    "bitfield"   shift, and go to state 231
    "uint2"      shift, and go to state 232
    "uint3"      shift, and go to state 233
    "uint4"      shift, and go to state 234
    "float"      shift, and go to state 235
    "float2"     shift, and go to state 236
    "float3"     shift, and go to state 237
    "float4"     shift, and go to state 238
    "range"      shift, and go to state 239
    "urange"     shift, and go to state 240
    "range64"    shift, and go to state 241
    "urange64"   shift, and go to state 242
    "block"      shift, and go to state 243
    "int64"      shift, and go to state 244
    "uint64"     shift, and go to state 245
    "double"     shift, and go to state 246
    "function"   shift, and go to state 247
    "lambda"     shift, and go to state 248
    "int8"       shift, and go to state 249
    "uint8"      shift, and go to state 250
    "int16"      shift, and go to state 251
    "uint16"     shift, and go to state 252
    "tuple"      shift, and go to state 253
    "variant"    shift, and go to state 254
    "::"         shift, and go to state 55
    "$t"         shift, and go to state 255
    "name"       shift, and go to state 56
    '$'          shift, and go to state 256

    type_declaration_no_options_list    go to state 901
    name_in_namespace                   go to state 257
    basic_type_declaration              go to state 258
    structure_type_declaration          go to state 259
    auto_type_declaration               go to state 260
    bitfield_type_declaration           go to state 261
    type_declaration_no_options         go to state 262
    type_declaration_no_options_no_dim  go to state 263
    type_declaration                    go to state 902


State 691

  640 type_declaration_no_options_no_dim: '$' name_in_namespace '(' optional_expr_list . ')'

    ')'  shift, and go to state 903


State 692

  237 optional_expr_list: expr_list . optional_comma
  292 expr_list: expr_list . ',' expr

    ','  shift, and go to state 815

    $default  reduce using rule 777 (optional_comma)

    optional_comma  go to state 904


State 693

  643 type_declaration_no_options_no_dim: type_declaration_no_options_no_dim '-' '[' ']' .

    $default  reduce using rule 643 (type_declaration_no_options_no_dim)


State 694

  626 dim_list: '[' expr ']' .

    $default  reduce using rule 626 (dim_list)


State 695

  629 dim_list: dim_list '[' ']' .

    $default  reduce using rule 629 (dim_list)


State 696

  339 expr_method_call: expr . "->" "name" '(' ')'
  340                 | expr . "->" "name" '(' expr_list ')'
  350 expr_field: expr . '.' "name"
  351           | expr . '.' '.' "name"
  352           | expr . '.' "name" '(' ')'
  353           | expr . '.' "name" '(' expr_list ')'
  354           | expr . '.' basic_type_declaration '(' ')'
  355           | expr . '.' basic_type_declaration '(' expr_list ')'
  358           | expr . '.' $@17 error $@18
  380 expr: expr . "<<" expr
  381     | expr . ">>" expr
  382     | expr . "<<<" expr
  383     | expr . ">>>" expr
  384     | expr . '+' expr
  385     | expr . '-' expr
  386     | expr . '*' expr
  387     | expr . '/' expr
  388     | expr . '%' expr
  389     | expr . '<' expr
  390     | expr . '>' expr
  391     | expr . "==" expr
  392     | expr . "!=" expr
  393     | expr . "<=" expr
  394     | expr . ">=" expr
  395     | expr . '&' expr
  396     | expr . '|' expr
  397     | expr . '^' expr
  398     | expr . "&&" expr
  399     | expr . "||" expr
  400     | expr . "^^" expr
  401     | expr . ".." expr
  404     | expr . "++"
  405     | expr . "--"
  407     | expr . '[' expr ']'
  408     | expr . '.' '[' expr ']'
  409     | expr . "?[" expr ']'
  410     | expr . '.' "?[" expr ']'
  411     | expr . "?." "name"
  412     | expr . '.' "?." "name"
  421     | expr . "??" expr
  422     | expr . '?' expr ':' expr
  425     | expr . "is" "type" '<' $@19 type_declaration_no_options '>' $@20
  426     | expr . "is" basic_type_declaration
  427     | expr . "is" "name"
  428     | expr . "as" "name"
  431     | expr . "as" "type" '<' $@21 type_declaration '>' $@22
  432     | expr . "as" basic_type_declaration
  433     | expr . '?' "as" "name"
  436     | expr . '?' "as" "type" '<' $@23 type_declaration '>' $@24
  437     | expr . '?' "as" basic_type_declaration
  445     | expr . "<|" expr
  446     | expr . "|>" expr
  447     | expr . "|>" basic_type_declaration
  458 expr_mtag: expr . '.' "$f" '(' expr ')'
  459          | expr . "?." "$f" '(' expr ')'
  460          | expr . '.' '.' "$f" '(' expr ')'
  461          | expr . '.' "?." "$f" '(' expr ')'
  462          | expr . "as" "$f" '(' expr ')'
  463          | expr . '?' "as" "$f" '(' expr ')'
  464          | expr . "is" "$f" '(' expr ')'
  628 dim_list: dim_list '[' expr . ']'

    "is"   shift, and go to state 637
    "as"   shift, and go to state 638
    "<<"   shift, and go to state 639
    ">>"   shift, and go to state 640
    "++"   shift, and go to state 641
    "--"   shift, and go to state 642
    "<="   shift, and go to state 643
    ">="   shift, and go to state 644
    "=="   shift, and go to state 645
    "!="   shift, and go to state 646
    "->"   shift, and go to state 647
    "??"   shift, and go to state 648
    "?."   shift, and go to state 649
    "?["   shift, and go to state 650
    "<|"   shift, and go to state 651
    "|>"   shift, and go to state 652
    "<<<"  shift, and go to state 653
    ">>>"  shift, and go to state 654
    "&&"   shift, and go to state 655
    "||"   shift, and go to state 656
    "^^"   shift, and go to state 657
    ".."   shift, and go to state 658
    '?'    shift, and go to state 659
    '|'    shift, and go to state 660
    '^'    shift, and go to state 661
    '&'    shift, and go to state 662
    '<'    shift, and go to state 663
    '>'    shift, and go to state 664
    '-'    shift, and go to state 665
    '+'    shift, and go to state 666
    '*'    shift, and go to state 667
    '/'    shift, and go to state 668
    '%'    shift, and go to state 669
    '.'    shift, and go to state 670
    '['    shift, and go to state 671
    ']'    shift, and go to state 905


State 697

  618 bitfield_alias_bits: bitfield_alias_bits ',' "name" .

    $default  reduce using rule 618 (bitfield_alias_bits)


State 698

  709 bitfield_alias_declaration: "bitfield" optional_public_or_private_alias "name" $@69 "begin of code block" $@70 bitfield_alias_bits optional_comma $@71 . "end of code block"

    "end of code block"  shift, and go to state 906


State 699

  491 tuple_type: "name" ':' . type_declaration

    "type"       shift, and go to state 216
    "array"      shift, and go to state 217
    "table"      shift, and go to state 218
    "typedecl"   shift, and go to state 219
    "iterator"   shift, and go to state 220
    "smart_ptr"  shift, and go to state 221
    "bool"       shift, and go to state 222
    "void"       shift, and go to state 223
    "string"     shift, and go to state 224
    "auto"       shift, and go to state 225
    "int"        shift, and go to state 226
    "int2"       shift, and go to state 227
    "int3"       shift, and go to state 228
    "int4"       shift, and go to state 229
    "uint"       shift, and go to state 230
    "bitfield"   shift, and go to state 231
    "uint2"      shift, and go to state 232
    "uint3"      shift, and go to state 233
    "uint4"      shift, and go to state 234
    "float"      shift, and go to state 235
    "float2"     shift, and go to state 236
    "float3"     shift, and go to state 237
    "float4"     shift, and go to state 238
    "range"      shift, and go to state 239
    "urange"     shift, and go to state 240
    "range64"    shift, and go to state 241
    "urange64"   shift, and go to state 242
    "block"      shift, and go to state 243
    "int64"      shift, and go to state 244
    "uint64"     shift, and go to state 245
    "double"     shift, and go to state 246
    "function"   shift, and go to state 247
    "lambda"     shift, and go to state 248
    "int8"       shift, and go to state 249
    "uint8"      shift, and go to state 250
    "int16"      shift, and go to state 251
    "uint16"     shift, and go to state 252
    "tuple"      shift, and go to state 253
    "variant"    shift, and go to state 254
    "::"         shift, and go to state 55
    "$t"         shift, and go to state 255
    "name"       shift, and go to state 56
    '$'          shift, and go to state 256

    name_in_namespace                   go to state 257
    basic_type_declaration              go to state 258
    structure_type_declaration          go to state 259
    auto_type_declaration               go to state 260
    bitfield_type_declaration           go to state 261
    type_declaration_no_options         go to state 262
    type_declaration_no_options_no_dim  go to state 263
    type_declaration                    go to state 907


State 700

  496 tuple_alias_type_list: tuple_alias_type_list tuple_type c_or_s .

    $default  reduce using rule 496 (tuple_alias_type_list)


State 701

  701 tuple_alias_declaration: "tuple" optional_public_or_private_alias "name" $@63 "begin of code block" $@64 tuple_alias_type_list $@65 "end of code block" .

    $default  reduce using rule 701 (tuple_alias_declaration)


State 702

  497 variant_type: "name" ':' . type_declaration

    "type"       shift, and go to state 216
    "array"      shift, and go to state 217
    "table"      shift, and go to state 218
    "typedecl"   shift, and go to state 219
    "iterator"   shift, and go to state 220
    "smart_ptr"  shift, and go to state 221
    "bool"       shift, and go to state 222
    "void"       shift, and go to state 223
    "string"     shift, and go to state 224
    "auto"       shift, and go to state 225
    "int"        shift, and go to state 226
    "int2"       shift, and go to state 227
    "int3"       shift, and go to state 228
    "int4"       shift, and go to state 229
    "uint"       shift, and go to state 230
    "bitfield"   shift, and go to state 231
    "uint2"      shift, and go to state 232
    "uint3"      shift, and go to state 233
    "uint4"      shift, and go to state 234
    "float"      shift, and go to state 235
    "float2"     shift, and go to state 236
    "float3"     shift, and go to state 237
    "float4"     shift, and go to state 238
    "range"      shift, and go to state 239
    "urange"     shift, and go to state 240
    "range64"    shift, and go to state 241
    "urange64"   shift, and go to state 242
    "block"      shift, and go to state 243
    "int64"      shift, and go to state 244
    "uint64"     shift, and go to state 245
    "double"     shift, and go to state 246
    "function"   shift, and go to state 247
    "lambda"     shift, and go to state 248
    "int8"       shift, and go to state 249
    "uint8"      shift, and go to state 250
    "int16"      shift, and go to state 251
    "uint16"     shift, and go to state 252
    "tuple"      shift, and go to state 253
    "variant"    shift, and go to state 254
    "::"         shift, and go to state 55
    "$t"         shift, and go to state 255
    "name"       shift, and go to state 56
    '$'          shift, and go to state 256

    name_in_namespace                   go to state 257
    basic_type_declaration              go to state 258
    structure_type_declaration          go to state 259
    auto_type_declaration               go to state 260
    bitfield_type_declaration           go to state 261
    type_declaration_no_options         go to state 262
    type_declaration_no_options_no_dim  go to state 263
    type_declaration                    go to state 908


State 703

  502 variant_alias_type_list: variant_alias_type_list variant_type c_or_s .

    $default  reduce using rule 502 (variant_alias_type_list)


State 704

  705 variant_alias_declaration: "variant" optional_public_or_private_alias "name" $@66 "begin of code block" $@67 variant_alias_type_list $@68 "end of code block" .

    $default  reduce using rule 705 (variant_alias_declaration)


State 705

  339 expr_method_call: expr . "->" "name" '(' ')'
  340                 | expr . "->" "name" '(' expr_list ')'
  350 expr_field: expr . '.' "name"
  351           | expr . '.' '.' "name"
  352           | expr . '.' "name" '(' ')'
  353           | expr . '.' "name" '(' expr_list ')'
  354           | expr . '.' basic_type_declaration '(' ')'
  355           | expr . '.' basic_type_declaration '(' expr_list ')'
  358           | expr . '.' $@17 error $@18
  380 expr: expr . "<<" expr
  381     | expr . ">>" expr
  382     | expr . "<<<" expr
  383     | expr . ">>>" expr
  384     | expr . '+' expr
  385     | expr . '-' expr
  386     | expr . '*' expr
  387     | expr . '/' expr
  388     | expr . '%' expr
  389     | expr . '<' expr
  390     | expr . '>' expr
  391     | expr . "==" expr
  392     | expr . "!=" expr
  393     | expr . "<=" expr
  394     | expr . ">=" expr
  395     | expr . '&' expr
  396     | expr . '|' expr
  397     | expr . '^' expr
  398     | expr . "&&" expr
  399     | expr . "||" expr
  400     | expr . "^^" expr
  401     | expr . ".." expr
  404     | expr . "++"
  405     | expr . "--"
  407     | expr . '[' expr ']'
  408     | expr . '.' '[' expr ']'
  409     | expr . "?[" expr ']'
  410     | expr . '.' "?[" expr ']'
  411     | expr . "?." "name"
  412     | expr . '.' "?." "name"
  421     | expr . "??" expr
  422     | expr . '?' expr ':' expr
  425     | expr . "is" "type" '<' $@19 type_declaration_no_options '>' $@20
  426     | expr . "is" basic_type_declaration
  427     | expr . "is" "name"
  428     | expr . "as" "name"
  431     | expr . "as" "type" '<' $@21 type_declaration '>' $@22
  432     | expr . "as" basic_type_declaration
  433     | expr . '?' "as" "name"
  436     | expr . '?' "as" "type" '<' $@23 type_declaration '>' $@24
  437     | expr . '?' "as" basic_type_declaration
  445     | expr . "<|" expr
  446     | expr . "|>" expr
  447     | expr . "|>" basic_type_declaration
  458 expr_mtag: expr . '.' "$f" '(' expr ')'
  459          | expr . "?." "$f" '(' expr ')'
  460          | expr . '.' '.' "$f" '(' expr ')'
  461          | expr . '.' "?." "$f" '(' expr ')'
  462          | expr . "as" "$f" '(' expr ')'
  463          | expr . '?' "as" "$f" '(' expr ')'
  464          | expr . "is" "$f" '(' expr ')'
  487 function_argument_declaration: "$a" '(' expr . ')'

    "is"   shift, and go to state 637
    "as"   shift, and go to state 638
    "<<"   shift, and go to state 639
    ">>"   shift, and go to state 640
    "++"   shift, and go to state 641
    "--"   shift, and go to state 642
    "<="   shift, and go to state 643
    ">="   shift, and go to state 644
    "=="   shift, and go to state 645
    "!="   shift, and go to state 646
    "->"   shift, and go to state 647
    "??"   shift, and go to state 648
    "?."   shift, and go to state 649
    "?["   shift, and go to state 650
    "<|"   shift, and go to state 651
    "|>"   shift, and go to state 652
    "<<<"  shift, and go to state 653
    ">>>"  shift, and go to state 654
    "&&"   shift, and go to state 655
    "||"   shift, and go to state 656
    "^^"   shift, and go to state 657
    ".."   shift, and go to state 658
    '?'    shift, and go to state 659
    '|'    shift, and go to state 660
    '^'    shift, and go to state 661
    '&'    shift, and go to state 662
    '<'    shift, and go to state 663
    '>'    shift, and go to state 664
    '-'    shift, and go to state 665
    '+'    shift, and go to state 666
    '*'    shift, and go to state 667
    '/'    shift, and go to state 668
    '%'    shift, and go to state 669
    '.'    shift, and go to state 670
    '['    shift, and go to state 671
    ')'    shift, and go to state 909


State 706

  571 variable_name_with_pos_list: "$i" . '(' expr ')'

    '('  shift, and go to state 910


State 707

  570 variable_name_with_pos_list: "name" .
  572                            | "name" . "aka" "name"

    "aka"  shift, and go to state 911

    $default  reduce using rule 570 (variable_name_with_pos_list)


State 708

  486 function_argument_declaration: optional_field_annotation kwd_let_var_or_nothing variable_declaration .

    $default  reduce using rule 486 (function_argument_declaration)


State 709

  505 variable_declaration: variable_name_with_pos_list .
  506                     | variable_name_with_pos_list . '&'
  507                     | variable_name_with_pos_list . ':' type_declaration
  508                     | variable_name_with_pos_list . ':' type_declaration copy_or_move expr
  509                     | variable_name_with_pos_list . copy_or_move expr
  573 variable_name_with_pos_list: variable_name_with_pos_list . ',' "name"
  574                            | variable_name_with_pos_list . ',' "name" "aka" "name"

    "<-"  shift, and go to state 912
    ','   shift, and go to state 913
    '='   shift, and go to state 914
    ':'   shift, and go to state 915
    '&'   shift, and go to state 916

    $default  reduce using rule 505 (variable_declaration)

    copy_or_move  go to state 917


State 710

  489 function_argument_list: function_argument_list "end of expression" function_argument_declaration .

    $default  reduce using rule 489 (function_argument_list)


State 711

   73 expression_while_loop: "while" '(' . expr ')' expression_block

    "struct"                          shift, and go to state 402
    "class"                           shift, and go to state 403
    "true"                            shift, and go to state 404
    "false"                           shift, and go to state 405
    "new"                             shift, and go to state 406
    "typeinfo"                        shift, and go to state 407
    "type"                            shift, and go to state 408
    "array"                           shift, and go to state 409
    "null"                            shift, and go to state 410
    "table"                           shift, and go to state 411
    "deref"                           shift, and go to state 412
    "cast"                            shift, and go to state 413
    "upcast"                          shift, and go to state 414
    "addr"                            shift, and go to state 415
    "reinterpret"                     shift, and go to state 416
    "unsafe"                          shift, and go to state 417
    "fixed_array"                     shift, and go to state 418
    "default"                         shift, and go to state 419
    "bool"                            shift, and go to state 222
    "void"                            shift, and go to state 223
    "string"                          shift, and go to state 224
    "int"                             shift, and go to state 226
    "int2"                            shift, and go to state 227
    "int3"                            shift, and go to state 228
    "int4"                            shift, and go to state 229
    "uint"                            shift, and go to state 230
    "bitfield"                        shift, and go to state 420
    "uint2"                           shift, and go to state 232
    "uint3"                           shift, and go to state 233
    "uint4"                           shift, and go to state 234
    "float"                           shift, and go to state 235
    "float2"                          shift, and go to state 236
    "float3"                          shift, and go to state 237
    "float4"                          shift, and go to state 238
    "range"                           shift, and go to state 239
    "urange"                          shift, and go to state 240
    "range64"                         shift, and go to state 241
    "urange64"                        shift, and go to state 242
    "int64"                           shift, and go to state 244
    "uint64"                          shift, and go to state 245
    "double"                          shift, and go to state 246
    "int8"                            shift, and go to state 249
    "uint8"                           shift, and go to state 250
    "int16"                           shift, and go to state 251
    "uint16"                          shift, and go to state 252
    "tuple"                           shift, and go to state 421
    "variant"                         shift, and go to state 422
    "generator"                       shift, and go to state 423
    "++"                              shift, and go to state 424
    "--"                              shift, and go to state 425
    "::"                              shift, and go to state 55
    "$$"                              shift, and go to state 426
    "$i"                              shift, and go to state 427
    "$v"                              shift, and go to state 428
    "$b"                              shift, and go to state 429
    "$a"                              shift, and go to state 430
    "$c"                              shift, and go to state 431
    "..."                             shift, and go to state 432
    "integer constant"                shift, and go to state 433
    "long integer constant"           shift, and go to state 434
    "unsigned integer constant"       shift, and go to state 435
    "unsigned long integer constant"  shift, and go to state 436
    "unsigned int8 constant"          shift, and go to state 437
    "floating point constant"         shift, and go to state 438
    "double constant"                 shift, and go to state 439
    "name"                            shift, and go to state 56
    "start of the string"             shift, and go to state 440
    "begin of code block"             shift, and go to state 441
    '-'                               shift, and go to state 442
    '+'                               shift, and go to state 443
    '*'                               shift, and go to state 444
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 445
    '!'                               shift, and go to state 446
    '['                               shift, and go to state 447
    '('                               shift, and go to state 448
    '$'                               shift, and go to state 449
    '@'                               shift, and go to state 450

    string_builder          go to state 451
    expr_reader             go to state 452
    expr_call_pipe          go to state 453
    name_in_namespace       go to state 454
    expr_new                go to state 455
    expr_cast               go to state 456
    expr_type_decl          go to state 457
    expr_type_info          go to state 458
    block_or_lambda         go to state 459
    expr_full_block         go to state 460
    expr_numeric_const      go to state 461
    expr_named_call         go to state 462
    expr_method_call        go to state 463
    func_addr_expr          go to state 464
    expr_field              go to state 465
    expr_call               go to state 466
    expr                    go to state 918
    expr_mtag               go to state 468
    basic_type_declaration  go to state 469
    make_decl               go to state 470
    make_struct_decl        go to state 471
    make_tuple_call         go to state 472
    make_dim_decl           go to state 473
    make_table_decl         go to state 474
    array_comprehension     go to state 475


State 712

   71 expression_for_loop: "for" '(' . variable_name_with_pos_list "in" expr_list ')' expression_block

    "$i"    shift, and go to state 706
    "name"  shift, and go to state 707

    variable_name_with_pos_list  go to state 919


State 713

  259 expression_return: "return" "<-" . expr

    "struct"                          shift, and go to state 402
    "class"                           shift, and go to state 403
    "true"                            shift, and go to state 404
    "false"                           shift, and go to state 405
    "new"                             shift, and go to state 406
    "typeinfo"                        shift, and go to state 407
    "type"                            shift, and go to state 408
    "array"                           shift, and go to state 409
    "null"                            shift, and go to state 410
    "table"                           shift, and go to state 411
    "deref"                           shift, and go to state 412
    "cast"                            shift, and go to state 413
    "upcast"                          shift, and go to state 414
    "addr"                            shift, and go to state 415
    "reinterpret"                     shift, and go to state 416
    "unsafe"                          shift, and go to state 417
    "fixed_array"                     shift, and go to state 418
    "default"                         shift, and go to state 419
    "bool"                            shift, and go to state 222
    "void"                            shift, and go to state 223
    "string"                          shift, and go to state 224
    "int"                             shift, and go to state 226
    "int2"                            shift, and go to state 227
    "int3"                            shift, and go to state 228
    "int4"                            shift, and go to state 229
    "uint"                            shift, and go to state 230
    "bitfield"                        shift, and go to state 420
    "uint2"                           shift, and go to state 232
    "uint3"                           shift, and go to state 233
    "uint4"                           shift, and go to state 234
    "float"                           shift, and go to state 235
    "float2"                          shift, and go to state 236
    "float3"                          shift, and go to state 237
    "float4"                          shift, and go to state 238
    "range"                           shift, and go to state 239
    "urange"                          shift, and go to state 240
    "range64"                         shift, and go to state 241
    "urange64"                        shift, and go to state 242
    "int64"                           shift, and go to state 244
    "uint64"                          shift, and go to state 245
    "double"                          shift, and go to state 246
    "int8"                            shift, and go to state 249
    "uint8"                           shift, and go to state 250
    "int16"                           shift, and go to state 251
    "uint16"                          shift, and go to state 252
    "tuple"                           shift, and go to state 421
    "variant"                         shift, and go to state 422
    "generator"                       shift, and go to state 423
    "++"                              shift, and go to state 424
    "--"                              shift, and go to state 425
    "::"                              shift, and go to state 55
    "$$"                              shift, and go to state 426
    "$i"                              shift, and go to state 427
    "$v"                              shift, and go to state 428
    "$b"                              shift, and go to state 429
    "$a"                              shift, and go to state 430
    "$c"                              shift, and go to state 431
    "..."                             shift, and go to state 432
    "integer constant"                shift, and go to state 433
    "long integer constant"           shift, and go to state 434
    "unsigned integer constant"       shift, and go to state 435
    "unsigned long integer constant"  shift, and go to state 436
    "unsigned int8 constant"          shift, and go to state 437
    "floating point constant"         shift, and go to state 438
    "double constant"                 shift, and go to state 439
    "name"                            shift, and go to state 56
    "start of the string"             shift, and go to state 440
    "begin of code block"             shift, and go to state 441
    '-'                               shift, and go to state 442
    '+'                               shift, and go to state 443
    '*'                               shift, and go to state 444
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 445
    '!'                               shift, and go to state 446
    '['                               shift, and go to state 447
    '('                               shift, and go to state 448
    '$'                               shift, and go to state 449
    '@'                               shift, and go to state 450

    string_builder          go to state 451
    expr_reader             go to state 452
    expr_call_pipe          go to state 453
    name_in_namespace       go to state 454
    expr_new                go to state 455
    expr_cast               go to state 456
    expr_type_decl          go to state 457
    expr_type_info          go to state 458
    block_or_lambda         go to state 459
    expr_full_block         go to state 460
    expr_numeric_const      go to state 461
    expr_named_call         go to state 462
    expr_method_call        go to state 463
    func_addr_expr          go to state 464
    expr_field              go to state 465
    expr_call               go to state 466
    expr                    go to state 920
    expr_mtag               go to state 468
    basic_type_declaration  go to state 469
    make_decl               go to state 470
    make_struct_decl        go to state 471
    make_tuple_call         go to state 472
    make_dim_decl           go to state 473
    make_table_decl         go to state 474
    array_comprehension     go to state 475


State 714

  258 expression_return: "return" expr .
  339 expr_method_call: expr . "->" "name" '(' ')'
  340                 | expr . "->" "name" '(' expr_list ')'
  350 expr_field: expr . '.' "name"
  351           | expr . '.' '.' "name"
  352           | expr . '.' "name" '(' ')'
  353           | expr . '.' "name" '(' expr_list ')'
  354           | expr . '.' basic_type_declaration '(' ')'
  355           | expr . '.' basic_type_declaration '(' expr_list ')'
  358           | expr . '.' $@17 error $@18
  380 expr: expr . "<<" expr
  381     | expr . ">>" expr
  382     | expr . "<<<" expr
  383     | expr . ">>>" expr
  384     | expr . '+' expr
  385     | expr . '-' expr
  386     | expr . '*' expr
  387     | expr . '/' expr
  388     | expr . '%' expr
  389     | expr . '<' expr
  390     | expr . '>' expr
  391     | expr . "==" expr
  392     | expr . "!=" expr
  393     | expr . "<=" expr
  394     | expr . ">=" expr
  395     | expr . '&' expr
  396     | expr . '|' expr
  397     | expr . '^' expr
  398     | expr . "&&" expr
  399     | expr . "||" expr
  400     | expr . "^^" expr
  401     | expr . ".." expr
  404     | expr . "++"
  405     | expr . "--"
  407     | expr . '[' expr ']'
  408     | expr . '.' '[' expr ']'
  409     | expr . "?[" expr ']'
  410     | expr . '.' "?[" expr ']'
  411     | expr . "?." "name"
  412     | expr . '.' "?." "name"
  421     | expr . "??" expr
  422     | expr . '?' expr ':' expr
  425     | expr . "is" "type" '<' $@19 type_declaration_no_options '>' $@20
  426     | expr . "is" basic_type_declaration
  427     | expr . "is" "name"
  428     | expr . "as" "name"
  431     | expr . "as" "type" '<' $@21 type_declaration '>' $@22
  432     | expr . "as" basic_type_declaration
  433     | expr . '?' "as" "name"
  436     | expr . '?' "as" "type" '<' $@23 type_declaration '>' $@24
  437     | expr . '?' "as" basic_type_declaration
  445     | expr . "<|" expr
  446     | expr . "|>" expr
  447     | expr . "|>" basic_type_declaration
  458 expr_mtag: expr . '.' "$f" '(' expr ')'
  459          | expr . "?." "$f" '(' expr ')'
  460          | expr . '.' '.' "$f" '(' expr ')'
  461          | expr . '.' "?." "$f" '(' expr ')'
  462          | expr . "as" "$f" '(' expr ')'
  463          | expr . '?' "as" "$f" '(' expr ')'
  464          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 637
    "as"   shift, and go to state 638
    "<<"   shift, and go to state 639
    ">>"   shift, and go to state 640
    "++"   shift, and go to state 641
    "--"   shift, and go to state 642
    "<="   shift, and go to state 643
    ">="   shift, and go to state 644
    "=="   shift, and go to state 645
    "!="   shift, and go to state 646
    "->"   shift, and go to state 647
    "??"   shift, and go to state 648
    "?."   shift, and go to state 649
    "?["   shift, and go to state 650
    "<|"   shift, and go to state 651
    "|>"   shift, and go to state 652
    "<<<"  shift, and go to state 653
    ">>>"  shift, and go to state 654
    "&&"   shift, and go to state 655
    "||"   shift, and go to state 656
    "^^"   shift, and go to state 657
    ".."   shift, and go to state 658
    '?'    shift, and go to state 659
    '|'    shift, and go to state 660
    '^'    shift, and go to state 661
    '&'    shift, and go to state 662
    '<'    shift, and go to state 663
    '>'    shift, and go to state 664
    '-'    shift, and go to state 665
    '+'    shift, and go to state 666
    '*'    shift, and go to state 667
    '/'    shift, and go to state 668
    '%'    shift, and go to state 669
    '.'    shift, and go to state 670
    '['    shift, and go to state 671

    $default  reduce using rule 258 (expression_return)


State 715

  262 expression_try_catch: "try" expression_block . "recover" expression_block

    "recover"  shift, and go to state 921


State 716

  246 expression_delete: "delete" "explicit" . expr

    "struct"                          shift, and go to state 402
    "class"                           shift, and go to state 403
    "true"                            shift, and go to state 404
    "false"                           shift, and go to state 405
    "new"                             shift, and go to state 406
    "typeinfo"                        shift, and go to state 407
    "type"                            shift, and go to state 408
    "array"                           shift, and go to state 409
    "null"                            shift, and go to state 410
    "table"                           shift, and go to state 411
    "deref"                           shift, and go to state 412
    "cast"                            shift, and go to state 413
    "upcast"                          shift, and go to state 414
    "addr"                            shift, and go to state 415
    "reinterpret"                     shift, and go to state 416
    "unsafe"                          shift, and go to state 417
    "fixed_array"                     shift, and go to state 418
    "default"                         shift, and go to state 419
    "bool"                            shift, and go to state 222
    "void"                            shift, and go to state 223
    "string"                          shift, and go to state 224
    "int"                             shift, and go to state 226
    "int2"                            shift, and go to state 227
    "int3"                            shift, and go to state 228
    "int4"                            shift, and go to state 229
    "uint"                            shift, and go to state 230
    "bitfield"                        shift, and go to state 420
    "uint2"                           shift, and go to state 232
    "uint3"                           shift, and go to state 233
    "uint4"                           shift, and go to state 234
    "float"                           shift, and go to state 235
    "float2"                          shift, and go to state 236
    "float3"                          shift, and go to state 237
    "float4"                          shift, and go to state 238
    "range"                           shift, and go to state 239
    "urange"                          shift, and go to state 240
    "range64"                         shift, and go to state 241
    "urange64"                        shift, and go to state 242
    "int64"                           shift, and go to state 244
    "uint64"                          shift, and go to state 245
    "double"                          shift, and go to state 246
    "int8"                            shift, and go to state 249
    "uint8"                           shift, and go to state 250
    "int16"                           shift, and go to state 251
    "uint16"                          shift, and go to state 252
    "tuple"                           shift, and go to state 421
    "variant"                         shift, and go to state 422
    "generator"                       shift, and go to state 423
    "++"                              shift, and go to state 424
    "--"                              shift, and go to state 425
    "::"                              shift, and go to state 55
    "$$"                              shift, and go to state 426
    "$i"                              shift, and go to state 427
    "$v"                              shift, and go to state 428
    "$b"                              shift, and go to state 429
    "$a"                              shift, and go to state 430
    "$c"                              shift, and go to state 431
    "..."                             shift, and go to state 432
    "integer constant"                shift, and go to state 433
    "long integer constant"           shift, and go to state 434
    "unsigned integer constant"       shift, and go to state 435
    "unsigned long integer constant"  shift, and go to state 436
    "unsigned int8 constant"          shift, and go to state 437
    "floating point constant"         shift, and go to state 438
    "double constant"                 shift, and go to state 439
    "name"                            shift, and go to state 56
    "start of the string"             shift, and go to state 440
    "begin of code block"             shift, and go to state 441
    '-'                               shift, and go to state 442
    '+'                               shift, and go to state 443
    '*'                               shift, and go to state 444
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 445
    '!'                               shift, and go to state 446
    '['                               shift, and go to state 447
    '('                               shift, and go to state 448
    '$'                               shift, and go to state 449
    '@'                               shift, and go to state 450

    string_builder          go to state 451
    expr_reader             go to state 452
    expr_call_pipe          go to state 453
    name_in_namespace       go to state 454
    expr_new                go to state 455
    expr_cast               go to state 456
    expr_type_decl          go to state 457
    expr_type_info          go to state 458
    block_or_lambda         go to state 459
    expr_full_block         go to state 460
    expr_numeric_const      go to state 461
    expr_named_call         go to state 462
    expr_method_call        go to state 463
    func_addr_expr          go to state 464
    expr_field              go to state 465
    expr_call               go to state 466
    expr                    go to state 922
    expr_mtag               go to state 468
    basic_type_declaration  go to state 469
    make_decl               go to state 470
    make_struct_decl        go to state 471
    make_tuple_call         go to state 472
    make_dim_decl           go to state 473
    make_table_decl         go to state 474
    array_comprehension     go to state 475


State 717

  245 expression_delete: "delete" expr .
  339 expr_method_call: expr . "->" "name" '(' ')'
  340                 | expr . "->" "name" '(' expr_list ')'
  350 expr_field: expr . '.' "name"
  351           | expr . '.' '.' "name"
  352           | expr . '.' "name" '(' ')'
  353           | expr . '.' "name" '(' expr_list ')'
  354           | expr . '.' basic_type_declaration '(' ')'
  355           | expr . '.' basic_type_declaration '(' expr_list ')'
  358           | expr . '.' $@17 error $@18
  380 expr: expr . "<<" expr
  381     | expr . ">>" expr
  382     | expr . "<<<" expr
  383     | expr . ">>>" expr
  384     | expr . '+' expr
  385     | expr . '-' expr
  386     | expr . '*' expr
  387     | expr . '/' expr
  388     | expr . '%' expr
  389     | expr . '<' expr
  390     | expr . '>' expr
  391     | expr . "==" expr
  392     | expr . "!=" expr
  393     | expr . "<=" expr
  394     | expr . ">=" expr
  395     | expr . '&' expr
  396     | expr . '|' expr
  397     | expr . '^' expr
  398     | expr . "&&" expr
  399     | expr . "||" expr
  400     | expr . "^^" expr
  401     | expr . ".." expr
  404     | expr . "++"
  405     | expr . "--"
  407     | expr . '[' expr ']'
  408     | expr . '.' '[' expr ']'
  409     | expr . "?[" expr ']'
  410     | expr . '.' "?[" expr ']'
  411     | expr . "?." "name"
  412     | expr . '.' "?." "name"
  421     | expr . "??" expr
  422     | expr . '?' expr ':' expr
  425     | expr . "is" "type" '<' $@19 type_declaration_no_options '>' $@20
  426     | expr . "is" basic_type_declaration
  427     | expr . "is" "name"
  428     | expr . "as" "name"
  431     | expr . "as" "type" '<' $@21 type_declaration '>' $@22
  432     | expr . "as" basic_type_declaration
  433     | expr . '?' "as" "name"
  436     | expr . '?' "as" "type" '<' $@23 type_declaration '>' $@24
  437     | expr . '?' "as" basic_type_declaration
  445     | expr . "<|" expr
  446     | expr . "|>" expr
  447     | expr . "|>" basic_type_declaration
  458 expr_mtag: expr . '.' "$f" '(' expr ')'
  459          | expr . "?." "$f" '(' expr ')'
  460          | expr . '.' '.' "$f" '(' expr ')'
  461          | expr . '.' "?." "$f" '(' expr ')'
  462          | expr . "as" "$f" '(' expr ')'
  463          | expr . '?' "as" "$f" '(' expr ')'
  464          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 637
    "as"   shift, and go to state 638
    "<<"   shift, and go to state 639
    ">>"   shift, and go to state 640
    "++"   shift, and go to state 641
    "--"   shift, and go to state 642
    "<="   shift, and go to state 643
    ">="   shift, and go to state 644
    "=="   shift, and go to state 645
    "!="   shift, and go to state 646
    "->"   shift, and go to state 647
    "??"   shift, and go to state 648
    "?."   shift, and go to state 649
    "?["   shift, and go to state 650
    "<|"   shift, and go to state 651
    "|>"   shift, and go to state 652
    "<<<"  shift, and go to state 653
    ">>>"  shift, and go to state 654
    "&&"   shift, and go to state 655
    "||"   shift, and go to state 656
    "^^"   shift, and go to state 657
    ".."   shift, and go to state 658
    '?'    shift, and go to state 659
    '|'    shift, and go to state 660
    '^'    shift, and go to state 661
    '&'    shift, and go to state 662
    '<'    shift, and go to state 663
    '>'    shift, and go to state 664
    '-'    shift, and go to state 665
    '+'    shift, and go to state 666
    '*'    shift, and go to state 667
    '/'    shift, and go to state 668
    '%'    shift, and go to state 669
    '.'    shift, and go to state 670
    '['    shift, and go to state 671

    $default  reduce using rule 245 (expression_delete)


State 718

   74 expression_with: "with" '(' . expr ')' expression_block

    "struct"                          shift, and go to state 402
    "class"                           shift, and go to state 403
    "true"                            shift, and go to state 404
    "false"                           shift, and go to state 405
    "new"                             shift, and go to state 406
    "typeinfo"                        shift, and go to state 407
    "type"                            shift, and go to state 408
    "array"                           shift, and go to state 409
    "null"                            shift, and go to state 410
    "table"                           shift, and go to state 411
    "deref"                           shift, and go to state 412
    "cast"                            shift, and go to state 413
    "upcast"                          shift, and go to state 414
    "addr"                            shift, and go to state 415
    "reinterpret"                     shift, and go to state 416
    "unsafe"                          shift, and go to state 417
    "fixed_array"                     shift, and go to state 418
    "default"                         shift, and go to state 419
    "bool"                            shift, and go to state 222
    "void"                            shift, and go to state 223
    "string"                          shift, and go to state 224
    "int"                             shift, and go to state 226
    "int2"                            shift, and go to state 227
    "int3"                            shift, and go to state 228
    "int4"                            shift, and go to state 229
    "uint"                            shift, and go to state 230
    "bitfield"                        shift, and go to state 420
    "uint2"                           shift, and go to state 232
    "uint3"                           shift, and go to state 233
    "uint4"                           shift, and go to state 234
    "float"                           shift, and go to state 235
    "float2"                          shift, and go to state 236
    "float3"                          shift, and go to state 237
    "float4"                          shift, and go to state 238
    "range"                           shift, and go to state 239
    "urange"                          shift, and go to state 240
    "range64"                         shift, and go to state 241
    "urange64"                        shift, and go to state 242
    "int64"                           shift, and go to state 244
    "uint64"                          shift, and go to state 245
    "double"                          shift, and go to state 246
    "int8"                            shift, and go to state 249
    "uint8"                           shift, and go to state 250
    "int16"                           shift, and go to state 251
    "uint16"                          shift, and go to state 252
    "tuple"                           shift, and go to state 421
    "variant"                         shift, and go to state 422
    "generator"                       shift, and go to state 423
    "++"                              shift, and go to state 424
    "--"                              shift, and go to state 425
    "::"                              shift, and go to state 55
    "$$"                              shift, and go to state 426
    "$i"                              shift, and go to state 427
    "$v"                              shift, and go to state 428
    "$b"                              shift, and go to state 429
    "$a"                              shift, and go to state 430
    "$c"                              shift, and go to state 431
    "..."                             shift, and go to state 432
    "integer constant"                shift, and go to state 433
    "long integer constant"           shift, and go to state 434
    "unsigned integer constant"       shift, and go to state 435
    "unsigned long integer constant"  shift, and go to state 436
    "unsigned int8 constant"          shift, and go to state 437
    "floating point constant"         shift, and go to state 438
    "double constant"                 shift, and go to state 439
    "name"                            shift, and go to state 56
    "start of the string"             shift, and go to state 440
    "begin of code block"             shift, and go to state 441
    '-'                               shift, and go to state 442
    '+'                               shift, and go to state 443
    '*'                               shift, and go to state 444
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 445
    '!'                               shift, and go to state 446
    '['                               shift, and go to state 447
    '('                               shift, and go to state 448
    '$'                               shift, and go to state 449
    '@'                               shift, and go to state 450

    string_builder          go to state 451
    expr_reader             go to state 452
    expr_call_pipe          go to state 453
    name_in_namespace       go to state 454
    expr_new                go to state 455
    expr_cast               go to state 456
    expr_type_decl          go to state 457
    expr_type_info          go to state 458
    block_or_lambda         go to state 459
    expr_full_block         go to state 460
    expr_numeric_const      go to state 461
    expr_named_call         go to state 462
    expr_method_call        go to state 463
    func_addr_expr          go to state 464
    expr_field              go to state 465
    expr_call               go to state 466
    expr                    go to state 923
    expr_mtag               go to state 468
    basic_type_declaration  go to state 469
    make_decl               go to state 470
    make_struct_decl        go to state 471
    make_tuple_call         go to state 472
    make_dim_decl           go to state 473
    make_table_decl         go to state 474
    array_comprehension     go to state 475


State 719

   75 expression_with_alias: "assume" "name" . '=' expr

    '='  shift, and go to state 924


State 720

  232 expression_any: "pass" "end of expression" .

    $default  reduce using rule 232 (expression_any)


State 721

   52 expression_label: "label" "integer constant" . ':'

    ':'  shift, and go to state 925


State 722

   53 expression_goto: "goto" "label" . "integer constant"

    "integer constant"  shift, and go to state 926


State 723

   54 expression_goto: "goto" expr .
  339 expr_method_call: expr . "->" "name" '(' ')'
  340                 | expr . "->" "name" '(' expr_list ')'
  350 expr_field: expr . '.' "name"
  351           | expr . '.' '.' "name"
  352           | expr . '.' "name" '(' ')'
  353           | expr . '.' "name" '(' expr_list ')'
  354           | expr . '.' basic_type_declaration '(' ')'
  355           | expr . '.' basic_type_declaration '(' expr_list ')'
  358           | expr . '.' $@17 error $@18
  380 expr: expr . "<<" expr
  381     | expr . ">>" expr
  382     | expr . "<<<" expr
  383     | expr . ">>>" expr
  384     | expr . '+' expr
  385     | expr . '-' expr
  386     | expr . '*' expr
  387     | expr . '/' expr
  388     | expr . '%' expr
  389     | expr . '<' expr
  390     | expr . '>' expr
  391     | expr . "==" expr
  392     | expr . "!=" expr
  393     | expr . "<=" expr
  394     | expr . ">=" expr
  395     | expr . '&' expr
  396     | expr . '|' expr
  397     | expr . '^' expr
  398     | expr . "&&" expr
  399     | expr . "||" expr
  400     | expr . "^^" expr
  401     | expr . ".." expr
  404     | expr . "++"
  405     | expr . "--"
  407     | expr . '[' expr ']'
  408     | expr . '.' '[' expr ']'
  409     | expr . "?[" expr ']'
  410     | expr . '.' "?[" expr ']'
  411     | expr . "?." "name"
  412     | expr . '.' "?." "name"
  421     | expr . "??" expr
  422     | expr . '?' expr ':' expr
  425     | expr . "is" "type" '<' $@19 type_declaration_no_options '>' $@20
  426     | expr . "is" basic_type_declaration
  427     | expr . "is" "name"
  428     | expr . "as" "name"
  431     | expr . "as" "type" '<' $@21 type_declaration '>' $@22
  432     | expr . "as" basic_type_declaration
  433     | expr . '?' "as" "name"
  436     | expr . '?' "as" "type" '<' $@23 type_declaration '>' $@24
  437     | expr . '?' "as" basic_type_declaration
  445     | expr . "<|" expr
  446     | expr . "|>" expr
  447     | expr . "|>" basic_type_declaration
  458 expr_mtag: expr . '.' "$f" '(' expr ')'
  459          | expr . "?." "$f" '(' expr ')'
  460          | expr . '.' '.' "$f" '(' expr ')'
  461          | expr . '.' "?." "$f" '(' expr ')'
  462          | expr . "as" "$f" '(' expr ')'
  463          | expr . '?' "as" "$f" '(' expr ')'
  464          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 637
    "as"   shift, and go to state 638
    "<<"   shift, and go to state 639
    ">>"   shift, and go to state 640
    "++"   shift, and go to state 641
    "--"   shift, and go to state 642
    "<="   shift, and go to state 643
    ">="   shift, and go to state 644
    "=="   shift, and go to state 645
    "!="   shift, and go to state 646
    "->"   shift, and go to state 647
    "??"   shift, and go to state 648
    "?."   shift, and go to state 649
    "?["   shift, and go to state 650
    "<|"   shift, and go to state 651
    "|>"   shift, and go to state 652
    "<<<"  shift, and go to state 653
    ">>>"  shift, and go to state 654
    "&&"   shift, and go to state 655
    "||"   shift, and go to state 656
    "^^"   shift, and go to state 657
    ".."   shift, and go to state 658
    '?'    shift, and go to state 659
    '|'    shift, and go to state 660
    '^'    shift, and go to state 661
    '&'    shift, and go to state 662
    '<'    shift, and go to state 663
    '>'    shift, and go to state 664
    '-'    shift, and go to state 665
    '+'    shift, and go to state 666
    '*'    shift, and go to state 667
    '/'    shift, and go to state 668
    '%'    shift, and go to state 669
    '.'    shift, and go to state 670
    '['    shift, and go to state 671

    $default  reduce using rule 54 (expression_goto)


State 724

   72 expression_unsafe: "unsafe" expression_block .

    $default  reduce using rule 72 (expression_unsafe)


State 725

  261 expression_yield: "yield" "<-" . expr

    "struct"                          shift, and go to state 402
    "class"                           shift, and go to state 403
    "true"                            shift, and go to state 404
    "false"                           shift, and go to state 405
    "new"                             shift, and go to state 406
    "typeinfo"                        shift, and go to state 407
    "type"                            shift, and go to state 408
    "array"                           shift, and go to state 409
    "null"                            shift, and go to state 410
    "table"                           shift, and go to state 411
    "deref"                           shift, and go to state 412
    "cast"                            shift, and go to state 413
    "upcast"                          shift, and go to state 414
    "addr"                            shift, and go to state 415
    "reinterpret"                     shift, and go to state 416
    "unsafe"                          shift, and go to state 417
    "fixed_array"                     shift, and go to state 418
    "default"                         shift, and go to state 419
    "bool"                            shift, and go to state 222
    "void"                            shift, and go to state 223
    "string"                          shift, and go to state 224
    "int"                             shift, and go to state 226
    "int2"                            shift, and go to state 227
    "int3"                            shift, and go to state 228
    "int4"                            shift, and go to state 229
    "uint"                            shift, and go to state 230
    "bitfield"                        shift, and go to state 420
    "uint2"                           shift, and go to state 232
    "uint3"                           shift, and go to state 233
    "uint4"                           shift, and go to state 234
    "float"                           shift, and go to state 235
    "float2"                          shift, and go to state 236
    "float3"                          shift, and go to state 237
    "float4"                          shift, and go to state 238
    "range"                           shift, and go to state 239
    "urange"                          shift, and go to state 240
    "range64"                         shift, and go to state 241
    "urange64"                        shift, and go to state 242
    "int64"                           shift, and go to state 244
    "uint64"                          shift, and go to state 245
    "double"                          shift, and go to state 246
    "int8"                            shift, and go to state 249
    "uint8"                           shift, and go to state 250
    "int16"                           shift, and go to state 251
    "uint16"                          shift, and go to state 252
    "tuple"                           shift, and go to state 421
    "variant"                         shift, and go to state 422
    "generator"                       shift, and go to state 423
    "++"                              shift, and go to state 424
    "--"                              shift, and go to state 425
    "::"                              shift, and go to state 55
    "$$"                              shift, and go to state 426
    "$i"                              shift, and go to state 427
    "$v"                              shift, and go to state 428
    "$b"                              shift, and go to state 429
    "$a"                              shift, and go to state 430
    "$c"                              shift, and go to state 431
    "..."                             shift, and go to state 432
    "integer constant"                shift, and go to state 433
    "long integer constant"           shift, and go to state 434
    "unsigned integer constant"       shift, and go to state 435
    "unsigned long integer constant"  shift, and go to state 436
    "unsigned int8 constant"          shift, and go to state 437
    "floating point constant"         shift, and go to state 438
    "double constant"                 shift, and go to state 439
    "name"                            shift, and go to state 56
    "start of the string"             shift, and go to state 440
    "begin of code block"             shift, and go to state 441
    '-'                               shift, and go to state 442
    '+'                               shift, and go to state 443
    '*'                               shift, and go to state 444
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 445
    '!'                               shift, and go to state 446
    '['                               shift, and go to state 447
    '('                               shift, and go to state 448
    '$'                               shift, and go to state 449
    '@'                               shift, and go to state 450

    string_builder          go to state 451
    expr_reader             go to state 452
    expr_call_pipe          go to state 453
    name_in_namespace       go to state 454
    expr_new                go to state 455
    expr_cast               go to state 456
    expr_type_decl          go to state 457
    expr_type_info          go to state 458
    block_or_lambda         go to state 459
    expr_full_block         go to state 460
    expr_numeric_const      go to state 461
    expr_named_call         go to state 462
    expr_method_call        go to state 463
    func_addr_expr          go to state 464
    expr_field              go to state 465
    expr_call               go to state 466
    expr                    go to state 927
    expr_mtag               go to state 468
    basic_type_declaration  go to state 469
    make_decl               go to state 470
    make_struct_decl        go to state 471
    make_tuple_call         go to state 472
    make_dim_decl           go to state 473
    make_table_decl         go to state 474
    array_comprehension     go to state 475


State 726

  260 expression_yield: "yield" expr .
  339 expr_method_call: expr . "->" "name" '(' ')'
  340                 | expr . "->" "name" '(' expr_list ')'
  350 expr_field: expr . '.' "name"
  351           | expr . '.' '.' "name"
  352           | expr . '.' "name" '(' ')'
  353           | expr . '.' "name" '(' expr_list ')'
  354           | expr . '.' basic_type_declaration '(' ')'
  355           | expr . '.' basic_type_declaration '(' expr_list ')'
  358           | expr . '.' $@17 error $@18
  380 expr: expr . "<<" expr
  381     | expr . ">>" expr
  382     | expr . "<<<" expr
  383     | expr . ">>>" expr
  384     | expr . '+' expr
  385     | expr . '-' expr
  386     | expr . '*' expr
  387     | expr . '/' expr
  388     | expr . '%' expr
  389     | expr . '<' expr
  390     | expr . '>' expr
  391     | expr . "==" expr
  392     | expr . "!=" expr
  393     | expr . "<=" expr
  394     | expr . ">=" expr
  395     | expr . '&' expr
  396     | expr . '|' expr
  397     | expr . '^' expr
  398     | expr . "&&" expr
  399     | expr . "||" expr
  400     | expr . "^^" expr
  401     | expr . ".." expr
  404     | expr . "++"
  405     | expr . "--"
  407     | expr . '[' expr ']'
  408     | expr . '.' '[' expr ']'
  409     | expr . "?[" expr ']'
  410     | expr . '.' "?[" expr ']'
  411     | expr . "?." "name"
  412     | expr . '.' "?." "name"
  421     | expr . "??" expr
  422     | expr . '?' expr ':' expr
  425     | expr . "is" "type" '<' $@19 type_declaration_no_options '>' $@20
  426     | expr . "is" basic_type_declaration
  427     | expr . "is" "name"
  428     | expr . "as" "name"
  431     | expr . "as" "type" '<' $@21 type_declaration '>' $@22
  432     | expr . "as" basic_type_declaration
  433     | expr . '?' "as" "name"
  436     | expr . '?' "as" "type" '<' $@23 type_declaration '>' $@24
  437     | expr . '?' "as" basic_type_declaration
  445     | expr . "<|" expr
  446     | expr . "|>" expr
  447     | expr . "|>" basic_type_declaration
  458 expr_mtag: expr . '.' "$f" '(' expr ')'
  459          | expr . "?." "$f" '(' expr ')'
  460          | expr . '.' '.' "$f" '(' expr ')'
  461          | expr . '.' "?." "$f" '(' expr ')'
  462          | expr . "as" "$f" '(' expr ')'
  463          | expr . '?' "as" "$f" '(' expr ')'
  464          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 637
    "as"   shift, and go to state 638
    "<<"   shift, and go to state 639
    ">>"   shift, and go to state 640
    "++"   shift, and go to state 641
    "--"   shift, and go to state 642
    "<="   shift, and go to state 643
    ">="   shift, and go to state 644
    "=="   shift, and go to state 645
    "!="   shift, and go to state 646
    "->"   shift, and go to state 647
    "??"   shift, and go to state 648
    "?."   shift, and go to state 649
    "?["   shift, and go to state 650
    "<|"   shift, and go to state 651
    "|>"   shift, and go to state 652
    "<<<"  shift, and go to state 653
    ">>>"  shift, and go to state 654
    "&&"   shift, and go to state 655
    "||"   shift, and go to state 656
    "^^"   shift, and go to state 657
    ".."   shift, and go to state 658
    '?'    shift, and go to state 659
    '|'    shift, and go to state 660
    '^'    shift, and go to state 661
    '&'    shift, and go to state 662
    '<'    shift, and go to state 663
    '>'    shift, and go to state 664
    '-'    shift, and go to state 665
    '+'    shift, and go to state 666
    '*'    shift, and go to state 667
    '/'    shift, and go to state 668
    '%'    shift, and go to state 669
    '.'    shift, and go to state 670
    '['    shift, and go to state 671

    $default  reduce using rule 260 (expression_yield)


State 727

  213 expression_block: "begin of code block" expressions "end of code block" "finally" . "begin of code block" expressions "end of code block"

    "begin of code block"  shift, and go to state 928


State 728

  230 expression_any: expression_label "end of expression" .

    $default  reduce using rule 230 (expression_any)


State 729

  231 expression_any: expression_goto "end of expression" .

    $default  reduce using rule 231 (expression_any)


State 730

   69 expression_if_then_else: if_or_static_if '(' . expr ')' expression_block expression_else

    "struct"                          shift, and go to state 402
    "class"                           shift, and go to state 403
    "true"                            shift, and go to state 404
    "false"                           shift, and go to state 405
    "new"                             shift, and go to state 406
    "typeinfo"                        shift, and go to state 407
    "type"                            shift, and go to state 408
    "array"                           shift, and go to state 409
    "null"                            shift, and go to state 410
    "table"                           shift, and go to state 411
    "deref"                           shift, and go to state 412
    "cast"                            shift, and go to state 413
    "upcast"                          shift, and go to state 414
    "addr"                            shift, and go to state 415
    "reinterpret"                     shift, and go to state 416
    "unsafe"                          shift, and go to state 417
    "fixed_array"                     shift, and go to state 418
    "default"                         shift, and go to state 419
    "bool"                            shift, and go to state 222
    "void"                            shift, and go to state 223
    "string"                          shift, and go to state 224
    "int"                             shift, and go to state 226
    "int2"                            shift, and go to state 227
    "int3"                            shift, and go to state 228
    "int4"                            shift, and go to state 229
    "uint"                            shift, and go to state 230
    "bitfield"                        shift, and go to state 420
    "uint2"                           shift, and go to state 232
    "uint3"                           shift, and go to state 233
    "uint4"                           shift, and go to state 234
    "float"                           shift, and go to state 235
    "float2"                          shift, and go to state 236
    "float3"                          shift, and go to state 237
    "float4"                          shift, and go to state 238
    "range"                           shift, and go to state 239
    "urange"                          shift, and go to state 240
    "range64"                         shift, and go to state 241
    "urange64"                        shift, and go to state 242
    "int64"                           shift, and go to state 244
    "uint64"                          shift, and go to state 245
    "double"                          shift, and go to state 246
    "int8"                            shift, and go to state 249
    "uint8"                           shift, and go to state 250
    "int16"                           shift, and go to state 251
    "uint16"                          shift, and go to state 252
    "tuple"                           shift, and go to state 421
    "variant"                         shift, and go to state 422
    "generator"                       shift, and go to state 423
    "++"                              shift, and go to state 424
    "--"                              shift, and go to state 425
    "::"                              shift, and go to state 55
    "$$"                              shift, and go to state 426
    "$i"                              shift, and go to state 427
    "$v"                              shift, and go to state 428
    "$b"                              shift, and go to state 429
    "$a"                              shift, and go to state 430
    "$c"                              shift, and go to state 431
    "..."                             shift, and go to state 432
    "integer constant"                shift, and go to state 433
    "long integer constant"           shift, and go to state 434
    "unsigned integer constant"       shift, and go to state 435
    "unsigned long integer constant"  shift, and go to state 436
    "unsigned int8 constant"          shift, and go to state 437
    "floating point constant"         shift, and go to state 438
    "double constant"                 shift, and go to state 439
    "name"                            shift, and go to state 56
    "start of the string"             shift, and go to state 440
    "begin of code block"             shift, and go to state 441
    '-'                               shift, and go to state 442
    '+'                               shift, and go to state 443
    '*'                               shift, and go to state 444
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 445
    '!'                               shift, and go to state 446
    '['                               shift, and go to state 447
    '('                               shift, and go to state 448
    '$'                               shift, and go to state 449
    '@'                               shift, and go to state 450

    string_builder          go to state 451
    expr_reader             go to state 452
    expr_call_pipe          go to state 453
    name_in_namespace       go to state 454
    expr_new                go to state 455
    expr_cast               go to state 456
    expr_type_decl          go to state 457
    expr_type_info          go to state 458
    block_or_lambda         go to state 459
    expr_full_block         go to state 460
    expr_numeric_const      go to state 461
    expr_named_call         go to state 462
    expr_method_call        go to state 463
    func_addr_expr          go to state 464
    expr_field              go to state 465
    expr_call               go to state 466
    expr                    go to state 929
    expr_mtag               go to state 468
    basic_type_declaration  go to state 469
    make_decl               go to state 470
    make_struct_decl        go to state 471
    make_tuple_call         go to state 472
    make_dim_decl           go to state 473
    make_table_decl         go to state 474
    array_comprehension     go to state 475


State 731

   70 expression_if_then_else: expression_if_one_liner "if" . '(' expr ')' expression_else_one_liner "end of expression"

    '('  shift, and go to state 930


State 732

  222 expression_any: expression_with_alias "end of expression" .

    $default  reduce using rule 222 (expression_any)


State 733

  217 expression_any: expression_delete "end of expression" .

    $default  reduce using rule 217 (expression_any)


State 734

  224 expression_any: expression_break "end of expression" .

    $default  reduce using rule 224 (expression_any)


State 735

  225 expression_any: expression_continue "end of expression" .

    $default  reduce using rule 225 (expression_any)


State 736

  226 expression_any: expression_return "end of expression" .

    $default  reduce using rule 226 (expression_any)


State 737

  227 expression_any: expression_yield "end of expression" .

    $default  reduce using rule 227 (expression_any)


State 738

  268 optional_in_scope: "inscope" .

    $default  reduce using rule 268 (optional_in_scope)


State 739

  274 expression_let: kwd_let optional_in_scope . let_variable_declaration
  275               | kwd_let optional_in_scope . tuple_expansion_variable_declaration

    "$i"    shift, and go to state 931
    "name"  shift, and go to state 932
    '('     shift, and go to state 933

    tuple_expansion_variable_declaration  go to state 934
    let_variable_name_with_pos_list       go to state 935
    let_variable_declaration              go to state 936


State 740

  216 expression_any: expr_assign "end of expression" .

    $default  reduce using rule 216 (expression_any)


State 741

  328 expr_assign: expr "+=" . expr

    "struct"                          shift, and go to state 402
    "class"                           shift, and go to state 403
    "true"                            shift, and go to state 404
    "false"                           shift, and go to state 405
    "new"                             shift, and go to state 406
    "typeinfo"                        shift, and go to state 407
    "type"                            shift, and go to state 408
    "array"                           shift, and go to state 409
    "null"                            shift, and go to state 410
    "table"                           shift, and go to state 411
    "deref"                           shift, and go to state 412
    "cast"                            shift, and go to state 413
    "upcast"                          shift, and go to state 414
    "addr"                            shift, and go to state 415
    "reinterpret"                     shift, and go to state 416
    "unsafe"                          shift, and go to state 417
    "fixed_array"                     shift, and go to state 418
    "default"                         shift, and go to state 419
    "bool"                            shift, and go to state 222
    "void"                            shift, and go to state 223
    "string"                          shift, and go to state 224
    "int"                             shift, and go to state 226
    "int2"                            shift, and go to state 227
    "int3"                            shift, and go to state 228
    "int4"                            shift, and go to state 229
    "uint"                            shift, and go to state 230
    "bitfield"                        shift, and go to state 420
    "uint2"                           shift, and go to state 232
    "uint3"                           shift, and go to state 233
    "uint4"                           shift, and go to state 234
    "float"                           shift, and go to state 235
    "float2"                          shift, and go to state 236
    "float3"                          shift, and go to state 237
    "float4"                          shift, and go to state 238
    "range"                           shift, and go to state 239
    "urange"                          shift, and go to state 240
    "range64"                         shift, and go to state 241
    "urange64"                        shift, and go to state 242
    "int64"                           shift, and go to state 244
    "uint64"                          shift, and go to state 245
    "double"                          shift, and go to state 246
    "int8"                            shift, and go to state 249
    "uint8"                           shift, and go to state 250
    "int16"                           shift, and go to state 251
    "uint16"                          shift, and go to state 252
    "tuple"                           shift, and go to state 421
    "variant"                         shift, and go to state 422
    "generator"                       shift, and go to state 423
    "++"                              shift, and go to state 424
    "--"                              shift, and go to state 425
    "::"                              shift, and go to state 55
    "$$"                              shift, and go to state 426
    "$i"                              shift, and go to state 427
    "$v"                              shift, and go to state 428
    "$b"                              shift, and go to state 429
    "$a"                              shift, and go to state 430
    "$c"                              shift, and go to state 431
    "..."                             shift, and go to state 432
    "integer constant"                shift, and go to state 433
    "long integer constant"           shift, and go to state 434
    "unsigned integer constant"       shift, and go to state 435
    "unsigned long integer constant"  shift, and go to state 436
    "unsigned int8 constant"          shift, and go to state 437
    "floating point constant"         shift, and go to state 438
    "double constant"                 shift, and go to state 439
    "name"                            shift, and go to state 56
    "start of the string"             shift, and go to state 440
    "begin of code block"             shift, and go to state 441
    '-'                               shift, and go to state 442
    '+'                               shift, and go to state 443
    '*'                               shift, and go to state 444
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 445
    '!'                               shift, and go to state 446
    '['                               shift, and go to state 447
    '('                               shift, and go to state 448
    '$'                               shift, and go to state 449
    '@'                               shift, and go to state 450

    string_builder          go to state 451
    expr_reader             go to state 452
    expr_call_pipe          go to state 453
    name_in_namespace       go to state 454
    expr_new                go to state 455
    expr_cast               go to state 456
    expr_type_decl          go to state 457
    expr_type_info          go to state 458
    block_or_lambda         go to state 459
    expr_full_block         go to state 460
    expr_numeric_const      go to state 461
    expr_named_call         go to state 462
    expr_method_call        go to state 463
    func_addr_expr          go to state 464
    expr_field              go to state 465
    expr_call               go to state 466
    expr                    go to state 937
    expr_mtag               go to state 468
    basic_type_declaration  go to state 469
    make_decl               go to state 470
    make_struct_decl        go to state 471
    make_tuple_call         go to state 472
    make_dim_decl           go to state 473
    make_table_decl         go to state 474
    array_comprehension     go to state 475


State 742

  329 expr_assign: expr "-=" . expr

    "struct"                          shift, and go to state 402
    "class"                           shift, and go to state 403
    "true"                            shift, and go to state 404
    "false"                           shift, and go to state 405
    "new"                             shift, and go to state 406
    "typeinfo"                        shift, and go to state 407
    "type"                            shift, and go to state 408
    "array"                           shift, and go to state 409
    "null"                            shift, and go to state 410
    "table"                           shift, and go to state 411
    "deref"                           shift, and go to state 412
    "cast"                            shift, and go to state 413
    "upcast"                          shift, and go to state 414
    "addr"                            shift, and go to state 415
    "reinterpret"                     shift, and go to state 416
    "unsafe"                          shift, and go to state 417
    "fixed_array"                     shift, and go to state 418
    "default"                         shift, and go to state 419
    "bool"                            shift, and go to state 222
    "void"                            shift, and go to state 223
    "string"                          shift, and go to state 224
    "int"                             shift, and go to state 226
    "int2"                            shift, and go to state 227
    "int3"                            shift, and go to state 228
    "int4"                            shift, and go to state 229
    "uint"                            shift, and go to state 230
    "bitfield"                        shift, and go to state 420
    "uint2"                           shift, and go to state 232
    "uint3"                           shift, and go to state 233
    "uint4"                           shift, and go to state 234
    "float"                           shift, and go to state 235
    "float2"                          shift, and go to state 236
    "float3"                          shift, and go to state 237
    "float4"                          shift, and go to state 238
    "range"                           shift, and go to state 239
    "urange"                          shift, and go to state 240
    "range64"                         shift, and go to state 241
    "urange64"                        shift, and go to state 242
    "int64"                           shift, and go to state 244
    "uint64"                          shift, and go to state 245
    "double"                          shift, and go to state 246
    "int8"                            shift, and go to state 249
    "uint8"                           shift, and go to state 250
    "int16"                           shift, and go to state 251
    "uint16"                          shift, and go to state 252
    "tuple"                           shift, and go to state 421
    "variant"                         shift, and go to state 422
    "generator"                       shift, and go to state 423
    "++"                              shift, and go to state 424
    "--"                              shift, and go to state 425
    "::"                              shift, and go to state 55
    "$$"                              shift, and go to state 426
    "$i"                              shift, and go to state 427
    "$v"                              shift, and go to state 428
    "$b"                              shift, and go to state 429
    "$a"                              shift, and go to state 430
    "$c"                              shift, and go to state 431
    "..."                             shift, and go to state 432
    "integer constant"                shift, and go to state 433
    "long integer constant"           shift, and go to state 434
    "unsigned integer constant"       shift, and go to state 435
    "unsigned long integer constant"  shift, and go to state 436
    "unsigned int8 constant"          shift, and go to state 437
    "floating point constant"         shift, and go to state 438
    "double constant"                 shift, and go to state 439
    "name"                            shift, and go to state 56
    "start of the string"             shift, and go to state 440
    "begin of code block"             shift, and go to state 441
    '-'                               shift, and go to state 442
    '+'                               shift, and go to state 443
    '*'                               shift, and go to state 444
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 445
    '!'                               shift, and go to state 446
    '['                               shift, and go to state 447
    '('                               shift, and go to state 448
    '$'                               shift, and go to state 449
    '@'                               shift, and go to state 450

    string_builder          go to state 451
    expr_reader             go to state 452
    expr_call_pipe          go to state 453
    name_in_namespace       go to state 454
    expr_new                go to state 455
    expr_cast               go to state 456
    expr_type_decl          go to state 457
    expr_type_info          go to state 458
    block_or_lambda         go to state 459
    expr_full_block         go to state 460
    expr_numeric_const      go to state 461
    expr_named_call         go to state 462
    expr_method_call        go to state 463
    func_addr_expr          go to state 464
    expr_field              go to state 465
    expr_call               go to state 466
    expr                    go to state 938
    expr_mtag               go to state 468
    basic_type_declaration  go to state 469
    make_decl               go to state 470
    make_struct_decl        go to state 471
    make_tuple_call         go to state 472
    make_dim_decl           go to state 473
    make_table_decl         go to state 474
    array_comprehension     go to state 475


State 743

  331 expr_assign: expr "/=" . expr

    "struct"                          shift, and go to state 402
    "class"                           shift, and go to state 403
    "true"                            shift, and go to state 404
    "false"                           shift, and go to state 405
    "new"                             shift, and go to state 406
    "typeinfo"                        shift, and go to state 407
    "type"                            shift, and go to state 408
    "array"                           shift, and go to state 409
    "null"                            shift, and go to state 410
    "table"                           shift, and go to state 411
    "deref"                           shift, and go to state 412
    "cast"                            shift, and go to state 413
    "upcast"                          shift, and go to state 414
    "addr"                            shift, and go to state 415
    "reinterpret"                     shift, and go to state 416
    "unsafe"                          shift, and go to state 417
    "fixed_array"                     shift, and go to state 418
    "default"                         shift, and go to state 419
    "bool"                            shift, and go to state 222
    "void"                            shift, and go to state 223
    "string"                          shift, and go to state 224
    "int"                             shift, and go to state 226
    "int2"                            shift, and go to state 227
    "int3"                            shift, and go to state 228
    "int4"                            shift, and go to state 229
    "uint"                            shift, and go to state 230
    "bitfield"                        shift, and go to state 420
    "uint2"                           shift, and go to state 232
    "uint3"                           shift, and go to state 233
    "uint4"                           shift, and go to state 234
    "float"                           shift, and go to state 235
    "float2"                          shift, and go to state 236
    "float3"                          shift, and go to state 237
    "float4"                          shift, and go to state 238
    "range"                           shift, and go to state 239
    "urange"                          shift, and go to state 240
    "range64"                         shift, and go to state 241
    "urange64"                        shift, and go to state 242
    "int64"                           shift, and go to state 244
    "uint64"                          shift, and go to state 245
    "double"                          shift, and go to state 246
    "int8"                            shift, and go to state 249
    "uint8"                           shift, and go to state 250
    "int16"                           shift, and go to state 251
    "uint16"                          shift, and go to state 252
    "tuple"                           shift, and go to state 421
    "variant"                         shift, and go to state 422
    "generator"                       shift, and go to state 423
    "++"                              shift, and go to state 424
    "--"                              shift, and go to state 425
    "::"                              shift, and go to state 55
    "$$"                              shift, and go to state 426
    "$i"                              shift, and go to state 427
    "$v"                              shift, and go to state 428
    "$b"                              shift, and go to state 429
    "$a"                              shift, and go to state 430
    "$c"                              shift, and go to state 431
    "..."                             shift, and go to state 432
    "integer constant"                shift, and go to state 433
    "long integer constant"           shift, and go to state 434
    "unsigned integer constant"       shift, and go to state 435
    "unsigned long integer constant"  shift, and go to state 436
    "unsigned int8 constant"          shift, and go to state 437
    "floating point constant"         shift, and go to state 438
    "double constant"                 shift, and go to state 439
    "name"                            shift, and go to state 56
    "start of the string"             shift, and go to state 440
    "begin of code block"             shift, and go to state 441
    '-'                               shift, and go to state 442
    '+'                               shift, and go to state 443
    '*'                               shift, and go to state 444
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 445
    '!'                               shift, and go to state 446
    '['                               shift, and go to state 447
    '('                               shift, and go to state 448
    '$'                               shift, and go to state 449
    '@'                               shift, and go to state 450

    string_builder          go to state 451
    expr_reader             go to state 452
    expr_call_pipe          go to state 453
    name_in_namespace       go to state 454
    expr_new                go to state 455
    expr_cast               go to state 456
    expr_type_decl          go to state 457
    expr_type_info          go to state 458
    block_or_lambda         go to state 459
    expr_full_block         go to state 460
    expr_numeric_const      go to state 461
    expr_named_call         go to state 462
    expr_method_call        go to state 463
    func_addr_expr          go to state 464
    expr_field              go to state 465
    expr_call               go to state 466
    expr                    go to state 939
    expr_mtag               go to state 468
    basic_type_declaration  go to state 469
    make_decl               go to state 470
    make_struct_decl        go to state 471
    make_tuple_call         go to state 472
    make_dim_decl           go to state 473
    make_table_decl         go to state 474
    array_comprehension     go to state 475


State 744

  330 expr_assign: expr "*=" . expr

    "struct"                          shift, and go to state 402
    "class"                           shift, and go to state 403
    "true"                            shift, and go to state 404
    "false"                           shift, and go to state 405
    "new"                             shift, and go to state 406
    "typeinfo"                        shift, and go to state 407
    "type"                            shift, and go to state 408
    "array"                           shift, and go to state 409
    "null"                            shift, and go to state 410
    "table"                           shift, and go to state 411
    "deref"                           shift, and go to state 412
    "cast"                            shift, and go to state 413
    "upcast"                          shift, and go to state 414
    "addr"                            shift, and go to state 415
    "reinterpret"                     shift, and go to state 416
    "unsafe"                          shift, and go to state 417
    "fixed_array"                     shift, and go to state 418
    "default"                         shift, and go to state 419
    "bool"                            shift, and go to state 222
    "void"                            shift, and go to state 223
    "string"                          shift, and go to state 224
    "int"                             shift, and go to state 226
    "int2"                            shift, and go to state 227
    "int3"                            shift, and go to state 228
    "int4"                            shift, and go to state 229
    "uint"                            shift, and go to state 230
    "bitfield"                        shift, and go to state 420
    "uint2"                           shift, and go to state 232
    "uint3"                           shift, and go to state 233
    "uint4"                           shift, and go to state 234
    "float"                           shift, and go to state 235
    "float2"                          shift, and go to state 236
    "float3"                          shift, and go to state 237
    "float4"                          shift, and go to state 238
    "range"                           shift, and go to state 239
    "urange"                          shift, and go to state 240
    "range64"                         shift, and go to state 241
    "urange64"                        shift, and go to state 242
    "int64"                           shift, and go to state 244
    "uint64"                          shift, and go to state 245
    "double"                          shift, and go to state 246
    "int8"                            shift, and go to state 249
    "uint8"                           shift, and go to state 250
    "int16"                           shift, and go to state 251
    "uint16"                          shift, and go to state 252
    "tuple"                           shift, and go to state 421
    "variant"                         shift, and go to state 422
    "generator"                       shift, and go to state 423
    "++"                              shift, and go to state 424
    "--"                              shift, and go to state 425
    "::"                              shift, and go to state 55
    "$$"                              shift, and go to state 426
    "$i"                              shift, and go to state 427
    "$v"                              shift, and go to state 428
    "$b"                              shift, and go to state 429
    "$a"                              shift, and go to state 430
    "$c"                              shift, and go to state 431
    "..."                             shift, and go to state 432
    "integer constant"                shift, and go to state 433
    "long integer constant"           shift, and go to state 434
    "unsigned integer constant"       shift, and go to state 435
    "unsigned long integer constant"  shift, and go to state 436
    "unsigned int8 constant"          shift, and go to state 437
    "floating point constant"         shift, and go to state 438
    "double constant"                 shift, and go to state 439
    "name"                            shift, and go to state 56
    "start of the string"             shift, and go to state 440
    "begin of code block"             shift, and go to state 441
    '-'                               shift, and go to state 442
    '+'                               shift, and go to state 443
    '*'                               shift, and go to state 444
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 445
    '!'                               shift, and go to state 446
    '['                               shift, and go to state 447
    '('                               shift, and go to state 448
    '$'                               shift, and go to state 449
    '@'                               shift, and go to state 450

    string_builder          go to state 451
    expr_reader             go to state 452
    expr_call_pipe          go to state 453
    name_in_namespace       go to state 454
    expr_new                go to state 455
    expr_cast               go to state 456
    expr_type_decl          go to state 457
    expr_type_info          go to state 458
    block_or_lambda         go to state 459
    expr_full_block         go to state 460
    expr_numeric_const      go to state 461
    expr_named_call         go to state 462
    expr_method_call        go to state 463
    func_addr_expr          go to state 464
    expr_field              go to state 465
    expr_call               go to state 466
    expr                    go to state 940
    expr_mtag               go to state 468
    basic_type_declaration  go to state 469
    make_decl               go to state 470
    make_struct_decl        go to state 471
    make_tuple_call         go to state 472
    make_dim_decl           go to state 473
    make_table_decl         go to state 474
    array_comprehension     go to state 475


State 745

  332 expr_assign: expr "%=" . expr

    "struct"                          shift, and go to state 402
    "class"                           shift, and go to state 403
    "true"                            shift, and go to state 404
    "false"                           shift, and go to state 405
    "new"                             shift, and go to state 406
    "typeinfo"                        shift, and go to state 407
    "type"                            shift, and go to state 408
    "array"                           shift, and go to state 409
    "null"                            shift, and go to state 410
    "table"                           shift, and go to state 411
    "deref"                           shift, and go to state 412
    "cast"                            shift, and go to state 413
    "upcast"                          shift, and go to state 414
    "addr"                            shift, and go to state 415
    "reinterpret"                     shift, and go to state 416
    "unsafe"                          shift, and go to state 417
    "fixed_array"                     shift, and go to state 418
    "default"                         shift, and go to state 419
    "bool"                            shift, and go to state 222
    "void"                            shift, and go to state 223
    "string"                          shift, and go to state 224
    "int"                             shift, and go to state 226
    "int2"                            shift, and go to state 227
    "int3"                            shift, and go to state 228
    "int4"                            shift, and go to state 229
    "uint"                            shift, and go to state 230
    "bitfield"                        shift, and go to state 420
    "uint2"                           shift, and go to state 232
    "uint3"                           shift, and go to state 233
    "uint4"                           shift, and go to state 234
    "float"                           shift, and go to state 235
    "float2"                          shift, and go to state 236
    "float3"                          shift, and go to state 237
    "float4"                          shift, and go to state 238
    "range"                           shift, and go to state 239
    "urange"                          shift, and go to state 240
    "range64"                         shift, and go to state 241
    "urange64"                        shift, and go to state 242
    "int64"                           shift, and go to state 244
    "uint64"                          shift, and go to state 245
    "double"                          shift, and go to state 246
    "int8"                            shift, and go to state 249
    "uint8"                           shift, and go to state 250
    "int16"                           shift, and go to state 251
    "uint16"                          shift, and go to state 252
    "tuple"                           shift, and go to state 421
    "variant"                         shift, and go to state 422
    "generator"                       shift, and go to state 423
    "++"                              shift, and go to state 424
    "--"                              shift, and go to state 425
    "::"                              shift, and go to state 55
    "$$"                              shift, and go to state 426
    "$i"                              shift, and go to state 427
    "$v"                              shift, and go to state 428
    "$b"                              shift, and go to state 429
    "$a"                              shift, and go to state 430
    "$c"                              shift, and go to state 431
    "..."                             shift, and go to state 432
    "integer constant"                shift, and go to state 433
    "long integer constant"           shift, and go to state 434
    "unsigned integer constant"       shift, and go to state 435
    "unsigned long integer constant"  shift, and go to state 436
    "unsigned int8 constant"          shift, and go to state 437
    "floating point constant"         shift, and go to state 438
    "double constant"                 shift, and go to state 439
    "name"                            shift, and go to state 56
    "start of the string"             shift, and go to state 440
    "begin of code block"             shift, and go to state 441
    '-'                               shift, and go to state 442
    '+'                               shift, and go to state 443
    '*'                               shift, and go to state 444
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 445
    '!'                               shift, and go to state 446
    '['                               shift, and go to state 447
    '('                               shift, and go to state 448
    '$'                               shift, and go to state 449
    '@'                               shift, and go to state 450

    string_builder          go to state 451
    expr_reader             go to state 452
    expr_call_pipe          go to state 453
    name_in_namespace       go to state 454
    expr_new                go to state 455
    expr_cast               go to state 456
    expr_type_decl          go to state 457
    expr_type_info          go to state 458
    block_or_lambda         go to state 459
    expr_full_block         go to state 460
    expr_numeric_const      go to state 461
    expr_named_call         go to state 462
    expr_method_call        go to state 463
    func_addr_expr          go to state 464
    expr_field              go to state 465
    expr_call               go to state 466
    expr                    go to state 941
    expr_mtag               go to state 468
    basic_type_declaration  go to state 469
    make_decl               go to state 470
    make_struct_decl        go to state 471
    make_tuple_call         go to state 472
    make_dim_decl           go to state 473
    make_table_decl         go to state 474
    array_comprehension     go to state 475


State 746

  322 expr_assign: expr "&=" . expr

    "struct"                          shift, and go to state 402
    "class"                           shift, and go to state 403
    "true"                            shift, and go to state 404
    "false"                           shift, and go to state 405
    "new"                             shift, and go to state 406
    "typeinfo"                        shift, and go to state 407
    "type"                            shift, and go to state 408
    "array"                           shift, and go to state 409
    "null"                            shift, and go to state 410
    "table"                           shift, and go to state 411
    "deref"                           shift, and go to state 412
    "cast"                            shift, and go to state 413
    "upcast"                          shift, and go to state 414
    "addr"                            shift, and go to state 415
    "reinterpret"                     shift, and go to state 416
    "unsafe"                          shift, and go to state 417
    "fixed_array"                     shift, and go to state 418
    "default"                         shift, and go to state 419
    "bool"                            shift, and go to state 222
    "void"                            shift, and go to state 223
    "string"                          shift, and go to state 224
    "int"                             shift, and go to state 226
    "int2"                            shift, and go to state 227
    "int3"                            shift, and go to state 228
    "int4"                            shift, and go to state 229
    "uint"                            shift, and go to state 230
    "bitfield"                        shift, and go to state 420
    "uint2"                           shift, and go to state 232
    "uint3"                           shift, and go to state 233
    "uint4"                           shift, and go to state 234
    "float"                           shift, and go to state 235
    "float2"                          shift, and go to state 236
    "float3"                          shift, and go to state 237
    "float4"                          shift, and go to state 238
    "range"                           shift, and go to state 239
    "urange"                          shift, and go to state 240
    "range64"                         shift, and go to state 241
    "urange64"                        shift, and go to state 242
    "int64"                           shift, and go to state 244
    "uint64"                          shift, and go to state 245
    "double"                          shift, and go to state 246
    "int8"                            shift, and go to state 249
    "uint8"                           shift, and go to state 250
    "int16"                           shift, and go to state 251
    "uint16"                          shift, and go to state 252
    "tuple"                           shift, and go to state 421
    "variant"                         shift, and go to state 422
    "generator"                       shift, and go to state 423
    "++"                              shift, and go to state 424
    "--"                              shift, and go to state 425
    "::"                              shift, and go to state 55
    "$$"                              shift, and go to state 426
    "$i"                              shift, and go to state 427
    "$v"                              shift, and go to state 428
    "$b"                              shift, and go to state 429
    "$a"                              shift, and go to state 430
    "$c"                              shift, and go to state 431
    "..."                             shift, and go to state 432
    "integer constant"                shift, and go to state 433
    "long integer constant"           shift, and go to state 434
    "unsigned integer constant"       shift, and go to state 435
    "unsigned long integer constant"  shift, and go to state 436
    "unsigned int8 constant"          shift, and go to state 437
    "floating point constant"         shift, and go to state 438
    "double constant"                 shift, and go to state 439
    "name"                            shift, and go to state 56
    "start of the string"             shift, and go to state 440
    "begin of code block"             shift, and go to state 441
    '-'                               shift, and go to state 442
    '+'                               shift, and go to state 443
    '*'                               shift, and go to state 444
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 445
    '!'                               shift, and go to state 446
    '['                               shift, and go to state 447
    '('                               shift, and go to state 448
    '$'                               shift, and go to state 449
    '@'                               shift, and go to state 450

    string_builder          go to state 451
    expr_reader             go to state 452
    expr_call_pipe          go to state 453
    name_in_namespace       go to state 454
    expr_new                go to state 455
    expr_cast               go to state 456
    expr_type_decl          go to state 457
    expr_type_info          go to state 458
    block_or_lambda         go to state 459
    expr_full_block         go to state 460
    expr_numeric_const      go to state 461
    expr_named_call         go to state 462
    expr_method_call        go to state 463
    func_addr_expr          go to state 464
    expr_field              go to state 465
    expr_call               go to state 466
    expr                    go to state 942
    expr_mtag               go to state 468
    basic_type_declaration  go to state 469
    make_decl               go to state 470
    make_struct_decl        go to state 471
    make_tuple_call         go to state 472
    make_dim_decl           go to state 473
    make_table_decl         go to state 474
    array_comprehension     go to state 475


State 747

  323 expr_assign: expr "|=" . expr

    "struct"                          shift, and go to state 402
    "class"                           shift, and go to state 403
    "true"                            shift, and go to state 404
    "false"                           shift, and go to state 405
    "new"                             shift, and go to state 406
    "typeinfo"                        shift, and go to state 407
    "type"                            shift, and go to state 408
    "array"                           shift, and go to state 409
    "null"                            shift, and go to state 410
    "table"                           shift, and go to state 411
    "deref"                           shift, and go to state 412
    "cast"                            shift, and go to state 413
    "upcast"                          shift, and go to state 414
    "addr"                            shift, and go to state 415
    "reinterpret"                     shift, and go to state 416
    "unsafe"                          shift, and go to state 417
    "fixed_array"                     shift, and go to state 418
    "default"                         shift, and go to state 419
    "bool"                            shift, and go to state 222
    "void"                            shift, and go to state 223
    "string"                          shift, and go to state 224
    "int"                             shift, and go to state 226
    "int2"                            shift, and go to state 227
    "int3"                            shift, and go to state 228
    "int4"                            shift, and go to state 229
    "uint"                            shift, and go to state 230
    "bitfield"                        shift, and go to state 420
    "uint2"                           shift, and go to state 232
    "uint3"                           shift, and go to state 233
    "uint4"                           shift, and go to state 234
    "float"                           shift, and go to state 235
    "float2"                          shift, and go to state 236
    "float3"                          shift, and go to state 237
    "float4"                          shift, and go to state 238
    "range"                           shift, and go to state 239
    "urange"                          shift, and go to state 240
    "range64"                         shift, and go to state 241
    "urange64"                        shift, and go to state 242
    "int64"                           shift, and go to state 244
    "uint64"                          shift, and go to state 245
    "double"                          shift, and go to state 246
    "int8"                            shift, and go to state 249
    "uint8"                           shift, and go to state 250
    "int16"                           shift, and go to state 251
    "uint16"                          shift, and go to state 252
    "tuple"                           shift, and go to state 421
    "variant"                         shift, and go to state 422
    "generator"                       shift, and go to state 423
    "++"                              shift, and go to state 424
    "--"                              shift, and go to state 425
    "::"                              shift, and go to state 55
    "$$"                              shift, and go to state 426
    "$i"                              shift, and go to state 427
    "$v"                              shift, and go to state 428
    "$b"                              shift, and go to state 429
    "$a"                              shift, and go to state 430
    "$c"                              shift, and go to state 431
    "..."                             shift, and go to state 432
    "integer constant"                shift, and go to state 433
    "long integer constant"           shift, and go to state 434
    "unsigned integer constant"       shift, and go to state 435
    "unsigned long integer constant"  shift, and go to state 436
    "unsigned int8 constant"          shift, and go to state 437
    "floating point constant"         shift, and go to state 438
    "double constant"                 shift, and go to state 439
    "name"                            shift, and go to state 56
    "start of the string"             shift, and go to state 440
    "begin of code block"             shift, and go to state 441
    '-'                               shift, and go to state 442
    '+'                               shift, and go to state 443
    '*'                               shift, and go to state 444
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 445
    '!'                               shift, and go to state 446
    '['                               shift, and go to state 447
    '('                               shift, and go to state 448
    '$'                               shift, and go to state 449
    '@'                               shift, and go to state 450

    string_builder          go to state 451
    expr_reader             go to state 452
    expr_call_pipe          go to state 453
    name_in_namespace       go to state 454
    expr_new                go to state 455
    expr_cast               go to state 456
    expr_type_decl          go to state 457
    expr_type_info          go to state 458
    block_or_lambda         go to state 459
    expr_full_block         go to state 460
    expr_numeric_const      go to state 461
    expr_named_call         go to state 462
    expr_method_call        go to state 463
    func_addr_expr          go to state 464
    expr_field              go to state 465
    expr_call               go to state 466
    expr                    go to state 943
    expr_mtag               go to state 468
    basic_type_declaration  go to state 469
    make_decl               go to state 470
    make_struct_decl        go to state 471
    make_tuple_call         go to state 472
    make_dim_decl           go to state 473
    make_table_decl         go to state 474
    array_comprehension     go to state 475


State 748

  324 expr_assign: expr "^=" . expr

    "struct"                          shift, and go to state 402
    "class"                           shift, and go to state 403
    "true"                            shift, and go to state 404
    "false"                           shift, and go to state 405
    "new"                             shift, and go to state 406
    "typeinfo"                        shift, and go to state 407
    "type"                            shift, and go to state 408
    "array"                           shift, and go to state 409
    "null"                            shift, and go to state 410
    "table"                           shift, and go to state 411
    "deref"                           shift, and go to state 412
    "cast"                            shift, and go to state 413
    "upcast"                          shift, and go to state 414
    "addr"                            shift, and go to state 415
    "reinterpret"                     shift, and go to state 416
    "unsafe"                          shift, and go to state 417
    "fixed_array"                     shift, and go to state 418
    "default"                         shift, and go to state 419
    "bool"                            shift, and go to state 222
    "void"                            shift, and go to state 223
    "string"                          shift, and go to state 224
    "int"                             shift, and go to state 226
    "int2"                            shift, and go to state 227
    "int3"                            shift, and go to state 228
    "int4"                            shift, and go to state 229
    "uint"                            shift, and go to state 230
    "bitfield"                        shift, and go to state 420
    "uint2"                           shift, and go to state 232
    "uint3"                           shift, and go to state 233
    "uint4"                           shift, and go to state 234
    "float"                           shift, and go to state 235
    "float2"                          shift, and go to state 236
    "float3"                          shift, and go to state 237
    "float4"                          shift, and go to state 238
    "range"                           shift, and go to state 239
    "urange"                          shift, and go to state 240
    "range64"                         shift, and go to state 241
    "urange64"                        shift, and go to state 242
    "int64"                           shift, and go to state 244
    "uint64"                          shift, and go to state 245
    "double"                          shift, and go to state 246
    "int8"                            shift, and go to state 249
    "uint8"                           shift, and go to state 250
    "int16"                           shift, and go to state 251
    "uint16"                          shift, and go to state 252
    "tuple"                           shift, and go to state 421
    "variant"                         shift, and go to state 422
    "generator"                       shift, and go to state 423
    "++"                              shift, and go to state 424
    "--"                              shift, and go to state 425
    "::"                              shift, and go to state 55
    "$$"                              shift, and go to state 426
    "$i"                              shift, and go to state 427
    "$v"                              shift, and go to state 428
    "$b"                              shift, and go to state 429
    "$a"                              shift, and go to state 430
    "$c"                              shift, and go to state 431
    "..."                             shift, and go to state 432
    "integer constant"                shift, and go to state 433
    "long integer constant"           shift, and go to state 434
    "unsigned integer constant"       shift, and go to state 435
    "unsigned long integer constant"  shift, and go to state 436
    "unsigned int8 constant"          shift, and go to state 437
    "floating point constant"         shift, and go to state 438
    "double constant"                 shift, and go to state 439
    "name"                            shift, and go to state 56
    "start of the string"             shift, and go to state 440
    "begin of code block"             shift, and go to state 441
    '-'                               shift, and go to state 442
    '+'                               shift, and go to state 443
    '*'                               shift, and go to state 444
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 445
    '!'                               shift, and go to state 446
    '['                               shift, and go to state 447
    '('                               shift, and go to state 448
    '$'                               shift, and go to state 449
    '@'                               shift, and go to state 450

    string_builder          go to state 451
    expr_reader             go to state 452
    expr_call_pipe          go to state 453
    name_in_namespace       go to state 454
    expr_new                go to state 455
    expr_cast               go to state 456
    expr_type_decl          go to state 457
    expr_type_info          go to state 458
    block_or_lambda         go to state 459
    expr_full_block         go to state 460
    expr_numeric_const      go to state 461
    expr_named_call         go to state 462
    expr_method_call        go to state 463
    func_addr_expr          go to state 464
    expr_field              go to state 465
    expr_call               go to state 466
    expr                    go to state 944
    expr_mtag               go to state 468
    basic_type_declaration  go to state 469
    make_decl               go to state 470
    make_struct_decl        go to state 471
    make_tuple_call         go to state 472
    make_dim_decl           go to state 473
    make_table_decl         go to state 474
    array_comprehension     go to state 475


State 749

  333 expr_assign: expr "<<=" . expr

    "struct"                          shift, and go to state 402
    "class"                           shift, and go to state 403
    "true"                            shift, and go to state 404
    "false"                           shift, and go to state 405
    "new"                             shift, and go to state 406
    "typeinfo"                        shift, and go to state 407
    "type"                            shift, and go to state 408
    "array"                           shift, and go to state 409
    "null"                            shift, and go to state 410
    "table"                           shift, and go to state 411
    "deref"                           shift, and go to state 412
    "cast"                            shift, and go to state 413
    "upcast"                          shift, and go to state 414
    "addr"                            shift, and go to state 415
    "reinterpret"                     shift, and go to state 416
    "unsafe"                          shift, and go to state 417
    "fixed_array"                     shift, and go to state 418
    "default"                         shift, and go to state 419
    "bool"                            shift, and go to state 222
    "void"                            shift, and go to state 223
    "string"                          shift, and go to state 224
    "int"                             shift, and go to state 226
    "int2"                            shift, and go to state 227
    "int3"                            shift, and go to state 228
    "int4"                            shift, and go to state 229
    "uint"                            shift, and go to state 230
    "bitfield"                        shift, and go to state 420
    "uint2"                           shift, and go to state 232
    "uint3"                           shift, and go to state 233
    "uint4"                           shift, and go to state 234
    "float"                           shift, and go to state 235
    "float2"                          shift, and go to state 236
    "float3"                          shift, and go to state 237
    "float4"                          shift, and go to state 238
    "range"                           shift, and go to state 239
    "urange"                          shift, and go to state 240
    "range64"                         shift, and go to state 241
    "urange64"                        shift, and go to state 242
    "int64"                           shift, and go to state 244
    "uint64"                          shift, and go to state 245
    "double"                          shift, and go to state 246
    "int8"                            shift, and go to state 249
    "uint8"                           shift, and go to state 250
    "int16"                           shift, and go to state 251
    "uint16"                          shift, and go to state 252
    "tuple"                           shift, and go to state 421
    "variant"                         shift, and go to state 422
    "generator"                       shift, and go to state 423
    "++"                              shift, and go to state 424
    "--"                              shift, and go to state 425
    "::"                              shift, and go to state 55
    "$$"                              shift, and go to state 426
    "$i"                              shift, and go to state 427
    "$v"                              shift, and go to state 428
    "$b"                              shift, and go to state 429
    "$a"                              shift, and go to state 430
    "$c"                              shift, and go to state 431
    "..."                             shift, and go to state 432
    "integer constant"                shift, and go to state 433
    "long integer constant"           shift, and go to state 434
    "unsigned integer constant"       shift, and go to state 435
    "unsigned long integer constant"  shift, and go to state 436
    "unsigned int8 constant"          shift, and go to state 437
    "floating point constant"         shift, and go to state 438
    "double constant"                 shift, and go to state 439
    "name"                            shift, and go to state 56
    "start of the string"             shift, and go to state 440
    "begin of code block"             shift, and go to state 441
    '-'                               shift, and go to state 442
    '+'                               shift, and go to state 443
    '*'                               shift, and go to state 444
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 445
    '!'                               shift, and go to state 446
    '['                               shift, and go to state 447
    '('                               shift, and go to state 448
    '$'                               shift, and go to state 449
    '@'                               shift, and go to state 450

    string_builder          go to state 451
    expr_reader             go to state 452
    expr_call_pipe          go to state 453
    name_in_namespace       go to state 454
    expr_new                go to state 455
    expr_cast               go to state 456
    expr_type_decl          go to state 457
    expr_type_info          go to state 458
    block_or_lambda         go to state 459
    expr_full_block         go to state 460
    expr_numeric_const      go to state 461
    expr_named_call         go to state 462
    expr_method_call        go to state 463
    func_addr_expr          go to state 464
    expr_field              go to state 465
    expr_call               go to state 466
    expr                    go to state 945
    expr_mtag               go to state 468
    basic_type_declaration  go to state 469
    make_decl               go to state 470
    make_struct_decl        go to state 471
    make_tuple_call         go to state 472
    make_dim_decl           go to state 473
    make_table_decl         go to state 474
    array_comprehension     go to state 475


State 750

  334 expr_assign: expr ">>=" . expr

    "struct"                          shift, and go to state 402
    "class"                           shift, and go to state 403
    "true"                            shift, and go to state 404
    "false"                           shift, and go to state 405
    "new"                             shift, and go to state 406
    "typeinfo"                        shift, and go to state 407
    "type"                            shift, and go to state 408
    "array"                           shift, and go to state 409
    "null"                            shift, and go to state 410
    "table"                           shift, and go to state 411
    "deref"                           shift, and go to state 412
    "cast"                            shift, and go to state 413
    "upcast"                          shift, and go to state 414
    "addr"                            shift, and go to state 415
    "reinterpret"                     shift, and go to state 416
    "unsafe"                          shift, and go to state 417
    "fixed_array"                     shift, and go to state 418
    "default"                         shift, and go to state 419
    "bool"                            shift, and go to state 222
    "void"                            shift, and go to state 223
    "string"                          shift, and go to state 224
    "int"                             shift, and go to state 226
    "int2"                            shift, and go to state 227
    "int3"                            shift, and go to state 228
    "int4"                            shift, and go to state 229
    "uint"                            shift, and go to state 230
    "bitfield"                        shift, and go to state 420
    "uint2"                           shift, and go to state 232
    "uint3"                           shift, and go to state 233
    "uint4"                           shift, and go to state 234
    "float"                           shift, and go to state 235
    "float2"                          shift, and go to state 236
    "float3"                          shift, and go to state 237
    "float4"                          shift, and go to state 238
    "range"                           shift, and go to state 239
    "urange"                          shift, and go to state 240
    "range64"                         shift, and go to state 241
    "urange64"                        shift, and go to state 242
    "int64"                           shift, and go to state 244
    "uint64"                          shift, and go to state 245
    "double"                          shift, and go to state 246
    "int8"                            shift, and go to state 249
    "uint8"                           shift, and go to state 250
    "int16"                           shift, and go to state 251
    "uint16"                          shift, and go to state 252
    "tuple"                           shift, and go to state 421
    "variant"                         shift, and go to state 422
    "generator"                       shift, and go to state 423
    "++"                              shift, and go to state 424
    "--"                              shift, and go to state 425
    "::"                              shift, and go to state 55
    "$$"                              shift, and go to state 426
    "$i"                              shift, and go to state 427
    "$v"                              shift, and go to state 428
    "$b"                              shift, and go to state 429
    "$a"                              shift, and go to state 430
    "$c"                              shift, and go to state 431
    "..."                             shift, and go to state 432
    "integer constant"                shift, and go to state 433
    "long integer constant"           shift, and go to state 434
    "unsigned integer constant"       shift, and go to state 435
    "unsigned long integer constant"  shift, and go to state 436
    "unsigned int8 constant"          shift, and go to state 437
    "floating point constant"         shift, and go to state 438
    "double constant"                 shift, and go to state 439
    "name"                            shift, and go to state 56
    "start of the string"             shift, and go to state 440
    "begin of code block"             shift, and go to state 441
    '-'                               shift, and go to state 442
    '+'                               shift, and go to state 443
    '*'                               shift, and go to state 444
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 445
    '!'                               shift, and go to state 446
    '['                               shift, and go to state 447
    '('                               shift, and go to state 448
    '$'                               shift, and go to state 449
    '@'                               shift, and go to state 450

    string_builder          go to state 451
    expr_reader             go to state 452
    expr_call_pipe          go to state 453
    name_in_namespace       go to state 454
    expr_new                go to state 455
    expr_cast               go to state 456
    expr_type_decl          go to state 457
    expr_type_info          go to state 458
    block_or_lambda         go to state 459
    expr_full_block         go to state 460
    expr_numeric_const      go to state 461
    expr_named_call         go to state 462
    expr_method_call        go to state 463
    func_addr_expr          go to state 464
    expr_field              go to state 465
    expr_call               go to state 466
    expr                    go to state 946
    expr_mtag               go to state 468
    basic_type_declaration  go to state 469
    make_decl               go to state 470
    make_struct_decl        go to state 471
    make_tuple_call         go to state 472
    make_dim_decl           go to state 473
    make_table_decl         go to state 474
    array_comprehension     go to state 475


State 751

  320 expr_assign: expr "<-" . expr

    "struct"                          shift, and go to state 402
    "class"                           shift, and go to state 403
    "true"                            shift, and go to state 404
    "false"                           shift, and go to state 405
    "new"                             shift, and go to state 406
    "typeinfo"                        shift, and go to state 407
    "type"                            shift, and go to state 408
    "array"                           shift, and go to state 409
    "null"                            shift, and go to state 410
    "table"                           shift, and go to state 411
    "deref"                           shift, and go to state 412
    "cast"                            shift, and go to state 413
    "upcast"                          shift, and go to state 414
    "addr"                            shift, and go to state 415
    "reinterpret"                     shift, and go to state 416
    "unsafe"                          shift, and go to state 417
    "fixed_array"                     shift, and go to state 418
    "default"                         shift, and go to state 419
    "bool"                            shift, and go to state 222
    "void"                            shift, and go to state 223
    "string"                          shift, and go to state 224
    "int"                             shift, and go to state 226
    "int2"                            shift, and go to state 227
    "int3"                            shift, and go to state 228
    "int4"                            shift, and go to state 229
    "uint"                            shift, and go to state 230
    "bitfield"                        shift, and go to state 420
    "uint2"                           shift, and go to state 232
    "uint3"                           shift, and go to state 233
    "uint4"                           shift, and go to state 234
    "float"                           shift, and go to state 235
    "float2"                          shift, and go to state 236
    "float3"                          shift, and go to state 237
    "float4"                          shift, and go to state 238
    "range"                           shift, and go to state 239
    "urange"                          shift, and go to state 240
    "range64"                         shift, and go to state 241
    "urange64"                        shift, and go to state 242
    "int64"                           shift, and go to state 244
    "uint64"                          shift, and go to state 245
    "double"                          shift, and go to state 246
    "int8"                            shift, and go to state 249
    "uint8"                           shift, and go to state 250
    "int16"                           shift, and go to state 251
    "uint16"                          shift, and go to state 252
    "tuple"                           shift, and go to state 421
    "variant"                         shift, and go to state 422
    "generator"                       shift, and go to state 423
    "++"                              shift, and go to state 424
    "--"                              shift, and go to state 425
    "::"                              shift, and go to state 55
    "$$"                              shift, and go to state 426
    "$i"                              shift, and go to state 427
    "$v"                              shift, and go to state 428
    "$b"                              shift, and go to state 429
    "$a"                              shift, and go to state 430
    "$c"                              shift, and go to state 431
    "..."                             shift, and go to state 432
    "integer constant"                shift, and go to state 433
    "long integer constant"           shift, and go to state 434
    "unsigned integer constant"       shift, and go to state 435
    "unsigned long integer constant"  shift, and go to state 436
    "unsigned int8 constant"          shift, and go to state 437
    "floating point constant"         shift, and go to state 438
    "double constant"                 shift, and go to state 439
    "name"                            shift, and go to state 56
    "start of the string"             shift, and go to state 440
    "begin of code block"             shift, and go to state 441
    '-'                               shift, and go to state 442
    '+'                               shift, and go to state 443
    '*'                               shift, and go to state 444
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 445
    '!'                               shift, and go to state 446
    '['                               shift, and go to state 447
    '('                               shift, and go to state 448
    '$'                               shift, and go to state 449
    '@'                               shift, and go to state 450

    string_builder          go to state 451
    expr_reader             go to state 452
    expr_call_pipe          go to state 453
    name_in_namespace       go to state 454
    expr_new                go to state 455
    expr_cast               go to state 456
    expr_type_decl          go to state 457
    expr_type_info          go to state 458
    block_or_lambda         go to state 459
    expr_full_block         go to state 460
    expr_numeric_const      go to state 461
    expr_named_call         go to state 462
    expr_method_call        go to state 463
    func_addr_expr          go to state 464
    expr_field              go to state 465
    expr_call               go to state 466
    expr                    go to state 947
    expr_mtag               go to state 468
    basic_type_declaration  go to state 469
    make_decl               go to state 470
    make_struct_decl        go to state 471
    make_tuple_call         go to state 472
    make_dim_decl           go to state 473
    make_table_decl         go to state 474
    array_comprehension     go to state 475


State 752

  321 expr_assign: expr ":=" . expr

    "struct"                          shift, and go to state 402
    "class"                           shift, and go to state 403
    "true"                            shift, and go to state 404
    "false"                           shift, and go to state 405
    "new"                             shift, and go to state 406
    "typeinfo"                        shift, and go to state 407
    "type"                            shift, and go to state 408
    "array"                           shift, and go to state 409
    "null"                            shift, and go to state 410
    "table"                           shift, and go to state 411
    "deref"                           shift, and go to state 412
    "cast"                            shift, and go to state 413
    "upcast"                          shift, and go to state 414
    "addr"                            shift, and go to state 415
    "reinterpret"                     shift, and go to state 416
    "unsafe"                          shift, and go to state 417
    "fixed_array"                     shift, and go to state 418
    "default"                         shift, and go to state 419
    "bool"                            shift, and go to state 222
    "void"                            shift, and go to state 223
    "string"                          shift, and go to state 224
    "int"                             shift, and go to state 226
    "int2"                            shift, and go to state 227
    "int3"                            shift, and go to state 228
    "int4"                            shift, and go to state 229
    "uint"                            shift, and go to state 230
    "bitfield"                        shift, and go to state 420
    "uint2"                           shift, and go to state 232
    "uint3"                           shift, and go to state 233
    "uint4"                           shift, and go to state 234
    "float"                           shift, and go to state 235
    "float2"                          shift, and go to state 236
    "float3"                          shift, and go to state 237
    "float4"                          shift, and go to state 238
    "range"                           shift, and go to state 239
    "urange"                          shift, and go to state 240
    "range64"                         shift, and go to state 241
    "urange64"                        shift, and go to state 242
    "int64"                           shift, and go to state 244
    "uint64"                          shift, and go to state 245
    "double"                          shift, and go to state 246
    "int8"                            shift, and go to state 249
    "uint8"                           shift, and go to state 250
    "int16"                           shift, and go to state 251
    "uint16"                          shift, and go to state 252
    "tuple"                           shift, and go to state 421
    "variant"                         shift, and go to state 422
    "generator"                       shift, and go to state 423
    "++"                              shift, and go to state 424
    "--"                              shift, and go to state 425
    "::"                              shift, and go to state 55
    "$$"                              shift, and go to state 426
    "$i"                              shift, and go to state 427
    "$v"                              shift, and go to state 428
    "$b"                              shift, and go to state 429
    "$a"                              shift, and go to state 430
    "$c"                              shift, and go to state 431
    "..."                             shift, and go to state 432
    "integer constant"                shift, and go to state 433
    "long integer constant"           shift, and go to state 434
    "unsigned integer constant"       shift, and go to state 435
    "unsigned long integer constant"  shift, and go to state 436
    "unsigned int8 constant"          shift, and go to state 437
    "floating point constant"         shift, and go to state 438
    "double constant"                 shift, and go to state 439
    "name"                            shift, and go to state 56
    "start of the string"             shift, and go to state 440
    "begin of code block"             shift, and go to state 441
    '-'                               shift, and go to state 442
    '+'                               shift, and go to state 443
    '*'                               shift, and go to state 444
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 445
    '!'                               shift, and go to state 446
    '['                               shift, and go to state 447
    '('                               shift, and go to state 448
    '$'                               shift, and go to state 449
    '@'                               shift, and go to state 450

    string_builder          go to state 451
    expr_reader             go to state 452
    expr_call_pipe          go to state 453
    name_in_namespace       go to state 454
    expr_new                go to state 455
    expr_cast               go to state 456
    expr_type_decl          go to state 457
    expr_type_info          go to state 458
    block_or_lambda         go to state 459
    expr_full_block         go to state 460
    expr_numeric_const      go to state 461
    expr_named_call         go to state 462
    expr_method_call        go to state 463
    func_addr_expr          go to state 464
    expr_field              go to state 465
    expr_call               go to state 466
    expr                    go to state 948
    expr_mtag               go to state 468
    basic_type_declaration  go to state 469
    make_decl               go to state 470
    make_struct_decl        go to state 471
    make_tuple_call         go to state 472
    make_dim_decl           go to state 473
    make_table_decl         go to state 474
    array_comprehension     go to state 475


State 753

  335 expr_assign: expr "<<<=" . expr

    "struct"                          shift, and go to state 402
    "class"                           shift, and go to state 403
    "true"                            shift, and go to state 404
    "false"                           shift, and go to state 405
    "new"                             shift, and go to state 406
    "typeinfo"                        shift, and go to state 407
    "type"                            shift, and go to state 408
    "array"                           shift, and go to state 409
    "null"                            shift, and go to state 410
    "table"                           shift, and go to state 411
    "deref"                           shift, and go to state 412
    "cast"                            shift, and go to state 413
    "upcast"                          shift, and go to state 414
    "addr"                            shift, and go to state 415
    "reinterpret"                     shift, and go to state 416
    "unsafe"                          shift, and go to state 417
    "fixed_array"                     shift, and go to state 418
    "default"                         shift, and go to state 419
    "bool"                            shift, and go to state 222
    "void"                            shift, and go to state 223
    "string"                          shift, and go to state 224
    "int"                             shift, and go to state 226
    "int2"                            shift, and go to state 227
    "int3"                            shift, and go to state 228
    "int4"                            shift, and go to state 229
    "uint"                            shift, and go to state 230
    "bitfield"                        shift, and go to state 420
    "uint2"                           shift, and go to state 232
    "uint3"                           shift, and go to state 233
    "uint4"                           shift, and go to state 234
    "float"                           shift, and go to state 235
    "float2"                          shift, and go to state 236
    "float3"                          shift, and go to state 237
    "float4"                          shift, and go to state 238
    "range"                           shift, and go to state 239
    "urange"                          shift, and go to state 240
    "range64"                         shift, and go to state 241
    "urange64"                        shift, and go to state 242
    "int64"                           shift, and go to state 244
    "uint64"                          shift, and go to state 245
    "double"                          shift, and go to state 246
    "int8"                            shift, and go to state 249
    "uint8"                           shift, and go to state 250
    "int16"                           shift, and go to state 251
    "uint16"                          shift, and go to state 252
    "tuple"                           shift, and go to state 421
    "variant"                         shift, and go to state 422
    "generator"                       shift, and go to state 423
    "++"                              shift, and go to state 424
    "--"                              shift, and go to state 425
    "::"                              shift, and go to state 55
    "$$"                              shift, and go to state 426
    "$i"                              shift, and go to state 427
    "$v"                              shift, and go to state 428
    "$b"                              shift, and go to state 429
    "$a"                              shift, and go to state 430
    "$c"                              shift, and go to state 431
    "..."                             shift, and go to state 432
    "integer constant"                shift, and go to state 433
    "long integer constant"           shift, and go to state 434
    "unsigned integer constant"       shift, and go to state 435
    "unsigned long integer constant"  shift, and go to state 436
    "unsigned int8 constant"          shift, and go to state 437
    "floating point constant"         shift, and go to state 438
    "double constant"                 shift, and go to state 439
    "name"                            shift, and go to state 56
    "start of the string"             shift, and go to state 440
    "begin of code block"             shift, and go to state 441
    '-'                               shift, and go to state 442
    '+'                               shift, and go to state 443
    '*'                               shift, and go to state 444
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 445
    '!'                               shift, and go to state 446
    '['                               shift, and go to state 447
    '('                               shift, and go to state 448
    '$'                               shift, and go to state 449
    '@'                               shift, and go to state 450

    string_builder          go to state 451
    expr_reader             go to state 452
    expr_call_pipe          go to state 453
    name_in_namespace       go to state 454
    expr_new                go to state 455
    expr_cast               go to state 456
    expr_type_decl          go to state 457
    expr_type_info          go to state 458
    block_or_lambda         go to state 459
    expr_full_block         go to state 460
    expr_numeric_const      go to state 461
    expr_named_call         go to state 462
    expr_method_call        go to state 463
    func_addr_expr          go to state 464
    expr_field              go to state 465
    expr_call               go to state 466
    expr                    go to state 949
    expr_mtag               go to state 468
    basic_type_declaration  go to state 469
    make_decl               go to state 470
    make_struct_decl        go to state 471
    make_tuple_call         go to state 472
    make_dim_decl           go to state 473
    make_table_decl         go to state 474
    array_comprehension     go to state 475


State 754

  336 expr_assign: expr ">>>=" . expr

    "struct"                          shift, and go to state 402
    "class"                           shift, and go to state 403
    "true"                            shift, and go to state 404
    "false"                           shift, and go to state 405
    "new"                             shift, and go to state 406
    "typeinfo"                        shift, and go to state 407
    "type"                            shift, and go to state 408
    "array"                           shift, and go to state 409
    "null"                            shift, and go to state 410
    "table"                           shift, and go to state 411
    "deref"                           shift, and go to state 412
    "cast"                            shift, and go to state 413
    "upcast"                          shift, and go to state 414
    "addr"                            shift, and go to state 415
    "reinterpret"                     shift, and go to state 416
    "unsafe"                          shift, and go to state 417
    "fixed_array"                     shift, and go to state 418
    "default"                         shift, and go to state 419
    "bool"                            shift, and go to state 222
    "void"                            shift, and go to state 223
    "string"                          shift, and go to state 224
    "int"                             shift, and go to state 226
    "int2"                            shift, and go to state 227
    "int3"                            shift, and go to state 228
    "int4"                            shift, and go to state 229
    "uint"                            shift, and go to state 230
    "bitfield"                        shift, and go to state 420
    "uint2"                           shift, and go to state 232
    "uint3"                           shift, and go to state 233
    "uint4"                           shift, and go to state 234
    "float"                           shift, and go to state 235
    "float2"                          shift, and go to state 236
    "float3"                          shift, and go to state 237
    "float4"                          shift, and go to state 238
    "range"                           shift, and go to state 239
    "urange"                          shift, and go to state 240
    "range64"                         shift, and go to state 241
    "urange64"                        shift, and go to state 242
    "int64"                           shift, and go to state 244
    "uint64"                          shift, and go to state 245
    "double"                          shift, and go to state 246
    "int8"                            shift, and go to state 249
    "uint8"                           shift, and go to state 250
    "int16"                           shift, and go to state 251
    "uint16"                          shift, and go to state 252
    "tuple"                           shift, and go to state 421
    "variant"                         shift, and go to state 422
    "generator"                       shift, and go to state 423
    "++"                              shift, and go to state 424
    "--"                              shift, and go to state 425
    "::"                              shift, and go to state 55
    "$$"                              shift, and go to state 426
    "$i"                              shift, and go to state 427
    "$v"                              shift, and go to state 428
    "$b"                              shift, and go to state 429
    "$a"                              shift, and go to state 430
    "$c"                              shift, and go to state 431
    "..."                             shift, and go to state 432
    "integer constant"                shift, and go to state 433
    "long integer constant"           shift, and go to state 434
    "unsigned integer constant"       shift, and go to state 435
    "unsigned long integer constant"  shift, and go to state 436
    "unsigned int8 constant"          shift, and go to state 437
    "floating point constant"         shift, and go to state 438
    "double constant"                 shift, and go to state 439
    "name"                            shift, and go to state 56
    "start of the string"             shift, and go to state 440
    "begin of code block"             shift, and go to state 441
    '-'                               shift, and go to state 442
    '+'                               shift, and go to state 443
    '*'                               shift, and go to state 444
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 445
    '!'                               shift, and go to state 446
    '['                               shift, and go to state 447
    '('                               shift, and go to state 448
    '$'                               shift, and go to state 449
    '@'                               shift, and go to state 450

    string_builder          go to state 451
    expr_reader             go to state 452
    expr_call_pipe          go to state 453
    name_in_namespace       go to state 454
    expr_new                go to state 455
    expr_cast               go to state 456
    expr_type_decl          go to state 457
    expr_type_info          go to state 458
    block_or_lambda         go to state 459
    expr_full_block         go to state 460
    expr_numeric_const      go to state 461
    expr_named_call         go to state 462
    expr_method_call        go to state 463
    func_addr_expr          go to state 464
    expr_field              go to state 465
    expr_call               go to state 466
    expr                    go to state 950
    expr_mtag               go to state 468
    basic_type_declaration  go to state 469
    make_decl               go to state 470
    make_struct_decl        go to state 471
    make_tuple_call         go to state 472
    make_dim_decl           go to state 473
    make_table_decl         go to state 474
    array_comprehension     go to state 475


State 755

  325 expr_assign: expr "&&=" . expr

    "struct"                          shift, and go to state 402
    "class"                           shift, and go to state 403
    "true"                            shift, and go to state 404
    "false"                           shift, and go to state 405
    "new"                             shift, and go to state 406
    "typeinfo"                        shift, and go to state 407
    "type"                            shift, and go to state 408
    "array"                           shift, and go to state 409
    "null"                            shift, and go to state 410
    "table"                           shift, and go to state 411
    "deref"                           shift, and go to state 412
    "cast"                            shift, and go to state 413
    "upcast"                          shift, and go to state 414
    "addr"                            shift, and go to state 415
    "reinterpret"                     shift, and go to state 416
    "unsafe"                          shift, and go to state 417
    "fixed_array"                     shift, and go to state 418
    "default"                         shift, and go to state 419
    "bool"                            shift, and go to state 222
    "void"                            shift, and go to state 223
    "string"                          shift, and go to state 224
    "int"                             shift, and go to state 226
    "int2"                            shift, and go to state 227
    "int3"                            shift, and go to state 228
    "int4"                            shift, and go to state 229
    "uint"                            shift, and go to state 230
    "bitfield"                        shift, and go to state 420
    "uint2"                           shift, and go to state 232
    "uint3"                           shift, and go to state 233
    "uint4"                           shift, and go to state 234
    "float"                           shift, and go to state 235
    "float2"                          shift, and go to state 236
    "float3"                          shift, and go to state 237
    "float4"                          shift, and go to state 238
    "range"                           shift, and go to state 239
    "urange"                          shift, and go to state 240
    "range64"                         shift, and go to state 241
    "urange64"                        shift, and go to state 242
    "int64"                           shift, and go to state 244
    "uint64"                          shift, and go to state 245
    "double"                          shift, and go to state 246
    "int8"                            shift, and go to state 249
    "uint8"                           shift, and go to state 250
    "int16"                           shift, and go to state 251
    "uint16"                          shift, and go to state 252
    "tuple"                           shift, and go to state 421
    "variant"                         shift, and go to state 422
    "generator"                       shift, and go to state 423
    "++"                              shift, and go to state 424
    "--"                              shift, and go to state 425
    "::"                              shift, and go to state 55
    "$$"                              shift, and go to state 426
    "$i"                              shift, and go to state 427
    "$v"                              shift, and go to state 428
    "$b"                              shift, and go to state 429
    "$a"                              shift, and go to state 430
    "$c"                              shift, and go to state 431
    "..."                             shift, and go to state 432
    "integer constant"                shift, and go to state 433
    "long integer constant"           shift, and go to state 434
    "unsigned integer constant"       shift, and go to state 435
    "unsigned long integer constant"  shift, and go to state 436
    "unsigned int8 constant"          shift, and go to state 437
    "floating point constant"         shift, and go to state 438
    "double constant"                 shift, and go to state 439
    "name"                            shift, and go to state 56
    "start of the string"             shift, and go to state 440
    "begin of code block"             shift, and go to state 441
    '-'                               shift, and go to state 442
    '+'                               shift, and go to state 443
    '*'                               shift, and go to state 444
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 445
    '!'                               shift, and go to state 446
    '['                               shift, and go to state 447
    '('                               shift, and go to state 448
    '$'                               shift, and go to state 449
    '@'                               shift, and go to state 450

    string_builder          go to state 451
    expr_reader             go to state 452
    expr_call_pipe          go to state 453
    name_in_namespace       go to state 454
    expr_new                go to state 455
    expr_cast               go to state 456
    expr_type_decl          go to state 457
    expr_type_info          go to state 458
    block_or_lambda         go to state 459
    expr_full_block         go to state 460
    expr_numeric_const      go to state 461
    expr_named_call         go to state 462
    expr_method_call        go to state 463
    func_addr_expr          go to state 464
    expr_field              go to state 465
    expr_call               go to state 466
    expr                    go to state 951
    expr_mtag               go to state 468
    basic_type_declaration  go to state 469
    make_decl               go to state 470
    make_struct_decl        go to state 471
    make_tuple_call         go to state 472
    make_dim_decl           go to state 473
    make_table_decl         go to state 474
    array_comprehension     go to state 475


State 756

  326 expr_assign: expr "||=" . expr

    "struct"                          shift, and go to state 402
    "class"                           shift, and go to state 403
    "true"                            shift, and go to state 404
    "false"                           shift, and go to state 405
    "new"                             shift, and go to state 406
    "typeinfo"                        shift, and go to state 407
    "type"                            shift, and go to state 408
    "array"                           shift, and go to state 409
    "null"                            shift, and go to state 410
    "table"                           shift, and go to state 411
    "deref"                           shift, and go to state 412
    "cast"                            shift, and go to state 413
    "upcast"                          shift, and go to state 414
    "addr"                            shift, and go to state 415
    "reinterpret"                     shift, and go to state 416
    "unsafe"                          shift, and go to state 417
    "fixed_array"                     shift, and go to state 418
    "default"                         shift, and go to state 419
    "bool"                            shift, and go to state 222
    "void"                            shift, and go to state 223
    "string"                          shift, and go to state 224
    "int"                             shift, and go to state 226
    "int2"                            shift, and go to state 227
    "int3"                            shift, and go to state 228
    "int4"                            shift, and go to state 229
    "uint"                            shift, and go to state 230
    "bitfield"                        shift, and go to state 420
    "uint2"                           shift, and go to state 232
    "uint3"                           shift, and go to state 233
    "uint4"                           shift, and go to state 234
    "float"                           shift, and go to state 235
    "float2"                          shift, and go to state 236
    "float3"                          shift, and go to state 237
    "float4"                          shift, and go to state 238
    "range"                           shift, and go to state 239
    "urange"                          shift, and go to state 240
    "range64"                         shift, and go to state 241
    "urange64"                        shift, and go to state 242
    "int64"                           shift, and go to state 244
    "uint64"                          shift, and go to state 245
    "double"                          shift, and go to state 246
    "int8"                            shift, and go to state 249
    "uint8"                           shift, and go to state 250
    "int16"                           shift, and go to state 251
    "uint16"                          shift, and go to state 252
    "tuple"                           shift, and go to state 421
    "variant"                         shift, and go to state 422
    "generator"                       shift, and go to state 423
    "++"                              shift, and go to state 424
    "--"                              shift, and go to state 425
    "::"                              shift, and go to state 55
    "$$"                              shift, and go to state 426
    "$i"                              shift, and go to state 427
    "$v"                              shift, and go to state 428
    "$b"                              shift, and go to state 429
    "$a"                              shift, and go to state 430
    "$c"                              shift, and go to state 431
    "..."                             shift, and go to state 432
    "integer constant"                shift, and go to state 433
    "long integer constant"           shift, and go to state 434
    "unsigned integer constant"       shift, and go to state 435
    "unsigned long integer constant"  shift, and go to state 436
    "unsigned int8 constant"          shift, and go to state 437
    "floating point constant"         shift, and go to state 438
    "double constant"                 shift, and go to state 439
    "name"                            shift, and go to state 56
    "start of the string"             shift, and go to state 440
    "begin of code block"             shift, and go to state 441
    '-'                               shift, and go to state 442
    '+'                               shift, and go to state 443
    '*'                               shift, and go to state 444
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 445
    '!'                               shift, and go to state 446
    '['                               shift, and go to state 447
    '('                               shift, and go to state 448
    '$'                               shift, and go to state 449
    '@'                               shift, and go to state 450

    string_builder          go to state 451
    expr_reader             go to state 452
    expr_call_pipe          go to state 453
    name_in_namespace       go to state 454
    expr_new                go to state 455
    expr_cast               go to state 456
    expr_type_decl          go to state 457
    expr_type_info          go to state 458
    block_or_lambda         go to state 459
    expr_full_block         go to state 460
    expr_numeric_const      go to state 461
    expr_named_call         go to state 462
    expr_method_call        go to state 463
    func_addr_expr          go to state 464
    expr_field              go to state 465
    expr_call               go to state 466
    expr                    go to state 952
    expr_mtag               go to state 468
    basic_type_declaration  go to state 469
    make_decl               go to state 470
    make_struct_decl        go to state 471
    make_tuple_call         go to state 472
    make_dim_decl           go to state 473
    make_table_decl         go to state 474
    array_comprehension     go to state 475


State 757

  327 expr_assign: expr "^^=" . expr

    "struct"                          shift, and go to state 402
    "class"                           shift, and go to state 403
    "true"                            shift, and go to state 404
    "false"                           shift, and go to state 405
    "new"                             shift, and go to state 406
    "typeinfo"                        shift, and go to state 407
    "type"                            shift, and go to state 408
    "array"                           shift, and go to state 409
    "null"                            shift, and go to state 410
    "table"                           shift, and go to state 411
    "deref"                           shift, and go to state 412
    "cast"                            shift, and go to state 413
    "upcast"                          shift, and go to state 414
    "addr"                            shift, and go to state 415
    "reinterpret"                     shift, and go to state 416
    "unsafe"                          shift, and go to state 417
    "fixed_array"                     shift, and go to state 418
    "default"                         shift, and go to state 419
    "bool"                            shift, and go to state 222
    "void"                            shift, and go to state 223
    "string"                          shift, and go to state 224
    "int"                             shift, and go to state 226
    "int2"                            shift, and go to state 227
    "int3"                            shift, and go to state 228
    "int4"                            shift, and go to state 229
    "uint"                            shift, and go to state 230
    "bitfield"                        shift, and go to state 420
    "uint2"                           shift, and go to state 232
    "uint3"                           shift, and go to state 233
    "uint4"                           shift, and go to state 234
    "float"                           shift, and go to state 235
    "float2"                          shift, and go to state 236
    "float3"                          shift, and go to state 237
    "float4"                          shift, and go to state 238
    "range"                           shift, and go to state 239
    "urange"                          shift, and go to state 240
    "range64"                         shift, and go to state 241
    "urange64"                        shift, and go to state 242
    "int64"                           shift, and go to state 244
    "uint64"                          shift, and go to state 245
    "double"                          shift, and go to state 246
    "int8"                            shift, and go to state 249
    "uint8"                           shift, and go to state 250
    "int16"                           shift, and go to state 251
    "uint16"                          shift, and go to state 252
    "tuple"                           shift, and go to state 421
    "variant"                         shift, and go to state 422
    "generator"                       shift, and go to state 423
    "++"                              shift, and go to state 424
    "--"                              shift, and go to state 425
    "::"                              shift, and go to state 55
    "$$"                              shift, and go to state 426
    "$i"                              shift, and go to state 427
    "$v"                              shift, and go to state 428
    "$b"                              shift, and go to state 429
    "$a"                              shift, and go to state 430
    "$c"                              shift, and go to state 431
    "..."                             shift, and go to state 432
    "integer constant"                shift, and go to state 433
    "long integer constant"           shift, and go to state 434
    "unsigned integer constant"       shift, and go to state 435
    "unsigned long integer constant"  shift, and go to state 436
    "unsigned int8 constant"          shift, and go to state 437
    "floating point constant"         shift, and go to state 438
    "double constant"                 shift, and go to state 439
    "name"                            shift, and go to state 56
    "start of the string"             shift, and go to state 440
    "begin of code block"             shift, and go to state 441
    '-'                               shift, and go to state 442
    '+'                               shift, and go to state 443
    '*'                               shift, and go to state 444
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 445
    '!'                               shift, and go to state 446
    '['                               shift, and go to state 447
    '('                               shift, and go to state 448
    '$'                               shift, and go to state 449
    '@'                               shift, and go to state 450

    string_builder          go to state 451
    expr_reader             go to state 452
    expr_call_pipe          go to state 453
    name_in_namespace       go to state 454
    expr_new                go to state 455
    expr_cast               go to state 456
    expr_type_decl          go to state 457
    expr_type_info          go to state 458
    block_or_lambda         go to state 459
    expr_full_block         go to state 460
    expr_numeric_const      go to state 461
    expr_named_call         go to state 462
    expr_method_call        go to state 463
    func_addr_expr          go to state 464
    expr_field              go to state 465
    expr_call               go to state 466
    expr                    go to state 953
    expr_mtag               go to state 468
    basic_type_declaration  go to state 469
    make_decl               go to state 470
    make_struct_decl        go to state 471
    make_tuple_call         go to state 472
    make_dim_decl           go to state 473
    make_table_decl         go to state 474
    array_comprehension     go to state 475


State 758

  319 expr_assign: expr '=' . expr

    "struct"                          shift, and go to state 402
    "class"                           shift, and go to state 403
    "true"                            shift, and go to state 404
    "false"                           shift, and go to state 405
    "new"                             shift, and go to state 406
    "typeinfo"                        shift, and go to state 407
    "type"                            shift, and go to state 408
    "array"                           shift, and go to state 409
    "null"                            shift, and go to state 410
    "table"                           shift, and go to state 411
    "deref"                           shift, and go to state 412
    "cast"                            shift, and go to state 413
    "upcast"                          shift, and go to state 414
    "addr"                            shift, and go to state 415
    "reinterpret"                     shift, and go to state 416
    "unsafe"                          shift, and go to state 417
    "fixed_array"                     shift, and go to state 418
    "default"                         shift, and go to state 419
    "bool"                            shift, and go to state 222
    "void"                            shift, and go to state 223
    "string"                          shift, and go to state 224
    "int"                             shift, and go to state 226
    "int2"                            shift, and go to state 227
    "int3"                            shift, and go to state 228
    "int4"                            shift, and go to state 229
    "uint"                            shift, and go to state 230
    "bitfield"                        shift, and go to state 420
    "uint2"                           shift, and go to state 232
    "uint3"                           shift, and go to state 233
    "uint4"                           shift, and go to state 234
    "float"                           shift, and go to state 235
    "float2"                          shift, and go to state 236
    "float3"                          shift, and go to state 237
    "float4"                          shift, and go to state 238
    "range"                           shift, and go to state 239
    "urange"                          shift, and go to state 240
    "range64"                         shift, and go to state 241
    "urange64"                        shift, and go to state 242
    "int64"                           shift, and go to state 244
    "uint64"                          shift, and go to state 245
    "double"                          shift, and go to state 246
    "int8"                            shift, and go to state 249
    "uint8"                           shift, and go to state 250
    "int16"                           shift, and go to state 251
    "uint16"                          shift, and go to state 252
    "tuple"                           shift, and go to state 421
    "variant"                         shift, and go to state 422
    "generator"                       shift, and go to state 423
    "++"                              shift, and go to state 424
    "--"                              shift, and go to state 425
    "::"                              shift, and go to state 55
    "$$"                              shift, and go to state 426
    "$i"                              shift, and go to state 427
    "$v"                              shift, and go to state 428
    "$b"                              shift, and go to state 429
    "$a"                              shift, and go to state 430
    "$c"                              shift, and go to state 431
    "..."                             shift, and go to state 432
    "integer constant"                shift, and go to state 433
    "long integer constant"           shift, and go to state 434
    "unsigned integer constant"       shift, and go to state 435
    "unsigned long integer constant"  shift, and go to state 436
    "unsigned int8 constant"          shift, and go to state 437
    "floating point constant"         shift, and go to state 438
    "double constant"                 shift, and go to state 439
    "name"                            shift, and go to state 56
    "start of the string"             shift, and go to state 440
    "begin of code block"             shift, and go to state 441
    '-'                               shift, and go to state 442
    '+'                               shift, and go to state 443
    '*'                               shift, and go to state 444
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 445
    '!'                               shift, and go to state 446
    '['                               shift, and go to state 447
    '('                               shift, and go to state 448
    '$'                               shift, and go to state 449
    '@'                               shift, and go to state 450

    string_builder          go to state 451
    expr_reader             go to state 452
    expr_call_pipe          go to state 453
    name_in_namespace       go to state 454
    expr_new                go to state 455
    expr_cast               go to state 456
    expr_type_decl          go to state 457
    expr_type_info          go to state 458
    block_or_lambda         go to state 459
    expr_full_block         go to state 460
    expr_numeric_const      go to state 461
    expr_named_call         go to state 462
    expr_method_call        go to state 463
    func_addr_expr          go to state 464
    expr_field              go to state 465
    expr_call               go to state 466
    expr                    go to state 954
    expr_mtag               go to state 468
    basic_type_declaration  go to state 469
    make_decl               go to state 470
    make_struct_decl        go to state 471
    make_tuple_call         go to state 472
    make_dim_decl           go to state 473
    make_table_decl         go to state 474
    array_comprehension     go to state 475


State 759

  536 enum_expression: "name" '=' . expr

    "struct"                          shift, and go to state 402
    "class"                           shift, and go to state 403
    "true"                            shift, and go to state 404
    "false"                           shift, and go to state 405
    "new"                             shift, and go to state 406
    "typeinfo"                        shift, and go to state 407
    "type"                            shift, and go to state 408
    "array"                           shift, and go to state 409
    "null"                            shift, and go to state 410
    "table"                           shift, and go to state 411
    "deref"                           shift, and go to state 412
    "cast"                            shift, and go to state 413
    "upcast"                          shift, and go to state 414
    "addr"                            shift, and go to state 415
    "reinterpret"                     shift, and go to state 416
    "unsafe"                          shift, and go to state 417
    "fixed_array"                     shift, and go to state 418
    "default"                         shift, and go to state 419
    "bool"                            shift, and go to state 222
    "void"                            shift, and go to state 223
    "string"                          shift, and go to state 224
    "int"                             shift, and go to state 226
    "int2"                            shift, and go to state 227
    "int3"                            shift, and go to state 228
    "int4"                            shift, and go to state 229
    "uint"                            shift, and go to state 230
    "bitfield"                        shift, and go to state 420
    "uint2"                           shift, and go to state 232
    "uint3"                           shift, and go to state 233
    "uint4"                           shift, and go to state 234
    "float"                           shift, and go to state 235
    "float2"                          shift, and go to state 236
    "float3"                          shift, and go to state 237
    "float4"                          shift, and go to state 238
    "range"                           shift, and go to state 239
    "urange"                          shift, and go to state 240
    "range64"                         shift, and go to state 241
    "urange64"                        shift, and go to state 242
    "int64"                           shift, and go to state 244
    "uint64"                          shift, and go to state 245
    "double"                          shift, and go to state 246
    "int8"                            shift, and go to state 249
    "uint8"                           shift, and go to state 250
    "int16"                           shift, and go to state 251
    "uint16"                          shift, and go to state 252
    "tuple"                           shift, and go to state 421
    "variant"                         shift, and go to state 422
    "generator"                       shift, and go to state 423
    "++"                              shift, and go to state 424
    "--"                              shift, and go to state 425
    "::"                              shift, and go to state 55
    "$$"                              shift, and go to state 426
    "$i"                              shift, and go to state 427
    "$v"                              shift, and go to state 428
    "$b"                              shift, and go to state 429
    "$a"                              shift, and go to state 430
    "$c"                              shift, and go to state 431
    "..."                             shift, and go to state 432
    "integer constant"                shift, and go to state 433
    "long integer constant"           shift, and go to state 434
    "unsigned integer constant"       shift, and go to state 435
    "unsigned long integer constant"  shift, and go to state 436
    "unsigned int8 constant"          shift, and go to state 437
    "floating point constant"         shift, and go to state 438
    "double constant"                 shift, and go to state 439
    "name"                            shift, and go to state 56
    "start of the string"             shift, and go to state 440
    "begin of code block"             shift, and go to state 441
    '-'                               shift, and go to state 442
    '+'                               shift, and go to state 443
    '*'                               shift, and go to state 444
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 445
    '!'                               shift, and go to state 446
    '['                               shift, and go to state 447
    '('                               shift, and go to state 448
    '$'                               shift, and go to state 449
    '@'                               shift, and go to state 450

    string_builder          go to state 451
    expr_reader             go to state 452
    expr_call_pipe          go to state 453
    name_in_namespace       go to state 454
    expr_new                go to state 455
    expr_cast               go to state 456
    expr_type_decl          go to state 457
    expr_type_info          go to state 458
    block_or_lambda         go to state 459
    expr_full_block         go to state 460
    expr_numeric_const      go to state 461
    expr_named_call         go to state 462
    expr_method_call        go to state 463
    func_addr_expr          go to state 464
    expr_field              go to state 465
    expr_call               go to state 466
    expr                    go to state 955
    expr_mtag               go to state 468
    basic_type_declaration  go to state 469
    make_decl               go to state 470
    make_struct_decl        go to state 471
    make_tuple_call         go to state 472
    make_dim_decl           go to state 473
    make_table_decl         go to state 474
    array_comprehension     go to state 475


State 760

  539 enum_list: enum_list ',' . enum_expression
  778 optional_comma: ',' .

    "name"  shift, and go to state 564

    $default  reduce using rule 778 (optional_comma)

    enum_expression  go to state 956


State 761

  554 enum_declaration: optional_annotation_list "enum" optional_public_or_private_enum enum_name optional_enum_basic_type_declaration "begin of code block" $@30 enum_list optional_comma . $@31 "end of code block"

    $default  reduce using rule 553 ($@31)

    $@31  go to state 957


State 762

  566 optional_struct_variable_declaration_list: "begin of code block" struct_variable_declaration_list "end of code block" .

    $default  reduce using rule 566 (optional_struct_variable_declaration_list)


State 763

  483 struct_variable_declaration_list: struct_variable_declaration_list optional_annotation_list . "def" optional_public_or_private_member_variable "abstract" optional_constant $@26 function_declaration_header "end of expression"
  485                                 | struct_variable_declaration_list optional_annotation_list . "def" optional_public_or_private_member_variable optional_static_member_variable optional_override optional_constant $@27 function_declaration_header expression_block

    "def"  shift, and go to state 958


State 764

  481 struct_variable_declaration_list: struct_variable_declaration_list $@25 . structure_variable_declaration "end of expression"

    '@'  shift, and go to state 208

    $default  reduce using rule 466 (optional_field_annotation)

    metadata_argument_list          go to state 209
    optional_field_annotation       go to state 959
    structure_variable_declaration  go to state 960


State 765

  525 global_let_variable_declaration: global_let_variable_name_with_pos_list ':' type_declaration_no_options "end of expression" .

    $default  reduce using rule 525 (global_let_variable_declaration)


State 766

  526 global_let_variable_declaration: global_let_variable_name_with_pos_list ':' type_declaration_no_options copy_or_move_or_clone . expr "end of expression"

    "struct"                          shift, and go to state 402
    "class"                           shift, and go to state 403
    "true"                            shift, and go to state 404
    "false"                           shift, and go to state 405
    "new"                             shift, and go to state 406
    "typeinfo"                        shift, and go to state 407
    "type"                            shift, and go to state 408
    "array"                           shift, and go to state 409
    "null"                            shift, and go to state 410
    "table"                           shift, and go to state 411
    "deref"                           shift, and go to state 412
    "cast"                            shift, and go to state 413
    "upcast"                          shift, and go to state 414
    "addr"                            shift, and go to state 415
    "reinterpret"                     shift, and go to state 416
    "unsafe"                          shift, and go to state 417
    "fixed_array"                     shift, and go to state 418
    "default"                         shift, and go to state 419
    "bool"                            shift, and go to state 222
    "void"                            shift, and go to state 223
    "string"                          shift, and go to state 224
    "int"                             shift, and go to state 226
    "int2"                            shift, and go to state 227
    "int3"                            shift, and go to state 228
    "int4"                            shift, and go to state 229
    "uint"                            shift, and go to state 230
    "bitfield"                        shift, and go to state 420
    "uint2"                           shift, and go to state 232
    "uint3"                           shift, and go to state 233
    "uint4"                           shift, and go to state 234
    "float"                           shift, and go to state 235
    "float2"                          shift, and go to state 236
    "float3"                          shift, and go to state 237
    "float4"                          shift, and go to state 238
    "range"                           shift, and go to state 239
    "urange"                          shift, and go to state 240
    "range64"                         shift, and go to state 241
    "urange64"                        shift, and go to state 242
    "int64"                           shift, and go to state 244
    "uint64"                          shift, and go to state 245
    "double"                          shift, and go to state 246
    "int8"                            shift, and go to state 249
    "uint8"                           shift, and go to state 250
    "int16"                           shift, and go to state 251
    "uint16"                          shift, and go to state 252
    "tuple"                           shift, and go to state 421
    "variant"                         shift, and go to state 422
    "generator"                       shift, and go to state 423
    "++"                              shift, and go to state 424
    "--"                              shift, and go to state 425
    "::"                              shift, and go to state 55
    "$$"                              shift, and go to state 426
    "$i"                              shift, and go to state 427
    "$v"                              shift, and go to state 428
    "$b"                              shift, and go to state 429
    "$a"                              shift, and go to state 430
    "$c"                              shift, and go to state 431
    "..."                             shift, and go to state 432
    "integer constant"                shift, and go to state 433
    "long integer constant"           shift, and go to state 434
    "unsigned integer constant"       shift, and go to state 435
    "unsigned long integer constant"  shift, and go to state 436
    "unsigned int8 constant"          shift, and go to state 437
    "floating point constant"         shift, and go to state 438
    "double constant"                 shift, and go to state 439
    "name"                            shift, and go to state 56
    "start of the string"             shift, and go to state 440
    "begin of code block"             shift, and go to state 441
    '-'                               shift, and go to state 442
    '+'                               shift, and go to state 443
    '*'                               shift, and go to state 444
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 445
    '!'                               shift, and go to state 446
    '['                               shift, and go to state 447
    '('                               shift, and go to state 448
    '$'                               shift, and go to state 449
    '@'                               shift, and go to state 450

    string_builder          go to state 451
    expr_reader             go to state 452
    expr_call_pipe          go to state 453
    name_in_namespace       go to state 454
    expr_new                go to state 455
    expr_cast               go to state 456
    expr_type_decl          go to state 457
    expr_type_info          go to state 458
    block_or_lambda         go to state 459
    expr_full_block         go to state 460
    expr_numeric_const      go to state 461
    expr_named_call         go to state 462
    expr_method_call        go to state 463
    func_addr_expr          go to state 464
    expr_field              go to state 465
    expr_call               go to state 466
    expr                    go to state 961
    expr_mtag               go to state 468
    basic_type_declaration  go to state 469
    make_decl               go to state 470
    make_struct_decl        go to state 471
    make_tuple_call         go to state 472
    make_dim_decl           go to state 473
    make_table_decl         go to state 474
    array_comprehension     go to state 475


State 767

  339 expr_method_call: expr . "->" "name" '(' ')'
  340                 | expr . "->" "name" '(' expr_list ')'
  350 expr_field: expr . '.' "name"
  351           | expr . '.' '.' "name"
  352           | expr . '.' "name" '(' ')'
  353           | expr . '.' "name" '(' expr_list ')'
  354           | expr . '.' basic_type_declaration '(' ')'
  355           | expr . '.' basic_type_declaration '(' expr_list ')'
  358           | expr . '.' $@17 error $@18
  380 expr: expr . "<<" expr
  381     | expr . ">>" expr
  382     | expr . "<<<" expr
  383     | expr . ">>>" expr
  384     | expr . '+' expr
  385     | expr . '-' expr
  386     | expr . '*' expr
  387     | expr . '/' expr
  388     | expr . '%' expr
  389     | expr . '<' expr
  390     | expr . '>' expr
  391     | expr . "==" expr
  392     | expr . "!=" expr
  393     | expr . "<=" expr
  394     | expr . ">=" expr
  395     | expr . '&' expr
  396     | expr . '|' expr
  397     | expr . '^' expr
  398     | expr . "&&" expr
  399     | expr . "||" expr
  400     | expr . "^^" expr
  401     | expr . ".." expr
  404     | expr . "++"
  405     | expr . "--"
  407     | expr . '[' expr ']'
  408     | expr . '.' '[' expr ']'
  409     | expr . "?[" expr ']'
  410     | expr . '.' "?[" expr ']'
  411     | expr . "?." "name"
  412     | expr . '.' "?." "name"
  421     | expr . "??" expr
  422     | expr . '?' expr ':' expr
  425     | expr . "is" "type" '<' $@19 type_declaration_no_options '>' $@20
  426     | expr . "is" basic_type_declaration
  427     | expr . "is" "name"
  428     | expr . "as" "name"
  431     | expr . "as" "type" '<' $@21 type_declaration '>' $@22
  432     | expr . "as" basic_type_declaration
  433     | expr . '?' "as" "name"
  436     | expr . '?' "as" "type" '<' $@23 type_declaration '>' $@24
  437     | expr . '?' "as" basic_type_declaration
  445     | expr . "<|" expr
  446     | expr . "|>" expr
  447     | expr . "|>" basic_type_declaration
  458 expr_mtag: expr . '.' "$f" '(' expr ')'
  459          | expr . "?." "$f" '(' expr ')'
  460          | expr . '.' '.' "$f" '(' expr ')'
  461          | expr . '.' "?." "$f" '(' expr ')'
  462          | expr . "as" "$f" '(' expr ')'
  463          | expr . '?' "as" "$f" '(' expr ')'
  464          | expr . "is" "$f" '(' expr ')'
  527 global_let_variable_declaration: global_let_variable_name_with_pos_list optional_ref copy_or_move_or_clone expr . "end of expression"

    "is"                 shift, and go to state 637
    "as"                 shift, and go to state 638
    "<<"                 shift, and go to state 639
    ">>"                 shift, and go to state 640
    "++"                 shift, and go to state 641
    "--"                 shift, and go to state 642
    "<="                 shift, and go to state 643
    ">="                 shift, and go to state 644
    "=="                 shift, and go to state 645
    "!="                 shift, and go to state 646
    "->"                 shift, and go to state 647
    "??"                 shift, and go to state 648
    "?."                 shift, and go to state 649
    "?["                 shift, and go to state 650
    "<|"                 shift, and go to state 651
    "|>"                 shift, and go to state 652
    "<<<"                shift, and go to state 653
    ">>>"                shift, and go to state 654
    "&&"                 shift, and go to state 655
    "||"                 shift, and go to state 656
    "^^"                 shift, and go to state 657
    ".."                 shift, and go to state 658
    "end of expression"  shift, and go to state 962
    '?'                  shift, and go to state 659
    '|'                  shift, and go to state 660
    '^'                  shift, and go to state 661
    '&'                  shift, and go to state 662
    '<'                  shift, and go to state 663
    '>'                  shift, and go to state 664
    '-'                  shift, and go to state 665
    '+'                  shift, and go to state 666
    '*'                  shift, and go to state 667
    '/'                  shift, and go to state 668
    '%'                  shift, and go to state 669
    '.'                  shift, and go to state 670
    '['                  shift, and go to state 671


State 768

  638 type_declaration_no_options_no_dim: "type" '<' $@36 type_declaration '>' . $@37

    $default  reduce using rule 637 ($@37)

    $@37  go to state 963


State 769

  661 type_declaration_no_options_no_dim: "array" '<' $@41 type_declaration '>' . $@42

    $default  reduce using rule 660 ($@42)

    $@42  go to state 964


State 770

  664 type_declaration_no_options_no_dim: "table" '<' $@43 table_type_pair '>' . $@44

    $default  reduce using rule 663 ($@44)

    $@44  go to state 965


State 771

  625 table_type_pair: type_declaration c_or_s . type_declaration

    "type"       shift, and go to state 216
    "array"      shift, and go to state 217
    "table"      shift, and go to state 218
    "typedecl"   shift, and go to state 219
    "iterator"   shift, and go to state 220
    "smart_ptr"  shift, and go to state 221
    "bool"       shift, and go to state 222
    "void"       shift, and go to state 223
    "string"     shift, and go to state 224
    "auto"       shift, and go to state 225
    "int"        shift, and go to state 226
    "int2"       shift, and go to state 227
    "int3"       shift, and go to state 228
    "int4"       shift, and go to state 229
    "uint"       shift, and go to state 230
    "bitfield"   shift, and go to state 231
    "uint2"      shift, and go to state 232
    "uint3"      shift, and go to state 233
    "uint4"      shift, and go to state 234
    "float"      shift, and go to state 235
    "float2"     shift, and go to state 236
    "float3"     shift, and go to state 237
    "float4"     shift, and go to state 238
    "range"      shift, and go to state 239
    "urange"     shift, and go to state 240
    "range64"    shift, and go to state 241
    "urange64"   shift, and go to state 242
    "block"      shift, and go to state 243
    "int64"      shift, and go to state 244
    "uint64"     shift, and go to state 245
    "double"     shift, and go to state 246
    "function"   shift, and go to state 247
    "lambda"     shift, and go to state 248
    "int8"       shift, and go to state 249
    "uint8"      shift, and go to state 250
    "int16"      shift, and go to state 251
    "uint16"     shift, and go to state 252
    "tuple"      shift, and go to state 253
    "variant"    shift, and go to state 254
    "::"         shift, and go to state 55
    "$t"         shift, and go to state 255
    "name"       shift, and go to state 56
    '$'          shift, and go to state 256

    name_in_namespace                   go to state 257
    basic_type_declaration              go to state 258
    structure_type_declaration          go to state 259
    auto_type_declaration               go to state 260
    bitfield_type_declaration           go to state 261
    type_declaration_no_options         go to state 262
    type_declaration_no_options_no_dim  go to state 263
    type_declaration                    go to state 966


State 772

  735 make_struct_decl: "struct" '<' $@72 . type_declaration_no_options '>' $@73 '(' use_initializer optional_make_struct_dim_decl ')'

    "type"       shift, and go to state 216
    "array"      shift, and go to state 217
    "table"      shift, and go to state 218
    "typedecl"   shift, and go to state 219
    "iterator"   shift, and go to state 220
    "smart_ptr"  shift, and go to state 221
    "bool"       shift, and go to state 222
    "void"       shift, and go to state 223
    "string"     shift, and go to state 224
    "auto"       shift, and go to state 225
    "int"        shift, and go to state 226
    "int2"       shift, and go to state 227
    "int3"       shift, and go to state 228
    "int4"       shift, and go to state 229
    "uint"       shift, and go to state 230
    "bitfield"   shift, and go to state 231
    "uint2"      shift, and go to state 232
    "uint3"      shift, and go to state 233
    "uint4"      shift, and go to state 234
    "float"      shift, and go to state 235
    "float2"     shift, and go to state 236
    "float3"     shift, and go to state 237
    "float4"     shift, and go to state 238
    "range"      shift, and go to state 239
    "urange"     shift, and go to state 240
    "range64"    shift, and go to state 241
    "urange64"   shift, and go to state 242
    "block"      shift, and go to state 243
    "int64"      shift, and go to state 244
    "uint64"     shift, and go to state 245
    "double"     shift, and go to state 246
    "function"   shift, and go to state 247
    "lambda"     shift, and go to state 248
    "int8"       shift, and go to state 249
    "uint8"      shift, and go to state 250
    "int16"      shift, and go to state 251
    "uint16"     shift, and go to state 252
    "tuple"      shift, and go to state 253
    "variant"    shift, and go to state 254
    "::"         shift, and go to state 55
    "$t"         shift, and go to state 255
    "name"       shift, and go to state 56
    '$'          shift, and go to state 256

    name_in_namespace                   go to state 257
    basic_type_declaration              go to state 258
    structure_type_declaration          go to state 259
    auto_type_declaration               go to state 260
    bitfield_type_declaration           go to state 261
    type_declaration_no_options         go to state 967
    type_declaration_no_options_no_dim  go to state 263


State 773

  738 make_struct_decl: "class" '<' $@74 . type_declaration_no_options '>' $@75 '(' use_initializer optional_make_struct_dim_decl ')'

    "type"       shift, and go to state 216
    "array"      shift, and go to state 217
    "table"      shift, and go to state 218
    "typedecl"   shift, and go to state 219
    "iterator"   shift, and go to state 220
    "smart_ptr"  shift, and go to state 221
    "bool"       shift, and go to state 222
    "void"       shift, and go to state 223
    "string"     shift, and go to state 224
    "auto"       shift, and go to state 225
    "int"        shift, and go to state 226
    "int2"       shift, and go to state 227
    "int3"       shift, and go to state 228
    "int4"       shift, and go to state 229
    "uint"       shift, and go to state 230
    "bitfield"   shift, and go to state 231
    "uint2"      shift, and go to state 232
    "uint3"      shift, and go to state 233
    "uint4"      shift, and go to state 234
    "float"      shift, and go to state 235
    "float2"     shift, and go to state 236
    "float3"     shift, and go to state 237
    "float4"     shift, and go to state 238
    "range"      shift, and go to state 239
    "urange"     shift, and go to state 240
    "range64"    shift, and go to state 241
    "urange64"   shift, and go to state 242
    "block"      shift, and go to state 243
    "int64"      shift, and go to state 244
    "uint64"     shift, and go to state 245
    "double"     shift, and go to state 246
    "function"   shift, and go to state 247
    "lambda"     shift, and go to state 248
    "int8"       shift, and go to state 249
    "uint8"      shift, and go to state 250
    "int16"      shift, and go to state 251
    "uint16"     shift, and go to state 252
    "tuple"      shift, and go to state 253
    "variant"    shift, and go to state 254
    "::"         shift, and go to state 55
    "$t"         shift, and go to state 255
    "name"       shift, and go to state 56
    '$'          shift, and go to state 256

    name_in_namespace                   go to state 257
    basic_type_declaration              go to state 258
    structure_type_declaration          go to state 259
    auto_type_declaration               go to state 260
    bitfield_type_declaration           go to state 261
    type_declaration_no_options         go to state 968
    type_declaration_no_options_no_dim  go to state 263


State 774

  249 new_type_declaration: '<' $@3 . type_declaration '>' $@4

    "type"       shift, and go to state 216
    "array"      shift, and go to state 217
    "table"      shift, and go to state 218
    "typedecl"   shift, and go to state 219
    "iterator"   shift, and go to state 220
    "smart_ptr"  shift, and go to state 221
    "bool"       shift, and go to state 222
    "void"       shift, and go to state 223
    "string"     shift, and go to state 224
    "auto"       shift, and go to state 225
    "int"        shift, and go to state 226
    "int2"       shift, and go to state 227
    "int3"       shift, and go to state 228
    "int4"       shift, and go to state 229
    "uint"       shift, and go to state 230
    "bitfield"   shift, and go to state 231
    "uint2"      shift, and go to state 232
    "uint3"      shift, and go to state 233
    "uint4"      shift, and go to state 234
    "float"      shift, and go to state 235
    "float2"     shift, and go to state 236
    "float3"     shift, and go to state 237
    "float4"     shift, and go to state 238
    "range"      shift, and go to state 239
    "urange"     shift, and go to state 240
    "range64"    shift, and go to state 241
    "urange64"   shift, and go to state 242
    "block"      shift, and go to state 243
    "int64"      shift, and go to state 244
    "uint64"     shift, and go to state 245
    "double"     shift, and go to state 246
    "function"   shift, and go to state 247
    "lambda"     shift, and go to state 248
    "int8"       shift, and go to state 249
    "uint8"      shift, and go to state 250
    "int16"      shift, and go to state 251
    "uint16"     shift, and go to state 252
    "tuple"      shift, and go to state 253
    "variant"    shift, and go to state 254
    "::"         shift, and go to state 55
    "$t"         shift, and go to state 255
    "name"       shift, and go to state 56
    '$'          shift, and go to state 256

    name_in_namespace                   go to state 257
    basic_type_declaration              go to state 258
    structure_type_declaration          go to state 259
    auto_type_declaration               go to state 260
    bitfield_type_declaration           go to state 261
    type_declaration_no_options         go to state 262
    type_declaration_no_options_no_dim  go to state 263
    type_declaration                    go to state 969


State 775

  252 expr_new: "new" new_type_declaration '(' . use_initializer ')'
  253         | "new" new_type_declaration '(' . use_initializer make_struct_single ')'

    "uninitialized"  shift, and go to state 970

    $default  reduce using rule 731 (use_initializer)

    use_initializer  go to state 971


State 776

  251 expr_new: "new" structure_type_declaration '(' . optional_expr_list ')'

    "struct"                          shift, and go to state 402
    "class"                           shift, and go to state 403
    "true"                            shift, and go to state 404
    "false"                           shift, and go to state 405
    "new"                             shift, and go to state 406
    "typeinfo"                        shift, and go to state 407
    "type"                            shift, and go to state 408
    "array"                           shift, and go to state 409
    "null"                            shift, and go to state 410
    "table"                           shift, and go to state 411
    "deref"                           shift, and go to state 412
    "cast"                            shift, and go to state 413
    "upcast"                          shift, and go to state 414
    "addr"                            shift, and go to state 415
    "reinterpret"                     shift, and go to state 416
    "unsafe"                          shift, and go to state 417
    "fixed_array"                     shift, and go to state 418
    "default"                         shift, and go to state 419
    "bool"                            shift, and go to state 222
    "void"                            shift, and go to state 223
    "string"                          shift, and go to state 224
    "int"                             shift, and go to state 226
    "int2"                            shift, and go to state 227
    "int3"                            shift, and go to state 228
    "int4"                            shift, and go to state 229
    "uint"                            shift, and go to state 230
    "bitfield"                        shift, and go to state 420
    "uint2"                           shift, and go to state 232
    "uint3"                           shift, and go to state 233
    "uint4"                           shift, and go to state 234
    "float"                           shift, and go to state 235
    "float2"                          shift, and go to state 236
    "float3"                          shift, and go to state 237
    "float4"                          shift, and go to state 238
    "range"                           shift, and go to state 239
    "urange"                          shift, and go to state 240
    "range64"                         shift, and go to state 241
    "urange64"                        shift, and go to state 242
    "int64"                           shift, and go to state 244
    "uint64"                          shift, and go to state 245
    "double"                          shift, and go to state 246
    "int8"                            shift, and go to state 249
    "uint8"                           shift, and go to state 250
    "int16"                           shift, and go to state 251
    "uint16"                          shift, and go to state 252
    "tuple"                           shift, and go to state 421
    "variant"                         shift, and go to state 422
    "generator"                       shift, and go to state 423
    "++"                              shift, and go to state 424
    "--"                              shift, and go to state 425
    "::"                              shift, and go to state 55
    "$$"                              shift, and go to state 426
    "$i"                              shift, and go to state 427
    "$v"                              shift, and go to state 428
    "$b"                              shift, and go to state 429
    "$a"                              shift, and go to state 430
    "$c"                              shift, and go to state 431
    "..."                             shift, and go to state 432
    "integer constant"                shift, and go to state 433
    "long integer constant"           shift, and go to state 434
    "unsigned integer constant"       shift, and go to state 435
    "unsigned long integer constant"  shift, and go to state 436
    "unsigned int8 constant"          shift, and go to state 437
    "floating point constant"         shift, and go to state 438
    "double constant"                 shift, and go to state 439
    "name"                            shift, and go to state 56
    "start of the string"             shift, and go to state 440
    "begin of code block"             shift, and go to state 441
    '-'                               shift, and go to state 442
    '+'                               shift, and go to state 443
    '*'                               shift, and go to state 444
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 445
    '!'                               shift, and go to state 446
    '['                               shift, and go to state 447
    '('                               shift, and go to state 448
    '$'                               shift, and go to state 449
    '@'                               shift, and go to state 450

    $default  reduce using rule 236 (optional_expr_list)

    string_builder          go to state 451
    expr_reader             go to state 452
    expr_call_pipe          go to state 453
    optional_expr_list      go to state 972
    name_in_namespace       go to state 454
    expr_new                go to state 455
    expr_cast               go to state 456
    expr_type_decl          go to state 457
    expr_type_info          go to state 458
    expr_list               go to state 692
    block_or_lambda         go to state 459
    expr_full_block         go to state 460
    expr_numeric_const      go to state 461
    expr_named_call         go to state 462
    expr_method_call        go to state 463
    func_addr_expr          go to state 464
    expr_field              go to state 465
    expr_call               go to state 466
    expr                    go to state 628
    expr_mtag               go to state 468
    basic_type_declaration  go to state 469
    make_decl               go to state 470
    make_struct_decl        go to state 471
    make_tuple_call         go to state 472
    make_dim_decl           go to state 473
    make_table_decl         go to state 474
    array_comprehension     go to state 475


State 777

  289 expr_type_info: "typeinfo" name_in_namespace '<' . "name" '>' '(' expr ')'
  290               | "typeinfo" name_in_namespace '<' . "name" c_or_s "name" '>' '(' expr ')'

    "name"  shift, and go to state 973


State 778

  288 expr_type_info: "typeinfo" name_in_namespace '(' . expr ')'

    "struct"                          shift, and go to state 402
    "class"                           shift, and go to state 403
    "true"                            shift, and go to state 404
    "false"                           shift, and go to state 405
    "new"                             shift, and go to state 406
    "typeinfo"                        shift, and go to state 407
    "type"                            shift, and go to state 408
    "array"                           shift, and go to state 409
    "null"                            shift, and go to state 410
    "table"                           shift, and go to state 411
    "deref"                           shift, and go to state 412
    "cast"                            shift, and go to state 413
    "upcast"                          shift, and go to state 414
    "addr"                            shift, and go to state 415
    "reinterpret"                     shift, and go to state 416
    "unsafe"                          shift, and go to state 417
    "fixed_array"                     shift, and go to state 418
    "default"                         shift, and go to state 419
    "bool"                            shift, and go to state 222
    "void"                            shift, and go to state 223
    "string"                          shift, and go to state 224
    "int"                             shift, and go to state 226
    "int2"                            shift, and go to state 227
    "int3"                            shift, and go to state 228
    "int4"                            shift, and go to state 229
    "uint"                            shift, and go to state 230
    "bitfield"                        shift, and go to state 420
    "uint2"                           shift, and go to state 232
    "uint3"                           shift, and go to state 233
    "uint4"                           shift, and go to state 234
    "float"                           shift, and go to state 235
    "float2"                          shift, and go to state 236
    "float3"                          shift, and go to state 237
    "float4"                          shift, and go to state 238
    "range"                           shift, and go to state 239
    "urange"                          shift, and go to state 240
    "range64"                         shift, and go to state 241
    "urange64"                        shift, and go to state 242
    "int64"                           shift, and go to state 244
    "uint64"                          shift, and go to state 245
    "double"                          shift, and go to state 246
    "int8"                            shift, and go to state 249
    "uint8"                           shift, and go to state 250
    "int16"                           shift, and go to state 251
    "uint16"                          shift, and go to state 252
    "tuple"                           shift, and go to state 421
    "variant"                         shift, and go to state 422
    "generator"                       shift, and go to state 423
    "++"                              shift, and go to state 424
    "--"                              shift, and go to state 425
    "::"                              shift, and go to state 55
    "$$"                              shift, and go to state 426
    "$i"                              shift, and go to state 427
    "$v"                              shift, and go to state 428
    "$b"                              shift, and go to state 429
    "$a"                              shift, and go to state 430
    "$c"                              shift, and go to state 431
    "..."                             shift, and go to state 432
    "integer constant"                shift, and go to state 433
    "long integer constant"           shift, and go to state 434
    "unsigned integer constant"       shift, and go to state 435
    "unsigned long integer constant"  shift, and go to state 436
    "unsigned int8 constant"          shift, and go to state 437
    "floating point constant"         shift, and go to state 438
    "double constant"                 shift, and go to state 439
    "name"                            shift, and go to state 56
    "start of the string"             shift, and go to state 440
    "begin of code block"             shift, and go to state 441
    '-'                               shift, and go to state 442
    '+'                               shift, and go to state 443
    '*'                               shift, and go to state 444
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 445
    '!'                               shift, and go to state 446
    '['                               shift, and go to state 447
    '('                               shift, and go to state 448
    '$'                               shift, and go to state 449
    '@'                               shift, and go to state 450

    string_builder          go to state 451
    expr_reader             go to state 452
    expr_call_pipe          go to state 453
    name_in_namespace       go to state 454
    expr_new                go to state 455
    expr_cast               go to state 456
    expr_type_decl          go to state 457
    expr_type_info          go to state 458
    block_or_lambda         go to state 459
    expr_full_block         go to state 460
    expr_numeric_const      go to state 461
    expr_named_call         go to state 462
    expr_method_call        go to state 463
    func_addr_expr          go to state 464
    expr_field              go to state 465
    expr_call               go to state 466
    expr                    go to state 974
    expr_mtag               go to state 468
    basic_type_declaration  go to state 469
    make_decl               go to state 470
    make_struct_decl        go to state 471
    make_tuple_call         go to state 472
    make_dim_decl           go to state 473
    make_table_decl         go to state 474
    array_comprehension     go to state 475


State 779

  287 expr_type_decl: "type" '<' $@11 . type_declaration '>' $@12

    "type"       shift, and go to state 216
    "array"      shift, and go to state 217
    "table"      shift, and go to state 218
    "typedecl"   shift, and go to state 219
    "iterator"   shift, and go to state 220
    "smart_ptr"  shift, and go to state 221
    "bool"       shift, and go to state 222
    "void"       shift, and go to state 223
    "string"     shift, and go to state 224
    "auto"       shift, and go to state 225
    "int"        shift, and go to state 226
    "int2"       shift, and go to state 227
    "int3"       shift, and go to state 228
    "int4"       shift, and go to state 229
    "uint"       shift, and go to state 230
    "bitfield"   shift, and go to state 231
    "uint2"      shift, and go to state 232
    "uint3"      shift, and go to state 233
    "uint4"      shift, and go to state 234
    "float"      shift, and go to state 235
    "float2"     shift, and go to state 236
    "float3"     shift, and go to state 237
    "float4"     shift, and go to state 238
    "range"      shift, and go to state 239
    "urange"     shift, and go to state 240
    "range64"    shift, and go to state 241
    "urange64"   shift, and go to state 242
    "block"      shift, and go to state 243
    "int64"      shift, and go to state 244
    "uint64"     shift, and go to state 245
    "double"     shift, and go to state 246
    "function"   shift, and go to state 247
    "lambda"     shift, and go to state 248
    "int8"       shift, and go to state 249
    "uint8"      shift, and go to state 250
    "int16"      shift, and go to state 251
    "uint16"     shift, and go to state 252
    "tuple"      shift, and go to state 253
    "variant"    shift, and go to state 254
    "::"         shift, and go to state 55
    "$t"         shift, and go to state 255
    "name"       shift, and go to state 56
    '$'          shift, and go to state 256

    name_in_namespace                   go to state 257
    basic_type_declaration              go to state 258
    structure_type_declaration          go to state 259
    auto_type_declaration               go to state 260
    bitfield_type_declaration           go to state 261
    type_declaration_no_options         go to state 262
    type_declaration_no_options_no_dim  go to state 263
    type_declaration                    go to state 975


State 780

  754 make_dim_decl: "array" "struct" '<' . $@82 type_declaration_no_options '>' $@83 '(' use_initializer optional_make_struct_dim_decl ')'

    $default  reduce using rule 752 ($@82)

    $@82  go to state 976


State 781

  757 make_dim_decl: "array" "tuple" '<' . $@84 type_declaration_no_options '>' $@85 '(' use_initializer optional_make_struct_dim_decl ')'

    $default  reduce using rule 755 ($@84)

    $@84  go to state 977


State 782

  760 make_dim_decl: "array" "variant" '<' . $@86 type_declaration_no_options '>' $@87 '(' make_variant_dim ')'

    $default  reduce using rule 758 ($@86)

    $@86  go to state 978


State 783

  764 make_dim_decl: "array" '<' $@88 . type_declaration_no_options '>' $@89 '(' optional_expr_list ')'

    "type"       shift, and go to state 216
    "array"      shift, and go to state 217
    "table"      shift, and go to state 218
    "typedecl"   shift, and go to state 219
    "iterator"   shift, and go to state 220
    "smart_ptr"  shift, and go to state 221
    "bool"       shift, and go to state 222
    "void"       shift, and go to state 223
    "string"     shift, and go to state 224
    "auto"       shift, and go to state 225
    "int"        shift, and go to state 226
    "int2"       shift, and go to state 227
    "int3"       shift, and go to state 228
    "int4"       shift, and go to state 229
    "uint"       shift, and go to state 230
    "bitfield"   shift, and go to state 231
    "uint2"      shift, and go to state 232
    "uint3"      shift, and go to state 233
    "uint4"      shift, and go to state 234
    "float"      shift, and go to state 235
    "float2"     shift, and go to state 236
    "float3"     shift, and go to state 237
    "float4"     shift, and go to state 238
    "range"      shift, and go to state 239
    "urange"     shift, and go to state 240
    "range64"    shift, and go to state 241
    "urange64"   shift, and go to state 242
    "block"      shift, and go to state 243
    "int64"      shift, and go to state 244
    "uint64"     shift, and go to state 245
    "double"     shift, and go to state 246
    "function"   shift, and go to state 247
    "lambda"     shift, and go to state 248
    "int8"       shift, and go to state 249
    "uint8"      shift, and go to state 250
    "int16"      shift, and go to state 251
    "uint16"     shift, and go to state 252
    "tuple"      shift, and go to state 253
    "variant"    shift, and go to state 254
    "::"         shift, and go to state 55
    "$t"         shift, and go to state 255
    "name"       shift, and go to state 56
    '$'          shift, and go to state 256

    name_in_namespace                   go to state 257
    basic_type_declaration              go to state 258
    structure_type_declaration          go to state 259
    auto_type_declaration               go to state 260
    bitfield_type_declaration           go to state 261
    type_declaration_no_options         go to state 979
    type_declaration_no_options_no_dim  go to state 263


State 784

  292 expr_list: expr_list . ',' expr
  761 make_dim_decl: "array" '(' expr_list . optional_comma ')'

    ','  shift, and go to state 815

    $default  reduce using rule 777 (optional_comma)

    optional_comma  go to state 980


State 785

  773 make_table_decl: "table" '<' type_declaration_no_options . '>' '(' optional_expr_map_tuple_list ')'
  774                | "table" '<' type_declaration_no_options . c_or_s type_declaration_no_options '>' '(' optional_expr_map_tuple_list ')'

    "end of expression"  shift, and go to state 505
    ','                  shift, and go to state 506
    '>'                  shift, and go to state 981

    c_or_s  go to state 982


State 786

  770 expr_map_tuple_list: expr_map_tuple_list . ',' make_map_tuple
  772 make_table_decl: "table" '(' expr_map_tuple_list . optional_comma ')'

    ','  shift, and go to state 811

    $default  reduce using rule 777 (optional_comma)

    optional_comma  go to state 983


State 787

  339 expr_method_call: expr . "->" "name" '(' ')'
  340                 | expr . "->" "name" '(' expr_list ')'
  350 expr_field: expr . '.' "name"
  351           | expr . '.' '.' "name"
  352           | expr . '.' "name" '(' ')'
  353           | expr . '.' "name" '(' expr_list ')'
  354           | expr . '.' basic_type_declaration '(' ')'
  355           | expr . '.' basic_type_declaration '(' expr_list ')'
  358           | expr . '.' $@17 error $@18
  380 expr: expr . "<<" expr
  381     | expr . ">>" expr
  382     | expr . "<<<" expr
  383     | expr . ">>>" expr
  384     | expr . '+' expr
  385     | expr . '-' expr
  386     | expr . '*' expr
  387     | expr . '/' expr
  388     | expr . '%' expr
  389     | expr . '<' expr
  390     | expr . '>' expr
  391     | expr . "==" expr
  392     | expr . "!=" expr
  393     | expr . "<=" expr
  394     | expr . ">=" expr
  395     | expr . '&' expr
  396     | expr . '|' expr
  397     | expr . '^' expr
  398     | expr . "&&" expr
  399     | expr . "||" expr
  400     | expr . "^^" expr
  401     | expr . ".." expr
  404     | expr . "++"
  405     | expr . "--"
  407     | expr . '[' expr ']'
  408     | expr . '.' '[' expr ']'
  409     | expr . "?[" expr ']'
  410     | expr . '.' "?[" expr ']'
  411     | expr . "?." "name"
  412     | expr . '.' "?." "name"
  416     | "deref" '(' expr . ')'
  421     | expr . "??" expr
  422     | expr . '?' expr ':' expr
  425     | expr . "is" "type" '<' $@19 type_declaration_no_options '>' $@20
  426     | expr . "is" basic_type_declaration
  427     | expr . "is" "name"
  428     | expr . "as" "name"
  431     | expr . "as" "type" '<' $@21 type_declaration '>' $@22
  432     | expr . "as" basic_type_declaration
  433     | expr . '?' "as" "name"
  436     | expr . '?' "as" "type" '<' $@23 type_declaration '>' $@24
  437     | expr . '?' "as" basic_type_declaration
  445     | expr . "<|" expr
  446     | expr . "|>" expr
  447     | expr . "|>" basic_type_declaration
  458 expr_mtag: expr . '.' "$f" '(' expr ')'
  459          | expr . "?." "$f" '(' expr ')'
  460          | expr . '.' '.' "$f" '(' expr ')'
  461          | expr . '.' "?." "$f" '(' expr ')'
  462          | expr . "as" "$f" '(' expr ')'
  463          | expr . '?' "as" "$f" '(' expr ')'
  464          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 637
    "as"   shift, and go to state 638
    "<<"   shift, and go to state 639
    ">>"   shift, and go to state 640
    "++"   shift, and go to state 641
    "--"   shift, and go to state 642
    "<="   shift, and go to state 643
    ">="   shift, and go to state 644
    "=="   shift, and go to state 645
    "!="   shift, and go to state 646
    "->"   shift, and go to state 647
    "??"   shift, and go to state 648
    "?."   shift, and go to state 649
    "?["   shift, and go to state 650
    "<|"   shift, and go to state 651
    "|>"   shift, and go to state 652
    "<<<"  shift, and go to state 653
    ">>>"  shift, and go to state 654
    "&&"   shift, and go to state 655
    "||"   shift, and go to state 656
    "^^"   shift, and go to state 657
    ".."   shift, and go to state 658
    '?'    shift, and go to state 659
    '|'    shift, and go to state 660
    '^'    shift, and go to state 661
    '&'    shift, and go to state 662
    '<'    shift, and go to state 663
    '>'    shift, and go to state 664
    '-'    shift, and go to state 665
    '+'    shift, and go to state 666
    '*'    shift, and go to state 667
    '/'    shift, and go to state 668
    '%'    shift, and go to state 669
    '.'    shift, and go to state 670
    '['    shift, and go to state 671
    ')'    shift, and go to state 984


State 788

  278 expr_cast: "cast" '<' $@5 . type_declaration_no_options '>' $@6 expr

    "type"       shift, and go to state 216
    "array"      shift, and go to state 217
    "table"      shift, and go to state 218
    "typedecl"   shift, and go to state 219
    "iterator"   shift, and go to state 220
    "smart_ptr"  shift, and go to state 221
    "bool"       shift, and go to state 222
    "void"       shift, and go to state 223
    "string"     shift, and go to state 224
    "auto"       shift, and go to state 225
    "int"        shift, and go to state 226
    "int2"       shift, and go to state 227
    "int3"       shift, and go to state 228
    "int4"       shift, and go to state 229
    "uint"       shift, and go to state 230
    "bitfield"   shift, and go to state 231
    "uint2"      shift, and go to state 232
    "uint3"      shift, and go to state 233
    "uint4"      shift, and go to state 234
    "float"      shift, and go to state 235
    "float2"     shift, and go to state 236
    "float3"     shift, and go to state 237
    "float4"     shift, and go to state 238
    "range"      shift, and go to state 239
    "urange"     shift, and go to state 240
    "range64"    shift, and go to state 241
    "urange64"   shift, and go to state 242
    "block"      shift, and go to state 243
    "int64"      shift, and go to state 244
    "uint64"     shift, and go to state 245
    "double"     shift, and go to state 246
    "function"   shift, and go to state 247
    "lambda"     shift, and go to state 248
    "int8"       shift, and go to state 249
    "uint8"      shift, and go to state 250
    "int16"      shift, and go to state 251
    "uint16"     shift, and go to state 252
    "tuple"      shift, and go to state 253
    "variant"    shift, and go to state 254
    "::"         shift, and go to state 55
    "$t"         shift, and go to state 255
    "name"       shift, and go to state 56
    '$'          shift, and go to state 256

    name_in_namespace                   go to state 257
    basic_type_declaration              go to state 258
    structure_type_declaration          go to state 259
    auto_type_declaration               go to state 260
    bitfield_type_declaration           go to state 261
    type_declaration_no_options         go to state 985
    type_declaration_no_options_no_dim  go to state 263


State 789

  281 expr_cast: "upcast" '<' $@7 . type_declaration_no_options '>' $@8 expr

    "type"       shift, and go to state 216
    "array"      shift, and go to state 217
    "table"      shift, and go to state 218
    "typedecl"   shift, and go to state 219
    "iterator"   shift, and go to state 220
    "smart_ptr"  shift, and go to state 221
    "bool"       shift, and go to state 222
    "void"       shift, and go to state 223
    "string"     shift, and go to state 224
    "auto"       shift, and go to state 225
    "int"        shift, and go to state 226
    "int2"       shift, and go to state 227
    "int3"       shift, and go to state 228
    "int4"       shift, and go to state 229
    "uint"       shift, and go to state 230
    "bitfield"   shift, and go to state 231
    "uint2"      shift, and go to state 232
    "uint3"      shift, and go to state 233
    "uint4"      shift, and go to state 234
    "float"      shift, and go to state 235
    "float2"     shift, and go to state 236
    "float3"     shift, and go to state 237
    "float4"     shift, and go to state 238
    "range"      shift, and go to state 239
    "urange"     shift, and go to state 240
    "range64"    shift, and go to state 241
    "urange64"   shift, and go to state 242
    "block"      shift, and go to state 243
    "int64"      shift, and go to state 244
    "uint64"     shift, and go to state 245
    "double"     shift, and go to state 246
    "function"   shift, and go to state 247
    "lambda"     shift, and go to state 248
    "int8"       shift, and go to state 249
    "uint8"      shift, and go to state 250
    "int16"      shift, and go to state 251
    "uint16"     shift, and go to state 252
    "tuple"      shift, and go to state 253
    "variant"    shift, and go to state 254
    "::"         shift, and go to state 55
    "$t"         shift, and go to state 255
    "name"       shift, and go to state 56
    '$'          shift, and go to state 256

    name_in_namespace                   go to state 257
    basic_type_declaration              go to state 258
    structure_type_declaration          go to state 259
    auto_type_declaration               go to state 260
    bitfield_type_declaration           go to state 261
    type_declaration_no_options         go to state 986
    type_declaration_no_options_no_dim  go to state 263


State 790

  339 expr_method_call: expr . "->" "name" '(' ')'
  340                 | expr . "->" "name" '(' expr_list ')'
  350 expr_field: expr . '.' "name"
  351           | expr . '.' '.' "name"
  352           | expr . '.' "name" '(' ')'
  353           | expr . '.' "name" '(' expr_list ')'
  354           | expr . '.' basic_type_declaration '(' ')'
  355           | expr . '.' basic_type_declaration '(' expr_list ')'
  358           | expr . '.' $@17 error $@18
  380 expr: expr . "<<" expr
  381     | expr . ">>" expr
  382     | expr . "<<<" expr
  383     | expr . ">>>" expr
  384     | expr . '+' expr
  385     | expr . '-' expr
  386     | expr . '*' expr
  387     | expr . '/' expr
  388     | expr . '%' expr
  389     | expr . '<' expr
  390     | expr . '>' expr
  391     | expr . "==" expr
  392     | expr . "!=" expr
  393     | expr . "<=" expr
  394     | expr . ">=" expr
  395     | expr . '&' expr
  396     | expr . '|' expr
  397     | expr . '^' expr
  398     | expr . "&&" expr
  399     | expr . "||" expr
  400     | expr . "^^" expr
  401     | expr . ".." expr
  404     | expr . "++"
  405     | expr . "--"
  407     | expr . '[' expr ']'
  408     | expr . '.' '[' expr ']'
  409     | expr . "?[" expr ']'
  410     | expr . '.' "?[" expr ']'
  411     | expr . "?." "name"
  412     | expr . '.' "?." "name"
  417     | "addr" '(' expr . ')'
  421     | expr . "??" expr
  422     | expr . '?' expr ':' expr
  425     | expr . "is" "type" '<' $@19 type_declaration_no_options '>' $@20
  426     | expr . "is" basic_type_declaration
  427     | expr . "is" "name"
  428     | expr . "as" "name"
  431     | expr . "as" "type" '<' $@21 type_declaration '>' $@22
  432     | expr . "as" basic_type_declaration
  433     | expr . '?' "as" "name"
  436     | expr . '?' "as" "type" '<' $@23 type_declaration '>' $@24
  437     | expr . '?' "as" basic_type_declaration
  445     | expr . "<|" expr
  446     | expr . "|>" expr
  447     | expr . "|>" basic_type_declaration
  458 expr_mtag: expr . '.' "$f" '(' expr ')'
  459          | expr . "?." "$f" '(' expr ')'
  460          | expr . '.' '.' "$f" '(' expr ')'
  461          | expr . '.' "?." "$f" '(' expr ')'
  462          | expr . "as" "$f" '(' expr ')'
  463          | expr . '?' "as" "$f" '(' expr ')'
  464          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 637
    "as"   shift, and go to state 638
    "<<"   shift, and go to state 639
    ">>"   shift, and go to state 640
    "++"   shift, and go to state 641
    "--"   shift, and go to state 642
    "<="   shift, and go to state 643
    ">="   shift, and go to state 644
    "=="   shift, and go to state 645
    "!="   shift, and go to state 646
    "->"   shift, and go to state 647
    "??"   shift, and go to state 648
    "?."   shift, and go to state 649
    "?["   shift, and go to state 650
    "<|"   shift, and go to state 651
    "|>"   shift, and go to state 652
    "<<<"  shift, and go to state 653
    ">>>"  shift, and go to state 654
    "&&"   shift, and go to state 655
    "||"   shift, and go to state 656
    "^^"   shift, and go to state 657
    ".."   shift, and go to state 658
    '?'    shift, and go to state 659
    '|'    shift, and go to state 660
    '^'    shift, and go to state 661
    '&'    shift, and go to state 662
    '<'    shift, and go to state 663
    '>'    shift, and go to state 664
    '-'    shift, and go to state 665
    '+'    shift, and go to state 666
    '*'    shift, and go to state 667
    '/'    shift, and go to state 668
    '%'    shift, and go to state 669
    '.'    shift, and go to state 670
    '['    shift, and go to state 671
    ')'    shift, and go to state 987


State 791

  284 expr_cast: "reinterpret" '<' $@9 . type_declaration_no_options '>' $@10 expr

    "type"       shift, and go to state 216
    "array"      shift, and go to state 217
    "table"      shift, and go to state 218
    "typedecl"   shift, and go to state 219
    "iterator"   shift, and go to state 220
    "smart_ptr"  shift, and go to state 221
    "bool"       shift, and go to state 222
    "void"       shift, and go to state 223
    "string"     shift, and go to state 224
    "auto"       shift, and go to state 225
    "int"        shift, and go to state 226
    "int2"       shift, and go to state 227
    "int3"       shift, and go to state 228
    "int4"       shift, and go to state 229
    "uint"       shift, and go to state 230
    "bitfield"   shift, and go to state 231
    "uint2"      shift, and go to state 232
    "uint3"      shift, and go to state 233
    "uint4"      shift, and go to state 234
    "float"      shift, and go to state 235
    "float2"     shift, and go to state 236
    "float3"     shift, and go to state 237
    "float4"     shift, and go to state 238
    "range"      shift, and go to state 239
    "urange"     shift, and go to state 240
    "range64"    shift, and go to state 241
    "urange64"   shift, and go to state 242
    "block"      shift, and go to state 243
    "int64"      shift, and go to state 244
    "uint64"     shift, and go to state 245
    "double"     shift, and go to state 246
    "function"   shift, and go to state 247
    "lambda"     shift, and go to state 248
    "int8"       shift, and go to state 249
    "uint8"      shift, and go to state 250
    "int16"      shift, and go to state 251
    "uint16"     shift, and go to state 252
    "tuple"      shift, and go to state 253
    "variant"    shift, and go to state 254
    "::"         shift, and go to state 55
    "$t"         shift, and go to state 255
    "name"       shift, and go to state 56
    '$'          shift, and go to state 256

    name_in_namespace                   go to state 257
    basic_type_declaration              go to state 258
    structure_type_declaration          go to state 259
    auto_type_declaration               go to state 260
    bitfield_type_declaration           go to state 261
    type_declaration_no_options         go to state 988
    type_declaration_no_options_no_dim  go to state 263


State 792

  339 expr_method_call: expr . "->" "name" '(' ')'
  340                 | expr . "->" "name" '(' expr_list ')'
  350 expr_field: expr . '.' "name"
  351           | expr . '.' '.' "name"
  352           | expr . '.' "name" '(' ')'
  353           | expr . '.' "name" '(' expr_list ')'
  354           | expr . '.' basic_type_declaration '(' ')'
  355           | expr . '.' basic_type_declaration '(' expr_list ')'
  358           | expr . '.' $@17 error $@18
  380 expr: expr . "<<" expr
  381     | expr . ">>" expr
  382     | expr . "<<<" expr
  383     | expr . ">>>" expr
  384     | expr . '+' expr
  385     | expr . '-' expr
  386     | expr . '*' expr
  387     | expr . '/' expr
  388     | expr . '%' expr
  389     | expr . '<' expr
  390     | expr . '>' expr
  391     | expr . "==" expr
  392     | expr . "!=" expr
  393     | expr . "<=" expr
  394     | expr . ">=" expr
  395     | expr . '&' expr
  396     | expr . '|' expr
  397     | expr . '^' expr
  398     | expr . "&&" expr
  399     | expr . "||" expr
  400     | expr . "^^" expr
  401     | expr . ".." expr
  404     | expr . "++"
  405     | expr . "--"
  407     | expr . '[' expr ']'
  408     | expr . '.' '[' expr ']'
  409     | expr . "?[" expr ']'
  410     | expr . '.' "?[" expr ']'
  411     | expr . "?." "name"
  412     | expr . '.' "?." "name"
  421     | expr . "??" expr
  422     | expr . '?' expr ':' expr
  425     | expr . "is" "type" '<' $@19 type_declaration_no_options '>' $@20
  426     | expr . "is" basic_type_declaration
  427     | expr . "is" "name"
  428     | expr . "as" "name"
  431     | expr . "as" "type" '<' $@21 type_declaration '>' $@22
  432     | expr . "as" basic_type_declaration
  433     | expr . '?' "as" "name"
  436     | expr . '?' "as" "type" '<' $@23 type_declaration '>' $@24
  437     | expr . '?' "as" basic_type_declaration
  445     | expr . "<|" expr
  446     | expr . "|>" expr
  447     | expr . "|>" basic_type_declaration
  449     | "unsafe" '(' expr . ')'
  458 expr_mtag: expr . '.' "$f" '(' expr ')'
  459          | expr . "?." "$f" '(' expr ')'
  460          | expr . '.' '.' "$f" '(' expr ')'
  461          | expr . '.' "?." "$f" '(' expr ')'
  462          | expr . "as" "$f" '(' expr ')'
  463          | expr . '?' "as" "$f" '(' expr ')'
  464          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 637
    "as"   shift, and go to state 638
    "<<"   shift, and go to state 639
    ">>"   shift, and go to state 640
    "++"   shift, and go to state 641
    "--"   shift, and go to state 642
    "<="   shift, and go to state 643
    ">="   shift, and go to state 644
    "=="   shift, and go to state 645
    "!="   shift, and go to state 646
    "->"   shift, and go to state 647
    "??"   shift, and go to state 648
    "?."   shift, and go to state 649
    "?["   shift, and go to state 650
    "<|"   shift, and go to state 651
    "|>"   shift, and go to state 652
    "<<<"  shift, and go to state 653
    ">>>"  shift, and go to state 654
    "&&"   shift, and go to state 655
    "||"   shift, and go to state 656
    "^^"   shift, and go to state 657
    ".."   shift, and go to state 658
    '?'    shift, and go to state 659
    '|'    shift, and go to state 660
    '^'    shift, and go to state 661
    '&'    shift, and go to state 662
    '<'    shift, and go to state 663
    '>'    shift, and go to state 664
    '-'    shift, and go to state 665
    '+'    shift, and go to state 666
    '*'    shift, and go to state 667
    '/'    shift, and go to state 668
    '%'    shift, and go to state 669
    '.'    shift, and go to state 670
    '['    shift, and go to state 671
    ')'    shift, and go to state 989


State 793

  768 make_dim_decl: "fixed_array" '<' $@90 . type_declaration_no_options '>' $@91 '(' expr_list optional_comma ')'

    "type"       shift, and go to state 216
    "array"      shift, and go to state 217
    "table"      shift, and go to state 218
    "typedecl"   shift, and go to state 219
    "iterator"   shift, and go to state 220
    "smart_ptr"  shift, and go to state 221
    "bool"       shift, and go to state 222
    "void"       shift, and go to state 223
    "string"     shift, and go to state 224
    "auto"       shift, and go to state 225
    "int"        shift, and go to state 226
    "int2"       shift, and go to state 227
    "int3"       shift, and go to state 228
    "int4"       shift, and go to state 229
    "uint"       shift, and go to state 230
    "bitfield"   shift, and go to state 231
    "uint2"      shift, and go to state 232
    "uint3"      shift, and go to state 233
    "uint4"      shift, and go to state 234
    "float"      shift, and go to state 235
    "float2"     shift, and go to state 236
    "float3"     shift, and go to state 237
    "float4"     shift, and go to state 238
    "range"      shift, and go to state 239
    "urange"     shift, and go to state 240
    "range64"    shift, and go to state 241
    "urange64"   shift, and go to state 242
    "block"      shift, and go to state 243
    "int64"      shift, and go to state 244
    "uint64"     shift, and go to state 245
    "double"     shift, and go to state 246
    "function"   shift, and go to state 247
    "lambda"     shift, and go to state 248
    "int8"       shift, and go to state 249
    "uint8"      shift, and go to state 250
    "int16"      shift, and go to state 251
    "uint16"     shift, and go to state 252
    "tuple"      shift, and go to state 253
    "variant"    shift, and go to state 254
    "::"         shift, and go to state 55
    "$t"         shift, and go to state 255
    "name"       shift, and go to state 56
    '$'          shift, and go to state 256

    name_in_namespace                   go to state 257
    basic_type_declaration              go to state 258
    structure_type_declaration          go to state 259
    auto_type_declaration               go to state 260
    bitfield_type_declaration           go to state 261
    type_declaration_no_options         go to state 990
    type_declaration_no_options_no_dim  go to state 263


State 794

  292 expr_list: expr_list . ',' expr
  765 make_dim_decl: "fixed_array" '(' expr_list . optional_comma ')'

    ','  shift, and go to state 815

    $default  reduce using rule 777 (optional_comma)

    optional_comma  go to state 991


State 795

  744 make_struct_decl: "default" '<' $@78 . type_declaration_no_options '>' $@79 use_initializer

    "type"       shift, and go to state 216
    "array"      shift, and go to state 217
    "table"      shift, and go to state 218
    "typedecl"   shift, and go to state 219
    "iterator"   shift, and go to state 220
    "smart_ptr"  shift, and go to state 221
    "bool"       shift, and go to state 222
    "void"       shift, and go to state 223
    "string"     shift, and go to state 224
    "auto"       shift, and go to state 225
    "int"        shift, and go to state 226
    "int2"       shift, and go to state 227
    "int3"       shift, and go to state 228
    "int4"       shift, and go to state 229
    "uint"       shift, and go to state 230
    "bitfield"   shift, and go to state 231
    "uint2"      shift, and go to state 232
    "uint3"      shift, and go to state 233
    "uint4"      shift, and go to state 234
    "float"      shift, and go to state 235
    "float2"     shift, and go to state 236
    "float3"     shift, and go to state 237
    "float4"     shift, and go to state 238
    "range"      shift, and go to state 239
    "urange"     shift, and go to state 240
    "range64"    shift, and go to state 241
    "urange64"   shift, and go to state 242
    "block"      shift, and go to state 243
    "int64"      shift, and go to state 244
    "uint64"     shift, and go to state 245
    "double"     shift, and go to state 246
    "function"   shift, and go to state 247
    "lambda"     shift, and go to state 248
    "int8"       shift, and go to state 249
    "uint8"      shift, and go to state 250
    "int16"      shift, and go to state 251
    "uint16"     shift, and go to state 252
    "tuple"      shift, and go to state 253
    "variant"    shift, and go to state 254
    "::"         shift, and go to state 55
    "$t"         shift, and go to state 255
    "name"       shift, and go to state 56
    '$'          shift, and go to state 256

    name_in_namespace                   go to state 257
    basic_type_declaration              go to state 258
    structure_type_declaration          go to state 259
    auto_type_declaration               go to state 260
    bitfield_type_declaration           go to state 261
    type_declaration_no_options         go to state 992
    type_declaration_no_options_no_dim  go to state 263


State 796

  750 make_tuple_call: "tuple" '<' $@80 . type_declaration_no_options '>' $@81 '(' use_initializer optional_make_struct_dim_decl ')'

    "type"       shift, and go to state 216
    "array"      shift, and go to state 217
    "table"      shift, and go to state 218
    "typedecl"   shift, and go to state 219
    "iterator"   shift, and go to state 220
    "smart_ptr"  shift, and go to state 221
    "bool"       shift, and go to state 222
    "void"       shift, and go to state 223
    "string"     shift, and go to state 224
    "auto"       shift, and go to state 225
    "int"        shift, and go to state 226
    "int2"       shift, and go to state 227
    "int3"       shift, and go to state 228
    "int4"       shift, and go to state 229
    "uint"       shift, and go to state 230
    "bitfield"   shift, and go to state 231
    "uint2"      shift, and go to state 232
    "uint3"      shift, and go to state 233
    "uint4"      shift, and go to state 234
    "float"      shift, and go to state 235
    "float2"     shift, and go to state 236
    "float3"     shift, and go to state 237
    "float4"     shift, and go to state 238
    "range"      shift, and go to state 239
    "urange"     shift, and go to state 240
    "range64"    shift, and go to state 241
    "urange64"   shift, and go to state 242
    "block"      shift, and go to state 243
    "int64"      shift, and go to state 244
    "uint64"     shift, and go to state 245
    "double"     shift, and go to state 246
    "function"   shift, and go to state 247
    "lambda"     shift, and go to state 248
    "int8"       shift, and go to state 249
    "uint8"      shift, and go to state 250
    "int16"      shift, and go to state 251
    "uint16"     shift, and go to state 252
    "tuple"      shift, and go to state 253
    "variant"    shift, and go to state 254
    "::"         shift, and go to state 55
    "$t"         shift, and go to state 255
    "name"       shift, and go to state 56
    '$'          shift, and go to state 256

    name_in_namespace                   go to state 257
    basic_type_declaration              go to state 258
    structure_type_declaration          go to state 259
    auto_type_declaration               go to state 260
    bitfield_type_declaration           go to state 261
    type_declaration_no_options         go to state 993
    type_declaration_no_options_no_dim  go to state 263


State 797

  292 expr_list: expr_list . ',' expr
  747 make_tuple_call: "tuple" '(' expr_list . optional_comma ')'

    ','  shift, and go to state 815

    $default  reduce using rule 777 (optional_comma)

    optional_comma  go to state 994


State 798

  741 make_struct_decl: "variant" '<' $@76 . type_declaration_no_options '>' $@77 '(' make_variant_dim ')'

    "type"       shift, and go to state 216
    "array"      shift, and go to state 217
    "table"      shift, and go to state 218
    "typedecl"   shift, and go to state 219
    "iterator"   shift, and go to state 220
    "smart_ptr"  shift, and go to state 221
    "bool"       shift, and go to state 222
    "void"       shift, and go to state 223
    "string"     shift, and go to state 224
    "auto"       shift, and go to state 225
    "int"        shift, and go to state 226
    "int2"       shift, and go to state 227
    "int3"       shift, and go to state 228
    "int4"       shift, and go to state 229
    "uint"       shift, and go to state 230
    "bitfield"   shift, and go to state 231
    "uint2"      shift, and go to state 232
    "uint3"      shift, and go to state 233
    "uint4"      shift, and go to state 234
    "float"      shift, and go to state 235
    "float2"     shift, and go to state 236
    "float3"     shift, and go to state 237
    "float4"     shift, and go to state 238
    "range"      shift, and go to state 239
    "urange"     shift, and go to state 240
    "range64"    shift, and go to state 241
    "urange64"   shift, and go to state 242
    "block"      shift, and go to state 243
    "int64"      shift, and go to state 244
    "uint64"     shift, and go to state 245
    "double"     shift, and go to state 246
    "function"   shift, and go to state 247
    "lambda"     shift, and go to state 248
    "int8"       shift, and go to state 249
    "uint8"      shift, and go to state 250
    "int16"      shift, and go to state 251
    "uint16"     shift, and go to state 252
    "tuple"      shift, and go to state 253
    "variant"    shift, and go to state 254
    "::"         shift, and go to state 55
    "$t"         shift, and go to state 255
    "name"       shift, and go to state 56
    '$'          shift, and go to state 256

    name_in_namespace                   go to state 257
    basic_type_declaration              go to state 258
    structure_type_declaration          go to state 259
    auto_type_declaration               go to state 260
    bitfield_type_declaration           go to state 261
    type_declaration_no_options         go to state 995
    type_declaration_no_options_no_dim  go to state 263


State 799

  418 expr: "generator" '<' type_declaration_no_options . '>' optional_capture_list '(' ')'
  419     | "generator" '<' type_declaration_no_options . '>' optional_capture_list '(' expr ')'
  420     | "generator" '<' type_declaration_no_options . '>' optional_capture_list expression_block

    '>'  shift, and go to state 996


State 800

  339 expr_method_call: expr . "->" "name" '(' ')'
  340                 | expr . "->" "name" '(' expr_list ')'
  350 expr_field: expr . '.' "name"
  351           | expr . '.' '.' "name"
  352           | expr . '.' "name" '(' ')'
  353           | expr . '.' "name" '(' expr_list ')'
  354           | expr . '.' basic_type_declaration '(' ')'
  355           | expr . '.' basic_type_declaration '(' expr_list ')'
  358           | expr . '.' $@17 error $@18
  380 expr: expr . "<<" expr
  381     | expr . ">>" expr
  382     | expr . "<<<" expr
  383     | expr . ">>>" expr
  384     | expr . '+' expr
  385     | expr . '-' expr
  386     | expr . '*' expr
  387     | expr . '/' expr
  388     | expr . '%' expr
  389     | expr . '<' expr
  390     | expr . '>' expr
  391     | expr . "==" expr
  392     | expr . "!=" expr
  393     | expr . "<=" expr
  394     | expr . ">=" expr
  395     | expr . '&' expr
  396     | expr . '|' expr
  397     | expr . '^' expr
  398     | expr . "&&" expr
  399     | expr . "||" expr
  400     | expr . "^^" expr
  401     | expr . ".." expr
  404     | expr . "++"
  405     | expr . "--"
  407     | expr . '[' expr ']'
  408     | expr . '.' '[' expr ']'
  409     | expr . "?[" expr ']'
  410     | expr . '.' "?[" expr ']'
  411     | expr . "?." "name"
  412     | expr . '.' "?." "name"
  421     | expr . "??" expr
  422     | expr . '?' expr ':' expr
  425     | expr . "is" "type" '<' $@19 type_declaration_no_options '>' $@20
  426     | expr . "is" basic_type_declaration
  427     | expr . "is" "name"
  428     | expr . "as" "name"
  431     | expr . "as" "type" '<' $@21 type_declaration '>' $@22
  432     | expr . "as" basic_type_declaration
  433     | expr . '?' "as" "name"
  436     | expr . '?' "as" "type" '<' $@23 type_declaration '>' $@24
  437     | expr . '?' "as" basic_type_declaration
  445     | expr . "<|" expr
  446     | expr . "|>" expr
  447     | expr . "|>" basic_type_declaration
  450 expr_mtag: "$$" '(' expr . ')'
  458          | expr . '.' "$f" '(' expr ')'
  459          | expr . "?." "$f" '(' expr ')'
  460          | expr . '.' '.' "$f" '(' expr ')'
  461          | expr . '.' "?." "$f" '(' expr ')'
  462          | expr . "as" "$f" '(' expr ')'
  463          | expr . '?' "as" "$f" '(' expr ')'
  464          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 637
    "as"   shift, and go to state 638
    "<<"   shift, and go to state 639
    ">>"   shift, and go to state 640
    "++"   shift, and go to state 641
    "--"   shift, and go to state 642
    "<="   shift, and go to state 643
    ">="   shift, and go to state 644
    "=="   shift, and go to state 645
    "!="   shift, and go to state 646
    "->"   shift, and go to state 647
    "??"   shift, and go to state 648
    "?."   shift, and go to state 649
    "?["   shift, and go to state 650
    "<|"   shift, and go to state 651
    "|>"   shift, and go to state 652
    "<<<"  shift, and go to state 653
    ">>>"  shift, and go to state 654
    "&&"   shift, and go to state 655
    "||"   shift, and go to state 656
    "^^"   shift, and go to state 657
    ".."   shift, and go to state 658
    '?'    shift, and go to state 659
    '|'    shift, and go to state 660
    '^'    shift, and go to state 661
    '&'    shift, and go to state 662
    '<'    shift, and go to state 663
    '>'    shift, and go to state 664
    '-'    shift, and go to state 665
    '+'    shift, and go to state 666
    '*'    shift, and go to state 667
    '/'    shift, and go to state 668
    '%'    shift, and go to state 669
    '.'    shift, and go to state 670
    '['    shift, and go to state 671
    ')'    shift, and go to state 997


State 801

  339 expr_method_call: expr . "->" "name" '(' ')'
  340                 | expr . "->" "name" '(' expr_list ')'
  350 expr_field: expr . '.' "name"
  351           | expr . '.' '.' "name"
  352           | expr . '.' "name" '(' ')'
  353           | expr . '.' "name" '(' expr_list ')'
  354           | expr . '.' basic_type_declaration '(' ')'
  355           | expr . '.' basic_type_declaration '(' expr_list ')'
  358           | expr . '.' $@17 error $@18
  380 expr: expr . "<<" expr
  381     | expr . ">>" expr
  382     | expr . "<<<" expr
  383     | expr . ">>>" expr
  384     | expr . '+' expr
  385     | expr . '-' expr
  386     | expr . '*' expr
  387     | expr . '/' expr
  388     | expr . '%' expr
  389     | expr . '<' expr
  390     | expr . '>' expr
  391     | expr . "==" expr
  392     | expr . "!=" expr
  393     | expr . "<=" expr
  394     | expr . ">=" expr
  395     | expr . '&' expr
  396     | expr . '|' expr
  397     | expr . '^' expr
  398     | expr . "&&" expr
  399     | expr . "||" expr
  400     | expr . "^^" expr
  401     | expr . ".." expr
  404     | expr . "++"
  405     | expr . "--"
  407     | expr . '[' expr ']'
  408     | expr . '.' '[' expr ']'
  409     | expr . "?[" expr ']'
  410     | expr . '.' "?[" expr ']'
  411     | expr . "?." "name"
  412     | expr . '.' "?." "name"
  421     | expr . "??" expr
  422     | expr . '?' expr ':' expr
  425     | expr . "is" "type" '<' $@19 type_declaration_no_options '>' $@20
  426     | expr . "is" basic_type_declaration
  427     | expr . "is" "name"
  428     | expr . "as" "name"
  431     | expr . "as" "type" '<' $@21 type_declaration '>' $@22
  432     | expr . "as" basic_type_declaration
  433     | expr . '?' "as" "name"
  436     | expr . '?' "as" "type" '<' $@23 type_declaration '>' $@24
  437     | expr . '?' "as" basic_type_declaration
  445     | expr . "<|" expr
  446     | expr . "|>" expr
  447     | expr . "|>" basic_type_declaration
  451 expr_mtag: "$i" '(' expr . ')'
  458          | expr . '.' "$f" '(' expr ')'
  459          | expr . "?." "$f" '(' expr ')'
  460          | expr . '.' '.' "$f" '(' expr ')'
  461          | expr . '.' "?." "$f" '(' expr ')'
  462          | expr . "as" "$f" '(' expr ')'
  463          | expr . '?' "as" "$f" '(' expr ')'
  464          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 637
    "as"   shift, and go to state 638
    "<<"   shift, and go to state 639
    ">>"   shift, and go to state 640
    "++"   shift, and go to state 641
    "--"   shift, and go to state 642
    "<="   shift, and go to state 643
    ">="   shift, and go to state 644
    "=="   shift, and go to state 645
    "!="   shift, and go to state 646
    "->"   shift, and go to state 647
    "??"   shift, and go to state 648
    "?."   shift, and go to state 649
    "?["   shift, and go to state 650
    "<|"   shift, and go to state 651
    "|>"   shift, and go to state 652
    "<<<"  shift, and go to state 653
    ">>>"  shift, and go to state 654
    "&&"   shift, and go to state 655
    "||"   shift, and go to state 656
    "^^"   shift, and go to state 657
    ".."   shift, and go to state 658
    '?'    shift, and go to state 659
    '|'    shift, and go to state 660
    '^'    shift, and go to state 661
    '&'    shift, and go to state 662
    '<'    shift, and go to state 663
    '>'    shift, and go to state 664
    '-'    shift, and go to state 665
    '+'    shift, and go to state 666
    '*'    shift, and go to state 667
    '/'    shift, and go to state 668
    '%'    shift, and go to state 669
    '.'    shift, and go to state 670
    '['    shift, and go to state 671
    ')'    shift, and go to state 998


State 802

  339 expr_method_call: expr . "->" "name" '(' ')'
  340                 | expr . "->" "name" '(' expr_list ')'
  350 expr_field: expr . '.' "name"
  351           | expr . '.' '.' "name"
  352           | expr . '.' "name" '(' ')'
  353           | expr . '.' "name" '(' expr_list ')'
  354           | expr . '.' basic_type_declaration '(' ')'
  355           | expr . '.' basic_type_declaration '(' expr_list ')'
  358           | expr . '.' $@17 error $@18
  380 expr: expr . "<<" expr
  381     | expr . ">>" expr
  382     | expr . "<<<" expr
  383     | expr . ">>>" expr
  384     | expr . '+' expr
  385     | expr . '-' expr
  386     | expr . '*' expr
  387     | expr . '/' expr
  388     | expr . '%' expr
  389     | expr . '<' expr
  390     | expr . '>' expr
  391     | expr . "==" expr
  392     | expr . "!=" expr
  393     | expr . "<=" expr
  394     | expr . ">=" expr
  395     | expr . '&' expr
  396     | expr . '|' expr
  397     | expr . '^' expr
  398     | expr . "&&" expr
  399     | expr . "||" expr
  400     | expr . "^^" expr
  401     | expr . ".." expr
  404     | expr . "++"
  405     | expr . "--"
  407     | expr . '[' expr ']'
  408     | expr . '.' '[' expr ']'
  409     | expr . "?[" expr ']'
  410     | expr . '.' "?[" expr ']'
  411     | expr . "?." "name"
  412     | expr . '.' "?." "name"
  421     | expr . "??" expr
  422     | expr . '?' expr ':' expr
  425     | expr . "is" "type" '<' $@19 type_declaration_no_options '>' $@20
  426     | expr . "is" basic_type_declaration
  427     | expr . "is" "name"
  428     | expr . "as" "name"
  431     | expr . "as" "type" '<' $@21 type_declaration '>' $@22
  432     | expr . "as" basic_type_declaration
  433     | expr . '?' "as" "name"
  436     | expr . '?' "as" "type" '<' $@23 type_declaration '>' $@24
  437     | expr . '?' "as" basic_type_declaration
  445     | expr . "<|" expr
  446     | expr . "|>" expr
  447     | expr . "|>" basic_type_declaration
  452 expr_mtag: "$v" '(' expr . ')'
  458          | expr . '.' "$f" '(' expr ')'
  459          | expr . "?." "$f" '(' expr ')'
  460          | expr . '.' '.' "$f" '(' expr ')'
  461          | expr . '.' "?." "$f" '(' expr ')'
  462          | expr . "as" "$f" '(' expr ')'
  463          | expr . '?' "as" "$f" '(' expr ')'
  464          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 637
    "as"   shift, and go to state 638
    "<<"   shift, and go to state 639
    ">>"   shift, and go to state 640
    "++"   shift, and go to state 641
    "--"   shift, and go to state 642
    "<="   shift, and go to state 643
    ">="   shift, and go to state 644
    "=="   shift, and go to state 645
    "!="   shift, and go to state 646
    "->"   shift, and go to state 647
    "??"   shift, and go to state 648
    "?."   shift, and go to state 649
    "?["   shift, and go to state 650
    "<|"   shift, and go to state 651
    "|>"   shift, and go to state 652
    "<<<"  shift, and go to state 653
    ">>>"  shift, and go to state 654
    "&&"   shift, and go to state 655
    "||"   shift, and go to state 656
    "^^"   shift, and go to state 657
    ".."   shift, and go to state 658
    '?'    shift, and go to state 659
    '|'    shift, and go to state 660
    '^'    shift, and go to state 661
    '&'    shift, and go to state 662
    '<'    shift, and go to state 663
    '>'    shift, and go to state 664
    '-'    shift, and go to state 665
    '+'    shift, and go to state 666
    '*'    shift, and go to state 667
    '/'    shift, and go to state 668
    '%'    shift, and go to state 669
    '.'    shift, and go to state 670
    '['    shift, and go to state 671
    ')'    shift, and go to state 999


State 803

  339 expr_method_call: expr . "->" "name" '(' ')'
  340                 | expr . "->" "name" '(' expr_list ')'
  350 expr_field: expr . '.' "name"
  351           | expr . '.' '.' "name"
  352           | expr . '.' "name" '(' ')'
  353           | expr . '.' "name" '(' expr_list ')'
  354           | expr . '.' basic_type_declaration '(' ')'
  355           | expr . '.' basic_type_declaration '(' expr_list ')'
  358           | expr . '.' $@17 error $@18
  380 expr: expr . "<<" expr
  381     | expr . ">>" expr
  382     | expr . "<<<" expr
  383     | expr . ">>>" expr
  384     | expr . '+' expr
  385     | expr . '-' expr
  386     | expr . '*' expr
  387     | expr . '/' expr
  388     | expr . '%' expr
  389     | expr . '<' expr
  390     | expr . '>' expr
  391     | expr . "==" expr
  392     | expr . "!=" expr
  393     | expr . "<=" expr
  394     | expr . ">=" expr
  395     | expr . '&' expr
  396     | expr . '|' expr
  397     | expr . '^' expr
  398     | expr . "&&" expr
  399     | expr . "||" expr
  400     | expr . "^^" expr
  401     | expr . ".." expr
  404     | expr . "++"
  405     | expr . "--"
  407     | expr . '[' expr ']'
  408     | expr . '.' '[' expr ']'
  409     | expr . "?[" expr ']'
  410     | expr . '.' "?[" expr ']'
  411     | expr . "?." "name"
  412     | expr . '.' "?." "name"
  421     | expr . "??" expr
  422     | expr . '?' expr ':' expr
  425     | expr . "is" "type" '<' $@19 type_declaration_no_options '>' $@20
  426     | expr . "is" basic_type_declaration
  427     | expr . "is" "name"
  428     | expr . "as" "name"
  431     | expr . "as" "type" '<' $@21 type_declaration '>' $@22
  432     | expr . "as" basic_type_declaration
  433     | expr . '?' "as" "name"
  436     | expr . '?' "as" "type" '<' $@23 type_declaration '>' $@24
  437     | expr . '?' "as" basic_type_declaration
  445     | expr . "<|" expr
  446     | expr . "|>" expr
  447     | expr . "|>" basic_type_declaration
  453 expr_mtag: "$b" '(' expr . ')'
  458          | expr . '.' "$f" '(' expr ')'
  459          | expr . "?." "$f" '(' expr ')'
  460          | expr . '.' '.' "$f" '(' expr ')'
  461          | expr . '.' "?." "$f" '(' expr ')'
  462          | expr . "as" "$f" '(' expr ')'
  463          | expr . '?' "as" "$f" '(' expr ')'
  464          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 637
    "as"   shift, and go to state 638
    "<<"   shift, and go to state 639
    ">>"   shift, and go to state 640
    "++"   shift, and go to state 641
    "--"   shift, and go to state 642
    "<="   shift, and go to state 643
    ">="   shift, and go to state 644
    "=="   shift, and go to state 645
    "!="   shift, and go to state 646
    "->"   shift, and go to state 647
    "??"   shift, and go to state 648
    "?."   shift, and go to state 649
    "?["   shift, and go to state 650
    "<|"   shift, and go to state 651
    "|>"   shift, and go to state 652
    "<<<"  shift, and go to state 653
    ">>>"  shift, and go to state 654
    "&&"   shift, and go to state 655
    "||"   shift, and go to state 656
    "^^"   shift, and go to state 657
    ".."   shift, and go to state 658
    '?'    shift, and go to state 659
    '|'    shift, and go to state 660
    '^'    shift, and go to state 661
    '&'    shift, and go to state 662
    '<'    shift, and go to state 663
    '>'    shift, and go to state 664
    '-'    shift, and go to state 665
    '+'    shift, and go to state 666
    '*'    shift, and go to state 667
    '/'    shift, and go to state 668
    '%'    shift, and go to state 669
    '.'    shift, and go to state 670
    '['    shift, and go to state 671
    ')'    shift, and go to state 1000


State 804

  339 expr_method_call: expr . "->" "name" '(' ')'
  340                 | expr . "->" "name" '(' expr_list ')'
  350 expr_field: expr . '.' "name"
  351           | expr . '.' '.' "name"
  352           | expr . '.' "name" '(' ')'
  353           | expr . '.' "name" '(' expr_list ')'
  354           | expr . '.' basic_type_declaration '(' ')'
  355           | expr . '.' basic_type_declaration '(' expr_list ')'
  358           | expr . '.' $@17 error $@18
  380 expr: expr . "<<" expr
  381     | expr . ">>" expr
  382     | expr . "<<<" expr
  383     | expr . ">>>" expr
  384     | expr . '+' expr
  385     | expr . '-' expr
  386     | expr . '*' expr
  387     | expr . '/' expr
  388     | expr . '%' expr
  389     | expr . '<' expr
  390     | expr . '>' expr
  391     | expr . "==" expr
  392     | expr . "!=" expr
  393     | expr . "<=" expr
  394     | expr . ">=" expr
  395     | expr . '&' expr
  396     | expr . '|' expr
  397     | expr . '^' expr
  398     | expr . "&&" expr
  399     | expr . "||" expr
  400     | expr . "^^" expr
  401     | expr . ".." expr
  404     | expr . "++"
  405     | expr . "--"
  407     | expr . '[' expr ']'
  408     | expr . '.' '[' expr ']'
  409     | expr . "?[" expr ']'
  410     | expr . '.' "?[" expr ']'
  411     | expr . "?." "name"
  412     | expr . '.' "?." "name"
  421     | expr . "??" expr
  422     | expr . '?' expr ':' expr
  425     | expr . "is" "type" '<' $@19 type_declaration_no_options '>' $@20
  426     | expr . "is" basic_type_declaration
  427     | expr . "is" "name"
  428     | expr . "as" "name"
  431     | expr . "as" "type" '<' $@21 type_declaration '>' $@22
  432     | expr . "as" basic_type_declaration
  433     | expr . '?' "as" "name"
  436     | expr . '?' "as" "type" '<' $@23 type_declaration '>' $@24
  437     | expr . '?' "as" basic_type_declaration
  445     | expr . "<|" expr
  446     | expr . "|>" expr
  447     | expr . "|>" basic_type_declaration
  454 expr_mtag: "$a" '(' expr . ')'
  458          | expr . '.' "$f" '(' expr ')'
  459          | expr . "?." "$f" '(' expr ')'
  460          | expr . '.' '.' "$f" '(' expr ')'
  461          | expr . '.' "?." "$f" '(' expr ')'
  462          | expr . "as" "$f" '(' expr ')'
  463          | expr . '?' "as" "$f" '(' expr ')'
  464          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 637
    "as"   shift, and go to state 638
    "<<"   shift, and go to state 639
    ">>"   shift, and go to state 640
    "++"   shift, and go to state 641
    "--"   shift, and go to state 642
    "<="   shift, and go to state 643
    ">="   shift, and go to state 644
    "=="   shift, and go to state 645
    "!="   shift, and go to state 646
    "->"   shift, and go to state 647
    "??"   shift, and go to state 648
    "?."   shift, and go to state 649
    "?["   shift, and go to state 650
    "<|"   shift, and go to state 651
    "|>"   shift, and go to state 652
    "<<<"  shift, and go to state 653
    ">>>"  shift, and go to state 654
    "&&"   shift, and go to state 655
    "||"   shift, and go to state 656
    "^^"   shift, and go to state 657
    ".."   shift, and go to state 658
    '?'    shift, and go to state 659
    '|'    shift, and go to state 660
    '^'    shift, and go to state 661
    '&'    shift, and go to state 662
    '<'    shift, and go to state 663
    '>'    shift, and go to state 664
    '-'    shift, and go to state 665
    '+'    shift, and go to state 666
    '*'    shift, and go to state 667
    '/'    shift, and go to state 668
    '%'    shift, and go to state 669
    '.'    shift, and go to state 670
    '['    shift, and go to state 671
    ')'    shift, and go to state 1001


State 805

  339 expr_method_call: expr . "->" "name" '(' ')'
  340                 | expr . "->" "name" '(' expr_list ')'
  350 expr_field: expr . '.' "name"
  351           | expr . '.' '.' "name"
  352           | expr . '.' "name" '(' ')'
  353           | expr . '.' "name" '(' expr_list ')'
  354           | expr . '.' basic_type_declaration '(' ')'
  355           | expr . '.' basic_type_declaration '(' expr_list ')'
  358           | expr . '.' $@17 error $@18
  380 expr: expr . "<<" expr
  381     | expr . ">>" expr
  382     | expr . "<<<" expr
  383     | expr . ">>>" expr
  384     | expr . '+' expr
  385     | expr . '-' expr
  386     | expr . '*' expr
  387     | expr . '/' expr
  388     | expr . '%' expr
  389     | expr . '<' expr
  390     | expr . '>' expr
  391     | expr . "==" expr
  392     | expr . "!=" expr
  393     | expr . "<=" expr
  394     | expr . ">=" expr
  395     | expr . '&' expr
  396     | expr . '|' expr
  397     | expr . '^' expr
  398     | expr . "&&" expr
  399     | expr . "||" expr
  400     | expr . "^^" expr
  401     | expr . ".." expr
  404     | expr . "++"
  405     | expr . "--"
  407     | expr . '[' expr ']'
  408     | expr . '.' '[' expr ']'
  409     | expr . "?[" expr ']'
  410     | expr . '.' "?[" expr ']'
  411     | expr . "?." "name"
  412     | expr . '.' "?." "name"
  421     | expr . "??" expr
  422     | expr . '?' expr ':' expr
  425     | expr . "is" "type" '<' $@19 type_declaration_no_options '>' $@20
  426     | expr . "is" basic_type_declaration
  427     | expr . "is" "name"
  428     | expr . "as" "name"
  431     | expr . "as" "type" '<' $@21 type_declaration '>' $@22
  432     | expr . "as" basic_type_declaration
  433     | expr . '?' "as" "name"
  436     | expr . '?' "as" "type" '<' $@23 type_declaration '>' $@24
  437     | expr . '?' "as" basic_type_declaration
  445     | expr . "<|" expr
  446     | expr . "|>" expr
  447     | expr . "|>" basic_type_declaration
  456 expr_mtag: "$c" '(' expr . ')' '(' ')'
  457          | "$c" '(' expr . ')' '(' expr_list ')'
  458          | expr . '.' "$f" '(' expr ')'
  459          | expr . "?." "$f" '(' expr ')'
  460          | expr . '.' '.' "$f" '(' expr ')'
  461          | expr . '.' "?." "$f" '(' expr ')'
  462          | expr . "as" "$f" '(' expr ')'
  463          | expr . '?' "as" "$f" '(' expr ')'
  464          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 637
    "as"   shift, and go to state 638
    "<<"   shift, and go to state 639
    ">>"   shift, and go to state 640
    "++"   shift, and go to state 641
    "--"   shift, and go to state 642
    "<="   shift, and go to state 643
    ">="   shift, and go to state 644
    "=="   shift, and go to state 645
    "!="   shift, and go to state 646
    "->"   shift, and go to state 647
    "??"   shift, and go to state 648
    "?."   shift, and go to state 649
    "?["   shift, and go to state 650
    "<|"   shift, and go to state 651
    "|>"   shift, and go to state 652
    "<<<"  shift, and go to state 653
    ">>>"  shift, and go to state 654
    "&&"   shift, and go to state 655
    "||"   shift, and go to state 656
    "^^"   shift, and go to state 657
    ".."   shift, and go to state 658
    '?'    shift, and go to state 659
    '|'    shift, and go to state 660
    '^'    shift, and go to state 661
    '&'    shift, and go to state 662
    '<'    shift, and go to state 663
    '>'    shift, and go to state 664
    '-'    shift, and go to state 665
    '+'    shift, and go to state 666
    '*'    shift, and go to state 667
    '/'    shift, and go to state 668
    '%'    shift, and go to state 669
    '.'    shift, and go to state 670
    '['    shift, and go to state 671
    ')'    shift, and go to state 1002


State 806

   32 string_builder: "start of the string" string_builder_body "end of the string" .

    $default  reduce using rule 32 (string_builder)


State 807

   31 string_builder_body: string_builder_body "{" . expr "}"

    "struct"                          shift, and go to state 402
    "class"                           shift, and go to state 403
    "true"                            shift, and go to state 404
    "false"                           shift, and go to state 405
    "new"                             shift, and go to state 406
    "typeinfo"                        shift, and go to state 407
    "type"                            shift, and go to state 408
    "array"                           shift, and go to state 409
    "null"                            shift, and go to state 410
    "table"                           shift, and go to state 411
    "deref"                           shift, and go to state 412
    "cast"                            shift, and go to state 413
    "upcast"                          shift, and go to state 414
    "addr"                            shift, and go to state 415
    "reinterpret"                     shift, and go to state 416
    "unsafe"                          shift, and go to state 417
    "fixed_array"                     shift, and go to state 418
    "default"                         shift, and go to state 419
    "bool"                            shift, and go to state 222
    "void"                            shift, and go to state 223
    "string"                          shift, and go to state 224
    "int"                             shift, and go to state 226
    "int2"                            shift, and go to state 227
    "int3"                            shift, and go to state 228
    "int4"                            shift, and go to state 229
    "uint"                            shift, and go to state 230
    "bitfield"                        shift, and go to state 420
    "uint2"                           shift, and go to state 232
    "uint3"                           shift, and go to state 233
    "uint4"                           shift, and go to state 234
    "float"                           shift, and go to state 235
    "float2"                          shift, and go to state 236
    "float3"                          shift, and go to state 237
    "float4"                          shift, and go to state 238
    "range"                           shift, and go to state 239
    "urange"                          shift, and go to state 240
    "range64"                         shift, and go to state 241
    "urange64"                        shift, and go to state 242
    "int64"                           shift, and go to state 244
    "uint64"                          shift, and go to state 245
    "double"                          shift, and go to state 246
    "int8"                            shift, and go to state 249
    "uint8"                           shift, and go to state 250
    "int16"                           shift, and go to state 251
    "uint16"                          shift, and go to state 252
    "tuple"                           shift, and go to state 421
    "variant"                         shift, and go to state 422
    "generator"                       shift, and go to state 423
    "++"                              shift, and go to state 424
    "--"                              shift, and go to state 425
    "::"                              shift, and go to state 55
    "$$"                              shift, and go to state 426
    "$i"                              shift, and go to state 427
    "$v"                              shift, and go to state 428
    "$b"                              shift, and go to state 429
    "$a"                              shift, and go to state 430
    "$c"                              shift, and go to state 431
    "..."                             shift, and go to state 432
    "integer constant"                shift, and go to state 433
    "long integer constant"           shift, and go to state 434
    "unsigned integer constant"       shift, and go to state 435
    "unsigned long integer constant"  shift, and go to state 436
    "unsigned int8 constant"          shift, and go to state 437
    "floating point constant"         shift, and go to state 438
    "double constant"                 shift, and go to state 439
    "name"                            shift, and go to state 56
    "start of the string"             shift, and go to state 440
    "begin of code block"             shift, and go to state 441
    '-'                               shift, and go to state 442
    '+'                               shift, and go to state 443
    '*'                               shift, and go to state 444
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 445
    '!'                               shift, and go to state 446
    '['                               shift, and go to state 447
    '('                               shift, and go to state 448
    '$'                               shift, and go to state 449
    '@'                               shift, and go to state 450

    string_builder          go to state 451
    expr_reader             go to state 452
    expr_call_pipe          go to state 453
    name_in_namespace       go to state 454
    expr_new                go to state 455
    expr_cast               go to state 456
    expr_type_decl          go to state 457
    expr_type_info          go to state 458
    block_or_lambda         go to state 459
    expr_full_block         go to state 460
    expr_numeric_const      go to state 461
    expr_named_call         go to state 462
    expr_method_call        go to state 463
    func_addr_expr          go to state 464
    expr_field              go to state 465
    expr_call               go to state 466
    expr                    go to state 1003
    expr_mtag               go to state 468
    basic_type_declaration  go to state 469
    make_decl               go to state 470
    make_struct_decl        go to state 471
    make_tuple_call         go to state 472
    make_dim_decl           go to state 473
    make_table_decl         go to state 474
    array_comprehension     go to state 475


State 808

   25 character_sequence: character_sequence . STRING_CHARACTER
   26                   | character_sequence . STRING_CHARACTER_ESC
   30 string_builder_body: string_builder_body character_sequence .

    STRING_CHARACTER      shift, and go to state 211
    STRING_CHARACTER_ESC  shift, and go to state 212

    $default  reduce using rule 30 (string_builder_body)


State 809

  573 variable_name_with_pos_list: variable_name_with_pos_list . ',' "name"
  574                            | variable_name_with_pos_list . ',' "name" "aka" "name"
  781 array_comprehension: "begin of code block" "for" variable_name_with_pos_list . "in" expr_list "end of expression" make_map_tuple array_comprehension_where "end of code block"

    "in"  shift, and go to state 1004
    ','   shift, and go to state 913


State 810

  745 make_map_tuple: expr "=>" . expr

    "struct"                          shift, and go to state 402
    "class"                           shift, and go to state 403
    "true"                            shift, and go to state 404
    "false"                           shift, and go to state 405
    "new"                             shift, and go to state 406
    "typeinfo"                        shift, and go to state 407
    "type"                            shift, and go to state 408
    "array"                           shift, and go to state 409
    "null"                            shift, and go to state 410
    "table"                           shift, and go to state 411
    "deref"                           shift, and go to state 412
    "cast"                            shift, and go to state 413
    "upcast"                          shift, and go to state 414
    "addr"                            shift, and go to state 415
    "reinterpret"                     shift, and go to state 416
    "unsafe"                          shift, and go to state 417
    "fixed_array"                     shift, and go to state 418
    "default"                         shift, and go to state 419
    "bool"                            shift, and go to state 222
    "void"                            shift, and go to state 223
    "string"                          shift, and go to state 224
    "int"                             shift, and go to state 226
    "int2"                            shift, and go to state 227
    "int3"                            shift, and go to state 228
    "int4"                            shift, and go to state 229
    "uint"                            shift, and go to state 230
    "bitfield"                        shift, and go to state 420
    "uint2"                           shift, and go to state 232
    "uint3"                           shift, and go to state 233
    "uint4"                           shift, and go to state 234
    "float"                           shift, and go to state 235
    "float2"                          shift, and go to state 236
    "float3"                          shift, and go to state 237
    "float4"                          shift, and go to state 238
    "range"                           shift, and go to state 239
    "urange"                          shift, and go to state 240
    "range64"                         shift, and go to state 241
    "urange64"                        shift, and go to state 242
    "int64"                           shift, and go to state 244
    "uint64"                          shift, and go to state 245
    "double"                          shift, and go to state 246
    "int8"                            shift, and go to state 249
    "uint8"                           shift, and go to state 250
    "int16"                           shift, and go to state 251
    "uint16"                          shift, and go to state 252
    "tuple"                           shift, and go to state 421
    "variant"                         shift, and go to state 422
    "generator"                       shift, and go to state 423
    "++"                              shift, and go to state 424
    "--"                              shift, and go to state 425
    "::"                              shift, and go to state 55
    "$$"                              shift, and go to state 426
    "$i"                              shift, and go to state 427
    "$v"                              shift, and go to state 428
    "$b"                              shift, and go to state 429
    "$a"                              shift, and go to state 430
    "$c"                              shift, and go to state 431
    "..."                             shift, and go to state 432
    "integer constant"                shift, and go to state 433
    "long integer constant"           shift, and go to state 434
    "unsigned integer constant"       shift, and go to state 435
    "unsigned long integer constant"  shift, and go to state 436
    "unsigned int8 constant"          shift, and go to state 437
    "floating point constant"         shift, and go to state 438
    "double constant"                 shift, and go to state 439
    "name"                            shift, and go to state 56
    "start of the string"             shift, and go to state 440
    "begin of code block"             shift, and go to state 441
    '-'                               shift, and go to state 442
    '+'                               shift, and go to state 443
    '*'                               shift, and go to state 444
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 445
    '!'                               shift, and go to state 446
    '['                               shift, and go to state 447
    '('                               shift, and go to state 448
    '$'                               shift, and go to state 449
    '@'                               shift, and go to state 450

    string_builder          go to state 451
    expr_reader             go to state 452
    expr_call_pipe          go to state 453
    name_in_namespace       go to state 454
    expr_new                go to state 455
    expr_cast               go to state 456
    expr_type_decl          go to state 457
    expr_type_info          go to state 458
    block_or_lambda         go to state 459
    expr_full_block         go to state 460
    expr_numeric_const      go to state 461
    expr_named_call         go to state 462
    expr_method_call        go to state 463
    func_addr_expr          go to state 464
    expr_field              go to state 465
    expr_call               go to state 466
    expr                    go to state 1005
    expr_mtag               go to state 468
    basic_type_declaration  go to state 469
    make_decl               go to state 470
    make_struct_decl        go to state 471
    make_tuple_call         go to state 472
    make_dim_decl           go to state 473
    make_table_decl         go to state 474
    array_comprehension     go to state 475


State 811

  770 expr_map_tuple_list: expr_map_tuple_list ',' . make_map_tuple
  778 optional_comma: ',' .

    "struct"                          shift, and go to state 402
    "class"                           shift, and go to state 403
    "true"                            shift, and go to state 404
    "false"                           shift, and go to state 405
    "new"                             shift, and go to state 406
    "typeinfo"                        shift, and go to state 407
    "type"                            shift, and go to state 408
    "array"                           shift, and go to state 409
    "null"                            shift, and go to state 410
    "table"                           shift, and go to state 411
    "deref"                           shift, and go to state 412
    "cast"                            shift, and go to state 413
    "upcast"                          shift, and go to state 414
    "addr"                            shift, and go to state 415
    "reinterpret"                     shift, and go to state 416
    "unsafe"                          shift, and go to state 417
    "fixed_array"                     shift, and go to state 418
    "default"                         shift, and go to state 419
    "bool"                            shift, and go to state 222
    "void"                            shift, and go to state 223
    "string"                          shift, and go to state 224
    "int"                             shift, and go to state 226
    "int2"                            shift, and go to state 227
    "int3"                            shift, and go to state 228
    "int4"                            shift, and go to state 229
    "uint"                            shift, and go to state 230
    "bitfield"                        shift, and go to state 420
    "uint2"                           shift, and go to state 232
    "uint3"                           shift, and go to state 233
    "uint4"                           shift, and go to state 234
    "float"                           shift, and go to state 235
    "float2"                          shift, and go to state 236
    "float3"                          shift, and go to state 237
    "float4"                          shift, and go to state 238
    "range"                           shift, and go to state 239
    "urange"                          shift, and go to state 240
    "range64"                         shift, and go to state 241
    "urange64"                        shift, and go to state 242
    "int64"                           shift, and go to state 244
    "uint64"                          shift, and go to state 245
    "double"                          shift, and go to state 246
    "int8"                            shift, and go to state 249
    "uint8"                           shift, and go to state 250
    "int16"                           shift, and go to state 251
    "uint16"                          shift, and go to state 252
    "tuple"                           shift, and go to state 421
    "variant"                         shift, and go to state 422
    "generator"                       shift, and go to state 423
    "++"                              shift, and go to state 424
    "--"                              shift, and go to state 425
    "::"                              shift, and go to state 55
    "$$"                              shift, and go to state 426
    "$i"                              shift, and go to state 427
    "$v"                              shift, and go to state 428
    "$b"                              shift, and go to state 429
    "$a"                              shift, and go to state 430
    "$c"                              shift, and go to state 431
    "..."                             shift, and go to state 432
    "integer constant"                shift, and go to state 433
    "long integer constant"           shift, and go to state 434
    "unsigned integer constant"       shift, and go to state 435
    "unsigned long integer constant"  shift, and go to state 436
    "unsigned int8 constant"          shift, and go to state 437
    "floating point constant"         shift, and go to state 438
    "double constant"                 shift, and go to state 439
    "name"                            shift, and go to state 56
    "start of the string"             shift, and go to state 440
    "begin of code block"             shift, and go to state 441
    '-'                               shift, and go to state 442
    '+'                               shift, and go to state 443
    '*'                               shift, and go to state 444
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 445
    '!'                               shift, and go to state 446
    '['                               shift, and go to state 447
    '('                               shift, and go to state 448
    '$'                               shift, and go to state 449
    '@'                               shift, and go to state 450

    $default  reduce using rule 778 (optional_comma)

    string_builder          go to state 451
    expr_reader             go to state 452
    expr_call_pipe          go to state 453
    name_in_namespace       go to state 454
    expr_new                go to state 455
    expr_cast               go to state 456
    expr_type_decl          go to state 457
    expr_type_info          go to state 458
    block_or_lambda         go to state 459
    expr_full_block         go to state 460
    expr_numeric_const      go to state 461
    expr_named_call         go to state 462
    expr_method_call        go to state 463
    func_addr_expr          go to state 464
    expr_field              go to state 465
    expr_call               go to state 466
    expr                    go to state 617
    expr_mtag               go to state 468
    basic_type_declaration  go to state 469
    make_decl               go to state 470
    make_struct_decl        go to state 471
    make_map_tuple          go to state 1006
    make_tuple_call         go to state 472
    make_dim_decl           go to state 473
    make_table_decl         go to state 474
    array_comprehension     go to state 475


State 812

  771 make_table_decl: "begin of code block" expr_map_tuple_list optional_comma . "end of code block"

    "end of code block"  shift, and go to state 1007


State 813

  573 variable_name_with_pos_list: variable_name_with_pos_list . ',' "name"
  574                            | variable_name_with_pos_list . ',' "name" "aka" "name"
  779 array_comprehension: '[' "for" variable_name_with_pos_list . "in" expr_list "end of expression" expr array_comprehension_where ']'

    "in"  shift, and go to state 1008
    ','   shift, and go to state 913


State 814

  780 array_comprehension: '[' "iterator" "for" . variable_name_with_pos_list "in" expr_list "end of expression" expr array_comprehension_where ']'

    "$i"    shift, and go to state 706
    "name"  shift, and go to state 707

    variable_name_with_pos_list  go to state 1009


State 815

  292 expr_list: expr_list ',' . expr
  778 optional_comma: ',' .

    "struct"                          shift, and go to state 402
    "class"                           shift, and go to state 403
    "true"                            shift, and go to state 404
    "false"                           shift, and go to state 405
    "new"                             shift, and go to state 406
    "typeinfo"                        shift, and go to state 407
    "type"                            shift, and go to state 408
    "array"                           shift, and go to state 409
    "null"                            shift, and go to state 410
    "table"                           shift, and go to state 411
    "deref"                           shift, and go to state 412
    "cast"                            shift, and go to state 413
    "upcast"                          shift, and go to state 414
    "addr"                            shift, and go to state 415
    "reinterpret"                     shift, and go to state 416
    "unsafe"                          shift, and go to state 417
    "fixed_array"                     shift, and go to state 418
    "default"                         shift, and go to state 419
    "bool"                            shift, and go to state 222
    "void"                            shift, and go to state 223
    "string"                          shift, and go to state 224
    "int"                             shift, and go to state 226
    "int2"                            shift, and go to state 227
    "int3"                            shift, and go to state 228
    "int4"                            shift, and go to state 229
    "uint"                            shift, and go to state 230
    "bitfield"                        shift, and go to state 420
    "uint2"                           shift, and go to state 232
    "uint3"                           shift, and go to state 233
    "uint4"                           shift, and go to state 234
    "float"                           shift, and go to state 235
    "float2"                          shift, and go to state 236
    "float3"                          shift, and go to state 237
    "float4"                          shift, and go to state 238
    "range"                           shift, and go to state 239
    "urange"                          shift, and go to state 240
    "range64"                         shift, and go to state 241
    "urange64"                        shift, and go to state 242
    "int64"                           shift, and go to state 244
    "uint64"                          shift, and go to state 245
    "double"                          shift, and go to state 246
    "int8"                            shift, and go to state 249
    "uint8"                           shift, and go to state 250
    "int16"                           shift, and go to state 251
    "uint16"                          shift, and go to state 252
    "tuple"                           shift, and go to state 421
    "variant"                         shift, and go to state 422
    "generator"                       shift, and go to state 423
    "++"                              shift, and go to state 424
    "--"                              shift, and go to state 425
    "::"                              shift, and go to state 55
    "$$"                              shift, and go to state 426
    "$i"                              shift, and go to state 427
    "$v"                              shift, and go to state 428
    "$b"                              shift, and go to state 429
    "$a"                              shift, and go to state 430
    "$c"                              shift, and go to state 431
    "..."                             shift, and go to state 432
    "integer constant"                shift, and go to state 433
    "long integer constant"           shift, and go to state 434
    "unsigned integer constant"       shift, and go to state 435
    "unsigned long integer constant"  shift, and go to state 436
    "unsigned int8 constant"          shift, and go to state 437
    "floating point constant"         shift, and go to state 438
    "double constant"                 shift, and go to state 439
    "name"                            shift, and go to state 56
    "start of the string"             shift, and go to state 440
    "begin of code block"             shift, and go to state 441
    '-'                               shift, and go to state 442
    '+'                               shift, and go to state 443
    '*'                               shift, and go to state 444
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 445
    '!'                               shift, and go to state 446
    '['                               shift, and go to state 447
    '('                               shift, and go to state 448
    '$'                               shift, and go to state 449
    '@'                               shift, and go to state 450

    $default  reduce using rule 778 (optional_comma)

    string_builder          go to state 451
    expr_reader             go to state 452
    expr_call_pipe          go to state 453
    name_in_namespace       go to state 454
    expr_new                go to state 455
    expr_cast               go to state 456
    expr_type_decl          go to state 457
    expr_type_info          go to state 458
    block_or_lambda         go to state 459
    expr_full_block         go to state 460
    expr_numeric_const      go to state 461
    expr_named_call         go to state 462
    expr_method_call        go to state 463
    func_addr_expr          go to state 464
    expr_field              go to state 465
    expr_call               go to state 466
    expr                    go to state 1010
    expr_mtag               go to state 468
    basic_type_declaration  go to state 469
    make_decl               go to state 470
    make_struct_decl        go to state 471
    make_tuple_call         go to state 472
    make_dim_decl           go to state 473
    make_table_decl         go to state 474
    array_comprehension     go to state 475


State 816

  751 make_dim_decl: '[' expr_list optional_comma . ']'

    ']'  shift, and go to state 1011


State 817

  406 expr: '(' expr_list optional_comma . ')'

    ')'  shift, and go to state 1012


State 818

  342 func_addr_name: "$i" . '(' expr ')'

    '('  shift, and go to state 1013


State 819

  465 expr_mtag: '@' '@' "$c" . '(' expr ')'

    '('  shift, and go to state 1014


State 820

  346 func_addr_expr: '@' '@' '<' . $@13 type_declaration_no_options '>' $@14 func_addr_name
  349               | '@' '@' '<' . $@15 optional_function_argument_list optional_function_type '>' $@16 func_addr_name

    ':'       reduce using rule 347 ($@15)
    '>'       reduce using rule 347 ($@15)
    '('       reduce using rule 347 ($@15)
    $default  reduce using rule 344 ($@13)

    $@13  go to state 1015
    $@15  go to state 1016


State 821

  341 func_addr_name: name_in_namespace .

    $default  reduce using rule 341 (func_addr_name)


State 822

  343 func_addr_expr: '@' '@' func_addr_name .

    $default  reduce using rule 343 (func_addr_expr)


State 823

  360 expr_call: name_in_namespace '(' "uninitialized" . ')'
  362          | name_in_namespace '(' "uninitialized" . make_struct_single ')'

    "$f"    shift, and go to state 824
    "name"  shift, and go to state 1017
    ')'     shift, and go to state 1018

    make_struct_fields  go to state 829
    make_struct_single  go to state 1019


State 824

  719 make_struct_fields: "$f" . '(' expr ')' copy_or_move expr
  720                   | "$f" . '(' expr ')' ":=" expr

    '('  shift, and go to state 1020


State 825

  242 name_in_namespace: "name" .
  243                  | "name" . "::" "name"
  715 make_struct_fields: "name" . copy_or_move expr
  716                   | "name" . ":=" expr

    "<-"  shift, and go to state 912
    ":="  shift, and go to state 1021
    "::"  shift, and go to state 94
    '='   shift, and go to state 914

    $default  reduce using rule 242 (name_in_namespace)

    copy_or_move  go to state 1022


State 826

  337 expr_named_call: name_in_namespace '(' '[' . make_struct_fields ']' ')'
  751 make_dim_decl: '[' . expr_list optional_comma ']'
  779 array_comprehension: '[' . "for" variable_name_with_pos_list "in" expr_list "end of expression" expr array_comprehension_where ']'
  780                    | '[' . "iterator" "for" variable_name_with_pos_list "in" expr_list "end of expression" expr array_comprehension_where ']'

    "struct"                          shift, and go to state 402
    "class"                           shift, and go to state 403
    "for"                             shift, and go to state 625
    "true"                            shift, and go to state 404
    "false"                           shift, and go to state 405
    "new"                             shift, and go to state 406
    "typeinfo"                        shift, and go to state 407
    "type"                            shift, and go to state 408
    "array"                           shift, and go to state 409
    "null"                            shift, and go to state 410
    "table"                           shift, and go to state 411
    "deref"                           shift, and go to state 412
    "cast"                            shift, and go to state 413
    "upcast"                          shift, and go to state 414
    "iterator"                        shift, and go to state 626
    "addr"                            shift, and go to state 415
    "reinterpret"                     shift, and go to state 416
    "unsafe"                          shift, and go to state 417
    "fixed_array"                     shift, and go to state 418
    "default"                         shift, and go to state 419
    "bool"                            shift, and go to state 222
    "void"                            shift, and go to state 223
    "string"                          shift, and go to state 224
    "int"                             shift, and go to state 226
    "int2"                            shift, and go to state 227
    "int3"                            shift, and go to state 228
    "int4"                            shift, and go to state 229
    "uint"                            shift, and go to state 230
    "bitfield"                        shift, and go to state 420
    "uint2"                           shift, and go to state 232
    "uint3"                           shift, and go to state 233
    "uint4"                           shift, and go to state 234
    "float"                           shift, and go to state 235
    "float2"                          shift, and go to state 236
    "float3"                          shift, and go to state 237
    "float4"                          shift, and go to state 238
    "range"                           shift, and go to state 239
    "urange"                          shift, and go to state 240
    "range64"                         shift, and go to state 241
    "urange64"                        shift, and go to state 242
    "int64"                           shift, and go to state 244
    "uint64"                          shift, and go to state 245
    "double"                          shift, and go to state 246
    "int8"                            shift, and go to state 249
    "uint8"                           shift, and go to state 250
    "int16"                           shift, and go to state 251
    "uint16"                          shift, and go to state 252
    "tuple"                           shift, and go to state 421
    "variant"                         shift, and go to state 422
    "generator"                       shift, and go to state 423
    "++"                              shift, and go to state 424
    "--"                              shift, and go to state 425
    "::"                              shift, and go to state 55
    "$$"                              shift, and go to state 426
    "$i"                              shift, and go to state 427
    "$v"                              shift, and go to state 428
    "$b"                              shift, and go to state 429
    "$a"                              shift, and go to state 430
    "$c"                              shift, and go to state 431
    "$f"                              shift, and go to state 824
    "..."                             shift, and go to state 432
    "integer constant"                shift, and go to state 433
    "long integer constant"           shift, and go to state 434
    "unsigned integer constant"       shift, and go to state 435
    "unsigned long integer constant"  shift, and go to state 436
    "unsigned int8 constant"          shift, and go to state 437
    "floating point constant"         shift, and go to state 438
    "double constant"                 shift, and go to state 439
    "name"                            shift, and go to state 825
    "start of the string"             shift, and go to state 440
    "begin of code block"             shift, and go to state 441
    '-'                               shift, and go to state 442
    '+'                               shift, and go to state 443
    '*'                               shift, and go to state 444
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 445
    '!'                               shift, and go to state 446
    '['                               shift, and go to state 447
    '('                               shift, and go to state 448
    '$'                               shift, and go to state 449
    '@'                               shift, and go to state 450

    string_builder          go to state 451
    expr_reader             go to state 452
    expr_call_pipe          go to state 453
    name_in_namespace       go to state 454
    expr_new                go to state 455
    expr_cast               go to state 456
    expr_type_decl          go to state 457
    expr_type_info          go to state 458
    expr_list               go to state 627
    block_or_lambda         go to state 459
    expr_full_block         go to state 460
    expr_numeric_const      go to state 461
    expr_named_call         go to state 462
    expr_method_call        go to state 463
    func_addr_expr          go to state 464
    expr_field              go to state 465
    expr_call               go to state 466
    expr                    go to state 628
    expr_mtag               go to state 468
    basic_type_declaration  go to state 469
    make_decl               go to state 470
    make_struct_fields      go to state 1023
    make_struct_decl        go to state 471
    make_tuple_call         go to state 472
    make_dim_decl           go to state 473
    make_table_decl         go to state 474
    array_comprehension     go to state 475


State 827

  359 expr_call: name_in_namespace '(' ')' .

    $default  reduce using rule 359 (expr_call)


State 828

  292 expr_list: expr_list . ',' expr
  338 expr_named_call: name_in_namespace '(' expr_list . ',' '[' make_struct_fields ']' ')'
  363 expr_call: name_in_namespace '(' expr_list . ')'

    ','  shift, and go to state 1024
    ')'  shift, and go to state 1025


State 829

  717 make_struct_fields: make_struct_fields . ',' "name" copy_or_move expr
  718                   | make_struct_fields . ',' "name" ":=" expr
  721                   | make_struct_fields . ',' "$f" '(' expr ')' copy_or_move expr
  722                   | make_struct_fields . ',' "$f" '(' expr ')' ":=" expr
  724 make_struct_single: make_struct_fields .

    ','  shift, and go to state 1026

    $default  reduce using rule 724 (make_struct_single)


State 830

  361 expr_call: name_in_namespace '(' make_struct_single . ')'

    ')'  shift, and go to state 1027


State 831

  307 optional_capture_list: "capture" . '(' capture_list ')'

    '('  shift, and go to state 1028


State 832

  308 expr_full_block: block_or_lambda optional_annotation_list optional_capture_list . optional_function_argument_list optional_function_type block_or_simple_block

    '('  shift, and go to state 321

    $default  reduce using rule 115 (optional_function_argument_list)

    optional_function_argument_list  go to state 1029


State 833

  234 expressions: expressions . expression_any
  235            | expressions . error
  310 expr_full_block_assumed_piped: "begin of code block" expressions . "end of code block"

    error                             shift, and go to state 524
    "struct"                          shift, and go to state 402
    "class"                           shift, and go to state 403
    "let"                             shift, and go to state 3
    "while"                           shift, and go to state 525
    "if"                              shift, and go to state 526
    "static_if"                       shift, and go to state 527
    "for"                             shift, and go to state 528
    "true"                            shift, and go to state 404
    "false"                           shift, and go to state 405
    "new"                             shift, and go to state 406
    "typeinfo"                        shift, and go to state 407
    "type"                            shift, and go to state 408
    "array"                           shift, and go to state 409
    "return"                          shift, and go to state 529
    "null"                            shift, and go to state 410
    "break"                           shift, and go to state 530
    "try"                             shift, and go to state 531
    "table"                           shift, and go to state 411
    "delete"                          shift, and go to state 532
    "deref"                           shift, and go to state 412
    "with"                            shift, and go to state 533
    "assume"                          shift, and go to state 534
    "cast"                            shift, and go to state 413
    "upcast"                          shift, and go to state 414
    "var"                             shift, and go to state 8
    "addr"                            shift, and go to state 415
    "continue"                        shift, and go to state 535
    "pass"                            shift, and go to state 536
    "reinterpret"                     shift, and go to state 416
    "label"                           shift, and go to state 537
    "goto"                            shift, and go to state 538
    "unsafe"                          shift, and go to state 539
    "fixed_array"                     shift, and go to state 418
    "default"                         shift, and go to state 419
    "bool"                            shift, and go to state 222
    "void"                            shift, and go to state 223
    "string"                          shift, and go to state 224
    "int"                             shift, and go to state 226
    "int2"                            shift, and go to state 227
    "int3"                            shift, and go to state 228
    "int4"                            shift, and go to state 229
    "uint"                            shift, and go to state 230
    "bitfield"                        shift, and go to state 420
    "uint2"                           shift, and go to state 232
    "uint3"                           shift, and go to state 233
    "uint4"                           shift, and go to state 234
    "float"                           shift, and go to state 235
    "float2"                          shift, and go to state 236
    "float3"                          shift, and go to state 237
    "float4"                          shift, and go to state 238
    "range"                           shift, and go to state 239
    "urange"                          shift, and go to state 240
    "range64"                         shift, and go to state 241
    "urange64"                        shift, and go to state 242
    "int64"                           shift, and go to state 244
    "uint64"                          shift, and go to state 245
    "double"                          shift, and go to state 246
    "int8"                            shift, and go to state 249
    "uint8"                           shift, and go to state 250
    "int16"                           shift, and go to state 251
    "uint16"                          shift, and go to state 252
    "tuple"                           shift, and go to state 421
    "variant"                         shift, and go to state 422
    "generator"                       shift, and go to state 423
    "yield"                           shift, and go to state 540
    "++"                              shift, and go to state 424
    "--"                              shift, and go to state 425
    "::"                              shift, and go to state 55
    "$$"                              shift, and go to state 426
    "$i"                              shift, and go to state 427
    "$v"                              shift, and go to state 428
    "$b"                              shift, and go to state 429
    "$a"                              shift, and go to state 430
    "$c"                              shift, and go to state 431
    "..."                             shift, and go to state 432
    "integer constant"                shift, and go to state 433
    "long integer constant"           shift, and go to state 434
    "unsigned integer constant"       shift, and go to state 435
    "unsigned long integer constant"  shift, and go to state 436
    "unsigned int8 constant"          shift, and go to state 437
    "floating point constant"         shift, and go to state 438
    "double constant"                 shift, and go to state 439
    "name"                            shift, and go to state 56
    "start of the string"             shift, and go to state 440
    "begin of code block"             shift, and go to state 441
    "end of code block"               shift, and go to state 1030
    "end of expression"               shift, and go to state 542
    '-'                               shift, and go to state 442
    '+'                               shift, and go to state 443
    '*'                               shift, and go to state 444
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 445
    '!'                               shift, and go to state 446
    '['                               shift, and go to state 447
    '('                               shift, and go to state 448
    '$'                               shift, and go to state 449
    '@'                               shift, and go to state 450

    string_builder           go to state 451
    expr_reader              go to state 452
    expression_label         go to state 543
    expression_goto          go to state 544
    if_or_static_if          go to state 545
    expression_if_one_liner  go to state 546
    expression_if_then_else  go to state 547
    expression_for_loop      go to state 548
    expression_unsafe        go to state 549
    expression_while_loop    go to state 550
    expression_with          go to state 551
    expression_with_alias    go to state 552
    expr_call_pipe           go to state 453
    expression_any           go to state 553
    name_in_namespace        go to state 454
    expression_delete        go to state 554
    expr_new                 go to state 455
    expression_break         go to state 555
    expression_continue      go to state 556
    expression_return        go to state 557
    expression_yield         go to state 558
    expression_try_catch     go to state 559
    kwd_let                  go to state 560
    expression_let           go to state 561
    expr_cast                go to state 456
    expr_type_decl           go to state 457
    expr_type_info           go to state 458
    block_or_lambda          go to state 459
    expr_full_block          go to state 460
    expr_numeric_const       go to state 461
    expr_assign              go to state 562
    expr_named_call          go to state 462
    expr_method_call         go to state 463
    func_addr_expr           go to state 464
    expr_field               go to state 465
    expr_call                go to state 466
    expr                     go to state 563
    expr_mtag                go to state 468
    basic_type_declaration   go to state 469
    make_decl                go to state 470
    make_struct_decl         go to state 471
    make_tuple_call          go to state 472
    make_dim_decl            go to state 473
    make_table_decl          go to state 474
    array_comprehension      go to state 475


State 834

  298 block_or_lambda: '@' '@' .

    $default  reduce using rule 298 (block_or_lambda)


State 835

  309 expr_full_block_assumed_piped: block_or_lambda optional_annotation_list . optional_capture_list optional_function_argument_list optional_function_type expression_block

    "capture"  shift, and go to state 831

    $default  reduce using rule 306 (optional_capture_list)

    optional_capture_list  go to state 1031


State 836

  425 expr: expr "is" "type" . '<' $@19 type_declaration_no_options '>' $@20

    '<'  shift, and go to state 1032


State 837

  464 expr_mtag: expr "is" "$f" . '(' expr ')'

    '('  shift, and go to state 1033


State 838

  427 expr: expr "is" "name" .

    $default  reduce using rule 427 (expr)


State 839

  426 expr: expr "is" basic_type_declaration .

    $default  reduce using rule 426 (expr)


State 840

  431 expr: expr "as" "type" . '<' $@21 type_declaration '>' $@22

    '<'  shift, and go to state 1034


State 841

  462 expr_mtag: expr "as" "$f" . '(' expr ')'

    '('  shift, and go to state 1035


State 842

  428 expr: expr "as" "name" .

    $default  reduce using rule 428 (expr)


State 843

  432 expr: expr "as" basic_type_declaration .

    $default  reduce using rule 432 (expr)


State 844

  339 expr_method_call: expr . "->" "name" '(' ')'
  340                 | expr . "->" "name" '(' expr_list ')'
  350 expr_field: expr . '.' "name"
  351           | expr . '.' '.' "name"
  352           | expr . '.' "name" '(' ')'
  353           | expr . '.' "name" '(' expr_list ')'
  354           | expr . '.' basic_type_declaration '(' ')'
  355           | expr . '.' basic_type_declaration '(' expr_list ')'
  358           | expr . '.' $@17 error $@18
  380 expr: expr . "<<" expr
  380     | expr "<<" expr .
  381     | expr . ">>" expr
  382     | expr . "<<<" expr
  383     | expr . ">>>" expr
  384     | expr . '+' expr
  385     | expr . '-' expr
  386     | expr . '*' expr
  387     | expr . '/' expr
  388     | expr . '%' expr
  389     | expr . '<' expr
  390     | expr . '>' expr
  391     | expr . "==" expr
  392     | expr . "!=" expr
  393     | expr . "<=" expr
  394     | expr . ">=" expr
  395     | expr . '&' expr
  396     | expr . '|' expr
  397     | expr . '^' expr
  398     | expr . "&&" expr
  399     | expr . "||" expr
  400     | expr . "^^" expr
  401     | expr . ".." expr
  404     | expr . "++"
  405     | expr . "--"
  407     | expr . '[' expr ']'
  408     | expr . '.' '[' expr ']'
  409     | expr . "?[" expr ']'
  410     | expr . '.' "?[" expr ']'
  411     | expr . "?." "name"
  412     | expr . '.' "?." "name"
  421     | expr . "??" expr
  422     | expr . '?' expr ':' expr
  425     | expr . "is" "type" '<' $@19 type_declaration_no_options '>' $@20
  426     | expr . "is" basic_type_declaration
  427     | expr . "is" "name"
  428     | expr . "as" "name"
  431     | expr . "as" "type" '<' $@21 type_declaration '>' $@22
  432     | expr . "as" basic_type_declaration
  433     | expr . '?' "as" "name"
  436     | expr . '?' "as" "type" '<' $@23 type_declaration '>' $@24
  437     | expr . '?' "as" basic_type_declaration
  445     | expr . "<|" expr
  446     | expr . "|>" expr
  447     | expr . "|>" basic_type_declaration
  458 expr_mtag: expr . '.' "$f" '(' expr ')'
  459          | expr . "?." "$f" '(' expr ')'
  460          | expr . '.' '.' "$f" '(' expr ')'
  461          | expr . '.' "?." "$f" '(' expr ')'
  462          | expr . "as" "$f" '(' expr ')'
  463          | expr . '?' "as" "$f" '(' expr ')'
  464          | expr . "is" "$f" '(' expr ')'

    "is"  shift, and go to state 637
    "as"  shift, and go to state 638
    "++"  shift, and go to state 641
    "--"  shift, and go to state 642
    "->"  shift, and go to state 647
    "??"  shift, and go to state 648
    "?."  shift, and go to state 649
    "?["  shift, and go to state 650
    "<|"  shift, and go to state 651
    "|>"  shift, and go to state 652
    '-'   shift, and go to state 665
    '+'   shift, and go to state 666
    '*'   shift, and go to state 667
    '/'   shift, and go to state 668
    '%'   shift, and go to state 669
    '.'   shift, and go to state 670
    '['   shift, and go to state 671

    $default  reduce using rule 380 (expr)


State 845

  339 expr_method_call: expr . "->" "name" '(' ')'
  340                 | expr . "->" "name" '(' expr_list ')'
  350 expr_field: expr . '.' "name"
  351           | expr . '.' '.' "name"
  352           | expr . '.' "name" '(' ')'
  353           | expr . '.' "name" '(' expr_list ')'
  354           | expr . '.' basic_type_declaration '(' ')'
  355           | expr . '.' basic_type_declaration '(' expr_list ')'
  358           | expr . '.' $@17 error $@18
  380 expr: expr . "<<" expr
  381     | expr . ">>" expr
  381     | expr ">>" expr .
  382     | expr . "<<<" expr
  383     | expr . ">>>" expr
  384     | expr . '+' expr
  385     | expr . '-' expr
  386     | expr . '*' expr
  387     | expr . '/' expr
  388     | expr . '%' expr
  389     | expr . '<' expr
  390     | expr . '>' expr
  391     | expr . "==" expr
  392     | expr . "!=" expr
  393     | expr . "<=" expr
  394     | expr . ">=" expr
  395     | expr . '&' expr
  396     | expr . '|' expr
  397     | expr . '^' expr
  398     | expr . "&&" expr
  399     | expr . "||" expr
  400     | expr . "^^" expr
  401     | expr . ".." expr
  404     | expr . "++"
  405     | expr . "--"
  407     | expr . '[' expr ']'
  408     | expr . '.' '[' expr ']'
  409     | expr . "?[" expr ']'
  410     | expr . '.' "?[" expr ']'
  411     | expr . "?." "name"
  412     | expr . '.' "?." "name"
  421     | expr . "??" expr
  422     | expr . '?' expr ':' expr
  425     | expr . "is" "type" '<' $@19 type_declaration_no_options '>' $@20
  426     | expr . "is" basic_type_declaration
  427     | expr . "is" "name"
  428     | expr . "as" "name"
  431     | expr . "as" "type" '<' $@21 type_declaration '>' $@22
  432     | expr . "as" basic_type_declaration
  433     | expr . '?' "as" "name"
  436     | expr . '?' "as" "type" '<' $@23 type_declaration '>' $@24
  437     | expr . '?' "as" basic_type_declaration
  445     | expr . "<|" expr
  446     | expr . "|>" expr
  447     | expr . "|>" basic_type_declaration
  458 expr_mtag: expr . '.' "$f" '(' expr ')'
  459          | expr . "?." "$f" '(' expr ')'
  460          | expr . '.' '.' "$f" '(' expr ')'
  461          | expr . '.' "?." "$f" '(' expr ')'
  462          | expr . "as" "$f" '(' expr ')'
  463          | expr . '?' "as" "$f" '(' expr ')'
  464          | expr . "is" "$f" '(' expr ')'

    "is"  shift, and go to state 637
    "as"  shift, and go to state 638
    "++"  shift, and go to state 641
    "--"  shift, and go to state 642
    "->"  shift, and go to state 647
    "??"  shift, and go to state 648
    "?."  shift, and go to state 649
    "?["  shift, and go to state 650
    "<|"  shift, and go to state 651
    "|>"  shift, and go to state 652
    '-'   shift, and go to state 665
    '+'   shift, and go to state 666
    '*'   shift, and go to state 667
    '/'   shift, and go to state 668
    '%'   shift, and go to state 669
    '.'   shift, and go to state 670
    '['   shift, and go to state 671

    $default  reduce using rule 381 (expr)


State 846

  339 expr_method_call: expr . "->" "name" '(' ')'
  340                 | expr . "->" "name" '(' expr_list ')'
  350 expr_field: expr . '.' "name"
  351           | expr . '.' '.' "name"
  352           | expr . '.' "name" '(' ')'
  353           | expr . '.' "name" '(' expr_list ')'
  354           | expr . '.' basic_type_declaration '(' ')'
  355           | expr . '.' basic_type_declaration '(' expr_list ')'
  358           | expr . '.' $@17 error $@18
  380 expr: expr . "<<" expr
  381     | expr . ">>" expr
  382     | expr . "<<<" expr
  383     | expr . ">>>" expr
  384     | expr . '+' expr
  385     | expr . '-' expr
  386     | expr . '*' expr
  387     | expr . '/' expr
  388     | expr . '%' expr
  389     | expr . '<' expr
  390     | expr . '>' expr
  391     | expr . "==" expr
  392     | expr . "!=" expr
  393     | expr . "<=" expr
  393     | expr "<=" expr .
  394     | expr . ">=" expr
  395     | expr . '&' expr
  396     | expr . '|' expr
  397     | expr . '^' expr
  398     | expr . "&&" expr
  399     | expr . "||" expr
  400     | expr . "^^" expr
  401     | expr . ".." expr
  404     | expr . "++"
  405     | expr . "--"
  407     | expr . '[' expr ']'
  408     | expr . '.' '[' expr ']'
  409     | expr . "?[" expr ']'
  410     | expr . '.' "?[" expr ']'
  411     | expr . "?." "name"
  412     | expr . '.' "?." "name"
  421     | expr . "??" expr
  422     | expr . '?' expr ':' expr
  425     | expr . "is" "type" '<' $@19 type_declaration_no_options '>' $@20
  426     | expr . "is" basic_type_declaration
  427     | expr . "is" "name"
  428     | expr . "as" "name"
  431     | expr . "as" "type" '<' $@21 type_declaration '>' $@22
  432     | expr . "as" basic_type_declaration
  433     | expr . '?' "as" "name"
  436     | expr . '?' "as" "type" '<' $@23 type_declaration '>' $@24
  437     | expr . '?' "as" basic_type_declaration
  445     | expr . "<|" expr
  446     | expr . "|>" expr
  447     | expr . "|>" basic_type_declaration
  458 expr_mtag: expr . '.' "$f" '(' expr ')'
  459          | expr . "?." "$f" '(' expr ')'
  460          | expr . '.' '.' "$f" '(' expr ')'
  461          | expr . '.' "?." "$f" '(' expr ')'
  462          | expr . "as" "$f" '(' expr ')'
  463          | expr . '?' "as" "$f" '(' expr ')'
  464          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 637
    "as"   shift, and go to state 638
    "<<"   shift, and go to state 639
    ">>"   shift, and go to state 640
    "++"   shift, and go to state 641
    "--"   shift, and go to state 642
    "->"   shift, and go to state 647
    "??"   shift, and go to state 648
    "?."   shift, and go to state 649
    "?["   shift, and go to state 650
    "<|"   shift, and go to state 651
    "|>"   shift, and go to state 652
    "<<<"  shift, and go to state 653
    ">>>"  shift, and go to state 654
    '-'    shift, and go to state 665
    '+'    shift, and go to state 666
    '*'    shift, and go to state 667
    '/'    shift, and go to state 668
    '%'    shift, and go to state 669
    '.'    shift, and go to state 670
    '['    shift, and go to state 671

    $default  reduce using rule 393 (expr)


State 847

  339 expr_method_call: expr . "->" "name" '(' ')'
  340                 | expr . "->" "name" '(' expr_list ')'
  350 expr_field: expr . '.' "name"
  351           | expr . '.' '.' "name"
  352           | expr . '.' "name" '(' ')'
  353           | expr . '.' "name" '(' expr_list ')'
  354           | expr . '.' basic_type_declaration '(' ')'
  355           | expr . '.' basic_type_declaration '(' expr_list ')'
  358           | expr . '.' $@17 error $@18
  380 expr: expr . "<<" expr
  381     | expr . ">>" expr
  382     | expr . "<<<" expr
  383     | expr . ">>>" expr
  384     | expr . '+' expr
  385     | expr . '-' expr
  386     | expr . '*' expr
  387     | expr . '/' expr
  388     | expr . '%' expr
  389     | expr . '<' expr
  390     | expr . '>' expr
  391     | expr . "==" expr
  392     | expr . "!=" expr
  393     | expr . "<=" expr
  394     | expr . ">=" expr
  394     | expr ">=" expr .
  395     | expr . '&' expr
  396     | expr . '|' expr
  397     | expr . '^' expr
  398     | expr . "&&" expr
  399     | expr . "||" expr
  400     | expr . "^^" expr
  401     | expr . ".." expr
  404     | expr . "++"
  405     | expr . "--"
  407     | expr . '[' expr ']'
  408     | expr . '.' '[' expr ']'
  409     | expr . "?[" expr ']'
  410     | expr . '.' "?[" expr ']'
  411     | expr . "?." "name"
  412     | expr . '.' "?." "name"
  421     | expr . "??" expr
  422     | expr . '?' expr ':' expr
  425     | expr . "is" "type" '<' $@19 type_declaration_no_options '>' $@20
  426     | expr . "is" basic_type_declaration
  427     | expr . "is" "name"
  428     | expr . "as" "name"
  431     | expr . "as" "type" '<' $@21 type_declaration '>' $@22
  432     | expr . "as" basic_type_declaration
  433     | expr . '?' "as" "name"
  436     | expr . '?' "as" "type" '<' $@23 type_declaration '>' $@24
  437     | expr . '?' "as" basic_type_declaration
  445     | expr . "<|" expr
  446     | expr . "|>" expr
  447     | expr . "|>" basic_type_declaration
  458 expr_mtag: expr . '.' "$f" '(' expr ')'
  459          | expr . "?." "$f" '(' expr ')'
  460          | expr . '.' '.' "$f" '(' expr ')'
  461          | expr . '.' "?." "$f" '(' expr ')'
  462          | expr . "as" "$f" '(' expr ')'
  463          | expr . '?' "as" "$f" '(' expr ')'
  464          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 637
    "as"   shift, and go to state 638
    "<<"   shift, and go to state 639
    ">>"   shift, and go to state 640
    "++"   shift, and go to state 641
    "--"   shift, and go to state 642
    "->"   shift, and go to state 647
    "??"   shift, and go to state 648
    "?."   shift, and go to state 649
    "?["   shift, and go to state 650
    "<|"   shift, and go to state 651
    "|>"   shift, and go to state 652
    "<<<"  shift, and go to state 653
    ">>>"  shift, and go to state 654
    '-'    shift, and go to state 665
    '+'    shift, and go to state 666
    '*'    shift, and go to state 667
    '/'    shift, and go to state 668
    '%'    shift, and go to state 669
    '.'    shift, and go to state 670
    '['    shift, and go to state 671

    $default  reduce using rule 394 (expr)


State 848

  339 expr_method_call: expr . "->" "name" '(' ')'
  340                 | expr . "->" "name" '(' expr_list ')'
  350 expr_field: expr . '.' "name"
  351           | expr . '.' '.' "name"
  352           | expr . '.' "name" '(' ')'
  353           | expr . '.' "name" '(' expr_list ')'
  354           | expr . '.' basic_type_declaration '(' ')'
  355           | expr . '.' basic_type_declaration '(' expr_list ')'
  358           | expr . '.' $@17 error $@18
  380 expr: expr . "<<" expr
  381     | expr . ">>" expr
  382     | expr . "<<<" expr
  383     | expr . ">>>" expr
  384     | expr . '+' expr
  385     | expr . '-' expr
  386     | expr . '*' expr
  387     | expr . '/' expr
  388     | expr . '%' expr
  389     | expr . '<' expr
  390     | expr . '>' expr
  391     | expr . "==" expr
  391     | expr "==" expr .
  392     | expr . "!=" expr
  393     | expr . "<=" expr
  394     | expr . ">=" expr
  395     | expr . '&' expr
  396     | expr . '|' expr
  397     | expr . '^' expr
  398     | expr . "&&" expr
  399     | expr . "||" expr
  400     | expr . "^^" expr
  401     | expr . ".." expr
  404     | expr . "++"
  405     | expr . "--"
  407     | expr . '[' expr ']'
  408     | expr . '.' '[' expr ']'
  409     | expr . "?[" expr ']'
  410     | expr . '.' "?[" expr ']'
  411     | expr . "?." "name"
  412     | expr . '.' "?." "name"
  421     | expr . "??" expr
  422     | expr . '?' expr ':' expr
  425     | expr . "is" "type" '<' $@19 type_declaration_no_options '>' $@20
  426     | expr . "is" basic_type_declaration
  427     | expr . "is" "name"
  428     | expr . "as" "name"
  431     | expr . "as" "type" '<' $@21 type_declaration '>' $@22
  432     | expr . "as" basic_type_declaration
  433     | expr . '?' "as" "name"
  436     | expr . '?' "as" "type" '<' $@23 type_declaration '>' $@24
  437     | expr . '?' "as" basic_type_declaration
  445     | expr . "<|" expr
  446     | expr . "|>" expr
  447     | expr . "|>" basic_type_declaration
  458 expr_mtag: expr . '.' "$f" '(' expr ')'
  459          | expr . "?." "$f" '(' expr ')'
  460          | expr . '.' '.' "$f" '(' expr ')'
  461          | expr . '.' "?." "$f" '(' expr ')'
  462          | expr . "as" "$f" '(' expr ')'
  463          | expr . '?' "as" "$f" '(' expr ')'
  464          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 637
    "as"   shift, and go to state 638
    "<<"   shift, and go to state 639
    ">>"   shift, and go to state 640
    "++"   shift, and go to state 641
    "--"   shift, and go to state 642
    "<="   shift, and go to state 643
    ">="   shift, and go to state 644
    "->"   shift, and go to state 647
    "??"   shift, and go to state 648
    "?."   shift, and go to state 649
    "?["   shift, and go to state 650
    "<|"   shift, and go to state 651
    "|>"   shift, and go to state 652
    "<<<"  shift, and go to state 653
    ">>>"  shift, and go to state 654
    '<'    shift, and go to state 663
    '>'    shift, and go to state 664
    '-'    shift, and go to state 665
    '+'    shift, and go to state 666
    '*'    shift, and go to state 667
    '/'    shift, and go to state 668
    '%'    shift, and go to state 669
    '.'    shift, and go to state 670
    '['    shift, and go to state 671

    $default  reduce using rule 391 (expr)


State 849

  339 expr_method_call: expr . "->" "name" '(' ')'
  340                 | expr . "->" "name" '(' expr_list ')'
  350 expr_field: expr . '.' "name"
  351           | expr . '.' '.' "name"
  352           | expr . '.' "name" '(' ')'
  353           | expr . '.' "name" '(' expr_list ')'
  354           | expr . '.' basic_type_declaration '(' ')'
  355           | expr . '.' basic_type_declaration '(' expr_list ')'
  358           | expr . '.' $@17 error $@18
  380 expr: expr . "<<" expr
  381     | expr . ">>" expr
  382     | expr . "<<<" expr
  383     | expr . ">>>" expr
  384     | expr . '+' expr
  385     | expr . '-' expr
  386     | expr . '*' expr
  387     | expr . '/' expr
  388     | expr . '%' expr
  389     | expr . '<' expr
  390     | expr . '>' expr
  391     | expr . "==" expr
  392     | expr . "!=" expr
  392     | expr "!=" expr .
  393     | expr . "<=" expr
  394     | expr . ">=" expr
  395     | expr . '&' expr
  396     | expr . '|' expr
  397     | expr . '^' expr
  398     | expr . "&&" expr
  399     | expr . "||" expr
  400     | expr . "^^" expr
  401     | expr . ".." expr
  404     | expr . "++"
  405     | expr . "--"
  407     | expr . '[' expr ']'
  408     | expr . '.' '[' expr ']'
  409     | expr . "?[" expr ']'
  410     | expr . '.' "?[" expr ']'
  411     | expr . "?." "name"
  412     | expr . '.' "?." "name"
  421     | expr . "??" expr
  422     | expr . '?' expr ':' expr
  425     | expr . "is" "type" '<' $@19 type_declaration_no_options '>' $@20
  426     | expr . "is" basic_type_declaration
  427     | expr . "is" "name"
  428     | expr . "as" "name"
  431     | expr . "as" "type" '<' $@21 type_declaration '>' $@22
  432     | expr . "as" basic_type_declaration
  433     | expr . '?' "as" "name"
  436     | expr . '?' "as" "type" '<' $@23 type_declaration '>' $@24
  437     | expr . '?' "as" basic_type_declaration
  445     | expr . "<|" expr
  446     | expr . "|>" expr
  447     | expr . "|>" basic_type_declaration
  458 expr_mtag: expr . '.' "$f" '(' expr ')'
  459          | expr . "?." "$f" '(' expr ')'
  460          | expr . '.' '.' "$f" '(' expr ')'
  461          | expr . '.' "?." "$f" '(' expr ')'
  462          | expr . "as" "$f" '(' expr ')'
  463          | expr . '?' "as" "$f" '(' expr ')'
  464          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 637
    "as"   shift, and go to state 638
    "<<"   shift, and go to state 639
    ">>"   shift, and go to state 640
    "++"   shift, and go to state 641
    "--"   shift, and go to state 642
    "<="   shift, and go to state 643
    ">="   shift, and go to state 644
    "->"   shift, and go to state 647
    "??"   shift, and go to state 648
    "?."   shift, and go to state 649
    "?["   shift, and go to state 650
    "<|"   shift, and go to state 651
    "|>"   shift, and go to state 652
    "<<<"  shift, and go to state 653
    ">>>"  shift, and go to state 654
    '<'    shift, and go to state 663
    '>'    shift, and go to state 664
    '-'    shift, and go to state 665
    '+'    shift, and go to state 666
    '*'    shift, and go to state 667
    '/'    shift, and go to state 668
    '%'    shift, and go to state 669
    '.'    shift, and go to state 670
    '['    shift, and go to state 671

    $default  reduce using rule 392 (expr)


State 850

  339 expr_method_call: expr "->" "name" . '(' ')'
  340                 | expr "->" "name" . '(' expr_list ')'

    '('  shift, and go to state 1036


State 851

  339 expr_method_call: expr . "->" "name" '(' ')'
  340                 | expr . "->" "name" '(' expr_list ')'
  350 expr_field: expr . '.' "name"
  351           | expr . '.' '.' "name"
  352           | expr . '.' "name" '(' ')'
  353           | expr . '.' "name" '(' expr_list ')'
  354           | expr . '.' basic_type_declaration '(' ')'
  355           | expr . '.' basic_type_declaration '(' expr_list ')'
  358           | expr . '.' $@17 error $@18
  380 expr: expr . "<<" expr
  381     | expr . ">>" expr
  382     | expr . "<<<" expr
  383     | expr . ">>>" expr
  384     | expr . '+' expr
  385     | expr . '-' expr
  386     | expr . '*' expr
  387     | expr . '/' expr
  388     | expr . '%' expr
  389     | expr . '<' expr
  390     | expr . '>' expr
  391     | expr . "==" expr
  392     | expr . "!=" expr
  393     | expr . "<=" expr
  394     | expr . ">=" expr
  395     | expr . '&' expr
  396     | expr . '|' expr
  397     | expr . '^' expr
  398     | expr . "&&" expr
  399     | expr . "||" expr
  400     | expr . "^^" expr
  401     | expr . ".." expr
  404     | expr . "++"
  405     | expr . "--"
  407     | expr . '[' expr ']'
  408     | expr . '.' '[' expr ']'
  409     | expr . "?[" expr ']'
  410     | expr . '.' "?[" expr ']'
  411     | expr . "?." "name"
  412     | expr . '.' "?." "name"
  421     | expr . "??" expr
  421     | expr "??" expr .
  422     | expr . '?' expr ':' expr
  425     | expr . "is" "type" '<' $@19 type_declaration_no_options '>' $@20
  426     | expr . "is" basic_type_declaration
  427     | expr . "is" "name"
  428     | expr . "as" "name"
  431     | expr . "as" "type" '<' $@21 type_declaration '>' $@22
  432     | expr . "as" basic_type_declaration
  433     | expr . '?' "as" "name"
  436     | expr . '?' "as" "type" '<' $@23 type_declaration '>' $@24
  437     | expr . '?' "as" basic_type_declaration
  445     | expr . "<|" expr
  446     | expr . "|>" expr
  447     | expr . "|>" basic_type_declaration
  458 expr_mtag: expr . '.' "$f" '(' expr ')'
  459          | expr . "?." "$f" '(' expr ')'
  460          | expr . '.' '.' "$f" '(' expr ')'
  461          | expr . '.' "?." "$f" '(' expr ')'
  462          | expr . "as" "$f" '(' expr ')'
  463          | expr . '?' "as" "$f" '(' expr ')'
  464          | expr . "is" "$f" '(' expr ')'

    "is"  shift, and go to state 637
    "as"  shift, and go to state 638
    "++"  shift, and go to state 641
    "--"  shift, and go to state 642
    "->"  shift, and go to state 647
    "??"  shift, and go to state 648
    "?."  shift, and go to state 649
    "?["  shift, and go to state 650
    "<|"  shift, and go to state 651
    "|>"  shift, and go to state 652
    '.'   shift, and go to state 670
    '['   shift, and go to state 671

    $default  reduce using rule 421 (expr)


State 852

  459 expr_mtag: expr "?." "$f" . '(' expr ')'

    '('  shift, and go to state 1037


State 853

  411 expr: expr "?." "name" .

    $default  reduce using rule 411 (expr)


State 854

  339 expr_method_call: expr . "->" "name" '(' ')'
  340                 | expr . "->" "name" '(' expr_list ')'
  350 expr_field: expr . '.' "name"
  351           | expr . '.' '.' "name"
  352           | expr . '.' "name" '(' ')'
  353           | expr . '.' "name" '(' expr_list ')'
  354           | expr . '.' basic_type_declaration '(' ')'
  355           | expr . '.' basic_type_declaration '(' expr_list ')'
  358           | expr . '.' $@17 error $@18
  380 expr: expr . "<<" expr
  381     | expr . ">>" expr
  382     | expr . "<<<" expr
  383     | expr . ">>>" expr
  384     | expr . '+' expr
  385     | expr . '-' expr
  386     | expr . '*' expr
  387     | expr . '/' expr
  388     | expr . '%' expr
  389     | expr . '<' expr
  390     | expr . '>' expr
  391     | expr . "==" expr
  392     | expr . "!=" expr
  393     | expr . "<=" expr
  394     | expr . ">=" expr
  395     | expr . '&' expr
  396     | expr . '|' expr
  397     | expr . '^' expr
  398     | expr . "&&" expr
  399     | expr . "||" expr
  400     | expr . "^^" expr
  401     | expr . ".." expr
  404     | expr . "++"
  405     | expr . "--"
  407     | expr . '[' expr ']'
  408     | expr . '.' '[' expr ']'
  409     | expr . "?[" expr ']'
  409     | expr "?[" expr . ']'
  410     | expr . '.' "?[" expr ']'
  411     | expr . "?." "name"
  412     | expr . '.' "?." "name"
  421     | expr . "??" expr
  422     | expr . '?' expr ':' expr
  425     | expr . "is" "type" '<' $@19 type_declaration_no_options '>' $@20
  426     | expr . "is" basic_type_declaration
  427     | expr . "is" "name"
  428     | expr . "as" "name"
  431     | expr . "as" "type" '<' $@21 type_declaration '>' $@22
  432     | expr . "as" basic_type_declaration
  433     | expr . '?' "as" "name"
  436     | expr . '?' "as" "type" '<' $@23 type_declaration '>' $@24
  437     | expr . '?' "as" basic_type_declaration
  445     | expr . "<|" expr
  446     | expr . "|>" expr
  447     | expr . "|>" basic_type_declaration
  458 expr_mtag: expr . '.' "$f" '(' expr ')'
  459          | expr . "?." "$f" '(' expr ')'
  460          | expr . '.' '.' "$f" '(' expr ')'
  461          | expr . '.' "?." "$f" '(' expr ')'
  462          | expr . "as" "$f" '(' expr ')'
  463          | expr . '?' "as" "$f" '(' expr ')'
  464          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 637
    "as"   shift, and go to state 638
    "<<"   shift, and go to state 639
    ">>"   shift, and go to state 640
    "++"   shift, and go to state 641
    "--"   shift, and go to state 642
    "<="   shift, and go to state 643
    ">="   shift, and go to state 644
    "=="   shift, and go to state 645
    "!="   shift, and go to state 646
    "->"   shift, and go to state 647
    "??"   shift, and go to state 648
    "?."   shift, and go to state 649
    "?["   shift, and go to state 650
    "<|"   shift, and go to state 651
    "|>"   shift, and go to state 652
    "<<<"  shift, and go to state 653
    ">>>"  shift, and go to state 654
    "&&"   shift, and go to state 655
    "||"   shift, and go to state 656
    "^^"   shift, and go to state 657
    ".."   shift, and go to state 658
    '?'    shift, and go to state 659
    '|'    shift, and go to state 660
    '^'    shift, and go to state 661
    '&'    shift, and go to state 662
    '<'    shift, and go to state 663
    '>'    shift, and go to state 664
    '-'    shift, and go to state 665
    '+'    shift, and go to state 666
    '*'    shift, and go to state 667
    '/'    shift, and go to state 668
    '%'    shift, and go to state 669
    '.'    shift, and go to state 670
    '['    shift, and go to state 671
    ']'    shift, and go to state 1038


State 855

  339 expr_method_call: expr . "->" "name" '(' ')'
  340                 | expr . "->" "name" '(' expr_list ')'
  350 expr_field: expr . '.' "name"
  351           | expr . '.' '.' "name"
  352           | expr . '.' "name" '(' ')'
  353           | expr . '.' "name" '(' expr_list ')'
  354           | expr . '.' basic_type_declaration '(' ')'
  355           | expr . '.' basic_type_declaration '(' expr_list ')'
  358           | expr . '.' $@17 error $@18
  380 expr: expr . "<<" expr
  381     | expr . ">>" expr
  382     | expr . "<<<" expr
  383     | expr . ">>>" expr
  384     | expr . '+' expr
  385     | expr . '-' expr
  386     | expr . '*' expr
  387     | expr . '/' expr
  388     | expr . '%' expr
  389     | expr . '<' expr
  390     | expr . '>' expr
  391     | expr . "==" expr
  392     | expr . "!=" expr
  393     | expr . "<=" expr
  394     | expr . ">=" expr
  395     | expr . '&' expr
  396     | expr . '|' expr
  397     | expr . '^' expr
  398     | expr . "&&" expr
  399     | expr . "||" expr
  400     | expr . "^^" expr
  401     | expr . ".." expr
  404     | expr . "++"
  405     | expr . "--"
  407     | expr . '[' expr ']'
  408     | expr . '.' '[' expr ']'
  409     | expr . "?[" expr ']'
  410     | expr . '.' "?[" expr ']'
  411     | expr . "?." "name"
  412     | expr . '.' "?." "name"
  421     | expr . "??" expr
  422     | expr . '?' expr ':' expr
  425     | expr . "is" "type" '<' $@19 type_declaration_no_options '>' $@20
  426     | expr . "is" basic_type_declaration
  427     | expr . "is" "name"
  428     | expr . "as" "name"
  431     | expr . "as" "type" '<' $@21 type_declaration '>' $@22
  432     | expr . "as" basic_type_declaration
  433     | expr . '?' "as" "name"
  436     | expr . '?' "as" "type" '<' $@23 type_declaration '>' $@24
  437     | expr . '?' "as" basic_type_declaration
  445     | expr . "<|" expr
  445     | expr "<|" expr .
  446     | expr . "|>" expr
  447     | expr . "|>" basic_type_declaration
  458 expr_mtag: expr . '.' "$f" '(' expr ')'
  459          | expr . "?." "$f" '(' expr ')'
  460          | expr . '.' '.' "$f" '(' expr ')'
  461          | expr . '.' "?." "$f" '(' expr ')'
  462          | expr . "as" "$f" '(' expr ')'
  463          | expr . '?' "as" "$f" '(' expr ')'
  464          | expr . "is" "$f" '(' expr ')'

    "->"  shift, and go to state 647
    "?."  shift, and go to state 649
    "?["  shift, and go to state 650
    '.'   shift, and go to state 670
    '['   shift, and go to state 671

    $default  reduce using rule 445 (expr)


State 856

  339 expr_method_call: expr . "->" "name" '(' ')'
  340                 | expr . "->" "name" '(' expr_list ')'
  350 expr_field: expr . '.' "name"
  351           | expr . '.' '.' "name"
  352           | expr . '.' "name" '(' ')'
  353           | expr . '.' "name" '(' expr_list ')'
  354           | expr . '.' basic_type_declaration '(' ')'
  355           | expr . '.' basic_type_declaration '(' expr_list ')'
  358           | expr . '.' $@17 error $@18
  380 expr: expr . "<<" expr
  381     | expr . ">>" expr
  382     | expr . "<<<" expr
  383     | expr . ">>>" expr
  384     | expr . '+' expr
  385     | expr . '-' expr
  386     | expr . '*' expr
  387     | expr . '/' expr
  388     | expr . '%' expr
  389     | expr . '<' expr
  390     | expr . '>' expr
  391     | expr . "==" expr
  392     | expr . "!=" expr
  393     | expr . "<=" expr
  394     | expr . ">=" expr
  395     | expr . '&' expr
  396     | expr . '|' expr
  397     | expr . '^' expr
  398     | expr . "&&" expr
  399     | expr . "||" expr
  400     | expr . "^^" expr
  401     | expr . ".." expr
  404     | expr . "++"
  405     | expr . "--"
  407     | expr . '[' expr ']'
  408     | expr . '.' '[' expr ']'
  409     | expr . "?[" expr ']'
  410     | expr . '.' "?[" expr ']'
  411     | expr . "?." "name"
  412     | expr . '.' "?." "name"
  421     | expr . "??" expr
  422     | expr . '?' expr ':' expr
  425     | expr . "is" "type" '<' $@19 type_declaration_no_options '>' $@20
  426     | expr . "is" basic_type_declaration
  427     | expr . "is" "name"
  428     | expr . "as" "name"
  431     | expr . "as" "type" '<' $@21 type_declaration '>' $@22
  432     | expr . "as" basic_type_declaration
  433     | expr . '?' "as" "name"
  436     | expr . '?' "as" "type" '<' $@23 type_declaration '>' $@24
  437     | expr . '?' "as" basic_type_declaration
  445     | expr . "<|" expr
  446     | expr . "|>" expr
  446     | expr "|>" expr .
  447     | expr . "|>" basic_type_declaration
  458 expr_mtag: expr . '.' "$f" '(' expr ')'
  459          | expr . "?." "$f" '(' expr ')'
  460          | expr . '.' '.' "$f" '(' expr ')'
  461          | expr . '.' "?." "$f" '(' expr ')'
  462          | expr . "as" "$f" '(' expr ')'
  463          | expr . '?' "as" "$f" '(' expr ')'
  464          | expr . "is" "$f" '(' expr ')'

    "->"  shift, and go to state 647
    "?."  shift, and go to state 649
    "?["  shift, and go to state 650
    '.'   shift, and go to state 670
    '['   shift, and go to state 671

    $default  reduce using rule 446 (expr)


State 857

  364 expr_call: basic_type_declaration . '(' ')'
  365          | basic_type_declaration . '(' expr_list ')'
  447 expr: expr "|>" basic_type_declaration .

    '('  shift, and go to state 673

    $default  reduce using rule 447 (expr)


State 858

  339 expr_method_call: expr . "->" "name" '(' ')'
  340                 | expr . "->" "name" '(' expr_list ')'
  350 expr_field: expr . '.' "name"
  351           | expr . '.' '.' "name"
  352           | expr . '.' "name" '(' ')'
  353           | expr . '.' "name" '(' expr_list ')'
  354           | expr . '.' basic_type_declaration '(' ')'
  355           | expr . '.' basic_type_declaration '(' expr_list ')'
  358           | expr . '.' $@17 error $@18
  380 expr: expr . "<<" expr
  381     | expr . ">>" expr
  382     | expr . "<<<" expr
  382     | expr "<<<" expr .
  383     | expr . ">>>" expr
  384     | expr . '+' expr
  385     | expr . '-' expr
  386     | expr . '*' expr
  387     | expr . '/' expr
  388     | expr . '%' expr
  389     | expr . '<' expr
  390     | expr . '>' expr
  391     | expr . "==" expr
  392     | expr . "!=" expr
  393     | expr . "<=" expr
  394     | expr . ">=" expr
  395     | expr . '&' expr
  396     | expr . '|' expr
  397     | expr . '^' expr
  398     | expr . "&&" expr
  399     | expr . "||" expr
  400     | expr . "^^" expr
  401     | expr . ".." expr
  404     | expr . "++"
  405     | expr . "--"
  407     | expr . '[' expr ']'
  408     | expr . '.' '[' expr ']'
  409     | expr . "?[" expr ']'
  410     | expr . '.' "?[" expr ']'
  411     | expr . "?." "name"
  412     | expr . '.' "?." "name"
  421     | expr . "??" expr
  422     | expr . '?' expr ':' expr
  425     | expr . "is" "type" '<' $@19 type_declaration_no_options '>' $@20
  426     | expr . "is" basic_type_declaration
  427     | expr . "is" "name"
  428     | expr . "as" "name"
  431     | expr . "as" "type" '<' $@21 type_declaration '>' $@22
  432     | expr . "as" basic_type_declaration
  433     | expr . '?' "as" "name"
  436     | expr . '?' "as" "type" '<' $@23 type_declaration '>' $@24
  437     | expr . '?' "as" basic_type_declaration
  445     | expr . "<|" expr
  446     | expr . "|>" expr
  447     | expr . "|>" basic_type_declaration
  458 expr_mtag: expr . '.' "$f" '(' expr ')'
  459          | expr . "?." "$f" '(' expr ')'
  460          | expr . '.' '.' "$f" '(' expr ')'
  461          | expr . '.' "?." "$f" '(' expr ')'
  462          | expr . "as" "$f" '(' expr ')'
  463          | expr . '?' "as" "$f" '(' expr ')'
  464          | expr . "is" "$f" '(' expr ')'

    "is"  shift, and go to state 637
    "as"  shift, and go to state 638
    "++"  shift, and go to state 641
    "--"  shift, and go to state 642
    "->"  shift, and go to state 647
    "??"  shift, and go to state 648
    "?."  shift, and go to state 649
    "?["  shift, and go to state 650
    "<|"  shift, and go to state 651
    "|>"  shift, and go to state 652
    '-'   shift, and go to state 665
    '+'   shift, and go to state 666
    '*'   shift, and go to state 667
    '/'   shift, and go to state 668
    '%'   shift, and go to state 669
    '.'   shift, and go to state 670
    '['   shift, and go to state 671

    $default  reduce using rule 382 (expr)


State 859

  339 expr_method_call: expr . "->" "name" '(' ')'
  340                 | expr . "->" "name" '(' expr_list ')'
  350 expr_field: expr . '.' "name"
  351           | expr . '.' '.' "name"
  352           | expr . '.' "name" '(' ')'
  353           | expr . '.' "name" '(' expr_list ')'
  354           | expr . '.' basic_type_declaration '(' ')'
  355           | expr . '.' basic_type_declaration '(' expr_list ')'
  358           | expr . '.' $@17 error $@18
  380 expr: expr . "<<" expr
  381     | expr . ">>" expr
  382     | expr . "<<<" expr
  383     | expr . ">>>" expr
  383     | expr ">>>" expr .
  384     | expr . '+' expr
  385     | expr . '-' expr
  386     | expr . '*' expr
  387     | expr . '/' expr
  388     | expr . '%' expr
  389     | expr . '<' expr
  390     | expr . '>' expr
  391     | expr . "==" expr
  392     | expr . "!=" expr
  393     | expr . "<=" expr
  394     | expr . ">=" expr
  395     | expr . '&' expr
  396     | expr . '|' expr
  397     | expr . '^' expr
  398     | expr . "&&" expr
  399     | expr . "||" expr
  400     | expr . "^^" expr
  401     | expr . ".." expr
  404     | expr . "++"
  405     | expr . "--"
  407     | expr . '[' expr ']'
  408     | expr . '.' '[' expr ']'
  409     | expr . "?[" expr ']'
  410     | expr . '.' "?[" expr ']'
  411     | expr . "?." "name"
  412     | expr . '.' "?." "name"
  421     | expr . "??" expr
  422     | expr . '?' expr ':' expr
  425     | expr . "is" "type" '<' $@19 type_declaration_no_options '>' $@20
  426     | expr . "is" basic_type_declaration
  427     | expr . "is" "name"
  428     | expr . "as" "name"
  431     | expr . "as" "type" '<' $@21 type_declaration '>' $@22
  432     | expr . "as" basic_type_declaration
  433     | expr . '?' "as" "name"
  436     | expr . '?' "as" "type" '<' $@23 type_declaration '>' $@24
  437     | expr . '?' "as" basic_type_declaration
  445     | expr . "<|" expr
  446     | expr . "|>" expr
  447     | expr . "|>" basic_type_declaration
  458 expr_mtag: expr . '.' "$f" '(' expr ')'
  459          | expr . "?." "$f" '(' expr ')'
  460          | expr . '.' '.' "$f" '(' expr ')'
  461          | expr . '.' "?." "$f" '(' expr ')'
  462          | expr . "as" "$f" '(' expr ')'
  463          | expr . '?' "as" "$f" '(' expr ')'
  464          | expr . "is" "$f" '(' expr ')'

    "is"  shift, and go to state 637
    "as"  shift, and go to state 638
    "++"  shift, and go to state 641
    "--"  shift, and go to state 642
    "->"  shift, and go to state 647
    "??"  shift, and go to state 648
    "?."  shift, and go to state 649
    "?["  shift, and go to state 650
    "<|"  shift, and go to state 651
    "|>"  shift, and go to state 652
    '-'   shift, and go to state 665
    '+'   shift, and go to state 666
    '*'   shift, and go to state 667
    '/'   shift, and go to state 668
    '%'   shift, and go to state 669
    '.'   shift, and go to state 670
    '['   shift, and go to state 671

    $default  reduce using rule 383 (expr)


State 860

  339 expr_method_call: expr . "->" "name" '(' ')'
  340                 | expr . "->" "name" '(' expr_list ')'
  350 expr_field: expr . '.' "name"
  351           | expr . '.' '.' "name"
  352           | expr . '.' "name" '(' ')'
  353           | expr . '.' "name" '(' expr_list ')'
  354           | expr . '.' basic_type_declaration '(' ')'
  355           | expr . '.' basic_type_declaration '(' expr_list ')'
  358           | expr . '.' $@17 error $@18
  380 expr: expr . "<<" expr
  381     | expr . ">>" expr
  382     | expr . "<<<" expr
  383     | expr . ">>>" expr
  384     | expr . '+' expr
  385     | expr . '-' expr
  386     | expr . '*' expr
  387     | expr . '/' expr
  388     | expr . '%' expr
  389     | expr . '<' expr
  390     | expr . '>' expr
  391     | expr . "==" expr
  392     | expr . "!=" expr
  393     | expr . "<=" expr
  394     | expr . ">=" expr
  395     | expr . '&' expr
  396     | expr . '|' expr
  397     | expr . '^' expr
  398     | expr . "&&" expr
  398     | expr "&&" expr .
  399     | expr . "||" expr
  400     | expr . "^^" expr
  401     | expr . ".." expr
  404     | expr . "++"
  405     | expr . "--"
  407     | expr . '[' expr ']'
  408     | expr . '.' '[' expr ']'
  409     | expr . "?[" expr ']'
  410     | expr . '.' "?[" expr ']'
  411     | expr . "?." "name"
  412     | expr . '.' "?." "name"
  421     | expr . "??" expr
  422     | expr . '?' expr ':' expr
  425     | expr . "is" "type" '<' $@19 type_declaration_no_options '>' $@20
  426     | expr . "is" basic_type_declaration
  427     | expr . "is" "name"
  428     | expr . "as" "name"
  431     | expr . "as" "type" '<' $@21 type_declaration '>' $@22
  432     | expr . "as" basic_type_declaration
  433     | expr . '?' "as" "name"
  436     | expr . '?' "as" "type" '<' $@23 type_declaration '>' $@24
  437     | expr . '?' "as" basic_type_declaration
  445     | expr . "<|" expr
  446     | expr . "|>" expr
  447     | expr . "|>" basic_type_declaration
  458 expr_mtag: expr . '.' "$f" '(' expr ')'
  459          | expr . "?." "$f" '(' expr ')'
  460          | expr . '.' '.' "$f" '(' expr ')'
  461          | expr . '.' "?." "$f" '(' expr ')'
  462          | expr . "as" "$f" '(' expr ')'
  463          | expr . '?' "as" "$f" '(' expr ')'
  464          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 637
    "as"   shift, and go to state 638
    "<<"   shift, and go to state 639
    ">>"   shift, and go to state 640
    "++"   shift, and go to state 641
    "--"   shift, and go to state 642
    "<="   shift, and go to state 643
    ">="   shift, and go to state 644
    "=="   shift, and go to state 645
    "!="   shift, and go to state 646
    "->"   shift, and go to state 647
    "??"   shift, and go to state 648
    "?."   shift, and go to state 649
    "?["   shift, and go to state 650
    "<|"   shift, and go to state 651
    "|>"   shift, and go to state 652
    "<<<"  shift, and go to state 653
    ">>>"  shift, and go to state 654
    '|'    shift, and go to state 660
    '^'    shift, and go to state 661
    '&'    shift, and go to state 662
    '<'    shift, and go to state 663
    '>'    shift, and go to state 664
    '-'    shift, and go to state 665
    '+'    shift, and go to state 666
    '*'    shift, and go to state 667
    '/'    shift, and go to state 668
    '%'    shift, and go to state 669
    '.'    shift, and go to state 670
    '['    shift, and go to state 671

    $default  reduce using rule 398 (expr)


State 861

  339 expr_method_call: expr . "->" "name" '(' ')'
  340                 | expr . "->" "name" '(' expr_list ')'
  350 expr_field: expr . '.' "name"
  351           | expr . '.' '.' "name"
  352           | expr . '.' "name" '(' ')'
  353           | expr . '.' "name" '(' expr_list ')'
  354           | expr . '.' basic_type_declaration '(' ')'
  355           | expr . '.' basic_type_declaration '(' expr_list ')'
  358           | expr . '.' $@17 error $@18
  380 expr: expr . "<<" expr
  381     | expr . ">>" expr
  382     | expr . "<<<" expr
  383     | expr . ">>>" expr
  384     | expr . '+' expr
  385     | expr . '-' expr
  386     | expr . '*' expr
  387     | expr . '/' expr
  388     | expr . '%' expr
  389     | expr . '<' expr
  390     | expr . '>' expr
  391     | expr . "==" expr
  392     | expr . "!=" expr
  393     | expr . "<=" expr
  394     | expr . ">=" expr
  395     | expr . '&' expr
  396     | expr . '|' expr
  397     | expr . '^' expr
  398     | expr . "&&" expr
  399     | expr . "||" expr
  399     | expr "||" expr .
  400     | expr . "^^" expr
  401     | expr . ".." expr
  404     | expr . "++"
  405     | expr . "--"
  407     | expr . '[' expr ']'
  408     | expr . '.' '[' expr ']'
  409     | expr . "?[" expr ']'
  410     | expr . '.' "?[" expr ']'
  411     | expr . "?." "name"
  412     | expr . '.' "?." "name"
  421     | expr . "??" expr
  422     | expr . '?' expr ':' expr
  425     | expr . "is" "type" '<' $@19 type_declaration_no_options '>' $@20
  426     | expr . "is" basic_type_declaration
  427     | expr . "is" "name"
  428     | expr . "as" "name"
  431     | expr . "as" "type" '<' $@21 type_declaration '>' $@22
  432     | expr . "as" basic_type_declaration
  433     | expr . '?' "as" "name"
  436     | expr . '?' "as" "type" '<' $@23 type_declaration '>' $@24
  437     | expr . '?' "as" basic_type_declaration
  445     | expr . "<|" expr
  446     | expr . "|>" expr
  447     | expr . "|>" basic_type_declaration
  458 expr_mtag: expr . '.' "$f" '(' expr ')'
  459          | expr . "?." "$f" '(' expr ')'
  460          | expr . '.' '.' "$f" '(' expr ')'
  461          | expr . '.' "?." "$f" '(' expr ')'
  462          | expr . "as" "$f" '(' expr ')'
  463          | expr . '?' "as" "$f" '(' expr ')'
  464          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 637
    "as"   shift, and go to state 638
    "<<"   shift, and go to state 639
    ">>"   shift, and go to state 640
    "++"   shift, and go to state 641
    "--"   shift, and go to state 642
    "<="   shift, and go to state 643
    ">="   shift, and go to state 644
    "=="   shift, and go to state 645
    "!="   shift, and go to state 646
    "->"   shift, and go to state 647
    "??"   shift, and go to state 648
    "?."   shift, and go to state 649
    "?["   shift, and go to state 650
    "<|"   shift, and go to state 651
    "|>"   shift, and go to state 652
    "<<<"  shift, and go to state 653
    ">>>"  shift, and go to state 654
    "&&"   shift, and go to state 655
    "^^"   shift, and go to state 657
    '|'    shift, and go to state 660
    '^'    shift, and go to state 661
    '&'    shift, and go to state 662
    '<'    shift, and go to state 663
    '>'    shift, and go to state 664
    '-'    shift, and go to state 665
    '+'    shift, and go to state 666
    '*'    shift, and go to state 667
    '/'    shift, and go to state 668
    '%'    shift, and go to state 669
    '.'    shift, and go to state 670
    '['    shift, and go to state 671

    $default  reduce using rule 399 (expr)


State 862

  339 expr_method_call: expr . "->" "name" '(' ')'
  340                 | expr . "->" "name" '(' expr_list ')'
  350 expr_field: expr . '.' "name"
  351           | expr . '.' '.' "name"
  352           | expr . '.' "name" '(' ')'
  353           | expr . '.' "name" '(' expr_list ')'
  354           | expr . '.' basic_type_declaration '(' ')'
  355           | expr . '.' basic_type_declaration '(' expr_list ')'
  358           | expr . '.' $@17 error $@18
  380 expr: expr . "<<" expr
  381     | expr . ">>" expr
  382     | expr . "<<<" expr
  383     | expr . ">>>" expr
  384     | expr . '+' expr
  385     | expr . '-' expr
  386     | expr . '*' expr
  387     | expr . '/' expr
  388     | expr . '%' expr
  389     | expr . '<' expr
  390     | expr . '>' expr
  391     | expr . "==" expr
  392     | expr . "!=" expr
  393     | expr . "<=" expr
  394     | expr . ">=" expr
  395     | expr . '&' expr
  396     | expr . '|' expr
  397     | expr . '^' expr
  398     | expr . "&&" expr
  399     | expr . "||" expr
  400     | expr . "^^" expr
  400     | expr "^^" expr .
  401     | expr . ".." expr
  404     | expr . "++"
  405     | expr . "--"
  407     | expr . '[' expr ']'
  408     | expr . '.' '[' expr ']'
  409     | expr . "?[" expr ']'
  410     | expr . '.' "?[" expr ']'
  411     | expr . "?." "name"
  412     | expr . '.' "?." "name"
  421     | expr . "??" expr
  422     | expr . '?' expr ':' expr
  425     | expr . "is" "type" '<' $@19 type_declaration_no_options '>' $@20
  426     | expr . "is" basic_type_declaration
  427     | expr . "is" "name"
  428     | expr . "as" "name"
  431     | expr . "as" "type" '<' $@21 type_declaration '>' $@22
  432     | expr . "as" basic_type_declaration
  433     | expr . '?' "as" "name"
  436     | expr . '?' "as" "type" '<' $@23 type_declaration '>' $@24
  437     | expr . '?' "as" basic_type_declaration
  445     | expr . "<|" expr
  446     | expr . "|>" expr
  447     | expr . "|>" basic_type_declaration
  458 expr_mtag: expr . '.' "$f" '(' expr ')'
  459          | expr . "?." "$f" '(' expr ')'
  460          | expr . '.' '.' "$f" '(' expr ')'
  461          | expr . '.' "?." "$f" '(' expr ')'
  462          | expr . "as" "$f" '(' expr ')'
  463          | expr . '?' "as" "$f" '(' expr ')'
  464          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 637
    "as"   shift, and go to state 638
    "<<"   shift, and go to state 639
    ">>"   shift, and go to state 640
    "++"   shift, and go to state 641
    "--"   shift, and go to state 642
    "<="   shift, and go to state 643
    ">="   shift, and go to state 644
    "=="   shift, and go to state 645
    "!="   shift, and go to state 646
    "->"   shift, and go to state 647
    "??"   shift, and go to state 648
    "?."   shift, and go to state 649
    "?["   shift, and go to state 650
    "<|"   shift, and go to state 651
    "|>"   shift, and go to state 652
    "<<<"  shift, and go to state 653
    ">>>"  shift, and go to state 654
    "&&"   shift, and go to state 655
    '|'    shift, and go to state 660
    '^'    shift, and go to state 661
    '&'    shift, and go to state 662
    '<'    shift, and go to state 663
    '>'    shift, and go to state 664
    '-'    shift, and go to state 665
    '+'    shift, and go to state 666
    '*'    shift, and go to state 667
    '/'    shift, and go to state 668
    '%'    shift, and go to state 669
    '.'    shift, and go to state 670
    '['    shift, and go to state 671

    $default  reduce using rule 400 (expr)


State 863

  339 expr_method_call: expr . "->" "name" '(' ')'
  340                 | expr . "->" "name" '(' expr_list ')'
  350 expr_field: expr . '.' "name"
  351           | expr . '.' '.' "name"
  352           | expr . '.' "name" '(' ')'
  353           | expr . '.' "name" '(' expr_list ')'
  354           | expr . '.' basic_type_declaration '(' ')'
  355           | expr . '.' basic_type_declaration '(' expr_list ')'
  358           | expr . '.' $@17 error $@18
  380 expr: expr . "<<" expr
  381     | expr . ">>" expr
  382     | expr . "<<<" expr
  383     | expr . ">>>" expr
  384     | expr . '+' expr
  385     | expr . '-' expr
  386     | expr . '*' expr
  387     | expr . '/' expr
  388     | expr . '%' expr
  389     | expr . '<' expr
  390     | expr . '>' expr
  391     | expr . "==" expr
  392     | expr . "!=" expr
  393     | expr . "<=" expr
  394     | expr . ">=" expr
  395     | expr . '&' expr
  396     | expr . '|' expr
  397     | expr . '^' expr
  398     | expr . "&&" expr
  399     | expr . "||" expr
  400     | expr . "^^" expr
  401     | expr . ".." expr
  401     | expr ".." expr .
  404     | expr . "++"
  405     | expr . "--"
  407     | expr . '[' expr ']'
  408     | expr . '.' '[' expr ']'
  409     | expr . "?[" expr ']'
  410     | expr . '.' "?[" expr ']'
  411     | expr . "?." "name"
  412     | expr . '.' "?." "name"
  421     | expr . "??" expr
  422     | expr . '?' expr ':' expr
  425     | expr . "is" "type" '<' $@19 type_declaration_no_options '>' $@20
  426     | expr . "is" basic_type_declaration
  427     | expr . "is" "name"
  428     | expr . "as" "name"
  431     | expr . "as" "type" '<' $@21 type_declaration '>' $@22
  432     | expr . "as" basic_type_declaration
  433     | expr . '?' "as" "name"
  436     | expr . '?' "as" "type" '<' $@23 type_declaration '>' $@24
  437     | expr . '?' "as" basic_type_declaration
  445     | expr . "<|" expr
  446     | expr . "|>" expr
  447     | expr . "|>" basic_type_declaration
  458 expr_mtag: expr . '.' "$f" '(' expr ')'
  459          | expr . "?." "$f" '(' expr ')'
  460          | expr . '.' '.' "$f" '(' expr ')'
  461          | expr . '.' "?." "$f" '(' expr ')'
  462          | expr . "as" "$f" '(' expr ')'
  463          | expr . '?' "as" "$f" '(' expr ')'
  464          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 637
    "as"   shift, and go to state 638
    "<<"   shift, and go to state 639
    ">>"   shift, and go to state 640
    "++"   shift, and go to state 641
    "--"   shift, and go to state 642
    "<="   shift, and go to state 643
    ">="   shift, and go to state 644
    "=="   shift, and go to state 645
    "!="   shift, and go to state 646
    "->"   shift, and go to state 647
    "??"   shift, and go to state 648
    "?."   shift, and go to state 649
    "?["   shift, and go to state 650
    "<|"   shift, and go to state 651
    "|>"   shift, and go to state 652
    "<<<"  shift, and go to state 653
    ">>>"  shift, and go to state 654
    "&&"   shift, and go to state 655
    "||"   shift, and go to state 656
    "^^"   shift, and go to state 657
    '?'    shift, and go to state 659
    '|'    shift, and go to state 660
    '^'    shift, and go to state 661
    '&'    shift, and go to state 662
    '<'    shift, and go to state 663
    '>'    shift, and go to state 664
    '-'    shift, and go to state 665
    '+'    shift, and go to state 666
    '*'    shift, and go to state 667
    '/'    shift, and go to state 668
    '%'    shift, and go to state 669
    '.'    shift, and go to state 670
    '['    shift, and go to state 671

    ".."  error (nonassociative)

    $default  reduce using rule 401 (expr)


State 864

  433 expr: expr '?' "as" . "name"
  436     | expr '?' "as" . "type" '<' $@23 type_declaration '>' $@24
  437     | expr '?' "as" . basic_type_declaration
  463 expr_mtag: expr '?' "as" . "$f" '(' expr ')'

    "type"      shift, and go to state 1039
    "bool"      shift, and go to state 222
    "void"      shift, and go to state 223
    "string"    shift, and go to state 224
    "int"       shift, and go to state 226
    "int2"      shift, and go to state 227
    "int3"      shift, and go to state 228
    "int4"      shift, and go to state 229
    "uint"      shift, and go to state 230
    "bitfield"  shift, and go to state 420
    "uint2"     shift, and go to state 232
    "uint3"     shift, and go to state 233
    "uint4"     shift, and go to state 234
    "float"     shift, and go to state 235
    "float2"    shift, and go to state 236
    "float3"    shift, and go to state 237
    "float4"    shift, and go to state 238
    "range"     shift, and go to state 239
    "urange"    shift, and go to state 240
    "range64"   shift, and go to state 241
    "urange64"  shift, and go to state 242
    "int64"     shift, and go to state 244
    "uint64"    shift, and go to state 245
    "double"    shift, and go to state 246
    "int8"      shift, and go to state 249
    "uint8"     shift, and go to state 250
    "int16"     shift, and go to state 251
    "uint16"    shift, and go to state 252
    "$f"        shift, and go to state 1040
    "name"      shift, and go to state 1041

    basic_type_declaration  go to state 1042


State 865

  339 expr_method_call: expr . "->" "name" '(' ')'
  340                 | expr . "->" "name" '(' expr_list ')'
  350 expr_field: expr . '.' "name"
  351           | expr . '.' '.' "name"
  352           | expr . '.' "name" '(' ')'
  353           | expr . '.' "name" '(' expr_list ')'
  354           | expr . '.' basic_type_declaration '(' ')'
  355           | expr . '.' basic_type_declaration '(' expr_list ')'
  358           | expr . '.' $@17 error $@18
  380 expr: expr . "<<" expr
  381     | expr . ">>" expr
  382     | expr . "<<<" expr
  383     | expr . ">>>" expr
  384     | expr . '+' expr
  385     | expr . '-' expr
  386     | expr . '*' expr
  387     | expr . '/' expr
  388     | expr . '%' expr
  389     | expr . '<' expr
  390     | expr . '>' expr
  391     | expr . "==" expr
  392     | expr . "!=" expr
  393     | expr . "<=" expr
  394     | expr . ">=" expr
  395     | expr . '&' expr
  396     | expr . '|' expr
  397     | expr . '^' expr
  398     | expr . "&&" expr
  399     | expr . "||" expr
  400     | expr . "^^" expr
  401     | expr . ".." expr
  404     | expr . "++"
  405     | expr . "--"
  407     | expr . '[' expr ']'
  408     | expr . '.' '[' expr ']'
  409     | expr . "?[" expr ']'
  410     | expr . '.' "?[" expr ']'
  411     | expr . "?." "name"
  412     | expr . '.' "?." "name"
  421     | expr . "??" expr
  422     | expr . '?' expr ':' expr
  422     | expr '?' expr . ':' expr
  425     | expr . "is" "type" '<' $@19 type_declaration_no_options '>' $@20
  426     | expr . "is" basic_type_declaration
  427     | expr . "is" "name"
  428     | expr . "as" "name"
  431     | expr . "as" "type" '<' $@21 type_declaration '>' $@22
  432     | expr . "as" basic_type_declaration
  433     | expr . '?' "as" "name"
  436     | expr . '?' "as" "type" '<' $@23 type_declaration '>' $@24
  437     | expr . '?' "as" basic_type_declaration
  445     | expr . "<|" expr
  446     | expr . "|>" expr
  447     | expr . "|>" basic_type_declaration
  458 expr_mtag: expr . '.' "$f" '(' expr ')'
  459          | expr . "?." "$f" '(' expr ')'
  460          | expr . '.' '.' "$f" '(' expr ')'
  461          | expr . '.' "?." "$f" '(' expr ')'
  462          | expr . "as" "$f" '(' expr ')'
  463          | expr . '?' "as" "$f" '(' expr ')'
  464          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 637
    "as"   shift, and go to state 638
    "<<"   shift, and go to state 639
    ">>"   shift, and go to state 640
    "++"   shift, and go to state 641
    "--"   shift, and go to state 642
    "<="   shift, and go to state 643
    ">="   shift, and go to state 644
    "=="   shift, and go to state 645
    "!="   shift, and go to state 646
    "->"   shift, and go to state 647
    "??"   shift, and go to state 648
    "?."   shift, and go to state 649
    "?["   shift, and go to state 650
    "<|"   shift, and go to state 651
    "|>"   shift, and go to state 652
    "<<<"  shift, and go to state 653
    ">>>"  shift, and go to state 654
    "&&"   shift, and go to state 655
    "||"   shift, and go to state 656
    "^^"   shift, and go to state 657
    ".."   shift, and go to state 658
    '?'    shift, and go to state 659
    ':'    shift, and go to state 1043
    '|'    shift, and go to state 660
    '^'    shift, and go to state 661
    '&'    shift, and go to state 662
    '<'    shift, and go to state 663
    '>'    shift, and go to state 664
    '-'    shift, and go to state 665
    '+'    shift, and go to state 666
    '*'    shift, and go to state 667
    '/'    shift, and go to state 668
    '%'    shift, and go to state 669
    '.'    shift, and go to state 670
    '['    shift, and go to state 671


State 866

  339 expr_method_call: expr . "->" "name" '(' ')'
  340                 | expr . "->" "name" '(' expr_list ')'
  350 expr_field: expr . '.' "name"
  351           | expr . '.' '.' "name"
  352           | expr . '.' "name" '(' ')'
  353           | expr . '.' "name" '(' expr_list ')'
  354           | expr . '.' basic_type_declaration '(' ')'
  355           | expr . '.' basic_type_declaration '(' expr_list ')'
  358           | expr . '.' $@17 error $@18
  380 expr: expr . "<<" expr
  381     | expr . ">>" expr
  382     | expr . "<<<" expr
  383     | expr . ">>>" expr
  384     | expr . '+' expr
  385     | expr . '-' expr
  386     | expr . '*' expr
  387     | expr . '/' expr
  388     | expr . '%' expr
  389     | expr . '<' expr
  390     | expr . '>' expr
  391     | expr . "==" expr
  392     | expr . "!=" expr
  393     | expr . "<=" expr
  394     | expr . ">=" expr
  395     | expr . '&' expr
  396     | expr . '|' expr
  396     | expr '|' expr .
  397     | expr . '^' expr
  398     | expr . "&&" expr
  399     | expr . "||" expr
  400     | expr . "^^" expr
  401     | expr . ".." expr
  404     | expr . "++"
  405     | expr . "--"
  407     | expr . '[' expr ']'
  408     | expr . '.' '[' expr ']'
  409     | expr . "?[" expr ']'
  410     | expr . '.' "?[" expr ']'
  411     | expr . "?." "name"
  412     | expr . '.' "?." "name"
  421     | expr . "??" expr
  422     | expr . '?' expr ':' expr
  425     | expr . "is" "type" '<' $@19 type_declaration_no_options '>' $@20
  426     | expr . "is" basic_type_declaration
  427     | expr . "is" "name"
  428     | expr . "as" "name"
  431     | expr . "as" "type" '<' $@21 type_declaration '>' $@22
  432     | expr . "as" basic_type_declaration
  433     | expr . '?' "as" "name"
  436     | expr . '?' "as" "type" '<' $@23 type_declaration '>' $@24
  437     | expr . '?' "as" basic_type_declaration
  445     | expr . "<|" expr
  446     | expr . "|>" expr
  447     | expr . "|>" basic_type_declaration
  458 expr_mtag: expr . '.' "$f" '(' expr ')'
  459          | expr . "?." "$f" '(' expr ')'
  460          | expr . '.' '.' "$f" '(' expr ')'
  461          | expr . '.' "?." "$f" '(' expr ')'
  462          | expr . "as" "$f" '(' expr ')'
  463          | expr . '?' "as" "$f" '(' expr ')'
  464          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 637
    "as"   shift, and go to state 638
    "<<"   shift, and go to state 639
    ">>"   shift, and go to state 640
    "++"   shift, and go to state 641
    "--"   shift, and go to state 642
    "<="   shift, and go to state 643
    ">="   shift, and go to state 644
    "=="   shift, and go to state 645
    "!="   shift, and go to state 646
    "->"   shift, and go to state 647
    "??"   shift, and go to state 648
    "?."   shift, and go to state 649
    "?["   shift, and go to state 650
    "<|"   shift, and go to state 651
    "|>"   shift, and go to state 652
    "<<<"  shift, and go to state 653
    ">>>"  shift, and go to state 654
    '^'    shift, and go to state 661
    '&'    shift, and go to state 662
    '<'    shift, and go to state 663
    '>'    shift, and go to state 664
    '-'    shift, and go to state 665
    '+'    shift, and go to state 666
    '*'    shift, and go to state 667
    '/'    shift, and go to state 668
    '%'    shift, and go to state 669
    '.'    shift, and go to state 670
    '['    shift, and go to state 671

    $default  reduce using rule 396 (expr)


State 867

  339 expr_method_call: expr . "->" "name" '(' ')'
  340                 | expr . "->" "name" '(' expr_list ')'
  350 expr_field: expr . '.' "name"
  351           | expr . '.' '.' "name"
  352           | expr . '.' "name" '(' ')'
  353           | expr . '.' "name" '(' expr_list ')'
  354           | expr . '.' basic_type_declaration '(' ')'
  355           | expr . '.' basic_type_declaration '(' expr_list ')'
  358           | expr . '.' $@17 error $@18
  380 expr: expr . "<<" expr
  381     | expr . ">>" expr
  382     | expr . "<<<" expr
  383     | expr . ">>>" expr
  384     | expr . '+' expr
  385     | expr . '-' expr
  386     | expr . '*' expr
  387     | expr . '/' expr
  388     | expr . '%' expr
  389     | expr . '<' expr
  390     | expr . '>' expr
  391     | expr . "==" expr
  392     | expr . "!=" expr
  393     | expr . "<=" expr
  394     | expr . ">=" expr
  395     | expr . '&' expr
  396     | expr . '|' expr
  397     | expr . '^' expr
  397     | expr '^' expr .
  398     | expr . "&&" expr
  399     | expr . "||" expr
  400     | expr . "^^" expr
  401     | expr . ".." expr
  404     | expr . "++"
  405     | expr . "--"
  407     | expr . '[' expr ']'
  408     | expr . '.' '[' expr ']'
  409     | expr . "?[" expr ']'
  410     | expr . '.' "?[" expr ']'
  411     | expr . "?." "name"
  412     | expr . '.' "?." "name"
  421     | expr . "??" expr
  422     | expr . '?' expr ':' expr
  425     | expr . "is" "type" '<' $@19 type_declaration_no_options '>' $@20
  426     | expr . "is" basic_type_declaration
  427     | expr . "is" "name"
  428     | expr . "as" "name"
  431     | expr . "as" "type" '<' $@21 type_declaration '>' $@22
  432     | expr . "as" basic_type_declaration
  433     | expr . '?' "as" "name"
  436     | expr . '?' "as" "type" '<' $@23 type_declaration '>' $@24
  437     | expr . '?' "as" basic_type_declaration
  445     | expr . "<|" expr
  446     | expr . "|>" expr
  447     | expr . "|>" basic_type_declaration
  458 expr_mtag: expr . '.' "$f" '(' expr ')'
  459          | expr . "?." "$f" '(' expr ')'
  460          | expr . '.' '.' "$f" '(' expr ')'
  461          | expr . '.' "?." "$f" '(' expr ')'
  462          | expr . "as" "$f" '(' expr ')'
  463          | expr . '?' "as" "$f" '(' expr ')'
  464          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 637
    "as"   shift, and go to state 638
    "<<"   shift, and go to state 639
    ">>"   shift, and go to state 640
    "++"   shift, and go to state 641
    "--"   shift, and go to state 642
    "<="   shift, and go to state 643
    ">="   shift, and go to state 644
    "=="   shift, and go to state 645
    "!="   shift, and go to state 646
    "->"   shift, and go to state 647
    "??"   shift, and go to state 648
    "?."   shift, and go to state 649
    "?["   shift, and go to state 650
    "<|"   shift, and go to state 651
    "|>"   shift, and go to state 652
    "<<<"  shift, and go to state 653
    ">>>"  shift, and go to state 654
    '&'    shift, and go to state 662
    '<'    shift, and go to state 663
    '>'    shift, and go to state 664
    '-'    shift, and go to state 665
    '+'    shift, and go to state 666
    '*'    shift, and go to state 667
    '/'    shift, and go to state 668
    '%'    shift, and go to state 669
    '.'    shift, and go to state 670
    '['    shift, and go to state 671

    $default  reduce using rule 397 (expr)


State 868

  339 expr_method_call: expr . "->" "name" '(' ')'
  340                 | expr . "->" "name" '(' expr_list ')'
  350 expr_field: expr . '.' "name"
  351           | expr . '.' '.' "name"
  352           | expr . '.' "name" '(' ')'
  353           | expr . '.' "name" '(' expr_list ')'
  354           | expr . '.' basic_type_declaration '(' ')'
  355           | expr . '.' basic_type_declaration '(' expr_list ')'
  358           | expr . '.' $@17 error $@18
  380 expr: expr . "<<" expr
  381     | expr . ">>" expr
  382     | expr . "<<<" expr
  383     | expr . ">>>" expr
  384     | expr . '+' expr
  385     | expr . '-' expr
  386     | expr . '*' expr
  387     | expr . '/' expr
  388     | expr . '%' expr
  389     | expr . '<' expr
  390     | expr . '>' expr
  391     | expr . "==" expr
  392     | expr . "!=" expr
  393     | expr . "<=" expr
  394     | expr . ">=" expr
  395     | expr . '&' expr
  395     | expr '&' expr .
  396     | expr . '|' expr
  397     | expr . '^' expr
  398     | expr . "&&" expr
  399     | expr . "||" expr
  400     | expr . "^^" expr
  401     | expr . ".." expr
  404     | expr . "++"
  405     | expr . "--"
  407     | expr . '[' expr ']'
  408     | expr . '.' '[' expr ']'
  409     | expr . "?[" expr ']'
  410     | expr . '.' "?[" expr ']'
  411     | expr . "?." "name"
  412     | expr . '.' "?." "name"
  421     | expr . "??" expr
  422     | expr . '?' expr ':' expr
  425     | expr . "is" "type" '<' $@19 type_declaration_no_options '>' $@20
  426     | expr . "is" basic_type_declaration
  427     | expr . "is" "name"
  428     | expr . "as" "name"
  431     | expr . "as" "type" '<' $@21 type_declaration '>' $@22
  432     | expr . "as" basic_type_declaration
  433     | expr . '?' "as" "name"
  436     | expr . '?' "as" "type" '<' $@23 type_declaration '>' $@24
  437     | expr . '?' "as" basic_type_declaration
  445     | expr . "<|" expr
  446     | expr . "|>" expr
  447     | expr . "|>" basic_type_declaration
  458 expr_mtag: expr . '.' "$f" '(' expr ')'
  459          | expr . "?." "$f" '(' expr ')'
  460          | expr . '.' '.' "$f" '(' expr ')'
  461          | expr . '.' "?." "$f" '(' expr ')'
  462          | expr . "as" "$f" '(' expr ')'
  463          | expr . '?' "as" "$f" '(' expr ')'
  464          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 637
    "as"   shift, and go to state 638
    "<<"   shift, and go to state 639
    ">>"   shift, and go to state 640
    "++"   shift, and go to state 641
    "--"   shift, and go to state 642
    "<="   shift, and go to state 643
    ">="   shift, and go to state 644
    "=="   shift, and go to state 645
    "!="   shift, and go to state 646
    "->"   shift, and go to state 647
    "??"   shift, and go to state 648
    "?."   shift, and go to state 649
    "?["   shift, and go to state 650
    "<|"   shift, and go to state 651
    "|>"   shift, and go to state 652
    "<<<"  shift, and go to state 653
    ">>>"  shift, and go to state 654
    '<'    shift, and go to state 663
    '>'    shift, and go to state 664
    '-'    shift, and go to state 665
    '+'    shift, and go to state 666
    '*'    shift, and go to state 667
    '/'    shift, and go to state 668
    '%'    shift, and go to state 669
    '.'    shift, and go to state 670
    '['    shift, and go to state 671

    $default  reduce using rule 395 (expr)


State 869

  339 expr_method_call: expr . "->" "name" '(' ')'
  340                 | expr . "->" "name" '(' expr_list ')'
  350 expr_field: expr . '.' "name"
  351           | expr . '.' '.' "name"
  352           | expr . '.' "name" '(' ')'
  353           | expr . '.' "name" '(' expr_list ')'
  354           | expr . '.' basic_type_declaration '(' ')'
  355           | expr . '.' basic_type_declaration '(' expr_list ')'
  358           | expr . '.' $@17 error $@18
  380 expr: expr . "<<" expr
  381     | expr . ">>" expr
  382     | expr . "<<<" expr
  383     | expr . ">>>" expr
  384     | expr . '+' expr
  385     | expr . '-' expr
  386     | expr . '*' expr
  387     | expr . '/' expr
  388     | expr . '%' expr
  389     | expr . '<' expr
  389     | expr '<' expr .
  390     | expr . '>' expr
  391     | expr . "==" expr
  392     | expr . "!=" expr
  393     | expr . "<=" expr
  394     | expr . ">=" expr
  395     | expr . '&' expr
  396     | expr . '|' expr
  397     | expr . '^' expr
  398     | expr . "&&" expr
  399     | expr . "||" expr
  400     | expr . "^^" expr
  401     | expr . ".." expr
  404     | expr . "++"
  405     | expr . "--"
  407     | expr . '[' expr ']'
  408     | expr . '.' '[' expr ']'
  409     | expr . "?[" expr ']'
  410     | expr . '.' "?[" expr ']'
  411     | expr . "?." "name"
  412     | expr . '.' "?." "name"
  421     | expr . "??" expr
  422     | expr . '?' expr ':' expr
  425     | expr . "is" "type" '<' $@19 type_declaration_no_options '>' $@20
  426     | expr . "is" basic_type_declaration
  427     | expr . "is" "name"
  428     | expr . "as" "name"
  431     | expr . "as" "type" '<' $@21 type_declaration '>' $@22
  432     | expr . "as" basic_type_declaration
  433     | expr . '?' "as" "name"
  436     | expr . '?' "as" "type" '<' $@23 type_declaration '>' $@24
  437     | expr . '?' "as" basic_type_declaration
  445     | expr . "<|" expr
  446     | expr . "|>" expr
  447     | expr . "|>" basic_type_declaration
  458 expr_mtag: expr . '.' "$f" '(' expr ')'
  459          | expr . "?." "$f" '(' expr ')'
  460          | expr . '.' '.' "$f" '(' expr ')'
  461          | expr . '.' "?." "$f" '(' expr ')'
  462          | expr . "as" "$f" '(' expr ')'
  463          | expr . '?' "as" "$f" '(' expr ')'
  464          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 637
    "as"   shift, and go to state 638
    "<<"   shift, and go to state 639
    ">>"   shift, and go to state 640
    "++"   shift, and go to state 641
    "--"   shift, and go to state 642
    "->"   shift, and go to state 647
    "??"   shift, and go to state 648
    "?."   shift, and go to state 649
    "?["   shift, and go to state 650
    "<|"   shift, and go to state 651
    "|>"   shift, and go to state 652
    "<<<"  shift, and go to state 653
    ">>>"  shift, and go to state 654
    '-'    shift, and go to state 665
    '+'    shift, and go to state 666
    '*'    shift, and go to state 667
    '/'    shift, and go to state 668
    '%'    shift, and go to state 669
    '.'    shift, and go to state 670
    '['    shift, and go to state 671

    $default  reduce using rule 389 (expr)


State 870

  339 expr_method_call: expr . "->" "name" '(' ')'
  340                 | expr . "->" "name" '(' expr_list ')'
  350 expr_field: expr . '.' "name"
  351           | expr . '.' '.' "name"
  352           | expr . '.' "name" '(' ')'
  353           | expr . '.' "name" '(' expr_list ')'
  354           | expr . '.' basic_type_declaration '(' ')'
  355           | expr . '.' basic_type_declaration '(' expr_list ')'
  358           | expr . '.' $@17 error $@18
  380 expr: expr . "<<" expr
  381     | expr . ">>" expr
  382     | expr . "<<<" expr
  383     | expr . ">>>" expr
  384     | expr . '+' expr
  385     | expr . '-' expr
  386     | expr . '*' expr
  387     | expr . '/' expr
  388     | expr . '%' expr
  389     | expr . '<' expr
  390     | expr . '>' expr
  390     | expr '>' expr .
  391     | expr . "==" expr
  392     | expr . "!=" expr
  393     | expr . "<=" expr
  394     | expr . ">=" expr
  395     | expr . '&' expr
  396     | expr . '|' expr
  397     | expr . '^' expr
  398     | expr . "&&" expr
  399     | expr . "||" expr
  400     | expr . "^^" expr
  401     | expr . ".." expr
  404     | expr . "++"
  405     | expr . "--"
  407     | expr . '[' expr ']'
  408     | expr . '.' '[' expr ']'
  409     | expr . "?[" expr ']'
  410     | expr . '.' "?[" expr ']'
  411     | expr . "?." "name"
  412     | expr . '.' "?." "name"
  421     | expr . "??" expr
  422     | expr . '?' expr ':' expr
  425     | expr . "is" "type" '<' $@19 type_declaration_no_options '>' $@20
  426     | expr . "is" basic_type_declaration
  427     | expr . "is" "name"
  428     | expr . "as" "name"
  431     | expr . "as" "type" '<' $@21 type_declaration '>' $@22
  432     | expr . "as" basic_type_declaration
  433     | expr . '?' "as" "name"
  436     | expr . '?' "as" "type" '<' $@23 type_declaration '>' $@24
  437     | expr . '?' "as" basic_type_declaration
  445     | expr . "<|" expr
  446     | expr . "|>" expr
  447     | expr . "|>" basic_type_declaration
  458 expr_mtag: expr . '.' "$f" '(' expr ')'
  459          | expr . "?." "$f" '(' expr ')'
  460          | expr . '.' '.' "$f" '(' expr ')'
  461          | expr . '.' "?." "$f" '(' expr ')'
  462          | expr . "as" "$f" '(' expr ')'
  463          | expr . '?' "as" "$f" '(' expr ')'
  464          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 637
    "as"   shift, and go to state 638
    "<<"   shift, and go to state 639
    ">>"   shift, and go to state 640
    "++"   shift, and go to state 641
    "--"   shift, and go to state 642
    "->"   shift, and go to state 647
    "??"   shift, and go to state 648
    "?."   shift, and go to state 649
    "?["   shift, and go to state 650
    "<|"   shift, and go to state 651
    "|>"   shift, and go to state 652
    "<<<"  shift, and go to state 653
    ">>>"  shift, and go to state 654
    '-'    shift, and go to state 665
    '+'    shift, and go to state 666
    '*'    shift, and go to state 667
    '/'    shift, and go to state 668
    '%'    shift, and go to state 669
    '.'    shift, and go to state 670
    '['    shift, and go to state 671

    $default  reduce using rule 390 (expr)


State 871

  339 expr_method_call: expr . "->" "name" '(' ')'
  340                 | expr . "->" "name" '(' expr_list ')'
  350 expr_field: expr . '.' "name"
  351           | expr . '.' '.' "name"
  352           | expr . '.' "name" '(' ')'
  353           | expr . '.' "name" '(' expr_list ')'
  354           | expr . '.' basic_type_declaration '(' ')'
  355           | expr . '.' basic_type_declaration '(' expr_list ')'
  358           | expr . '.' $@17 error $@18
  380 expr: expr . "<<" expr
  381     | expr . ">>" expr
  382     | expr . "<<<" expr
  383     | expr . ">>>" expr
  384     | expr . '+' expr
  385     | expr . '-' expr
  385     | expr '-' expr .
  386     | expr . '*' expr
  387     | expr . '/' expr
  388     | expr . '%' expr
  389     | expr . '<' expr
  390     | expr . '>' expr
  391     | expr . "==" expr
  392     | expr . "!=" expr
  393     | expr . "<=" expr
  394     | expr . ">=" expr
  395     | expr . '&' expr
  396     | expr . '|' expr
  397     | expr . '^' expr
  398     | expr . "&&" expr
  399     | expr . "||" expr
  400     | expr . "^^" expr
  401     | expr . ".." expr
  404     | expr . "++"
  405     | expr . "--"
  407     | expr . '[' expr ']'
  408     | expr . '.' '[' expr ']'
  409     | expr . "?[" expr ']'
  410     | expr . '.' "?[" expr ']'
  411     | expr . "?." "name"
  412     | expr . '.' "?." "name"
  421     | expr . "??" expr
  422     | expr . '?' expr ':' expr
  425     | expr . "is" "type" '<' $@19 type_declaration_no_options '>' $@20
  426     | expr . "is" basic_type_declaration
  427     | expr . "is" "name"
  428     | expr . "as" "name"
  431     | expr . "as" "type" '<' $@21 type_declaration '>' $@22
  432     | expr . "as" basic_type_declaration
  433     | expr . '?' "as" "name"
  436     | expr . '?' "as" "type" '<' $@23 type_declaration '>' $@24
  437     | expr . '?' "as" basic_type_declaration
  445     | expr . "<|" expr
  446     | expr . "|>" expr
  447     | expr . "|>" basic_type_declaration
  458 expr_mtag: expr . '.' "$f" '(' expr ')'
  459          | expr . "?." "$f" '(' expr ')'
  460          | expr . '.' '.' "$f" '(' expr ')'
  461          | expr . '.' "?." "$f" '(' expr ')'
  462          | expr . "as" "$f" '(' expr ')'
  463          | expr . '?' "as" "$f" '(' expr ')'
  464          | expr . "is" "$f" '(' expr ')'

    "is"  shift, and go to state 637
    "as"  shift, and go to state 638
    "++"  shift, and go to state 641
    "--"  shift, and go to state 642
    "->"  shift, and go to state 647
    "??"  shift, and go to state 648
    "?."  shift, and go to state 649
    "?["  shift, and go to state 650
    "<|"  shift, and go to state 651
    "|>"  shift, and go to state 652
    '*'   shift, and go to state 667
    '/'   shift, and go to state 668
    '%'   shift, and go to state 669
    '.'   shift, and go to state 670
    '['   shift, and go to state 671

    $default  reduce using rule 385 (expr)


State 872

  339 expr_method_call: expr . "->" "name" '(' ')'
  340                 | expr . "->" "name" '(' expr_list ')'
  350 expr_field: expr . '.' "name"
  351           | expr . '.' '.' "name"
  352           | expr . '.' "name" '(' ')'
  353           | expr . '.' "name" '(' expr_list ')'
  354           | expr . '.' basic_type_declaration '(' ')'
  355           | expr . '.' basic_type_declaration '(' expr_list ')'
  358           | expr . '.' $@17 error $@18
  380 expr: expr . "<<" expr
  381     | expr . ">>" expr
  382     | expr . "<<<" expr
  383     | expr . ">>>" expr
  384     | expr . '+' expr
  384     | expr '+' expr .
  385     | expr . '-' expr
  386     | expr . '*' expr
  387     | expr . '/' expr
  388     | expr . '%' expr
  389     | expr . '<' expr
  390     | expr . '>' expr
  391     | expr . "==" expr
  392     | expr . "!=" expr
  393     | expr . "<=" expr
  394     | expr . ">=" expr
  395     | expr . '&' expr
  396     | expr . '|' expr
  397     | expr . '^' expr
  398     | expr . "&&" expr
  399     | expr . "||" expr
  400     | expr . "^^" expr
  401     | expr . ".." expr
  404     | expr . "++"
  405     | expr . "--"
  407     | expr . '[' expr ']'
  408     | expr . '.' '[' expr ']'
  409     | expr . "?[" expr ']'
  410     | expr . '.' "?[" expr ']'
  411     | expr . "?." "name"
  412     | expr . '.' "?." "name"
  421     | expr . "??" expr
  422     | expr . '?' expr ':' expr
  425     | expr . "is" "type" '<' $@19 type_declaration_no_options '>' $@20
  426     | expr . "is" basic_type_declaration
  427     | expr . "is" "name"
  428     | expr . "as" "name"
  431     | expr . "as" "type" '<' $@21 type_declaration '>' $@22
  432     | expr . "as" basic_type_declaration
  433     | expr . '?' "as" "name"
  436     | expr . '?' "as" "type" '<' $@23 type_declaration '>' $@24
  437     | expr . '?' "as" basic_type_declaration
  445     | expr . "<|" expr
  446     | expr . "|>" expr
  447     | expr . "|>" basic_type_declaration
  458 expr_mtag: expr . '.' "$f" '(' expr ')'
  459          | expr . "?." "$f" '(' expr ')'
  460          | expr . '.' '.' "$f" '(' expr ')'
  461          | expr . '.' "?." "$f" '(' expr ')'
  462          | expr . "as" "$f" '(' expr ')'
  463          | expr . '?' "as" "$f" '(' expr ')'
  464          | expr . "is" "$f" '(' expr ')'

    "is"  shift, and go to state 637
    "as"  shift, and go to state 638
    "++"  shift, and go to state 641
    "--"  shift, and go to state 642
    "->"  shift, and go to state 647
    "??"  shift, and go to state 648
    "?."  shift, and go to state 649
    "?["  shift, and go to state 650
    "<|"  shift, and go to state 651
    "|>"  shift, and go to state 652
    '*'   shift, and go to state 667
    '/'   shift, and go to state 668
    '%'   shift, and go to state 669
    '.'   shift, and go to state 670
    '['   shift, and go to state 671

    $default  reduce using rule 384 (expr)


State 873

  339 expr_method_call: expr . "->" "name" '(' ')'
  340                 | expr . "->" "name" '(' expr_list ')'
  350 expr_field: expr . '.' "name"
  351           | expr . '.' '.' "name"
  352           | expr . '.' "name" '(' ')'
  353           | expr . '.' "name" '(' expr_list ')'
  354           | expr . '.' basic_type_declaration '(' ')'
  355           | expr . '.' basic_type_declaration '(' expr_list ')'
  358           | expr . '.' $@17 error $@18
  380 expr: expr . "<<" expr
  381     | expr . ">>" expr
  382     | expr . "<<<" expr
  383     | expr . ">>>" expr
  384     | expr . '+' expr
  385     | expr . '-' expr
  386     | expr . '*' expr
  386     | expr '*' expr .
  387     | expr . '/' expr
  388     | expr . '%' expr
  389     | expr . '<' expr
  390     | expr . '>' expr
  391     | expr . "==" expr
  392     | expr . "!=" expr
  393     | expr . "<=" expr
  394     | expr . ">=" expr
  395     | expr . '&' expr
  396     | expr . '|' expr
  397     | expr . '^' expr
  398     | expr . "&&" expr
  399     | expr . "||" expr
  400     | expr . "^^" expr
  401     | expr . ".." expr
  404     | expr . "++"
  405     | expr . "--"
  407     | expr . '[' expr ']'
  408     | expr . '.' '[' expr ']'
  409     | expr . "?[" expr ']'
  410     | expr . '.' "?[" expr ']'
  411     | expr . "?." "name"
  412     | expr . '.' "?." "name"
  421     | expr . "??" expr
  422     | expr . '?' expr ':' expr
  425     | expr . "is" "type" '<' $@19 type_declaration_no_options '>' $@20
  426     | expr . "is" basic_type_declaration
  427     | expr . "is" "name"
  428     | expr . "as" "name"
  431     | expr . "as" "type" '<' $@21 type_declaration '>' $@22
  432     | expr . "as" basic_type_declaration
  433     | expr . '?' "as" "name"
  436     | expr . '?' "as" "type" '<' $@23 type_declaration '>' $@24
  437     | expr . '?' "as" basic_type_declaration
  445     | expr . "<|" expr
  446     | expr . "|>" expr
  447     | expr . "|>" basic_type_declaration
  458 expr_mtag: expr . '.' "$f" '(' expr ')'
  459          | expr . "?." "$f" '(' expr ')'
  460          | expr . '.' '.' "$f" '(' expr ')'
  461          | expr . '.' "?." "$f" '(' expr ')'
  462          | expr . "as" "$f" '(' expr ')'
  463          | expr . '?' "as" "$f" '(' expr ')'
  464          | expr . "is" "$f" '(' expr ')'

    "is"  shift, and go to state 637
    "as"  shift, and go to state 638
    "++"  shift, and go to state 641
    "--"  shift, and go to state 642
    "->"  shift, and go to state 647
    "??"  shift, and go to state 648
    "?."  shift, and go to state 649
    "?["  shift, and go to state 650
    "<|"  shift, and go to state 651
    "|>"  shift, and go to state 652
    '.'   shift, and go to state 670
    '['   shift, and go to state 671

    $default  reduce using rule 386 (expr)


State 874

  339 expr_method_call: expr . "->" "name" '(' ')'
  340                 | expr . "->" "name" '(' expr_list ')'
  350 expr_field: expr . '.' "name"
  351           | expr . '.' '.' "name"
  352           | expr . '.' "name" '(' ')'
  353           | expr . '.' "name" '(' expr_list ')'
  354           | expr . '.' basic_type_declaration '(' ')'
  355           | expr . '.' basic_type_declaration '(' expr_list ')'
  358           | expr . '.' $@17 error $@18
  380 expr: expr . "<<" expr
  381     | expr . ">>" expr
  382     | expr . "<<<" expr
  383     | expr . ">>>" expr
  384     | expr . '+' expr
  385     | expr . '-' expr
  386     | expr . '*' expr
  387     | expr . '/' expr
  387     | expr '/' expr .
  388     | expr . '%' expr
  389     | expr . '<' expr
  390     | expr . '>' expr
  391     | expr . "==" expr
  392     | expr . "!=" expr
  393     | expr . "<=" expr
  394     | expr . ">=" expr
  395     | expr . '&' expr
  396     | expr . '|' expr
  397     | expr . '^' expr
  398     | expr . "&&" expr
  399     | expr . "||" expr
  400     | expr . "^^" expr
  401     | expr . ".." expr
  404     | expr . "++"
  405     | expr . "--"
  407     | expr . '[' expr ']'
  408     | expr . '.' '[' expr ']'
  409     | expr . "?[" expr ']'
  410     | expr . '.' "?[" expr ']'
  411     | expr . "?." "name"
  412     | expr . '.' "?." "name"
  421     | expr . "??" expr
  422     | expr . '?' expr ':' expr
  425     | expr . "is" "type" '<' $@19 type_declaration_no_options '>' $@20
  426     | expr . "is" basic_type_declaration
  427     | expr . "is" "name"
  428     | expr . "as" "name"
  431     | expr . "as" "type" '<' $@21 type_declaration '>' $@22
  432     | expr . "as" basic_type_declaration
  433     | expr . '?' "as" "name"
  436     | expr . '?' "as" "type" '<' $@23 type_declaration '>' $@24
  437     | expr . '?' "as" basic_type_declaration
  445     | expr . "<|" expr
  446     | expr . "|>" expr
  447     | expr . "|>" basic_type_declaration
  458 expr_mtag: expr . '.' "$f" '(' expr ')'
  459          | expr . "?." "$f" '(' expr ')'
  460          | expr . '.' '.' "$f" '(' expr ')'
  461          | expr . '.' "?." "$f" '(' expr ')'
  462          | expr . "as" "$f" '(' expr ')'
  463          | expr . '?' "as" "$f" '(' expr ')'
  464          | expr . "is" "$f" '(' expr ')'

    "is"  shift, and go to state 637
    "as"  shift, and go to state 638
    "++"  shift, and go to state 641
    "--"  shift, and go to state 642
    "->"  shift, and go to state 647
    "??"  shift, and go to state 648
    "?."  shift, and go to state 649
    "?["  shift, and go to state 650
    "<|"  shift, and go to state 651
    "|>"  shift, and go to state 652
    '.'   shift, and go to state 670
    '['   shift, and go to state 671

    $default  reduce using rule 387 (expr)


State 875

  339 expr_method_call: expr . "->" "name" '(' ')'
  340                 | expr . "->" "name" '(' expr_list ')'
  350 expr_field: expr . '.' "name"
  351           | expr . '.' '.' "name"
  352           | expr . '.' "name" '(' ')'
  353           | expr . '.' "name" '(' expr_list ')'
  354           | expr . '.' basic_type_declaration '(' ')'
  355           | expr . '.' basic_type_declaration '(' expr_list ')'
  358           | expr . '.' $@17 error $@18
  380 expr: expr . "<<" expr
  381     | expr . ">>" expr
  382     | expr . "<<<" expr
  383     | expr . ">>>" expr
  384     | expr . '+' expr
  385     | expr . '-' expr
  386     | expr . '*' expr
  387     | expr . '/' expr
  388     | expr . '%' expr
  388     | expr '%' expr .
  389     | expr . '<' expr
  390     | expr . '>' expr
  391     | expr . "==" expr
  392     | expr . "!=" expr
  393     | expr . "<=" expr
  394     | expr . ">=" expr
  395     | expr . '&' expr
  396     | expr . '|' expr
  397     | expr . '^' expr
  398     | expr . "&&" expr
  399     | expr . "||" expr
  400     | expr . "^^" expr
  401     | expr . ".." expr
  404     | expr . "++"
  405     | expr . "--"
  407     | expr . '[' expr ']'
  408     | expr . '.' '[' expr ']'
  409     | expr . "?[" expr ']'
  410     | expr . '.' "?[" expr ']'
  411     | expr . "?." "name"
  412     | expr . '.' "?." "name"
  421     | expr . "??" expr
  422     | expr . '?' expr ':' expr
  425     | expr . "is" "type" '<' $@19 type_declaration_no_options '>' $@20
  426     | expr . "is" basic_type_declaration
  427     | expr . "is" "name"
  428     | expr . "as" "name"
  431     | expr . "as" "type" '<' $@21 type_declaration '>' $@22
  432     | expr . "as" basic_type_declaration
  433     | expr . '?' "as" "name"
  436     | expr . '?' "as" "type" '<' $@23 type_declaration '>' $@24
  437     | expr . '?' "as" basic_type_declaration
  445     | expr . "<|" expr
  446     | expr . "|>" expr
  447     | expr . "|>" basic_type_declaration
  458 expr_mtag: expr . '.' "$f" '(' expr ')'
  459          | expr . "?." "$f" '(' expr ')'
  460          | expr . '.' '.' "$f" '(' expr ')'
  461          | expr . '.' "?." "$f" '(' expr ')'
  462          | expr . "as" "$f" '(' expr ')'
  463          | expr . '?' "as" "$f" '(' expr ')'
  464          | expr . "is" "$f" '(' expr ')'

    "is"  shift, and go to state 637
    "as"  shift, and go to state 638
    "++"  shift, and go to state 641
    "--"  shift, and go to state 642
    "->"  shift, and go to state 647
    "??"  shift, and go to state 648
    "?."  shift, and go to state 649
    "?["  shift, and go to state 650
    "<|"  shift, and go to state 651
    "|>"  shift, and go to state 652
    '.'   shift, and go to state 670
    '['   shift, and go to state 671

    $default  reduce using rule 388 (expr)


State 876

  412 expr: expr '.' "?." . "name"
  461 expr_mtag: expr '.' "?." . "$f" '(' expr ')'

    "$f"    shift, and go to state 1044
    "name"  shift, and go to state 1045


State 877

  410 expr: expr '.' "?[" . expr ']'

    "struct"                          shift, and go to state 402
    "class"                           shift, and go to state 403
    "true"                            shift, and go to state 404
    "false"                           shift, and go to state 405
    "new"                             shift, and go to state 406
    "typeinfo"                        shift, and go to state 407
    "type"                            shift, and go to state 408
    "array"                           shift, and go to state 409
    "null"                            shift, and go to state 410
    "table"                           shift, and go to state 411
    "deref"                           shift, and go to state 412
    "cast"                            shift, and go to state 413
    "upcast"                          shift, and go to state 414
    "addr"                            shift, and go to state 415
    "reinterpret"                     shift, and go to state 416
    "unsafe"                          shift, and go to state 417
    "fixed_array"                     shift, and go to state 418
    "default"                         shift, and go to state 419
    "bool"                            shift, and go to state 222
    "void"                            shift, and go to state 223
    "string"                          shift, and go to state 224
    "int"                             shift, and go to state 226
    "int2"                            shift, and go to state 227
    "int3"                            shift, and go to state 228
    "int4"                            shift, and go to state 229
    "uint"                            shift, and go to state 230
    "bitfield"                        shift, and go to state 420
    "uint2"                           shift, and go to state 232
    "uint3"                           shift, and go to state 233
    "uint4"                           shift, and go to state 234
    "float"                           shift, and go to state 235
    "float2"                          shift, and go to state 236
    "float3"                          shift, and go to state 237
    "float4"                          shift, and go to state 238
    "range"                           shift, and go to state 239
    "urange"                          shift, and go to state 240
    "range64"                         shift, and go to state 241
    "urange64"                        shift, and go to state 242
    "int64"                           shift, and go to state 244
    "uint64"                          shift, and go to state 245
    "double"                          shift, and go to state 246
    "int8"                            shift, and go to state 249
    "uint8"                           shift, and go to state 250
    "int16"                           shift, and go to state 251
    "uint16"                          shift, and go to state 252
    "tuple"                           shift, and go to state 421
    "variant"                         shift, and go to state 422
    "generator"                       shift, and go to state 423
    "++"                              shift, and go to state 424
    "--"                              shift, and go to state 425
    "::"                              shift, and go to state 55
    "$$"                              shift, and go to state 426
    "$i"                              shift, and go to state 427
    "$v"                              shift, and go to state 428
    "$b"                              shift, and go to state 429
    "$a"                              shift, and go to state 430
    "$c"                              shift, and go to state 431
    "..."                             shift, and go to state 432
    "integer constant"                shift, and go to state 433
    "long integer constant"           shift, and go to state 434
    "unsigned integer constant"       shift, and go to state 435
    "unsigned long integer constant"  shift, and go to state 436
    "unsigned int8 constant"          shift, and go to state 437
    "floating point constant"         shift, and go to state 438
    "double constant"                 shift, and go to state 439
    "name"                            shift, and go to state 56
    "start of the string"             shift, and go to state 440
    "begin of code block"             shift, and go to state 441
    '-'                               shift, and go to state 442
    '+'                               shift, and go to state 443
    '*'                               shift, and go to state 444
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 445
    '!'                               shift, and go to state 446
    '['                               shift, and go to state 447
    '('                               shift, and go to state 448
    '$'                               shift, and go to state 449
    '@'                               shift, and go to state 450

    string_builder          go to state 451
    expr_reader             go to state 452
    expr_call_pipe          go to state 453
    name_in_namespace       go to state 454
    expr_new                go to state 455
    expr_cast               go to state 456
    expr_type_decl          go to state 457
    expr_type_info          go to state 458
    block_or_lambda         go to state 459
    expr_full_block         go to state 460
    expr_numeric_const      go to state 461
    expr_named_call         go to state 462
    expr_method_call        go to state 463
    func_addr_expr          go to state 464
    expr_field              go to state 465
    expr_call               go to state 466
    expr                    go to state 1046
    expr_mtag               go to state 468
    basic_type_declaration  go to state 469
    make_decl               go to state 470
    make_struct_decl        go to state 471
    make_tuple_call         go to state 472
    make_dim_decl           go to state 473
    make_table_decl         go to state 474
    array_comprehension     go to state 475


State 878

  458 expr_mtag: expr '.' "$f" . '(' expr ')'

    '('  shift, and go to state 1047


State 879

  350 expr_field: expr '.' "name" .
  352           | expr '.' "name" . '(' ')'
  353           | expr '.' "name" . '(' expr_list ')'

    '('  shift, and go to state 1048

    $default  reduce using rule 350 (expr_field)


State 880

  351 expr_field: expr '.' '.' . "name"
  460 expr_mtag: expr '.' '.' . "$f" '(' expr ')'

    "$f"    shift, and go to state 1049
    "name"  shift, and go to state 1050


State 881

  408 expr: expr '.' '[' . expr ']'

    "struct"                          shift, and go to state 402
    "class"                           shift, and go to state 403
    "true"                            shift, and go to state 404
    "false"                           shift, and go to state 405
    "new"                             shift, and go to state 406
    "typeinfo"                        shift, and go to state 407
    "type"                            shift, and go to state 408
    "array"                           shift, and go to state 409
    "null"                            shift, and go to state 410
    "table"                           shift, and go to state 411
    "deref"                           shift, and go to state 412
    "cast"                            shift, and go to state 413
    "upcast"                          shift, and go to state 414
    "addr"                            shift, and go to state 415
    "reinterpret"                     shift, and go to state 416
    "unsafe"                          shift, and go to state 417
    "fixed_array"                     shift, and go to state 418
    "default"                         shift, and go to state 419
    "bool"                            shift, and go to state 222
    "void"                            shift, and go to state 223
    "string"                          shift, and go to state 224
    "int"                             shift, and go to state 226
    "int2"                            shift, and go to state 227
    "int3"                            shift, and go to state 228
    "int4"                            shift, and go to state 229
    "uint"                            shift, and go to state 230
    "bitfield"                        shift, and go to state 420
    "uint2"                           shift, and go to state 232
    "uint3"                           shift, and go to state 233
    "uint4"                           shift, and go to state 234
    "float"                           shift, and go to state 235
    "float2"                          shift, and go to state 236
    "float3"                          shift, and go to state 237
    "float4"                          shift, and go to state 238
    "range"                           shift, and go to state 239
    "urange"                          shift, and go to state 240
    "range64"                         shift, and go to state 241
    "urange64"                        shift, and go to state 242
    "int64"                           shift, and go to state 244
    "uint64"                          shift, and go to state 245
    "double"                          shift, and go to state 246
    "int8"                            shift, and go to state 249
    "uint8"                           shift, and go to state 250
    "int16"                           shift, and go to state 251
    "uint16"                          shift, and go to state 252
    "tuple"                           shift, and go to state 421
    "variant"                         shift, and go to state 422
    "generator"                       shift, and go to state 423
    "++"                              shift, and go to state 424
    "--"                              shift, and go to state 425
    "::"                              shift, and go to state 55
    "$$"                              shift, and go to state 426
    "$i"                              shift, and go to state 427
    "$v"                              shift, and go to state 428
    "$b"                              shift, and go to state 429
    "$a"                              shift, and go to state 430
    "$c"                              shift, and go to state 431
    "..."                             shift, and go to state 432
    "integer constant"                shift, and go to state 433
    "long integer constant"           shift, and go to state 434
    "unsigned integer constant"       shift, and go to state 435
    "unsigned long integer constant"  shift, and go to state 436
    "unsigned int8 constant"          shift, and go to state 437
    "floating point constant"         shift, and go to state 438
    "double constant"                 shift, and go to state 439
    "name"                            shift, and go to state 56
    "start of the string"             shift, and go to state 440
    "begin of code block"             shift, and go to state 441
    '-'                               shift, and go to state 442
    '+'                               shift, and go to state 443
    '*'                               shift, and go to state 444
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 445
    '!'                               shift, and go to state 446
    '['                               shift, and go to state 447
    '('                               shift, and go to state 448
    '$'                               shift, and go to state 449
    '@'                               shift, and go to state 450

    string_builder          go to state 451
    expr_reader             go to state 452
    expr_call_pipe          go to state 453
    name_in_namespace       go to state 454
    expr_new                go to state 455
    expr_cast               go to state 456
    expr_type_decl          go to state 457
    expr_type_info          go to state 458
    block_or_lambda         go to state 459
    expr_full_block         go to state 460
    expr_numeric_const      go to state 461
    expr_named_call         go to state 462
    expr_method_call        go to state 463
    func_addr_expr          go to state 464
    expr_field              go to state 465
    expr_call               go to state 466
    expr                    go to state 1051
    expr_mtag               go to state 468
    basic_type_declaration  go to state 469
    make_decl               go to state 470
    make_struct_decl        go to state 471
    make_tuple_call         go to state 472
    make_dim_decl           go to state 473
    make_table_decl         go to state 474
    array_comprehension     go to state 475


State 882

  358 expr_field: expr '.' $@17 . error $@18

    error  shift, and go to state 1052


State 883

  354 expr_field: expr '.' basic_type_declaration . '(' ')'
  355           | expr '.' basic_type_declaration . '(' expr_list ')'

    '('  shift, and go to state 1053


State 884

  339 expr_method_call: expr . "->" "name" '(' ')'
  340                 | expr . "->" "name" '(' expr_list ')'
  350 expr_field: expr . '.' "name"
  351           | expr . '.' '.' "name"
  352           | expr . '.' "name" '(' ')'
  353           | expr . '.' "name" '(' expr_list ')'
  354           | expr . '.' basic_type_declaration '(' ')'
  355           | expr . '.' basic_type_declaration '(' expr_list ')'
  358           | expr . '.' $@17 error $@18
  380 expr: expr . "<<" expr
  381     | expr . ">>" expr
  382     | expr . "<<<" expr
  383     | expr . ">>>" expr
  384     | expr . '+' expr
  385     | expr . '-' expr
  386     | expr . '*' expr
  387     | expr . '/' expr
  388     | expr . '%' expr
  389     | expr . '<' expr
  390     | expr . '>' expr
  391     | expr . "==" expr
  392     | expr . "!=" expr
  393     | expr . "<=" expr
  394     | expr . ">=" expr
  395     | expr . '&' expr
  396     | expr . '|' expr
  397     | expr . '^' expr
  398     | expr . "&&" expr
  399     | expr . "||" expr
  400     | expr . "^^" expr
  401     | expr . ".." expr
  404     | expr . "++"
  405     | expr . "--"
  407     | expr . '[' expr ']'
  407     | expr '[' expr . ']'
  408     | expr . '.' '[' expr ']'
  409     | expr . "?[" expr ']'
  410     | expr . '.' "?[" expr ']'
  411     | expr . "?." "name"
  412     | expr . '.' "?." "name"
  421     | expr . "??" expr
  422     | expr . '?' expr ':' expr
  425     | expr . "is" "type" '<' $@19 type_declaration_no_options '>' $@20
  426     | expr . "is" basic_type_declaration
  427     | expr . "is" "name"
  428     | expr . "as" "name"
  431     | expr . "as" "type" '<' $@21 type_declaration '>' $@22
  432     | expr . "as" basic_type_declaration
  433     | expr . '?' "as" "name"
  436     | expr . '?' "as" "type" '<' $@23 type_declaration '>' $@24
  437     | expr . '?' "as" basic_type_declaration
  445     | expr . "<|" expr
  446     | expr . "|>" expr
  447     | expr . "|>" basic_type_declaration
  458 expr_mtag: expr . '.' "$f" '(' expr ')'
  459          | expr . "?." "$f" '(' expr ')'
  460          | expr . '.' '.' "$f" '(' expr ')'
  461          | expr . '.' "?." "$f" '(' expr ')'
  462          | expr . "as" "$f" '(' expr ')'
  463          | expr . '?' "as" "$f" '(' expr ')'
  464          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 637
    "as"   shift, and go to state 638
    "<<"   shift, and go to state 639
    ">>"   shift, and go to state 640
    "++"   shift, and go to state 641
    "--"   shift, and go to state 642
    "<="   shift, and go to state 643
    ">="   shift, and go to state 644
    "=="   shift, and go to state 645
    "!="   shift, and go to state 646
    "->"   shift, and go to state 647
    "??"   shift, and go to state 648
    "?."   shift, and go to state 649
    "?["   shift, and go to state 650
    "<|"   shift, and go to state 651
    "|>"   shift, and go to state 652
    "<<<"  shift, and go to state 653
    ">>>"  shift, and go to state 654
    "&&"   shift, and go to state 655
    "||"   shift, and go to state 656
    "^^"   shift, and go to state 657
    ".."   shift, and go to state 658
    '?'    shift, and go to state 659
    '|'    shift, and go to state 660
    '^'    shift, and go to state 661
    '&'    shift, and go to state 662
    '<'    shift, and go to state 663
    '>'    shift, and go to state 664
    '-'    shift, and go to state 665
    '+'    shift, and go to state 666
    '*'    shift, and go to state 667
    '/'    shift, and go to state 668
    '%'    shift, and go to state 669
    '.'    shift, and go to state 670
    '['    shift, and go to state 671
    ']'    shift, and go to state 1054


State 885

  364 expr_call: basic_type_declaration '(' ')' .

    $default  reduce using rule 364 (expr_call)


State 886

  292 expr_list: expr_list . ',' expr
  365 expr_call: basic_type_declaration '(' expr_list . ')'

    ','  shift, and go to state 1055
    ')'  shift, and go to state 1056


State 887

  667 type_declaration_no_options_no_dim: "iterator" '<' $@45 type_declaration '>' . $@46

    $default  reduce using rule 666 ($@46)

    $@46  go to state 1057


State 888

  657 type_declaration_no_options_no_dim: "smart_ptr" '<' $@39 type_declaration '>' . $@40

    $default  reduce using rule 656 ($@40)

    $@40  go to state 1058


State 889

  615 bitfield_bits: bitfield_bits "end of expression" . "name"

    "name"  shift, and go to state 1059


State 890

  621 bitfield_type_declaration: "bitfield" '<' $@34 bitfield_bits '>' . $@35

    $default  reduce using rule 620 ($@35)

    $@35  go to state 1060


State 891

  671 type_declaration_no_options_no_dim: "block" '<' $@47 type_declaration '>' . $@48

    $default  reduce using rule 670 ($@48)

    $@48  go to state 1061


State 892

  674 type_declaration_no_options_no_dim: "block" '<' $@49 optional_function_argument_list optional_function_type . '>' $@50

    '>'  shift, and go to state 1062


State 893

  678 type_declaration_no_options_no_dim: "function" '<' $@51 type_declaration '>' . $@52

    $default  reduce using rule 677 ($@52)

    $@52  go to state 1063


State 894

  681 type_declaration_no_options_no_dim: "function" '<' $@53 optional_function_argument_list optional_function_type . '>' $@54

    '>'  shift, and go to state 1064


State 895

  685 type_declaration_no_options_no_dim: "lambda" '<' $@55 type_declaration '>' . $@56

    $default  reduce using rule 684 ($@56)

    $@56  go to state 1065


State 896

  688 type_declaration_no_options_no_dim: "lambda" '<' $@57 optional_function_argument_list optional_function_type . '>' $@58

    '>'  shift, and go to state 1066


State 897

  691 type_declaration_no_options_no_dim: "tuple" '<' $@59 tuple_type_list '>' . $@60

    $default  reduce using rule 690 ($@60)

    $@60  go to state 1067


State 898

  493 tuple_type_list: tuple_type_list c_or_s . tuple_type

    "type"       shift, and go to state 216
    "array"      shift, and go to state 217
    "table"      shift, and go to state 218
    "typedecl"   shift, and go to state 219
    "iterator"   shift, and go to state 220
    "smart_ptr"  shift, and go to state 221
    "bool"       shift, and go to state 222
    "void"       shift, and go to state 223
    "string"     shift, and go to state 224
    "auto"       shift, and go to state 225
    "int"        shift, and go to state 226
    "int2"       shift, and go to state 227
    "int3"       shift, and go to state 228
    "int4"       shift, and go to state 229
    "uint"       shift, and go to state 230
    "bitfield"   shift, and go to state 231
    "uint2"      shift, and go to state 232
    "uint3"      shift, and go to state 233
    "uint4"      shift, and go to state 234
    "float"      shift, and go to state 235
    "float2"     shift, and go to state 236
    "float3"     shift, and go to state 237
    "float4"     shift, and go to state 238
    "range"      shift, and go to state 239
    "urange"     shift, and go to state 240
    "range64"    shift, and go to state 241
    "urange64"   shift, and go to state 242
    "block"      shift, and go to state 243
    "int64"      shift, and go to state 244
    "uint64"     shift, and go to state 245
    "double"     shift, and go to state 246
    "function"   shift, and go to state 247
    "lambda"     shift, and go to state 248
    "int8"       shift, and go to state 249
    "uint8"      shift, and go to state 250
    "int16"      shift, and go to state 251
    "uint16"     shift, and go to state 252
    "tuple"      shift, and go to state 253
    "variant"    shift, and go to state 254
    "::"         shift, and go to state 55
    "$t"         shift, and go to state 255
    "name"       shift, and go to state 504
    '$'          shift, and go to state 256

    name_in_namespace                   go to state 257
    tuple_type                          go to state 1068
    basic_type_declaration              go to state 258
    structure_type_declaration          go to state 259
    auto_type_declaration               go to state 260
    bitfield_type_declaration           go to state 261
    type_declaration_no_options         go to state 262
    type_declaration_no_options_no_dim  go to state 263
    type_declaration                    go to state 509


State 899

  694 type_declaration_no_options_no_dim: "variant" '<' $@61 variant_type_list '>' . $@62

    $default  reduce using rule 693 ($@62)

    $@62  go to state 1069


State 900

  499 variant_type_list: variant_type_list c_or_s . variant_type

    "name"  shift, and go to state 511

    variant_type  go to state 1070


State 901

  241 type_declaration_no_options_list: type_declaration_no_options_list . c_or_s type_declaration
  642 type_declaration_no_options_no_dim: '$' name_in_namespace '<' $@38 type_declaration_no_options_list . '>' '(' optional_expr_list ')'

    "end of expression"  shift, and go to state 505
    ','                  shift, and go to state 506
    '>'                  shift, and go to state 1071

    c_or_s  go to state 1072


State 902

  240 type_declaration_no_options_list: type_declaration .
  696 type_declaration: type_declaration . '|' type_declaration_no_options
  697                 | type_declaration . '|' '#'

    '|'  shift, and go to state 369

    $default  reduce using rule 240 (type_declaration_no_options_list)


State 903

  640 type_declaration_no_options_no_dim: '$' name_in_namespace '(' optional_expr_list ')' .

    $default  reduce using rule 640 (type_declaration_no_options_no_dim)


State 904

  237 optional_expr_list: expr_list optional_comma .

    $default  reduce using rule 237 (optional_expr_list)


State 905

  628 dim_list: dim_list '[' expr ']' .

    $default  reduce using rule 628 (dim_list)


State 906

  709 bitfield_alias_declaration: "bitfield" optional_public_or_private_alias "name" $@69 "begin of code block" $@70 bitfield_alias_bits optional_comma $@71 "end of code block" .

    $default  reduce using rule 709 (bitfield_alias_declaration)


State 907

  491 tuple_type: "name" ':' type_declaration .
  696 type_declaration: type_declaration . '|' type_declaration_no_options
  697                 | type_declaration . '|' '#'

    '|'  shift, and go to state 369

    $default  reduce using rule 491 (tuple_type)


State 908

  497 variant_type: "name" ':' type_declaration .
  696 type_declaration: type_declaration . '|' type_declaration_no_options
  697                 | type_declaration . '|' '#'

    '|'  shift, and go to state 369

    $default  reduce using rule 497 (variant_type)


State 909

  487 function_argument_declaration: "$a" '(' expr ')' .

    $default  reduce using rule 487 (function_argument_declaration)


State 910

  571 variable_name_with_pos_list: "$i" '(' . expr ')'

    "struct"                          shift, and go to state 402
    "class"                           shift, and go to state 403
    "true"                            shift, and go to state 404
    "false"                           shift, and go to state 405
    "new"                             shift, and go to state 406
    "typeinfo"                        shift, and go to state 407
    "type"                            shift, and go to state 408
    "array"                           shift, and go to state 409
    "null"                            shift, and go to state 410
    "table"                           shift, and go to state 411
    "deref"                           shift, and go to state 412
    "cast"                            shift, and go to state 413
    "upcast"                          shift, and go to state 414
    "addr"                            shift, and go to state 415
    "reinterpret"                     shift, and go to state 416
    "unsafe"                          shift, and go to state 417
    "fixed_array"                     shift, and go to state 418
    "default"                         shift, and go to state 419
    "bool"                            shift, and go to state 222
    "void"                            shift, and go to state 223
    "string"                          shift, and go to state 224
    "int"                             shift, and go to state 226
    "int2"                            shift, and go to state 227
    "int3"                            shift, and go to state 228
    "int4"                            shift, and go to state 229
    "uint"                            shift, and go to state 230
    "bitfield"                        shift, and go to state 420
    "uint2"                           shift, and go to state 232
    "uint3"                           shift, and go to state 233
    "uint4"                           shift, and go to state 234
    "float"                           shift, and go to state 235
    "float2"                          shift, and go to state 236
    "float3"                          shift, and go to state 237
    "float4"                          shift, and go to state 238
    "range"                           shift, and go to state 239
    "urange"                          shift, and go to state 240
    "range64"                         shift, and go to state 241
    "urange64"                        shift, and go to state 242
    "int64"                           shift, and go to state 244
    "uint64"                          shift, and go to state 245
    "double"                          shift, and go to state 246
    "int8"                            shift, and go to state 249
    "uint8"                           shift, and go to state 250
    "int16"                           shift, and go to state 251
    "uint16"                          shift, and go to state 252
    "tuple"                           shift, and go to state 421
    "variant"                         shift, and go to state 422
    "generator"                       shift, and go to state 423
    "++"                              shift, and go to state 424
    "--"                              shift, and go to state 425
    "::"                              shift, and go to state 55
    "$$"                              shift, and go to state 426
    "$i"                              shift, and go to state 427
    "$v"                              shift, and go to state 428
    "$b"                              shift, and go to state 429
    "$a"                              shift, and go to state 430
    "$c"                              shift, and go to state 431
    "..."                             shift, and go to state 432
    "integer constant"                shift, and go to state 433
    "long integer constant"           shift, and go to state 434
    "unsigned integer constant"       shift, and go to state 435
    "unsigned long integer constant"  shift, and go to state 436
    "unsigned int8 constant"          shift, and go to state 437
    "floating point constant"         shift, and go to state 438
    "double constant"                 shift, and go to state 439
    "name"                            shift, and go to state 56
    "start of the string"             shift, and go to state 440
    "begin of code block"             shift, and go to state 441
    '-'                               shift, and go to state 442
    '+'                               shift, and go to state 443
    '*'                               shift, and go to state 444
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 445
    '!'                               shift, and go to state 446
    '['                               shift, and go to state 447
    '('                               shift, and go to state 448
    '$'                               shift, and go to state 449
    '@'                               shift, and go to state 450

    string_builder          go to state 451
    expr_reader             go to state 452
    expr_call_pipe          go to state 453
    name_in_namespace       go to state 454
    expr_new                go to state 455
    expr_cast               go to state 456
    expr_type_decl          go to state 457
    expr_type_info          go to state 458
    block_or_lambda         go to state 459
    expr_full_block         go to state 460
    expr_numeric_const      go to state 461
    expr_named_call         go to state 462
    expr_method_call        go to state 463
    func_addr_expr          go to state 464
    expr_field              go to state 465
    expr_call               go to state 466
    expr                    go to state 1073
    expr_mtag               go to state 468
    basic_type_declaration  go to state 469
    make_decl               go to state 470
    make_struct_decl        go to state 471
    make_tuple_call         go to state 472
    make_dim_decl           go to state 473
    make_table_decl         go to state 474
    array_comprehension     go to state 475


State 911

  572 variable_name_with_pos_list: "name" "aka" . "name"

    "name"  shift, and go to state 1074


State 912

  504 copy_or_move: "<-" .

    $default  reduce using rule 504 (copy_or_move)


State 913

  573 variable_name_with_pos_list: variable_name_with_pos_list ',' . "name"
  574                            | variable_name_with_pos_list ',' . "name" "aka" "name"

    "name"  shift, and go to state 1075


State 914

  503 copy_or_move: '=' .

    $default  reduce using rule 503 (copy_or_move)


State 915

  507 variable_declaration: variable_name_with_pos_list ':' . type_declaration
  508                     | variable_name_with_pos_list ':' . type_declaration copy_or_move expr

    "type"       shift, and go to state 216
    "array"      shift, and go to state 217
    "table"      shift, and go to state 218
    "typedecl"   shift, and go to state 219
    "iterator"   shift, and go to state 220
    "smart_ptr"  shift, and go to state 221
    "bool"       shift, and go to state 222
    "void"       shift, and go to state 223
    "string"     shift, and go to state 224
    "auto"       shift, and go to state 225
    "int"        shift, and go to state 226
    "int2"       shift, and go to state 227
    "int3"       shift, and go to state 228
    "int4"       shift, and go to state 229
    "uint"       shift, and go to state 230
    "bitfield"   shift, and go to state 231
    "uint2"      shift, and go to state 232
    "uint3"      shift, and go to state 233
    "uint4"      shift, and go to state 234
    "float"      shift, and go to state 235
    "float2"     shift, and go to state 236
    "float3"     shift, and go to state 237
    "float4"     shift, and go to state 238
    "range"      shift, and go to state 239
    "urange"     shift, and go to state 240
    "range64"    shift, and go to state 241
    "urange64"   shift, and go to state 242
    "block"      shift, and go to state 243
    "int64"      shift, and go to state 244
    "uint64"     shift, and go to state 245
    "double"     shift, and go to state 246
    "function"   shift, and go to state 247
    "lambda"     shift, and go to state 248
    "int8"       shift, and go to state 249
    "uint8"      shift, and go to state 250
    "int16"      shift, and go to state 251
    "uint16"     shift, and go to state 252
    "tuple"      shift, and go to state 253
    "variant"    shift, and go to state 254
    "::"         shift, and go to state 55
    "$t"         shift, and go to state 255
    "name"       shift, and go to state 56
    '$'          shift, and go to state 256

    name_in_namespace                   go to state 257
    basic_type_declaration              go to state 258
    structure_type_declaration          go to state 259
    auto_type_declaration               go to state 260
    bitfield_type_declaration           go to state 261
    type_declaration_no_options         go to state 262
    type_declaration_no_options_no_dim  go to state 263
    type_declaration                    go to state 1076


State 916

  506 variable_declaration: variable_name_with_pos_list '&' .

    $default  reduce using rule 506 (variable_declaration)


State 917

  509 variable_declaration: variable_name_with_pos_list copy_or_move . expr

    "struct"                          shift, and go to state 402
    "class"                           shift, and go to state 403
    "true"                            shift, and go to state 404
    "false"                           shift, and go to state 405
    "new"                             shift, and go to state 406
    "typeinfo"                        shift, and go to state 407
    "type"                            shift, and go to state 408
    "array"                           shift, and go to state 409
    "null"                            shift, and go to state 410
    "table"                           shift, and go to state 411
    "deref"                           shift, and go to state 412
    "cast"                            shift, and go to state 413
    "upcast"                          shift, and go to state 414
    "addr"                            shift, and go to state 415
    "reinterpret"                     shift, and go to state 416
    "unsafe"                          shift, and go to state 417
    "fixed_array"                     shift, and go to state 418
    "default"                         shift, and go to state 419
    "bool"                            shift, and go to state 222
    "void"                            shift, and go to state 223
    "string"                          shift, and go to state 224
    "int"                             shift, and go to state 226
    "int2"                            shift, and go to state 227
    "int3"                            shift, and go to state 228
    "int4"                            shift, and go to state 229
    "uint"                            shift, and go to state 230
    "bitfield"                        shift, and go to state 420
    "uint2"                           shift, and go to state 232
    "uint3"                           shift, and go to state 233
    "uint4"                           shift, and go to state 234
    "float"                           shift, and go to state 235
    "float2"                          shift, and go to state 236
    "float3"                          shift, and go to state 237
    "float4"                          shift, and go to state 238
    "range"                           shift, and go to state 239
    "urange"                          shift, and go to state 240
    "range64"                         shift, and go to state 241
    "urange64"                        shift, and go to state 242
    "int64"                           shift, and go to state 244
    "uint64"                          shift, and go to state 245
    "double"                          shift, and go to state 246
    "int8"                            shift, and go to state 249
    "uint8"                           shift, and go to state 250
    "int16"                           shift, and go to state 251
    "uint16"                          shift, and go to state 252
    "tuple"                           shift, and go to state 421
    "variant"                         shift, and go to state 422
    "generator"                       shift, and go to state 423
    "++"                              shift, and go to state 424
    "--"                              shift, and go to state 425
    "::"                              shift, and go to state 55
    "$$"                              shift, and go to state 426
    "$i"                              shift, and go to state 427
    "$v"                              shift, and go to state 428
    "$b"                              shift, and go to state 429
    "$a"                              shift, and go to state 430
    "$c"                              shift, and go to state 431
    "..."                             shift, and go to state 432
    "integer constant"                shift, and go to state 433
    "long integer constant"           shift, and go to state 434
    "unsigned integer constant"       shift, and go to state 435
    "unsigned long integer constant"  shift, and go to state 436
    "unsigned int8 constant"          shift, and go to state 437
    "floating point constant"         shift, and go to state 438
    "double constant"                 shift, and go to state 439
    "name"                            shift, and go to state 56
    "start of the string"             shift, and go to state 440
    "begin of code block"             shift, and go to state 441
    '-'                               shift, and go to state 442
    '+'                               shift, and go to state 443
    '*'                               shift, and go to state 444
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 445
    '!'                               shift, and go to state 446
    '['                               shift, and go to state 447
    '('                               shift, and go to state 448
    '$'                               shift, and go to state 449
    '@'                               shift, and go to state 450

    string_builder          go to state 451
    expr_reader             go to state 452
    expr_call_pipe          go to state 453
    name_in_namespace       go to state 454
    expr_new                go to state 455
    expr_cast               go to state 456
    expr_type_decl          go to state 457
    expr_type_info          go to state 458
    block_or_lambda         go to state 459
    expr_full_block         go to state 460
    expr_numeric_const      go to state 461
    expr_named_call         go to state 462
    expr_method_call        go to state 463
    func_addr_expr          go to state 464
    expr_field              go to state 465
    expr_call               go to state 466
    expr                    go to state 1077
    expr_mtag               go to state 468
    basic_type_declaration  go to state 469
    make_decl               go to state 470
    make_struct_decl        go to state 471
    make_tuple_call         go to state 472
    make_dim_decl           go to state 473
    make_table_decl         go to state 474
    array_comprehension     go to state 475


State 918

   73 expression_while_loop: "while" '(' expr . ')' expression_block
  339 expr_method_call: expr . "->" "name" '(' ')'
  340                 | expr . "->" "name" '(' expr_list ')'
  350 expr_field: expr . '.' "name"
  351           | expr . '.' '.' "name"
  352           | expr . '.' "name" '(' ')'
  353           | expr . '.' "name" '(' expr_list ')'
  354           | expr . '.' basic_type_declaration '(' ')'
  355           | expr . '.' basic_type_declaration '(' expr_list ')'
  358           | expr . '.' $@17 error $@18
  380 expr: expr . "<<" expr
  381     | expr . ">>" expr
  382     | expr . "<<<" expr
  383     | expr . ">>>" expr
  384     | expr . '+' expr
  385     | expr . '-' expr
  386     | expr . '*' expr
  387     | expr . '/' expr
  388     | expr . '%' expr
  389     | expr . '<' expr
  390     | expr . '>' expr
  391     | expr . "==" expr
  392     | expr . "!=" expr
  393     | expr . "<=" expr
  394     | expr . ">=" expr
  395     | expr . '&' expr
  396     | expr . '|' expr
  397     | expr . '^' expr
  398     | expr . "&&" expr
  399     | expr . "||" expr
  400     | expr . "^^" expr
  401     | expr . ".." expr
  404     | expr . "++"
  405     | expr . "--"
  407     | expr . '[' expr ']'
  408     | expr . '.' '[' expr ']'
  409     | expr . "?[" expr ']'
  410     | expr . '.' "?[" expr ']'
  411     | expr . "?." "name"
  412     | expr . '.' "?." "name"
  421     | expr . "??" expr
  422     | expr . '?' expr ':' expr
  425     | expr . "is" "type" '<' $@19 type_declaration_no_options '>' $@20
  426     | expr . "is" basic_type_declaration
  427     | expr . "is" "name"
  428     | expr . "as" "name"
  431     | expr . "as" "type" '<' $@21 type_declaration '>' $@22
  432     | expr . "as" basic_type_declaration
  433     | expr . '?' "as" "name"
  436     | expr . '?' "as" "type" '<' $@23 type_declaration '>' $@24
  437     | expr . '?' "as" basic_type_declaration
  445     | expr . "<|" expr
  446     | expr . "|>" expr
  447     | expr . "|>" basic_type_declaration
  458 expr_mtag: expr . '.' "$f" '(' expr ')'
  459          | expr . "?." "$f" '(' expr ')'
  460          | expr . '.' '.' "$f" '(' expr ')'
  461          | expr . '.' "?." "$f" '(' expr ')'
  462          | expr . "as" "$f" '(' expr ')'
  463          | expr . '?' "as" "$f" '(' expr ')'
  464          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 637
    "as"   shift, and go to state 638
    "<<"   shift, and go to state 639
    ">>"   shift, and go to state 640
    "++"   shift, and go to state 641
    "--"   shift, and go to state 642
    "<="   shift, and go to state 643
    ">="   shift, and go to state 644
    "=="   shift, and go to state 645
    "!="   shift, and go to state 646
    "->"   shift, and go to state 647
    "??"   shift, and go to state 648
    "?."   shift, and go to state 649
    "?["   shift, and go to state 650
    "<|"   shift, and go to state 651
    "|>"   shift, and go to state 652
    "<<<"  shift, and go to state 653
    ">>>"  shift, and go to state 654
    "&&"   shift, and go to state 655
    "||"   shift, and go to state 656
    "^^"   shift, and go to state 657
    ".."   shift, and go to state 658
    '?'    shift, and go to state 659
    '|'    shift, and go to state 660
    '^'    shift, and go to state 661
    '&'    shift, and go to state 662
    '<'    shift, and go to state 663
    '>'    shift, and go to state 664
    '-'    shift, and go to state 665
    '+'    shift, and go to state 666
    '*'    shift, and go to state 667
    '/'    shift, and go to state 668
    '%'    shift, and go to state 669
    '.'    shift, and go to state 670
    '['    shift, and go to state 671
    ')'    shift, and go to state 1078


State 919

   71 expression_for_loop: "for" '(' variable_name_with_pos_list . "in" expr_list ')' expression_block
  573 variable_name_with_pos_list: variable_name_with_pos_list . ',' "name"
  574                            | variable_name_with_pos_list . ',' "name" "aka" "name"

    "in"  shift, and go to state 1079
    ','   shift, and go to state 913


State 920

  259 expression_return: "return" "<-" expr .
  339 expr_method_call: expr . "->" "name" '(' ')'
  340                 | expr . "->" "name" '(' expr_list ')'
  350 expr_field: expr . '.' "name"
  351           | expr . '.' '.' "name"
  352           | expr . '.' "name" '(' ')'
  353           | expr . '.' "name" '(' expr_list ')'
  354           | expr . '.' basic_type_declaration '(' ')'
  355           | expr . '.' basic_type_declaration '(' expr_list ')'
  358           | expr . '.' $@17 error $@18
  380 expr: expr . "<<" expr
  381     | expr . ">>" expr
  382     | expr . "<<<" expr
  383     | expr . ">>>" expr
  384     | expr . '+' expr
  385     | expr . '-' expr
  386     | expr . '*' expr
  387     | expr . '/' expr
  388     | expr . '%' expr
  389     | expr . '<' expr
  390     | expr . '>' expr
  391     | expr . "==" expr
  392     | expr . "!=" expr
  393     | expr . "<=" expr
  394     | expr . ">=" expr
  395     | expr . '&' expr
  396     | expr . '|' expr
  397     | expr . '^' expr
  398     | expr . "&&" expr
  399     | expr . "||" expr
  400     | expr . "^^" expr
  401     | expr . ".." expr
  404     | expr . "++"
  405     | expr . "--"
  407     | expr . '[' expr ']'
  408     | expr . '.' '[' expr ']'
  409     | expr . "?[" expr ']'
  410     | expr . '.' "?[" expr ']'
  411     | expr . "?." "name"
  412     | expr . '.' "?." "name"
  421     | expr . "??" expr
  422     | expr . '?' expr ':' expr
  425     | expr . "is" "type" '<' $@19 type_declaration_no_options '>' $@20
  426     | expr . "is" basic_type_declaration
  427     | expr . "is" "name"
  428     | expr . "as" "name"
  431     | expr . "as" "type" '<' $@21 type_declaration '>' $@22
  432     | expr . "as" basic_type_declaration
  433     | expr . '?' "as" "name"
  436     | expr . '?' "as" "type" '<' $@23 type_declaration '>' $@24
  437     | expr . '?' "as" basic_type_declaration
  445     | expr . "<|" expr
  446     | expr . "|>" expr
  447     | expr . "|>" basic_type_declaration
  458 expr_mtag: expr . '.' "$f" '(' expr ')'
  459          | expr . "?." "$f" '(' expr ')'
  460          | expr . '.' '.' "$f" '(' expr ')'
  461          | expr . '.' "?." "$f" '(' expr ')'
  462          | expr . "as" "$f" '(' expr ')'
  463          | expr . '?' "as" "$f" '(' expr ')'
  464          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 637
    "as"   shift, and go to state 638
    "<<"   shift, and go to state 639
    ">>"   shift, and go to state 640
    "++"   shift, and go to state 641
    "--"   shift, and go to state 642
    "<="   shift, and go to state 643
    ">="   shift, and go to state 644
    "=="   shift, and go to state 645
    "!="   shift, and go to state 646
    "->"   shift, and go to state 647
    "??"   shift, and go to state 648
    "?."   shift, and go to state 649
    "?["   shift, and go to state 650
    "<|"   shift, and go to state 651
    "|>"   shift, and go to state 652
    "<<<"  shift, and go to state 653
    ">>>"  shift, and go to state 654
    "&&"   shift, and go to state 655
    "||"   shift, and go to state 656
    "^^"   shift, and go to state 657
    ".."   shift, and go to state 658
    '?'    shift, and go to state 659
    '|'    shift, and go to state 660
    '^'    shift, and go to state 661
    '&'    shift, and go to state 662
    '<'    shift, and go to state 663
    '>'    shift, and go to state 664
    '-'    shift, and go to state 665
    '+'    shift, and go to state 666
    '*'    shift, and go to state 667
    '/'    shift, and go to state 668
    '%'    shift, and go to state 669
    '.'    shift, and go to state 670
    '['    shift, and go to state 671

    $default  reduce using rule 259 (expression_return)


State 921

  262 expression_try_catch: "try" expression_block "recover" . expression_block

    "begin of code block"  shift, and go to state 323

    expression_block  go to state 1080


State 922

  246 expression_delete: "delete" "explicit" expr .
  339 expr_method_call: expr . "->" "name" '(' ')'
  340                 | expr . "->" "name" '(' expr_list ')'
  350 expr_field: expr . '.' "name"
  351           | expr . '.' '.' "name"
  352           | expr . '.' "name" '(' ')'
  353           | expr . '.' "name" '(' expr_list ')'
  354           | expr . '.' basic_type_declaration '(' ')'
  355           | expr . '.' basic_type_declaration '(' expr_list ')'
  358           | expr . '.' $@17 error $@18
  380 expr: expr . "<<" expr
  381     | expr . ">>" expr
  382     | expr . "<<<" expr
  383     | expr . ">>>" expr
  384     | expr . '+' expr
  385     | expr . '-' expr
  386     | expr . '*' expr
  387     | expr . '/' expr
  388     | expr . '%' expr
  389     | expr . '<' expr
  390     | expr . '>' expr
  391     | expr . "==" expr
  392     | expr . "!=" expr
  393     | expr . "<=" expr
  394     | expr . ">=" expr
  395     | expr . '&' expr
  396     | expr . '|' expr
  397     | expr . '^' expr
  398     | expr . "&&" expr
  399     | expr . "||" expr
  400     | expr . "^^" expr
  401     | expr . ".." expr
  404     | expr . "++"
  405     | expr . "--"
  407     | expr . '[' expr ']'
  408     | expr . '.' '[' expr ']'
  409     | expr . "?[" expr ']'
  410     | expr . '.' "?[" expr ']'
  411     | expr . "?." "name"
  412     | expr . '.' "?." "name"
  421     | expr . "??" expr
  422     | expr . '?' expr ':' expr
  425     | expr . "is" "type" '<' $@19 type_declaration_no_options '>' $@20
  426     | expr . "is" basic_type_declaration
  427     | expr . "is" "name"
  428     | expr . "as" "name"
  431     | expr . "as" "type" '<' $@21 type_declaration '>' $@22
  432     | expr . "as" basic_type_declaration
  433     | expr . '?' "as" "name"
  436     | expr . '?' "as" "type" '<' $@23 type_declaration '>' $@24
  437     | expr . '?' "as" basic_type_declaration
  445     | expr . "<|" expr
  446     | expr . "|>" expr
  447     | expr . "|>" basic_type_declaration
  458 expr_mtag: expr . '.' "$f" '(' expr ')'
  459          | expr . "?." "$f" '(' expr ')'
  460          | expr . '.' '.' "$f" '(' expr ')'
  461          | expr . '.' "?." "$f" '(' expr ')'
  462          | expr . "as" "$f" '(' expr ')'
  463          | expr . '?' "as" "$f" '(' expr ')'
  464          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 637
    "as"   shift, and go to state 638
    "<<"   shift, and go to state 639
    ">>"   shift, and go to state 640
    "++"   shift, and go to state 641
    "--"   shift, and go to state 642
    "<="   shift, and go to state 643
    ">="   shift, and go to state 644
    "=="   shift, and go to state 645
    "!="   shift, and go to state 646
    "->"   shift, and go to state 647
    "??"   shift, and go to state 648
    "?."   shift, and go to state 649
    "?["   shift, and go to state 650
    "<|"   shift, and go to state 651
    "|>"   shift, and go to state 652
    "<<<"  shift, and go to state 653
    ">>>"  shift, and go to state 654
    "&&"   shift, and go to state 655
    "||"   shift, and go to state 656
    "^^"   shift, and go to state 657
    ".."   shift, and go to state 658
    '?'    shift, and go to state 659
    '|'    shift, and go to state 660
    '^'    shift, and go to state 661
    '&'    shift, and go to state 662
    '<'    shift, and go to state 663
    '>'    shift, and go to state 664
    '-'    shift, and go to state 665
    '+'    shift, and go to state 666
    '*'    shift, and go to state 667
    '/'    shift, and go to state 668
    '%'    shift, and go to state 669
    '.'    shift, and go to state 670
    '['    shift, and go to state 671

    $default  reduce using rule 246 (expression_delete)


State 923

   74 expression_with: "with" '(' expr . ')' expression_block
  339 expr_method_call: expr . "->" "name" '(' ')'
  340                 | expr . "->" "name" '(' expr_list ')'
  350 expr_field: expr . '.' "name"
  351           | expr . '.' '.' "name"
  352           | expr . '.' "name" '(' ')'
  353           | expr . '.' "name" '(' expr_list ')'
  354           | expr . '.' basic_type_declaration '(' ')'
  355           | expr . '.' basic_type_declaration '(' expr_list ')'
  358           | expr . '.' $@17 error $@18
  380 expr: expr . "<<" expr
  381     | expr . ">>" expr
  382     | expr . "<<<" expr
  383     | expr . ">>>" expr
  384     | expr . '+' expr
  385     | expr . '-' expr
  386     | expr . '*' expr
  387     | expr . '/' expr
  388     | expr . '%' expr
  389     | expr . '<' expr
  390     | expr . '>' expr
  391     | expr . "==" expr
  392     | expr . "!=" expr
  393     | expr . "<=" expr
  394     | expr . ">=" expr
  395     | expr . '&' expr
  396     | expr . '|' expr
  397     | expr . '^' expr
  398     | expr . "&&" expr
  399     | expr . "||" expr
  400     | expr . "^^" expr
  401     | expr . ".." expr
  404     | expr . "++"
  405     | expr . "--"
  407     | expr . '[' expr ']'
  408     | expr . '.' '[' expr ']'
  409     | expr . "?[" expr ']'
  410     | expr . '.' "?[" expr ']'
  411     | expr . "?." "name"
  412     | expr . '.' "?." "name"
  421     | expr . "??" expr
  422     | expr . '?' expr ':' expr
  425     | expr . "is" "type" '<' $@19 type_declaration_no_options '>' $@20
  426     | expr . "is" basic_type_declaration
  427     | expr . "is" "name"
  428     | expr . "as" "name"
  431     | expr . "as" "type" '<' $@21 type_declaration '>' $@22
  432     | expr . "as" basic_type_declaration
  433     | expr . '?' "as" "name"
  436     | expr . '?' "as" "type" '<' $@23 type_declaration '>' $@24
  437     | expr . '?' "as" basic_type_declaration
  445     | expr . "<|" expr
  446     | expr . "|>" expr
  447     | expr . "|>" basic_type_declaration
  458 expr_mtag: expr . '.' "$f" '(' expr ')'
  459          | expr . "?." "$f" '(' expr ')'
  460          | expr . '.' '.' "$f" '(' expr ')'
  461          | expr . '.' "?." "$f" '(' expr ')'
  462          | expr . "as" "$f" '(' expr ')'
  463          | expr . '?' "as" "$f" '(' expr ')'
  464          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 637
    "as"   shift, and go to state 638
    "<<"   shift, and go to state 639
    ">>"   shift, and go to state 640
    "++"   shift, and go to state 641
    "--"   shift, and go to state 642
    "<="   shift, and go to state 643
    ">="   shift, and go to state 644
    "=="   shift, and go to state 645
    "!="   shift, and go to state 646
    "->"   shift, and go to state 647
    "??"   shift, and go to state 648
    "?."   shift, and go to state 649
    "?["   shift, and go to state 650
    "<|"   shift, and go to state 651
    "|>"   shift, and go to state 652
    "<<<"  shift, and go to state 653
    ">>>"  shift, and go to state 654
    "&&"   shift, and go to state 655
    "||"   shift, and go to state 656
    "^^"   shift, and go to state 657
    ".."   shift, and go to state 658
    '?'    shift, and go to state 659
    '|'    shift, and go to state 660
    '^'    shift, and go to state 661
    '&'    shift, and go to state 662
    '<'    shift, and go to state 663
    '>'    shift, and go to state 664
    '-'    shift, and go to state 665
    '+'    shift, and go to state 666
    '*'    shift, and go to state 667
    '/'    shift, and go to state 668
    '%'    shift, and go to state 669
    '.'    shift, and go to state 670
    '['    shift, and go to state 671
    ')'    shift, and go to state 1081


State 924

   75 expression_with_alias: "assume" "name" '=' . expr

    "struct"                          shift, and go to state 402
    "class"                           shift, and go to state 403
    "true"                            shift, and go to state 404
    "false"                           shift, and go to state 405
    "new"                             shift, and go to state 406
    "typeinfo"                        shift, and go to state 407
    "type"                            shift, and go to state 408
    "array"                           shift, and go to state 409
    "null"                            shift, and go to state 410
    "table"                           shift, and go to state 411
    "deref"                           shift, and go to state 412
    "cast"                            shift, and go to state 413
    "upcast"                          shift, and go to state 414
    "addr"                            shift, and go to state 415
    "reinterpret"                     shift, and go to state 416
    "unsafe"                          shift, and go to state 417
    "fixed_array"                     shift, and go to state 418
    "default"                         shift, and go to state 419
    "bool"                            shift, and go to state 222
    "void"                            shift, and go to state 223
    "string"                          shift, and go to state 224
    "int"                             shift, and go to state 226
    "int2"                            shift, and go to state 227
    "int3"                            shift, and go to state 228
    "int4"                            shift, and go to state 229
    "uint"                            shift, and go to state 230
    "bitfield"                        shift, and go to state 420
    "uint2"                           shift, and go to state 232
    "uint3"                           shift, and go to state 233
    "uint4"                           shift, and go to state 234
    "float"                           shift, and go to state 235
    "float2"                          shift, and go to state 236
    "float3"                          shift, and go to state 237
    "float4"                          shift, and go to state 238
    "range"                           shift, and go to state 239
    "urange"                          shift, and go to state 240
    "range64"                         shift, and go to state 241
    "urange64"                        shift, and go to state 242
    "int64"                           shift, and go to state 244
    "uint64"                          shift, and go to state 245
    "double"                          shift, and go to state 246
    "int8"                            shift, and go to state 249
    "uint8"                           shift, and go to state 250
    "int16"                           shift, and go to state 251
    "uint16"                          shift, and go to state 252
    "tuple"                           shift, and go to state 421
    "variant"                         shift, and go to state 422
    "generator"                       shift, and go to state 423
    "++"                              shift, and go to state 424
    "--"                              shift, and go to state 425
    "::"                              shift, and go to state 55
    "$$"                              shift, and go to state 426
    "$i"                              shift, and go to state 427
    "$v"                              shift, and go to state 428
    "$b"                              shift, and go to state 429
    "$a"                              shift, and go to state 430
    "$c"                              shift, and go to state 431
    "..."                             shift, and go to state 432
    "integer constant"                shift, and go to state 433
    "long integer constant"           shift, and go to state 434
    "unsigned integer constant"       shift, and go to state 435
    "unsigned long integer constant"  shift, and go to state 436
    "unsigned int8 constant"          shift, and go to state 437
    "floating point constant"         shift, and go to state 438
    "double constant"                 shift, and go to state 439
    "name"                            shift, and go to state 56
    "start of the string"             shift, and go to state 440
    "begin of code block"             shift, and go to state 441
    '-'                               shift, and go to state 442
    '+'                               shift, and go to state 443
    '*'                               shift, and go to state 444
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 445
    '!'                               shift, and go to state 446
    '['                               shift, and go to state 447
    '('                               shift, and go to state 448
    '$'                               shift, and go to state 449
    '@'                               shift, and go to state 450

    string_builder          go to state 451
    expr_reader             go to state 452
    expr_call_pipe          go to state 453
    name_in_namespace       go to state 454
    expr_new                go to state 455
    expr_cast               go to state 456
    expr_type_decl          go to state 457
    expr_type_info          go to state 458
    block_or_lambda         go to state 459
    expr_full_block         go to state 460
    expr_numeric_const      go to state 461
    expr_named_call         go to state 462
    expr_method_call        go to state 463
    func_addr_expr          go to state 464
    expr_field              go to state 465
    expr_call               go to state 466
    expr                    go to state 1082
    expr_mtag               go to state 468
    basic_type_declaration  go to state 469
    make_decl               go to state 470
    make_struct_decl        go to state 471
    make_tuple_call         go to state 472
    make_dim_decl           go to state 473
    make_table_decl         go to state 474
    array_comprehension     go to state 475


State 925

   52 expression_label: "label" "integer constant" ':' .

    $default  reduce using rule 52 (expression_label)


State 926

   53 expression_goto: "goto" "label" "integer constant" .

    $default  reduce using rule 53 (expression_goto)


State 927

  261 expression_yield: "yield" "<-" expr .
  339 expr_method_call: expr . "->" "name" '(' ')'
  340                 | expr . "->" "name" '(' expr_list ')'
  350 expr_field: expr . '.' "name"
  351           | expr . '.' '.' "name"
  352           | expr . '.' "name" '(' ')'
  353           | expr . '.' "name" '(' expr_list ')'
  354           | expr . '.' basic_type_declaration '(' ')'
  355           | expr . '.' basic_type_declaration '(' expr_list ')'
  358           | expr . '.' $@17 error $@18
  380 expr: expr . "<<" expr
  381     | expr . ">>" expr
  382     | expr . "<<<" expr
  383     | expr . ">>>" expr
  384     | expr . '+' expr
  385     | expr . '-' expr
  386     | expr . '*' expr
  387     | expr . '/' expr
  388     | expr . '%' expr
  389     | expr . '<' expr
  390     | expr . '>' expr
  391     | expr . "==" expr
  392     | expr . "!=" expr
  393     | expr . "<=" expr
  394     | expr . ">=" expr
  395     | expr . '&' expr
  396     | expr . '|' expr
  397     | expr . '^' expr
  398     | expr . "&&" expr
  399     | expr . "||" expr
  400     | expr . "^^" expr
  401     | expr . ".." expr
  404     | expr . "++"
  405     | expr . "--"
  407     | expr . '[' expr ']'
  408     | expr . '.' '[' expr ']'
  409     | expr . "?[" expr ']'
  410     | expr . '.' "?[" expr ']'
  411     | expr . "?." "name"
  412     | expr . '.' "?." "name"
  421     | expr . "??" expr
  422     | expr . '?' expr ':' expr
  425     | expr . "is" "type" '<' $@19 type_declaration_no_options '>' $@20
  426     | expr . "is" basic_type_declaration
  427     | expr . "is" "name"
  428     | expr . "as" "name"
  431     | expr . "as" "type" '<' $@21 type_declaration '>' $@22
  432     | expr . "as" basic_type_declaration
  433     | expr . '?' "as" "name"
  436     | expr . '?' "as" "type" '<' $@23 type_declaration '>' $@24
  437     | expr . '?' "as" basic_type_declaration
  445     | expr . "<|" expr
  446     | expr . "|>" expr
  447     | expr . "|>" basic_type_declaration
  458 expr_mtag: expr . '.' "$f" '(' expr ')'
  459          | expr . "?." "$f" '(' expr ')'
  460          | expr . '.' '.' "$f" '(' expr ')'
  461          | expr . '.' "?." "$f" '(' expr ')'
  462          | expr . "as" "$f" '(' expr ')'
  463          | expr . '?' "as" "$f" '(' expr ')'
  464          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 637
    "as"   shift, and go to state 638
    "<<"   shift, and go to state 639
    ">>"   shift, and go to state 640
    "++"   shift, and go to state 641
    "--"   shift, and go to state 642
    "<="   shift, and go to state 643
    ">="   shift, and go to state 644
    "=="   shift, and go to state 645
    "!="   shift, and go to state 646
    "->"   shift, and go to state 647
    "??"   shift, and go to state 648
    "?."   shift, and go to state 649
    "?["   shift, and go to state 650
    "<|"   shift, and go to state 651
    "|>"   shift, and go to state 652
    "<<<"  shift, and go to state 653
    ">>>"  shift, and go to state 654
    "&&"   shift, and go to state 655
    "||"   shift, and go to state 656
    "^^"   shift, and go to state 657
    ".."   shift, and go to state 658
    '?'    shift, and go to state 659
    '|'    shift, and go to state 660
    '^'    shift, and go to state 661
    '&'    shift, and go to state 662
    '<'    shift, and go to state 663
    '>'    shift, and go to state 664
    '-'    shift, and go to state 665
    '+'    shift, and go to state 666
    '*'    shift, and go to state 667
    '/'    shift, and go to state 668
    '%'    shift, and go to state 669
    '.'    shift, and go to state 670
    '['    shift, and go to state 671

    $default  reduce using rule 261 (expression_yield)


State 928

  213 expression_block: "begin of code block" expressions "end of code block" "finally" "begin of code block" . expressions "end of code block"

    $default  reduce using rule 233 (expressions)

    expressions  go to state 1083


State 929

   69 expression_if_then_else: if_or_static_if '(' expr . ')' expression_block expression_else
  339 expr_method_call: expr . "->" "name" '(' ')'
  340                 | expr . "->" "name" '(' expr_list ')'
  350 expr_field: expr . '.' "name"
  351           | expr . '.' '.' "name"
  352           | expr . '.' "name" '(' ')'
  353           | expr . '.' "name" '(' expr_list ')'
  354           | expr . '.' basic_type_declaration '(' ')'
  355           | expr . '.' basic_type_declaration '(' expr_list ')'
  358           | expr . '.' $@17 error $@18
  380 expr: expr . "<<" expr
  381     | expr . ">>" expr
  382     | expr . "<<<" expr
  383     | expr . ">>>" expr
  384     | expr . '+' expr
  385     | expr . '-' expr
  386     | expr . '*' expr
  387     | expr . '/' expr
  388     | expr . '%' expr
  389     | expr . '<' expr
  390     | expr . '>' expr
  391     | expr . "==" expr
  392     | expr . "!=" expr
  393     | expr . "<=" expr
  394     | expr . ">=" expr
  395     | expr . '&' expr
  396     | expr . '|' expr
  397     | expr . '^' expr
  398     | expr . "&&" expr
  399     | expr . "||" expr
  400     | expr . "^^" expr
  401     | expr . ".." expr
  404     | expr . "++"
  405     | expr . "--"
  407     | expr . '[' expr ']'
  408     | expr . '.' '[' expr ']'
  409     | expr . "?[" expr ']'
  410     | expr . '.' "?[" expr ']'
  411     | expr . "?." "name"
  412     | expr . '.' "?." "name"
  421     | expr . "??" expr
  422     | expr . '?' expr ':' expr
  425     | expr . "is" "type" '<' $@19 type_declaration_no_options '>' $@20
  426     | expr . "is" basic_type_declaration
  427     | expr . "is" "name"
  428     | expr . "as" "name"
  431     | expr . "as" "type" '<' $@21 type_declaration '>' $@22
  432     | expr . "as" basic_type_declaration
  433     | expr . '?' "as" "name"
  436     | expr . '?' "as" "type" '<' $@23 type_declaration '>' $@24
  437     | expr . '?' "as" basic_type_declaration
  445     | expr . "<|" expr
  446     | expr . "|>" expr
  447     | expr . "|>" basic_type_declaration
  458 expr_mtag: expr . '.' "$f" '(' expr ')'
  459          | expr . "?." "$f" '(' expr ')'
  460          | expr . '.' '.' "$f" '(' expr ')'
  461          | expr . '.' "?." "$f" '(' expr ')'
  462          | expr . "as" "$f" '(' expr ')'
  463          | expr . '?' "as" "$f" '(' expr ')'
  464          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 637
    "as"   shift, and go to state 638
    "<<"   shift, and go to state 639
    ">>"   shift, and go to state 640
    "++"   shift, and go to state 641
    "--"   shift, and go to state 642
    "<="   shift, and go to state 643
    ">="   shift, and go to state 644
    "=="   shift, and go to state 645
    "!="   shift, and go to state 646
    "->"   shift, and go to state 647
    "??"   shift, and go to state 648
    "?."   shift, and go to state 649
    "?["   shift, and go to state 650
    "<|"   shift, and go to state 651
    "|>"   shift, and go to state 652
    "<<<"  shift, and go to state 653
    ">>>"  shift, and go to state 654
    "&&"   shift, and go to state 655
    "||"   shift, and go to state 656
    "^^"   shift, and go to state 657
    ".."   shift, and go to state 658
    '?'    shift, and go to state 659
    '|'    shift, and go to state 660
    '^'    shift, and go to state 661
    '&'    shift, and go to state 662
    '<'    shift, and go to state 663
    '>'    shift, and go to state 664
    '-'    shift, and go to state 665
    '+'    shift, and go to state 666
    '*'    shift, and go to state 667
    '/'    shift, and go to state 668
    '%'    shift, and go to state 669
    '.'    shift, and go to state 670
    '['    shift, and go to state 671
    ')'    shift, and go to state 1084


State 930

   70 expression_if_then_else: expression_if_one_liner "if" '(' . expr ')' expression_else_one_liner "end of expression"

    "struct"                          shift, and go to state 402
    "class"                           shift, and go to state 403
    "true"                            shift, and go to state 404
    "false"                           shift, and go to state 405
    "new"                             shift, and go to state 406
    "typeinfo"                        shift, and go to state 407
    "type"                            shift, and go to state 408
    "array"                           shift, and go to state 409
    "null"                            shift, and go to state 410
    "table"                           shift, and go to state 411
    "deref"                           shift, and go to state 412
    "cast"                            shift, and go to state 413
    "upcast"                          shift, and go to state 414
    "addr"                            shift, and go to state 415
    "reinterpret"                     shift, and go to state 416
    "unsafe"                          shift, and go to state 417
    "fixed_array"                     shift, and go to state 418
    "default"                         shift, and go to state 419
    "bool"                            shift, and go to state 222
    "void"                            shift, and go to state 223
    "string"                          shift, and go to state 224
    "int"                             shift, and go to state 226
    "int2"                            shift, and go to state 227
    "int3"                            shift, and go to state 228
    "int4"                            shift, and go to state 229
    "uint"                            shift, and go to state 230
    "bitfield"                        shift, and go to state 420
    "uint2"                           shift, and go to state 232
    "uint3"                           shift, and go to state 233
    "uint4"                           shift, and go to state 234
    "float"                           shift, and go to state 235
    "float2"                          shift, and go to state 236
    "float3"                          shift, and go to state 237
    "float4"                          shift, and go to state 238
    "range"                           shift, and go to state 239
    "urange"                          shift, and go to state 240
    "range64"                         shift, and go to state 241
    "urange64"                        shift, and go to state 242
    "int64"                           shift, and go to state 244
    "uint64"                          shift, and go to state 245
    "double"                          shift, and go to state 246
    "int8"                            shift, and go to state 249
    "uint8"                           shift, and go to state 250
    "int16"                           shift, and go to state 251
    "uint16"                          shift, and go to state 252
    "tuple"                           shift, and go to state 421
    "variant"                         shift, and go to state 422
    "generator"                       shift, and go to state 423
    "++"                              shift, and go to state 424
    "--"                              shift, and go to state 425
    "::"                              shift, and go to state 55
    "$$"                              shift, and go to state 426
    "$i"                              shift, and go to state 427
    "$v"                              shift, and go to state 428
    "$b"                              shift, and go to state 429
    "$a"                              shift, and go to state 430
    "$c"                              shift, and go to state 431
    "..."                             shift, and go to state 432
    "integer constant"                shift, and go to state 433
    "long integer constant"           shift, and go to state 434
    "unsigned integer constant"       shift, and go to state 435
    "unsigned long integer constant"  shift, and go to state 436
    "unsigned int8 constant"          shift, and go to state 437
    "floating point constant"         shift, and go to state 438
    "double constant"                 shift, and go to state 439
    "name"                            shift, and go to state 56
    "start of the string"             shift, and go to state 440
    "begin of code block"             shift, and go to state 441
    '-'                               shift, and go to state 442
    '+'                               shift, and go to state 443
    '*'                               shift, and go to state 444
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 445
    '!'                               shift, and go to state 446
    '['                               shift, and go to state 447
    '('                               shift, and go to state 448
    '$'                               shift, and go to state 449
    '@'                               shift, and go to state 450

    string_builder          go to state 451
    expr_reader             go to state 452
    expr_call_pipe          go to state 453
    name_in_namespace       go to state 454
    expr_new                go to state 455
    expr_cast               go to state 456
    expr_type_decl          go to state 457
    expr_type_info          go to state 458
    block_or_lambda         go to state 459
    expr_full_block         go to state 460
    expr_numeric_const      go to state 461
    expr_named_call         go to state 462
    expr_method_call        go to state 463
    func_addr_expr          go to state 464
    expr_field              go to state 465
    expr_call               go to state 466
    expr                    go to state 1085
    expr_mtag               go to state 468
    basic_type_declaration  go to state 469
    make_decl               go to state 470
    make_struct_decl        go to state 471
    make_tuple_call         go to state 472
    make_dim_decl           go to state 473
    make_table_decl         go to state 474
    array_comprehension     go to state 475


State 931

  516 let_variable_name_with_pos_list: "$i" . '(' expr ')'

    '('  shift, and go to state 1086


State 932

  515 let_variable_name_with_pos_list: "name" .
  517                                | "name" . "aka" "name"

    "aka"  shift, and go to state 1087

    $default  reduce using rule 515 (let_variable_name_with_pos_list)


State 933

  272 tuple_expansion_variable_declaration: '(' . tuple_expansion ')' ':' type_declaration_no_options copy_or_move_or_clone expr "end of expression"
  273                                     | '(' . tuple_expansion ')' optional_ref copy_or_move_or_clone expr "end of expression"

    "name"  shift, and go to state 1088

    tuple_expansion  go to state 1089


State 934

  275 expression_let: kwd_let optional_in_scope tuple_expansion_variable_declaration .

    $default  reduce using rule 275 (expression_let)


State 935

  518 let_variable_name_with_pos_list: let_variable_name_with_pos_list . ',' "name"
  519                                | let_variable_name_with_pos_list . ',' "name" "aka" "name"
  522 let_variable_declaration: let_variable_name_with_pos_list . ':' type_declaration_no_options "end of expression"
  523                         | let_variable_name_with_pos_list . ':' type_declaration_no_options copy_or_move_or_clone expr "end of expression"
  524                         | let_variable_name_with_pos_list . optional_ref copy_or_move_or_clone expr "end of expression"

    ','  shift, and go to state 1090
    ':'  shift, and go to state 1091
    '&'  shift, and go to state 397

    $default  reduce using rule 513 (optional_ref)

    optional_ref  go to state 1092


State 936

  274 expression_let: kwd_let optional_in_scope let_variable_declaration .

    $default  reduce using rule 274 (expression_let)


State 937

  328 expr_assign: expr "+=" expr .
  339 expr_method_call: expr . "->" "name" '(' ')'
  340                 | expr . "->" "name" '(' expr_list ')'
  350 expr_field: expr . '.' "name"
  351           | expr . '.' '.' "name"
  352           | expr . '.' "name" '(' ')'
  353           | expr . '.' "name" '(' expr_list ')'
  354           | expr . '.' basic_type_declaration '(' ')'
  355           | expr . '.' basic_type_declaration '(' expr_list ')'
  358           | expr . '.' $@17 error $@18
  380 expr: expr . "<<" expr
  381     | expr . ">>" expr
  382     | expr . "<<<" expr
  383     | expr . ">>>" expr
  384     | expr . '+' expr
  385     | expr . '-' expr
  386     | expr . '*' expr
  387     | expr . '/' expr
  388     | expr . '%' expr
  389     | expr . '<' expr
  390     | expr . '>' expr
  391     | expr . "==" expr
  392     | expr . "!=" expr
  393     | expr . "<=" expr
  394     | expr . ">=" expr
  395     | expr . '&' expr
  396     | expr . '|' expr
  397     | expr . '^' expr
  398     | expr . "&&" expr
  399     | expr . "||" expr
  400     | expr . "^^" expr
  401     | expr . ".." expr
  404     | expr . "++"
  405     | expr . "--"
  407     | expr . '[' expr ']'
  408     | expr . '.' '[' expr ']'
  409     | expr . "?[" expr ']'
  410     | expr . '.' "?[" expr ']'
  411     | expr . "?." "name"
  412     | expr . '.' "?." "name"
  421     | expr . "??" expr
  422     | expr . '?' expr ':' expr
  425     | expr . "is" "type" '<' $@19 type_declaration_no_options '>' $@20
  426     | expr . "is" basic_type_declaration
  427     | expr . "is" "name"
  428     | expr . "as" "name"
  431     | expr . "as" "type" '<' $@21 type_declaration '>' $@22
  432     | expr . "as" basic_type_declaration
  433     | expr . '?' "as" "name"
  436     | expr . '?' "as" "type" '<' $@23 type_declaration '>' $@24
  437     | expr . '?' "as" basic_type_declaration
  445     | expr . "<|" expr
  446     | expr . "|>" expr
  447     | expr . "|>" basic_type_declaration
  458 expr_mtag: expr . '.' "$f" '(' expr ')'
  459          | expr . "?." "$f" '(' expr ')'
  460          | expr . '.' '.' "$f" '(' expr ')'
  461          | expr . '.' "?." "$f" '(' expr ')'
  462          | expr . "as" "$f" '(' expr ')'
  463          | expr . '?' "as" "$f" '(' expr ')'
  464          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 637
    "as"   shift, and go to state 638
    "<<"   shift, and go to state 639
    ">>"   shift, and go to state 640
    "++"   shift, and go to state 641
    "--"   shift, and go to state 642
    "<="   shift, and go to state 643
    ">="   shift, and go to state 644
    "=="   shift, and go to state 645
    "!="   shift, and go to state 646
    "->"   shift, and go to state 647
    "??"   shift, and go to state 648
    "?."   shift, and go to state 649
    "?["   shift, and go to state 650
    "<|"   shift, and go to state 651
    "|>"   shift, and go to state 652
    "<<<"  shift, and go to state 653
    ">>>"  shift, and go to state 654
    "&&"   shift, and go to state 655
    "||"   shift, and go to state 656
    "^^"   shift, and go to state 657
    ".."   shift, and go to state 658
    '?'    shift, and go to state 659
    '|'    shift, and go to state 660
    '^'    shift, and go to state 661
    '&'    shift, and go to state 662
    '<'    shift, and go to state 663
    '>'    shift, and go to state 664
    '-'    shift, and go to state 665
    '+'    shift, and go to state 666
    '*'    shift, and go to state 667
    '/'    shift, and go to state 668
    '%'    shift, and go to state 669
    '.'    shift, and go to state 670
    '['    shift, and go to state 671

    $default  reduce using rule 328 (expr_assign)


State 938

  329 expr_assign: expr "-=" expr .
  339 expr_method_call: expr . "->" "name" '(' ')'
  340                 | expr . "->" "name" '(' expr_list ')'
  350 expr_field: expr . '.' "name"
  351           | expr . '.' '.' "name"
  352           | expr . '.' "name" '(' ')'
  353           | expr . '.' "name" '(' expr_list ')'
  354           | expr . '.' basic_type_declaration '(' ')'
  355           | expr . '.' basic_type_declaration '(' expr_list ')'
  358           | expr . '.' $@17 error $@18
  380 expr: expr . "<<" expr
  381     | expr . ">>" expr
  382     | expr . "<<<" expr
  383     | expr . ">>>" expr
  384     | expr . '+' expr
  385     | expr . '-' expr
  386     | expr . '*' expr
  387     | expr . '/' expr
  388     | expr . '%' expr
  389     | expr . '<' expr
  390     | expr . '>' expr
  391     | expr . "==" expr
  392     | expr . "!=" expr
  393     | expr . "<=" expr
  394     | expr . ">=" expr
  395     | expr . '&' expr
  396     | expr . '|' expr
  397     | expr . '^' expr
  398     | expr . "&&" expr
  399     | expr . "||" expr
  400     | expr . "^^" expr
  401     | expr . ".." expr
  404     | expr . "++"
  405     | expr . "--"
  407     | expr . '[' expr ']'
  408     | expr . '.' '[' expr ']'
  409     | expr . "?[" expr ']'
  410     | expr . '.' "?[" expr ']'
  411     | expr . "?." "name"
  412     | expr . '.' "?." "name"
  421     | expr . "??" expr
  422     | expr . '?' expr ':' expr
  425     | expr . "is" "type" '<' $@19 type_declaration_no_options '>' $@20
  426     | expr . "is" basic_type_declaration
  427     | expr . "is" "name"
  428     | expr . "as" "name"
  431     | expr . "as" "type" '<' $@21 type_declaration '>' $@22
  432     | expr . "as" basic_type_declaration
  433     | expr . '?' "as" "name"
  436     | expr . '?' "as" "type" '<' $@23 type_declaration '>' $@24
  437     | expr . '?' "as" basic_type_declaration
  445     | expr . "<|" expr
  446     | expr . "|>" expr
  447     | expr . "|>" basic_type_declaration
  458 expr_mtag: expr . '.' "$f" '(' expr ')'
  459          | expr . "?." "$f" '(' expr ')'
  460          | expr . '.' '.' "$f" '(' expr ')'
  461          | expr . '.' "?." "$f" '(' expr ')'
  462          | expr . "as" "$f" '(' expr ')'
  463          | expr . '?' "as" "$f" '(' expr ')'
  464          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 637
    "as"   shift, and go to state 638
    "<<"   shift, and go to state 639
    ">>"   shift, and go to state 640
    "++"   shift, and go to state 641
    "--"   shift, and go to state 642
    "<="   shift, and go to state 643
    ">="   shift, and go to state 644
    "=="   shift, and go to state 645
    "!="   shift, and go to state 646
    "->"   shift, and go to state 647
    "??"   shift, and go to state 648
    "?."   shift, and go to state 649
    "?["   shift, and go to state 650
    "<|"   shift, and go to state 651
    "|>"   shift, and go to state 652
    "<<<"  shift, and go to state 653
    ">>>"  shift, and go to state 654
    "&&"   shift, and go to state 655
    "||"   shift, and go to state 656
    "^^"   shift, and go to state 657
    ".."   shift, and go to state 658
    '?'    shift, and go to state 659
    '|'    shift, and go to state 660
    '^'    shift, and go to state 661
    '&'    shift, and go to state 662
    '<'    shift, and go to state 663
    '>'    shift, and go to state 664
    '-'    shift, and go to state 665
    '+'    shift, and go to state 666
    '*'    shift, and go to state 667
    '/'    shift, and go to state 668
    '%'    shift, and go to state 669
    '.'    shift, and go to state 670
    '['    shift, and go to state 671

    $default  reduce using rule 329 (expr_assign)


State 939

  331 expr_assign: expr "/=" expr .
  339 expr_method_call: expr . "->" "name" '(' ')'
  340                 | expr . "->" "name" '(' expr_list ')'
  350 expr_field: expr . '.' "name"
  351           | expr . '.' '.' "name"
  352           | expr . '.' "name" '(' ')'
  353           | expr . '.' "name" '(' expr_list ')'
  354           | expr . '.' basic_type_declaration '(' ')'
  355           | expr . '.' basic_type_declaration '(' expr_list ')'
  358           | expr . '.' $@17 error $@18
  380 expr: expr . "<<" expr
  381     | expr . ">>" expr
  382     | expr . "<<<" expr
  383     | expr . ">>>" expr
  384     | expr . '+' expr
  385     | expr . '-' expr
  386     | expr . '*' expr
  387     | expr . '/' expr
  388     | expr . '%' expr
  389     | expr . '<' expr
  390     | expr . '>' expr
  391     | expr . "==" expr
  392     | expr . "!=" expr
  393     | expr . "<=" expr
  394     | expr . ">=" expr
  395     | expr . '&' expr
  396     | expr . '|' expr
  397     | expr . '^' expr
  398     | expr . "&&" expr
  399     | expr . "||" expr
  400     | expr . "^^" expr
  401     | expr . ".." expr
  404     | expr . "++"
  405     | expr . "--"
  407     | expr . '[' expr ']'
  408     | expr . '.' '[' expr ']'
  409     | expr . "?[" expr ']'
  410     | expr . '.' "?[" expr ']'
  411     | expr . "?." "name"
  412     | expr . '.' "?." "name"
  421     | expr . "??" expr
  422     | expr . '?' expr ':' expr
  425     | expr . "is" "type" '<' $@19 type_declaration_no_options '>' $@20
  426     | expr . "is" basic_type_declaration
  427     | expr . "is" "name"
  428     | expr . "as" "name"
  431     | expr . "as" "type" '<' $@21 type_declaration '>' $@22
  432     | expr . "as" basic_type_declaration
  433     | expr . '?' "as" "name"
  436     | expr . '?' "as" "type" '<' $@23 type_declaration '>' $@24
  437     | expr . '?' "as" basic_type_declaration
  445     | expr . "<|" expr
  446     | expr . "|>" expr
  447     | expr . "|>" basic_type_declaration
  458 expr_mtag: expr . '.' "$f" '(' expr ')'
  459          | expr . "?." "$f" '(' expr ')'
  460          | expr . '.' '.' "$f" '(' expr ')'
  461          | expr . '.' "?." "$f" '(' expr ')'
  462          | expr . "as" "$f" '(' expr ')'
  463          | expr . '?' "as" "$f" '(' expr ')'
  464          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 637
    "as"   shift, and go to state 638
    "<<"   shift, and go to state 639
    ">>"   shift, and go to state 640
    "++"   shift, and go to state 641
    "--"   shift, and go to state 642
    "<="   shift, and go to state 643
    ">="   shift, and go to state 644
    "=="   shift, and go to state 645
    "!="   shift, and go to state 646
    "->"   shift, and go to state 647
    "??"   shift, and go to state 648
    "?."   shift, and go to state 649
    "?["   shift, and go to state 650
    "<|"   shift, and go to state 651
    "|>"   shift, and go to state 652
    "<<<"  shift, and go to state 653
    ">>>"  shift, and go to state 654
    "&&"   shift, and go to state 655
    "||"   shift, and go to state 656
    "^^"   shift, and go to state 657
    ".."   shift, and go to state 658
    '?'    shift, and go to state 659
    '|'    shift, and go to state 660
    '^'    shift, and go to state 661
    '&'    shift, and go to state 662
    '<'    shift, and go to state 663
    '>'    shift, and go to state 664
    '-'    shift, and go to state 665
    '+'    shift, and go to state 666
    '*'    shift, and go to state 667
    '/'    shift, and go to state 668
    '%'    shift, and go to state 669
    '.'    shift, and go to state 670
    '['    shift, and go to state 671

    $default  reduce using rule 331 (expr_assign)


State 940

  330 expr_assign: expr "*=" expr .
  339 expr_method_call: expr . "->" "name" '(' ')'
  340                 | expr . "->" "name" '(' expr_list ')'
  350 expr_field: expr . '.' "name"
  351           | expr . '.' '.' "name"
  352           | expr . '.' "name" '(' ')'
  353           | expr . '.' "name" '(' expr_list ')'
  354           | expr . '.' basic_type_declaration '(' ')'
  355           | expr . '.' basic_type_declaration '(' expr_list ')'
  358           | expr . '.' $@17 error $@18
  380 expr: expr . "<<" expr
  381     | expr . ">>" expr
  382     | expr . "<<<" expr
  383     | expr . ">>>" expr
  384     | expr . '+' expr
  385     | expr . '-' expr
  386     | expr . '*' expr
  387     | expr . '/' expr
  388     | expr . '%' expr
  389     | expr . '<' expr
  390     | expr . '>' expr
  391     | expr . "==" expr
  392     | expr . "!=" expr
  393     | expr . "<=" expr
  394     | expr . ">=" expr
  395     | expr . '&' expr
  396     | expr . '|' expr
  397     | expr . '^' expr
  398     | expr . "&&" expr
  399     | expr . "||" expr
  400     | expr . "^^" expr
  401     | expr . ".." expr
  404     | expr . "++"
  405     | expr . "--"
  407     | expr . '[' expr ']'
  408     | expr . '.' '[' expr ']'
  409     | expr . "?[" expr ']'
  410     | expr . '.' "?[" expr ']'
  411     | expr . "?." "name"
  412     | expr . '.' "?." "name"
  421     | expr . "??" expr
  422     | expr . '?' expr ':' expr
  425     | expr . "is" "type" '<' $@19 type_declaration_no_options '>' $@20
  426     | expr . "is" basic_type_declaration
  427     | expr . "is" "name"
  428     | expr . "as" "name"
  431     | expr . "as" "type" '<' $@21 type_declaration '>' $@22
  432     | expr . "as" basic_type_declaration
  433     | expr . '?' "as" "name"
  436     | expr . '?' "as" "type" '<' $@23 type_declaration '>' $@24
  437     | expr . '?' "as" basic_type_declaration
  445     | expr . "<|" expr
  446     | expr . "|>" expr
  447     | expr . "|>" basic_type_declaration
  458 expr_mtag: expr . '.' "$f" '(' expr ')'
  459          | expr . "?." "$f" '(' expr ')'
  460          | expr . '.' '.' "$f" '(' expr ')'
  461          | expr . '.' "?." "$f" '(' expr ')'
  462          | expr . "as" "$f" '(' expr ')'
  463          | expr . '?' "as" "$f" '(' expr ')'
  464          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 637
    "as"   shift, and go to state 638
    "<<"   shift, and go to state 639
    ">>"   shift, and go to state 640
    "++"   shift, and go to state 641
    "--"   shift, and go to state 642
    "<="   shift, and go to state 643
    ">="   shift, and go to state 644
    "=="   shift, and go to state 645
    "!="   shift, and go to state 646
    "->"   shift, and go to state 647
    "??"   shift, and go to state 648
    "?."   shift, and go to state 649
    "?["   shift, and go to state 650
    "<|"   shift, and go to state 651
    "|>"   shift, and go to state 652
    "<<<"  shift, and go to state 653
    ">>>"  shift, and go to state 654
    "&&"   shift, and go to state 655
    "||"   shift, and go to state 656
    "^^"   shift, and go to state 657
    ".."   shift, and go to state 658
    '?'    shift, and go to state 659
    '|'    shift, and go to state 660
    '^'    shift, and go to state 661
    '&'    shift, and go to state 662
    '<'    shift, and go to state 663
    '>'    shift, and go to state 664
    '-'    shift, and go to state 665
    '+'    shift, and go to state 666
    '*'    shift, and go to state 667
    '/'    shift, and go to state 668
    '%'    shift, and go to state 669
    '.'    shift, and go to state 670
    '['    shift, and go to state 671

    $default  reduce using rule 330 (expr_assign)


State 941

  332 expr_assign: expr "%=" expr .
  339 expr_method_call: expr . "->" "name" '(' ')'
  340                 | expr . "->" "name" '(' expr_list ')'
  350 expr_field: expr . '.' "name"
  351           | expr . '.' '.' "name"
  352           | expr . '.' "name" '(' ')'
  353           | expr . '.' "name" '(' expr_list ')'
  354           | expr . '.' basic_type_declaration '(' ')'
  355           | expr . '.' basic_type_declaration '(' expr_list ')'
  358           | expr . '.' $@17 error $@18
  380 expr: expr . "<<" expr
  381     | expr . ">>" expr
  382     | expr . "<<<" expr
  383     | expr . ">>>" expr
  384     | expr . '+' expr
  385     | expr . '-' expr
  386     | expr . '*' expr
  387     | expr . '/' expr
  388     | expr . '%' expr
  389     | expr . '<' expr
  390     | expr . '>' expr
  391     | expr . "==" expr
  392     | expr . "!=" expr
  393     | expr . "<=" expr
  394     | expr . ">=" expr
  395     | expr . '&' expr
  396     | expr . '|' expr
  397     | expr . '^' expr
  398     | expr . "&&" expr
  399     | expr . "||" expr
  400     | expr . "^^" expr
  401     | expr . ".." expr
  404     | expr . "++"
  405     | expr . "--"
  407     | expr . '[' expr ']'
  408     | expr . '.' '[' expr ']'
  409     | expr . "?[" expr ']'
  410     | expr . '.' "?[" expr ']'
  411     | expr . "?." "name"
  412     | expr . '.' "?." "name"
  421     | expr . "??" expr
  422     | expr . '?' expr ':' expr
  425     | expr . "is" "type" '<' $@19 type_declaration_no_options '>' $@20
  426     | expr . "is" basic_type_declaration
  427     | expr . "is" "name"
  428     | expr . "as" "name"
  431     | expr . "as" "type" '<' $@21 type_declaration '>' $@22
  432     | expr . "as" basic_type_declaration
  433     | expr . '?' "as" "name"
  436     | expr . '?' "as" "type" '<' $@23 type_declaration '>' $@24
  437     | expr . '?' "as" basic_type_declaration
  445     | expr . "<|" expr
  446     | expr . "|>" expr
  447     | expr . "|>" basic_type_declaration
  458 expr_mtag: expr . '.' "$f" '(' expr ')'
  459          | expr . "?." "$f" '(' expr ')'
  460          | expr . '.' '.' "$f" '(' expr ')'
  461          | expr . '.' "?." "$f" '(' expr ')'
  462          | expr . "as" "$f" '(' expr ')'
  463          | expr . '?' "as" "$f" '(' expr ')'
  464          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 637
    "as"   shift, and go to state 638
    "<<"   shift, and go to state 639
    ">>"   shift, and go to state 640
    "++"   shift, and go to state 641
    "--"   shift, and go to state 642
    "<="   shift, and go to state 643
    ">="   shift, and go to state 644
    "=="   shift, and go to state 645
    "!="   shift, and go to state 646
    "->"   shift, and go to state 647
    "??"   shift, and go to state 648
    "?."   shift, and go to state 649
    "?["   shift, and go to state 650
    "<|"   shift, and go to state 651
    "|>"   shift, and go to state 652
    "<<<"  shift, and go to state 653
    ">>>"  shift, and go to state 654
    "&&"   shift, and go to state 655
    "||"   shift, and go to state 656
    "^^"   shift, and go to state 657
    ".."   shift, and go to state 658
    '?'    shift, and go to state 659
    '|'    shift, and go to state 660
    '^'    shift, and go to state 661
    '&'    shift, and go to state 662
    '<'    shift, and go to state 663
    '>'    shift, and go to state 664
    '-'    shift, and go to state 665
    '+'    shift, and go to state 666
    '*'    shift, and go to state 667
    '/'    shift, and go to state 668
    '%'    shift, and go to state 669
    '.'    shift, and go to state 670
    '['    shift, and go to state 671

    $default  reduce using rule 332 (expr_assign)


State 942

  322 expr_assign: expr "&=" expr .
  339 expr_method_call: expr . "->" "name" '(' ')'
  340                 | expr . "->" "name" '(' expr_list ')'
  350 expr_field: expr . '.' "name"
  351           | expr . '.' '.' "name"
  352           | expr . '.' "name" '(' ')'
  353           | expr . '.' "name" '(' expr_list ')'
  354           | expr . '.' basic_type_declaration '(' ')'
  355           | expr . '.' basic_type_declaration '(' expr_list ')'
  358           | expr . '.' $@17 error $@18
  380 expr: expr . "<<" expr
  381     | expr . ">>" expr
  382     | expr . "<<<" expr
  383     | expr . ">>>" expr
  384     | expr . '+' expr
  385     | expr . '-' expr
  386     | expr . '*' expr
  387     | expr . '/' expr
  388     | expr . '%' expr
  389     | expr . '<' expr
  390     | expr . '>' expr
  391     | expr . "==" expr
  392     | expr . "!=" expr
  393     | expr . "<=" expr
  394     | expr . ">=" expr
  395     | expr . '&' expr
  396     | expr . '|' expr
  397     | expr . '^' expr
  398     | expr . "&&" expr
  399     | expr . "||" expr
  400     | expr . "^^" expr
  401     | expr . ".." expr
  404     | expr . "++"
  405     | expr . "--"
  407     | expr . '[' expr ']'
  408     | expr . '.' '[' expr ']'
  409     | expr . "?[" expr ']'
  410     | expr . '.' "?[" expr ']'
  411     | expr . "?." "name"
  412     | expr . '.' "?." "name"
  421     | expr . "??" expr
  422     | expr . '?' expr ':' expr
  425     | expr . "is" "type" '<' $@19 type_declaration_no_options '>' $@20
  426     | expr . "is" basic_type_declaration
  427     | expr . "is" "name"
  428     | expr . "as" "name"
  431     | expr . "as" "type" '<' $@21 type_declaration '>' $@22
  432     | expr . "as" basic_type_declaration
  433     | expr . '?' "as" "name"
  436     | expr . '?' "as" "type" '<' $@23 type_declaration '>' $@24
  437     | expr . '?' "as" basic_type_declaration
  445     | expr . "<|" expr
  446     | expr . "|>" expr
  447     | expr . "|>" basic_type_declaration
  458 expr_mtag: expr . '.' "$f" '(' expr ')'
  459          | expr . "?." "$f" '(' expr ')'
  460          | expr . '.' '.' "$f" '(' expr ')'
  461          | expr . '.' "?." "$f" '(' expr ')'
  462          | expr . "as" "$f" '(' expr ')'
  463          | expr . '?' "as" "$f" '(' expr ')'
  464          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 637
    "as"   shift, and go to state 638
    "<<"   shift, and go to state 639
    ">>"   shift, and go to state 640
    "++"   shift, and go to state 641
    "--"   shift, and go to state 642
    "<="   shift, and go to state 643
    ">="   shift, and go to state 644
    "=="   shift, and go to state 645
    "!="   shift, and go to state 646
    "->"   shift, and go to state 647
    "??"   shift, and go to state 648
    "?."   shift, and go to state 649
    "?["   shift, and go to state 650
    "<|"   shift, and go to state 651
    "|>"   shift, and go to state 652
    "<<<"  shift, and go to state 653
    ">>>"  shift, and go to state 654
    "&&"   shift, and go to state 655
    "||"   shift, and go to state 656
    "^^"   shift, and go to state 657
    ".."   shift, and go to state 658
    '?'    shift, and go to state 659
    '|'    shift, and go to state 660
    '^'    shift, and go to state 661
    '&'    shift, and go to state 662
    '<'    shift, and go to state 663
    '>'    shift, and go to state 664
    '-'    shift, and go to state 665
    '+'    shift, and go to state 666
    '*'    shift, and go to state 667
    '/'    shift, and go to state 668
    '%'    shift, and go to state 669
    '.'    shift, and go to state 670
    '['    shift, and go to state 671

    $default  reduce using rule 322 (expr_assign)


State 943

  323 expr_assign: expr "|=" expr .
  339 expr_method_call: expr . "->" "name" '(' ')'
  340                 | expr . "->" "name" '(' expr_list ')'
  350 expr_field: expr . '.' "name"
  351           | expr . '.' '.' "name"
  352           | expr . '.' "name" '(' ')'
  353           | expr . '.' "name" '(' expr_list ')'
  354           | expr . '.' basic_type_declaration '(' ')'
  355           | expr . '.' basic_type_declaration '(' expr_list ')'
  358           | expr . '.' $@17 error $@18
  380 expr: expr . "<<" expr
  381     | expr . ">>" expr
  382     | expr . "<<<" expr
  383     | expr . ">>>" expr
  384     | expr . '+' expr
  385     | expr . '-' expr
  386     | expr . '*' expr
  387     | expr . '/' expr
  388     | expr . '%' expr
  389     | expr . '<' expr
  390     | expr . '>' expr
  391     | expr . "==" expr
  392     | expr . "!=" expr
  393     | expr . "<=" expr
  394     | expr . ">=" expr
  395     | expr . '&' expr
  396     | expr . '|' expr
  397     | expr . '^' expr
  398     | expr . "&&" expr
  399     | expr . "||" expr
  400     | expr . "^^" expr
  401     | expr . ".." expr
  404     | expr . "++"
  405     | expr . "--"
  407     | expr . '[' expr ']'
  408     | expr . '.' '[' expr ']'
  409     | expr . "?[" expr ']'
  410     | expr . '.' "?[" expr ']'
  411     | expr . "?." "name"
  412     | expr . '.' "?." "name"
  421     | expr . "??" expr
  422     | expr . '?' expr ':' expr
  425     | expr . "is" "type" '<' $@19 type_declaration_no_options '>' $@20
  426     | expr . "is" basic_type_declaration
  427     | expr . "is" "name"
  428     | expr . "as" "name"
  431     | expr . "as" "type" '<' $@21 type_declaration '>' $@22
  432     | expr . "as" basic_type_declaration
  433     | expr . '?' "as" "name"
  436     | expr . '?' "as" "type" '<' $@23 type_declaration '>' $@24
  437     | expr . '?' "as" basic_type_declaration
  445     | expr . "<|" expr
  446     | expr . "|>" expr
  447     | expr . "|>" basic_type_declaration
  458 expr_mtag: expr . '.' "$f" '(' expr ')'
  459          | expr . "?." "$f" '(' expr ')'
  460          | expr . '.' '.' "$f" '(' expr ')'
  461          | expr . '.' "?." "$f" '(' expr ')'
  462          | expr . "as" "$f" '(' expr ')'
  463          | expr . '?' "as" "$f" '(' expr ')'
  464          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 637
    "as"   shift, and go to state 638
    "<<"   shift, and go to state 639
    ">>"   shift, and go to state 640
    "++"   shift, and go to state 641
    "--"   shift, and go to state 642
    "<="   shift, and go to state 643
    ">="   shift, and go to state 644
    "=="   shift, and go to state 645
    "!="   shift, and go to state 646
    "->"   shift, and go to state 647
    "??"   shift, and go to state 648
    "?."   shift, and go to state 649
    "?["   shift, and go to state 650
    "<|"   shift, and go to state 651
    "|>"   shift, and go to state 652
    "<<<"  shift, and go to state 653
    ">>>"  shift, and go to state 654
    "&&"   shift, and go to state 655
    "||"   shift, and go to state 656
    "^^"   shift, and go to state 657
    ".."   shift, and go to state 658
    '?'    shift, and go to state 659
    '|'    shift, and go to state 660
    '^'    shift, and go to state 661
    '&'    shift, and go to state 662
    '<'    shift, and go to state 663
    '>'    shift, and go to state 664
    '-'    shift, and go to state 665
    '+'    shift, and go to state 666
    '*'    shift, and go to state 667
    '/'    shift, and go to state 668
    '%'    shift, and go to state 669
    '.'    shift, and go to state 670
    '['    shift, and go to state 671

    $default  reduce using rule 323 (expr_assign)


State 944

  324 expr_assign: expr "^=" expr .
  339 expr_method_call: expr . "->" "name" '(' ')'
  340                 | expr . "->" "name" '(' expr_list ')'
  350 expr_field: expr . '.' "name"
  351           | expr . '.' '.' "name"
  352           | expr . '.' "name" '(' ')'
  353           | expr . '.' "name" '(' expr_list ')'
  354           | expr . '.' basic_type_declaration '(' ')'
  355           | expr . '.' basic_type_declaration '(' expr_list ')'
  358           | expr . '.' $@17 error $@18
  380 expr: expr . "<<" expr
  381     | expr . ">>" expr
  382     | expr . "<<<" expr
  383     | expr . ">>>" expr
  384     | expr . '+' expr
  385     | expr . '-' expr
  386     | expr . '*' expr
  387     | expr . '/' expr
  388     | expr . '%' expr
  389     | expr . '<' expr
  390     | expr . '>' expr
  391     | expr . "==" expr
  392     | expr . "!=" expr
  393     | expr . "<=" expr
  394     | expr . ">=" expr
  395     | expr . '&' expr
  396     | expr . '|' expr
  397     | expr . '^' expr
  398     | expr . "&&" expr
  399     | expr . "||" expr
  400     | expr . "^^" expr
  401     | expr . ".." expr
  404     | expr . "++"
  405     | expr . "--"
  407     | expr . '[' expr ']'
  408     | expr . '.' '[' expr ']'
  409     | expr . "?[" expr ']'
  410     | expr . '.' "?[" expr ']'
  411     | expr . "?." "name"
  412     | expr . '.' "?." "name"
  421     | expr . "??" expr
  422     | expr . '?' expr ':' expr
  425     | expr . "is" "type" '<' $@19 type_declaration_no_options '>' $@20
  426     | expr . "is" basic_type_declaration
  427     | expr . "is" "name"
  428     | expr . "as" "name"
  431     | expr . "as" "type" '<' $@21 type_declaration '>' $@22
  432     | expr . "as" basic_type_declaration
  433     | expr . '?' "as" "name"
  436     | expr . '?' "as" "type" '<' $@23 type_declaration '>' $@24
  437     | expr . '?' "as" basic_type_declaration
  445     | expr . "<|" expr
  446     | expr . "|>" expr
  447     | expr . "|>" basic_type_declaration
  458 expr_mtag: expr . '.' "$f" '(' expr ')'
  459          | expr . "?." "$f" '(' expr ')'
  460          | expr . '.' '.' "$f" '(' expr ')'
  461          | expr . '.' "?." "$f" '(' expr ')'
  462          | expr . "as" "$f" '(' expr ')'
  463          | expr . '?' "as" "$f" '(' expr ')'
  464          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 637
    "as"   shift, and go to state 638
    "<<"   shift, and go to state 639
    ">>"   shift, and go to state 640
    "++"   shift, and go to state 641
    "--"   shift, and go to state 642
    "<="   shift, and go to state 643
    ">="   shift, and go to state 644
    "=="   shift, and go to state 645
    "!="   shift, and go to state 646
    "->"   shift, and go to state 647
    "??"   shift, and go to state 648
    "?."   shift, and go to state 649
    "?["   shift, and go to state 650
    "<|"   shift, and go to state 651
    "|>"   shift, and go to state 652
    "<<<"  shift, and go to state 653
    ">>>"  shift, and go to state 654
    "&&"   shift, and go to state 655
    "||"   shift, and go to state 656
    "^^"   shift, and go to state 657
    ".."   shift, and go to state 658
    '?'    shift, and go to state 659
    '|'    shift, and go to state 660
    '^'    shift, and go to state 661
    '&'    shift, and go to state 662
    '<'    shift, and go to state 663
    '>'    shift, and go to state 664
    '-'    shift, and go to state 665
    '+'    shift, and go to state 666
    '*'    shift, and go to state 667
    '/'    shift, and go to state 668
    '%'    shift, and go to state 669
    '.'    shift, and go to state 670
    '['    shift, and go to state 671

    $default  reduce using rule 324 (expr_assign)


State 945

  333 expr_assign: expr "<<=" expr .
  339 expr_method_call: expr . "->" "name" '(' ')'
  340                 | expr . "->" "name" '(' expr_list ')'
  350 expr_field: expr . '.' "name"
  351           | expr . '.' '.' "name"
  352           | expr . '.' "name" '(' ')'
  353           | expr . '.' "name" '(' expr_list ')'
  354           | expr . '.' basic_type_declaration '(' ')'
  355           | expr . '.' basic_type_declaration '(' expr_list ')'
  358           | expr . '.' $@17 error $@18
  380 expr: expr . "<<" expr
  381     | expr . ">>" expr
  382     | expr . "<<<" expr
  383     | expr . ">>>" expr
  384     | expr . '+' expr
  385     | expr . '-' expr
  386     | expr . '*' expr
  387     | expr . '/' expr
  388     | expr . '%' expr
  389     | expr . '<' expr
  390     | expr . '>' expr
  391     | expr . "==" expr
  392     | expr . "!=" expr
  393     | expr . "<=" expr
  394     | expr . ">=" expr
  395     | expr . '&' expr
  396     | expr . '|' expr
  397     | expr . '^' expr
  398     | expr . "&&" expr
  399     | expr . "||" expr
  400     | expr . "^^" expr
  401     | expr . ".." expr
  404     | expr . "++"
  405     | expr . "--"
  407     | expr . '[' expr ']'
  408     | expr . '.' '[' expr ']'
  409     | expr . "?[" expr ']'
  410     | expr . '.' "?[" expr ']'
  411     | expr . "?." "name"
  412     | expr . '.' "?." "name"
  421     | expr . "??" expr
  422     | expr . '?' expr ':' expr
  425     | expr . "is" "type" '<' $@19 type_declaration_no_options '>' $@20
  426     | expr . "is" basic_type_declaration
  427     | expr . "is" "name"
  428     | expr . "as" "name"
  431     | expr . "as" "type" '<' $@21 type_declaration '>' $@22
  432     | expr . "as" basic_type_declaration
  433     | expr . '?' "as" "name"
  436     | expr . '?' "as" "type" '<' $@23 type_declaration '>' $@24
  437     | expr . '?' "as" basic_type_declaration
  445     | expr . "<|" expr
  446     | expr . "|>" expr
  447     | expr . "|>" basic_type_declaration
  458 expr_mtag: expr . '.' "$f" '(' expr ')'
  459          | expr . "?." "$f" '(' expr ')'
  460          | expr . '.' '.' "$f" '(' expr ')'
  461          | expr . '.' "?." "$f" '(' expr ')'
  462          | expr . "as" "$f" '(' expr ')'
  463          | expr . '?' "as" "$f" '(' expr ')'
  464          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 637
    "as"   shift, and go to state 638
    "<<"   shift, and go to state 639
    ">>"   shift, and go to state 640
    "++"   shift, and go to state 641
    "--"   shift, and go to state 642
    "<="   shift, and go to state 643
    ">="   shift, and go to state 644
    "=="   shift, and go to state 645
    "!="   shift, and go to state 646
    "->"   shift, and go to state 647
    "??"   shift, and go to state 648
    "?."   shift, and go to state 649
    "?["   shift, and go to state 650
    "<|"   shift, and go to state 651
    "|>"   shift, and go to state 652
    "<<<"  shift, and go to state 653
    ">>>"  shift, and go to state 654
    "&&"   shift, and go to state 655
    "||"   shift, and go to state 656
    "^^"   shift, and go to state 657
    ".."   shift, and go to state 658
    '?'    shift, and go to state 659
    '|'    shift, and go to state 660
    '^'    shift, and go to state 661
    '&'    shift, and go to state 662
    '<'    shift, and go to state 663
    '>'    shift, and go to state 664
    '-'    shift, and go to state 665
    '+'    shift, and go to state 666
    '*'    shift, and go to state 667
    '/'    shift, and go to state 668
    '%'    shift, and go to state 669
    '.'    shift, and go to state 670
    '['    shift, and go to state 671

    $default  reduce using rule 333 (expr_assign)


State 946

  334 expr_assign: expr ">>=" expr .
  339 expr_method_call: expr . "->" "name" '(' ')'
  340                 | expr . "->" "name" '(' expr_list ')'
  350 expr_field: expr . '.' "name"
  351           | expr . '.' '.' "name"
  352           | expr . '.' "name" '(' ')'
  353           | expr . '.' "name" '(' expr_list ')'
  354           | expr . '.' basic_type_declaration '(' ')'
  355           | expr . '.' basic_type_declaration '(' expr_list ')'
  358           | expr . '.' $@17 error $@18
  380 expr: expr . "<<" expr
  381     | expr . ">>" expr
  382     | expr . "<<<" expr
  383     | expr . ">>>" expr
  384     | expr . '+' expr
  385     | expr . '-' expr
  386     | expr . '*' expr
  387     | expr . '/' expr
  388     | expr . '%' expr
  389     | expr . '<' expr
  390     | expr . '>' expr
  391     | expr . "==" expr
  392     | expr . "!=" expr
  393     | expr . "<=" expr
  394     | expr . ">=" expr
  395     | expr . '&' expr
  396     | expr . '|' expr
  397     | expr . '^' expr
  398     | expr . "&&" expr
  399     | expr . "||" expr
  400     | expr . "^^" expr
  401     | expr . ".." expr
  404     | expr . "++"
  405     | expr . "--"
  407     | expr . '[' expr ']'
  408     | expr . '.' '[' expr ']'
  409     | expr . "?[" expr ']'
  410     | expr . '.' "?[" expr ']'
  411     | expr . "?." "name"
  412     | expr . '.' "?." "name"
  421     | expr . "??" expr
  422     | expr . '?' expr ':' expr
  425     | expr . "is" "type" '<' $@19 type_declaration_no_options '>' $@20
  426     | expr . "is" basic_type_declaration
  427     | expr . "is" "name"
  428     | expr . "as" "name"
  431     | expr . "as" "type" '<' $@21 type_declaration '>' $@22
  432     | expr . "as" basic_type_declaration
  433     | expr . '?' "as" "name"
  436     | expr . '?' "as" "type" '<' $@23 type_declaration '>' $@24
  437     | expr . '?' "as" basic_type_declaration
  445     | expr . "<|" expr
  446     | expr . "|>" expr
  447     | expr . "|>" basic_type_declaration
  458 expr_mtag: expr . '.' "$f" '(' expr ')'
  459          | expr . "?." "$f" '(' expr ')'
  460          | expr . '.' '.' "$f" '(' expr ')'
  461          | expr . '.' "?." "$f" '(' expr ')'
  462          | expr . "as" "$f" '(' expr ')'
  463          | expr . '?' "as" "$f" '(' expr ')'
  464          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 637
    "as"   shift, and go to state 638
    "<<"   shift, and go to state 639
    ">>"   shift, and go to state 640
    "++"   shift, and go to state 641
    "--"   shift, and go to state 642
    "<="   shift, and go to state 643
    ">="   shift, and go to state 644
    "=="   shift, and go to state 645
    "!="   shift, and go to state 646
    "->"   shift, and go to state 647
    "??"   shift, and go to state 648
    "?."   shift, and go to state 649
    "?["   shift, and go to state 650
    "<|"   shift, and go to state 651
    "|>"   shift, and go to state 652
    "<<<"  shift, and go to state 653
    ">>>"  shift, and go to state 654
    "&&"   shift, and go to state 655
    "||"   shift, and go to state 656
    "^^"   shift, and go to state 657
    ".."   shift, and go to state 658
    '?'    shift, and go to state 659
    '|'    shift, and go to state 660
    '^'    shift, and go to state 661
    '&'    shift, and go to state 662
    '<'    shift, and go to state 663
    '>'    shift, and go to state 664
    '-'    shift, and go to state 665
    '+'    shift, and go to state 666
    '*'    shift, and go to state 667
    '/'    shift, and go to state 668
    '%'    shift, and go to state 669
    '.'    shift, and go to state 670
    '['    shift, and go to state 671

    $default  reduce using rule 334 (expr_assign)


State 947

  320 expr_assign: expr "<-" expr .
  339 expr_method_call: expr . "->" "name" '(' ')'
  340                 | expr . "->" "name" '(' expr_list ')'
  350 expr_field: expr . '.' "name"
  351           | expr . '.' '.' "name"
  352           | expr . '.' "name" '(' ')'
  353           | expr . '.' "name" '(' expr_list ')'
  354           | expr . '.' basic_type_declaration '(' ')'
  355           | expr . '.' basic_type_declaration '(' expr_list ')'
  358           | expr . '.' $@17 error $@18
  380 expr: expr . "<<" expr
  381     | expr . ">>" expr
  382     | expr . "<<<" expr
  383     | expr . ">>>" expr
  384     | expr . '+' expr
  385     | expr . '-' expr
  386     | expr . '*' expr
  387     | expr . '/' expr
  388     | expr . '%' expr
  389     | expr . '<' expr
  390     | expr . '>' expr
  391     | expr . "==" expr
  392     | expr . "!=" expr
  393     | expr . "<=" expr
  394     | expr . ">=" expr
  395     | expr . '&' expr
  396     | expr . '|' expr
  397     | expr . '^' expr
  398     | expr . "&&" expr
  399     | expr . "||" expr
  400     | expr . "^^" expr
  401     | expr . ".." expr
  404     | expr . "++"
  405     | expr . "--"
  407     | expr . '[' expr ']'
  408     | expr . '.' '[' expr ']'
  409     | expr . "?[" expr ']'
  410     | expr . '.' "?[" expr ']'
  411     | expr . "?." "name"
  412     | expr . '.' "?." "name"
  421     | expr . "??" expr
  422     | expr . '?' expr ':' expr
  425     | expr . "is" "type" '<' $@19 type_declaration_no_options '>' $@20
  426     | expr . "is" basic_type_declaration
  427     | expr . "is" "name"
  428     | expr . "as" "name"
  431     | expr . "as" "type" '<' $@21 type_declaration '>' $@22
  432     | expr . "as" basic_type_declaration
  433     | expr . '?' "as" "name"
  436     | expr . '?' "as" "type" '<' $@23 type_declaration '>' $@24
  437     | expr . '?' "as" basic_type_declaration
  445     | expr . "<|" expr
  446     | expr . "|>" expr
  447     | expr . "|>" basic_type_declaration
  458 expr_mtag: expr . '.' "$f" '(' expr ')'
  459          | expr . "?." "$f" '(' expr ')'
  460          | expr . '.' '.' "$f" '(' expr ')'
  461          | expr . '.' "?." "$f" '(' expr ')'
  462          | expr . "as" "$f" '(' expr ')'
  463          | expr . '?' "as" "$f" '(' expr ')'
  464          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 637
    "as"   shift, and go to state 638
    "<<"   shift, and go to state 639
    ">>"   shift, and go to state 640
    "++"   shift, and go to state 641
    "--"   shift, and go to state 642
    "<="   shift, and go to state 643
    ">="   shift, and go to state 644
    "=="   shift, and go to state 645
    "!="   shift, and go to state 646
    "->"   shift, and go to state 647
    "??"   shift, and go to state 648
    "?."   shift, and go to state 649
    "?["   shift, and go to state 650
    "<|"   shift, and go to state 651
    "|>"   shift, and go to state 652
    "<<<"  shift, and go to state 653
    ">>>"  shift, and go to state 654
    "&&"   shift, and go to state 655
    "||"   shift, and go to state 656
    "^^"   shift, and go to state 657
    ".."   shift, and go to state 658
    '?'    shift, and go to state 659
    '|'    shift, and go to state 660
    '^'    shift, and go to state 661
    '&'    shift, and go to state 662
    '<'    shift, and go to state 663
    '>'    shift, and go to state 664
    '-'    shift, and go to state 665
    '+'    shift, and go to state 666
    '*'    shift, and go to state 667
    '/'    shift, and go to state 668
    '%'    shift, and go to state 669
    '.'    shift, and go to state 670
    '['    shift, and go to state 671

    $default  reduce using rule 320 (expr_assign)


State 948

  321 expr_assign: expr ":=" expr .
  339 expr_method_call: expr . "->" "name" '(' ')'
  340                 | expr . "->" "name" '(' expr_list ')'
  350 expr_field: expr . '.' "name"
  351           | expr . '.' '.' "name"
  352           | expr . '.' "name" '(' ')'
  353           | expr . '.' "name" '(' expr_list ')'
  354           | expr . '.' basic_type_declaration '(' ')'
  355           | expr . '.' basic_type_declaration '(' expr_list ')'
  358           | expr . '.' $@17 error $@18
  380 expr: expr . "<<" expr
  381     | expr . ">>" expr
  382     | expr . "<<<" expr
  383     | expr . ">>>" expr
  384     | expr . '+' expr
  385     | expr . '-' expr
  386     | expr . '*' expr
  387     | expr . '/' expr
  388     | expr . '%' expr
  389     | expr . '<' expr
  390     | expr . '>' expr
  391     | expr . "==" expr
  392     | expr . "!=" expr
  393     | expr . "<=" expr
  394     | expr . ">=" expr
  395     | expr . '&' expr
  396     | expr . '|' expr
  397     | expr . '^' expr
  398     | expr . "&&" expr
  399     | expr . "||" expr
  400     | expr . "^^" expr
  401     | expr . ".." expr
  404     | expr . "++"
  405     | expr . "--"
  407     | expr . '[' expr ']'
  408     | expr . '.' '[' expr ']'
  409     | expr . "?[" expr ']'
  410     | expr . '.' "?[" expr ']'
  411     | expr . "?." "name"
  412     | expr . '.' "?." "name"
  421     | expr . "??" expr
  422     | expr . '?' expr ':' expr
  425     | expr . "is" "type" '<' $@19 type_declaration_no_options '>' $@20
  426     | expr . "is" basic_type_declaration
  427     | expr . "is" "name"
  428     | expr . "as" "name"
  431     | expr . "as" "type" '<' $@21 type_declaration '>' $@22
  432     | expr . "as" basic_type_declaration
  433     | expr . '?' "as" "name"
  436     | expr . '?' "as" "type" '<' $@23 type_declaration '>' $@24
  437     | expr . '?' "as" basic_type_declaration
  445     | expr . "<|" expr
  446     | expr . "|>" expr
  447     | expr . "|>" basic_type_declaration
  458 expr_mtag: expr . '.' "$f" '(' expr ')'
  459          | expr . "?." "$f" '(' expr ')'
  460          | expr . '.' '.' "$f" '(' expr ')'
  461          | expr . '.' "?." "$f" '(' expr ')'
  462          | expr . "as" "$f" '(' expr ')'
  463          | expr . '?' "as" "$f" '(' expr ')'
  464          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 637
    "as"   shift, and go to state 638
    "<<"   shift, and go to state 639
    ">>"   shift, and go to state 640
    "++"   shift, and go to state 641
    "--"   shift, and go to state 642
    "<="   shift, and go to state 643
    ">="   shift, and go to state 644
    "=="   shift, and go to state 645
    "!="   shift, and go to state 646
    "->"   shift, and go to state 647
    "??"   shift, and go to state 648
    "?."   shift, and go to state 649
    "?["   shift, and go to state 650
    "<|"   shift, and go to state 651
    "|>"   shift, and go to state 652
    "<<<"  shift, and go to state 653
    ">>>"  shift, and go to state 654
    "&&"   shift, and go to state 655
    "||"   shift, and go to state 656
    "^^"   shift, and go to state 657
    ".."   shift, and go to state 658
    '?'    shift, and go to state 659
    '|'    shift, and go to state 660
    '^'    shift, and go to state 661
    '&'    shift, and go to state 662
    '<'    shift, and go to state 663
    '>'    shift, and go to state 664
    '-'    shift, and go to state 665
    '+'    shift, and go to state 666
    '*'    shift, and go to state 667
    '/'    shift, and go to state 668
    '%'    shift, and go to state 669
    '.'    shift, and go to state 670
    '['    shift, and go to state 671

    $default  reduce using rule 321 (expr_assign)


State 949

  335 expr_assign: expr "<<<=" expr .
  339 expr_method_call: expr . "->" "name" '(' ')'
  340                 | expr . "->" "name" '(' expr_list ')'
  350 expr_field: expr . '.' "name"
  351           | expr . '.' '.' "name"
  352           | expr . '.' "name" '(' ')'
  353           | expr . '.' "name" '(' expr_list ')'
  354           | expr . '.' basic_type_declaration '(' ')'
  355           | expr . '.' basic_type_declaration '(' expr_list ')'
  358           | expr . '.' $@17 error $@18
  380 expr: expr . "<<" expr
  381     | expr . ">>" expr
  382     | expr . "<<<" expr
  383     | expr . ">>>" expr
  384     | expr . '+' expr
  385     | expr . '-' expr
  386     | expr . '*' expr
  387     | expr . '/' expr
  388     | expr . '%' expr
  389     | expr . '<' expr
  390     | expr . '>' expr
  391     | expr . "==" expr
  392     | expr . "!=" expr
  393     | expr . "<=" expr
  394     | expr . ">=" expr
  395     | expr . '&' expr
  396     | expr . '|' expr
  397     | expr . '^' expr
  398     | expr . "&&" expr
  399     | expr . "||" expr
  400     | expr . "^^" expr
  401     | expr . ".." expr
  404     | expr . "++"
  405     | expr . "--"
  407     | expr . '[' expr ']'
  408     | expr . '.' '[' expr ']'
  409     | expr . "?[" expr ']'
  410     | expr . '.' "?[" expr ']'
  411     | expr . "?." "name"
  412     | expr . '.' "?." "name"
  421     | expr . "??" expr
  422     | expr . '?' expr ':' expr
  425     | expr . "is" "type" '<' $@19 type_declaration_no_options '>' $@20
  426     | expr . "is" basic_type_declaration
  427     | expr . "is" "name"
  428     | expr . "as" "name"
  431     | expr . "as" "type" '<' $@21 type_declaration '>' $@22
  432     | expr . "as" basic_type_declaration
  433     | expr . '?' "as" "name"
  436     | expr . '?' "as" "type" '<' $@23 type_declaration '>' $@24
  437     | expr . '?' "as" basic_type_declaration
  445     | expr . "<|" expr
  446     | expr . "|>" expr
  447     | expr . "|>" basic_type_declaration
  458 expr_mtag: expr . '.' "$f" '(' expr ')'
  459          | expr . "?." "$f" '(' expr ')'
  460          | expr . '.' '.' "$f" '(' expr ')'
  461          | expr . '.' "?." "$f" '(' expr ')'
  462          | expr . "as" "$f" '(' expr ')'
  463          | expr . '?' "as" "$f" '(' expr ')'
  464          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 637
    "as"   shift, and go to state 638
    "<<"   shift, and go to state 639
    ">>"   shift, and go to state 640
    "++"   shift, and go to state 641
    "--"   shift, and go to state 642
    "<="   shift, and go to state 643
    ">="   shift, and go to state 644
    "=="   shift, and go to state 645
    "!="   shift, and go to state 646
    "->"   shift, and go to state 647
    "??"   shift, and go to state 648
    "?."   shift, and go to state 649
    "?["   shift, and go to state 650
    "<|"   shift, and go to state 651
    "|>"   shift, and go to state 652
    "<<<"  shift, and go to state 653
    ">>>"  shift, and go to state 654
    "&&"   shift, and go to state 655
    "||"   shift, and go to state 656
    "^^"   shift, and go to state 657
    ".."   shift, and go to state 658
    '?'    shift, and go to state 659
    '|'    shift, and go to state 660
    '^'    shift, and go to state 661
    '&'    shift, and go to state 662
    '<'    shift, and go to state 663
    '>'    shift, and go to state 664
    '-'    shift, and go to state 665
    '+'    shift, and go to state 666
    '*'    shift, and go to state 667
    '/'    shift, and go to state 668
    '%'    shift, and go to state 669
    '.'    shift, and go to state 670
    '['    shift, and go to state 671

    $default  reduce using rule 335 (expr_assign)


State 950

  336 expr_assign: expr ">>>=" expr .
  339 expr_method_call: expr . "->" "name" '(' ')'
  340                 | expr . "->" "name" '(' expr_list ')'
  350 expr_field: expr . '.' "name"
  351           | expr . '.' '.' "name"
  352           | expr . '.' "name" '(' ')'
  353           | expr . '.' "name" '(' expr_list ')'
  354           | expr . '.' basic_type_declaration '(' ')'
  355           | expr . '.' basic_type_declaration '(' expr_list ')'
  358           | expr . '.' $@17 error $@18
  380 expr: expr . "<<" expr
  381     | expr . ">>" expr
  382     | expr . "<<<" expr
  383     | expr . ">>>" expr
  384     | expr . '+' expr
  385     | expr . '-' expr
  386     | expr . '*' expr
  387     | expr . '/' expr
  388     | expr . '%' expr
  389     | expr . '<' expr
  390     | expr . '>' expr
  391     | expr . "==" expr
  392     | expr . "!=" expr
  393     | expr . "<=" expr
  394     | expr . ">=" expr
  395     | expr . '&' expr
  396     | expr . '|' expr
  397     | expr . '^' expr
  398     | expr . "&&" expr
  399     | expr . "||" expr
  400     | expr . "^^" expr
  401     | expr . ".." expr
  404     | expr . "++"
  405     | expr . "--"
  407     | expr . '[' expr ']'
  408     | expr . '.' '[' expr ']'
  409     | expr . "?[" expr ']'
  410     | expr . '.' "?[" expr ']'
  411     | expr . "?." "name"
  412     | expr . '.' "?." "name"
  421     | expr . "??" expr
  422     | expr . '?' expr ':' expr
  425     | expr . "is" "type" '<' $@19 type_declaration_no_options '>' $@20
  426     | expr . "is" basic_type_declaration
  427     | expr . "is" "name"
  428     | expr . "as" "name"
  431     | expr . "as" "type" '<' $@21 type_declaration '>' $@22
  432     | expr . "as" basic_type_declaration
  433     | expr . '?' "as" "name"
  436     | expr . '?' "as" "type" '<' $@23 type_declaration '>' $@24
  437     | expr . '?' "as" basic_type_declaration
  445     | expr . "<|" expr
  446     | expr . "|>" expr
  447     | expr . "|>" basic_type_declaration
  458 expr_mtag: expr . '.' "$f" '(' expr ')'
  459          | expr . "?." "$f" '(' expr ')'
  460          | expr . '.' '.' "$f" '(' expr ')'
  461          | expr . '.' "?." "$f" '(' expr ')'
  462          | expr . "as" "$f" '(' expr ')'
  463          | expr . '?' "as" "$f" '(' expr ')'
  464          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 637
    "as"   shift, and go to state 638
    "<<"   shift, and go to state 639
    ">>"   shift, and go to state 640
    "++"   shift, and go to state 641
    "--"   shift, and go to state 642
    "<="   shift, and go to state 643
    ">="   shift, and go to state 644
    "=="   shift, and go to state 645
    "!="   shift, and go to state 646
    "->"   shift, and go to state 647
    "??"   shift, and go to state 648
    "?."   shift, and go to state 649
    "?["   shift, and go to state 650
    "<|"   shift, and go to state 651
    "|>"   shift, and go to state 652
    "<<<"  shift, and go to state 653
    ">>>"  shift, and go to state 654
    "&&"   shift, and go to state 655
    "||"   shift, and go to state 656
    "^^"   shift, and go to state 657
    ".."   shift, and go to state 658
    '?'    shift, and go to state 659
    '|'    shift, and go to state 660
    '^'    shift, and go to state 661
    '&'    shift, and go to state 662
    '<'    shift, and go to state 663
    '>'    shift, and go to state 664
    '-'    shift, and go to state 665
    '+'    shift, and go to state 666
    '*'    shift, and go to state 667
    '/'    shift, and go to state 668
    '%'    shift, and go to state 669
    '.'    shift, and go to state 670
    '['    shift, and go to state 671

    $default  reduce using rule 336 (expr_assign)


State 951

  325 expr_assign: expr "&&=" expr .
  339 expr_method_call: expr . "->" "name" '(' ')'
  340                 | expr . "->" "name" '(' expr_list ')'
  350 expr_field: expr . '.' "name"
  351           | expr . '.' '.' "name"
  352           | expr . '.' "name" '(' ')'
  353           | expr . '.' "name" '(' expr_list ')'
  354           | expr . '.' basic_type_declaration '(' ')'
  355           | expr . '.' basic_type_declaration '(' expr_list ')'
  358           | expr . '.' $@17 error $@18
  380 expr: expr . "<<" expr
  381     | expr . ">>" expr
  382     | expr . "<<<" expr
  383     | expr . ">>>" expr
  384     | expr . '+' expr
  385     | expr . '-' expr
  386     | expr . '*' expr
  387     | expr . '/' expr
  388     | expr . '%' expr
  389     | expr . '<' expr
  390     | expr . '>' expr
  391     | expr . "==" expr
  392     | expr . "!=" expr
  393     | expr . "<=" expr
  394     | expr . ">=" expr
  395     | expr . '&' expr
  396     | expr . '|' expr
  397     | expr . '^' expr
  398     | expr . "&&" expr
  399     | expr . "||" expr
  400     | expr . "^^" expr
  401     | expr . ".." expr
  404     | expr . "++"
  405     | expr . "--"
  407     | expr . '[' expr ']'
  408     | expr . '.' '[' expr ']'
  409     | expr . "?[" expr ']'
  410     | expr . '.' "?[" expr ']'
  411     | expr . "?." "name"
  412     | expr . '.' "?." "name"
  421     | expr . "??" expr
  422     | expr . '?' expr ':' expr
  425     | expr . "is" "type" '<' $@19 type_declaration_no_options '>' $@20
  426     | expr . "is" basic_type_declaration
  427     | expr . "is" "name"
  428     | expr . "as" "name"
  431     | expr . "as" "type" '<' $@21 type_declaration '>' $@22
  432     | expr . "as" basic_type_declaration
  433     | expr . '?' "as" "name"
  436     | expr . '?' "as" "type" '<' $@23 type_declaration '>' $@24
  437     | expr . '?' "as" basic_type_declaration
  445     | expr . "<|" expr
  446     | expr . "|>" expr
  447     | expr . "|>" basic_type_declaration
  458 expr_mtag: expr . '.' "$f" '(' expr ')'
  459          | expr . "?." "$f" '(' expr ')'
  460          | expr . '.' '.' "$f" '(' expr ')'
  461          | expr . '.' "?." "$f" '(' expr ')'
  462          | expr . "as" "$f" '(' expr ')'
  463          | expr . '?' "as" "$f" '(' expr ')'
  464          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 637
    "as"   shift, and go to state 638
    "<<"   shift, and go to state 639
    ">>"   shift, and go to state 640
    "++"   shift, and go to state 641
    "--"   shift, and go to state 642
    "<="   shift, and go to state 643
    ">="   shift, and go to state 644
    "=="   shift, and go to state 645
    "!="   shift, and go to state 646
    "->"   shift, and go to state 647
    "??"   shift, and go to state 648
    "?."   shift, and go to state 649
    "?["   shift, and go to state 650
    "<|"   shift, and go to state 651
    "|>"   shift, and go to state 652
    "<<<"  shift, and go to state 653
    ">>>"  shift, and go to state 654
    "&&"   shift, and go to state 655
    "||"   shift, and go to state 656
    "^^"   shift, and go to state 657
    ".."   shift, and go to state 658
    '?'    shift, and go to state 659
    '|'    shift, and go to state 660
    '^'    shift, and go to state 661
    '&'    shift, and go to state 662
    '<'    shift, and go to state 663
    '>'    shift, and go to state 664
    '-'    shift, and go to state 665
    '+'    shift, and go to state 666
    '*'    shift, and go to state 667
    '/'    shift, and go to state 668
    '%'    shift, and go to state 669
    '.'    shift, and go to state 670
    '['    shift, and go to state 671

    $default  reduce using rule 325 (expr_assign)


State 952

  326 expr_assign: expr "||=" expr .
  339 expr_method_call: expr . "->" "name" '(' ')'
  340                 | expr . "->" "name" '(' expr_list ')'
  350 expr_field: expr . '.' "name"
  351           | expr . '.' '.' "name"
  352           | expr . '.' "name" '(' ')'
  353           | expr . '.' "name" '(' expr_list ')'
  354           | expr . '.' basic_type_declaration '(' ')'
  355           | expr . '.' basic_type_declaration '(' expr_list ')'
  358           | expr . '.' $@17 error $@18
  380 expr: expr . "<<" expr
  381     | expr . ">>" expr
  382     | expr . "<<<" expr
  383     | expr . ">>>" expr
  384     | expr . '+' expr
  385     | expr . '-' expr
  386     | expr . '*' expr
  387     | expr . '/' expr
  388     | expr . '%' expr
  389     | expr . '<' expr
  390     | expr . '>' expr
  391     | expr . "==" expr
  392     | expr . "!=" expr
  393     | expr . "<=" expr
  394     | expr . ">=" expr
  395     | expr . '&' expr
  396     | expr . '|' expr
  397     | expr . '^' expr
  398     | expr . "&&" expr
  399     | expr . "||" expr
  400     | expr . "^^" expr
  401     | expr . ".." expr
  404     | expr . "++"
  405     | expr . "--"
  407     | expr . '[' expr ']'
  408     | expr . '.' '[' expr ']'
  409     | expr . "?[" expr ']'
  410     | expr . '.' "?[" expr ']'
  411     | expr . "?." "name"
  412     | expr . '.' "?." "name"
  421     | expr . "??" expr
  422     | expr . '?' expr ':' expr
  425     | expr . "is" "type" '<' $@19 type_declaration_no_options '>' $@20
  426     | expr . "is" basic_type_declaration
  427     | expr . "is" "name"
  428     | expr . "as" "name"
  431     | expr . "as" "type" '<' $@21 type_declaration '>' $@22
  432     | expr . "as" basic_type_declaration
  433     | expr . '?' "as" "name"
  436     | expr . '?' "as" "type" '<' $@23 type_declaration '>' $@24
  437     | expr . '?' "as" basic_type_declaration
  445     | expr . "<|" expr
  446     | expr . "|>" expr
  447     | expr . "|>" basic_type_declaration
  458 expr_mtag: expr . '.' "$f" '(' expr ')'
  459          | expr . "?." "$f" '(' expr ')'
  460          | expr . '.' '.' "$f" '(' expr ')'
  461          | expr . '.' "?." "$f" '(' expr ')'
  462          | expr . "as" "$f" '(' expr ')'
  463          | expr . '?' "as" "$f" '(' expr ')'
  464          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 637
    "as"   shift, and go to state 638
    "<<"   shift, and go to state 639
    ">>"   shift, and go to state 640
    "++"   shift, and go to state 641
    "--"   shift, and go to state 642
    "<="   shift, and go to state 643
    ">="   shift, and go to state 644
    "=="   shift, and go to state 645
    "!="   shift, and go to state 646
    "->"   shift, and go to state 647
    "??"   shift, and go to state 648
    "?."   shift, and go to state 649
    "?["   shift, and go to state 650
    "<|"   shift, and go to state 651
    "|>"   shift, and go to state 652
    "<<<"  shift, and go to state 653
    ">>>"  shift, and go to state 654
    "&&"   shift, and go to state 655
    "||"   shift, and go to state 656
    "^^"   shift, and go to state 657
    ".."   shift, and go to state 658
    '?'    shift, and go to state 659
    '|'    shift, and go to state 660
    '^'    shift, and go to state 661
    '&'    shift, and go to state 662
    '<'    shift, and go to state 663
    '>'    shift, and go to state 664
    '-'    shift, and go to state 665
    '+'    shift, and go to state 666
    '*'    shift, and go to state 667
    '/'    shift, and go to state 668
    '%'    shift, and go to state 669
    '.'    shift, and go to state 670
    '['    shift, and go to state 671

    $default  reduce using rule 326 (expr_assign)


State 953

  327 expr_assign: expr "^^=" expr .
  339 expr_method_call: expr . "->" "name" '(' ')'
  340                 | expr . "->" "name" '(' expr_list ')'
  350 expr_field: expr . '.' "name"
  351           | expr . '.' '.' "name"
  352           | expr . '.' "name" '(' ')'
  353           | expr . '.' "name" '(' expr_list ')'
  354           | expr . '.' basic_type_declaration '(' ')'
  355           | expr . '.' basic_type_declaration '(' expr_list ')'
  358           | expr . '.' $@17 error $@18
  380 expr: expr . "<<" expr
  381     | expr . ">>" expr
  382     | expr . "<<<" expr
  383     | expr . ">>>" expr
  384     | expr . '+' expr
  385     | expr . '-' expr
  386     | expr . '*' expr
  387     | expr . '/' expr
  388     | expr . '%' expr
  389     | expr . '<' expr
  390     | expr . '>' expr
  391     | expr . "==" expr
  392     | expr . "!=" expr
  393     | expr . "<=" expr
  394     | expr . ">=" expr
  395     | expr . '&' expr
  396     | expr . '|' expr
  397     | expr . '^' expr
  398     | expr . "&&" expr
  399     | expr . "||" expr
  400     | expr . "^^" expr
  401     | expr . ".." expr
  404     | expr . "++"
  405     | expr . "--"
  407     | expr . '[' expr ']'
  408     | expr . '.' '[' expr ']'
  409     | expr . "?[" expr ']'
  410     | expr . '.' "?[" expr ']'
  411     | expr . "?." "name"
  412     | expr . '.' "?." "name"
  421     | expr . "??" expr
  422     | expr . '?' expr ':' expr
  425     | expr . "is" "type" '<' $@19 type_declaration_no_options '>' $@20
  426     | expr . "is" basic_type_declaration
  427     | expr . "is" "name"
  428     | expr . "as" "name"
  431     | expr . "as" "type" '<' $@21 type_declaration '>' $@22
  432     | expr . "as" basic_type_declaration
  433     | expr . '?' "as" "name"
  436     | expr . '?' "as" "type" '<' $@23 type_declaration '>' $@24
  437     | expr . '?' "as" basic_type_declaration
  445     | expr . "<|" expr
  446     | expr . "|>" expr
  447     | expr . "|>" basic_type_declaration
  458 expr_mtag: expr . '.' "$f" '(' expr ')'
  459          | expr . "?." "$f" '(' expr ')'
  460          | expr . '.' '.' "$f" '(' expr ')'
  461          | expr . '.' "?." "$f" '(' expr ')'
  462          | expr . "as" "$f" '(' expr ')'
  463          | expr . '?' "as" "$f" '(' expr ')'
  464          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 637
    "as"   shift, and go to state 638
    "<<"   shift, and go to state 639
    ">>"   shift, and go to state 640
    "++"   shift, and go to state 641
    "--"   shift, and go to state 642
    "<="   shift, and go to state 643
    ">="   shift, and go to state 644
    "=="   shift, and go to state 645
    "!="   shift, and go to state 646
    "->"   shift, and go to state 647
    "??"   shift, and go to state 648
    "?."   shift, and go to state 649
    "?["   shift, and go to state 650
    "<|"   shift, and go to state 651
    "|>"   shift, and go to state 652
    "<<<"  shift, and go to state 653
    ">>>"  shift, and go to state 654
    "&&"   shift, and go to state 655
    "||"   shift, and go to state 656
    "^^"   shift, and go to state 657
    ".."   shift, and go to state 658
    '?'    shift, and go to state 659
    '|'    shift, and go to state 660
    '^'    shift, and go to state 661
    '&'    shift, and go to state 662
    '<'    shift, and go to state 663
    '>'    shift, and go to state 664
    '-'    shift, and go to state 665
    '+'    shift, and go to state 666
    '*'    shift, and go to state 667
    '/'    shift, and go to state 668
    '%'    shift, and go to state 669
    '.'    shift, and go to state 670
    '['    shift, and go to state 671

    $default  reduce using rule 327 (expr_assign)


State 954

  319 expr_assign: expr '=' expr .
  339 expr_method_call: expr . "->" "name" '(' ')'
  340                 | expr . "->" "name" '(' expr_list ')'
  350 expr_field: expr . '.' "name"
  351           | expr . '.' '.' "name"
  352           | expr . '.' "name" '(' ')'
  353           | expr . '.' "name" '(' expr_list ')'
  354           | expr . '.' basic_type_declaration '(' ')'
  355           | expr . '.' basic_type_declaration '(' expr_list ')'
  358           | expr . '.' $@17 error $@18
  380 expr: expr . "<<" expr
  381     | expr . ">>" expr
  382     | expr . "<<<" expr
  383     | expr . ">>>" expr
  384     | expr . '+' expr
  385     | expr . '-' expr
  386     | expr . '*' expr
  387     | expr . '/' expr
  388     | expr . '%' expr
  389     | expr . '<' expr
  390     | expr . '>' expr
  391     | expr . "==" expr
  392     | expr . "!=" expr
  393     | expr . "<=" expr
  394     | expr . ">=" expr
  395     | expr . '&' expr
  396     | expr . '|' expr
  397     | expr . '^' expr
  398     | expr . "&&" expr
  399     | expr . "||" expr
  400     | expr . "^^" expr
  401     | expr . ".." expr
  404     | expr . "++"
  405     | expr . "--"
  407     | expr . '[' expr ']'
  408     | expr . '.' '[' expr ']'
  409     | expr . "?[" expr ']'
  410     | expr . '.' "?[" expr ']'
  411     | expr . "?." "name"
  412     | expr . '.' "?." "name"
  421     | expr . "??" expr
  422     | expr . '?' expr ':' expr
  425     | expr . "is" "type" '<' $@19 type_declaration_no_options '>' $@20
  426     | expr . "is" basic_type_declaration
  427     | expr . "is" "name"
  428     | expr . "as" "name"
  431     | expr . "as" "type" '<' $@21 type_declaration '>' $@22
  432     | expr . "as" basic_type_declaration
  433     | expr . '?' "as" "name"
  436     | expr . '?' "as" "type" '<' $@23 type_declaration '>' $@24
  437     | expr . '?' "as" basic_type_declaration
  445     | expr . "<|" expr
  446     | expr . "|>" expr
  447     | expr . "|>" basic_type_declaration
  458 expr_mtag: expr . '.' "$f" '(' expr ')'
  459          | expr . "?." "$f" '(' expr ')'
  460          | expr . '.' '.' "$f" '(' expr ')'
  461          | expr . '.' "?." "$f" '(' expr ')'
  462          | expr . "as" "$f" '(' expr ')'
  463          | expr . '?' "as" "$f" '(' expr ')'
  464          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 637
    "as"   shift, and go to state 638
    "<<"   shift, and go to state 639
    ">>"   shift, and go to state 640
    "++"   shift, and go to state 641
    "--"   shift, and go to state 642
    "<="   shift, and go to state 643
    ">="   shift, and go to state 644
    "=="   shift, and go to state 645
    "!="   shift, and go to state 646
    "->"   shift, and go to state 647
    "??"   shift, and go to state 648
    "?."   shift, and go to state 649
    "?["   shift, and go to state 650
    "<|"   shift, and go to state 651
    "|>"   shift, and go to state 652
    "<<<"  shift, and go to state 653
    ">>>"  shift, and go to state 654
    "&&"   shift, and go to state 655
    "||"   shift, and go to state 656
    "^^"   shift, and go to state 657
    ".."   shift, and go to state 658
    '?'    shift, and go to state 659
    '|'    shift, and go to state 660
    '^'    shift, and go to state 661
    '&'    shift, and go to state 662
    '<'    shift, and go to state 663
    '>'    shift, and go to state 664
    '-'    shift, and go to state 665
    '+'    shift, and go to state 666
    '*'    shift, and go to state 667
    '/'    shift, and go to state 668
    '%'    shift, and go to state 669
    '.'    shift, and go to state 670
    '['    shift, and go to state 671

    $default  reduce using rule 319 (expr_assign)


State 955

  339 expr_method_call: expr . "->" "name" '(' ')'
  340                 | expr . "->" "name" '(' expr_list ')'
  350 expr_field: expr . '.' "name"
  351           | expr . '.' '.' "name"
  352           | expr . '.' "name" '(' ')'
  353           | expr . '.' "name" '(' expr_list ')'
  354           | expr . '.' basic_type_declaration '(' ')'
  355           | expr . '.' basic_type_declaration '(' expr_list ')'
  358           | expr . '.' $@17 error $@18
  380 expr: expr . "<<" expr
  381     | expr . ">>" expr
  382     | expr . "<<<" expr
  383     | expr . ">>>" expr
  384     | expr . '+' expr
  385     | expr . '-' expr
  386     | expr . '*' expr
  387     | expr . '/' expr
  388     | expr . '%' expr
  389     | expr . '<' expr
  390     | expr . '>' expr
  391     | expr . "==" expr
  392     | expr . "!=" expr
  393     | expr . "<=" expr
  394     | expr . ">=" expr
  395     | expr . '&' expr
  396     | expr . '|' expr
  397     | expr . '^' expr
  398     | expr . "&&" expr
  399     | expr . "||" expr
  400     | expr . "^^" expr
  401     | expr . ".." expr
  404     | expr . "++"
  405     | expr . "--"
  407     | expr . '[' expr ']'
  408     | expr . '.' '[' expr ']'
  409     | expr . "?[" expr ']'
  410     | expr . '.' "?[" expr ']'
  411     | expr . "?." "name"
  412     | expr . '.' "?." "name"
  421     | expr . "??" expr
  422     | expr . '?' expr ':' expr
  425     | expr . "is" "type" '<' $@19 type_declaration_no_options '>' $@20
  426     | expr . "is" basic_type_declaration
  427     | expr . "is" "name"
  428     | expr . "as" "name"
  431     | expr . "as" "type" '<' $@21 type_declaration '>' $@22
  432     | expr . "as" basic_type_declaration
  433     | expr . '?' "as" "name"
  436     | expr . '?' "as" "type" '<' $@23 type_declaration '>' $@24
  437     | expr . '?' "as" basic_type_declaration
  445     | expr . "<|" expr
  446     | expr . "|>" expr
  447     | expr . "|>" basic_type_declaration
  458 expr_mtag: expr . '.' "$f" '(' expr ')'
  459          | expr . "?." "$f" '(' expr ')'
  460          | expr . '.' '.' "$f" '(' expr ')'
  461          | expr . '.' "?." "$f" '(' expr ')'
  462          | expr . "as" "$f" '(' expr ')'
  463          | expr . '?' "as" "$f" '(' expr ')'
  464          | expr . "is" "$f" '(' expr ')'
  536 enum_expression: "name" '=' expr .

    "is"   shift, and go to state 637
    "as"   shift, and go to state 638
    "<<"   shift, and go to state 639
    ">>"   shift, and go to state 640
    "++"   shift, and go to state 641
    "--"   shift, and go to state 642
    "<="   shift, and go to state 643
    ">="   shift, and go to state 644
    "=="   shift, and go to state 645
    "!="   shift, and go to state 646
    "->"   shift, and go to state 647
    "??"   shift, and go to state 648
    "?."   shift, and go to state 649
    "?["   shift, and go to state 650
    "<|"   shift, and go to state 651
    "|>"   shift, and go to state 652
    "<<<"  shift, and go to state 653
    ">>>"  shift, and go to state 654
    "&&"   shift, and go to state 655
    "||"   shift, and go to state 656
    "^^"   shift, and go to state 657
    ".."   shift, and go to state 658
    '?'    shift, and go to state 659
    '|'    shift, and go to state 660
    '^'    shift, and go to state 661
    '&'    shift, and go to state 662
    '<'    shift, and go to state 663
    '>'    shift, and go to state 664
    '-'    shift, and go to state 665
    '+'    shift, and go to state 666
    '*'    shift, and go to state 667
    '/'    shift, and go to state 668
    '%'    shift, and go to state 669
    '.'    shift, and go to state 670
    '['    shift, and go to state 671

    $default  reduce using rule 536 (enum_expression)


State 956

  539 enum_list: enum_list ',' enum_expression .

    $default  reduce using rule 539 (enum_list)


State 957

  554 enum_declaration: optional_annotation_list "enum" optional_public_or_private_enum enum_name optional_enum_basic_type_declaration "begin of code block" $@30 enum_list optional_comma $@31 . "end of code block"

    "end of code block"  shift, and go to state 1093


State 958

  483 struct_variable_declaration_list: struct_variable_declaration_list optional_annotation_list "def" . optional_public_or_private_member_variable "abstract" optional_constant $@26 function_declaration_header "end of expression"
  485                                 | struct_variable_declaration_list optional_annotation_list "def" . optional_public_or_private_member_variable optional_static_member_variable optional_override optional_constant $@27 function_declaration_header expression_block

    "public"   shift, and go to state 1094
    "private"  shift, and go to state 1095

    $default  reduce using rule 473 (optional_public_or_private_member_variable)

    optional_public_or_private_member_variable  go to state 1096


State 959

  478 structure_variable_declaration: optional_field_annotation . optional_static_member_variable optional_override optional_public_or_private_member_variable variable_declaration

    "static"  shift, and go to state 1097

    $default  reduce using rule 476 (optional_static_member_variable)

    optional_static_member_variable  go to state 1098


State 960

  481 struct_variable_declaration_list: struct_variable_declaration_list $@25 structure_variable_declaration . "end of expression"

    "end of expression"  shift, and go to state 1099


State 961

  339 expr_method_call: expr . "->" "name" '(' ')'
  340                 | expr . "->" "name" '(' expr_list ')'
  350 expr_field: expr . '.' "name"
  351           | expr . '.' '.' "name"
  352           | expr . '.' "name" '(' ')'
  353           | expr . '.' "name" '(' expr_list ')'
  354           | expr . '.' basic_type_declaration '(' ')'
  355           | expr . '.' basic_type_declaration '(' expr_list ')'
  358           | expr . '.' $@17 error $@18
  380 expr: expr . "<<" expr
  381     | expr . ">>" expr
  382     | expr . "<<<" expr
  383     | expr . ">>>" expr
  384     | expr . '+' expr
  385     | expr . '-' expr
  386     | expr . '*' expr
  387     | expr . '/' expr
  388     | expr . '%' expr
  389     | expr . '<' expr
  390     | expr . '>' expr
  391     | expr . "==" expr
  392     | expr . "!=" expr
  393     | expr . "<=" expr
  394     | expr . ">=" expr
  395     | expr . '&' expr
  396     | expr . '|' expr
  397     | expr . '^' expr
  398     | expr . "&&" expr
  399     | expr . "||" expr
  400     | expr . "^^" expr
  401     | expr . ".." expr
  404     | expr . "++"
  405     | expr . "--"
  407     | expr . '[' expr ']'
  408     | expr . '.' '[' expr ']'
  409     | expr . "?[" expr ']'
  410     | expr . '.' "?[" expr ']'
  411     | expr . "?." "name"
  412     | expr . '.' "?." "name"
  421     | expr . "??" expr
  422     | expr . '?' expr ':' expr
  425     | expr . "is" "type" '<' $@19 type_declaration_no_options '>' $@20
  426     | expr . "is" basic_type_declaration
  427     | expr . "is" "name"
  428     | expr . "as" "name"
  431     | expr . "as" "type" '<' $@21 type_declaration '>' $@22
  432     | expr . "as" basic_type_declaration
  433     | expr . '?' "as" "name"
  436     | expr . '?' "as" "type" '<' $@23 type_declaration '>' $@24
  437     | expr . '?' "as" basic_type_declaration
  445     | expr . "<|" expr
  446     | expr . "|>" expr
  447     | expr . "|>" basic_type_declaration
  458 expr_mtag: expr . '.' "$f" '(' expr ')'
  459          | expr . "?." "$f" '(' expr ')'
  460          | expr . '.' '.' "$f" '(' expr ')'
  461          | expr . '.' "?." "$f" '(' expr ')'
  462          | expr . "as" "$f" '(' expr ')'
  463          | expr . '?' "as" "$f" '(' expr ')'
  464          | expr . "is" "$f" '(' expr ')'
  526 global_let_variable_declaration: global_let_variable_name_with_pos_list ':' type_declaration_no_options copy_or_move_or_clone expr . "end of expression"

    "is"                 shift, and go to state 637
    "as"                 shift, and go to state 638
    "<<"                 shift, and go to state 639
    ">>"                 shift, and go to state 640
    "++"                 shift, and go to state 641
    "--"                 shift, and go to state 642
    "<="                 shift, and go to state 643
    ">="                 shift, and go to state 644
    "=="                 shift, and go to state 645
    "!="                 shift, and go to state 646
    "->"                 shift, and go to state 647
    "??"                 shift, and go to state 648
    "?."                 shift, and go to state 649
    "?["                 shift, and go to state 650
    "<|"                 shift, and go to state 651
    "|>"                 shift, and go to state 652
    "<<<"                shift, and go to state 653
    ">>>"                shift, and go to state 654
    "&&"                 shift, and go to state 655
    "||"                 shift, and go to state 656
    "^^"                 shift, and go to state 657
    ".."                 shift, and go to state 658
    "end of expression"  shift, and go to state 1100
    '?'                  shift, and go to state 659
    '|'                  shift, and go to state 660
    '^'                  shift, and go to state 661
    '&'                  shift, and go to state 662
    '<'                  shift, and go to state 663
    '>'                  shift, and go to state 664
    '-'                  shift, and go to state 665
    '+'                  shift, and go to state 666
    '*'                  shift, and go to state 667
    '/'                  shift, and go to state 668
    '%'                  shift, and go to state 669
    '.'                  shift, and go to state 670
    '['                  shift, and go to state 671


State 962

  527 global_let_variable_declaration: global_let_variable_name_with_pos_list optional_ref copy_or_move_or_clone expr "end of expression" .

    $default  reduce using rule 527 (global_let_variable_declaration)


State 963

  638 type_declaration_no_options_no_dim: "type" '<' $@36 type_declaration '>' $@37 .

    $default  reduce using rule 638 (type_declaration_no_options_no_dim)


State 964

  661 type_declaration_no_options_no_dim: "array" '<' $@41 type_declaration '>' $@42 .

    $default  reduce using rule 661 (type_declaration_no_options_no_dim)


State 965

  664 type_declaration_no_options_no_dim: "table" '<' $@43 table_type_pair '>' $@44 .

    $default  reduce using rule 664 (type_declaration_no_options_no_dim)


State 966

  625 table_type_pair: type_declaration c_or_s type_declaration .
  696 type_declaration: type_declaration . '|' type_declaration_no_options
  697                 | type_declaration . '|' '#'

    '|'  shift, and go to state 369

    $default  reduce using rule 625 (table_type_pair)


State 967

  735 make_struct_decl: "struct" '<' $@72 type_declaration_no_options . '>' $@73 '(' use_initializer optional_make_struct_dim_decl ')'

    '>'  shift, and go to state 1101


State 968

  738 make_struct_decl: "class" '<' $@74 type_declaration_no_options . '>' $@75 '(' use_initializer optional_make_struct_dim_decl ')'

    '>'  shift, and go to state 1102


State 969

  249 new_type_declaration: '<' $@3 type_declaration . '>' $@4
  696 type_declaration: type_declaration . '|' type_declaration_no_options
  697                 | type_declaration . '|' '#'

    '|'  shift, and go to state 369
    '>'  shift, and go to state 1103


State 970

  732 use_initializer: "uninitialized" .

    $default  reduce using rule 732 (use_initializer)


State 971

  252 expr_new: "new" new_type_declaration '(' use_initializer . ')'
  253         | "new" new_type_declaration '(' use_initializer . make_struct_single ')'

    "$f"    shift, and go to state 824
    "name"  shift, and go to state 1017
    ')'     shift, and go to state 1104

    make_struct_fields  go to state 829
    make_struct_single  go to state 1105


State 972

  251 expr_new: "new" structure_type_declaration '(' optional_expr_list . ')'

    ')'  shift, and go to state 1106


State 973

  289 expr_type_info: "typeinfo" name_in_namespace '<' "name" . '>' '(' expr ')'
  290               | "typeinfo" name_in_namespace '<' "name" . c_or_s "name" '>' '(' expr ')'

    "end of expression"  shift, and go to state 505
    ','                  shift, and go to state 506
    '>'                  shift, and go to state 1107

    c_or_s  go to state 1108


State 974

  288 expr_type_info: "typeinfo" name_in_namespace '(' expr . ')'
  339 expr_method_call: expr . "->" "name" '(' ')'
  340                 | expr . "->" "name" '(' expr_list ')'
  350 expr_field: expr . '.' "name"
  351           | expr . '.' '.' "name"
  352           | expr . '.' "name" '(' ')'
  353           | expr . '.' "name" '(' expr_list ')'
  354           | expr . '.' basic_type_declaration '(' ')'
  355           | expr . '.' basic_type_declaration '(' expr_list ')'
  358           | expr . '.' $@17 error $@18
  380 expr: expr . "<<" expr
  381     | expr . ">>" expr
  382     | expr . "<<<" expr
  383     | expr . ">>>" expr
  384     | expr . '+' expr
  385     | expr . '-' expr
  386     | expr . '*' expr
  387     | expr . '/' expr
  388     | expr . '%' expr
  389     | expr . '<' expr
  390     | expr . '>' expr
  391     | expr . "==" expr
  392     | expr . "!=" expr
  393     | expr . "<=" expr
  394     | expr . ">=" expr
  395     | expr . '&' expr
  396     | expr . '|' expr
  397     | expr . '^' expr
  398     | expr . "&&" expr
  399     | expr . "||" expr
  400     | expr . "^^" expr
  401     | expr . ".." expr
  404     | expr . "++"
  405     | expr . "--"
  407     | expr . '[' expr ']'
  408     | expr . '.' '[' expr ']'
  409     | expr . "?[" expr ']'
  410     | expr . '.' "?[" expr ']'
  411     | expr . "?." "name"
  412     | expr . '.' "?." "name"
  421     | expr . "??" expr
  422     | expr . '?' expr ':' expr
  425     | expr . "is" "type" '<' $@19 type_declaration_no_options '>' $@20
  426     | expr . "is" basic_type_declaration
  427     | expr . "is" "name"
  428     | expr . "as" "name"
  431     | expr . "as" "type" '<' $@21 type_declaration '>' $@22
  432     | expr . "as" basic_type_declaration
  433     | expr . '?' "as" "name"
  436     | expr . '?' "as" "type" '<' $@23 type_declaration '>' $@24
  437     | expr . '?' "as" basic_type_declaration
  445     | expr . "<|" expr
  446     | expr . "|>" expr
  447     | expr . "|>" basic_type_declaration
  458 expr_mtag: expr . '.' "$f" '(' expr ')'
  459          | expr . "?." "$f" '(' expr ')'
  460          | expr . '.' '.' "$f" '(' expr ')'
  461          | expr . '.' "?." "$f" '(' expr ')'
  462          | expr . "as" "$f" '(' expr ')'
  463          | expr . '?' "as" "$f" '(' expr ')'
  464          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 637
    "as"   shift, and go to state 638
    "<<"   shift, and go to state 639
    ">>"   shift, and go to state 640
    "++"   shift, and go to state 641
    "--"   shift, and go to state 642
    "<="   shift, and go to state 643
    ">="   shift, and go to state 644
    "=="   shift, and go to state 645
    "!="   shift, and go to state 646
    "->"   shift, and go to state 647
    "??"   shift, and go to state 648
    "?."   shift, and go to state 649
    "?["   shift, and go to state 650
    "<|"   shift, and go to state 651
    "|>"   shift, and go to state 652
    "<<<"  shift, and go to state 653
    ">>>"  shift, and go to state 654
    "&&"   shift, and go to state 655
    "||"   shift, and go to state 656
    "^^"   shift, and go to state 657
    ".."   shift, and go to state 658
    '?'    shift, and go to state 659
    '|'    shift, and go to state 660
    '^'    shift, and go to state 661
    '&'    shift, and go to state 662
    '<'    shift, and go to state 663
    '>'    shift, and go to state 664
    '-'    shift, and go to state 665
    '+'    shift, and go to state 666
    '*'    shift, and go to state 667
    '/'    shift, and go to state 668
    '%'    shift, and go to state 669
    '.'    shift, and go to state 670
    '['    shift, and go to state 671
    ')'    shift, and go to state 1109


State 975

  287 expr_type_decl: "type" '<' $@11 type_declaration . '>' $@12
  696 type_declaration: type_declaration . '|' type_declaration_no_options
  697                 | type_declaration . '|' '#'

    '|'  shift, and go to state 369
    '>'  shift, and go to state 1110


State 976

  754 make_dim_decl: "array" "struct" '<' $@82 . type_declaration_no_options '>' $@83 '(' use_initializer optional_make_struct_dim_decl ')'

    "type"       shift, and go to state 216
    "array"      shift, and go to state 217
    "table"      shift, and go to state 218
    "typedecl"   shift, and go to state 219
    "iterator"   shift, and go to state 220
    "smart_ptr"  shift, and go to state 221
    "bool"       shift, and go to state 222
    "void"       shift, and go to state 223
    "string"     shift, and go to state 224
    "auto"       shift, and go to state 225
    "int"        shift, and go to state 226
    "int2"       shift, and go to state 227
    "int3"       shift, and go to state 228
    "int4"       shift, and go to state 229
    "uint"       shift, and go to state 230
    "bitfield"   shift, and go to state 231
    "uint2"      shift, and go to state 232
    "uint3"      shift, and go to state 233
    "uint4"      shift, and go to state 234
    "float"      shift, and go to state 235
    "float2"     shift, and go to state 236
    "float3"     shift, and go to state 237
    "float4"     shift, and go to state 238
    "range"      shift, and go to state 239
    "urange"     shift, and go to state 240
    "range64"    shift, and go to state 241
    "urange64"   shift, and go to state 242
    "block"      shift, and go to state 243
    "int64"      shift, and go to state 244
    "uint64"     shift, and go to state 245
    "double"     shift, and go to state 246
    "function"   shift, and go to state 247
    "lambda"     shift, and go to state 248
    "int8"       shift, and go to state 249
    "uint8"      shift, and go to state 250
    "int16"      shift, and go to state 251
    "uint16"     shift, and go to state 252
    "tuple"      shift, and go to state 253
    "variant"    shift, and go to state 254
    "::"         shift, and go to state 55
    "$t"         shift, and go to state 255
    "name"       shift, and go to state 56
    '$'          shift, and go to state 256

    name_in_namespace                   go to state 257
    basic_type_declaration              go to state 258
    structure_type_declaration          go to state 259
    auto_type_declaration               go to state 260
    bitfield_type_declaration           go to state 261
    type_declaration_no_options         go to state 1111
    type_declaration_no_options_no_dim  go to state 263


State 977

  757 make_dim_decl: "array" "tuple" '<' $@84 . type_declaration_no_options '>' $@85 '(' use_initializer optional_make_struct_dim_decl ')'

    "type"       shift, and go to state 216
    "array"      shift, and go to state 217
    "table"      shift, and go to state 218
    "typedecl"   shift, and go to state 219
    "iterator"   shift, and go to state 220
    "smart_ptr"  shift, and go to state 221
    "bool"       shift, and go to state 222
    "void"       shift, and go to state 223
    "string"     shift, and go to state 224
    "auto"       shift, and go to state 225
    "int"        shift, and go to state 226
    "int2"       shift, and go to state 227
    "int3"       shift, and go to state 228
    "int4"       shift, and go to state 229
    "uint"       shift, and go to state 230
    "bitfield"   shift, and go to state 231
    "uint2"      shift, and go to state 232
    "uint3"      shift, and go to state 233
    "uint4"      shift, and go to state 234
    "float"      shift, and go to state 235
    "float2"     shift, and go to state 236
    "float3"     shift, and go to state 237
    "float4"     shift, and go to state 238
    "range"      shift, and go to state 239
    "urange"     shift, and go to state 240
    "range64"    shift, and go to state 241
    "urange64"   shift, and go to state 242
    "block"      shift, and go to state 243
    "int64"      shift, and go to state 244
    "uint64"     shift, and go to state 245
    "double"     shift, and go to state 246
    "function"   shift, and go to state 247
    "lambda"     shift, and go to state 248
    "int8"       shift, and go to state 249
    "uint8"      shift, and go to state 250
    "int16"      shift, and go to state 251
    "uint16"     shift, and go to state 252
    "tuple"      shift, and go to state 253
    "variant"    shift, and go to state 254
    "::"         shift, and go to state 55
    "$t"         shift, and go to state 255
    "name"       shift, and go to state 56
    '$'          shift, and go to state 256

    name_in_namespace                   go to state 257
    basic_type_declaration              go to state 258
    structure_type_declaration          go to state 259
    auto_type_declaration               go to state 260
    bitfield_type_declaration           go to state 261
    type_declaration_no_options         go to state 1112
    type_declaration_no_options_no_dim  go to state 263


State 978

  760 make_dim_decl: "array" "variant" '<' $@86 . type_declaration_no_options '>' $@87 '(' make_variant_dim ')'

    "type"       shift, and go to state 216
    "array"      shift, and go to state 217
    "table"      shift, and go to state 218
    "typedecl"   shift, and go to state 219
    "iterator"   shift, and go to state 220
    "smart_ptr"  shift, and go to state 221
    "bool"       shift, and go to state 222
    "void"       shift, and go to state 223
    "string"     shift, and go to state 224
    "auto"       shift, and go to state 225
    "int"        shift, and go to state 226
    "int2"       shift, and go to state 227
    "int3"       shift, and go to state 228
    "int4"       shift, and go to state 229
    "uint"       shift, and go to state 230
    "bitfield"   shift, and go to state 231
    "uint2"      shift, and go to state 232
    "uint3"      shift, and go to state 233
    "uint4"      shift, and go to state 234
    "float"      shift, and go to state 235
    "float2"     shift, and go to state 236
    "float3"     shift, and go to state 237
    "float4"     shift, and go to state 238
    "range"      shift, and go to state 239
    "urange"     shift, and go to state 240
    "range64"    shift, and go to state 241
    "urange64"   shift, and go to state 242
    "block"      shift, and go to state 243
    "int64"      shift, and go to state 244
    "uint64"     shift, and go to state 245
    "double"     shift, and go to state 246
    "function"   shift, and go to state 247
    "lambda"     shift, and go to state 248
    "int8"       shift, and go to state 249
    "uint8"      shift, and go to state 250
    "int16"      shift, and go to state 251
    "uint16"     shift, and go to state 252
    "tuple"      shift, and go to state 253
    "variant"    shift, and go to state 254
    "::"         shift, and go to state 55
    "$t"         shift, and go to state 255
    "name"       shift, and go to state 56
    '$'          shift, and go to state 256

    name_in_namespace                   go to state 257
    basic_type_declaration              go to state 258
    structure_type_declaration          go to state 259
    auto_type_declaration               go to state 260
    bitfield_type_declaration           go to state 261
    type_declaration_no_options         go to state 1113
    type_declaration_no_options_no_dim  go to state 263


State 979

  764 make_dim_decl: "array" '<' $@88 type_declaration_no_options . '>' $@89 '(' optional_expr_list ')'

    '>'  shift, and go to state 1114


State 980

  761 make_dim_decl: "array" '(' expr_list optional_comma . ')'

    ')'  shift, and go to state 1115


State 981

  773 make_table_decl: "table" '<' type_declaration_no_options '>' . '(' optional_expr_map_tuple_list ')'

    '('  shift, and go to state 1116


State 982

  774 make_table_decl: "table" '<' type_declaration_no_options c_or_s . type_declaration_no_options '>' '(' optional_expr_map_tuple_list ')'

    "type"       shift, and go to state 216
    "array"      shift, and go to state 217
    "table"      shift, and go to state 218
    "typedecl"   shift, and go to state 219
    "iterator"   shift, and go to state 220
    "smart_ptr"  shift, and go to state 221
    "bool"       shift, and go to state 222
    "void"       shift, and go to state 223
    "string"     shift, and go to state 224
    "auto"       shift, and go to state 225
    "int"        shift, and go to state 226
    "int2"       shift, and go to state 227
    "int3"       shift, and go to state 228
    "int4"       shift, and go to state 229
    "uint"       shift, and go to state 230
    "bitfield"   shift, and go to state 231
    "uint2"      shift, and go to state 232
    "uint3"      shift, and go to state 233
    "uint4"      shift, and go to state 234
    "float"      shift, and go to state 235
    "float2"     shift, and go to state 236
    "float3"     shift, and go to state 237
    "float4"     shift, and go to state 238
    "range"      shift, and go to state 239
    "urange"     shift, and go to state 240
    "range64"    shift, and go to state 241
    "urange64"   shift, and go to state 242
    "block"      shift, and go to state 243
    "int64"      shift, and go to state 244
    "uint64"     shift, and go to state 245
    "double"     shift, and go to state 246
    "function"   shift, and go to state 247
    "lambda"     shift, and go to state 248
    "int8"       shift, and go to state 249
    "uint8"      shift, and go to state 250
    "int16"      shift, and go to state 251
    "uint16"     shift, and go to state 252
    "tuple"      shift, and go to state 253
    "variant"    shift, and go to state 254
    "::"         shift, and go to state 55
    "$t"         shift, and go to state 255
    "name"       shift, and go to state 56
    '$'          shift, and go to state 256

    name_in_namespace                   go to state 257
    basic_type_declaration              go to state 258
    structure_type_declaration          go to state 259
    auto_type_declaration               go to state 260
    bitfield_type_declaration           go to state 261
    type_declaration_no_options         go to state 1117
    type_declaration_no_options_no_dim  go to state 263


State 983

  772 make_table_decl: "table" '(' expr_map_tuple_list optional_comma . ')'

    ')'  shift, and go to state 1118


State 984

  416 expr: "deref" '(' expr ')' .

    $default  reduce using rule 416 (expr)


State 985

  278 expr_cast: "cast" '<' $@5 type_declaration_no_options . '>' $@6 expr

    '>'  shift, and go to state 1119


State 986

  281 expr_cast: "upcast" '<' $@7 type_declaration_no_options . '>' $@8 expr

    '>'  shift, and go to state 1120


State 987

  417 expr: "addr" '(' expr ')' .

    $default  reduce using rule 417 (expr)


State 988

  284 expr_cast: "reinterpret" '<' $@9 type_declaration_no_options . '>' $@10 expr

    '>'  shift, and go to state 1121


State 989

  449 expr: "unsafe" '(' expr ')' .

    $default  reduce using rule 449 (expr)


State 990

  768 make_dim_decl: "fixed_array" '<' $@90 type_declaration_no_options . '>' $@91 '(' expr_list optional_comma ')'

    '>'  shift, and go to state 1122


State 991

  765 make_dim_decl: "fixed_array" '(' expr_list optional_comma . ')'

    ')'  shift, and go to state 1123


State 992

  744 make_struct_decl: "default" '<' $@78 type_declaration_no_options . '>' $@79 use_initializer

    '>'  shift, and go to state 1124


State 993

  750 make_tuple_call: "tuple" '<' $@80 type_declaration_no_options . '>' $@81 '(' use_initializer optional_make_struct_dim_decl ')'

    '>'  shift, and go to state 1125


State 994

  747 make_tuple_call: "tuple" '(' expr_list optional_comma . ')'

    ')'  shift, and go to state 1126


State 995

  741 make_struct_decl: "variant" '<' $@76 type_declaration_no_options . '>' $@77 '(' make_variant_dim ')'

    '>'  shift, and go to state 1127


State 996

  418 expr: "generator" '<' type_declaration_no_options '>' . optional_capture_list '(' ')'
  419     | "generator" '<' type_declaration_no_options '>' . optional_capture_list '(' expr ')'
  420     | "generator" '<' type_declaration_no_options '>' . optional_capture_list expression_block

    "capture"  shift, and go to state 831

    $default  reduce using rule 306 (optional_capture_list)

    optional_capture_list  go to state 1128


State 997

  450 expr_mtag: "$$" '(' expr ')' .

    $default  reduce using rule 450 (expr_mtag)


State 998

  451 expr_mtag: "$i" '(' expr ')' .

    $default  reduce using rule 451 (expr_mtag)


State 999

  452 expr_mtag: "$v" '(' expr ')' .

    $default  reduce using rule 452 (expr_mtag)


State 1000

  453 expr_mtag: "$b" '(' expr ')' .

    $default  reduce using rule 453 (expr_mtag)


State 1001

  454 expr_mtag: "$a" '(' expr ')' .

    $default  reduce using rule 454 (expr_mtag)


State 1002

  456 expr_mtag: "$c" '(' expr ')' . '(' ')'
  457          | "$c" '(' expr ')' . '(' expr_list ')'

    '('  shift, and go to state 1129


State 1003

   31 string_builder_body: string_builder_body "{" expr . "}"
  339 expr_method_call: expr . "->" "name" '(' ')'
  340                 | expr . "->" "name" '(' expr_list ')'
  350 expr_field: expr . '.' "name"
  351           | expr . '.' '.' "name"
  352           | expr . '.' "name" '(' ')'
  353           | expr . '.' "name" '(' expr_list ')'
  354           | expr . '.' basic_type_declaration '(' ')'
  355           | expr . '.' basic_type_declaration '(' expr_list ')'
  358           | expr . '.' $@17 error $@18
  380 expr: expr . "<<" expr
  381     | expr . ">>" expr
  382     | expr . "<<<" expr
  383     | expr . ">>>" expr
  384     | expr . '+' expr
  385     | expr . '-' expr
  386     | expr . '*' expr
  387     | expr . '/' expr
  388     | expr . '%' expr
  389     | expr . '<' expr
  390     | expr . '>' expr
  391     | expr . "==" expr
  392     | expr . "!=" expr
  393     | expr . "<=" expr
  394     | expr . ">=" expr
  395     | expr . '&' expr
  396     | expr . '|' expr
  397     | expr . '^' expr
  398     | expr . "&&" expr
  399     | expr . "||" expr
  400     | expr . "^^" expr
  401     | expr . ".." expr
  404     | expr . "++"
  405     | expr . "--"
  407     | expr . '[' expr ']'
  408     | expr . '.' '[' expr ']'
  409     | expr . "?[" expr ']'
  410     | expr . '.' "?[" expr ']'
  411     | expr . "?." "name"
  412     | expr . '.' "?." "name"
  421     | expr . "??" expr
  422     | expr . '?' expr ':' expr
  425     | expr . "is" "type" '<' $@19 type_declaration_no_options '>' $@20
  426     | expr . "is" basic_type_declaration
  427     | expr . "is" "name"
  428     | expr . "as" "name"
  431     | expr . "as" "type" '<' $@21 type_declaration '>' $@22
  432     | expr . "as" basic_type_declaration
  433     | expr . '?' "as" "name"
  436     | expr . '?' "as" "type" '<' $@23 type_declaration '>' $@24
  437     | expr . '?' "as" basic_type_declaration
  445     | expr . "<|" expr
  446     | expr . "|>" expr
  447     | expr . "|>" basic_type_declaration
  458 expr_mtag: expr . '.' "$f" '(' expr ')'
  459          | expr . "?." "$f" '(' expr ')'
  460          | expr . '.' '.' "$f" '(' expr ')'
  461          | expr . '.' "?." "$f" '(' expr ')'
  462          | expr . "as" "$f" '(' expr ')'
  463          | expr . '?' "as" "$f" '(' expr ')'
  464          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 637
    "as"   shift, and go to state 638
    "<<"   shift, and go to state 639
    ">>"   shift, and go to state 640
    "++"   shift, and go to state 641
    "--"   shift, and go to state 642
    "<="   shift, and go to state 643
    ">="   shift, and go to state 644
    "=="   shift, and go to state 645
    "!="   shift, and go to state 646
    "->"   shift, and go to state 647
    "??"   shift, and go to state 648
    "?."   shift, and go to state 649
    "?["   shift, and go to state 650
    "<|"   shift, and go to state 651
    "|>"   shift, and go to state 652
    "<<<"  shift, and go to state 653
    ">>>"  shift, and go to state 654
    "&&"   shift, and go to state 655
    "||"   shift, and go to state 656
    "^^"   shift, and go to state 657
    ".."   shift, and go to state 658
    "}"    shift, and go to state 1130
    '?'    shift, and go to state 659
    '|'    shift, and go to state 660
    '^'    shift, and go to state 661
    '&'    shift, and go to state 662
    '<'    shift, and go to state 663
    '>'    shift, and go to state 664
    '-'    shift, and go to state 665
    '+'    shift, and go to state 666
    '*'    shift, and go to state 667
    '/'    shift, and go to state 668
    '%'    shift, and go to state 669
    '.'    shift, and go to state 670
    '['    shift, and go to state 671


State 1004

  781 array_comprehension: "begin of code block" "for" variable_name_with_pos_list "in" . expr_list "end of expression" make_map_tuple array_comprehension_where "end of code block"

    "struct"                          shift, and go to state 402
    "class"                           shift, and go to state 403
    "true"                            shift, and go to state 404
    "false"                           shift, and go to state 405
    "new"                             shift, and go to state 406
    "typeinfo"                        shift, and go to state 407
    "type"                            shift, and go to state 408
    "array"                           shift, and go to state 409
    "null"                            shift, and go to state 410
    "table"                           shift, and go to state 411
    "deref"                           shift, and go to state 412
    "cast"                            shift, and go to state 413
    "upcast"                          shift, and go to state 414
    "addr"                            shift, and go to state 415
    "reinterpret"                     shift, and go to state 416
    "unsafe"                          shift, and go to state 417
    "fixed_array"                     shift, and go to state 418
    "default"                         shift, and go to state 419
    "bool"                            shift, and go to state 222
    "void"                            shift, and go to state 223
    "string"                          shift, and go to state 224
    "int"                             shift, and go to state 226
    "int2"                            shift, and go to state 227
    "int3"                            shift, and go to state 228
    "int4"                            shift, and go to state 229
    "uint"                            shift, and go to state 230
    "bitfield"                        shift, and go to state 420
    "uint2"                           shift, and go to state 232
    "uint3"                           shift, and go to state 233
    "uint4"                           shift, and go to state 234
    "float"                           shift, and go to state 235
    "float2"                          shift, and go to state 236
    "float3"                          shift, and go to state 237
    "float4"                          shift, and go to state 238
    "range"                           shift, and go to state 239
    "urange"                          shift, and go to state 240
    "range64"                         shift, and go to state 241
    "urange64"                        shift, and go to state 242
    "int64"                           shift, and go to state 244
    "uint64"                          shift, and go to state 245
    "double"                          shift, and go to state 246
    "int8"                            shift, and go to state 249
    "uint8"                           shift, and go to state 250
    "int16"                           shift, and go to state 251
    "uint16"                          shift, and go to state 252
    "tuple"                           shift, and go to state 421
    "variant"                         shift, and go to state 422
    "generator"                       shift, and go to state 423
    "++"                              shift, and go to state 424
    "--"                              shift, and go to state 425
    "::"                              shift, and go to state 55
    "$$"                              shift, and go to state 426
    "$i"                              shift, and go to state 427
    "$v"                              shift, and go to state 428
    "$b"                              shift, and go to state 429
    "$a"                              shift, and go to state 430
    "$c"                              shift, and go to state 431
    "..."                             shift, and go to state 432
    "integer constant"                shift, and go to state 433
    "long integer constant"           shift, and go to state 434
    "unsigned integer constant"       shift, and go to state 435
    "unsigned long integer constant"  shift, and go to state 436
    "unsigned int8 constant"          shift, and go to state 437
    "floating point constant"         shift, and go to state 438
    "double constant"                 shift, and go to state 439
    "name"                            shift, and go to state 56
    "start of the string"             shift, and go to state 440
    "begin of code block"             shift, and go to state 441
    '-'                               shift, and go to state 442
    '+'                               shift, and go to state 443
    '*'                               shift, and go to state 444
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 445
    '!'                               shift, and go to state 446
    '['                               shift, and go to state 447
    '('                               shift, and go to state 448
    '$'                               shift, and go to state 449
    '@'                               shift, and go to state 450

    string_builder          go to state 451
    expr_reader             go to state 452
    expr_call_pipe          go to state 453
    name_in_namespace       go to state 454
    expr_new                go to state 455
    expr_cast               go to state 456
    expr_type_decl          go to state 457
    expr_type_info          go to state 458
    expr_list               go to state 1131
    block_or_lambda         go to state 459
    expr_full_block         go to state 460
    expr_numeric_const      go to state 461
    expr_named_call         go to state 462
    expr_method_call        go to state 463
    func_addr_expr          go to state 464
    expr_field              go to state 465
    expr_call               go to state 466
    expr                    go to state 628
    expr_mtag               go to state 468
    basic_type_declaration  go to state 469
    make_decl               go to state 470
    make_struct_decl        go to state 471
    make_tuple_call         go to state 472
    make_dim_decl           go to state 473
    make_table_decl         go to state 474
    array_comprehension     go to state 475


State 1005

  339 expr_method_call: expr . "->" "name" '(' ')'
  340                 | expr . "->" "name" '(' expr_list ')'
  350 expr_field: expr . '.' "name"
  351           | expr . '.' '.' "name"
  352           | expr . '.' "name" '(' ')'
  353           | expr . '.' "name" '(' expr_list ')'
  354           | expr . '.' basic_type_declaration '(' ')'
  355           | expr . '.' basic_type_declaration '(' expr_list ')'
  358           | expr . '.' $@17 error $@18
  380 expr: expr . "<<" expr
  381     | expr . ">>" expr
  382     | expr . "<<<" expr
  383     | expr . ">>>" expr
  384     | expr . '+' expr
  385     | expr . '-' expr
  386     | expr . '*' expr
  387     | expr . '/' expr
  388     | expr . '%' expr
  389     | expr . '<' expr
  390     | expr . '>' expr
  391     | expr . "==" expr
  392     | expr . "!=" expr
  393     | expr . "<=" expr
  394     | expr . ">=" expr
  395     | expr . '&' expr
  396     | expr . '|' expr
  397     | expr . '^' expr
  398     | expr . "&&" expr
  399     | expr . "||" expr
  400     | expr . "^^" expr
  401     | expr . ".." expr
  404     | expr . "++"
  405     | expr . "--"
  407     | expr . '[' expr ']'
  408     | expr . '.' '[' expr ']'
  409     | expr . "?[" expr ']'
  410     | expr . '.' "?[" expr ']'
  411     | expr . "?." "name"
  412     | expr . '.' "?." "name"
  421     | expr . "??" expr
  422     | expr . '?' expr ':' expr
  425     | expr . "is" "type" '<' $@19 type_declaration_no_options '>' $@20
  426     | expr . "is" basic_type_declaration
  427     | expr . "is" "name"
  428     | expr . "as" "name"
  431     | expr . "as" "type" '<' $@21 type_declaration '>' $@22
  432     | expr . "as" basic_type_declaration
  433     | expr . '?' "as" "name"
  436     | expr . '?' "as" "type" '<' $@23 type_declaration '>' $@24
  437     | expr . '?' "as" basic_type_declaration
  445     | expr . "<|" expr
  446     | expr . "|>" expr
  447     | expr . "|>" basic_type_declaration
  458 expr_mtag: expr . '.' "$f" '(' expr ')'
  459          | expr . "?." "$f" '(' expr ')'
  460          | expr . '.' '.' "$f" '(' expr ')'
  461          | expr . '.' "?." "$f" '(' expr ')'
  462          | expr . "as" "$f" '(' expr ')'
  463          | expr . '?' "as" "$f" '(' expr ')'
  464          | expr . "is" "$f" '(' expr ')'
  745 make_map_tuple: expr "=>" expr .

    "is"   shift, and go to state 637
    "as"   shift, and go to state 638
    "<<"   shift, and go to state 639
    ">>"   shift, and go to state 640
    "++"   shift, and go to state 641
    "--"   shift, and go to state 642
    "<="   shift, and go to state 643
    ">="   shift, and go to state 644
    "=="   shift, and go to state 645
    "!="   shift, and go to state 646
    "->"   shift, and go to state 647
    "??"   shift, and go to state 648
    "?."   shift, and go to state 649
    "?["   shift, and go to state 650
    "<|"   shift, and go to state 651
    "|>"   shift, and go to state 652
    "<<<"  shift, and go to state 653
    ">>>"  shift, and go to state 654
    "&&"   shift, and go to state 655
    "||"   shift, and go to state 656
    "^^"   shift, and go to state 657
    ".."   shift, and go to state 658
    '?'    shift, and go to state 659
    '|'    shift, and go to state 660
    '^'    shift, and go to state 661
    '&'    shift, and go to state 662
    '<'    shift, and go to state 663
    '>'    shift, and go to state 664
    '-'    shift, and go to state 665
    '+'    shift, and go to state 666
    '*'    shift, and go to state 667
    '/'    shift, and go to state 668
    '%'    shift, and go to state 669
    '.'    shift, and go to state 670
    '['    shift, and go to state 671

    $default  reduce using rule 745 (make_map_tuple)


State 1006

  770 expr_map_tuple_list: expr_map_tuple_list ',' make_map_tuple .

    $default  reduce using rule 770 (expr_map_tuple_list)


State 1007

  771 make_table_decl: "begin of code block" expr_map_tuple_list optional_comma "end of code block" .

    $default  reduce using rule 771 (make_table_decl)


State 1008

  779 array_comprehension: '[' "for" variable_name_with_pos_list "in" . expr_list "end of expression" expr array_comprehension_where ']'

    "struct"                          shift, and go to state 402
    "class"                           shift, and go to state 403
    "true"                            shift, and go to state 404
    "false"                           shift, and go to state 405
    "new"                             shift, and go to state 406
    "typeinfo"                        shift, and go to state 407
    "type"                            shift, and go to state 408
    "array"                           shift, and go to state 409
    "null"                            shift, and go to state 410
    "table"                           shift, and go to state 411
    "deref"                           shift, and go to state 412
    "cast"                            shift, and go to state 413
    "upcast"                          shift, and go to state 414
    "addr"                            shift, and go to state 415
    "reinterpret"                     shift, and go to state 416
    "unsafe"                          shift, and go to state 417
    "fixed_array"                     shift, and go to state 418
    "default"                         shift, and go to state 419
    "bool"                            shift, and go to state 222
    "void"                            shift, and go to state 223
    "string"                          shift, and go to state 224
    "int"                             shift, and go to state 226
    "int2"                            shift, and go to state 227
    "int3"                            shift, and go to state 228
    "int4"                            shift, and go to state 229
    "uint"                            shift, and go to state 230
    "bitfield"                        shift, and go to state 420
    "uint2"                           shift, and go to state 232
    "uint3"                           shift, and go to state 233
    "uint4"                           shift, and go to state 234
    "float"                           shift, and go to state 235
    "float2"                          shift, and go to state 236
    "float3"                          shift, and go to state 237
    "float4"                          shift, and go to state 238
    "range"                           shift, and go to state 239
    "urange"                          shift, and go to state 240
    "range64"                         shift, and go to state 241
    "urange64"                        shift, and go to state 242
    "int64"                           shift, and go to state 244
    "uint64"                          shift, and go to state 245
    "double"                          shift, and go to state 246
    "int8"                            shift, and go to state 249
    "uint8"                           shift, and go to state 250
    "int16"                           shift, and go to state 251
    "uint16"                          shift, and go to state 252
    "tuple"                           shift, and go to state 421
    "variant"                         shift, and go to state 422
    "generator"                       shift, and go to state 423
    "++"                              shift, and go to state 424
    "--"                              shift, and go to state 425
    "::"                              shift, and go to state 55
    "$$"                              shift, and go to state 426
    "$i"                              shift, and go to state 427
    "$v"                              shift, and go to state 428
    "$b"                              shift, and go to state 429
    "$a"                              shift, and go to state 430
    "$c"                              shift, and go to state 431
    "..."                             shift, and go to state 432
    "integer constant"                shift, and go to state 433
    "long integer constant"           shift, and go to state 434
    "unsigned integer constant"       shift, and go to state 435
    "unsigned long integer constant"  shift, and go to state 436
    "unsigned int8 constant"          shift, and go to state 437
    "floating point constant"         shift, and go to state 438
    "double constant"                 shift, and go to state 439
    "name"                            shift, and go to state 56
    "start of the string"             shift, and go to state 440
    "begin of code block"             shift, and go to state 441
    '-'                               shift, and go to state 442
    '+'                               shift, and go to state 443
    '*'                               shift, and go to state 444
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 445
    '!'                               shift, and go to state 446
    '['                               shift, and go to state 447
    '('                               shift, and go to state 448
    '$'                               shift, and go to state 449
    '@'                               shift, and go to state 450

    string_builder          go to state 451
    expr_reader             go to state 452
    expr_call_pipe          go to state 453
    name_in_namespace       go to state 454
    expr_new                go to state 455
    expr_cast               go to state 456
    expr_type_decl          go to state 457
    expr_type_info          go to state 458
    expr_list               go to state 1132
    block_or_lambda         go to state 459
    expr_full_block         go to state 460
    expr_numeric_const      go to state 461
    expr_named_call         go to state 462
    expr_method_call        go to state 463
    func_addr_expr          go to state 464
    expr_field              go to state 465
    expr_call               go to state 466
    expr                    go to state 628
    expr_mtag               go to state 468
    basic_type_declaration  go to state 469
    make_decl               go to state 470
    make_struct_decl        go to state 471
    make_tuple_call         go to state 472
    make_dim_decl           go to state 473
    make_table_decl         go to state 474
    array_comprehension     go to state 475


State 1009

  573 variable_name_with_pos_list: variable_name_with_pos_list . ',' "name"
  574                            | variable_name_with_pos_list . ',' "name" "aka" "name"
  780 array_comprehension: '[' "iterator" "for" variable_name_with_pos_list . "in" expr_list "end of expression" expr array_comprehension_where ']'

    "in"  shift, and go to state 1133
    ','   shift, and go to state 913


State 1010

  292 expr_list: expr_list ',' expr .
  339 expr_method_call: expr . "->" "name" '(' ')'
  340                 | expr . "->" "name" '(' expr_list ')'
  350 expr_field: expr . '.' "name"
  351           | expr . '.' '.' "name"
  352           | expr . '.' "name" '(' ')'
  353           | expr . '.' "name" '(' expr_list ')'
  354           | expr . '.' basic_type_declaration '(' ')'
  355           | expr . '.' basic_type_declaration '(' expr_list ')'
  358           | expr . '.' $@17 error $@18
  380 expr: expr . "<<" expr
  381     | expr . ">>" expr
  382     | expr . "<<<" expr
  383     | expr . ">>>" expr
  384     | expr . '+' expr
  385     | expr . '-' expr
  386     | expr . '*' expr
  387     | expr . '/' expr
  388     | expr . '%' expr
  389     | expr . '<' expr
  390     | expr . '>' expr
  391     | expr . "==" expr
  392     | expr . "!=" expr
  393     | expr . "<=" expr
  394     | expr . ">=" expr
  395     | expr . '&' expr
  396     | expr . '|' expr
  397     | expr . '^' expr
  398     | expr . "&&" expr
  399     | expr . "||" expr
  400     | expr . "^^" expr
  401     | expr . ".." expr
  404     | expr . "++"
  405     | expr . "--"
  407     | expr . '[' expr ']'
  408     | expr . '.' '[' expr ']'
  409     | expr . "?[" expr ']'
  410     | expr . '.' "?[" expr ']'
  411     | expr . "?." "name"
  412     | expr . '.' "?." "name"
  421     | expr . "??" expr
  422     | expr . '?' expr ':' expr
  425     | expr . "is" "type" '<' $@19 type_declaration_no_options '>' $@20
  426     | expr . "is" basic_type_declaration
  427     | expr . "is" "name"
  428     | expr . "as" "name"
  431     | expr . "as" "type" '<' $@21 type_declaration '>' $@22
  432     | expr . "as" basic_type_declaration
  433     | expr . '?' "as" "name"
  436     | expr . '?' "as" "type" '<' $@23 type_declaration '>' $@24
  437     | expr . '?' "as" basic_type_declaration
  445     | expr . "<|" expr
  446     | expr . "|>" expr
  447     | expr . "|>" basic_type_declaration
  458 expr_mtag: expr . '.' "$f" '(' expr ')'
  459          | expr . "?." "$f" '(' expr ')'
  460          | expr . '.' '.' "$f" '(' expr ')'
  461          | expr . '.' "?." "$f" '(' expr ')'
  462          | expr . "as" "$f" '(' expr ')'
  463          | expr . '?' "as" "$f" '(' expr ')'
  464          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 637
    "as"   shift, and go to state 638
    "<<"   shift, and go to state 639
    ">>"   shift, and go to state 640
    "++"   shift, and go to state 641
    "--"   shift, and go to state 642
    "<="   shift, and go to state 643
    ">="   shift, and go to state 644
    "=="   shift, and go to state 645
    "!="   shift, and go to state 646
    "->"   shift, and go to state 647
    "??"   shift, and go to state 648
    "?."   shift, and go to state 649
    "?["   shift, and go to state 650
    "<|"   shift, and go to state 651
    "|>"   shift, and go to state 652
    "<<<"  shift, and go to state 653
    ">>>"  shift, and go to state 654
    "&&"   shift, and go to state 655
    "||"   shift, and go to state 656
    "^^"   shift, and go to state 657
    ".."   shift, and go to state 658
    '?'    shift, and go to state 659
    '|'    shift, and go to state 660
    '^'    shift, and go to state 661
    '&'    shift, and go to state 662
    '<'    shift, and go to state 663
    '>'    shift, and go to state 664
    '-'    shift, and go to state 665
    '+'    shift, and go to state 666
    '*'    shift, and go to state 667
    '/'    shift, and go to state 668
    '%'    shift, and go to state 669
    '.'    shift, and go to state 670
    '['    shift, and go to state 671

    $default  reduce using rule 292 (expr_list)


State 1011

  751 make_dim_decl: '[' expr_list optional_comma ']' .

    $default  reduce using rule 751 (make_dim_decl)


State 1012

  406 expr: '(' expr_list optional_comma ')' .

    $default  reduce using rule 406 (expr)


State 1013

  342 func_addr_name: "$i" '(' . expr ')'

    "struct"                          shift, and go to state 402
    "class"                           shift, and go to state 403
    "true"                            shift, and go to state 404
    "false"                           shift, and go to state 405
    "new"                             shift, and go to state 406
    "typeinfo"                        shift, and go to state 407
    "type"                            shift, and go to state 408
    "array"                           shift, and go to state 409
    "null"                            shift, and go to state 410
    "table"                           shift, and go to state 411
    "deref"                           shift, and go to state 412
    "cast"                            shift, and go to state 413
    "upcast"                          shift, and go to state 414
    "addr"                            shift, and go to state 415
    "reinterpret"                     shift, and go to state 416
    "unsafe"                          shift, and go to state 417
    "fixed_array"                     shift, and go to state 418
    "default"                         shift, and go to state 419
    "bool"                            shift, and go to state 222
    "void"                            shift, and go to state 223
    "string"                          shift, and go to state 224
    "int"                             shift, and go to state 226
    "int2"                            shift, and go to state 227
    "int3"                            shift, and go to state 228
    "int4"                            shift, and go to state 229
    "uint"                            shift, and go to state 230
    "bitfield"                        shift, and go to state 420
    "uint2"                           shift, and go to state 232
    "uint3"                           shift, and go to state 233
    "uint4"                           shift, and go to state 234
    "float"                           shift, and go to state 235
    "float2"                          shift, and go to state 236
    "float3"                          shift, and go to state 237
    "float4"                          shift, and go to state 238
    "range"                           shift, and go to state 239
    "urange"                          shift, and go to state 240
    "range64"                         shift, and go to state 241
    "urange64"                        shift, and go to state 242
    "int64"                           shift, and go to state 244
    "uint64"                          shift, and go to state 245
    "double"                          shift, and go to state 246
    "int8"                            shift, and go to state 249
    "uint8"                           shift, and go to state 250
    "int16"                           shift, and go to state 251
    "uint16"                          shift, and go to state 252
    "tuple"                           shift, and go to state 421
    "variant"                         shift, and go to state 422
    "generator"                       shift, and go to state 423
    "++"                              shift, and go to state 424
    "--"                              shift, and go to state 425
    "::"                              shift, and go to state 55
    "$$"                              shift, and go to state 426
    "$i"                              shift, and go to state 427
    "$v"                              shift, and go to state 428
    "$b"                              shift, and go to state 429
    "$a"                              shift, and go to state 430
    "$c"                              shift, and go to state 431
    "..."                             shift, and go to state 432
    "integer constant"                shift, and go to state 433
    "long integer constant"           shift, and go to state 434
    "unsigned integer constant"       shift, and go to state 435
    "unsigned long integer constant"  shift, and go to state 436
    "unsigned int8 constant"          shift, and go to state 437
    "floating point constant"         shift, and go to state 438
    "double constant"                 shift, and go to state 439
    "name"                            shift, and go to state 56
    "start of the string"             shift, and go to state 440
    "begin of code block"             shift, and go to state 441
    '-'                               shift, and go to state 442
    '+'                               shift, and go to state 443
    '*'                               shift, and go to state 444
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 445
    '!'                               shift, and go to state 446
    '['                               shift, and go to state 447
    '('                               shift, and go to state 448
    '$'                               shift, and go to state 449
    '@'                               shift, and go to state 450

    string_builder          go to state 451
    expr_reader             go to state 452
    expr_call_pipe          go to state 453
    name_in_namespace       go to state 454
    expr_new                go to state 455
    expr_cast               go to state 456
    expr_type_decl          go to state 457
    expr_type_info          go to state 458
    block_or_lambda         go to state 459
    expr_full_block         go to state 460
    expr_numeric_const      go to state 461
    expr_named_call         go to state 462
    expr_method_call        go to state 463
    func_addr_expr          go to state 464
    expr_field              go to state 465
    expr_call               go to state 466
    expr                    go to state 1134
    expr_mtag               go to state 468
    basic_type_declaration  go to state 469
    make_decl               go to state 470
    make_struct_decl        go to state 471
    make_tuple_call         go to state 472
    make_dim_decl           go to state 473
    make_table_decl         go to state 474
    array_comprehension     go to state 475


State 1014

  465 expr_mtag: '@' '@' "$c" '(' . expr ')'

    "struct"                          shift, and go to state 402
    "class"                           shift, and go to state 403
    "true"                            shift, and go to state 404
    "false"                           shift, and go to state 405
    "new"                             shift, and go to state 406
    "typeinfo"                        shift, and go to state 407
    "type"                            shift, and go to state 408
    "array"                           shift, and go to state 409
    "null"                            shift, and go to state 410
    "table"                           shift, and go to state 411
    "deref"                           shift, and go to state 412
    "cast"                            shift, and go to state 413
    "upcast"                          shift, and go to state 414
    "addr"                            shift, and go to state 415
    "reinterpret"                     shift, and go to state 416
    "unsafe"                          shift, and go to state 417
    "fixed_array"                     shift, and go to state 418
    "default"                         shift, and go to state 419
    "bool"                            shift, and go to state 222
    "void"                            shift, and go to state 223
    "string"                          shift, and go to state 224
    "int"                             shift, and go to state 226
    "int2"                            shift, and go to state 227
    "int3"                            shift, and go to state 228
    "int4"                            shift, and go to state 229
    "uint"                            shift, and go to state 230
    "bitfield"                        shift, and go to state 420
    "uint2"                           shift, and go to state 232
    "uint3"                           shift, and go to state 233
    "uint4"                           shift, and go to state 234
    "float"                           shift, and go to state 235
    "float2"                          shift, and go to state 236
    "float3"                          shift, and go to state 237
    "float4"                          shift, and go to state 238
    "range"                           shift, and go to state 239
    "urange"                          shift, and go to state 240
    "range64"                         shift, and go to state 241
    "urange64"                        shift, and go to state 242
    "int64"                           shift, and go to state 244
    "uint64"                          shift, and go to state 245
    "double"                          shift, and go to state 246
    "int8"                            shift, and go to state 249
    "uint8"                           shift, and go to state 250
    "int16"                           shift, and go to state 251
    "uint16"                          shift, and go to state 252
    "tuple"                           shift, and go to state 421
    "variant"                         shift, and go to state 422
    "generator"                       shift, and go to state 423
    "++"                              shift, and go to state 424
    "--"                              shift, and go to state 425
    "::"                              shift, and go to state 55
    "$$"                              shift, and go to state 426
    "$i"                              shift, and go to state 427
    "$v"                              shift, and go to state 428
    "$b"                              shift, and go to state 429
    "$a"                              shift, and go to state 430
    "$c"                              shift, and go to state 431
    "..."                             shift, and go to state 432
    "integer constant"                shift, and go to state 433
    "long integer constant"           shift, and go to state 434
    "unsigned integer constant"       shift, and go to state 435
    "unsigned long integer constant"  shift, and go to state 436
    "unsigned int8 constant"          shift, and go to state 437
    "floating point constant"         shift, and go to state 438
    "double constant"                 shift, and go to state 439
    "name"                            shift, and go to state 56
    "start of the string"             shift, and go to state 440
    "begin of code block"             shift, and go to state 441
    '-'                               shift, and go to state 442
    '+'                               shift, and go to state 443
    '*'                               shift, and go to state 444
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 445
    '!'                               shift, and go to state 446
    '['                               shift, and go to state 447
    '('                               shift, and go to state 448
    '$'                               shift, and go to state 449
    '@'                               shift, and go to state 450

    string_builder          go to state 451
    expr_reader             go to state 452
    expr_call_pipe          go to state 453
    name_in_namespace       go to state 454
    expr_new                go to state 455
    expr_cast               go to state 456
    expr_type_decl          go to state 457
    expr_type_info          go to state 458
    block_or_lambda         go to state 459
    expr_full_block         go to state 460
    expr_numeric_const      go to state 461
    expr_named_call         go to state 462
    expr_method_call        go to state 463
    func_addr_expr          go to state 464
    expr_field              go to state 465
    expr_call               go to state 466
    expr                    go to state 1135
    expr_mtag               go to state 468
    basic_type_declaration  go to state 469
    make_decl               go to state 470
    make_struct_decl        go to state 471
    make_tuple_call         go to state 472
    make_dim_decl           go to state 473
    make_table_decl         go to state 474
    array_comprehension     go to state 475


State 1015

  346 func_addr_expr: '@' '@' '<' $@13 . type_declaration_no_options '>' $@14 func_addr_name

    "type"       shift, and go to state 216
    "array"      shift, and go to state 217
    "table"      shift, and go to state 218
    "typedecl"   shift, and go to state 219
    "iterator"   shift, and go to state 220
    "smart_ptr"  shift, and go to state 221
    "bool"       shift, and go to state 222
    "void"       shift, and go to state 223
    "string"     shift, and go to state 224
    "auto"       shift, and go to state 225
    "int"        shift, and go to state 226
    "int2"       shift, and go to state 227
    "int3"       shift, and go to state 228
    "int4"       shift, and go to state 229
    "uint"       shift, and go to state 230
    "bitfield"   shift, and go to state 231
    "uint2"      shift, and go to state 232
    "uint3"      shift, and go to state 233
    "uint4"      shift, and go to state 234
    "float"      shift, and go to state 235
    "float2"     shift, and go to state 236
    "float3"     shift, and go to state 237
    "float4"     shift, and go to state 238
    "range"      shift, and go to state 239
    "urange"     shift, and go to state 240
    "range64"    shift, and go to state 241
    "urange64"   shift, and go to state 242
    "block"      shift, and go to state 243
    "int64"      shift, and go to state 244
    "uint64"     shift, and go to state 245
    "double"     shift, and go to state 246
    "function"   shift, and go to state 247
    "lambda"     shift, and go to state 248
    "int8"       shift, and go to state 249
    "uint8"      shift, and go to state 250
    "int16"      shift, and go to state 251
    "uint16"     shift, and go to state 252
    "tuple"      shift, and go to state 253
    "variant"    shift, and go to state 254
    "::"         shift, and go to state 55
    "$t"         shift, and go to state 255
    "name"       shift, and go to state 56
    '$'          shift, and go to state 256

    name_in_namespace                   go to state 257
    basic_type_declaration              go to state 258
    structure_type_declaration          go to state 259
    auto_type_declaration               go to state 260
    bitfield_type_declaration           go to state 261
    type_declaration_no_options         go to state 1136
    type_declaration_no_options_no_dim  go to state 263


State 1016

  349 func_addr_expr: '@' '@' '<' $@15 . optional_function_argument_list optional_function_type '>' $@16 func_addr_name

    '('  shift, and go to state 321

    $default  reduce using rule 115 (optional_function_argument_list)

    optional_function_argument_list  go to state 1137


State 1017

  715 make_struct_fields: "name" . copy_or_move expr
  716                   | "name" . ":=" expr

    "<-"  shift, and go to state 912
    ":="  shift, and go to state 1021
    '='   shift, and go to state 914

    copy_or_move  go to state 1022


State 1018

  360 expr_call: name_in_namespace '(' "uninitialized" ')' .

    $default  reduce using rule 360 (expr_call)


State 1019

  362 expr_call: name_in_namespace '(' "uninitialized" make_struct_single . ')'

    ')'  shift, and go to state 1138


State 1020

  719 make_struct_fields: "$f" '(' . expr ')' copy_or_move expr
  720                   | "$f" '(' . expr ')' ":=" expr

    "struct"                          shift, and go to state 402
    "class"                           shift, and go to state 403
    "true"                            shift, and go to state 404
    "false"                           shift, and go to state 405
    "new"                             shift, and go to state 406
    "typeinfo"                        shift, and go to state 407
    "type"                            shift, and go to state 408
    "array"                           shift, and go to state 409
    "null"                            shift, and go to state 410
    "table"                           shift, and go to state 411
    "deref"                           shift, and go to state 412
    "cast"                            shift, and go to state 413
    "upcast"                          shift, and go to state 414
    "addr"                            shift, and go to state 415
    "reinterpret"                     shift, and go to state 416
    "unsafe"                          shift, and go to state 417
    "fixed_array"                     shift, and go to state 418
    "default"                         shift, and go to state 419
    "bool"                            shift, and go to state 222
    "void"                            shift, and go to state 223
    "string"                          shift, and go to state 224
    "int"                             shift, and go to state 226
    "int2"                            shift, and go to state 227
    "int3"                            shift, and go to state 228
    "int4"                            shift, and go to state 229
    "uint"                            shift, and go to state 230
    "bitfield"                        shift, and go to state 420
    "uint2"                           shift, and go to state 232
    "uint3"                           shift, and go to state 233
    "uint4"                           shift, and go to state 234
    "float"                           shift, and go to state 235
    "float2"                          shift, and go to state 236
    "float3"                          shift, and go to state 237
    "float4"                          shift, and go to state 238
    "range"                           shift, and go to state 239
    "urange"                          shift, and go to state 240
    "range64"                         shift, and go to state 241
    "urange64"                        shift, and go to state 242
    "int64"                           shift, and go to state 244
    "uint64"                          shift, and go to state 245
    "double"                          shift, and go to state 246
    "int8"                            shift, and go to state 249
    "uint8"                           shift, and go to state 250
    "int16"                           shift, and go to state 251
    "uint16"                          shift, and go to state 252
    "tuple"                           shift, and go to state 421
    "variant"                         shift, and go to state 422
    "generator"                       shift, and go to state 423
    "++"                              shift, and go to state 424
    "--"                              shift, and go to state 425
    "::"                              shift, and go to state 55
    "$$"                              shift, and go to state 426
    "$i"                              shift, and go to state 427
    "$v"                              shift, and go to state 428
    "$b"                              shift, and go to state 429
    "$a"                              shift, and go to state 430
    "$c"                              shift, and go to state 431
    "..."                             shift, and go to state 432
    "integer constant"                shift, and go to state 433
    "long integer constant"           shift, and go to state 434
    "unsigned integer constant"       shift, and go to state 435
    "unsigned long integer constant"  shift, and go to state 436
    "unsigned int8 constant"          shift, and go to state 437
    "floating point constant"         shift, and go to state 438
    "double constant"                 shift, and go to state 439
    "name"                            shift, and go to state 56
    "start of the string"             shift, and go to state 440
    "begin of code block"             shift, and go to state 441
    '-'                               shift, and go to state 442
    '+'                               shift, and go to state 443
    '*'                               shift, and go to state 444
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 445
    '!'                               shift, and go to state 446
    '['                               shift, and go to state 447
    '('                               shift, and go to state 448
    '$'                               shift, and go to state 449
    '@'                               shift, and go to state 450

    string_builder          go to state 451
    expr_reader             go to state 452
    expr_call_pipe          go to state 453
    name_in_namespace       go to state 454
    expr_new                go to state 455
    expr_cast               go to state 456
    expr_type_decl          go to state 457
    expr_type_info          go to state 458
    block_or_lambda         go to state 459
    expr_full_block         go to state 460
    expr_numeric_const      go to state 461
    expr_named_call         go to state 462
    expr_method_call        go to state 463
    func_addr_expr          go to state 464
    expr_field              go to state 465
    expr_call               go to state 466
    expr                    go to state 1139
    expr_mtag               go to state 468
    basic_type_declaration  go to state 469
    make_decl               go to state 470
    make_struct_decl        go to state 471
    make_tuple_call         go to state 472
    make_dim_decl           go to state 473
    make_table_decl         go to state 474
    array_comprehension     go to state 475


State 1021

  716 make_struct_fields: "name" ":=" . expr

    "struct"                          shift, and go to state 402
    "class"                           shift, and go to state 403
    "true"                            shift, and go to state 404
    "false"                           shift, and go to state 405
    "new"                             shift, and go to state 406
    "typeinfo"                        shift, and go to state 407
    "type"                            shift, and go to state 408
    "array"                           shift, and go to state 409
    "null"                            shift, and go to state 410
    "table"                           shift, and go to state 411
    "deref"                           shift, and go to state 412
    "cast"                            shift, and go to state 413
    "upcast"                          shift, and go to state 414
    "addr"                            shift, and go to state 415
    "reinterpret"                     shift, and go to state 416
    "unsafe"                          shift, and go to state 417
    "fixed_array"                     shift, and go to state 418
    "default"                         shift, and go to state 419
    "bool"                            shift, and go to state 222
    "void"                            shift, and go to state 223
    "string"                          shift, and go to state 224
    "int"                             shift, and go to state 226
    "int2"                            shift, and go to state 227
    "int3"                            shift, and go to state 228
    "int4"                            shift, and go to state 229
    "uint"                            shift, and go to state 230
    "bitfield"                        shift, and go to state 420
    "uint2"                           shift, and go to state 232
    "uint3"                           shift, and go to state 233
    "uint4"                           shift, and go to state 234
    "float"                           shift, and go to state 235
    "float2"                          shift, and go to state 236
    "float3"                          shift, and go to state 237
    "float4"                          shift, and go to state 238
    "range"                           shift, and go to state 239
    "urange"                          shift, and go to state 240
    "range64"                         shift, and go to state 241
    "urange64"                        shift, and go to state 242
    "int64"                           shift, and go to state 244
    "uint64"                          shift, and go to state 245
    "double"                          shift, and go to state 246
    "int8"                            shift, and go to state 249
    "uint8"                           shift, and go to state 250
    "int16"                           shift, and go to state 251
    "uint16"                          shift, and go to state 252
    "tuple"                           shift, and go to state 421
    "variant"                         shift, and go to state 422
    "generator"                       shift, and go to state 423
    "++"                              shift, and go to state 424
    "--"                              shift, and go to state 425
    "::"                              shift, and go to state 55
    "$$"                              shift, and go to state 426
    "$i"                              shift, and go to state 427
    "$v"                              shift, and go to state 428
    "$b"                              shift, and go to state 429
    "$a"                              shift, and go to state 430
    "$c"                              shift, and go to state 431
    "..."                             shift, and go to state 432
    "integer constant"                shift, and go to state 433
    "long integer constant"           shift, and go to state 434
    "unsigned integer constant"       shift, and go to state 435
    "unsigned long integer constant"  shift, and go to state 436
    "unsigned int8 constant"          shift, and go to state 437
    "floating point constant"         shift, and go to state 438
    "double constant"                 shift, and go to state 439
    "name"                            shift, and go to state 56
    "start of the string"             shift, and go to state 440
    "begin of code block"             shift, and go to state 441
    '-'                               shift, and go to state 442
    '+'                               shift, and go to state 443
    '*'                               shift, and go to state 444
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 445
    '!'                               shift, and go to state 446
    '['                               shift, and go to state 447
    '('                               shift, and go to state 448
    '$'                               shift, and go to state 449
    '@'                               shift, and go to state 450

    string_builder          go to state 451
    expr_reader             go to state 452
    expr_call_pipe          go to state 453
    name_in_namespace       go to state 454
    expr_new                go to state 455
    expr_cast               go to state 456
    expr_type_decl          go to state 457
    expr_type_info          go to state 458
    block_or_lambda         go to state 459
    expr_full_block         go to state 460
    expr_numeric_const      go to state 461
    expr_named_call         go to state 462
    expr_method_call        go to state 463
    func_addr_expr          go to state 464
    expr_field              go to state 465
    expr_call               go to state 466
    expr                    go to state 1140
    expr_mtag               go to state 468
    basic_type_declaration  go to state 469
    make_decl               go to state 470
    make_struct_decl        go to state 471
    make_tuple_call         go to state 472
    make_dim_decl           go to state 473
    make_table_decl         go to state 474
    array_comprehension     go to state 475


State 1022

  715 make_struct_fields: "name" copy_or_move . expr

    "struct"                          shift, and go to state 402
    "class"                           shift, and go to state 403
    "true"                            shift, and go to state 404
    "false"                           shift, and go to state 405
    "new"                             shift, and go to state 406
    "typeinfo"                        shift, and go to state 407
    "type"                            shift, and go to state 408
    "array"                           shift, and go to state 409
    "null"                            shift, and go to state 410
    "table"                           shift, and go to state 411
    "deref"                           shift, and go to state 412
    "cast"                            shift, and go to state 413
    "upcast"                          shift, and go to state 414
    "addr"                            shift, and go to state 415
    "reinterpret"                     shift, and go to state 416
    "unsafe"                          shift, and go to state 417
    "fixed_array"                     shift, and go to state 418
    "default"                         shift, and go to state 419
    "bool"                            shift, and go to state 222
    "void"                            shift, and go to state 223
    "string"                          shift, and go to state 224
    "int"                             shift, and go to state 226
    "int2"                            shift, and go to state 227
    "int3"                            shift, and go to state 228
    "int4"                            shift, and go to state 229
    "uint"                            shift, and go to state 230
    "bitfield"                        shift, and go to state 420
    "uint2"                           shift, and go to state 232
    "uint3"                           shift, and go to state 233
    "uint4"                           shift, and go to state 234
    "float"                           shift, and go to state 235
    "float2"                          shift, and go to state 236
    "float3"                          shift, and go to state 237
    "float4"                          shift, and go to state 238
    "range"                           shift, and go to state 239
    "urange"                          shift, and go to state 240
    "range64"                         shift, and go to state 241
    "urange64"                        shift, and go to state 242
    "int64"                           shift, and go to state 244
    "uint64"                          shift, and go to state 245
    "double"                          shift, and go to state 246
    "int8"                            shift, and go to state 249
    "uint8"                           shift, and go to state 250
    "int16"                           shift, and go to state 251
    "uint16"                          shift, and go to state 252
    "tuple"                           shift, and go to state 421
    "variant"                         shift, and go to state 422
    "generator"                       shift, and go to state 423
    "++"                              shift, and go to state 424
    "--"                              shift, and go to state 425
    "::"                              shift, and go to state 55
    "$$"                              shift, and go to state 426
    "$i"                              shift, and go to state 427
    "$v"                              shift, and go to state 428
    "$b"                              shift, and go to state 429
    "$a"                              shift, and go to state 430
    "$c"                              shift, and go to state 431
    "..."                             shift, and go to state 432
    "integer constant"                shift, and go to state 433
    "long integer constant"           shift, and go to state 434
    "unsigned integer constant"       shift, and go to state 435
    "unsigned long integer constant"  shift, and go to state 436
    "unsigned int8 constant"          shift, and go to state 437
    "floating point constant"         shift, and go to state 438
    "double constant"                 shift, and go to state 439
    "name"                            shift, and go to state 56
    "start of the string"             shift, and go to state 440
    "begin of code block"             shift, and go to state 441
    '-'                               shift, and go to state 442
    '+'                               shift, and go to state 443
    '*'                               shift, and go to state 444
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 445
    '!'                               shift, and go to state 446
    '['                               shift, and go to state 447
    '('                               shift, and go to state 448
    '$'                               shift, and go to state 449
    '@'                               shift, and go to state 450

    string_builder          go to state 451
    expr_reader             go to state 452
    expr_call_pipe          go to state 453
    name_in_namespace       go to state 454
    expr_new                go to state 455
    expr_cast               go to state 456
    expr_type_decl          go to state 457
    expr_type_info          go to state 458
    block_or_lambda         go to state 459
    expr_full_block         go to state 460
    expr_numeric_const      go to state 461
    expr_named_call         go to state 462
    expr_method_call        go to state 463
    func_addr_expr          go to state 464
    expr_field              go to state 465
    expr_call               go to state 466
    expr                    go to state 1141
    expr_mtag               go to state 468
    basic_type_declaration  go to state 469
    make_decl               go to state 470
    make_struct_decl        go to state 471
    make_tuple_call         go to state 472
    make_dim_decl           go to state 473
    make_table_decl         go to state 474
    array_comprehension     go to state 475


State 1023

  337 expr_named_call: name_in_namespace '(' '[' make_struct_fields . ']' ')'
  717 make_struct_fields: make_struct_fields . ',' "name" copy_or_move expr
  718                   | make_struct_fields . ',' "name" ":=" expr
  721                   | make_struct_fields . ',' "$f" '(' expr ')' copy_or_move expr
  722                   | make_struct_fields . ',' "$f" '(' expr ')' ":=" expr

    ','  shift, and go to state 1026
    ']'  shift, and go to state 1142


State 1024

  292 expr_list: expr_list ',' . expr
  338 expr_named_call: name_in_namespace '(' expr_list ',' . '[' make_struct_fields ']' ')'

    "struct"                          shift, and go to state 402
    "class"                           shift, and go to state 403
    "true"                            shift, and go to state 404
    "false"                           shift, and go to state 405
    "new"                             shift, and go to state 406
    "typeinfo"                        shift, and go to state 407
    "type"                            shift, and go to state 408
    "array"                           shift, and go to state 409
    "null"                            shift, and go to state 410
    "table"                           shift, and go to state 411
    "deref"                           shift, and go to state 412
    "cast"                            shift, and go to state 413
    "upcast"                          shift, and go to state 414
    "addr"                            shift, and go to state 415
    "reinterpret"                     shift, and go to state 416
    "unsafe"                          shift, and go to state 417
    "fixed_array"                     shift, and go to state 418
    "default"                         shift, and go to state 419
    "bool"                            shift, and go to state 222
    "void"                            shift, and go to state 223
    "string"                          shift, and go to state 224
    "int"                             shift, and go to state 226
    "int2"                            shift, and go to state 227
    "int3"                            shift, and go to state 228
    "int4"                            shift, and go to state 229
    "uint"                            shift, and go to state 230
    "bitfield"                        shift, and go to state 420
    "uint2"                           shift, and go to state 232
    "uint3"                           shift, and go to state 233
    "uint4"                           shift, and go to state 234
    "float"                           shift, and go to state 235
    "float2"                          shift, and go to state 236
    "float3"                          shift, and go to state 237
    "float4"                          shift, and go to state 238
    "range"                           shift, and go to state 239
    "urange"                          shift, and go to state 240
    "range64"                         shift, and go to state 241
    "urange64"                        shift, and go to state 242
    "int64"                           shift, and go to state 244
    "uint64"                          shift, and go to state 245
    "double"                          shift, and go to state 246
    "int8"                            shift, and go to state 249
    "uint8"                           shift, and go to state 250
    "int16"                           shift, and go to state 251
    "uint16"                          shift, and go to state 252
    "tuple"                           shift, and go to state 421
    "variant"                         shift, and go to state 422
    "generator"                       shift, and go to state 423
    "++"                              shift, and go to state 424
    "--"                              shift, and go to state 425
    "::"                              shift, and go to state 55
    "$$"                              shift, and go to state 426
    "$i"                              shift, and go to state 427
    "$v"                              shift, and go to state 428
    "$b"                              shift, and go to state 429
    "$a"                              shift, and go to state 430
    "$c"                              shift, and go to state 431
    "..."                             shift, and go to state 432
    "integer constant"                shift, and go to state 433
    "long integer constant"           shift, and go to state 434
    "unsigned integer constant"       shift, and go to state 435
    "unsigned long integer constant"  shift, and go to state 436
    "unsigned int8 constant"          shift, and go to state 437
    "floating point constant"         shift, and go to state 438
    "double constant"                 shift, and go to state 439
    "name"                            shift, and go to state 56
    "start of the string"             shift, and go to state 440
    "begin of code block"             shift, and go to state 441
    '-'                               shift, and go to state 442
    '+'                               shift, and go to state 443
    '*'                               shift, and go to state 444
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 445
    '!'                               shift, and go to state 446
    '['                               shift, and go to state 1143
    '('                               shift, and go to state 448
    '$'                               shift, and go to state 449
    '@'                               shift, and go to state 450

    string_builder          go to state 451
    expr_reader             go to state 452
    expr_call_pipe          go to state 453
    name_in_namespace       go to state 454
    expr_new                go to state 455
    expr_cast               go to state 456
    expr_type_decl          go to state 457
    expr_type_info          go to state 458
    block_or_lambda         go to state 459
    expr_full_block         go to state 460
    expr_numeric_const      go to state 461
    expr_named_call         go to state 462
    expr_method_call        go to state 463
    func_addr_expr          go to state 464
    expr_field              go to state 465
    expr_call               go to state 466
    expr                    go to state 1010
    expr_mtag               go to state 468
    basic_type_declaration  go to state 469
    make_decl               go to state 470
    make_struct_decl        go to state 471
    make_tuple_call         go to state 472
    make_dim_decl           go to state 473
    make_table_decl         go to state 474
    array_comprehension     go to state 475


State 1025

  363 expr_call: name_in_namespace '(' expr_list ')' .

    $default  reduce using rule 363 (expr_call)


State 1026

  717 make_struct_fields: make_struct_fields ',' . "name" copy_or_move expr
  718                   | make_struct_fields ',' . "name" ":=" expr
  721                   | make_struct_fields ',' . "$f" '(' expr ')' copy_or_move expr
  722                   | make_struct_fields ',' . "$f" '(' expr ')' ":=" expr

    "$f"    shift, and go to state 1144
    "name"  shift, and go to state 1145


State 1027

  361 expr_call: name_in_namespace '(' make_struct_single ')' .

    $default  reduce using rule 361 (expr_call)


State 1028

  307 optional_capture_list: "capture" '(' . capture_list ')'

    "<-"    shift, and go to state 1146
    ":="    shift, and go to state 1147
    "name"  shift, and go to state 1148
    '='     shift, and go to state 1149
    '&'     shift, and go to state 1150

    capture_entry  go to state 1151
    capture_list   go to state 1152


State 1029

  308 expr_full_block: block_or_lambda optional_annotation_list optional_capture_list optional_function_argument_list . optional_function_type block_or_simple_block

    ':'  shift, and go to state 386

    $default  reduce using rule 118 (optional_function_type)

    optional_function_type  go to state 1153


State 1030

  310 expr_full_block_assumed_piped: "begin of code block" expressions "end of code block" .

    $default  reduce using rule 310 (expr_full_block_assumed_piped)


State 1031

  309 expr_full_block_assumed_piped: block_or_lambda optional_annotation_list optional_capture_list . optional_function_argument_list optional_function_type expression_block

    '('  shift, and go to state 321

    $default  reduce using rule 115 (optional_function_argument_list)

    optional_function_argument_list  go to state 1154


State 1032

  425 expr: expr "is" "type" '<' . $@19 type_declaration_no_options '>' $@20

    $default  reduce using rule 423 ($@19)

    $@19  go to state 1155


State 1033

  464 expr_mtag: expr "is" "$f" '(' . expr ')'

    "struct"                          shift, and go to state 402
    "class"                           shift, and go to state 403
    "true"                            shift, and go to state 404
    "false"                           shift, and go to state 405
    "new"                             shift, and go to state 406
    "typeinfo"                        shift, and go to state 407
    "type"                            shift, and go to state 408
    "array"                           shift, and go to state 409
    "null"                            shift, and go to state 410
    "table"                           shift, and go to state 411
    "deref"                           shift, and go to state 412
    "cast"                            shift, and go to state 413
    "upcast"                          shift, and go to state 414
    "addr"                            shift, and go to state 415
    "reinterpret"                     shift, and go to state 416
    "unsafe"                          shift, and go to state 417
    "fixed_array"                     shift, and go to state 418
    "default"                         shift, and go to state 419
    "bool"                            shift, and go to state 222
    "void"                            shift, and go to state 223
    "string"                          shift, and go to state 224
    "int"                             shift, and go to state 226
    "int2"                            shift, and go to state 227
    "int3"                            shift, and go to state 228
    "int4"                            shift, and go to state 229
    "uint"                            shift, and go to state 230
    "bitfield"                        shift, and go to state 420
    "uint2"                           shift, and go to state 232
    "uint3"                           shift, and go to state 233
    "uint4"                           shift, and go to state 234
    "float"                           shift, and go to state 235
    "float2"                          shift, and go to state 236
    "float3"                          shift, and go to state 237
    "float4"                          shift, and go to state 238
    "range"                           shift, and go to state 239
    "urange"                          shift, and go to state 240
    "range64"                         shift, and go to state 241
    "urange64"                        shift, and go to state 242
    "int64"                           shift, and go to state 244
    "uint64"                          shift, and go to state 245
    "double"                          shift, and go to state 246
    "int8"                            shift, and go to state 249
    "uint8"                           shift, and go to state 250
    "int16"                           shift, and go to state 251
    "uint16"                          shift, and go to state 252
    "tuple"                           shift, and go to state 421
    "variant"                         shift, and go to state 422
    "generator"                       shift, and go to state 423
    "++"                              shift, and go to state 424
    "--"                              shift, and go to state 425
    "::"                              shift, and go to state 55
    "$$"                              shift, and go to state 426
    "$i"                              shift, and go to state 427
    "$v"                              shift, and go to state 428
    "$b"                              shift, and go to state 429
    "$a"                              shift, and go to state 430
    "$c"                              shift, and go to state 431
    "..."                             shift, and go to state 432
    "integer constant"                shift, and go to state 433
    "long integer constant"           shift, and go to state 434
    "unsigned integer constant"       shift, and go to state 435
    "unsigned long integer constant"  shift, and go to state 436
    "unsigned int8 constant"          shift, and go to state 437
    "floating point constant"         shift, and go to state 438
    "double constant"                 shift, and go to state 439
    "name"                            shift, and go to state 56
    "start of the string"             shift, and go to state 440
    "begin of code block"             shift, and go to state 441
    '-'                               shift, and go to state 442
    '+'                               shift, and go to state 443
    '*'                               shift, and go to state 444
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 445
    '!'                               shift, and go to state 446
    '['                               shift, and go to state 447
    '('                               shift, and go to state 448
    '$'                               shift, and go to state 449
    '@'                               shift, and go to state 450

    string_builder          go to state 451
    expr_reader             go to state 452
    expr_call_pipe          go to state 453
    name_in_namespace       go to state 454
    expr_new                go to state 455
    expr_cast               go to state 456
    expr_type_decl          go to state 457
    expr_type_info          go to state 458
    block_or_lambda         go to state 459
    expr_full_block         go to state 460
    expr_numeric_const      go to state 461
    expr_named_call         go to state 462
    expr_method_call        go to state 463
    func_addr_expr          go to state 464
    expr_field              go to state 465
    expr_call               go to state 466
    expr                    go to state 1156
    expr_mtag               go to state 468
    basic_type_declaration  go to state 469
    make_decl               go to state 470
    make_struct_decl        go to state 471
    make_tuple_call         go to state 472
    make_dim_decl           go to state 473
    make_table_decl         go to state 474
    array_comprehension     go to state 475


State 1034

  431 expr: expr "as" "type" '<' . $@21 type_declaration '>' $@22

    $default  reduce using rule 429 ($@21)

    $@21  go to state 1157


State 1035

  462 expr_mtag: expr "as" "$f" '(' . expr ')'

    "struct"                          shift, and go to state 402
    "class"                           shift, and go to state 403
    "true"                            shift, and go to state 404
    "false"                           shift, and go to state 405
    "new"                             shift, and go to state 406
    "typeinfo"                        shift, and go to state 407
    "type"                            shift, and go to state 408
    "array"                           shift, and go to state 409
    "null"                            shift, and go to state 410
    "table"                           shift, and go to state 411
    "deref"                           shift, and go to state 412
    "cast"                            shift, and go to state 413
    "upcast"                          shift, and go to state 414
    "addr"                            shift, and go to state 415
    "reinterpret"                     shift, and go to state 416
    "unsafe"                          shift, and go to state 417
    "fixed_array"                     shift, and go to state 418
    "default"                         shift, and go to state 419
    "bool"                            shift, and go to state 222
    "void"                            shift, and go to state 223
    "string"                          shift, and go to state 224
    "int"                             shift, and go to state 226
    "int2"                            shift, and go to state 227
    "int3"                            shift, and go to state 228
    "int4"                            shift, and go to state 229
    "uint"                            shift, and go to state 230
    "bitfield"                        shift, and go to state 420
    "uint2"                           shift, and go to state 232
    "uint3"                           shift, and go to state 233
    "uint4"                           shift, and go to state 234
    "float"                           shift, and go to state 235
    "float2"                          shift, and go to state 236
    "float3"                          shift, and go to state 237
    "float4"                          shift, and go to state 238
    "range"                           shift, and go to state 239
    "urange"                          shift, and go to state 240
    "range64"                         shift, and go to state 241
    "urange64"                        shift, and go to state 242
    "int64"                           shift, and go to state 244
    "uint64"                          shift, and go to state 245
    "double"                          shift, and go to state 246
    "int8"                            shift, and go to state 249
    "uint8"                           shift, and go to state 250
    "int16"                           shift, and go to state 251
    "uint16"                          shift, and go to state 252
    "tuple"                           shift, and go to state 421
    "variant"                         shift, and go to state 422
    "generator"                       shift, and go to state 423
    "++"                              shift, and go to state 424
    "--"                              shift, and go to state 425
    "::"                              shift, and go to state 55
    "$$"                              shift, and go to state 426
    "$i"                              shift, and go to state 427
    "$v"                              shift, and go to state 428
    "$b"                              shift, and go to state 429
    "$a"                              shift, and go to state 430
    "$c"                              shift, and go to state 431
    "..."                             shift, and go to state 432
    "integer constant"                shift, and go to state 433
    "long integer constant"           shift, and go to state 434
    "unsigned integer constant"       shift, and go to state 435
    "unsigned long integer constant"  shift, and go to state 436
    "unsigned int8 constant"          shift, and go to state 437
    "floating point constant"         shift, and go to state 438
    "double constant"                 shift, and go to state 439
    "name"                            shift, and go to state 56
    "start of the string"             shift, and go to state 440
    "begin of code block"             shift, and go to state 441
    '-'                               shift, and go to state 442
    '+'                               shift, and go to state 443
    '*'                               shift, and go to state 444
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 445
    '!'                               shift, and go to state 446
    '['                               shift, and go to state 447
    '('                               shift, and go to state 448
    '$'                               shift, and go to state 449
    '@'                               shift, and go to state 450

    string_builder          go to state 451
    expr_reader             go to state 452
    expr_call_pipe          go to state 453
    name_in_namespace       go to state 454
    expr_new                go to state 455
    expr_cast               go to state 456
    expr_type_decl          go to state 457
    expr_type_info          go to state 458
    block_or_lambda         go to state 459
    expr_full_block         go to state 460
    expr_numeric_const      go to state 461
    expr_named_call         go to state 462
    expr_method_call        go to state 463
    func_addr_expr          go to state 464
    expr_field              go to state 465
    expr_call               go to state 466
    expr                    go to state 1158
    expr_mtag               go to state 468
    basic_type_declaration  go to state 469
    make_decl               go to state 470
    make_struct_decl        go to state 471
    make_tuple_call         go to state 472
    make_dim_decl           go to state 473
    make_table_decl         go to state 474
    array_comprehension     go to state 475


State 1036

  339 expr_method_call: expr "->" "name" '(' . ')'
  340                 | expr "->" "name" '(' . expr_list ')'

    "struct"                          shift, and go to state 402
    "class"                           shift, and go to state 403
    "true"                            shift, and go to state 404
    "false"                           shift, and go to state 405
    "new"                             shift, and go to state 406
    "typeinfo"                        shift, and go to state 407
    "type"                            shift, and go to state 408
    "array"                           shift, and go to state 409
    "null"                            shift, and go to state 410
    "table"                           shift, and go to state 411
    "deref"                           shift, and go to state 412
    "cast"                            shift, and go to state 413
    "upcast"                          shift, and go to state 414
    "addr"                            shift, and go to state 415
    "reinterpret"                     shift, and go to state 416
    "unsafe"                          shift, and go to state 417
    "fixed_array"                     shift, and go to state 418
    "default"                         shift, and go to state 419
    "bool"                            shift, and go to state 222
    "void"                            shift, and go to state 223
    "string"                          shift, and go to state 224
    "int"                             shift, and go to state 226
    "int2"                            shift, and go to state 227
    "int3"                            shift, and go to state 228
    "int4"                            shift, and go to state 229
    "uint"                            shift, and go to state 230
    "bitfield"                        shift, and go to state 420
    "uint2"                           shift, and go to state 232
    "uint3"                           shift, and go to state 233
    "uint4"                           shift, and go to state 234
    "float"                           shift, and go to state 235
    "float2"                          shift, and go to state 236
    "float3"                          shift, and go to state 237
    "float4"                          shift, and go to state 238
    "range"                           shift, and go to state 239
    "urange"                          shift, and go to state 240
    "range64"                         shift, and go to state 241
    "urange64"                        shift, and go to state 242
    "int64"                           shift, and go to state 244
    "uint64"                          shift, and go to state 245
    "double"                          shift, and go to state 246
    "int8"                            shift, and go to state 249
    "uint8"                           shift, and go to state 250
    "int16"                           shift, and go to state 251
    "uint16"                          shift, and go to state 252
    "tuple"                           shift, and go to state 421
    "variant"                         shift, and go to state 422
    "generator"                       shift, and go to state 423
    "++"                              shift, and go to state 424
    "--"                              shift, and go to state 425
    "::"                              shift, and go to state 55
    "$$"                              shift, and go to state 426
    "$i"                              shift, and go to state 427
    "$v"                              shift, and go to state 428
    "$b"                              shift, and go to state 429
    "$a"                              shift, and go to state 430
    "$c"                              shift, and go to state 431
    "..."                             shift, and go to state 432
    "integer constant"                shift, and go to state 433
    "long integer constant"           shift, and go to state 434
    "unsigned integer constant"       shift, and go to state 435
    "unsigned long integer constant"  shift, and go to state 436
    "unsigned int8 constant"          shift, and go to state 437
    "floating point constant"         shift, and go to state 438
    "double constant"                 shift, and go to state 439
    "name"                            shift, and go to state 56
    "start of the string"             shift, and go to state 440
    "begin of code block"             shift, and go to state 441
    '-'                               shift, and go to state 442
    '+'                               shift, and go to state 443
    '*'                               shift, and go to state 444
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 445
    '!'                               shift, and go to state 446
    '['                               shift, and go to state 447
    '('                               shift, and go to state 448
    ')'                               shift, and go to state 1159
    '$'                               shift, and go to state 449
    '@'                               shift, and go to state 450

    string_builder          go to state 451
    expr_reader             go to state 452
    expr_call_pipe          go to state 453
    name_in_namespace       go to state 454
    expr_new                go to state 455
    expr_cast               go to state 456
    expr_type_decl          go to state 457
    expr_type_info          go to state 458
    expr_list               go to state 1160
    block_or_lambda         go to state 459
    expr_full_block         go to state 460
    expr_numeric_const      go to state 461
    expr_named_call         go to state 462
    expr_method_call        go to state 463
    func_addr_expr          go to state 464
    expr_field              go to state 465
    expr_call               go to state 466
    expr                    go to state 628
    expr_mtag               go to state 468
    basic_type_declaration  go to state 469
    make_decl               go to state 470
    make_struct_decl        go to state 471
    make_tuple_call         go to state 472
    make_dim_decl           go to state 473
    make_table_decl         go to state 474
    array_comprehension     go to state 475


State 1037

  459 expr_mtag: expr "?." "$f" '(' . expr ')'

    "struct"                          shift, and go to state 402
    "class"                           shift, and go to state 403
    "true"                            shift, and go to state 404
    "false"                           shift, and go to state 405
    "new"                             shift, and go to state 406
    "typeinfo"                        shift, and go to state 407
    "type"                            shift, and go to state 408
    "array"                           shift, and go to state 409
    "null"                            shift, and go to state 410
    "table"                           shift, and go to state 411
    "deref"                           shift, and go to state 412
    "cast"                            shift, and go to state 413
    "upcast"                          shift, and go to state 414
    "addr"                            shift, and go to state 415
    "reinterpret"                     shift, and go to state 416
    "unsafe"                          shift, and go to state 417
    "fixed_array"                     shift, and go to state 418
    "default"                         shift, and go to state 419
    "bool"                            shift, and go to state 222
    "void"                            shift, and go to state 223
    "string"                          shift, and go to state 224
    "int"                             shift, and go to state 226
    "int2"                            shift, and go to state 227
    "int3"                            shift, and go to state 228
    "int4"                            shift, and go to state 229
    "uint"                            shift, and go to state 230
    "bitfield"                        shift, and go to state 420
    "uint2"                           shift, and go to state 232
    "uint3"                           shift, and go to state 233
    "uint4"                           shift, and go to state 234
    "float"                           shift, and go to state 235
    "float2"                          shift, and go to state 236
    "float3"                          shift, and go to state 237
    "float4"                          shift, and go to state 238
    "range"                           shift, and go to state 239
    "urange"                          shift, and go to state 240
    "range64"                         shift, and go to state 241
    "urange64"                        shift, and go to state 242
    "int64"                           shift, and go to state 244
    "uint64"                          shift, and go to state 245
    "double"                          shift, and go to state 246
    "int8"                            shift, and go to state 249
    "uint8"                           shift, and go to state 250
    "int16"                           shift, and go to state 251
    "uint16"                          shift, and go to state 252
    "tuple"                           shift, and go to state 421
    "variant"                         shift, and go to state 422
    "generator"                       shift, and go to state 423
    "++"                              shift, and go to state 424
    "--"                              shift, and go to state 425
    "::"                              shift, and go to state 55
    "$$"                              shift, and go to state 426
    "$i"                              shift, and go to state 427
    "$v"                              shift, and go to state 428
    "$b"                              shift, and go to state 429
    "$a"                              shift, and go to state 430
    "$c"                              shift, and go to state 431
    "..."                             shift, and go to state 432
    "integer constant"                shift, and go to state 433
    "long integer constant"           shift, and go to state 434
    "unsigned integer constant"       shift, and go to state 435
    "unsigned long integer constant"  shift, and go to state 436
    "unsigned int8 constant"          shift, and go to state 437
    "floating point constant"         shift, and go to state 438
    "double constant"                 shift, and go to state 439
    "name"                            shift, and go to state 56
    "start of the string"             shift, and go to state 440
    "begin of code block"             shift, and go to state 441
    '-'                               shift, and go to state 442
    '+'                               shift, and go to state 443
    '*'                               shift, and go to state 444
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 445
    '!'                               shift, and go to state 446
    '['                               shift, and go to state 447
    '('                               shift, and go to state 448
    '$'                               shift, and go to state 449
    '@'                               shift, and go to state 450

    string_builder          go to state 451
    expr_reader             go to state 452
    expr_call_pipe          go to state 453
    name_in_namespace       go to state 454
    expr_new                go to state 455
    expr_cast               go to state 456
    expr_type_decl          go to state 457
    expr_type_info          go to state 458
    block_or_lambda         go to state 459
    expr_full_block         go to state 460
    expr_numeric_const      go to state 461
    expr_named_call         go to state 462
    expr_method_call        go to state 463
    func_addr_expr          go to state 464
    expr_field              go to state 465
    expr_call               go to state 466
    expr                    go to state 1161
    expr_mtag               go to state 468
    basic_type_declaration  go to state 469
    make_decl               go to state 470
    make_struct_decl        go to state 471
    make_tuple_call         go to state 472
    make_dim_decl           go to state 473
    make_table_decl         go to state 474
    array_comprehension     go to state 475


State 1038

  409 expr: expr "?[" expr ']' .

    $default  reduce using rule 409 (expr)


State 1039

  436 expr: expr '?' "as" "type" . '<' $@23 type_declaration '>' $@24

    '<'  shift, and go to state 1162


State 1040

  463 expr_mtag: expr '?' "as" "$f" . '(' expr ')'

    '('  shift, and go to state 1163


State 1041

  433 expr: expr '?' "as" "name" .

    $default  reduce using rule 433 (expr)


State 1042

  437 expr: expr '?' "as" basic_type_declaration .

    $default  reduce using rule 437 (expr)


State 1043

  422 expr: expr '?' expr ':' . expr

    "struct"                          shift, and go to state 402
    "class"                           shift, and go to state 403
    "true"                            shift, and go to state 404
    "false"                           shift, and go to state 405
    "new"                             shift, and go to state 406
    "typeinfo"                        shift, and go to state 407
    "type"                            shift, and go to state 408
    "array"                           shift, and go to state 409
    "null"                            shift, and go to state 410
    "table"                           shift, and go to state 411
    "deref"                           shift, and go to state 412
    "cast"                            shift, and go to state 413
    "upcast"                          shift, and go to state 414
    "addr"                            shift, and go to state 415
    "reinterpret"                     shift, and go to state 416
    "unsafe"                          shift, and go to state 417
    "fixed_array"                     shift, and go to state 418
    "default"                         shift, and go to state 419
    "bool"                            shift, and go to state 222
    "void"                            shift, and go to state 223
    "string"                          shift, and go to state 224
    "int"                             shift, and go to state 226
    "int2"                            shift, and go to state 227
    "int3"                            shift, and go to state 228
    "int4"                            shift, and go to state 229
    "uint"                            shift, and go to state 230
    "bitfield"                        shift, and go to state 420
    "uint2"                           shift, and go to state 232
    "uint3"                           shift, and go to state 233
    "uint4"                           shift, and go to state 234
    "float"                           shift, and go to state 235
    "float2"                          shift, and go to state 236
    "float3"                          shift, and go to state 237
    "float4"                          shift, and go to state 238
    "range"                           shift, and go to state 239
    "urange"                          shift, and go to state 240
    "range64"                         shift, and go to state 241
    "urange64"                        shift, and go to state 242
    "int64"                           shift, and go to state 244
    "uint64"                          shift, and go to state 245
    "double"                          shift, and go to state 246
    "int8"                            shift, and go to state 249
    "uint8"                           shift, and go to state 250
    "int16"                           shift, and go to state 251
    "uint16"                          shift, and go to state 252
    "tuple"                           shift, and go to state 421
    "variant"                         shift, and go to state 422
    "generator"                       shift, and go to state 423
    "++"                              shift, and go to state 424
    "--"                              shift, and go to state 425
    "::"                              shift, and go to state 55
    "$$"                              shift, and go to state 426
    "$i"                              shift, and go to state 427
    "$v"                              shift, and go to state 428
    "$b"                              shift, and go to state 429
    "$a"                              shift, and go to state 430
    "$c"                              shift, and go to state 431
    "..."                             shift, and go to state 432
    "integer constant"                shift, and go to state 433
    "long integer constant"           shift, and go to state 434
    "unsigned integer constant"       shift, and go to state 435
    "unsigned long integer constant"  shift, and go to state 436
    "unsigned int8 constant"          shift, and go to state 437
    "floating point constant"         shift, and go to state 438
    "double constant"                 shift, and go to state 439
    "name"                            shift, and go to state 56
    "start of the string"             shift, and go to state 440
    "begin of code block"             shift, and go to state 441
    '-'                               shift, and go to state 442
    '+'                               shift, and go to state 443
    '*'                               shift, and go to state 444
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 445
    '!'                               shift, and go to state 446
    '['                               shift, and go to state 447
    '('                               shift, and go to state 448
    '$'                               shift, and go to state 449
    '@'                               shift, and go to state 450

    string_builder          go to state 451
    expr_reader             go to state 452
    expr_call_pipe          go to state 453
    name_in_namespace       go to state 454
    expr_new                go to state 455
    expr_cast               go to state 456
    expr_type_decl          go to state 457
    expr_type_info          go to state 458
    block_or_lambda         go to state 459
    expr_full_block         go to state 460
    expr_numeric_const      go to state 461
    expr_named_call         go to state 462
    expr_method_call        go to state 463
    func_addr_expr          go to state 464
    expr_field              go to state 465
    expr_call               go to state 466
    expr                    go to state 1164
    expr_mtag               go to state 468
    basic_type_declaration  go to state 469
    make_decl               go to state 470
    make_struct_decl        go to state 471
    make_tuple_call         go to state 472
    make_dim_decl           go to state 473
    make_table_decl         go to state 474
    array_comprehension     go to state 475


State 1044

  461 expr_mtag: expr '.' "?." "$f" . '(' expr ')'

    '('  shift, and go to state 1165


State 1045

  412 expr: expr '.' "?." "name" .

    $default  reduce using rule 412 (expr)


State 1046

  339 expr_method_call: expr . "->" "name" '(' ')'
  340                 | expr . "->" "name" '(' expr_list ')'
  350 expr_field: expr . '.' "name"
  351           | expr . '.' '.' "name"
  352           | expr . '.' "name" '(' ')'
  353           | expr . '.' "name" '(' expr_list ')'
  354           | expr . '.' basic_type_declaration '(' ')'
  355           | expr . '.' basic_type_declaration '(' expr_list ')'
  358           | expr . '.' $@17 error $@18
  380 expr: expr . "<<" expr
  381     | expr . ">>" expr
  382     | expr . "<<<" expr
  383     | expr . ">>>" expr
  384     | expr . '+' expr
  385     | expr . '-' expr
  386     | expr . '*' expr
  387     | expr . '/' expr
  388     | expr . '%' expr
  389     | expr . '<' expr
  390     | expr . '>' expr
  391     | expr . "==" expr
  392     | expr . "!=" expr
  393     | expr . "<=" expr
  394     | expr . ">=" expr
  395     | expr . '&' expr
  396     | expr . '|' expr
  397     | expr . '^' expr
  398     | expr . "&&" expr
  399     | expr . "||" expr
  400     | expr . "^^" expr
  401     | expr . ".." expr
  404     | expr . "++"
  405     | expr . "--"
  407     | expr . '[' expr ']'
  408     | expr . '.' '[' expr ']'
  409     | expr . "?[" expr ']'
  410     | expr . '.' "?[" expr ']'
  410     | expr '.' "?[" expr . ']'
  411     | expr . "?." "name"
  412     | expr . '.' "?." "name"
  421     | expr . "??" expr
  422     | expr . '?' expr ':' expr
  425     | expr . "is" "type" '<' $@19 type_declaration_no_options '>' $@20
  426     | expr . "is" basic_type_declaration
  427     | expr . "is" "name"
  428     | expr . "as" "name"
  431     | expr . "as" "type" '<' $@21 type_declaration '>' $@22
  432     | expr . "as" basic_type_declaration
  433     | expr . '?' "as" "name"
  436     | expr . '?' "as" "type" '<' $@23 type_declaration '>' $@24
  437     | expr . '?' "as" basic_type_declaration
  445     | expr . "<|" expr
  446     | expr . "|>" expr
  447     | expr . "|>" basic_type_declaration
  458 expr_mtag: expr . '.' "$f" '(' expr ')'
  459          | expr . "?." "$f" '(' expr ')'
  460          | expr . '.' '.' "$f" '(' expr ')'
  461          | expr . '.' "?." "$f" '(' expr ')'
  462          | expr . "as" "$f" '(' expr ')'
  463          | expr . '?' "as" "$f" '(' expr ')'
  464          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 637
    "as"   shift, and go to state 638
    "<<"   shift, and go to state 639
    ">>"   shift, and go to state 640
    "++"   shift, and go to state 641
    "--"   shift, and go to state 642
    "<="   shift, and go to state 643
    ">="   shift, and go to state 644
    "=="   shift, and go to state 645
    "!="   shift, and go to state 646
    "->"   shift, and go to state 647
    "??"   shift, and go to state 648
    "?."   shift, and go to state 649
    "?["   shift, and go to state 650
    "<|"   shift, and go to state 651
    "|>"   shift, and go to state 652
    "<<<"  shift, and go to state 653
    ">>>"  shift, and go to state 654
    "&&"   shift, and go to state 655
    "||"   shift, and go to state 656
    "^^"   shift, and go to state 657
    ".."   shift, and go to state 658
    '?'    shift, and go to state 659
    '|'    shift, and go to state 660
    '^'    shift, and go to state 661
    '&'    shift, and go to state 662
    '<'    shift, and go to state 663
    '>'    shift, and go to state 664
    '-'    shift, and go to state 665
    '+'    shift, and go to state 666
    '*'    shift, and go to state 667
    '/'    shift, and go to state 668
    '%'    shift, and go to state 669
    '.'    shift, and go to state 670
    '['    shift, and go to state 671
    ']'    shift, and go to state 1166


State 1047

  458 expr_mtag: expr '.' "$f" '(' . expr ')'

    "struct"                          shift, and go to state 402
    "class"                           shift, and go to state 403
    "true"                            shift, and go to state 404
    "false"                           shift, and go to state 405
    "new"                             shift, and go to state 406
    "typeinfo"                        shift, and go to state 407
    "type"                            shift, and go to state 408
    "array"                           shift, and go to state 409
    "null"                            shift, and go to state 410
    "table"                           shift, and go to state 411
    "deref"                           shift, and go to state 412
    "cast"                            shift, and go to state 413
    "upcast"                          shift, and go to state 414
    "addr"                            shift, and go to state 415
    "reinterpret"                     shift, and go to state 416
    "unsafe"                          shift, and go to state 417
    "fixed_array"                     shift, and go to state 418
    "default"                         shift, and go to state 419
    "bool"                            shift, and go to state 222
    "void"                            shift, and go to state 223
    "string"                          shift, and go to state 224
    "int"                             shift, and go to state 226
    "int2"                            shift, and go to state 227
    "int3"                            shift, and go to state 228
    "int4"                            shift, and go to state 229
    "uint"                            shift, and go to state 230
    "bitfield"                        shift, and go to state 420
    "uint2"                           shift, and go to state 232
    "uint3"                           shift, and go to state 233
    "uint4"                           shift, and go to state 234
    "float"                           shift, and go to state 235
    "float2"                          shift, and go to state 236
    "float3"                          shift, and go to state 237
    "float4"                          shift, and go to state 238
    "range"                           shift, and go to state 239
    "urange"                          shift, and go to state 240
    "range64"                         shift, and go to state 241
    "urange64"                        shift, and go to state 242
    "int64"                           shift, and go to state 244
    "uint64"                          shift, and go to state 245
    "double"                          shift, and go to state 246
    "int8"                            shift, and go to state 249
    "uint8"                           shift, and go to state 250
    "int16"                           shift, and go to state 251
    "uint16"                          shift, and go to state 252
    "tuple"                           shift, and go to state 421
    "variant"                         shift, and go to state 422
    "generator"                       shift, and go to state 423
    "++"                              shift, and go to state 424
    "--"                              shift, and go to state 425
    "::"                              shift, and go to state 55
    "$$"                              shift, and go to state 426
    "$i"                              shift, and go to state 427
    "$v"                              shift, and go to state 428
    "$b"                              shift, and go to state 429
    "$a"                              shift, and go to state 430
    "$c"                              shift, and go to state 431
    "..."                             shift, and go to state 432
    "integer constant"                shift, and go to state 433
    "long integer constant"           shift, and go to state 434
    "unsigned integer constant"       shift, and go to state 435
    "unsigned long integer constant"  shift, and go to state 436
    "unsigned int8 constant"          shift, and go to state 437
    "floating point constant"         shift, and go to state 438
    "double constant"                 shift, and go to state 439
    "name"                            shift, and go to state 56
    "start of the string"             shift, and go to state 440
    "begin of code block"             shift, and go to state 441
    '-'                               shift, and go to state 442
    '+'                               shift, and go to state 443
    '*'                               shift, and go to state 444
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 445
    '!'                               shift, and go to state 446
    '['                               shift, and go to state 447
    '('                               shift, and go to state 448
    '$'                               shift, and go to state 449
    '@'                               shift, and go to state 450

    string_builder          go to state 451
    expr_reader             go to state 452
    expr_call_pipe          go to state 453
    name_in_namespace       go to state 454
    expr_new                go to state 455
    expr_cast               go to state 456
    expr_type_decl          go to state 457
    expr_type_info          go to state 458
    block_or_lambda         go to state 459
    expr_full_block         go to state 460
    expr_numeric_const      go to state 461
    expr_named_call         go to state 462
    expr_method_call        go to state 463
    func_addr_expr          go to state 464
    expr_field              go to state 465
    expr_call               go to state 466
    expr                    go to state 1167
    expr_mtag               go to state 468
    basic_type_declaration  go to state 469
    make_decl               go to state 470
    make_struct_decl        go to state 471
    make_tuple_call         go to state 472
    make_dim_decl           go to state 473
    make_table_decl         go to state 474
    array_comprehension     go to state 475


State 1048

  352 expr_field: expr '.' "name" '(' . ')'
  353           | expr '.' "name" '(' . expr_list ')'

    "struct"                          shift, and go to state 402
    "class"                           shift, and go to state 403
    "true"                            shift, and go to state 404
    "false"                           shift, and go to state 405
    "new"                             shift, and go to state 406
    "typeinfo"                        shift, and go to state 407
    "type"                            shift, and go to state 408
    "array"                           shift, and go to state 409
    "null"                            shift, and go to state 410
    "table"                           shift, and go to state 411
    "deref"                           shift, and go to state 412
    "cast"                            shift, and go to state 413
    "upcast"                          shift, and go to state 414
    "addr"                            shift, and go to state 415
    "reinterpret"                     shift, and go to state 416
    "unsafe"                          shift, and go to state 417
    "fixed_array"                     shift, and go to state 418
    "default"                         shift, and go to state 419
    "bool"                            shift, and go to state 222
    "void"                            shift, and go to state 223
    "string"                          shift, and go to state 224
    "int"                             shift, and go to state 226
    "int2"                            shift, and go to state 227
    "int3"                            shift, and go to state 228
    "int4"                            shift, and go to state 229
    "uint"                            shift, and go to state 230
    "bitfield"                        shift, and go to state 420
    "uint2"                           shift, and go to state 232
    "uint3"                           shift, and go to state 233
    "uint4"                           shift, and go to state 234
    "float"                           shift, and go to state 235
    "float2"                          shift, and go to state 236
    "float3"                          shift, and go to state 237
    "float4"                          shift, and go to state 238
    "range"                           shift, and go to state 239
    "urange"                          shift, and go to state 240
    "range64"                         shift, and go to state 241
    "urange64"                        shift, and go to state 242
    "int64"                           shift, and go to state 244
    "uint64"                          shift, and go to state 245
    "double"                          shift, and go to state 246
    "int8"                            shift, and go to state 249
    "uint8"                           shift, and go to state 250
    "int16"                           shift, and go to state 251
    "uint16"                          shift, and go to state 252
    "tuple"                           shift, and go to state 421
    "variant"                         shift, and go to state 422
    "generator"                       shift, and go to state 423
    "++"                              shift, and go to state 424
    "--"                              shift, and go to state 425
    "::"                              shift, and go to state 55
    "$$"                              shift, and go to state 426
    "$i"                              shift, and go to state 427
    "$v"                              shift, and go to state 428
    "$b"                              shift, and go to state 429
    "$a"                              shift, and go to state 430
    "$c"                              shift, and go to state 431
    "..."                             shift, and go to state 432
    "integer constant"                shift, and go to state 433
    "long integer constant"           shift, and go to state 434
    "unsigned integer constant"       shift, and go to state 435
    "unsigned long integer constant"  shift, and go to state 436
    "unsigned int8 constant"          shift, and go to state 437
    "floating point constant"         shift, and go to state 438
    "double constant"                 shift, and go to state 439
    "name"                            shift, and go to state 56
    "start of the string"             shift, and go to state 440
    "begin of code block"             shift, and go to state 441
    '-'                               shift, and go to state 442
    '+'                               shift, and go to state 443
    '*'                               shift, and go to state 444
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 445
    '!'                               shift, and go to state 446
    '['                               shift, and go to state 447
    '('                               shift, and go to state 448
    ')'                               shift, and go to state 1168
    '$'                               shift, and go to state 449
    '@'                               shift, and go to state 450

    string_builder          go to state 451
    expr_reader             go to state 452
    expr_call_pipe          go to state 453
    name_in_namespace       go to state 454
    expr_new                go to state 455
    expr_cast               go to state 456
    expr_type_decl          go to state 457
    expr_type_info          go to state 458
    expr_list               go to state 1169
    block_or_lambda         go to state 459
    expr_full_block         go to state 460
    expr_numeric_const      go to state 461
    expr_named_call         go to state 462
    expr_method_call        go to state 463
    func_addr_expr          go to state 464
    expr_field              go to state 465
    expr_call               go to state 466
    expr                    go to state 628
    expr_mtag               go to state 468
    basic_type_declaration  go to state 469
    make_decl               go to state 470
    make_struct_decl        go to state 471
    make_tuple_call         go to state 472
    make_dim_decl           go to state 473
    make_table_decl         go to state 474
    array_comprehension     go to state 475


State 1049

  460 expr_mtag: expr '.' '.' "$f" . '(' expr ')'

    '('  shift, and go to state 1170


State 1050

  351 expr_field: expr '.' '.' "name" .

    $default  reduce using rule 351 (expr_field)


State 1051

  339 expr_method_call: expr . "->" "name" '(' ')'
  340                 | expr . "->" "name" '(' expr_list ')'
  350 expr_field: expr . '.' "name"
  351           | expr . '.' '.' "name"
  352           | expr . '.' "name" '(' ')'
  353           | expr . '.' "name" '(' expr_list ')'
  354           | expr . '.' basic_type_declaration '(' ')'
  355           | expr . '.' basic_type_declaration '(' expr_list ')'
  358           | expr . '.' $@17 error $@18
  380 expr: expr . "<<" expr
  381     | expr . ">>" expr
  382     | expr . "<<<" expr
  383     | expr . ">>>" expr
  384     | expr . '+' expr
  385     | expr . '-' expr
  386     | expr . '*' expr
  387     | expr . '/' expr
  388     | expr . '%' expr
  389     | expr . '<' expr
  390     | expr . '>' expr
  391     | expr . "==" expr
  392     | expr . "!=" expr
  393     | expr . "<=" expr
  394     | expr . ">=" expr
  395     | expr . '&' expr
  396     | expr . '|' expr
  397     | expr . '^' expr
  398     | expr . "&&" expr
  399     | expr . "||" expr
  400     | expr . "^^" expr
  401     | expr . ".." expr
  404     | expr . "++"
  405     | expr . "--"
  407     | expr . '[' expr ']'
  408     | expr . '.' '[' expr ']'
  408     | expr '.' '[' expr . ']'
  409     | expr . "?[" expr ']'
  410     | expr . '.' "?[" expr ']'
  411     | expr . "?." "name"
  412     | expr . '.' "?." "name"
  421     | expr . "??" expr
  422     | expr . '?' expr ':' expr
  425     | expr . "is" "type" '<' $@19 type_declaration_no_options '>' $@20
  426     | expr . "is" basic_type_declaration
  427     | expr . "is" "name"
  428     | expr . "as" "name"
  431     | expr . "as" "type" '<' $@21 type_declaration '>' $@22
  432     | expr . "as" basic_type_declaration
  433     | expr . '?' "as" "name"
  436     | expr . '?' "as" "type" '<' $@23 type_declaration '>' $@24
  437     | expr . '?' "as" basic_type_declaration
  445     | expr . "<|" expr
  446     | expr . "|>" expr
  447     | expr . "|>" basic_type_declaration
  458 expr_mtag: expr . '.' "$f" '(' expr ')'
  459          | expr . "?." "$f" '(' expr ')'
  460          | expr . '.' '.' "$f" '(' expr ')'
  461          | expr . '.' "?." "$f" '(' expr ')'
  462          | expr . "as" "$f" '(' expr ')'
  463          | expr . '?' "as" "$f" '(' expr ')'
  464          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 637
    "as"   shift, and go to state 638
    "<<"   shift, and go to state 639
    ">>"   shift, and go to state 640
    "++"   shift, and go to state 641
    "--"   shift, and go to state 642
    "<="   shift, and go to state 643
    ">="   shift, and go to state 644
    "=="   shift, and go to state 645
    "!="   shift, and go to state 646
    "->"   shift, and go to state 647
    "??"   shift, and go to state 648
    "?."   shift, and go to state 649
    "?["   shift, and go to state 650
    "<|"   shift, and go to state 651
    "|>"   shift, and go to state 652
    "<<<"  shift, and go to state 653
    ">>>"  shift, and go to state 654
    "&&"   shift, and go to state 655
    "||"   shift, and go to state 656
    "^^"   shift, and go to state 657
    ".."   shift, and go to state 658
    '?'    shift, and go to state 659
    '|'    shift, and go to state 660
    '^'    shift, and go to state 661
    '&'    shift, and go to state 662
    '<'    shift, and go to state 663
    '>'    shift, and go to state 664
    '-'    shift, and go to state 665
    '+'    shift, and go to state 666
    '*'    shift, and go to state 667
    '/'    shift, and go to state 668
    '%'    shift, and go to state 669
    '.'    shift, and go to state 670
    '['    shift, and go to state 671
    ']'    shift, and go to state 1171


State 1052

  358 expr_field: expr '.' $@17 error . $@18

    $default  reduce using rule 357 ($@18)

    $@18  go to state 1172


State 1053

  354 expr_field: expr '.' basic_type_declaration '(' . ')'
  355           | expr '.' basic_type_declaration '(' . expr_list ')'

    "struct"                          shift, and go to state 402
    "class"                           shift, and go to state 403
    "true"                            shift, and go to state 404
    "false"                           shift, and go to state 405
    "new"                             shift, and go to state 406
    "typeinfo"                        shift, and go to state 407
    "type"                            shift, and go to state 408
    "array"                           shift, and go to state 409
    "null"                            shift, and go to state 410
    "table"                           shift, and go to state 411
    "deref"                           shift, and go to state 412
    "cast"                            shift, and go to state 413
    "upcast"                          shift, and go to state 414
    "addr"                            shift, and go to state 415
    "reinterpret"                     shift, and go to state 416
    "unsafe"                          shift, and go to state 417
    "fixed_array"                     shift, and go to state 418
    "default"                         shift, and go to state 419
    "bool"                            shift, and go to state 222
    "void"                            shift, and go to state 223
    "string"                          shift, and go to state 224
    "int"                             shift, and go to state 226
    "int2"                            shift, and go to state 227
    "int3"                            shift, and go to state 228
    "int4"                            shift, and go to state 229
    "uint"                            shift, and go to state 230
    "bitfield"                        shift, and go to state 420
    "uint2"                           shift, and go to state 232
    "uint3"                           shift, and go to state 233
    "uint4"                           shift, and go to state 234
    "float"                           shift, and go to state 235
    "float2"                          shift, and go to state 236
    "float3"                          shift, and go to state 237
    "float4"                          shift, and go to state 238
    "range"                           shift, and go to state 239
    "urange"                          shift, and go to state 240
    "range64"                         shift, and go to state 241
    "urange64"                        shift, and go to state 242
    "int64"                           shift, and go to state 244
    "uint64"                          shift, and go to state 245
    "double"                          shift, and go to state 246
    "int8"                            shift, and go to state 249
    "uint8"                           shift, and go to state 250
    "int16"                           shift, and go to state 251
    "uint16"                          shift, and go to state 252
    "tuple"                           shift, and go to state 421
    "variant"                         shift, and go to state 422
    "generator"                       shift, and go to state 423
    "++"                              shift, and go to state 424
    "--"                              shift, and go to state 425
    "::"                              shift, and go to state 55
    "$$"                              shift, and go to state 426
    "$i"                              shift, and go to state 427
    "$v"                              shift, and go to state 428
    "$b"                              shift, and go to state 429
    "$a"                              shift, and go to state 430
    "$c"                              shift, and go to state 431
    "..."                             shift, and go to state 432
    "integer constant"                shift, and go to state 433
    "long integer constant"           shift, and go to state 434
    "unsigned integer constant"       shift, and go to state 435
    "unsigned long integer constant"  shift, and go to state 436
    "unsigned int8 constant"          shift, and go to state 437
    "floating point constant"         shift, and go to state 438
    "double constant"                 shift, and go to state 439
    "name"                            shift, and go to state 56
    "start of the string"             shift, and go to state 440
    "begin of code block"             shift, and go to state 441
    '-'                               shift, and go to state 442
    '+'                               shift, and go to state 443
    '*'                               shift, and go to state 444
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 445
    '!'                               shift, and go to state 446
    '['                               shift, and go to state 447
    '('                               shift, and go to state 448
    ')'                               shift, and go to state 1173
    '$'                               shift, and go to state 449
    '@'                               shift, and go to state 450

    string_builder          go to state 451
    expr_reader             go to state 452
    expr_call_pipe          go to state 453
    name_in_namespace       go to state 454
    expr_new                go to state 455
    expr_cast               go to state 456
    expr_type_decl          go to state 457
    expr_type_info          go to state 458
    expr_list               go to state 1174
    block_or_lambda         go to state 459
    expr_full_block         go to state 460
    expr_numeric_const      go to state 461
    expr_named_call         go to state 462
    expr_method_call        go to state 463
    func_addr_expr          go to state 464
    expr_field              go to state 465
    expr_call               go to state 466
    expr                    go to state 628
    expr_mtag               go to state 468
    basic_type_declaration  go to state 469
    make_decl               go to state 470
    make_struct_decl        go to state 471
    make_tuple_call         go to state 472
    make_dim_decl           go to state 473
    make_table_decl         go to state 474
    array_comprehension     go to state 475


State 1054

  407 expr: expr '[' expr ']' .

    $default  reduce using rule 407 (expr)


State 1055

  292 expr_list: expr_list ',' . expr

    "struct"                          shift, and go to state 402
    "class"                           shift, and go to state 403
    "true"                            shift, and go to state 404
    "false"                           shift, and go to state 405
    "new"                             shift, and go to state 406
    "typeinfo"                        shift, and go to state 407
    "type"                            shift, and go to state 408
    "array"                           shift, and go to state 409
    "null"                            shift, and go to state 410
    "table"                           shift, and go to state 411
    "deref"                           shift, and go to state 412
    "cast"                            shift, and go to state 413
    "upcast"                          shift, and go to state 414
    "addr"                            shift, and go to state 415
    "reinterpret"                     shift, and go to state 416
    "unsafe"                          shift, and go to state 417
    "fixed_array"                     shift, and go to state 418
    "default"                         shift, and go to state 419
    "bool"                            shift, and go to state 222
    "void"                            shift, and go to state 223
    "string"                          shift, and go to state 224
    "int"                             shift, and go to state 226
    "int2"                            shift, and go to state 227
    "int3"                            shift, and go to state 228
    "int4"                            shift, and go to state 229
    "uint"                            shift, and go to state 230
    "bitfield"                        shift, and go to state 420
    "uint2"                           shift, and go to state 232
    "uint3"                           shift, and go to state 233
    "uint4"                           shift, and go to state 234
    "float"                           shift, and go to state 235
    "float2"                          shift, and go to state 236
    "float3"                          shift, and go to state 237
    "float4"                          shift, and go to state 238
    "range"                           shift, and go to state 239
    "urange"                          shift, and go to state 240
    "range64"                         shift, and go to state 241
    "urange64"                        shift, and go to state 242
    "int64"                           shift, and go to state 244
    "uint64"                          shift, and go to state 245
    "double"                          shift, and go to state 246
    "int8"                            shift, and go to state 249
    "uint8"                           shift, and go to state 250
    "int16"                           shift, and go to state 251
    "uint16"                          shift, and go to state 252
    "tuple"                           shift, and go to state 421
    "variant"                         shift, and go to state 422
    "generator"                       shift, and go to state 423
    "++"                              shift, and go to state 424
    "--"                              shift, and go to state 425
    "::"                              shift, and go to state 55
    "$$"                              shift, and go to state 426
    "$i"                              shift, and go to state 427
    "$v"                              shift, and go to state 428
    "$b"                              shift, and go to state 429
    "$a"                              shift, and go to state 430
    "$c"                              shift, and go to state 431
    "..."                             shift, and go to state 432
    "integer constant"                shift, and go to state 433
    "long integer constant"           shift, and go to state 434
    "unsigned integer constant"       shift, and go to state 435
    "unsigned long integer constant"  shift, and go to state 436
    "unsigned int8 constant"          shift, and go to state 437
    "floating point constant"         shift, and go to state 438
    "double constant"                 shift, and go to state 439
    "name"                            shift, and go to state 56
    "start of the string"             shift, and go to state 440
    "begin of code block"             shift, and go to state 441
    '-'                               shift, and go to state 442
    '+'                               shift, and go to state 443
    '*'                               shift, and go to state 444
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 445
    '!'                               shift, and go to state 446
    '['                               shift, and go to state 447
    '('                               shift, and go to state 448
    '$'                               shift, and go to state 449
    '@'                               shift, and go to state 450

    string_builder          go to state 451
    expr_reader             go to state 452
    expr_call_pipe          go to state 453
    name_in_namespace       go to state 454
    expr_new                go to state 455
    expr_cast               go to state 456
    expr_type_decl          go to state 457
    expr_type_info          go to state 458
    block_or_lambda         go to state 459
    expr_full_block         go to state 460
    expr_numeric_const      go to state 461
    expr_named_call         go to state 462
    expr_method_call        go to state 463
    func_addr_expr          go to state 464
    expr_field              go to state 465
    expr_call               go to state 466
    expr                    go to state 1010
    expr_mtag               go to state 468
    basic_type_declaration  go to state 469
    make_decl               go to state 470
    make_struct_decl        go to state 471
    make_tuple_call         go to state 472
    make_dim_decl           go to state 473
    make_table_decl         go to state 474
    array_comprehension     go to state 475


State 1056

  365 expr_call: basic_type_declaration '(' expr_list ')' .

    $default  reduce using rule 365 (expr_call)


State 1057

  667 type_declaration_no_options_no_dim: "iterator" '<' $@45 type_declaration '>' $@46 .

    $default  reduce using rule 667 (type_declaration_no_options_no_dim)


State 1058

  657 type_declaration_no_options_no_dim: "smart_ptr" '<' $@39 type_declaration '>' $@40 .

    $default  reduce using rule 657 (type_declaration_no_options_no_dim)


State 1059

  615 bitfield_bits: bitfield_bits "end of expression" "name" .

    $default  reduce using rule 615 (bitfield_bits)


State 1060

  621 bitfield_type_declaration: "bitfield" '<' $@34 bitfield_bits '>' $@35 .

    $default  reduce using rule 621 (bitfield_type_declaration)


State 1061

  671 type_declaration_no_options_no_dim: "block" '<' $@47 type_declaration '>' $@48 .

    $default  reduce using rule 671 (type_declaration_no_options_no_dim)


State 1062

  674 type_declaration_no_options_no_dim: "block" '<' $@49 optional_function_argument_list optional_function_type '>' . $@50

    $default  reduce using rule 673 ($@50)

    $@50  go to state 1175


State 1063

  678 type_declaration_no_options_no_dim: "function" '<' $@51 type_declaration '>' $@52 .

    $default  reduce using rule 678 (type_declaration_no_options_no_dim)


State 1064

  681 type_declaration_no_options_no_dim: "function" '<' $@53 optional_function_argument_list optional_function_type '>' . $@54

    $default  reduce using rule 680 ($@54)

    $@54  go to state 1176


State 1065

  685 type_declaration_no_options_no_dim: "lambda" '<' $@55 type_declaration '>' $@56 .

    $default  reduce using rule 685 (type_declaration_no_options_no_dim)


State 1066

  688 type_declaration_no_options_no_dim: "lambda" '<' $@57 optional_function_argument_list optional_function_type '>' . $@58

    $default  reduce using rule 687 ($@58)

    $@58  go to state 1177


State 1067

  691 type_declaration_no_options_no_dim: "tuple" '<' $@59 tuple_type_list '>' $@60 .

    $default  reduce using rule 691 (type_declaration_no_options_no_dim)


State 1068

  493 tuple_type_list: tuple_type_list c_or_s tuple_type .

    $default  reduce using rule 493 (tuple_type_list)


State 1069

  694 type_declaration_no_options_no_dim: "variant" '<' $@61 variant_type_list '>' $@62 .

    $default  reduce using rule 694 (type_declaration_no_options_no_dim)


State 1070

  499 variant_type_list: variant_type_list c_or_s variant_type .

    $default  reduce using rule 499 (variant_type_list)


State 1071

  642 type_declaration_no_options_no_dim: '$' name_in_namespace '<' $@38 type_declaration_no_options_list '>' . '(' optional_expr_list ')'

    '('  shift, and go to state 1178


State 1072

  241 type_declaration_no_options_list: type_declaration_no_options_list c_or_s . type_declaration

    "type"       shift, and go to state 216
    "array"      shift, and go to state 217
    "table"      shift, and go to state 218
    "typedecl"   shift, and go to state 219
    "iterator"   shift, and go to state 220
    "smart_ptr"  shift, and go to state 221
    "bool"       shift, and go to state 222
    "void"       shift, and go to state 223
    "string"     shift, and go to state 224
    "auto"       shift, and go to state 225
    "int"        shift, and go to state 226
    "int2"       shift, and go to state 227
    "int3"       shift, and go to state 228
    "int4"       shift, and go to state 229
    "uint"       shift, and go to state 230
    "bitfield"   shift, and go to state 231
    "uint2"      shift, and go to state 232
    "uint3"      shift, and go to state 233
    "uint4"      shift, and go to state 234
    "float"      shift, and go to state 235
    "float2"     shift, and go to state 236
    "float3"     shift, and go to state 237
    "float4"     shift, and go to state 238
    "range"      shift, and go to state 239
    "urange"     shift, and go to state 240
    "range64"    shift, and go to state 241
    "urange64"   shift, and go to state 242
    "block"      shift, and go to state 243
    "int64"      shift, and go to state 244
    "uint64"     shift, and go to state 245
    "double"     shift, and go to state 246
    "function"   shift, and go to state 247
    "lambda"     shift, and go to state 248
    "int8"       shift, and go to state 249
    "uint8"      shift, and go to state 250
    "int16"      shift, and go to state 251
    "uint16"     shift, and go to state 252
    "tuple"      shift, and go to state 253
    "variant"    shift, and go to state 254
    "::"         shift, and go to state 55
    "$t"         shift, and go to state 255
    "name"       shift, and go to state 56
    '$'          shift, and go to state 256

    name_in_namespace                   go to state 257
    basic_type_declaration              go to state 258
    structure_type_declaration          go to state 259
    auto_type_declaration               go to state 260
    bitfield_type_declaration           go to state 261
    type_declaration_no_options         go to state 262
    type_declaration_no_options_no_dim  go to state 263
    type_declaration                    go to state 1179


State 1073

  339 expr_method_call: expr . "->" "name" '(' ')'
  340                 | expr . "->" "name" '(' expr_list ')'
  350 expr_field: expr . '.' "name"
  351           | expr . '.' '.' "name"
  352           | expr . '.' "name" '(' ')'
  353           | expr . '.' "name" '(' expr_list ')'
  354           | expr . '.' basic_type_declaration '(' ')'
  355           | expr . '.' basic_type_declaration '(' expr_list ')'
  358           | expr . '.' $@17 error $@18
  380 expr: expr . "<<" expr
  381     | expr . ">>" expr
  382     | expr . "<<<" expr
  383     | expr . ">>>" expr
  384     | expr . '+' expr
  385     | expr . '-' expr
  386     | expr . '*' expr
  387     | expr . '/' expr
  388     | expr . '%' expr
  389     | expr . '<' expr
  390     | expr . '>' expr
  391     | expr . "==" expr
  392     | expr . "!=" expr
  393     | expr . "<=" expr
  394     | expr . ">=" expr
  395     | expr . '&' expr
  396     | expr . '|' expr
  397     | expr . '^' expr
  398     | expr . "&&" expr
  399     | expr . "||" expr
  400     | expr . "^^" expr
  401     | expr . ".." expr
  404     | expr . "++"
  405     | expr . "--"
  407     | expr . '[' expr ']'
  408     | expr . '.' '[' expr ']'
  409     | expr . "?[" expr ']'
  410     | expr . '.' "?[" expr ']'
  411     | expr . "?." "name"
  412     | expr . '.' "?." "name"
  421     | expr . "??" expr
  422     | expr . '?' expr ':' expr
  425     | expr . "is" "type" '<' $@19 type_declaration_no_options '>' $@20
  426     | expr . "is" basic_type_declaration
  427     | expr . "is" "name"
  428     | expr . "as" "name"
  431     | expr . "as" "type" '<' $@21 type_declaration '>' $@22
  432     | expr . "as" basic_type_declaration
  433     | expr . '?' "as" "name"
  436     | expr . '?' "as" "type" '<' $@23 type_declaration '>' $@24
  437     | expr . '?' "as" basic_type_declaration
  445     | expr . "<|" expr
  446     | expr . "|>" expr
  447     | expr . "|>" basic_type_declaration
  458 expr_mtag: expr . '.' "$f" '(' expr ')'
  459          | expr . "?." "$f" '(' expr ')'
  460          | expr . '.' '.' "$f" '(' expr ')'
  461          | expr . '.' "?." "$f" '(' expr ')'
  462          | expr . "as" "$f" '(' expr ')'
  463          | expr . '?' "as" "$f" '(' expr ')'
  464          | expr . "is" "$f" '(' expr ')'
  571 variable_name_with_pos_list: "$i" '(' expr . ')'

    "is"   shift, and go to state 637
    "as"   shift, and go to state 638
    "<<"   shift, and go to state 639
    ">>"   shift, and go to state 640
    "++"   shift, and go to state 641
    "--"   shift, and go to state 642
    "<="   shift, and go to state 643
    ">="   shift, and go to state 644
    "=="   shift, and go to state 645
    "!="   shift, and go to state 646
    "->"   shift, and go to state 647
    "??"   shift, and go to state 648
    "?."   shift, and go to state 649
    "?["   shift, and go to state 650
    "<|"   shift, and go to state 651
    "|>"   shift, and go to state 652
    "<<<"  shift, and go to state 653
    ">>>"  shift, and go to state 654
    "&&"   shift, and go to state 655
    "||"   shift, and go to state 656
    "^^"   shift, and go to state 657
    ".."   shift, and go to state 658
    '?'    shift, and go to state 659
    '|'    shift, and go to state 660
    '^'    shift, and go to state 661
    '&'    shift, and go to state 662
    '<'    shift, and go to state 663
    '>'    shift, and go to state 664
    '-'    shift, and go to state 665
    '+'    shift, and go to state 666
    '*'    shift, and go to state 667
    '/'    shift, and go to state 668
    '%'    shift, and go to state 669
    '.'    shift, and go to state 670
    '['    shift, and go to state 671
    ')'    shift, and go to state 1180


State 1074

  572 variable_name_with_pos_list: "name" "aka" "name" .

    $default  reduce using rule 572 (variable_name_with_pos_list)


State 1075

  573 variable_name_with_pos_list: variable_name_with_pos_list ',' "name" .
  574                            | variable_name_with_pos_list ',' "name" . "aka" "name"

    "aka"  shift, and go to state 1181

    $default  reduce using rule 573 (variable_name_with_pos_list)


State 1076

  507 variable_declaration: variable_name_with_pos_list ':' type_declaration .
  508                     | variable_name_with_pos_list ':' type_declaration . copy_or_move expr
  696 type_declaration: type_declaration . '|' type_declaration_no_options
  697                 | type_declaration . '|' '#'

    "<-"  shift, and go to state 912
    '='   shift, and go to state 914
    '|'   shift, and go to state 369

    $default  reduce using rule 507 (variable_declaration)

    copy_or_move  go to state 1182


State 1077

  339 expr_method_call: expr . "->" "name" '(' ')'
  340                 | expr . "->" "name" '(' expr_list ')'
  350 expr_field: expr . '.' "name"
  351           | expr . '.' '.' "name"
  352           | expr . '.' "name" '(' ')'
  353           | expr . '.' "name" '(' expr_list ')'
  354           | expr . '.' basic_type_declaration '(' ')'
  355           | expr . '.' basic_type_declaration '(' expr_list ')'
  358           | expr . '.' $@17 error $@18
  380 expr: expr . "<<" expr
  381     | expr . ">>" expr
  382     | expr . "<<<" expr
  383     | expr . ">>>" expr
  384     | expr . '+' expr
  385     | expr . '-' expr
  386     | expr . '*' expr
  387     | expr . '/' expr
  388     | expr . '%' expr
  389     | expr . '<' expr
  390     | expr . '>' expr
  391     | expr . "==" expr
  392     | expr . "!=" expr
  393     | expr . "<=" expr
  394     | expr . ">=" expr
  395     | expr . '&' expr
  396     | expr . '|' expr
  397     | expr . '^' expr
  398     | expr . "&&" expr
  399     | expr . "||" expr
  400     | expr . "^^" expr
  401     | expr . ".." expr
  404     | expr . "++"
  405     | expr . "--"
  407     | expr . '[' expr ']'
  408     | expr . '.' '[' expr ']'
  409     | expr . "?[" expr ']'
  410     | expr . '.' "?[" expr ']'
  411     | expr . "?." "name"
  412     | expr . '.' "?." "name"
  421     | expr . "??" expr
  422     | expr . '?' expr ':' expr
  425     | expr . "is" "type" '<' $@19 type_declaration_no_options '>' $@20
  426     | expr . "is" basic_type_declaration
  427     | expr . "is" "name"
  428     | expr . "as" "name"
  431     | expr . "as" "type" '<' $@21 type_declaration '>' $@22
  432     | expr . "as" basic_type_declaration
  433     | expr . '?' "as" "name"
  436     | expr . '?' "as" "type" '<' $@23 type_declaration '>' $@24
  437     | expr . '?' "as" basic_type_declaration
  445     | expr . "<|" expr
  446     | expr . "|>" expr
  447     | expr . "|>" basic_type_declaration
  458 expr_mtag: expr . '.' "$f" '(' expr ')'
  459          | expr . "?." "$f" '(' expr ')'
  460          | expr . '.' '.' "$f" '(' expr ')'
  461          | expr . '.' "?." "$f" '(' expr ')'
  462          | expr . "as" "$f" '(' expr ')'
  463          | expr . '?' "as" "$f" '(' expr ')'
  464          | expr . "is" "$f" '(' expr ')'
  509 variable_declaration: variable_name_with_pos_list copy_or_move expr .

    "is"   shift, and go to state 637
    "as"   shift, and go to state 638
    "<<"   shift, and go to state 639
    ">>"   shift, and go to state 640
    "++"   shift, and go to state 641
    "--"   shift, and go to state 642
    "<="   shift, and go to state 643
    ">="   shift, and go to state 644
    "=="   shift, and go to state 645
    "!="   shift, and go to state 646
    "->"   shift, and go to state 647
    "??"   shift, and go to state 648
    "?."   shift, and go to state 649
    "?["   shift, and go to state 650
    "<|"   shift, and go to state 651
    "|>"   shift, and go to state 652
    "<<<"  shift, and go to state 653
    ">>>"  shift, and go to state 654
    "&&"   shift, and go to state 655
    "||"   shift, and go to state 656
    "^^"   shift, and go to state 657
    ".."   shift, and go to state 658
    '?'    shift, and go to state 659
    '|'    shift, and go to state 660
    '^'    shift, and go to state 661
    '&'    shift, and go to state 662
    '<'    shift, and go to state 663
    '>'    shift, and go to state 664
    '-'    shift, and go to state 665
    '+'    shift, and go to state 666
    '*'    shift, and go to state 667
    '/'    shift, and go to state 668
    '%'    shift, and go to state 669
    '.'    shift, and go to state 670
    '['    shift, and go to state 671

    $default  reduce using rule 509 (variable_declaration)


State 1078

   73 expression_while_loop: "while" '(' expr ')' . expression_block

    "begin of code block"  shift, and go to state 323

    expression_block  go to state 1183


State 1079

   71 expression_for_loop: "for" '(' variable_name_with_pos_list "in" . expr_list ')' expression_block

    "struct"                          shift, and go to state 402
    "class"                           shift, and go to state 403
    "true"                            shift, and go to state 404
    "false"                           shift, and go to state 405
    "new"                             shift, and go to state 406
    "typeinfo"                        shift, and go to state 407
    "type"                            shift, and go to state 408
    "array"                           shift, and go to state 409
    "null"                            shift, and go to state 410
    "table"                           shift, and go to state 411
    "deref"                           shift, and go to state 412
    "cast"                            shift, and go to state 413
    "upcast"                          shift, and go to state 414
    "addr"                            shift, and go to state 415
    "reinterpret"                     shift, and go to state 416
    "unsafe"                          shift, and go to state 417
    "fixed_array"                     shift, and go to state 418
    "default"                         shift, and go to state 419
    "bool"                            shift, and go to state 222
    "void"                            shift, and go to state 223
    "string"                          shift, and go to state 224
    "int"                             shift, and go to state 226
    "int2"                            shift, and go to state 227
    "int3"                            shift, and go to state 228
    "int4"                            shift, and go to state 229
    "uint"                            shift, and go to state 230
    "bitfield"                        shift, and go to state 420
    "uint2"                           shift, and go to state 232
    "uint3"                           shift, and go to state 233
    "uint4"                           shift, and go to state 234
    "float"                           shift, and go to state 235
    "float2"                          shift, and go to state 236
    "float3"                          shift, and go to state 237
    "float4"                          shift, and go to state 238
    "range"                           shift, and go to state 239
    "urange"                          shift, and go to state 240
    "range64"                         shift, and go to state 241
    "urange64"                        shift, and go to state 242
    "int64"                           shift, and go to state 244
    "uint64"                          shift, and go to state 245
    "double"                          shift, and go to state 246
    "int8"                            shift, and go to state 249
    "uint8"                           shift, and go to state 250
    "int16"                           shift, and go to state 251
    "uint16"                          shift, and go to state 252
    "tuple"                           shift, and go to state 421
    "variant"                         shift, and go to state 422
    "generator"                       shift, and go to state 423
    "++"                              shift, and go to state 424
    "--"                              shift, and go to state 425
    "::"                              shift, and go to state 55
    "$$"                              shift, and go to state 426
    "$i"                              shift, and go to state 427
    "$v"                              shift, and go to state 428
    "$b"                              shift, and go to state 429
    "$a"                              shift, and go to state 430
    "$c"                              shift, and go to state 431
    "..."                             shift, and go to state 432
    "integer constant"                shift, and go to state 433
    "long integer constant"           shift, and go to state 434
    "unsigned integer constant"       shift, and go to state 435
    "unsigned long integer constant"  shift, and go to state 436
    "unsigned int8 constant"          shift, and go to state 437
    "floating point constant"         shift, and go to state 438
    "double constant"                 shift, and go to state 439
    "name"                            shift, and go to state 56
    "start of the string"             shift, and go to state 440
    "begin of code block"             shift, and go to state 441
    '-'                               shift, and go to state 442
    '+'                               shift, and go to state 443
    '*'                               shift, and go to state 444
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 445
    '!'                               shift, and go to state 446
    '['                               shift, and go to state 447
    '('                               shift, and go to state 448
    '$'                               shift, and go to state 449
    '@'                               shift, and go to state 450

    string_builder          go to state 451
    expr_reader             go to state 452
    expr_call_pipe          go to state 453
    name_in_namespace       go to state 454
    expr_new                go to state 455
    expr_cast               go to state 456
    expr_type_decl          go to state 457
    expr_type_info          go to state 458
    expr_list               go to state 1184
    block_or_lambda         go to state 459
    expr_full_block         go to state 460
    expr_numeric_const      go to state 461
    expr_named_call         go to state 462
    expr_method_call        go to state 463
    func_addr_expr          go to state 464
    expr_field              go to state 465
    expr_call               go to state 466
    expr                    go to state 628
    expr_mtag               go to state 468
    basic_type_declaration  go to state 469
    make_decl               go to state 470
    make_struct_decl        go to state 471
    make_tuple_call         go to state 472
    make_dim_decl           go to state 473
    make_table_decl         go to state 474
    array_comprehension     go to state 475


State 1080

  262 expression_try_catch: "try" expression_block "recover" expression_block .

    $default  reduce using rule 262 (expression_try_catch)


State 1081

   74 expression_with: "with" '(' expr ')' . expression_block

    "begin of code block"  shift, and go to state 323

    expression_block  go to state 1185


State 1082

   75 expression_with_alias: "assume" "name" '=' expr .
  339 expr_method_call: expr . "->" "name" '(' ')'
  340                 | expr . "->" "name" '(' expr_list ')'
  350 expr_field: expr . '.' "name"
  351           | expr . '.' '.' "name"
  352           | expr . '.' "name" '(' ')'
  353           | expr . '.' "name" '(' expr_list ')'
  354           | expr . '.' basic_type_declaration '(' ')'
  355           | expr . '.' basic_type_declaration '(' expr_list ')'
  358           | expr . '.' $@17 error $@18
  380 expr: expr . "<<" expr
  381     | expr . ">>" expr
  382     | expr . "<<<" expr
  383     | expr . ">>>" expr
  384     | expr . '+' expr
  385     | expr . '-' expr
  386     | expr . '*' expr
  387     | expr . '/' expr
  388     | expr . '%' expr
  389     | expr . '<' expr
  390     | expr . '>' expr
  391     | expr . "==" expr
  392     | expr . "!=" expr
  393     | expr . "<=" expr
  394     | expr . ">=" expr
  395     | expr . '&' expr
  396     | expr . '|' expr
  397     | expr . '^' expr
  398     | expr . "&&" expr
  399     | expr . "||" expr
  400     | expr . "^^" expr
  401     | expr . ".." expr
  404     | expr . "++"
  405     | expr . "--"
  407     | expr . '[' expr ']'
  408     | expr . '.' '[' expr ']'
  409     | expr . "?[" expr ']'
  410     | expr . '.' "?[" expr ']'
  411     | expr . "?." "name"
  412     | expr . '.' "?." "name"
  421     | expr . "??" expr
  422     | expr . '?' expr ':' expr
  425     | expr . "is" "type" '<' $@19 type_declaration_no_options '>' $@20
  426     | expr . "is" basic_type_declaration
  427     | expr . "is" "name"
  428     | expr . "as" "name"
  431     | expr . "as" "type" '<' $@21 type_declaration '>' $@22
  432     | expr . "as" basic_type_declaration
  433     | expr . '?' "as" "name"
  436     | expr . '?' "as" "type" '<' $@23 type_declaration '>' $@24
  437     | expr . '?' "as" basic_type_declaration
  445     | expr . "<|" expr
  446     | expr . "|>" expr
  447     | expr . "|>" basic_type_declaration
  458 expr_mtag: expr . '.' "$f" '(' expr ')'
  459          | expr . "?." "$f" '(' expr ')'
  460          | expr . '.' '.' "$f" '(' expr ')'
  461          | expr . '.' "?." "$f" '(' expr ')'
  462          | expr . "as" "$f" '(' expr ')'
  463          | expr . '?' "as" "$f" '(' expr ')'
  464          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 637
    "as"   shift, and go to state 638
    "<<"   shift, and go to state 639
    ">>"   shift, and go to state 640
    "++"   shift, and go to state 641
    "--"   shift, and go to state 642
    "<="   shift, and go to state 643
    ">="   shift, and go to state 644
    "=="   shift, and go to state 645
    "!="   shift, and go to state 646
    "->"   shift, and go to state 647
    "??"   shift, and go to state 648
    "?."   shift, and go to state 649
    "?["   shift, and go to state 650
    "<|"   shift, and go to state 651
    "|>"   shift, and go to state 652
    "<<<"  shift, and go to state 653
    ">>>"  shift, and go to state 654
    "&&"   shift, and go to state 655
    "||"   shift, and go to state 656
    "^^"   shift, and go to state 657
    ".."   shift, and go to state 658
    '?'    shift, and go to state 659
    '|'    shift, and go to state 660
    '^'    shift, and go to state 661
    '&'    shift, and go to state 662
    '<'    shift, and go to state 663
    '>'    shift, and go to state 664
    '-'    shift, and go to state 665
    '+'    shift, and go to state 666
    '*'    shift, and go to state 667
    '/'    shift, and go to state 668
    '%'    shift, and go to state 669
    '.'    shift, and go to state 670
    '['    shift, and go to state 671

    $default  reduce using rule 75 (expression_with_alias)


State 1083

  213 expression_block: "begin of code block" expressions "end of code block" "finally" "begin of code block" expressions . "end of code block"
  234 expressions: expressions . expression_any
  235            | expressions . error

    error                             shift, and go to state 524
    "struct"                          shift, and go to state 402
    "class"                           shift, and go to state 403
    "let"                             shift, and go to state 3
    "while"                           shift, and go to state 525
    "if"                              shift, and go to state 526
    "static_if"                       shift, and go to state 527
    "for"                             shift, and go to state 528
    "true"                            shift, and go to state 404
    "false"                           shift, and go to state 405
    "new"                             shift, and go to state 406
    "typeinfo"                        shift, and go to state 407
    "type"                            shift, and go to state 408
    "array"                           shift, and go to state 409
    "return"                          shift, and go to state 529
    "null"                            shift, and go to state 410
    "break"                           shift, and go to state 530
    "try"                             shift, and go to state 531
    "table"                           shift, and go to state 411
    "delete"                          shift, and go to state 532
    "deref"                           shift, and go to state 412
    "with"                            shift, and go to state 533
    "assume"                          shift, and go to state 534
    "cast"                            shift, and go to state 413
    "upcast"                          shift, and go to state 414
    "var"                             shift, and go to state 8
    "addr"                            shift, and go to state 415
    "continue"                        shift, and go to state 535
    "pass"                            shift, and go to state 536
    "reinterpret"                     shift, and go to state 416
    "label"                           shift, and go to state 537
    "goto"                            shift, and go to state 538
    "unsafe"                          shift, and go to state 539
    "fixed_array"                     shift, and go to state 418
    "default"                         shift, and go to state 419
    "bool"                            shift, and go to state 222
    "void"                            shift, and go to state 223
    "string"                          shift, and go to state 224
    "int"                             shift, and go to state 226
    "int2"                            shift, and go to state 227
    "int3"                            shift, and go to state 228
    "int4"                            shift, and go to state 229
    "uint"                            shift, and go to state 230
    "bitfield"                        shift, and go to state 420
    "uint2"                           shift, and go to state 232
    "uint3"                           shift, and go to state 233
    "uint4"                           shift, and go to state 234
    "float"                           shift, and go to state 235
    "float2"                          shift, and go to state 236
    "float3"                          shift, and go to state 237
    "float4"                          shift, and go to state 238
    "range"                           shift, and go to state 239
    "urange"                          shift, and go to state 240
    "range64"                         shift, and go to state 241
    "urange64"                        shift, and go to state 242
    "int64"                           shift, and go to state 244
    "uint64"                          shift, and go to state 245
    "double"                          shift, and go to state 246
    "int8"                            shift, and go to state 249
    "uint8"                           shift, and go to state 250
    "int16"                           shift, and go to state 251
    "uint16"                          shift, and go to state 252
    "tuple"                           shift, and go to state 421
    "variant"                         shift, and go to state 422
    "generator"                       shift, and go to state 423
    "yield"                           shift, and go to state 540
    "++"                              shift, and go to state 424
    "--"                              shift, and go to state 425
    "::"                              shift, and go to state 55
    "$$"                              shift, and go to state 426
    "$i"                              shift, and go to state 427
    "$v"                              shift, and go to state 428
    "$b"                              shift, and go to state 429
    "$a"                              shift, and go to state 430
    "$c"                              shift, and go to state 431
    "..."                             shift, and go to state 432
    "integer constant"                shift, and go to state 433
    "long integer constant"           shift, and go to state 434
    "unsigned integer constant"       shift, and go to state 435
    "unsigned long integer constant"  shift, and go to state 436
    "unsigned int8 constant"          shift, and go to state 437
    "floating point constant"         shift, and go to state 438
    "double constant"                 shift, and go to state 439
    "name"                            shift, and go to state 56
    "start of the string"             shift, and go to state 440
    "begin of code block"             shift, and go to state 441
    "end of code block"               shift, and go to state 1186
    "end of expression"               shift, and go to state 542
    '-'                               shift, and go to state 442
    '+'                               shift, and go to state 443
    '*'                               shift, and go to state 444
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 445
    '!'                               shift, and go to state 446
    '['                               shift, and go to state 447
    '('                               shift, and go to state 448
    '$'                               shift, and go to state 449
    '@'                               shift, and go to state 450

    string_builder           go to state 451
    expr_reader              go to state 452
    expression_label         go to state 543
    expression_goto          go to state 544
    if_or_static_if          go to state 545
    expression_if_one_liner  go to state 546
    expression_if_then_else  go to state 547
    expression_for_loop      go to state 548
    expression_unsafe        go to state 549
    expression_while_loop    go to state 550
    expression_with          go to state 551
    expression_with_alias    go to state 552
    expr_call_pipe           go to state 453
    expression_any           go to state 553
    name_in_namespace        go to state 454
    expression_delete        go to state 554
    expr_new                 go to state 455
    expression_break         go to state 555
    expression_continue      go to state 556
    expression_return        go to state 557
    expression_yield         go to state 558
    expression_try_catch     go to state 559
    kwd_let                  go to state 560
    expression_let           go to state 561
    expr_cast                go to state 456
    expr_type_decl           go to state 457
    expr_type_info           go to state 458
    block_or_lambda          go to state 459
    expr_full_block          go to state 460
    expr_numeric_const       go to state 461
    expr_assign              go to state 562
    expr_named_call          go to state 462
    expr_method_call         go to state 463
    func_addr_expr           go to state 464
    expr_field               go to state 465
    expr_call                go to state 466
    expr                     go to state 563
    expr_mtag                go to state 468
    basic_type_declaration   go to state 469
    make_decl                go to state 470
    make_struct_decl         go to state 471
    make_tuple_call          go to state 472
    make_dim_decl            go to state 473
    make_table_decl          go to state 474
    array_comprehension      go to state 475


State 1084

   69 expression_if_then_else: if_or_static_if '(' expr ')' . expression_block expression_else

    "begin of code block"  shift, and go to state 323

    expression_block  go to state 1187


State 1085

   70 expression_if_then_else: expression_if_one_liner "if" '(' expr . ')' expression_else_one_liner "end of expression"
  339 expr_method_call: expr . "->" "name" '(' ')'
  340                 | expr . "->" "name" '(' expr_list ')'
  350 expr_field: expr . '.' "name"
  351           | expr . '.' '.' "name"
  352           | expr . '.' "name" '(' ')'
  353           | expr . '.' "name" '(' expr_list ')'
  354           | expr . '.' basic_type_declaration '(' ')'
  355           | expr . '.' basic_type_declaration '(' expr_list ')'
  358           | expr . '.' $@17 error $@18
  380 expr: expr . "<<" expr
  381     | expr . ">>" expr
  382     | expr . "<<<" expr
  383     | expr . ">>>" expr
  384     | expr . '+' expr
  385     | expr . '-' expr
  386     | expr . '*' expr
  387     | expr . '/' expr
  388     | expr . '%' expr
  389     | expr . '<' expr
  390     | expr . '>' expr
  391     | expr . "==" expr
  392     | expr . "!=" expr
  393     | expr . "<=" expr
  394     | expr . ">=" expr
  395     | expr . '&' expr
  396     | expr . '|' expr
  397     | expr . '^' expr
  398     | expr . "&&" expr
  399     | expr . "||" expr
  400     | expr . "^^" expr
  401     | expr . ".." expr
  404     | expr . "++"
  405     | expr . "--"
  407     | expr . '[' expr ']'
  408     | expr . '.' '[' expr ']'
  409     | expr . "?[" expr ']'
  410     | expr . '.' "?[" expr ']'
  411     | expr . "?." "name"
  412     | expr . '.' "?." "name"
  421     | expr . "??" expr
  422     | expr . '?' expr ':' expr
  425     | expr . "is" "type" '<' $@19 type_declaration_no_options '>' $@20
  426     | expr . "is" basic_type_declaration
  427     | expr . "is" "name"
  428     | expr . "as" "name"
  431     | expr . "as" "type" '<' $@21 type_declaration '>' $@22
  432     | expr . "as" basic_type_declaration
  433     | expr . '?' "as" "name"
  436     | expr . '?' "as" "type" '<' $@23 type_declaration '>' $@24
  437     | expr . '?' "as" basic_type_declaration
  445     | expr . "<|" expr
  446     | expr . "|>" expr
  447     | expr . "|>" basic_type_declaration
  458 expr_mtag: expr . '.' "$f" '(' expr ')'
  459          | expr . "?." "$f" '(' expr ')'
  460          | expr . '.' '.' "$f" '(' expr ')'
  461          | expr . '.' "?." "$f" '(' expr ')'
  462          | expr . "as" "$f" '(' expr ')'
  463          | expr . '?' "as" "$f" '(' expr ')'
  464          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 637
    "as"   shift, and go to state 638
    "<<"   shift, and go to state 639
    ">>"   shift, and go to state 640
    "++"   shift, and go to state 641
    "--"   shift, and go to state 642
    "<="   shift, and go to state 643
    ">="   shift, and go to state 644
    "=="   shift, and go to state 645
    "!="   shift, and go to state 646
    "->"   shift, and go to state 647
    "??"   shift, and go to state 648
    "?."   shift, and go to state 649
    "?["   shift, and go to state 650
    "<|"   shift, and go to state 651
    "|>"   shift, and go to state 652
    "<<<"  shift, and go to state 653
    ">>>"  shift, and go to state 654
    "&&"   shift, and go to state 655
    "||"   shift, and go to state 656
    "^^"   shift, and go to state 657
    ".."   shift, and go to state 658
    '?'    shift, and go to state 659
    '|'    shift, and go to state 660
    '^'    shift, and go to state 661
    '&'    shift, and go to state 662
    '<'    shift, and go to state 663
    '>'    shift, and go to state 664
    '-'    shift, and go to state 665
    '+'    shift, and go to state 666
    '*'    shift, and go to state 667
    '/'    shift, and go to state 668
    '%'    shift, and go to state 669
    '.'    shift, and go to state 670
    '['    shift, and go to state 671
    ')'    shift, and go to state 1188


State 1086

  516 let_variable_name_with_pos_list: "$i" '(' . expr ')'

    "struct"                          shift, and go to state 402
    "class"                           shift, and go to state 403
    "true"                            shift, and go to state 404
    "false"                           shift, and go to state 405
    "new"                             shift, and go to state 406
    "typeinfo"                        shift, and go to state 407
    "type"                            shift, and go to state 408
    "array"                           shift, and go to state 409
    "null"                            shift, and go to state 410
    "table"                           shift, and go to state 411
    "deref"                           shift, and go to state 412
    "cast"                            shift, and go to state 413
    "upcast"                          shift, and go to state 414
    "addr"                            shift, and go to state 415
    "reinterpret"                     shift, and go to state 416
    "unsafe"                          shift, and go to state 417
    "fixed_array"                     shift, and go to state 418
    "default"                         shift, and go to state 419
    "bool"                            shift, and go to state 222
    "void"                            shift, and go to state 223
    "string"                          shift, and go to state 224
    "int"                             shift, and go to state 226
    "int2"                            shift, and go to state 227
    "int3"                            shift, and go to state 228
    "int4"                            shift, and go to state 229
    "uint"                            shift, and go to state 230
    "bitfield"                        shift, and go to state 420
    "uint2"                           shift, and go to state 232
    "uint3"                           shift, and go to state 233
    "uint4"                           shift, and go to state 234
    "float"                           shift, and go to state 235
    "float2"                          shift, and go to state 236
    "float3"                          shift, and go to state 237
    "float4"                          shift, and go to state 238
    "range"                           shift, and go to state 239
    "urange"                          shift, and go to state 240
    "range64"                         shift, and go to state 241
    "urange64"                        shift, and go to state 242
    "int64"                           shift, and go to state 244
    "uint64"                          shift, and go to state 245
    "double"                          shift, and go to state 246
    "int8"                            shift, and go to state 249
    "uint8"                           shift, and go to state 250
    "int16"                           shift, and go to state 251
    "uint16"                          shift, and go to state 252
    "tuple"                           shift, and go to state 421
    "variant"                         shift, and go to state 422
    "generator"                       shift, and go to state 423
    "++"                              shift, and go to state 424
    "--"                              shift, and go to state 425
    "::"                              shift, and go to state 55
    "$$"                              shift, and go to state 426
    "$i"                              shift, and go to state 427
    "$v"                              shift, and go to state 428
    "$b"                              shift, and go to state 429
    "$a"                              shift, and go to state 430
    "$c"                              shift, and go to state 431
    "..."                             shift, and go to state 432
    "integer constant"                shift, and go to state 433
    "long integer constant"           shift, and go to state 434
    "unsigned integer constant"       shift, and go to state 435
    "unsigned long integer constant"  shift, and go to state 436
    "unsigned int8 constant"          shift, and go to state 437
    "floating point constant"         shift, and go to state 438
    "double constant"                 shift, and go to state 439
    "name"                            shift, and go to state 56
    "start of the string"             shift, and go to state 440
    "begin of code block"             shift, and go to state 441
    '-'                               shift, and go to state 442
    '+'                               shift, and go to state 443
    '*'                               shift, and go to state 444
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 445
    '!'                               shift, and go to state 446
    '['                               shift, and go to state 447
    '('                               shift, and go to state 448
    '$'                               shift, and go to state 449
    '@'                               shift, and go to state 450

    string_builder          go to state 451
    expr_reader             go to state 452
    expr_call_pipe          go to state 453
    name_in_namespace       go to state 454
    expr_new                go to state 455
    expr_cast               go to state 456
    expr_type_decl          go to state 457
    expr_type_info          go to state 458
    block_or_lambda         go to state 459
    expr_full_block         go to state 460
    expr_numeric_const      go to state 461
    expr_named_call         go to state 462
    expr_method_call        go to state 463
    func_addr_expr          go to state 464
    expr_field              go to state 465
    expr_call               go to state 466
    expr                    go to state 1189
    expr_mtag               go to state 468
    basic_type_declaration  go to state 469
    make_decl               go to state 470
    make_struct_decl        go to state 471
    make_tuple_call         go to state 472
    make_dim_decl           go to state 473
    make_table_decl         go to state 474
    array_comprehension     go to state 475


State 1087

  517 let_variable_name_with_pos_list: "name" "aka" . "name"

    "name"  shift, and go to state 1190


State 1088

  270 tuple_expansion: "name" .

    $default  reduce using rule 270 (tuple_expansion)


State 1089

  271 tuple_expansion: tuple_expansion . ',' "name"
  272 tuple_expansion_variable_declaration: '(' tuple_expansion . ')' ':' type_declaration_no_options copy_or_move_or_clone expr "end of expression"
  273                                     | '(' tuple_expansion . ')' optional_ref copy_or_move_or_clone expr "end of expression"

    ','  shift, and go to state 1191
    ')'  shift, and go to state 1192


State 1090

  518 let_variable_name_with_pos_list: let_variable_name_with_pos_list ',' . "name"
  519                                | let_variable_name_with_pos_list ',' . "name" "aka" "name"

    "name"  shift, and go to state 1193


State 1091

  522 let_variable_declaration: let_variable_name_with_pos_list ':' . type_declaration_no_options "end of expression"
  523                         | let_variable_name_with_pos_list ':' . type_declaration_no_options copy_or_move_or_clone expr "end of expression"

    "type"       shift, and go to state 216
    "array"      shift, and go to state 217
    "table"      shift, and go to state 218
    "typedecl"   shift, and go to state 219
    "iterator"   shift, and go to state 220
    "smart_ptr"  shift, and go to state 221
    "bool"       shift, and go to state 222
    "void"       shift, and go to state 223
    "string"     shift, and go to state 224
    "auto"       shift, and go to state 225
    "int"        shift, and go to state 226
    "int2"       shift, and go to state 227
    "int3"       shift, and go to state 228
    "int4"       shift, and go to state 229
    "uint"       shift, and go to state 230
    "bitfield"   shift, and go to state 231
    "uint2"      shift, and go to state 232
    "uint3"      shift, and go to state 233
    "uint4"      shift, and go to state 234
    "float"      shift, and go to state 235
    "float2"     shift, and go to state 236
    "float3"     shift, and go to state 237
    "float4"     shift, and go to state 238
    "range"      shift, and go to state 239
    "urange"     shift, and go to state 240
    "range64"    shift, and go to state 241
    "urange64"   shift, and go to state 242
    "block"      shift, and go to state 243
    "int64"      shift, and go to state 244
    "uint64"     shift, and go to state 245
    "double"     shift, and go to state 246
    "function"   shift, and go to state 247
    "lambda"     shift, and go to state 248
    "int8"       shift, and go to state 249
    "uint8"      shift, and go to state 250
    "int16"      shift, and go to state 251
    "uint16"     shift, and go to state 252
    "tuple"      shift, and go to state 253
    "variant"    shift, and go to state 254
    "::"         shift, and go to state 55
    "$t"         shift, and go to state 255
    "name"       shift, and go to state 56
    '$'          shift, and go to state 256

    name_in_namespace                   go to state 257
    basic_type_declaration              go to state 258
    structure_type_declaration          go to state 259
    auto_type_declaration               go to state 260
    bitfield_type_declaration           go to state 261
    type_declaration_no_options         go to state 1194
    type_declaration_no_options_no_dim  go to state 263


State 1092

  524 let_variable_declaration: let_variable_name_with_pos_list optional_ref . copy_or_move_or_clone expr "end of expression"

    "<-"  shift, and go to state 571
    ":="  shift, and go to state 572
    '='   shift, and go to state 573

    copy_or_move_or_clone  go to state 1195


State 1093

  554 enum_declaration: optional_annotation_list "enum" optional_public_or_private_enum enum_name optional_enum_basic_type_declaration "begin of code block" $@30 enum_list optional_comma $@31 "end of code block" .

    $default  reduce using rule 554 (enum_declaration)


State 1094

  474 optional_public_or_private_member_variable: "public" .

    $default  reduce using rule 474 (optional_public_or_private_member_variable)


State 1095

  475 optional_public_or_private_member_variable: "private" .

    $default  reduce using rule 475 (optional_public_or_private_member_variable)


State 1096

  483 struct_variable_declaration_list: struct_variable_declaration_list optional_annotation_list "def" optional_public_or_private_member_variable . "abstract" optional_constant $@26 function_declaration_header "end of expression"
  485                                 | struct_variable_declaration_list optional_annotation_list "def" optional_public_or_private_member_variable . optional_static_member_variable optional_override optional_constant $@27 function_declaration_header expression_block

    "abstract"  shift, and go to state 1196
    "static"    shift, and go to state 1097

    $default  reduce using rule 476 (optional_static_member_variable)

    optional_static_member_variable  go to state 1197


State 1097

  477 optional_static_member_variable: "static" .

    $default  reduce using rule 477 (optional_static_member_variable)


State 1098

  478 structure_variable_declaration: optional_field_annotation optional_static_member_variable . optional_override optional_public_or_private_member_variable variable_declaration

    "override"  shift, and go to state 1198
    "sealed"    shift, and go to state 1199

    $default  reduce using rule 468 (optional_override)

    optional_override  go to state 1200


State 1099

  481 struct_variable_declaration_list: struct_variable_declaration_list $@25 structure_variable_declaration "end of expression" .

    $default  reduce using rule 481 (struct_variable_declaration_list)


State 1100

  526 global_let_variable_declaration: global_let_variable_name_with_pos_list ':' type_declaration_no_options copy_or_move_or_clone expr "end of expression" .

    $default  reduce using rule 526 (global_let_variable_declaration)


State 1101

  735 make_struct_decl: "struct" '<' $@72 type_declaration_no_options '>' . $@73 '(' use_initializer optional_make_struct_dim_decl ')'

    $default  reduce using rule 734 ($@73)

    $@73  go to state 1201


State 1102

  738 make_struct_decl: "class" '<' $@74 type_declaration_no_options '>' . $@75 '(' use_initializer optional_make_struct_dim_decl ')'

    $default  reduce using rule 737 ($@75)

    $@75  go to state 1202


State 1103

  249 new_type_declaration: '<' $@3 type_declaration '>' . $@4

    $default  reduce using rule 248 ($@4)

    $@4  go to state 1203


State 1104

  252 expr_new: "new" new_type_declaration '(' use_initializer ')' .

    $default  reduce using rule 252 (expr_new)


State 1105

  253 expr_new: "new" new_type_declaration '(' use_initializer make_struct_single . ')'

    ')'  shift, and go to state 1204


State 1106

  251 expr_new: "new" structure_type_declaration '(' optional_expr_list ')' .

    $default  reduce using rule 251 (expr_new)


State 1107

  289 expr_type_info: "typeinfo" name_in_namespace '<' "name" '>' . '(' expr ')'

    '('  shift, and go to state 1205


State 1108

  290 expr_type_info: "typeinfo" name_in_namespace '<' "name" c_or_s . "name" '>' '(' expr ')'

    "name"  shift, and go to state 1206


State 1109

  288 expr_type_info: "typeinfo" name_in_namespace '(' expr ')' .

    $default  reduce using rule 288 (expr_type_info)


State 1110

  287 expr_type_decl: "type" '<' $@11 type_declaration '>' . $@12

    $default  reduce using rule 286 ($@12)

    $@12  go to state 1207


State 1111

  754 make_dim_decl: "array" "struct" '<' $@82 type_declaration_no_options . '>' $@83 '(' use_initializer optional_make_struct_dim_decl ')'

    '>'  shift, and go to state 1208


State 1112

  757 make_dim_decl: "array" "tuple" '<' $@84 type_declaration_no_options . '>' $@85 '(' use_initializer optional_make_struct_dim_decl ')'

    '>'  shift, and go to state 1209


State 1113

  760 make_dim_decl: "array" "variant" '<' $@86 type_declaration_no_options . '>' $@87 '(' make_variant_dim ')'

    '>'  shift, and go to state 1210


State 1114

  764 make_dim_decl: "array" '<' $@88 type_declaration_no_options '>' . $@89 '(' optional_expr_list ')'

    $default  reduce using rule 763 ($@89)

    $@89  go to state 1211


State 1115

  761 make_dim_decl: "array" '(' expr_list optional_comma ')' .

    $default  reduce using rule 761 (make_dim_decl)


State 1116

  773 make_table_decl: "table" '<' type_declaration_no_options '>' '(' . optional_expr_map_tuple_list ')'

    "struct"                          shift, and go to state 402
    "class"                           shift, and go to state 403
    "true"                            shift, and go to state 404
    "false"                           shift, and go to state 405
    "new"                             shift, and go to state 406
    "typeinfo"                        shift, and go to state 407
    "type"                            shift, and go to state 408
    "array"                           shift, and go to state 409
    "null"                            shift, and go to state 410
    "table"                           shift, and go to state 411
    "deref"                           shift, and go to state 412
    "cast"                            shift, and go to state 413
    "upcast"                          shift, and go to state 414
    "addr"                            shift, and go to state 415
    "reinterpret"                     shift, and go to state 416
    "unsafe"                          shift, and go to state 417
    "fixed_array"                     shift, and go to state 418
    "default"                         shift, and go to state 419
    "bool"                            shift, and go to state 222
    "void"                            shift, and go to state 223
    "string"                          shift, and go to state 224
    "int"                             shift, and go to state 226
    "int2"                            shift, and go to state 227
    "int3"                            shift, and go to state 228
    "int4"                            shift, and go to state 229
    "uint"                            shift, and go to state 230
    "bitfield"                        shift, and go to state 420
    "uint2"                           shift, and go to state 232
    "uint3"                           shift, and go to state 233
    "uint4"                           shift, and go to state 234
    "float"                           shift, and go to state 235
    "float2"                          shift, and go to state 236
    "float3"                          shift, and go to state 237
    "float4"                          shift, and go to state 238
    "range"                           shift, and go to state 239
    "urange"                          shift, and go to state 240
    "range64"                         shift, and go to state 241
    "urange64"                        shift, and go to state 242
    "int64"                           shift, and go to state 244
    "uint64"                          shift, and go to state 245
    "double"                          shift, and go to state 246
    "int8"                            shift, and go to state 249
    "uint8"                           shift, and go to state 250
    "int16"                           shift, and go to state 251
    "uint16"                          shift, and go to state 252
    "tuple"                           shift, and go to state 421
    "variant"                         shift, and go to state 422
    "generator"                       shift, and go to state 423
    "++"                              shift, and go to state 424
    "--"                              shift, and go to state 425
    "::"                              shift, and go to state 55
    "$$"                              shift, and go to state 426
    "$i"                              shift, and go to state 427
    "$v"                              shift, and go to state 428
    "$b"                              shift, and go to state 429
    "$a"                              shift, and go to state 430
    "$c"                              shift, and go to state 431
    "..."                             shift, and go to state 432
    "integer constant"                shift, and go to state 433
    "long integer constant"           shift, and go to state 434
    "unsigned integer constant"       shift, and go to state 435
    "unsigned long integer constant"  shift, and go to state 436
    "unsigned int8 constant"          shift, and go to state 437
    "floating point constant"         shift, and go to state 438
    "double constant"                 shift, and go to state 439
    "name"                            shift, and go to state 56
    "start of the string"             shift, and go to state 440
    "begin of code block"             shift, and go to state 441
    '-'                               shift, and go to state 442
    '+'                               shift, and go to state 443
    '*'                               shift, and go to state 444
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 445
    '!'                               shift, and go to state 446
    '['                               shift, and go to state 447
    '('                               shift, and go to state 448
    '$'                               shift, and go to state 449
    '@'                               shift, and go to state 450

    $default  reduce using rule 238 (optional_expr_map_tuple_list)

    string_builder                go to state 451
    expr_reader                   go to state 452
    expr_call_pipe                go to state 453
    optional_expr_map_tuple_list  go to state 1212
    name_in_namespace             go to state 454
    expr_new                      go to state 455
    expr_cast                     go to state 456
    expr_type_decl                go to state 457
    expr_type_info                go to state 458
    block_or_lambda               go to state 459
    expr_full_block               go to state 460
    expr_numeric_const            go to state 461
    expr_named_call               go to state 462
    expr_method_call              go to state 463
    func_addr_expr                go to state 464
    expr_field                    go to state 465
    expr_call                     go to state 466
    expr                          go to state 617
    expr_mtag                     go to state 468
    basic_type_declaration        go to state 469
    make_decl                     go to state 470
    make_struct_decl              go to state 471
    make_map_tuple                go to state 618
    make_tuple_call               go to state 472
    make_dim_decl                 go to state 473
    expr_map_tuple_list           go to state 1213
    make_table_decl               go to state 474
    array_comprehension           go to state 475


State 1117

  774 make_table_decl: "table" '<' type_declaration_no_options c_or_s type_declaration_no_options . '>' '(' optional_expr_map_tuple_list ')'

    '>'  shift, and go to state 1214


State 1118

  772 make_table_decl: "table" '(' expr_map_tuple_list optional_comma ')' .

    $default  reduce using rule 772 (make_table_decl)


State 1119

  278 expr_cast: "cast" '<' $@5 type_declaration_no_options '>' . $@6 expr

    $default  reduce using rule 277 ($@6)

    $@6  go to state 1215


State 1120

  281 expr_cast: "upcast" '<' $@7 type_declaration_no_options '>' . $@8 expr

    $default  reduce using rule 280 ($@8)

    $@8  go to state 1216


State 1121

  284 expr_cast: "reinterpret" '<' $@9 type_declaration_no_options '>' . $@10 expr

    $default  reduce using rule 283 ($@10)

    $@10  go to state 1217


State 1122

  768 make_dim_decl: "fixed_array" '<' $@90 type_declaration_no_options '>' . $@91 '(' expr_list optional_comma ')'

    $default  reduce using rule 767 ($@91)

    $@91  go to state 1218


State 1123

  765 make_dim_decl: "fixed_array" '(' expr_list optional_comma ')' .

    $default  reduce using rule 765 (make_dim_decl)


State 1124

  744 make_struct_decl: "default" '<' $@78 type_declaration_no_options '>' . $@79 use_initializer

    $default  reduce using rule 743 ($@79)

    $@79  go to state 1219


State 1125

  750 make_tuple_call: "tuple" '<' $@80 type_declaration_no_options '>' . $@81 '(' use_initializer optional_make_struct_dim_decl ')'

    $default  reduce using rule 749 ($@81)

    $@81  go to state 1220


State 1126

  747 make_tuple_call: "tuple" '(' expr_list optional_comma ')' .

    $default  reduce using rule 747 (make_tuple_call)


State 1127

  741 make_struct_decl: "variant" '<' $@76 type_declaration_no_options '>' . $@77 '(' make_variant_dim ')'

    $default  reduce using rule 740 ($@77)

    $@77  go to state 1221


State 1128

  418 expr: "generator" '<' type_declaration_no_options '>' optional_capture_list . '(' ')'
  419     | "generator" '<' type_declaration_no_options '>' optional_capture_list . '(' expr ')'
  420     | "generator" '<' type_declaration_no_options '>' optional_capture_list . expression_block

    "begin of code block"  shift, and go to state 323
    '('                    shift, and go to state 1222

    expression_block  go to state 1223


State 1129

  456 expr_mtag: "$c" '(' expr ')' '(' . ')'
  457          | "$c" '(' expr ')' '(' . expr_list ')'

    "struct"                          shift, and go to state 402
    "class"                           shift, and go to state 403
    "true"                            shift, and go to state 404
    "false"                           shift, and go to state 405
    "new"                             shift, and go to state 406
    "typeinfo"                        shift, and go to state 407
    "type"                            shift, and go to state 408
    "array"                           shift, and go to state 409
    "null"                            shift, and go to state 410
    "table"                           shift, and go to state 411
    "deref"                           shift, and go to state 412
    "cast"                            shift, and go to state 413
    "upcast"                          shift, and go to state 414
    "addr"                            shift, and go to state 415
    "reinterpret"                     shift, and go to state 416
    "unsafe"                          shift, and go to state 417
    "fixed_array"                     shift, and go to state 418
    "default"                         shift, and go to state 419
    "bool"                            shift, and go to state 222
    "void"                            shift, and go to state 223
    "string"                          shift, and go to state 224
    "int"                             shift, and go to state 226
    "int2"                            shift, and go to state 227
    "int3"                            shift, and go to state 228
    "int4"                            shift, and go to state 229
    "uint"                            shift, and go to state 230
    "bitfield"                        shift, and go to state 420
    "uint2"                           shift, and go to state 232
    "uint3"                           shift, and go to state 233
    "uint4"                           shift, and go to state 234
    "float"                           shift, and go to state 235
    "float2"                          shift, and go to state 236
    "float3"                          shift, and go to state 237
    "float4"                          shift, and go to state 238
    "range"                           shift, and go to state 239
    "urange"                          shift, and go to state 240
    "range64"                         shift, and go to state 241
    "urange64"                        shift, and go to state 242
    "int64"                           shift, and go to state 244
    "uint64"                          shift, and go to state 245
    "double"                          shift, and go to state 246
    "int8"                            shift, and go to state 249
    "uint8"                           shift, and go to state 250
    "int16"                           shift, and go to state 251
    "uint16"                          shift, and go to state 252
    "tuple"                           shift, and go to state 421
    "variant"                         shift, and go to state 422
    "generator"                       shift, and go to state 423
    "++"                              shift, and go to state 424
    "--"                              shift, and go to state 425
    "::"                              shift, and go to state 55
    "$$"                              shift, and go to state 426
    "$i"                              shift, and go to state 427
    "$v"                              shift, and go to state 428
    "$b"                              shift, and go to state 429
    "$a"                              shift, and go to state 430
    "$c"                              shift, and go to state 431
    "..."                             shift, and go to state 432
    "integer constant"                shift, and go to state 433
    "long integer constant"           shift, and go to state 434
    "unsigned integer constant"       shift, and go to state 435
    "unsigned long integer constant"  shift, and go to state 436
    "unsigned int8 constant"          shift, and go to state 437
    "floating point constant"         shift, and go to state 438
    "double constant"                 shift, and go to state 439
    "name"                            shift, and go to state 56
    "start of the string"             shift, and go to state 440
    "begin of code block"             shift, and go to state 441
    '-'                               shift, and go to state 442
    '+'                               shift, and go to state 443
    '*'                               shift, and go to state 444
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 445
    '!'                               shift, and go to state 446
    '['                               shift, and go to state 447
    '('                               shift, and go to state 448
    ')'                               shift, and go to state 1224
    '$'                               shift, and go to state 449
    '@'                               shift, and go to state 450

    string_builder          go to state 451
    expr_reader             go to state 452
    expr_call_pipe          go to state 453
    name_in_namespace       go to state 454
    expr_new                go to state 455
    expr_cast               go to state 456
    expr_type_decl          go to state 457
    expr_type_info          go to state 458
    expr_list               go to state 1225
    block_or_lambda         go to state 459
    expr_full_block         go to state 460
    expr_numeric_const      go to state 461
    expr_named_call         go to state 462
    expr_method_call        go to state 463
    func_addr_expr          go to state 464
    expr_field              go to state 465
    expr_call               go to state 466
    expr                    go to state 628
    expr_mtag               go to state 468
    basic_type_declaration  go to state 469
    make_decl               go to state 470
    make_struct_decl        go to state 471
    make_tuple_call         go to state 472
    make_dim_decl           go to state 473
    make_table_decl         go to state 474
    array_comprehension     go to state 475


State 1130

   31 string_builder_body: string_builder_body "{" expr "}" .

    $default  reduce using rule 31 (string_builder_body)


State 1131

  292 expr_list: expr_list . ',' expr
  781 array_comprehension: "begin of code block" "for" variable_name_with_pos_list "in" expr_list . "end of expression" make_map_tuple array_comprehension_where "end of code block"

    "end of expression"  shift, and go to state 1226
    ','                  shift, and go to state 1055


State 1132

  292 expr_list: expr_list . ',' expr
  779 array_comprehension: '[' "for" variable_name_with_pos_list "in" expr_list . "end of expression" expr array_comprehension_where ']'

    "end of expression"  shift, and go to state 1227
    ','                  shift, and go to state 1055


State 1133

  780 array_comprehension: '[' "iterator" "for" variable_name_with_pos_list "in" . expr_list "end of expression" expr array_comprehension_where ']'

    "struct"                          shift, and go to state 402
    "class"                           shift, and go to state 403
    "true"                            shift, and go to state 404
    "false"                           shift, and go to state 405
    "new"                             shift, and go to state 406
    "typeinfo"                        shift, and go to state 407
    "type"                            shift, and go to state 408
    "array"                           shift, and go to state 409
    "null"                            shift, and go to state 410
    "table"                           shift, and go to state 411
    "deref"                           shift, and go to state 412
    "cast"                            shift, and go to state 413
    "upcast"                          shift, and go to state 414
    "addr"                            shift, and go to state 415
    "reinterpret"                     shift, and go to state 416
    "unsafe"                          shift, and go to state 417
    "fixed_array"                     shift, and go to state 418
    "default"                         shift, and go to state 419
    "bool"                            shift, and go to state 222
    "void"                            shift, and go to state 223
    "string"                          shift, and go to state 224
    "int"                             shift, and go to state 226
    "int2"                            shift, and go to state 227
    "int3"                            shift, and go to state 228
    "int4"                            shift, and go to state 229
    "uint"                            shift, and go to state 230
    "bitfield"                        shift, and go to state 420
    "uint2"                           shift, and go to state 232
    "uint3"                           shift, and go to state 233
    "uint4"                           shift, and go to state 234
    "float"                           shift, and go to state 235
    "float2"                          shift, and go to state 236
    "float3"                          shift, and go to state 237
    "float4"                          shift, and go to state 238
    "range"                           shift, and go to state 239
    "urange"                          shift, and go to state 240
    "range64"                         shift, and go to state 241
    "urange64"                        shift, and go to state 242
    "int64"                           shift, and go to state 244
    "uint64"                          shift, and go to state 245
    "double"                          shift, and go to state 246
    "int8"                            shift, and go to state 249
    "uint8"                           shift, and go to state 250
    "int16"                           shift, and go to state 251
    "uint16"                          shift, and go to state 252
    "tuple"                           shift, and go to state 421
    "variant"                         shift, and go to state 422
    "generator"                       shift, and go to state 423
    "++"                              shift, and go to state 424
    "--"                              shift, and go to state 425
    "::"                              shift, and go to state 55
    "$$"                              shift, and go to state 426
    "$i"                              shift, and go to state 427
    "$v"                              shift, and go to state 428
    "$b"                              shift, and go to state 429
    "$a"                              shift, and go to state 430
    "$c"                              shift, and go to state 431
    "..."                             shift, and go to state 432
    "integer constant"                shift, and go to state 433
    "long integer constant"           shift, and go to state 434
    "unsigned integer constant"       shift, and go to state 435
    "unsigned long integer constant"  shift, and go to state 436
    "unsigned int8 constant"          shift, and go to state 437
    "floating point constant"         shift, and go to state 438
    "double constant"                 shift, and go to state 439
    "name"                            shift, and go to state 56
    "start of the string"             shift, and go to state 440
    "begin of code block"             shift, and go to state 441
    '-'                               shift, and go to state 442
    '+'                               shift, and go to state 443
    '*'                               shift, and go to state 444
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 445
    '!'                               shift, and go to state 446
    '['                               shift, and go to state 447
    '('                               shift, and go to state 448
    '$'                               shift, and go to state 449
    '@'                               shift, and go to state 450

    string_builder          go to state 451
    expr_reader             go to state 452
    expr_call_pipe          go to state 453
    name_in_namespace       go to state 454
    expr_new                go to state 455
    expr_cast               go to state 456
    expr_type_decl          go to state 457
    expr_type_info          go to state 458
    expr_list               go to state 1228
    block_or_lambda         go to state 459
    expr_full_block         go to state 460
    expr_numeric_const      go to state 461
    expr_named_call         go to state 462
    expr_method_call        go to state 463
    func_addr_expr          go to state 464
    expr_field              go to state 465
    expr_call               go to state 466
    expr                    go to state 628
    expr_mtag               go to state 468
    basic_type_declaration  go to state 469
    make_decl               go to state 470
    make_struct_decl        go to state 471
    make_tuple_call         go to state 472
    make_dim_decl           go to state 473
    make_table_decl         go to state 474
    array_comprehension     go to state 475


State 1134

  339 expr_method_call: expr . "->" "name" '(' ')'
  340                 | expr . "->" "name" '(' expr_list ')'
  342 func_addr_name: "$i" '(' expr . ')'
  350 expr_field: expr . '.' "name"
  351           | expr . '.' '.' "name"
  352           | expr . '.' "name" '(' ')'
  353           | expr . '.' "name" '(' expr_list ')'
  354           | expr . '.' basic_type_declaration '(' ')'
  355           | expr . '.' basic_type_declaration '(' expr_list ')'
  358           | expr . '.' $@17 error $@18
  380 expr: expr . "<<" expr
  381     | expr . ">>" expr
  382     | expr . "<<<" expr
  383     | expr . ">>>" expr
  384     | expr . '+' expr
  385     | expr . '-' expr
  386     | expr . '*' expr
  387     | expr . '/' expr
  388     | expr . '%' expr
  389     | expr . '<' expr
  390     | expr . '>' expr
  391     | expr . "==" expr
  392     | expr . "!=" expr
  393     | expr . "<=" expr
  394     | expr . ">=" expr
  395     | expr . '&' expr
  396     | expr . '|' expr
  397     | expr . '^' expr
  398     | expr . "&&" expr
  399     | expr . "||" expr
  400     | expr . "^^" expr
  401     | expr . ".." expr
  404     | expr . "++"
  405     | expr . "--"
  407     | expr . '[' expr ']'
  408     | expr . '.' '[' expr ']'
  409     | expr . "?[" expr ']'
  410     | expr . '.' "?[" expr ']'
  411     | expr . "?." "name"
  412     | expr . '.' "?." "name"
  421     | expr . "??" expr
  422     | expr . '?' expr ':' expr
  425     | expr . "is" "type" '<' $@19 type_declaration_no_options '>' $@20
  426     | expr . "is" basic_type_declaration
  427     | expr . "is" "name"
  428     | expr . "as" "name"
  431     | expr . "as" "type" '<' $@21 type_declaration '>' $@22
  432     | expr . "as" basic_type_declaration
  433     | expr . '?' "as" "name"
  436     | expr . '?' "as" "type" '<' $@23 type_declaration '>' $@24
  437     | expr . '?' "as" basic_type_declaration
  445     | expr . "<|" expr
  446     | expr . "|>" expr
  447     | expr . "|>" basic_type_declaration
  458 expr_mtag: expr . '.' "$f" '(' expr ')'
  459          | expr . "?." "$f" '(' expr ')'
  460          | expr . '.' '.' "$f" '(' expr ')'
  461          | expr . '.' "?." "$f" '(' expr ')'
  462          | expr . "as" "$f" '(' expr ')'
  463          | expr . '?' "as" "$f" '(' expr ')'
  464          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 637
    "as"   shift, and go to state 638
    "<<"   shift, and go to state 639
    ">>"   shift, and go to state 640
    "++"   shift, and go to state 641
    "--"   shift, and go to state 642
    "<="   shift, and go to state 643
    ">="   shift, and go to state 644
    "=="   shift, and go to state 645
    "!="   shift, and go to state 646
    "->"   shift, and go to state 647
    "??"   shift, and go to state 648
    "?."   shift, and go to state 649
    "?["   shift, and go to state 650
    "<|"   shift, and go to state 651
    "|>"   shift, and go to state 652
    "<<<"  shift, and go to state 653
    ">>>"  shift, and go to state 654
    "&&"   shift, and go to state 655
    "||"   shift, and go to state 656
    "^^"   shift, and go to state 657
    ".."   shift, and go to state 658
    '?'    shift, and go to state 659
    '|'    shift, and go to state 660
    '^'    shift, and go to state 661
    '&'    shift, and go to state 662
    '<'    shift, and go to state 663
    '>'    shift, and go to state 664
    '-'    shift, and go to state 665
    '+'    shift, and go to state 666
    '*'    shift, and go to state 667
    '/'    shift, and go to state 668
    '%'    shift, and go to state 669
    '.'    shift, and go to state 670
    '['    shift, and go to state 671
    ')'    shift, and go to state 1229


State 1135

  339 expr_method_call: expr . "->" "name" '(' ')'
  340                 | expr . "->" "name" '(' expr_list ')'
  350 expr_field: expr . '.' "name"
  351           | expr . '.' '.' "name"
  352           | expr . '.' "name" '(' ')'
  353           | expr . '.' "name" '(' expr_list ')'
  354           | expr . '.' basic_type_declaration '(' ')'
  355           | expr . '.' basic_type_declaration '(' expr_list ')'
  358           | expr . '.' $@17 error $@18
  380 expr: expr . "<<" expr
  381     | expr . ">>" expr
  382     | expr . "<<<" expr
  383     | expr . ">>>" expr
  384     | expr . '+' expr
  385     | expr . '-' expr
  386     | expr . '*' expr
  387     | expr . '/' expr
  388     | expr . '%' expr
  389     | expr . '<' expr
  390     | expr . '>' expr
  391     | expr . "==" expr
  392     | expr . "!=" expr
  393     | expr . "<=" expr
  394     | expr . ">=" expr
  395     | expr . '&' expr
  396     | expr . '|' expr
  397     | expr . '^' expr
  398     | expr . "&&" expr
  399     | expr . "||" expr
  400     | expr . "^^" expr
  401     | expr . ".." expr
  404     | expr . "++"
  405     | expr . "--"
  407     | expr . '[' expr ']'
  408     | expr . '.' '[' expr ']'
  409     | expr . "?[" expr ']'
  410     | expr . '.' "?[" expr ']'
  411     | expr . "?." "name"
  412     | expr . '.' "?." "name"
  421     | expr . "??" expr
  422     | expr . '?' expr ':' expr
  425     | expr . "is" "type" '<' $@19 type_declaration_no_options '>' $@20
  426     | expr . "is" basic_type_declaration
  427     | expr . "is" "name"
  428     | expr . "as" "name"
  431     | expr . "as" "type" '<' $@21 type_declaration '>' $@22
  432     | expr . "as" basic_type_declaration
  433     | expr . '?' "as" "name"
  436     | expr . '?' "as" "type" '<' $@23 type_declaration '>' $@24
  437     | expr . '?' "as" basic_type_declaration
  445     | expr . "<|" expr
  446     | expr . "|>" expr
  447     | expr . "|>" basic_type_declaration
  458 expr_mtag: expr . '.' "$f" '(' expr ')'
  459          | expr . "?." "$f" '(' expr ')'
  460          | expr . '.' '.' "$f" '(' expr ')'
  461          | expr . '.' "?." "$f" '(' expr ')'
  462          | expr . "as" "$f" '(' expr ')'
  463          | expr . '?' "as" "$f" '(' expr ')'
  464          | expr . "is" "$f" '(' expr ')'
  465          | '@' '@' "$c" '(' expr . ')'

    "is"   shift, and go to state 637
    "as"   shift, and go to state 638
    "<<"   shift, and go to state 639
    ">>"   shift, and go to state 640
    "++"   shift, and go to state 641
    "--"   shift, and go to state 642
    "<="   shift, and go to state 643
    ">="   shift, and go to state 644
    "=="   shift, and go to state 645
    "!="   shift, and go to state 646
    "->"   shift, and go to state 647
    "??"   shift, and go to state 648
    "?."   shift, and go to state 649
    "?["   shift, and go to state 650
    "<|"   shift, and go to state 651
    "|>"   shift, and go to state 652
    "<<<"  shift, and go to state 653
    ">>>"  shift, and go to state 654
    "&&"   shift, and go to state 655
    "||"   shift, and go to state 656
    "^^"   shift, and go to state 657
    ".."   shift, and go to state 658
    '?'    shift, and go to state 659
    '|'    shift, and go to state 660
    '^'    shift, and go to state 661
    '&'    shift, and go to state 662
    '<'    shift, and go to state 663
    '>'    shift, and go to state 664
    '-'    shift, and go to state 665
    '+'    shift, and go to state 666
    '*'    shift, and go to state 667
    '/'    shift, and go to state 668
    '%'    shift, and go to state 669
    '.'    shift, and go to state 670
    '['    shift, and go to state 671
    ')'    shift, and go to state 1230


State 1136

  346 func_addr_expr: '@' '@' '<' $@13 type_declaration_no_options . '>' $@14 func_addr_name

    '>'  shift, and go to state 1231


State 1137

  349 func_addr_expr: '@' '@' '<' $@15 optional_function_argument_list . optional_function_type '>' $@16 func_addr_name

    ':'  shift, and go to state 386

    $default  reduce using rule 118 (optional_function_type)

    optional_function_type  go to state 1232


State 1138

  362 expr_call: name_in_namespace '(' "uninitialized" make_struct_single ')' .

    $default  reduce using rule 362 (expr_call)


State 1139

  339 expr_method_call: expr . "->" "name" '(' ')'
  340                 | expr . "->" "name" '(' expr_list ')'
  350 expr_field: expr . '.' "name"
  351           | expr . '.' '.' "name"
  352           | expr . '.' "name" '(' ')'
  353           | expr . '.' "name" '(' expr_list ')'
  354           | expr . '.' basic_type_declaration '(' ')'
  355           | expr . '.' basic_type_declaration '(' expr_list ')'
  358           | expr . '.' $@17 error $@18
  380 expr: expr . "<<" expr
  381     | expr . ">>" expr
  382     | expr . "<<<" expr
  383     | expr . ">>>" expr
  384     | expr . '+' expr
  385     | expr . '-' expr
  386     | expr . '*' expr
  387     | expr . '/' expr
  388     | expr . '%' expr
  389     | expr . '<' expr
  390     | expr . '>' expr
  391     | expr . "==" expr
  392     | expr . "!=" expr
  393     | expr . "<=" expr
  394     | expr . ">=" expr
  395     | expr . '&' expr
  396     | expr . '|' expr
  397     | expr . '^' expr
  398     | expr . "&&" expr
  399     | expr . "||" expr
  400     | expr . "^^" expr
  401     | expr . ".." expr
  404     | expr . "++"
  405     | expr . "--"
  407     | expr . '[' expr ']'
  408     | expr . '.' '[' expr ']'
  409     | expr . "?[" expr ']'
  410     | expr . '.' "?[" expr ']'
  411     | expr . "?." "name"
  412     | expr . '.' "?." "name"
  421     | expr . "??" expr
  422     | expr . '?' expr ':' expr
  425     | expr . "is" "type" '<' $@19 type_declaration_no_options '>' $@20
  426     | expr . "is" basic_type_declaration
  427     | expr . "is" "name"
  428     | expr . "as" "name"
  431     | expr . "as" "type" '<' $@21 type_declaration '>' $@22
  432     | expr . "as" basic_type_declaration
  433     | expr . '?' "as" "name"
  436     | expr . '?' "as" "type" '<' $@23 type_declaration '>' $@24
  437     | expr . '?' "as" basic_type_declaration
  445     | expr . "<|" expr
  446     | expr . "|>" expr
  447     | expr . "|>" basic_type_declaration
  458 expr_mtag: expr . '.' "$f" '(' expr ')'
  459          | expr . "?." "$f" '(' expr ')'
  460          | expr . '.' '.' "$f" '(' expr ')'
  461          | expr . '.' "?." "$f" '(' expr ')'
  462          | expr . "as" "$f" '(' expr ')'
  463          | expr . '?' "as" "$f" '(' expr ')'
  464          | expr . "is" "$f" '(' expr ')'
  719 make_struct_fields: "$f" '(' expr . ')' copy_or_move expr
  720                   | "$f" '(' expr . ')' ":=" expr

    "is"   shift, and go to state 637
    "as"   shift, and go to state 638
    "<<"   shift, and go to state 639
    ">>"   shift, and go to state 640
    "++"   shift, and go to state 641
    "--"   shift, and go to state 642
    "<="   shift, and go to state 643
    ">="   shift, and go to state 644
    "=="   shift, and go to state 645
    "!="   shift, and go to state 646
    "->"   shift, and go to state 647
    "??"   shift, and go to state 648
    "?."   shift, and go to state 649
    "?["   shift, and go to state 650
    "<|"   shift, and go to state 651
    "|>"   shift, and go to state 652
    "<<<"  shift, and go to state 653
    ">>>"  shift, and go to state 654
    "&&"   shift, and go to state 655
    "||"   shift, and go to state 656
    "^^"   shift, and go to state 657
    ".."   shift, and go to state 658
    '?'    shift, and go to state 659
    '|'    shift, and go to state 660
    '^'    shift, and go to state 661
    '&'    shift, and go to state 662
    '<'    shift, and go to state 663
    '>'    shift, and go to state 664
    '-'    shift, and go to state 665
    '+'    shift, and go to state 666
    '*'    shift, and go to state 667
    '/'    shift, and go to state 668
    '%'    shift, and go to state 669
    '.'    shift, and go to state 670
    '['    shift, and go to state 671
    ')'    shift, and go to state 1233


State 1140

  339 expr_method_call: expr . "->" "name" '(' ')'
  340                 | expr . "->" "name" '(' expr_list ')'
  350 expr_field: expr . '.' "name"
  351           | expr . '.' '.' "name"
  352           | expr . '.' "name" '(' ')'
  353           | expr . '.' "name" '(' expr_list ')'
  354           | expr . '.' basic_type_declaration '(' ')'
  355           | expr . '.' basic_type_declaration '(' expr_list ')'
  358           | expr . '.' $@17 error $@18
  380 expr: expr . "<<" expr
  381     | expr . ">>" expr
  382     | expr . "<<<" expr
  383     | expr . ">>>" expr
  384     | expr . '+' expr
  385     | expr . '-' expr
  386     | expr . '*' expr
  387     | expr . '/' expr
  388     | expr . '%' expr
  389     | expr . '<' expr
  390     | expr . '>' expr
  391     | expr . "==" expr
  392     | expr . "!=" expr
  393     | expr . "<=" expr
  394     | expr . ">=" expr
  395     | expr . '&' expr
  396     | expr . '|' expr
  397     | expr . '^' expr
  398     | expr . "&&" expr
  399     | expr . "||" expr
  400     | expr . "^^" expr
  401     | expr . ".." expr
  404     | expr . "++"
  405     | expr . "--"
  407     | expr . '[' expr ']'
  408     | expr . '.' '[' expr ']'
  409     | expr . "?[" expr ']'
  410     | expr . '.' "?[" expr ']'
  411     | expr . "?." "name"
  412     | expr . '.' "?." "name"
  421     | expr . "??" expr
  422     | expr . '?' expr ':' expr
  425     | expr . "is" "type" '<' $@19 type_declaration_no_options '>' $@20
  426     | expr . "is" basic_type_declaration
  427     | expr . "is" "name"
  428     | expr . "as" "name"
  431     | expr . "as" "type" '<' $@21 type_declaration '>' $@22
  432     | expr . "as" basic_type_declaration
  433     | expr . '?' "as" "name"
  436     | expr . '?' "as" "type" '<' $@23 type_declaration '>' $@24
  437     | expr . '?' "as" basic_type_declaration
  445     | expr . "<|" expr
  446     | expr . "|>" expr
  447     | expr . "|>" basic_type_declaration
  458 expr_mtag: expr . '.' "$f" '(' expr ')'
  459          | expr . "?." "$f" '(' expr ')'
  460          | expr . '.' '.' "$f" '(' expr ')'
  461          | expr . '.' "?." "$f" '(' expr ')'
  462          | expr . "as" "$f" '(' expr ')'
  463          | expr . '?' "as" "$f" '(' expr ')'
  464          | expr . "is" "$f" '(' expr ')'
  716 make_struct_fields: "name" ":=" expr .

    "is"   shift, and go to state 637
    "as"   shift, and go to state 638
    "<<"   shift, and go to state 639
    ">>"   shift, and go to state 640
    "++"   shift, and go to state 641
    "--"   shift, and go to state 642
    "<="   shift, and go to state 643
    ">="   shift, and go to state 644
    "=="   shift, and go to state 645
    "!="   shift, and go to state 646
    "->"   shift, and go to state 647
    "??"   shift, and go to state 648
    "?."   shift, and go to state 649
    "?["   shift, and go to state 650
    "<|"   shift, and go to state 651
    "|>"   shift, and go to state 652
    "<<<"  shift, and go to state 653
    ">>>"  shift, and go to state 654
    "&&"   shift, and go to state 655
    "||"   shift, and go to state 656
    "^^"   shift, and go to state 657
    ".."   shift, and go to state 658
    '?'    shift, and go to state 659
    '|'    shift, and go to state 660
    '^'    shift, and go to state 661
    '&'    shift, and go to state 662
    '<'    shift, and go to state 663
    '>'    shift, and go to state 664
    '-'    shift, and go to state 665
    '+'    shift, and go to state 666
    '*'    shift, and go to state 667
    '/'    shift, and go to state 668
    '%'    shift, and go to state 669
    '.'    shift, and go to state 670
    '['    shift, and go to state 671

    $default  reduce using rule 716 (make_struct_fields)


State 1141

  339 expr_method_call: expr . "->" "name" '(' ')'
  340                 | expr . "->" "name" '(' expr_list ')'
  350 expr_field: expr . '.' "name"
  351           | expr . '.' '.' "name"
  352           | expr . '.' "name" '(' ')'
  353           | expr . '.' "name" '(' expr_list ')'
  354           | expr . '.' basic_type_declaration '(' ')'
  355           | expr . '.' basic_type_declaration '(' expr_list ')'
  358           | expr . '.' $@17 error $@18
  380 expr: expr . "<<" expr
  381     | expr . ">>" expr
  382     | expr . "<<<" expr
  383     | expr . ">>>" expr
  384     | expr . '+' expr
  385     | expr . '-' expr
  386     | expr . '*' expr
  387     | expr . '/' expr
  388     | expr . '%' expr
  389     | expr . '<' expr
  390     | expr . '>' expr
  391     | expr . "==" expr
  392     | expr . "!=" expr
  393     | expr . "<=" expr
  394     | expr . ">=" expr
  395     | expr . '&' expr
  396     | expr . '|' expr
  397     | expr . '^' expr
  398     | expr . "&&" expr
  399     | expr . "||" expr
  400     | expr . "^^" expr
  401     | expr . ".." expr
  404     | expr . "++"
  405     | expr . "--"
  407     | expr . '[' expr ']'
  408     | expr . '.' '[' expr ']'
  409     | expr . "?[" expr ']'
  410     | expr . '.' "?[" expr ']'
  411     | expr . "?." "name"
  412     | expr . '.' "?." "name"
  421     | expr . "??" expr
  422     | expr . '?' expr ':' expr
  425     | expr . "is" "type" '<' $@19 type_declaration_no_options '>' $@20
  426     | expr . "is" basic_type_declaration
  427     | expr . "is" "name"
  428     | expr . "as" "name"
  431     | expr . "as" "type" '<' $@21 type_declaration '>' $@22
  432     | expr . "as" basic_type_declaration
  433     | expr . '?' "as" "name"
  436     | expr . '?' "as" "type" '<' $@23 type_declaration '>' $@24
  437     | expr . '?' "as" basic_type_declaration
  445     | expr . "<|" expr
  446     | expr . "|>" expr
  447     | expr . "|>" basic_type_declaration
  458 expr_mtag: expr . '.' "$f" '(' expr ')'
  459          | expr . "?." "$f" '(' expr ')'
  460          | expr . '.' '.' "$f" '(' expr ')'
  461          | expr . '.' "?." "$f" '(' expr ')'
  462          | expr . "as" "$f" '(' expr ')'
  463          | expr . '?' "as" "$f" '(' expr ')'
  464          | expr . "is" "$f" '(' expr ')'
  715 make_struct_fields: "name" copy_or_move expr .

    "is"   shift, and go to state 637
    "as"   shift, and go to state 638
    "<<"   shift, and go to state 639
    ">>"   shift, and go to state 640
    "++"   shift, and go to state 641
    "--"   shift, and go to state 642
    "<="   shift, and go to state 643
    ">="   shift, and go to state 644
    "=="   shift, and go to state 645
    "!="   shift, and go to state 646
    "->"   shift, and go to state 647
    "??"   shift, and go to state 648
    "?."   shift, and go to state 649
    "?["   shift, and go to state 650
    "<|"   shift, and go to state 651
    "|>"   shift, and go to state 652
    "<<<"  shift, and go to state 653
    ">>>"  shift, and go to state 654
    "&&"   shift, and go to state 655
    "||"   shift, and go to state 656
    "^^"   shift, and go to state 657
    ".."   shift, and go to state 658
    '?'    shift, and go to state 659
    '|'    shift, and go to state 660
    '^'    shift, and go to state 661
    '&'    shift, and go to state 662
    '<'    shift, and go to state 663
    '>'    shift, and go to state 664
    '-'    shift, and go to state 665
    '+'    shift, and go to state 666
    '*'    shift, and go to state 667
    '/'    shift, and go to state 668
    '%'    shift, and go to state 669
    '.'    shift, and go to state 670
    '['    shift, and go to state 671

    $default  reduce using rule 715 (make_struct_fields)


State 1142

  337 expr_named_call: name_in_namespace '(' '[' make_struct_fields ']' . ')'

    ')'  shift, and go to state 1234


State 1143

  338 expr_named_call: name_in_namespace '(' expr_list ',' '[' . make_struct_fields ']' ')'
  751 make_dim_decl: '[' . expr_list optional_comma ']'
  779 array_comprehension: '[' . "for" variable_name_with_pos_list "in" expr_list "end of expression" expr array_comprehension_where ']'
  780                    | '[' . "iterator" "for" variable_name_with_pos_list "in" expr_list "end of expression" expr array_comprehension_where ']'

    "struct"                          shift, and go to state 402
    "class"                           shift, and go to state 403
    "for"                             shift, and go to state 625
    "true"                            shift, and go to state 404
    "false"                           shift, and go to state 405
    "new"                             shift, and go to state 406
    "typeinfo"                        shift, and go to state 407
    "type"                            shift, and go to state 408
    "array"                           shift, and go to state 409
    "null"                            shift, and go to state 410
    "table"                           shift, and go to state 411
    "deref"                           shift, and go to state 412
    "cast"                            shift, and go to state 413
    "upcast"                          shift, and go to state 414
    "iterator"                        shift, and go to state 626
    "addr"                            shift, and go to state 415
    "reinterpret"                     shift, and go to state 416
    "unsafe"                          shift, and go to state 417
    "fixed_array"                     shift, and go to state 418
    "default"                         shift, and go to state 419
    "bool"                            shift, and go to state 222
    "void"                            shift, and go to state 223
    "string"                          shift, and go to state 224
    "int"                             shift, and go to state 226
    "int2"                            shift, and go to state 227
    "int3"                            shift, and go to state 228
    "int4"                            shift, and go to state 229
    "uint"                            shift, and go to state 230
    "bitfield"                        shift, and go to state 420
    "uint2"                           shift, and go to state 232
    "uint3"                           shift, and go to state 233
    "uint4"                           shift, and go to state 234
    "float"                           shift, and go to state 235
    "float2"                          shift, and go to state 236
    "float3"                          shift, and go to state 237
    "float4"                          shift, and go to state 238
    "range"                           shift, and go to state 239
    "urange"                          shift, and go to state 240
    "range64"                         shift, and go to state 241
    "urange64"                        shift, and go to state 242
    "int64"                           shift, and go to state 244
    "uint64"                          shift, and go to state 245
    "double"                          shift, and go to state 246
    "int8"                            shift, and go to state 249
    "uint8"                           shift, and go to state 250
    "int16"                           shift, and go to state 251
    "uint16"                          shift, and go to state 252
    "tuple"                           shift, and go to state 421
    "variant"                         shift, and go to state 422
    "generator"                       shift, and go to state 423
    "++"                              shift, and go to state 424
    "--"                              shift, and go to state 425
    "::"                              shift, and go to state 55
    "$$"                              shift, and go to state 426
    "$i"                              shift, and go to state 427
    "$v"                              shift, and go to state 428
    "$b"                              shift, and go to state 429
    "$a"                              shift, and go to state 430
    "$c"                              shift, and go to state 431
    "$f"                              shift, and go to state 824
    "..."                             shift, and go to state 432
    "integer constant"                shift, and go to state 433
    "long integer constant"           shift, and go to state 434
    "unsigned integer constant"       shift, and go to state 435
    "unsigned long integer constant"  shift, and go to state 436
    "unsigned int8 constant"          shift, and go to state 437
    "floating point constant"         shift, and go to state 438
    "double constant"                 shift, and go to state 439
    "name"                            shift, and go to state 825
    "start of the string"             shift, and go to state 440
    "begin of code block"             shift, and go to state 441
    '-'                               shift, and go to state 442
    '+'                               shift, and go to state 443
    '*'                               shift, and go to state 444
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 445
    '!'                               shift, and go to state 446
    '['                               shift, and go to state 447
    '('                               shift, and go to state 448
    '$'                               shift, and go to state 449
    '@'                               shift, and go to state 450

    string_builder          go to state 451
    expr_reader             go to state 452
    expr_call_pipe          go to state 453
    name_in_namespace       go to state 454
    expr_new                go to state 455
    expr_cast               go to state 456
    expr_type_decl          go to state 457
    expr_type_info          go to state 458
    expr_list               go to state 627
    block_or_lambda         go to state 459
    expr_full_block         go to state 460
    expr_numeric_const      go to state 461
    expr_named_call         go to state 462
    expr_method_call        go to state 463
    func_addr_expr          go to state 464
    expr_field              go to state 465
    expr_call               go to state 466
    expr                    go to state 628
    expr_mtag               go to state 468
    basic_type_declaration  go to state 469
    make_decl               go to state 470
    make_struct_fields      go to state 1235
    make_struct_decl        go to state 471
    make_tuple_call         go to state 472
    make_dim_decl           go to state 473
    make_table_decl         go to state 474
    array_comprehension     go to state 475


State 1144

  721 make_struct_fields: make_struct_fields ',' "$f" . '(' expr ')' copy_or_move expr
  722                   | make_struct_fields ',' "$f" . '(' expr ')' ":=" expr

    '('  shift, and go to state 1236


State 1145

  717 make_struct_fields: make_struct_fields ',' "name" . copy_or_move expr
  718                   | make_struct_fields ',' "name" . ":=" expr

    "<-"  shift, and go to state 912
    ":="  shift, and go to state 1237
    '='   shift, and go to state 914

    copy_or_move  go to state 1238


State 1146

  301 capture_entry: "<-" . "name"

    "name"  shift, and go to state 1239


State 1147

  302 capture_entry: ":=" . "name"

    "name"  shift, and go to state 1240


State 1148

  303 capture_entry: "name" . '(' "name" ')'

    '('  shift, and go to state 1241


State 1149

  300 capture_entry: '=' . "name"

    "name"  shift, and go to state 1242


State 1150

  299 capture_entry: '&' . "name"

    "name"  shift, and go to state 1243


State 1151

  304 capture_list: capture_entry .

    $default  reduce using rule 304 (capture_list)


State 1152

  305 capture_list: capture_list . ',' capture_entry
  307 optional_capture_list: "capture" '(' capture_list . ')'

    ','  shift, and go to state 1244
    ')'  shift, and go to state 1245


State 1153

  308 expr_full_block: block_or_lambda optional_annotation_list optional_capture_list optional_function_argument_list optional_function_type . block_or_simple_block

    "=>"                   shift, and go to state 1246
    "begin of code block"  shift, and go to state 323

    expression_block       go to state 1247
    block_or_simple_block  go to state 1248


State 1154

  309 expr_full_block_assumed_piped: block_or_lambda optional_annotation_list optional_capture_list optional_function_argument_list . optional_function_type expression_block

    ':'  shift, and go to state 386

    $default  reduce using rule 118 (optional_function_type)

    optional_function_type  go to state 1249


State 1155

  425 expr: expr "is" "type" '<' $@19 . type_declaration_no_options '>' $@20

    "type"       shift, and go to state 216
    "array"      shift, and go to state 217
    "table"      shift, and go to state 218
    "typedecl"   shift, and go to state 219
    "iterator"   shift, and go to state 220
    "smart_ptr"  shift, and go to state 221
    "bool"       shift, and go to state 222
    "void"       shift, and go to state 223
    "string"     shift, and go to state 224
    "auto"       shift, and go to state 225
    "int"        shift, and go to state 226
    "int2"       shift, and go to state 227
    "int3"       shift, and go to state 228
    "int4"       shift, and go to state 229
    "uint"       shift, and go to state 230
    "bitfield"   shift, and go to state 231
    "uint2"      shift, and go to state 232
    "uint3"      shift, and go to state 233
    "uint4"      shift, and go to state 234
    "float"      shift, and go to state 235
    "float2"     shift, and go to state 236
    "float3"     shift, and go to state 237
    "float4"     shift, and go to state 238
    "range"      shift, and go to state 239
    "urange"     shift, and go to state 240
    "range64"    shift, and go to state 241
    "urange64"   shift, and go to state 242
    "block"      shift, and go to state 243
    "int64"      shift, and go to state 244
    "uint64"     shift, and go to state 245
    "double"     shift, and go to state 246
    "function"   shift, and go to state 247
    "lambda"     shift, and go to state 248
    "int8"       shift, and go to state 249
    "uint8"      shift, and go to state 250
    "int16"      shift, and go to state 251
    "uint16"     shift, and go to state 252
    "tuple"      shift, and go to state 253
    "variant"    shift, and go to state 254
    "::"         shift, and go to state 55
    "$t"         shift, and go to state 255
    "name"       shift, and go to state 56
    '$'          shift, and go to state 256

    name_in_namespace                   go to state 257
    basic_type_declaration              go to state 258
    structure_type_declaration          go to state 259
    auto_type_declaration               go to state 260
    bitfield_type_declaration           go to state 261
    type_declaration_no_options         go to state 1250
    type_declaration_no_options_no_dim  go to state 263


State 1156

  339 expr_method_call: expr . "->" "name" '(' ')'
  340                 | expr . "->" "name" '(' expr_list ')'
  350 expr_field: expr . '.' "name"
  351           | expr . '.' '.' "name"
  352           | expr . '.' "name" '(' ')'
  353           | expr . '.' "name" '(' expr_list ')'
  354           | expr . '.' basic_type_declaration '(' ')'
  355           | expr . '.' basic_type_declaration '(' expr_list ')'
  358           | expr . '.' $@17 error $@18
  380 expr: expr . "<<" expr
  381     | expr . ">>" expr
  382     | expr . "<<<" expr
  383     | expr . ">>>" expr
  384     | expr . '+' expr
  385     | expr . '-' expr
  386     | expr . '*' expr
  387     | expr . '/' expr
  388     | expr . '%' expr
  389     | expr . '<' expr
  390     | expr . '>' expr
  391     | expr . "==" expr
  392     | expr . "!=" expr
  393     | expr . "<=" expr
  394     | expr . ">=" expr
  395     | expr . '&' expr
  396     | expr . '|' expr
  397     | expr . '^' expr
  398     | expr . "&&" expr
  399     | expr . "||" expr
  400     | expr . "^^" expr
  401     | expr . ".." expr
  404     | expr . "++"
  405     | expr . "--"
  407     | expr . '[' expr ']'
  408     | expr . '.' '[' expr ']'
  409     | expr . "?[" expr ']'
  410     | expr . '.' "?[" expr ']'
  411     | expr . "?." "name"
  412     | expr . '.' "?." "name"
  421     | expr . "??" expr
  422     | expr . '?' expr ':' expr
  425     | expr . "is" "type" '<' $@19 type_declaration_no_options '>' $@20
  426     | expr . "is" basic_type_declaration
  427     | expr . "is" "name"
  428     | expr . "as" "name"
  431     | expr . "as" "type" '<' $@21 type_declaration '>' $@22
  432     | expr . "as" basic_type_declaration
  433     | expr . '?' "as" "name"
  436     | expr . '?' "as" "type" '<' $@23 type_declaration '>' $@24
  437     | expr . '?' "as" basic_type_declaration
  445     | expr . "<|" expr
  446     | expr . "|>" expr
  447     | expr . "|>" basic_type_declaration
  458 expr_mtag: expr . '.' "$f" '(' expr ')'
  459          | expr . "?." "$f" '(' expr ')'
  460          | expr . '.' '.' "$f" '(' expr ')'
  461          | expr . '.' "?." "$f" '(' expr ')'
  462          | expr . "as" "$f" '(' expr ')'
  463          | expr . '?' "as" "$f" '(' expr ')'
  464          | expr . "is" "$f" '(' expr ')'
  464          | expr "is" "$f" '(' expr . ')'

    "is"   shift, and go to state 637
    "as"   shift, and go to state 638
    "<<"   shift, and go to state 639
    ">>"   shift, and go to state 640
    "++"   shift, and go to state 641
    "--"   shift, and go to state 642
    "<="   shift, and go to state 643
    ">="   shift, and go to state 644
    "=="   shift, and go to state 645
    "!="   shift, and go to state 646
    "->"   shift, and go to state 647
    "??"   shift, and go to state 648
    "?."   shift, and go to state 649
    "?["   shift, and go to state 650
    "<|"   shift, and go to state 651
    "|>"   shift, and go to state 652
    "<<<"  shift, and go to state 653
    ">>>"  shift, and go to state 654
    "&&"   shift, and go to state 655
    "||"   shift, and go to state 656
    "^^"   shift, and go to state 657
    ".."   shift, and go to state 658
    '?'    shift, and go to state 659
    '|'    shift, and go to state 660
    '^'    shift, and go to state 661
    '&'    shift, and go to state 662
    '<'    shift, and go to state 663
    '>'    shift, and go to state 664
    '-'    shift, and go to state 665
    '+'    shift, and go to state 666
    '*'    shift, and go to state 667
    '/'    shift, and go to state 668
    '%'    shift, and go to state 669
    '.'    shift, and go to state 670
    '['    shift, and go to state 671
    ')'    shift, and go to state 1251


State 1157

  431 expr: expr "as" "type" '<' $@21 . type_declaration '>' $@22

    "type"       shift, and go to state 216
    "array"      shift, and go to state 217
    "table"      shift, and go to state 218
    "typedecl"   shift, and go to state 219
    "iterator"   shift, and go to state 220
    "smart_ptr"  shift, and go to state 221
    "bool"       shift, and go to state 222
    "void"       shift, and go to state 223
    "string"     shift, and go to state 224
    "auto"       shift, and go to state 225
    "int"        shift, and go to state 226
    "int2"       shift, and go to state 227
    "int3"       shift, and go to state 228
    "int4"       shift, and go to state 229
    "uint"       shift, and go to state 230
    "bitfield"   shift, and go to state 231
    "uint2"      shift, and go to state 232
    "uint3"      shift, and go to state 233
    "uint4"      shift, and go to state 234
    "float"      shift, and go to state 235
    "float2"     shift, and go to state 236
    "float3"     shift, and go to state 237
    "float4"     shift, and go to state 238
    "range"      shift, and go to state 239
    "urange"     shift, and go to state 240
    "range64"    shift, and go to state 241
    "urange64"   shift, and go to state 242
    "block"      shift, and go to state 243
    "int64"      shift, and go to state 244
    "uint64"     shift, and go to state 245
    "double"     shift, and go to state 246
    "function"   shift, and go to state 247
    "lambda"     shift, and go to state 248
    "int8"       shift, and go to state 249
    "uint8"      shift, and go to state 250
    "int16"      shift, and go to state 251
    "uint16"     shift, and go to state 252
    "tuple"      shift, and go to state 253
    "variant"    shift, and go to state 254
    "::"         shift, and go to state 55
    "$t"         shift, and go to state 255
    "name"       shift, and go to state 56
    '$'          shift, and go to state 256

    name_in_namespace                   go to state 257
    basic_type_declaration              go to state 258
    structure_type_declaration          go to state 259
    auto_type_declaration               go to state 260
    bitfield_type_declaration           go to state 261
    type_declaration_no_options         go to state 262
    type_declaration_no_options_no_dim  go to state 263
    type_declaration                    go to state 1252


State 1158

  339 expr_method_call: expr . "->" "name" '(' ')'
  340                 | expr . "->" "name" '(' expr_list ')'
  350 expr_field: expr . '.' "name"
  351           | expr . '.' '.' "name"
  352           | expr . '.' "name" '(' ')'
  353           | expr . '.' "name" '(' expr_list ')'
  354           | expr . '.' basic_type_declaration '(' ')'
  355           | expr . '.' basic_type_declaration '(' expr_list ')'
  358           | expr . '.' $@17 error $@18
  380 expr: expr . "<<" expr
  381     | expr . ">>" expr
  382     | expr . "<<<" expr
  383     | expr . ">>>" expr
  384     | expr . '+' expr
  385     | expr . '-' expr
  386     | expr . '*' expr
  387     | expr . '/' expr
  388     | expr . '%' expr
  389     | expr . '<' expr
  390     | expr . '>' expr
  391     | expr . "==" expr
  392     | expr . "!=" expr
  393     | expr . "<=" expr
  394     | expr . ">=" expr
  395     | expr . '&' expr
  396     | expr . '|' expr
  397     | expr . '^' expr
  398     | expr . "&&" expr
  399     | expr . "||" expr
  400     | expr . "^^" expr
  401     | expr . ".." expr
  404     | expr . "++"
  405     | expr . "--"
  407     | expr . '[' expr ']'
  408     | expr . '.' '[' expr ']'
  409     | expr . "?[" expr ']'
  410     | expr . '.' "?[" expr ']'
  411     | expr . "?." "name"
  412     | expr . '.' "?." "name"
  421     | expr . "??" expr
  422     | expr . '?' expr ':' expr
  425     | expr . "is" "type" '<' $@19 type_declaration_no_options '>' $@20
  426     | expr . "is" basic_type_declaration
  427     | expr . "is" "name"
  428     | expr . "as" "name"
  431     | expr . "as" "type" '<' $@21 type_declaration '>' $@22
  432     | expr . "as" basic_type_declaration
  433     | expr . '?' "as" "name"
  436     | expr . '?' "as" "type" '<' $@23 type_declaration '>' $@24
  437     | expr . '?' "as" basic_type_declaration
  445     | expr . "<|" expr
  446     | expr . "|>" expr
  447     | expr . "|>" basic_type_declaration
  458 expr_mtag: expr . '.' "$f" '(' expr ')'
  459          | expr . "?." "$f" '(' expr ')'
  460          | expr . '.' '.' "$f" '(' expr ')'
  461          | expr . '.' "?." "$f" '(' expr ')'
  462          | expr . "as" "$f" '(' expr ')'
  462          | expr "as" "$f" '(' expr . ')'
  463          | expr . '?' "as" "$f" '(' expr ')'
  464          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 637
    "as"   shift, and go to state 638
    "<<"   shift, and go to state 639
    ">>"   shift, and go to state 640
    "++"   shift, and go to state 641
    "--"   shift, and go to state 642
    "<="   shift, and go to state 643
    ">="   shift, and go to state 644
    "=="   shift, and go to state 645
    "!="   shift, and go to state 646
    "->"   shift, and go to state 647
    "??"   shift, and go to state 648
    "?."   shift, and go to state 649
    "?["   shift, and go to state 650
    "<|"   shift, and go to state 651
    "|>"   shift, and go to state 652
    "<<<"  shift, and go to state 653
    ">>>"  shift, and go to state 654
    "&&"   shift, and go to state 655
    "||"   shift, and go to state 656
    "^^"   shift, and go to state 657
    ".."   shift, and go to state 658
    '?'    shift, and go to state 659
    '|'    shift, and go to state 660
    '^'    shift, and go to state 661
    '&'    shift, and go to state 662
    '<'    shift, and go to state 663
    '>'    shift, and go to state 664
    '-'    shift, and go to state 665
    '+'    shift, and go to state 666
    '*'    shift, and go to state 667
    '/'    shift, and go to state 668
    '%'    shift, and go to state 669
    '.'    shift, and go to state 670
    '['    shift, and go to state 671
    ')'    shift, and go to state 1253


State 1159

  339 expr_method_call: expr "->" "name" '(' ')' .

    $default  reduce using rule 339 (expr_method_call)


State 1160

  292 expr_list: expr_list . ',' expr
  340 expr_method_call: expr "->" "name" '(' expr_list . ')'

    ','  shift, and go to state 1055
    ')'  shift, and go to state 1254


State 1161

  339 expr_method_call: expr . "->" "name" '(' ')'
  340                 | expr . "->" "name" '(' expr_list ')'
  350 expr_field: expr . '.' "name"
  351           | expr . '.' '.' "name"
  352           | expr . '.' "name" '(' ')'
  353           | expr . '.' "name" '(' expr_list ')'
  354           | expr . '.' basic_type_declaration '(' ')'
  355           | expr . '.' basic_type_declaration '(' expr_list ')'
  358           | expr . '.' $@17 error $@18
  380 expr: expr . "<<" expr
  381     | expr . ">>" expr
  382     | expr . "<<<" expr
  383     | expr . ">>>" expr
  384     | expr . '+' expr
  385     | expr . '-' expr
  386     | expr . '*' expr
  387     | expr . '/' expr
  388     | expr . '%' expr
  389     | expr . '<' expr
  390     | expr . '>' expr
  391     | expr . "==" expr
  392     | expr . "!=" expr
  393     | expr . "<=" expr
  394     | expr . ">=" expr
  395     | expr . '&' expr
  396     | expr . '|' expr
  397     | expr . '^' expr
  398     | expr . "&&" expr
  399     | expr . "||" expr
  400     | expr . "^^" expr
  401     | expr . ".." expr
  404     | expr . "++"
  405     | expr . "--"
  407     | expr . '[' expr ']'
  408     | expr . '.' '[' expr ']'
  409     | expr . "?[" expr ']'
  410     | expr . '.' "?[" expr ']'
  411     | expr . "?." "name"
  412     | expr . '.' "?." "name"
  421     | expr . "??" expr
  422     | expr . '?' expr ':' expr
  425     | expr . "is" "type" '<' $@19 type_declaration_no_options '>' $@20
  426     | expr . "is" basic_type_declaration
  427     | expr . "is" "name"
  428     | expr . "as" "name"
  431     | expr . "as" "type" '<' $@21 type_declaration '>' $@22
  432     | expr . "as" basic_type_declaration
  433     | expr . '?' "as" "name"
  436     | expr . '?' "as" "type" '<' $@23 type_declaration '>' $@24
  437     | expr . '?' "as" basic_type_declaration
  445     | expr . "<|" expr
  446     | expr . "|>" expr
  447     | expr . "|>" basic_type_declaration
  458 expr_mtag: expr . '.' "$f" '(' expr ')'
  459          | expr . "?." "$f" '(' expr ')'
  459          | expr "?." "$f" '(' expr . ')'
  460          | expr . '.' '.' "$f" '(' expr ')'
  461          | expr . '.' "?." "$f" '(' expr ')'
  462          | expr . "as" "$f" '(' expr ')'
  463          | expr . '?' "as" "$f" '(' expr ')'
  464          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 637
    "as"   shift, and go to state 638
    "<<"   shift, and go to state 639
    ">>"   shift, and go to state 640
    "++"   shift, and go to state 641
    "--"   shift, and go to state 642
    "<="   shift, and go to state 643
    ">="   shift, and go to state 644
    "=="   shift, and go to state 645
    "!="   shift, and go to state 646
    "->"   shift, and go to state 647
    "??"   shift, and go to state 648
    "?."   shift, and go to state 649
    "?["   shift, and go to state 650
    "<|"   shift, and go to state 651
    "|>"   shift, and go to state 652
    "<<<"  shift, and go to state 653
    ">>>"  shift, and go to state 654
    "&&"   shift, and go to state 655
    "||"   shift, and go to state 656
    "^^"   shift, and go to state 657
    ".."   shift, and go to state 658
    '?'    shift, and go to state 659
    '|'    shift, and go to state 660
    '^'    shift, and go to state 661
    '&'    shift, and go to state 662
    '<'    shift, and go to state 663
    '>'    shift, and go to state 664
    '-'    shift, and go to state 665
    '+'    shift, and go to state 666
    '*'    shift, and go to state 667
    '/'    shift, and go to state 668
    '%'    shift, and go to state 669
    '.'    shift, and go to state 670
    '['    shift, and go to state 671
    ')'    shift, and go to state 1255


State 1162

  436 expr: expr '?' "as" "type" '<' . $@23 type_declaration '>' $@24

    $default  reduce using rule 434 ($@23)

    $@23  go to state 1256


State 1163

  463 expr_mtag: expr '?' "as" "$f" '(' . expr ')'

    "struct"                          shift, and go to state 402
    "class"                           shift, and go to state 403
    "true"                            shift, and go to state 404
    "false"                           shift, and go to state 405
    "new"                             shift, and go to state 406
    "typeinfo"                        shift, and go to state 407
    "type"                            shift, and go to state 408
    "array"                           shift, and go to state 409
    "null"                            shift, and go to state 410
    "table"                           shift, and go to state 411
    "deref"                           shift, and go to state 412
    "cast"                            shift, and go to state 413
    "upcast"                          shift, and go to state 414
    "addr"                            shift, and go to state 415
    "reinterpret"                     shift, and go to state 416
    "unsafe"                          shift, and go to state 417
    "fixed_array"                     shift, and go to state 418
    "default"                         shift, and go to state 419
    "bool"                            shift, and go to state 222
    "void"                            shift, and go to state 223
    "string"                          shift, and go to state 224
    "int"                             shift, and go to state 226
    "int2"                            shift, and go to state 227
    "int3"                            shift, and go to state 228
    "int4"                            shift, and go to state 229
    "uint"                            shift, and go to state 230
    "bitfield"                        shift, and go to state 420
    "uint2"                           shift, and go to state 232
    "uint3"                           shift, and go to state 233
    "uint4"                           shift, and go to state 234
    "float"                           shift, and go to state 235
    "float2"                          shift, and go to state 236
    "float3"                          shift, and go to state 237
    "float4"                          shift, and go to state 238
    "range"                           shift, and go to state 239
    "urange"                          shift, and go to state 240
    "range64"                         shift, and go to state 241
    "urange64"                        shift, and go to state 242
    "int64"                           shift, and go to state 244
    "uint64"                          shift, and go to state 245
    "double"                          shift, and go to state 246
    "int8"                            shift, and go to state 249
    "uint8"                           shift, and go to state 250
    "int16"                           shift, and go to state 251
    "uint16"                          shift, and go to state 252
    "tuple"                           shift, and go to state 421
    "variant"                         shift, and go to state 422
    "generator"                       shift, and go to state 423
    "++"                              shift, and go to state 424
    "--"                              shift, and go to state 425
    "::"                              shift, and go to state 55
    "$$"                              shift, and go to state 426
    "$i"                              shift, and go to state 427
    "$v"                              shift, and go to state 428
    "$b"                              shift, and go to state 429
    "$a"                              shift, and go to state 430
    "$c"                              shift, and go to state 431
    "..."                             shift, and go to state 432
    "integer constant"                shift, and go to state 433
    "long integer constant"           shift, and go to state 434
    "unsigned integer constant"       shift, and go to state 435
    "unsigned long integer constant"  shift, and go to state 436
    "unsigned int8 constant"          shift, and go to state 437
    "floating point constant"         shift, and go to state 438
    "double constant"                 shift, and go to state 439
    "name"                            shift, and go to state 56
    "start of the string"             shift, and go to state 440
    "begin of code block"             shift, and go to state 441
    '-'                               shift, and go to state 442
    '+'                               shift, and go to state 443
    '*'                               shift, and go to state 444
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 445
    '!'                               shift, and go to state 446
    '['                               shift, and go to state 447
    '('                               shift, and go to state 448
    '$'                               shift, and go to state 449
    '@'                               shift, and go to state 450

    string_builder          go to state 451
    expr_reader             go to state 452
    expr_call_pipe          go to state 453
    name_in_namespace       go to state 454
    expr_new                go to state 455
    expr_cast               go to state 456
    expr_type_decl          go to state 457
    expr_type_info          go to state 458
    block_or_lambda         go to state 459
    expr_full_block         go to state 460
    expr_numeric_const      go to state 461
    expr_named_call         go to state 462
    expr_method_call        go to state 463
    func_addr_expr          go to state 464
    expr_field              go to state 465
    expr_call               go to state 466
    expr                    go to state 1257
    expr_mtag               go to state 468
    basic_type_declaration  go to state 469
    make_decl               go to state 470
    make_struct_decl        go to state 471
    make_tuple_call         go to state 472
    make_dim_decl           go to state 473
    make_table_decl         go to state 474
    array_comprehension     go to state 475


State 1164

  339 expr_method_call: expr . "->" "name" '(' ')'
  340                 | expr . "->" "name" '(' expr_list ')'
  350 expr_field: expr . '.' "name"
  351           | expr . '.' '.' "name"
  352           | expr . '.' "name" '(' ')'
  353           | expr . '.' "name" '(' expr_list ')'
  354           | expr . '.' basic_type_declaration '(' ')'
  355           | expr . '.' basic_type_declaration '(' expr_list ')'
  358           | expr . '.' $@17 error $@18
  380 expr: expr . "<<" expr
  381     | expr . ">>" expr
  382     | expr . "<<<" expr
  383     | expr . ">>>" expr
  384     | expr . '+' expr
  385     | expr . '-' expr
  386     | expr . '*' expr
  387     | expr . '/' expr
  388     | expr . '%' expr
  389     | expr . '<' expr
  390     | expr . '>' expr
  391     | expr . "==" expr
  392     | expr . "!=" expr
  393     | expr . "<=" expr
  394     | expr . ">=" expr
  395     | expr . '&' expr
  396     | expr . '|' expr
  397     | expr . '^' expr
  398     | expr . "&&" expr
  399     | expr . "||" expr
  400     | expr . "^^" expr
  401     | expr . ".." expr
  404     | expr . "++"
  405     | expr . "--"
  407     | expr . '[' expr ']'
  408     | expr . '.' '[' expr ']'
  409     | expr . "?[" expr ']'
  410     | expr . '.' "?[" expr ']'
  411     | expr . "?." "name"
  412     | expr . '.' "?." "name"
  421     | expr . "??" expr
  422     | expr . '?' expr ':' expr
  422     | expr '?' expr ':' expr .
  425     | expr . "is" "type" '<' $@19 type_declaration_no_options '>' $@20
  426     | expr . "is" basic_type_declaration
  427     | expr . "is" "name"
  428     | expr . "as" "name"
  431     | expr . "as" "type" '<' $@21 type_declaration '>' $@22
  432     | expr . "as" basic_type_declaration
  433     | expr . '?' "as" "name"
  436     | expr . '?' "as" "type" '<' $@23 type_declaration '>' $@24
  437     | expr . '?' "as" basic_type_declaration
  445     | expr . "<|" expr
  446     | expr . "|>" expr
  447     | expr . "|>" basic_type_declaration
  458 expr_mtag: expr . '.' "$f" '(' expr ')'
  459          | expr . "?." "$f" '(' expr ')'
  460          | expr . '.' '.' "$f" '(' expr ')'
  461          | expr . '.' "?." "$f" '(' expr ')'
  462          | expr . "as" "$f" '(' expr ')'
  463          | expr . '?' "as" "$f" '(' expr ')'
  464          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 637
    "as"   shift, and go to state 638
    "<<"   shift, and go to state 639
    ">>"   shift, and go to state 640
    "++"   shift, and go to state 641
    "--"   shift, and go to state 642
    "<="   shift, and go to state 643
    ">="   shift, and go to state 644
    "=="   shift, and go to state 645
    "!="   shift, and go to state 646
    "->"   shift, and go to state 647
    "??"   shift, and go to state 648
    "?."   shift, and go to state 649
    "?["   shift, and go to state 650
    "<|"   shift, and go to state 651
    "|>"   shift, and go to state 652
    "<<<"  shift, and go to state 653
    ">>>"  shift, and go to state 654
    "&&"   shift, and go to state 655
    "||"   shift, and go to state 656
    "^^"   shift, and go to state 657
    '?'    shift, and go to state 659
    '|'    shift, and go to state 660
    '^'    shift, and go to state 661
    '&'    shift, and go to state 662
    '<'    shift, and go to state 663
    '>'    shift, and go to state 664
    '-'    shift, and go to state 665
    '+'    shift, and go to state 666
    '*'    shift, and go to state 667
    '/'    shift, and go to state 668
    '%'    shift, and go to state 669
    '.'    shift, and go to state 670
    '['    shift, and go to state 671

    $default  reduce using rule 422 (expr)


State 1165

  461 expr_mtag: expr '.' "?." "$f" '(' . expr ')'

    "struct"                          shift, and go to state 402
    "class"                           shift, and go to state 403
    "true"                            shift, and go to state 404
    "false"                           shift, and go to state 405
    "new"                             shift, and go to state 406
    "typeinfo"                        shift, and go to state 407
    "type"                            shift, and go to state 408
    "array"                           shift, and go to state 409
    "null"                            shift, and go to state 410
    "table"                           shift, and go to state 411
    "deref"                           shift, and go to state 412
    "cast"                            shift, and go to state 413
    "upcast"                          shift, and go to state 414
    "addr"                            shift, and go to state 415
    "reinterpret"                     shift, and go to state 416
    "unsafe"                          shift, and go to state 417
    "fixed_array"                     shift, and go to state 418
    "default"                         shift, and go to state 419
    "bool"                            shift, and go to state 222
    "void"                            shift, and go to state 223
    "string"                          shift, and go to state 224
    "int"                             shift, and go to state 226
    "int2"                            shift, and go to state 227
    "int3"                            shift, and go to state 228
    "int4"                            shift, and go to state 229
    "uint"                            shift, and go to state 230
    "bitfield"                        shift, and go to state 420
    "uint2"                           shift, and go to state 232
    "uint3"                           shift, and go to state 233
    "uint4"                           shift, and go to state 234
    "float"                           shift, and go to state 235
    "float2"                          shift, and go to state 236
    "float3"                          shift, and go to state 237
    "float4"                          shift, and go to state 238
    "range"                           shift, and go to state 239
    "urange"                          shift, and go to state 240
    "range64"                         shift, and go to state 241
    "urange64"                        shift, and go to state 242
    "int64"                           shift, and go to state 244
    "uint64"                          shift, and go to state 245
    "double"                          shift, and go to state 246
    "int8"                            shift, and go to state 249
    "uint8"                           shift, and go to state 250
    "int16"                           shift, and go to state 251
    "uint16"                          shift, and go to state 252
    "tuple"                           shift, and go to state 421
    "variant"                         shift, and go to state 422
    "generator"                       shift, and go to state 423
    "++"                              shift, and go to state 424
    "--"                              shift, and go to state 425
    "::"                              shift, and go to state 55
    "$$"                              shift, and go to state 426
    "$i"                              shift, and go to state 427
    "$v"                              shift, and go to state 428
    "$b"                              shift, and go to state 429
    "$a"                              shift, and go to state 430
    "$c"                              shift, and go to state 431
    "..."                             shift, and go to state 432
    "integer constant"                shift, and go to state 433
    "long integer constant"           shift, and go to state 434
    "unsigned integer constant"       shift, and go to state 435
    "unsigned long integer constant"  shift, and go to state 436
    "unsigned int8 constant"          shift, and go to state 437
    "floating point constant"         shift, and go to state 438
    "double constant"                 shift, and go to state 439
    "name"                            shift, and go to state 56
    "start of the string"             shift, and go to state 440
    "begin of code block"             shift, and go to state 441
    '-'                               shift, and go to state 442
    '+'                               shift, and go to state 443
    '*'                               shift, and go to state 444
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 445
    '!'                               shift, and go to state 446
    '['                               shift, and go to state 447
    '('                               shift, and go to state 448
    '$'                               shift, and go to state 449
    '@'                               shift, and go to state 450

    string_builder          go to state 451
    expr_reader             go to state 452
    expr_call_pipe          go to state 453
    name_in_namespace       go to state 454
    expr_new                go to state 455
    expr_cast               go to state 456
    expr_type_decl          go to state 457
    expr_type_info          go to state 458
    block_or_lambda         go to state 459
    expr_full_block         go to state 460
    expr_numeric_const      go to state 461
    expr_named_call         go to state 462
    expr_method_call        go to state 463
    func_addr_expr          go to state 464
    expr_field              go to state 465
    expr_call               go to state 466
    expr                    go to state 1258
    expr_mtag               go to state 468
    basic_type_declaration  go to state 469
    make_decl               go to state 470
    make_struct_decl        go to state 471
    make_tuple_call         go to state 472
    make_dim_decl           go to state 473
    make_table_decl         go to state 474
    array_comprehension     go to state 475


State 1166

  410 expr: expr '.' "?[" expr ']' .

    $default  reduce using rule 410 (expr)


State 1167

  339 expr_method_call: expr . "->" "name" '(' ')'
  340                 | expr . "->" "name" '(' expr_list ')'
  350 expr_field: expr . '.' "name"
  351           | expr . '.' '.' "name"
  352           | expr . '.' "name" '(' ')'
  353           | expr . '.' "name" '(' expr_list ')'
  354           | expr . '.' basic_type_declaration '(' ')'
  355           | expr . '.' basic_type_declaration '(' expr_list ')'
  358           | expr . '.' $@17 error $@18
  380 expr: expr . "<<" expr
  381     | expr . ">>" expr
  382     | expr . "<<<" expr
  383     | expr . ">>>" expr
  384     | expr . '+' expr
  385     | expr . '-' expr
  386     | expr . '*' expr
  387     | expr . '/' expr
  388     | expr . '%' expr
  389     | expr . '<' expr
  390     | expr . '>' expr
  391     | expr . "==" expr
  392     | expr . "!=" expr
  393     | expr . "<=" expr
  394     | expr . ">=" expr
  395     | expr . '&' expr
  396     | expr . '|' expr
  397     | expr . '^' expr
  398     | expr . "&&" expr
  399     | expr . "||" expr
  400     | expr . "^^" expr
  401     | expr . ".." expr
  404     | expr . "++"
  405     | expr . "--"
  407     | expr . '[' expr ']'
  408     | expr . '.' '[' expr ']'
  409     | expr . "?[" expr ']'
  410     | expr . '.' "?[" expr ']'
  411     | expr . "?." "name"
  412     | expr . '.' "?." "name"
  421     | expr . "??" expr
  422     | expr . '?' expr ':' expr
  425     | expr . "is" "type" '<' $@19 type_declaration_no_options '>' $@20
  426     | expr . "is" basic_type_declaration
  427     | expr . "is" "name"
  428     | expr . "as" "name"
  431     | expr . "as" "type" '<' $@21 type_declaration '>' $@22
  432     | expr . "as" basic_type_declaration
  433     | expr . '?' "as" "name"
  436     | expr . '?' "as" "type" '<' $@23 type_declaration '>' $@24
  437     | expr . '?' "as" basic_type_declaration
  445     | expr . "<|" expr
  446     | expr . "|>" expr
  447     | expr . "|>" basic_type_declaration
  458 expr_mtag: expr . '.' "$f" '(' expr ')'
  458          | expr '.' "$f" '(' expr . ')'
  459          | expr . "?." "$f" '(' expr ')'
  460          | expr . '.' '.' "$f" '(' expr ')'
  461          | expr . '.' "?." "$f" '(' expr ')'
  462          | expr . "as" "$f" '(' expr ')'
  463          | expr . '?' "as" "$f" '(' expr ')'
  464          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 637
    "as"   shift, and go to state 638
    "<<"   shift, and go to state 639
    ">>"   shift, and go to state 640
    "++"   shift, and go to state 641
    "--"   shift, and go to state 642
    "<="   shift, and go to state 643
    ">="   shift, and go to state 644
    "=="   shift, and go to state 645
    "!="   shift, and go to state 646
    "->"   shift, and go to state 647
    "??"   shift, and go to state 648
    "?."   shift, and go to state 649
    "?["   shift, and go to state 650
    "<|"   shift, and go to state 651
    "|>"   shift, and go to state 652
    "<<<"  shift, and go to state 653
    ">>>"  shift, and go to state 654
    "&&"   shift, and go to state 655
    "||"   shift, and go to state 656
    "^^"   shift, and go to state 657
    ".."   shift, and go to state 658
    '?'    shift, and go to state 659
    '|'    shift, and go to state 660
    '^'    shift, and go to state 661
    '&'    shift, and go to state 662
    '<'    shift, and go to state 663
    '>'    shift, and go to state 664
    '-'    shift, and go to state 665
    '+'    shift, and go to state 666
    '*'    shift, and go to state 667
    '/'    shift, and go to state 668
    '%'    shift, and go to state 669
    '.'    shift, and go to state 670
    '['    shift, and go to state 671
    ')'    shift, and go to state 1259


State 1168

  352 expr_field: expr '.' "name" '(' ')' .

    $default  reduce using rule 352 (expr_field)


State 1169

  292 expr_list: expr_list . ',' expr
  353 expr_field: expr '.' "name" '(' expr_list . ')'

    ','  shift, and go to state 1055
    ')'  shift, and go to state 1260


State 1170

  460 expr_mtag: expr '.' '.' "$f" '(' . expr ')'

    "struct"                          shift, and go to state 402
    "class"                           shift, and go to state 403
    "true"                            shift, and go to state 404
    "false"                           shift, and go to state 405
    "new"                             shift, and go to state 406
    "typeinfo"                        shift, and go to state 407
    "type"                            shift, and go to state 408
    "array"                           shift, and go to state 409
    "null"                            shift, and go to state 410
    "table"                           shift, and go to state 411
    "deref"                           shift, and go to state 412
    "cast"                            shift, and go to state 413
    "upcast"                          shift, and go to state 414
    "addr"                            shift, and go to state 415
    "reinterpret"                     shift, and go to state 416
    "unsafe"                          shift, and go to state 417
    "fixed_array"                     shift, and go to state 418
    "default"                         shift, and go to state 419
    "bool"                            shift, and go to state 222
    "void"                            shift, and go to state 223
    "string"                          shift, and go to state 224
    "int"                             shift, and go to state 226
    "int2"                            shift, and go to state 227
    "int3"                            shift, and go to state 228
    "int4"                            shift, and go to state 229
    "uint"                            shift, and go to state 230
    "bitfield"                        shift, and go to state 420
    "uint2"                           shift, and go to state 232
    "uint3"                           shift, and go to state 233
    "uint4"                           shift, and go to state 234
    "float"                           shift, and go to state 235
    "float2"                          shift, and go to state 236
    "float3"                          shift, and go to state 237
    "float4"                          shift, and go to state 238
    "range"                           shift, and go to state 239
    "urange"                          shift, and go to state 240
    "range64"                         shift, and go to state 241
    "urange64"                        shift, and go to state 242
    "int64"                           shift, and go to state 244
    "uint64"                          shift, and go to state 245
    "double"                          shift, and go to state 246
    "int8"                            shift, and go to state 249
    "uint8"                           shift, and go to state 250
    "int16"                           shift, and go to state 251
    "uint16"                          shift, and go to state 252
    "tuple"                           shift, and go to state 421
    "variant"                         shift, and go to state 422
    "generator"                       shift, and go to state 423
    "++"                              shift, and go to state 424
    "--"                              shift, and go to state 425
    "::"                              shift, and go to state 55
    "$$"                              shift, and go to state 426
    "$i"                              shift, and go to state 427
    "$v"                              shift, and go to state 428
    "$b"                              shift, and go to state 429
    "$a"                              shift, and go to state 430
    "$c"                              shift, and go to state 431
    "..."                             shift, and go to state 432
    "integer constant"                shift, and go to state 433
    "long integer constant"           shift, and go to state 434
    "unsigned integer constant"       shift, and go to state 435
    "unsigned long integer constant"  shift, and go to state 436
    "unsigned int8 constant"          shift, and go to state 437
    "floating point constant"         shift, and go to state 438
    "double constant"                 shift, and go to state 439
    "name"                            shift, and go to state 56
    "start of the string"             shift, and go to state 440
    "begin of code block"             shift, and go to state 441
    '-'                               shift, and go to state 442
    '+'                               shift, and go to state 443
    '*'                               shift, and go to state 444
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 445
    '!'                               shift, and go to state 446
    '['                               shift, and go to state 447
    '('                               shift, and go to state 448
    '$'                               shift, and go to state 449
    '@'                               shift, and go to state 450

    string_builder          go to state 451
    expr_reader             go to state 452
    expr_call_pipe          go to state 453
    name_in_namespace       go to state 454
    expr_new                go to state 455
    expr_cast               go to state 456
    expr_type_decl          go to state 457
    expr_type_info          go to state 458
    block_or_lambda         go to state 459
    expr_full_block         go to state 460
    expr_numeric_const      go to state 461
    expr_named_call         go to state 462
    expr_method_call        go to state 463
    func_addr_expr          go to state 464
    expr_field              go to state 465
    expr_call               go to state 466
    expr                    go to state 1261
    expr_mtag               go to state 468
    basic_type_declaration  go to state 469
    make_decl               go to state 470
    make_struct_decl        go to state 471
    make_tuple_call         go to state 472
    make_dim_decl           go to state 473
    make_table_decl         go to state 474
    array_comprehension     go to state 475


State 1171

  408 expr: expr '.' '[' expr ']' .

    $default  reduce using rule 408 (expr)


State 1172

  358 expr_field: expr '.' $@17 error $@18 .

    $default  reduce using rule 358 (expr_field)


State 1173

  354 expr_field: expr '.' basic_type_declaration '(' ')' .

    $default  reduce using rule 354 (expr_field)


State 1174

  292 expr_list: expr_list . ',' expr
  355 expr_field: expr '.' basic_type_declaration '(' expr_list . ')'

    ','  shift, and go to state 1055
    ')'  shift, and go to state 1262


State 1175

  674 type_declaration_no_options_no_dim: "block" '<' $@49 optional_function_argument_list optional_function_type '>' $@50 .

    $default  reduce using rule 674 (type_declaration_no_options_no_dim)


State 1176

  681 type_declaration_no_options_no_dim: "function" '<' $@53 optional_function_argument_list optional_function_type '>' $@54 .

    $default  reduce using rule 681 (type_declaration_no_options_no_dim)


State 1177

  688 type_declaration_no_options_no_dim: "lambda" '<' $@57 optional_function_argument_list optional_function_type '>' $@58 .

    $default  reduce using rule 688 (type_declaration_no_options_no_dim)


State 1178

  642 type_declaration_no_options_no_dim: '$' name_in_namespace '<' $@38 type_declaration_no_options_list '>' '(' . optional_expr_list ')'

    "struct"                          shift, and go to state 402
    "class"                           shift, and go to state 403
    "true"                            shift, and go to state 404
    "false"                           shift, and go to state 405
    "new"                             shift, and go to state 406
    "typeinfo"                        shift, and go to state 407
    "type"                            shift, and go to state 408
    "array"                           shift, and go to state 409
    "null"                            shift, and go to state 410
    "table"                           shift, and go to state 411
    "deref"                           shift, and go to state 412
    "cast"                            shift, and go to state 413
    "upcast"                          shift, and go to state 414
    "addr"                            shift, and go to state 415
    "reinterpret"                     shift, and go to state 416
    "unsafe"                          shift, and go to state 417
    "fixed_array"                     shift, and go to state 418
    "default"                         shift, and go to state 419
    "bool"                            shift, and go to state 222
    "void"                            shift, and go to state 223
    "string"                          shift, and go to state 224
    "int"                             shift, and go to state 226
    "int2"                            shift, and go to state 227
    "int3"                            shift, and go to state 228
    "int4"                            shift, and go to state 229
    "uint"                            shift, and go to state 230
    "bitfield"                        shift, and go to state 420
    "uint2"                           shift, and go to state 232
    "uint3"                           shift, and go to state 233
    "uint4"                           shift, and go to state 234
    "float"                           shift, and go to state 235
    "float2"                          shift, and go to state 236
    "float3"                          shift, and go to state 237
    "float4"                          shift, and go to state 238
    "range"                           shift, and go to state 239
    "urange"                          shift, and go to state 240
    "range64"                         shift, and go to state 241
    "urange64"                        shift, and go to state 242
    "int64"                           shift, and go to state 244
    "uint64"                          shift, and go to state 245
    "double"                          shift, and go to state 246
    "int8"                            shift, and go to state 249
    "uint8"                           shift, and go to state 250
    "int16"                           shift, and go to state 251
    "uint16"                          shift, and go to state 252
    "tuple"                           shift, and go to state 421
    "variant"                         shift, and go to state 422
    "generator"                       shift, and go to state 423
    "++"                              shift, and go to state 424
    "--"                              shift, and go to state 425
    "::"                              shift, and go to state 55
    "$$"                              shift, and go to state 426
    "$i"                              shift, and go to state 427
    "$v"                              shift, and go to state 428
    "$b"                              shift, and go to state 429
    "$a"                              shift, and go to state 430
    "$c"                              shift, and go to state 431
    "..."                             shift, and go to state 432
    "integer constant"                shift, and go to state 433
    "long integer constant"           shift, and go to state 434
    "unsigned integer constant"       shift, and go to state 435
    "unsigned long integer constant"  shift, and go to state 436
    "unsigned int8 constant"          shift, and go to state 437
    "floating point constant"         shift, and go to state 438
    "double constant"                 shift, and go to state 439
    "name"                            shift, and go to state 56
    "start of the string"             shift, and go to state 440
    "begin of code block"             shift, and go to state 441
    '-'                               shift, and go to state 442
    '+'                               shift, and go to state 443
    '*'                               shift, and go to state 444
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 445
    '!'                               shift, and go to state 446
    '['                               shift, and go to state 447
    '('                               shift, and go to state 448
    '$'                               shift, and go to state 449
    '@'                               shift, and go to state 450

    $default  reduce using rule 236 (optional_expr_list)

    string_builder          go to state 451
    expr_reader             go to state 452
    expr_call_pipe          go to state 453
    optional_expr_list      go to state 1263
    name_in_namespace       go to state 454
    expr_new                go to state 455
    expr_cast               go to state 456
    expr_type_decl          go to state 457
    expr_type_info          go to state 458
    expr_list               go to state 692
    block_or_lambda         go to state 459
    expr_full_block         go to state 460
    expr_numeric_const      go to state 461
    expr_named_call         go to state 462
    expr_method_call        go to state 463
    func_addr_expr          go to state 464
    expr_field              go to state 465
    expr_call               go to state 466
    expr                    go to state 628
    expr_mtag               go to state 468
    basic_type_declaration  go to state 469
    make_decl               go to state 470
    make_struct_decl        go to state 471
    make_tuple_call         go to state 472
    make_dim_decl           go to state 473
    make_table_decl         go to state 474
    array_comprehension     go to state 475


State 1179

  241 type_declaration_no_options_list: type_declaration_no_options_list c_or_s type_declaration .
  696 type_declaration: type_declaration . '|' type_declaration_no_options
  697                 | type_declaration . '|' '#'

    '|'  shift, and go to state 369

    $default  reduce using rule 241 (type_declaration_no_options_list)


State 1180

  571 variable_name_with_pos_list: "$i" '(' expr ')' .

    $default  reduce using rule 571 (variable_name_with_pos_list)


State 1181

  574 variable_name_with_pos_list: variable_name_with_pos_list ',' "name" "aka" . "name"

    "name"  shift, and go to state 1264


State 1182

  508 variable_declaration: variable_name_with_pos_list ':' type_declaration copy_or_move . expr

    "struct"                          shift, and go to state 402
    "class"                           shift, and go to state 403
    "true"                            shift, and go to state 404
    "false"                           shift, and go to state 405
    "new"                             shift, and go to state 406
    "typeinfo"                        shift, and go to state 407
    "type"                            shift, and go to state 408
    "array"                           shift, and go to state 409
    "null"                            shift, and go to state 410
    "table"                           shift, and go to state 411
    "deref"                           shift, and go to state 412
    "cast"                            shift, and go to state 413
    "upcast"                          shift, and go to state 414
    "addr"                            shift, and go to state 415
    "reinterpret"                     shift, and go to state 416
    "unsafe"                          shift, and go to state 417
    "fixed_array"                     shift, and go to state 418
    "default"                         shift, and go to state 419
    "bool"                            shift, and go to state 222
    "void"                            shift, and go to state 223
    "string"                          shift, and go to state 224
    "int"                             shift, and go to state 226
    "int2"                            shift, and go to state 227
    "int3"                            shift, and go to state 228
    "int4"                            shift, and go to state 229
    "uint"                            shift, and go to state 230
    "bitfield"                        shift, and go to state 420
    "uint2"                           shift, and go to state 232
    "uint3"                           shift, and go to state 233
    "uint4"                           shift, and go to state 234
    "float"                           shift, and go to state 235
    "float2"                          shift, and go to state 236
    "float3"                          shift, and go to state 237
    "float4"                          shift, and go to state 238
    "range"                           shift, and go to state 239
    "urange"                          shift, and go to state 240
    "range64"                         shift, and go to state 241
    "urange64"                        shift, and go to state 242
    "int64"                           shift, and go to state 244
    "uint64"                          shift, and go to state 245
    "double"                          shift, and go to state 246
    "int8"                            shift, and go to state 249
    "uint8"                           shift, and go to state 250
    "int16"                           shift, and go to state 251
    "uint16"                          shift, and go to state 252
    "tuple"                           shift, and go to state 421
    "variant"                         shift, and go to state 422
    "generator"                       shift, and go to state 423
    "++"                              shift, and go to state 424
    "--"                              shift, and go to state 425
    "::"                              shift, and go to state 55
    "$$"                              shift, and go to state 426
    "$i"                              shift, and go to state 427
    "$v"                              shift, and go to state 428
    "$b"                              shift, and go to state 429
    "$a"                              shift, and go to state 430
    "$c"                              shift, and go to state 431
    "..."                             shift, and go to state 432
    "integer constant"                shift, and go to state 433
    "long integer constant"           shift, and go to state 434
    "unsigned integer constant"       shift, and go to state 435
    "unsigned long integer constant"  shift, and go to state 436
    "unsigned int8 constant"          shift, and go to state 437
    "floating point constant"         shift, and go to state 438
    "double constant"                 shift, and go to state 439
    "name"                            shift, and go to state 56
    "start of the string"             shift, and go to state 440
    "begin of code block"             shift, and go to state 441
    '-'                               shift, and go to state 442
    '+'                               shift, and go to state 443
    '*'                               shift, and go to state 444
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 445
    '!'                               shift, and go to state 446
    '['                               shift, and go to state 447
    '('                               shift, and go to state 448
    '$'                               shift, and go to state 449
    '@'                               shift, and go to state 450

    string_builder          go to state 451
    expr_reader             go to state 452
    expr_call_pipe          go to state 453
    name_in_namespace       go to state 454
    expr_new                go to state 455
    expr_cast               go to state 456
    expr_type_decl          go to state 457
    expr_type_info          go to state 458
    block_or_lambda         go to state 459
    expr_full_block         go to state 460
    expr_numeric_const      go to state 461
    expr_named_call         go to state 462
    expr_method_call        go to state 463
    func_addr_expr          go to state 464
    expr_field              go to state 465
    expr_call               go to state 466
    expr                    go to state 1265
    expr_mtag               go to state 468
    basic_type_declaration  go to state 469
    make_decl               go to state 470
    make_struct_decl        go to state 471
    make_tuple_call         go to state 472
    make_dim_decl           go to state 473
    make_table_decl         go to state 474
    array_comprehension     go to state 475


State 1183

   73 expression_while_loop: "while" '(' expr ')' expression_block .

    $default  reduce using rule 73 (expression_while_loop)


State 1184

   71 expression_for_loop: "for" '(' variable_name_with_pos_list "in" expr_list . ')' expression_block
  292 expr_list: expr_list . ',' expr

    ','  shift, and go to state 1055
    ')'  shift, and go to state 1266


State 1185

   74 expression_with: "with" '(' expr ')' expression_block .

    $default  reduce using rule 74 (expression_with)


State 1186

  213 expression_block: "begin of code block" expressions "end of code block" "finally" "begin of code block" expressions "end of code block" .

    $default  reduce using rule 213 (expression_block)


State 1187

   69 expression_if_then_else: if_or_static_if '(' expr ')' expression_block . expression_else

    "else"         shift, and go to state 1267
    "elif"         shift, and go to state 1268
    "static_elif"  shift, and go to state 1269

    $default  reduce using rule 57 (expression_else)

    elif_or_static_elif  go to state 1270
    expression_else      go to state 1271


State 1188

   70 expression_if_then_else: expression_if_one_liner "if" '(' expr ')' . expression_else_one_liner "end of expression"

    "else"  shift, and go to state 1272

    $default  reduce using rule 62 (expression_else_one_liner)

    expression_else_one_liner  go to state 1273


State 1189

  339 expr_method_call: expr . "->" "name" '(' ')'
  340                 | expr . "->" "name" '(' expr_list ')'
  350 expr_field: expr . '.' "name"
  351           | expr . '.' '.' "name"
  352           | expr . '.' "name" '(' ')'
  353           | expr . '.' "name" '(' expr_list ')'
  354           | expr . '.' basic_type_declaration '(' ')'
  355           | expr . '.' basic_type_declaration '(' expr_list ')'
  358           | expr . '.' $@17 error $@18
  380 expr: expr . "<<" expr
  381     | expr . ">>" expr
  382     | expr . "<<<" expr
  383     | expr . ">>>" expr
  384     | expr . '+' expr
  385     | expr . '-' expr
  386     | expr . '*' expr
  387     | expr . '/' expr
  388     | expr . '%' expr
  389     | expr . '<' expr
  390     | expr . '>' expr
  391     | expr . "==" expr
  392     | expr . "!=" expr
  393     | expr . "<=" expr
  394     | expr . ">=" expr
  395     | expr . '&' expr
  396     | expr . '|' expr
  397     | expr . '^' expr
  398     | expr . "&&" expr
  399     | expr . "||" expr
  400     | expr . "^^" expr
  401     | expr . ".." expr
  404     | expr . "++"
  405     | expr . "--"
  407     | expr . '[' expr ']'
  408     | expr . '.' '[' expr ']'
  409     | expr . "?[" expr ']'
  410     | expr . '.' "?[" expr ']'
  411     | expr . "?." "name"
  412     | expr . '.' "?." "name"
  421     | expr . "??" expr
  422     | expr . '?' expr ':' expr
  425     | expr . "is" "type" '<' $@19 type_declaration_no_options '>' $@20
  426     | expr . "is" basic_type_declaration
  427     | expr . "is" "name"
  428     | expr . "as" "name"
  431     | expr . "as" "type" '<' $@21 type_declaration '>' $@22
  432     | expr . "as" basic_type_declaration
  433     | expr . '?' "as" "name"
  436     | expr . '?' "as" "type" '<' $@23 type_declaration '>' $@24
  437     | expr . '?' "as" basic_type_declaration
  445     | expr . "<|" expr
  446     | expr . "|>" expr
  447     | expr . "|>" basic_type_declaration
  458 expr_mtag: expr . '.' "$f" '(' expr ')'
  459          | expr . "?." "$f" '(' expr ')'
  460          | expr . '.' '.' "$f" '(' expr ')'
  461          | expr . '.' "?." "$f" '(' expr ')'
  462          | expr . "as" "$f" '(' expr ')'
  463          | expr . '?' "as" "$f" '(' expr ')'
  464          | expr . "is" "$f" '(' expr ')'
  516 let_variable_name_with_pos_list: "$i" '(' expr . ')'

    "is"   shift, and go to state 637
    "as"   shift, and go to state 638
    "<<"   shift, and go to state 639
    ">>"   shift, and go to state 640
    "++"   shift, and go to state 641
    "--"   shift, and go to state 642
    "<="   shift, and go to state 643
    ">="   shift, and go to state 644
    "=="   shift, and go to state 645
    "!="   shift, and go to state 646
    "->"   shift, and go to state 647
    "??"   shift, and go to state 648
    "?."   shift, and go to state 649
    "?["   shift, and go to state 650
    "<|"   shift, and go to state 651
    "|>"   shift, and go to state 652
    "<<<"  shift, and go to state 653
    ">>>"  shift, and go to state 654
    "&&"   shift, and go to state 655
    "||"   shift, and go to state 656
    "^^"   shift, and go to state 657
    ".."   shift, and go to state 658
    '?'    shift, and go to state 659
    '|'    shift, and go to state 660
    '^'    shift, and go to state 661
    '&'    shift, and go to state 662
    '<'    shift, and go to state 663
    '>'    shift, and go to state 664
    '-'    shift, and go to state 665
    '+'    shift, and go to state 666
    '*'    shift, and go to state 667
    '/'    shift, and go to state 668
    '%'    shift, and go to state 669
    '.'    shift, and go to state 670
    '['    shift, and go to state 671
    ')'    shift, and go to state 1274


State 1190

  517 let_variable_name_with_pos_list: "name" "aka" "name" .

    $default  reduce using rule 517 (let_variable_name_with_pos_list)


State 1191

  271 tuple_expansion: tuple_expansion ',' . "name"

    "name"  shift, and go to state 1275


State 1192

  272 tuple_expansion_variable_declaration: '(' tuple_expansion ')' . ':' type_declaration_no_options copy_or_move_or_clone expr "end of expression"
  273                                     | '(' tuple_expansion ')' . optional_ref copy_or_move_or_clone expr "end of expression"

    ':'  shift, and go to state 1276
    '&'  shift, and go to state 397

    $default  reduce using rule 513 (optional_ref)

    optional_ref  go to state 1277


State 1193

  518 let_variable_name_with_pos_list: let_variable_name_with_pos_list ',' "name" .
  519                                | let_variable_name_with_pos_list ',' "name" . "aka" "name"

    "aka"  shift, and go to state 1278

    $default  reduce using rule 518 (let_variable_name_with_pos_list)


State 1194

  522 let_variable_declaration: let_variable_name_with_pos_list ':' type_declaration_no_options . "end of expression"
  523                         | let_variable_name_with_pos_list ':' type_declaration_no_options . copy_or_move_or_clone expr "end of expression"

    "<-"                 shift, and go to state 571
    ":="                 shift, and go to state 572
    "end of expression"  shift, and go to state 1279
    '='                  shift, and go to state 573

    copy_or_move_or_clone  go to state 1280


State 1195

  524 let_variable_declaration: let_variable_name_with_pos_list optional_ref copy_or_move_or_clone . expr "end of expression"

    "struct"                          shift, and go to state 402
    "class"                           shift, and go to state 403
    "true"                            shift, and go to state 404
    "false"                           shift, and go to state 405
    "new"                             shift, and go to state 406
    "typeinfo"                        shift, and go to state 407
    "type"                            shift, and go to state 408
    "array"                           shift, and go to state 409
    "null"                            shift, and go to state 410
    "table"                           shift, and go to state 411
    "deref"                           shift, and go to state 412
    "cast"                            shift, and go to state 413
    "upcast"                          shift, and go to state 414
    "addr"                            shift, and go to state 415
    "reinterpret"                     shift, and go to state 416
    "unsafe"                          shift, and go to state 417
    "fixed_array"                     shift, and go to state 418
    "default"                         shift, and go to state 419
    "bool"                            shift, and go to state 222
    "void"                            shift, and go to state 223
    "string"                          shift, and go to state 224
    "int"                             shift, and go to state 226
    "int2"                            shift, and go to state 227
    "int3"                            shift, and go to state 228
    "int4"                            shift, and go to state 229
    "uint"                            shift, and go to state 230
    "bitfield"                        shift, and go to state 420
    "uint2"                           shift, and go to state 232
    "uint3"                           shift, and go to state 233
    "uint4"                           shift, and go to state 234
    "float"                           shift, and go to state 235
    "float2"                          shift, and go to state 236
    "float3"                          shift, and go to state 237
    "float4"                          shift, and go to state 238
    "range"                           shift, and go to state 239
    "urange"                          shift, and go to state 240
    "range64"                         shift, and go to state 241
    "urange64"                        shift, and go to state 242
    "int64"                           shift, and go to state 244
    "uint64"                          shift, and go to state 245
    "double"                          shift, and go to state 246
    "int8"                            shift, and go to state 249
    "uint8"                           shift, and go to state 250
    "int16"                           shift, and go to state 251
    "uint16"                          shift, and go to state 252
    "tuple"                           shift, and go to state 421
    "variant"                         shift, and go to state 422
    "generator"                       shift, and go to state 423
    "++"                              shift, and go to state 424
    "--"                              shift, and go to state 425
    "::"                              shift, and go to state 55
    "$$"                              shift, and go to state 426
    "$i"                              shift, and go to state 427
    "$v"                              shift, and go to state 428
    "$b"                              shift, and go to state 429
    "$a"                              shift, and go to state 430
    "$c"                              shift, and go to state 431
    "..."                             shift, and go to state 432
    "integer constant"                shift, and go to state 433
    "long integer constant"           shift, and go to state 434
    "unsigned integer constant"       shift, and go to state 435
    "unsigned long integer constant"  shift, and go to state 436
    "unsigned int8 constant"          shift, and go to state 437
    "floating point constant"         shift, and go to state 438
    "double constant"                 shift, and go to state 439
    "name"                            shift, and go to state 56
    "start of the string"             shift, and go to state 440
    "begin of code block"             shift, and go to state 441
    '-'                               shift, and go to state 442
    '+'                               shift, and go to state 443
    '*'                               shift, and go to state 444
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 445
    '!'                               shift, and go to state 446
    '['                               shift, and go to state 447
    '('                               shift, and go to state 448
    '$'                               shift, and go to state 449
    '@'                               shift, and go to state 450

    string_builder          go to state 451
    expr_reader             go to state 452
    expr_call_pipe          go to state 453
    name_in_namespace       go to state 454
    expr_new                go to state 455
    expr_cast               go to state 456
    expr_type_decl          go to state 457
    expr_type_info          go to state 458
    block_or_lambda         go to state 459
    expr_full_block         go to state 460
    expr_numeric_const      go to state 461
    expr_named_call         go to state 462
    expr_method_call        go to state 463
    func_addr_expr          go to state 464
    expr_field              go to state 465
    expr_call               go to state 466
    expr                    go to state 1281
    expr_mtag               go to state 468
    basic_type_declaration  go to state 469
    make_decl               go to state 470
    make_struct_decl        go to state 471
    make_tuple_call         go to state 472
    make_dim_decl           go to state 473
    make_table_decl         go to state 474
    array_comprehension     go to state 475


State 1196

  483 struct_variable_declaration_list: struct_variable_declaration_list optional_annotation_list "def" optional_public_or_private_member_variable "abstract" . optional_constant $@26 function_declaration_header "end of expression"

    "const"  shift, and go to state 1282

    $default  reduce using rule 471 (optional_constant)

    optional_constant  go to state 1283


State 1197

  485 struct_variable_declaration_list: struct_variable_declaration_list optional_annotation_list "def" optional_public_or_private_member_variable optional_static_member_variable . optional_override optional_constant $@27 function_declaration_header expression_block

    "override"  shift, and go to state 1198
    "sealed"    shift, and go to state 1199

    $default  reduce using rule 468 (optional_override)

    optional_override  go to state 1284


State 1198

  469 optional_override: "override" .

    $default  reduce using rule 469 (optional_override)


State 1199

  470 optional_override: "sealed" .

    $default  reduce using rule 470 (optional_override)


State 1200

  478 structure_variable_declaration: optional_field_annotation optional_static_member_variable optional_override . optional_public_or_private_member_variable variable_declaration

    "public"   shift, and go to state 1094
    "private"  shift, and go to state 1095

    $default  reduce using rule 473 (optional_public_or_private_member_variable)

    optional_public_or_private_member_variable  go to state 1285


State 1201

  735 make_struct_decl: "struct" '<' $@72 type_declaration_no_options '>' $@73 . '(' use_initializer optional_make_struct_dim_decl ')'

    '('  shift, and go to state 1286


State 1202

  738 make_struct_decl: "class" '<' $@74 type_declaration_no_options '>' $@75 . '(' use_initializer optional_make_struct_dim_decl ')'

    '('  shift, and go to state 1287


State 1203

  249 new_type_declaration: '<' $@3 type_declaration '>' $@4 .

    $default  reduce using rule 249 (new_type_declaration)


State 1204

  253 expr_new: "new" new_type_declaration '(' use_initializer make_struct_single ')' .

    $default  reduce using rule 253 (expr_new)


State 1205

  289 expr_type_info: "typeinfo" name_in_namespace '<' "name" '>' '(' . expr ')'

    "struct"                          shift, and go to state 402
    "class"                           shift, and go to state 403
    "true"                            shift, and go to state 404
    "false"                           shift, and go to state 405
    "new"                             shift, and go to state 406
    "typeinfo"                        shift, and go to state 407
    "type"                            shift, and go to state 408
    "array"                           shift, and go to state 409
    "null"                            shift, and go to state 410
    "table"                           shift, and go to state 411
    "deref"                           shift, and go to state 412
    "cast"                            shift, and go to state 413
    "upcast"                          shift, and go to state 414
    "addr"                            shift, and go to state 415
    "reinterpret"                     shift, and go to state 416
    "unsafe"                          shift, and go to state 417
    "fixed_array"                     shift, and go to state 418
    "default"                         shift, and go to state 419
    "bool"                            shift, and go to state 222
    "void"                            shift, and go to state 223
    "string"                          shift, and go to state 224
    "int"                             shift, and go to state 226
    "int2"                            shift, and go to state 227
    "int3"                            shift, and go to state 228
    "int4"                            shift, and go to state 229
    "uint"                            shift, and go to state 230
    "bitfield"                        shift, and go to state 420
    "uint2"                           shift, and go to state 232
    "uint3"                           shift, and go to state 233
    "uint4"                           shift, and go to state 234
    "float"                           shift, and go to state 235
    "float2"                          shift, and go to state 236
    "float3"                          shift, and go to state 237
    "float4"                          shift, and go to state 238
    "range"                           shift, and go to state 239
    "urange"                          shift, and go to state 240
    "range64"                         shift, and go to state 241
    "urange64"                        shift, and go to state 242
    "int64"                           shift, and go to state 244
    "uint64"                          shift, and go to state 245
    "double"                          shift, and go to state 246
    "int8"                            shift, and go to state 249
    "uint8"                           shift, and go to state 250
    "int16"                           shift, and go to state 251
    "uint16"                          shift, and go to state 252
    "tuple"                           shift, and go to state 421
    "variant"                         shift, and go to state 422
    "generator"                       shift, and go to state 423
    "++"                              shift, and go to state 424
    "--"                              shift, and go to state 425
    "::"                              shift, and go to state 55
    "$$"                              shift, and go to state 426
    "$i"                              shift, and go to state 427
    "$v"                              shift, and go to state 428
    "$b"                              shift, and go to state 429
    "$a"                              shift, and go to state 430
    "$c"                              shift, and go to state 431
    "..."                             shift, and go to state 432
    "integer constant"                shift, and go to state 433
    "long integer constant"           shift, and go to state 434
    "unsigned integer constant"       shift, and go to state 435
    "unsigned long integer constant"  shift, and go to state 436
    "unsigned int8 constant"          shift, and go to state 437
    "floating point constant"         shift, and go to state 438
    "double constant"                 shift, and go to state 439
    "name"                            shift, and go to state 56
    "start of the string"             shift, and go to state 440
    "begin of code block"             shift, and go to state 441
    '-'                               shift, and go to state 442
    '+'                               shift, and go to state 443
    '*'                               shift, and go to state 444
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 445
    '!'                               shift, and go to state 446
    '['                               shift, and go to state 447
    '('                               shift, and go to state 448
    '$'                               shift, and go to state 449
    '@'                               shift, and go to state 450

    string_builder          go to state 451
    expr_reader             go to state 452
    expr_call_pipe          go to state 453
    name_in_namespace       go to state 454
    expr_new                go to state 455
    expr_cast               go to state 456
    expr_type_decl          go to state 457
    expr_type_info          go to state 458
    block_or_lambda         go to state 459
    expr_full_block         go to state 460
    expr_numeric_const      go to state 461
    expr_named_call         go to state 462
    expr_method_call        go to state 463
    func_addr_expr          go to state 464
    expr_field              go to state 465
    expr_call               go to state 466
    expr                    go to state 1288
    expr_mtag               go to state 468
    basic_type_declaration  go to state 469
    make_decl               go to state 470
    make_struct_decl        go to state 471
    make_tuple_call         go to state 472
    make_dim_decl           go to state 473
    make_table_decl         go to state 474
    array_comprehension     go to state 475


State 1206

  290 expr_type_info: "typeinfo" name_in_namespace '<' "name" c_or_s "name" . '>' '(' expr ')'

    '>'  shift, and go to state 1289


State 1207

  287 expr_type_decl: "type" '<' $@11 type_declaration '>' $@12 .

    $default  reduce using rule 287 (expr_type_decl)


State 1208

  754 make_dim_decl: "array" "struct" '<' $@82 type_declaration_no_options '>' . $@83 '(' use_initializer optional_make_struct_dim_decl ')'

    $default  reduce using rule 753 ($@83)

    $@83  go to state 1290


State 1209

  757 make_dim_decl: "array" "tuple" '<' $@84 type_declaration_no_options '>' . $@85 '(' use_initializer optional_make_struct_dim_decl ')'

    $default  reduce using rule 756 ($@85)

    $@85  go to state 1291


State 1210

  760 make_dim_decl: "array" "variant" '<' $@86 type_declaration_no_options '>' . $@87 '(' make_variant_dim ')'

    $default  reduce using rule 759 ($@87)

    $@87  go to state 1292


State 1211

  764 make_dim_decl: "array" '<' $@88 type_declaration_no_options '>' $@89 . '(' optional_expr_list ')'

    '('  shift, and go to state 1293


State 1212

  773 make_table_decl: "table" '<' type_declaration_no_options '>' '(' optional_expr_map_tuple_list . ')'

    ')'  shift, and go to state 1294


State 1213

  239 optional_expr_map_tuple_list: expr_map_tuple_list . optional_comma
  770 expr_map_tuple_list: expr_map_tuple_list . ',' make_map_tuple

    ','  shift, and go to state 811

    $default  reduce using rule 777 (optional_comma)

    optional_comma  go to state 1295


State 1214

  774 make_table_decl: "table" '<' type_declaration_no_options c_or_s type_declaration_no_options '>' . '(' optional_expr_map_tuple_list ')'

    '('  shift, and go to state 1296


State 1215

  278 expr_cast: "cast" '<' $@5 type_declaration_no_options '>' $@6 . expr

    "struct"                          shift, and go to state 402
    "class"                           shift, and go to state 403
    "true"                            shift, and go to state 404
    "false"                           shift, and go to state 405
    "new"                             shift, and go to state 406
    "typeinfo"                        shift, and go to state 407
    "type"                            shift, and go to state 408
    "array"                           shift, and go to state 409
    "null"                            shift, and go to state 410
    "table"                           shift, and go to state 411
    "deref"                           shift, and go to state 412
    "cast"                            shift, and go to state 413
    "upcast"                          shift, and go to state 414
    "addr"                            shift, and go to state 415
    "reinterpret"                     shift, and go to state 416
    "unsafe"                          shift, and go to state 417
    "fixed_array"                     shift, and go to state 418
    "default"                         shift, and go to state 419
    "bool"                            shift, and go to state 222
    "void"                            shift, and go to state 223
    "string"                          shift, and go to state 224
    "int"                             shift, and go to state 226
    "int2"                            shift, and go to state 227
    "int3"                            shift, and go to state 228
    "int4"                            shift, and go to state 229
    "uint"                            shift, and go to state 230
    "bitfield"                        shift, and go to state 420
    "uint2"                           shift, and go to state 232
    "uint3"                           shift, and go to state 233
    "uint4"                           shift, and go to state 234
    "float"                           shift, and go to state 235
    "float2"                          shift, and go to state 236
    "float3"                          shift, and go to state 237
    "float4"                          shift, and go to state 238
    "range"                           shift, and go to state 239
    "urange"                          shift, and go to state 240
    "range64"                         shift, and go to state 241
    "urange64"                        shift, and go to state 242
    "int64"                           shift, and go to state 244
    "uint64"                          shift, and go to state 245
    "double"                          shift, and go to state 246
    "int8"                            shift, and go to state 249
    "uint8"                           shift, and go to state 250
    "int16"                           shift, and go to state 251
    "uint16"                          shift, and go to state 252
    "tuple"                           shift, and go to state 421
    "variant"                         shift, and go to state 422
    "generator"                       shift, and go to state 423
    "++"                              shift, and go to state 424
    "--"                              shift, and go to state 425
    "::"                              shift, and go to state 55
    "$$"                              shift, and go to state 426
    "$i"                              shift, and go to state 427
    "$v"                              shift, and go to state 428
    "$b"                              shift, and go to state 429
    "$a"                              shift, and go to state 430
    "$c"                              shift, and go to state 431
    "..."                             shift, and go to state 432
    "integer constant"                shift, and go to state 433
    "long integer constant"           shift, and go to state 434
    "unsigned integer constant"       shift, and go to state 435
    "unsigned long integer constant"  shift, and go to state 436
    "unsigned int8 constant"          shift, and go to state 437
    "floating point constant"         shift, and go to state 438
    "double constant"                 shift, and go to state 439
    "name"                            shift, and go to state 56
    "start of the string"             shift, and go to state 440
    "begin of code block"             shift, and go to state 441
    '-'                               shift, and go to state 442
    '+'                               shift, and go to state 443
    '*'                               shift, and go to state 444
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 445
    '!'                               shift, and go to state 446
    '['                               shift, and go to state 447
    '('                               shift, and go to state 448
    '$'                               shift, and go to state 449
    '@'                               shift, and go to state 450

    string_builder          go to state 451
    expr_reader             go to state 452
    expr_call_pipe          go to state 453
    name_in_namespace       go to state 454
    expr_new                go to state 455
    expr_cast               go to state 456
    expr_type_decl          go to state 457
    expr_type_info          go to state 458
    block_or_lambda         go to state 459
    expr_full_block         go to state 460
    expr_numeric_const      go to state 461
    expr_named_call         go to state 462
    expr_method_call        go to state 463
    func_addr_expr          go to state 464
    expr_field              go to state 465
    expr_call               go to state 466
    expr                    go to state 1297
    expr_mtag               go to state 468
    basic_type_declaration  go to state 469
    make_decl               go to state 470
    make_struct_decl        go to state 471
    make_tuple_call         go to state 472
    make_dim_decl           go to state 473
    make_table_decl         go to state 474
    array_comprehension     go to state 475


State 1216

  281 expr_cast: "upcast" '<' $@7 type_declaration_no_options '>' $@8 . expr

    "struct"                          shift, and go to state 402
    "class"                           shift, and go to state 403
    "true"                            shift, and go to state 404
    "false"                           shift, and go to state 405
    "new"                             shift, and go to state 406
    "typeinfo"                        shift, and go to state 407
    "type"                            shift, and go to state 408
    "array"                           shift, and go to state 409
    "null"                            shift, and go to state 410
    "table"                           shift, and go to state 411
    "deref"                           shift, and go to state 412
    "cast"                            shift, and go to state 413
    "upcast"                          shift, and go to state 414
    "addr"                            shift, and go to state 415
    "reinterpret"                     shift, and go to state 416
    "unsafe"                          shift, and go to state 417
    "fixed_array"                     shift, and go to state 418
    "default"                         shift, and go to state 419
    "bool"                            shift, and go to state 222
    "void"                            shift, and go to state 223
    "string"                          shift, and go to state 224
    "int"                             shift, and go to state 226
    "int2"                            shift, and go to state 227
    "int3"                            shift, and go to state 228
    "int4"                            shift, and go to state 229
    "uint"                            shift, and go to state 230
    "bitfield"                        shift, and go to state 420
    "uint2"                           shift, and go to state 232
    "uint3"                           shift, and go to state 233
    "uint4"                           shift, and go to state 234
    "float"                           shift, and go to state 235
    "float2"                          shift, and go to state 236
    "float3"                          shift, and go to state 237
    "float4"                          shift, and go to state 238
    "range"                           shift, and go to state 239
    "urange"                          shift, and go to state 240
    "range64"                         shift, and go to state 241
    "urange64"                        shift, and go to state 242
    "int64"                           shift, and go to state 244
    "uint64"                          shift, and go to state 245
    "double"                          shift, and go to state 246
    "int8"                            shift, and go to state 249
    "uint8"                           shift, and go to state 250
    "int16"                           shift, and go to state 251
    "uint16"                          shift, and go to state 252
    "tuple"                           shift, and go to state 421
    "variant"                         shift, and go to state 422
    "generator"                       shift, and go to state 423
    "++"                              shift, and go to state 424
    "--"                              shift, and go to state 425
    "::"                              shift, and go to state 55
    "$$"                              shift, and go to state 426
    "$i"                              shift, and go to state 427
    "$v"                              shift, and go to state 428
    "$b"                              shift, and go to state 429
    "$a"                              shift, and go to state 430
    "$c"                              shift, and go to state 431
    "..."                             shift, and go to state 432
    "integer constant"                shift, and go to state 433
    "long integer constant"           shift, and go to state 434
    "unsigned integer constant"       shift, and go to state 435
    "unsigned long integer constant"  shift, and go to state 436
    "unsigned int8 constant"          shift, and go to state 437
    "floating point constant"         shift, and go to state 438
    "double constant"                 shift, and go to state 439
    "name"                            shift, and go to state 56
    "start of the string"             shift, and go to state 440
    "begin of code block"             shift, and go to state 441
    '-'                               shift, and go to state 442
    '+'                               shift, and go to state 443
    '*'                               shift, and go to state 444
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 445
    '!'                               shift, and go to state 446
    '['                               shift, and go to state 447
    '('                               shift, and go to state 448
    '$'                               shift, and go to state 449
    '@'                               shift, and go to state 450

    string_builder          go to state 451
    expr_reader             go to state 452
    expr_call_pipe          go to state 453
    name_in_namespace       go to state 454
    expr_new                go to state 455
    expr_cast               go to state 456
    expr_type_decl          go to state 457
    expr_type_info          go to state 458
    block_or_lambda         go to state 459
    expr_full_block         go to state 460
    expr_numeric_const      go to state 461
    expr_named_call         go to state 462
    expr_method_call        go to state 463
    func_addr_expr          go to state 464
    expr_field              go to state 465
    expr_call               go to state 466
    expr                    go to state 1298
    expr_mtag               go to state 468
    basic_type_declaration  go to state 469
    make_decl               go to state 470
    make_struct_decl        go to state 471
    make_tuple_call         go to state 472
    make_dim_decl           go to state 473
    make_table_decl         go to state 474
    array_comprehension     go to state 475


State 1217

  284 expr_cast: "reinterpret" '<' $@9 type_declaration_no_options '>' $@10 . expr

    "struct"                          shift, and go to state 402
    "class"                           shift, and go to state 403
    "true"                            shift, and go to state 404
    "false"                           shift, and go to state 405
    "new"                             shift, and go to state 406
    "typeinfo"                        shift, and go to state 407
    "type"                            shift, and go to state 408
    "array"                           shift, and go to state 409
    "null"                            shift, and go to state 410
    "table"                           shift, and go to state 411
    "deref"                           shift, and go to state 412
    "cast"                            shift, and go to state 413
    "upcast"                          shift, and go to state 414
    "addr"                            shift, and go to state 415
    "reinterpret"                     shift, and go to state 416
    "unsafe"                          shift, and go to state 417
    "fixed_array"                     shift, and go to state 418
    "default"                         shift, and go to state 419
    "bool"                            shift, and go to state 222
    "void"                            shift, and go to state 223
    "string"                          shift, and go to state 224
    "int"                             shift, and go to state 226
    "int2"                            shift, and go to state 227
    "int3"                            shift, and go to state 228
    "int4"                            shift, and go to state 229
    "uint"                            shift, and go to state 230
    "bitfield"                        shift, and go to state 420
    "uint2"                           shift, and go to state 232
    "uint3"                           shift, and go to state 233
    "uint4"                           shift, and go to state 234
    "float"                           shift, and go to state 235
    "float2"                          shift, and go to state 236
    "float3"                          shift, and go to state 237
    "float4"                          shift, and go to state 238
    "range"                           shift, and go to state 239
    "urange"                          shift, and go to state 240
    "range64"                         shift, and go to state 241
    "urange64"                        shift, and go to state 242
    "int64"                           shift, and go to state 244
    "uint64"                          shift, and go to state 245
    "double"                          shift, and go to state 246
    "int8"                            shift, and go to state 249
    "uint8"                           shift, and go to state 250
    "int16"                           shift, and go to state 251
    "uint16"                          shift, and go to state 252
    "tuple"                           shift, and go to state 421
    "variant"                         shift, and go to state 422
    "generator"                       shift, and go to state 423
    "++"                              shift, and go to state 424
    "--"                              shift, and go to state 425
    "::"                              shift, and go to state 55
    "$$"                              shift, and go to state 426
    "$i"                              shift, and go to state 427
    "$v"                              shift, and go to state 428
    "$b"                              shift, and go to state 429
    "$a"                              shift, and go to state 430
    "$c"                              shift, and go to state 431
    "..."                             shift, and go to state 432
    "integer constant"                shift, and go to state 433
    "long integer constant"           shift, and go to state 434
    "unsigned integer constant"       shift, and go to state 435
    "unsigned long integer constant"  shift, and go to state 436
    "unsigned int8 constant"          shift, and go to state 437
    "floating point constant"         shift, and go to state 438
    "double constant"                 shift, and go to state 439
    "name"                            shift, and go to state 56
    "start of the string"             shift, and go to state 440
    "begin of code block"             shift, and go to state 441
    '-'                               shift, and go to state 442
    '+'                               shift, and go to state 443
    '*'                               shift, and go to state 444
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 445
    '!'                               shift, and go to state 446
    '['                               shift, and go to state 447
    '('                               shift, and go to state 448
    '$'                               shift, and go to state 449
    '@'                               shift, and go to state 450

    string_builder          go to state 451
    expr_reader             go to state 452
    expr_call_pipe          go to state 453
    name_in_namespace       go to state 454
    expr_new                go to state 455
    expr_cast               go to state 456
    expr_type_decl          go to state 457
    expr_type_info          go to state 458
    block_or_lambda         go to state 459
    expr_full_block         go to state 460
    expr_numeric_const      go to state 461
    expr_named_call         go to state 462
    expr_method_call        go to state 463
    func_addr_expr          go to state 464
    expr_field              go to state 465
    expr_call               go to state 466
    expr                    go to state 1299
    expr_mtag               go to state 468
    basic_type_declaration  go to state 469
    make_decl               go to state 470
    make_struct_decl        go to state 471
    make_tuple_call         go to state 472
    make_dim_decl           go to state 473
    make_table_decl         go to state 474
    array_comprehension     go to state 475


State 1218

  768 make_dim_decl: "fixed_array" '<' $@90 type_declaration_no_options '>' $@91 . '(' expr_list optional_comma ')'

    '('  shift, and go to state 1300


State 1219

  744 make_struct_decl: "default" '<' $@78 type_declaration_no_options '>' $@79 . use_initializer

    "uninitialized"  shift, and go to state 970

    $default  reduce using rule 731 (use_initializer)

    use_initializer  go to state 1301


State 1220

  750 make_tuple_call: "tuple" '<' $@80 type_declaration_no_options '>' $@81 . '(' use_initializer optional_make_struct_dim_decl ')'

    '('  shift, and go to state 1302


State 1221

  741 make_struct_decl: "variant" '<' $@76 type_declaration_no_options '>' $@77 . '(' make_variant_dim ')'

    '('  shift, and go to state 1303


State 1222

  418 expr: "generator" '<' type_declaration_no_options '>' optional_capture_list '(' . ')'
  419     | "generator" '<' type_declaration_no_options '>' optional_capture_list '(' . expr ')'

    "struct"                          shift, and go to state 402
    "class"                           shift, and go to state 403
    "true"                            shift, and go to state 404
    "false"                           shift, and go to state 405
    "new"                             shift, and go to state 406
    "typeinfo"                        shift, and go to state 407
    "type"                            shift, and go to state 408
    "array"                           shift, and go to state 409
    "null"                            shift, and go to state 410
    "table"                           shift, and go to state 411
    "deref"                           shift, and go to state 412
    "cast"                            shift, and go to state 413
    "upcast"                          shift, and go to state 414
    "addr"                            shift, and go to state 415
    "reinterpret"                     shift, and go to state 416
    "unsafe"                          shift, and go to state 417
    "fixed_array"                     shift, and go to state 418
    "default"                         shift, and go to state 419
    "bool"                            shift, and go to state 222
    "void"                            shift, and go to state 223
    "string"                          shift, and go to state 224
    "int"                             shift, and go to state 226
    "int2"                            shift, and go to state 227
    "int3"                            shift, and go to state 228
    "int4"                            shift, and go to state 229
    "uint"                            shift, and go to state 230
    "bitfield"                        shift, and go to state 420
    "uint2"                           shift, and go to state 232
    "uint3"                           shift, and go to state 233
    "uint4"                           shift, and go to state 234
    "float"                           shift, and go to state 235
    "float2"                          shift, and go to state 236
    "float3"                          shift, and go to state 237
    "float4"                          shift, and go to state 238
    "range"                           shift, and go to state 239
    "urange"                          shift, and go to state 240
    "range64"                         shift, and go to state 241
    "urange64"                        shift, and go to state 242
    "int64"                           shift, and go to state 244
    "uint64"                          shift, and go to state 245
    "double"                          shift, and go to state 246
    "int8"                            shift, and go to state 249
    "uint8"                           shift, and go to state 250
    "int16"                           shift, and go to state 251
    "uint16"                          shift, and go to state 252
    "tuple"                           shift, and go to state 421
    "variant"                         shift, and go to state 422
    "generator"                       shift, and go to state 423
    "++"                              shift, and go to state 424
    "--"                              shift, and go to state 425
    "::"                              shift, and go to state 55
    "$$"                              shift, and go to state 426
    "$i"                              shift, and go to state 427
    "$v"                              shift, and go to state 428
    "$b"                              shift, and go to state 429
    "$a"                              shift, and go to state 430
    "$c"                              shift, and go to state 431
    "..."                             shift, and go to state 432
    "integer constant"                shift, and go to state 433
    "long integer constant"           shift, and go to state 434
    "unsigned integer constant"       shift, and go to state 435
    "unsigned long integer constant"  shift, and go to state 436
    "unsigned int8 constant"          shift, and go to state 437
    "floating point constant"         shift, and go to state 438
    "double constant"                 shift, and go to state 439
    "name"                            shift, and go to state 56
    "start of the string"             shift, and go to state 440
    "begin of code block"             shift, and go to state 441
    '-'                               shift, and go to state 442
    '+'                               shift, and go to state 443
    '*'                               shift, and go to state 444
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 445
    '!'                               shift, and go to state 446
    '['                               shift, and go to state 447
    '('                               shift, and go to state 448
    ')'                               shift, and go to state 1304
    '$'                               shift, and go to state 449
    '@'                               shift, and go to state 450

    string_builder          go to state 451
    expr_reader             go to state 452
    expr_call_pipe          go to state 453
    name_in_namespace       go to state 454
    expr_new                go to state 455
    expr_cast               go to state 456
    expr_type_decl          go to state 457
    expr_type_info          go to state 458
    block_or_lambda         go to state 459
    expr_full_block         go to state 460
    expr_numeric_const      go to state 461
    expr_named_call         go to state 462
    expr_method_call        go to state 463
    func_addr_expr          go to state 464
    expr_field              go to state 465
    expr_call               go to state 466
    expr                    go to state 1305
    expr_mtag               go to state 468
    basic_type_declaration  go to state 469
    make_decl               go to state 470
    make_struct_decl        go to state 471
    make_tuple_call         go to state 472
    make_dim_decl           go to state 473
    make_table_decl         go to state 474
    array_comprehension     go to state 475


State 1223

  420 expr: "generator" '<' type_declaration_no_options '>' optional_capture_list expression_block .

    $default  reduce using rule 420 (expr)


State 1224

  456 expr_mtag: "$c" '(' expr ')' '(' ')' .

    $default  reduce using rule 456 (expr_mtag)


State 1225

  292 expr_list: expr_list . ',' expr
  457 expr_mtag: "$c" '(' expr ')' '(' expr_list . ')'

    ','  shift, and go to state 1055
    ')'  shift, and go to state 1306


State 1226

  781 array_comprehension: "begin of code block" "for" variable_name_with_pos_list "in" expr_list "end of expression" . make_map_tuple array_comprehension_where "end of code block"

    "struct"                          shift, and go to state 402
    "class"                           shift, and go to state 403
    "true"                            shift, and go to state 404
    "false"                           shift, and go to state 405
    "new"                             shift, and go to state 406
    "typeinfo"                        shift, and go to state 407
    "type"                            shift, and go to state 408
    "array"                           shift, and go to state 409
    "null"                            shift, and go to state 410
    "table"                           shift, and go to state 411
    "deref"                           shift, and go to state 412
    "cast"                            shift, and go to state 413
    "upcast"                          shift, and go to state 414
    "addr"                            shift, and go to state 415
    "reinterpret"                     shift, and go to state 416
    "unsafe"                          shift, and go to state 417
    "fixed_array"                     shift, and go to state 418
    "default"                         shift, and go to state 419
    "bool"                            shift, and go to state 222
    "void"                            shift, and go to state 223
    "string"                          shift, and go to state 224
    "int"                             shift, and go to state 226
    "int2"                            shift, and go to state 227
    "int3"                            shift, and go to state 228
    "int4"                            shift, and go to state 229
    "uint"                            shift, and go to state 230
    "bitfield"                        shift, and go to state 420
    "uint2"                           shift, and go to state 232
    "uint3"                           shift, and go to state 233
    "uint4"                           shift, and go to state 234
    "float"                           shift, and go to state 235
    "float2"                          shift, and go to state 236
    "float3"                          shift, and go to state 237
    "float4"                          shift, and go to state 238
    "range"                           shift, and go to state 239
    "urange"                          shift, and go to state 240
    "range64"                         shift, and go to state 241
    "urange64"                        shift, and go to state 242
    "int64"                           shift, and go to state 244
    "uint64"                          shift, and go to state 245
    "double"                          shift, and go to state 246
    "int8"                            shift, and go to state 249
    "uint8"                           shift, and go to state 250
    "int16"                           shift, and go to state 251
    "uint16"                          shift, and go to state 252
    "tuple"                           shift, and go to state 421
    "variant"                         shift, and go to state 422
    "generator"                       shift, and go to state 423
    "++"                              shift, and go to state 424
    "--"                              shift, and go to state 425
    "::"                              shift, and go to state 55
    "$$"                              shift, and go to state 426
    "$i"                              shift, and go to state 427
    "$v"                              shift, and go to state 428
    "$b"                              shift, and go to state 429
    "$a"                              shift, and go to state 430
    "$c"                              shift, and go to state 431
    "..."                             shift, and go to state 432
    "integer constant"                shift, and go to state 433
    "long integer constant"           shift, and go to state 434
    "unsigned integer constant"       shift, and go to state 435
    "unsigned long integer constant"  shift, and go to state 436
    "unsigned int8 constant"          shift, and go to state 437
    "floating point constant"         shift, and go to state 438
    "double constant"                 shift, and go to state 439
    "name"                            shift, and go to state 56
    "start of the string"             shift, and go to state 440
    "begin of code block"             shift, and go to state 441
    '-'                               shift, and go to state 442
    '+'                               shift, and go to state 443
    '*'                               shift, and go to state 444
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 445
    '!'                               shift, and go to state 446
    '['                               shift, and go to state 447
    '('                               shift, and go to state 448
    '$'                               shift, and go to state 449
    '@'                               shift, and go to state 450

    string_builder          go to state 451
    expr_reader             go to state 452
    expr_call_pipe          go to state 453
    name_in_namespace       go to state 454
    expr_new                go to state 455
    expr_cast               go to state 456
    expr_type_decl          go to state 457
    expr_type_info          go to state 458
    block_or_lambda         go to state 459
    expr_full_block         go to state 460
    expr_numeric_const      go to state 461
    expr_named_call         go to state 462
    expr_method_call        go to state 463
    func_addr_expr          go to state 464
    expr_field              go to state 465
    expr_call               go to state 466
    expr                    go to state 617
    expr_mtag               go to state 468
    basic_type_declaration  go to state 469
    make_decl               go to state 470
    make_struct_decl        go to state 471
    make_map_tuple          go to state 1307
    make_tuple_call         go to state 472
    make_dim_decl           go to state 473
    make_table_decl         go to state 474
    array_comprehension     go to state 475


State 1227

  779 array_comprehension: '[' "for" variable_name_with_pos_list "in" expr_list "end of expression" . expr array_comprehension_where ']'

    "struct"                          shift, and go to state 402
    "class"                           shift, and go to state 403
    "true"                            shift, and go to state 404
    "false"                           shift, and go to state 405
    "new"                             shift, and go to state 406
    "typeinfo"                        shift, and go to state 407
    "type"                            shift, and go to state 408
    "array"                           shift, and go to state 409
    "null"                            shift, and go to state 410
    "table"                           shift, and go to state 411
    "deref"                           shift, and go to state 412
    "cast"                            shift, and go to state 413
    "upcast"                          shift, and go to state 414
    "addr"                            shift, and go to state 415
    "reinterpret"                     shift, and go to state 416
    "unsafe"                          shift, and go to state 417
    "fixed_array"                     shift, and go to state 418
    "default"                         shift, and go to state 419
    "bool"                            shift, and go to state 222
    "void"                            shift, and go to state 223
    "string"                          shift, and go to state 224
    "int"                             shift, and go to state 226
    "int2"                            shift, and go to state 227
    "int3"                            shift, and go to state 228
    "int4"                            shift, and go to state 229
    "uint"                            shift, and go to state 230
    "bitfield"                        shift, and go to state 420
    "uint2"                           shift, and go to state 232
    "uint3"                           shift, and go to state 233
    "uint4"                           shift, and go to state 234
    "float"                           shift, and go to state 235
    "float2"                          shift, and go to state 236
    "float3"                          shift, and go to state 237
    "float4"                          shift, and go to state 238
    "range"                           shift, and go to state 239
    "urange"                          shift, and go to state 240
    "range64"                         shift, and go to state 241
    "urange64"                        shift, and go to state 242
    "int64"                           shift, and go to state 244
    "uint64"                          shift, and go to state 245
    "double"                          shift, and go to state 246
    "int8"                            shift, and go to state 249
    "uint8"                           shift, and go to state 250
    "int16"                           shift, and go to state 251
    "uint16"                          shift, and go to state 252
    "tuple"                           shift, and go to state 421
    "variant"                         shift, and go to state 422
    "generator"                       shift, and go to state 423
    "++"                              shift, and go to state 424
    "--"                              shift, and go to state 425
    "::"                              shift, and go to state 55
    "$$"                              shift, and go to state 426
    "$i"                              shift, and go to state 427
    "$v"                              shift, and go to state 428
    "$b"                              shift, and go to state 429
    "$a"                              shift, and go to state 430
    "$c"                              shift, and go to state 431
    "..."                             shift, and go to state 432
    "integer constant"                shift, and go to state 433
    "long integer constant"           shift, and go to state 434
    "unsigned integer constant"       shift, and go to state 435
    "unsigned long integer constant"  shift, and go to state 436
    "unsigned int8 constant"          shift, and go to state 437
    "floating point constant"         shift, and go to state 438
    "double constant"                 shift, and go to state 439
    "name"                            shift, and go to state 56
    "start of the string"             shift, and go to state 440
    "begin of code block"             shift, and go to state 441
    '-'                               shift, and go to state 442
    '+'                               shift, and go to state 443
    '*'                               shift, and go to state 444
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 445
    '!'                               shift, and go to state 446
    '['                               shift, and go to state 447
    '('                               shift, and go to state 448
    '$'                               shift, and go to state 449
    '@'                               shift, and go to state 450

    string_builder          go to state 451
    expr_reader             go to state 452
    expr_call_pipe          go to state 453
    name_in_namespace       go to state 454
    expr_new                go to state 455
    expr_cast               go to state 456
    expr_type_decl          go to state 457
    expr_type_info          go to state 458
    block_or_lambda         go to state 459
    expr_full_block         go to state 460
    expr_numeric_const      go to state 461
    expr_named_call         go to state 462
    expr_method_call        go to state 463
    func_addr_expr          go to state 464
    expr_field              go to state 465
    expr_call               go to state 466
    expr                    go to state 1308
    expr_mtag               go to state 468
    basic_type_declaration  go to state 469
    make_decl               go to state 470
    make_struct_decl        go to state 471
    make_tuple_call         go to state 472
    make_dim_decl           go to state 473
    make_table_decl         go to state 474
    array_comprehension     go to state 475


State 1228

  292 expr_list: expr_list . ',' expr
  780 array_comprehension: '[' "iterator" "for" variable_name_with_pos_list "in" expr_list . "end of expression" expr array_comprehension_where ']'

    "end of expression"  shift, and go to state 1309
    ','                  shift, and go to state 1055


State 1229

  342 func_addr_name: "$i" '(' expr ')' .

    $default  reduce using rule 342 (func_addr_name)


State 1230

  465 expr_mtag: '@' '@' "$c" '(' expr ')' .

    $default  reduce using rule 465 (expr_mtag)


State 1231

  346 func_addr_expr: '@' '@' '<' $@13 type_declaration_no_options '>' . $@14 func_addr_name

    $default  reduce using rule 345 ($@14)

    $@14  go to state 1310


State 1232

  349 func_addr_expr: '@' '@' '<' $@15 optional_function_argument_list optional_function_type . '>' $@16 func_addr_name

    '>'  shift, and go to state 1311


State 1233

  719 make_struct_fields: "$f" '(' expr ')' . copy_or_move expr
  720                   | "$f" '(' expr ')' . ":=" expr

    "<-"  shift, and go to state 912
    ":="  shift, and go to state 1312
    '='   shift, and go to state 914

    copy_or_move  go to state 1313


State 1234

  337 expr_named_call: name_in_namespace '(' '[' make_struct_fields ']' ')' .

    $default  reduce using rule 337 (expr_named_call)


State 1235

  338 expr_named_call: name_in_namespace '(' expr_list ',' '[' make_struct_fields . ']' ')'
  717 make_struct_fields: make_struct_fields . ',' "name" copy_or_move expr
  718                   | make_struct_fields . ',' "name" ":=" expr
  721                   | make_struct_fields . ',' "$f" '(' expr ')' copy_or_move expr
  722                   | make_struct_fields . ',' "$f" '(' expr ')' ":=" expr

    ','  shift, and go to state 1026
    ']'  shift, and go to state 1314


State 1236

  721 make_struct_fields: make_struct_fields ',' "$f" '(' . expr ')' copy_or_move expr
  722                   | make_struct_fields ',' "$f" '(' . expr ')' ":=" expr

    "struct"                          shift, and go to state 402
    "class"                           shift, and go to state 403
    "true"                            shift, and go to state 404
    "false"                           shift, and go to state 405
    "new"                             shift, and go to state 406
    "typeinfo"                        shift, and go to state 407
    "type"                            shift, and go to state 408
    "array"                           shift, and go to state 409
    "null"                            shift, and go to state 410
    "table"                           shift, and go to state 411
    "deref"                           shift, and go to state 412
    "cast"                            shift, and go to state 413
    "upcast"                          shift, and go to state 414
    "addr"                            shift, and go to state 415
    "reinterpret"                     shift, and go to state 416
    "unsafe"                          shift, and go to state 417
    "fixed_array"                     shift, and go to state 418
    "default"                         shift, and go to state 419
    "bool"                            shift, and go to state 222
    "void"                            shift, and go to state 223
    "string"                          shift, and go to state 224
    "int"                             shift, and go to state 226
    "int2"                            shift, and go to state 227
    "int3"                            shift, and go to state 228
    "int4"                            shift, and go to state 229
    "uint"                            shift, and go to state 230
    "bitfield"                        shift, and go to state 420
    "uint2"                           shift, and go to state 232
    "uint3"                           shift, and go to state 233
    "uint4"                           shift, and go to state 234
    "float"                           shift, and go to state 235
    "float2"                          shift, and go to state 236
    "float3"                          shift, and go to state 237
    "float4"                          shift, and go to state 238
    "range"                           shift, and go to state 239
    "urange"                          shift, and go to state 240
    "range64"                         shift, and go to state 241
    "urange64"                        shift, and go to state 242
    "int64"                           shift, and go to state 244
    "uint64"                          shift, and go to state 245
    "double"                          shift, and go to state 246
    "int8"                            shift, and go to state 249
    "uint8"                           shift, and go to state 250
    "int16"                           shift, and go to state 251
    "uint16"                          shift, and go to state 252
    "tuple"                           shift, and go to state 421
    "variant"                         shift, and go to state 422
    "generator"                       shift, and go to state 423
    "++"                              shift, and go to state 424
    "--"                              shift, and go to state 425
    "::"                              shift, and go to state 55
    "$$"                              shift, and go to state 426
    "$i"                              shift, and go to state 427
    "$v"                              shift, and go to state 428
    "$b"                              shift, and go to state 429
    "$a"                              shift, and go to state 430
    "$c"                              shift, and go to state 431
    "..."                             shift, and go to state 432
    "integer constant"                shift, and go to state 433
    "long integer constant"           shift, and go to state 434
    "unsigned integer constant"       shift, and go to state 435
    "unsigned long integer constant"  shift, and go to state 436
    "unsigned int8 constant"          shift, and go to state 437
    "floating point constant"         shift, and go to state 438
    "double constant"                 shift, and go to state 439
    "name"                            shift, and go to state 56
    "start of the string"             shift, and go to state 440
    "begin of code block"             shift, and go to state 441
    '-'                               shift, and go to state 442
    '+'                               shift, and go to state 443
    '*'                               shift, and go to state 444
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 445
    '!'                               shift, and go to state 446
    '['                               shift, and go to state 447
    '('                               shift, and go to state 448
    '$'                               shift, and go to state 449
    '@'                               shift, and go to state 450

    string_builder          go to state 451
    expr_reader             go to state 452
    expr_call_pipe          go to state 453
    name_in_namespace       go to state 454
    expr_new                go to state 455
    expr_cast               go to state 456
    expr_type_decl          go to state 457
    expr_type_info          go to state 458
    block_or_lambda         go to state 459
    expr_full_block         go to state 460
    expr_numeric_const      go to state 461
    expr_named_call         go to state 462
    expr_method_call        go to state 463
    func_addr_expr          go to state 464
    expr_field              go to state 465
    expr_call               go to state 466
    expr                    go to state 1315
    expr_mtag               go to state 468
    basic_type_declaration  go to state 469
    make_decl               go to state 470
    make_struct_decl        go to state 471
    make_tuple_call         go to state 472
    make_dim_decl           go to state 473
    make_table_decl         go to state 474
    array_comprehension     go to state 475


State 1237

  718 make_struct_fields: make_struct_fields ',' "name" ":=" . expr

    "struct"                          shift, and go to state 402
    "class"                           shift, and go to state 403
    "true"                            shift, and go to state 404
    "false"                           shift, and go to state 405
    "new"                             shift, and go to state 406
    "typeinfo"                        shift, and go to state 407
    "type"                            shift, and go to state 408
    "array"                           shift, and go to state 409
    "null"                            shift, and go to state 410
    "table"                           shift, and go to state 411
    "deref"                           shift, and go to state 412
    "cast"                            shift, and go to state 413
    "upcast"                          shift, and go to state 414
    "addr"                            shift, and go to state 415
    "reinterpret"                     shift, and go to state 416
    "unsafe"                          shift, and go to state 417
    "fixed_array"                     shift, and go to state 418
    "default"                         shift, and go to state 419
    "bool"                            shift, and go to state 222
    "void"                            shift, and go to state 223
    "string"                          shift, and go to state 224
    "int"                             shift, and go to state 226
    "int2"                            shift, and go to state 227
    "int3"                            shift, and go to state 228
    "int4"                            shift, and go to state 229
    "uint"                            shift, and go to state 230
    "bitfield"                        shift, and go to state 420
    "uint2"                           shift, and go to state 232
    "uint3"                           shift, and go to state 233
    "uint4"                           shift, and go to state 234
    "float"                           shift, and go to state 235
    "float2"                          shift, and go to state 236
    "float3"                          shift, and go to state 237
    "float4"                          shift, and go to state 238
    "range"                           shift, and go to state 239
    "urange"                          shift, and go to state 240
    "range64"                         shift, and go to state 241
    "urange64"                        shift, and go to state 242
    "int64"                           shift, and go to state 244
    "uint64"                          shift, and go to state 245
    "double"                          shift, and go to state 246
    "int8"                            shift, and go to state 249
    "uint8"                           shift, and go to state 250
    "int16"                           shift, and go to state 251
    "uint16"                          shift, and go to state 252
    "tuple"                           shift, and go to state 421
    "variant"                         shift, and go to state 422
    "generator"                       shift, and go to state 423
    "++"                              shift, and go to state 424
    "--"                              shift, and go to state 425
    "::"                              shift, and go to state 55
    "$$"                              shift, and go to state 426
    "$i"                              shift, and go to state 427
    "$v"                              shift, and go to state 428
    "$b"                              shift, and go to state 429
    "$a"                              shift, and go to state 430
    "$c"                              shift, and go to state 431
    "..."                             shift, and go to state 432
    "integer constant"                shift, and go to state 433
    "long integer constant"           shift, and go to state 434
    "unsigned integer constant"       shift, and go to state 435
    "unsigned long integer constant"  shift, and go to state 436
    "unsigned int8 constant"          shift, and go to state 437
    "floating point constant"         shift, and go to state 438
    "double constant"                 shift, and go to state 439
    "name"                            shift, and go to state 56
    "start of the string"             shift, and go to state 440
    "begin of code block"             shift, and go to state 441
    '-'                               shift, and go to state 442
    '+'                               shift, and go to state 443
    '*'                               shift, and go to state 444
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 445
    '!'                               shift, and go to state 446
    '['                               shift, and go to state 447
    '('                               shift, and go to state 448
    '$'                               shift, and go to state 449
    '@'                               shift, and go to state 450

    string_builder          go to state 451
    expr_reader             go to state 452
    expr_call_pipe          go to state 453
    name_in_namespace       go to state 454
    expr_new                go to state 455
    expr_cast               go to state 456
    expr_type_decl          go to state 457
    expr_type_info          go to state 458
    block_or_lambda         go to state 459
    expr_full_block         go to state 460
    expr_numeric_const      go to state 461
    expr_named_call         go to state 462
    expr_method_call        go to state 463
    func_addr_expr          go to state 464
    expr_field              go to state 465
    expr_call               go to state 466
    expr                    go to state 1316
    expr_mtag               go to state 468
    basic_type_declaration  go to state 469
    make_decl               go to state 470
    make_struct_decl        go to state 471
    make_tuple_call         go to state 472
    make_dim_decl           go to state 473
    make_table_decl         go to state 474
    array_comprehension     go to state 475


State 1238

  717 make_struct_fields: make_struct_fields ',' "name" copy_or_move . expr

    "struct"                          shift, and go to state 402
    "class"                           shift, and go to state 403
    "true"                            shift, and go to state 404
    "false"                           shift, and go to state 405
    "new"                             shift, and go to state 406
    "typeinfo"                        shift, and go to state 407
    "type"                            shift, and go to state 408
    "array"                           shift, and go to state 409
    "null"                            shift, and go to state 410
    "table"                           shift, and go to state 411
    "deref"                           shift, and go to state 412
    "cast"                            shift, and go to state 413
    "upcast"                          shift, and go to state 414
    "addr"                            shift, and go to state 415
    "reinterpret"                     shift, and go to state 416
    "unsafe"                          shift, and go to state 417
    "fixed_array"                     shift, and go to state 418
    "default"                         shift, and go to state 419
    "bool"                            shift, and go to state 222
    "void"                            shift, and go to state 223
    "string"                          shift, and go to state 224
    "int"                             shift, and go to state 226
    "int2"                            shift, and go to state 227
    "int3"                            shift, and go to state 228
    "int4"                            shift, and go to state 229
    "uint"                            shift, and go to state 230
    "bitfield"                        shift, and go to state 420
    "uint2"                           shift, and go to state 232
    "uint3"                           shift, and go to state 233
    "uint4"                           shift, and go to state 234
    "float"                           shift, and go to state 235
    "float2"                          shift, and go to state 236
    "float3"                          shift, and go to state 237
    "float4"                          shift, and go to state 238
    "range"                           shift, and go to state 239
    "urange"                          shift, and go to state 240
    "range64"                         shift, and go to state 241
    "urange64"                        shift, and go to state 242
    "int64"                           shift, and go to state 244
    "uint64"                          shift, and go to state 245
    "double"                          shift, and go to state 246
    "int8"                            shift, and go to state 249
    "uint8"                           shift, and go to state 250
    "int16"                           shift, and go to state 251
    "uint16"                          shift, and go to state 252
    "tuple"                           shift, and go to state 421
    "variant"                         shift, and go to state 422
    "generator"                       shift, and go to state 423
    "++"                              shift, and go to state 424
    "--"                              shift, and go to state 425
    "::"                              shift, and go to state 55
    "$$"                              shift, and go to state 426
    "$i"                              shift, and go to state 427
    "$v"                              shift, and go to state 428
    "$b"                              shift, and go to state 429
    "$a"                              shift, and go to state 430
    "$c"                              shift, and go to state 431
    "..."                             shift, and go to state 432
    "integer constant"                shift, and go to state 433
    "long integer constant"           shift, and go to state 434
    "unsigned integer constant"       shift, and go to state 435
    "unsigned long integer constant"  shift, and go to state 436
    "unsigned int8 constant"          shift, and go to state 437
    "floating point constant"         shift, and go to state 438
    "double constant"                 shift, and go to state 439
    "name"                            shift, and go to state 56
    "start of the string"             shift, and go to state 440
    "begin of code block"             shift, and go to state 441
    '-'                               shift, and go to state 442
    '+'                               shift, and go to state 443
    '*'                               shift, and go to state 444
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 445
    '!'                               shift, and go to state 446
    '['                               shift, and go to state 447
    '('                               shift, and go to state 448
    '$'                               shift, and go to state 449
    '@'                               shift, and go to state 450

    string_builder          go to state 451
    expr_reader             go to state 452
    expr_call_pipe          go to state 453
    name_in_namespace       go to state 454
    expr_new                go to state 455
    expr_cast               go to state 456
    expr_type_decl          go to state 457
    expr_type_info          go to state 458
    block_or_lambda         go to state 459
    expr_full_block         go to state 460
    expr_numeric_const      go to state 461
    expr_named_call         go to state 462
    expr_method_call        go to state 463
    func_addr_expr          go to state 464
    expr_field              go to state 465
    expr_call               go to state 466
    expr                    go to state 1317
    expr_mtag               go to state 468
    basic_type_declaration  go to state 469
    make_decl               go to state 470
    make_struct_decl        go to state 471
    make_tuple_call         go to state 472
    make_dim_decl           go to state 473
    make_table_decl         go to state 474
    array_comprehension     go to state 475


State 1239

  301 capture_entry: "<-" "name" .

    $default  reduce using rule 301 (capture_entry)


State 1240

  302 capture_entry: ":=" "name" .

    $default  reduce using rule 302 (capture_entry)


State 1241

  303 capture_entry: "name" '(' . "name" ')'

    "name"  shift, and go to state 1318


State 1242

  300 capture_entry: '=' "name" .

    $default  reduce using rule 300 (capture_entry)


State 1243

  299 capture_entry: '&' "name" .

    $default  reduce using rule 299 (capture_entry)


State 1244

  305 capture_list: capture_list ',' . capture_entry

    "<-"    shift, and go to state 1146
    ":="    shift, and go to state 1147
    "name"  shift, and go to state 1148
    '='     shift, and go to state 1149
    '&'     shift, and go to state 1150

    capture_entry  go to state 1319


State 1245

  307 optional_capture_list: "capture" '(' capture_list ')' .

    $default  reduce using rule 307 (optional_capture_list)


State 1246

  294 block_or_simple_block: "=>" . expr
  295                      | "=>" . "<-" expr

    "struct"                          shift, and go to state 402
    "class"                           shift, and go to state 403
    "true"                            shift, and go to state 404
    "false"                           shift, and go to state 405
    "new"                             shift, and go to state 406
    "typeinfo"                        shift, and go to state 407
    "type"                            shift, and go to state 408
    "array"                           shift, and go to state 409
    "null"                            shift, and go to state 410
    "table"                           shift, and go to state 411
    "deref"                           shift, and go to state 412
    "cast"                            shift, and go to state 413
    "upcast"                          shift, and go to state 414
    "addr"                            shift, and go to state 415
    "reinterpret"                     shift, and go to state 416
    "unsafe"                          shift, and go to state 417
    "fixed_array"                     shift, and go to state 418
    "default"                         shift, and go to state 419
    "bool"                            shift, and go to state 222
    "void"                            shift, and go to state 223
    "string"                          shift, and go to state 224
    "int"                             shift, and go to state 226
    "int2"                            shift, and go to state 227
    "int3"                            shift, and go to state 228
    "int4"                            shift, and go to state 229
    "uint"                            shift, and go to state 230
    "bitfield"                        shift, and go to state 420
    "uint2"                           shift, and go to state 232
    "uint3"                           shift, and go to state 233
    "uint4"                           shift, and go to state 234
    "float"                           shift, and go to state 235
    "float2"                          shift, and go to state 236
    "float3"                          shift, and go to state 237
    "float4"                          shift, and go to state 238
    "range"                           shift, and go to state 239
    "urange"                          shift, and go to state 240
    "range64"                         shift, and go to state 241
    "urange64"                        shift, and go to state 242
    "int64"                           shift, and go to state 244
    "uint64"                          shift, and go to state 245
    "double"                          shift, and go to state 246
    "int8"                            shift, and go to state 249
    "uint8"                           shift, and go to state 250
    "int16"                           shift, and go to state 251
    "uint16"                          shift, and go to state 252
    "tuple"                           shift, and go to state 421
    "variant"                         shift, and go to state 422
    "generator"                       shift, and go to state 423
    "++"                              shift, and go to state 424
    "--"                              shift, and go to state 425
    "<-"                              shift, and go to state 1320
    "::"                              shift, and go to state 55
    "$$"                              shift, and go to state 426
    "$i"                              shift, and go to state 427
    "$v"                              shift, and go to state 428
    "$b"                              shift, and go to state 429
    "$a"                              shift, and go to state 430
    "$c"                              shift, and go to state 431
    "..."                             shift, and go to state 432
    "integer constant"                shift, and go to state 433
    "long integer constant"           shift, and go to state 434
    "unsigned integer constant"       shift, and go to state 435
    "unsigned long integer constant"  shift, and go to state 436
    "unsigned int8 constant"          shift, and go to state 437
    "floating point constant"         shift, and go to state 438
    "double constant"                 shift, and go to state 439
    "name"                            shift, and go to state 56
    "start of the string"             shift, and go to state 440
    "begin of code block"             shift, and go to state 441
    '-'                               shift, and go to state 442
    '+'                               shift, and go to state 443
    '*'                               shift, and go to state 444
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 445
    '!'                               shift, and go to state 446
    '['                               shift, and go to state 447
    '('                               shift, and go to state 448
    '$'                               shift, and go to state 449
    '@'                               shift, and go to state 450

    string_builder          go to state 451
    expr_reader             go to state 452
    expr_call_pipe          go to state 453
    name_in_namespace       go to state 454
    expr_new                go to state 455
    expr_cast               go to state 456
    expr_type_decl          go to state 457
    expr_type_info          go to state 458
    block_or_lambda         go to state 459
    expr_full_block         go to state 460
    expr_numeric_const      go to state 461
    expr_named_call         go to state 462
    expr_method_call        go to state 463
    func_addr_expr          go to state 464
    expr_field              go to state 465
    expr_call               go to state 466
    expr                    go to state 1321
    expr_mtag               go to state 468
    basic_type_declaration  go to state 469
    make_decl               go to state 470
    make_struct_decl        go to state 471
    make_tuple_call         go to state 472
    make_dim_decl           go to state 473
    make_table_decl         go to state 474
    array_comprehension     go to state 475


State 1247

  293 block_or_simple_block: expression_block .

    $default  reduce using rule 293 (block_or_simple_block)


State 1248

  308 expr_full_block: block_or_lambda optional_annotation_list optional_capture_list optional_function_argument_list optional_function_type block_or_simple_block .

    $default  reduce using rule 308 (expr_full_block)


State 1249

  309 expr_full_block_assumed_piped: block_or_lambda optional_annotation_list optional_capture_list optional_function_argument_list optional_function_type . expression_block

    "begin of code block"  shift, and go to state 323

    expression_block  go to state 1322


State 1250

  425 expr: expr "is" "type" '<' $@19 type_declaration_no_options . '>' $@20

    '>'  shift, and go to state 1323


State 1251

  464 expr_mtag: expr "is" "$f" '(' expr ')' .

    $default  reduce using rule 464 (expr_mtag)


State 1252

  431 expr: expr "as" "type" '<' $@21 type_declaration . '>' $@22
  696 type_declaration: type_declaration . '|' type_declaration_no_options
  697                 | type_declaration . '|' '#'

    '|'  shift, and go to state 369
    '>'  shift, and go to state 1324


State 1253

  462 expr_mtag: expr "as" "$f" '(' expr ')' .

    $default  reduce using rule 462 (expr_mtag)


State 1254

  340 expr_method_call: expr "->" "name" '(' expr_list ')' .

    $default  reduce using rule 340 (expr_method_call)


State 1255

  459 expr_mtag: expr "?." "$f" '(' expr ')' .

    $default  reduce using rule 459 (expr_mtag)


State 1256

  436 expr: expr '?' "as" "type" '<' $@23 . type_declaration '>' $@24

    "type"       shift, and go to state 216
    "array"      shift, and go to state 217
    "table"      shift, and go to state 218
    "typedecl"   shift, and go to state 219
    "iterator"   shift, and go to state 220
    "smart_ptr"  shift, and go to state 221
    "bool"       shift, and go to state 222
    "void"       shift, and go to state 223
    "string"     shift, and go to state 224
    "auto"       shift, and go to state 225
    "int"        shift, and go to state 226
    "int2"       shift, and go to state 227
    "int3"       shift, and go to state 228
    "int4"       shift, and go to state 229
    "uint"       shift, and go to state 230
    "bitfield"   shift, and go to state 231
    "uint2"      shift, and go to state 232
    "uint3"      shift, and go to state 233
    "uint4"      shift, and go to state 234
    "float"      shift, and go to state 235
    "float2"     shift, and go to state 236
    "float3"     shift, and go to state 237
    "float4"     shift, and go to state 238
    "range"      shift, and go to state 239
    "urange"     shift, and go to state 240
    "range64"    shift, and go to state 241
    "urange64"   shift, and go to state 242
    "block"      shift, and go to state 243
    "int64"      shift, and go to state 244
    "uint64"     shift, and go to state 245
    "double"     shift, and go to state 246
    "function"   shift, and go to state 247
    "lambda"     shift, and go to state 248
    "int8"       shift, and go to state 249
    "uint8"      shift, and go to state 250
    "int16"      shift, and go to state 251
    "uint16"     shift, and go to state 252
    "tuple"      shift, and go to state 253
    "variant"    shift, and go to state 254
    "::"         shift, and go to state 55
    "$t"         shift, and go to state 255
    "name"       shift, and go to state 56
    '$'          shift, and go to state 256

    name_in_namespace                   go to state 257
    basic_type_declaration              go to state 258
    structure_type_declaration          go to state 259
    auto_type_declaration               go to state 260
    bitfield_type_declaration           go to state 261
    type_declaration_no_options         go to state 262
    type_declaration_no_options_no_dim  go to state 263
    type_declaration                    go to state 1325


State 1257

  339 expr_method_call: expr . "->" "name" '(' ')'
  340                 | expr . "->" "name" '(' expr_list ')'
  350 expr_field: expr . '.' "name"
  351           | expr . '.' '.' "name"
  352           | expr . '.' "name" '(' ')'
  353           | expr . '.' "name" '(' expr_list ')'
  354           | expr . '.' basic_type_declaration '(' ')'
  355           | expr . '.' basic_type_declaration '(' expr_list ')'
  358           | expr . '.' $@17 error $@18
  380 expr: expr . "<<" expr
  381     | expr . ">>" expr
  382     | expr . "<<<" expr
  383     | expr . ">>>" expr
  384     | expr . '+' expr
  385     | expr . '-' expr
  386     | expr . '*' expr
  387     | expr . '/' expr
  388     | expr . '%' expr
  389     | expr . '<' expr
  390     | expr . '>' expr
  391     | expr . "==" expr
  392     | expr . "!=" expr
  393     | expr . "<=" expr
  394     | expr . ">=" expr
  395     | expr . '&' expr
  396     | expr . '|' expr
  397     | expr . '^' expr
  398     | expr . "&&" expr
  399     | expr . "||" expr
  400     | expr . "^^" expr
  401     | expr . ".." expr
  404     | expr . "++"
  405     | expr . "--"
  407     | expr . '[' expr ']'
  408     | expr . '.' '[' expr ']'
  409     | expr . "?[" expr ']'
  410     | expr . '.' "?[" expr ']'
  411     | expr . "?." "name"
  412     | expr . '.' "?." "name"
  421     | expr . "??" expr
  422     | expr . '?' expr ':' expr
  425     | expr . "is" "type" '<' $@19 type_declaration_no_options '>' $@20
  426     | expr . "is" basic_type_declaration
  427     | expr . "is" "name"
  428     | expr . "as" "name"
  431     | expr . "as" "type" '<' $@21 type_declaration '>' $@22
  432     | expr . "as" basic_type_declaration
  433     | expr . '?' "as" "name"
  436     | expr . '?' "as" "type" '<' $@23 type_declaration '>' $@24
  437     | expr . '?' "as" basic_type_declaration
  445     | expr . "<|" expr
  446     | expr . "|>" expr
  447     | expr . "|>" basic_type_declaration
  458 expr_mtag: expr . '.' "$f" '(' expr ')'
  459          | expr . "?." "$f" '(' expr ')'
  460          | expr . '.' '.' "$f" '(' expr ')'
  461          | expr . '.' "?." "$f" '(' expr ')'
  462          | expr . "as" "$f" '(' expr ')'
  463          | expr . '?' "as" "$f" '(' expr ')'
  463          | expr '?' "as" "$f" '(' expr . ')'
  464          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 637
    "as"   shift, and go to state 638
    "<<"   shift, and go to state 639
    ">>"   shift, and go to state 640
    "++"   shift, and go to state 641
    "--"   shift, and go to state 642
    "<="   shift, and go to state 643
    ">="   shift, and go to state 644
    "=="   shift, and go to state 645
    "!="   shift, and go to state 646
    "->"   shift, and go to state 647
    "??"   shift, and go to state 648
    "?."   shift, and go to state 649
    "?["   shift, and go to state 650
    "<|"   shift, and go to state 651
    "|>"   shift, and go to state 652
    "<<<"  shift, and go to state 653
    ">>>"  shift, and go to state 654
    "&&"   shift, and go to state 655
    "||"   shift, and go to state 656
    "^^"   shift, and go to state 657
    ".."   shift, and go to state 658
    '?'    shift, and go to state 659
    '|'    shift, and go to state 660
    '^'    shift, and go to state 661
    '&'    shift, and go to state 662
    '<'    shift, and go to state 663
    '>'    shift, and go to state 664
    '-'    shift, and go to state 665
    '+'    shift, and go to state 666
    '*'    shift, and go to state 667
    '/'    shift, and go to state 668
    '%'    shift, and go to state 669
    '.'    shift, and go to state 670
    '['    shift, and go to state 671
    ')'    shift, and go to state 1326


State 1258

  339 expr_method_call: expr . "->" "name" '(' ')'
  340                 | expr . "->" "name" '(' expr_list ')'
  350 expr_field: expr . '.' "name"
  351           | expr . '.' '.' "name"
  352           | expr . '.' "name" '(' ')'
  353           | expr . '.' "name" '(' expr_list ')'
  354           | expr . '.' basic_type_declaration '(' ')'
  355           | expr . '.' basic_type_declaration '(' expr_list ')'
  358           | expr . '.' $@17 error $@18
  380 expr: expr . "<<" expr
  381     | expr . ">>" expr
  382     | expr . "<<<" expr
  383     | expr . ">>>" expr
  384     | expr . '+' expr
  385     | expr . '-' expr
  386     | expr . '*' expr
  387     | expr . '/' expr
  388     | expr . '%' expr
  389     | expr . '<' expr
  390     | expr . '>' expr
  391     | expr . "==" expr
  392     | expr . "!=" expr
  393     | expr . "<=" expr
  394     | expr . ">=" expr
  395     | expr . '&' expr
  396     | expr . '|' expr
  397     | expr . '^' expr
  398     | expr . "&&" expr
  399     | expr . "||" expr
  400     | expr . "^^" expr
  401     | expr . ".." expr
  404     | expr . "++"
  405     | expr . "--"
  407     | expr . '[' expr ']'
  408     | expr . '.' '[' expr ']'
  409     | expr . "?[" expr ']'
  410     | expr . '.' "?[" expr ']'
  411     | expr . "?." "name"
  412     | expr . '.' "?." "name"
  421     | expr . "??" expr
  422     | expr . '?' expr ':' expr
  425     | expr . "is" "type" '<' $@19 type_declaration_no_options '>' $@20
  426     | expr . "is" basic_type_declaration
  427     | expr . "is" "name"
  428     | expr . "as" "name"
  431     | expr . "as" "type" '<' $@21 type_declaration '>' $@22
  432     | expr . "as" basic_type_declaration
  433     | expr . '?' "as" "name"
  436     | expr . '?' "as" "type" '<' $@23 type_declaration '>' $@24
  437     | expr . '?' "as" basic_type_declaration
  445     | expr . "<|" expr
  446     | expr . "|>" expr
  447     | expr . "|>" basic_type_declaration
  458 expr_mtag: expr . '.' "$f" '(' expr ')'
  459          | expr . "?." "$f" '(' expr ')'
  460          | expr . '.' '.' "$f" '(' expr ')'
  461          | expr . '.' "?." "$f" '(' expr ')'
  461          | expr '.' "?." "$f" '(' expr . ')'
  462          | expr . "as" "$f" '(' expr ')'
  463          | expr . '?' "as" "$f" '(' expr ')'
  464          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 637
    "as"   shift, and go to state 638
    "<<"   shift, and go to state 639
    ">>"   shift, and go to state 640
    "++"   shift, and go to state 641
    "--"   shift, and go to state 642
    "<="   shift, and go to state 643
    ">="   shift, and go to state 644
    "=="   shift, and go to state 645
    "!="   shift, and go to state 646
    "->"   shift, and go to state 647
    "??"   shift, and go to state 648
    "?."   shift, and go to state 649
    "?["   shift, and go to state 650
    "<|"   shift, and go to state 651
    "|>"   shift, and go to state 652
    "<<<"  shift, and go to state 653
    ">>>"  shift, and go to state 654
    "&&"   shift, and go to state 655
    "||"   shift, and go to state 656
    "^^"   shift, and go to state 657
    ".."   shift, and go to state 658
    '?'    shift, and go to state 659
    '|'    shift, and go to state 660
    '^'    shift, and go to state 661
    '&'    shift, and go to state 662
    '<'    shift, and go to state 663
    '>'    shift, and go to state 664
    '-'    shift, and go to state 665
    '+'    shift, and go to state 666
    '*'    shift, and go to state 667
    '/'    shift, and go to state 668
    '%'    shift, and go to state 669
    '.'    shift, and go to state 670
    '['    shift, and go to state 671
    ')'    shift, and go to state 1327


State 1259

  458 expr_mtag: expr '.' "$f" '(' expr ')' .

    $default  reduce using rule 458 (expr_mtag)


State 1260

  353 expr_field: expr '.' "name" '(' expr_list ')' .

    $default  reduce using rule 353 (expr_field)


State 1261

  339 expr_method_call: expr . "->" "name" '(' ')'
  340                 | expr . "->" "name" '(' expr_list ')'
  350 expr_field: expr . '.' "name"
  351           | expr . '.' '.' "name"
  352           | expr . '.' "name" '(' ')'
  353           | expr . '.' "name" '(' expr_list ')'
  354           | expr . '.' basic_type_declaration '(' ')'
  355           | expr . '.' basic_type_declaration '(' expr_list ')'
  358           | expr . '.' $@17 error $@18
  380 expr: expr . "<<" expr
  381     | expr . ">>" expr
  382     | expr . "<<<" expr
  383     | expr . ">>>" expr
  384     | expr . '+' expr
  385     | expr . '-' expr
  386     | expr . '*' expr
  387     | expr . '/' expr
  388     | expr . '%' expr
  389     | expr . '<' expr
  390     | expr . '>' expr
  391     | expr . "==" expr
  392     | expr . "!=" expr
  393     | expr . "<=" expr
  394     | expr . ">=" expr
  395     | expr . '&' expr
  396     | expr . '|' expr
  397     | expr . '^' expr
  398     | expr . "&&" expr
  399     | expr . "||" expr
  400     | expr . "^^" expr
  401     | expr . ".." expr
  404     | expr . "++"
  405     | expr . "--"
  407     | expr . '[' expr ']'
  408     | expr . '.' '[' expr ']'
  409     | expr . "?[" expr ']'
  410     | expr . '.' "?[" expr ']'
  411     | expr . "?." "name"
  412     | expr . '.' "?." "name"
  421     | expr . "??" expr
  422     | expr . '?' expr ':' expr
  425     | expr . "is" "type" '<' $@19 type_declaration_no_options '>' $@20
  426     | expr . "is" basic_type_declaration
  427     | expr . "is" "name"
  428     | expr . "as" "name"
  431     | expr . "as" "type" '<' $@21 type_declaration '>' $@22
  432     | expr . "as" basic_type_declaration
  433     | expr . '?' "as" "name"
  436     | expr . '?' "as" "type" '<' $@23 type_declaration '>' $@24
  437     | expr . '?' "as" basic_type_declaration
  445     | expr . "<|" expr
  446     | expr . "|>" expr
  447     | expr . "|>" basic_type_declaration
  458 expr_mtag: expr . '.' "$f" '(' expr ')'
  459          | expr . "?." "$f" '(' expr ')'
  460          | expr . '.' '.' "$f" '(' expr ')'
  460          | expr '.' '.' "$f" '(' expr . ')'
  461          | expr . '.' "?." "$f" '(' expr ')'
  462          | expr . "as" "$f" '(' expr ')'
  463          | expr . '?' "as" "$f" '(' expr ')'
  464          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 637
    "as"   shift, and go to state 638
    "<<"   shift, and go to state 639
    ">>"   shift, and go to state 640
    "++"   shift, and go to state 641
    "--"   shift, and go to state 642
    "<="   shift, and go to state 643
    ">="   shift, and go to state 644
    "=="   shift, and go to state 645
    "!="   shift, and go to state 646
    "->"   shift, and go to state 647
    "??"   shift, and go to state 648
    "?."   shift, and go to state 649
    "?["   shift, and go to state 650
    "<|"   shift, and go to state 651
    "|>"   shift, and go to state 652
    "<<<"  shift, and go to state 653
    ">>>"  shift, and go to state 654
    "&&"   shift, and go to state 655
    "||"   shift, and go to state 656
    "^^"   shift, and go to state 657
    ".."   shift, and go to state 658
    '?'    shift, and go to state 659
    '|'    shift, and go to state 660
    '^'    shift, and go to state 661
    '&'    shift, and go to state 662
    '<'    shift, and go to state 663
    '>'    shift, and go to state 664
    '-'    shift, and go to state 665
    '+'    shift, and go to state 666
    '*'    shift, and go to state 667
    '/'    shift, and go to state 668
    '%'    shift, and go to state 669
    '.'    shift, and go to state 670
    '['    shift, and go to state 671
    ')'    shift, and go to state 1328


State 1262

  355 expr_field: expr '.' basic_type_declaration '(' expr_list ')' .

    $default  reduce using rule 355 (expr_field)


State 1263

  642 type_declaration_no_options_no_dim: '$' name_in_namespace '<' $@38 type_declaration_no_options_list '>' '(' optional_expr_list . ')'

    ')'  shift, and go to state 1329


State 1264

  574 variable_name_with_pos_list: variable_name_with_pos_list ',' "name" "aka" "name" .

    $default  reduce using rule 574 (variable_name_with_pos_list)


State 1265

  339 expr_method_call: expr . "->" "name" '(' ')'
  340                 | expr . "->" "name" '(' expr_list ')'
  350 expr_field: expr . '.' "name"
  351           | expr . '.' '.' "name"
  352           | expr . '.' "name" '(' ')'
  353           | expr . '.' "name" '(' expr_list ')'
  354           | expr . '.' basic_type_declaration '(' ')'
  355           | expr . '.' basic_type_declaration '(' expr_list ')'
  358           | expr . '.' $@17 error $@18
  380 expr: expr . "<<" expr
  381     | expr . ">>" expr
  382     | expr . "<<<" expr
  383     | expr . ">>>" expr
  384     | expr . '+' expr
  385     | expr . '-' expr
  386     | expr . '*' expr
  387     | expr . '/' expr
  388     | expr . '%' expr
  389     | expr . '<' expr
  390     | expr . '>' expr
  391     | expr . "==" expr
  392     | expr . "!=" expr
  393     | expr . "<=" expr
  394     | expr . ">=" expr
  395     | expr . '&' expr
  396     | expr . '|' expr
  397     | expr . '^' expr
  398     | expr . "&&" expr
  399     | expr . "||" expr
  400     | expr . "^^" expr
  401     | expr . ".." expr
  404     | expr . "++"
  405     | expr . "--"
  407     | expr . '[' expr ']'
  408     | expr . '.' '[' expr ']'
  409     | expr . "?[" expr ']'
  410     | expr . '.' "?[" expr ']'
  411     | expr . "?." "name"
  412     | expr . '.' "?." "name"
  421     | expr . "??" expr
  422     | expr . '?' expr ':' expr
  425     | expr . "is" "type" '<' $@19 type_declaration_no_options '>' $@20
  426     | expr . "is" basic_type_declaration
  427     | expr . "is" "name"
  428     | expr . "as" "name"
  431     | expr . "as" "type" '<' $@21 type_declaration '>' $@22
  432     | expr . "as" basic_type_declaration
  433     | expr . '?' "as" "name"
  436     | expr . '?' "as" "type" '<' $@23 type_declaration '>' $@24
  437     | expr . '?' "as" basic_type_declaration
  445     | expr . "<|" expr
  446     | expr . "|>" expr
  447     | expr . "|>" basic_type_declaration
  458 expr_mtag: expr . '.' "$f" '(' expr ')'
  459          | expr . "?." "$f" '(' expr ')'
  460          | expr . '.' '.' "$f" '(' expr ')'
  461          | expr . '.' "?." "$f" '(' expr ')'
  462          | expr . "as" "$f" '(' expr ')'
  463          | expr . '?' "as" "$f" '(' expr ')'
  464          | expr . "is" "$f" '(' expr ')'
  508 variable_declaration: variable_name_with_pos_list ':' type_declaration copy_or_move expr .

    "is"   shift, and go to state 637
    "as"   shift, and go to state 638
    "<<"   shift, and go to state 639
    ">>"   shift, and go to state 640
    "++"   shift, and go to state 641
    "--"   shift, and go to state 642
    "<="   shift, and go to state 643
    ">="   shift, and go to state 644
    "=="   shift, and go to state 645
    "!="   shift, and go to state 646
    "->"   shift, and go to state 647
    "??"   shift, and go to state 648
    "?."   shift, and go to state 649
    "?["   shift, and go to state 650
    "<|"   shift, and go to state 651
    "|>"   shift, and go to state 652
    "<<<"  shift, and go to state 653
    ">>>"  shift, and go to state 654
    "&&"   shift, and go to state 655
    "||"   shift, and go to state 656
    "^^"   shift, and go to state 657
    ".."   shift, and go to state 658
    '?'    shift, and go to state 659
    '|'    shift, and go to state 660
    '^'    shift, and go to state 661
    '&'    shift, and go to state 662
    '<'    shift, and go to state 663
    '>'    shift, and go to state 664
    '-'    shift, and go to state 665
    '+'    shift, and go to state 666
    '*'    shift, and go to state 667
    '/'    shift, and go to state 668
    '%'    shift, and go to state 669
    '.'    shift, and go to state 670
    '['    shift, and go to state 671

    $default  reduce using rule 508 (variable_declaration)


State 1266

   71 expression_for_loop: "for" '(' variable_name_with_pos_list "in" expr_list ')' . expression_block

    "begin of code block"  shift, and go to state 323

    expression_block  go to state 1330


State 1267

   58 expression_else: "else" . expression_block

    "begin of code block"  shift, and go to state 323

    expression_block  go to state 1331


State 1268

   55 elif_or_static_elif: "elif" .

    $default  reduce using rule 55 (elif_or_static_elif)


State 1269

   56 elif_or_static_elif: "static_elif" .

    $default  reduce using rule 56 (elif_or_static_elif)


State 1270

   59 expression_else: elif_or_static_elif . '(' expr ')' expression_block expression_else

    '('  shift, and go to state 1332


State 1271

   69 expression_if_then_else: if_or_static_if '(' expr ')' expression_block expression_else .

    $default  reduce using rule 69 (expression_if_then_else)


State 1272

   63 expression_else_one_liner: "else" . expression_if_one_liner

    "struct"                          shift, and go to state 402
    "class"                           shift, and go to state 403
    "true"                            shift, and go to state 404
    "false"                           shift, and go to state 405
    "new"                             shift, and go to state 406
    "typeinfo"                        shift, and go to state 407
    "type"                            shift, and go to state 408
    "array"                           shift, and go to state 409
    "return"                          shift, and go to state 529
    "null"                            shift, and go to state 410
    "break"                           shift, and go to state 530
    "table"                           shift, and go to state 411
    "deref"                           shift, and go to state 412
    "cast"                            shift, and go to state 413
    "upcast"                          shift, and go to state 414
    "addr"                            shift, and go to state 415
    "continue"                        shift, and go to state 535
    "reinterpret"                     shift, and go to state 416
    "unsafe"                          shift, and go to state 417
    "fixed_array"                     shift, and go to state 418
    "default"                         shift, and go to state 419
    "bool"                            shift, and go to state 222
    "void"                            shift, and go to state 223
    "string"                          shift, and go to state 224
    "int"                             shift, and go to state 226
    "int2"                            shift, and go to state 227
    "int3"                            shift, and go to state 228
    "int4"                            shift, and go to state 229
    "uint"                            shift, and go to state 230
    "bitfield"                        shift, and go to state 420
    "uint2"                           shift, and go to state 232
    "uint3"                           shift, and go to state 233
    "uint4"                           shift, and go to state 234
    "float"                           shift, and go to state 235
    "float2"                          shift, and go to state 236
    "float3"                          shift, and go to state 237
    "float4"                          shift, and go to state 238
    "range"                           shift, and go to state 239
    "urange"                          shift, and go to state 240
    "range64"                         shift, and go to state 241
    "urange64"                        shift, and go to state 242
    "int64"                           shift, and go to state 244
    "uint64"                          shift, and go to state 245
    "double"                          shift, and go to state 246
    "int8"                            shift, and go to state 249
    "uint8"                           shift, and go to state 250
    "int16"                           shift, and go to state 251
    "uint16"                          shift, and go to state 252
    "tuple"                           shift, and go to state 421
    "variant"                         shift, and go to state 422
    "generator"                       shift, and go to state 423
    "yield"                           shift, and go to state 540
    "++"                              shift, and go to state 424
    "--"                              shift, and go to state 425
    "::"                              shift, and go to state 55
    "$$"                              shift, and go to state 426
    "$i"                              shift, and go to state 427
    "$v"                              shift, and go to state 428
    "$b"                              shift, and go to state 429
    "$a"                              shift, and go to state 430
    "$c"                              shift, and go to state 431
    "..."                             shift, and go to state 432
    "integer constant"                shift, and go to state 433
    "long integer constant"           shift, and go to state 434
    "unsigned integer constant"       shift, and go to state 435
    "unsigned long integer constant"  shift, and go to state 436
    "unsigned int8 constant"          shift, and go to state 437
    "floating point constant"         shift, and go to state 438
    "double constant"                 shift, and go to state 439
    "name"                            shift, and go to state 56
    "start of the string"             shift, and go to state 440
    "begin of code block"             shift, and go to state 441
    '-'                               shift, and go to state 442
    '+'                               shift, and go to state 443
    '*'                               shift, and go to state 444
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 445
    '!'                               shift, and go to state 446
    '['                               shift, and go to state 447
    '('                               shift, and go to state 448
    '$'                               shift, and go to state 449
    '@'                               shift, and go to state 450

    string_builder           go to state 451
    expr_reader              go to state 452
    expression_if_one_liner  go to state 1333
    expr_call_pipe           go to state 453
    name_in_namespace        go to state 454
    expr_new                 go to state 455
    expression_break         go to state 1334
    expression_continue      go to state 1335
    expression_return        go to state 1336
    expression_yield         go to state 1337
    expr_cast                go to state 456
    expr_type_decl           go to state 457
    expr_type_info           go to state 458
    block_or_lambda          go to state 459
    expr_full_block          go to state 460
    expr_numeric_const       go to state 461
    expr_named_call          go to state 462
    expr_method_call         go to state 463
    func_addr_expr           go to state 464
    expr_field               go to state 465
    expr_call                go to state 466
    expr                     go to state 1338
    expr_mtag                go to state 468
    basic_type_declaration   go to state 469
    make_decl                go to state 470
    make_struct_decl         go to state 471
    make_tuple_call          go to state 472
    make_dim_decl            go to state 473
    make_table_decl          go to state 474
    array_comprehension      go to state 475


State 1273

   70 expression_if_then_else: expression_if_one_liner "if" '(' expr ')' expression_else_one_liner . "end of expression"

    "end of expression"  shift, and go to state 1339


State 1274

  516 let_variable_name_with_pos_list: "$i" '(' expr ')' .

    $default  reduce using rule 516 (let_variable_name_with_pos_list)


State 1275

  271 tuple_expansion: tuple_expansion ',' "name" .

    $default  reduce using rule 271 (tuple_expansion)


State 1276

  272 tuple_expansion_variable_declaration: '(' tuple_expansion ')' ':' . type_declaration_no_options copy_or_move_or_clone expr "end of expression"

    "type"       shift, and go to state 216
    "array"      shift, and go to state 217
    "table"      shift, and go to state 218
    "typedecl"   shift, and go to state 219
    "iterator"   shift, and go to state 220
    "smart_ptr"  shift, and go to state 221
    "bool"       shift, and go to state 222
    "void"       shift, and go to state 223
    "string"     shift, and go to state 224
    "auto"       shift, and go to state 225
    "int"        shift, and go to state 226
    "int2"       shift, and go to state 227
    "int3"       shift, and go to state 228
    "int4"       shift, and go to state 229
    "uint"       shift, and go to state 230
    "bitfield"   shift, and go to state 231
    "uint2"      shift, and go to state 232
    "uint3"      shift, and go to state 233
    "uint4"      shift, and go to state 234
    "float"      shift, and go to state 235
    "float2"     shift, and go to state 236
    "float3"     shift, and go to state 237
    "float4"     shift, and go to state 238
    "range"      shift, and go to state 239
    "urange"     shift, and go to state 240
    "range64"    shift, and go to state 241
    "urange64"   shift, and go to state 242
    "block"      shift, and go to state 243
    "int64"      shift, and go to state 244
    "uint64"     shift, and go to state 245
    "double"     shift, and go to state 246
    "function"   shift, and go to state 247
    "lambda"     shift, and go to state 248
    "int8"       shift, and go to state 249
    "uint8"      shift, and go to state 250
    "int16"      shift, and go to state 251
    "uint16"     shift, and go to state 252
    "tuple"      shift, and go to state 253
    "variant"    shift, and go to state 254
    "::"         shift, and go to state 55
    "$t"         shift, and go to state 255
    "name"       shift, and go to state 56
    '$'          shift, and go to state 256

    name_in_namespace                   go to state 257
    basic_type_declaration              go to state 258
    structure_type_declaration          go to state 259
    auto_type_declaration               go to state 260
    bitfield_type_declaration           go to state 261
    type_declaration_no_options         go to state 1340
    type_declaration_no_options_no_dim  go to state 263


State 1277

  273 tuple_expansion_variable_declaration: '(' tuple_expansion ')' optional_ref . copy_or_move_or_clone expr "end of expression"

    "<-"  shift, and go to state 571
    ":="  shift, and go to state 572
    '='   shift, and go to state 573

    copy_or_move_or_clone  go to state 1341


State 1278

  519 let_variable_name_with_pos_list: let_variable_name_with_pos_list ',' "name" "aka" . "name"

    "name"  shift, and go to state 1342


State 1279

  522 let_variable_declaration: let_variable_name_with_pos_list ':' type_declaration_no_options "end of expression" .

    $default  reduce using rule 522 (let_variable_declaration)


State 1280

  523 let_variable_declaration: let_variable_name_with_pos_list ':' type_declaration_no_options copy_or_move_or_clone . expr "end of expression"

    "struct"                          shift, and go to state 402
    "class"                           shift, and go to state 403
    "true"                            shift, and go to state 404
    "false"                           shift, and go to state 405
    "new"                             shift, and go to state 406
    "typeinfo"                        shift, and go to state 407
    "type"                            shift, and go to state 408
    "array"                           shift, and go to state 409
    "null"                            shift, and go to state 410
    "table"                           shift, and go to state 411
    "deref"                           shift, and go to state 412
    "cast"                            shift, and go to state 413
    "upcast"                          shift, and go to state 414
    "addr"                            shift, and go to state 415
    "reinterpret"                     shift, and go to state 416
    "unsafe"                          shift, and go to state 417
    "fixed_array"                     shift, and go to state 418
    "default"                         shift, and go to state 419
    "bool"                            shift, and go to state 222
    "void"                            shift, and go to state 223
    "string"                          shift, and go to state 224
    "int"                             shift, and go to state 226
    "int2"                            shift, and go to state 227
    "int3"                            shift, and go to state 228
    "int4"                            shift, and go to state 229
    "uint"                            shift, and go to state 230
    "bitfield"                        shift, and go to state 420
    "uint2"                           shift, and go to state 232
    "uint3"                           shift, and go to state 233
    "uint4"                           shift, and go to state 234
    "float"                           shift, and go to state 235
    "float2"                          shift, and go to state 236
    "float3"                          shift, and go to state 237
    "float4"                          shift, and go to state 238
    "range"                           shift, and go to state 239
    "urange"                          shift, and go to state 240
    "range64"                         shift, and go to state 241
    "urange64"                        shift, and go to state 242
    "int64"                           shift, and go to state 244
    "uint64"                          shift, and go to state 245
    "double"                          shift, and go to state 246
    "int8"                            shift, and go to state 249
    "uint8"                           shift, and go to state 250
    "int16"                           shift, and go to state 251
    "uint16"                          shift, and go to state 252
    "tuple"                           shift, and go to state 421
    "variant"                         shift, and go to state 422
    "generator"                       shift, and go to state 423
    "++"                              shift, and go to state 424
    "--"                              shift, and go to state 425
    "::"                              shift, and go to state 55
    "$$"                              shift, and go to state 426
    "$i"                              shift, and go to state 427
    "$v"                              shift, and go to state 428
    "$b"                              shift, and go to state 429
    "$a"                              shift, and go to state 430
    "$c"                              shift, and go to state 431
    "..."                             shift, and go to state 432
    "integer constant"                shift, and go to state 433
    "long integer constant"           shift, and go to state 434
    "unsigned integer constant"       shift, and go to state 435
    "unsigned long integer constant"  shift, and go to state 436
    "unsigned int8 constant"          shift, and go to state 437
    "floating point constant"         shift, and go to state 438
    "double constant"                 shift, and go to state 439
    "name"                            shift, and go to state 56
    "start of the string"             shift, and go to state 440
    "begin of code block"             shift, and go to state 441
    '-'                               shift, and go to state 442
    '+'                               shift, and go to state 443
    '*'                               shift, and go to state 444
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 445
    '!'                               shift, and go to state 446
    '['                               shift, and go to state 447
    '('                               shift, and go to state 448
    '$'                               shift, and go to state 449
    '@'                               shift, and go to state 450

    string_builder          go to state 451
    expr_reader             go to state 452
    expr_call_pipe          go to state 453
    name_in_namespace       go to state 454
    expr_new                go to state 455
    expr_cast               go to state 456
    expr_type_decl          go to state 457
    expr_type_info          go to state 458
    block_or_lambda         go to state 459
    expr_full_block         go to state 460
    expr_numeric_const      go to state 461
    expr_named_call         go to state 462
    expr_method_call        go to state 463
    func_addr_expr          go to state 464
    expr_field              go to state 465
    expr_call               go to state 466
    expr                    go to state 1343
    expr_mtag               go to state 468
    basic_type_declaration  go to state 469
    make_decl               go to state 470
    make_struct_decl        go to state 471
    make_tuple_call         go to state 472
    make_dim_decl           go to state 473
    make_table_decl         go to state 474
    array_comprehension     go to state 475


State 1281

  339 expr_method_call: expr . "->" "name" '(' ')'
  340                 | expr . "->" "name" '(' expr_list ')'
  350 expr_field: expr . '.' "name"
  351           | expr . '.' '.' "name"
  352           | expr . '.' "name" '(' ')'
  353           | expr . '.' "name" '(' expr_list ')'
  354           | expr . '.' basic_type_declaration '(' ')'
  355           | expr . '.' basic_type_declaration '(' expr_list ')'
  358           | expr . '.' $@17 error $@18
  380 expr: expr . "<<" expr
  381     | expr . ">>" expr
  382     | expr . "<<<" expr
  383     | expr . ">>>" expr
  384     | expr . '+' expr
  385     | expr . '-' expr
  386     | expr . '*' expr
  387     | expr . '/' expr
  388     | expr . '%' expr
  389     | expr . '<' expr
  390     | expr . '>' expr
  391     | expr . "==" expr
  392     | expr . "!=" expr
  393     | expr . "<=" expr
  394     | expr . ">=" expr
  395     | expr . '&' expr
  396     | expr . '|' expr
  397     | expr . '^' expr
  398     | expr . "&&" expr
  399     | expr . "||" expr
  400     | expr . "^^" expr
  401     | expr . ".." expr
  404     | expr . "++"
  405     | expr . "--"
  407     | expr . '[' expr ']'
  408     | expr . '.' '[' expr ']'
  409     | expr . "?[" expr ']'
  410     | expr . '.' "?[" expr ']'
  411     | expr . "?." "name"
  412     | expr . '.' "?." "name"
  421     | expr . "??" expr
  422     | expr . '?' expr ':' expr
  425     | expr . "is" "type" '<' $@19 type_declaration_no_options '>' $@20
  426     | expr . "is" basic_type_declaration
  427     | expr . "is" "name"
  428     | expr . "as" "name"
  431     | expr . "as" "type" '<' $@21 type_declaration '>' $@22
  432     | expr . "as" basic_type_declaration
  433     | expr . '?' "as" "name"
  436     | expr . '?' "as" "type" '<' $@23 type_declaration '>' $@24
  437     | expr . '?' "as" basic_type_declaration
  445     | expr . "<|" expr
  446     | expr . "|>" expr
  447     | expr . "|>" basic_type_declaration
  458 expr_mtag: expr . '.' "$f" '(' expr ')'
  459          | expr . "?." "$f" '(' expr ')'
  460          | expr . '.' '.' "$f" '(' expr ')'
  461          | expr . '.' "?." "$f" '(' expr ')'
  462          | expr . "as" "$f" '(' expr ')'
  463          | expr . '?' "as" "$f" '(' expr ')'
  464          | expr . "is" "$f" '(' expr ')'
  524 let_variable_declaration: let_variable_name_with_pos_list optional_ref copy_or_move_or_clone expr . "end of expression"

    "is"                 shift, and go to state 637
    "as"                 shift, and go to state 638
    "<<"                 shift, and go to state 639
    ">>"                 shift, and go to state 640
    "++"                 shift, and go to state 641
    "--"                 shift, and go to state 642
    "<="                 shift, and go to state 643
    ">="                 shift, and go to state 644
    "=="                 shift, and go to state 645
    "!="                 shift, and go to state 646
    "->"                 shift, and go to state 647
    "??"                 shift, and go to state 648
    "?."                 shift, and go to state 649
    "?["                 shift, and go to state 650
    "<|"                 shift, and go to state 651
    "|>"                 shift, and go to state 652
    "<<<"                shift, and go to state 653
    ">>>"                shift, and go to state 654
    "&&"                 shift, and go to state 655
    "||"                 shift, and go to state 656
    "^^"                 shift, and go to state 657
    ".."                 shift, and go to state 658
    "end of expression"  shift, and go to state 1344
    '?'                  shift, and go to state 659
    '|'                  shift, and go to state 660
    '^'                  shift, and go to state 661
    '&'                  shift, and go to state 662
    '<'                  shift, and go to state 663
    '>'                  shift, and go to state 664
    '-'                  shift, and go to state 665
    '+'                  shift, and go to state 666
    '*'                  shift, and go to state 667
    '/'                  shift, and go to state 668
    '%'                  shift, and go to state 669
    '.'                  shift, and go to state 670
    '['                  shift, and go to state 671


State 1282

  472 optional_constant: "const" .

    $default  reduce using rule 472 (optional_constant)


State 1283

  483 struct_variable_declaration_list: struct_variable_declaration_list optional_annotation_list "def" optional_public_or_private_member_variable "abstract" optional_constant . $@26 function_declaration_header "end of expression"

    $default  reduce using rule 482 ($@26)

    $@26  go to state 1345


State 1284

  485 struct_variable_declaration_list: struct_variable_declaration_list optional_annotation_list "def" optional_public_or_private_member_variable optional_static_member_variable optional_override . optional_constant $@27 function_declaration_header expression_block

    "const"  shift, and go to state 1282

    $default  reduce using rule 471 (optional_constant)

    optional_constant  go to state 1346


State 1285

  478 structure_variable_declaration: optional_field_annotation optional_static_member_variable optional_override optional_public_or_private_member_variable . variable_declaration

    "$i"    shift, and go to state 706
    "name"  shift, and go to state 707

    variable_declaration         go to state 1347
    variable_name_with_pos_list  go to state 709


State 1286

  735 make_struct_decl: "struct" '<' $@72 type_declaration_no_options '>' $@73 '(' . use_initializer optional_make_struct_dim_decl ')'

    "uninitialized"  shift, and go to state 970

    $default  reduce using rule 731 (use_initializer)

    use_initializer  go to state 1348


State 1287

  738 make_struct_decl: "class" '<' $@74 type_declaration_no_options '>' $@75 '(' . use_initializer optional_make_struct_dim_decl ')'

    "uninitialized"  shift, and go to state 970

    $default  reduce using rule 731 (use_initializer)

    use_initializer  go to state 1349


State 1288

  289 expr_type_info: "typeinfo" name_in_namespace '<' "name" '>' '(' expr . ')'
  339 expr_method_call: expr . "->" "name" '(' ')'
  340                 | expr . "->" "name" '(' expr_list ')'
  350 expr_field: expr . '.' "name"
  351           | expr . '.' '.' "name"
  352           | expr . '.' "name" '(' ')'
  353           | expr . '.' "name" '(' expr_list ')'
  354           | expr . '.' basic_type_declaration '(' ')'
  355           | expr . '.' basic_type_declaration '(' expr_list ')'
  358           | expr . '.' $@17 error $@18
  380 expr: expr . "<<" expr
  381     | expr . ">>" expr
  382     | expr . "<<<" expr
  383     | expr . ">>>" expr
  384     | expr . '+' expr
  385     | expr . '-' expr
  386     | expr . '*' expr
  387     | expr . '/' expr
  388     | expr . '%' expr
  389     | expr . '<' expr
  390     | expr . '>' expr
  391     | expr . "==" expr
  392     | expr . "!=" expr
  393     | expr . "<=" expr
  394     | expr . ">=" expr
  395     | expr . '&' expr
  396     | expr . '|' expr
  397     | expr . '^' expr
  398     | expr . "&&" expr
  399     | expr . "||" expr
  400     | expr . "^^" expr
  401     | expr . ".." expr
  404     | expr . "++"
  405     | expr . "--"
  407     | expr . '[' expr ']'
  408     | expr . '.' '[' expr ']'
  409     | expr . "?[" expr ']'
  410     | expr . '.' "?[" expr ']'
  411     | expr . "?." "name"
  412     | expr . '.' "?." "name"
  421     | expr . "??" expr
  422     | expr . '?' expr ':' expr
  425     | expr . "is" "type" '<' $@19 type_declaration_no_options '>' $@20
  426     | expr . "is" basic_type_declaration
  427     | expr . "is" "name"
  428     | expr . "as" "name"
  431     | expr . "as" "type" '<' $@21 type_declaration '>' $@22
  432     | expr . "as" basic_type_declaration
  433     | expr . '?' "as" "name"
  436     | expr . '?' "as" "type" '<' $@23 type_declaration '>' $@24
  437     | expr . '?' "as" basic_type_declaration
  445     | expr . "<|" expr
  446     | expr . "|>" expr
  447     | expr . "|>" basic_type_declaration
  458 expr_mtag: expr . '.' "$f" '(' expr ')'
  459          | expr . "?." "$f" '(' expr ')'
  460          | expr . '.' '.' "$f" '(' expr ')'
  461          | expr . '.' "?." "$f" '(' expr ')'
  462          | expr . "as" "$f" '(' expr ')'
  463          | expr . '?' "as" "$f" '(' expr ')'
  464          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 637
    "as"   shift, and go to state 638
    "<<"   shift, and go to state 639
    ">>"   shift, and go to state 640
    "++"   shift, and go to state 641
    "--"   shift, and go to state 642
    "<="   shift, and go to state 643
    ">="   shift, and go to state 644
    "=="   shift, and go to state 645
    "!="   shift, and go to state 646
    "->"   shift, and go to state 647
    "??"   shift, and go to state 648
    "?."   shift, and go to state 649
    "?["   shift, and go to state 650
    "<|"   shift, and go to state 651
    "|>"   shift, and go to state 652
    "<<<"  shift, and go to state 653
    ">>>"  shift, and go to state 654
    "&&"   shift, and go to state 655
    "||"   shift, and go to state 656
    "^^"   shift, and go to state 657
    ".."   shift, and go to state 658
    '?'    shift, and go to state 659
    '|'    shift, and go to state 660
    '^'    shift, and go to state 661
    '&'    shift, and go to state 662
    '<'    shift, and go to state 663
    '>'    shift, and go to state 664
    '-'    shift, and go to state 665
    '+'    shift, and go to state 666
    '*'    shift, and go to state 667
    '/'    shift, and go to state 668
    '%'    shift, and go to state 669
    '.'    shift, and go to state 670
    '['    shift, and go to state 671
    ')'    shift, and go to state 1350


State 1289

  290 expr_type_info: "typeinfo" name_in_namespace '<' "name" c_or_s "name" '>' . '(' expr ')'

    '('  shift, and go to state 1351


State 1290

  754 make_dim_decl: "array" "struct" '<' $@82 type_declaration_no_options '>' $@83 . '(' use_initializer optional_make_struct_dim_decl ')'

    '('  shift, and go to state 1352


State 1291

  757 make_dim_decl: "array" "tuple" '<' $@84 type_declaration_no_options '>' $@85 . '(' use_initializer optional_make_struct_dim_decl ')'

    '('  shift, and go to state 1353


State 1292

  760 make_dim_decl: "array" "variant" '<' $@86 type_declaration_no_options '>' $@87 . '(' make_variant_dim ')'

    '('  shift, and go to state 1354


State 1293

  764 make_dim_decl: "array" '<' $@88 type_declaration_no_options '>' $@89 '(' . optional_expr_list ')'

    "struct"                          shift, and go to state 402
    "class"                           shift, and go to state 403
    "true"                            shift, and go to state 404
    "false"                           shift, and go to state 405
    "new"                             shift, and go to state 406
    "typeinfo"                        shift, and go to state 407
    "type"                            shift, and go to state 408
    "array"                           shift, and go to state 409
    "null"                            shift, and go to state 410
    "table"                           shift, and go to state 411
    "deref"                           shift, and go to state 412
    "cast"                            shift, and go to state 413
    "upcast"                          shift, and go to state 414
    "addr"                            shift, and go to state 415
    "reinterpret"                     shift, and go to state 416
    "unsafe"                          shift, and go to state 417
    "fixed_array"                     shift, and go to state 418
    "default"                         shift, and go to state 419
    "bool"                            shift, and go to state 222
    "void"                            shift, and go to state 223
    "string"                          shift, and go to state 224
    "int"                             shift, and go to state 226
    "int2"                            shift, and go to state 227
    "int3"                            shift, and go to state 228
    "int4"                            shift, and go to state 229
    "uint"                            shift, and go to state 230
    "bitfield"                        shift, and go to state 420
    "uint2"                           shift, and go to state 232
    "uint3"                           shift, and go to state 233
    "uint4"                           shift, and go to state 234
    "float"                           shift, and go to state 235
    "float2"                          shift, and go to state 236
    "float3"                          shift, and go to state 237
    "float4"                          shift, and go to state 238
    "range"                           shift, and go to state 239
    "urange"                          shift, and go to state 240
    "range64"                         shift, and go to state 241
    "urange64"                        shift, and go to state 242
    "int64"                           shift, and go to state 244
    "uint64"                          shift, and go to state 245
    "double"                          shift, and go to state 246
    "int8"                            shift, and go to state 249
    "uint8"                           shift, and go to state 250
    "int16"                           shift, and go to state 251
    "uint16"                          shift, and go to state 252
    "tuple"                           shift, and go to state 421
    "variant"                         shift, and go to state 422
    "generator"                       shift, and go to state 423
    "++"                              shift, and go to state 424
    "--"                              shift, and go to state 425
    "::"                              shift, and go to state 55
    "$$"                              shift, and go to state 426
    "$i"                              shift, and go to state 427
    "$v"                              shift, and go to state 428
    "$b"                              shift, and go to state 429
    "$a"                              shift, and go to state 430
    "$c"                              shift, and go to state 431
    "..."                             shift, and go to state 432
    "integer constant"                shift, and go to state 433
    "long integer constant"           shift, and go to state 434
    "unsigned integer constant"       shift, and go to state 435
    "unsigned long integer constant"  shift, and go to state 436
    "unsigned int8 constant"          shift, and go to state 437
    "floating point constant"         shift, and go to state 438
    "double constant"                 shift, and go to state 439
    "name"                            shift, and go to state 56
    "start of the string"             shift, and go to state 440
    "begin of code block"             shift, and go to state 441
    '-'                               shift, and go to state 442
    '+'                               shift, and go to state 443
    '*'                               shift, and go to state 444
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 445
    '!'                               shift, and go to state 446
    '['                               shift, and go to state 447
    '('                               shift, and go to state 448
    '$'                               shift, and go to state 449
    '@'                               shift, and go to state 450

    $default  reduce using rule 236 (optional_expr_list)

    string_builder          go to state 451
    expr_reader             go to state 452
    expr_call_pipe          go to state 453
    optional_expr_list      go to state 1355
    name_in_namespace       go to state 454
    expr_new                go to state 455
    expr_cast               go to state 456
    expr_type_decl          go to state 457
    expr_type_info          go to state 458
    expr_list               go to state 692
    block_or_lambda         go to state 459
    expr_full_block         go to state 460
    expr_numeric_const      go to state 461
    expr_named_call         go to state 462
    expr_method_call        go to state 463
    func_addr_expr          go to state 464
    expr_field              go to state 465
    expr_call               go to state 466
    expr                    go to state 628
    expr_mtag               go to state 468
    basic_type_declaration  go to state 469
    make_decl               go to state 470
    make_struct_decl        go to state 471
    make_tuple_call         go to state 472
    make_dim_decl           go to state 473
    make_table_decl         go to state 474
    array_comprehension     go to state 475


State 1294

  773 make_table_decl: "table" '<' type_declaration_no_options '>' '(' optional_expr_map_tuple_list ')' .

    $default  reduce using rule 773 (make_table_decl)


State 1295

  239 optional_expr_map_tuple_list: expr_map_tuple_list optional_comma .

    $default  reduce using rule 239 (optional_expr_map_tuple_list)


State 1296

  774 make_table_decl: "table" '<' type_declaration_no_options c_or_s type_declaration_no_options '>' '(' . optional_expr_map_tuple_list ')'

    "struct"                          shift, and go to state 402
    "class"                           shift, and go to state 403
    "true"                            shift, and go to state 404
    "false"                           shift, and go to state 405
    "new"                             shift, and go to state 406
    "typeinfo"                        shift, and go to state 407
    "type"                            shift, and go to state 408
    "array"                           shift, and go to state 409
    "null"                            shift, and go to state 410
    "table"                           shift, and go to state 411
    "deref"                           shift, and go to state 412
    "cast"                            shift, and go to state 413
    "upcast"                          shift, and go to state 414
    "addr"                            shift, and go to state 415
    "reinterpret"                     shift, and go to state 416
    "unsafe"                          shift, and go to state 417
    "fixed_array"                     shift, and go to state 418
    "default"                         shift, and go to state 419
    "bool"                            shift, and go to state 222
    "void"                            shift, and go to state 223
    "string"                          shift, and go to state 224
    "int"                             shift, and go to state 226
    "int2"                            shift, and go to state 227
    "int3"                            shift, and go to state 228
    "int4"                            shift, and go to state 229
    "uint"                            shift, and go to state 230
    "bitfield"                        shift, and go to state 420
    "uint2"                           shift, and go to state 232
    "uint3"                           shift, and go to state 233
    "uint4"                           shift, and go to state 234
    "float"                           shift, and go to state 235
    "float2"                          shift, and go to state 236
    "float3"                          shift, and go to state 237
    "float4"                          shift, and go to state 238
    "range"                           shift, and go to state 239
    "urange"                          shift, and go to state 240
    "range64"                         shift, and go to state 241
    "urange64"                        shift, and go to state 242
    "int64"                           shift, and go to state 244
    "uint64"                          shift, and go to state 245
    "double"                          shift, and go to state 246
    "int8"                            shift, and go to state 249
    "uint8"                           shift, and go to state 250
    "int16"                           shift, and go to state 251
    "uint16"                          shift, and go to state 252
    "tuple"                           shift, and go to state 421
    "variant"                         shift, and go to state 422
    "generator"                       shift, and go to state 423
    "++"                              shift, and go to state 424
    "--"                              shift, and go to state 425
    "::"                              shift, and go to state 55
    "$$"                              shift, and go to state 426
    "$i"                              shift, and go to state 427
    "$v"                              shift, and go to state 428
    "$b"                              shift, and go to state 429
    "$a"                              shift, and go to state 430
    "$c"                              shift, and go to state 431
    "..."                             shift, and go to state 432
    "integer constant"                shift, and go to state 433
    "long integer constant"           shift, and go to state 434
    "unsigned integer constant"       shift, and go to state 435
    "unsigned long integer constant"  shift, and go to state 436
    "unsigned int8 constant"          shift, and go to state 437
    "floating point constant"         shift, and go to state 438
    "double constant"                 shift, and go to state 439
    "name"                            shift, and go to state 56
    "start of the string"             shift, and go to state 440
    "begin of code block"             shift, and go to state 441
    '-'                               shift, and go to state 442
    '+'                               shift, and go to state 443
    '*'                               shift, and go to state 444
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 445
    '!'                               shift, and go to state 446
    '['                               shift, and go to state 447
    '('                               shift, and go to state 448
    '$'                               shift, and go to state 449
    '@'                               shift, and go to state 450

    $default  reduce using rule 238 (optional_expr_map_tuple_list)

    string_builder                go to state 451
    expr_reader                   go to state 452
    expr_call_pipe                go to state 453
    optional_expr_map_tuple_list  go to state 1356
    name_in_namespace             go to state 454
    expr_new                      go to state 455
    expr_cast                     go to state 456
    expr_type_decl                go to state 457
    expr_type_info                go to state 458
    block_or_lambda               go to state 459
    expr_full_block               go to state 460
    expr_numeric_const            go to state 461
    expr_named_call               go to state 462
    expr_method_call              go to state 463
    func_addr_expr                go to state 464
    expr_field                    go to state 465
    expr_call                     go to state 466
    expr                          go to state 617
    expr_mtag                     go to state 468
    basic_type_declaration        go to state 469
    make_decl                     go to state 470
    make_struct_decl              go to state 471
    make_map_tuple                go to state 618
    make_tuple_call               go to state 472
    make_dim_decl                 go to state 473
    expr_map_tuple_list           go to state 1213
    make_table_decl               go to state 474
    array_comprehension           go to state 475


State 1297

  278 expr_cast: "cast" '<' $@5 type_declaration_no_options '>' $@6 expr .
  339 expr_method_call: expr . "->" "name" '(' ')'
  340                 | expr . "->" "name" '(' expr_list ')'
  350 expr_field: expr . '.' "name"
  351           | expr . '.' '.' "name"
  352           | expr . '.' "name" '(' ')'
  353           | expr . '.' "name" '(' expr_list ')'
  354           | expr . '.' basic_type_declaration '(' ')'
  355           | expr . '.' basic_type_declaration '(' expr_list ')'
  358           | expr . '.' $@17 error $@18
  380 expr: expr . "<<" expr
  381     | expr . ">>" expr
  382     | expr . "<<<" expr
  383     | expr . ">>>" expr
  384     | expr . '+' expr
  385     | expr . '-' expr
  386     | expr . '*' expr
  387     | expr . '/' expr
  388     | expr . '%' expr
  389     | expr . '<' expr
  390     | expr . '>' expr
  391     | expr . "==" expr
  392     | expr . "!=" expr
  393     | expr . "<=" expr
  394     | expr . ">=" expr
  395     | expr . '&' expr
  396     | expr . '|' expr
  397     | expr . '^' expr
  398     | expr . "&&" expr
  399     | expr . "||" expr
  400     | expr . "^^" expr
  401     | expr . ".." expr
  404     | expr . "++"
  405     | expr . "--"
  407     | expr . '[' expr ']'
  408     | expr . '.' '[' expr ']'
  409     | expr . "?[" expr ']'
  410     | expr . '.' "?[" expr ']'
  411     | expr . "?." "name"
  412     | expr . '.' "?." "name"
  421     | expr . "??" expr
  422     | expr . '?' expr ':' expr
  425     | expr . "is" "type" '<' $@19 type_declaration_no_options '>' $@20
  426     | expr . "is" basic_type_declaration
  427     | expr . "is" "name"
  428     | expr . "as" "name"
  431     | expr . "as" "type" '<' $@21 type_declaration '>' $@22
  432     | expr . "as" basic_type_declaration
  433     | expr . '?' "as" "name"
  436     | expr . '?' "as" "type" '<' $@23 type_declaration '>' $@24
  437     | expr . '?' "as" basic_type_declaration
  445     | expr . "<|" expr
  446     | expr . "|>" expr
  447     | expr . "|>" basic_type_declaration
  458 expr_mtag: expr . '.' "$f" '(' expr ')'
  459          | expr . "?." "$f" '(' expr ')'
  460          | expr . '.' '.' "$f" '(' expr ')'
  461          | expr . '.' "?." "$f" '(' expr ')'
  462          | expr . "as" "$f" '(' expr ')'
  463          | expr . '?' "as" "$f" '(' expr ')'
  464          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 637
    "as"   shift, and go to state 638
    "<<"   shift, and go to state 639
    ">>"   shift, and go to state 640
    "++"   shift, and go to state 641
    "--"   shift, and go to state 642
    "->"   shift, and go to state 647
    "??"   shift, and go to state 648
    "?."   shift, and go to state 649
    "?["   shift, and go to state 650
    "<|"   shift, and go to state 651
    "|>"   shift, and go to state 652
    "<<<"  shift, and go to state 653
    ">>>"  shift, and go to state 654
    '-'    shift, and go to state 665
    '+'    shift, and go to state 666
    '*'    shift, and go to state 667
    '/'    shift, and go to state 668
    '%'    shift, and go to state 669
    '.'    shift, and go to state 670
    '['    shift, and go to state 671

    $default  reduce using rule 278 (expr_cast)


State 1298

  281 expr_cast: "upcast" '<' $@7 type_declaration_no_options '>' $@8 expr .
  339 expr_method_call: expr . "->" "name" '(' ')'
  340                 | expr . "->" "name" '(' expr_list ')'
  350 expr_field: expr . '.' "name"
  351           | expr . '.' '.' "name"
  352           | expr . '.' "name" '(' ')'
  353           | expr . '.' "name" '(' expr_list ')'
  354           | expr . '.' basic_type_declaration '(' ')'
  355           | expr . '.' basic_type_declaration '(' expr_list ')'
  358           | expr . '.' $@17 error $@18
  380 expr: expr . "<<" expr
  381     | expr . ">>" expr
  382     | expr . "<<<" expr
  383     | expr . ">>>" expr
  384     | expr . '+' expr
  385     | expr . '-' expr
  386     | expr . '*' expr
  387     | expr . '/' expr
  388     | expr . '%' expr
  389     | expr . '<' expr
  390     | expr . '>' expr
  391     | expr . "==" expr
  392     | expr . "!=" expr
  393     | expr . "<=" expr
  394     | expr . ">=" expr
  395     | expr . '&' expr
  396     | expr . '|' expr
  397     | expr . '^' expr
  398     | expr . "&&" expr
  399     | expr . "||" expr
  400     | expr . "^^" expr
  401     | expr . ".." expr
  404     | expr . "++"
  405     | expr . "--"
  407     | expr . '[' expr ']'
  408     | expr . '.' '[' expr ']'
  409     | expr . "?[" expr ']'
  410     | expr . '.' "?[" expr ']'
  411     | expr . "?." "name"
  412     | expr . '.' "?." "name"
  421     | expr . "??" expr
  422     | expr . '?' expr ':' expr
  425     | expr . "is" "type" '<' $@19 type_declaration_no_options '>' $@20
  426     | expr . "is" basic_type_declaration
  427     | expr . "is" "name"
  428     | expr . "as" "name"
  431     | expr . "as" "type" '<' $@21 type_declaration '>' $@22
  432     | expr . "as" basic_type_declaration
  433     | expr . '?' "as" "name"
  436     | expr . '?' "as" "type" '<' $@23 type_declaration '>' $@24
  437     | expr . '?' "as" basic_type_declaration
  445     | expr . "<|" expr
  446     | expr . "|>" expr
  447     | expr . "|>" basic_type_declaration
  458 expr_mtag: expr . '.' "$f" '(' expr ')'
  459          | expr . "?." "$f" '(' expr ')'
  460          | expr . '.' '.' "$f" '(' expr ')'
  461          | expr . '.' "?." "$f" '(' expr ')'
  462          | expr . "as" "$f" '(' expr ')'
  463          | expr . '?' "as" "$f" '(' expr ')'
  464          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 637
    "as"   shift, and go to state 638
    "<<"   shift, and go to state 639
    ">>"   shift, and go to state 640
    "++"   shift, and go to state 641
    "--"   shift, and go to state 642
    "->"   shift, and go to state 647
    "??"   shift, and go to state 648
    "?."   shift, and go to state 649
    "?["   shift, and go to state 650
    "<|"   shift, and go to state 651
    "|>"   shift, and go to state 652
    "<<<"  shift, and go to state 653
    ">>>"  shift, and go to state 654
    '-'    shift, and go to state 665
    '+'    shift, and go to state 666
    '*'    shift, and go to state 667
    '/'    shift, and go to state 668
    '%'    shift, and go to state 669
    '.'    shift, and go to state 670
    '['    shift, and go to state 671

    $default  reduce using rule 281 (expr_cast)


State 1299

  284 expr_cast: "reinterpret" '<' $@9 type_declaration_no_options '>' $@10 expr .
  339 expr_method_call: expr . "->" "name" '(' ')'
  340                 | expr . "->" "name" '(' expr_list ')'
  350 expr_field: expr . '.' "name"
  351           | expr . '.' '.' "name"
  352           | expr . '.' "name" '(' ')'
  353           | expr . '.' "name" '(' expr_list ')'
  354           | expr . '.' basic_type_declaration '(' ')'
  355           | expr . '.' basic_type_declaration '(' expr_list ')'
  358           | expr . '.' $@17 error $@18
  380 expr: expr . "<<" expr
  381     | expr . ">>" expr
  382     | expr . "<<<" expr
  383     | expr . ">>>" expr
  384     | expr . '+' expr
  385     | expr . '-' expr
  386     | expr . '*' expr
  387     | expr . '/' expr
  388     | expr . '%' expr
  389     | expr . '<' expr
  390     | expr . '>' expr
  391     | expr . "==" expr
  392     | expr . "!=" expr
  393     | expr . "<=" expr
  394     | expr . ">=" expr
  395     | expr . '&' expr
  396     | expr . '|' expr
  397     | expr . '^' expr
  398     | expr . "&&" expr
  399     | expr . "||" expr
  400     | expr . "^^" expr
  401     | expr . ".." expr
  404     | expr . "++"
  405     | expr . "--"
  407     | expr . '[' expr ']'
  408     | expr . '.' '[' expr ']'
  409     | expr . "?[" expr ']'
  410     | expr . '.' "?[" expr ']'
  411     | expr . "?." "name"
  412     | expr . '.' "?." "name"
  421     | expr . "??" expr
  422     | expr . '?' expr ':' expr
  425     | expr . "is" "type" '<' $@19 type_declaration_no_options '>' $@20
  426     | expr . "is" basic_type_declaration
  427     | expr . "is" "name"
  428     | expr . "as" "name"
  431     | expr . "as" "type" '<' $@21 type_declaration '>' $@22
  432     | expr . "as" basic_type_declaration
  433     | expr . '?' "as" "name"
  436     | expr . '?' "as" "type" '<' $@23 type_declaration '>' $@24
  437     | expr . '?' "as" basic_type_declaration
  445     | expr . "<|" expr
  446     | expr . "|>" expr
  447     | expr . "|>" basic_type_declaration
  458 expr_mtag: expr . '.' "$f" '(' expr ')'
  459          | expr . "?." "$f" '(' expr ')'
  460          | expr . '.' '.' "$f" '(' expr ')'
  461          | expr . '.' "?." "$f" '(' expr ')'
  462          | expr . "as" "$f" '(' expr ')'
  463          | expr . '?' "as" "$f" '(' expr ')'
  464          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 637
    "as"   shift, and go to state 638
    "<<"   shift, and go to state 639
    ">>"   shift, and go to state 640
    "++"   shift, and go to state 641
    "--"   shift, and go to state 642
    "->"   shift, and go to state 647
    "??"   shift, and go to state 648
    "?."   shift, and go to state 649
    "?["   shift, and go to state 650
    "<|"   shift, and go to state 651
    "|>"   shift, and go to state 652
    "<<<"  shift, and go to state 653
    ">>>"  shift, and go to state 654
    '-'    shift, and go to state 665
    '+'    shift, and go to state 666
    '*'    shift, and go to state 667
    '/'    shift, and go to state 668
    '%'    shift, and go to state 669
    '.'    shift, and go to state 670
    '['    shift, and go to state 671

    $default  reduce using rule 284 (expr_cast)


State 1300

  768 make_dim_decl: "fixed_array" '<' $@90 type_declaration_no_options '>' $@91 '(' . expr_list optional_comma ')'

    "struct"                          shift, and go to state 402
    "class"                           shift, and go to state 403
    "true"                            shift, and go to state 404
    "false"                           shift, and go to state 405
    "new"                             shift, and go to state 406
    "typeinfo"                        shift, and go to state 407
    "type"                            shift, and go to state 408
    "array"                           shift, and go to state 409
    "null"                            shift, and go to state 410
    "table"                           shift, and go to state 411
    "deref"                           shift, and go to state 412
    "cast"                            shift, and go to state 413
    "upcast"                          shift, and go to state 414
    "addr"                            shift, and go to state 415
    "reinterpret"                     shift, and go to state 416
    "unsafe"                          shift, and go to state 417
    "fixed_array"                     shift, and go to state 418
    "default"                         shift, and go to state 419
    "bool"                            shift, and go to state 222
    "void"                            shift, and go to state 223
    "string"                          shift, and go to state 224
    "int"                             shift, and go to state 226
    "int2"                            shift, and go to state 227
    "int3"                            shift, and go to state 228
    "int4"                            shift, and go to state 229
    "uint"                            shift, and go to state 230
    "bitfield"                        shift, and go to state 420
    "uint2"                           shift, and go to state 232
    "uint3"                           shift, and go to state 233
    "uint4"                           shift, and go to state 234
    "float"                           shift, and go to state 235
    "float2"                          shift, and go to state 236
    "float3"                          shift, and go to state 237
    "float4"                          shift, and go to state 238
    "range"                           shift, and go to state 239
    "urange"                          shift, and go to state 240
    "range64"                         shift, and go to state 241
    "urange64"                        shift, and go to state 242
    "int64"                           shift, and go to state 244
    "uint64"                          shift, and go to state 245
    "double"                          shift, and go to state 246
    "int8"                            shift, and go to state 249
    "uint8"                           shift, and go to state 250
    "int16"                           shift, and go to state 251
    "uint16"                          shift, and go to state 252
    "tuple"                           shift, and go to state 421
    "variant"                         shift, and go to state 422
    "generator"                       shift, and go to state 423
    "++"                              shift, and go to state 424
    "--"                              shift, and go to state 425
    "::"                              shift, and go to state 55
    "$$"                              shift, and go to state 426
    "$i"                              shift, and go to state 427
    "$v"                              shift, and go to state 428
    "$b"                              shift, and go to state 429
    "$a"                              shift, and go to state 430
    "$c"                              shift, and go to state 431
    "..."                             shift, and go to state 432
    "integer constant"                shift, and go to state 433
    "long integer constant"           shift, and go to state 434
    "unsigned integer constant"       shift, and go to state 435
    "unsigned long integer constant"  shift, and go to state 436
    "unsigned int8 constant"          shift, and go to state 437
    "floating point constant"         shift, and go to state 438
    "double constant"                 shift, and go to state 439
    "name"                            shift, and go to state 56
    "start of the string"             shift, and go to state 440
    "begin of code block"             shift, and go to state 441
    '-'                               shift, and go to state 442
    '+'                               shift, and go to state 443
    '*'                               shift, and go to state 444
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 445
    '!'                               shift, and go to state 446
    '['                               shift, and go to state 447
    '('                               shift, and go to state 448
    '$'                               shift, and go to state 449
    '@'                               shift, and go to state 450

    string_builder          go to state 451
    expr_reader             go to state 452
    expr_call_pipe          go to state 453
    name_in_namespace       go to state 454
    expr_new                go to state 455
    expr_cast               go to state 456
    expr_type_decl          go to state 457
    expr_type_info          go to state 458
    expr_list               go to state 1357
    block_or_lambda         go to state 459
    expr_full_block         go to state 460
    expr_numeric_const      go to state 461
    expr_named_call         go to state 462
    expr_method_call        go to state 463
    func_addr_expr          go to state 464
    expr_field              go to state 465
    expr_call               go to state 466
    expr                    go to state 628
    expr_mtag               go to state 468
    basic_type_declaration  go to state 469
    make_decl               go to state 470
    make_struct_decl        go to state 471
    make_tuple_call         go to state 472
    make_dim_decl           go to state 473
    make_table_decl         go to state 474
    array_comprehension     go to state 475


State 1301

  744 make_struct_decl: "default" '<' $@78 type_declaration_no_options '>' $@79 use_initializer .

    $default  reduce using rule 744 (make_struct_decl)


State 1302

  750 make_tuple_call: "tuple" '<' $@80 type_declaration_no_options '>' $@81 '(' . use_initializer optional_make_struct_dim_decl ')'

    "uninitialized"  shift, and go to state 970

    $default  reduce using rule 731 (use_initializer)

    use_initializer  go to state 1358


State 1303

  741 make_struct_decl: "variant" '<' $@76 type_declaration_no_options '>' $@77 '(' . make_variant_dim ')'

    "$f"    shift, and go to state 824
    "name"  shift, and go to state 1017

    make_struct_fields  go to state 1359
    make_variant_dim    go to state 1360


State 1304

  418 expr: "generator" '<' type_declaration_no_options '>' optional_capture_list '(' ')' .

    $default  reduce using rule 418 (expr)


State 1305

  339 expr_method_call: expr . "->" "name" '(' ')'
  340                 | expr . "->" "name" '(' expr_list ')'
  350 expr_field: expr . '.' "name"
  351           | expr . '.' '.' "name"
  352           | expr . '.' "name" '(' ')'
  353           | expr . '.' "name" '(' expr_list ')'
  354           | expr . '.' basic_type_declaration '(' ')'
  355           | expr . '.' basic_type_declaration '(' expr_list ')'
  358           | expr . '.' $@17 error $@18
  380 expr: expr . "<<" expr
  381     | expr . ">>" expr
  382     | expr . "<<<" expr
  383     | expr . ">>>" expr
  384     | expr . '+' expr
  385     | expr . '-' expr
  386     | expr . '*' expr
  387     | expr . '/' expr
  388     | expr . '%' expr
  389     | expr . '<' expr
  390     | expr . '>' expr
  391     | expr . "==" expr
  392     | expr . "!=" expr
  393     | expr . "<=" expr
  394     | expr . ">=" expr
  395     | expr . '&' expr
  396     | expr . '|' expr
  397     | expr . '^' expr
  398     | expr . "&&" expr
  399     | expr . "||" expr
  400     | expr . "^^" expr
  401     | expr . ".." expr
  404     | expr . "++"
  405     | expr . "--"
  407     | expr . '[' expr ']'
  408     | expr . '.' '[' expr ']'
  409     | expr . "?[" expr ']'
  410     | expr . '.' "?[" expr ']'
  411     | expr . "?." "name"
  412     | expr . '.' "?." "name"
  419     | "generator" '<' type_declaration_no_options '>' optional_capture_list '(' expr . ')'
  421     | expr . "??" expr
  422     | expr . '?' expr ':' expr
  425     | expr . "is" "type" '<' $@19 type_declaration_no_options '>' $@20
  426     | expr . "is" basic_type_declaration
  427     | expr . "is" "name"
  428     | expr . "as" "name"
  431     | expr . "as" "type" '<' $@21 type_declaration '>' $@22
  432     | expr . "as" basic_type_declaration
  433     | expr . '?' "as" "name"
  436     | expr . '?' "as" "type" '<' $@23 type_declaration '>' $@24
  437     | expr . '?' "as" basic_type_declaration
  445     | expr . "<|" expr
  446     | expr . "|>" expr
  447     | expr . "|>" basic_type_declaration
  458 expr_mtag: expr . '.' "$f" '(' expr ')'
  459          | expr . "?." "$f" '(' expr ')'
  460          | expr . '.' '.' "$f" '(' expr ')'
  461          | expr . '.' "?." "$f" '(' expr ')'
  462          | expr . "as" "$f" '(' expr ')'
  463          | expr . '?' "as" "$f" '(' expr ')'
  464          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 637
    "as"   shift, and go to state 638
    "<<"   shift, and go to state 639
    ">>"   shift, and go to state 640
    "++"   shift, and go to state 641
    "--"   shift, and go to state 642
    "<="   shift, and go to state 643
    ">="   shift, and go to state 644
    "=="   shift, and go to state 645
    "!="   shift, and go to state 646
    "->"   shift, and go to state 647
    "??"   shift, and go to state 648
    "?."   shift, and go to state 649
    "?["   shift, and go to state 650
    "<|"   shift, and go to state 651
    "|>"   shift, and go to state 652
    "<<<"  shift, and go to state 653
    ">>>"  shift, and go to state 654
    "&&"   shift, and go to state 655
    "||"   shift, and go to state 656
    "^^"   shift, and go to state 657
    ".."   shift, and go to state 658
    '?'    shift, and go to state 659
    '|'    shift, and go to state 660
    '^'    shift, and go to state 661
    '&'    shift, and go to state 662
    '<'    shift, and go to state 663
    '>'    shift, and go to state 664
    '-'    shift, and go to state 665
    '+'    shift, and go to state 666
    '*'    shift, and go to state 667
    '/'    shift, and go to state 668
    '%'    shift, and go to state 669
    '.'    shift, and go to state 670
    '['    shift, and go to state 671
    ')'    shift, and go to state 1361


State 1306

  457 expr_mtag: "$c" '(' expr ')' '(' expr_list ')' .

    $default  reduce using rule 457 (expr_mtag)


State 1307

  781 array_comprehension: "begin of code block" "for" variable_name_with_pos_list "in" expr_list "end of expression" make_map_tuple . array_comprehension_where "end of code block"

    "end of expression"  shift, and go to state 1362

    $default  reduce using rule 775 (array_comprehension_where)

    array_comprehension_where  go to state 1363


State 1308

  339 expr_method_call: expr . "->" "name" '(' ')'
  340                 | expr . "->" "name" '(' expr_list ')'
  350 expr_field: expr . '.' "name"
  351           | expr . '.' '.' "name"
  352           | expr . '.' "name" '(' ')'
  353           | expr . '.' "name" '(' expr_list ')'
  354           | expr . '.' basic_type_declaration '(' ')'
  355           | expr . '.' basic_type_declaration '(' expr_list ')'
  358           | expr . '.' $@17 error $@18
  380 expr: expr . "<<" expr
  381     | expr . ">>" expr
  382     | expr . "<<<" expr
  383     | expr . ">>>" expr
  384     | expr . '+' expr
  385     | expr . '-' expr
  386     | expr . '*' expr
  387     | expr . '/' expr
  388     | expr . '%' expr
  389     | expr . '<' expr
  390     | expr . '>' expr
  391     | expr . "==" expr
  392     | expr . "!=" expr
  393     | expr . "<=" expr
  394     | expr . ">=" expr
  395     | expr . '&' expr
  396     | expr . '|' expr
  397     | expr . '^' expr
  398     | expr . "&&" expr
  399     | expr . "||" expr
  400     | expr . "^^" expr
  401     | expr . ".." expr
  404     | expr . "++"
  405     | expr . "--"
  407     | expr . '[' expr ']'
  408     | expr . '.' '[' expr ']'
  409     | expr . "?[" expr ']'
  410     | expr . '.' "?[" expr ']'
  411     | expr . "?." "name"
  412     | expr . '.' "?." "name"
  421     | expr . "??" expr
  422     | expr . '?' expr ':' expr
  425     | expr . "is" "type" '<' $@19 type_declaration_no_options '>' $@20
  426     | expr . "is" basic_type_declaration
  427     | expr . "is" "name"
  428     | expr . "as" "name"
  431     | expr . "as" "type" '<' $@21 type_declaration '>' $@22
  432     | expr . "as" basic_type_declaration
  433     | expr . '?' "as" "name"
  436     | expr . '?' "as" "type" '<' $@23 type_declaration '>' $@24
  437     | expr . '?' "as" basic_type_declaration
  445     | expr . "<|" expr
  446     | expr . "|>" expr
  447     | expr . "|>" basic_type_declaration
  458 expr_mtag: expr . '.' "$f" '(' expr ')'
  459          | expr . "?." "$f" '(' expr ')'
  460          | expr . '.' '.' "$f" '(' expr ')'
  461          | expr . '.' "?." "$f" '(' expr ')'
  462          | expr . "as" "$f" '(' expr ')'
  463          | expr . '?' "as" "$f" '(' expr ')'
  464          | expr . "is" "$f" '(' expr ')'
  779 array_comprehension: '[' "for" variable_name_with_pos_list "in" expr_list "end of expression" expr . array_comprehension_where ']'

    "is"                 shift, and go to state 637
    "as"                 shift, and go to state 638
    "<<"                 shift, and go to state 639
    ">>"                 shift, and go to state 640
    "++"                 shift, and go to state 641
    "--"                 shift, and go to state 642
    "<="                 shift, and go to state 643
    ">="                 shift, and go to state 644
    "=="                 shift, and go to state 645
    "!="                 shift, and go to state 646
    "->"                 shift, and go to state 647
    "??"                 shift, and go to state 648
    "?."                 shift, and go to state 649
    "?["                 shift, and go to state 650
    "<|"                 shift, and go to state 651
    "|>"                 shift, and go to state 652
    "<<<"                shift, and go to state 653
    ">>>"                shift, and go to state 654
    "&&"                 shift, and go to state 655
    "||"                 shift, and go to state 656
    "^^"                 shift, and go to state 657
    ".."                 shift, and go to state 658
    "end of expression"  shift, and go to state 1362
    '?'                  shift, and go to state 659
    '|'                  shift, and go to state 660
    '^'                  shift, and go to state 661
    '&'                  shift, and go to state 662
    '<'                  shift, and go to state 663
    '>'                  shift, and go to state 664
    '-'                  shift, and go to state 665
    '+'                  shift, and go to state 666
    '*'                  shift, and go to state 667
    '/'                  shift, and go to state 668
    '%'                  shift, and go to state 669
    '.'                  shift, and go to state 670
    '['                  shift, and go to state 671

    $default  reduce using rule 775 (array_comprehension_where)

    array_comprehension_where  go to state 1364


State 1309

  780 array_comprehension: '[' "iterator" "for" variable_name_with_pos_list "in" expr_list "end of expression" . expr array_comprehension_where ']'

    "struct"                          shift, and go to state 402
    "class"                           shift, and go to state 403
    "true"                            shift, and go to state 404
    "false"                           shift, and go to state 405
    "new"                             shift, and go to state 406
    "typeinfo"                        shift, and go to state 407
    "type"                            shift, and go to state 408
    "array"                           shift, and go to state 409
    "null"                            shift, and go to state 410
    "table"                           shift, and go to state 411
    "deref"                           shift, and go to state 412
    "cast"                            shift, and go to state 413
    "upcast"                          shift, and go to state 414
    "addr"                            shift, and go to state 415
    "reinterpret"                     shift, and go to state 416
    "unsafe"                          shift, and go to state 417
    "fixed_array"                     shift, and go to state 418
    "default"                         shift, and go to state 419
    "bool"                            shift, and go to state 222
    "void"                            shift, and go to state 223
    "string"                          shift, and go to state 224
    "int"                             shift, and go to state 226
    "int2"                            shift, and go to state 227
    "int3"                            shift, and go to state 228
    "int4"                            shift, and go to state 229
    "uint"                            shift, and go to state 230
    "bitfield"                        shift, and go to state 420
    "uint2"                           shift, and go to state 232
    "uint3"                           shift, and go to state 233
    "uint4"                           shift, and go to state 234
    "float"                           shift, and go to state 235
    "float2"                          shift, and go to state 236
    "float3"                          shift, and go to state 237
    "float4"                          shift, and go to state 238
    "range"                           shift, and go to state 239
    "urange"                          shift, and go to state 240
    "range64"                         shift, and go to state 241
    "urange64"                        shift, and go to state 242
    "int64"                           shift, and go to state 244
    "uint64"                          shift, and go to state 245
    "double"                          shift, and go to state 246
    "int8"                            shift, and go to state 249
    "uint8"                           shift, and go to state 250
    "int16"                           shift, and go to state 251
    "uint16"                          shift, and go to state 252
    "tuple"                           shift, and go to state 421
    "variant"                         shift, and go to state 422
    "generator"                       shift, and go to state 423
    "++"                              shift, and go to state 424
    "--"                              shift, and go to state 425
    "::"                              shift, and go to state 55
    "$$"                              shift, and go to state 426
    "$i"                              shift, and go to state 427
    "$v"                              shift, and go to state 428
    "$b"                              shift, and go to state 429
    "$a"                              shift, and go to state 430
    "$c"                              shift, and go to state 431
    "..."                             shift, and go to state 432
    "integer constant"                shift, and go to state 433
    "long integer constant"           shift, and go to state 434
    "unsigned integer constant"       shift, and go to state 435
    "unsigned long integer constant"  shift, and go to state 436
    "unsigned int8 constant"          shift, and go to state 437
    "floating point constant"         shift, and go to state 438
    "double constant"                 shift, and go to state 439
    "name"                            shift, and go to state 56
    "start of the string"             shift, and go to state 440
    "begin of code block"             shift, and go to state 441
    '-'                               shift, and go to state 442
    '+'                               shift, and go to state 443
    '*'                               shift, and go to state 444
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 445
    '!'                               shift, and go to state 446
    '['                               shift, and go to state 447
    '('                               shift, and go to state 448
    '$'                               shift, and go to state 449
    '@'                               shift, and go to state 450

    string_builder          go to state 451
    expr_reader             go to state 452
    expr_call_pipe          go to state 453
    name_in_namespace       go to state 454
    expr_new                go to state 455
    expr_cast               go to state 456
    expr_type_decl          go to state 457
    expr_type_info          go to state 458
    block_or_lambda         go to state 459
    expr_full_block         go to state 460
    expr_numeric_const      go to state 461
    expr_named_call         go to state 462
    expr_method_call        go to state 463
    func_addr_expr          go to state 464
    expr_field              go to state 465
    expr_call               go to state 466
    expr                    go to state 1365
    expr_mtag               go to state 468
    basic_type_declaration  go to state 469
    make_decl               go to state 470
    make_struct_decl        go to state 471
    make_tuple_call         go to state 472
    make_dim_decl           go to state 473
    make_table_decl         go to state 474
    array_comprehension     go to state 475


State 1310

  346 func_addr_expr: '@' '@' '<' $@13 type_declaration_no_options '>' $@14 . func_addr_name

    "::"    shift, and go to state 55
    "$i"    shift, and go to state 818
    "name"  shift, and go to state 56

    name_in_namespace  go to state 821
    func_addr_name     go to state 1366


State 1311

  349 func_addr_expr: '@' '@' '<' $@15 optional_function_argument_list optional_function_type '>' . $@16 func_addr_name

    $default  reduce using rule 348 ($@16)

    $@16  go to state 1367


State 1312

  720 make_struct_fields: "$f" '(' expr ')' ":=" . expr

    "struct"                          shift, and go to state 402
    "class"                           shift, and go to state 403
    "true"                            shift, and go to state 404
    "false"                           shift, and go to state 405
    "new"                             shift, and go to state 406
    "typeinfo"                        shift, and go to state 407
    "type"                            shift, and go to state 408
    "array"                           shift, and go to state 409
    "null"                            shift, and go to state 410
    "table"                           shift, and go to state 411
    "deref"                           shift, and go to state 412
    "cast"                            shift, and go to state 413
    "upcast"                          shift, and go to state 414
    "addr"                            shift, and go to state 415
    "reinterpret"                     shift, and go to state 416
    "unsafe"                          shift, and go to state 417
    "fixed_array"                     shift, and go to state 418
    "default"                         shift, and go to state 419
    "bool"                            shift, and go to state 222
    "void"                            shift, and go to state 223
    "string"                          shift, and go to state 224
    "int"                             shift, and go to state 226
    "int2"                            shift, and go to state 227
    "int3"                            shift, and go to state 228
    "int4"                            shift, and go to state 229
    "uint"                            shift, and go to state 230
    "bitfield"                        shift, and go to state 420
    "uint2"                           shift, and go to state 232
    "uint3"                           shift, and go to state 233
    "uint4"                           shift, and go to state 234
    "float"                           shift, and go to state 235
    "float2"                          shift, and go to state 236
    "float3"                          shift, and go to state 237
    "float4"                          shift, and go to state 238
    "range"                           shift, and go to state 239
    "urange"                          shift, and go to state 240
    "range64"                         shift, and go to state 241
    "urange64"                        shift, and go to state 242
    "int64"                           shift, and go to state 244
    "uint64"                          shift, and go to state 245
    "double"                          shift, and go to state 246
    "int8"                            shift, and go to state 249
    "uint8"                           shift, and go to state 250
    "int16"                           shift, and go to state 251
    "uint16"                          shift, and go to state 252
    "tuple"                           shift, and go to state 421
    "variant"                         shift, and go to state 422
    "generator"                       shift, and go to state 423
    "++"                              shift, and go to state 424
    "--"                              shift, and go to state 425
    "::"                              shift, and go to state 55
    "$$"                              shift, and go to state 426
    "$i"                              shift, and go to state 427
    "$v"                              shift, and go to state 428
    "$b"                              shift, and go to state 429
    "$a"                              shift, and go to state 430
    "$c"                              shift, and go to state 431
    "..."                             shift, and go to state 432
    "integer constant"                shift, and go to state 433
    "long integer constant"           shift, and go to state 434
    "unsigned integer constant"       shift, and go to state 435
    "unsigned long integer constant"  shift, and go to state 436
    "unsigned int8 constant"          shift, and go to state 437
    "floating point constant"         shift, and go to state 438
    "double constant"                 shift, and go to state 439
    "name"                            shift, and go to state 56
    "start of the string"             shift, and go to state 440
    "begin of code block"             shift, and go to state 441
    '-'                               shift, and go to state 442
    '+'                               shift, and go to state 443
    '*'                               shift, and go to state 444
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 445
    '!'                               shift, and go to state 446
    '['                               shift, and go to state 447
    '('                               shift, and go to state 448
    '$'                               shift, and go to state 449
    '@'                               shift, and go to state 450

    string_builder          go to state 451
    expr_reader             go to state 452
    expr_call_pipe          go to state 453
    name_in_namespace       go to state 454
    expr_new                go to state 455
    expr_cast               go to state 456
    expr_type_decl          go to state 457
    expr_type_info          go to state 458
    block_or_lambda         go to state 459
    expr_full_block         go to state 460
    expr_numeric_const      go to state 461
    expr_named_call         go to state 462
    expr_method_call        go to state 463
    func_addr_expr          go to state 464
    expr_field              go to state 465
    expr_call               go to state 466
    expr                    go to state 1368
    expr_mtag               go to state 468
    basic_type_declaration  go to state 469
    make_decl               go to state 470
    make_struct_decl        go to state 471
    make_tuple_call         go to state 472
    make_dim_decl           go to state 473
    make_table_decl         go to state 474
    array_comprehension     go to state 475


State 1313

  719 make_struct_fields: "$f" '(' expr ')' copy_or_move . expr

    "struct"                          shift, and go to state 402
    "class"                           shift, and go to state 403
    "true"                            shift, and go to state 404
    "false"                           shift, and go to state 405
    "new"                             shift, and go to state 406
    "typeinfo"                        shift, and go to state 407
    "type"                            shift, and go to state 408
    "array"                           shift, and go to state 409
    "null"                            shift, and go to state 410
    "table"                           shift, and go to state 411
    "deref"                           shift, and go to state 412
    "cast"                            shift, and go to state 413
    "upcast"                          shift, and go to state 414
    "addr"                            shift, and go to state 415
    "reinterpret"                     shift, and go to state 416
    "unsafe"                          shift, and go to state 417
    "fixed_array"                     shift, and go to state 418
    "default"                         shift, and go to state 419
    "bool"                            shift, and go to state 222
    "void"                            shift, and go to state 223
    "string"                          shift, and go to state 224
    "int"                             shift, and go to state 226
    "int2"                            shift, and go to state 227
    "int3"                            shift, and go to state 228
    "int4"                            shift, and go to state 229
    "uint"                            shift, and go to state 230
    "bitfield"                        shift, and go to state 420
    "uint2"                           shift, and go to state 232
    "uint3"                           shift, and go to state 233
    "uint4"                           shift, and go to state 234
    "float"                           shift, and go to state 235
    "float2"                          shift, and go to state 236
    "float3"                          shift, and go to state 237
    "float4"                          shift, and go to state 238
    "range"                           shift, and go to state 239
    "urange"                          shift, and go to state 240
    "range64"                         shift, and go to state 241
    "urange64"                        shift, and go to state 242
    "int64"                           shift, and go to state 244
    "uint64"                          shift, and go to state 245
    "double"                          shift, and go to state 246
    "int8"                            shift, and go to state 249
    "uint8"                           shift, and go to state 250
    "int16"                           shift, and go to state 251
    "uint16"                          shift, and go to state 252
    "tuple"                           shift, and go to state 421
    "variant"                         shift, and go to state 422
    "generator"                       shift, and go to state 423
    "++"                              shift, and go to state 424
    "--"                              shift, and go to state 425
    "::"                              shift, and go to state 55
    "$$"                              shift, and go to state 426
    "$i"                              shift, and go to state 427
    "$v"                              shift, and go to state 428
    "$b"                              shift, and go to state 429
    "$a"                              shift, and go to state 430
    "$c"                              shift, and go to state 431
    "..."                             shift, and go to state 432
    "integer constant"                shift, and go to state 433
    "long integer constant"           shift, and go to state 434
    "unsigned integer constant"       shift, and go to state 435
    "unsigned long integer constant"  shift, and go to state 436
    "unsigned int8 constant"          shift, and go to state 437
    "floating point constant"         shift, and go to state 438
    "double constant"                 shift, and go to state 439
    "name"                            shift, and go to state 56
    "start of the string"             shift, and go to state 440
    "begin of code block"             shift, and go to state 441
    '-'                               shift, and go to state 442
    '+'                               shift, and go to state 443
    '*'                               shift, and go to state 444
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 445
    '!'                               shift, and go to state 446
    '['                               shift, and go to state 447
    '('                               shift, and go to state 448
    '$'                               shift, and go to state 449
    '@'                               shift, and go to state 450

    string_builder          go to state 451
    expr_reader             go to state 452
    expr_call_pipe          go to state 453
    name_in_namespace       go to state 454
    expr_new                go to state 455
    expr_cast               go to state 456
    expr_type_decl          go to state 457
    expr_type_info          go to state 458
    block_or_lambda         go to state 459
    expr_full_block         go to state 460
    expr_numeric_const      go to state 461
    expr_named_call         go to state 462
    expr_method_call        go to state 463
    func_addr_expr          go to state 464
    expr_field              go to state 465
    expr_call               go to state 466
    expr                    go to state 1369
    expr_mtag               go to state 468
    basic_type_declaration  go to state 469
    make_decl               go to state 470
    make_struct_decl        go to state 471
    make_tuple_call         go to state 472
    make_dim_decl           go to state 473
    make_table_decl         go to state 474
    array_comprehension     go to state 475


State 1314

  338 expr_named_call: name_in_namespace '(' expr_list ',' '[' make_struct_fields ']' . ')'

    ')'  shift, and go to state 1370


State 1315

  339 expr_method_call: expr . "->" "name" '(' ')'
  340                 | expr . "->" "name" '(' expr_list ')'
  350 expr_field: expr . '.' "name"
  351           | expr . '.' '.' "name"
  352           | expr . '.' "name" '(' ')'
  353           | expr . '.' "name" '(' expr_list ')'
  354           | expr . '.' basic_type_declaration '(' ')'
  355           | expr . '.' basic_type_declaration '(' expr_list ')'
  358           | expr . '.' $@17 error $@18
  380 expr: expr . "<<" expr
  381     | expr . ">>" expr
  382     | expr . "<<<" expr
  383     | expr . ">>>" expr
  384     | expr . '+' expr
  385     | expr . '-' expr
  386     | expr . '*' expr
  387     | expr . '/' expr
  388     | expr . '%' expr
  389     | expr . '<' expr
  390     | expr . '>' expr
  391     | expr . "==" expr
  392     | expr . "!=" expr
  393     | expr . "<=" expr
  394     | expr . ">=" expr
  395     | expr . '&' expr
  396     | expr . '|' expr
  397     | expr . '^' expr
  398     | expr . "&&" expr
  399     | expr . "||" expr
  400     | expr . "^^" expr
  401     | expr . ".." expr
  404     | expr . "++"
  405     | expr . "--"
  407     | expr . '[' expr ']'
  408     | expr . '.' '[' expr ']'
  409     | expr . "?[" expr ']'
  410     | expr . '.' "?[" expr ']'
  411     | expr . "?." "name"
  412     | expr . '.' "?." "name"
  421     | expr . "??" expr
  422     | expr . '?' expr ':' expr
  425     | expr . "is" "type" '<' $@19 type_declaration_no_options '>' $@20
  426     | expr . "is" basic_type_declaration
  427     | expr . "is" "name"
  428     | expr . "as" "name"
  431     | expr . "as" "type" '<' $@21 type_declaration '>' $@22
  432     | expr . "as" basic_type_declaration
  433     | expr . '?' "as" "name"
  436     | expr . '?' "as" "type" '<' $@23 type_declaration '>' $@24
  437     | expr . '?' "as" basic_type_declaration
  445     | expr . "<|" expr
  446     | expr . "|>" expr
  447     | expr . "|>" basic_type_declaration
  458 expr_mtag: expr . '.' "$f" '(' expr ')'
  459          | expr . "?." "$f" '(' expr ')'
  460          | expr . '.' '.' "$f" '(' expr ')'
  461          | expr . '.' "?." "$f" '(' expr ')'
  462          | expr . "as" "$f" '(' expr ')'
  463          | expr . '?' "as" "$f" '(' expr ')'
  464          | expr . "is" "$f" '(' expr ')'
  721 make_struct_fields: make_struct_fields ',' "$f" '(' expr . ')' copy_or_move expr
  722                   | make_struct_fields ',' "$f" '(' expr . ')' ":=" expr

    "is"   shift, and go to state 637
    "as"   shift, and go to state 638
    "<<"   shift, and go to state 639
    ">>"   shift, and go to state 640
    "++"   shift, and go to state 641
    "--"   shift, and go to state 642
    "<="   shift, and go to state 643
    ">="   shift, and go to state 644
    "=="   shift, and go to state 645
    "!="   shift, and go to state 646
    "->"   shift, and go to state 647
    "??"   shift, and go to state 648
    "?."   shift, and go to state 649
    "?["   shift, and go to state 650
    "<|"   shift, and go to state 651
    "|>"   shift, and go to state 652
    "<<<"  shift, and go to state 653
    ">>>"  shift, and go to state 654
    "&&"   shift, and go to state 655
    "||"   shift, and go to state 656
    "^^"   shift, and go to state 657
    ".."   shift, and go to state 658
    '?'    shift, and go to state 659
    '|'    shift, and go to state 660
    '^'    shift, and go to state 661
    '&'    shift, and go to state 662
    '<'    shift, and go to state 663
    '>'    shift, and go to state 664
    '-'    shift, and go to state 665
    '+'    shift, and go to state 666
    '*'    shift, and go to state 667
    '/'    shift, and go to state 668
    '%'    shift, and go to state 669
    '.'    shift, and go to state 670
    '['    shift, and go to state 671
    ')'    shift, and go to state 1371


State 1316

  339 expr_method_call: expr . "->" "name" '(' ')'
  340                 | expr . "->" "name" '(' expr_list ')'
  350 expr_field: expr . '.' "name"
  351           | expr . '.' '.' "name"
  352           | expr . '.' "name" '(' ')'
  353           | expr . '.' "name" '(' expr_list ')'
  354           | expr . '.' basic_type_declaration '(' ')'
  355           | expr . '.' basic_type_declaration '(' expr_list ')'
  358           | expr . '.' $@17 error $@18
  380 expr: expr . "<<" expr
  381     | expr . ">>" expr
  382     | expr . "<<<" expr
  383     | expr . ">>>" expr
  384     | expr . '+' expr
  385     | expr . '-' expr
  386     | expr . '*' expr
  387     | expr . '/' expr
  388     | expr . '%' expr
  389     | expr . '<' expr
  390     | expr . '>' expr
  391     | expr . "==" expr
  392     | expr . "!=" expr
  393     | expr . "<=" expr
  394     | expr . ">=" expr
  395     | expr . '&' expr
  396     | expr . '|' expr
  397     | expr . '^' expr
  398     | expr . "&&" expr
  399     | expr . "||" expr
  400     | expr . "^^" expr
  401     | expr . ".." expr
  404     | expr . "++"
  405     | expr . "--"
  407     | expr . '[' expr ']'
  408     | expr . '.' '[' expr ']'
  409     | expr . "?[" expr ']'
  410     | expr . '.' "?[" expr ']'
  411     | expr . "?." "name"
  412     | expr . '.' "?." "name"
  421     | expr . "??" expr
  422     | expr . '?' expr ':' expr
  425     | expr . "is" "type" '<' $@19 type_declaration_no_options '>' $@20
  426     | expr . "is" basic_type_declaration
  427     | expr . "is" "name"
  428     | expr . "as" "name"
  431     | expr . "as" "type" '<' $@21 type_declaration '>' $@22
  432     | expr . "as" basic_type_declaration
  433     | expr . '?' "as" "name"
  436     | expr . '?' "as" "type" '<' $@23 type_declaration '>' $@24
  437     | expr . '?' "as" basic_type_declaration
  445     | expr . "<|" expr
  446     | expr . "|>" expr
  447     | expr . "|>" basic_type_declaration
  458 expr_mtag: expr . '.' "$f" '(' expr ')'
  459          | expr . "?." "$f" '(' expr ')'
  460          | expr . '.' '.' "$f" '(' expr ')'
  461          | expr . '.' "?." "$f" '(' expr ')'
  462          | expr . "as" "$f" '(' expr ')'
  463          | expr . '?' "as" "$f" '(' expr ')'
  464          | expr . "is" "$f" '(' expr ')'
  718 make_struct_fields: make_struct_fields ',' "name" ":=" expr .

    "is"   shift, and go to state 637
    "as"   shift, and go to state 638
    "<<"   shift, and go to state 639
    ">>"   shift, and go to state 640
    "++"   shift, and go to state 641
    "--"   shift, and go to state 642
    "<="   shift, and go to state 643
    ">="   shift, and go to state 644
    "=="   shift, and go to state 645
    "!="   shift, and go to state 646
    "->"   shift, and go to state 647
    "??"   shift, and go to state 648
    "?."   shift, and go to state 649
    "?["   shift, and go to state 650
    "<|"   shift, and go to state 651
    "|>"   shift, and go to state 652
    "<<<"  shift, and go to state 653
    ">>>"  shift, and go to state 654
    "&&"   shift, and go to state 655
    "||"   shift, and go to state 656
    "^^"   shift, and go to state 657
    ".."   shift, and go to state 658
    '?'    shift, and go to state 659
    '|'    shift, and go to state 660
    '^'    shift, and go to state 661
    '&'    shift, and go to state 662
    '<'    shift, and go to state 663
    '>'    shift, and go to state 664
    '-'    shift, and go to state 665
    '+'    shift, and go to state 666
    '*'    shift, and go to state 667
    '/'    shift, and go to state 668
    '%'    shift, and go to state 669
    '.'    shift, and go to state 670
    '['    shift, and go to state 671

    $default  reduce using rule 718 (make_struct_fields)


State 1317

  339 expr_method_call: expr . "->" "name" '(' ')'
  340                 | expr . "->" "name" '(' expr_list ')'
  350 expr_field: expr . '.' "name"
  351           | expr . '.' '.' "name"
  352           | expr . '.' "name" '(' ')'
  353           | expr . '.' "name" '(' expr_list ')'
  354           | expr . '.' basic_type_declaration '(' ')'
  355           | expr . '.' basic_type_declaration '(' expr_list ')'
  358           | expr . '.' $@17 error $@18
  380 expr: expr . "<<" expr
  381     | expr . ">>" expr
  382     | expr . "<<<" expr
  383     | expr . ">>>" expr
  384     | expr . '+' expr
  385     | expr . '-' expr
  386     | expr . '*' expr
  387     | expr . '/' expr
  388     | expr . '%' expr
  389     | expr . '<' expr
  390     | expr . '>' expr
  391     | expr . "==" expr
  392     | expr . "!=" expr
  393     | expr . "<=" expr
  394     | expr . ">=" expr
  395     | expr . '&' expr
  396     | expr . '|' expr
  397     | expr . '^' expr
  398     | expr . "&&" expr
  399     | expr . "||" expr
  400     | expr . "^^" expr
  401     | expr . ".." expr
  404     | expr . "++"
  405     | expr . "--"
  407     | expr . '[' expr ']'
  408     | expr . '.' '[' expr ']'
  409     | expr . "?[" expr ']'
  410     | expr . '.' "?[" expr ']'
  411     | expr . "?." "name"
  412     | expr . '.' "?." "name"
  421     | expr . "??" expr
  422     | expr . '?' expr ':' expr
  425     | expr . "is" "type" '<' $@19 type_declaration_no_options '>' $@20
  426     | expr . "is" basic_type_declaration
  427     | expr . "is" "name"
  428     | expr . "as" "name"
  431     | expr . "as" "type" '<' $@21 type_declaration '>' $@22
  432     | expr . "as" basic_type_declaration
  433     | expr . '?' "as" "name"
  436     | expr . '?' "as" "type" '<' $@23 type_declaration '>' $@24
  437     | expr . '?' "as" basic_type_declaration
  445     | expr . "<|" expr
  446     | expr . "|>" expr
  447     | expr . "|>" basic_type_declaration
  458 expr_mtag: expr . '.' "$f" '(' expr ')'
  459          | expr . "?." "$f" '(' expr ')'
  460          | expr . '.' '.' "$f" '(' expr ')'
  461          | expr . '.' "?." "$f" '(' expr ')'
  462          | expr . "as" "$f" '(' expr ')'
  463          | expr . '?' "as" "$f" '(' expr ')'
  464          | expr . "is" "$f" '(' expr ')'
  717 make_struct_fields: make_struct_fields ',' "name" copy_or_move expr .

    "is"   shift, and go to state 637
    "as"   shift, and go to state 638
    "<<"   shift, and go to state 639
    ">>"   shift, and go to state 640
    "++"   shift, and go to state 641
    "--"   shift, and go to state 642
    "<="   shift, and go to state 643
    ">="   shift, and go to state 644
    "=="   shift, and go to state 645
    "!="   shift, and go to state 646
    "->"   shift, and go to state 647
    "??"   shift, and go to state 648
    "?."   shift, and go to state 649
    "?["   shift, and go to state 650
    "<|"   shift, and go to state 651
    "|>"   shift, and go to state 652
    "<<<"  shift, and go to state 653
    ">>>"  shift, and go to state 654
    "&&"   shift, and go to state 655
    "||"   shift, and go to state 656
    "^^"   shift, and go to state 657
    ".."   shift, and go to state 658
    '?'    shift, and go to state 659
    '|'    shift, and go to state 660
    '^'    shift, and go to state 661
    '&'    shift, and go to state 662
    '<'    shift, and go to state 663
    '>'    shift, and go to state 664
    '-'    shift, and go to state 665
    '+'    shift, and go to state 666
    '*'    shift, and go to state 667
    '/'    shift, and go to state 668
    '%'    shift, and go to state 669
    '.'    shift, and go to state 670
    '['    shift, and go to state 671

    $default  reduce using rule 717 (make_struct_fields)


State 1318

  303 capture_entry: "name" '(' "name" . ')'

    ')'  shift, and go to state 1372


State 1319

  305 capture_list: capture_list ',' capture_entry .

    $default  reduce using rule 305 (capture_list)


State 1320

  295 block_or_simple_block: "=>" "<-" . expr

    "struct"                          shift, and go to state 402
    "class"                           shift, and go to state 403
    "true"                            shift, and go to state 404
    "false"                           shift, and go to state 405
    "new"                             shift, and go to state 406
    "typeinfo"                        shift, and go to state 407
    "type"                            shift, and go to state 408
    "array"                           shift, and go to state 409
    "null"                            shift, and go to state 410
    "table"                           shift, and go to state 411
    "deref"                           shift, and go to state 412
    "cast"                            shift, and go to state 413
    "upcast"                          shift, and go to state 414
    "addr"                            shift, and go to state 415
    "reinterpret"                     shift, and go to state 416
    "unsafe"                          shift, and go to state 417
    "fixed_array"                     shift, and go to state 418
    "default"                         shift, and go to state 419
    "bool"                            shift, and go to state 222
    "void"                            shift, and go to state 223
    "string"                          shift, and go to state 224
    "int"                             shift, and go to state 226
    "int2"                            shift, and go to state 227
    "int3"                            shift, and go to state 228
    "int4"                            shift, and go to state 229
    "uint"                            shift, and go to state 230
    "bitfield"                        shift, and go to state 420
    "uint2"                           shift, and go to state 232
    "uint3"                           shift, and go to state 233
    "uint4"                           shift, and go to state 234
    "float"                           shift, and go to state 235
    "float2"                          shift, and go to state 236
    "float3"                          shift, and go to state 237
    "float4"                          shift, and go to state 238
    "range"                           shift, and go to state 239
    "urange"                          shift, and go to state 240
    "range64"                         shift, and go to state 241
    "urange64"                        shift, and go to state 242
    "int64"                           shift, and go to state 244
    "uint64"                          shift, and go to state 245
    "double"                          shift, and go to state 246
    "int8"                            shift, and go to state 249
    "uint8"                           shift, and go to state 250
    "int16"                           shift, and go to state 251
    "uint16"                          shift, and go to state 252
    "tuple"                           shift, and go to state 421
    "variant"                         shift, and go to state 422
    "generator"                       shift, and go to state 423
    "++"                              shift, and go to state 424
    "--"                              shift, and go to state 425
    "::"                              shift, and go to state 55
    "$$"                              shift, and go to state 426
    "$i"                              shift, and go to state 427
    "$v"                              shift, and go to state 428
    "$b"                              shift, and go to state 429
    "$a"                              shift, and go to state 430
    "$c"                              shift, and go to state 431
    "..."                             shift, and go to state 432
    "integer constant"                shift, and go to state 433
    "long integer constant"           shift, and go to state 434
    "unsigned integer constant"       shift, and go to state 435
    "unsigned long integer constant"  shift, and go to state 436
    "unsigned int8 constant"          shift, and go to state 437
    "floating point constant"         shift, and go to state 438
    "double constant"                 shift, and go to state 439
    "name"                            shift, and go to state 56
    "start of the string"             shift, and go to state 440
    "begin of code block"             shift, and go to state 441
    '-'                               shift, and go to state 442
    '+'                               shift, and go to state 443
    '*'                               shift, and go to state 444
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 445
    '!'                               shift, and go to state 446
    '['                               shift, and go to state 447
    '('                               shift, and go to state 448
    '$'                               shift, and go to state 449
    '@'                               shift, and go to state 450

    string_builder          go to state 451
    expr_reader             go to state 452
    expr_call_pipe          go to state 453
    name_in_namespace       go to state 454
    expr_new                go to state 455
    expr_cast               go to state 456
    expr_type_decl          go to state 457
    expr_type_info          go to state 458
    block_or_lambda         go to state 459
    expr_full_block         go to state 460
    expr_numeric_const      go to state 461
    expr_named_call         go to state 462
    expr_method_call        go to state 463
    func_addr_expr          go to state 464
    expr_field              go to state 465
    expr_call               go to state 466
    expr                    go to state 1373
    expr_mtag               go to state 468
    basic_type_declaration  go to state 469
    make_decl               go to state 470
    make_struct_decl        go to state 471
    make_tuple_call         go to state 472
    make_dim_decl           go to state 473
    make_table_decl         go to state 474
    array_comprehension     go to state 475


State 1321

  294 block_or_simple_block: "=>" expr .
  339 expr_method_call: expr . "->" "name" '(' ')'
  340                 | expr . "->" "name" '(' expr_list ')'
  350 expr_field: expr . '.' "name"
  351           | expr . '.' '.' "name"
  352           | expr . '.' "name" '(' ')'
  353           | expr . '.' "name" '(' expr_list ')'
  354           | expr . '.' basic_type_declaration '(' ')'
  355           | expr . '.' basic_type_declaration '(' expr_list ')'
  358           | expr . '.' $@17 error $@18
  380 expr: expr . "<<" expr
  381     | expr . ">>" expr
  382     | expr . "<<<" expr
  383     | expr . ">>>" expr
  384     | expr . '+' expr
  385     | expr . '-' expr
  386     | expr . '*' expr
  387     | expr . '/' expr
  388     | expr . '%' expr
  389     | expr . '<' expr
  390     | expr . '>' expr
  391     | expr . "==" expr
  392     | expr . "!=" expr
  393     | expr . "<=" expr
  394     | expr . ">=" expr
  395     | expr . '&' expr
  396     | expr . '|' expr
  397     | expr . '^' expr
  398     | expr . "&&" expr
  399     | expr . "||" expr
  400     | expr . "^^" expr
  401     | expr . ".." expr
  404     | expr . "++"
  405     | expr . "--"
  407     | expr . '[' expr ']'
  408     | expr . '.' '[' expr ']'
  409     | expr . "?[" expr ']'
  410     | expr . '.' "?[" expr ']'
  411     | expr . "?." "name"
  412     | expr . '.' "?." "name"
  421     | expr . "??" expr
  422     | expr . '?' expr ':' expr
  425     | expr . "is" "type" '<' $@19 type_declaration_no_options '>' $@20
  426     | expr . "is" basic_type_declaration
  427     | expr . "is" "name"
  428     | expr . "as" "name"
  431     | expr . "as" "type" '<' $@21 type_declaration '>' $@22
  432     | expr . "as" basic_type_declaration
  433     | expr . '?' "as" "name"
  436     | expr . '?' "as" "type" '<' $@23 type_declaration '>' $@24
  437     | expr . '?' "as" basic_type_declaration
  445     | expr . "<|" expr
  446     | expr . "|>" expr
  447     | expr . "|>" basic_type_declaration
  458 expr_mtag: expr . '.' "$f" '(' expr ')'
  459          | expr . "?." "$f" '(' expr ')'
  460          | expr . '.' '.' "$f" '(' expr ')'
  461          | expr . '.' "?." "$f" '(' expr ')'
  462          | expr . "as" "$f" '(' expr ')'
  463          | expr . '?' "as" "$f" '(' expr ')'
  464          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 637
    "as"   shift, and go to state 638
    "<<"   shift, and go to state 639
    ">>"   shift, and go to state 640
    "++"   shift, and go to state 641
    "--"   shift, and go to state 642
    "<="   shift, and go to state 643
    ">="   shift, and go to state 644
    "=="   shift, and go to state 645
    "!="   shift, and go to state 646
    "->"   shift, and go to state 647
    "??"   shift, and go to state 648
    "?."   shift, and go to state 649
    "?["   shift, and go to state 650
    "<|"   shift, and go to state 651
    "|>"   shift, and go to state 652
    "<<<"  shift, and go to state 653
    ">>>"  shift, and go to state 654
    "&&"   shift, and go to state 655
    "||"   shift, and go to state 656
    "^^"   shift, and go to state 657
    '?'    shift, and go to state 659
    '|'    shift, and go to state 660
    '^'    shift, and go to state 661
    '&'    shift, and go to state 662
    '<'    shift, and go to state 663
    '>'    shift, and go to state 664
    '-'    shift, and go to state 665
    '+'    shift, and go to state 666
    '*'    shift, and go to state 667
    '/'    shift, and go to state 668
    '%'    shift, and go to state 669
    '.'    shift, and go to state 670
    '['    shift, and go to state 671

    ".."  error (nonassociative)

    $default  reduce using rule 294 (block_or_simple_block)


State 1322

  309 expr_full_block_assumed_piped: block_or_lambda optional_annotation_list optional_capture_list optional_function_argument_list optional_function_type expression_block .

    $default  reduce using rule 309 (expr_full_block_assumed_piped)


State 1323

  425 expr: expr "is" "type" '<' $@19 type_declaration_no_options '>' . $@20

    $default  reduce using rule 424 ($@20)

    $@20  go to state 1374


State 1324

  431 expr: expr "as" "type" '<' $@21 type_declaration '>' . $@22

    $default  reduce using rule 430 ($@22)

    $@22  go to state 1375


State 1325

  436 expr: expr '?' "as" "type" '<' $@23 type_declaration . '>' $@24
  696 type_declaration: type_declaration . '|' type_declaration_no_options
  697                 | type_declaration . '|' '#'

    '|'  shift, and go to state 369
    '>'  shift, and go to state 1376


State 1326

  463 expr_mtag: expr '?' "as" "$f" '(' expr ')' .

    $default  reduce using rule 463 (expr_mtag)


State 1327

  461 expr_mtag: expr '.' "?." "$f" '(' expr ')' .

    $default  reduce using rule 461 (expr_mtag)


State 1328

  460 expr_mtag: expr '.' '.' "$f" '(' expr ')' .

    $default  reduce using rule 460 (expr_mtag)


State 1329

  642 type_declaration_no_options_no_dim: '$' name_in_namespace '<' $@38 type_declaration_no_options_list '>' '(' optional_expr_list ')' .

    $default  reduce using rule 642 (type_declaration_no_options_no_dim)


State 1330

   71 expression_for_loop: "for" '(' variable_name_with_pos_list "in" expr_list ')' expression_block .

    $default  reduce using rule 71 (expression_for_loop)


State 1331

   58 expression_else: "else" expression_block .

    $default  reduce using rule 58 (expression_else)


State 1332

   59 expression_else: elif_or_static_elif '(' . expr ')' expression_block expression_else

    "struct"                          shift, and go to state 402
    "class"                           shift, and go to state 403
    "true"                            shift, and go to state 404
    "false"                           shift, and go to state 405
    "new"                             shift, and go to state 406
    "typeinfo"                        shift, and go to state 407
    "type"                            shift, and go to state 408
    "array"                           shift, and go to state 409
    "null"                            shift, and go to state 410
    "table"                           shift, and go to state 411
    "deref"                           shift, and go to state 412
    "cast"                            shift, and go to state 413
    "upcast"                          shift, and go to state 414
    "addr"                            shift, and go to state 415
    "reinterpret"                     shift, and go to state 416
    "unsafe"                          shift, and go to state 417
    "fixed_array"                     shift, and go to state 418
    "default"                         shift, and go to state 419
    "bool"                            shift, and go to state 222
    "void"                            shift, and go to state 223
    "string"                          shift, and go to state 224
    "int"                             shift, and go to state 226
    "int2"                            shift, and go to state 227
    "int3"                            shift, and go to state 228
    "int4"                            shift, and go to state 229
    "uint"                            shift, and go to state 230
    "bitfield"                        shift, and go to state 420
    "uint2"                           shift, and go to state 232
    "uint3"                           shift, and go to state 233
    "uint4"                           shift, and go to state 234
    "float"                           shift, and go to state 235
    "float2"                          shift, and go to state 236
    "float3"                          shift, and go to state 237
    "float4"                          shift, and go to state 238
    "range"                           shift, and go to state 239
    "urange"                          shift, and go to state 240
    "range64"                         shift, and go to state 241
    "urange64"                        shift, and go to state 242
    "int64"                           shift, and go to state 244
    "uint64"                          shift, and go to state 245
    "double"                          shift, and go to state 246
    "int8"                            shift, and go to state 249
    "uint8"                           shift, and go to state 250
    "int16"                           shift, and go to state 251
    "uint16"                          shift, and go to state 252
    "tuple"                           shift, and go to state 421
    "variant"                         shift, and go to state 422
    "generator"                       shift, and go to state 423
    "++"                              shift, and go to state 424
    "--"                              shift, and go to state 425
    "::"                              shift, and go to state 55
    "$$"                              shift, and go to state 426
    "$i"                              shift, and go to state 427
    "$v"                              shift, and go to state 428
    "$b"                              shift, and go to state 429
    "$a"                              shift, and go to state 430
    "$c"                              shift, and go to state 431
    "..."                             shift, and go to state 432
    "integer constant"                shift, and go to state 433
    "long integer constant"           shift, and go to state 434
    "unsigned integer constant"       shift, and go to state 435
    "unsigned long integer constant"  shift, and go to state 436
    "unsigned int8 constant"          shift, and go to state 437
    "floating point constant"         shift, and go to state 438
    "double constant"                 shift, and go to state 439
    "name"                            shift, and go to state 56
    "start of the string"             shift, and go to state 440
    "begin of code block"             shift, and go to state 441
    '-'                               shift, and go to state 442
    '+'                               shift, and go to state 443
    '*'                               shift, and go to state 444
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 445
    '!'                               shift, and go to state 446
    '['                               shift, and go to state 447
    '('                               shift, and go to state 448
    '$'                               shift, and go to state 449
    '@'                               shift, and go to state 450

    string_builder          go to state 451
    expr_reader             go to state 452
    expr_call_pipe          go to state 453
    name_in_namespace       go to state 454
    expr_new                go to state 455
    expr_cast               go to state 456
    expr_type_decl          go to state 457
    expr_type_info          go to state 458
    block_or_lambda         go to state 459
    expr_full_block         go to state 460
    expr_numeric_const      go to state 461
    expr_named_call         go to state 462
    expr_method_call        go to state 463
    func_addr_expr          go to state 464
    expr_field              go to state 465
    expr_call               go to state 466
    expr                    go to state 1377
    expr_mtag               go to state 468
    basic_type_declaration  go to state 469
    make_decl               go to state 470
    make_struct_decl        go to state 471
    make_tuple_call         go to state 472
    make_dim_decl           go to state 473
    make_table_decl         go to state 474
    array_comprehension     go to state 475


State 1333

   63 expression_else_one_liner: "else" expression_if_one_liner .

    $default  reduce using rule 63 (expression_else_one_liner)


State 1334

   67 expression_if_one_liner: expression_break .

    $default  reduce using rule 67 (expression_if_one_liner)


State 1335

   68 expression_if_one_liner: expression_continue .

    $default  reduce using rule 68 (expression_if_one_liner)


State 1336

   65 expression_if_one_liner: expression_return .

    $default  reduce using rule 65 (expression_if_one_liner)


State 1337

   66 expression_if_one_liner: expression_yield .

    $default  reduce using rule 66 (expression_if_one_liner)


State 1338

   64 expression_if_one_liner: expr .
  339 expr_method_call: expr . "->" "name" '(' ')'
  340                 | expr . "->" "name" '(' expr_list ')'
  350 expr_field: expr . '.' "name"
  351           | expr . '.' '.' "name"
  352           | expr . '.' "name" '(' ')'
  353           | expr . '.' "name" '(' expr_list ')'
  354           | expr . '.' basic_type_declaration '(' ')'
  355           | expr . '.' basic_type_declaration '(' expr_list ')'
  358           | expr . '.' $@17 error $@18
  380 expr: expr . "<<" expr
  381     | expr . ">>" expr
  382     | expr . "<<<" expr
  383     | expr . ">>>" expr
  384     | expr . '+' expr
  385     | expr . '-' expr
  386     | expr . '*' expr
  387     | expr . '/' expr
  388     | expr . '%' expr
  389     | expr . '<' expr
  390     | expr . '>' expr
  391     | expr . "==" expr
  392     | expr . "!=" expr
  393     | expr . "<=" expr
  394     | expr . ">=" expr
  395     | expr . '&' expr
  396     | expr . '|' expr
  397     | expr . '^' expr
  398     | expr . "&&" expr
  399     | expr . "||" expr
  400     | expr . "^^" expr
  401     | expr . ".." expr
  404     | expr . "++"
  405     | expr . "--"
  407     | expr . '[' expr ']'
  408     | expr . '.' '[' expr ']'
  409     | expr . "?[" expr ']'
  410     | expr . '.' "?[" expr ']'
  411     | expr . "?." "name"
  412     | expr . '.' "?." "name"
  421     | expr . "??" expr
  422     | expr . '?' expr ':' expr
  425     | expr . "is" "type" '<' $@19 type_declaration_no_options '>' $@20
  426     | expr . "is" basic_type_declaration
  427     | expr . "is" "name"
  428     | expr . "as" "name"
  431     | expr . "as" "type" '<' $@21 type_declaration '>' $@22
  432     | expr . "as" basic_type_declaration
  433     | expr . '?' "as" "name"
  436     | expr . '?' "as" "type" '<' $@23 type_declaration '>' $@24
  437     | expr . '?' "as" basic_type_declaration
  445     | expr . "<|" expr
  446     | expr . "|>" expr
  447     | expr . "|>" basic_type_declaration
  458 expr_mtag: expr . '.' "$f" '(' expr ')'
  459          | expr . "?." "$f" '(' expr ')'
  460          | expr . '.' '.' "$f" '(' expr ')'
  461          | expr . '.' "?." "$f" '(' expr ')'
  462          | expr . "as" "$f" '(' expr ')'
  463          | expr . '?' "as" "$f" '(' expr ')'
  464          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 637
    "as"   shift, and go to state 638
    "<<"   shift, and go to state 639
    ">>"   shift, and go to state 640
    "++"   shift, and go to state 641
    "--"   shift, and go to state 642
    "<="   shift, and go to state 643
    ">="   shift, and go to state 644
    "=="   shift, and go to state 645
    "!="   shift, and go to state 646
    "->"   shift, and go to state 647
    "??"   shift, and go to state 648
    "?."   shift, and go to state 649
    "?["   shift, and go to state 650
    "<|"   shift, and go to state 651
    "|>"   shift, and go to state 652
    "<<<"  shift, and go to state 653
    ">>>"  shift, and go to state 654
    "&&"   shift, and go to state 655
    "||"   shift, and go to state 656
    "^^"   shift, and go to state 657
    ".."   shift, and go to state 658
    '?'    shift, and go to state 659
    '|'    shift, and go to state 660
    '^'    shift, and go to state 661
    '&'    shift, and go to state 662
    '<'    shift, and go to state 663
    '>'    shift, and go to state 664
    '-'    shift, and go to state 665
    '+'    shift, and go to state 666
    '*'    shift, and go to state 667
    '/'    shift, and go to state 668
    '%'    shift, and go to state 669
    '.'    shift, and go to state 670
    '['    shift, and go to state 671

    $default  reduce using rule 64 (expression_if_one_liner)


State 1339

   70 expression_if_then_else: expression_if_one_liner "if" '(' expr ')' expression_else_one_liner "end of expression" .

    $default  reduce using rule 70 (expression_if_then_else)


State 1340

  272 tuple_expansion_variable_declaration: '(' tuple_expansion ')' ':' type_declaration_no_options . copy_or_move_or_clone expr "end of expression"

    "<-"  shift, and go to state 571
    ":="  shift, and go to state 572
    '='   shift, and go to state 573

    copy_or_move_or_clone  go to state 1378


State 1341

  273 tuple_expansion_variable_declaration: '(' tuple_expansion ')' optional_ref copy_or_move_or_clone . expr "end of expression"

    "struct"                          shift, and go to state 402
    "class"                           shift, and go to state 403
    "true"                            shift, and go to state 404
    "false"                           shift, and go to state 405
    "new"                             shift, and go to state 406
    "typeinfo"                        shift, and go to state 407
    "type"                            shift, and go to state 408
    "array"                           shift, and go to state 409
    "null"                            shift, and go to state 410
    "table"                           shift, and go to state 411
    "deref"                           shift, and go to state 412
    "cast"                            shift, and go to state 413
    "upcast"                          shift, and go to state 414
    "addr"                            shift, and go to state 415
    "reinterpret"                     shift, and go to state 416
    "unsafe"                          shift, and go to state 417
    "fixed_array"                     shift, and go to state 418
    "default"                         shift, and go to state 419
    "bool"                            shift, and go to state 222
    "void"                            shift, and go to state 223
    "string"                          shift, and go to state 224
    "int"                             shift, and go to state 226
    "int2"                            shift, and go to state 227
    "int3"                            shift, and go to state 228
    "int4"                            shift, and go to state 229
    "uint"                            shift, and go to state 230
    "bitfield"                        shift, and go to state 420
    "uint2"                           shift, and go to state 232
    "uint3"                           shift, and go to state 233
    "uint4"                           shift, and go to state 234
    "float"                           shift, and go to state 235
    "float2"                          shift, and go to state 236
    "float3"                          shift, and go to state 237
    "float4"                          shift, and go to state 238
    "range"                           shift, and go to state 239
    "urange"                          shift, and go to state 240
    "range64"                         shift, and go to state 241
    "urange64"                        shift, and go to state 242
    "int64"                           shift, and go to state 244
    "uint64"                          shift, and go to state 245
    "double"                          shift, and go to state 246
    "int8"                            shift, and go to state 249
    "uint8"                           shift, and go to state 250
    "int16"                           shift, and go to state 251
    "uint16"                          shift, and go to state 252
    "tuple"                           shift, and go to state 421
    "variant"                         shift, and go to state 422
    "generator"                       shift, and go to state 423
    "++"                              shift, and go to state 424
    "--"                              shift, and go to state 425
    "::"                              shift, and go to state 55
    "$$"                              shift, and go to state 426
    "$i"                              shift, and go to state 427
    "$v"                              shift, and go to state 428
    "$b"                              shift, and go to state 429
    "$a"                              shift, and go to state 430
    "$c"                              shift, and go to state 431
    "..."                             shift, and go to state 432
    "integer constant"                shift, and go to state 433
    "long integer constant"           shift, and go to state 434
    "unsigned integer constant"       shift, and go to state 435
    "unsigned long integer constant"  shift, and go to state 436
    "unsigned int8 constant"          shift, and go to state 437
    "floating point constant"         shift, and go to state 438
    "double constant"                 shift, and go to state 439
    "name"                            shift, and go to state 56
    "start of the string"             shift, and go to state 440
    "begin of code block"             shift, and go to state 441
    '-'                               shift, and go to state 442
    '+'                               shift, and go to state 443
    '*'                               shift, and go to state 444
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 445
    '!'                               shift, and go to state 446
    '['                               shift, and go to state 447
    '('                               shift, and go to state 448
    '$'                               shift, and go to state 449
    '@'                               shift, and go to state 450

    string_builder          go to state 451
    expr_reader             go to state 452
    expr_call_pipe          go to state 453
    name_in_namespace       go to state 454
    expr_new                go to state 455
    expr_cast               go to state 456
    expr_type_decl          go to state 457
    expr_type_info          go to state 458
    block_or_lambda         go to state 459
    expr_full_block         go to state 460
    expr_numeric_const      go to state 461
    expr_named_call         go to state 462
    expr_method_call        go to state 463
    func_addr_expr          go to state 464
    expr_field              go to state 465
    expr_call               go to state 466
    expr                    go to state 1379
    expr_mtag               go to state 468
    basic_type_declaration  go to state 469
    make_decl               go to state 470
    make_struct_decl        go to state 471
    make_tuple_call         go to state 472
    make_dim_decl           go to state 473
    make_table_decl         go to state 474
    array_comprehension     go to state 475


State 1342

  519 let_variable_name_with_pos_list: let_variable_name_with_pos_list ',' "name" "aka" "name" .

    $default  reduce using rule 519 (let_variable_name_with_pos_list)


State 1343

  339 expr_method_call: expr . "->" "name" '(' ')'
  340                 | expr . "->" "name" '(' expr_list ')'
  350 expr_field: expr . '.' "name"
  351           | expr . '.' '.' "name"
  352           | expr . '.' "name" '(' ')'
  353           | expr . '.' "name" '(' expr_list ')'
  354           | expr . '.' basic_type_declaration '(' ')'
  355           | expr . '.' basic_type_declaration '(' expr_list ')'
  358           | expr . '.' $@17 error $@18
  380 expr: expr . "<<" expr
  381     | expr . ">>" expr
  382     | expr . "<<<" expr
  383     | expr . ">>>" expr
  384     | expr . '+' expr
  385     | expr . '-' expr
  386     | expr . '*' expr
  387     | expr . '/' expr
  388     | expr . '%' expr
  389     | expr . '<' expr
  390     | expr . '>' expr
  391     | expr . "==" expr
  392     | expr . "!=" expr
  393     | expr . "<=" expr
  394     | expr . ">=" expr
  395     | expr . '&' expr
  396     | expr . '|' expr
  397     | expr . '^' expr
  398     | expr . "&&" expr
  399     | expr . "||" expr
  400     | expr . "^^" expr
  401     | expr . ".." expr
  404     | expr . "++"
  405     | expr . "--"
  407     | expr . '[' expr ']'
  408     | expr . '.' '[' expr ']'
  409     | expr . "?[" expr ']'
  410     | expr . '.' "?[" expr ']'
  411     | expr . "?." "name"
  412     | expr . '.' "?." "name"
  421     | expr . "??" expr
  422     | expr . '?' expr ':' expr
  425     | expr . "is" "type" '<' $@19 type_declaration_no_options '>' $@20
  426     | expr . "is" basic_type_declaration
  427     | expr . "is" "name"
  428     | expr . "as" "name"
  431     | expr . "as" "type" '<' $@21 type_declaration '>' $@22
  432     | expr . "as" basic_type_declaration
  433     | expr . '?' "as" "name"
  436     | expr . '?' "as" "type" '<' $@23 type_declaration '>' $@24
  437     | expr . '?' "as" basic_type_declaration
  445     | expr . "<|" expr
  446     | expr . "|>" expr
  447     | expr . "|>" basic_type_declaration
  458 expr_mtag: expr . '.' "$f" '(' expr ')'
  459          | expr . "?." "$f" '(' expr ')'
  460          | expr . '.' '.' "$f" '(' expr ')'
  461          | expr . '.' "?." "$f" '(' expr ')'
  462          | expr . "as" "$f" '(' expr ')'
  463          | expr . '?' "as" "$f" '(' expr ')'
  464          | expr . "is" "$f" '(' expr ')'
  523 let_variable_declaration: let_variable_name_with_pos_list ':' type_declaration_no_options copy_or_move_or_clone expr . "end of expression"

    "is"                 shift, and go to state 637
    "as"                 shift, and go to state 638
    "<<"                 shift, and go to state 639
    ">>"                 shift, and go to state 640
    "++"                 shift, and go to state 641
    "--"                 shift, and go to state 642
    "<="                 shift, and go to state 643
    ">="                 shift, and go to state 644
    "=="                 shift, and go to state 645
    "!="                 shift, and go to state 646
    "->"                 shift, and go to state 647
    "??"                 shift, and go to state 648
    "?."                 shift, and go to state 649
    "?["                 shift, and go to state 650
    "<|"                 shift, and go to state 651
    "|>"                 shift, and go to state 652
    "<<<"                shift, and go to state 653
    ">>>"                shift, and go to state 654
    "&&"                 shift, and go to state 655
    "||"                 shift, and go to state 656
    "^^"                 shift, and go to state 657
    ".."                 shift, and go to state 658
    "end of expression"  shift, and go to state 1380
    '?'                  shift, and go to state 659
    '|'                  shift, and go to state 660
    '^'                  shift, and go to state 661
    '&'                  shift, and go to state 662
    '<'                  shift, and go to state 663
    '>'                  shift, and go to state 664
    '-'                  shift, and go to state 665
    '+'                  shift, and go to state 666
    '*'                  shift, and go to state 667
    '/'                  shift, and go to state 668
    '%'                  shift, and go to state 669
    '.'                  shift, and go to state 670
    '['                  shift, and go to state 671


State 1344

  524 let_variable_declaration: let_variable_name_with_pos_list optional_ref copy_or_move_or_clone expr "end of expression" .

    $default  reduce using rule 524 (let_variable_declaration)


State 1345

  483 struct_variable_declaration_list: struct_variable_declaration_list optional_annotation_list "def" optional_public_or_private_member_variable "abstract" optional_constant $@26 . function_declaration_header "end of expression"

    "operator"  shift, and go to state 172
    "bool"      shift, and go to state 173
    "string"    shift, and go to state 174
    "int"       shift, and go to state 175
    "int2"      shift, and go to state 176
    "int3"      shift, and go to state 177
    "int4"      shift, and go to state 178
    "uint"      shift, and go to state 179
    "uint2"     shift, and go to state 180
    "uint3"     shift, and go to state 181
    "uint4"     shift, and go to state 182
    "float"     shift, and go to state 183
    "float2"    shift, and go to state 184
    "float3"    shift, and go to state 185
    "float4"    shift, and go to state 186
    "range"     shift, and go to state 187
    "urange"    shift, and go to state 188
    "range64"   shift, and go to state 189
    "urange64"  shift, and go to state 190
    "int64"     shift, and go to state 191
    "uint64"    shift, and go to state 192
    "double"    shift, and go to state 193
    "int8"      shift, and go to state 194
    "uint8"     shift, and go to state 195
    "int16"     shift, and go to state 196
    "uint16"    shift, and go to state 197
    "++"        shift, and go to state 198
    "--"        shift, and go to state 199
    "name"      shift, and go to state 200

    function_name                go to state 201
    function_declaration_header  go to state 1381


State 1346

  485 struct_variable_declaration_list: struct_variable_declaration_list optional_annotation_list "def" optional_public_or_private_member_variable optional_static_member_variable optional_override optional_constant . $@27 function_declaration_header expression_block

    $default  reduce using rule 484 ($@27)

    $@27  go to state 1382


State 1347

  478 structure_variable_declaration: optional_field_annotation optional_static_member_variable optional_override optional_public_or_private_member_variable variable_declaration .

    $default  reduce using rule 478 (structure_variable_declaration)


State 1348

  735 make_struct_decl: "struct" '<' $@72 type_declaration_no_options '>' $@73 '(' use_initializer . optional_make_struct_dim_decl ')'

    "$f"    shift, and go to state 824
    "name"  shift, and go to state 1017
    '('     shift, and go to state 1383

    $default  reduce using rule 730 (optional_make_struct_dim_decl)

    make_struct_fields             go to state 1384
    make_struct_dim_list           go to state 1385
    make_struct_dim_decl           go to state 1386
    optional_make_struct_dim_decl  go to state 1387


State 1349

  738 make_struct_decl: "class" '<' $@74 type_declaration_no_options '>' $@75 '(' use_initializer . optional_make_struct_dim_decl ')'

    "$f"    shift, and go to state 824
    "name"  shift, and go to state 1017
    '('     shift, and go to state 1383

    $default  reduce using rule 730 (optional_make_struct_dim_decl)

    make_struct_fields             go to state 1384
    make_struct_dim_list           go to state 1385
    make_struct_dim_decl           go to state 1386
    optional_make_struct_dim_decl  go to state 1388


State 1350

  289 expr_type_info: "typeinfo" name_in_namespace '<' "name" '>' '(' expr ')' .

    $default  reduce using rule 289 (expr_type_info)


State 1351

  290 expr_type_info: "typeinfo" name_in_namespace '<' "name" c_or_s "name" '>' '(' . expr ')'

    "struct"                          shift, and go to state 402
    "class"                           shift, and go to state 403
    "true"                            shift, and go to state 404
    "false"                           shift, and go to state 405
    "new"                             shift, and go to state 406
    "typeinfo"                        shift, and go to state 407
    "type"                            shift, and go to state 408
    "array"                           shift, and go to state 409
    "null"                            shift, and go to state 410
    "table"                           shift, and go to state 411
    "deref"                           shift, and go to state 412
    "cast"                            shift, and go to state 413
    "upcast"                          shift, and go to state 414
    "addr"                            shift, and go to state 415
    "reinterpret"                     shift, and go to state 416
    "unsafe"                          shift, and go to state 417
    "fixed_array"                     shift, and go to state 418
    "default"                         shift, and go to state 419
    "bool"                            shift, and go to state 222
    "void"                            shift, and go to state 223
    "string"                          shift, and go to state 224
    "int"                             shift, and go to state 226
    "int2"                            shift, and go to state 227
    "int3"                            shift, and go to state 228
    "int4"                            shift, and go to state 229
    "uint"                            shift, and go to state 230
    "bitfield"                        shift, and go to state 420
    "uint2"                           shift, and go to state 232
    "uint3"                           shift, and go to state 233
    "uint4"                           shift, and go to state 234
    "float"                           shift, and go to state 235
    "float2"                          shift, and go to state 236
    "float3"                          shift, and go to state 237
    "float4"                          shift, and go to state 238
    "range"                           shift, and go to state 239
    "urange"                          shift, and go to state 240
    "range64"                         shift, and go to state 241
    "urange64"                        shift, and go to state 242
    "int64"                           shift, and go to state 244
    "uint64"                          shift, and go to state 245
    "double"                          shift, and go to state 246
    "int8"                            shift, and go to state 249
    "uint8"                           shift, and go to state 250
    "int16"                           shift, and go to state 251
    "uint16"                          shift, and go to state 252
    "tuple"                           shift, and go to state 421
    "variant"                         shift, and go to state 422
    "generator"                       shift, and go to state 423
    "++"                              shift, and go to state 424
    "--"                              shift, and go to state 425
    "::"                              shift, and go to state 55
    "$$"                              shift, and go to state 426
    "$i"                              shift, and go to state 427
    "$v"                              shift, and go to state 428
    "$b"                              shift, and go to state 429
    "$a"                              shift, and go to state 430
    "$c"                              shift, and go to state 431
    "..."                             shift, and go to state 432
    "integer constant"                shift, and go to state 433
    "long integer constant"           shift, and go to state 434
    "unsigned integer constant"       shift, and go to state 435
    "unsigned long integer constant"  shift, and go to state 436
    "unsigned int8 constant"          shift, and go to state 437
    "floating point constant"         shift, and go to state 438
    "double constant"                 shift, and go to state 439
    "name"                            shift, and go to state 56
    "start of the string"             shift, and go to state 440
    "begin of code block"             shift, and go to state 441
    '-'                               shift, and go to state 442
    '+'                               shift, and go to state 443
    '*'                               shift, and go to state 444
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 445
    '!'                               shift, and go to state 446
    '['                               shift, and go to state 447
    '('                               shift, and go to state 448
    '$'                               shift, and go to state 449
    '@'                               shift, and go to state 450

    string_builder          go to state 451
    expr_reader             go to state 452
    expr_call_pipe          go to state 453
    name_in_namespace       go to state 454
    expr_new                go to state 455
    expr_cast               go to state 456
    expr_type_decl          go to state 457
    expr_type_info          go to state 458
    block_or_lambda         go to state 459
    expr_full_block         go to state 460
    expr_numeric_const      go to state 461
    expr_named_call         go to state 462
    expr_method_call        go to state 463
    func_addr_expr          go to state 464
    expr_field              go to state 465
    expr_call               go to state 466
    expr                    go to state 1389
    expr_mtag               go to state 468
    basic_type_declaration  go to state 469
    make_decl               go to state 470
    make_struct_decl        go to state 471
    make_tuple_call         go to state 472
    make_dim_decl           go to state 473
    make_table_decl         go to state 474
    array_comprehension     go to state 475


State 1352

  754 make_dim_decl: "array" "struct" '<' $@82 type_declaration_no_options '>' $@83 '(' . use_initializer optional_make_struct_dim_decl ')'

    "uninitialized"  shift, and go to state 970

    $default  reduce using rule 731 (use_initializer)

    use_initializer  go to state 1390


State 1353

  757 make_dim_decl: "array" "tuple" '<' $@84 type_declaration_no_options '>' $@85 '(' . use_initializer optional_make_struct_dim_decl ')'

    "uninitialized"  shift, and go to state 970

    $default  reduce using rule 731 (use_initializer)

    use_initializer  go to state 1391


State 1354

  760 make_dim_decl: "array" "variant" '<' $@86 type_declaration_no_options '>' $@87 '(' . make_variant_dim ')'

    "$f"    shift, and go to state 824
    "name"  shift, and go to state 1017

    make_struct_fields  go to state 1359
    make_variant_dim    go to state 1392


State 1355

  764 make_dim_decl: "array" '<' $@88 type_declaration_no_options '>' $@89 '(' optional_expr_list . ')'

    ')'  shift, and go to state 1393


State 1356

  774 make_table_decl: "table" '<' type_declaration_no_options c_or_s type_declaration_no_options '>' '(' optional_expr_map_tuple_list . ')'

    ')'  shift, and go to state 1394


State 1357

  292 expr_list: expr_list . ',' expr
  768 make_dim_decl: "fixed_array" '<' $@90 type_declaration_no_options '>' $@91 '(' expr_list . optional_comma ')'

    ','  shift, and go to state 815

    $default  reduce using rule 777 (optional_comma)

    optional_comma  go to state 1395


State 1358

  750 make_tuple_call: "tuple" '<' $@80 type_declaration_no_options '>' $@81 '(' use_initializer . optional_make_struct_dim_decl ')'

    "$f"    shift, and go to state 824
    "name"  shift, and go to state 1017
    '('     shift, and go to state 1383

    $default  reduce using rule 730 (optional_make_struct_dim_decl)

    make_struct_fields             go to state 1384
    make_struct_dim_list           go to state 1385
    make_struct_dim_decl           go to state 1386
    optional_make_struct_dim_decl  go to state 1396


State 1359

  717 make_struct_fields: make_struct_fields . ',' "name" copy_or_move expr
  718                   | make_struct_fields . ',' "name" ":=" expr
  721                   | make_struct_fields . ',' "$f" '(' expr ')' copy_or_move expr
  722                   | make_struct_fields . ',' "$f" '(' expr ')' ":=" expr
  723 make_variant_dim: make_struct_fields .

    ','  shift, and go to state 1026

    $default  reduce using rule 723 (make_variant_dim)


State 1360

  741 make_struct_decl: "variant" '<' $@76 type_declaration_no_options '>' $@77 '(' make_variant_dim . ')'

    ')'  shift, and go to state 1397


State 1361

  419 expr: "generator" '<' type_declaration_no_options '>' optional_capture_list '(' expr ')' .

    $default  reduce using rule 419 (expr)


State 1362

  776 array_comprehension_where: "end of expression" . "where" expr

    "where"  shift, and go to state 1398


State 1363

  781 array_comprehension: "begin of code block" "for" variable_name_with_pos_list "in" expr_list "end of expression" make_map_tuple array_comprehension_where . "end of code block"

    "end of code block"  shift, and go to state 1399


State 1364

  779 array_comprehension: '[' "for" variable_name_with_pos_list "in" expr_list "end of expression" expr array_comprehension_where . ']'

    ']'  shift, and go to state 1400


State 1365

  339 expr_method_call: expr . "->" "name" '(' ')'
  340                 | expr . "->" "name" '(' expr_list ')'
  350 expr_field: expr . '.' "name"
  351           | expr . '.' '.' "name"
  352           | expr . '.' "name" '(' ')'
  353           | expr . '.' "name" '(' expr_list ')'
  354           | expr . '.' basic_type_declaration '(' ')'
  355           | expr . '.' basic_type_declaration '(' expr_list ')'
  358           | expr . '.' $@17 error $@18
  380 expr: expr . "<<" expr
  381     | expr . ">>" expr
  382     | expr . "<<<" expr
  383     | expr . ">>>" expr
  384     | expr . '+' expr
  385     | expr . '-' expr
  386     | expr . '*' expr
  387     | expr . '/' expr
  388     | expr . '%' expr
  389     | expr . '<' expr
  390     | expr . '>' expr
  391     | expr . "==" expr
  392     | expr . "!=" expr
  393     | expr . "<=" expr
  394     | expr . ">=" expr
  395     | expr . '&' expr
  396     | expr . '|' expr
  397     | expr . '^' expr
  398     | expr . "&&" expr
  399     | expr . "||" expr
  400     | expr . "^^" expr
  401     | expr . ".." expr
  404     | expr . "++"
  405     | expr . "--"
  407     | expr . '[' expr ']'
  408     | expr . '.' '[' expr ']'
  409     | expr . "?[" expr ']'
  410     | expr . '.' "?[" expr ']'
  411     | expr . "?." "name"
  412     | expr . '.' "?." "name"
  421     | expr . "??" expr
  422     | expr . '?' expr ':' expr
  425     | expr . "is" "type" '<' $@19 type_declaration_no_options '>' $@20
  426     | expr . "is" basic_type_declaration
  427     | expr . "is" "name"
  428     | expr . "as" "name"
  431     | expr . "as" "type" '<' $@21 type_declaration '>' $@22
  432     | expr . "as" basic_type_declaration
  433     | expr . '?' "as" "name"
  436     | expr . '?' "as" "type" '<' $@23 type_declaration '>' $@24
  437     | expr . '?' "as" basic_type_declaration
  445     | expr . "<|" expr
  446     | expr . "|>" expr
  447     | expr . "|>" basic_type_declaration
  458 expr_mtag: expr . '.' "$f" '(' expr ')'
  459          | expr . "?." "$f" '(' expr ')'
  460          | expr . '.' '.' "$f" '(' expr ')'
  461          | expr . '.' "?." "$f" '(' expr ')'
  462          | expr . "as" "$f" '(' expr ')'
  463          | expr . '?' "as" "$f" '(' expr ')'
  464          | expr . "is" "$f" '(' expr ')'
  780 array_comprehension: '[' "iterator" "for" variable_name_with_pos_list "in" expr_list "end of expression" expr . array_comprehension_where ']'

    "is"                 shift, and go to state 637
    "as"                 shift, and go to state 638
    "<<"                 shift, and go to state 639
    ">>"                 shift, and go to state 640
    "++"                 shift, and go to state 641
    "--"                 shift, and go to state 642
    "<="                 shift, and go to state 643
    ">="                 shift, and go to state 644
    "=="                 shift, and go to state 645
    "!="                 shift, and go to state 646
    "->"                 shift, and go to state 647
    "??"                 shift, and go to state 648
    "?."                 shift, and go to state 649
    "?["                 shift, and go to state 650
    "<|"                 shift, and go to state 651
    "|>"                 shift, and go to state 652
    "<<<"                shift, and go to state 653
    ">>>"                shift, and go to state 654
    "&&"                 shift, and go to state 655
    "||"                 shift, and go to state 656
    "^^"                 shift, and go to state 657
    ".."                 shift, and go to state 658
    "end of expression"  shift, and go to state 1362
    '?'                  shift, and go to state 659
    '|'                  shift, and go to state 660
    '^'                  shift, and go to state 661
    '&'                  shift, and go to state 662
    '<'                  shift, and go to state 663
    '>'                  shift, and go to state 664
    '-'                  shift, and go to state 665
    '+'                  shift, and go to state 666
    '*'                  shift, and go to state 667
    '/'                  shift, and go to state 668
    '%'                  shift, and go to state 669
    '.'                  shift, and go to state 670
    '['                  shift, and go to state 671

    $default  reduce using rule 775 (array_comprehension_where)

    array_comprehension_where  go to state 1401


State 1366

  346 func_addr_expr: '@' '@' '<' $@13 type_declaration_no_options '>' $@14 func_addr_name .

    $default  reduce using rule 346 (func_addr_expr)


State 1367

  349 func_addr_expr: '@' '@' '<' $@15 optional_function_argument_list optional_function_type '>' $@16 . func_addr_name

    "::"    shift, and go to state 55
    "$i"    shift, and go to state 818
    "name"  shift, and go to state 56

    name_in_namespace  go to state 821
    func_addr_name     go to state 1402


State 1368

  339 expr_method_call: expr . "->" "name" '(' ')'
  340                 | expr . "->" "name" '(' expr_list ')'
  350 expr_field: expr . '.' "name"
  351           | expr . '.' '.' "name"
  352           | expr . '.' "name" '(' ')'
  353           | expr . '.' "name" '(' expr_list ')'
  354           | expr . '.' basic_type_declaration '(' ')'
  355           | expr . '.' basic_type_declaration '(' expr_list ')'
  358           | expr . '.' $@17 error $@18
  380 expr: expr . "<<" expr
  381     | expr . ">>" expr
  382     | expr . "<<<" expr
  383     | expr . ">>>" expr
  384     | expr . '+' expr
  385     | expr . '-' expr
  386     | expr . '*' expr
  387     | expr . '/' expr
  388     | expr . '%' expr
  389     | expr . '<' expr
  390     | expr . '>' expr
  391     | expr . "==" expr
  392     | expr . "!=" expr
  393     | expr . "<=" expr
  394     | expr . ">=" expr
  395     | expr . '&' expr
  396     | expr . '|' expr
  397     | expr . '^' expr
  398     | expr . "&&" expr
  399     | expr . "||" expr
  400     | expr . "^^" expr
  401     | expr . ".." expr
  404     | expr . "++"
  405     | expr . "--"
  407     | expr . '[' expr ']'
  408     | expr . '.' '[' expr ']'
  409     | expr . "?[" expr ']'
  410     | expr . '.' "?[" expr ']'
  411     | expr . "?." "name"
  412     | expr . '.' "?." "name"
  421     | expr . "??" expr
  422     | expr . '?' expr ':' expr
  425     | expr . "is" "type" '<' $@19 type_declaration_no_options '>' $@20
  426     | expr . "is" basic_type_declaration
  427     | expr . "is" "name"
  428     | expr . "as" "name"
  431     | expr . "as" "type" '<' $@21 type_declaration '>' $@22
  432     | expr . "as" basic_type_declaration
  433     | expr . '?' "as" "name"
  436     | expr . '?' "as" "type" '<' $@23 type_declaration '>' $@24
  437     | expr . '?' "as" basic_type_declaration
  445     | expr . "<|" expr
  446     | expr . "|>" expr
  447     | expr . "|>" basic_type_declaration
  458 expr_mtag: expr . '.' "$f" '(' expr ')'
  459          | expr . "?." "$f" '(' expr ')'
  460          | expr . '.' '.' "$f" '(' expr ')'
  461          | expr . '.' "?." "$f" '(' expr ')'
  462          | expr . "as" "$f" '(' expr ')'
  463          | expr . '?' "as" "$f" '(' expr ')'
  464          | expr . "is" "$f" '(' expr ')'
  720 make_struct_fields: "$f" '(' expr ')' ":=" expr .

    "is"   shift, and go to state 637
    "as"   shift, and go to state 638
    "<<"   shift, and go to state 639
    ">>"   shift, and go to state 640
    "++"   shift, and go to state 641
    "--"   shift, and go to state 642
    "<="   shift, and go to state 643
    ">="   shift, and go to state 644
    "=="   shift, and go to state 645
    "!="   shift, and go to state 646
    "->"   shift, and go to state 647
    "??"   shift, and go to state 648
    "?."   shift, and go to state 649
    "?["   shift, and go to state 650
    "<|"   shift, and go to state 651
    "|>"   shift, and go to state 652
    "<<<"  shift, and go to state 653
    ">>>"  shift, and go to state 654
    "&&"   shift, and go to state 655
    "||"   shift, and go to state 656
    "^^"   shift, and go to state 657
    ".."   shift, and go to state 658
    '?'    shift, and go to state 659
    '|'    shift, and go to state 660
    '^'    shift, and go to state 661
    '&'    shift, and go to state 662
    '<'    shift, and go to state 663
    '>'    shift, and go to state 664
    '-'    shift, and go to state 665
    '+'    shift, and go to state 666
    '*'    shift, and go to state 667
    '/'    shift, and go to state 668
    '%'    shift, and go to state 669
    '.'    shift, and go to state 670
    '['    shift, and go to state 671

    $default  reduce using rule 720 (make_struct_fields)


State 1369

  339 expr_method_call: expr . "->" "name" '(' ')'
  340                 | expr . "->" "name" '(' expr_list ')'
  350 expr_field: expr . '.' "name"
  351           | expr . '.' '.' "name"
  352           | expr . '.' "name" '(' ')'
  353           | expr . '.' "name" '(' expr_list ')'
  354           | expr . '.' basic_type_declaration '(' ')'
  355           | expr . '.' basic_type_declaration '(' expr_list ')'
  358           | expr . '.' $@17 error $@18
  380 expr: expr . "<<" expr
  381     | expr . ">>" expr
  382     | expr . "<<<" expr
  383     | expr . ">>>" expr
  384     | expr . '+' expr
  385     | expr . '-' expr
  386     | expr . '*' expr
  387     | expr . '/' expr
  388     | expr . '%' expr
  389     | expr . '<' expr
  390     | expr . '>' expr
  391     | expr . "==" expr
  392     | expr . "!=" expr
  393     | expr . "<=" expr
  394     | expr . ">=" expr
  395     | expr . '&' expr
  396     | expr . '|' expr
  397     | expr . '^' expr
  398     | expr . "&&" expr
  399     | expr . "||" expr
  400     | expr . "^^" expr
  401     | expr . ".." expr
  404     | expr . "++"
  405     | expr . "--"
  407     | expr . '[' expr ']'
  408     | expr . '.' '[' expr ']'
  409     | expr . "?[" expr ']'
  410     | expr . '.' "?[" expr ']'
  411     | expr . "?." "name"
  412     | expr . '.' "?." "name"
  421     | expr . "??" expr
  422     | expr . '?' expr ':' expr
  425     | expr . "is" "type" '<' $@19 type_declaration_no_options '>' $@20
  426     | expr . "is" basic_type_declaration
  427     | expr . "is" "name"
  428     | expr . "as" "name"
  431     | expr . "as" "type" '<' $@21 type_declaration '>' $@22
  432     | expr . "as" basic_type_declaration
  433     | expr . '?' "as" "name"
  436     | expr . '?' "as" "type" '<' $@23 type_declaration '>' $@24
  437     | expr . '?' "as" basic_type_declaration
  445     | expr . "<|" expr
  446     | expr . "|>" expr
  447     | expr . "|>" basic_type_declaration
  458 expr_mtag: expr . '.' "$f" '(' expr ')'
  459          | expr . "?." "$f" '(' expr ')'
  460          | expr . '.' '.' "$f" '(' expr ')'
  461          | expr . '.' "?." "$f" '(' expr ')'
  462          | expr . "as" "$f" '(' expr ')'
  463          | expr . '?' "as" "$f" '(' expr ')'
  464          | expr . "is" "$f" '(' expr ')'
  719 make_struct_fields: "$f" '(' expr ')' copy_or_move expr .

    "is"   shift, and go to state 637
    "as"   shift, and go to state 638
    "<<"   shift, and go to state 639
    ">>"   shift, and go to state 640
    "++"   shift, and go to state 641
    "--"   shift, and go to state 642
    "<="   shift, and go to state 643
    ">="   shift, and go to state 644
    "=="   shift, and go to state 645
    "!="   shift, and go to state 646
    "->"   shift, and go to state 647
    "??"   shift, and go to state 648
    "?."   shift, and go to state 649
    "?["   shift, and go to state 650
    "<|"   shift, and go to state 651
    "|>"   shift, and go to state 652
    "<<<"  shift, and go to state 653
    ">>>"  shift, and go to state 654
    "&&"   shift, and go to state 655
    "||"   shift, and go to state 656
    "^^"   shift, and go to state 657
    ".."   shift, and go to state 658
    '?'    shift, and go to state 659
    '|'    shift, and go to state 660
    '^'    shift, and go to state 661
    '&'    shift, and go to state 662
    '<'    shift, and go to state 663
    '>'    shift, and go to state 664
    '-'    shift, and go to state 665
    '+'    shift, and go to state 666
    '*'    shift, and go to state 667
    '/'    shift, and go to state 668
    '%'    shift, and go to state 669
    '.'    shift, and go to state 670
    '['    shift, and go to state 671

    $default  reduce using rule 719 (make_struct_fields)


State 1370

  338 expr_named_call: name_in_namespace '(' expr_list ',' '[' make_struct_fields ']' ')' .

    $default  reduce using rule 338 (expr_named_call)


State 1371

  721 make_struct_fields: make_struct_fields ',' "$f" '(' expr ')' . copy_or_move expr
  722                   | make_struct_fields ',' "$f" '(' expr ')' . ":=" expr

    "<-"  shift, and go to state 912
    ":="  shift, and go to state 1403
    '='   shift, and go to state 914

    copy_or_move  go to state 1404


State 1372

  303 capture_entry: "name" '(' "name" ')' .

    $default  reduce using rule 303 (capture_entry)


State 1373

  295 block_or_simple_block: "=>" "<-" expr .
  339 expr_method_call: expr . "->" "name" '(' ')'
  340                 | expr . "->" "name" '(' expr_list ')'
  350 expr_field: expr . '.' "name"
  351           | expr . '.' '.' "name"
  352           | expr . '.' "name" '(' ')'
  353           | expr . '.' "name" '(' expr_list ')'
  354           | expr . '.' basic_type_declaration '(' ')'
  355           | expr . '.' basic_type_declaration '(' expr_list ')'
  358           | expr . '.' $@17 error $@18
  380 expr: expr . "<<" expr
  381     | expr . ">>" expr
  382     | expr . "<<<" expr
  383     | expr . ">>>" expr
  384     | expr . '+' expr
  385     | expr . '-' expr
  386     | expr . '*' expr
  387     | expr . '/' expr
  388     | expr . '%' expr
  389     | expr . '<' expr
  390     | expr . '>' expr
  391     | expr . "==" expr
  392     | expr . "!=" expr
  393     | expr . "<=" expr
  394     | expr . ">=" expr
  395     | expr . '&' expr
  396     | expr . '|' expr
  397     | expr . '^' expr
  398     | expr . "&&" expr
  399     | expr . "||" expr
  400     | expr . "^^" expr
  401     | expr . ".." expr
  404     | expr . "++"
  405     | expr . "--"
  407     | expr . '[' expr ']'
  408     | expr . '.' '[' expr ']'
  409     | expr . "?[" expr ']'
  410     | expr . '.' "?[" expr ']'
  411     | expr . "?." "name"
  412     | expr . '.' "?." "name"
  421     | expr . "??" expr
  422     | expr . '?' expr ':' expr
  425     | expr . "is" "type" '<' $@19 type_declaration_no_options '>' $@20
  426     | expr . "is" basic_type_declaration
  427     | expr . "is" "name"
  428     | expr . "as" "name"
  431     | expr . "as" "type" '<' $@21 type_declaration '>' $@22
  432     | expr . "as" basic_type_declaration
  433     | expr . '?' "as" "name"
  436     | expr . '?' "as" "type" '<' $@23 type_declaration '>' $@24
  437     | expr . '?' "as" basic_type_declaration
  445     | expr . "<|" expr
  446     | expr . "|>" expr
  447     | expr . "|>" basic_type_declaration
  458 expr_mtag: expr . '.' "$f" '(' expr ')'
  459          | expr . "?." "$f" '(' expr ')'
  460          | expr . '.' '.' "$f" '(' expr ')'
  461          | expr . '.' "?." "$f" '(' expr ')'
  462          | expr . "as" "$f" '(' expr ')'
  463          | expr . '?' "as" "$f" '(' expr ')'
  464          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 637
    "as"   shift, and go to state 638
    "<<"   shift, and go to state 639
    ">>"   shift, and go to state 640
    "++"   shift, and go to state 641
    "--"   shift, and go to state 642
    "<="   shift, and go to state 643
    ">="   shift, and go to state 644
    "=="   shift, and go to state 645
    "!="   shift, and go to state 646
    "->"   shift, and go to state 647
    "??"   shift, and go to state 648
    "?."   shift, and go to state 649
    "?["   shift, and go to state 650
    "<|"   shift, and go to state 651
    "|>"   shift, and go to state 652
    "<<<"  shift, and go to state 653
    ">>>"  shift, and go to state 654
    "&&"   shift, and go to state 655
    "||"   shift, and go to state 656
    "^^"   shift, and go to state 657
    '?'    shift, and go to state 659
    '|'    shift, and go to state 660
    '^'    shift, and go to state 661
    '&'    shift, and go to state 662
    '<'    shift, and go to state 663
    '>'    shift, and go to state 664
    '-'    shift, and go to state 665
    '+'    shift, and go to state 666
    '*'    shift, and go to state 667
    '/'    shift, and go to state 668
    '%'    shift, and go to state 669
    '.'    shift, and go to state 670
    '['    shift, and go to state 671

    $default  reduce using rule 295 (block_or_simple_block)


State 1374

  425 expr: expr "is" "type" '<' $@19 type_declaration_no_options '>' $@20 .

    $default  reduce using rule 425 (expr)


State 1375

  431 expr: expr "as" "type" '<' $@21 type_declaration '>' $@22 .

    $default  reduce using rule 431 (expr)


State 1376

  436 expr: expr '?' "as" "type" '<' $@23 type_declaration '>' . $@24

    $default  reduce using rule 435 ($@24)

    $@24  go to state 1405


State 1377

   59 expression_else: elif_or_static_elif '(' expr . ')' expression_block expression_else
  339 expr_method_call: expr . "->" "name" '(' ')'
  340                 | expr . "->" "name" '(' expr_list ')'
  350 expr_field: expr . '.' "name"
  351           | expr . '.' '.' "name"
  352           | expr . '.' "name" '(' ')'
  353           | expr . '.' "name" '(' expr_list ')'
  354           | expr . '.' basic_type_declaration '(' ')'
  355           | expr . '.' basic_type_declaration '(' expr_list ')'
  358           | expr . '.' $@17 error $@18
  380 expr: expr . "<<" expr
  381     | expr . ">>" expr
  382     | expr . "<<<" expr
  383     | expr . ">>>" expr
  384     | expr . '+' expr
  385     | expr . '-' expr
  386     | expr . '*' expr
  387     | expr . '/' expr
  388     | expr . '%' expr
  389     | expr . '<' expr
  390     | expr . '>' expr
  391     | expr . "==" expr
  392     | expr . "!=" expr
  393     | expr . "<=" expr
  394     | expr . ">=" expr
  395     | expr . '&' expr
  396     | expr . '|' expr
  397     | expr . '^' expr
  398     | expr . "&&" expr
  399     | expr . "||" expr
  400     | expr . "^^" expr
  401     | expr . ".." expr
  404     | expr . "++"
  405     | expr . "--"
  407     | expr . '[' expr ']'
  408     | expr . '.' '[' expr ']'
  409     | expr . "?[" expr ']'
  410     | expr . '.' "?[" expr ']'
  411     | expr . "?." "name"
  412     | expr . '.' "?." "name"
  421     | expr . "??" expr
  422     | expr . '?' expr ':' expr
  425     | expr . "is" "type" '<' $@19 type_declaration_no_options '>' $@20
  426     | expr . "is" basic_type_declaration
  427     | expr . "is" "name"
  428     | expr . "as" "name"
  431     | expr . "as" "type" '<' $@21 type_declaration '>' $@22
  432     | expr . "as" basic_type_declaration
  433     | expr . '?' "as" "name"
  436     | expr . '?' "as" "type" '<' $@23 type_declaration '>' $@24
  437     | expr . '?' "as" basic_type_declaration
  445     | expr . "<|" expr
  446     | expr . "|>" expr
  447     | expr . "|>" basic_type_declaration
  458 expr_mtag: expr . '.' "$f" '(' expr ')'
  459          | expr . "?." "$f" '(' expr ')'
  460          | expr . '.' '.' "$f" '(' expr ')'
  461          | expr . '.' "?." "$f" '(' expr ')'
  462          | expr . "as" "$f" '(' expr ')'
  463          | expr . '?' "as" "$f" '(' expr ')'
  464          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 637
    "as"   shift, and go to state 638
    "<<"   shift, and go to state 639
    ">>"   shift, and go to state 640
    "++"   shift, and go to state 641
    "--"   shift, and go to state 642
    "<="   shift, and go to state 643
    ">="   shift, and go to state 644
    "=="   shift, and go to state 645
    "!="   shift, and go to state 646
    "->"   shift, and go to state 647
    "??"   shift, and go to state 648
    "?."   shift, and go to state 649
    "?["   shift, and go to state 650
    "<|"   shift, and go to state 651
    "|>"   shift, and go to state 652
    "<<<"  shift, and go to state 653
    ">>>"  shift, and go to state 654
    "&&"   shift, and go to state 655
    "||"   shift, and go to state 656
    "^^"   shift, and go to state 657
    ".."   shift, and go to state 658
    '?'    shift, and go to state 659
    '|'    shift, and go to state 660
    '^'    shift, and go to state 661
    '&'    shift, and go to state 662
    '<'    shift, and go to state 663
    '>'    shift, and go to state 664
    '-'    shift, and go to state 665
    '+'    shift, and go to state 666
    '*'    shift, and go to state 667
    '/'    shift, and go to state 668
    '%'    shift, and go to state 669
    '.'    shift, and go to state 670
    '['    shift, and go to state 671
    ')'    shift, and go to state 1406


State 1378

  272 tuple_expansion_variable_declaration: '(' tuple_expansion ')' ':' type_declaration_no_options copy_or_move_or_clone . expr "end of expression"

    "struct"                          shift, and go to state 402
    "class"                           shift, and go to state 403
    "true"                            shift, and go to state 404
    "false"                           shift, and go to state 405
    "new"                             shift, and go to state 406
    "typeinfo"                        shift, and go to state 407
    "type"                            shift, and go to state 408
    "array"                           shift, and go to state 409
    "null"                            shift, and go to state 410
    "table"                           shift, and go to state 411
    "deref"                           shift, and go to state 412
    "cast"                            shift, and go to state 413
    "upcast"                          shift, and go to state 414
    "addr"                            shift, and go to state 415
    "reinterpret"                     shift, and go to state 416
    "unsafe"                          shift, and go to state 417
    "fixed_array"                     shift, and go to state 418
    "default"                         shift, and go to state 419
    "bool"                            shift, and go to state 222
    "void"                            shift, and go to state 223
    "string"                          shift, and go to state 224
    "int"                             shift, and go to state 226
    "int2"                            shift, and go to state 227
    "int3"                            shift, and go to state 228
    "int4"                            shift, and go to state 229
    "uint"                            shift, and go to state 230
    "bitfield"                        shift, and go to state 420
    "uint2"                           shift, and go to state 232
    "uint3"                           shift, and go to state 233
    "uint4"                           shift, and go to state 234
    "float"                           shift, and go to state 235
    "float2"                          shift, and go to state 236
    "float3"                          shift, and go to state 237
    "float4"                          shift, and go to state 238
    "range"                           shift, and go to state 239
    "urange"                          shift, and go to state 240
    "range64"                         shift, and go to state 241
    "urange64"                        shift, and go to state 242
    "int64"                           shift, and go to state 244
    "uint64"                          shift, and go to state 245
    "double"                          shift, and go to state 246
    "int8"                            shift, and go to state 249
    "uint8"                           shift, and go to state 250
    "int16"                           shift, and go to state 251
    "uint16"                          shift, and go to state 252
    "tuple"                           shift, and go to state 421
    "variant"                         shift, and go to state 422
    "generator"                       shift, and go to state 423
    "++"                              shift, and go to state 424
    "--"                              shift, and go to state 425
    "::"                              shift, and go to state 55
    "$$"                              shift, and go to state 426
    "$i"                              shift, and go to state 427
    "$v"                              shift, and go to state 428
    "$b"                              shift, and go to state 429
    "$a"                              shift, and go to state 430
    "$c"                              shift, and go to state 431
    "..."                             shift, and go to state 432
    "integer constant"                shift, and go to state 433
    "long integer constant"           shift, and go to state 434
    "unsigned integer constant"       shift, and go to state 435
    "unsigned long integer constant"  shift, and go to state 436
    "unsigned int8 constant"          shift, and go to state 437
    "floating point constant"         shift, and go to state 438
    "double constant"                 shift, and go to state 439
    "name"                            shift, and go to state 56
    "start of the string"             shift, and go to state 440
    "begin of code block"             shift, and go to state 441
    '-'                               shift, and go to state 442
    '+'                               shift, and go to state 443
    '*'                               shift, and go to state 444
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 445
    '!'                               shift, and go to state 446
    '['                               shift, and go to state 447
    '('                               shift, and go to state 448
    '$'                               shift, and go to state 449
    '@'                               shift, and go to state 450

    string_builder          go to state 451
    expr_reader             go to state 452
    expr_call_pipe          go to state 453
    name_in_namespace       go to state 454
    expr_new                go to state 455
    expr_cast               go to state 456
    expr_type_decl          go to state 457
    expr_type_info          go to state 458
    block_or_lambda         go to state 459
    expr_full_block         go to state 460
    expr_numeric_const      go to state 461
    expr_named_call         go to state 462
    expr_method_call        go to state 463
    func_addr_expr          go to state 464
    expr_field              go to state 465
    expr_call               go to state 466
    expr                    go to state 1407
    expr_mtag               go to state 468
    basic_type_declaration  go to state 469
    make_decl               go to state 470
    make_struct_decl        go to state 471
    make_tuple_call         go to state 472
    make_dim_decl           go to state 473
    make_table_decl         go to state 474
    array_comprehension     go to state 475


State 1379

  273 tuple_expansion_variable_declaration: '(' tuple_expansion ')' optional_ref copy_or_move_or_clone expr . "end of expression"
  339 expr_method_call: expr . "->" "name" '(' ')'
  340                 | expr . "->" "name" '(' expr_list ')'
  350 expr_field: expr . '.' "name"
  351           | expr . '.' '.' "name"
  352           | expr . '.' "name" '(' ')'
  353           | expr . '.' "name" '(' expr_list ')'
  354           | expr . '.' basic_type_declaration '(' ')'
  355           | expr . '.' basic_type_declaration '(' expr_list ')'
  358           | expr . '.' $@17 error $@18
  380 expr: expr . "<<" expr
  381     | expr . ">>" expr
  382     | expr . "<<<" expr
  383     | expr . ">>>" expr
  384     | expr . '+' expr
  385     | expr . '-' expr
  386     | expr . '*' expr
  387     | expr . '/' expr
  388     | expr . '%' expr
  389     | expr . '<' expr
  390     | expr . '>' expr
  391     | expr . "==" expr
  392     | expr . "!=" expr
  393     | expr . "<=" expr
  394     | expr . ">=" expr
  395     | expr . '&' expr
  396     | expr . '|' expr
  397     | expr . '^' expr
  398     | expr . "&&" expr
  399     | expr . "||" expr
  400     | expr . "^^" expr
  401     | expr . ".." expr
  404     | expr . "++"
  405     | expr . "--"
  407     | expr . '[' expr ']'
  408     | expr . '.' '[' expr ']'
  409     | expr . "?[" expr ']'
  410     | expr . '.' "?[" expr ']'
  411     | expr . "?." "name"
  412     | expr . '.' "?." "name"
  421     | expr . "??" expr
  422     | expr . '?' expr ':' expr
  425     | expr . "is" "type" '<' $@19 type_declaration_no_options '>' $@20
  426     | expr . "is" basic_type_declaration
  427     | expr . "is" "name"
  428     | expr . "as" "name"
  431     | expr . "as" "type" '<' $@21 type_declaration '>' $@22
  432     | expr . "as" basic_type_declaration
  433     | expr . '?' "as" "name"
  436     | expr . '?' "as" "type" '<' $@23 type_declaration '>' $@24
  437     | expr . '?' "as" basic_type_declaration
  445     | expr . "<|" expr
  446     | expr . "|>" expr
  447     | expr . "|>" basic_type_declaration
  458 expr_mtag: expr . '.' "$f" '(' expr ')'
  459          | expr . "?." "$f" '(' expr ')'
  460          | expr . '.' '.' "$f" '(' expr ')'
  461          | expr . '.' "?." "$f" '(' expr ')'
  462          | expr . "as" "$f" '(' expr ')'
  463          | expr . '?' "as" "$f" '(' expr ')'
  464          | expr . "is" "$f" '(' expr ')'

    "is"                 shift, and go to state 637
    "as"                 shift, and go to state 638
    "<<"                 shift, and go to state 639
    ">>"                 shift, and go to state 640
    "++"                 shift, and go to state 641
    "--"                 shift, and go to state 642
    "<="                 shift, and go to state 643
    ">="                 shift, and go to state 644
    "=="                 shift, and go to state 645
    "!="                 shift, and go to state 646
    "->"                 shift, and go to state 647
    "??"                 shift, and go to state 648
    "?."                 shift, and go to state 649
    "?["                 shift, and go to state 650
    "<|"                 shift, and go to state 651
    "|>"                 shift, and go to state 652
    "<<<"                shift, and go to state 653
    ">>>"                shift, and go to state 654
    "&&"                 shift, and go to state 655
    "||"                 shift, and go to state 656
    "^^"                 shift, and go to state 657
    ".."                 shift, and go to state 658
    "end of expression"  shift, and go to state 1408
    '?'                  shift, and go to state 659
    '|'                  shift, and go to state 660
    '^'                  shift, and go to state 661
    '&'                  shift, and go to state 662
    '<'                  shift, and go to state 663
    '>'                  shift, and go to state 664
    '-'                  shift, and go to state 665
    '+'                  shift, and go to state 666
    '*'                  shift, and go to state 667
    '/'                  shift, and go to state 668
    '%'                  shift, and go to state 669
    '.'                  shift, and go to state 670
    '['                  shift, and go to state 671


State 1380

  523 let_variable_declaration: let_variable_name_with_pos_list ':' type_declaration_no_options copy_or_move_or_clone expr "end of expression" .

    $default  reduce using rule 523 (let_variable_declaration)


State 1381

  483 struct_variable_declaration_list: struct_variable_declaration_list optional_annotation_list "def" optional_public_or_private_member_variable "abstract" optional_constant $@26 function_declaration_header . "end of expression"

    "end of expression"  shift, and go to state 1409


State 1382

  485 struct_variable_declaration_list: struct_variable_declaration_list optional_annotation_list "def" optional_public_or_private_member_variable optional_static_member_variable optional_override optional_constant $@27 . function_declaration_header expression_block

    "operator"  shift, and go to state 172
    "bool"      shift, and go to state 173
    "string"    shift, and go to state 174
    "int"       shift, and go to state 175
    "int2"      shift, and go to state 176
    "int3"      shift, and go to state 177
    "int4"      shift, and go to state 178
    "uint"      shift, and go to state 179
    "uint2"     shift, and go to state 180
    "uint3"     shift, and go to state 181
    "uint4"     shift, and go to state 182
    "float"     shift, and go to state 183
    "float2"    shift, and go to state 184
    "float3"    shift, and go to state 185
    "float4"    shift, and go to state 186
    "range"     shift, and go to state 187
    "urange"    shift, and go to state 188
    "range64"   shift, and go to state 189
    "urange64"  shift, and go to state 190
    "int64"     shift, and go to state 191
    "uint64"    shift, and go to state 192
    "double"    shift, and go to state 193
    "int8"      shift, and go to state 194
    "uint8"     shift, and go to state 195
    "int16"     shift, and go to state 196
    "uint16"    shift, and go to state 197
    "++"        shift, and go to state 198
    "--"        shift, and go to state 199
    "name"      shift, and go to state 200

    function_name                go to state 201
    function_declaration_header  go to state 1410


State 1383

  725 make_struct_dim_list: '(' . make_struct_fields ')'

    "$f"    shift, and go to state 824
    "name"  shift, and go to state 1017

    make_struct_fields  go to state 1411


State 1384

  717 make_struct_fields: make_struct_fields . ',' "name" copy_or_move expr
  718                   | make_struct_fields . ',' "name" ":=" expr
  721                   | make_struct_fields . ',' "$f" '(' expr ')' copy_or_move expr
  722                   | make_struct_fields . ',' "$f" '(' expr ')' ":=" expr
  727 make_struct_dim_decl: make_struct_fields .

    ','  shift, and go to state 1026

    $default  reduce using rule 727 (make_struct_dim_decl)


State 1385

  726 make_struct_dim_list: make_struct_dim_list . ',' '(' make_struct_fields ')'
  728 make_struct_dim_decl: make_struct_dim_list . optional_comma

    ','  shift, and go to state 1412

    $default  reduce using rule 777 (optional_comma)

    optional_comma  go to state 1413


State 1386

  729 optional_make_struct_dim_decl: make_struct_dim_decl .

    $default  reduce using rule 729 (optional_make_struct_dim_decl)


State 1387

  735 make_struct_decl: "struct" '<' $@72 type_declaration_no_options '>' $@73 '(' use_initializer optional_make_struct_dim_decl . ')'

    ')'  shift, and go to state 1414


State 1388

  738 make_struct_decl: "class" '<' $@74 type_declaration_no_options '>' $@75 '(' use_initializer optional_make_struct_dim_decl . ')'

    ')'  shift, and go to state 1415


State 1389

  290 expr_type_info: "typeinfo" name_in_namespace '<' "name" c_or_s "name" '>' '(' expr . ')'
  339 expr_method_call: expr . "->" "name" '(' ')'
  340                 | expr . "->" "name" '(' expr_list ')'
  350 expr_field: expr . '.' "name"
  351           | expr . '.' '.' "name"
  352           | expr . '.' "name" '(' ')'
  353           | expr . '.' "name" '(' expr_list ')'
  354           | expr . '.' basic_type_declaration '(' ')'
  355           | expr . '.' basic_type_declaration '(' expr_list ')'
  358           | expr . '.' $@17 error $@18
  380 expr: expr . "<<" expr
  381     | expr . ">>" expr
  382     | expr . "<<<" expr
  383     | expr . ">>>" expr
  384     | expr . '+' expr
  385     | expr . '-' expr
  386     | expr . '*' expr
  387     | expr . '/' expr
  388     | expr . '%' expr
  389     | expr . '<' expr
  390     | expr . '>' expr
  391     | expr . "==" expr
  392     | expr . "!=" expr
  393     | expr . "<=" expr
  394     | expr . ">=" expr
  395     | expr . '&' expr
  396     | expr . '|' expr
  397     | expr . '^' expr
  398     | expr . "&&" expr
  399     | expr . "||" expr
  400     | expr . "^^" expr
  401     | expr . ".." expr
  404     | expr . "++"
  405     | expr . "--"
  407     | expr . '[' expr ']'
  408     | expr . '.' '[' expr ']'
  409     | expr . "?[" expr ']'
  410     | expr . '.' "?[" expr ']'
  411     | expr . "?." "name"
  412     | expr . '.' "?." "name"
  421     | expr . "??" expr
  422     | expr . '?' expr ':' expr
  425     | expr . "is" "type" '<' $@19 type_declaration_no_options '>' $@20
  426     | expr . "is" basic_type_declaration
  427     | expr . "is" "name"
  428     | expr . "as" "name"
  431     | expr . "as" "type" '<' $@21 type_declaration '>' $@22
  432     | expr . "as" basic_type_declaration
  433     | expr . '?' "as" "name"
  436     | expr . '?' "as" "type" '<' $@23 type_declaration '>' $@24
  437     | expr . '?' "as" basic_type_declaration
  445     | expr . "<|" expr
  446     | expr . "|>" expr
  447     | expr . "|>" basic_type_declaration
  458 expr_mtag: expr . '.' "$f" '(' expr ')'
  459          | expr . "?." "$f" '(' expr ')'
  460          | expr . '.' '.' "$f" '(' expr ')'
  461          | expr . '.' "?." "$f" '(' expr ')'
  462          | expr . "as" "$f" '(' expr ')'
  463          | expr . '?' "as" "$f" '(' expr ')'
  464          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 637
    "as"   shift, and go to state 638
    "<<"   shift, and go to state 639
    ">>"   shift, and go to state 640
    "++"   shift, and go to state 641
    "--"   shift, and go to state 642
    "<="   shift, and go to state 643
    ">="   shift, and go to state 644
    "=="   shift, and go to state 645
    "!="   shift, and go to state 646
    "->"   shift, and go to state 647
    "??"   shift, and go to state 648
    "?."   shift, and go to state 649
    "?["   shift, and go to state 650
    "<|"   shift, and go to state 651
    "|>"   shift, and go to state 652
    "<<<"  shift, and go to state 653
    ">>>"  shift, and go to state 654
    "&&"   shift, and go to state 655
    "||"   shift, and go to state 656
    "^^"   shift, and go to state 657
    ".."   shift, and go to state 658
    '?'    shift, and go to state 659
    '|'    shift, and go to state 660
    '^'    shift, and go to state 661
    '&'    shift, and go to state 662
    '<'    shift, and go to state 663
    '>'    shift, and go to state 664
    '-'    shift, and go to state 665
    '+'    shift, and go to state 666
    '*'    shift, and go to state 667
    '/'    shift, and go to state 668
    '%'    shift, and go to state 669
    '.'    shift, and go to state 670
    '['    shift, and go to state 671
    ')'    shift, and go to state 1416


State 1390

  754 make_dim_decl: "array" "struct" '<' $@82 type_declaration_no_options '>' $@83 '(' use_initializer . optional_make_struct_dim_decl ')'

    "$f"    shift, and go to state 824
    "name"  shift, and go to state 1017
    '('     shift, and go to state 1383

    $default  reduce using rule 730 (optional_make_struct_dim_decl)

    make_struct_fields             go to state 1384
    make_struct_dim_list           go to state 1385
    make_struct_dim_decl           go to state 1386
    optional_make_struct_dim_decl  go to state 1417


State 1391

  757 make_dim_decl: "array" "tuple" '<' $@84 type_declaration_no_options '>' $@85 '(' use_initializer . optional_make_struct_dim_decl ')'

    "$f"    shift, and go to state 824
    "name"  shift, and go to state 1017
    '('     shift, and go to state 1383

    $default  reduce using rule 730 (optional_make_struct_dim_decl)

    make_struct_fields             go to state 1384
    make_struct_dim_list           go to state 1385
    make_struct_dim_decl           go to state 1386
    optional_make_struct_dim_decl  go to state 1418


State 1392

  760 make_dim_decl: "array" "variant" '<' $@86 type_declaration_no_options '>' $@87 '(' make_variant_dim . ')'

    ')'  shift, and go to state 1419


State 1393

  764 make_dim_decl: "array" '<' $@88 type_declaration_no_options '>' $@89 '(' optional_expr_list ')' .

    $default  reduce using rule 764 (make_dim_decl)


State 1394

  774 make_table_decl: "table" '<' type_declaration_no_options c_or_s type_declaration_no_options '>' '(' optional_expr_map_tuple_list ')' .

    $default  reduce using rule 774 (make_table_decl)


State 1395

  768 make_dim_decl: "fixed_array" '<' $@90 type_declaration_no_options '>' $@91 '(' expr_list optional_comma . ')'

    ')'  shift, and go to state 1420


State 1396

  750 make_tuple_call: "tuple" '<' $@80 type_declaration_no_options '>' $@81 '(' use_initializer optional_make_struct_dim_decl . ')'

    ')'  shift, and go to state 1421


State 1397

  741 make_struct_decl: "variant" '<' $@76 type_declaration_no_options '>' $@77 '(' make_variant_dim ')' .

    $default  reduce using rule 741 (make_struct_decl)


State 1398

  776 array_comprehension_where: "end of expression" "where" . expr

    "struct"                          shift, and go to state 402
    "class"                           shift, and go to state 403
    "true"                            shift, and go to state 404
    "false"                           shift, and go to state 405
    "new"                             shift, and go to state 406
    "typeinfo"                        shift, and go to state 407
    "type"                            shift, and go to state 408
    "array"                           shift, and go to state 409
    "null"                            shift, and go to state 410
    "table"                           shift, and go to state 411
    "deref"                           shift, and go to state 412
    "cast"                            shift, and go to state 413
    "upcast"                          shift, and go to state 414
    "addr"                            shift, and go to state 415
    "reinterpret"                     shift, and go to state 416
    "unsafe"                          shift, and go to state 417
    "fixed_array"                     shift, and go to state 418
    "default"                         shift, and go to state 419
    "bool"                            shift, and go to state 222
    "void"                            shift, and go to state 223
    "string"                          shift, and go to state 224
    "int"                             shift, and go to state 226
    "int2"                            shift, and go to state 227
    "int3"                            shift, and go to state 228
    "int4"                            shift, and go to state 229
    "uint"                            shift, and go to state 230
    "bitfield"                        shift, and go to state 420
    "uint2"                           shift, and go to state 232
    "uint3"                           shift, and go to state 233
    "uint4"                           shift, and go to state 234
    "float"                           shift, and go to state 235
    "float2"                          shift, and go to state 236
    "float3"                          shift, and go to state 237
    "float4"                          shift, and go to state 238
    "range"                           shift, and go to state 239
    "urange"                          shift, and go to state 240
    "range64"                         shift, and go to state 241
    "urange64"                        shift, and go to state 242
    "int64"                           shift, and go to state 244
    "uint64"                          shift, and go to state 245
    "double"                          shift, and go to state 246
    "int8"                            shift, and go to state 249
    "uint8"                           shift, and go to state 250
    "int16"                           shift, and go to state 251
    "uint16"                          shift, and go to state 252
    "tuple"                           shift, and go to state 421
    "variant"                         shift, and go to state 422
    "generator"                       shift, and go to state 423
    "++"                              shift, and go to state 424
    "--"                              shift, and go to state 425
    "::"                              shift, and go to state 55
    "$$"                              shift, and go to state 426
    "$i"                              shift, and go to state 427
    "$v"                              shift, and go to state 428
    "$b"                              shift, and go to state 429
    "$a"                              shift, and go to state 430
    "$c"                              shift, and go to state 431
    "..."                             shift, and go to state 432
    "integer constant"                shift, and go to state 433
    "long integer constant"           shift, and go to state 434
    "unsigned integer constant"       shift, and go to state 435
    "unsigned long integer constant"  shift, and go to state 436
    "unsigned int8 constant"          shift, and go to state 437
    "floating point constant"         shift, and go to state 438
    "double constant"                 shift, and go to state 439
    "name"                            shift, and go to state 56
    "start of the string"             shift, and go to state 440
    "begin of code block"             shift, and go to state 441
    '-'                               shift, and go to state 442
    '+'                               shift, and go to state 443
    '*'                               shift, and go to state 444
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 445
    '!'                               shift, and go to state 446
    '['                               shift, and go to state 447
    '('                               shift, and go to state 448
    '$'                               shift, and go to state 449
    '@'                               shift, and go to state 450

    string_builder          go to state 451
    expr_reader             go to state 452
    expr_call_pipe          go to state 453
    name_in_namespace       go to state 454
    expr_new                go to state 455
    expr_cast               go to state 456
    expr_type_decl          go to state 457
    expr_type_info          go to state 458
    block_or_lambda         go to state 459
    expr_full_block         go to state 460
    expr_numeric_const      go to state 461
    expr_named_call         go to state 462
    expr_method_call        go to state 463
    func_addr_expr          go to state 464
    expr_field              go to state 465
    expr_call               go to state 466
    expr                    go to state 1422
    expr_mtag               go to state 468
    basic_type_declaration  go to state 469
    make_decl               go to state 470
    make_struct_decl        go to state 471
    make_tuple_call         go to state 472
    make_dim_decl           go to state 473
    make_table_decl         go to state 474
    array_comprehension     go to state 475


State 1399

  781 array_comprehension: "begin of code block" "for" variable_name_with_pos_list "in" expr_list "end of expression" make_map_tuple array_comprehension_where "end of code block" .

    $default  reduce using rule 781 (array_comprehension)


State 1400

  779 array_comprehension: '[' "for" variable_name_with_pos_list "in" expr_list "end of expression" expr array_comprehension_where ']' .

    $default  reduce using rule 779 (array_comprehension)


State 1401

  780 array_comprehension: '[' "iterator" "for" variable_name_with_pos_list "in" expr_list "end of expression" expr array_comprehension_where . ']'

    ']'  shift, and go to state 1423


State 1402

  349 func_addr_expr: '@' '@' '<' $@15 optional_function_argument_list optional_function_type '>' $@16 func_addr_name .

    $default  reduce using rule 349 (func_addr_expr)


State 1403

  722 make_struct_fields: make_struct_fields ',' "$f" '(' expr ')' ":=" . expr

    "struct"                          shift, and go to state 402
    "class"                           shift, and go to state 403
    "true"                            shift, and go to state 404
    "false"                           shift, and go to state 405
    "new"                             shift, and go to state 406
    "typeinfo"                        shift, and go to state 407
    "type"                            shift, and go to state 408
    "array"                           shift, and go to state 409
    "null"                            shift, and go to state 410
    "table"                           shift, and go to state 411
    "deref"                           shift, and go to state 412
    "cast"                            shift, and go to state 413
    "upcast"                          shift, and go to state 414
    "addr"                            shift, and go to state 415
    "reinterpret"                     shift, and go to state 416
    "unsafe"                          shift, and go to state 417
    "fixed_array"                     shift, and go to state 418
    "default"                         shift, and go to state 419
    "bool"                            shift, and go to state 222
    "void"                            shift, and go to state 223
    "string"                          shift, and go to state 224
    "int"                             shift, and go to state 226
    "int2"                            shift, and go to state 227
    "int3"                            shift, and go to state 228
    "int4"                            shift, and go to state 229
    "uint"                            shift, and go to state 230
    "bitfield"                        shift, and go to state 420
    "uint2"                           shift, and go to state 232
    "uint3"                           shift, and go to state 233
    "uint4"                           shift, and go to state 234
    "float"                           shift, and go to state 235
    "float2"                          shift, and go to state 236
    "float3"                          shift, and go to state 237
    "float4"                          shift, and go to state 238
    "range"                           shift, and go to state 239
    "urange"                          shift, and go to state 240
    "range64"                         shift, and go to state 241
    "urange64"                        shift, and go to state 242
    "int64"                           shift, and go to state 244
    "uint64"                          shift, and go to state 245
    "double"                          shift, and go to state 246
    "int8"                            shift, and go to state 249
    "uint8"                           shift, and go to state 250
    "int16"                           shift, and go to state 251
    "uint16"                          shift, and go to state 252
    "tuple"                           shift, and go to state 421
    "variant"                         shift, and go to state 422
    "generator"                       shift, and go to state 423
    "++"                              shift, and go to state 424
    "--"                              shift, and go to state 425
    "::"                              shift, and go to state 55
    "$$"                              shift, and go to state 426
    "$i"                              shift, and go to state 427
    "$v"                              shift, and go to state 428
    "$b"                              shift, and go to state 429
    "$a"                              shift, and go to state 430
    "$c"                              shift, and go to state 431
    "..."                             shift, and go to state 432
    "integer constant"                shift, and go to state 433
    "long integer constant"           shift, and go to state 434
    "unsigned integer constant"       shift, and go to state 435
    "unsigned long integer constant"  shift, and go to state 436
    "unsigned int8 constant"          shift, and go to state 437
    "floating point constant"         shift, and go to state 438
    "double constant"                 shift, and go to state 439
    "name"                            shift, and go to state 56
    "start of the string"             shift, and go to state 440
    "begin of code block"             shift, and go to state 441
    '-'                               shift, and go to state 442
    '+'                               shift, and go to state 443
    '*'                               shift, and go to state 444
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 445
    '!'                               shift, and go to state 446
    '['                               shift, and go to state 447
    '('                               shift, and go to state 448
    '$'                               shift, and go to state 449
    '@'                               shift, and go to state 450

    string_builder          go to state 451
    expr_reader             go to state 452
    expr_call_pipe          go to state 453
    name_in_namespace       go to state 454
    expr_new                go to state 455
    expr_cast               go to state 456
    expr_type_decl          go to state 457
    expr_type_info          go to state 458
    block_or_lambda         go to state 459
    expr_full_block         go to state 460
    expr_numeric_const      go to state 461
    expr_named_call         go to state 462
    expr_method_call        go to state 463
    func_addr_expr          go to state 464
    expr_field              go to state 465
    expr_call               go to state 466
    expr                    go to state 1424
    expr_mtag               go to state 468
    basic_type_declaration  go to state 469
    make_decl               go to state 470
    make_struct_decl        go to state 471
    make_tuple_call         go to state 472
    make_dim_decl           go to state 473
    make_table_decl         go to state 474
    array_comprehension     go to state 475


State 1404

  721 make_struct_fields: make_struct_fields ',' "$f" '(' expr ')' copy_or_move . expr

    "struct"                          shift, and go to state 402
    "class"                           shift, and go to state 403
    "true"                            shift, and go to state 404
    "false"                           shift, and go to state 405
    "new"                             shift, and go to state 406
    "typeinfo"                        shift, and go to state 407
    "type"                            shift, and go to state 408
    "array"                           shift, and go to state 409
    "null"                            shift, and go to state 410
    "table"                           shift, and go to state 411
    "deref"                           shift, and go to state 412
    "cast"                            shift, and go to state 413
    "upcast"                          shift, and go to state 414
    "addr"                            shift, and go to state 415
    "reinterpret"                     shift, and go to state 416
    "unsafe"                          shift, and go to state 417
    "fixed_array"                     shift, and go to state 418
    "default"                         shift, and go to state 419
    "bool"                            shift, and go to state 222
    "void"                            shift, and go to state 223
    "string"                          shift, and go to state 224
    "int"                             shift, and go to state 226
    "int2"                            shift, and go to state 227
    "int3"                            shift, and go to state 228
    "int4"                            shift, and go to state 229
    "uint"                            shift, and go to state 230
    "bitfield"                        shift, and go to state 420
    "uint2"                           shift, and go to state 232
    "uint3"                           shift, and go to state 233
    "uint4"                           shift, and go to state 234
    "float"                           shift, and go to state 235
    "float2"                          shift, and go to state 236
    "float3"                          shift, and go to state 237
    "float4"                          shift, and go to state 238
    "range"                           shift, and go to state 239
    "urange"                          shift, and go to state 240
    "range64"                         shift, and go to state 241
    "urange64"                        shift, and go to state 242
    "int64"                           shift, and go to state 244
    "uint64"                          shift, and go to state 245
    "double"                          shift, and go to state 246
    "int8"                            shift, and go to state 249
    "uint8"                           shift, and go to state 250
    "int16"                           shift, and go to state 251
    "uint16"                          shift, and go to state 252
    "tuple"                           shift, and go to state 421
    "variant"                         shift, and go to state 422
    "generator"                       shift, and go to state 423
    "++"                              shift, and go to state 424
    "--"                              shift, and go to state 425
    "::"                              shift, and go to state 55
    "$$"                              shift, and go to state 426
    "$i"                              shift, and go to state 427
    "$v"                              shift, and go to state 428
    "$b"                              shift, and go to state 429
    "$a"                              shift, and go to state 430
    "$c"                              shift, and go to state 431
    "..."                             shift, and go to state 432
    "integer constant"                shift, and go to state 433
    "long integer constant"           shift, and go to state 434
    "unsigned integer constant"       shift, and go to state 435
    "unsigned long integer constant"  shift, and go to state 436
    "unsigned int8 constant"          shift, and go to state 437
    "floating point constant"         shift, and go to state 438
    "double constant"                 shift, and go to state 439
    "name"                            shift, and go to state 56
    "start of the string"             shift, and go to state 440
    "begin of code block"             shift, and go to state 441
    '-'                               shift, and go to state 442
    '+'                               shift, and go to state 443
    '*'                               shift, and go to state 444
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 445
    '!'                               shift, and go to state 446
    '['                               shift, and go to state 447
    '('                               shift, and go to state 448
    '$'                               shift, and go to state 449
    '@'                               shift, and go to state 450

    string_builder          go to state 451
    expr_reader             go to state 452
    expr_call_pipe          go to state 453
    name_in_namespace       go to state 454
    expr_new                go to state 455
    expr_cast               go to state 456
    expr_type_decl          go to state 457
    expr_type_info          go to state 458
    block_or_lambda         go to state 459
    expr_full_block         go to state 460
    expr_numeric_const      go to state 461
    expr_named_call         go to state 462
    expr_method_call        go to state 463
    func_addr_expr          go to state 464
    expr_field              go to state 465
    expr_call               go to state 466
    expr                    go to state 1425
    expr_mtag               go to state 468
    basic_type_declaration  go to state 469
    make_decl               go to state 470
    make_struct_decl        go to state 471
    make_tuple_call         go to state 472
    make_dim_decl           go to state 473
    make_table_decl         go to state 474
    array_comprehension     go to state 475


State 1405

  436 expr: expr '?' "as" "type" '<' $@23 type_declaration '>' $@24 .

    $default  reduce using rule 436 (expr)


State 1406

   59 expression_else: elif_or_static_elif '(' expr ')' . expression_block expression_else

    "begin of code block"  shift, and go to state 323

    expression_block  go to state 1426


State 1407

  272 tuple_expansion_variable_declaration: '(' tuple_expansion ')' ':' type_declaration_no_options copy_or_move_or_clone expr . "end of expression"
  339 expr_method_call: expr . "->" "name" '(' ')'
  340                 | expr . "->" "name" '(' expr_list ')'
  350 expr_field: expr . '.' "name"
  351           | expr . '.' '.' "name"
  352           | expr . '.' "name" '(' ')'
  353           | expr . '.' "name" '(' expr_list ')'
  354           | expr . '.' basic_type_declaration '(' ')'
  355           | expr . '.' basic_type_declaration '(' expr_list ')'
  358           | expr . '.' $@17 error $@18
  380 expr: expr . "<<" expr
  381     | expr . ">>" expr
  382     | expr . "<<<" expr
  383     | expr . ">>>" expr
  384     | expr . '+' expr
  385     | expr . '-' expr
  386     | expr . '*' expr
  387     | expr . '/' expr
  388     | expr . '%' expr
  389     | expr . '<' expr
  390     | expr . '>' expr
  391     | expr . "==" expr
  392     | expr . "!=" expr
  393     | expr . "<=" expr
  394     | expr . ">=" expr
  395     | expr . '&' expr
  396     | expr . '|' expr
  397     | expr . '^' expr
  398     | expr . "&&" expr
  399     | expr . "||" expr
  400     | expr . "^^" expr
  401     | expr . ".." expr
  404     | expr . "++"
  405     | expr . "--"
  407     | expr . '[' expr ']'
  408     | expr . '.' '[' expr ']'
  409     | expr . "?[" expr ']'
  410     | expr . '.' "?[" expr ']'
  411     | expr . "?." "name"
  412     | expr . '.' "?." "name"
  421     | expr . "??" expr
  422     | expr . '?' expr ':' expr
  425     | expr . "is" "type" '<' $@19 type_declaration_no_options '>' $@20
  426     | expr . "is" basic_type_declaration
  427     | expr . "is" "name"
  428     | expr . "as" "name"
  431     | expr . "as" "type" '<' $@21 type_declaration '>' $@22
  432     | expr . "as" basic_type_declaration
  433     | expr . '?' "as" "name"
  436     | expr . '?' "as" "type" '<' $@23 type_declaration '>' $@24
  437     | expr . '?' "as" basic_type_declaration
  445     | expr . "<|" expr
  446     | expr . "|>" expr
  447     | expr . "|>" basic_type_declaration
  458 expr_mtag: expr . '.' "$f" '(' expr ')'
  459          | expr . "?." "$f" '(' expr ')'
  460          | expr . '.' '.' "$f" '(' expr ')'
  461          | expr . '.' "?." "$f" '(' expr ')'
  462          | expr . "as" "$f" '(' expr ')'
  463          | expr . '?' "as" "$f" '(' expr ')'
  464          | expr . "is" "$f" '(' expr ')'

    "is"                 shift, and go to state 637
    "as"                 shift, and go to state 638
    "<<"                 shift, and go to state 639
    ">>"                 shift, and go to state 640
    "++"                 shift, and go to state 641
    "--"                 shift, and go to state 642
    "<="                 shift, and go to state 643
    ">="                 shift, and go to state 644
    "=="                 shift, and go to state 645
    "!="                 shift, and go to state 646
    "->"                 shift, and go to state 647
    "??"                 shift, and go to state 648
    "?."                 shift, and go to state 649
    "?["                 shift, and go to state 650
    "<|"                 shift, and go to state 651
    "|>"                 shift, and go to state 652
    "<<<"                shift, and go to state 653
    ">>>"                shift, and go to state 654
    "&&"                 shift, and go to state 655
    "||"                 shift, and go to state 656
    "^^"                 shift, and go to state 657
    ".."                 shift, and go to state 658
    "end of expression"  shift, and go to state 1427
    '?'                  shift, and go to state 659
    '|'                  shift, and go to state 660
    '^'                  shift, and go to state 661
    '&'                  shift, and go to state 662
    '<'                  shift, and go to state 663
    '>'                  shift, and go to state 664
    '-'                  shift, and go to state 665
    '+'                  shift, and go to state 666
    '*'                  shift, and go to state 667
    '/'                  shift, and go to state 668
    '%'                  shift, and go to state 669
    '.'                  shift, and go to state 670
    '['                  shift, and go to state 671


State 1408

  273 tuple_expansion_variable_declaration: '(' tuple_expansion ')' optional_ref copy_or_move_or_clone expr "end of expression" .

    $default  reduce using rule 273 (tuple_expansion_variable_declaration)


State 1409

  483 struct_variable_declaration_list: struct_variable_declaration_list optional_annotation_list "def" optional_public_or_private_member_variable "abstract" optional_constant $@26 function_declaration_header "end of expression" .

    $default  reduce using rule 483 (struct_variable_declaration_list)


State 1410

  485 struct_variable_declaration_list: struct_variable_declaration_list optional_annotation_list "def" optional_public_or_private_member_variable optional_static_member_variable optional_override optional_constant $@27 function_declaration_header . expression_block

    "begin of code block"  shift, and go to state 323

    expression_block  go to state 1428


State 1411

  717 make_struct_fields: make_struct_fields . ',' "name" copy_or_move expr
  718                   | make_struct_fields . ',' "name" ":=" expr
  721                   | make_struct_fields . ',' "$f" '(' expr ')' copy_or_move expr
  722                   | make_struct_fields . ',' "$f" '(' expr ')' ":=" expr
  725 make_struct_dim_list: '(' make_struct_fields . ')'

    ','  shift, and go to state 1026
    ')'  shift, and go to state 1429


State 1412

  726 make_struct_dim_list: make_struct_dim_list ',' . '(' make_struct_fields ')'
  778 optional_comma: ',' .

    '('  shift, and go to state 1430

    $default  reduce using rule 778 (optional_comma)


State 1413

  728 make_struct_dim_decl: make_struct_dim_list optional_comma .

    $default  reduce using rule 728 (make_struct_dim_decl)


State 1414

  735 make_struct_decl: "struct" '<' $@72 type_declaration_no_options '>' $@73 '(' use_initializer optional_make_struct_dim_decl ')' .

    $default  reduce using rule 735 (make_struct_decl)


State 1415

  738 make_struct_decl: "class" '<' $@74 type_declaration_no_options '>' $@75 '(' use_initializer optional_make_struct_dim_decl ')' .

    $default  reduce using rule 738 (make_struct_decl)


State 1416

  290 expr_type_info: "typeinfo" name_in_namespace '<' "name" c_or_s "name" '>' '(' expr ')' .

    $default  reduce using rule 290 (expr_type_info)


State 1417

  754 make_dim_decl: "array" "struct" '<' $@82 type_declaration_no_options '>' $@83 '(' use_initializer optional_make_struct_dim_decl . ')'

    ')'  shift, and go to state 1431


State 1418

  757 make_dim_decl: "array" "tuple" '<' $@84 type_declaration_no_options '>' $@85 '(' use_initializer optional_make_struct_dim_decl . ')'

    ')'  shift, and go to state 1432


State 1419

  760 make_dim_decl: "array" "variant" '<' $@86 type_declaration_no_options '>' $@87 '(' make_variant_dim ')' .

    $default  reduce using rule 760 (make_dim_decl)


State 1420

  768 make_dim_decl: "fixed_array" '<' $@90 type_declaration_no_options '>' $@91 '(' expr_list optional_comma ')' .

    $default  reduce using rule 768 (make_dim_decl)


State 1421

  750 make_tuple_call: "tuple" '<' $@80 type_declaration_no_options '>' $@81 '(' use_initializer optional_make_struct_dim_decl ')' .

    $default  reduce using rule 750 (make_tuple_call)


State 1422

  339 expr_method_call: expr . "->" "name" '(' ')'
  340                 | expr . "->" "name" '(' expr_list ')'
  350 expr_field: expr . '.' "name"
  351           | expr . '.' '.' "name"
  352           | expr . '.' "name" '(' ')'
  353           | expr . '.' "name" '(' expr_list ')'
  354           | expr . '.' basic_type_declaration '(' ')'
  355           | expr . '.' basic_type_declaration '(' expr_list ')'
  358           | expr . '.' $@17 error $@18
  380 expr: expr . "<<" expr
  381     | expr . ">>" expr
  382     | expr . "<<<" expr
  383     | expr . ">>>" expr
  384     | expr . '+' expr
  385     | expr . '-' expr
  386     | expr . '*' expr
  387     | expr . '/' expr
  388     | expr . '%' expr
  389     | expr . '<' expr
  390     | expr . '>' expr
  391     | expr . "==" expr
  392     | expr . "!=" expr
  393     | expr . "<=" expr
  394     | expr . ">=" expr
  395     | expr . '&' expr
  396     | expr . '|' expr
  397     | expr . '^' expr
  398     | expr . "&&" expr
  399     | expr . "||" expr
  400     | expr . "^^" expr
  401     | expr . ".." expr
  404     | expr . "++"
  405     | expr . "--"
  407     | expr . '[' expr ']'
  408     | expr . '.' '[' expr ']'
  409     | expr . "?[" expr ']'
  410     | expr . '.' "?[" expr ']'
  411     | expr . "?." "name"
  412     | expr . '.' "?." "name"
  421     | expr . "??" expr
  422     | expr . '?' expr ':' expr
  425     | expr . "is" "type" '<' $@19 type_declaration_no_options '>' $@20
  426     | expr . "is" basic_type_declaration
  427     | expr . "is" "name"
  428     | expr . "as" "name"
  431     | expr . "as" "type" '<' $@21 type_declaration '>' $@22
  432     | expr . "as" basic_type_declaration
  433     | expr . '?' "as" "name"
  436     | expr . '?' "as" "type" '<' $@23 type_declaration '>' $@24
  437     | expr . '?' "as" basic_type_declaration
  445     | expr . "<|" expr
  446     | expr . "|>" expr
  447     | expr . "|>" basic_type_declaration
  458 expr_mtag: expr . '.' "$f" '(' expr ')'
  459          | expr . "?." "$f" '(' expr ')'
  460          | expr . '.' '.' "$f" '(' expr ')'
  461          | expr . '.' "?." "$f" '(' expr ')'
  462          | expr . "as" "$f" '(' expr ')'
  463          | expr . '?' "as" "$f" '(' expr ')'
  464          | expr . "is" "$f" '(' expr ')'
  776 array_comprehension_where: "end of expression" "where" expr .

    "is"   shift, and go to state 637
    "as"   shift, and go to state 638
    "<<"   shift, and go to state 639
    ">>"   shift, and go to state 640
    "++"   shift, and go to state 641
    "--"   shift, and go to state 642
    "<="   shift, and go to state 643
    ">="   shift, and go to state 644
    "=="   shift, and go to state 645
    "!="   shift, and go to state 646
    "->"   shift, and go to state 647
    "??"   shift, and go to state 648
    "?."   shift, and go to state 649
    "?["   shift, and go to state 650
    "<|"   shift, and go to state 651
    "|>"   shift, and go to state 652
    "<<<"  shift, and go to state 653
    ">>>"  shift, and go to state 654
    "&&"   shift, and go to state 655
    "||"   shift, and go to state 656
    "^^"   shift, and go to state 657
    ".."   shift, and go to state 658
    '?'    shift, and go to state 659
    '|'    shift, and go to state 660
    '^'    shift, and go to state 661
    '&'    shift, and go to state 662
    '<'    shift, and go to state 663
    '>'    shift, and go to state 664
    '-'    shift, and go to state 665
    '+'    shift, and go to state 666
    '*'    shift, and go to state 667
    '/'    shift, and go to state 668
    '%'    shift, and go to state 669
    '.'    shift, and go to state 670
    '['    shift, and go to state 671

    $default  reduce using rule 776 (array_comprehension_where)


State 1423

  780 array_comprehension: '[' "iterator" "for" variable_name_with_pos_list "in" expr_list "end of expression" expr array_comprehension_where ']' .

    $default  reduce using rule 780 (array_comprehension)


State 1424

  339 expr_method_call: expr . "->" "name" '(' ')'
  340                 | expr . "->" "name" '(' expr_list ')'
  350 expr_field: expr . '.' "name"
  351           | expr . '.' '.' "name"
  352           | expr . '.' "name" '(' ')'
  353           | expr . '.' "name" '(' expr_list ')'
  354           | expr . '.' basic_type_declaration '(' ')'
  355           | expr . '.' basic_type_declaration '(' expr_list ')'
  358           | expr . '.' $@17 error $@18
  380 expr: expr . "<<" expr
  381     | expr . ">>" expr
  382     | expr . "<<<" expr
  383     | expr . ">>>" expr
  384     | expr . '+' expr
  385     | expr . '-' expr
  386     | expr . '*' expr
  387     | expr . '/' expr
  388     | expr . '%' expr
  389     | expr . '<' expr
  390     | expr . '>' expr
  391     | expr . "==" expr
  392     | expr . "!=" expr
  393     | expr . "<=" expr
  394     | expr . ">=" expr
  395     | expr . '&' expr
  396     | expr . '|' expr
  397     | expr . '^' expr
  398     | expr . "&&" expr
  399     | expr . "||" expr
  400     | expr . "^^" expr
  401     | expr . ".." expr
  404     | expr . "++"
  405     | expr . "--"
  407     | expr . '[' expr ']'
  408     | expr . '.' '[' expr ']'
  409     | expr . "?[" expr ']'
  410     | expr . '.' "?[" expr ']'
  411     | expr . "?." "name"
  412     | expr . '.' "?." "name"
  421     | expr . "??" expr
  422     | expr . '?' expr ':' expr
  425     | expr . "is" "type" '<' $@19 type_declaration_no_options '>' $@20
  426     | expr . "is" basic_type_declaration
  427     | expr . "is" "name"
  428     | expr . "as" "name"
  431     | expr . "as" "type" '<' $@21 type_declaration '>' $@22
  432     | expr . "as" basic_type_declaration
  433     | expr . '?' "as" "name"
  436     | expr . '?' "as" "type" '<' $@23 type_declaration '>' $@24
  437     | expr . '?' "as" basic_type_declaration
  445     | expr . "<|" expr
  446     | expr . "|>" expr
  447     | expr . "|>" basic_type_declaration
  458 expr_mtag: expr . '.' "$f" '(' expr ')'
  459          | expr . "?." "$f" '(' expr ')'
  460          | expr . '.' '.' "$f" '(' expr ')'
  461          | expr . '.' "?." "$f" '(' expr ')'
  462          | expr . "as" "$f" '(' expr ')'
  463          | expr . '?' "as" "$f" '(' expr ')'
  464          | expr . "is" "$f" '(' expr ')'
  722 make_struct_fields: make_struct_fields ',' "$f" '(' expr ')' ":=" expr .

    "is"   shift, and go to state 637
    "as"   shift, and go to state 638
    "<<"   shift, and go to state 639
    ">>"   shift, and go to state 640
    "++"   shift, and go to state 641
    "--"   shift, and go to state 642
    "<="   shift, and go to state 643
    ">="   shift, and go to state 644
    "=="   shift, and go to state 645
    "!="   shift, and go to state 646
    "->"   shift, and go to state 647
    "??"   shift, and go to state 648
    "?."   shift, and go to state 649
    "?["   shift, and go to state 650
    "<|"   shift, and go to state 651
    "|>"   shift, and go to state 652
    "<<<"  shift, and go to state 653
    ">>>"  shift, and go to state 654
    "&&"   shift, and go to state 655
    "||"   shift, and go to state 656
    "^^"   shift, and go to state 657
    ".."   shift, and go to state 658
    '?'    shift, and go to state 659
    '|'    shift, and go to state 660
    '^'    shift, and go to state 661
    '&'    shift, and go to state 662
    '<'    shift, and go to state 663
    '>'    shift, and go to state 664
    '-'    shift, and go to state 665
    '+'    shift, and go to state 666
    '*'    shift, and go to state 667
    '/'    shift, and go to state 668
    '%'    shift, and go to state 669
    '.'    shift, and go to state 670
    '['    shift, and go to state 671

    $default  reduce using rule 722 (make_struct_fields)


State 1425

  339 expr_method_call: expr . "->" "name" '(' ')'
  340                 | expr . "->" "name" '(' expr_list ')'
  350 expr_field: expr . '.' "name"
  351           | expr . '.' '.' "name"
  352           | expr . '.' "name" '(' ')'
  353           | expr . '.' "name" '(' expr_list ')'
  354           | expr . '.' basic_type_declaration '(' ')'
  355           | expr . '.' basic_type_declaration '(' expr_list ')'
  358           | expr . '.' $@17 error $@18
  380 expr: expr . "<<" expr
  381     | expr . ">>" expr
  382     | expr . "<<<" expr
  383     | expr . ">>>" expr
  384     | expr . '+' expr
  385     | expr . '-' expr
  386     | expr . '*' expr
  387     | expr . '/' expr
  388     | expr . '%' expr
  389     | expr . '<' expr
  390     | expr . '>' expr
  391     | expr . "==" expr
  392     | expr . "!=" expr
  393     | expr . "<=" expr
  394     | expr . ">=" expr
  395     | expr . '&' expr
  396     | expr . '|' expr
  397     | expr . '^' expr
  398     | expr . "&&" expr
  399     | expr . "||" expr
  400     | expr . "^^" expr
  401     | expr . ".." expr
  404     | expr . "++"
  405     | expr . "--"
  407     | expr . '[' expr ']'
  408     | expr . '.' '[' expr ']'
  409     | expr . "?[" expr ']'
  410     | expr . '.' "?[" expr ']'
  411     | expr . "?." "name"
  412     | expr . '.' "?." "name"
  421     | expr . "??" expr
  422     | expr . '?' expr ':' expr
  425     | expr . "is" "type" '<' $@19 type_declaration_no_options '>' $@20
  426     | expr . "is" basic_type_declaration
  427     | expr . "is" "name"
  428     | expr . "as" "name"
  431     | expr . "as" "type" '<' $@21 type_declaration '>' $@22
  432     | expr . "as" basic_type_declaration
  433     | expr . '?' "as" "name"
  436     | expr . '?' "as" "type" '<' $@23 type_declaration '>' $@24
  437     | expr . '?' "as" basic_type_declaration
  445     | expr . "<|" expr
  446     | expr . "|>" expr
  447     | expr . "|>" basic_type_declaration
  458 expr_mtag: expr . '.' "$f" '(' expr ')'
  459          | expr . "?." "$f" '(' expr ')'
  460          | expr . '.' '.' "$f" '(' expr ')'
  461          | expr . '.' "?." "$f" '(' expr ')'
  462          | expr . "as" "$f" '(' expr ')'
  463          | expr . '?' "as" "$f" '(' expr ')'
  464          | expr . "is" "$f" '(' expr ')'
  721 make_struct_fields: make_struct_fields ',' "$f" '(' expr ')' copy_or_move expr .

    "is"   shift, and go to state 637
    "as"   shift, and go to state 638
    "<<"   shift, and go to state 639
    ">>"   shift, and go to state 640
    "++"   shift, and go to state 641
    "--"   shift, and go to state 642
    "<="   shift, and go to state 643
    ">="   shift, and go to state 644
    "=="   shift, and go to state 645
    "!="   shift, and go to state 646
    "->"   shift, and go to state 647
    "??"   shift, and go to state 648
    "?."   shift, and go to state 649
    "?["   shift, and go to state 650
    "<|"   shift, and go to state 651
    "|>"   shift, and go to state 652
    "<<<"  shift, and go to state 653
    ">>>"  shift, and go to state 654
    "&&"   shift, and go to state 655
    "||"   shift, and go to state 656
    "^^"   shift, and go to state 657
    ".."   shift, and go to state 658
    '?'    shift, and go to state 659
    '|'    shift, and go to state 660
    '^'    shift, and go to state 661
    '&'    shift, and go to state 662
    '<'    shift, and go to state 663
    '>'    shift, and go to state 664
    '-'    shift, and go to state 665
    '+'    shift, and go to state 666
    '*'    shift, and go to state 667
    '/'    shift, and go to state 668
    '%'    shift, and go to state 669
    '.'    shift, and go to state 670
    '['    shift, and go to state 671

    $default  reduce using rule 721 (make_struct_fields)


State 1426

   59 expression_else: elif_or_static_elif '(' expr ')' expression_block . expression_else

    "else"         shift, and go to state 1267
    "elif"         shift, and go to state 1268
    "static_elif"  shift, and go to state 1269

    $default  reduce using rule 57 (expression_else)

    elif_or_static_elif  go to state 1270
    expression_else      go to state 1433


State 1427

  272 tuple_expansion_variable_declaration: '(' tuple_expansion ')' ':' type_declaration_no_options copy_or_move_or_clone expr "end of expression" .

    $default  reduce using rule 272 (tuple_expansion_variable_declaration)


State 1428

  485 struct_variable_declaration_list: struct_variable_declaration_list optional_annotation_list "def" optional_public_or_private_member_variable optional_static_member_variable optional_override optional_constant $@27 function_declaration_header expression_block .

    $default  reduce using rule 485 (struct_variable_declaration_list)


State 1429

  725 make_struct_dim_list: '(' make_struct_fields ')' .

    $default  reduce using rule 725 (make_struct_dim_list)


State 1430

  726 make_struct_dim_list: make_struct_dim_list ',' '(' . make_struct_fields ')'

    "$f"    shift, and go to state 824
    "name"  shift, and go to state 1017

    make_struct_fields  go to state 1434


State 1431

  754 make_dim_decl: "array" "struct" '<' $@82 type_declaration_no_options '>' $@83 '(' use_initializer optional_make_struct_dim_decl ')' .

    $default  reduce using rule 754 (make_dim_decl)


State 1432

  757 make_dim_decl: "array" "tuple" '<' $@84 type_declaration_no_options '>' $@85 '(' use_initializer optional_make_struct_dim_decl ')' .

    $default  reduce using rule 757 (make_dim_decl)


State 1433

   59 expression_else: elif_or_static_elif '(' expr ')' expression_block expression_else .

    $default  reduce using rule 59 (expression_else)


State 1434

  717 make_struct_fields: make_struct_fields . ',' "name" copy_or_move expr
  718                   | make_struct_fields . ',' "name" ":=" expr
  721                   | make_struct_fields . ',' "$f" '(' expr ')' copy_or_move expr
  722                   | make_struct_fields . ',' "$f" '(' expr ')' ":=" expr
  726 make_struct_dim_list: make_struct_dim_list ',' '(' make_struct_fields . ')'

    ','  shift, and go to state 1026
    ')'  shift, and go to state 1435


State 1435

  726 make_struct_dim_list: make_struct_dim_list ',' '(' make_struct_fields ')' .

    $default  reduce using rule 726 (make_struct_dim_list)
