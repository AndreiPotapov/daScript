Terminals unused in grammar

    "lexer error"
    "end of failed eader macro"
    ";}}"
    ";}]"
    ";]]"
    ",]]"
    ",}]"
    LLPIPE


State 56 conflicts: 1 shift/reduce
State 459 conflicts: 1 shift/reduce
State 464 conflicts: 1 shift/reduce
State 471 conflicts: 3 shift/reduce
State 590 conflicts: 1 shift/reduce
State 641 conflicts: 1 shift/reduce
State 813 conflicts: 2 shift/reduce
State 883 conflicts: 1 shift/reduce


Grammar

    0 $accept: program $end

    1 program: %empty
    2        | program module_declaration
    3        | program structure_declaration
    4        | program enum_declaration
    5        | program global_let
    6        | program global_function_declaration
    7        | program expect_declaration
    8        | program require_declaration
    9        | program options_declaration
   10        | program alias_declaration
   11        | program variant_alias_declaration
   12        | program tuple_alias_declaration
   13        | program bitfield_alias_declaration
   14        | program top_level_reader_macro
   15        | program "end of expression"

   16 top_level_reader_macro: expr_reader "end of expression"

   17 optional_public_or_private_module: %empty
   18                                  | "public"
   19                                  | "private"

   20 module_name: '$'
   21            | "name"

   22 module_declaration: "module" module_name optional_shared optional_public_or_private_module

   23 character_sequence: STRING_CHARACTER
   24                   | STRING_CHARACTER_ESC
   25                   | character_sequence STRING_CHARACTER
   26                   | character_sequence STRING_CHARACTER_ESC

   27 string_constant: "start of the string" character_sequence "end of the string"

   28 string_builder_body: %empty
   29                    | string_builder_body character_sequence
   30                    | string_builder_body "{" expr "}"

   31 string_builder: "start of the string" string_builder_body "end of the string"

   32 reader_character_sequence: STRING_CHARACTER
   33                          | reader_character_sequence STRING_CHARACTER

   34 $@1: %empty

   35 expr_reader: '%' name_in_namespace $@1 reader_character_sequence

   36 options_declaration: "options" annotation_argument_list

   37 require_declaration: "require" require_module

   38 require_module_name: "name"
   39                    | '%' require_module_name
   40                    | require_module_name '.' "name"
   41                    | require_module_name '/' "name"

   42 require_module: require_module_name is_public_module
   43               | require_module_name "as" "name" is_public_module

   44 is_public_module: %empty
   45                 | "public"

   46 expect_declaration: "expect" expect_list

   47 expect_list: expect_error
   48            | expect_list ',' expect_error

   49 expect_error: "integer constant"
   50             | "integer constant" ':' "integer constant"

   51 expression_label: "label" "integer constant" ':'

   52 expression_goto: "goto" "label" "integer constant"
   53                | "goto" expr

   54 elif_or_static_elif: "elif"
   55                    | "static_elif"

   56 expression_else: %empty
   57                | "else" expression_block
   58                | elif_or_static_elif '(' expr ')' expression_block expression_else

   59 if_or_static_if: "if"
   60                | "static_if"

   61 expression_else_one_liner: %empty
   62                          | "else" expression_if_one_liner

   63 expression_if_one_liner: expr
   64                        | expression_return
   65                        | expression_yield_no_pipe
   66                        | expression_break
   67                        | expression_continue

   68 expression_if_then_else: if_or_static_if '(' expr ')' expression_block expression_else
   69                        | expression_if_one_liner "if" '(' expr ')' expression_else_one_liner "end of expression"

   70 expression_for_loop: "for" '(' variable_name_with_pos_list "in" expr_list ')' expression_block

   71 expression_unsafe: "unsafe" expression_block

   72 expression_while_loop: "while" expr expression_block

   73 expression_with: "with" expr expression_block

   74 expression_with_alias: "assume" "name" '=' expr

   75 annotation_argument_value: string_constant
   76                          | "name"
   77                          | "integer constant"
   78                          | "floating point constant"
   79                          | "true"
   80                          | "false"

   81 annotation_argument_value_list: annotation_argument_value
   82                               | annotation_argument_value_list ',' annotation_argument_value

   83 annotation_argument_name: "name"
   84                         | "type"
   85                         | "in"

   86 annotation_argument: annotation_argument_name '=' string_constant
   87                    | annotation_argument_name '=' "name"
   88                    | annotation_argument_name '=' "integer constant"
   89                    | annotation_argument_name '=' "floating point constant"
   90                    | annotation_argument_name '=' "true"
   91                    | annotation_argument_name '=' "false"
   92                    | annotation_argument_name
   93                    | annotation_argument_name '=' '(' annotation_argument_value_list ')'

   94 annotation_argument_list: annotation_argument
   95                         | annotation_argument_list ',' annotation_argument

   96 metadata_argument_list: '@' annotation_argument
   97                       | metadata_argument_list '@' annotation_argument

   98 annotation_declaration_name: name_in_namespace
   99                            | "require"
  100                            | "private"

  101 annotation_declaration_basic: annotation_declaration_name
  102                             | annotation_declaration_name '(' annotation_argument_list ')'

  103 annotation_declaration: annotation_declaration_basic
  104                       | '!' annotation_declaration
  105                       | annotation_declaration "&&" annotation_declaration
  106                       | annotation_declaration "||" annotation_declaration
  107                       | annotation_declaration "^^" annotation_declaration
  108                       | '(' annotation_declaration ')'
  109                       | "|>" annotation_declaration

  110 annotation_list: annotation_declaration
  111                | annotation_list ',' annotation_declaration

  112 optional_annotation_list: %empty
  113                         | '[' annotation_list ']'

  114 optional_function_argument_list: %empty
  115                                | '(' ')'
  116                                | '(' function_argument_list ')'

  117 optional_function_type: %empty
  118                       | ':' type_declaration

  119 function_name: "name"
  120              | "operator" '!'
  121              | "operator" '~'
  122              | "operator" "+="
  123              | "operator" "-="
  124              | "operator" "*="
  125              | "operator" "/="
  126              | "operator" "%="
  127              | "operator" "&="
  128              | "operator" "|="
  129              | "operator" "^="
  130              | "operator" "&&="
  131              | "operator" "||="
  132              | "operator" "^^="
  133              | "operator" "&&"
  134              | "operator" "||"
  135              | "operator" "^^"
  136              | "operator" '+'
  137              | "operator" '-'
  138              | "operator" '*'
  139              | "operator" '/'
  140              | "operator" '%'
  141              | "operator" '<'
  142              | "operator" '>'
  143              | "operator" ".."
  144              | "operator" "=="
  145              | "operator" "!="
  146              | "operator" "<="
  147              | "operator" ">="
  148              | "operator" '&'
  149              | "operator" '|'
  150              | "operator" '^'
  151              | "++" "operator"
  152              | "--" "operator"
  153              | "operator" "++"
  154              | "operator" "--"
  155              | "operator" "<<"
  156              | "operator" ">>"
  157              | "operator" "<<="
  158              | "operator" ">>="
  159              | "operator" "<<<"
  160              | "operator" ">>>"
  161              | "operator" "<<<="
  162              | "operator" ">>>="
  163              | "operator" '[' ']'
  164              | "operator" "?[" ']'
  165              | "operator" '.'
  166              | "operator" "?."
  167              | "operator" '.' "name"
  168              | "operator" '.' "name" ":="
  169              | "operator" "?." "name"
  170              | "operator" ":="
  171              | "operator" "delete"
  172              | "operator" "??"
  173              | "operator" "is"
  174              | "operator" "as"
  175              | "operator" "is" "name"
  176              | "operator" "as" "name"
  177              | "operator" '?' "as"
  178              | "operator" '?' "as" "name"
  179              | "bool"
  180              | "string"
  181              | "int"
  182              | "int2"
  183              | "int3"
  184              | "int4"
  185              | "uint"
  186              | "uint2"
  187              | "uint3"
  188              | "uint4"
  189              | "float"
  190              | "float2"
  191              | "float3"
  192              | "float4"
  193              | "range"
  194              | "urange"
  195              | "range64"
  196              | "urange64"
  197              | "int64"
  198              | "uint64"
  199              | "double"
  200              | "int8"
  201              | "uint8"
  202              | "int16"
  203              | "uint16"

  204 global_function_declaration: optional_annotation_list "def" function_declaration

  205 optional_public_or_private_function: %empty
  206                                    | "private"
  207                                    | "public"

  208 function_declaration_header: function_name optional_function_argument_list optional_function_type

  209 $@2: %empty

  210 function_declaration: optional_public_or_private_function $@2 function_declaration_header expression_block

  211 expression_block: "begin of code block" expressions "end of code block"
  212                 | "begin of code block" expressions "end of code block" "finally" "begin of code block" expressions "end of code block"

  213 expr_call_pipe: expr_call expr_full_block_assumed_piped

  214 expression_any: "end of expression"
  215               | expr_assign "end of expression"
  216               | expression_delete "end of expression"
  217               | expression_let
  218               | expression_while_loop
  219               | expression_unsafe
  220               | expression_with
  221               | expression_with_alias
  222               | expression_for_loop
  223               | expression_break "end of expression"
  224               | expression_continue "end of expression"
  225               | expression_return "end of expression"
  226               | expression_yield
  227               | expression_if_then_else
  228               | expression_try_catch
  229               | expression_label "end of expression"
  230               | expression_goto "end of expression"
  231               | "pass" "end of expression"

  232 expressions: %empty
  233            | expressions expression_any
  234            | expressions error

  235 optional_expr_list: %empty
  236                   | expr_list

  237 type_declaration_no_options_list: type_declaration
  238                                 | type_declaration_no_options_list "end of expression" type_declaration

  239 name_in_namespace: "name"
  240                  | "name" "::" "name"
  241                  | "::" "name"

  242 expression_delete: "delete" expr
  243                  | "delete" "explicit" expr

  244 $@3: %empty

  245 $@4: %empty

  246 new_type_declaration: '<' $@3 type_declaration '>' $@4

  247 expr_new: "new" structure_type_declaration
  248         | "new" structure_type_declaration '(' optional_expr_list ')'
  249         | "new" new_type_declaration '(' use_initializer ')'
  250         | "new" new_type_declaration '(' use_initializer make_struct_single ')'
  251         | "new" make_decl

  252 expression_break: "break"

  253 expression_continue: "continue"

  254 expression_return: "return"
  255                  | "return" expr
  256                  | "return" "<-" expr

  257 expression_yield_no_pipe: "yield" expr
  258                         | "yield" "<-" expr

  259 expression_yield: expression_yield_no_pipe "end of expression"

  260 expression_try_catch: "try" expression_block "recover" expression_block

  261 kwd_let_var_or_nothing: "let"
  262                       | "var"
  263                       | %empty

  264 kwd_let: "let"
  265        | "var"

  266 optional_in_scope: "inscope"
  267                  | %empty

  268 tuple_expansion: "name"
  269                | tuple_expansion ',' "name"

  270 tuple_expansion_variable_declaration: '(' tuple_expansion ')' ':' type_declaration_no_options copy_or_move_or_clone expr "end of expression"
  271                                     | '(' tuple_expansion ')' optional_ref copy_or_move_or_clone expr "end of expression"

  272 expression_let: kwd_let optional_in_scope let_variable_declaration
  273               | kwd_let optional_in_scope tuple_expansion_variable_declaration

  274 $@5: %empty

  275 $@6: %empty

  276 expr_cast: "cast" '<' $@5 type_declaration_no_options '>' $@6 expr

  277 $@7: %empty

  278 $@8: %empty

  279 expr_cast: "upcast" '<' $@7 type_declaration_no_options '>' $@8 expr

  280 $@9: %empty

  281 $@10: %empty

  282 expr_cast: "reinterpret" '<' $@9 type_declaration_no_options '>' $@10 expr

  283 $@11: %empty

  284 $@12: %empty

  285 expr_type_decl: "type" '<' $@11 type_declaration '>' $@12

  286 expr_type_info: "typeinfo" '(' name_in_namespace expr ')'
  287               | "typeinfo" '(' name_in_namespace '<' "name" '>' expr ')'
  288               | "typeinfo" '(' name_in_namespace '<' "name" "end of expression" "name" '>' expr ')'

  289 expr_list: expr
  290          | expr_list ',' expr

  291 block_or_simple_block: expression_block
  292                      | "=>" expr
  293                      | "=>" "<-" expr

  294 block_or_lambda: '$'
  295                | '@'
  296                | '@' '@'

  297 capture_entry: '&' "name"
  298              | '=' "name"
  299              | "<-" "name"
  300              | ":=" "name"

  301 capture_list: capture_entry
  302             | capture_list ',' capture_entry

  303 optional_capture_list: %empty
  304                      | '[' '[' capture_list ']' ']'

  305 expr_full_block: block_or_lambda optional_annotation_list optional_capture_list optional_function_argument_list optional_function_type block_or_simple_block

  306 expr_full_block_assumed_piped: block_or_lambda optional_annotation_list optional_capture_list optional_function_argument_list optional_function_type expression_block
  307                              | "begin of code block" expressions "end of code block"

  308 expr_numeric_const: "integer constant"
  309                   | "unsigned integer constant"
  310                   | "long integer constant"
  311                   | "unsigned long integer constant"
  312                   | "unsigned int8 constant"
  313                   | "floating point constant"
  314                   | "double constant"

  315 expr_assign: expr
  316            | expr '=' expr
  317            | expr "<-" expr
  318            | expr ":=" expr
  319            | expr "&=" expr
  320            | expr "|=" expr
  321            | expr "^=" expr
  322            | expr "&&=" expr
  323            | expr "||=" expr
  324            | expr "^^=" expr
  325            | expr "+=" expr
  326            | expr "-=" expr
  327            | expr "*=" expr
  328            | expr "/=" expr
  329            | expr "%=" expr
  330            | expr "<<=" expr
  331            | expr ">>=" expr
  332            | expr "<<<=" expr
  333            | expr ">>>=" expr

  334 expr_named_call: name_in_namespace '(' '[' make_struct_fields ']' ')'
  335                | name_in_namespace '(' expr_list ',' '[' make_struct_fields ']' ')'

  336 expr_method_call: expr "->" "name" '(' ')'
  337                 | expr "->" "name" '(' expr_list ')'

  338 func_addr_name: name_in_namespace
  339               | "$i" '(' expr ')'

  340 func_addr_expr: '@' '@' func_addr_name

  341 $@13: %empty

  342 $@14: %empty

  343 func_addr_expr: '@' '@' '<' $@13 type_declaration_no_options '>' $@14 func_addr_name

  344 $@15: %empty

  345 $@16: %empty

  346 func_addr_expr: '@' '@' '<' $@15 optional_function_argument_list optional_function_type '>' $@16 func_addr_name

  347 expr_field: expr '.' "name"
  348           | expr '.' '.' "name"
  349           | expr '.' "name" '(' ')'
  350           | expr '.' "name" '(' expr_list ')'

  351 $@17: %empty

  352 $@18: %empty

  353 expr_field: expr '.' $@17 error $@18

  354 expr_call: name_in_namespace '(' ')'
  355          | name_in_namespace '(' make_struct_single ')'
  356          | name_in_namespace '(' expr_list ')'
  357          | basic_type_declaration '(' ')'
  358          | basic_type_declaration '(' expr_list ')'

  359 expr: "null"
  360     | name_in_namespace
  361     | expr_numeric_const
  362     | expr_reader
  363     | string_builder
  364     | make_decl
  365     | "true"
  366     | "false"
  367     | expr_field
  368     | expr_mtag
  369     | '!' expr
  370     | '~' expr
  371     | '+' expr
  372     | '-' expr
  373     | expr "<<" expr
  374     | expr ">>" expr
  375     | expr "<<<" expr
  376     | expr ">>>" expr
  377     | expr '+' expr
  378     | expr '-' expr
  379     | expr '*' expr
  380     | expr '/' expr
  381     | expr '%' expr
  382     | expr '<' expr
  383     | expr '>' expr
  384     | expr "==" expr
  385     | expr "!=" expr
  386     | expr "<=" expr
  387     | expr ">=" expr
  388     | expr '&' expr
  389     | expr '|' expr
  390     | expr '^' expr
  391     | expr "&&" expr
  392     | expr "||" expr
  393     | expr "^^" expr
  394     | expr ".." expr
  395     | "++" expr
  396     | "--" expr
  397     | expr "++"
  398     | expr "--"
  399     | '(' expr_list optional_comma ')'
  400     | expr '[' expr ']'
  401     | expr '.' '[' expr ']'
  402     | expr "?[" expr ']'
  403     | expr '.' "?[" expr ']'
  404     | expr "?." "name"
  405     | expr '.' "?." "name"
  406     | func_addr_expr
  407     | expr_call
  408     | '*' expr
  409     | "deref" '(' expr ')'
  410     | "addr" '(' expr ')'
  411     | "generator" '<' type_declaration_no_options '>' optional_capture_list '(' ')'
  412     | "generator" '<' type_declaration_no_options '>' optional_capture_list '(' expr ')'
  413     | expr "??" expr
  414     | expr '?' expr ':' expr

  415 $@19: %empty

  416 $@20: %empty

  417 expr: expr "is" "type" '<' $@19 type_declaration_no_options '>' $@20
  418     | expr "is" basic_type_declaration
  419     | expr "is" "name"
  420     | expr "as" "name"

  421 $@21: %empty

  422 $@22: %empty

  423 expr: expr "as" "type" '<' $@21 type_declaration '>' $@22
  424     | expr "as" basic_type_declaration
  425     | expr '?' "as" "name"

  426 $@23: %empty

  427 $@24: %empty

  428 expr: expr '?' "as" "type" '<' $@23 type_declaration '>' $@24
  429     | expr '?' "as" basic_type_declaration
  430     | expr_type_info
  431     | expr_type_decl
  432     | expr_cast
  433     | expr_new
  434     | expr_method_call
  435     | expr_named_call
  436     | expr_full_block
  437     | expr "<|" expr
  438     | expr "|>" expr
  439     | expr "|>" basic_type_declaration
  440     | expr_call_pipe

  441 expr_mtag: "$$" '(' expr ')'
  442          | "$i" '(' expr ')'
  443          | "$v" '(' expr ')'
  444          | "$b" '(' expr ')'
  445          | "$a" '(' expr ')'
  446          | "..."
  447          | "$c" '(' expr ')' '(' ')'
  448          | "$c" '(' expr ')' '(' expr_list ')'
  449          | expr '.' "$f" '(' expr ')'
  450          | expr "?." "$f" '(' expr ')'
  451          | expr '.' '.' "$f" '(' expr ')'
  452          | expr '.' "?." "$f" '(' expr ')'
  453          | expr "as" "$f" '(' expr ')'
  454          | expr '?' "as" "$f" '(' expr ')'
  455          | expr "is" "$f" '(' expr ')'
  456          | '@' '@' "$c" '(' expr ')'

  457 optional_field_annotation: %empty
  458                          | metadata_argument_list

  459 optional_override: %empty
  460                  | "override"
  461                  | "sealed"

  462 optional_constant: %empty
  463                  | "const"

  464 optional_public_or_private_member_variable: %empty
  465                                           | "public"
  466                                           | "private"

  467 optional_static_member_variable: %empty
  468                                | "static"

  469 structure_variable_declaration: optional_field_annotation optional_static_member_variable optional_override optional_public_or_private_member_variable variable_declaration

  470 struct_variable_declaration_list: %empty

  471 $@25: %empty

  472 struct_variable_declaration_list: struct_variable_declaration_list $@25 structure_variable_declaration "end of expression"

  473 $@26: %empty

  474 struct_variable_declaration_list: struct_variable_declaration_list optional_annotation_list "def" optional_public_or_private_member_variable "abstract" optional_constant $@26 function_declaration_header "end of expression"

  475 $@27: %empty

  476 struct_variable_declaration_list: struct_variable_declaration_list optional_annotation_list "def" optional_public_or_private_member_variable optional_static_member_variable optional_override optional_constant $@27 function_declaration_header expression_block

  477 function_argument_declaration: optional_field_annotation kwd_let_var_or_nothing variable_declaration
  478                              | "$a" '(' expr ')'

  479 function_argument_list: function_argument_declaration
  480                       | function_argument_list "end of expression" function_argument_declaration

  481 tuple_type: type_declaration
  482           | "name" ':' type_declaration

  483 tuple_type_list: tuple_type
  484                | tuple_type_list "end of expression" tuple_type

  485 tuple_alias_type_list: %empty
  486                      | tuple_alias_type_list "end of expression"
  487                      | tuple_alias_type_list tuple_type "end of expression"

  488 variant_type: "name" ':' type_declaration

  489 variant_type_list: variant_type
  490                  | variant_type_list "end of expression" variant_type

  491 variant_alias_type_list: %empty
  492                        | variant_alias_type_list "end of expression"
  493                        | variant_alias_type_list variant_type "end of expression"

  494 copy_or_move: '='
  495             | "<-"

  496 variable_declaration: variable_name_with_pos_list
  497                     | variable_name_with_pos_list '&'
  498                     | variable_name_with_pos_list ':' type_declaration
  499                     | variable_name_with_pos_list ':' type_declaration copy_or_move expr
  500                     | variable_name_with_pos_list copy_or_move expr

  501 copy_or_move_or_clone: '='
  502                      | "<-"
  503                      | ":="

  504 optional_ref: %empty
  505             | '&'

  506 let_variable_name_with_pos_list: "name"
  507                                | "$i" '(' expr ')'
  508                                | "name" "aka" "name"
  509                                | let_variable_name_with_pos_list ',' "name"
  510                                | let_variable_name_with_pos_list ',' "name" "aka" "name"

  511 let_variable_declaration: let_variable_name_with_pos_list ':' type_declaration_no_options "end of expression"
  512                         | let_variable_name_with_pos_list ':' type_declaration_no_options copy_or_move_or_clone expr "end of expression"
  513                         | let_variable_name_with_pos_list optional_ref copy_or_move_or_clone expr "end of expression"

  514 global_variable_declaration_list: %empty

  515 $@28: %empty

  516 global_variable_declaration_list: global_variable_declaration_list $@28 optional_field_annotation let_variable_declaration

  517 optional_shared: %empty
  518                | "shared"

  519 optional_public_or_private_variable: %empty
  520                                    | "private"
  521                                    | "public"

  522 global_let: kwd_let optional_shared optional_public_or_private_variable "begin of code block" global_variable_declaration_list "end of code block"

  523 $@29: %empty

  524 global_let: kwd_let optional_shared optional_public_or_private_variable $@29 optional_field_annotation let_variable_declaration

  525 enum_expression: "name"
  526                | "name" '=' expr

  527 enum_list: %empty
  528          | enum_expression
  529          | enum_list ',' enum_expression

  530 optional_public_or_private_alias: %empty
  531                                 | "private"
  532                                 | "public"

  533 $@30: %empty

  534 single_alias: optional_public_or_private_alias "name" $@30 '=' type_declaration

  535 alias_declaration: "typedef" single_alias "end of expression"

  536 optional_public_or_private_enum: %empty
  537                                | "private"
  538                                | "public"

  539 enum_name: "name"

  540 optional_enum_basic_type_declaration: %empty
  541                                     | ':' enum_basic_type_declaration

  542 $@31: %empty

  543 $@32: %empty

  544 enum_declaration: optional_annotation_list "enum" optional_public_or_private_enum enum_name optional_enum_basic_type_declaration "begin of code block" $@31 enum_list optional_comma $@32 "end of code block"

  545 optional_structure_parent: %empty
  546                          | ':' name_in_namespace

  547 optional_sealed: %empty
  548                | "sealed"

  549 structure_name: optional_sealed "name" optional_structure_parent

  550 class_or_struct: "class"
  551                | "struct"

  552 optional_public_or_private_structure: %empty
  553                                     | "private"
  554                                     | "public"

  555 optional_struct_variable_declaration_list: %empty
  556                                          | "begin of code block" struct_variable_declaration_list "end of code block"

  557 $@33: %empty

  558 $@34: %empty

  559 structure_declaration: optional_annotation_list class_or_struct optional_public_or_private_structure $@33 structure_name $@34 optional_struct_variable_declaration_list

  560 variable_name_with_pos_list: "name"
  561                            | "$i" '(' expr ')'
  562                            | "name" "aka" "name"
  563                            | variable_name_with_pos_list ',' "name"
  564                            | variable_name_with_pos_list ',' "name" "aka" "name"

  565 basic_type_declaration: "bool"
  566                       | "string"
  567                       | "int"
  568                       | "int8"
  569                       | "int16"
  570                       | "int64"
  571                       | "int2"
  572                       | "int3"
  573                       | "int4"
  574                       | "uint"
  575                       | "uint8"
  576                       | "uint16"
  577                       | "uint64"
  578                       | "uint2"
  579                       | "uint3"
  580                       | "uint4"
  581                       | "float"
  582                       | "float2"
  583                       | "float3"
  584                       | "float4"
  585                       | "void"
  586                       | "range"
  587                       | "urange"
  588                       | "range64"
  589                       | "urange64"
  590                       | "double"
  591                       | "bitfield"

  592 enum_basic_type_declaration: "int"
  593                            | "int8"
  594                            | "int16"
  595                            | "uint"
  596                            | "uint8"
  597                            | "uint16"
  598                            | "int64"
  599                            | "uint64"

  600 structure_type_declaration: name_in_namespace

  601 auto_type_declaration: "auto"
  602                      | "auto" '(' "name" ')'
  603                      | "$t" '(' expr ')'

  604 bitfield_bits: "name"
  605              | bitfield_bits "end of expression" "name"

  606 bitfield_alias_bits: %empty
  607                    | "name"
  608                    | bitfield_alias_bits ',' "name"

  609 $@35: %empty

  610 $@36: %empty

  611 bitfield_type_declaration: "bitfield" '<' $@35 bitfield_bits '>' $@36

  612 table_type_pair: type_declaration
  613                | type_declaration "end of expression" type_declaration

  614 dim_list: '[' expr ']'
  615         | '[' ']'
  616         | dim_list '[' expr ']'
  617         | dim_list '[' ']'

  618 type_declaration_no_options: type_declaration_no_options_no_dim
  619                            | type_declaration_no_options_no_dim dim_list

  620 type_declaration_no_options_no_dim: basic_type_declaration
  621                                   | auto_type_declaration
  622                                   | bitfield_type_declaration
  623                                   | structure_type_declaration

  624 $@37: %empty

  625 $@38: %empty

  626 type_declaration_no_options_no_dim: "type" '<' $@37 type_declaration '>' $@38
  627                                   | "typedecl" '(' expr ')'
  628                                   | '$' name_in_namespace '(' optional_expr_list ')'

  629 $@39: %empty

  630 type_declaration_no_options_no_dim: '$' name_in_namespace '<' $@39 type_declaration_no_options_list '>' '(' optional_expr_list ')'
  631                                   | type_declaration_no_options_no_dim '-' '[' ']'
  632                                   | type_declaration_no_options_no_dim "explicit"
  633                                   | type_declaration_no_options_no_dim "const"
  634                                   | type_declaration_no_options_no_dim '-' "const"
  635                                   | type_declaration_no_options_no_dim '&'
  636                                   | type_declaration_no_options_no_dim '-' '&'
  637                                   | type_declaration_no_options_no_dim '#'
  638                                   | type_declaration_no_options_no_dim "implicit"
  639                                   | type_declaration_no_options_no_dim '-' '#'
  640                                   | type_declaration_no_options_no_dim "==" "const"
  641                                   | type_declaration_no_options_no_dim "==" '&'
  642                                   | type_declaration_no_options_no_dim '*'

  643 $@40: %empty

  644 $@41: %empty

  645 type_declaration_no_options_no_dim: "smart_ptr" '<' $@40 type_declaration '>' $@41
  646                                   | type_declaration_no_options_no_dim "??"

  647 $@42: %empty

  648 $@43: %empty

  649 type_declaration_no_options_no_dim: "array" '<' $@42 type_declaration '>' $@43

  650 $@44: %empty

  651 $@45: %empty

  652 type_declaration_no_options_no_dim: "table" '<' $@44 table_type_pair '>' $@45

  653 $@46: %empty

  654 $@47: %empty

  655 type_declaration_no_options_no_dim: "iterator" '<' $@46 type_declaration '>' $@47
  656                                   | "block"

  657 $@48: %empty

  658 $@49: %empty

  659 type_declaration_no_options_no_dim: "block" '<' $@48 type_declaration '>' $@49

  660 $@50: %empty

  661 $@51: %empty

  662 type_declaration_no_options_no_dim: "block" '<' $@50 optional_function_argument_list optional_function_type '>' $@51
  663                                   | "function"

  664 $@52: %empty

  665 $@53: %empty

  666 type_declaration_no_options_no_dim: "function" '<' $@52 type_declaration '>' $@53

  667 $@54: %empty

  668 $@55: %empty

  669 type_declaration_no_options_no_dim: "function" '<' $@54 optional_function_argument_list optional_function_type '>' $@55
  670                                   | "lambda"

  671 $@56: %empty

  672 $@57: %empty

  673 type_declaration_no_options_no_dim: "lambda" '<' $@56 type_declaration '>' $@57

  674 $@58: %empty

  675 $@59: %empty

  676 type_declaration_no_options_no_dim: "lambda" '<' $@58 optional_function_argument_list optional_function_type '>' $@59

  677 $@60: %empty

  678 $@61: %empty

  679 type_declaration_no_options_no_dim: "tuple" '<' $@60 tuple_type_list '>' $@61

  680 $@62: %empty

  681 $@63: %empty

  682 type_declaration_no_options_no_dim: "variant" '<' $@62 variant_type_list '>' $@63

  683 type_declaration: type_declaration_no_options
  684                 | type_declaration '|' type_declaration_no_options
  685                 | type_declaration '|' '#'

  686 $@64: %empty

  687 $@65: %empty

  688 $@66: %empty

  689 tuple_alias_declaration: "tuple" optional_public_or_private_alias "name" $@64 "begin of code block" $@65 tuple_alias_type_list $@66 "end of code block"

  690 $@67: %empty

  691 $@68: %empty

  692 $@69: %empty

  693 variant_alias_declaration: "variant" optional_public_or_private_alias "name" $@67 "begin of code block" $@68 variant_alias_type_list $@69 "end of code block"

  694 $@70: %empty

  695 $@71: %empty

  696 $@72: %empty

  697 bitfield_alias_declaration: "bitfield" optional_public_or_private_alias "name" $@70 "begin of code block" $@71 bitfield_alias_bits optional_comma $@72 "end of code block"

  698 make_decl: make_struct_decl
  699          | make_dim_decl
  700          | make_table_decl
  701          | array_comprehension
  702          | make_tuple_call

  703 make_struct_fields: "name" copy_or_move expr
  704                   | "name" ":=" expr
  705                   | make_struct_fields ',' "name" copy_or_move expr
  706                   | make_struct_fields ',' "name" ":=" expr
  707                   | "$f" '(' expr ')' copy_or_move expr
  708                   | "$f" '(' expr ')' ":=" expr
  709                   | make_struct_fields ',' "$f" '(' expr ')' copy_or_move expr
  710                   | make_struct_fields ',' "$f" '(' expr ')' ":=" expr

  711 make_struct_single: make_struct_fields

  712 make_struct_dim: make_struct_fields
  713                | make_struct_dim "end of expression" make_struct_fields

  714 use_initializer: %empty
  715                | "uninitialized"

  716 $@73: %empty

  717 $@74: %empty

  718 make_struct_decl: "struct" '<' $@73 type_declaration_no_options '>' $@74 '(' use_initializer make_struct_dim ')'

  719 $@75: %empty

  720 $@76: %empty

  721 make_struct_decl: "class" '<' $@75 type_declaration_no_options '>' $@76 '(' use_initializer make_struct_dim ')'

  722 $@77: %empty

  723 $@78: %empty

  724 make_struct_decl: "variant" '<' $@77 type_declaration_no_options '>' $@78 '(' make_struct_dim ')'

  725 $@79: %empty

  726 $@80: %empty

  727 make_struct_decl: "default" '<' $@79 type_declaration_no_options '>' $@80 use_initializer

  728 make_map_tuple: expr "=>" expr
  729               | expr

  730 make_tuple_call: "tuple" '(' expr_list optional_comma ')'

  731 $@81: %empty

  732 $@82: %empty

  733 make_tuple_call: "tuple" '<' $@81 type_declaration_no_options '>' $@82 '(' use_initializer make_struct_dim ')'

  734 make_dim_decl: '[' expr_list optional_comma ']'

  735 $@83: %empty

  736 $@84: %empty

  737 make_dim_decl: "array" "struct" '<' $@83 type_declaration_no_options '>' $@84 '(' use_initializer make_struct_dim ')'

  738 $@85: %empty

  739 $@86: %empty

  740 make_dim_decl: "array" "tuple" '<' $@85 type_declaration_no_options '>' $@86 '(' use_initializer make_struct_dim ')'

  741 $@87: %empty

  742 $@88: %empty

  743 make_dim_decl: "array" "variant" '<' $@87 type_declaration_no_options '>' $@88 '(' make_struct_dim ')'
  744              | "array" '(' expr_list optional_comma ')'

  745 $@89: %empty

  746 $@90: %empty

  747 make_dim_decl: "array" '<' $@89 type_declaration_no_options '>' $@90 '(' expr_list optional_comma ')'
  748              | "fixed_array" '(' expr_list optional_comma ')'

  749 $@91: %empty

  750 $@92: %empty

  751 make_dim_decl: "fixed_array" '<' $@91 type_declaration_no_options '>' $@92 '(' expr_list optional_comma ')'

  752 expr_map_tuple_list: make_map_tuple
  753                    | expr_map_tuple_list ',' make_map_tuple

  754 make_table_decl: "begin of code block" expr_map_tuple_list optional_comma "end of code block"
  755                | "table" '(' expr_map_tuple_list optional_comma ')'
  756                | "table" '<' type_declaration_no_options '>' '(' expr_map_tuple_list optional_comma ')'
  757                | "table" '<' type_declaration_no_options "end of expression" type_declaration_no_options '>' '(' expr_map_tuple_list optional_comma ')'

  758 array_comprehension_where: %empty
  759                          | "end of expression" "where" expr

  760 optional_comma: %empty
  761               | ','

  762 array_comprehension: '[' "for" variable_name_with_pos_list "in" expr_list "end of expression" expr array_comprehension_where ']'
  763                    | '[' "iterator" "for" variable_name_with_pos_list "in" expr_list "end of expression" expr array_comprehension_where ']'
  764                    | "begin of code block" "for" variable_name_with_pos_list "in" expr_list "end of expression" make_map_tuple array_comprehension_where "end of code block"


Terminals, with rules where they appear

    $end (0) 0
    '!' (33) 104 120 369
    '#' (35) 637 639 685
    '$' (36) 20 294 628 630
    '%' (37) 35 39 140 381
    '&' (38) 148 297 388 497 505 635 636 641
    '(' (40) 58 68 69 70 93 102 108 115 116 248 249 250 270 271 286 287 288 334 335 336 337 339 349 350 354 355 356 357 358 399 409 410 411 412 441 442 443 444 445 447 448 449 450 451 452 453 454 455 456 478 507 561 602 603 627 628 630 707 708 709 710 718 721 724 730 733 737 740 743 744 747 748 751 755 756 757
    ')' (41) 58 68 69 70 93 102 108 115 116 248 249 250 270 271 286 287 288 334 335 336 337 339 349 350 354 355 356 357 358 399 409 410 411 412 441 442 443 444 445 447 448 449 450 451 452 453 454 455 456 478 507 561 602 603 627 628 630 707 708 709 710 718 721 724 730 733 737 740 743 744 747 748 751 755 756 757
    '*' (42) 138 379 408 642
    '+' (43) 136 371 377
    ',' (44) 48 82 95 111 269 290 302 335 509 510 529 563 564 608 705 706 709 710 753 761
    '-' (45) 137 372 378 631 634 636 639
    '.' (46) 40 165 167 168 347 348 349 350 353 401 403 405 449 451 452
    '/' (47) 41 139 380
    ':' (58) 50 51 118 270 414 482 488 498 499 511 512 541 546
    "end of expression" (59) 15 16 69 214 215 216 223 224 225 229 230 231 238 259 270 271 288 472 474 480 484 486 487 490 492 493 511 512 513 535 605 613 713 757 759 762 763 764
    '<' (60) 141 246 276 279 282 285 287 288 343 346 382 411 412 417 423 428 611 626 630 645 649 652 655 659 662 666 669 673 676 679 682 718 721 724 727 733 737 740 743 747 751 756 757
    '=' (61) 74 86 87 88 89 90 91 93 298 316 494 501 526 534
    '>' (62) 142 246 276 279 282 285 287 288 343 346 383 411 412 417 423 428 611 626 630 645 649 652 655 659 662 666 669 673 676 679 682 718 721 724 727 733 737 740 743 747 751 756 757
    '?' (63) 177 178 414 425 428 429 454
    '@' (64) 96 97 295 296 340 343 346 456
    '[' (91) 113 163 304 334 335 400 401 614 615 616 617 631 734 762 763
    ']' (93) 113 163 164 304 334 335 400 401 402 403 614 615 616 617 631 734 762 763
    '^' (94) 150 390
    "begin of code block" (123) 211 212 307 522 544 556 689 693 697 754 764
    '|' (124) 149 389 684 685
    "end of code block" (125) 211 212 307 522 544 556 689 693 697 754 764
    '~' (126) 121 370
    error (256) 234 353
    "lexer error" (258)
    "struct" (259) 551 718 737
    "class" (260) 550 721
    "let" (261) 261 264
    "def" (262) 204 474 476
    "while" (263) 72
    "if" (264) 59 69
    "static_if" (265) 60
    "else" (266) 57 62
    "for" (267) 70 762 763 764
    "recover" (268) 260
    "true" (269) 79 90 365
    "false" (270) 80 91 366
    "new" (271) 247 248 249 250 251
    "typeinfo" (272) 286 287 288
    "type" (273) 84 285 417 423 428 626
    "in" (274) 70 85 762 763 764
    "is" (275) 173 175 417 418 419 455
    "as" (276) 43 174 176 177 178 420 423 424 425 428 429 453 454
    "elif" (277) 54
    "static_elif" (278) 55
    "array" (279) 649 737 740 743 744 747
    "return" (280) 254 255 256
    "null" (281) 359
    "break" (282) 252
    "try" (283) 260
    "options" (284) 36
    "table" (285) 652 755 756 757
    "expect" (286) 46
    "const" (287) 463 633 634 640
    "require" (288) 37 99
    "operator" (289) 120 121 122 123 124 125 126 127 128 129 130 131 132 133 134 135 136 137 138 139 140 141 142 143 144 145 146 147 148 149 150 151 152 153 154 155 156 157 158 159 160 161 162 163 164 165 166 167 168 169 170 171 172 173 174 175 176 177 178
    "enum" (290) 544
    "finally" (291) 212
    "delete" (292) 171 242 243
    "deref" (293) 409
    "typedef" (294) 535
    "typedecl" (295) 627
    "with" (296) 73
    "aka" (297) 508 510 562 564
    "assume" (298) 74
    "cast" (299) 276
    "override" (300) 460
    "abstract" (301) 474
    "upcast" (302) 279
    "iterator" (303) 655 763
    "var" (304) 262 265
    "addr" (305) 410
    "continue" (306) 253
    "where" (307) 759
    "pass" (308) 231
    "reinterpret" (309) 282
    "module" (310) 22
    "public" (311) 18 45 207 465 521 532 538 554
    "label" (312) 51 52
    "goto" (313) 52 53
    "implicit" (314) 638
    "explicit" (315) 243 632
    "shared" (316) 518
    "private" (317) 19 100 206 466 520 531 537 553
    "smart_ptr" (318) 645
    "unsafe" (319) 71
    "inscope" (320) 266
    "static" (321) 468
    "fixed_array" (322) 748 751
    "default" (323) 727
    "uninitialized" (324) 715
    "bool" (325) 179 565
    "void" (326) 585
    "string" (327) 180 566
    "auto" (328) 601 602
    "int" (329) 181 567 592
    "int2" (330) 182 571
    "int3" (331) 183 572
    "int4" (332) 184 573
    "uint" (333) 185 574 595
    "bitfield" (334) 591 611 697
    "uint2" (335) 186 578
    "uint3" (336) 187 579
    "uint4" (337) 188 580
    "float" (338) 189 581
    "float2" (339) 190 582
    "float3" (340) 191 583
    "float4" (341) 192 584
    "range" (342) 193 586
    "urange" (343) 194 587
    "range64" (344) 195 588
    "urange64" (345) 196 589
    "block" (346) 656 659 662
    "int64" (347) 197 570 598
    "uint64" (348) 198 577 599
    "double" (349) 199 590
    "function" (350) 663 666 669
    "lambda" (351) 670 673 676
    "int8" (352) 200 568 593
    "uint8" (353) 201 575 596
    "int16" (354) 202 569 594
    "uint16" (355) 203 576 597
    "tuple" (356) 679 689 730 733 740
    "variant" (357) 682 693 724 743
    "generator" (358) 411 412
    "yield" (359) 257 258
    "sealed" (360) 461 548
    "+=" (361) 122 325
    "-=" (362) 123 326
    "/=" (363) 125 328
    "*=" (364) 124 327
    "%=" (365) 126 329
    "&=" (366) 127 319
    "|=" (367) 128 320
    "^=" (368) 129 321
    "<<" (369) 155 373
    ">>" (370) 156 374
    "++" (371) 151 153 395 397
    "--" (372) 152 154 396 398
    "<=" (373) 146 386
    "<<=" (374) 157 330
    ">>=" (375) 158 331
    ">=" (376) 147 387
    "==" (377) 144 384 640 641
    "!=" (378) 145 385
    "->" (379) 336 337
    "<-" (380) 256 258 293 299 317 495 502
    "??" (381) 172 413 646
    "?." (382) 166 169 404 405 450 452
    "?[" (383) 164 402 403
    "<|" (384) 437
    "|>" (385) 109 438 439
    ":=" (386) 168 170 300 318 503 704 706 708 710
    "<<<" (387) 159 375
    ">>>" (388) 160 376
    "<<<=" (389) 161 332
    ">>>=" (390) 162 333
    "=>" (391) 292 293 728
    "::" (392) 240 241
    "&&" (393) 105 133 391
    "||" (394) 106 134 392
    "^^" (395) 107 135 393
    "&&=" (396) 130 322
    "||=" (397) 131 323
    "^^=" (398) 132 324
    ".." (399) 143 394
    "$$" (400) 441
    "$i" (401) 339 442 507 561
    "$v" (402) 443
    "$b" (403) 444
    "$a" (404) 445 478
    "$t" (405) 603
    "$c" (406) 447 448 456
    "$f" (407) 449 450 451 452 453 454 455 707 708 709 710
    "..." (408) 446
    "integer constant" <i> (409) 49 50 51 52 77 88 308
    "long integer constant" <i64> (410) 310
    "unsigned integer constant" <ui> (411) 309
    "unsigned long integer constant" <ui64> (412) 311
    "unsigned int8 constant" <ui> (413) 312
    "floating point constant" <fd> (414) 78 89 313
    "double constant" <d> (415) 314
    "name" <s> (416) 21 38 40 41 43 74 76 83 87 119 167 168 169 175 176 178 239 240 241 268 269 287 288 297 298 299 300 336 337 347 348 349 350 404 405 419 420 425 482 488 506 508 509 510 525 526 534 539 549 560 562 563 564 602 604 605 607 608 689 693 697 703 704 705 706
    "start of the string" (417) 27 31
    STRING_CHARACTER <ch> (418) 23 25 32 33
    STRING_CHARACTER_ESC (419) 24 26
    "end of the string" (420) 27 31
    "{" (421) 30
    "}" (422) 30
    "end of failed eader macro" (423)
    ";}}" (424)
    ";}]" (425)
    ";]]" (426)
    ",]]" (427)
    ",}]" (428)
    UNARY_MINUS (429)
    UNARY_PLUS (430)
    PRE_INC (431)
    PRE_DEC (432)
    LLPIPE (433)
    POST_INC (434)
    POST_DEC (435)
    DEREF (436)


Nonterminals, with rules where they appear

    $accept (209)
        on left: 0
    program (210)
        on left: 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15
        on right: 0 2 3 4 5 6 7 8 9 10 11 12 13 14 15
    top_level_reader_macro (211)
        on left: 16
        on right: 14
    optional_public_or_private_module <b> (212)
        on left: 17 18 19
        on right: 22
    module_name <s> (213)
        on left: 20 21
        on right: 22
    module_declaration (214)
        on left: 22
        on right: 2
    character_sequence <s> (215)
        on left: 23 24 25 26
        on right: 25 26 27 29
    string_constant <s> (216)
        on left: 27
        on right: 75 86
    string_builder_body <pExpression> (217)
        on left: 28 29 30
        on right: 29 30 31
    string_builder <pExpression> (218)
        on left: 31
        on right: 363
    reader_character_sequence (219)
        on left: 32 33
        on right: 33 35
    expr_reader <pExpression> (220)
        on left: 35
        on right: 16 362
    $@1 (221)
        on left: 34
        on right: 35
    options_declaration (222)
        on left: 36
        on right: 9
    require_declaration (223)
        on left: 37
        on right: 8
    require_module_name <s> (224)
        on left: 38 39 40 41
        on right: 39 40 41 42 43
    require_module (225)
        on left: 42 43
        on right: 37
    is_public_module <b> (226)
        on left: 44 45
        on right: 42 43
    expect_declaration (227)
        on left: 46
        on right: 7
    expect_list (228)
        on left: 47 48
        on right: 46 48
    expect_error (229)
        on left: 49 50
        on right: 47 48
    expression_label <pExpression> (230)
        on left: 51
        on right: 229
    expression_goto <pExpression> (231)
        on left: 52 53
        on right: 230
    elif_or_static_elif <b> (232)
        on left: 54 55
        on right: 58
    expression_else <pExpression> (233)
        on left: 56 57 58
        on right: 58 68
    if_or_static_if <b> (234)
        on left: 59 60
        on right: 68
    expression_else_one_liner <pExpression> (235)
        on left: 61 62
        on right: 69
    expression_if_one_liner <pExpression> (236)
        on left: 63 64 65 66 67
        on right: 62 69
    expression_if_then_else <pExpression> (237)
        on left: 68 69
        on right: 227
    expression_for_loop <pExpression> (238)
        on left: 70
        on right: 222
    expression_unsafe <pExpression> (239)
        on left: 71
        on right: 219
    expression_while_loop <pExpression> (240)
        on left: 72
        on right: 218
    expression_with <pExpression> (241)
        on left: 73
        on right: 220
    expression_with_alias <pExpression> (242)
        on left: 74
        on right: 221
    annotation_argument_value <aa> (243)
        on left: 75 76 77 78 79 80
        on right: 81 82
    annotation_argument_value_list <aaList> (244)
        on left: 81 82
        on right: 82 93
    annotation_argument_name <s> (245)
        on left: 83 84 85
        on right: 86 87 88 89 90 91 92 93
    annotation_argument <aa> (246)
        on left: 86 87 88 89 90 91 92 93
        on right: 94 95 96 97
    annotation_argument_list <aaList> (247)
        on left: 94 95
        on right: 36 95 102
    metadata_argument_list <aaList> (248)
        on left: 96 97
        on right: 97 458
    annotation_declaration_name <s> (249)
        on left: 98 99 100
        on right: 101 102
    annotation_declaration_basic <fa> (250)
        on left: 101 102
        on right: 103
    annotation_declaration <fa> (251)
        on left: 103 104 105 106 107 108 109
        on right: 104 105 106 107 108 109 110 111
    annotation_list <faList> (252)
        on left: 110 111
        on right: 111 113
    optional_annotation_list <faList> (253)
        on left: 112 113
        on right: 204 305 306 474 476 544 559
    optional_function_argument_list <pVarDeclList> (254)
        on left: 114 115 116
        on right: 208 305 306 346 662 669 676
    optional_function_type <pTypeDecl> (255)
        on left: 117 118
        on right: 208 305 306 346 662 669 676
    function_name <s> (256)
        on left: 119 120 121 122 123 124 125 126 127 128 129 130 131 132 133 134 135 136 137 138 139 140 141 142 143 144 145 146 147 148 149 150 151 152 153 154 155 156 157 158 159 160 161 162 163 164 165 166 167 168 169 170 171 172 173 174 175 176 177 178 179 180 181 182 183 184 185 186 187 188 189 190 191 192 193 194 195 196 197 198 199 200 201 202 203
        on right: 208
    global_function_declaration (257)
        on left: 204
        on right: 6
    optional_public_or_private_function <b> (258)
        on left: 205 206 207
        on right: 210
    function_declaration_header <pFuncDecl> (259)
        on left: 208
        on right: 210 474 476
    function_declaration <pFuncDecl> (260)
        on left: 210
        on right: 204
    $@2 (261)
        on left: 209
        on right: 210
    expression_block <pExpression> (262)
        on left: 211 212
        on right: 57 58 68 70 71 72 73 210 260 291 306 476
    expr_call_pipe <pExpression> (263)
        on left: 213
        on right: 440
    expression_any <pExpression> (264)
        on left: 214 215 216 217 218 219 220 221 222 223 224 225 226 227 228 229 230 231
        on right: 233
    expressions <pExpression> (265)
        on left: 232 233 234
        on right: 211 212 233 234 307
    optional_expr_list <pExpression> (266)
        on left: 235 236
        on right: 248 628 630
    type_declaration_no_options_list <pTypeDeclList> (267)
        on left: 237 238
        on right: 238 630
    name_in_namespace <s> (268)
        on left: 239 240 241
        on right: 35 98 286 287 288 334 335 338 354 355 356 360 546 600 628 630
    expression_delete <pExpression> (269)
        on left: 242 243
        on right: 216
    new_type_declaration <pTypeDecl> (270)
        on left: 246
        on right: 249 250
    $@3 (271)
        on left: 244
        on right: 246
    $@4 (272)
        on left: 245
        on right: 246
    expr_new <pExpression> (273)
        on left: 247 248 249 250 251
        on right: 433
    expression_break <pExpression> (274)
        on left: 252
        on right: 66 223
    expression_continue <pExpression> (275)
        on left: 253
        on right: 67 224
    expression_return <pExpression> (276)
        on left: 254 255 256
        on right: 64 225
    expression_yield_no_pipe <pExpression> (277)
        on left: 257 258
        on right: 65 259
    expression_yield <pExpression> (278)
        on left: 259
        on right: 226
    expression_try_catch <pExpression> (279)
        on left: 260
        on right: 228
    kwd_let_var_or_nothing <b> (280)
        on left: 261 262 263
        on right: 477
    kwd_let <b> (281)
        on left: 264 265
        on right: 272 273 522 524
    optional_in_scope <b> (282)
        on left: 266 267
        on right: 272 273
    tuple_expansion <pNameList> (283)
        on left: 268 269
        on right: 269 270 271
    tuple_expansion_variable_declaration <pVarDecl> (284)
        on left: 270 271
        on right: 273
    expression_let <pExpression> (285)
        on left: 272 273
        on right: 217
    expr_cast <pExpression> (286)
        on left: 276 279 282
        on right: 432
    $@5 (287)
        on left: 274
        on right: 276
    $@6 (288)
        on left: 275
        on right: 276
    $@7 (289)
        on left: 277
        on right: 279
    $@8 (290)
        on left: 278
        on right: 279
    $@9 (291)
        on left: 280
        on right: 282
    $@10 (292)
        on left: 281
        on right: 282
    expr_type_decl <pExpression> (293)
        on left: 285
        on right: 431
    $@11 (294)
        on left: 283
        on right: 285
    $@12 (295)
        on left: 284
        on right: 285
    expr_type_info <pExpression> (296)
        on left: 286 287 288
        on right: 430
    expr_list <pExpression> (297)
        on left: 289 290
        on right: 70 236 290 335 337 350 356 358 399 448 730 734 744 747 748 751 762 763 764
    block_or_simple_block <pExpression> (298)
        on left: 291 292 293
        on right: 305
    block_or_lambda <i> (299)
        on left: 294 295 296
        on right: 305 306
    capture_entry <pCapt> (300)
        on left: 297 298 299 300
        on right: 301 302
    capture_list <pCaptList> (301)
        on left: 301 302
        on right: 302 304
    optional_capture_list <pCaptList> (302)
        on left: 303 304
        on right: 305 306 411 412
    expr_full_block <pExpression> (303)
        on left: 305
        on right: 436
    expr_full_block_assumed_piped <pExpression> (304)
        on left: 306 307
        on right: 213
    expr_numeric_const <pExpression> (305)
        on left: 308 309 310 311 312 313 314
        on right: 361
    expr_assign <pExpression> (306)
        on left: 315 316 317 318 319 320 321 322 323 324 325 326 327 328 329 330 331 332 333
        on right: 215
    expr_named_call <pExpression> (307)
        on left: 334 335
        on right: 435
    expr_method_call <pExpression> (308)
        on left: 336 337
        on right: 434
    func_addr_name <pExpression> (309)
        on left: 338 339
        on right: 340 343 346
    func_addr_expr <pExpression> (310)
        on left: 340 343 346
        on right: 406
    $@13 (311)
        on left: 341
        on right: 343
    $@14 (312)
        on left: 342
        on right: 343
    $@15 (313)
        on left: 344
        on right: 346
    $@16 (314)
        on left: 345
        on right: 346
    expr_field <pExpression> (315)
        on left: 347 348 349 350 353
        on right: 367
    $@17 (316)
        on left: 351
        on right: 353
    $@18 (317)
        on left: 352
        on right: 353
    expr_call <pExpression> (318)
        on left: 354 355 356 357 358
        on right: 213 407
    expr <pExpression> (319)
        on left: 359 360 361 362 363 364 365 366 367 368 369 370 371 372 373 374 375 376 377 378 379 380 381 382 383 384 385 386 387 388 389 390 391 392 393 394 395 396 397 398 399 400 401 402 403 404 405 406 407 408 409 410 411 412 413 414 417 418 419 420 423 424 425 428 429 430 431 432 433 434 435 436 437 438 439 440
        on right
    $@19 (320)
        on left: 415
        on right: 417
    $@20 (321)
        on left: 416
        on right: 417
    $@21 (322)
        on left: 421
        on right: 423
    $@22 (323)
        on left: 422
        on right: 423
    $@23 (324)
        on left: 426
        on right: 428
    $@24 (325)
        on left: 427
        on right: 428
    expr_mtag <pExpression> (326)
        on left: 441 442 443 444 445 446 447 448 449 450 451 452 453 454 455 456
        on right: 368
    optional_field_annotation <aaList> (327)
        on left: 457 458
        on right: 469 477 516 524
    optional_override <i> (328)
        on left: 459 460 461
        on right: 469 476
    optional_constant <b> (329)
        on left: 462 463
        on right: 474 476
    optional_public_or_private_member_variable <b> (330)
        on left: 464 465 466
        on right: 469 474 476
    optional_static_member_variable <b> (331)
        on left: 467 468
        on right: 469 476
    structure_variable_declaration <pVarDecl> (332)
        on left: 469
        on right: 472
    struct_variable_declaration_list <pVarDeclList> (333)
        on left: 470 472 474 476
        on right: 472 474 476 556
    $@25 (334)
        on left: 471
        on right: 472
    $@26 (335)
        on left: 473
        on right: 474
    $@27 (336)
        on left: 475
        on right: 476
    function_argument_declaration <pVarDecl> (337)
        on left: 477 478
        on right: 479 480
    function_argument_list <pVarDeclList> (338)
        on left: 479 480
        on right: 116 480
    tuple_type <pVarDecl> (339)
        on left: 481 482
        on right: 483 484 487
    tuple_type_list <pVarDeclList> (340)
        on left: 483 484
        on right: 484 679
    tuple_alias_type_list <pVarDeclList> (341)
        on left: 485 486 487
        on right: 486 487 689
    variant_type <pVarDecl> (342)
        on left: 488
        on right: 489 490 493
    variant_type_list <pVarDeclList> (343)
        on left: 489 490
        on right: 490 682
    variant_alias_type_list <pVarDeclList> (344)
        on left: 491 492 493
        on right: 492 493 693
    copy_or_move <b> (345)
        on left: 494 495
        on right: 499 500 703 705 707 709
    variable_declaration <pVarDecl> (346)
        on left: 496 497 498 499 500
        on right: 469 477
    copy_or_move_or_clone <i> (347)
        on left: 501 502 503
        on right: 270 271 512 513
    optional_ref <b> (348)
        on left: 504 505
        on right: 271 513
    let_variable_name_with_pos_list <pNameWithPosList> (349)
        on left: 506 507 508 509 510
        on right: 509 510 511 512 513
    let_variable_declaration <pVarDecl> (350)
        on left: 511 512 513
        on right: 272 516 524
    global_variable_declaration_list <pVarDeclList> (351)
        on left: 514 516
        on right: 516 522
    $@28 (352)
        on left: 515
        on right: 516
    optional_shared <b> (353)
        on left: 517 518
        on right: 22 522 524
    optional_public_or_private_variable <b> (354)
        on left: 519 520 521
        on right: 522 524
    global_let (355)
        on left: 522 524
        on right: 5
    $@29 (356)
        on left: 523
        on right: 524
    enum_expression <pEnumPair> (357)
        on left: 525 526
        on right: 528 529
    enum_list <pEnum> (358)
        on left: 527 528 529
        on right: 529 544
    optional_public_or_private_alias <b> (359)
        on left: 530 531 532
        on right: 534 689 693 697
    single_alias (360)
        on left: 534
        on right: 535
    $@30 (361)
        on left: 533
        on right: 534
    alias_declaration (362)
        on left: 535
        on right: 10
    optional_public_or_private_enum <b> (363)
        on left: 536 537 538
        on right: 544
    enum_name <pEnum> (364)
        on left: 539
        on right: 544
    optional_enum_basic_type_declaration <type> (365)
        on left: 540 541
        on right: 544
    enum_declaration (366)
        on left: 544
        on right: 4
    $@31 (367)
        on left: 542
        on right: 544
    $@32 (368)
        on left: 543
        on right: 544
    optional_structure_parent <s> (369)
        on left: 545 546
        on right: 549
    optional_sealed <b> (370)
        on left: 547 548
        on right: 549
    structure_name <pStructure> (371)
        on left: 549
        on right: 559
    class_or_struct <b> (372)
        on left: 550 551
        on right: 559
    optional_public_or_private_structure <b> (373)
        on left: 552 553 554
        on right: 559
    optional_struct_variable_declaration_list <pVarDeclList> (374)
        on left: 555 556
        on right: 559
    structure_declaration (375)
        on left: 559
        on right: 3
    $@33 (376)
        on left: 557
        on right: 559
    $@34 (377)
        on left: 558
        on right: 559
    variable_name_with_pos_list <pNameWithPosList> (378)
        on left: 560 561 562 563 564
        on right: 70 496 497 498 499 500 563 564 762 763 764
    basic_type_declaration <type> (379)
        on left: 565 566 567 568 569 570 571 572 573 574 575 576 577 578 579 580 581 582 583 584 585 586 587 588 589 590 591
        on right: 357 358 418 424 429 439 620
    enum_basic_type_declaration <type> (380)
        on left: 592 593 594 595 596 597 598 599
        on right: 541
    structure_type_declaration <pTypeDecl> (381)
        on left: 600
        on right: 247 248 623
    auto_type_declaration <pTypeDecl> (382)
        on left: 601 602 603
        on right: 621
    bitfield_bits <pNameList> (383)
        on left: 604 605
        on right: 605 611
    bitfield_alias_bits <pNameList> (384)
        on left: 606 607 608
        on right: 608 697
    bitfield_type_declaration <pTypeDecl> (385)
        on left: 611
        on right: 622
    $@35 (386)
        on left: 609
        on right: 611
    $@36 (387)
        on left: 610
        on right: 611
    table_type_pair <aTypePair> (388)
        on left: 612 613
        on right: 652
    dim_list <pTypeDecl> (389)
        on left: 614 615 616 617
        on right: 616 617 619
    type_declaration_no_options <pTypeDecl> (390)
        on left: 618 619
        on right: 270 276 279 282 343 411 412 417 511 512 683 684 718 721 724 727 733 737 740 743 747 751 756 757
    type_declaration_no_options_no_dim <pTypeDecl> (391)
        on left: 620 621 622 623 626 627 628 630 631 632 633 634 635 636 637 638 639 640 641 642 645 646 649 652 655 656 659 662 663 666 669 670 673 676 679 682
        on right: 618 619 631 632 633 634 635 636 637 638 639 640 641 642 646
    $@37 (392)
        on left: 624
        on right: 626
    $@38 (393)
        on left: 625
        on right: 626
    $@39 (394)
        on left: 629
        on right: 630
    $@40 (395)
        on left: 643
        on right: 645
    $@41 (396)
        on left: 644
        on right: 645
    $@42 (397)
        on left: 647
        on right: 649
    $@43 (398)
        on left: 648
        on right: 649
    $@44 (399)
        on left: 650
        on right: 652
    $@45 (400)
        on left: 651
        on right: 652
    $@46 (401)
        on left: 653
        on right: 655
    $@47 (402)
        on left: 654
        on right: 655
    $@48 (403)
        on left: 657
        on right: 659
    $@49 (404)
        on left: 658
        on right: 659
    $@50 (405)
        on left: 660
        on right: 662
    $@51 (406)
        on left: 661
        on right: 662
    $@52 (407)
        on left: 664
        on right: 666
    $@53 (408)
        on left: 665
        on right: 666
    $@54 (409)
        on left: 667
        on right: 669
    $@55 (410)
        on left: 668
        on right: 669
    $@56 (411)
        on left: 671
        on right: 673
    $@57 (412)
        on left: 672
        on right: 673
    $@58 (413)
        on left: 674
        on right: 676
    $@59 (414)
        on left: 675
        on right: 676
    $@60 (415)
        on left: 677
        on right: 679
    $@61 (416)
        on left: 678
        on right: 679
    $@62 (417)
        on left: 680
        on right: 682
    $@63 (418)
        on left: 681
        on right: 682
    type_declaration <pTypeDecl> (419)
        on left: 683 684 685
        on right: 118 237 238 246 285 423 428 481 482 488 498 499 534 612 613 626 645 649 655 659 666 673 684 685
    tuple_alias_declaration (420)
        on left: 689
        on right: 12
    $@64 (421)
        on left: 686
        on right: 689
    $@65 (422)
        on left: 687
        on right: 689
    $@66 (423)
        on left: 688
        on right: 689
    variant_alias_declaration (424)
        on left: 693
        on right: 11
    $@67 (425)
        on left: 690
        on right: 693
    $@68 (426)
        on left: 691
        on right: 693
    $@69 (427)
        on left: 692
        on right: 693
    bitfield_alias_declaration (428)
        on left: 697
        on right: 13
    $@70 (429)
        on left: 694
        on right: 697
    $@71 (430)
        on left: 695
        on right: 697
    $@72 (431)
        on left: 696
        on right: 697
    make_decl <pExpression> (432)
        on left: 698 699 700 701 702
        on right: 251 364
    make_struct_fields <pMakeStruct> (433)
        on left: 703 704 705 706 707 708 709 710
        on right: 334 335 705 706 709 710 711 712 713
    make_struct_single <pExpression> (434)
        on left: 711
        on right: 250 355
    make_struct_dim <pExpression> (435)
        on left: 712 713
        on right: 713 718 721 724 733 737 740 743
    use_initializer <b> (436)
        on left: 714 715
        on right: 249 250 718 721 727 733 737 740
    make_struct_decl <pExpression> (437)
        on left: 718 721 724 727
        on right: 698
    $@73 (438)
        on left: 716
        on right: 718
    $@74 (439)
        on left: 717
        on right: 718
    $@75 (440)
        on left: 719
        on right: 721
    $@76 (441)
        on left: 720
        on right: 721
    $@77 (442)
        on left: 722
        on right: 724
    $@78 (443)
        on left: 723
        on right: 724
    $@79 (444)
        on left: 725
        on right: 727
    $@80 (445)
        on left: 726
        on right: 727
    make_map_tuple <pExpression> (446)
        on left: 728 729
        on right: 752 753 764
    make_tuple_call <pExpression> (447)
        on left: 730 733
        on right: 702
    $@81 (448)
        on left: 731
        on right: 733
    $@82 (449)
        on left: 732
        on right: 733
    make_dim_decl <pExpression> (450)
        on left: 734 737 740 743 744 747 748 751
        on right: 699
    $@83 (451)
        on left: 735
        on right: 737
    $@84 (452)
        on left: 736
        on right: 737
    $@85 (453)
        on left: 738
        on right: 740
    $@86 (454)
        on left: 739
        on right: 740
    $@87 (455)
        on left: 741
        on right: 743
    $@88 (456)
        on left: 742
        on right: 743
    $@89 (457)
        on left: 745
        on right: 747
    $@90 (458)
        on left: 746
        on right: 747
    $@91 (459)
        on left: 749
        on right: 751
    $@92 (460)
        on left: 750
        on right: 751
    expr_map_tuple_list <pExpression> (461)
        on left: 752 753
        on right: 753 754 755 756 757
    make_table_decl <pExpression> (462)
        on left: 754 755 756 757
        on right: 700
    array_comprehension_where <pExpression> (463)
        on left: 758 759
        on right: 762 763 764
    optional_comma <b> (464)
        on left: 760 761
        on right: 399 544 697 730 734 744 747 748 751 754 755 756 757
    array_comprehension <pExpression> (465)
        on left: 762 763 764
        on right: 701


State 0

    0 $accept: . program $end

    $default  reduce using rule 1 (program)

    program  go to state 1


State 1

    0 $accept: program . $end
    2 program: program . module_declaration
    3        | program . structure_declaration
    4        | program . enum_declaration
    5        | program . global_let
    6        | program . global_function_declaration
    7        | program . expect_declaration
    8        | program . require_declaration
    9        | program . options_declaration
   10        | program . alias_declaration
   11        | program . variant_alias_declaration
   12        | program . tuple_alias_declaration
   13        | program . bitfield_alias_declaration
   14        | program . top_level_reader_macro
   15        | program . "end of expression"

    $end                 shift, and go to state 2
    "let"                shift, and go to state 3
    "options"            shift, and go to state 4
    "expect"             shift, and go to state 5
    "require"            shift, and go to state 6
    "typedef"            shift, and go to state 7
    "var"                shift, and go to state 8
    "module"             shift, and go to state 9
    "bitfield"           shift, and go to state 10
    "tuple"              shift, and go to state 11
    "variant"            shift, and go to state 12
    "end of expression"  shift, and go to state 13
    '%'                  shift, and go to state 14
    '['                  shift, and go to state 15

    $default  reduce using rule 112 (optional_annotation_list)

    top_level_reader_macro       go to state 16
    module_declaration           go to state 17
    expr_reader                  go to state 18
    options_declaration          go to state 19
    require_declaration          go to state 20
    expect_declaration           go to state 21
    optional_annotation_list     go to state 22
    global_function_declaration  go to state 23
    kwd_let                      go to state 24
    global_let                   go to state 25
    alias_declaration            go to state 26
    enum_declaration             go to state 27
    structure_declaration        go to state 28
    tuple_alias_declaration      go to state 29
    variant_alias_declaration    go to state 30
    bitfield_alias_declaration   go to state 31


State 2

    0 $accept: program $end .

    $default  accept


State 3

  264 kwd_let: "let" .

    $default  reduce using rule 264 (kwd_let)


State 4

   36 options_declaration: "options" . annotation_argument_list

    "type"  shift, and go to state 32
    "in"    shift, and go to state 33
    "name"  shift, and go to state 34

    annotation_argument_name  go to state 35
    annotation_argument       go to state 36
    annotation_argument_list  go to state 37


State 5

   46 expect_declaration: "expect" . expect_list

    "integer constant"  shift, and go to state 38

    expect_list   go to state 39
    expect_error  go to state 40


State 6

   37 require_declaration: "require" . require_module

    "name"  shift, and go to state 41
    '%'     shift, and go to state 42

    require_module_name  go to state 43
    require_module       go to state 44


State 7

  535 alias_declaration: "typedef" . single_alias "end of expression"

    "public"   shift, and go to state 45
    "private"  shift, and go to state 46

    $default  reduce using rule 530 (optional_public_or_private_alias)

    optional_public_or_private_alias  go to state 47
    single_alias                      go to state 48


State 8

  265 kwd_let: "var" .

    $default  reduce using rule 265 (kwd_let)


State 9

   22 module_declaration: "module" . module_name optional_shared optional_public_or_private_module

    "name"  shift, and go to state 49
    '$'     shift, and go to state 50

    module_name  go to state 51


State 10

  697 bitfield_alias_declaration: "bitfield" . optional_public_or_private_alias "name" $@70 "begin of code block" $@71 bitfield_alias_bits optional_comma $@72 "end of code block"

    "public"   shift, and go to state 45
    "private"  shift, and go to state 46

    $default  reduce using rule 530 (optional_public_or_private_alias)

    optional_public_or_private_alias  go to state 52


State 11

  689 tuple_alias_declaration: "tuple" . optional_public_or_private_alias "name" $@64 "begin of code block" $@65 tuple_alias_type_list $@66 "end of code block"

    "public"   shift, and go to state 45
    "private"  shift, and go to state 46

    $default  reduce using rule 530 (optional_public_or_private_alias)

    optional_public_or_private_alias  go to state 53


State 12

  693 variant_alias_declaration: "variant" . optional_public_or_private_alias "name" $@67 "begin of code block" $@68 variant_alias_type_list $@69 "end of code block"

    "public"   shift, and go to state 45
    "private"  shift, and go to state 46

    $default  reduce using rule 530 (optional_public_or_private_alias)

    optional_public_or_private_alias  go to state 54


State 13

   15 program: program "end of expression" .

    $default  reduce using rule 15 (program)


State 14

   35 expr_reader: '%' . name_in_namespace $@1 reader_character_sequence

    "::"    shift, and go to state 55
    "name"  shift, and go to state 56

    name_in_namespace  go to state 57


State 15

  113 optional_annotation_list: '[' . annotation_list ']'

    "require"  shift, and go to state 58
    "private"  shift, and go to state 59
    "|>"       shift, and go to state 60
    "::"       shift, and go to state 55
    "name"     shift, and go to state 56
    '!'        shift, and go to state 61
    '('        shift, and go to state 62

    annotation_declaration_name   go to state 63
    annotation_declaration_basic  go to state 64
    annotation_declaration        go to state 65
    annotation_list               go to state 66
    name_in_namespace             go to state 67


State 16

   14 program: program top_level_reader_macro .

    $default  reduce using rule 14 (program)


State 17

    2 program: program module_declaration .

    $default  reduce using rule 2 (program)


State 18

   16 top_level_reader_macro: expr_reader . "end of expression"

    "end of expression"  shift, and go to state 68


State 19

    9 program: program options_declaration .

    $default  reduce using rule 9 (program)


State 20

    8 program: program require_declaration .

    $default  reduce using rule 8 (program)


State 21

    7 program: program expect_declaration .

    $default  reduce using rule 7 (program)


State 22

  204 global_function_declaration: optional_annotation_list . "def" function_declaration
  544 enum_declaration: optional_annotation_list . "enum" optional_public_or_private_enum enum_name optional_enum_basic_type_declaration "begin of code block" $@31 enum_list optional_comma $@32 "end of code block"
  559 structure_declaration: optional_annotation_list . class_or_struct optional_public_or_private_structure $@33 structure_name $@34 optional_struct_variable_declaration_list

    "struct"  shift, and go to state 69
    "class"   shift, and go to state 70
    "def"     shift, and go to state 71
    "enum"    shift, and go to state 72

    class_or_struct  go to state 73


State 23

    6 program: program global_function_declaration .

    $default  reduce using rule 6 (program)


State 24

  522 global_let: kwd_let . optional_shared optional_public_or_private_variable "begin of code block" global_variable_declaration_list "end of code block"
  524           | kwd_let . optional_shared optional_public_or_private_variable $@29 optional_field_annotation let_variable_declaration

    "shared"  shift, and go to state 74

    $default  reduce using rule 517 (optional_shared)

    optional_shared  go to state 75


State 25

    5 program: program global_let .

    $default  reduce using rule 5 (program)


State 26

   10 program: program alias_declaration .

    $default  reduce using rule 10 (program)


State 27

    4 program: program enum_declaration .

    $default  reduce using rule 4 (program)


State 28

    3 program: program structure_declaration .

    $default  reduce using rule 3 (program)


State 29

   12 program: program tuple_alias_declaration .

    $default  reduce using rule 12 (program)


State 30

   11 program: program variant_alias_declaration .

    $default  reduce using rule 11 (program)


State 31

   13 program: program bitfield_alias_declaration .

    $default  reduce using rule 13 (program)


State 32

   84 annotation_argument_name: "type" .

    $default  reduce using rule 84 (annotation_argument_name)


State 33

   85 annotation_argument_name: "in" .

    $default  reduce using rule 85 (annotation_argument_name)


State 34

   83 annotation_argument_name: "name" .

    $default  reduce using rule 83 (annotation_argument_name)


State 35

   86 annotation_argument: annotation_argument_name . '=' string_constant
   87                    | annotation_argument_name . '=' "name"
   88                    | annotation_argument_name . '=' "integer constant"
   89                    | annotation_argument_name . '=' "floating point constant"
   90                    | annotation_argument_name . '=' "true"
   91                    | annotation_argument_name . '=' "false"
   92                    | annotation_argument_name .
   93                    | annotation_argument_name . '=' '(' annotation_argument_value_list ')'

    '='  shift, and go to state 76

    $default  reduce using rule 92 (annotation_argument)


State 36

   94 annotation_argument_list: annotation_argument .

    $default  reduce using rule 94 (annotation_argument_list)


State 37

   36 options_declaration: "options" annotation_argument_list .
   95 annotation_argument_list: annotation_argument_list . ',' annotation_argument

    ','  shift, and go to state 77

    $default  reduce using rule 36 (options_declaration)


State 38

   49 expect_error: "integer constant" .
   50             | "integer constant" . ':' "integer constant"

    ':'  shift, and go to state 78

    $default  reduce using rule 49 (expect_error)


State 39

   46 expect_declaration: "expect" expect_list .
   48 expect_list: expect_list . ',' expect_error

    ','  shift, and go to state 79

    $default  reduce using rule 46 (expect_declaration)


State 40

   47 expect_list: expect_error .

    $default  reduce using rule 47 (expect_list)


State 41

   38 require_module_name: "name" .

    $default  reduce using rule 38 (require_module_name)


State 42

   39 require_module_name: '%' . require_module_name

    "name"  shift, and go to state 41
    '%'     shift, and go to state 42

    require_module_name  go to state 80


State 43

   40 require_module_name: require_module_name . '.' "name"
   41                    | require_module_name . '/' "name"
   42 require_module: require_module_name . is_public_module
   43               | require_module_name . "as" "name" is_public_module

    "as"      shift, and go to state 81
    "public"  shift, and go to state 82
    '/'       shift, and go to state 83
    '.'       shift, and go to state 84

    $default  reduce using rule 44 (is_public_module)

    is_public_module  go to state 85


State 44

   37 require_declaration: "require" require_module .

    $default  reduce using rule 37 (require_declaration)


State 45

  532 optional_public_or_private_alias: "public" .

    $default  reduce using rule 532 (optional_public_or_private_alias)


State 46

  531 optional_public_or_private_alias: "private" .

    $default  reduce using rule 531 (optional_public_or_private_alias)


State 47

  534 single_alias: optional_public_or_private_alias . "name" $@30 '=' type_declaration

    "name"  shift, and go to state 86


State 48

  535 alias_declaration: "typedef" single_alias . "end of expression"

    "end of expression"  shift, and go to state 87


State 49

   21 module_name: "name" .

    $default  reduce using rule 21 (module_name)


State 50

   20 module_name: '$' .

    $default  reduce using rule 20 (module_name)


State 51

   22 module_declaration: "module" module_name . optional_shared optional_public_or_private_module

    "shared"  shift, and go to state 74

    $default  reduce using rule 517 (optional_shared)

    optional_shared  go to state 88


State 52

  697 bitfield_alias_declaration: "bitfield" optional_public_or_private_alias . "name" $@70 "begin of code block" $@71 bitfield_alias_bits optional_comma $@72 "end of code block"

    "name"  shift, and go to state 89


State 53

  689 tuple_alias_declaration: "tuple" optional_public_or_private_alias . "name" $@64 "begin of code block" $@65 tuple_alias_type_list $@66 "end of code block"

    "name"  shift, and go to state 90


State 54

  693 variant_alias_declaration: "variant" optional_public_or_private_alias . "name" $@67 "begin of code block" $@68 variant_alias_type_list $@69 "end of code block"

    "name"  shift, and go to state 91


State 55

  241 name_in_namespace: "::" . "name"

    "name"  shift, and go to state 92


State 56

  239 name_in_namespace: "name" .
  240                  | "name" . "::" "name"

    "::"  shift, and go to state 93

    "::"      [reduce using rule 239 (name_in_namespace)]
    $default  reduce using rule 239 (name_in_namespace)

    shift/reduce conflict on token "::":
      239 name_in_namespace: "name" .
      240 name_in_namespace: "name" . "::" "name"
      First example: program kwd_let optional_shared optional_public_or_private_variable $@29 optional_field_annotation "$i" '(' "typeinfo" '(' "name" . "::" "name" expr ')' ')' ':' type_declaration_no_options "end of expression" $end
      Shift derivation
        $accept
        `-> 0: program                                                                                                                                                                                                                                                              $end
               `-> 5: program global_let
                              `-> 524: kwd_let optional_shared optional_public_or_private_variable $@29 optional_field_annotation let_variable_declaration
                                                                                                                                  `-> 511: let_variable_name_with_pos_list                                                      ':' type_declaration_no_options "end of expression"
                                                                                                                                           `-> 507: "$i" '(' expr_type_info                                                 ')'
                                                                                                                                                             `-> 286: "typeinfo" '(' name_in_namespace             expr ')'
                                                                                                                                                                                     `-> 240: "name" . "::" "name"
      Second example: program kwd_let optional_shared optional_public_or_private_variable $@29 optional_field_annotation "$i" '(' "typeinfo" '(' "name" . "::" "name" ')' ')' ':' type_declaration_no_options "end of expression" $end
      Reduce derivation
        $accept
        `-> 0: program                                                                                                                                                                                                                                                                                    $end
               `-> 5: program global_let
                              `-> 524: kwd_let optional_shared optional_public_or_private_variable $@29 optional_field_annotation let_variable_declaration
                                                                                                                                  `-> 511: let_variable_name_with_pos_list                                                                            ':' type_declaration_no_options "end of expression"
                                                                                                                                           `-> 507: "$i" '(' expr                                                                                 ')'
                                                                                                                                                             `-> 430: expr_type_info
                                                                                                                                                                      `-> 286: "typeinfo" '(' name_in_namespace expr                          ')'
                                                                                                                                                                                              `-> 239: "name" . `-> 360: name_in_namespace
                                                                                                                                                                                                                         `-> 241: "::" "name"



State 57

   35 expr_reader: '%' name_in_namespace . $@1 reader_character_sequence

    $default  reduce using rule 34 ($@1)

    $@1  go to state 94


State 58

   99 annotation_declaration_name: "require" .

    $default  reduce using rule 99 (annotation_declaration_name)


State 59

  100 annotation_declaration_name: "private" .

    $default  reduce using rule 100 (annotation_declaration_name)


State 60

  109 annotation_declaration: "|>" . annotation_declaration

    "require"  shift, and go to state 58
    "private"  shift, and go to state 59
    "|>"       shift, and go to state 60
    "::"       shift, and go to state 55
    "name"     shift, and go to state 56
    '!'        shift, and go to state 61
    '('        shift, and go to state 62

    annotation_declaration_name   go to state 63
    annotation_declaration_basic  go to state 64
    annotation_declaration        go to state 95
    name_in_namespace             go to state 67


State 61

  104 annotation_declaration: '!' . annotation_declaration

    "require"  shift, and go to state 58
    "private"  shift, and go to state 59
    "|>"       shift, and go to state 60
    "::"       shift, and go to state 55
    "name"     shift, and go to state 56
    '!'        shift, and go to state 61
    '('        shift, and go to state 62

    annotation_declaration_name   go to state 63
    annotation_declaration_basic  go to state 64
    annotation_declaration        go to state 96
    name_in_namespace             go to state 67


State 62

  108 annotation_declaration: '(' . annotation_declaration ')'

    "require"  shift, and go to state 58
    "private"  shift, and go to state 59
    "|>"       shift, and go to state 60
    "::"       shift, and go to state 55
    "name"     shift, and go to state 56
    '!'        shift, and go to state 61
    '('        shift, and go to state 62

    annotation_declaration_name   go to state 63
    annotation_declaration_basic  go to state 64
    annotation_declaration        go to state 97
    name_in_namespace             go to state 67


State 63

  101 annotation_declaration_basic: annotation_declaration_name .
  102                             | annotation_declaration_name . '(' annotation_argument_list ')'

    '('  shift, and go to state 98

    $default  reduce using rule 101 (annotation_declaration_basic)


State 64

  103 annotation_declaration: annotation_declaration_basic .

    $default  reduce using rule 103 (annotation_declaration)


State 65

  105 annotation_declaration: annotation_declaration . "&&" annotation_declaration
  106                       | annotation_declaration . "||" annotation_declaration
  107                       | annotation_declaration . "^^" annotation_declaration
  110 annotation_list: annotation_declaration .

    "&&"  shift, and go to state 99
    "||"  shift, and go to state 100
    "^^"  shift, and go to state 101

    $default  reduce using rule 110 (annotation_list)


State 66

  111 annotation_list: annotation_list . ',' annotation_declaration
  113 optional_annotation_list: '[' annotation_list . ']'

    ','  shift, and go to state 102
    ']'  shift, and go to state 103


State 67

   98 annotation_declaration_name: name_in_namespace .

    $default  reduce using rule 98 (annotation_declaration_name)


State 68

   16 top_level_reader_macro: expr_reader "end of expression" .

    $default  reduce using rule 16 (top_level_reader_macro)


State 69

  551 class_or_struct: "struct" .

    $default  reduce using rule 551 (class_or_struct)


State 70

  550 class_or_struct: "class" .

    $default  reduce using rule 550 (class_or_struct)


State 71

  204 global_function_declaration: optional_annotation_list "def" . function_declaration

    "public"   shift, and go to state 104
    "private"  shift, and go to state 105

    $default  reduce using rule 205 (optional_public_or_private_function)

    optional_public_or_private_function  go to state 106
    function_declaration                 go to state 107


State 72

  544 enum_declaration: optional_annotation_list "enum" . optional_public_or_private_enum enum_name optional_enum_basic_type_declaration "begin of code block" $@31 enum_list optional_comma $@32 "end of code block"

    "public"   shift, and go to state 108
    "private"  shift, and go to state 109

    $default  reduce using rule 536 (optional_public_or_private_enum)

    optional_public_or_private_enum  go to state 110


State 73

  559 structure_declaration: optional_annotation_list class_or_struct . optional_public_or_private_structure $@33 structure_name $@34 optional_struct_variable_declaration_list

    "public"   shift, and go to state 111
    "private"  shift, and go to state 112

    $default  reduce using rule 552 (optional_public_or_private_structure)

    optional_public_or_private_structure  go to state 113


State 74

  518 optional_shared: "shared" .

    $default  reduce using rule 518 (optional_shared)


State 75

  522 global_let: kwd_let optional_shared . optional_public_or_private_variable "begin of code block" global_variable_declaration_list "end of code block"
  524           | kwd_let optional_shared . optional_public_or_private_variable $@29 optional_field_annotation let_variable_declaration

    "public"   shift, and go to state 114
    "private"  shift, and go to state 115

    $default  reduce using rule 519 (optional_public_or_private_variable)

    optional_public_or_private_variable  go to state 116


State 76

   86 annotation_argument: annotation_argument_name '=' . string_constant
   87                    | annotation_argument_name '=' . "name"
   88                    | annotation_argument_name '=' . "integer constant"
   89                    | annotation_argument_name '=' . "floating point constant"
   90                    | annotation_argument_name '=' . "true"
   91                    | annotation_argument_name '=' . "false"
   93                    | annotation_argument_name '=' . '(' annotation_argument_value_list ')'

    "true"                     shift, and go to state 117
    "false"                    shift, and go to state 118
    "integer constant"         shift, and go to state 119
    "floating point constant"  shift, and go to state 120
    "name"                     shift, and go to state 121
    "start of the string"      shift, and go to state 122
    '('                        shift, and go to state 123

    string_constant  go to state 124


State 77

   95 annotation_argument_list: annotation_argument_list ',' . annotation_argument

    "type"  shift, and go to state 32
    "in"    shift, and go to state 33
    "name"  shift, and go to state 34

    annotation_argument_name  go to state 35
    annotation_argument       go to state 125


State 78

   50 expect_error: "integer constant" ':' . "integer constant"

    "integer constant"  shift, and go to state 126


State 79

   48 expect_list: expect_list ',' . expect_error

    "integer constant"  shift, and go to state 38

    expect_error  go to state 127


State 80

   39 require_module_name: '%' require_module_name .
   40                    | require_module_name . '.' "name"
   41                    | require_module_name . '/' "name"

    '.'  shift, and go to state 84

    $default  reduce using rule 39 (require_module_name)


State 81

   43 require_module: require_module_name "as" . "name" is_public_module

    "name"  shift, and go to state 128


State 82

   45 is_public_module: "public" .

    $default  reduce using rule 45 (is_public_module)


State 83

   41 require_module_name: require_module_name '/' . "name"

    "name"  shift, and go to state 129


State 84

   40 require_module_name: require_module_name '.' . "name"

    "name"  shift, and go to state 130


State 85

   42 require_module: require_module_name is_public_module .

    $default  reduce using rule 42 (require_module)


State 86

  534 single_alias: optional_public_or_private_alias "name" . $@30 '=' type_declaration

    $default  reduce using rule 533 ($@30)

    $@30  go to state 131


State 87

  535 alias_declaration: "typedef" single_alias "end of expression" .

    $default  reduce using rule 535 (alias_declaration)


State 88

   22 module_declaration: "module" module_name optional_shared . optional_public_or_private_module

    "public"   shift, and go to state 132
    "private"  shift, and go to state 133

    $default  reduce using rule 17 (optional_public_or_private_module)

    optional_public_or_private_module  go to state 134


State 89

  697 bitfield_alias_declaration: "bitfield" optional_public_or_private_alias "name" . $@70 "begin of code block" $@71 bitfield_alias_bits optional_comma $@72 "end of code block"

    $default  reduce using rule 694 ($@70)

    $@70  go to state 135


State 90

  689 tuple_alias_declaration: "tuple" optional_public_or_private_alias "name" . $@64 "begin of code block" $@65 tuple_alias_type_list $@66 "end of code block"

    $default  reduce using rule 686 ($@64)

    $@64  go to state 136


State 91

  693 variant_alias_declaration: "variant" optional_public_or_private_alias "name" . $@67 "begin of code block" $@68 variant_alias_type_list $@69 "end of code block"

    $default  reduce using rule 690 ($@67)

    $@67  go to state 137


State 92

  241 name_in_namespace: "::" "name" .

    $default  reduce using rule 241 (name_in_namespace)


State 93

  240 name_in_namespace: "name" "::" . "name"

    "name"  shift, and go to state 138


State 94

   35 expr_reader: '%' name_in_namespace $@1 . reader_character_sequence

    STRING_CHARACTER  shift, and go to state 139

    reader_character_sequence  go to state 140


State 95

  105 annotation_declaration: annotation_declaration . "&&" annotation_declaration
  106                       | annotation_declaration . "||" annotation_declaration
  107                       | annotation_declaration . "^^" annotation_declaration
  109                       | "|>" annotation_declaration .

    $default  reduce using rule 109 (annotation_declaration)


State 96

  104 annotation_declaration: '!' annotation_declaration .
  105                       | annotation_declaration . "&&" annotation_declaration
  106                       | annotation_declaration . "||" annotation_declaration
  107                       | annotation_declaration . "^^" annotation_declaration

    $default  reduce using rule 104 (annotation_declaration)


State 97

  105 annotation_declaration: annotation_declaration . "&&" annotation_declaration
  106                       | annotation_declaration . "||" annotation_declaration
  107                       | annotation_declaration . "^^" annotation_declaration
  108                       | '(' annotation_declaration . ')'

    "&&"  shift, and go to state 99
    "||"  shift, and go to state 100
    "^^"  shift, and go to state 101
    ')'   shift, and go to state 141


State 98

  102 annotation_declaration_basic: annotation_declaration_name '(' . annotation_argument_list ')'

    "type"  shift, and go to state 32
    "in"    shift, and go to state 33
    "name"  shift, and go to state 34

    annotation_argument_name  go to state 35
    annotation_argument       go to state 36
    annotation_argument_list  go to state 142


State 99

  105 annotation_declaration: annotation_declaration "&&" . annotation_declaration

    "require"  shift, and go to state 58
    "private"  shift, and go to state 59
    "|>"       shift, and go to state 60
    "::"       shift, and go to state 55
    "name"     shift, and go to state 56
    '!'        shift, and go to state 61
    '('        shift, and go to state 62

    annotation_declaration_name   go to state 63
    annotation_declaration_basic  go to state 64
    annotation_declaration        go to state 143
    name_in_namespace             go to state 67


State 100

  106 annotation_declaration: annotation_declaration "||" . annotation_declaration

    "require"  shift, and go to state 58
    "private"  shift, and go to state 59
    "|>"       shift, and go to state 60
    "::"       shift, and go to state 55
    "name"     shift, and go to state 56
    '!'        shift, and go to state 61
    '('        shift, and go to state 62

    annotation_declaration_name   go to state 63
    annotation_declaration_basic  go to state 64
    annotation_declaration        go to state 144
    name_in_namespace             go to state 67


State 101

  107 annotation_declaration: annotation_declaration "^^" . annotation_declaration

    "require"  shift, and go to state 58
    "private"  shift, and go to state 59
    "|>"       shift, and go to state 60
    "::"       shift, and go to state 55
    "name"     shift, and go to state 56
    '!'        shift, and go to state 61
    '('        shift, and go to state 62

    annotation_declaration_name   go to state 63
    annotation_declaration_basic  go to state 64
    annotation_declaration        go to state 145
    name_in_namespace             go to state 67


State 102

  111 annotation_list: annotation_list ',' . annotation_declaration

    "require"  shift, and go to state 58
    "private"  shift, and go to state 59
    "|>"       shift, and go to state 60
    "::"       shift, and go to state 55
    "name"     shift, and go to state 56
    '!'        shift, and go to state 61
    '('        shift, and go to state 62

    annotation_declaration_name   go to state 63
    annotation_declaration_basic  go to state 64
    annotation_declaration        go to state 146
    name_in_namespace             go to state 67


State 103

  113 optional_annotation_list: '[' annotation_list ']' .

    $default  reduce using rule 113 (optional_annotation_list)


State 104

  207 optional_public_or_private_function: "public" .

    $default  reduce using rule 207 (optional_public_or_private_function)


State 105

  206 optional_public_or_private_function: "private" .

    $default  reduce using rule 206 (optional_public_or_private_function)


State 106

  210 function_declaration: optional_public_or_private_function . $@2 function_declaration_header expression_block

    $default  reduce using rule 209 ($@2)

    $@2  go to state 147


State 107

  204 global_function_declaration: optional_annotation_list "def" function_declaration .

    $default  reduce using rule 204 (global_function_declaration)


State 108

  538 optional_public_or_private_enum: "public" .

    $default  reduce using rule 538 (optional_public_or_private_enum)


State 109

  537 optional_public_or_private_enum: "private" .

    $default  reduce using rule 537 (optional_public_or_private_enum)


State 110

  544 enum_declaration: optional_annotation_list "enum" optional_public_or_private_enum . enum_name optional_enum_basic_type_declaration "begin of code block" $@31 enum_list optional_comma $@32 "end of code block"

    "name"  shift, and go to state 148

    enum_name  go to state 149


State 111

  554 optional_public_or_private_structure: "public" .

    $default  reduce using rule 554 (optional_public_or_private_structure)


State 112

  553 optional_public_or_private_structure: "private" .

    $default  reduce using rule 553 (optional_public_or_private_structure)


State 113

  559 structure_declaration: optional_annotation_list class_or_struct optional_public_or_private_structure . $@33 structure_name $@34 optional_struct_variable_declaration_list

    $default  reduce using rule 557 ($@33)

    $@33  go to state 150


State 114

  521 optional_public_or_private_variable: "public" .

    $default  reduce using rule 521 (optional_public_or_private_variable)


State 115

  520 optional_public_or_private_variable: "private" .

    $default  reduce using rule 520 (optional_public_or_private_variable)


State 116

  522 global_let: kwd_let optional_shared optional_public_or_private_variable . "begin of code block" global_variable_declaration_list "end of code block"
  524           | kwd_let optional_shared optional_public_or_private_variable . $@29 optional_field_annotation let_variable_declaration

    "begin of code block"  shift, and go to state 151

    $default  reduce using rule 523 ($@29)

    $@29  go to state 152


State 117

   90 annotation_argument: annotation_argument_name '=' "true" .

    $default  reduce using rule 90 (annotation_argument)


State 118

   91 annotation_argument: annotation_argument_name '=' "false" .

    $default  reduce using rule 91 (annotation_argument)


State 119

   88 annotation_argument: annotation_argument_name '=' "integer constant" .

    $default  reduce using rule 88 (annotation_argument)


State 120

   89 annotation_argument: annotation_argument_name '=' "floating point constant" .

    $default  reduce using rule 89 (annotation_argument)


State 121

   87 annotation_argument: annotation_argument_name '=' "name" .

    $default  reduce using rule 87 (annotation_argument)


State 122

   27 string_constant: "start of the string" . character_sequence "end of the string"

    STRING_CHARACTER      shift, and go to state 153
    STRING_CHARACTER_ESC  shift, and go to state 154

    character_sequence  go to state 155


State 123

   93 annotation_argument: annotation_argument_name '=' '(' . annotation_argument_value_list ')'

    "true"                     shift, and go to state 156
    "false"                    shift, and go to state 157
    "integer constant"         shift, and go to state 158
    "floating point constant"  shift, and go to state 159
    "name"                     shift, and go to state 160
    "start of the string"      shift, and go to state 122

    string_constant                 go to state 161
    annotation_argument_value       go to state 162
    annotation_argument_value_list  go to state 163


State 124

   86 annotation_argument: annotation_argument_name '=' string_constant .

    $default  reduce using rule 86 (annotation_argument)


State 125

   95 annotation_argument_list: annotation_argument_list ',' annotation_argument .

    $default  reduce using rule 95 (annotation_argument_list)


State 126

   50 expect_error: "integer constant" ':' "integer constant" .

    $default  reduce using rule 50 (expect_error)


State 127

   48 expect_list: expect_list ',' expect_error .

    $default  reduce using rule 48 (expect_list)


State 128

   43 require_module: require_module_name "as" "name" . is_public_module

    "public"  shift, and go to state 82

    $default  reduce using rule 44 (is_public_module)

    is_public_module  go to state 164


State 129

   41 require_module_name: require_module_name '/' "name" .

    $default  reduce using rule 41 (require_module_name)


State 130

   40 require_module_name: require_module_name '.' "name" .

    $default  reduce using rule 40 (require_module_name)


State 131

  534 single_alias: optional_public_or_private_alias "name" $@30 . '=' type_declaration

    '='  shift, and go to state 165


State 132

   18 optional_public_or_private_module: "public" .

    $default  reduce using rule 18 (optional_public_or_private_module)


State 133

   19 optional_public_or_private_module: "private" .

    $default  reduce using rule 19 (optional_public_or_private_module)


State 134

   22 module_declaration: "module" module_name optional_shared optional_public_or_private_module .

    $default  reduce using rule 22 (module_declaration)


State 135

  697 bitfield_alias_declaration: "bitfield" optional_public_or_private_alias "name" $@70 . "begin of code block" $@71 bitfield_alias_bits optional_comma $@72 "end of code block"

    "begin of code block"  shift, and go to state 166


State 136

  689 tuple_alias_declaration: "tuple" optional_public_or_private_alias "name" $@64 . "begin of code block" $@65 tuple_alias_type_list $@66 "end of code block"

    "begin of code block"  shift, and go to state 167


State 137

  693 variant_alias_declaration: "variant" optional_public_or_private_alias "name" $@67 . "begin of code block" $@68 variant_alias_type_list $@69 "end of code block"

    "begin of code block"  shift, and go to state 168


State 138

  240 name_in_namespace: "name" "::" "name" .

    $default  reduce using rule 240 (name_in_namespace)


State 139

   32 reader_character_sequence: STRING_CHARACTER .

    $default  reduce using rule 32 (reader_character_sequence)


State 140

   33 reader_character_sequence: reader_character_sequence . STRING_CHARACTER
   35 expr_reader: '%' name_in_namespace $@1 reader_character_sequence .

    STRING_CHARACTER  shift, and go to state 169

    $default  reduce using rule 35 (expr_reader)


State 141

  108 annotation_declaration: '(' annotation_declaration ')' .

    $default  reduce using rule 108 (annotation_declaration)


State 142

   95 annotation_argument_list: annotation_argument_list . ',' annotation_argument
  102 annotation_declaration_basic: annotation_declaration_name '(' annotation_argument_list . ')'

    ','  shift, and go to state 77
    ')'  shift, and go to state 170


State 143

  105 annotation_declaration: annotation_declaration . "&&" annotation_declaration
  105                       | annotation_declaration "&&" annotation_declaration .
  106                       | annotation_declaration . "||" annotation_declaration
  107                       | annotation_declaration . "^^" annotation_declaration

    $default  reduce using rule 105 (annotation_declaration)


State 144

  105 annotation_declaration: annotation_declaration . "&&" annotation_declaration
  106                       | annotation_declaration . "||" annotation_declaration
  106                       | annotation_declaration "||" annotation_declaration .
  107                       | annotation_declaration . "^^" annotation_declaration

    "&&"  shift, and go to state 99
    "^^"  shift, and go to state 101

    $default  reduce using rule 106 (annotation_declaration)


State 145

  105 annotation_declaration: annotation_declaration . "&&" annotation_declaration
  106                       | annotation_declaration . "||" annotation_declaration
  107                       | annotation_declaration . "^^" annotation_declaration
  107                       | annotation_declaration "^^" annotation_declaration .

    "&&"  shift, and go to state 99

    $default  reduce using rule 107 (annotation_declaration)


State 146

  105 annotation_declaration: annotation_declaration . "&&" annotation_declaration
  106                       | annotation_declaration . "||" annotation_declaration
  107                       | annotation_declaration . "^^" annotation_declaration
  111 annotation_list: annotation_list ',' annotation_declaration .

    "&&"  shift, and go to state 99
    "||"  shift, and go to state 100
    "^^"  shift, and go to state 101

    $default  reduce using rule 111 (annotation_list)


State 147

  210 function_declaration: optional_public_or_private_function $@2 . function_declaration_header expression_block

    "operator"  shift, and go to state 171
    "bool"      shift, and go to state 172
    "string"    shift, and go to state 173
    "int"       shift, and go to state 174
    "int2"      shift, and go to state 175
    "int3"      shift, and go to state 176
    "int4"      shift, and go to state 177
    "uint"      shift, and go to state 178
    "uint2"     shift, and go to state 179
    "uint3"     shift, and go to state 180
    "uint4"     shift, and go to state 181
    "float"     shift, and go to state 182
    "float2"    shift, and go to state 183
    "float3"    shift, and go to state 184
    "float4"    shift, and go to state 185
    "range"     shift, and go to state 186
    "urange"    shift, and go to state 187
    "range64"   shift, and go to state 188
    "urange64"  shift, and go to state 189
    "int64"     shift, and go to state 190
    "uint64"    shift, and go to state 191
    "double"    shift, and go to state 192
    "int8"      shift, and go to state 193
    "uint8"     shift, and go to state 194
    "int16"     shift, and go to state 195
    "uint16"    shift, and go to state 196
    "++"        shift, and go to state 197
    "--"        shift, and go to state 198
    "name"      shift, and go to state 199

    function_name                go to state 200
    function_declaration_header  go to state 201


State 148

  539 enum_name: "name" .

    $default  reduce using rule 539 (enum_name)


State 149

  544 enum_declaration: optional_annotation_list "enum" optional_public_or_private_enum enum_name . optional_enum_basic_type_declaration "begin of code block" $@31 enum_list optional_comma $@32 "end of code block"

    ':'  shift, and go to state 202

    $default  reduce using rule 540 (optional_enum_basic_type_declaration)

    optional_enum_basic_type_declaration  go to state 203


State 150

  559 structure_declaration: optional_annotation_list class_or_struct optional_public_or_private_structure $@33 . structure_name $@34 optional_struct_variable_declaration_list

    "sealed"  shift, and go to state 204

    $default  reduce using rule 547 (optional_sealed)

    optional_sealed  go to state 205
    structure_name   go to state 206


State 151

  522 global_let: kwd_let optional_shared optional_public_or_private_variable "begin of code block" . global_variable_declaration_list "end of code block"

    $default  reduce using rule 514 (global_variable_declaration_list)

    global_variable_declaration_list  go to state 207


State 152

  524 global_let: kwd_let optional_shared optional_public_or_private_variable $@29 . optional_field_annotation let_variable_declaration

    '@'  shift, and go to state 208

    $default  reduce using rule 457 (optional_field_annotation)

    metadata_argument_list     go to state 209
    optional_field_annotation  go to state 210


State 153

   23 character_sequence: STRING_CHARACTER .

    $default  reduce using rule 23 (character_sequence)


State 154

   24 character_sequence: STRING_CHARACTER_ESC .

    $default  reduce using rule 24 (character_sequence)


State 155

   25 character_sequence: character_sequence . STRING_CHARACTER
   26                   | character_sequence . STRING_CHARACTER_ESC
   27 string_constant: "start of the string" character_sequence . "end of the string"

    STRING_CHARACTER      shift, and go to state 211
    STRING_CHARACTER_ESC  shift, and go to state 212
    "end of the string"   shift, and go to state 213


State 156

   79 annotation_argument_value: "true" .

    $default  reduce using rule 79 (annotation_argument_value)


State 157

   80 annotation_argument_value: "false" .

    $default  reduce using rule 80 (annotation_argument_value)


State 158

   77 annotation_argument_value: "integer constant" .

    $default  reduce using rule 77 (annotation_argument_value)


State 159

   78 annotation_argument_value: "floating point constant" .

    $default  reduce using rule 78 (annotation_argument_value)


State 160

   76 annotation_argument_value: "name" .

    $default  reduce using rule 76 (annotation_argument_value)


State 161

   75 annotation_argument_value: string_constant .

    $default  reduce using rule 75 (annotation_argument_value)


State 162

   81 annotation_argument_value_list: annotation_argument_value .

    $default  reduce using rule 81 (annotation_argument_value_list)


State 163

   82 annotation_argument_value_list: annotation_argument_value_list . ',' annotation_argument_value
   93 annotation_argument: annotation_argument_name '=' '(' annotation_argument_value_list . ')'

    ','  shift, and go to state 214
    ')'  shift, and go to state 215


State 164

   43 require_module: require_module_name "as" "name" is_public_module .

    $default  reduce using rule 43 (require_module)


State 165

  534 single_alias: optional_public_or_private_alias "name" $@30 '=' . type_declaration

    "type"       shift, and go to state 216
    "array"      shift, and go to state 217
    "table"      shift, and go to state 218
    "typedecl"   shift, and go to state 219
    "iterator"   shift, and go to state 220
    "smart_ptr"  shift, and go to state 221
    "bool"       shift, and go to state 222
    "void"       shift, and go to state 223
    "string"     shift, and go to state 224
    "auto"       shift, and go to state 225
    "int"        shift, and go to state 226
    "int2"       shift, and go to state 227
    "int3"       shift, and go to state 228
    "int4"       shift, and go to state 229
    "uint"       shift, and go to state 230
    "bitfield"   shift, and go to state 231
    "uint2"      shift, and go to state 232
    "uint3"      shift, and go to state 233
    "uint4"      shift, and go to state 234
    "float"      shift, and go to state 235
    "float2"     shift, and go to state 236
    "float3"     shift, and go to state 237
    "float4"     shift, and go to state 238
    "range"      shift, and go to state 239
    "urange"     shift, and go to state 240
    "range64"    shift, and go to state 241
    "urange64"   shift, and go to state 242
    "block"      shift, and go to state 243
    "int64"      shift, and go to state 244
    "uint64"     shift, and go to state 245
    "double"     shift, and go to state 246
    "function"   shift, and go to state 247
    "lambda"     shift, and go to state 248
    "int8"       shift, and go to state 249
    "uint8"      shift, and go to state 250
    "int16"      shift, and go to state 251
    "uint16"     shift, and go to state 252
    "tuple"      shift, and go to state 253
    "variant"    shift, and go to state 254
    "::"         shift, and go to state 55
    "$t"         shift, and go to state 255
    "name"       shift, and go to state 56
    '$'          shift, and go to state 256

    name_in_namespace                   go to state 257
    basic_type_declaration              go to state 258
    structure_type_declaration          go to state 259
    auto_type_declaration               go to state 260
    bitfield_type_declaration           go to state 261
    type_declaration_no_options         go to state 262
    type_declaration_no_options_no_dim  go to state 263
    type_declaration                    go to state 264


State 166

  697 bitfield_alias_declaration: "bitfield" optional_public_or_private_alias "name" $@70 "begin of code block" . $@71 bitfield_alias_bits optional_comma $@72 "end of code block"

    $default  reduce using rule 695 ($@71)

    $@71  go to state 265


State 167

  689 tuple_alias_declaration: "tuple" optional_public_or_private_alias "name" $@64 "begin of code block" . $@65 tuple_alias_type_list $@66 "end of code block"

    $default  reduce using rule 687 ($@65)

    $@65  go to state 266


State 168

  693 variant_alias_declaration: "variant" optional_public_or_private_alias "name" $@67 "begin of code block" . $@68 variant_alias_type_list $@69 "end of code block"

    $default  reduce using rule 691 ($@68)

    $@68  go to state 267


State 169

   33 reader_character_sequence: reader_character_sequence STRING_CHARACTER .

    $default  reduce using rule 33 (reader_character_sequence)


State 170

  102 annotation_declaration_basic: annotation_declaration_name '(' annotation_argument_list ')' .

    $default  reduce using rule 102 (annotation_declaration_basic)


State 171

  120 function_name: "operator" . '!'
  121              | "operator" . '~'
  122              | "operator" . "+="
  123              | "operator" . "-="
  124              | "operator" . "*="
  125              | "operator" . "/="
  126              | "operator" . "%="
  127              | "operator" . "&="
  128              | "operator" . "|="
  129              | "operator" . "^="
  130              | "operator" . "&&="
  131              | "operator" . "||="
  132              | "operator" . "^^="
  133              | "operator" . "&&"
  134              | "operator" . "||"
  135              | "operator" . "^^"
  136              | "operator" . '+'
  137              | "operator" . '-'
  138              | "operator" . '*'
  139              | "operator" . '/'
  140              | "operator" . '%'
  141              | "operator" . '<'
  142              | "operator" . '>'
  143              | "operator" . ".."
  144              | "operator" . "=="
  145              | "operator" . "!="
  146              | "operator" . "<="
  147              | "operator" . ">="
  148              | "operator" . '&'
  149              | "operator" . '|'
  150              | "operator" . '^'
  153              | "operator" . "++"
  154              | "operator" . "--"
  155              | "operator" . "<<"
  156              | "operator" . ">>"
  157              | "operator" . "<<="
  158              | "operator" . ">>="
  159              | "operator" . "<<<"
  160              | "operator" . ">>>"
  161              | "operator" . "<<<="
  162              | "operator" . ">>>="
  163              | "operator" . '[' ']'
  164              | "operator" . "?[" ']'
  165              | "operator" . '.'
  166              | "operator" . "?."
  167              | "operator" . '.' "name"
  168              | "operator" . '.' "name" ":="
  169              | "operator" . "?." "name"
  170              | "operator" . ":="
  171              | "operator" . "delete"
  172              | "operator" . "??"
  173              | "operator" . "is"
  174              | "operator" . "as"
  175              | "operator" . "is" "name"
  176              | "operator" . "as" "name"
  177              | "operator" . '?' "as"
  178              | "operator" . '?' "as" "name"

    "is"      shift, and go to state 268
    "as"      shift, and go to state 269
    "delete"  shift, and go to state 270
    "+="      shift, and go to state 271
    "-="      shift, and go to state 272
    "/="      shift, and go to state 273
    "*="      shift, and go to state 274
    "%="      shift, and go to state 275
    "&="      shift, and go to state 276
    "|="      shift, and go to state 277
    "^="      shift, and go to state 278
    "<<"      shift, and go to state 279
    ">>"      shift, and go to state 280
    "++"      shift, and go to state 281
    "--"      shift, and go to state 282
    "<="      shift, and go to state 283
    "<<="     shift, and go to state 284
    ">>="     shift, and go to state 285
    ">="      shift, and go to state 286
    "=="      shift, and go to state 287
    "!="      shift, and go to state 288
    "??"      shift, and go to state 289
    "?."      shift, and go to state 290
    "?["      shift, and go to state 291
    ":="      shift, and go to state 292
    "<<<"     shift, and go to state 293
    ">>>"     shift, and go to state 294
    "<<<="    shift, and go to state 295
    ">>>="    shift, and go to state 296
    "&&"      shift, and go to state 297
    "||"      shift, and go to state 298
    "^^"      shift, and go to state 299
    "&&="     shift, and go to state 300
    "||="     shift, and go to state 301
    "^^="     shift, and go to state 302
    ".."      shift, and go to state 303
    '?'       shift, and go to state 304
    '|'       shift, and go to state 305
    '^'       shift, and go to state 306
    '&'       shift, and go to state 307
    '<'       shift, and go to state 308
    '>'       shift, and go to state 309
    '-'       shift, and go to state 310
    '+'       shift, and go to state 311
    '*'       shift, and go to state 312
    '/'       shift, and go to state 313
    '%'       shift, and go to state 314
    '~'       shift, and go to state 315
    '!'       shift, and go to state 316
    '.'       shift, and go to state 317
    '['       shift, and go to state 318


State 172

  179 function_name: "bool" .

    $default  reduce using rule 179 (function_name)


State 173

  180 function_name: "string" .

    $default  reduce using rule 180 (function_name)


State 174

  181 function_name: "int" .

    $default  reduce using rule 181 (function_name)


State 175

  182 function_name: "int2" .

    $default  reduce using rule 182 (function_name)


State 176

  183 function_name: "int3" .

    $default  reduce using rule 183 (function_name)


State 177

  184 function_name: "int4" .

    $default  reduce using rule 184 (function_name)


State 178

  185 function_name: "uint" .

    $default  reduce using rule 185 (function_name)


State 179

  186 function_name: "uint2" .

    $default  reduce using rule 186 (function_name)


State 180

  187 function_name: "uint3" .

    $default  reduce using rule 187 (function_name)


State 181

  188 function_name: "uint4" .

    $default  reduce using rule 188 (function_name)


State 182

  189 function_name: "float" .

    $default  reduce using rule 189 (function_name)


State 183

  190 function_name: "float2" .

    $default  reduce using rule 190 (function_name)


State 184

  191 function_name: "float3" .

    $default  reduce using rule 191 (function_name)


State 185

  192 function_name: "float4" .

    $default  reduce using rule 192 (function_name)


State 186

  193 function_name: "range" .

    $default  reduce using rule 193 (function_name)


State 187

  194 function_name: "urange" .

    $default  reduce using rule 194 (function_name)


State 188

  195 function_name: "range64" .

    $default  reduce using rule 195 (function_name)


State 189

  196 function_name: "urange64" .

    $default  reduce using rule 196 (function_name)


State 190

  197 function_name: "int64" .

    $default  reduce using rule 197 (function_name)


State 191

  198 function_name: "uint64" .

    $default  reduce using rule 198 (function_name)


State 192

  199 function_name: "double" .

    $default  reduce using rule 199 (function_name)


State 193

  200 function_name: "int8" .

    $default  reduce using rule 200 (function_name)


State 194

  201 function_name: "uint8" .

    $default  reduce using rule 201 (function_name)


State 195

  202 function_name: "int16" .

    $default  reduce using rule 202 (function_name)


State 196

  203 function_name: "uint16" .

    $default  reduce using rule 203 (function_name)


State 197

  151 function_name: "++" . "operator"

    "operator"  shift, and go to state 319


State 198

  152 function_name: "--" . "operator"

    "operator"  shift, and go to state 320


State 199

  119 function_name: "name" .

    $default  reduce using rule 119 (function_name)


State 200

  208 function_declaration_header: function_name . optional_function_argument_list optional_function_type

    '('  shift, and go to state 321

    $default  reduce using rule 114 (optional_function_argument_list)

    optional_function_argument_list  go to state 322


State 201

  210 function_declaration: optional_public_or_private_function $@2 function_declaration_header . expression_block

    "begin of code block"  shift, and go to state 323

    expression_block  go to state 324


State 202

  541 optional_enum_basic_type_declaration: ':' . enum_basic_type_declaration

    "int"     shift, and go to state 325
    "uint"    shift, and go to state 326
    "int64"   shift, and go to state 327
    "uint64"  shift, and go to state 328
    "int8"    shift, and go to state 329
    "uint8"   shift, and go to state 330
    "int16"   shift, and go to state 331
    "uint16"  shift, and go to state 332

    enum_basic_type_declaration  go to state 333


State 203

  544 enum_declaration: optional_annotation_list "enum" optional_public_or_private_enum enum_name optional_enum_basic_type_declaration . "begin of code block" $@31 enum_list optional_comma $@32 "end of code block"

    "begin of code block"  shift, and go to state 334


State 204

  548 optional_sealed: "sealed" .

    $default  reduce using rule 548 (optional_sealed)


State 205

  549 structure_name: optional_sealed . "name" optional_structure_parent

    "name"  shift, and go to state 335


State 206

  559 structure_declaration: optional_annotation_list class_or_struct optional_public_or_private_structure $@33 structure_name . $@34 optional_struct_variable_declaration_list

    $default  reduce using rule 558 ($@34)

    $@34  go to state 336


State 207

  516 global_variable_declaration_list: global_variable_declaration_list . $@28 optional_field_annotation let_variable_declaration
  522 global_let: kwd_let optional_shared optional_public_or_private_variable "begin of code block" global_variable_declaration_list . "end of code block"

    "end of code block"  shift, and go to state 337

    $default  reduce using rule 515 ($@28)

    $@28  go to state 338


State 208

   96 metadata_argument_list: '@' . annotation_argument

    "type"  shift, and go to state 32
    "in"    shift, and go to state 33
    "name"  shift, and go to state 34

    annotation_argument_name  go to state 35
    annotation_argument       go to state 339


State 209

   97 metadata_argument_list: metadata_argument_list . '@' annotation_argument
  458 optional_field_annotation: metadata_argument_list .

    '@'  shift, and go to state 340

    $default  reduce using rule 458 (optional_field_annotation)


State 210

  524 global_let: kwd_let optional_shared optional_public_or_private_variable $@29 optional_field_annotation . let_variable_declaration

    "$i"    shift, and go to state 341
    "name"  shift, and go to state 342

    let_variable_name_with_pos_list  go to state 343
    let_variable_declaration         go to state 344


State 211

   25 character_sequence: character_sequence STRING_CHARACTER .

    $default  reduce using rule 25 (character_sequence)


State 212

   26 character_sequence: character_sequence STRING_CHARACTER_ESC .

    $default  reduce using rule 26 (character_sequence)


State 213

   27 string_constant: "start of the string" character_sequence "end of the string" .

    $default  reduce using rule 27 (string_constant)


State 214

   82 annotation_argument_value_list: annotation_argument_value_list ',' . annotation_argument_value

    "true"                     shift, and go to state 156
    "false"                    shift, and go to state 157
    "integer constant"         shift, and go to state 158
    "floating point constant"  shift, and go to state 159
    "name"                     shift, and go to state 160
    "start of the string"      shift, and go to state 122

    string_constant            go to state 161
    annotation_argument_value  go to state 345


State 215

   93 annotation_argument: annotation_argument_name '=' '(' annotation_argument_value_list ')' .

    $default  reduce using rule 93 (annotation_argument)


State 216

  626 type_declaration_no_options_no_dim: "type" . '<' $@37 type_declaration '>' $@38

    '<'  shift, and go to state 346


State 217

  649 type_declaration_no_options_no_dim: "array" . '<' $@42 type_declaration '>' $@43

    '<'  shift, and go to state 347


State 218

  652 type_declaration_no_options_no_dim: "table" . '<' $@44 table_type_pair '>' $@45

    '<'  shift, and go to state 348


State 219

  627 type_declaration_no_options_no_dim: "typedecl" . '(' expr ')'

    '('  shift, and go to state 349


State 220

  655 type_declaration_no_options_no_dim: "iterator" . '<' $@46 type_declaration '>' $@47

    '<'  shift, and go to state 350


State 221

  645 type_declaration_no_options_no_dim: "smart_ptr" . '<' $@40 type_declaration '>' $@41

    '<'  shift, and go to state 351


State 222

  565 basic_type_declaration: "bool" .

    $default  reduce using rule 565 (basic_type_declaration)


State 223

  585 basic_type_declaration: "void" .

    $default  reduce using rule 585 (basic_type_declaration)


State 224

  566 basic_type_declaration: "string" .

    $default  reduce using rule 566 (basic_type_declaration)


State 225

  601 auto_type_declaration: "auto" .
  602                      | "auto" . '(' "name" ')'

    '('  shift, and go to state 352

    $default  reduce using rule 601 (auto_type_declaration)


State 226

  567 basic_type_declaration: "int" .

    $default  reduce using rule 567 (basic_type_declaration)


State 227

  571 basic_type_declaration: "int2" .

    $default  reduce using rule 571 (basic_type_declaration)


State 228

  572 basic_type_declaration: "int3" .

    $default  reduce using rule 572 (basic_type_declaration)


State 229

  573 basic_type_declaration: "int4" .

    $default  reduce using rule 573 (basic_type_declaration)


State 230

  574 basic_type_declaration: "uint" .

    $default  reduce using rule 574 (basic_type_declaration)


State 231

  591 basic_type_declaration: "bitfield" .
  611 bitfield_type_declaration: "bitfield" . '<' $@35 bitfield_bits '>' $@36

    '<'  shift, and go to state 353

    $default  reduce using rule 591 (basic_type_declaration)


State 232

  578 basic_type_declaration: "uint2" .

    $default  reduce using rule 578 (basic_type_declaration)


State 233

  579 basic_type_declaration: "uint3" .

    $default  reduce using rule 579 (basic_type_declaration)


State 234

  580 basic_type_declaration: "uint4" .

    $default  reduce using rule 580 (basic_type_declaration)


State 235

  581 basic_type_declaration: "float" .

    $default  reduce using rule 581 (basic_type_declaration)


State 236

  582 basic_type_declaration: "float2" .

    $default  reduce using rule 582 (basic_type_declaration)


State 237

  583 basic_type_declaration: "float3" .

    $default  reduce using rule 583 (basic_type_declaration)


State 238

  584 basic_type_declaration: "float4" .

    $default  reduce using rule 584 (basic_type_declaration)


State 239

  586 basic_type_declaration: "range" .

    $default  reduce using rule 586 (basic_type_declaration)


State 240

  587 basic_type_declaration: "urange" .

    $default  reduce using rule 587 (basic_type_declaration)


State 241

  588 basic_type_declaration: "range64" .

    $default  reduce using rule 588 (basic_type_declaration)


State 242

  589 basic_type_declaration: "urange64" .

    $default  reduce using rule 589 (basic_type_declaration)


State 243

  656 type_declaration_no_options_no_dim: "block" .
  659                                   | "block" . '<' $@48 type_declaration '>' $@49
  662                                   | "block" . '<' $@50 optional_function_argument_list optional_function_type '>' $@51

    '<'  shift, and go to state 354

    $default  reduce using rule 656 (type_declaration_no_options_no_dim)


State 244

  570 basic_type_declaration: "int64" .

    $default  reduce using rule 570 (basic_type_declaration)


State 245

  577 basic_type_declaration: "uint64" .

    $default  reduce using rule 577 (basic_type_declaration)


State 246

  590 basic_type_declaration: "double" .

    $default  reduce using rule 590 (basic_type_declaration)


State 247

  663 type_declaration_no_options_no_dim: "function" .
  666                                   | "function" . '<' $@52 type_declaration '>' $@53
  669                                   | "function" . '<' $@54 optional_function_argument_list optional_function_type '>' $@55

    '<'  shift, and go to state 355

    $default  reduce using rule 663 (type_declaration_no_options_no_dim)


State 248

  670 type_declaration_no_options_no_dim: "lambda" .
  673                                   | "lambda" . '<' $@56 type_declaration '>' $@57
  676                                   | "lambda" . '<' $@58 optional_function_argument_list optional_function_type '>' $@59

    '<'  shift, and go to state 356

    $default  reduce using rule 670 (type_declaration_no_options_no_dim)


State 249

  568 basic_type_declaration: "int8" .

    $default  reduce using rule 568 (basic_type_declaration)


State 250

  575 basic_type_declaration: "uint8" .

    $default  reduce using rule 575 (basic_type_declaration)


State 251

  569 basic_type_declaration: "int16" .

    $default  reduce using rule 569 (basic_type_declaration)


State 252

  576 basic_type_declaration: "uint16" .

    $default  reduce using rule 576 (basic_type_declaration)


State 253

  679 type_declaration_no_options_no_dim: "tuple" . '<' $@60 tuple_type_list '>' $@61

    '<'  shift, and go to state 357


State 254

  682 type_declaration_no_options_no_dim: "variant" . '<' $@62 variant_type_list '>' $@63

    '<'  shift, and go to state 358


State 255

  603 auto_type_declaration: "$t" . '(' expr ')'

    '('  shift, and go to state 359


State 256

  628 type_declaration_no_options_no_dim: '$' . name_in_namespace '(' optional_expr_list ')'
  630                                   | '$' . name_in_namespace '<' $@39 type_declaration_no_options_list '>' '(' optional_expr_list ')'

    "::"    shift, and go to state 55
    "name"  shift, and go to state 56

    name_in_namespace  go to state 360


State 257

  600 structure_type_declaration: name_in_namespace .

    $default  reduce using rule 600 (structure_type_declaration)


State 258

  620 type_declaration_no_options_no_dim: basic_type_declaration .

    $default  reduce using rule 620 (type_declaration_no_options_no_dim)


State 259

  623 type_declaration_no_options_no_dim: structure_type_declaration .

    $default  reduce using rule 623 (type_declaration_no_options_no_dim)


State 260

  621 type_declaration_no_options_no_dim: auto_type_declaration .

    $default  reduce using rule 621 (type_declaration_no_options_no_dim)


State 261

  622 type_declaration_no_options_no_dim: bitfield_type_declaration .

    $default  reduce using rule 622 (type_declaration_no_options_no_dim)


State 262

  683 type_declaration: type_declaration_no_options .

    $default  reduce using rule 683 (type_declaration)


State 263

  618 type_declaration_no_options: type_declaration_no_options_no_dim .
  619                            | type_declaration_no_options_no_dim . dim_list
  631 type_declaration_no_options_no_dim: type_declaration_no_options_no_dim . '-' '[' ']'
  632                                   | type_declaration_no_options_no_dim . "explicit"
  633                                   | type_declaration_no_options_no_dim . "const"
  634                                   | type_declaration_no_options_no_dim . '-' "const"
  635                                   | type_declaration_no_options_no_dim . '&'
  636                                   | type_declaration_no_options_no_dim . '-' '&'
  637                                   | type_declaration_no_options_no_dim . '#'
  638                                   | type_declaration_no_options_no_dim . "implicit"
  639                                   | type_declaration_no_options_no_dim . '-' '#'
  640                                   | type_declaration_no_options_no_dim . "==" "const"
  641                                   | type_declaration_no_options_no_dim . "==" '&'
  642                                   | type_declaration_no_options_no_dim . '*'
  646                                   | type_declaration_no_options_no_dim . "??"

    "const"     shift, and go to state 361
    "implicit"  shift, and go to state 362
    "explicit"  shift, and go to state 363
    "=="        shift, and go to state 364
    "??"        shift, and go to state 365
    '&'         shift, and go to state 366
    '-'         shift, and go to state 367
    '*'         shift, and go to state 368
    '['         shift, and go to state 369
    '#'         shift, and go to state 370

    $default  reduce using rule 618 (type_declaration_no_options)

    dim_list  go to state 371


State 264

  534 single_alias: optional_public_or_private_alias "name" $@30 '=' type_declaration .
  684 type_declaration: type_declaration . '|' type_declaration_no_options
  685                 | type_declaration . '|' '#'

    '|'  shift, and go to state 372

    $default  reduce using rule 534 (single_alias)


State 265

  697 bitfield_alias_declaration: "bitfield" optional_public_or_private_alias "name" $@70 "begin of code block" $@71 . bitfield_alias_bits optional_comma $@72 "end of code block"

    "name"  shift, and go to state 373

    $default  reduce using rule 606 (bitfield_alias_bits)

    bitfield_alias_bits  go to state 374


State 266

  689 tuple_alias_declaration: "tuple" optional_public_or_private_alias "name" $@64 "begin of code block" $@65 . tuple_alias_type_list $@66 "end of code block"

    $default  reduce using rule 485 (tuple_alias_type_list)

    tuple_alias_type_list  go to state 375


State 267

  693 variant_alias_declaration: "variant" optional_public_or_private_alias "name" $@67 "begin of code block" $@68 . variant_alias_type_list $@69 "end of code block"

    $default  reduce using rule 491 (variant_alias_type_list)

    variant_alias_type_list  go to state 376


State 268

  173 function_name: "operator" "is" .
  175              | "operator" "is" . "name"

    "name"  shift, and go to state 377

    $default  reduce using rule 173 (function_name)


State 269

  174 function_name: "operator" "as" .
  176              | "operator" "as" . "name"

    "name"  shift, and go to state 378

    $default  reduce using rule 174 (function_name)


State 270

  171 function_name: "operator" "delete" .

    $default  reduce using rule 171 (function_name)


State 271

  122 function_name: "operator" "+=" .

    $default  reduce using rule 122 (function_name)


State 272

  123 function_name: "operator" "-=" .

    $default  reduce using rule 123 (function_name)


State 273

  125 function_name: "operator" "/=" .

    $default  reduce using rule 125 (function_name)


State 274

  124 function_name: "operator" "*=" .

    $default  reduce using rule 124 (function_name)


State 275

  126 function_name: "operator" "%=" .

    $default  reduce using rule 126 (function_name)


State 276

  127 function_name: "operator" "&=" .

    $default  reduce using rule 127 (function_name)


State 277

  128 function_name: "operator" "|=" .

    $default  reduce using rule 128 (function_name)


State 278

  129 function_name: "operator" "^=" .

    $default  reduce using rule 129 (function_name)


State 279

  155 function_name: "operator" "<<" .

    $default  reduce using rule 155 (function_name)


State 280

  156 function_name: "operator" ">>" .

    $default  reduce using rule 156 (function_name)


State 281

  153 function_name: "operator" "++" .

    $default  reduce using rule 153 (function_name)


State 282

  154 function_name: "operator" "--" .

    $default  reduce using rule 154 (function_name)


State 283

  146 function_name: "operator" "<=" .

    $default  reduce using rule 146 (function_name)


State 284

  157 function_name: "operator" "<<=" .

    $default  reduce using rule 157 (function_name)


State 285

  158 function_name: "operator" ">>=" .

    $default  reduce using rule 158 (function_name)


State 286

  147 function_name: "operator" ">=" .

    $default  reduce using rule 147 (function_name)


State 287

  144 function_name: "operator" "==" .

    $default  reduce using rule 144 (function_name)


State 288

  145 function_name: "operator" "!=" .

    $default  reduce using rule 145 (function_name)


State 289

  172 function_name: "operator" "??" .

    $default  reduce using rule 172 (function_name)


State 290

  166 function_name: "operator" "?." .
  169              | "operator" "?." . "name"

    "name"  shift, and go to state 379

    $default  reduce using rule 166 (function_name)


State 291

  164 function_name: "operator" "?[" . ']'

    ']'  shift, and go to state 380


State 292

  170 function_name: "operator" ":=" .

    $default  reduce using rule 170 (function_name)


State 293

  159 function_name: "operator" "<<<" .

    $default  reduce using rule 159 (function_name)


State 294

  160 function_name: "operator" ">>>" .

    $default  reduce using rule 160 (function_name)


State 295

  161 function_name: "operator" "<<<=" .

    $default  reduce using rule 161 (function_name)


State 296

  162 function_name: "operator" ">>>=" .

    $default  reduce using rule 162 (function_name)


State 297

  133 function_name: "operator" "&&" .

    $default  reduce using rule 133 (function_name)


State 298

  134 function_name: "operator" "||" .

    $default  reduce using rule 134 (function_name)


State 299

  135 function_name: "operator" "^^" .

    $default  reduce using rule 135 (function_name)


State 300

  130 function_name: "operator" "&&=" .

    $default  reduce using rule 130 (function_name)


State 301

  131 function_name: "operator" "||=" .

    $default  reduce using rule 131 (function_name)


State 302

  132 function_name: "operator" "^^=" .

    $default  reduce using rule 132 (function_name)


State 303

  143 function_name: "operator" ".." .

    $default  reduce using rule 143 (function_name)


State 304

  177 function_name: "operator" '?' . "as"
  178              | "operator" '?' . "as" "name"

    "as"  shift, and go to state 381


State 305

  149 function_name: "operator" '|' .

    $default  reduce using rule 149 (function_name)


State 306

  150 function_name: "operator" '^' .

    $default  reduce using rule 150 (function_name)


State 307

  148 function_name: "operator" '&' .

    $default  reduce using rule 148 (function_name)


State 308

  141 function_name: "operator" '<' .

    $default  reduce using rule 141 (function_name)


State 309

  142 function_name: "operator" '>' .

    $default  reduce using rule 142 (function_name)


State 310

  137 function_name: "operator" '-' .

    $default  reduce using rule 137 (function_name)


State 311

  136 function_name: "operator" '+' .

    $default  reduce using rule 136 (function_name)


State 312

  138 function_name: "operator" '*' .

    $default  reduce using rule 138 (function_name)


State 313

  139 function_name: "operator" '/' .

    $default  reduce using rule 139 (function_name)


State 314

  140 function_name: "operator" '%' .

    $default  reduce using rule 140 (function_name)


State 315

  121 function_name: "operator" '~' .

    $default  reduce using rule 121 (function_name)


State 316

  120 function_name: "operator" '!' .

    $default  reduce using rule 120 (function_name)


State 317

  165 function_name: "operator" '.' .
  167              | "operator" '.' . "name"
  168              | "operator" '.' . "name" ":="

    "name"  shift, and go to state 382

    $default  reduce using rule 165 (function_name)


State 318

  163 function_name: "operator" '[' . ']'

    ']'  shift, and go to state 383


State 319

  151 function_name: "++" "operator" .

    $default  reduce using rule 151 (function_name)


State 320

  152 function_name: "--" "operator" .

    $default  reduce using rule 152 (function_name)


State 321

  115 optional_function_argument_list: '(' . ')'
  116                                | '(' . function_argument_list ')'

    "$a"  shift, and go to state 384
    ')'   shift, and go to state 385
    '@'   shift, and go to state 208

    $default  reduce using rule 457 (optional_field_annotation)

    metadata_argument_list         go to state 209
    optional_field_annotation      go to state 386
    function_argument_declaration  go to state 387
    function_argument_list         go to state 388


State 322

  208 function_declaration_header: function_name optional_function_argument_list . optional_function_type

    ':'  shift, and go to state 389

    $default  reduce using rule 117 (optional_function_type)

    optional_function_type  go to state 390


State 323

  211 expression_block: "begin of code block" . expressions "end of code block"
  212                 | "begin of code block" . expressions "end of code block" "finally" "begin of code block" expressions "end of code block"

    $default  reduce using rule 232 (expressions)

    expressions  go to state 391


State 324

  210 function_declaration: optional_public_or_private_function $@2 function_declaration_header expression_block .

    $default  reduce using rule 210 (function_declaration)


State 325

  592 enum_basic_type_declaration: "int" .

    $default  reduce using rule 592 (enum_basic_type_declaration)


State 326

  595 enum_basic_type_declaration: "uint" .

    $default  reduce using rule 595 (enum_basic_type_declaration)


State 327

  598 enum_basic_type_declaration: "int64" .

    $default  reduce using rule 598 (enum_basic_type_declaration)


State 328

  599 enum_basic_type_declaration: "uint64" .

    $default  reduce using rule 599 (enum_basic_type_declaration)


State 329

  593 enum_basic_type_declaration: "int8" .

    $default  reduce using rule 593 (enum_basic_type_declaration)


State 330

  596 enum_basic_type_declaration: "uint8" .

    $default  reduce using rule 596 (enum_basic_type_declaration)


State 331

  594 enum_basic_type_declaration: "int16" .

    $default  reduce using rule 594 (enum_basic_type_declaration)


State 332

  597 enum_basic_type_declaration: "uint16" .

    $default  reduce using rule 597 (enum_basic_type_declaration)


State 333

  541 optional_enum_basic_type_declaration: ':' enum_basic_type_declaration .

    $default  reduce using rule 541 (optional_enum_basic_type_declaration)


State 334

  544 enum_declaration: optional_annotation_list "enum" optional_public_or_private_enum enum_name optional_enum_basic_type_declaration "begin of code block" . $@31 enum_list optional_comma $@32 "end of code block"

    $default  reduce using rule 542 ($@31)

    $@31  go to state 392


State 335

  549 structure_name: optional_sealed "name" . optional_structure_parent

    ':'  shift, and go to state 393

    $default  reduce using rule 545 (optional_structure_parent)

    optional_structure_parent  go to state 394


State 336

  559 structure_declaration: optional_annotation_list class_or_struct optional_public_or_private_structure $@33 structure_name $@34 . optional_struct_variable_declaration_list

    "begin of code block"  shift, and go to state 395

    $default  reduce using rule 555 (optional_struct_variable_declaration_list)

    optional_struct_variable_declaration_list  go to state 396


State 337

  522 global_let: kwd_let optional_shared optional_public_or_private_variable "begin of code block" global_variable_declaration_list "end of code block" .

    $default  reduce using rule 522 (global_let)


State 338

  516 global_variable_declaration_list: global_variable_declaration_list $@28 . optional_field_annotation let_variable_declaration

    '@'  shift, and go to state 208

    $default  reduce using rule 457 (optional_field_annotation)

    metadata_argument_list     go to state 209
    optional_field_annotation  go to state 397


State 339

   96 metadata_argument_list: '@' annotation_argument .

    $default  reduce using rule 96 (metadata_argument_list)


State 340

   97 metadata_argument_list: metadata_argument_list '@' . annotation_argument

    "type"  shift, and go to state 32
    "in"    shift, and go to state 33
    "name"  shift, and go to state 34

    annotation_argument_name  go to state 35
    annotation_argument       go to state 398


State 341

  507 let_variable_name_with_pos_list: "$i" . '(' expr ')'

    '('  shift, and go to state 399


State 342

  506 let_variable_name_with_pos_list: "name" .
  508                                | "name" . "aka" "name"

    "aka"  shift, and go to state 400

    $default  reduce using rule 506 (let_variable_name_with_pos_list)


State 343

  509 let_variable_name_with_pos_list: let_variable_name_with_pos_list . ',' "name"
  510                                | let_variable_name_with_pos_list . ',' "name" "aka" "name"
  511 let_variable_declaration: let_variable_name_with_pos_list . ':' type_declaration_no_options "end of expression"
  512                         | let_variable_name_with_pos_list . ':' type_declaration_no_options copy_or_move_or_clone expr "end of expression"
  513                         | let_variable_name_with_pos_list . optional_ref copy_or_move_or_clone expr "end of expression"

    ','  shift, and go to state 401
    ':'  shift, and go to state 402
    '&'  shift, and go to state 403

    $default  reduce using rule 504 (optional_ref)

    optional_ref  go to state 404


State 344

  524 global_let: kwd_let optional_shared optional_public_or_private_variable $@29 optional_field_annotation let_variable_declaration .

    $default  reduce using rule 524 (global_let)


State 345

   82 annotation_argument_value_list: annotation_argument_value_list ',' annotation_argument_value .

    $default  reduce using rule 82 (annotation_argument_value_list)


State 346

  626 type_declaration_no_options_no_dim: "type" '<' . $@37 type_declaration '>' $@38

    $default  reduce using rule 624 ($@37)

    $@37  go to state 405


State 347

  649 type_declaration_no_options_no_dim: "array" '<' . $@42 type_declaration '>' $@43

    $default  reduce using rule 647 ($@42)

    $@42  go to state 406


State 348

  652 type_declaration_no_options_no_dim: "table" '<' . $@44 table_type_pair '>' $@45

    $default  reduce using rule 650 ($@44)

    $@44  go to state 407


State 349

  627 type_declaration_no_options_no_dim: "typedecl" '(' . expr ')'

    "struct"                          shift, and go to state 408
    "class"                           shift, and go to state 409
    "true"                            shift, and go to state 410
    "false"                           shift, and go to state 411
    "new"                             shift, and go to state 412
    "typeinfo"                        shift, and go to state 413
    "type"                            shift, and go to state 414
    "array"                           shift, and go to state 415
    "null"                            shift, and go to state 416
    "table"                           shift, and go to state 417
    "deref"                           shift, and go to state 418
    "cast"                            shift, and go to state 419
    "upcast"                          shift, and go to state 420
    "addr"                            shift, and go to state 421
    "reinterpret"                     shift, and go to state 422
    "fixed_array"                     shift, and go to state 423
    "default"                         shift, and go to state 424
    "bool"                            shift, and go to state 222
    "void"                            shift, and go to state 223
    "string"                          shift, and go to state 224
    "int"                             shift, and go to state 226
    "int2"                            shift, and go to state 227
    "int3"                            shift, and go to state 228
    "int4"                            shift, and go to state 229
    "uint"                            shift, and go to state 230
    "bitfield"                        shift, and go to state 425
    "uint2"                           shift, and go to state 232
    "uint3"                           shift, and go to state 233
    "uint4"                           shift, and go to state 234
    "float"                           shift, and go to state 235
    "float2"                          shift, and go to state 236
    "float3"                          shift, and go to state 237
    "float4"                          shift, and go to state 238
    "range"                           shift, and go to state 239
    "urange"                          shift, and go to state 240
    "range64"                         shift, and go to state 241
    "urange64"                        shift, and go to state 242
    "int64"                           shift, and go to state 244
    "uint64"                          shift, and go to state 245
    "double"                          shift, and go to state 246
    "int8"                            shift, and go to state 249
    "uint8"                           shift, and go to state 250
    "int16"                           shift, and go to state 251
    "uint16"                          shift, and go to state 252
    "tuple"                           shift, and go to state 426
    "variant"                         shift, and go to state 427
    "generator"                       shift, and go to state 428
    "++"                              shift, and go to state 429
    "--"                              shift, and go to state 430
    "::"                              shift, and go to state 55
    "$$"                              shift, and go to state 431
    "$i"                              shift, and go to state 432
    "$v"                              shift, and go to state 433
    "$b"                              shift, and go to state 434
    "$a"                              shift, and go to state 435
    "$c"                              shift, and go to state 436
    "..."                             shift, and go to state 437
    "integer constant"                shift, and go to state 438
    "long integer constant"           shift, and go to state 439
    "unsigned integer constant"       shift, and go to state 440
    "unsigned long integer constant"  shift, and go to state 441
    "unsigned int8 constant"          shift, and go to state 442
    "floating point constant"         shift, and go to state 443
    "double constant"                 shift, and go to state 444
    "name"                            shift, and go to state 56
    "start of the string"             shift, and go to state 445
    "begin of code block"             shift, and go to state 446
    '-'                               shift, and go to state 447
    '+'                               shift, and go to state 448
    '*'                               shift, and go to state 449
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 450
    '!'                               shift, and go to state 451
    '['                               shift, and go to state 452
    '('                               shift, and go to state 453
    '$'                               shift, and go to state 454
    '@'                               shift, and go to state 455

    string_builder          go to state 456
    expr_reader             go to state 457
    expr_call_pipe          go to state 458
    name_in_namespace       go to state 459
    expr_new                go to state 460
    expr_cast               go to state 461
    expr_type_decl          go to state 462
    expr_type_info          go to state 463
    block_or_lambda         go to state 464
    expr_full_block         go to state 465
    expr_numeric_const      go to state 466
    expr_named_call         go to state 467
    expr_method_call        go to state 468
    func_addr_expr          go to state 469
    expr_field              go to state 470
    expr_call               go to state 471
    expr                    go to state 472
    expr_mtag               go to state 473
    basic_type_declaration  go to state 474
    make_decl               go to state 475
    make_struct_decl        go to state 476
    make_tuple_call         go to state 477
    make_dim_decl           go to state 478
    make_table_decl         go to state 479
    array_comprehension     go to state 480


State 350

  655 type_declaration_no_options_no_dim: "iterator" '<' . $@46 type_declaration '>' $@47

    $default  reduce using rule 653 ($@46)

    $@46  go to state 481


State 351

  645 type_declaration_no_options_no_dim: "smart_ptr" '<' . $@40 type_declaration '>' $@41

    $default  reduce using rule 643 ($@40)

    $@40  go to state 482


State 352

  602 auto_type_declaration: "auto" '(' . "name" ')'

    "name"  shift, and go to state 483


State 353

  611 bitfield_type_declaration: "bitfield" '<' . $@35 bitfield_bits '>' $@36

    $default  reduce using rule 609 ($@35)

    $@35  go to state 484


State 354

  659 type_declaration_no_options_no_dim: "block" '<' . $@48 type_declaration '>' $@49
  662                                   | "block" '<' . $@50 optional_function_argument_list optional_function_type '>' $@51

    ':'       reduce using rule 660 ($@50)
    '>'       reduce using rule 660 ($@50)
    '('       reduce using rule 660 ($@50)
    $default  reduce using rule 657 ($@48)

    $@48  go to state 485
    $@50  go to state 486


State 355

  666 type_declaration_no_options_no_dim: "function" '<' . $@52 type_declaration '>' $@53
  669                                   | "function" '<' . $@54 optional_function_argument_list optional_function_type '>' $@55

    ':'       reduce using rule 667 ($@54)
    '>'       reduce using rule 667 ($@54)
    '('       reduce using rule 667 ($@54)
    $default  reduce using rule 664 ($@52)

    $@52  go to state 487
    $@54  go to state 488


State 356

  673 type_declaration_no_options_no_dim: "lambda" '<' . $@56 type_declaration '>' $@57
  676                                   | "lambda" '<' . $@58 optional_function_argument_list optional_function_type '>' $@59

    ':'       reduce using rule 674 ($@58)
    '>'       reduce using rule 674 ($@58)
    '('       reduce using rule 674 ($@58)
    $default  reduce using rule 671 ($@56)

    $@56  go to state 489
    $@58  go to state 490


State 357

  679 type_declaration_no_options_no_dim: "tuple" '<' . $@60 tuple_type_list '>' $@61

    $default  reduce using rule 677 ($@60)

    $@60  go to state 491


State 358

  682 type_declaration_no_options_no_dim: "variant" '<' . $@62 variant_type_list '>' $@63

    $default  reduce using rule 680 ($@62)

    $@62  go to state 492


State 359

  603 auto_type_declaration: "$t" '(' . expr ')'

    "struct"                          shift, and go to state 408
    "class"                           shift, and go to state 409
    "true"                            shift, and go to state 410
    "false"                           shift, and go to state 411
    "new"                             shift, and go to state 412
    "typeinfo"                        shift, and go to state 413
    "type"                            shift, and go to state 414
    "array"                           shift, and go to state 415
    "null"                            shift, and go to state 416
    "table"                           shift, and go to state 417
    "deref"                           shift, and go to state 418
    "cast"                            shift, and go to state 419
    "upcast"                          shift, and go to state 420
    "addr"                            shift, and go to state 421
    "reinterpret"                     shift, and go to state 422
    "fixed_array"                     shift, and go to state 423
    "default"                         shift, and go to state 424
    "bool"                            shift, and go to state 222
    "void"                            shift, and go to state 223
    "string"                          shift, and go to state 224
    "int"                             shift, and go to state 226
    "int2"                            shift, and go to state 227
    "int3"                            shift, and go to state 228
    "int4"                            shift, and go to state 229
    "uint"                            shift, and go to state 230
    "bitfield"                        shift, and go to state 425
    "uint2"                           shift, and go to state 232
    "uint3"                           shift, and go to state 233
    "uint4"                           shift, and go to state 234
    "float"                           shift, and go to state 235
    "float2"                          shift, and go to state 236
    "float3"                          shift, and go to state 237
    "float4"                          shift, and go to state 238
    "range"                           shift, and go to state 239
    "urange"                          shift, and go to state 240
    "range64"                         shift, and go to state 241
    "urange64"                        shift, and go to state 242
    "int64"                           shift, and go to state 244
    "uint64"                          shift, and go to state 245
    "double"                          shift, and go to state 246
    "int8"                            shift, and go to state 249
    "uint8"                           shift, and go to state 250
    "int16"                           shift, and go to state 251
    "uint16"                          shift, and go to state 252
    "tuple"                           shift, and go to state 426
    "variant"                         shift, and go to state 427
    "generator"                       shift, and go to state 428
    "++"                              shift, and go to state 429
    "--"                              shift, and go to state 430
    "::"                              shift, and go to state 55
    "$$"                              shift, and go to state 431
    "$i"                              shift, and go to state 432
    "$v"                              shift, and go to state 433
    "$b"                              shift, and go to state 434
    "$a"                              shift, and go to state 435
    "$c"                              shift, and go to state 436
    "..."                             shift, and go to state 437
    "integer constant"                shift, and go to state 438
    "long integer constant"           shift, and go to state 439
    "unsigned integer constant"       shift, and go to state 440
    "unsigned long integer constant"  shift, and go to state 441
    "unsigned int8 constant"          shift, and go to state 442
    "floating point constant"         shift, and go to state 443
    "double constant"                 shift, and go to state 444
    "name"                            shift, and go to state 56
    "start of the string"             shift, and go to state 445
    "begin of code block"             shift, and go to state 446
    '-'                               shift, and go to state 447
    '+'                               shift, and go to state 448
    '*'                               shift, and go to state 449
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 450
    '!'                               shift, and go to state 451
    '['                               shift, and go to state 452
    '('                               shift, and go to state 453
    '$'                               shift, and go to state 454
    '@'                               shift, and go to state 455

    string_builder          go to state 456
    expr_reader             go to state 457
    expr_call_pipe          go to state 458
    name_in_namespace       go to state 459
    expr_new                go to state 460
    expr_cast               go to state 461
    expr_type_decl          go to state 462
    expr_type_info          go to state 463
    block_or_lambda         go to state 464
    expr_full_block         go to state 465
    expr_numeric_const      go to state 466
    expr_named_call         go to state 467
    expr_method_call        go to state 468
    func_addr_expr          go to state 469
    expr_field              go to state 470
    expr_call               go to state 471
    expr                    go to state 493
    expr_mtag               go to state 473
    basic_type_declaration  go to state 474
    make_decl               go to state 475
    make_struct_decl        go to state 476
    make_tuple_call         go to state 477
    make_dim_decl           go to state 478
    make_table_decl         go to state 479
    array_comprehension     go to state 480


State 360

  628 type_declaration_no_options_no_dim: '$' name_in_namespace . '(' optional_expr_list ')'
  630                                   | '$' name_in_namespace . '<' $@39 type_declaration_no_options_list '>' '(' optional_expr_list ')'

    '<'  shift, and go to state 494
    '('  shift, and go to state 495


State 361

  633 type_declaration_no_options_no_dim: type_declaration_no_options_no_dim "const" .

    $default  reduce using rule 633 (type_declaration_no_options_no_dim)


State 362

  638 type_declaration_no_options_no_dim: type_declaration_no_options_no_dim "implicit" .

    $default  reduce using rule 638 (type_declaration_no_options_no_dim)


State 363

  632 type_declaration_no_options_no_dim: type_declaration_no_options_no_dim "explicit" .

    $default  reduce using rule 632 (type_declaration_no_options_no_dim)


State 364

  640 type_declaration_no_options_no_dim: type_declaration_no_options_no_dim "==" . "const"
  641                                   | type_declaration_no_options_no_dim "==" . '&'

    "const"  shift, and go to state 496
    '&'      shift, and go to state 497


State 365

  646 type_declaration_no_options_no_dim: type_declaration_no_options_no_dim "??" .

    $default  reduce using rule 646 (type_declaration_no_options_no_dim)


State 366

  635 type_declaration_no_options_no_dim: type_declaration_no_options_no_dim '&' .

    $default  reduce using rule 635 (type_declaration_no_options_no_dim)


State 367

  631 type_declaration_no_options_no_dim: type_declaration_no_options_no_dim '-' . '[' ']'
  634                                   | type_declaration_no_options_no_dim '-' . "const"
  636                                   | type_declaration_no_options_no_dim '-' . '&'
  639                                   | type_declaration_no_options_no_dim '-' . '#'

    "const"  shift, and go to state 498
    '&'      shift, and go to state 499
    '['      shift, and go to state 500
    '#'      shift, and go to state 501


State 368

  642 type_declaration_no_options_no_dim: type_declaration_no_options_no_dim '*' .

    $default  reduce using rule 642 (type_declaration_no_options_no_dim)


State 369

  614 dim_list: '[' . expr ']'
  615         | '[' . ']'

    "struct"                          shift, and go to state 408
    "class"                           shift, and go to state 409
    "true"                            shift, and go to state 410
    "false"                           shift, and go to state 411
    "new"                             shift, and go to state 412
    "typeinfo"                        shift, and go to state 413
    "type"                            shift, and go to state 414
    "array"                           shift, and go to state 415
    "null"                            shift, and go to state 416
    "table"                           shift, and go to state 417
    "deref"                           shift, and go to state 418
    "cast"                            shift, and go to state 419
    "upcast"                          shift, and go to state 420
    "addr"                            shift, and go to state 421
    "reinterpret"                     shift, and go to state 422
    "fixed_array"                     shift, and go to state 423
    "default"                         shift, and go to state 424
    "bool"                            shift, and go to state 222
    "void"                            shift, and go to state 223
    "string"                          shift, and go to state 224
    "int"                             shift, and go to state 226
    "int2"                            shift, and go to state 227
    "int3"                            shift, and go to state 228
    "int4"                            shift, and go to state 229
    "uint"                            shift, and go to state 230
    "bitfield"                        shift, and go to state 425
    "uint2"                           shift, and go to state 232
    "uint3"                           shift, and go to state 233
    "uint4"                           shift, and go to state 234
    "float"                           shift, and go to state 235
    "float2"                          shift, and go to state 236
    "float3"                          shift, and go to state 237
    "float4"                          shift, and go to state 238
    "range"                           shift, and go to state 239
    "urange"                          shift, and go to state 240
    "range64"                         shift, and go to state 241
    "urange64"                        shift, and go to state 242
    "int64"                           shift, and go to state 244
    "uint64"                          shift, and go to state 245
    "double"                          shift, and go to state 246
    "int8"                            shift, and go to state 249
    "uint8"                           shift, and go to state 250
    "int16"                           shift, and go to state 251
    "uint16"                          shift, and go to state 252
    "tuple"                           shift, and go to state 426
    "variant"                         shift, and go to state 427
    "generator"                       shift, and go to state 428
    "++"                              shift, and go to state 429
    "--"                              shift, and go to state 430
    "::"                              shift, and go to state 55
    "$$"                              shift, and go to state 431
    "$i"                              shift, and go to state 432
    "$v"                              shift, and go to state 433
    "$b"                              shift, and go to state 434
    "$a"                              shift, and go to state 435
    "$c"                              shift, and go to state 436
    "..."                             shift, and go to state 437
    "integer constant"                shift, and go to state 438
    "long integer constant"           shift, and go to state 439
    "unsigned integer constant"       shift, and go to state 440
    "unsigned long integer constant"  shift, and go to state 441
    "unsigned int8 constant"          shift, and go to state 442
    "floating point constant"         shift, and go to state 443
    "double constant"                 shift, and go to state 444
    "name"                            shift, and go to state 56
    "start of the string"             shift, and go to state 445
    "begin of code block"             shift, and go to state 446
    '-'                               shift, and go to state 447
    '+'                               shift, and go to state 448
    '*'                               shift, and go to state 449
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 450
    '!'                               shift, and go to state 451
    '['                               shift, and go to state 452
    ']'                               shift, and go to state 502
    '('                               shift, and go to state 453
    '$'                               shift, and go to state 454
    '@'                               shift, and go to state 455

    string_builder          go to state 456
    expr_reader             go to state 457
    expr_call_pipe          go to state 458
    name_in_namespace       go to state 459
    expr_new                go to state 460
    expr_cast               go to state 461
    expr_type_decl          go to state 462
    expr_type_info          go to state 463
    block_or_lambda         go to state 464
    expr_full_block         go to state 465
    expr_numeric_const      go to state 466
    expr_named_call         go to state 467
    expr_method_call        go to state 468
    func_addr_expr          go to state 469
    expr_field              go to state 470
    expr_call               go to state 471
    expr                    go to state 503
    expr_mtag               go to state 473
    basic_type_declaration  go to state 474
    make_decl               go to state 475
    make_struct_decl        go to state 476
    make_tuple_call         go to state 477
    make_dim_decl           go to state 478
    make_table_decl         go to state 479
    array_comprehension     go to state 480


State 370

  637 type_declaration_no_options_no_dim: type_declaration_no_options_no_dim '#' .

    $default  reduce using rule 637 (type_declaration_no_options_no_dim)


State 371

  616 dim_list: dim_list . '[' expr ']'
  617         | dim_list . '[' ']'
  619 type_declaration_no_options: type_declaration_no_options_no_dim dim_list .

    '['  shift, and go to state 504

    $default  reduce using rule 619 (type_declaration_no_options)


State 372

  684 type_declaration: type_declaration '|' . type_declaration_no_options
  685                 | type_declaration '|' . '#'

    "type"       shift, and go to state 216
    "array"      shift, and go to state 217
    "table"      shift, and go to state 218
    "typedecl"   shift, and go to state 219
    "iterator"   shift, and go to state 220
    "smart_ptr"  shift, and go to state 221
    "bool"       shift, and go to state 222
    "void"       shift, and go to state 223
    "string"     shift, and go to state 224
    "auto"       shift, and go to state 225
    "int"        shift, and go to state 226
    "int2"       shift, and go to state 227
    "int3"       shift, and go to state 228
    "int4"       shift, and go to state 229
    "uint"       shift, and go to state 230
    "bitfield"   shift, and go to state 231
    "uint2"      shift, and go to state 232
    "uint3"      shift, and go to state 233
    "uint4"      shift, and go to state 234
    "float"      shift, and go to state 235
    "float2"     shift, and go to state 236
    "float3"     shift, and go to state 237
    "float4"     shift, and go to state 238
    "range"      shift, and go to state 239
    "urange"     shift, and go to state 240
    "range64"    shift, and go to state 241
    "urange64"   shift, and go to state 242
    "block"      shift, and go to state 243
    "int64"      shift, and go to state 244
    "uint64"     shift, and go to state 245
    "double"     shift, and go to state 246
    "function"   shift, and go to state 247
    "lambda"     shift, and go to state 248
    "int8"       shift, and go to state 249
    "uint8"      shift, and go to state 250
    "int16"      shift, and go to state 251
    "uint16"     shift, and go to state 252
    "tuple"      shift, and go to state 253
    "variant"    shift, and go to state 254
    "::"         shift, and go to state 55
    "$t"         shift, and go to state 255
    "name"       shift, and go to state 56
    '$'          shift, and go to state 256
    '#'          shift, and go to state 505

    name_in_namespace                   go to state 257
    basic_type_declaration              go to state 258
    structure_type_declaration          go to state 259
    auto_type_declaration               go to state 260
    bitfield_type_declaration           go to state 261
    type_declaration_no_options         go to state 506
    type_declaration_no_options_no_dim  go to state 263


State 373

  607 bitfield_alias_bits: "name" .

    $default  reduce using rule 607 (bitfield_alias_bits)


State 374

  608 bitfield_alias_bits: bitfield_alias_bits . ',' "name"
  697 bitfield_alias_declaration: "bitfield" optional_public_or_private_alias "name" $@70 "begin of code block" $@71 bitfield_alias_bits . optional_comma $@72 "end of code block"

    ','  shift, and go to state 507

    $default  reduce using rule 760 (optional_comma)

    optional_comma  go to state 508


State 375

  486 tuple_alias_type_list: tuple_alias_type_list . "end of expression"
  487                      | tuple_alias_type_list . tuple_type "end of expression"
  689 tuple_alias_declaration: "tuple" optional_public_or_private_alias "name" $@64 "begin of code block" $@65 tuple_alias_type_list . $@66 "end of code block"

    "type"               shift, and go to state 216
    "array"              shift, and go to state 217
    "table"              shift, and go to state 218
    "typedecl"           shift, and go to state 219
    "iterator"           shift, and go to state 220
    "smart_ptr"          shift, and go to state 221
    "bool"               shift, and go to state 222
    "void"               shift, and go to state 223
    "string"             shift, and go to state 224
    "auto"               shift, and go to state 225
    "int"                shift, and go to state 226
    "int2"               shift, and go to state 227
    "int3"               shift, and go to state 228
    "int4"               shift, and go to state 229
    "uint"               shift, and go to state 230
    "bitfield"           shift, and go to state 231
    "uint2"              shift, and go to state 232
    "uint3"              shift, and go to state 233
    "uint4"              shift, and go to state 234
    "float"              shift, and go to state 235
    "float2"             shift, and go to state 236
    "float3"             shift, and go to state 237
    "float4"             shift, and go to state 238
    "range"              shift, and go to state 239
    "urange"             shift, and go to state 240
    "range64"            shift, and go to state 241
    "urange64"           shift, and go to state 242
    "block"              shift, and go to state 243
    "int64"              shift, and go to state 244
    "uint64"             shift, and go to state 245
    "double"             shift, and go to state 246
    "function"           shift, and go to state 247
    "lambda"             shift, and go to state 248
    "int8"               shift, and go to state 249
    "uint8"              shift, and go to state 250
    "int16"              shift, and go to state 251
    "uint16"             shift, and go to state 252
    "tuple"              shift, and go to state 253
    "variant"            shift, and go to state 254
    "::"                 shift, and go to state 55
    "$t"                 shift, and go to state 255
    "name"               shift, and go to state 509
    "end of expression"  shift, and go to state 510
    '$'                  shift, and go to state 256

    $default  reduce using rule 688 ($@66)

    name_in_namespace                   go to state 257
    tuple_type                          go to state 511
    basic_type_declaration              go to state 258
    structure_type_declaration          go to state 259
    auto_type_declaration               go to state 260
    bitfield_type_declaration           go to state 261
    type_declaration_no_options         go to state 262
    type_declaration_no_options_no_dim  go to state 263
    type_declaration                    go to state 512
    $@66                                go to state 513


State 376

  492 variant_alias_type_list: variant_alias_type_list . "end of expression"
  493                        | variant_alias_type_list . variant_type "end of expression"
  693 variant_alias_declaration: "variant" optional_public_or_private_alias "name" $@67 "begin of code block" $@68 variant_alias_type_list . $@69 "end of code block"

    "name"               shift, and go to state 514
    "end of expression"  shift, and go to state 515

    $default  reduce using rule 692 ($@69)

    variant_type  go to state 516
    $@69          go to state 517


State 377

  175 function_name: "operator" "is" "name" .

    $default  reduce using rule 175 (function_name)


State 378

  176 function_name: "operator" "as" "name" .

    $default  reduce using rule 176 (function_name)


State 379

  169 function_name: "operator" "?." "name" .

    $default  reduce using rule 169 (function_name)


State 380

  164 function_name: "operator" "?[" ']' .

    $default  reduce using rule 164 (function_name)


State 381

  177 function_name: "operator" '?' "as" .
  178              | "operator" '?' "as" . "name"

    "name"  shift, and go to state 518

    $default  reduce using rule 177 (function_name)


State 382

  167 function_name: "operator" '.' "name" .
  168              | "operator" '.' "name" . ":="

    ":="  shift, and go to state 519

    $default  reduce using rule 167 (function_name)


State 383

  163 function_name: "operator" '[' ']' .

    $default  reduce using rule 163 (function_name)


State 384

  478 function_argument_declaration: "$a" . '(' expr ')'

    '('  shift, and go to state 520


State 385

  115 optional_function_argument_list: '(' ')' .

    $default  reduce using rule 115 (optional_function_argument_list)


State 386

  477 function_argument_declaration: optional_field_annotation . kwd_let_var_or_nothing variable_declaration

    "let"  shift, and go to state 521
    "var"  shift, and go to state 522

    $default  reduce using rule 263 (kwd_let_var_or_nothing)

    kwd_let_var_or_nothing  go to state 523


State 387

  479 function_argument_list: function_argument_declaration .

    $default  reduce using rule 479 (function_argument_list)


State 388

  116 optional_function_argument_list: '(' function_argument_list . ')'
  480 function_argument_list: function_argument_list . "end of expression" function_argument_declaration

    "end of expression"  shift, and go to state 524
    ')'                  shift, and go to state 525


State 389

  118 optional_function_type: ':' . type_declaration

    "type"       shift, and go to state 216
    "array"      shift, and go to state 217
    "table"      shift, and go to state 218
    "typedecl"   shift, and go to state 219
    "iterator"   shift, and go to state 220
    "smart_ptr"  shift, and go to state 221
    "bool"       shift, and go to state 222
    "void"       shift, and go to state 223
    "string"     shift, and go to state 224
    "auto"       shift, and go to state 225
    "int"        shift, and go to state 226
    "int2"       shift, and go to state 227
    "int3"       shift, and go to state 228
    "int4"       shift, and go to state 229
    "uint"       shift, and go to state 230
    "bitfield"   shift, and go to state 231
    "uint2"      shift, and go to state 232
    "uint3"      shift, and go to state 233
    "uint4"      shift, and go to state 234
    "float"      shift, and go to state 235
    "float2"     shift, and go to state 236
    "float3"     shift, and go to state 237
    "float4"     shift, and go to state 238
    "range"      shift, and go to state 239
    "urange"     shift, and go to state 240
    "range64"    shift, and go to state 241
    "urange64"   shift, and go to state 242
    "block"      shift, and go to state 243
    "int64"      shift, and go to state 244
    "uint64"     shift, and go to state 245
    "double"     shift, and go to state 246
    "function"   shift, and go to state 247
    "lambda"     shift, and go to state 248
    "int8"       shift, and go to state 249
    "uint8"      shift, and go to state 250
    "int16"      shift, and go to state 251
    "uint16"     shift, and go to state 252
    "tuple"      shift, and go to state 253
    "variant"    shift, and go to state 254
    "::"         shift, and go to state 55
    "$t"         shift, and go to state 255
    "name"       shift, and go to state 56
    '$'          shift, and go to state 256

    name_in_namespace                   go to state 257
    basic_type_declaration              go to state 258
    structure_type_declaration          go to state 259
    auto_type_declaration               go to state 260
    bitfield_type_declaration           go to state 261
    type_declaration_no_options         go to state 262
    type_declaration_no_options_no_dim  go to state 263
    type_declaration                    go to state 526


State 390

  208 function_declaration_header: function_name optional_function_argument_list optional_function_type .

    $default  reduce using rule 208 (function_declaration_header)


State 391

  211 expression_block: "begin of code block" expressions . "end of code block"
  212                 | "begin of code block" expressions . "end of code block" "finally" "begin of code block" expressions "end of code block"
  233 expressions: expressions . expression_any
  234            | expressions . error

    error                             shift, and go to state 527
    "struct"                          shift, and go to state 408
    "class"                           shift, and go to state 409
    "let"                             shift, and go to state 3
    "while"                           shift, and go to state 528
    "if"                              shift, and go to state 529
    "static_if"                       shift, and go to state 530
    "for"                             shift, and go to state 531
    "true"                            shift, and go to state 410
    "false"                           shift, and go to state 411
    "new"                             shift, and go to state 412
    "typeinfo"                        shift, and go to state 413
    "type"                            shift, and go to state 414
    "array"                           shift, and go to state 415
    "return"                          shift, and go to state 532
    "null"                            shift, and go to state 416
    "break"                           shift, and go to state 533
    "try"                             shift, and go to state 534
    "table"                           shift, and go to state 417
    "delete"                          shift, and go to state 535
    "deref"                           shift, and go to state 418
    "with"                            shift, and go to state 536
    "assume"                          shift, and go to state 537
    "cast"                            shift, and go to state 419
    "upcast"                          shift, and go to state 420
    "var"                             shift, and go to state 8
    "addr"                            shift, and go to state 421
    "continue"                        shift, and go to state 538
    "pass"                            shift, and go to state 539
    "reinterpret"                     shift, and go to state 422
    "label"                           shift, and go to state 540
    "goto"                            shift, and go to state 541
    "unsafe"                          shift, and go to state 542
    "fixed_array"                     shift, and go to state 423
    "default"                         shift, and go to state 424
    "bool"                            shift, and go to state 222
    "void"                            shift, and go to state 223
    "string"                          shift, and go to state 224
    "int"                             shift, and go to state 226
    "int2"                            shift, and go to state 227
    "int3"                            shift, and go to state 228
    "int4"                            shift, and go to state 229
    "uint"                            shift, and go to state 230
    "bitfield"                        shift, and go to state 425
    "uint2"                           shift, and go to state 232
    "uint3"                           shift, and go to state 233
    "uint4"                           shift, and go to state 234
    "float"                           shift, and go to state 235
    "float2"                          shift, and go to state 236
    "float3"                          shift, and go to state 237
    "float4"                          shift, and go to state 238
    "range"                           shift, and go to state 239
    "urange"                          shift, and go to state 240
    "range64"                         shift, and go to state 241
    "urange64"                        shift, and go to state 242
    "int64"                           shift, and go to state 244
    "uint64"                          shift, and go to state 245
    "double"                          shift, and go to state 246
    "int8"                            shift, and go to state 249
    "uint8"                           shift, and go to state 250
    "int16"                           shift, and go to state 251
    "uint16"                          shift, and go to state 252
    "tuple"                           shift, and go to state 426
    "variant"                         shift, and go to state 427
    "generator"                       shift, and go to state 428
    "yield"                           shift, and go to state 543
    "++"                              shift, and go to state 429
    "--"                              shift, and go to state 430
    "::"                              shift, and go to state 55
    "$$"                              shift, and go to state 431
    "$i"                              shift, and go to state 432
    "$v"                              shift, and go to state 433
    "$b"                              shift, and go to state 434
    "$a"                              shift, and go to state 435
    "$c"                              shift, and go to state 436
    "..."                             shift, and go to state 437
    "integer constant"                shift, and go to state 438
    "long integer constant"           shift, and go to state 439
    "unsigned integer constant"       shift, and go to state 440
    "unsigned long integer constant"  shift, and go to state 441
    "unsigned int8 constant"          shift, and go to state 442
    "floating point constant"         shift, and go to state 443
    "double constant"                 shift, and go to state 444
    "name"                            shift, and go to state 56
    "start of the string"             shift, and go to state 445
    "begin of code block"             shift, and go to state 446
    "end of code block"               shift, and go to state 544
    "end of expression"               shift, and go to state 545
    '-'                               shift, and go to state 447
    '+'                               shift, and go to state 448
    '*'                               shift, and go to state 449
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 450
    '!'                               shift, and go to state 451
    '['                               shift, and go to state 452
    '('                               shift, and go to state 453
    '$'                               shift, and go to state 454
    '@'                               shift, and go to state 455

    string_builder            go to state 456
    expr_reader               go to state 457
    expression_label          go to state 546
    expression_goto           go to state 547
    if_or_static_if           go to state 548
    expression_if_one_liner   go to state 549
    expression_if_then_else   go to state 550
    expression_for_loop       go to state 551
    expression_unsafe         go to state 552
    expression_while_loop     go to state 553
    expression_with           go to state 554
    expression_with_alias     go to state 555
    expr_call_pipe            go to state 458
    expression_any            go to state 556
    name_in_namespace         go to state 459
    expression_delete         go to state 557
    expr_new                  go to state 460
    expression_break          go to state 558
    expression_continue       go to state 559
    expression_return         go to state 560
    expression_yield_no_pipe  go to state 561
    expression_yield          go to state 562
    expression_try_catch      go to state 563
    kwd_let                   go to state 564
    expression_let            go to state 565
    expr_cast                 go to state 461
    expr_type_decl            go to state 462
    expr_type_info            go to state 463
    block_or_lambda           go to state 464
    expr_full_block           go to state 465
    expr_numeric_const        go to state 466
    expr_assign               go to state 566
    expr_named_call           go to state 467
    expr_method_call          go to state 468
    func_addr_expr            go to state 469
    expr_field                go to state 470
    expr_call                 go to state 471
    expr                      go to state 567
    expr_mtag                 go to state 473
    basic_type_declaration    go to state 474
    make_decl                 go to state 475
    make_struct_decl          go to state 476
    make_tuple_call           go to state 477
    make_dim_decl             go to state 478
    make_table_decl           go to state 479
    array_comprehension       go to state 480


State 392

  544 enum_declaration: optional_annotation_list "enum" optional_public_or_private_enum enum_name optional_enum_basic_type_declaration "begin of code block" $@31 . enum_list optional_comma $@32 "end of code block"

    "name"  shift, and go to state 568

    $default  reduce using rule 527 (enum_list)

    enum_expression  go to state 569
    enum_list        go to state 570


State 393

  546 optional_structure_parent: ':' . name_in_namespace

    "::"    shift, and go to state 55
    "name"  shift, and go to state 56

    name_in_namespace  go to state 571


State 394

  549 structure_name: optional_sealed "name" optional_structure_parent .

    $default  reduce using rule 549 (structure_name)


State 395

  556 optional_struct_variable_declaration_list: "begin of code block" . struct_variable_declaration_list "end of code block"

    $default  reduce using rule 470 (struct_variable_declaration_list)

    struct_variable_declaration_list  go to state 572


State 396

  559 structure_declaration: optional_annotation_list class_or_struct optional_public_or_private_structure $@33 structure_name $@34 optional_struct_variable_declaration_list .

    $default  reduce using rule 559 (structure_declaration)


State 397

  516 global_variable_declaration_list: global_variable_declaration_list $@28 optional_field_annotation . let_variable_declaration

    "$i"    shift, and go to state 341
    "name"  shift, and go to state 342

    let_variable_name_with_pos_list  go to state 343
    let_variable_declaration         go to state 573


State 398

   97 metadata_argument_list: metadata_argument_list '@' annotation_argument .

    $default  reduce using rule 97 (metadata_argument_list)


State 399

  507 let_variable_name_with_pos_list: "$i" '(' . expr ')'

    "struct"                          shift, and go to state 408
    "class"                           shift, and go to state 409
    "true"                            shift, and go to state 410
    "false"                           shift, and go to state 411
    "new"                             shift, and go to state 412
    "typeinfo"                        shift, and go to state 413
    "type"                            shift, and go to state 414
    "array"                           shift, and go to state 415
    "null"                            shift, and go to state 416
    "table"                           shift, and go to state 417
    "deref"                           shift, and go to state 418
    "cast"                            shift, and go to state 419
    "upcast"                          shift, and go to state 420
    "addr"                            shift, and go to state 421
    "reinterpret"                     shift, and go to state 422
    "fixed_array"                     shift, and go to state 423
    "default"                         shift, and go to state 424
    "bool"                            shift, and go to state 222
    "void"                            shift, and go to state 223
    "string"                          shift, and go to state 224
    "int"                             shift, and go to state 226
    "int2"                            shift, and go to state 227
    "int3"                            shift, and go to state 228
    "int4"                            shift, and go to state 229
    "uint"                            shift, and go to state 230
    "bitfield"                        shift, and go to state 425
    "uint2"                           shift, and go to state 232
    "uint3"                           shift, and go to state 233
    "uint4"                           shift, and go to state 234
    "float"                           shift, and go to state 235
    "float2"                          shift, and go to state 236
    "float3"                          shift, and go to state 237
    "float4"                          shift, and go to state 238
    "range"                           shift, and go to state 239
    "urange"                          shift, and go to state 240
    "range64"                         shift, and go to state 241
    "urange64"                        shift, and go to state 242
    "int64"                           shift, and go to state 244
    "uint64"                          shift, and go to state 245
    "double"                          shift, and go to state 246
    "int8"                            shift, and go to state 249
    "uint8"                           shift, and go to state 250
    "int16"                           shift, and go to state 251
    "uint16"                          shift, and go to state 252
    "tuple"                           shift, and go to state 426
    "variant"                         shift, and go to state 427
    "generator"                       shift, and go to state 428
    "++"                              shift, and go to state 429
    "--"                              shift, and go to state 430
    "::"                              shift, and go to state 55
    "$$"                              shift, and go to state 431
    "$i"                              shift, and go to state 432
    "$v"                              shift, and go to state 433
    "$b"                              shift, and go to state 434
    "$a"                              shift, and go to state 435
    "$c"                              shift, and go to state 436
    "..."                             shift, and go to state 437
    "integer constant"                shift, and go to state 438
    "long integer constant"           shift, and go to state 439
    "unsigned integer constant"       shift, and go to state 440
    "unsigned long integer constant"  shift, and go to state 441
    "unsigned int8 constant"          shift, and go to state 442
    "floating point constant"         shift, and go to state 443
    "double constant"                 shift, and go to state 444
    "name"                            shift, and go to state 56
    "start of the string"             shift, and go to state 445
    "begin of code block"             shift, and go to state 446
    '-'                               shift, and go to state 447
    '+'                               shift, and go to state 448
    '*'                               shift, and go to state 449
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 450
    '!'                               shift, and go to state 451
    '['                               shift, and go to state 452
    '('                               shift, and go to state 453
    '$'                               shift, and go to state 454
    '@'                               shift, and go to state 455

    string_builder          go to state 456
    expr_reader             go to state 457
    expr_call_pipe          go to state 458
    name_in_namespace       go to state 459
    expr_new                go to state 460
    expr_cast               go to state 461
    expr_type_decl          go to state 462
    expr_type_info          go to state 463
    block_or_lambda         go to state 464
    expr_full_block         go to state 465
    expr_numeric_const      go to state 466
    expr_named_call         go to state 467
    expr_method_call        go to state 468
    func_addr_expr          go to state 469
    expr_field              go to state 470
    expr_call               go to state 471
    expr                    go to state 574
    expr_mtag               go to state 473
    basic_type_declaration  go to state 474
    make_decl               go to state 475
    make_struct_decl        go to state 476
    make_tuple_call         go to state 477
    make_dim_decl           go to state 478
    make_table_decl         go to state 479
    array_comprehension     go to state 480


State 400

  508 let_variable_name_with_pos_list: "name" "aka" . "name"

    "name"  shift, and go to state 575


State 401

  509 let_variable_name_with_pos_list: let_variable_name_with_pos_list ',' . "name"
  510                                | let_variable_name_with_pos_list ',' . "name" "aka" "name"

    "name"  shift, and go to state 576


State 402

  511 let_variable_declaration: let_variable_name_with_pos_list ':' . type_declaration_no_options "end of expression"
  512                         | let_variable_name_with_pos_list ':' . type_declaration_no_options copy_or_move_or_clone expr "end of expression"

    "type"       shift, and go to state 216
    "array"      shift, and go to state 217
    "table"      shift, and go to state 218
    "typedecl"   shift, and go to state 219
    "iterator"   shift, and go to state 220
    "smart_ptr"  shift, and go to state 221
    "bool"       shift, and go to state 222
    "void"       shift, and go to state 223
    "string"     shift, and go to state 224
    "auto"       shift, and go to state 225
    "int"        shift, and go to state 226
    "int2"       shift, and go to state 227
    "int3"       shift, and go to state 228
    "int4"       shift, and go to state 229
    "uint"       shift, and go to state 230
    "bitfield"   shift, and go to state 231
    "uint2"      shift, and go to state 232
    "uint3"      shift, and go to state 233
    "uint4"      shift, and go to state 234
    "float"      shift, and go to state 235
    "float2"     shift, and go to state 236
    "float3"     shift, and go to state 237
    "float4"     shift, and go to state 238
    "range"      shift, and go to state 239
    "urange"     shift, and go to state 240
    "range64"    shift, and go to state 241
    "urange64"   shift, and go to state 242
    "block"      shift, and go to state 243
    "int64"      shift, and go to state 244
    "uint64"     shift, and go to state 245
    "double"     shift, and go to state 246
    "function"   shift, and go to state 247
    "lambda"     shift, and go to state 248
    "int8"       shift, and go to state 249
    "uint8"      shift, and go to state 250
    "int16"      shift, and go to state 251
    "uint16"     shift, and go to state 252
    "tuple"      shift, and go to state 253
    "variant"    shift, and go to state 254
    "::"         shift, and go to state 55
    "$t"         shift, and go to state 255
    "name"       shift, and go to state 56
    '$'          shift, and go to state 256

    name_in_namespace                   go to state 257
    basic_type_declaration              go to state 258
    structure_type_declaration          go to state 259
    auto_type_declaration               go to state 260
    bitfield_type_declaration           go to state 261
    type_declaration_no_options         go to state 577
    type_declaration_no_options_no_dim  go to state 263


State 403

  505 optional_ref: '&' .

    $default  reduce using rule 505 (optional_ref)


State 404

  513 let_variable_declaration: let_variable_name_with_pos_list optional_ref . copy_or_move_or_clone expr "end of expression"

    "<-"  shift, and go to state 578
    ":="  shift, and go to state 579
    '='   shift, and go to state 580

    copy_or_move_or_clone  go to state 581


State 405

  626 type_declaration_no_options_no_dim: "type" '<' $@37 . type_declaration '>' $@38

    "type"       shift, and go to state 216
    "array"      shift, and go to state 217
    "table"      shift, and go to state 218
    "typedecl"   shift, and go to state 219
    "iterator"   shift, and go to state 220
    "smart_ptr"  shift, and go to state 221
    "bool"       shift, and go to state 222
    "void"       shift, and go to state 223
    "string"     shift, and go to state 224
    "auto"       shift, and go to state 225
    "int"        shift, and go to state 226
    "int2"       shift, and go to state 227
    "int3"       shift, and go to state 228
    "int4"       shift, and go to state 229
    "uint"       shift, and go to state 230
    "bitfield"   shift, and go to state 231
    "uint2"      shift, and go to state 232
    "uint3"      shift, and go to state 233
    "uint4"      shift, and go to state 234
    "float"      shift, and go to state 235
    "float2"     shift, and go to state 236
    "float3"     shift, and go to state 237
    "float4"     shift, and go to state 238
    "range"      shift, and go to state 239
    "urange"     shift, and go to state 240
    "range64"    shift, and go to state 241
    "urange64"   shift, and go to state 242
    "block"      shift, and go to state 243
    "int64"      shift, and go to state 244
    "uint64"     shift, and go to state 245
    "double"     shift, and go to state 246
    "function"   shift, and go to state 247
    "lambda"     shift, and go to state 248
    "int8"       shift, and go to state 249
    "uint8"      shift, and go to state 250
    "int16"      shift, and go to state 251
    "uint16"     shift, and go to state 252
    "tuple"      shift, and go to state 253
    "variant"    shift, and go to state 254
    "::"         shift, and go to state 55
    "$t"         shift, and go to state 255
    "name"       shift, and go to state 56
    '$'          shift, and go to state 256

    name_in_namespace                   go to state 257
    basic_type_declaration              go to state 258
    structure_type_declaration          go to state 259
    auto_type_declaration               go to state 260
    bitfield_type_declaration           go to state 261
    type_declaration_no_options         go to state 262
    type_declaration_no_options_no_dim  go to state 263
    type_declaration                    go to state 582


State 406

  649 type_declaration_no_options_no_dim: "array" '<' $@42 . type_declaration '>' $@43

    "type"       shift, and go to state 216
    "array"      shift, and go to state 217
    "table"      shift, and go to state 218
    "typedecl"   shift, and go to state 219
    "iterator"   shift, and go to state 220
    "smart_ptr"  shift, and go to state 221
    "bool"       shift, and go to state 222
    "void"       shift, and go to state 223
    "string"     shift, and go to state 224
    "auto"       shift, and go to state 225
    "int"        shift, and go to state 226
    "int2"       shift, and go to state 227
    "int3"       shift, and go to state 228
    "int4"       shift, and go to state 229
    "uint"       shift, and go to state 230
    "bitfield"   shift, and go to state 231
    "uint2"      shift, and go to state 232
    "uint3"      shift, and go to state 233
    "uint4"      shift, and go to state 234
    "float"      shift, and go to state 235
    "float2"     shift, and go to state 236
    "float3"     shift, and go to state 237
    "float4"     shift, and go to state 238
    "range"      shift, and go to state 239
    "urange"     shift, and go to state 240
    "range64"    shift, and go to state 241
    "urange64"   shift, and go to state 242
    "block"      shift, and go to state 243
    "int64"      shift, and go to state 244
    "uint64"     shift, and go to state 245
    "double"     shift, and go to state 246
    "function"   shift, and go to state 247
    "lambda"     shift, and go to state 248
    "int8"       shift, and go to state 249
    "uint8"      shift, and go to state 250
    "int16"      shift, and go to state 251
    "uint16"     shift, and go to state 252
    "tuple"      shift, and go to state 253
    "variant"    shift, and go to state 254
    "::"         shift, and go to state 55
    "$t"         shift, and go to state 255
    "name"       shift, and go to state 56
    '$'          shift, and go to state 256

    name_in_namespace                   go to state 257
    basic_type_declaration              go to state 258
    structure_type_declaration          go to state 259
    auto_type_declaration               go to state 260
    bitfield_type_declaration           go to state 261
    type_declaration_no_options         go to state 262
    type_declaration_no_options_no_dim  go to state 263
    type_declaration                    go to state 583


State 407

  652 type_declaration_no_options_no_dim: "table" '<' $@44 . table_type_pair '>' $@45

    "type"       shift, and go to state 216
    "array"      shift, and go to state 217
    "table"      shift, and go to state 218
    "typedecl"   shift, and go to state 219
    "iterator"   shift, and go to state 220
    "smart_ptr"  shift, and go to state 221
    "bool"       shift, and go to state 222
    "void"       shift, and go to state 223
    "string"     shift, and go to state 224
    "auto"       shift, and go to state 225
    "int"        shift, and go to state 226
    "int2"       shift, and go to state 227
    "int3"       shift, and go to state 228
    "int4"       shift, and go to state 229
    "uint"       shift, and go to state 230
    "bitfield"   shift, and go to state 231
    "uint2"      shift, and go to state 232
    "uint3"      shift, and go to state 233
    "uint4"      shift, and go to state 234
    "float"      shift, and go to state 235
    "float2"     shift, and go to state 236
    "float3"     shift, and go to state 237
    "float4"     shift, and go to state 238
    "range"      shift, and go to state 239
    "urange"     shift, and go to state 240
    "range64"    shift, and go to state 241
    "urange64"   shift, and go to state 242
    "block"      shift, and go to state 243
    "int64"      shift, and go to state 244
    "uint64"     shift, and go to state 245
    "double"     shift, and go to state 246
    "function"   shift, and go to state 247
    "lambda"     shift, and go to state 248
    "int8"       shift, and go to state 249
    "uint8"      shift, and go to state 250
    "int16"      shift, and go to state 251
    "uint16"     shift, and go to state 252
    "tuple"      shift, and go to state 253
    "variant"    shift, and go to state 254
    "::"         shift, and go to state 55
    "$t"         shift, and go to state 255
    "name"       shift, and go to state 56
    '$'          shift, and go to state 256

    name_in_namespace                   go to state 257
    basic_type_declaration              go to state 258
    structure_type_declaration          go to state 259
    auto_type_declaration               go to state 260
    bitfield_type_declaration           go to state 261
    table_type_pair                     go to state 584
    type_declaration_no_options         go to state 262
    type_declaration_no_options_no_dim  go to state 263
    type_declaration                    go to state 585


State 408

  718 make_struct_decl: "struct" . '<' $@73 type_declaration_no_options '>' $@74 '(' use_initializer make_struct_dim ')'

    '<'  shift, and go to state 586


State 409

  721 make_struct_decl: "class" . '<' $@75 type_declaration_no_options '>' $@76 '(' use_initializer make_struct_dim ')'

    '<'  shift, and go to state 587


State 410

  365 expr: "true" .

    $default  reduce using rule 365 (expr)


State 411

  366 expr: "false" .

    $default  reduce using rule 366 (expr)


State 412

  247 expr_new: "new" . structure_type_declaration
  248         | "new" . structure_type_declaration '(' optional_expr_list ')'
  249         | "new" . new_type_declaration '(' use_initializer ')'
  250         | "new" . new_type_declaration '(' use_initializer make_struct_single ')'
  251         | "new" . make_decl

    "struct"               shift, and go to state 408
    "class"                shift, and go to state 409
    "array"                shift, and go to state 415
    "table"                shift, and go to state 417
    "fixed_array"          shift, and go to state 423
    "default"              shift, and go to state 424
    "tuple"                shift, and go to state 426
    "variant"              shift, and go to state 427
    "::"                   shift, and go to state 55
    "name"                 shift, and go to state 56
    "begin of code block"  shift, and go to state 446
    '<'                    shift, and go to state 588
    '['                    shift, and go to state 452

    name_in_namespace           go to state 257
    new_type_declaration        go to state 589
    structure_type_declaration  go to state 590
    make_decl                   go to state 591
    make_struct_decl            go to state 476
    make_tuple_call             go to state 477
    make_dim_decl               go to state 478
    make_table_decl             go to state 479
    array_comprehension         go to state 480


State 413

  286 expr_type_info: "typeinfo" . '(' name_in_namespace expr ')'
  287               | "typeinfo" . '(' name_in_namespace '<' "name" '>' expr ')'
  288               | "typeinfo" . '(' name_in_namespace '<' "name" "end of expression" "name" '>' expr ')'

    '('  shift, and go to state 592


State 414

  285 expr_type_decl: "type" . '<' $@11 type_declaration '>' $@12

    '<'  shift, and go to state 593


State 415

  737 make_dim_decl: "array" . "struct" '<' $@83 type_declaration_no_options '>' $@84 '(' use_initializer make_struct_dim ')'
  740              | "array" . "tuple" '<' $@85 type_declaration_no_options '>' $@86 '(' use_initializer make_struct_dim ')'
  743              | "array" . "variant" '<' $@87 type_declaration_no_options '>' $@88 '(' make_struct_dim ')'
  744              | "array" . '(' expr_list optional_comma ')'
  747              | "array" . '<' $@89 type_declaration_no_options '>' $@90 '(' expr_list optional_comma ')'

    "struct"   shift, and go to state 594
    "tuple"    shift, and go to state 595
    "variant"  shift, and go to state 596
    '<'        shift, and go to state 597
    '('        shift, and go to state 598


State 416

  359 expr: "null" .

    $default  reduce using rule 359 (expr)


State 417

  755 make_table_decl: "table" . '(' expr_map_tuple_list optional_comma ')'
  756                | "table" . '<' type_declaration_no_options '>' '(' expr_map_tuple_list optional_comma ')'
  757                | "table" . '<' type_declaration_no_options "end of expression" type_declaration_no_options '>' '(' expr_map_tuple_list optional_comma ')'

    '<'  shift, and go to state 599
    '('  shift, and go to state 600


State 418

  409 expr: "deref" . '(' expr ')'

    '('  shift, and go to state 601


State 419

  276 expr_cast: "cast" . '<' $@5 type_declaration_no_options '>' $@6 expr

    '<'  shift, and go to state 602


State 420

  279 expr_cast: "upcast" . '<' $@7 type_declaration_no_options '>' $@8 expr

    '<'  shift, and go to state 603


State 421

  410 expr: "addr" . '(' expr ')'

    '('  shift, and go to state 604


State 422

  282 expr_cast: "reinterpret" . '<' $@9 type_declaration_no_options '>' $@10 expr

    '<'  shift, and go to state 605


State 423

  748 make_dim_decl: "fixed_array" . '(' expr_list optional_comma ')'
  751              | "fixed_array" . '<' $@91 type_declaration_no_options '>' $@92 '(' expr_list optional_comma ')'

    '<'  shift, and go to state 606
    '('  shift, and go to state 607


State 424

  727 make_struct_decl: "default" . '<' $@79 type_declaration_no_options '>' $@80 use_initializer

    '<'  shift, and go to state 608


State 425

  591 basic_type_declaration: "bitfield" .

    $default  reduce using rule 591 (basic_type_declaration)


State 426

  730 make_tuple_call: "tuple" . '(' expr_list optional_comma ')'
  733                | "tuple" . '<' $@81 type_declaration_no_options '>' $@82 '(' use_initializer make_struct_dim ')'

    '<'  shift, and go to state 609
    '('  shift, and go to state 610


State 427

  724 make_struct_decl: "variant" . '<' $@77 type_declaration_no_options '>' $@78 '(' make_struct_dim ')'

    '<'  shift, and go to state 611


State 428

  411 expr: "generator" . '<' type_declaration_no_options '>' optional_capture_list '(' ')'
  412     | "generator" . '<' type_declaration_no_options '>' optional_capture_list '(' expr ')'

    '<'  shift, and go to state 612


State 429

  395 expr: "++" . expr

    "struct"                          shift, and go to state 408
    "class"                           shift, and go to state 409
    "true"                            shift, and go to state 410
    "false"                           shift, and go to state 411
    "new"                             shift, and go to state 412
    "typeinfo"                        shift, and go to state 413
    "type"                            shift, and go to state 414
    "array"                           shift, and go to state 415
    "null"                            shift, and go to state 416
    "table"                           shift, and go to state 417
    "deref"                           shift, and go to state 418
    "cast"                            shift, and go to state 419
    "upcast"                          shift, and go to state 420
    "addr"                            shift, and go to state 421
    "reinterpret"                     shift, and go to state 422
    "fixed_array"                     shift, and go to state 423
    "default"                         shift, and go to state 424
    "bool"                            shift, and go to state 222
    "void"                            shift, and go to state 223
    "string"                          shift, and go to state 224
    "int"                             shift, and go to state 226
    "int2"                            shift, and go to state 227
    "int3"                            shift, and go to state 228
    "int4"                            shift, and go to state 229
    "uint"                            shift, and go to state 230
    "bitfield"                        shift, and go to state 425
    "uint2"                           shift, and go to state 232
    "uint3"                           shift, and go to state 233
    "uint4"                           shift, and go to state 234
    "float"                           shift, and go to state 235
    "float2"                          shift, and go to state 236
    "float3"                          shift, and go to state 237
    "float4"                          shift, and go to state 238
    "range"                           shift, and go to state 239
    "urange"                          shift, and go to state 240
    "range64"                         shift, and go to state 241
    "urange64"                        shift, and go to state 242
    "int64"                           shift, and go to state 244
    "uint64"                          shift, and go to state 245
    "double"                          shift, and go to state 246
    "int8"                            shift, and go to state 249
    "uint8"                           shift, and go to state 250
    "int16"                           shift, and go to state 251
    "uint16"                          shift, and go to state 252
    "tuple"                           shift, and go to state 426
    "variant"                         shift, and go to state 427
    "generator"                       shift, and go to state 428
    "++"                              shift, and go to state 429
    "--"                              shift, and go to state 430
    "::"                              shift, and go to state 55
    "$$"                              shift, and go to state 431
    "$i"                              shift, and go to state 432
    "$v"                              shift, and go to state 433
    "$b"                              shift, and go to state 434
    "$a"                              shift, and go to state 435
    "$c"                              shift, and go to state 436
    "..."                             shift, and go to state 437
    "integer constant"                shift, and go to state 438
    "long integer constant"           shift, and go to state 439
    "unsigned integer constant"       shift, and go to state 440
    "unsigned long integer constant"  shift, and go to state 441
    "unsigned int8 constant"          shift, and go to state 442
    "floating point constant"         shift, and go to state 443
    "double constant"                 shift, and go to state 444
    "name"                            shift, and go to state 56
    "start of the string"             shift, and go to state 445
    "begin of code block"             shift, and go to state 446
    '-'                               shift, and go to state 447
    '+'                               shift, and go to state 448
    '*'                               shift, and go to state 449
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 450
    '!'                               shift, and go to state 451
    '['                               shift, and go to state 452
    '('                               shift, and go to state 453
    '$'                               shift, and go to state 454
    '@'                               shift, and go to state 455

    string_builder          go to state 456
    expr_reader             go to state 457
    expr_call_pipe          go to state 458
    name_in_namespace       go to state 459
    expr_new                go to state 460
    expr_cast               go to state 461
    expr_type_decl          go to state 462
    expr_type_info          go to state 463
    block_or_lambda         go to state 464
    expr_full_block         go to state 465
    expr_numeric_const      go to state 466
    expr_named_call         go to state 467
    expr_method_call        go to state 468
    func_addr_expr          go to state 469
    expr_field              go to state 470
    expr_call               go to state 471
    expr                    go to state 613
    expr_mtag               go to state 473
    basic_type_declaration  go to state 474
    make_decl               go to state 475
    make_struct_decl        go to state 476
    make_tuple_call         go to state 477
    make_dim_decl           go to state 478
    make_table_decl         go to state 479
    array_comprehension     go to state 480


State 430

  396 expr: "--" . expr

    "struct"                          shift, and go to state 408
    "class"                           shift, and go to state 409
    "true"                            shift, and go to state 410
    "false"                           shift, and go to state 411
    "new"                             shift, and go to state 412
    "typeinfo"                        shift, and go to state 413
    "type"                            shift, and go to state 414
    "array"                           shift, and go to state 415
    "null"                            shift, and go to state 416
    "table"                           shift, and go to state 417
    "deref"                           shift, and go to state 418
    "cast"                            shift, and go to state 419
    "upcast"                          shift, and go to state 420
    "addr"                            shift, and go to state 421
    "reinterpret"                     shift, and go to state 422
    "fixed_array"                     shift, and go to state 423
    "default"                         shift, and go to state 424
    "bool"                            shift, and go to state 222
    "void"                            shift, and go to state 223
    "string"                          shift, and go to state 224
    "int"                             shift, and go to state 226
    "int2"                            shift, and go to state 227
    "int3"                            shift, and go to state 228
    "int4"                            shift, and go to state 229
    "uint"                            shift, and go to state 230
    "bitfield"                        shift, and go to state 425
    "uint2"                           shift, and go to state 232
    "uint3"                           shift, and go to state 233
    "uint4"                           shift, and go to state 234
    "float"                           shift, and go to state 235
    "float2"                          shift, and go to state 236
    "float3"                          shift, and go to state 237
    "float4"                          shift, and go to state 238
    "range"                           shift, and go to state 239
    "urange"                          shift, and go to state 240
    "range64"                         shift, and go to state 241
    "urange64"                        shift, and go to state 242
    "int64"                           shift, and go to state 244
    "uint64"                          shift, and go to state 245
    "double"                          shift, and go to state 246
    "int8"                            shift, and go to state 249
    "uint8"                           shift, and go to state 250
    "int16"                           shift, and go to state 251
    "uint16"                          shift, and go to state 252
    "tuple"                           shift, and go to state 426
    "variant"                         shift, and go to state 427
    "generator"                       shift, and go to state 428
    "++"                              shift, and go to state 429
    "--"                              shift, and go to state 430
    "::"                              shift, and go to state 55
    "$$"                              shift, and go to state 431
    "$i"                              shift, and go to state 432
    "$v"                              shift, and go to state 433
    "$b"                              shift, and go to state 434
    "$a"                              shift, and go to state 435
    "$c"                              shift, and go to state 436
    "..."                             shift, and go to state 437
    "integer constant"                shift, and go to state 438
    "long integer constant"           shift, and go to state 439
    "unsigned integer constant"       shift, and go to state 440
    "unsigned long integer constant"  shift, and go to state 441
    "unsigned int8 constant"          shift, and go to state 442
    "floating point constant"         shift, and go to state 443
    "double constant"                 shift, and go to state 444
    "name"                            shift, and go to state 56
    "start of the string"             shift, and go to state 445
    "begin of code block"             shift, and go to state 446
    '-'                               shift, and go to state 447
    '+'                               shift, and go to state 448
    '*'                               shift, and go to state 449
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 450
    '!'                               shift, and go to state 451
    '['                               shift, and go to state 452
    '('                               shift, and go to state 453
    '$'                               shift, and go to state 454
    '@'                               shift, and go to state 455

    string_builder          go to state 456
    expr_reader             go to state 457
    expr_call_pipe          go to state 458
    name_in_namespace       go to state 459
    expr_new                go to state 460
    expr_cast               go to state 461
    expr_type_decl          go to state 462
    expr_type_info          go to state 463
    block_or_lambda         go to state 464
    expr_full_block         go to state 465
    expr_numeric_const      go to state 466
    expr_named_call         go to state 467
    expr_method_call        go to state 468
    func_addr_expr          go to state 469
    expr_field              go to state 470
    expr_call               go to state 471
    expr                    go to state 614
    expr_mtag               go to state 473
    basic_type_declaration  go to state 474
    make_decl               go to state 475
    make_struct_decl        go to state 476
    make_tuple_call         go to state 477
    make_dim_decl           go to state 478
    make_table_decl         go to state 479
    array_comprehension     go to state 480


State 431

  441 expr_mtag: "$$" . '(' expr ')'

    '('  shift, and go to state 615


State 432

  442 expr_mtag: "$i" . '(' expr ')'

    '('  shift, and go to state 616


State 433

  443 expr_mtag: "$v" . '(' expr ')'

    '('  shift, and go to state 617


State 434

  444 expr_mtag: "$b" . '(' expr ')'

    '('  shift, and go to state 618


State 435

  445 expr_mtag: "$a" . '(' expr ')'

    '('  shift, and go to state 619


State 436

  447 expr_mtag: "$c" . '(' expr ')' '(' ')'
  448          | "$c" . '(' expr ')' '(' expr_list ')'

    '('  shift, and go to state 620


State 437

  446 expr_mtag: "..." .

    $default  reduce using rule 446 (expr_mtag)


State 438

  308 expr_numeric_const: "integer constant" .

    $default  reduce using rule 308 (expr_numeric_const)


State 439

  310 expr_numeric_const: "long integer constant" .

    $default  reduce using rule 310 (expr_numeric_const)


State 440

  309 expr_numeric_const: "unsigned integer constant" .

    $default  reduce using rule 309 (expr_numeric_const)


State 441

  311 expr_numeric_const: "unsigned long integer constant" .

    $default  reduce using rule 311 (expr_numeric_const)


State 442

  312 expr_numeric_const: "unsigned int8 constant" .

    $default  reduce using rule 312 (expr_numeric_const)


State 443

  313 expr_numeric_const: "floating point constant" .

    $default  reduce using rule 313 (expr_numeric_const)


State 444

  314 expr_numeric_const: "double constant" .

    $default  reduce using rule 314 (expr_numeric_const)


State 445

   31 string_builder: "start of the string" . string_builder_body "end of the string"

    $default  reduce using rule 28 (string_builder_body)

    string_builder_body  go to state 621


State 446

  754 make_table_decl: "begin of code block" . expr_map_tuple_list optional_comma "end of code block"
  764 array_comprehension: "begin of code block" . "for" variable_name_with_pos_list "in" expr_list "end of expression" make_map_tuple array_comprehension_where "end of code block"

    "struct"                          shift, and go to state 408
    "class"                           shift, and go to state 409
    "for"                             shift, and go to state 622
    "true"                            shift, and go to state 410
    "false"                           shift, and go to state 411
    "new"                             shift, and go to state 412
    "typeinfo"                        shift, and go to state 413
    "type"                            shift, and go to state 414
    "array"                           shift, and go to state 415
    "null"                            shift, and go to state 416
    "table"                           shift, and go to state 417
    "deref"                           shift, and go to state 418
    "cast"                            shift, and go to state 419
    "upcast"                          shift, and go to state 420
    "addr"                            shift, and go to state 421
    "reinterpret"                     shift, and go to state 422
    "fixed_array"                     shift, and go to state 423
    "default"                         shift, and go to state 424
    "bool"                            shift, and go to state 222
    "void"                            shift, and go to state 223
    "string"                          shift, and go to state 224
    "int"                             shift, and go to state 226
    "int2"                            shift, and go to state 227
    "int3"                            shift, and go to state 228
    "int4"                            shift, and go to state 229
    "uint"                            shift, and go to state 230
    "bitfield"                        shift, and go to state 425
    "uint2"                           shift, and go to state 232
    "uint3"                           shift, and go to state 233
    "uint4"                           shift, and go to state 234
    "float"                           shift, and go to state 235
    "float2"                          shift, and go to state 236
    "float3"                          shift, and go to state 237
    "float4"                          shift, and go to state 238
    "range"                           shift, and go to state 239
    "urange"                          shift, and go to state 240
    "range64"                         shift, and go to state 241
    "urange64"                        shift, and go to state 242
    "int64"                           shift, and go to state 244
    "uint64"                          shift, and go to state 245
    "double"                          shift, and go to state 246
    "int8"                            shift, and go to state 249
    "uint8"                           shift, and go to state 250
    "int16"                           shift, and go to state 251
    "uint16"                          shift, and go to state 252
    "tuple"                           shift, and go to state 426
    "variant"                         shift, and go to state 427
    "generator"                       shift, and go to state 428
    "++"                              shift, and go to state 429
    "--"                              shift, and go to state 430
    "::"                              shift, and go to state 55
    "$$"                              shift, and go to state 431
    "$i"                              shift, and go to state 432
    "$v"                              shift, and go to state 433
    "$b"                              shift, and go to state 434
    "$a"                              shift, and go to state 435
    "$c"                              shift, and go to state 436
    "..."                             shift, and go to state 437
    "integer constant"                shift, and go to state 438
    "long integer constant"           shift, and go to state 439
    "unsigned integer constant"       shift, and go to state 440
    "unsigned long integer constant"  shift, and go to state 441
    "unsigned int8 constant"          shift, and go to state 442
    "floating point constant"         shift, and go to state 443
    "double constant"                 shift, and go to state 444
    "name"                            shift, and go to state 56
    "start of the string"             shift, and go to state 445
    "begin of code block"             shift, and go to state 446
    '-'                               shift, and go to state 447
    '+'                               shift, and go to state 448
    '*'                               shift, and go to state 449
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 450
    '!'                               shift, and go to state 451
    '['                               shift, and go to state 452
    '('                               shift, and go to state 453
    '$'                               shift, and go to state 454
    '@'                               shift, and go to state 455

    string_builder          go to state 456
    expr_reader             go to state 457
    expr_call_pipe          go to state 458
    name_in_namespace       go to state 459
    expr_new                go to state 460
    expr_cast               go to state 461
    expr_type_decl          go to state 462
    expr_type_info          go to state 463
    block_or_lambda         go to state 464
    expr_full_block         go to state 465
    expr_numeric_const      go to state 466
    expr_named_call         go to state 467
    expr_method_call        go to state 468
    func_addr_expr          go to state 469
    expr_field              go to state 470
    expr_call               go to state 471
    expr                    go to state 623
    expr_mtag               go to state 473
    basic_type_declaration  go to state 474
    make_decl               go to state 475
    make_struct_decl        go to state 476
    make_map_tuple          go to state 624
    make_tuple_call         go to state 477
    make_dim_decl           go to state 478
    expr_map_tuple_list     go to state 625
    make_table_decl         go to state 479
    array_comprehension     go to state 480


State 447

  372 expr: '-' . expr

    "struct"                          shift, and go to state 408
    "class"                           shift, and go to state 409
    "true"                            shift, and go to state 410
    "false"                           shift, and go to state 411
    "new"                             shift, and go to state 412
    "typeinfo"                        shift, and go to state 413
    "type"                            shift, and go to state 414
    "array"                           shift, and go to state 415
    "null"                            shift, and go to state 416
    "table"                           shift, and go to state 417
    "deref"                           shift, and go to state 418
    "cast"                            shift, and go to state 419
    "upcast"                          shift, and go to state 420
    "addr"                            shift, and go to state 421
    "reinterpret"                     shift, and go to state 422
    "fixed_array"                     shift, and go to state 423
    "default"                         shift, and go to state 424
    "bool"                            shift, and go to state 222
    "void"                            shift, and go to state 223
    "string"                          shift, and go to state 224
    "int"                             shift, and go to state 226
    "int2"                            shift, and go to state 227
    "int3"                            shift, and go to state 228
    "int4"                            shift, and go to state 229
    "uint"                            shift, and go to state 230
    "bitfield"                        shift, and go to state 425
    "uint2"                           shift, and go to state 232
    "uint3"                           shift, and go to state 233
    "uint4"                           shift, and go to state 234
    "float"                           shift, and go to state 235
    "float2"                          shift, and go to state 236
    "float3"                          shift, and go to state 237
    "float4"                          shift, and go to state 238
    "range"                           shift, and go to state 239
    "urange"                          shift, and go to state 240
    "range64"                         shift, and go to state 241
    "urange64"                        shift, and go to state 242
    "int64"                           shift, and go to state 244
    "uint64"                          shift, and go to state 245
    "double"                          shift, and go to state 246
    "int8"                            shift, and go to state 249
    "uint8"                           shift, and go to state 250
    "int16"                           shift, and go to state 251
    "uint16"                          shift, and go to state 252
    "tuple"                           shift, and go to state 426
    "variant"                         shift, and go to state 427
    "generator"                       shift, and go to state 428
    "++"                              shift, and go to state 429
    "--"                              shift, and go to state 430
    "::"                              shift, and go to state 55
    "$$"                              shift, and go to state 431
    "$i"                              shift, and go to state 432
    "$v"                              shift, and go to state 433
    "$b"                              shift, and go to state 434
    "$a"                              shift, and go to state 435
    "$c"                              shift, and go to state 436
    "..."                             shift, and go to state 437
    "integer constant"                shift, and go to state 438
    "long integer constant"           shift, and go to state 439
    "unsigned integer constant"       shift, and go to state 440
    "unsigned long integer constant"  shift, and go to state 441
    "unsigned int8 constant"          shift, and go to state 442
    "floating point constant"         shift, and go to state 443
    "double constant"                 shift, and go to state 444
    "name"                            shift, and go to state 56
    "start of the string"             shift, and go to state 445
    "begin of code block"             shift, and go to state 446
    '-'                               shift, and go to state 447
    '+'                               shift, and go to state 448
    '*'                               shift, and go to state 449
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 450
    '!'                               shift, and go to state 451
    '['                               shift, and go to state 452
    '('                               shift, and go to state 453
    '$'                               shift, and go to state 454
    '@'                               shift, and go to state 455

    string_builder          go to state 456
    expr_reader             go to state 457
    expr_call_pipe          go to state 458
    name_in_namespace       go to state 459
    expr_new                go to state 460
    expr_cast               go to state 461
    expr_type_decl          go to state 462
    expr_type_info          go to state 463
    block_or_lambda         go to state 464
    expr_full_block         go to state 465
    expr_numeric_const      go to state 466
    expr_named_call         go to state 467
    expr_method_call        go to state 468
    func_addr_expr          go to state 469
    expr_field              go to state 470
    expr_call               go to state 471
    expr                    go to state 626
    expr_mtag               go to state 473
    basic_type_declaration  go to state 474
    make_decl               go to state 475
    make_struct_decl        go to state 476
    make_tuple_call         go to state 477
    make_dim_decl           go to state 478
    make_table_decl         go to state 479
    array_comprehension     go to state 480


State 448

  371 expr: '+' . expr

    "struct"                          shift, and go to state 408
    "class"                           shift, and go to state 409
    "true"                            shift, and go to state 410
    "false"                           shift, and go to state 411
    "new"                             shift, and go to state 412
    "typeinfo"                        shift, and go to state 413
    "type"                            shift, and go to state 414
    "array"                           shift, and go to state 415
    "null"                            shift, and go to state 416
    "table"                           shift, and go to state 417
    "deref"                           shift, and go to state 418
    "cast"                            shift, and go to state 419
    "upcast"                          shift, and go to state 420
    "addr"                            shift, and go to state 421
    "reinterpret"                     shift, and go to state 422
    "fixed_array"                     shift, and go to state 423
    "default"                         shift, and go to state 424
    "bool"                            shift, and go to state 222
    "void"                            shift, and go to state 223
    "string"                          shift, and go to state 224
    "int"                             shift, and go to state 226
    "int2"                            shift, and go to state 227
    "int3"                            shift, and go to state 228
    "int4"                            shift, and go to state 229
    "uint"                            shift, and go to state 230
    "bitfield"                        shift, and go to state 425
    "uint2"                           shift, and go to state 232
    "uint3"                           shift, and go to state 233
    "uint4"                           shift, and go to state 234
    "float"                           shift, and go to state 235
    "float2"                          shift, and go to state 236
    "float3"                          shift, and go to state 237
    "float4"                          shift, and go to state 238
    "range"                           shift, and go to state 239
    "urange"                          shift, and go to state 240
    "range64"                         shift, and go to state 241
    "urange64"                        shift, and go to state 242
    "int64"                           shift, and go to state 244
    "uint64"                          shift, and go to state 245
    "double"                          shift, and go to state 246
    "int8"                            shift, and go to state 249
    "uint8"                           shift, and go to state 250
    "int16"                           shift, and go to state 251
    "uint16"                          shift, and go to state 252
    "tuple"                           shift, and go to state 426
    "variant"                         shift, and go to state 427
    "generator"                       shift, and go to state 428
    "++"                              shift, and go to state 429
    "--"                              shift, and go to state 430
    "::"                              shift, and go to state 55
    "$$"                              shift, and go to state 431
    "$i"                              shift, and go to state 432
    "$v"                              shift, and go to state 433
    "$b"                              shift, and go to state 434
    "$a"                              shift, and go to state 435
    "$c"                              shift, and go to state 436
    "..."                             shift, and go to state 437
    "integer constant"                shift, and go to state 438
    "long integer constant"           shift, and go to state 439
    "unsigned integer constant"       shift, and go to state 440
    "unsigned long integer constant"  shift, and go to state 441
    "unsigned int8 constant"          shift, and go to state 442
    "floating point constant"         shift, and go to state 443
    "double constant"                 shift, and go to state 444
    "name"                            shift, and go to state 56
    "start of the string"             shift, and go to state 445
    "begin of code block"             shift, and go to state 446
    '-'                               shift, and go to state 447
    '+'                               shift, and go to state 448
    '*'                               shift, and go to state 449
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 450
    '!'                               shift, and go to state 451
    '['                               shift, and go to state 452
    '('                               shift, and go to state 453
    '$'                               shift, and go to state 454
    '@'                               shift, and go to state 455

    string_builder          go to state 456
    expr_reader             go to state 457
    expr_call_pipe          go to state 458
    name_in_namespace       go to state 459
    expr_new                go to state 460
    expr_cast               go to state 461
    expr_type_decl          go to state 462
    expr_type_info          go to state 463
    block_or_lambda         go to state 464
    expr_full_block         go to state 465
    expr_numeric_const      go to state 466
    expr_named_call         go to state 467
    expr_method_call        go to state 468
    func_addr_expr          go to state 469
    expr_field              go to state 470
    expr_call               go to state 471
    expr                    go to state 627
    expr_mtag               go to state 473
    basic_type_declaration  go to state 474
    make_decl               go to state 475
    make_struct_decl        go to state 476
    make_tuple_call         go to state 477
    make_dim_decl           go to state 478
    make_table_decl         go to state 479
    array_comprehension     go to state 480


State 449

  408 expr: '*' . expr

    "struct"                          shift, and go to state 408
    "class"                           shift, and go to state 409
    "true"                            shift, and go to state 410
    "false"                           shift, and go to state 411
    "new"                             shift, and go to state 412
    "typeinfo"                        shift, and go to state 413
    "type"                            shift, and go to state 414
    "array"                           shift, and go to state 415
    "null"                            shift, and go to state 416
    "table"                           shift, and go to state 417
    "deref"                           shift, and go to state 418
    "cast"                            shift, and go to state 419
    "upcast"                          shift, and go to state 420
    "addr"                            shift, and go to state 421
    "reinterpret"                     shift, and go to state 422
    "fixed_array"                     shift, and go to state 423
    "default"                         shift, and go to state 424
    "bool"                            shift, and go to state 222
    "void"                            shift, and go to state 223
    "string"                          shift, and go to state 224
    "int"                             shift, and go to state 226
    "int2"                            shift, and go to state 227
    "int3"                            shift, and go to state 228
    "int4"                            shift, and go to state 229
    "uint"                            shift, and go to state 230
    "bitfield"                        shift, and go to state 425
    "uint2"                           shift, and go to state 232
    "uint3"                           shift, and go to state 233
    "uint4"                           shift, and go to state 234
    "float"                           shift, and go to state 235
    "float2"                          shift, and go to state 236
    "float3"                          shift, and go to state 237
    "float4"                          shift, and go to state 238
    "range"                           shift, and go to state 239
    "urange"                          shift, and go to state 240
    "range64"                         shift, and go to state 241
    "urange64"                        shift, and go to state 242
    "int64"                           shift, and go to state 244
    "uint64"                          shift, and go to state 245
    "double"                          shift, and go to state 246
    "int8"                            shift, and go to state 249
    "uint8"                           shift, and go to state 250
    "int16"                           shift, and go to state 251
    "uint16"                          shift, and go to state 252
    "tuple"                           shift, and go to state 426
    "variant"                         shift, and go to state 427
    "generator"                       shift, and go to state 428
    "++"                              shift, and go to state 429
    "--"                              shift, and go to state 430
    "::"                              shift, and go to state 55
    "$$"                              shift, and go to state 431
    "$i"                              shift, and go to state 432
    "$v"                              shift, and go to state 433
    "$b"                              shift, and go to state 434
    "$a"                              shift, and go to state 435
    "$c"                              shift, and go to state 436
    "..."                             shift, and go to state 437
    "integer constant"                shift, and go to state 438
    "long integer constant"           shift, and go to state 439
    "unsigned integer constant"       shift, and go to state 440
    "unsigned long integer constant"  shift, and go to state 441
    "unsigned int8 constant"          shift, and go to state 442
    "floating point constant"         shift, and go to state 443
    "double constant"                 shift, and go to state 444
    "name"                            shift, and go to state 56
    "start of the string"             shift, and go to state 445
    "begin of code block"             shift, and go to state 446
    '-'                               shift, and go to state 447
    '+'                               shift, and go to state 448
    '*'                               shift, and go to state 449
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 450
    '!'                               shift, and go to state 451
    '['                               shift, and go to state 452
    '('                               shift, and go to state 453
    '$'                               shift, and go to state 454
    '@'                               shift, and go to state 455

    string_builder          go to state 456
    expr_reader             go to state 457
    expr_call_pipe          go to state 458
    name_in_namespace       go to state 459
    expr_new                go to state 460
    expr_cast               go to state 461
    expr_type_decl          go to state 462
    expr_type_info          go to state 463
    block_or_lambda         go to state 464
    expr_full_block         go to state 465
    expr_numeric_const      go to state 466
    expr_named_call         go to state 467
    expr_method_call        go to state 468
    func_addr_expr          go to state 469
    expr_field              go to state 470
    expr_call               go to state 471
    expr                    go to state 628
    expr_mtag               go to state 473
    basic_type_declaration  go to state 474
    make_decl               go to state 475
    make_struct_decl        go to state 476
    make_tuple_call         go to state 477
    make_dim_decl           go to state 478
    make_table_decl         go to state 479
    array_comprehension     go to state 480


State 450

  370 expr: '~' . expr

    "struct"                          shift, and go to state 408
    "class"                           shift, and go to state 409
    "true"                            shift, and go to state 410
    "false"                           shift, and go to state 411
    "new"                             shift, and go to state 412
    "typeinfo"                        shift, and go to state 413
    "type"                            shift, and go to state 414
    "array"                           shift, and go to state 415
    "null"                            shift, and go to state 416
    "table"                           shift, and go to state 417
    "deref"                           shift, and go to state 418
    "cast"                            shift, and go to state 419
    "upcast"                          shift, and go to state 420
    "addr"                            shift, and go to state 421
    "reinterpret"                     shift, and go to state 422
    "fixed_array"                     shift, and go to state 423
    "default"                         shift, and go to state 424
    "bool"                            shift, and go to state 222
    "void"                            shift, and go to state 223
    "string"                          shift, and go to state 224
    "int"                             shift, and go to state 226
    "int2"                            shift, and go to state 227
    "int3"                            shift, and go to state 228
    "int4"                            shift, and go to state 229
    "uint"                            shift, and go to state 230
    "bitfield"                        shift, and go to state 425
    "uint2"                           shift, and go to state 232
    "uint3"                           shift, and go to state 233
    "uint4"                           shift, and go to state 234
    "float"                           shift, and go to state 235
    "float2"                          shift, and go to state 236
    "float3"                          shift, and go to state 237
    "float4"                          shift, and go to state 238
    "range"                           shift, and go to state 239
    "urange"                          shift, and go to state 240
    "range64"                         shift, and go to state 241
    "urange64"                        shift, and go to state 242
    "int64"                           shift, and go to state 244
    "uint64"                          shift, and go to state 245
    "double"                          shift, and go to state 246
    "int8"                            shift, and go to state 249
    "uint8"                           shift, and go to state 250
    "int16"                           shift, and go to state 251
    "uint16"                          shift, and go to state 252
    "tuple"                           shift, and go to state 426
    "variant"                         shift, and go to state 427
    "generator"                       shift, and go to state 428
    "++"                              shift, and go to state 429
    "--"                              shift, and go to state 430
    "::"                              shift, and go to state 55
    "$$"                              shift, and go to state 431
    "$i"                              shift, and go to state 432
    "$v"                              shift, and go to state 433
    "$b"                              shift, and go to state 434
    "$a"                              shift, and go to state 435
    "$c"                              shift, and go to state 436
    "..."                             shift, and go to state 437
    "integer constant"                shift, and go to state 438
    "long integer constant"           shift, and go to state 439
    "unsigned integer constant"       shift, and go to state 440
    "unsigned long integer constant"  shift, and go to state 441
    "unsigned int8 constant"          shift, and go to state 442
    "floating point constant"         shift, and go to state 443
    "double constant"                 shift, and go to state 444
    "name"                            shift, and go to state 56
    "start of the string"             shift, and go to state 445
    "begin of code block"             shift, and go to state 446
    '-'                               shift, and go to state 447
    '+'                               shift, and go to state 448
    '*'                               shift, and go to state 449
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 450
    '!'                               shift, and go to state 451
    '['                               shift, and go to state 452
    '('                               shift, and go to state 453
    '$'                               shift, and go to state 454
    '@'                               shift, and go to state 455

    string_builder          go to state 456
    expr_reader             go to state 457
    expr_call_pipe          go to state 458
    name_in_namespace       go to state 459
    expr_new                go to state 460
    expr_cast               go to state 461
    expr_type_decl          go to state 462
    expr_type_info          go to state 463
    block_or_lambda         go to state 464
    expr_full_block         go to state 465
    expr_numeric_const      go to state 466
    expr_named_call         go to state 467
    expr_method_call        go to state 468
    func_addr_expr          go to state 469
    expr_field              go to state 470
    expr_call               go to state 471
    expr                    go to state 629
    expr_mtag               go to state 473
    basic_type_declaration  go to state 474
    make_decl               go to state 475
    make_struct_decl        go to state 476
    make_tuple_call         go to state 477
    make_dim_decl           go to state 478
    make_table_decl         go to state 479
    array_comprehension     go to state 480


State 451

  369 expr: '!' . expr

    "struct"                          shift, and go to state 408
    "class"                           shift, and go to state 409
    "true"                            shift, and go to state 410
    "false"                           shift, and go to state 411
    "new"                             shift, and go to state 412
    "typeinfo"                        shift, and go to state 413
    "type"                            shift, and go to state 414
    "array"                           shift, and go to state 415
    "null"                            shift, and go to state 416
    "table"                           shift, and go to state 417
    "deref"                           shift, and go to state 418
    "cast"                            shift, and go to state 419
    "upcast"                          shift, and go to state 420
    "addr"                            shift, and go to state 421
    "reinterpret"                     shift, and go to state 422
    "fixed_array"                     shift, and go to state 423
    "default"                         shift, and go to state 424
    "bool"                            shift, and go to state 222
    "void"                            shift, and go to state 223
    "string"                          shift, and go to state 224
    "int"                             shift, and go to state 226
    "int2"                            shift, and go to state 227
    "int3"                            shift, and go to state 228
    "int4"                            shift, and go to state 229
    "uint"                            shift, and go to state 230
    "bitfield"                        shift, and go to state 425
    "uint2"                           shift, and go to state 232
    "uint3"                           shift, and go to state 233
    "uint4"                           shift, and go to state 234
    "float"                           shift, and go to state 235
    "float2"                          shift, and go to state 236
    "float3"                          shift, and go to state 237
    "float4"                          shift, and go to state 238
    "range"                           shift, and go to state 239
    "urange"                          shift, and go to state 240
    "range64"                         shift, and go to state 241
    "urange64"                        shift, and go to state 242
    "int64"                           shift, and go to state 244
    "uint64"                          shift, and go to state 245
    "double"                          shift, and go to state 246
    "int8"                            shift, and go to state 249
    "uint8"                           shift, and go to state 250
    "int16"                           shift, and go to state 251
    "uint16"                          shift, and go to state 252
    "tuple"                           shift, and go to state 426
    "variant"                         shift, and go to state 427
    "generator"                       shift, and go to state 428
    "++"                              shift, and go to state 429
    "--"                              shift, and go to state 430
    "::"                              shift, and go to state 55
    "$$"                              shift, and go to state 431
    "$i"                              shift, and go to state 432
    "$v"                              shift, and go to state 433
    "$b"                              shift, and go to state 434
    "$a"                              shift, and go to state 435
    "$c"                              shift, and go to state 436
    "..."                             shift, and go to state 437
    "integer constant"                shift, and go to state 438
    "long integer constant"           shift, and go to state 439
    "unsigned integer constant"       shift, and go to state 440
    "unsigned long integer constant"  shift, and go to state 441
    "unsigned int8 constant"          shift, and go to state 442
    "floating point constant"         shift, and go to state 443
    "double constant"                 shift, and go to state 444
    "name"                            shift, and go to state 56
    "start of the string"             shift, and go to state 445
    "begin of code block"             shift, and go to state 446
    '-'                               shift, and go to state 447
    '+'                               shift, and go to state 448
    '*'                               shift, and go to state 449
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 450
    '!'                               shift, and go to state 451
    '['                               shift, and go to state 452
    '('                               shift, and go to state 453
    '$'                               shift, and go to state 454
    '@'                               shift, and go to state 455

    string_builder          go to state 456
    expr_reader             go to state 457
    expr_call_pipe          go to state 458
    name_in_namespace       go to state 459
    expr_new                go to state 460
    expr_cast               go to state 461
    expr_type_decl          go to state 462
    expr_type_info          go to state 463
    block_or_lambda         go to state 464
    expr_full_block         go to state 465
    expr_numeric_const      go to state 466
    expr_named_call         go to state 467
    expr_method_call        go to state 468
    func_addr_expr          go to state 469
    expr_field              go to state 470
    expr_call               go to state 471
    expr                    go to state 630
    expr_mtag               go to state 473
    basic_type_declaration  go to state 474
    make_decl               go to state 475
    make_struct_decl        go to state 476
    make_tuple_call         go to state 477
    make_dim_decl           go to state 478
    make_table_decl         go to state 479
    array_comprehension     go to state 480


State 452

  734 make_dim_decl: '[' . expr_list optional_comma ']'
  762 array_comprehension: '[' . "for" variable_name_with_pos_list "in" expr_list "end of expression" expr array_comprehension_where ']'
  763                    | '[' . "iterator" "for" variable_name_with_pos_list "in" expr_list "end of expression" expr array_comprehension_where ']'

    "struct"                          shift, and go to state 408
    "class"                           shift, and go to state 409
    "for"                             shift, and go to state 631
    "true"                            shift, and go to state 410
    "false"                           shift, and go to state 411
    "new"                             shift, and go to state 412
    "typeinfo"                        shift, and go to state 413
    "type"                            shift, and go to state 414
    "array"                           shift, and go to state 415
    "null"                            shift, and go to state 416
    "table"                           shift, and go to state 417
    "deref"                           shift, and go to state 418
    "cast"                            shift, and go to state 419
    "upcast"                          shift, and go to state 420
    "iterator"                        shift, and go to state 632
    "addr"                            shift, and go to state 421
    "reinterpret"                     shift, and go to state 422
    "fixed_array"                     shift, and go to state 423
    "default"                         shift, and go to state 424
    "bool"                            shift, and go to state 222
    "void"                            shift, and go to state 223
    "string"                          shift, and go to state 224
    "int"                             shift, and go to state 226
    "int2"                            shift, and go to state 227
    "int3"                            shift, and go to state 228
    "int4"                            shift, and go to state 229
    "uint"                            shift, and go to state 230
    "bitfield"                        shift, and go to state 425
    "uint2"                           shift, and go to state 232
    "uint3"                           shift, and go to state 233
    "uint4"                           shift, and go to state 234
    "float"                           shift, and go to state 235
    "float2"                          shift, and go to state 236
    "float3"                          shift, and go to state 237
    "float4"                          shift, and go to state 238
    "range"                           shift, and go to state 239
    "urange"                          shift, and go to state 240
    "range64"                         shift, and go to state 241
    "urange64"                        shift, and go to state 242
    "int64"                           shift, and go to state 244
    "uint64"                          shift, and go to state 245
    "double"                          shift, and go to state 246
    "int8"                            shift, and go to state 249
    "uint8"                           shift, and go to state 250
    "int16"                           shift, and go to state 251
    "uint16"                          shift, and go to state 252
    "tuple"                           shift, and go to state 426
    "variant"                         shift, and go to state 427
    "generator"                       shift, and go to state 428
    "++"                              shift, and go to state 429
    "--"                              shift, and go to state 430
    "::"                              shift, and go to state 55
    "$$"                              shift, and go to state 431
    "$i"                              shift, and go to state 432
    "$v"                              shift, and go to state 433
    "$b"                              shift, and go to state 434
    "$a"                              shift, and go to state 435
    "$c"                              shift, and go to state 436
    "..."                             shift, and go to state 437
    "integer constant"                shift, and go to state 438
    "long integer constant"           shift, and go to state 439
    "unsigned integer constant"       shift, and go to state 440
    "unsigned long integer constant"  shift, and go to state 441
    "unsigned int8 constant"          shift, and go to state 442
    "floating point constant"         shift, and go to state 443
    "double constant"                 shift, and go to state 444
    "name"                            shift, and go to state 56
    "start of the string"             shift, and go to state 445
    "begin of code block"             shift, and go to state 446
    '-'                               shift, and go to state 447
    '+'                               shift, and go to state 448
    '*'                               shift, and go to state 449
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 450
    '!'                               shift, and go to state 451
    '['                               shift, and go to state 452
    '('                               shift, and go to state 453
    '$'                               shift, and go to state 454
    '@'                               shift, and go to state 455

    string_builder          go to state 456
    expr_reader             go to state 457
    expr_call_pipe          go to state 458
    name_in_namespace       go to state 459
    expr_new                go to state 460
    expr_cast               go to state 461
    expr_type_decl          go to state 462
    expr_type_info          go to state 463
    expr_list               go to state 633
    block_or_lambda         go to state 464
    expr_full_block         go to state 465
    expr_numeric_const      go to state 466
    expr_named_call         go to state 467
    expr_method_call        go to state 468
    func_addr_expr          go to state 469
    expr_field              go to state 470
    expr_call               go to state 471
    expr                    go to state 634
    expr_mtag               go to state 473
    basic_type_declaration  go to state 474
    make_decl               go to state 475
    make_struct_decl        go to state 476
    make_tuple_call         go to state 477
    make_dim_decl           go to state 478
    make_table_decl         go to state 479
    array_comprehension     go to state 480


State 453

  399 expr: '(' . expr_list optional_comma ')'

    "struct"                          shift, and go to state 408
    "class"                           shift, and go to state 409
    "true"                            shift, and go to state 410
    "false"                           shift, and go to state 411
    "new"                             shift, and go to state 412
    "typeinfo"                        shift, and go to state 413
    "type"                            shift, and go to state 414
    "array"                           shift, and go to state 415
    "null"                            shift, and go to state 416
    "table"                           shift, and go to state 417
    "deref"                           shift, and go to state 418
    "cast"                            shift, and go to state 419
    "upcast"                          shift, and go to state 420
    "addr"                            shift, and go to state 421
    "reinterpret"                     shift, and go to state 422
    "fixed_array"                     shift, and go to state 423
    "default"                         shift, and go to state 424
    "bool"                            shift, and go to state 222
    "void"                            shift, and go to state 223
    "string"                          shift, and go to state 224
    "int"                             shift, and go to state 226
    "int2"                            shift, and go to state 227
    "int3"                            shift, and go to state 228
    "int4"                            shift, and go to state 229
    "uint"                            shift, and go to state 230
    "bitfield"                        shift, and go to state 425
    "uint2"                           shift, and go to state 232
    "uint3"                           shift, and go to state 233
    "uint4"                           shift, and go to state 234
    "float"                           shift, and go to state 235
    "float2"                          shift, and go to state 236
    "float3"                          shift, and go to state 237
    "float4"                          shift, and go to state 238
    "range"                           shift, and go to state 239
    "urange"                          shift, and go to state 240
    "range64"                         shift, and go to state 241
    "urange64"                        shift, and go to state 242
    "int64"                           shift, and go to state 244
    "uint64"                          shift, and go to state 245
    "double"                          shift, and go to state 246
    "int8"                            shift, and go to state 249
    "uint8"                           shift, and go to state 250
    "int16"                           shift, and go to state 251
    "uint16"                          shift, and go to state 252
    "tuple"                           shift, and go to state 426
    "variant"                         shift, and go to state 427
    "generator"                       shift, and go to state 428
    "++"                              shift, and go to state 429
    "--"                              shift, and go to state 430
    "::"                              shift, and go to state 55
    "$$"                              shift, and go to state 431
    "$i"                              shift, and go to state 432
    "$v"                              shift, and go to state 433
    "$b"                              shift, and go to state 434
    "$a"                              shift, and go to state 435
    "$c"                              shift, and go to state 436
    "..."                             shift, and go to state 437
    "integer constant"                shift, and go to state 438
    "long integer constant"           shift, and go to state 439
    "unsigned integer constant"       shift, and go to state 440
    "unsigned long integer constant"  shift, and go to state 441
    "unsigned int8 constant"          shift, and go to state 442
    "floating point constant"         shift, and go to state 443
    "double constant"                 shift, and go to state 444
    "name"                            shift, and go to state 56
    "start of the string"             shift, and go to state 445
    "begin of code block"             shift, and go to state 446
    '-'                               shift, and go to state 447
    '+'                               shift, and go to state 448
    '*'                               shift, and go to state 449
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 450
    '!'                               shift, and go to state 451
    '['                               shift, and go to state 452
    '('                               shift, and go to state 453
    '$'                               shift, and go to state 454
    '@'                               shift, and go to state 455

    string_builder          go to state 456
    expr_reader             go to state 457
    expr_call_pipe          go to state 458
    name_in_namespace       go to state 459
    expr_new                go to state 460
    expr_cast               go to state 461
    expr_type_decl          go to state 462
    expr_type_info          go to state 463
    expr_list               go to state 635
    block_or_lambda         go to state 464
    expr_full_block         go to state 465
    expr_numeric_const      go to state 466
    expr_named_call         go to state 467
    expr_method_call        go to state 468
    func_addr_expr          go to state 469
    expr_field              go to state 470
    expr_call               go to state 471
    expr                    go to state 634
    expr_mtag               go to state 473
    basic_type_declaration  go to state 474
    make_decl               go to state 475
    make_struct_decl        go to state 476
    make_tuple_call         go to state 477
    make_dim_decl           go to state 478
    make_table_decl         go to state 479
    array_comprehension     go to state 480


State 454

  294 block_or_lambda: '$' .

    $default  reduce using rule 294 (block_or_lambda)


State 455

  295 block_or_lambda: '@' .
  296                | '@' . '@'
  340 func_addr_expr: '@' . '@' func_addr_name
  343               | '@' . '@' '<' $@13 type_declaration_no_options '>' $@14 func_addr_name
  346               | '@' . '@' '<' $@15 optional_function_argument_list optional_function_type '>' $@16 func_addr_name
  456 expr_mtag: '@' . '@' "$c" '(' expr ')'

    '@'  shift, and go to state 636

    $default  reduce using rule 295 (block_or_lambda)


State 456

  363 expr: string_builder .

    $default  reduce using rule 363 (expr)


State 457

  362 expr: expr_reader .

    $default  reduce using rule 362 (expr)


State 458

  440 expr: expr_call_pipe .

    $default  reduce using rule 440 (expr)


State 459

  334 expr_named_call: name_in_namespace . '(' '[' make_struct_fields ']' ')'
  335                | name_in_namespace . '(' expr_list ',' '[' make_struct_fields ']' ')'
  354 expr_call: name_in_namespace . '(' ')'
  355          | name_in_namespace . '(' make_struct_single ')'
  356          | name_in_namespace . '(' expr_list ')'
  360 expr: name_in_namespace .

    '('  shift, and go to state 637

    '('       [reduce using rule 360 (expr)]
    $default  reduce using rule 360 (expr)

    shift/reduce conflict on token '(':
      360 expr: name_in_namespace .
      334 expr_named_call: name_in_namespace . '(' '[' make_struct_fields ']' ')'
      First example: program optional_annotation_list "def" optional_public_or_private_function $@2 function_declaration_header "begin of code block" expressions "assume" "name" '=' name_in_namespace . '(' '[' make_struct_fields ']' ')' expression_any "end of code block" $end
      Shift derivation
        $accept
        `-> 0: program                                                                                                                                                                                                                                                                                                                                  $end
               `-> 6: program global_function_declaration
                              `-> 204: optional_annotation_list "def" function_declaration
                                                                      `-> 210: optional_public_or_private_function $@2 function_declaration_header expression_block
                                                                                                                                                   `-> 211: "begin of code block" expressions                                                                                                                                       "end of code block"
                                                                                                                                                                                  `-> 233: expressions                                                                                                               expression_any
                                                                                                                                                                                           `-> 233: expressions expression_with_alias
                                                                                                                                                                                                                `-> 74: "assume" "name" '=' expr
                                                                                                                                                                                                                                            `-> 435: expr_named_call
                                                                                                                                                                                                                                                     `-> 334: name_in_namespace . '(' '[' make_struct_fields ']' ')'
      Second example: program optional_annotation_list "def" optional_public_or_private_function $@2 function_declaration_header "begin of code block" expressions "assume" "name" '=' name_in_namespace . '(' expr_list optional_comma ')' "end of expression" "end of code block" $end
      Reduce derivation
        $accept
        `-> 0: program                                                                                                                                                                                                                                                                                                                                                                $end
               `-> 6: program global_function_declaration
                              `-> 204: optional_annotation_list "def" function_declaration
                                                                      `-> 210: optional_public_or_private_function $@2 function_declaration_header expression_block
                                                                                                                                                   `-> 211: "begin of code block" expressions                                                                                                                                                                     "end of code block"
                                                                                                                                                                                  `-> 233: expressions                                                                            expression_any
                                                                                                                                                                                           `-> 233: expressions expression_any                                                    `-> 215: expr_assign                                        "end of expression"
                                                                                                                                                                                                                `-> 221: expression_with_alias                                             `-> 315: expr
                                                                                                                                                                                                                         `-> 74: "assume" "name" '=' expr                                           `-> 399: '(' expr_list optional_comma ')'
                                                                                                                                                                                                                                                     `-> 360: name_in_namespace .

    shift/reduce conflict on token '(':
      360 expr: name_in_namespace .
      335 expr_named_call: name_in_namespace . '(' expr_list ',' '[' make_struct_fields ']' ')'
      First example: program optional_annotation_list "def" optional_public_or_private_function $@2 function_declaration_header "begin of code block" expressions "assume" "name" '=' name_in_namespace . '(' expr_list ',' '[' make_struct_fields ']' ')' expression_any "end of code block" $end
      Shift derivation
        $accept
        `-> 0: program                                                                                                                                                                                                                                                                                                                                                $end
               `-> 6: program global_function_declaration
                              `-> 204: optional_annotation_list "def" function_declaration
                                                                      `-> 210: optional_public_or_private_function $@2 function_declaration_header expression_block
                                                                                                                                                   `-> 211: "begin of code block" expressions                                                                                                                                                     "end of code block"
                                                                                                                                                                                  `-> 233: expressions                                                                                                                             expression_any
                                                                                                                                                                                           `-> 233: expressions expression_with_alias
                                                                                                                                                                                                                `-> 74: "assume" "name" '=' expr
                                                                                                                                                                                                                                            `-> 435: expr_named_call
                                                                                                                                                                                                                                                     `-> 335: name_in_namespace . '(' expr_list ',' '[' make_struct_fields ']' ')'
      Second example: program optional_annotation_list "def" optional_public_or_private_function $@2 function_declaration_header "begin of code block" expressions "assume" "name" '=' name_in_namespace . '(' expr_list optional_comma ')' "end of expression" "end of code block" $end
      Reduce derivation
        $accept
        `-> 0: program                                                                                                                                                                                                                                                                                                                                                                $end
               `-> 6: program global_function_declaration
                              `-> 204: optional_annotation_list "def" function_declaration
                                                                      `-> 210: optional_public_or_private_function $@2 function_declaration_header expression_block
                                                                                                                                                   `-> 211: "begin of code block" expressions                                                                                                                                                                     "end of code block"
                                                                                                                                                                                  `-> 233: expressions                                                                            expression_any
                                                                                                                                                                                           `-> 233: expressions expression_any                                                    `-> 215: expr_assign                                        "end of expression"
                                                                                                                                                                                                                `-> 221: expression_with_alias                                             `-> 315: expr
                                                                                                                                                                                                                         `-> 74: "assume" "name" '=' expr                                           `-> 399: '(' expr_list optional_comma ')'
                                                                                                                                                                                                                                                     `-> 360: name_in_namespace .

    shift/reduce conflict on token '(':
      360 expr: name_in_namespace .
      354 expr_call: name_in_namespace . '(' ')'
      First example: program optional_annotation_list "def" optional_public_or_private_function $@2 function_declaration_header "begin of code block" expressions "assume" "name" '=' name_in_namespace . '(' ')' expression_any "end of code block" $end
      Shift derivation
        $accept
        `-> 0: program                                                                                                                                                                                                                                                                                                       $end
               `-> 6: program global_function_declaration
                              `-> 204: optional_annotation_list "def" function_declaration
                                                                      `-> 210: optional_public_or_private_function $@2 function_declaration_header expression_block
                                                                                                                                                   `-> 211: "begin of code block" expressions                                                                                                            "end of code block"
                                                                                                                                                                                  `-> 233: expressions                                                                                    expression_any
                                                                                                                                                                                           `-> 233: expressions expression_with_alias
                                                                                                                                                                                                                `-> 74: "assume" "name" '=' expr
                                                                                                                                                                                                                                            `-> 407: expr_call
                                                                                                                                                                                                                                                     `-> 354: name_in_namespace . '(' ')'
      Second example: program optional_annotation_list "def" optional_public_or_private_function $@2 function_declaration_header "begin of code block" expressions "assume" "name" '=' name_in_namespace . '(' expr_list optional_comma ')' "end of expression" "end of code block" $end
      Reduce derivation
        $accept
        `-> 0: program                                                                                                                                                                                                                                                                                                                                                                $end
               `-> 6: program global_function_declaration
                              `-> 204: optional_annotation_list "def" function_declaration
                                                                      `-> 210: optional_public_or_private_function $@2 function_declaration_header expression_block
                                                                                                                                                   `-> 211: "begin of code block" expressions                                                                                                                                                                     "end of code block"
                                                                                                                                                                                  `-> 233: expressions                                                                            expression_any
                                                                                                                                                                                           `-> 233: expressions expression_any                                                    `-> 215: expr_assign                                        "end of expression"
                                                                                                                                                                                                                `-> 221: expression_with_alias                                             `-> 315: expr
                                                                                                                                                                                                                         `-> 74: "assume" "name" '=' expr                                           `-> 399: '(' expr_list optional_comma ')'
                                                                                                                                                                                                                                                     `-> 360: name_in_namespace .

    shift/reduce conflict on token '(':
      360 expr: name_in_namespace .
      355 expr_call: name_in_namespace . '(' make_struct_single ')'
      First example: program optional_annotation_list "def" optional_public_or_private_function $@2 function_declaration_header "begin of code block" expressions "assume" "name" '=' name_in_namespace . '(' make_struct_single ')' expression_any "end of code block" $end
      Shift derivation
        $accept
        `-> 0: program                                                                                                                                                                                                                                                                                                                          $end
               `-> 6: program global_function_declaration
                              `-> 204: optional_annotation_list "def" function_declaration
                                                                      `-> 210: optional_public_or_private_function $@2 function_declaration_header expression_block
                                                                                                                                                   `-> 211: "begin of code block" expressions                                                                                                                               "end of code block"
                                                                                                                                                                                  `-> 233: expressions                                                                                                       expression_any
                                                                                                                                                                                           `-> 233: expressions expression_with_alias
                                                                                                                                                                                                                `-> 74: "assume" "name" '=' expr
                                                                                                                                                                                                                                            `-> 407: expr_call
                                                                                                                                                                                                                                                     `-> 355: name_in_namespace . '(' make_struct_single ')'
      Second example: program optional_annotation_list "def" optional_public_or_private_function $@2 function_declaration_header "begin of code block" expressions "assume" "name" '=' name_in_namespace . '(' expr_list optional_comma ')' "end of expression" "end of code block" $end
      Reduce derivation
        $accept
        `-> 0: program                                                                                                                                                                                                                                                                                                                                                                $end
               `-> 6: program global_function_declaration
                              `-> 204: optional_annotation_list "def" function_declaration
                                                                      `-> 210: optional_public_or_private_function $@2 function_declaration_header expression_block
                                                                                                                                                   `-> 211: "begin of code block" expressions                                                                                                                                                                     "end of code block"
                                                                                                                                                                                  `-> 233: expressions                                                                            expression_any
                                                                                                                                                                                           `-> 233: expressions expression_any                                                    `-> 215: expr_assign                                        "end of expression"
                                                                                                                                                                                                                `-> 221: expression_with_alias                                             `-> 315: expr
                                                                                                                                                                                                                         `-> 74: "assume" "name" '=' expr                                           `-> 399: '(' expr_list optional_comma ')'
                                                                                                                                                                                                                                                     `-> 360: name_in_namespace .

    shift/reduce conflict on token '(':
      360 expr: name_in_namespace .
      356 expr_call: name_in_namespace . '(' expr_list ')'
      First example: program optional_annotation_list "def" optional_public_or_private_function $@2 function_declaration_header "begin of code block" expressions "assume" "name" '=' name_in_namespace . '(' expr_list ')' expression_any "end of code block" $end
      Shift derivation
        $accept
        `-> 0: program                                                                                                                                                                                                                                                                                                                 $end
               `-> 6: program global_function_declaration
                              `-> 204: optional_annotation_list "def" function_declaration
                                                                      `-> 210: optional_public_or_private_function $@2 function_declaration_header expression_block
                                                                                                                                                   `-> 211: "begin of code block" expressions                                                                                                                      "end of code block"
                                                                                                                                                                                  `-> 233: expressions                                                                                              expression_any
                                                                                                                                                                                           `-> 233: expressions expression_with_alias
                                                                                                                                                                                                                `-> 74: "assume" "name" '=' expr
                                                                                                                                                                                                                                            `-> 407: expr_call
                                                                                                                                                                                                                                                     `-> 356: name_in_namespace . '(' expr_list ')'
      Second example: program optional_annotation_list "def" optional_public_or_private_function $@2 function_declaration_header "begin of code block" expressions "assume" "name" '=' name_in_namespace . '(' expr_list optional_comma ')' "end of expression" "end of code block" $end
      Reduce derivation
        $accept
        `-> 0: program                                                                                                                                                                                                                                                                                                                                                                $end
               `-> 6: program global_function_declaration
                              `-> 204: optional_annotation_list "def" function_declaration
                                                                      `-> 210: optional_public_or_private_function $@2 function_declaration_header expression_block
                                                                                                                                                   `-> 211: "begin of code block" expressions                                                                                                                                                                     "end of code block"
                                                                                                                                                                                  `-> 233: expressions                                                                            expression_any
                                                                                                                                                                                           `-> 233: expressions expression_any                                                    `-> 215: expr_assign                                        "end of expression"
                                                                                                                                                                                                                `-> 221: expression_with_alias                                             `-> 315: expr
                                                                                                                                                                                                                         `-> 74: "assume" "name" '=' expr                                           `-> 399: '(' expr_list optional_comma ')'
                                                                                                                                                                                                                                                     `-> 360: name_in_namespace .



State 460

  433 expr: expr_new .

    $default  reduce using rule 433 (expr)


State 461

  432 expr: expr_cast .

    $default  reduce using rule 432 (expr)


State 462

  431 expr: expr_type_decl .

    $default  reduce using rule 431 (expr)


State 463

  430 expr: expr_type_info .

    $default  reduce using rule 430 (expr)


State 464

  305 expr_full_block: block_or_lambda . optional_annotation_list optional_capture_list optional_function_argument_list optional_function_type block_or_simple_block

    '['  shift, and go to state 15

    '['       [reduce using rule 112 (optional_annotation_list)]
    $default  reduce using rule 112 (optional_annotation_list)

    optional_annotation_list  go to state 638

    shift/reduce conflict on token '[':
      112 optional_annotation_list: %empty .
      113 optional_annotation_list: . '[' annotation_list ']'
      First example: program kwd_let optional_shared optional_public_or_private_variable $@29 optional_field_annotation "$i" '(' block_or_lambda . '[' annotation_list ']' optional_capture_list optional_function_argument_list optional_function_type block_or_simple_block ')' ':' type_declaration_no_options "end of expression" $end
      Shift derivation
        $accept
        `-> 0: program                                                                                                                                                                                                                                                                                                                                                              $end
               `-> 5: program global_let
                              `-> 524: kwd_let optional_shared optional_public_or_private_variable $@29 optional_field_annotation let_variable_declaration
                                                                                                                                  `-> 511: let_variable_name_with_pos_list                                                                                                                                                      ':' type_declaration_no_options "end of expression"
                                                                                                                                           `-> 507: "$i" '(' expr_full_block                                                                                                                                                ')'
                                                                                                                                                             `-> 305: block_or_lambda optional_annotation_list           optional_capture_list optional_function_argument_list optional_function_type block_or_simple_block
                                                                                                                                                                                      `-> 113: . '[' annotation_list ']'
      Second example: program kwd_let optional_shared optional_public_or_private_variable $@29 optional_field_annotation "$i" '(' block_or_lambda . '[' '[' capture_list ']' ']' optional_function_argument_list optional_function_type block_or_simple_block ')' ':' type_declaration_no_options "end of expression" $end
      Reduce derivation
        $accept
        `-> 0: program                                                                                                                                                                                                                                                                                                                                                                             $end
               `-> 5: program global_let
                              `-> 524: kwd_let optional_shared optional_public_or_private_variable $@29 optional_field_annotation let_variable_declaration
                                                                                                                                  `-> 511: let_variable_name_with_pos_list                                                                                                                                                                     ':' type_declaration_no_options "end of expression"
                                                                                                                                           `-> 507: "$i" '(' expr                                                                                                                                                                          ')'
                                                                                                                                                             `-> 436: expr_full_block
                                                                                                                                                                      `-> 305: block_or_lambda optional_annotation_list optional_capture_list                 optional_function_argument_list optional_function_type block_or_simple_block
                                                                                                                                                                                               `-> 112: %empty .        `-> 304: '[' '[' capture_list ']' ']'



State 465

  436 expr: expr_full_block .

    $default  reduce using rule 436 (expr)


State 466

  361 expr: expr_numeric_const .

    $default  reduce using rule 361 (expr)


State 467

  435 expr: expr_named_call .

    $default  reduce using rule 435 (expr)


State 468

  434 expr: expr_method_call .

    $default  reduce using rule 434 (expr)


State 469

  406 expr: func_addr_expr .

    $default  reduce using rule 406 (expr)


State 470

  367 expr: expr_field .

    $default  reduce using rule 367 (expr)


State 471

  213 expr_call_pipe: expr_call . expr_full_block_assumed_piped
  407 expr: expr_call .

    "begin of code block"  shift, and go to state 639
    '$'                    shift, and go to state 454
    '@'                    shift, and go to state 640

    "begin of code block"  [reduce using rule 407 (expr)]
    '$'                    [reduce using rule 407 (expr)]
    '@'                    [reduce using rule 407 (expr)]
    $default               reduce using rule 407 (expr)

    block_or_lambda                go to state 641
    expr_full_block_assumed_piped  go to state 642

    shift/reduce conflict on token '$':
      407 expr: expr_call .
      294 block_or_lambda: . '$'
      First example: program optional_annotation_list "def" optional_public_or_private_function $@2 function_declaration_header "begin of code block" expressions "assume" "name" '=' expr_call . '$' optional_annotation_list optional_capture_list optional_function_argument_list optional_function_type expression_block expression_any "end of code block" $end
      Shift derivation
        $accept
        `-> 0: program                                                                                                                                                                                                                                                                                                                                                                                                                                     $end
               `-> 6: program global_function_declaration
                              `-> 204: optional_annotation_list "def" function_declaration
                                                                      `-> 210: optional_public_or_private_function $@2 function_declaration_header expression_block
                                                                                                                                                   `-> 211: "begin of code block" expressions                                                                                                                                                                                                                                          "end of code block"
                                                                                                                                                                                  `-> 233: expressions                                                                                                                                                                                                                  expression_any
                                                                                                                                                                                           `-> 233: expressions expression_with_alias
                                                                                                                                                                                                                `-> 74: "assume" "name" '=' expr
                                                                                                                                                                                                                                            `-> 440: expr_call_pipe
                                                                                                                                                                                                                                                     `-> 213: expr_call expr_full_block_assumed_piped
                                                                                                                                                                                                                                                                        `-> 306: block_or_lambda optional_annotation_list optional_capture_list optional_function_argument_list optional_function_type expression_block
                                                                                                                                                                                                                                                                                 `-> 294: . '$'
      Second example: program optional_annotation_list "def" optional_public_or_private_function $@2 function_declaration_header "begin of code block" expressions "assume" "name" '=' expr_call . '$' optional_annotation_list optional_capture_list optional_function_argument_list optional_function_type block_or_simple_block "end of expression" "end of code block" $end
      Reduce derivation
        $accept
        `-> 0: program                                                                                                                                                                                                                                                                                                                                                                                                                                                                            $end
               `-> 6: program global_function_declaration
                              `-> 204: optional_annotation_list "def" function_declaration
                                                                      `-> 210: optional_public_or_private_function $@2 function_declaration_header expression_block
                                                                                                                                                   `-> 211: "begin of code block" expressions                                                                                                                                                                                                                                                                                 "end of code block"
                                                                                                                                                                                  `-> 233: expressions                                                                    expression_any
                                                                                                                                                                                           `-> 233: expressions expression_any                                            `-> 215: expr_assign                                                                                                                                                            "end of expression"
                                                                                                                                                                                                                `-> 221: expression_with_alias                                     `-> 315: expr
                                                                                                                                                                                                                         `-> 74: "assume" "name" '=' expr                                   `-> 436: expr_full_block
                                                                                                                                                                                                                                                     `-> 407: expr_call .                            `-> 305: block_or_lambda optional_annotation_list optional_capture_list optional_function_argument_list optional_function_type block_or_simple_block
                                                                                                                                                                                                                                                                                                              `-> 294: '$'

    shift/reduce conflict on token '@':
      407 expr: expr_call .
      295 block_or_lambda: . '@'
      First example: program optional_annotation_list "def" optional_public_or_private_function $@2 function_declaration_header "begin of code block" expressions "assume" "name" '=' expr_call . '@' optional_annotation_list optional_capture_list optional_function_argument_list optional_function_type expression_block expression_any "end of code block" $end
      Shift derivation
        $accept
        `-> 0: program                                                                                                                                                                                                                                                                                                                                                                                                                                     $end
               `-> 6: program global_function_declaration
                              `-> 204: optional_annotation_list "def" function_declaration
                                                                      `-> 210: optional_public_or_private_function $@2 function_declaration_header expression_block
                                                                                                                                                   `-> 211: "begin of code block" expressions                                                                                                                                                                                                                                          "end of code block"
                                                                                                                                                                                  `-> 233: expressions                                                                                                                                                                                                                  expression_any
                                                                                                                                                                                           `-> 233: expressions expression_with_alias
                                                                                                                                                                                                                `-> 74: "assume" "name" '=' expr
                                                                                                                                                                                                                                            `-> 440: expr_call_pipe
                                                                                                                                                                                                                                                     `-> 213: expr_call expr_full_block_assumed_piped
                                                                                                                                                                                                                                                                        `-> 306: block_or_lambda optional_annotation_list optional_capture_list optional_function_argument_list optional_function_type expression_block
                                                                                                                                                                                                                                                                                 `-> 295: . '@'
      Second example: program optional_annotation_list "def" optional_public_or_private_function $@2 function_declaration_header "begin of code block" expressions "assume" "name" '=' expr_call . '@' '@' "$c" '(' expr ')' "end of expression" "end of code block" $end
      Reduce derivation
        $accept
        `-> 0: program                                                                                                                                                                                                                                                                                                                                                          $end
               `-> 6: program global_function_declaration
                              `-> 204: optional_annotation_list "def" function_declaration
                                                                      `-> 210: optional_public_or_private_function $@2 function_declaration_header expression_block
                                                                                                                                                   `-> 211: "begin of code block" expressions                                                                                                                                                               "end of code block"
                                                                                                                                                                                  `-> 233: expressions                                                                    expression_any
                                                                                                                                                                                           `-> 233: expressions expression_any                                            `-> 215: expr_assign                                          "end of expression"
                                                                                                                                                                                                                `-> 221: expression_with_alias                                     `-> 315: expr
                                                                                                                                                                                                                         `-> 74: "assume" "name" '=' expr                                   `-> 368: expr_mtag
                                                                                                                                                                                                                                                     `-> 407: expr_call .                            `-> 456: '@' '@' "$c" '(' expr ')'

    shift/reduce conflict on token '@':
      407 expr: expr_call .
      296 block_or_lambda: . '@' '@'
      First example: program optional_annotation_list "def" optional_public_or_private_function $@2 function_declaration_header "begin of code block" expressions "assume" "name" '=' expr_call . '@' '@' optional_annotation_list optional_capture_list optional_function_argument_list optional_function_type expression_block expression_any "end of code block" $end
      Shift derivation
        $accept
        `-> 0: program                                                                                                                                                                                                                                                                                                                                                                                                                                        $end
               `-> 6: program global_function_declaration
                              `-> 204: optional_annotation_list "def" function_declaration
                                                                      `-> 210: optional_public_or_private_function $@2 function_declaration_header expression_block
                                                                                                                                                   `-> 211: "begin of code block" expressions                                                                                                                                                                                                                                             "end of code block"
                                                                                                                                                                                  `-> 233: expressions                                                                                                                                                                                                                     expression_any
                                                                                                                                                                                           `-> 233: expressions expression_with_alias
                                                                                                                                                                                                                `-> 74: "assume" "name" '=' expr
                                                                                                                                                                                                                                            `-> 440: expr_call_pipe
                                                                                                                                                                                                                                                     `-> 213: expr_call expr_full_block_assumed_piped
                                                                                                                                                                                                                                                                        `-> 306: block_or_lambda    optional_annotation_list optional_capture_list optional_function_argument_list optional_function_type expression_block
                                                                                                                                                                                                                                                                                 `-> 296: . '@' '@'
      Second example: program optional_annotation_list "def" optional_public_or_private_function $@2 function_declaration_header "begin of code block" expressions "assume" "name" '=' expr_call . '@' '@' "$c" '(' expr ')' "end of expression" "end of code block" $end
      Reduce derivation
        $accept
        `-> 0: program                                                                                                                                                                                                                                                                                                                                                          $end
               `-> 6: program global_function_declaration
                              `-> 204: optional_annotation_list "def" function_declaration
                                                                      `-> 210: optional_public_or_private_function $@2 function_declaration_header expression_block
                                                                                                                                                   `-> 211: "begin of code block" expressions                                                                                                                                                               "end of code block"
                                                                                                                                                                                  `-> 233: expressions                                                                    expression_any
                                                                                                                                                                                           `-> 233: expressions expression_any                                            `-> 215: expr_assign                                          "end of expression"
                                                                                                                                                                                                                `-> 221: expression_with_alias                                     `-> 315: expr
                                                                                                                                                                                                                         `-> 74: "assume" "name" '=' expr                                   `-> 368: expr_mtag
                                                                                                                                                                                                                                                     `-> 407: expr_call .                            `-> 456: '@' '@' "$c" '(' expr ')'

    shift/reduce conflict on token "begin of code block":
      407 expr: expr_call .
      307 expr_full_block_assumed_piped: . "begin of code block" expressions "end of code block"
      First example: program optional_annotation_list "def" optional_public_or_private_function $@2 function_declaration_header "begin of code block" expressions "while" expr_call . "begin of code block" expressions "end of code block" expression_block "end of code block" $end
      Shift derivation
        $accept
        `-> 0: program                                                                                                                                                                                                                                                                                                                                   $end
               `-> 6: program global_function_declaration
                              `-> 204: optional_annotation_list "def" function_declaration
                                                                      `-> 210: optional_public_or_private_function $@2 function_declaration_header expression_block
                                                                                                                                                   `-> 211: "begin of code block" expressions                                                                                                                                        "end of code block"
                                                                                                                                                                                  `-> 233: expressions expression_while_loop
                                                                                                                                                                                                       `-> 72: "while" expr                                                                                         expression_block
                                                                                                                                                                                                                       `-> 440: expr_call_pipe
                                                                                                                                                                                                                                `-> 213: expr_call expr_full_block_assumed_piped
                                                                                                                                                                                                                                                   `-> 307: . "begin of code block" expressions "end of code block"
      Second example: program optional_annotation_list "def" optional_public_or_private_function $@2 function_declaration_header "begin of code block" expressions "while" expr_call . "begin of code block" expressions "end of code block" "end of code block" $end
      Reduce derivation
        $accept
        `-> 0: program                                                                                                                                                                                                                                                                                                                  $end
               `-> 6: program global_function_declaration
                              `-> 204: optional_annotation_list "def" function_declaration
                                                                      `-> 210: optional_public_or_private_function $@2 function_declaration_header expression_block
                                                                                                                                                   `-> 211: "begin of code block" expressions                                                                                                                       "end of code block"
                                                                                                                                                                                  `-> 233: expressions expression_any
                                                                                                                                                                                                       `-> 218: expression_while_loop
                                                                                                                                                                                                                `-> 72: "while" expr                 expression_block
                                                                                                                                                                                                                                `-> 407: expr_call . `-> 211: "begin of code block" expressions "end of code block"



State 472

  336 expr_method_call: expr . "->" "name" '(' ')'
  337                 | expr . "->" "name" '(' expr_list ')'
  347 expr_field: expr . '.' "name"
  348           | expr . '.' '.' "name"
  349           | expr . '.' "name" '(' ')'
  350           | expr . '.' "name" '(' expr_list ')'
  353           | expr . '.' $@17 error $@18
  373 expr: expr . "<<" expr
  374     | expr . ">>" expr
  375     | expr . "<<<" expr
  376     | expr . ">>>" expr
  377     | expr . '+' expr
  378     | expr . '-' expr
  379     | expr . '*' expr
  380     | expr . '/' expr
  381     | expr . '%' expr
  382     | expr . '<' expr
  383     | expr . '>' expr
  384     | expr . "==" expr
  385     | expr . "!=" expr
  386     | expr . "<=" expr
  387     | expr . ">=" expr
  388     | expr . '&' expr
  389     | expr . '|' expr
  390     | expr . '^' expr
  391     | expr . "&&" expr
  392     | expr . "||" expr
  393     | expr . "^^" expr
  394     | expr . ".." expr
  397     | expr . "++"
  398     | expr . "--"
  400     | expr . '[' expr ']'
  401     | expr . '.' '[' expr ']'
  402     | expr . "?[" expr ']'
  403     | expr . '.' "?[" expr ']'
  404     | expr . "?." "name"
  405     | expr . '.' "?." "name"
  413     | expr . "??" expr
  414     | expr . '?' expr ':' expr
  417     | expr . "is" "type" '<' $@19 type_declaration_no_options '>' $@20
  418     | expr . "is" basic_type_declaration
  419     | expr . "is" "name"
  420     | expr . "as" "name"
  423     | expr . "as" "type" '<' $@21 type_declaration '>' $@22
  424     | expr . "as" basic_type_declaration
  425     | expr . '?' "as" "name"
  428     | expr . '?' "as" "type" '<' $@23 type_declaration '>' $@24
  429     | expr . '?' "as" basic_type_declaration
  437     | expr . "<|" expr
  438     | expr . "|>" expr
  439     | expr . "|>" basic_type_declaration
  449 expr_mtag: expr . '.' "$f" '(' expr ')'
  450          | expr . "?." "$f" '(' expr ')'
  451          | expr . '.' '.' "$f" '(' expr ')'
  452          | expr . '.' "?." "$f" '(' expr ')'
  453          | expr . "as" "$f" '(' expr ')'
  454          | expr . '?' "as" "$f" '(' expr ')'
  455          | expr . "is" "$f" '(' expr ')'
  627 type_declaration_no_options_no_dim: "typedecl" '(' expr . ')'

    "is"   shift, and go to state 643
    "as"   shift, and go to state 644
    "<<"   shift, and go to state 645
    ">>"   shift, and go to state 646
    "++"   shift, and go to state 647
    "--"   shift, and go to state 648
    "<="   shift, and go to state 649
    ">="   shift, and go to state 650
    "=="   shift, and go to state 651
    "!="   shift, and go to state 652
    "->"   shift, and go to state 653
    "??"   shift, and go to state 654
    "?."   shift, and go to state 655
    "?["   shift, and go to state 656
    "<|"   shift, and go to state 657
    "|>"   shift, and go to state 658
    "<<<"  shift, and go to state 659
    ">>>"  shift, and go to state 660
    "&&"   shift, and go to state 661
    "||"   shift, and go to state 662
    "^^"   shift, and go to state 663
    ".."   shift, and go to state 664
    '?'    shift, and go to state 665
    '|'    shift, and go to state 666
    '^'    shift, and go to state 667
    '&'    shift, and go to state 668
    '<'    shift, and go to state 669
    '>'    shift, and go to state 670
    '-'    shift, and go to state 671
    '+'    shift, and go to state 672
    '*'    shift, and go to state 673
    '/'    shift, and go to state 674
    '%'    shift, and go to state 675
    '.'    shift, and go to state 676
    '['    shift, and go to state 677
    ')'    shift, and go to state 678


State 473

  368 expr: expr_mtag .

    $default  reduce using rule 368 (expr)


State 474

  357 expr_call: basic_type_declaration . '(' ')'
  358          | basic_type_declaration . '(' expr_list ')'

    '('  shift, and go to state 679


State 475

  364 expr: make_decl .

    $default  reduce using rule 364 (expr)


State 476

  698 make_decl: make_struct_decl .

    $default  reduce using rule 698 (make_decl)


State 477

  702 make_decl: make_tuple_call .

    $default  reduce using rule 702 (make_decl)


State 478

  699 make_decl: make_dim_decl .

    $default  reduce using rule 699 (make_decl)


State 479

  700 make_decl: make_table_decl .

    $default  reduce using rule 700 (make_decl)


State 480

  701 make_decl: array_comprehension .

    $default  reduce using rule 701 (make_decl)


State 481

  655 type_declaration_no_options_no_dim: "iterator" '<' $@46 . type_declaration '>' $@47

    "type"       shift, and go to state 216
    "array"      shift, and go to state 217
    "table"      shift, and go to state 218
    "typedecl"   shift, and go to state 219
    "iterator"   shift, and go to state 220
    "smart_ptr"  shift, and go to state 221
    "bool"       shift, and go to state 222
    "void"       shift, and go to state 223
    "string"     shift, and go to state 224
    "auto"       shift, and go to state 225
    "int"        shift, and go to state 226
    "int2"       shift, and go to state 227
    "int3"       shift, and go to state 228
    "int4"       shift, and go to state 229
    "uint"       shift, and go to state 230
    "bitfield"   shift, and go to state 231
    "uint2"      shift, and go to state 232
    "uint3"      shift, and go to state 233
    "uint4"      shift, and go to state 234
    "float"      shift, and go to state 235
    "float2"     shift, and go to state 236
    "float3"     shift, and go to state 237
    "float4"     shift, and go to state 238
    "range"      shift, and go to state 239
    "urange"     shift, and go to state 240
    "range64"    shift, and go to state 241
    "urange64"   shift, and go to state 242
    "block"      shift, and go to state 243
    "int64"      shift, and go to state 244
    "uint64"     shift, and go to state 245
    "double"     shift, and go to state 246
    "function"   shift, and go to state 247
    "lambda"     shift, and go to state 248
    "int8"       shift, and go to state 249
    "uint8"      shift, and go to state 250
    "int16"      shift, and go to state 251
    "uint16"     shift, and go to state 252
    "tuple"      shift, and go to state 253
    "variant"    shift, and go to state 254
    "::"         shift, and go to state 55
    "$t"         shift, and go to state 255
    "name"       shift, and go to state 56
    '$'          shift, and go to state 256

    name_in_namespace                   go to state 257
    basic_type_declaration              go to state 258
    structure_type_declaration          go to state 259
    auto_type_declaration               go to state 260
    bitfield_type_declaration           go to state 261
    type_declaration_no_options         go to state 262
    type_declaration_no_options_no_dim  go to state 263
    type_declaration                    go to state 680


State 482

  645 type_declaration_no_options_no_dim: "smart_ptr" '<' $@40 . type_declaration '>' $@41

    "type"       shift, and go to state 216
    "array"      shift, and go to state 217
    "table"      shift, and go to state 218
    "typedecl"   shift, and go to state 219
    "iterator"   shift, and go to state 220
    "smart_ptr"  shift, and go to state 221
    "bool"       shift, and go to state 222
    "void"       shift, and go to state 223
    "string"     shift, and go to state 224
    "auto"       shift, and go to state 225
    "int"        shift, and go to state 226
    "int2"       shift, and go to state 227
    "int3"       shift, and go to state 228
    "int4"       shift, and go to state 229
    "uint"       shift, and go to state 230
    "bitfield"   shift, and go to state 231
    "uint2"      shift, and go to state 232
    "uint3"      shift, and go to state 233
    "uint4"      shift, and go to state 234
    "float"      shift, and go to state 235
    "float2"     shift, and go to state 236
    "float3"     shift, and go to state 237
    "float4"     shift, and go to state 238
    "range"      shift, and go to state 239
    "urange"     shift, and go to state 240
    "range64"    shift, and go to state 241
    "urange64"   shift, and go to state 242
    "block"      shift, and go to state 243
    "int64"      shift, and go to state 244
    "uint64"     shift, and go to state 245
    "double"     shift, and go to state 246
    "function"   shift, and go to state 247
    "lambda"     shift, and go to state 248
    "int8"       shift, and go to state 249
    "uint8"      shift, and go to state 250
    "int16"      shift, and go to state 251
    "uint16"     shift, and go to state 252
    "tuple"      shift, and go to state 253
    "variant"    shift, and go to state 254
    "::"         shift, and go to state 55
    "$t"         shift, and go to state 255
    "name"       shift, and go to state 56
    '$'          shift, and go to state 256

    name_in_namespace                   go to state 257
    basic_type_declaration              go to state 258
    structure_type_declaration          go to state 259
    auto_type_declaration               go to state 260
    bitfield_type_declaration           go to state 261
    type_declaration_no_options         go to state 262
    type_declaration_no_options_no_dim  go to state 263
    type_declaration                    go to state 681


State 483

  602 auto_type_declaration: "auto" '(' "name" . ')'

    ')'  shift, and go to state 682


State 484

  611 bitfield_type_declaration: "bitfield" '<' $@35 . bitfield_bits '>' $@36

    "name"  shift, and go to state 683

    bitfield_bits  go to state 684


State 485

  659 type_declaration_no_options_no_dim: "block" '<' $@48 . type_declaration '>' $@49

    "type"       shift, and go to state 216
    "array"      shift, and go to state 217
    "table"      shift, and go to state 218
    "typedecl"   shift, and go to state 219
    "iterator"   shift, and go to state 220
    "smart_ptr"  shift, and go to state 221
    "bool"       shift, and go to state 222
    "void"       shift, and go to state 223
    "string"     shift, and go to state 224
    "auto"       shift, and go to state 225
    "int"        shift, and go to state 226
    "int2"       shift, and go to state 227
    "int3"       shift, and go to state 228
    "int4"       shift, and go to state 229
    "uint"       shift, and go to state 230
    "bitfield"   shift, and go to state 231
    "uint2"      shift, and go to state 232
    "uint3"      shift, and go to state 233
    "uint4"      shift, and go to state 234
    "float"      shift, and go to state 235
    "float2"     shift, and go to state 236
    "float3"     shift, and go to state 237
    "float4"     shift, and go to state 238
    "range"      shift, and go to state 239
    "urange"     shift, and go to state 240
    "range64"    shift, and go to state 241
    "urange64"   shift, and go to state 242
    "block"      shift, and go to state 243
    "int64"      shift, and go to state 244
    "uint64"     shift, and go to state 245
    "double"     shift, and go to state 246
    "function"   shift, and go to state 247
    "lambda"     shift, and go to state 248
    "int8"       shift, and go to state 249
    "uint8"      shift, and go to state 250
    "int16"      shift, and go to state 251
    "uint16"     shift, and go to state 252
    "tuple"      shift, and go to state 253
    "variant"    shift, and go to state 254
    "::"         shift, and go to state 55
    "$t"         shift, and go to state 255
    "name"       shift, and go to state 56
    '$'          shift, and go to state 256

    name_in_namespace                   go to state 257
    basic_type_declaration              go to state 258
    structure_type_declaration          go to state 259
    auto_type_declaration               go to state 260
    bitfield_type_declaration           go to state 261
    type_declaration_no_options         go to state 262
    type_declaration_no_options_no_dim  go to state 263
    type_declaration                    go to state 685


State 486

  662 type_declaration_no_options_no_dim: "block" '<' $@50 . optional_function_argument_list optional_function_type '>' $@51

    '('  shift, and go to state 321

    $default  reduce using rule 114 (optional_function_argument_list)

    optional_function_argument_list  go to state 686


State 487

  666 type_declaration_no_options_no_dim: "function" '<' $@52 . type_declaration '>' $@53

    "type"       shift, and go to state 216
    "array"      shift, and go to state 217
    "table"      shift, and go to state 218
    "typedecl"   shift, and go to state 219
    "iterator"   shift, and go to state 220
    "smart_ptr"  shift, and go to state 221
    "bool"       shift, and go to state 222
    "void"       shift, and go to state 223
    "string"     shift, and go to state 224
    "auto"       shift, and go to state 225
    "int"        shift, and go to state 226
    "int2"       shift, and go to state 227
    "int3"       shift, and go to state 228
    "int4"       shift, and go to state 229
    "uint"       shift, and go to state 230
    "bitfield"   shift, and go to state 231
    "uint2"      shift, and go to state 232
    "uint3"      shift, and go to state 233
    "uint4"      shift, and go to state 234
    "float"      shift, and go to state 235
    "float2"     shift, and go to state 236
    "float3"     shift, and go to state 237
    "float4"     shift, and go to state 238
    "range"      shift, and go to state 239
    "urange"     shift, and go to state 240
    "range64"    shift, and go to state 241
    "urange64"   shift, and go to state 242
    "block"      shift, and go to state 243
    "int64"      shift, and go to state 244
    "uint64"     shift, and go to state 245
    "double"     shift, and go to state 246
    "function"   shift, and go to state 247
    "lambda"     shift, and go to state 248
    "int8"       shift, and go to state 249
    "uint8"      shift, and go to state 250
    "int16"      shift, and go to state 251
    "uint16"     shift, and go to state 252
    "tuple"      shift, and go to state 253
    "variant"    shift, and go to state 254
    "::"         shift, and go to state 55
    "$t"         shift, and go to state 255
    "name"       shift, and go to state 56
    '$'          shift, and go to state 256

    name_in_namespace                   go to state 257
    basic_type_declaration              go to state 258
    structure_type_declaration          go to state 259
    auto_type_declaration               go to state 260
    bitfield_type_declaration           go to state 261
    type_declaration_no_options         go to state 262
    type_declaration_no_options_no_dim  go to state 263
    type_declaration                    go to state 687


State 488

  669 type_declaration_no_options_no_dim: "function" '<' $@54 . optional_function_argument_list optional_function_type '>' $@55

    '('  shift, and go to state 321

    $default  reduce using rule 114 (optional_function_argument_list)

    optional_function_argument_list  go to state 688


State 489

  673 type_declaration_no_options_no_dim: "lambda" '<' $@56 . type_declaration '>' $@57

    "type"       shift, and go to state 216
    "array"      shift, and go to state 217
    "table"      shift, and go to state 218
    "typedecl"   shift, and go to state 219
    "iterator"   shift, and go to state 220
    "smart_ptr"  shift, and go to state 221
    "bool"       shift, and go to state 222
    "void"       shift, and go to state 223
    "string"     shift, and go to state 224
    "auto"       shift, and go to state 225
    "int"        shift, and go to state 226
    "int2"       shift, and go to state 227
    "int3"       shift, and go to state 228
    "int4"       shift, and go to state 229
    "uint"       shift, and go to state 230
    "bitfield"   shift, and go to state 231
    "uint2"      shift, and go to state 232
    "uint3"      shift, and go to state 233
    "uint4"      shift, and go to state 234
    "float"      shift, and go to state 235
    "float2"     shift, and go to state 236
    "float3"     shift, and go to state 237
    "float4"     shift, and go to state 238
    "range"      shift, and go to state 239
    "urange"     shift, and go to state 240
    "range64"    shift, and go to state 241
    "urange64"   shift, and go to state 242
    "block"      shift, and go to state 243
    "int64"      shift, and go to state 244
    "uint64"     shift, and go to state 245
    "double"     shift, and go to state 246
    "function"   shift, and go to state 247
    "lambda"     shift, and go to state 248
    "int8"       shift, and go to state 249
    "uint8"      shift, and go to state 250
    "int16"      shift, and go to state 251
    "uint16"     shift, and go to state 252
    "tuple"      shift, and go to state 253
    "variant"    shift, and go to state 254
    "::"         shift, and go to state 55
    "$t"         shift, and go to state 255
    "name"       shift, and go to state 56
    '$'          shift, and go to state 256

    name_in_namespace                   go to state 257
    basic_type_declaration              go to state 258
    structure_type_declaration          go to state 259
    auto_type_declaration               go to state 260
    bitfield_type_declaration           go to state 261
    type_declaration_no_options         go to state 262
    type_declaration_no_options_no_dim  go to state 263
    type_declaration                    go to state 689


State 490

  676 type_declaration_no_options_no_dim: "lambda" '<' $@58 . optional_function_argument_list optional_function_type '>' $@59

    '('  shift, and go to state 321

    $default  reduce using rule 114 (optional_function_argument_list)

    optional_function_argument_list  go to state 690


State 491

  679 type_declaration_no_options_no_dim: "tuple" '<' $@60 . tuple_type_list '>' $@61

    "type"       shift, and go to state 216
    "array"      shift, and go to state 217
    "table"      shift, and go to state 218
    "typedecl"   shift, and go to state 219
    "iterator"   shift, and go to state 220
    "smart_ptr"  shift, and go to state 221
    "bool"       shift, and go to state 222
    "void"       shift, and go to state 223
    "string"     shift, and go to state 224
    "auto"       shift, and go to state 225
    "int"        shift, and go to state 226
    "int2"       shift, and go to state 227
    "int3"       shift, and go to state 228
    "int4"       shift, and go to state 229
    "uint"       shift, and go to state 230
    "bitfield"   shift, and go to state 231
    "uint2"      shift, and go to state 232
    "uint3"      shift, and go to state 233
    "uint4"      shift, and go to state 234
    "float"      shift, and go to state 235
    "float2"     shift, and go to state 236
    "float3"     shift, and go to state 237
    "float4"     shift, and go to state 238
    "range"      shift, and go to state 239
    "urange"     shift, and go to state 240
    "range64"    shift, and go to state 241
    "urange64"   shift, and go to state 242
    "block"      shift, and go to state 243
    "int64"      shift, and go to state 244
    "uint64"     shift, and go to state 245
    "double"     shift, and go to state 246
    "function"   shift, and go to state 247
    "lambda"     shift, and go to state 248
    "int8"       shift, and go to state 249
    "uint8"      shift, and go to state 250
    "int16"      shift, and go to state 251
    "uint16"     shift, and go to state 252
    "tuple"      shift, and go to state 253
    "variant"    shift, and go to state 254
    "::"         shift, and go to state 55
    "$t"         shift, and go to state 255
    "name"       shift, and go to state 509
    '$'          shift, and go to state 256

    name_in_namespace                   go to state 257
    tuple_type                          go to state 691
    tuple_type_list                     go to state 692
    basic_type_declaration              go to state 258
    structure_type_declaration          go to state 259
    auto_type_declaration               go to state 260
    bitfield_type_declaration           go to state 261
    type_declaration_no_options         go to state 262
    type_declaration_no_options_no_dim  go to state 263
    type_declaration                    go to state 512


State 492

  682 type_declaration_no_options_no_dim: "variant" '<' $@62 . variant_type_list '>' $@63

    "name"  shift, and go to state 514

    variant_type       go to state 693
    variant_type_list  go to state 694


State 493

  336 expr_method_call: expr . "->" "name" '(' ')'
  337                 | expr . "->" "name" '(' expr_list ')'
  347 expr_field: expr . '.' "name"
  348           | expr . '.' '.' "name"
  349           | expr . '.' "name" '(' ')'
  350           | expr . '.' "name" '(' expr_list ')'
  353           | expr . '.' $@17 error $@18
  373 expr: expr . "<<" expr
  374     | expr . ">>" expr
  375     | expr . "<<<" expr
  376     | expr . ">>>" expr
  377     | expr . '+' expr
  378     | expr . '-' expr
  379     | expr . '*' expr
  380     | expr . '/' expr
  381     | expr . '%' expr
  382     | expr . '<' expr
  383     | expr . '>' expr
  384     | expr . "==" expr
  385     | expr . "!=" expr
  386     | expr . "<=" expr
  387     | expr . ">=" expr
  388     | expr . '&' expr
  389     | expr . '|' expr
  390     | expr . '^' expr
  391     | expr . "&&" expr
  392     | expr . "||" expr
  393     | expr . "^^" expr
  394     | expr . ".." expr
  397     | expr . "++"
  398     | expr . "--"
  400     | expr . '[' expr ']'
  401     | expr . '.' '[' expr ']'
  402     | expr . "?[" expr ']'
  403     | expr . '.' "?[" expr ']'
  404     | expr . "?." "name"
  405     | expr . '.' "?." "name"
  413     | expr . "??" expr
  414     | expr . '?' expr ':' expr
  417     | expr . "is" "type" '<' $@19 type_declaration_no_options '>' $@20
  418     | expr . "is" basic_type_declaration
  419     | expr . "is" "name"
  420     | expr . "as" "name"
  423     | expr . "as" "type" '<' $@21 type_declaration '>' $@22
  424     | expr . "as" basic_type_declaration
  425     | expr . '?' "as" "name"
  428     | expr . '?' "as" "type" '<' $@23 type_declaration '>' $@24
  429     | expr . '?' "as" basic_type_declaration
  437     | expr . "<|" expr
  438     | expr . "|>" expr
  439     | expr . "|>" basic_type_declaration
  449 expr_mtag: expr . '.' "$f" '(' expr ')'
  450          | expr . "?." "$f" '(' expr ')'
  451          | expr . '.' '.' "$f" '(' expr ')'
  452          | expr . '.' "?." "$f" '(' expr ')'
  453          | expr . "as" "$f" '(' expr ')'
  454          | expr . '?' "as" "$f" '(' expr ')'
  455          | expr . "is" "$f" '(' expr ')'
  603 auto_type_declaration: "$t" '(' expr . ')'

    "is"   shift, and go to state 643
    "as"   shift, and go to state 644
    "<<"   shift, and go to state 645
    ">>"   shift, and go to state 646
    "++"   shift, and go to state 647
    "--"   shift, and go to state 648
    "<="   shift, and go to state 649
    ">="   shift, and go to state 650
    "=="   shift, and go to state 651
    "!="   shift, and go to state 652
    "->"   shift, and go to state 653
    "??"   shift, and go to state 654
    "?."   shift, and go to state 655
    "?["   shift, and go to state 656
    "<|"   shift, and go to state 657
    "|>"   shift, and go to state 658
    "<<<"  shift, and go to state 659
    ">>>"  shift, and go to state 660
    "&&"   shift, and go to state 661
    "||"   shift, and go to state 662
    "^^"   shift, and go to state 663
    ".."   shift, and go to state 664
    '?'    shift, and go to state 665
    '|'    shift, and go to state 666
    '^'    shift, and go to state 667
    '&'    shift, and go to state 668
    '<'    shift, and go to state 669
    '>'    shift, and go to state 670
    '-'    shift, and go to state 671
    '+'    shift, and go to state 672
    '*'    shift, and go to state 673
    '/'    shift, and go to state 674
    '%'    shift, and go to state 675
    '.'    shift, and go to state 676
    '['    shift, and go to state 677
    ')'    shift, and go to state 695


State 494

  630 type_declaration_no_options_no_dim: '$' name_in_namespace '<' . $@39 type_declaration_no_options_list '>' '(' optional_expr_list ')'

    $default  reduce using rule 629 ($@39)

    $@39  go to state 696


State 495

  628 type_declaration_no_options_no_dim: '$' name_in_namespace '(' . optional_expr_list ')'

    "struct"                          shift, and go to state 408
    "class"                           shift, and go to state 409
    "true"                            shift, and go to state 410
    "false"                           shift, and go to state 411
    "new"                             shift, and go to state 412
    "typeinfo"                        shift, and go to state 413
    "type"                            shift, and go to state 414
    "array"                           shift, and go to state 415
    "null"                            shift, and go to state 416
    "table"                           shift, and go to state 417
    "deref"                           shift, and go to state 418
    "cast"                            shift, and go to state 419
    "upcast"                          shift, and go to state 420
    "addr"                            shift, and go to state 421
    "reinterpret"                     shift, and go to state 422
    "fixed_array"                     shift, and go to state 423
    "default"                         shift, and go to state 424
    "bool"                            shift, and go to state 222
    "void"                            shift, and go to state 223
    "string"                          shift, and go to state 224
    "int"                             shift, and go to state 226
    "int2"                            shift, and go to state 227
    "int3"                            shift, and go to state 228
    "int4"                            shift, and go to state 229
    "uint"                            shift, and go to state 230
    "bitfield"                        shift, and go to state 425
    "uint2"                           shift, and go to state 232
    "uint3"                           shift, and go to state 233
    "uint4"                           shift, and go to state 234
    "float"                           shift, and go to state 235
    "float2"                          shift, and go to state 236
    "float3"                          shift, and go to state 237
    "float4"                          shift, and go to state 238
    "range"                           shift, and go to state 239
    "urange"                          shift, and go to state 240
    "range64"                         shift, and go to state 241
    "urange64"                        shift, and go to state 242
    "int64"                           shift, and go to state 244
    "uint64"                          shift, and go to state 245
    "double"                          shift, and go to state 246
    "int8"                            shift, and go to state 249
    "uint8"                           shift, and go to state 250
    "int16"                           shift, and go to state 251
    "uint16"                          shift, and go to state 252
    "tuple"                           shift, and go to state 426
    "variant"                         shift, and go to state 427
    "generator"                       shift, and go to state 428
    "++"                              shift, and go to state 429
    "--"                              shift, and go to state 430
    "::"                              shift, and go to state 55
    "$$"                              shift, and go to state 431
    "$i"                              shift, and go to state 432
    "$v"                              shift, and go to state 433
    "$b"                              shift, and go to state 434
    "$a"                              shift, and go to state 435
    "$c"                              shift, and go to state 436
    "..."                             shift, and go to state 437
    "integer constant"                shift, and go to state 438
    "long integer constant"           shift, and go to state 439
    "unsigned integer constant"       shift, and go to state 440
    "unsigned long integer constant"  shift, and go to state 441
    "unsigned int8 constant"          shift, and go to state 442
    "floating point constant"         shift, and go to state 443
    "double constant"                 shift, and go to state 444
    "name"                            shift, and go to state 56
    "start of the string"             shift, and go to state 445
    "begin of code block"             shift, and go to state 446
    '-'                               shift, and go to state 447
    '+'                               shift, and go to state 448
    '*'                               shift, and go to state 449
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 450
    '!'                               shift, and go to state 451
    '['                               shift, and go to state 452
    '('                               shift, and go to state 453
    '$'                               shift, and go to state 454
    '@'                               shift, and go to state 455

    $default  reduce using rule 235 (optional_expr_list)

    string_builder          go to state 456
    expr_reader             go to state 457
    expr_call_pipe          go to state 458
    optional_expr_list      go to state 697
    name_in_namespace       go to state 459
    expr_new                go to state 460
    expr_cast               go to state 461
    expr_type_decl          go to state 462
    expr_type_info          go to state 463
    expr_list               go to state 698
    block_or_lambda         go to state 464
    expr_full_block         go to state 465
    expr_numeric_const      go to state 466
    expr_named_call         go to state 467
    expr_method_call        go to state 468
    func_addr_expr          go to state 469
    expr_field              go to state 470
    expr_call               go to state 471
    expr                    go to state 634
    expr_mtag               go to state 473
    basic_type_declaration  go to state 474
    make_decl               go to state 475
    make_struct_decl        go to state 476
    make_tuple_call         go to state 477
    make_dim_decl           go to state 478
    make_table_decl         go to state 479
    array_comprehension     go to state 480


State 496

  640 type_declaration_no_options_no_dim: type_declaration_no_options_no_dim "==" "const" .

    $default  reduce using rule 640 (type_declaration_no_options_no_dim)


State 497

  641 type_declaration_no_options_no_dim: type_declaration_no_options_no_dim "==" '&' .

    $default  reduce using rule 641 (type_declaration_no_options_no_dim)


State 498

  634 type_declaration_no_options_no_dim: type_declaration_no_options_no_dim '-' "const" .

    $default  reduce using rule 634 (type_declaration_no_options_no_dim)


State 499

  636 type_declaration_no_options_no_dim: type_declaration_no_options_no_dim '-' '&' .

    $default  reduce using rule 636 (type_declaration_no_options_no_dim)


State 500

  631 type_declaration_no_options_no_dim: type_declaration_no_options_no_dim '-' '[' . ']'

    ']'  shift, and go to state 699


State 501

  639 type_declaration_no_options_no_dim: type_declaration_no_options_no_dim '-' '#' .

    $default  reduce using rule 639 (type_declaration_no_options_no_dim)


State 502

  615 dim_list: '[' ']' .

    $default  reduce using rule 615 (dim_list)


State 503

  336 expr_method_call: expr . "->" "name" '(' ')'
  337                 | expr . "->" "name" '(' expr_list ')'
  347 expr_field: expr . '.' "name"
  348           | expr . '.' '.' "name"
  349           | expr . '.' "name" '(' ')'
  350           | expr . '.' "name" '(' expr_list ')'
  353           | expr . '.' $@17 error $@18
  373 expr: expr . "<<" expr
  374     | expr . ">>" expr
  375     | expr . "<<<" expr
  376     | expr . ">>>" expr
  377     | expr . '+' expr
  378     | expr . '-' expr
  379     | expr . '*' expr
  380     | expr . '/' expr
  381     | expr . '%' expr
  382     | expr . '<' expr
  383     | expr . '>' expr
  384     | expr . "==" expr
  385     | expr . "!=" expr
  386     | expr . "<=" expr
  387     | expr . ">=" expr
  388     | expr . '&' expr
  389     | expr . '|' expr
  390     | expr . '^' expr
  391     | expr . "&&" expr
  392     | expr . "||" expr
  393     | expr . "^^" expr
  394     | expr . ".." expr
  397     | expr . "++"
  398     | expr . "--"
  400     | expr . '[' expr ']'
  401     | expr . '.' '[' expr ']'
  402     | expr . "?[" expr ']'
  403     | expr . '.' "?[" expr ']'
  404     | expr . "?." "name"
  405     | expr . '.' "?." "name"
  413     | expr . "??" expr
  414     | expr . '?' expr ':' expr
  417     | expr . "is" "type" '<' $@19 type_declaration_no_options '>' $@20
  418     | expr . "is" basic_type_declaration
  419     | expr . "is" "name"
  420     | expr . "as" "name"
  423     | expr . "as" "type" '<' $@21 type_declaration '>' $@22
  424     | expr . "as" basic_type_declaration
  425     | expr . '?' "as" "name"
  428     | expr . '?' "as" "type" '<' $@23 type_declaration '>' $@24
  429     | expr . '?' "as" basic_type_declaration
  437     | expr . "<|" expr
  438     | expr . "|>" expr
  439     | expr . "|>" basic_type_declaration
  449 expr_mtag: expr . '.' "$f" '(' expr ')'
  450          | expr . "?." "$f" '(' expr ')'
  451          | expr . '.' '.' "$f" '(' expr ')'
  452          | expr . '.' "?." "$f" '(' expr ')'
  453          | expr . "as" "$f" '(' expr ')'
  454          | expr . '?' "as" "$f" '(' expr ')'
  455          | expr . "is" "$f" '(' expr ')'
  614 dim_list: '[' expr . ']'

    "is"   shift, and go to state 643
    "as"   shift, and go to state 644
    "<<"   shift, and go to state 645
    ">>"   shift, and go to state 646
    "++"   shift, and go to state 647
    "--"   shift, and go to state 648
    "<="   shift, and go to state 649
    ">="   shift, and go to state 650
    "=="   shift, and go to state 651
    "!="   shift, and go to state 652
    "->"   shift, and go to state 653
    "??"   shift, and go to state 654
    "?."   shift, and go to state 655
    "?["   shift, and go to state 656
    "<|"   shift, and go to state 657
    "|>"   shift, and go to state 658
    "<<<"  shift, and go to state 659
    ">>>"  shift, and go to state 660
    "&&"   shift, and go to state 661
    "||"   shift, and go to state 662
    "^^"   shift, and go to state 663
    ".."   shift, and go to state 664
    '?'    shift, and go to state 665
    '|'    shift, and go to state 666
    '^'    shift, and go to state 667
    '&'    shift, and go to state 668
    '<'    shift, and go to state 669
    '>'    shift, and go to state 670
    '-'    shift, and go to state 671
    '+'    shift, and go to state 672
    '*'    shift, and go to state 673
    '/'    shift, and go to state 674
    '%'    shift, and go to state 675
    '.'    shift, and go to state 676
    '['    shift, and go to state 677
    ']'    shift, and go to state 700


State 504

  616 dim_list: dim_list '[' . expr ']'
  617         | dim_list '[' . ']'

    "struct"                          shift, and go to state 408
    "class"                           shift, and go to state 409
    "true"                            shift, and go to state 410
    "false"                           shift, and go to state 411
    "new"                             shift, and go to state 412
    "typeinfo"                        shift, and go to state 413
    "type"                            shift, and go to state 414
    "array"                           shift, and go to state 415
    "null"                            shift, and go to state 416
    "table"                           shift, and go to state 417
    "deref"                           shift, and go to state 418
    "cast"                            shift, and go to state 419
    "upcast"                          shift, and go to state 420
    "addr"                            shift, and go to state 421
    "reinterpret"                     shift, and go to state 422
    "fixed_array"                     shift, and go to state 423
    "default"                         shift, and go to state 424
    "bool"                            shift, and go to state 222
    "void"                            shift, and go to state 223
    "string"                          shift, and go to state 224
    "int"                             shift, and go to state 226
    "int2"                            shift, and go to state 227
    "int3"                            shift, and go to state 228
    "int4"                            shift, and go to state 229
    "uint"                            shift, and go to state 230
    "bitfield"                        shift, and go to state 425
    "uint2"                           shift, and go to state 232
    "uint3"                           shift, and go to state 233
    "uint4"                           shift, and go to state 234
    "float"                           shift, and go to state 235
    "float2"                          shift, and go to state 236
    "float3"                          shift, and go to state 237
    "float4"                          shift, and go to state 238
    "range"                           shift, and go to state 239
    "urange"                          shift, and go to state 240
    "range64"                         shift, and go to state 241
    "urange64"                        shift, and go to state 242
    "int64"                           shift, and go to state 244
    "uint64"                          shift, and go to state 245
    "double"                          shift, and go to state 246
    "int8"                            shift, and go to state 249
    "uint8"                           shift, and go to state 250
    "int16"                           shift, and go to state 251
    "uint16"                          shift, and go to state 252
    "tuple"                           shift, and go to state 426
    "variant"                         shift, and go to state 427
    "generator"                       shift, and go to state 428
    "++"                              shift, and go to state 429
    "--"                              shift, and go to state 430
    "::"                              shift, and go to state 55
    "$$"                              shift, and go to state 431
    "$i"                              shift, and go to state 432
    "$v"                              shift, and go to state 433
    "$b"                              shift, and go to state 434
    "$a"                              shift, and go to state 435
    "$c"                              shift, and go to state 436
    "..."                             shift, and go to state 437
    "integer constant"                shift, and go to state 438
    "long integer constant"           shift, and go to state 439
    "unsigned integer constant"       shift, and go to state 440
    "unsigned long integer constant"  shift, and go to state 441
    "unsigned int8 constant"          shift, and go to state 442
    "floating point constant"         shift, and go to state 443
    "double constant"                 shift, and go to state 444
    "name"                            shift, and go to state 56
    "start of the string"             shift, and go to state 445
    "begin of code block"             shift, and go to state 446
    '-'                               shift, and go to state 447
    '+'                               shift, and go to state 448
    '*'                               shift, and go to state 449
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 450
    '!'                               shift, and go to state 451
    '['                               shift, and go to state 452
    ']'                               shift, and go to state 701
    '('                               shift, and go to state 453
    '$'                               shift, and go to state 454
    '@'                               shift, and go to state 455

    string_builder          go to state 456
    expr_reader             go to state 457
    expr_call_pipe          go to state 458
    name_in_namespace       go to state 459
    expr_new                go to state 460
    expr_cast               go to state 461
    expr_type_decl          go to state 462
    expr_type_info          go to state 463
    block_or_lambda         go to state 464
    expr_full_block         go to state 465
    expr_numeric_const      go to state 466
    expr_named_call         go to state 467
    expr_method_call        go to state 468
    func_addr_expr          go to state 469
    expr_field              go to state 470
    expr_call               go to state 471
    expr                    go to state 702
    expr_mtag               go to state 473
    basic_type_declaration  go to state 474
    make_decl               go to state 475
    make_struct_decl        go to state 476
    make_tuple_call         go to state 477
    make_dim_decl           go to state 478
    make_table_decl         go to state 479
    array_comprehension     go to state 480


State 505

  685 type_declaration: type_declaration '|' '#' .

    $default  reduce using rule 685 (type_declaration)


State 506

  684 type_declaration: type_declaration '|' type_declaration_no_options .

    $default  reduce using rule 684 (type_declaration)


State 507

  608 bitfield_alias_bits: bitfield_alias_bits ',' . "name"
  761 optional_comma: ',' .

    "name"  shift, and go to state 703

    $default  reduce using rule 761 (optional_comma)


State 508

  697 bitfield_alias_declaration: "bitfield" optional_public_or_private_alias "name" $@70 "begin of code block" $@71 bitfield_alias_bits optional_comma . $@72 "end of code block"

    $default  reduce using rule 696 ($@72)

    $@72  go to state 704


State 509

  239 name_in_namespace: "name" .
  240                  | "name" . "::" "name"
  482 tuple_type: "name" . ':' type_declaration

    "::"  shift, and go to state 93
    ':'   shift, and go to state 705

    $default  reduce using rule 239 (name_in_namespace)


State 510

  486 tuple_alias_type_list: tuple_alias_type_list "end of expression" .

    $default  reduce using rule 486 (tuple_alias_type_list)


State 511

  487 tuple_alias_type_list: tuple_alias_type_list tuple_type . "end of expression"

    "end of expression"  shift, and go to state 706


State 512

  481 tuple_type: type_declaration .
  684 type_declaration: type_declaration . '|' type_declaration_no_options
  685                 | type_declaration . '|' '#'

    '|'  shift, and go to state 372

    $default  reduce using rule 481 (tuple_type)


State 513

  689 tuple_alias_declaration: "tuple" optional_public_or_private_alias "name" $@64 "begin of code block" $@65 tuple_alias_type_list $@66 . "end of code block"

    "end of code block"  shift, and go to state 707


State 514

  488 variant_type: "name" . ':' type_declaration

    ':'  shift, and go to state 708


State 515

  492 variant_alias_type_list: variant_alias_type_list "end of expression" .

    $default  reduce using rule 492 (variant_alias_type_list)


State 516

  493 variant_alias_type_list: variant_alias_type_list variant_type . "end of expression"

    "end of expression"  shift, and go to state 709


State 517

  693 variant_alias_declaration: "variant" optional_public_or_private_alias "name" $@67 "begin of code block" $@68 variant_alias_type_list $@69 . "end of code block"

    "end of code block"  shift, and go to state 710


State 518

  178 function_name: "operator" '?' "as" "name" .

    $default  reduce using rule 178 (function_name)


State 519

  168 function_name: "operator" '.' "name" ":=" .

    $default  reduce using rule 168 (function_name)


State 520

  478 function_argument_declaration: "$a" '(' . expr ')'

    "struct"                          shift, and go to state 408
    "class"                           shift, and go to state 409
    "true"                            shift, and go to state 410
    "false"                           shift, and go to state 411
    "new"                             shift, and go to state 412
    "typeinfo"                        shift, and go to state 413
    "type"                            shift, and go to state 414
    "array"                           shift, and go to state 415
    "null"                            shift, and go to state 416
    "table"                           shift, and go to state 417
    "deref"                           shift, and go to state 418
    "cast"                            shift, and go to state 419
    "upcast"                          shift, and go to state 420
    "addr"                            shift, and go to state 421
    "reinterpret"                     shift, and go to state 422
    "fixed_array"                     shift, and go to state 423
    "default"                         shift, and go to state 424
    "bool"                            shift, and go to state 222
    "void"                            shift, and go to state 223
    "string"                          shift, and go to state 224
    "int"                             shift, and go to state 226
    "int2"                            shift, and go to state 227
    "int3"                            shift, and go to state 228
    "int4"                            shift, and go to state 229
    "uint"                            shift, and go to state 230
    "bitfield"                        shift, and go to state 425
    "uint2"                           shift, and go to state 232
    "uint3"                           shift, and go to state 233
    "uint4"                           shift, and go to state 234
    "float"                           shift, and go to state 235
    "float2"                          shift, and go to state 236
    "float3"                          shift, and go to state 237
    "float4"                          shift, and go to state 238
    "range"                           shift, and go to state 239
    "urange"                          shift, and go to state 240
    "range64"                         shift, and go to state 241
    "urange64"                        shift, and go to state 242
    "int64"                           shift, and go to state 244
    "uint64"                          shift, and go to state 245
    "double"                          shift, and go to state 246
    "int8"                            shift, and go to state 249
    "uint8"                           shift, and go to state 250
    "int16"                           shift, and go to state 251
    "uint16"                          shift, and go to state 252
    "tuple"                           shift, and go to state 426
    "variant"                         shift, and go to state 427
    "generator"                       shift, and go to state 428
    "++"                              shift, and go to state 429
    "--"                              shift, and go to state 430
    "::"                              shift, and go to state 55
    "$$"                              shift, and go to state 431
    "$i"                              shift, and go to state 432
    "$v"                              shift, and go to state 433
    "$b"                              shift, and go to state 434
    "$a"                              shift, and go to state 435
    "$c"                              shift, and go to state 436
    "..."                             shift, and go to state 437
    "integer constant"                shift, and go to state 438
    "long integer constant"           shift, and go to state 439
    "unsigned integer constant"       shift, and go to state 440
    "unsigned long integer constant"  shift, and go to state 441
    "unsigned int8 constant"          shift, and go to state 442
    "floating point constant"         shift, and go to state 443
    "double constant"                 shift, and go to state 444
    "name"                            shift, and go to state 56
    "start of the string"             shift, and go to state 445
    "begin of code block"             shift, and go to state 446
    '-'                               shift, and go to state 447
    '+'                               shift, and go to state 448
    '*'                               shift, and go to state 449
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 450
    '!'                               shift, and go to state 451
    '['                               shift, and go to state 452
    '('                               shift, and go to state 453
    '$'                               shift, and go to state 454
    '@'                               shift, and go to state 455

    string_builder          go to state 456
    expr_reader             go to state 457
    expr_call_pipe          go to state 458
    name_in_namespace       go to state 459
    expr_new                go to state 460
    expr_cast               go to state 461
    expr_type_decl          go to state 462
    expr_type_info          go to state 463
    block_or_lambda         go to state 464
    expr_full_block         go to state 465
    expr_numeric_const      go to state 466
    expr_named_call         go to state 467
    expr_method_call        go to state 468
    func_addr_expr          go to state 469
    expr_field              go to state 470
    expr_call               go to state 471
    expr                    go to state 711
    expr_mtag               go to state 473
    basic_type_declaration  go to state 474
    make_decl               go to state 475
    make_struct_decl        go to state 476
    make_tuple_call         go to state 477
    make_dim_decl           go to state 478
    make_table_decl         go to state 479
    array_comprehension     go to state 480


State 521

  261 kwd_let_var_or_nothing: "let" .

    $default  reduce using rule 261 (kwd_let_var_or_nothing)


State 522

  262 kwd_let_var_or_nothing: "var" .

    $default  reduce using rule 262 (kwd_let_var_or_nothing)


State 523

  477 function_argument_declaration: optional_field_annotation kwd_let_var_or_nothing . variable_declaration

    "$i"    shift, and go to state 712
    "name"  shift, and go to state 713

    variable_declaration         go to state 714
    variable_name_with_pos_list  go to state 715


State 524

  480 function_argument_list: function_argument_list "end of expression" . function_argument_declaration

    "$a"  shift, and go to state 384
    '@'   shift, and go to state 208

    $default  reduce using rule 457 (optional_field_annotation)

    metadata_argument_list         go to state 209
    optional_field_annotation      go to state 386
    function_argument_declaration  go to state 716


State 525

  116 optional_function_argument_list: '(' function_argument_list ')' .

    $default  reduce using rule 116 (optional_function_argument_list)


State 526

  118 optional_function_type: ':' type_declaration .
  684 type_declaration: type_declaration . '|' type_declaration_no_options
  685                 | type_declaration . '|' '#'

    '|'  shift, and go to state 372

    $default  reduce using rule 118 (optional_function_type)


State 527

  234 expressions: expressions error .

    $default  reduce using rule 234 (expressions)


State 528

   72 expression_while_loop: "while" . expr expression_block

    "struct"                          shift, and go to state 408
    "class"                           shift, and go to state 409
    "true"                            shift, and go to state 410
    "false"                           shift, and go to state 411
    "new"                             shift, and go to state 412
    "typeinfo"                        shift, and go to state 413
    "type"                            shift, and go to state 414
    "array"                           shift, and go to state 415
    "null"                            shift, and go to state 416
    "table"                           shift, and go to state 417
    "deref"                           shift, and go to state 418
    "cast"                            shift, and go to state 419
    "upcast"                          shift, and go to state 420
    "addr"                            shift, and go to state 421
    "reinterpret"                     shift, and go to state 422
    "fixed_array"                     shift, and go to state 423
    "default"                         shift, and go to state 424
    "bool"                            shift, and go to state 222
    "void"                            shift, and go to state 223
    "string"                          shift, and go to state 224
    "int"                             shift, and go to state 226
    "int2"                            shift, and go to state 227
    "int3"                            shift, and go to state 228
    "int4"                            shift, and go to state 229
    "uint"                            shift, and go to state 230
    "bitfield"                        shift, and go to state 425
    "uint2"                           shift, and go to state 232
    "uint3"                           shift, and go to state 233
    "uint4"                           shift, and go to state 234
    "float"                           shift, and go to state 235
    "float2"                          shift, and go to state 236
    "float3"                          shift, and go to state 237
    "float4"                          shift, and go to state 238
    "range"                           shift, and go to state 239
    "urange"                          shift, and go to state 240
    "range64"                         shift, and go to state 241
    "urange64"                        shift, and go to state 242
    "int64"                           shift, and go to state 244
    "uint64"                          shift, and go to state 245
    "double"                          shift, and go to state 246
    "int8"                            shift, and go to state 249
    "uint8"                           shift, and go to state 250
    "int16"                           shift, and go to state 251
    "uint16"                          shift, and go to state 252
    "tuple"                           shift, and go to state 426
    "variant"                         shift, and go to state 427
    "generator"                       shift, and go to state 428
    "++"                              shift, and go to state 429
    "--"                              shift, and go to state 430
    "::"                              shift, and go to state 55
    "$$"                              shift, and go to state 431
    "$i"                              shift, and go to state 432
    "$v"                              shift, and go to state 433
    "$b"                              shift, and go to state 434
    "$a"                              shift, and go to state 435
    "$c"                              shift, and go to state 436
    "..."                             shift, and go to state 437
    "integer constant"                shift, and go to state 438
    "long integer constant"           shift, and go to state 439
    "unsigned integer constant"       shift, and go to state 440
    "unsigned long integer constant"  shift, and go to state 441
    "unsigned int8 constant"          shift, and go to state 442
    "floating point constant"         shift, and go to state 443
    "double constant"                 shift, and go to state 444
    "name"                            shift, and go to state 56
    "start of the string"             shift, and go to state 445
    "begin of code block"             shift, and go to state 446
    '-'                               shift, and go to state 447
    '+'                               shift, and go to state 448
    '*'                               shift, and go to state 449
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 450
    '!'                               shift, and go to state 451
    '['                               shift, and go to state 452
    '('                               shift, and go to state 453
    '$'                               shift, and go to state 454
    '@'                               shift, and go to state 455

    string_builder          go to state 456
    expr_reader             go to state 457
    expr_call_pipe          go to state 458
    name_in_namespace       go to state 459
    expr_new                go to state 460
    expr_cast               go to state 461
    expr_type_decl          go to state 462
    expr_type_info          go to state 463
    block_or_lambda         go to state 464
    expr_full_block         go to state 465
    expr_numeric_const      go to state 466
    expr_named_call         go to state 467
    expr_method_call        go to state 468
    func_addr_expr          go to state 469
    expr_field              go to state 470
    expr_call               go to state 471
    expr                    go to state 717
    expr_mtag               go to state 473
    basic_type_declaration  go to state 474
    make_decl               go to state 475
    make_struct_decl        go to state 476
    make_tuple_call         go to state 477
    make_dim_decl           go to state 478
    make_table_decl         go to state 479
    array_comprehension     go to state 480


State 529

   59 if_or_static_if: "if" .

    $default  reduce using rule 59 (if_or_static_if)


State 530

   60 if_or_static_if: "static_if" .

    $default  reduce using rule 60 (if_or_static_if)


State 531

   70 expression_for_loop: "for" . '(' variable_name_with_pos_list "in" expr_list ')' expression_block

    '('  shift, and go to state 718


State 532

  254 expression_return: "return" .
  255                  | "return" . expr
  256                  | "return" . "<-" expr

    "struct"                          shift, and go to state 408
    "class"                           shift, and go to state 409
    "true"                            shift, and go to state 410
    "false"                           shift, and go to state 411
    "new"                             shift, and go to state 412
    "typeinfo"                        shift, and go to state 413
    "type"                            shift, and go to state 414
    "array"                           shift, and go to state 415
    "null"                            shift, and go to state 416
    "table"                           shift, and go to state 417
    "deref"                           shift, and go to state 418
    "cast"                            shift, and go to state 419
    "upcast"                          shift, and go to state 420
    "addr"                            shift, and go to state 421
    "reinterpret"                     shift, and go to state 422
    "fixed_array"                     shift, and go to state 423
    "default"                         shift, and go to state 424
    "bool"                            shift, and go to state 222
    "void"                            shift, and go to state 223
    "string"                          shift, and go to state 224
    "int"                             shift, and go to state 226
    "int2"                            shift, and go to state 227
    "int3"                            shift, and go to state 228
    "int4"                            shift, and go to state 229
    "uint"                            shift, and go to state 230
    "bitfield"                        shift, and go to state 425
    "uint2"                           shift, and go to state 232
    "uint3"                           shift, and go to state 233
    "uint4"                           shift, and go to state 234
    "float"                           shift, and go to state 235
    "float2"                          shift, and go to state 236
    "float3"                          shift, and go to state 237
    "float4"                          shift, and go to state 238
    "range"                           shift, and go to state 239
    "urange"                          shift, and go to state 240
    "range64"                         shift, and go to state 241
    "urange64"                        shift, and go to state 242
    "int64"                           shift, and go to state 244
    "uint64"                          shift, and go to state 245
    "double"                          shift, and go to state 246
    "int8"                            shift, and go to state 249
    "uint8"                           shift, and go to state 250
    "int16"                           shift, and go to state 251
    "uint16"                          shift, and go to state 252
    "tuple"                           shift, and go to state 426
    "variant"                         shift, and go to state 427
    "generator"                       shift, and go to state 428
    "++"                              shift, and go to state 429
    "--"                              shift, and go to state 430
    "<-"                              shift, and go to state 719
    "::"                              shift, and go to state 55
    "$$"                              shift, and go to state 431
    "$i"                              shift, and go to state 432
    "$v"                              shift, and go to state 433
    "$b"                              shift, and go to state 434
    "$a"                              shift, and go to state 435
    "$c"                              shift, and go to state 436
    "..."                             shift, and go to state 437
    "integer constant"                shift, and go to state 438
    "long integer constant"           shift, and go to state 439
    "unsigned integer constant"       shift, and go to state 440
    "unsigned long integer constant"  shift, and go to state 441
    "unsigned int8 constant"          shift, and go to state 442
    "floating point constant"         shift, and go to state 443
    "double constant"                 shift, and go to state 444
    "name"                            shift, and go to state 56
    "start of the string"             shift, and go to state 445
    "begin of code block"             shift, and go to state 446
    '-'                               shift, and go to state 447
    '+'                               shift, and go to state 448
    '*'                               shift, and go to state 449
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 450
    '!'                               shift, and go to state 451
    '['                               shift, and go to state 452
    '('                               shift, and go to state 453
    '$'                               shift, and go to state 454
    '@'                               shift, and go to state 455

    $default  reduce using rule 254 (expression_return)

    string_builder          go to state 456
    expr_reader             go to state 457
    expr_call_pipe          go to state 458
    name_in_namespace       go to state 459
    expr_new                go to state 460
    expr_cast               go to state 461
    expr_type_decl          go to state 462
    expr_type_info          go to state 463
    block_or_lambda         go to state 464
    expr_full_block         go to state 465
    expr_numeric_const      go to state 466
    expr_named_call         go to state 467
    expr_method_call        go to state 468
    func_addr_expr          go to state 469
    expr_field              go to state 470
    expr_call               go to state 471
    expr                    go to state 720
    expr_mtag               go to state 473
    basic_type_declaration  go to state 474
    make_decl               go to state 475
    make_struct_decl        go to state 476
    make_tuple_call         go to state 477
    make_dim_decl           go to state 478
    make_table_decl         go to state 479
    array_comprehension     go to state 480


State 533

  252 expression_break: "break" .

    $default  reduce using rule 252 (expression_break)


State 534

  260 expression_try_catch: "try" . expression_block "recover" expression_block

    "begin of code block"  shift, and go to state 323

    expression_block  go to state 721


State 535

  242 expression_delete: "delete" . expr
  243                  | "delete" . "explicit" expr

    "struct"                          shift, and go to state 408
    "class"                           shift, and go to state 409
    "true"                            shift, and go to state 410
    "false"                           shift, and go to state 411
    "new"                             shift, and go to state 412
    "typeinfo"                        shift, and go to state 413
    "type"                            shift, and go to state 414
    "array"                           shift, and go to state 415
    "null"                            shift, and go to state 416
    "table"                           shift, and go to state 417
    "deref"                           shift, and go to state 418
    "cast"                            shift, and go to state 419
    "upcast"                          shift, and go to state 420
    "addr"                            shift, and go to state 421
    "reinterpret"                     shift, and go to state 422
    "explicit"                        shift, and go to state 722
    "fixed_array"                     shift, and go to state 423
    "default"                         shift, and go to state 424
    "bool"                            shift, and go to state 222
    "void"                            shift, and go to state 223
    "string"                          shift, and go to state 224
    "int"                             shift, and go to state 226
    "int2"                            shift, and go to state 227
    "int3"                            shift, and go to state 228
    "int4"                            shift, and go to state 229
    "uint"                            shift, and go to state 230
    "bitfield"                        shift, and go to state 425
    "uint2"                           shift, and go to state 232
    "uint3"                           shift, and go to state 233
    "uint4"                           shift, and go to state 234
    "float"                           shift, and go to state 235
    "float2"                          shift, and go to state 236
    "float3"                          shift, and go to state 237
    "float4"                          shift, and go to state 238
    "range"                           shift, and go to state 239
    "urange"                          shift, and go to state 240
    "range64"                         shift, and go to state 241
    "urange64"                        shift, and go to state 242
    "int64"                           shift, and go to state 244
    "uint64"                          shift, and go to state 245
    "double"                          shift, and go to state 246
    "int8"                            shift, and go to state 249
    "uint8"                           shift, and go to state 250
    "int16"                           shift, and go to state 251
    "uint16"                          shift, and go to state 252
    "tuple"                           shift, and go to state 426
    "variant"                         shift, and go to state 427
    "generator"                       shift, and go to state 428
    "++"                              shift, and go to state 429
    "--"                              shift, and go to state 430
    "::"                              shift, and go to state 55
    "$$"                              shift, and go to state 431
    "$i"                              shift, and go to state 432
    "$v"                              shift, and go to state 433
    "$b"                              shift, and go to state 434
    "$a"                              shift, and go to state 435
    "$c"                              shift, and go to state 436
    "..."                             shift, and go to state 437
    "integer constant"                shift, and go to state 438
    "long integer constant"           shift, and go to state 439
    "unsigned integer constant"       shift, and go to state 440
    "unsigned long integer constant"  shift, and go to state 441
    "unsigned int8 constant"          shift, and go to state 442
    "floating point constant"         shift, and go to state 443
    "double constant"                 shift, and go to state 444
    "name"                            shift, and go to state 56
    "start of the string"             shift, and go to state 445
    "begin of code block"             shift, and go to state 446
    '-'                               shift, and go to state 447
    '+'                               shift, and go to state 448
    '*'                               shift, and go to state 449
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 450
    '!'                               shift, and go to state 451
    '['                               shift, and go to state 452
    '('                               shift, and go to state 453
    '$'                               shift, and go to state 454
    '@'                               shift, and go to state 455

    string_builder          go to state 456
    expr_reader             go to state 457
    expr_call_pipe          go to state 458
    name_in_namespace       go to state 459
    expr_new                go to state 460
    expr_cast               go to state 461
    expr_type_decl          go to state 462
    expr_type_info          go to state 463
    block_or_lambda         go to state 464
    expr_full_block         go to state 465
    expr_numeric_const      go to state 466
    expr_named_call         go to state 467
    expr_method_call        go to state 468
    func_addr_expr          go to state 469
    expr_field              go to state 470
    expr_call               go to state 471
    expr                    go to state 723
    expr_mtag               go to state 473
    basic_type_declaration  go to state 474
    make_decl               go to state 475
    make_struct_decl        go to state 476
    make_tuple_call         go to state 477
    make_dim_decl           go to state 478
    make_table_decl         go to state 479
    array_comprehension     go to state 480


State 536

   73 expression_with: "with" . expr expression_block

    "struct"                          shift, and go to state 408
    "class"                           shift, and go to state 409
    "true"                            shift, and go to state 410
    "false"                           shift, and go to state 411
    "new"                             shift, and go to state 412
    "typeinfo"                        shift, and go to state 413
    "type"                            shift, and go to state 414
    "array"                           shift, and go to state 415
    "null"                            shift, and go to state 416
    "table"                           shift, and go to state 417
    "deref"                           shift, and go to state 418
    "cast"                            shift, and go to state 419
    "upcast"                          shift, and go to state 420
    "addr"                            shift, and go to state 421
    "reinterpret"                     shift, and go to state 422
    "fixed_array"                     shift, and go to state 423
    "default"                         shift, and go to state 424
    "bool"                            shift, and go to state 222
    "void"                            shift, and go to state 223
    "string"                          shift, and go to state 224
    "int"                             shift, and go to state 226
    "int2"                            shift, and go to state 227
    "int3"                            shift, and go to state 228
    "int4"                            shift, and go to state 229
    "uint"                            shift, and go to state 230
    "bitfield"                        shift, and go to state 425
    "uint2"                           shift, and go to state 232
    "uint3"                           shift, and go to state 233
    "uint4"                           shift, and go to state 234
    "float"                           shift, and go to state 235
    "float2"                          shift, and go to state 236
    "float3"                          shift, and go to state 237
    "float4"                          shift, and go to state 238
    "range"                           shift, and go to state 239
    "urange"                          shift, and go to state 240
    "range64"                         shift, and go to state 241
    "urange64"                        shift, and go to state 242
    "int64"                           shift, and go to state 244
    "uint64"                          shift, and go to state 245
    "double"                          shift, and go to state 246
    "int8"                            shift, and go to state 249
    "uint8"                           shift, and go to state 250
    "int16"                           shift, and go to state 251
    "uint16"                          shift, and go to state 252
    "tuple"                           shift, and go to state 426
    "variant"                         shift, and go to state 427
    "generator"                       shift, and go to state 428
    "++"                              shift, and go to state 429
    "--"                              shift, and go to state 430
    "::"                              shift, and go to state 55
    "$$"                              shift, and go to state 431
    "$i"                              shift, and go to state 432
    "$v"                              shift, and go to state 433
    "$b"                              shift, and go to state 434
    "$a"                              shift, and go to state 435
    "$c"                              shift, and go to state 436
    "..."                             shift, and go to state 437
    "integer constant"                shift, and go to state 438
    "long integer constant"           shift, and go to state 439
    "unsigned integer constant"       shift, and go to state 440
    "unsigned long integer constant"  shift, and go to state 441
    "unsigned int8 constant"          shift, and go to state 442
    "floating point constant"         shift, and go to state 443
    "double constant"                 shift, and go to state 444
    "name"                            shift, and go to state 56
    "start of the string"             shift, and go to state 445
    "begin of code block"             shift, and go to state 446
    '-'                               shift, and go to state 447
    '+'                               shift, and go to state 448
    '*'                               shift, and go to state 449
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 450
    '!'                               shift, and go to state 451
    '['                               shift, and go to state 452
    '('                               shift, and go to state 453
    '$'                               shift, and go to state 454
    '@'                               shift, and go to state 455

    string_builder          go to state 456
    expr_reader             go to state 457
    expr_call_pipe          go to state 458
    name_in_namespace       go to state 459
    expr_new                go to state 460
    expr_cast               go to state 461
    expr_type_decl          go to state 462
    expr_type_info          go to state 463
    block_or_lambda         go to state 464
    expr_full_block         go to state 465
    expr_numeric_const      go to state 466
    expr_named_call         go to state 467
    expr_method_call        go to state 468
    func_addr_expr          go to state 469
    expr_field              go to state 470
    expr_call               go to state 471
    expr                    go to state 724
    expr_mtag               go to state 473
    basic_type_declaration  go to state 474
    make_decl               go to state 475
    make_struct_decl        go to state 476
    make_tuple_call         go to state 477
    make_dim_decl           go to state 478
    make_table_decl         go to state 479
    array_comprehension     go to state 480


State 537

   74 expression_with_alias: "assume" . "name" '=' expr

    "name"  shift, and go to state 725


State 538

  253 expression_continue: "continue" .

    $default  reduce using rule 253 (expression_continue)


State 539

  231 expression_any: "pass" . "end of expression"

    "end of expression"  shift, and go to state 726


State 540

   51 expression_label: "label" . "integer constant" ':'

    "integer constant"  shift, and go to state 727


State 541

   52 expression_goto: "goto" . "label" "integer constant"
   53                | "goto" . expr

    "struct"                          shift, and go to state 408
    "class"                           shift, and go to state 409
    "true"                            shift, and go to state 410
    "false"                           shift, and go to state 411
    "new"                             shift, and go to state 412
    "typeinfo"                        shift, and go to state 413
    "type"                            shift, and go to state 414
    "array"                           shift, and go to state 415
    "null"                            shift, and go to state 416
    "table"                           shift, and go to state 417
    "deref"                           shift, and go to state 418
    "cast"                            shift, and go to state 419
    "upcast"                          shift, and go to state 420
    "addr"                            shift, and go to state 421
    "reinterpret"                     shift, and go to state 422
    "label"                           shift, and go to state 728
    "fixed_array"                     shift, and go to state 423
    "default"                         shift, and go to state 424
    "bool"                            shift, and go to state 222
    "void"                            shift, and go to state 223
    "string"                          shift, and go to state 224
    "int"                             shift, and go to state 226
    "int2"                            shift, and go to state 227
    "int3"                            shift, and go to state 228
    "int4"                            shift, and go to state 229
    "uint"                            shift, and go to state 230
    "bitfield"                        shift, and go to state 425
    "uint2"                           shift, and go to state 232
    "uint3"                           shift, and go to state 233
    "uint4"                           shift, and go to state 234
    "float"                           shift, and go to state 235
    "float2"                          shift, and go to state 236
    "float3"                          shift, and go to state 237
    "float4"                          shift, and go to state 238
    "range"                           shift, and go to state 239
    "urange"                          shift, and go to state 240
    "range64"                         shift, and go to state 241
    "urange64"                        shift, and go to state 242
    "int64"                           shift, and go to state 244
    "uint64"                          shift, and go to state 245
    "double"                          shift, and go to state 246
    "int8"                            shift, and go to state 249
    "uint8"                           shift, and go to state 250
    "int16"                           shift, and go to state 251
    "uint16"                          shift, and go to state 252
    "tuple"                           shift, and go to state 426
    "variant"                         shift, and go to state 427
    "generator"                       shift, and go to state 428
    "++"                              shift, and go to state 429
    "--"                              shift, and go to state 430
    "::"                              shift, and go to state 55
    "$$"                              shift, and go to state 431
    "$i"                              shift, and go to state 432
    "$v"                              shift, and go to state 433
    "$b"                              shift, and go to state 434
    "$a"                              shift, and go to state 435
    "$c"                              shift, and go to state 436
    "..."                             shift, and go to state 437
    "integer constant"                shift, and go to state 438
    "long integer constant"           shift, and go to state 439
    "unsigned integer constant"       shift, and go to state 440
    "unsigned long integer constant"  shift, and go to state 441
    "unsigned int8 constant"          shift, and go to state 442
    "floating point constant"         shift, and go to state 443
    "double constant"                 shift, and go to state 444
    "name"                            shift, and go to state 56
    "start of the string"             shift, and go to state 445
    "begin of code block"             shift, and go to state 446
    '-'                               shift, and go to state 447
    '+'                               shift, and go to state 448
    '*'                               shift, and go to state 449
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 450
    '!'                               shift, and go to state 451
    '['                               shift, and go to state 452
    '('                               shift, and go to state 453
    '$'                               shift, and go to state 454
    '@'                               shift, and go to state 455

    string_builder          go to state 456
    expr_reader             go to state 457
    expr_call_pipe          go to state 458
    name_in_namespace       go to state 459
    expr_new                go to state 460
    expr_cast               go to state 461
    expr_type_decl          go to state 462
    expr_type_info          go to state 463
    block_or_lambda         go to state 464
    expr_full_block         go to state 465
    expr_numeric_const      go to state 466
    expr_named_call         go to state 467
    expr_method_call        go to state 468
    func_addr_expr          go to state 469
    expr_field              go to state 470
    expr_call               go to state 471
    expr                    go to state 729
    expr_mtag               go to state 473
    basic_type_declaration  go to state 474
    make_decl               go to state 475
    make_struct_decl        go to state 476
    make_tuple_call         go to state 477
    make_dim_decl           go to state 478
    make_table_decl         go to state 479
    array_comprehension     go to state 480


State 542

   71 expression_unsafe: "unsafe" . expression_block

    "begin of code block"  shift, and go to state 323

    expression_block  go to state 730


State 543

  257 expression_yield_no_pipe: "yield" . expr
  258                         | "yield" . "<-" expr

    "struct"                          shift, and go to state 408
    "class"                           shift, and go to state 409
    "true"                            shift, and go to state 410
    "false"                           shift, and go to state 411
    "new"                             shift, and go to state 412
    "typeinfo"                        shift, and go to state 413
    "type"                            shift, and go to state 414
    "array"                           shift, and go to state 415
    "null"                            shift, and go to state 416
    "table"                           shift, and go to state 417
    "deref"                           shift, and go to state 418
    "cast"                            shift, and go to state 419
    "upcast"                          shift, and go to state 420
    "addr"                            shift, and go to state 421
    "reinterpret"                     shift, and go to state 422
    "fixed_array"                     shift, and go to state 423
    "default"                         shift, and go to state 424
    "bool"                            shift, and go to state 222
    "void"                            shift, and go to state 223
    "string"                          shift, and go to state 224
    "int"                             shift, and go to state 226
    "int2"                            shift, and go to state 227
    "int3"                            shift, and go to state 228
    "int4"                            shift, and go to state 229
    "uint"                            shift, and go to state 230
    "bitfield"                        shift, and go to state 425
    "uint2"                           shift, and go to state 232
    "uint3"                           shift, and go to state 233
    "uint4"                           shift, and go to state 234
    "float"                           shift, and go to state 235
    "float2"                          shift, and go to state 236
    "float3"                          shift, and go to state 237
    "float4"                          shift, and go to state 238
    "range"                           shift, and go to state 239
    "urange"                          shift, and go to state 240
    "range64"                         shift, and go to state 241
    "urange64"                        shift, and go to state 242
    "int64"                           shift, and go to state 244
    "uint64"                          shift, and go to state 245
    "double"                          shift, and go to state 246
    "int8"                            shift, and go to state 249
    "uint8"                           shift, and go to state 250
    "int16"                           shift, and go to state 251
    "uint16"                          shift, and go to state 252
    "tuple"                           shift, and go to state 426
    "variant"                         shift, and go to state 427
    "generator"                       shift, and go to state 428
    "++"                              shift, and go to state 429
    "--"                              shift, and go to state 430
    "<-"                              shift, and go to state 731
    "::"                              shift, and go to state 55
    "$$"                              shift, and go to state 431
    "$i"                              shift, and go to state 432
    "$v"                              shift, and go to state 433
    "$b"                              shift, and go to state 434
    "$a"                              shift, and go to state 435
    "$c"                              shift, and go to state 436
    "..."                             shift, and go to state 437
    "integer constant"                shift, and go to state 438
    "long integer constant"           shift, and go to state 439
    "unsigned integer constant"       shift, and go to state 440
    "unsigned long integer constant"  shift, and go to state 441
    "unsigned int8 constant"          shift, and go to state 442
    "floating point constant"         shift, and go to state 443
    "double constant"                 shift, and go to state 444
    "name"                            shift, and go to state 56
    "start of the string"             shift, and go to state 445
    "begin of code block"             shift, and go to state 446
    '-'                               shift, and go to state 447
    '+'                               shift, and go to state 448
    '*'                               shift, and go to state 449
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 450
    '!'                               shift, and go to state 451
    '['                               shift, and go to state 452
    '('                               shift, and go to state 453
    '$'                               shift, and go to state 454
    '@'                               shift, and go to state 455

    string_builder          go to state 456
    expr_reader             go to state 457
    expr_call_pipe          go to state 458
    name_in_namespace       go to state 459
    expr_new                go to state 460
    expr_cast               go to state 461
    expr_type_decl          go to state 462
    expr_type_info          go to state 463
    block_or_lambda         go to state 464
    expr_full_block         go to state 465
    expr_numeric_const      go to state 466
    expr_named_call         go to state 467
    expr_method_call        go to state 468
    func_addr_expr          go to state 469
    expr_field              go to state 470
    expr_call               go to state 471
    expr                    go to state 732
    expr_mtag               go to state 473
    basic_type_declaration  go to state 474
    make_decl               go to state 475
    make_struct_decl        go to state 476
    make_tuple_call         go to state 477
    make_dim_decl           go to state 478
    make_table_decl         go to state 479
    array_comprehension     go to state 480


State 544

  211 expression_block: "begin of code block" expressions "end of code block" .
  212                 | "begin of code block" expressions "end of code block" . "finally" "begin of code block" expressions "end of code block"

    "finally"  shift, and go to state 733

    $default  reduce using rule 211 (expression_block)


State 545

  214 expression_any: "end of expression" .

    $default  reduce using rule 214 (expression_any)


State 546

  229 expression_any: expression_label . "end of expression"

    "end of expression"  shift, and go to state 734


State 547

  230 expression_any: expression_goto . "end of expression"

    "end of expression"  shift, and go to state 735


State 548

   68 expression_if_then_else: if_or_static_if . '(' expr ')' expression_block expression_else

    '('  shift, and go to state 736


State 549

   69 expression_if_then_else: expression_if_one_liner . "if" '(' expr ')' expression_else_one_liner "end of expression"

    "if"  shift, and go to state 737


State 550

  227 expression_any: expression_if_then_else .

    $default  reduce using rule 227 (expression_any)


State 551

  222 expression_any: expression_for_loop .

    $default  reduce using rule 222 (expression_any)


State 552

  219 expression_any: expression_unsafe .

    $default  reduce using rule 219 (expression_any)


State 553

  218 expression_any: expression_while_loop .

    $default  reduce using rule 218 (expression_any)


State 554

  220 expression_any: expression_with .

    $default  reduce using rule 220 (expression_any)


State 555

  221 expression_any: expression_with_alias .

    $default  reduce using rule 221 (expression_any)


State 556

  233 expressions: expressions expression_any .

    $default  reduce using rule 233 (expressions)


State 557

  216 expression_any: expression_delete . "end of expression"

    "end of expression"  shift, and go to state 738


State 558

   66 expression_if_one_liner: expression_break .
  223 expression_any: expression_break . "end of expression"

    "end of expression"  shift, and go to state 739

    $default  reduce using rule 66 (expression_if_one_liner)


State 559

   67 expression_if_one_liner: expression_continue .
  224 expression_any: expression_continue . "end of expression"

    "end of expression"  shift, and go to state 740

    $default  reduce using rule 67 (expression_if_one_liner)


State 560

   64 expression_if_one_liner: expression_return .
  225 expression_any: expression_return . "end of expression"

    "end of expression"  shift, and go to state 741

    $default  reduce using rule 64 (expression_if_one_liner)


State 561

   65 expression_if_one_liner: expression_yield_no_pipe .
  259 expression_yield: expression_yield_no_pipe . "end of expression"

    "end of expression"  shift, and go to state 742

    $default  reduce using rule 65 (expression_if_one_liner)


State 562

  226 expression_any: expression_yield .

    $default  reduce using rule 226 (expression_any)


State 563

  228 expression_any: expression_try_catch .

    $default  reduce using rule 228 (expression_any)


State 564

  272 expression_let: kwd_let . optional_in_scope let_variable_declaration
  273               | kwd_let . optional_in_scope tuple_expansion_variable_declaration

    "inscope"  shift, and go to state 743

    $default  reduce using rule 267 (optional_in_scope)

    optional_in_scope  go to state 744


State 565

  217 expression_any: expression_let .

    $default  reduce using rule 217 (expression_any)


State 566

  215 expression_any: expr_assign . "end of expression"

    "end of expression"  shift, and go to state 745


State 567

   63 expression_if_one_liner: expr .
  315 expr_assign: expr .
  316            | expr . '=' expr
  317            | expr . "<-" expr
  318            | expr . ":=" expr
  319            | expr . "&=" expr
  320            | expr . "|=" expr
  321            | expr . "^=" expr
  322            | expr . "&&=" expr
  323            | expr . "||=" expr
  324            | expr . "^^=" expr
  325            | expr . "+=" expr
  326            | expr . "-=" expr
  327            | expr . "*=" expr
  328            | expr . "/=" expr
  329            | expr . "%=" expr
  330            | expr . "<<=" expr
  331            | expr . ">>=" expr
  332            | expr . "<<<=" expr
  333            | expr . ">>>=" expr
  336 expr_method_call: expr . "->" "name" '(' ')'
  337                 | expr . "->" "name" '(' expr_list ')'
  347 expr_field: expr . '.' "name"
  348           | expr . '.' '.' "name"
  349           | expr . '.' "name" '(' ')'
  350           | expr . '.' "name" '(' expr_list ')'
  353           | expr . '.' $@17 error $@18
  373 expr: expr . "<<" expr
  374     | expr . ">>" expr
  375     | expr . "<<<" expr
  376     | expr . ">>>" expr
  377     | expr . '+' expr
  378     | expr . '-' expr
  379     | expr . '*' expr
  380     | expr . '/' expr
  381     | expr . '%' expr
  382     | expr . '<' expr
  383     | expr . '>' expr
  384     | expr . "==" expr
  385     | expr . "!=" expr
  386     | expr . "<=" expr
  387     | expr . ">=" expr
  388     | expr . '&' expr
  389     | expr . '|' expr
  390     | expr . '^' expr
  391     | expr . "&&" expr
  392     | expr . "||" expr
  393     | expr . "^^" expr
  394     | expr . ".." expr
  397     | expr . "++"
  398     | expr . "--"
  400     | expr . '[' expr ']'
  401     | expr . '.' '[' expr ']'
  402     | expr . "?[" expr ']'
  403     | expr . '.' "?[" expr ']'
  404     | expr . "?." "name"
  405     | expr . '.' "?." "name"
  413     | expr . "??" expr
  414     | expr . '?' expr ':' expr
  417     | expr . "is" "type" '<' $@19 type_declaration_no_options '>' $@20
  418     | expr . "is" basic_type_declaration
  419     | expr . "is" "name"
  420     | expr . "as" "name"
  423     | expr . "as" "type" '<' $@21 type_declaration '>' $@22
  424     | expr . "as" basic_type_declaration
  425     | expr . '?' "as" "name"
  428     | expr . '?' "as" "type" '<' $@23 type_declaration '>' $@24
  429     | expr . '?' "as" basic_type_declaration
  437     | expr . "<|" expr
  438     | expr . "|>" expr
  439     | expr . "|>" basic_type_declaration
  449 expr_mtag: expr . '.' "$f" '(' expr ')'
  450          | expr . "?." "$f" '(' expr ')'
  451          | expr . '.' '.' "$f" '(' expr ')'
  452          | expr . '.' "?." "$f" '(' expr ')'
  453          | expr . "as" "$f" '(' expr ')'
  454          | expr . '?' "as" "$f" '(' expr ')'
  455          | expr . "is" "$f" '(' expr ')'

    "is"    shift, and go to state 643
    "as"    shift, and go to state 644
    "+="    shift, and go to state 746
    "-="    shift, and go to state 747
    "/="    shift, and go to state 748
    "*="    shift, and go to state 749
    "%="    shift, and go to state 750
    "&="    shift, and go to state 751
    "|="    shift, and go to state 752
    "^="    shift, and go to state 753
    "<<"    shift, and go to state 645
    ">>"    shift, and go to state 646
    "++"    shift, and go to state 647
    "--"    shift, and go to state 648
    "<="    shift, and go to state 649
    "<<="   shift, and go to state 754
    ">>="   shift, and go to state 755
    ">="    shift, and go to state 650
    "=="    shift, and go to state 651
    "!="    shift, and go to state 652
    "->"    shift, and go to state 653
    "<-"    shift, and go to state 756
    "??"    shift, and go to state 654
    "?."    shift, and go to state 655
    "?["    shift, and go to state 656
    "<|"    shift, and go to state 657
    "|>"    shift, and go to state 658
    ":="    shift, and go to state 757
    "<<<"   shift, and go to state 659
    ">>>"   shift, and go to state 660
    "<<<="  shift, and go to state 758
    ">>>="  shift, and go to state 759
    "&&"    shift, and go to state 661
    "||"    shift, and go to state 662
    "^^"    shift, and go to state 663
    "&&="   shift, and go to state 760
    "||="   shift, and go to state 761
    "^^="   shift, and go to state 762
    ".."    shift, and go to state 664
    '='     shift, and go to state 763
    '?'     shift, and go to state 665
    '|'     shift, and go to state 666
    '^'     shift, and go to state 667
    '&'     shift, and go to state 668
    '<'     shift, and go to state 669
    '>'     shift, and go to state 670
    '-'     shift, and go to state 671
    '+'     shift, and go to state 672
    '*'     shift, and go to state 673
    '/'     shift, and go to state 674
    '%'     shift, and go to state 675
    '.'     shift, and go to state 676
    '['     shift, and go to state 677

    "end of expression"  reduce using rule 315 (expr_assign)
    $default             reduce using rule 63 (expression_if_one_liner)


State 568

  525 enum_expression: "name" .
  526                | "name" . '=' expr

    '='  shift, and go to state 764

    $default  reduce using rule 525 (enum_expression)


State 569

  528 enum_list: enum_expression .

    $default  reduce using rule 528 (enum_list)


State 570

  529 enum_list: enum_list . ',' enum_expression
  544 enum_declaration: optional_annotation_list "enum" optional_public_or_private_enum enum_name optional_enum_basic_type_declaration "begin of code block" $@31 enum_list . optional_comma $@32 "end of code block"

    ','  shift, and go to state 765

    $default  reduce using rule 760 (optional_comma)

    optional_comma  go to state 766


State 571

  546 optional_structure_parent: ':' name_in_namespace .

    $default  reduce using rule 546 (optional_structure_parent)


State 572

  472 struct_variable_declaration_list: struct_variable_declaration_list . $@25 structure_variable_declaration "end of expression"
  474                                 | struct_variable_declaration_list . optional_annotation_list "def" optional_public_or_private_member_variable "abstract" optional_constant $@26 function_declaration_header "end of expression"
  476                                 | struct_variable_declaration_list . optional_annotation_list "def" optional_public_or_private_member_variable optional_static_member_variable optional_override optional_constant $@27 function_declaration_header expression_block
  556 optional_struct_variable_declaration_list: "begin of code block" struct_variable_declaration_list . "end of code block"

    "end of code block"  shift, and go to state 767
    '['                  shift, and go to state 15

    "def"     reduce using rule 112 (optional_annotation_list)
    $default  reduce using rule 471 ($@25)

    optional_annotation_list  go to state 768
    $@25                      go to state 769


State 573

  516 global_variable_declaration_list: global_variable_declaration_list $@28 optional_field_annotation let_variable_declaration .

    $default  reduce using rule 516 (global_variable_declaration_list)


State 574

  336 expr_method_call: expr . "->" "name" '(' ')'
  337                 | expr . "->" "name" '(' expr_list ')'
  347 expr_field: expr . '.' "name"
  348           | expr . '.' '.' "name"
  349           | expr . '.' "name" '(' ')'
  350           | expr . '.' "name" '(' expr_list ')'
  353           | expr . '.' $@17 error $@18
  373 expr: expr . "<<" expr
  374     | expr . ">>" expr
  375     | expr . "<<<" expr
  376     | expr . ">>>" expr
  377     | expr . '+' expr
  378     | expr . '-' expr
  379     | expr . '*' expr
  380     | expr . '/' expr
  381     | expr . '%' expr
  382     | expr . '<' expr
  383     | expr . '>' expr
  384     | expr . "==" expr
  385     | expr . "!=" expr
  386     | expr . "<=" expr
  387     | expr . ">=" expr
  388     | expr . '&' expr
  389     | expr . '|' expr
  390     | expr . '^' expr
  391     | expr . "&&" expr
  392     | expr . "||" expr
  393     | expr . "^^" expr
  394     | expr . ".." expr
  397     | expr . "++"
  398     | expr . "--"
  400     | expr . '[' expr ']'
  401     | expr . '.' '[' expr ']'
  402     | expr . "?[" expr ']'
  403     | expr . '.' "?[" expr ']'
  404     | expr . "?." "name"
  405     | expr . '.' "?." "name"
  413     | expr . "??" expr
  414     | expr . '?' expr ':' expr
  417     | expr . "is" "type" '<' $@19 type_declaration_no_options '>' $@20
  418     | expr . "is" basic_type_declaration
  419     | expr . "is" "name"
  420     | expr . "as" "name"
  423     | expr . "as" "type" '<' $@21 type_declaration '>' $@22
  424     | expr . "as" basic_type_declaration
  425     | expr . '?' "as" "name"
  428     | expr . '?' "as" "type" '<' $@23 type_declaration '>' $@24
  429     | expr . '?' "as" basic_type_declaration
  437     | expr . "<|" expr
  438     | expr . "|>" expr
  439     | expr . "|>" basic_type_declaration
  449 expr_mtag: expr . '.' "$f" '(' expr ')'
  450          | expr . "?." "$f" '(' expr ')'
  451          | expr . '.' '.' "$f" '(' expr ')'
  452          | expr . '.' "?." "$f" '(' expr ')'
  453          | expr . "as" "$f" '(' expr ')'
  454          | expr . '?' "as" "$f" '(' expr ')'
  455          | expr . "is" "$f" '(' expr ')'
  507 let_variable_name_with_pos_list: "$i" '(' expr . ')'

    "is"   shift, and go to state 643
    "as"   shift, and go to state 644
    "<<"   shift, and go to state 645
    ">>"   shift, and go to state 646
    "++"   shift, and go to state 647
    "--"   shift, and go to state 648
    "<="   shift, and go to state 649
    ">="   shift, and go to state 650
    "=="   shift, and go to state 651
    "!="   shift, and go to state 652
    "->"   shift, and go to state 653
    "??"   shift, and go to state 654
    "?."   shift, and go to state 655
    "?["   shift, and go to state 656
    "<|"   shift, and go to state 657
    "|>"   shift, and go to state 658
    "<<<"  shift, and go to state 659
    ">>>"  shift, and go to state 660
    "&&"   shift, and go to state 661
    "||"   shift, and go to state 662
    "^^"   shift, and go to state 663
    ".."   shift, and go to state 664
    '?'    shift, and go to state 665
    '|'    shift, and go to state 666
    '^'    shift, and go to state 667
    '&'    shift, and go to state 668
    '<'    shift, and go to state 669
    '>'    shift, and go to state 670
    '-'    shift, and go to state 671
    '+'    shift, and go to state 672
    '*'    shift, and go to state 673
    '/'    shift, and go to state 674
    '%'    shift, and go to state 675
    '.'    shift, and go to state 676
    '['    shift, and go to state 677
    ')'    shift, and go to state 770


State 575

  508 let_variable_name_with_pos_list: "name" "aka" "name" .

    $default  reduce using rule 508 (let_variable_name_with_pos_list)


State 576

  509 let_variable_name_with_pos_list: let_variable_name_with_pos_list ',' "name" .
  510                                | let_variable_name_with_pos_list ',' "name" . "aka" "name"

    "aka"  shift, and go to state 771

    $default  reduce using rule 509 (let_variable_name_with_pos_list)


State 577

  511 let_variable_declaration: let_variable_name_with_pos_list ':' type_declaration_no_options . "end of expression"
  512                         | let_variable_name_with_pos_list ':' type_declaration_no_options . copy_or_move_or_clone expr "end of expression"

    "<-"                 shift, and go to state 578
    ":="                 shift, and go to state 579
    "end of expression"  shift, and go to state 772
    '='                  shift, and go to state 580

    copy_or_move_or_clone  go to state 773


State 578

  502 copy_or_move_or_clone: "<-" .

    $default  reduce using rule 502 (copy_or_move_or_clone)


State 579

  503 copy_or_move_or_clone: ":=" .

    $default  reduce using rule 503 (copy_or_move_or_clone)


State 580

  501 copy_or_move_or_clone: '=' .

    $default  reduce using rule 501 (copy_or_move_or_clone)


State 581

  513 let_variable_declaration: let_variable_name_with_pos_list optional_ref copy_or_move_or_clone . expr "end of expression"

    "struct"                          shift, and go to state 408
    "class"                           shift, and go to state 409
    "true"                            shift, and go to state 410
    "false"                           shift, and go to state 411
    "new"                             shift, and go to state 412
    "typeinfo"                        shift, and go to state 413
    "type"                            shift, and go to state 414
    "array"                           shift, and go to state 415
    "null"                            shift, and go to state 416
    "table"                           shift, and go to state 417
    "deref"                           shift, and go to state 418
    "cast"                            shift, and go to state 419
    "upcast"                          shift, and go to state 420
    "addr"                            shift, and go to state 421
    "reinterpret"                     shift, and go to state 422
    "fixed_array"                     shift, and go to state 423
    "default"                         shift, and go to state 424
    "bool"                            shift, and go to state 222
    "void"                            shift, and go to state 223
    "string"                          shift, and go to state 224
    "int"                             shift, and go to state 226
    "int2"                            shift, and go to state 227
    "int3"                            shift, and go to state 228
    "int4"                            shift, and go to state 229
    "uint"                            shift, and go to state 230
    "bitfield"                        shift, and go to state 425
    "uint2"                           shift, and go to state 232
    "uint3"                           shift, and go to state 233
    "uint4"                           shift, and go to state 234
    "float"                           shift, and go to state 235
    "float2"                          shift, and go to state 236
    "float3"                          shift, and go to state 237
    "float4"                          shift, and go to state 238
    "range"                           shift, and go to state 239
    "urange"                          shift, and go to state 240
    "range64"                         shift, and go to state 241
    "urange64"                        shift, and go to state 242
    "int64"                           shift, and go to state 244
    "uint64"                          shift, and go to state 245
    "double"                          shift, and go to state 246
    "int8"                            shift, and go to state 249
    "uint8"                           shift, and go to state 250
    "int16"                           shift, and go to state 251
    "uint16"                          shift, and go to state 252
    "tuple"                           shift, and go to state 426
    "variant"                         shift, and go to state 427
    "generator"                       shift, and go to state 428
    "++"                              shift, and go to state 429
    "--"                              shift, and go to state 430
    "::"                              shift, and go to state 55
    "$$"                              shift, and go to state 431
    "$i"                              shift, and go to state 432
    "$v"                              shift, and go to state 433
    "$b"                              shift, and go to state 434
    "$a"                              shift, and go to state 435
    "$c"                              shift, and go to state 436
    "..."                             shift, and go to state 437
    "integer constant"                shift, and go to state 438
    "long integer constant"           shift, and go to state 439
    "unsigned integer constant"       shift, and go to state 440
    "unsigned long integer constant"  shift, and go to state 441
    "unsigned int8 constant"          shift, and go to state 442
    "floating point constant"         shift, and go to state 443
    "double constant"                 shift, and go to state 444
    "name"                            shift, and go to state 56
    "start of the string"             shift, and go to state 445
    "begin of code block"             shift, and go to state 446
    '-'                               shift, and go to state 447
    '+'                               shift, and go to state 448
    '*'                               shift, and go to state 449
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 450
    '!'                               shift, and go to state 451
    '['                               shift, and go to state 452
    '('                               shift, and go to state 453
    '$'                               shift, and go to state 454
    '@'                               shift, and go to state 455

    string_builder          go to state 456
    expr_reader             go to state 457
    expr_call_pipe          go to state 458
    name_in_namespace       go to state 459
    expr_new                go to state 460
    expr_cast               go to state 461
    expr_type_decl          go to state 462
    expr_type_info          go to state 463
    block_or_lambda         go to state 464
    expr_full_block         go to state 465
    expr_numeric_const      go to state 466
    expr_named_call         go to state 467
    expr_method_call        go to state 468
    func_addr_expr          go to state 469
    expr_field              go to state 470
    expr_call               go to state 471
    expr                    go to state 774
    expr_mtag               go to state 473
    basic_type_declaration  go to state 474
    make_decl               go to state 475
    make_struct_decl        go to state 476
    make_tuple_call         go to state 477
    make_dim_decl           go to state 478
    make_table_decl         go to state 479
    array_comprehension     go to state 480


State 582

  626 type_declaration_no_options_no_dim: "type" '<' $@37 type_declaration . '>' $@38
  684 type_declaration: type_declaration . '|' type_declaration_no_options
  685                 | type_declaration . '|' '#'

    '|'  shift, and go to state 372
    '>'  shift, and go to state 775


State 583

  649 type_declaration_no_options_no_dim: "array" '<' $@42 type_declaration . '>' $@43
  684 type_declaration: type_declaration . '|' type_declaration_no_options
  685                 | type_declaration . '|' '#'

    '|'  shift, and go to state 372
    '>'  shift, and go to state 776


State 584

  652 type_declaration_no_options_no_dim: "table" '<' $@44 table_type_pair . '>' $@45

    '>'  shift, and go to state 777


State 585

  612 table_type_pair: type_declaration .
  613                | type_declaration . "end of expression" type_declaration
  684 type_declaration: type_declaration . '|' type_declaration_no_options
  685                 | type_declaration . '|' '#'

    "end of expression"  shift, and go to state 778
    '|'                  shift, and go to state 372

    $default  reduce using rule 612 (table_type_pair)


State 586

  718 make_struct_decl: "struct" '<' . $@73 type_declaration_no_options '>' $@74 '(' use_initializer make_struct_dim ')'

    $default  reduce using rule 716 ($@73)

    $@73  go to state 779


State 587

  721 make_struct_decl: "class" '<' . $@75 type_declaration_no_options '>' $@76 '(' use_initializer make_struct_dim ')'

    $default  reduce using rule 719 ($@75)

    $@75  go to state 780


State 588

  246 new_type_declaration: '<' . $@3 type_declaration '>' $@4

    $default  reduce using rule 244 ($@3)

    $@3  go to state 781


State 589

  249 expr_new: "new" new_type_declaration . '(' use_initializer ')'
  250         | "new" new_type_declaration . '(' use_initializer make_struct_single ')'

    '('  shift, and go to state 782


State 590

  247 expr_new: "new" structure_type_declaration .
  248         | "new" structure_type_declaration . '(' optional_expr_list ')'

    '('  shift, and go to state 783

    '('       [reduce using rule 247 (expr_new)]
    $default  reduce using rule 247 (expr_new)

    shift/reduce conflict on token '(':
      247 expr_new: "new" structure_type_declaration .
      248 expr_new: "new" structure_type_declaration . '(' optional_expr_list ')'
      First example: program optional_annotation_list "def" optional_public_or_private_function $@2 function_declaration_header "begin of code block" expressions "assume" "name" '=' "new" structure_type_declaration . '(' optional_expr_list ')' expression_any "end of code block" $end
      Shift derivation
        $accept
        `-> 0: program                                                                                                                                                                                                                                                                                                                                         $end
               `-> 6: program global_function_declaration
                              `-> 204: optional_annotation_list "def" function_declaration
                                                                      `-> 210: optional_public_or_private_function $@2 function_declaration_header expression_block
                                                                                                                                                   `-> 211: "begin of code block" expressions                                                                                                                                              "end of code block"
                                                                                                                                                                                  `-> 233: expressions                                                                                                                      expression_any
                                                                                                                                                                                           `-> 233: expressions expression_with_alias
                                                                                                                                                                                                                `-> 74: "assume" "name" '=' expr
                                                                                                                                                                                                                                            `-> 433: expr_new
                                                                                                                                                                                                                                                     `-> 248: "new" structure_type_declaration . '(' optional_expr_list ')'
      Second example: program optional_annotation_list "def" optional_public_or_private_function $@2 function_declaration_header "begin of code block" expressions "assume" "name" '=' "new" structure_type_declaration . '(' expr_list optional_comma ')' "end of expression" "end of code block" $end
      Reduce derivation
        $accept
        `-> 0: program                                                                                                                                                                                                                                                                                                                                                                                        $end
               `-> 6: program global_function_declaration
                              `-> 204: optional_annotation_list "def" function_declaration
                                                                      `-> 210: optional_public_or_private_function $@2 function_declaration_header expression_block
                                                                                                                                                   `-> 211: "begin of code block" expressions                                                                                                                                                                                             "end of code block"
                                                                                                                                                                                  `-> 233: expressions                                                                                                    expression_any
                                                                                                                                                                                           `-> 233: expressions expression_any                                                                            `-> 215: expr_assign                                        "end of expression"
                                                                                                                                                                                                                `-> 221: expression_with_alias                                                                     `-> 315: expr
                                                                                                                                                                                                                         `-> 74: "assume" "name" '=' expr                                                                   `-> 399: '(' expr_list optional_comma ')'
                                                                                                                                                                                                                                                     `-> 433: expr_new
                                                                                                                                                                                                                                                              `-> 247: "new" structure_type_declaration .



State 591

  251 expr_new: "new" make_decl .

    $default  reduce using rule 251 (expr_new)


State 592

  286 expr_type_info: "typeinfo" '(' . name_in_namespace expr ')'
  287               | "typeinfo" '(' . name_in_namespace '<' "name" '>' expr ')'
  288               | "typeinfo" '(' . name_in_namespace '<' "name" "end of expression" "name" '>' expr ')'

    "::"    shift, and go to state 55
    "name"  shift, and go to state 56

    name_in_namespace  go to state 784


State 593

  285 expr_type_decl: "type" '<' . $@11 type_declaration '>' $@12

    $default  reduce using rule 283 ($@11)

    $@11  go to state 785


State 594

  737 make_dim_decl: "array" "struct" . '<' $@83 type_declaration_no_options '>' $@84 '(' use_initializer make_struct_dim ')'

    '<'  shift, and go to state 786


State 595

  740 make_dim_decl: "array" "tuple" . '<' $@85 type_declaration_no_options '>' $@86 '(' use_initializer make_struct_dim ')'

    '<'  shift, and go to state 787


State 596

  743 make_dim_decl: "array" "variant" . '<' $@87 type_declaration_no_options '>' $@88 '(' make_struct_dim ')'

    '<'  shift, and go to state 788


State 597

  747 make_dim_decl: "array" '<' . $@89 type_declaration_no_options '>' $@90 '(' expr_list optional_comma ')'

    $default  reduce using rule 745 ($@89)

    $@89  go to state 789


State 598

  744 make_dim_decl: "array" '(' . expr_list optional_comma ')'

    "struct"                          shift, and go to state 408
    "class"                           shift, and go to state 409
    "true"                            shift, and go to state 410
    "false"                           shift, and go to state 411
    "new"                             shift, and go to state 412
    "typeinfo"                        shift, and go to state 413
    "type"                            shift, and go to state 414
    "array"                           shift, and go to state 415
    "null"                            shift, and go to state 416
    "table"                           shift, and go to state 417
    "deref"                           shift, and go to state 418
    "cast"                            shift, and go to state 419
    "upcast"                          shift, and go to state 420
    "addr"                            shift, and go to state 421
    "reinterpret"                     shift, and go to state 422
    "fixed_array"                     shift, and go to state 423
    "default"                         shift, and go to state 424
    "bool"                            shift, and go to state 222
    "void"                            shift, and go to state 223
    "string"                          shift, and go to state 224
    "int"                             shift, and go to state 226
    "int2"                            shift, and go to state 227
    "int3"                            shift, and go to state 228
    "int4"                            shift, and go to state 229
    "uint"                            shift, and go to state 230
    "bitfield"                        shift, and go to state 425
    "uint2"                           shift, and go to state 232
    "uint3"                           shift, and go to state 233
    "uint4"                           shift, and go to state 234
    "float"                           shift, and go to state 235
    "float2"                          shift, and go to state 236
    "float3"                          shift, and go to state 237
    "float4"                          shift, and go to state 238
    "range"                           shift, and go to state 239
    "urange"                          shift, and go to state 240
    "range64"                         shift, and go to state 241
    "urange64"                        shift, and go to state 242
    "int64"                           shift, and go to state 244
    "uint64"                          shift, and go to state 245
    "double"                          shift, and go to state 246
    "int8"                            shift, and go to state 249
    "uint8"                           shift, and go to state 250
    "int16"                           shift, and go to state 251
    "uint16"                          shift, and go to state 252
    "tuple"                           shift, and go to state 426
    "variant"                         shift, and go to state 427
    "generator"                       shift, and go to state 428
    "++"                              shift, and go to state 429
    "--"                              shift, and go to state 430
    "::"                              shift, and go to state 55
    "$$"                              shift, and go to state 431
    "$i"                              shift, and go to state 432
    "$v"                              shift, and go to state 433
    "$b"                              shift, and go to state 434
    "$a"                              shift, and go to state 435
    "$c"                              shift, and go to state 436
    "..."                             shift, and go to state 437
    "integer constant"                shift, and go to state 438
    "long integer constant"           shift, and go to state 439
    "unsigned integer constant"       shift, and go to state 440
    "unsigned long integer constant"  shift, and go to state 441
    "unsigned int8 constant"          shift, and go to state 442
    "floating point constant"         shift, and go to state 443
    "double constant"                 shift, and go to state 444
    "name"                            shift, and go to state 56
    "start of the string"             shift, and go to state 445
    "begin of code block"             shift, and go to state 446
    '-'                               shift, and go to state 447
    '+'                               shift, and go to state 448
    '*'                               shift, and go to state 449
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 450
    '!'                               shift, and go to state 451
    '['                               shift, and go to state 452
    '('                               shift, and go to state 453
    '$'                               shift, and go to state 454
    '@'                               shift, and go to state 455

    string_builder          go to state 456
    expr_reader             go to state 457
    expr_call_pipe          go to state 458
    name_in_namespace       go to state 459
    expr_new                go to state 460
    expr_cast               go to state 461
    expr_type_decl          go to state 462
    expr_type_info          go to state 463
    expr_list               go to state 790
    block_or_lambda         go to state 464
    expr_full_block         go to state 465
    expr_numeric_const      go to state 466
    expr_named_call         go to state 467
    expr_method_call        go to state 468
    func_addr_expr          go to state 469
    expr_field              go to state 470
    expr_call               go to state 471
    expr                    go to state 634
    expr_mtag               go to state 473
    basic_type_declaration  go to state 474
    make_decl               go to state 475
    make_struct_decl        go to state 476
    make_tuple_call         go to state 477
    make_dim_decl           go to state 478
    make_table_decl         go to state 479
    array_comprehension     go to state 480


State 599

  756 make_table_decl: "table" '<' . type_declaration_no_options '>' '(' expr_map_tuple_list optional_comma ')'
  757                | "table" '<' . type_declaration_no_options "end of expression" type_declaration_no_options '>' '(' expr_map_tuple_list optional_comma ')'

    "type"       shift, and go to state 216
    "array"      shift, and go to state 217
    "table"      shift, and go to state 218
    "typedecl"   shift, and go to state 219
    "iterator"   shift, and go to state 220
    "smart_ptr"  shift, and go to state 221
    "bool"       shift, and go to state 222
    "void"       shift, and go to state 223
    "string"     shift, and go to state 224
    "auto"       shift, and go to state 225
    "int"        shift, and go to state 226
    "int2"       shift, and go to state 227
    "int3"       shift, and go to state 228
    "int4"       shift, and go to state 229
    "uint"       shift, and go to state 230
    "bitfield"   shift, and go to state 231
    "uint2"      shift, and go to state 232
    "uint3"      shift, and go to state 233
    "uint4"      shift, and go to state 234
    "float"      shift, and go to state 235
    "float2"     shift, and go to state 236
    "float3"     shift, and go to state 237
    "float4"     shift, and go to state 238
    "range"      shift, and go to state 239
    "urange"     shift, and go to state 240
    "range64"    shift, and go to state 241
    "urange64"   shift, and go to state 242
    "block"      shift, and go to state 243
    "int64"      shift, and go to state 244
    "uint64"     shift, and go to state 245
    "double"     shift, and go to state 246
    "function"   shift, and go to state 247
    "lambda"     shift, and go to state 248
    "int8"       shift, and go to state 249
    "uint8"      shift, and go to state 250
    "int16"      shift, and go to state 251
    "uint16"     shift, and go to state 252
    "tuple"      shift, and go to state 253
    "variant"    shift, and go to state 254
    "::"         shift, and go to state 55
    "$t"         shift, and go to state 255
    "name"       shift, and go to state 56
    '$'          shift, and go to state 256

    name_in_namespace                   go to state 257
    basic_type_declaration              go to state 258
    structure_type_declaration          go to state 259
    auto_type_declaration               go to state 260
    bitfield_type_declaration           go to state 261
    type_declaration_no_options         go to state 791
    type_declaration_no_options_no_dim  go to state 263


State 600

  755 make_table_decl: "table" '(' . expr_map_tuple_list optional_comma ')'

    "struct"                          shift, and go to state 408
    "class"                           shift, and go to state 409
    "true"                            shift, and go to state 410
    "false"                           shift, and go to state 411
    "new"                             shift, and go to state 412
    "typeinfo"                        shift, and go to state 413
    "type"                            shift, and go to state 414
    "array"                           shift, and go to state 415
    "null"                            shift, and go to state 416
    "table"                           shift, and go to state 417
    "deref"                           shift, and go to state 418
    "cast"                            shift, and go to state 419
    "upcast"                          shift, and go to state 420
    "addr"                            shift, and go to state 421
    "reinterpret"                     shift, and go to state 422
    "fixed_array"                     shift, and go to state 423
    "default"                         shift, and go to state 424
    "bool"                            shift, and go to state 222
    "void"                            shift, and go to state 223
    "string"                          shift, and go to state 224
    "int"                             shift, and go to state 226
    "int2"                            shift, and go to state 227
    "int3"                            shift, and go to state 228
    "int4"                            shift, and go to state 229
    "uint"                            shift, and go to state 230
    "bitfield"                        shift, and go to state 425
    "uint2"                           shift, and go to state 232
    "uint3"                           shift, and go to state 233
    "uint4"                           shift, and go to state 234
    "float"                           shift, and go to state 235
    "float2"                          shift, and go to state 236
    "float3"                          shift, and go to state 237
    "float4"                          shift, and go to state 238
    "range"                           shift, and go to state 239
    "urange"                          shift, and go to state 240
    "range64"                         shift, and go to state 241
    "urange64"                        shift, and go to state 242
    "int64"                           shift, and go to state 244
    "uint64"                          shift, and go to state 245
    "double"                          shift, and go to state 246
    "int8"                            shift, and go to state 249
    "uint8"                           shift, and go to state 250
    "int16"                           shift, and go to state 251
    "uint16"                          shift, and go to state 252
    "tuple"                           shift, and go to state 426
    "variant"                         shift, and go to state 427
    "generator"                       shift, and go to state 428
    "++"                              shift, and go to state 429
    "--"                              shift, and go to state 430
    "::"                              shift, and go to state 55
    "$$"                              shift, and go to state 431
    "$i"                              shift, and go to state 432
    "$v"                              shift, and go to state 433
    "$b"                              shift, and go to state 434
    "$a"                              shift, and go to state 435
    "$c"                              shift, and go to state 436
    "..."                             shift, and go to state 437
    "integer constant"                shift, and go to state 438
    "long integer constant"           shift, and go to state 439
    "unsigned integer constant"       shift, and go to state 440
    "unsigned long integer constant"  shift, and go to state 441
    "unsigned int8 constant"          shift, and go to state 442
    "floating point constant"         shift, and go to state 443
    "double constant"                 shift, and go to state 444
    "name"                            shift, and go to state 56
    "start of the string"             shift, and go to state 445
    "begin of code block"             shift, and go to state 446
    '-'                               shift, and go to state 447
    '+'                               shift, and go to state 448
    '*'                               shift, and go to state 449
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 450
    '!'                               shift, and go to state 451
    '['                               shift, and go to state 452
    '('                               shift, and go to state 453
    '$'                               shift, and go to state 454
    '@'                               shift, and go to state 455

    string_builder          go to state 456
    expr_reader             go to state 457
    expr_call_pipe          go to state 458
    name_in_namespace       go to state 459
    expr_new                go to state 460
    expr_cast               go to state 461
    expr_type_decl          go to state 462
    expr_type_info          go to state 463
    block_or_lambda         go to state 464
    expr_full_block         go to state 465
    expr_numeric_const      go to state 466
    expr_named_call         go to state 467
    expr_method_call        go to state 468
    func_addr_expr          go to state 469
    expr_field              go to state 470
    expr_call               go to state 471
    expr                    go to state 623
    expr_mtag               go to state 473
    basic_type_declaration  go to state 474
    make_decl               go to state 475
    make_struct_decl        go to state 476
    make_map_tuple          go to state 624
    make_tuple_call         go to state 477
    make_dim_decl           go to state 478
    expr_map_tuple_list     go to state 792
    make_table_decl         go to state 479
    array_comprehension     go to state 480


State 601

  409 expr: "deref" '(' . expr ')'

    "struct"                          shift, and go to state 408
    "class"                           shift, and go to state 409
    "true"                            shift, and go to state 410
    "false"                           shift, and go to state 411
    "new"                             shift, and go to state 412
    "typeinfo"                        shift, and go to state 413
    "type"                            shift, and go to state 414
    "array"                           shift, and go to state 415
    "null"                            shift, and go to state 416
    "table"                           shift, and go to state 417
    "deref"                           shift, and go to state 418
    "cast"                            shift, and go to state 419
    "upcast"                          shift, and go to state 420
    "addr"                            shift, and go to state 421
    "reinterpret"                     shift, and go to state 422
    "fixed_array"                     shift, and go to state 423
    "default"                         shift, and go to state 424
    "bool"                            shift, and go to state 222
    "void"                            shift, and go to state 223
    "string"                          shift, and go to state 224
    "int"                             shift, and go to state 226
    "int2"                            shift, and go to state 227
    "int3"                            shift, and go to state 228
    "int4"                            shift, and go to state 229
    "uint"                            shift, and go to state 230
    "bitfield"                        shift, and go to state 425
    "uint2"                           shift, and go to state 232
    "uint3"                           shift, and go to state 233
    "uint4"                           shift, and go to state 234
    "float"                           shift, and go to state 235
    "float2"                          shift, and go to state 236
    "float3"                          shift, and go to state 237
    "float4"                          shift, and go to state 238
    "range"                           shift, and go to state 239
    "urange"                          shift, and go to state 240
    "range64"                         shift, and go to state 241
    "urange64"                        shift, and go to state 242
    "int64"                           shift, and go to state 244
    "uint64"                          shift, and go to state 245
    "double"                          shift, and go to state 246
    "int8"                            shift, and go to state 249
    "uint8"                           shift, and go to state 250
    "int16"                           shift, and go to state 251
    "uint16"                          shift, and go to state 252
    "tuple"                           shift, and go to state 426
    "variant"                         shift, and go to state 427
    "generator"                       shift, and go to state 428
    "++"                              shift, and go to state 429
    "--"                              shift, and go to state 430
    "::"                              shift, and go to state 55
    "$$"                              shift, and go to state 431
    "$i"                              shift, and go to state 432
    "$v"                              shift, and go to state 433
    "$b"                              shift, and go to state 434
    "$a"                              shift, and go to state 435
    "$c"                              shift, and go to state 436
    "..."                             shift, and go to state 437
    "integer constant"                shift, and go to state 438
    "long integer constant"           shift, and go to state 439
    "unsigned integer constant"       shift, and go to state 440
    "unsigned long integer constant"  shift, and go to state 441
    "unsigned int8 constant"          shift, and go to state 442
    "floating point constant"         shift, and go to state 443
    "double constant"                 shift, and go to state 444
    "name"                            shift, and go to state 56
    "start of the string"             shift, and go to state 445
    "begin of code block"             shift, and go to state 446
    '-'                               shift, and go to state 447
    '+'                               shift, and go to state 448
    '*'                               shift, and go to state 449
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 450
    '!'                               shift, and go to state 451
    '['                               shift, and go to state 452
    '('                               shift, and go to state 453
    '$'                               shift, and go to state 454
    '@'                               shift, and go to state 455

    string_builder          go to state 456
    expr_reader             go to state 457
    expr_call_pipe          go to state 458
    name_in_namespace       go to state 459
    expr_new                go to state 460
    expr_cast               go to state 461
    expr_type_decl          go to state 462
    expr_type_info          go to state 463
    block_or_lambda         go to state 464
    expr_full_block         go to state 465
    expr_numeric_const      go to state 466
    expr_named_call         go to state 467
    expr_method_call        go to state 468
    func_addr_expr          go to state 469
    expr_field              go to state 470
    expr_call               go to state 471
    expr                    go to state 793
    expr_mtag               go to state 473
    basic_type_declaration  go to state 474
    make_decl               go to state 475
    make_struct_decl        go to state 476
    make_tuple_call         go to state 477
    make_dim_decl           go to state 478
    make_table_decl         go to state 479
    array_comprehension     go to state 480


State 602

  276 expr_cast: "cast" '<' . $@5 type_declaration_no_options '>' $@6 expr

    $default  reduce using rule 274 ($@5)

    $@5  go to state 794


State 603

  279 expr_cast: "upcast" '<' . $@7 type_declaration_no_options '>' $@8 expr

    $default  reduce using rule 277 ($@7)

    $@7  go to state 795


State 604

  410 expr: "addr" '(' . expr ')'

    "struct"                          shift, and go to state 408
    "class"                           shift, and go to state 409
    "true"                            shift, and go to state 410
    "false"                           shift, and go to state 411
    "new"                             shift, and go to state 412
    "typeinfo"                        shift, and go to state 413
    "type"                            shift, and go to state 414
    "array"                           shift, and go to state 415
    "null"                            shift, and go to state 416
    "table"                           shift, and go to state 417
    "deref"                           shift, and go to state 418
    "cast"                            shift, and go to state 419
    "upcast"                          shift, and go to state 420
    "addr"                            shift, and go to state 421
    "reinterpret"                     shift, and go to state 422
    "fixed_array"                     shift, and go to state 423
    "default"                         shift, and go to state 424
    "bool"                            shift, and go to state 222
    "void"                            shift, and go to state 223
    "string"                          shift, and go to state 224
    "int"                             shift, and go to state 226
    "int2"                            shift, and go to state 227
    "int3"                            shift, and go to state 228
    "int4"                            shift, and go to state 229
    "uint"                            shift, and go to state 230
    "bitfield"                        shift, and go to state 425
    "uint2"                           shift, and go to state 232
    "uint3"                           shift, and go to state 233
    "uint4"                           shift, and go to state 234
    "float"                           shift, and go to state 235
    "float2"                          shift, and go to state 236
    "float3"                          shift, and go to state 237
    "float4"                          shift, and go to state 238
    "range"                           shift, and go to state 239
    "urange"                          shift, and go to state 240
    "range64"                         shift, and go to state 241
    "urange64"                        shift, and go to state 242
    "int64"                           shift, and go to state 244
    "uint64"                          shift, and go to state 245
    "double"                          shift, and go to state 246
    "int8"                            shift, and go to state 249
    "uint8"                           shift, and go to state 250
    "int16"                           shift, and go to state 251
    "uint16"                          shift, and go to state 252
    "tuple"                           shift, and go to state 426
    "variant"                         shift, and go to state 427
    "generator"                       shift, and go to state 428
    "++"                              shift, and go to state 429
    "--"                              shift, and go to state 430
    "::"                              shift, and go to state 55
    "$$"                              shift, and go to state 431
    "$i"                              shift, and go to state 432
    "$v"                              shift, and go to state 433
    "$b"                              shift, and go to state 434
    "$a"                              shift, and go to state 435
    "$c"                              shift, and go to state 436
    "..."                             shift, and go to state 437
    "integer constant"                shift, and go to state 438
    "long integer constant"           shift, and go to state 439
    "unsigned integer constant"       shift, and go to state 440
    "unsigned long integer constant"  shift, and go to state 441
    "unsigned int8 constant"          shift, and go to state 442
    "floating point constant"         shift, and go to state 443
    "double constant"                 shift, and go to state 444
    "name"                            shift, and go to state 56
    "start of the string"             shift, and go to state 445
    "begin of code block"             shift, and go to state 446
    '-'                               shift, and go to state 447
    '+'                               shift, and go to state 448
    '*'                               shift, and go to state 449
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 450
    '!'                               shift, and go to state 451
    '['                               shift, and go to state 452
    '('                               shift, and go to state 453
    '$'                               shift, and go to state 454
    '@'                               shift, and go to state 455

    string_builder          go to state 456
    expr_reader             go to state 457
    expr_call_pipe          go to state 458
    name_in_namespace       go to state 459
    expr_new                go to state 460
    expr_cast               go to state 461
    expr_type_decl          go to state 462
    expr_type_info          go to state 463
    block_or_lambda         go to state 464
    expr_full_block         go to state 465
    expr_numeric_const      go to state 466
    expr_named_call         go to state 467
    expr_method_call        go to state 468
    func_addr_expr          go to state 469
    expr_field              go to state 470
    expr_call               go to state 471
    expr                    go to state 796
    expr_mtag               go to state 473
    basic_type_declaration  go to state 474
    make_decl               go to state 475
    make_struct_decl        go to state 476
    make_tuple_call         go to state 477
    make_dim_decl           go to state 478
    make_table_decl         go to state 479
    array_comprehension     go to state 480


State 605

  282 expr_cast: "reinterpret" '<' . $@9 type_declaration_no_options '>' $@10 expr

    $default  reduce using rule 280 ($@9)

    $@9  go to state 797


State 606

  751 make_dim_decl: "fixed_array" '<' . $@91 type_declaration_no_options '>' $@92 '(' expr_list optional_comma ')'

    $default  reduce using rule 749 ($@91)

    $@91  go to state 798


State 607

  748 make_dim_decl: "fixed_array" '(' . expr_list optional_comma ')'

    "struct"                          shift, and go to state 408
    "class"                           shift, and go to state 409
    "true"                            shift, and go to state 410
    "false"                           shift, and go to state 411
    "new"                             shift, and go to state 412
    "typeinfo"                        shift, and go to state 413
    "type"                            shift, and go to state 414
    "array"                           shift, and go to state 415
    "null"                            shift, and go to state 416
    "table"                           shift, and go to state 417
    "deref"                           shift, and go to state 418
    "cast"                            shift, and go to state 419
    "upcast"                          shift, and go to state 420
    "addr"                            shift, and go to state 421
    "reinterpret"                     shift, and go to state 422
    "fixed_array"                     shift, and go to state 423
    "default"                         shift, and go to state 424
    "bool"                            shift, and go to state 222
    "void"                            shift, and go to state 223
    "string"                          shift, and go to state 224
    "int"                             shift, and go to state 226
    "int2"                            shift, and go to state 227
    "int3"                            shift, and go to state 228
    "int4"                            shift, and go to state 229
    "uint"                            shift, and go to state 230
    "bitfield"                        shift, and go to state 425
    "uint2"                           shift, and go to state 232
    "uint3"                           shift, and go to state 233
    "uint4"                           shift, and go to state 234
    "float"                           shift, and go to state 235
    "float2"                          shift, and go to state 236
    "float3"                          shift, and go to state 237
    "float4"                          shift, and go to state 238
    "range"                           shift, and go to state 239
    "urange"                          shift, and go to state 240
    "range64"                         shift, and go to state 241
    "urange64"                        shift, and go to state 242
    "int64"                           shift, and go to state 244
    "uint64"                          shift, and go to state 245
    "double"                          shift, and go to state 246
    "int8"                            shift, and go to state 249
    "uint8"                           shift, and go to state 250
    "int16"                           shift, and go to state 251
    "uint16"                          shift, and go to state 252
    "tuple"                           shift, and go to state 426
    "variant"                         shift, and go to state 427
    "generator"                       shift, and go to state 428
    "++"                              shift, and go to state 429
    "--"                              shift, and go to state 430
    "::"                              shift, and go to state 55
    "$$"                              shift, and go to state 431
    "$i"                              shift, and go to state 432
    "$v"                              shift, and go to state 433
    "$b"                              shift, and go to state 434
    "$a"                              shift, and go to state 435
    "$c"                              shift, and go to state 436
    "..."                             shift, and go to state 437
    "integer constant"                shift, and go to state 438
    "long integer constant"           shift, and go to state 439
    "unsigned integer constant"       shift, and go to state 440
    "unsigned long integer constant"  shift, and go to state 441
    "unsigned int8 constant"          shift, and go to state 442
    "floating point constant"         shift, and go to state 443
    "double constant"                 shift, and go to state 444
    "name"                            shift, and go to state 56
    "start of the string"             shift, and go to state 445
    "begin of code block"             shift, and go to state 446
    '-'                               shift, and go to state 447
    '+'                               shift, and go to state 448
    '*'                               shift, and go to state 449
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 450
    '!'                               shift, and go to state 451
    '['                               shift, and go to state 452
    '('                               shift, and go to state 453
    '$'                               shift, and go to state 454
    '@'                               shift, and go to state 455

    string_builder          go to state 456
    expr_reader             go to state 457
    expr_call_pipe          go to state 458
    name_in_namespace       go to state 459
    expr_new                go to state 460
    expr_cast               go to state 461
    expr_type_decl          go to state 462
    expr_type_info          go to state 463
    expr_list               go to state 799
    block_or_lambda         go to state 464
    expr_full_block         go to state 465
    expr_numeric_const      go to state 466
    expr_named_call         go to state 467
    expr_method_call        go to state 468
    func_addr_expr          go to state 469
    expr_field              go to state 470
    expr_call               go to state 471
    expr                    go to state 634
    expr_mtag               go to state 473
    basic_type_declaration  go to state 474
    make_decl               go to state 475
    make_struct_decl        go to state 476
    make_tuple_call         go to state 477
    make_dim_decl           go to state 478
    make_table_decl         go to state 479
    array_comprehension     go to state 480


State 608

  727 make_struct_decl: "default" '<' . $@79 type_declaration_no_options '>' $@80 use_initializer

    $default  reduce using rule 725 ($@79)

    $@79  go to state 800


State 609

  733 make_tuple_call: "tuple" '<' . $@81 type_declaration_no_options '>' $@82 '(' use_initializer make_struct_dim ')'

    $default  reduce using rule 731 ($@81)

    $@81  go to state 801


State 610

  730 make_tuple_call: "tuple" '(' . expr_list optional_comma ')'

    "struct"                          shift, and go to state 408
    "class"                           shift, and go to state 409
    "true"                            shift, and go to state 410
    "false"                           shift, and go to state 411
    "new"                             shift, and go to state 412
    "typeinfo"                        shift, and go to state 413
    "type"                            shift, and go to state 414
    "array"                           shift, and go to state 415
    "null"                            shift, and go to state 416
    "table"                           shift, and go to state 417
    "deref"                           shift, and go to state 418
    "cast"                            shift, and go to state 419
    "upcast"                          shift, and go to state 420
    "addr"                            shift, and go to state 421
    "reinterpret"                     shift, and go to state 422
    "fixed_array"                     shift, and go to state 423
    "default"                         shift, and go to state 424
    "bool"                            shift, and go to state 222
    "void"                            shift, and go to state 223
    "string"                          shift, and go to state 224
    "int"                             shift, and go to state 226
    "int2"                            shift, and go to state 227
    "int3"                            shift, and go to state 228
    "int4"                            shift, and go to state 229
    "uint"                            shift, and go to state 230
    "bitfield"                        shift, and go to state 425
    "uint2"                           shift, and go to state 232
    "uint3"                           shift, and go to state 233
    "uint4"                           shift, and go to state 234
    "float"                           shift, and go to state 235
    "float2"                          shift, and go to state 236
    "float3"                          shift, and go to state 237
    "float4"                          shift, and go to state 238
    "range"                           shift, and go to state 239
    "urange"                          shift, and go to state 240
    "range64"                         shift, and go to state 241
    "urange64"                        shift, and go to state 242
    "int64"                           shift, and go to state 244
    "uint64"                          shift, and go to state 245
    "double"                          shift, and go to state 246
    "int8"                            shift, and go to state 249
    "uint8"                           shift, and go to state 250
    "int16"                           shift, and go to state 251
    "uint16"                          shift, and go to state 252
    "tuple"                           shift, and go to state 426
    "variant"                         shift, and go to state 427
    "generator"                       shift, and go to state 428
    "++"                              shift, and go to state 429
    "--"                              shift, and go to state 430
    "::"                              shift, and go to state 55
    "$$"                              shift, and go to state 431
    "$i"                              shift, and go to state 432
    "$v"                              shift, and go to state 433
    "$b"                              shift, and go to state 434
    "$a"                              shift, and go to state 435
    "$c"                              shift, and go to state 436
    "..."                             shift, and go to state 437
    "integer constant"                shift, and go to state 438
    "long integer constant"           shift, and go to state 439
    "unsigned integer constant"       shift, and go to state 440
    "unsigned long integer constant"  shift, and go to state 441
    "unsigned int8 constant"          shift, and go to state 442
    "floating point constant"         shift, and go to state 443
    "double constant"                 shift, and go to state 444
    "name"                            shift, and go to state 56
    "start of the string"             shift, and go to state 445
    "begin of code block"             shift, and go to state 446
    '-'                               shift, and go to state 447
    '+'                               shift, and go to state 448
    '*'                               shift, and go to state 449
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 450
    '!'                               shift, and go to state 451
    '['                               shift, and go to state 452
    '('                               shift, and go to state 453
    '$'                               shift, and go to state 454
    '@'                               shift, and go to state 455

    string_builder          go to state 456
    expr_reader             go to state 457
    expr_call_pipe          go to state 458
    name_in_namespace       go to state 459
    expr_new                go to state 460
    expr_cast               go to state 461
    expr_type_decl          go to state 462
    expr_type_info          go to state 463
    expr_list               go to state 802
    block_or_lambda         go to state 464
    expr_full_block         go to state 465
    expr_numeric_const      go to state 466
    expr_named_call         go to state 467
    expr_method_call        go to state 468
    func_addr_expr          go to state 469
    expr_field              go to state 470
    expr_call               go to state 471
    expr                    go to state 634
    expr_mtag               go to state 473
    basic_type_declaration  go to state 474
    make_decl               go to state 475
    make_struct_decl        go to state 476
    make_tuple_call         go to state 477
    make_dim_decl           go to state 478
    make_table_decl         go to state 479
    array_comprehension     go to state 480


State 611

  724 make_struct_decl: "variant" '<' . $@77 type_declaration_no_options '>' $@78 '(' make_struct_dim ')'

    $default  reduce using rule 722 ($@77)

    $@77  go to state 803


State 612

  411 expr: "generator" '<' . type_declaration_no_options '>' optional_capture_list '(' ')'
  412     | "generator" '<' . type_declaration_no_options '>' optional_capture_list '(' expr ')'

    "type"       shift, and go to state 216
    "array"      shift, and go to state 217
    "table"      shift, and go to state 218
    "typedecl"   shift, and go to state 219
    "iterator"   shift, and go to state 220
    "smart_ptr"  shift, and go to state 221
    "bool"       shift, and go to state 222
    "void"       shift, and go to state 223
    "string"     shift, and go to state 224
    "auto"       shift, and go to state 225
    "int"        shift, and go to state 226
    "int2"       shift, and go to state 227
    "int3"       shift, and go to state 228
    "int4"       shift, and go to state 229
    "uint"       shift, and go to state 230
    "bitfield"   shift, and go to state 231
    "uint2"      shift, and go to state 232
    "uint3"      shift, and go to state 233
    "uint4"      shift, and go to state 234
    "float"      shift, and go to state 235
    "float2"     shift, and go to state 236
    "float3"     shift, and go to state 237
    "float4"     shift, and go to state 238
    "range"      shift, and go to state 239
    "urange"     shift, and go to state 240
    "range64"    shift, and go to state 241
    "urange64"   shift, and go to state 242
    "block"      shift, and go to state 243
    "int64"      shift, and go to state 244
    "uint64"     shift, and go to state 245
    "double"     shift, and go to state 246
    "function"   shift, and go to state 247
    "lambda"     shift, and go to state 248
    "int8"       shift, and go to state 249
    "uint8"      shift, and go to state 250
    "int16"      shift, and go to state 251
    "uint16"     shift, and go to state 252
    "tuple"      shift, and go to state 253
    "variant"    shift, and go to state 254
    "::"         shift, and go to state 55
    "$t"         shift, and go to state 255
    "name"       shift, and go to state 56
    '$'          shift, and go to state 256

    name_in_namespace                   go to state 257
    basic_type_declaration              go to state 258
    structure_type_declaration          go to state 259
    auto_type_declaration               go to state 260
    bitfield_type_declaration           go to state 261
    type_declaration_no_options         go to state 804
    type_declaration_no_options_no_dim  go to state 263


State 613

  336 expr_method_call: expr . "->" "name" '(' ')'
  337                 | expr . "->" "name" '(' expr_list ')'
  347 expr_field: expr . '.' "name"
  348           | expr . '.' '.' "name"
  349           | expr . '.' "name" '(' ')'
  350           | expr . '.' "name" '(' expr_list ')'
  353           | expr . '.' $@17 error $@18
  373 expr: expr . "<<" expr
  374     | expr . ">>" expr
  375     | expr . "<<<" expr
  376     | expr . ">>>" expr
  377     | expr . '+' expr
  378     | expr . '-' expr
  379     | expr . '*' expr
  380     | expr . '/' expr
  381     | expr . '%' expr
  382     | expr . '<' expr
  383     | expr . '>' expr
  384     | expr . "==" expr
  385     | expr . "!=" expr
  386     | expr . "<=" expr
  387     | expr . ">=" expr
  388     | expr . '&' expr
  389     | expr . '|' expr
  390     | expr . '^' expr
  391     | expr . "&&" expr
  392     | expr . "||" expr
  393     | expr . "^^" expr
  394     | expr . ".." expr
  395     | "++" expr .
  397     | expr . "++"
  398     | expr . "--"
  400     | expr . '[' expr ']'
  401     | expr . '.' '[' expr ']'
  402     | expr . "?[" expr ']'
  403     | expr . '.' "?[" expr ']'
  404     | expr . "?." "name"
  405     | expr . '.' "?." "name"
  413     | expr . "??" expr
  414     | expr . '?' expr ':' expr
  417     | expr . "is" "type" '<' $@19 type_declaration_no_options '>' $@20
  418     | expr . "is" basic_type_declaration
  419     | expr . "is" "name"
  420     | expr . "as" "name"
  423     | expr . "as" "type" '<' $@21 type_declaration '>' $@22
  424     | expr . "as" basic_type_declaration
  425     | expr . '?' "as" "name"
  428     | expr . '?' "as" "type" '<' $@23 type_declaration '>' $@24
  429     | expr . '?' "as" basic_type_declaration
  437     | expr . "<|" expr
  438     | expr . "|>" expr
  439     | expr . "|>" basic_type_declaration
  449 expr_mtag: expr . '.' "$f" '(' expr ')'
  450          | expr . "?." "$f" '(' expr ')'
  451          | expr . '.' '.' "$f" '(' expr ')'
  452          | expr . '.' "?." "$f" '(' expr ')'
  453          | expr . "as" "$f" '(' expr ')'
  454          | expr . '?' "as" "$f" '(' expr ')'
  455          | expr . "is" "$f" '(' expr ')'

    "is"  shift, and go to state 643
    "as"  shift, and go to state 644
    "++"  shift, and go to state 647
    "--"  shift, and go to state 648
    "->"  shift, and go to state 653
    "?."  shift, and go to state 655
    "?["  shift, and go to state 656
    "<|"  shift, and go to state 657
    "|>"  shift, and go to state 658
    '.'   shift, and go to state 676
    '['   shift, and go to state 677

    $default  reduce using rule 395 (expr)


State 614

  336 expr_method_call: expr . "->" "name" '(' ')'
  337                 | expr . "->" "name" '(' expr_list ')'
  347 expr_field: expr . '.' "name"
  348           | expr . '.' '.' "name"
  349           | expr . '.' "name" '(' ')'
  350           | expr . '.' "name" '(' expr_list ')'
  353           | expr . '.' $@17 error $@18
  373 expr: expr . "<<" expr
  374     | expr . ">>" expr
  375     | expr . "<<<" expr
  376     | expr . ">>>" expr
  377     | expr . '+' expr
  378     | expr . '-' expr
  379     | expr . '*' expr
  380     | expr . '/' expr
  381     | expr . '%' expr
  382     | expr . '<' expr
  383     | expr . '>' expr
  384     | expr . "==" expr
  385     | expr . "!=" expr
  386     | expr . "<=" expr
  387     | expr . ">=" expr
  388     | expr . '&' expr
  389     | expr . '|' expr
  390     | expr . '^' expr
  391     | expr . "&&" expr
  392     | expr . "||" expr
  393     | expr . "^^" expr
  394     | expr . ".." expr
  396     | "--" expr .
  397     | expr . "++"
  398     | expr . "--"
  400     | expr . '[' expr ']'
  401     | expr . '.' '[' expr ']'
  402     | expr . "?[" expr ']'
  403     | expr . '.' "?[" expr ']'
  404     | expr . "?." "name"
  405     | expr . '.' "?." "name"
  413     | expr . "??" expr
  414     | expr . '?' expr ':' expr
  417     | expr . "is" "type" '<' $@19 type_declaration_no_options '>' $@20
  418     | expr . "is" basic_type_declaration
  419     | expr . "is" "name"
  420     | expr . "as" "name"
  423     | expr . "as" "type" '<' $@21 type_declaration '>' $@22
  424     | expr . "as" basic_type_declaration
  425     | expr . '?' "as" "name"
  428     | expr . '?' "as" "type" '<' $@23 type_declaration '>' $@24
  429     | expr . '?' "as" basic_type_declaration
  437     | expr . "<|" expr
  438     | expr . "|>" expr
  439     | expr . "|>" basic_type_declaration
  449 expr_mtag: expr . '.' "$f" '(' expr ')'
  450          | expr . "?." "$f" '(' expr ')'
  451          | expr . '.' '.' "$f" '(' expr ')'
  452          | expr . '.' "?." "$f" '(' expr ')'
  453          | expr . "as" "$f" '(' expr ')'
  454          | expr . '?' "as" "$f" '(' expr ')'
  455          | expr . "is" "$f" '(' expr ')'

    "is"  shift, and go to state 643
    "as"  shift, and go to state 644
    "++"  shift, and go to state 647
    "--"  shift, and go to state 648
    "->"  shift, and go to state 653
    "?."  shift, and go to state 655
    "?["  shift, and go to state 656
    "<|"  shift, and go to state 657
    "|>"  shift, and go to state 658
    '.'   shift, and go to state 676
    '['   shift, and go to state 677

    $default  reduce using rule 396 (expr)


State 615

  441 expr_mtag: "$$" '(' . expr ')'

    "struct"                          shift, and go to state 408
    "class"                           shift, and go to state 409
    "true"                            shift, and go to state 410
    "false"                           shift, and go to state 411
    "new"                             shift, and go to state 412
    "typeinfo"                        shift, and go to state 413
    "type"                            shift, and go to state 414
    "array"                           shift, and go to state 415
    "null"                            shift, and go to state 416
    "table"                           shift, and go to state 417
    "deref"                           shift, and go to state 418
    "cast"                            shift, and go to state 419
    "upcast"                          shift, and go to state 420
    "addr"                            shift, and go to state 421
    "reinterpret"                     shift, and go to state 422
    "fixed_array"                     shift, and go to state 423
    "default"                         shift, and go to state 424
    "bool"                            shift, and go to state 222
    "void"                            shift, and go to state 223
    "string"                          shift, and go to state 224
    "int"                             shift, and go to state 226
    "int2"                            shift, and go to state 227
    "int3"                            shift, and go to state 228
    "int4"                            shift, and go to state 229
    "uint"                            shift, and go to state 230
    "bitfield"                        shift, and go to state 425
    "uint2"                           shift, and go to state 232
    "uint3"                           shift, and go to state 233
    "uint4"                           shift, and go to state 234
    "float"                           shift, and go to state 235
    "float2"                          shift, and go to state 236
    "float3"                          shift, and go to state 237
    "float4"                          shift, and go to state 238
    "range"                           shift, and go to state 239
    "urange"                          shift, and go to state 240
    "range64"                         shift, and go to state 241
    "urange64"                        shift, and go to state 242
    "int64"                           shift, and go to state 244
    "uint64"                          shift, and go to state 245
    "double"                          shift, and go to state 246
    "int8"                            shift, and go to state 249
    "uint8"                           shift, and go to state 250
    "int16"                           shift, and go to state 251
    "uint16"                          shift, and go to state 252
    "tuple"                           shift, and go to state 426
    "variant"                         shift, and go to state 427
    "generator"                       shift, and go to state 428
    "++"                              shift, and go to state 429
    "--"                              shift, and go to state 430
    "::"                              shift, and go to state 55
    "$$"                              shift, and go to state 431
    "$i"                              shift, and go to state 432
    "$v"                              shift, and go to state 433
    "$b"                              shift, and go to state 434
    "$a"                              shift, and go to state 435
    "$c"                              shift, and go to state 436
    "..."                             shift, and go to state 437
    "integer constant"                shift, and go to state 438
    "long integer constant"           shift, and go to state 439
    "unsigned integer constant"       shift, and go to state 440
    "unsigned long integer constant"  shift, and go to state 441
    "unsigned int8 constant"          shift, and go to state 442
    "floating point constant"         shift, and go to state 443
    "double constant"                 shift, and go to state 444
    "name"                            shift, and go to state 56
    "start of the string"             shift, and go to state 445
    "begin of code block"             shift, and go to state 446
    '-'                               shift, and go to state 447
    '+'                               shift, and go to state 448
    '*'                               shift, and go to state 449
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 450
    '!'                               shift, and go to state 451
    '['                               shift, and go to state 452
    '('                               shift, and go to state 453
    '$'                               shift, and go to state 454
    '@'                               shift, and go to state 455

    string_builder          go to state 456
    expr_reader             go to state 457
    expr_call_pipe          go to state 458
    name_in_namespace       go to state 459
    expr_new                go to state 460
    expr_cast               go to state 461
    expr_type_decl          go to state 462
    expr_type_info          go to state 463
    block_or_lambda         go to state 464
    expr_full_block         go to state 465
    expr_numeric_const      go to state 466
    expr_named_call         go to state 467
    expr_method_call        go to state 468
    func_addr_expr          go to state 469
    expr_field              go to state 470
    expr_call               go to state 471
    expr                    go to state 805
    expr_mtag               go to state 473
    basic_type_declaration  go to state 474
    make_decl               go to state 475
    make_struct_decl        go to state 476
    make_tuple_call         go to state 477
    make_dim_decl           go to state 478
    make_table_decl         go to state 479
    array_comprehension     go to state 480


State 616

  442 expr_mtag: "$i" '(' . expr ')'

    "struct"                          shift, and go to state 408
    "class"                           shift, and go to state 409
    "true"                            shift, and go to state 410
    "false"                           shift, and go to state 411
    "new"                             shift, and go to state 412
    "typeinfo"                        shift, and go to state 413
    "type"                            shift, and go to state 414
    "array"                           shift, and go to state 415
    "null"                            shift, and go to state 416
    "table"                           shift, and go to state 417
    "deref"                           shift, and go to state 418
    "cast"                            shift, and go to state 419
    "upcast"                          shift, and go to state 420
    "addr"                            shift, and go to state 421
    "reinterpret"                     shift, and go to state 422
    "fixed_array"                     shift, and go to state 423
    "default"                         shift, and go to state 424
    "bool"                            shift, and go to state 222
    "void"                            shift, and go to state 223
    "string"                          shift, and go to state 224
    "int"                             shift, and go to state 226
    "int2"                            shift, and go to state 227
    "int3"                            shift, and go to state 228
    "int4"                            shift, and go to state 229
    "uint"                            shift, and go to state 230
    "bitfield"                        shift, and go to state 425
    "uint2"                           shift, and go to state 232
    "uint3"                           shift, and go to state 233
    "uint4"                           shift, and go to state 234
    "float"                           shift, and go to state 235
    "float2"                          shift, and go to state 236
    "float3"                          shift, and go to state 237
    "float4"                          shift, and go to state 238
    "range"                           shift, and go to state 239
    "urange"                          shift, and go to state 240
    "range64"                         shift, and go to state 241
    "urange64"                        shift, and go to state 242
    "int64"                           shift, and go to state 244
    "uint64"                          shift, and go to state 245
    "double"                          shift, and go to state 246
    "int8"                            shift, and go to state 249
    "uint8"                           shift, and go to state 250
    "int16"                           shift, and go to state 251
    "uint16"                          shift, and go to state 252
    "tuple"                           shift, and go to state 426
    "variant"                         shift, and go to state 427
    "generator"                       shift, and go to state 428
    "++"                              shift, and go to state 429
    "--"                              shift, and go to state 430
    "::"                              shift, and go to state 55
    "$$"                              shift, and go to state 431
    "$i"                              shift, and go to state 432
    "$v"                              shift, and go to state 433
    "$b"                              shift, and go to state 434
    "$a"                              shift, and go to state 435
    "$c"                              shift, and go to state 436
    "..."                             shift, and go to state 437
    "integer constant"                shift, and go to state 438
    "long integer constant"           shift, and go to state 439
    "unsigned integer constant"       shift, and go to state 440
    "unsigned long integer constant"  shift, and go to state 441
    "unsigned int8 constant"          shift, and go to state 442
    "floating point constant"         shift, and go to state 443
    "double constant"                 shift, and go to state 444
    "name"                            shift, and go to state 56
    "start of the string"             shift, and go to state 445
    "begin of code block"             shift, and go to state 446
    '-'                               shift, and go to state 447
    '+'                               shift, and go to state 448
    '*'                               shift, and go to state 449
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 450
    '!'                               shift, and go to state 451
    '['                               shift, and go to state 452
    '('                               shift, and go to state 453
    '$'                               shift, and go to state 454
    '@'                               shift, and go to state 455

    string_builder          go to state 456
    expr_reader             go to state 457
    expr_call_pipe          go to state 458
    name_in_namespace       go to state 459
    expr_new                go to state 460
    expr_cast               go to state 461
    expr_type_decl          go to state 462
    expr_type_info          go to state 463
    block_or_lambda         go to state 464
    expr_full_block         go to state 465
    expr_numeric_const      go to state 466
    expr_named_call         go to state 467
    expr_method_call        go to state 468
    func_addr_expr          go to state 469
    expr_field              go to state 470
    expr_call               go to state 471
    expr                    go to state 806
    expr_mtag               go to state 473
    basic_type_declaration  go to state 474
    make_decl               go to state 475
    make_struct_decl        go to state 476
    make_tuple_call         go to state 477
    make_dim_decl           go to state 478
    make_table_decl         go to state 479
    array_comprehension     go to state 480


State 617

  443 expr_mtag: "$v" '(' . expr ')'

    "struct"                          shift, and go to state 408
    "class"                           shift, and go to state 409
    "true"                            shift, and go to state 410
    "false"                           shift, and go to state 411
    "new"                             shift, and go to state 412
    "typeinfo"                        shift, and go to state 413
    "type"                            shift, and go to state 414
    "array"                           shift, and go to state 415
    "null"                            shift, and go to state 416
    "table"                           shift, and go to state 417
    "deref"                           shift, and go to state 418
    "cast"                            shift, and go to state 419
    "upcast"                          shift, and go to state 420
    "addr"                            shift, and go to state 421
    "reinterpret"                     shift, and go to state 422
    "fixed_array"                     shift, and go to state 423
    "default"                         shift, and go to state 424
    "bool"                            shift, and go to state 222
    "void"                            shift, and go to state 223
    "string"                          shift, and go to state 224
    "int"                             shift, and go to state 226
    "int2"                            shift, and go to state 227
    "int3"                            shift, and go to state 228
    "int4"                            shift, and go to state 229
    "uint"                            shift, and go to state 230
    "bitfield"                        shift, and go to state 425
    "uint2"                           shift, and go to state 232
    "uint3"                           shift, and go to state 233
    "uint4"                           shift, and go to state 234
    "float"                           shift, and go to state 235
    "float2"                          shift, and go to state 236
    "float3"                          shift, and go to state 237
    "float4"                          shift, and go to state 238
    "range"                           shift, and go to state 239
    "urange"                          shift, and go to state 240
    "range64"                         shift, and go to state 241
    "urange64"                        shift, and go to state 242
    "int64"                           shift, and go to state 244
    "uint64"                          shift, and go to state 245
    "double"                          shift, and go to state 246
    "int8"                            shift, and go to state 249
    "uint8"                           shift, and go to state 250
    "int16"                           shift, and go to state 251
    "uint16"                          shift, and go to state 252
    "tuple"                           shift, and go to state 426
    "variant"                         shift, and go to state 427
    "generator"                       shift, and go to state 428
    "++"                              shift, and go to state 429
    "--"                              shift, and go to state 430
    "::"                              shift, and go to state 55
    "$$"                              shift, and go to state 431
    "$i"                              shift, and go to state 432
    "$v"                              shift, and go to state 433
    "$b"                              shift, and go to state 434
    "$a"                              shift, and go to state 435
    "$c"                              shift, and go to state 436
    "..."                             shift, and go to state 437
    "integer constant"                shift, and go to state 438
    "long integer constant"           shift, and go to state 439
    "unsigned integer constant"       shift, and go to state 440
    "unsigned long integer constant"  shift, and go to state 441
    "unsigned int8 constant"          shift, and go to state 442
    "floating point constant"         shift, and go to state 443
    "double constant"                 shift, and go to state 444
    "name"                            shift, and go to state 56
    "start of the string"             shift, and go to state 445
    "begin of code block"             shift, and go to state 446
    '-'                               shift, and go to state 447
    '+'                               shift, and go to state 448
    '*'                               shift, and go to state 449
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 450
    '!'                               shift, and go to state 451
    '['                               shift, and go to state 452
    '('                               shift, and go to state 453
    '$'                               shift, and go to state 454
    '@'                               shift, and go to state 455

    string_builder          go to state 456
    expr_reader             go to state 457
    expr_call_pipe          go to state 458
    name_in_namespace       go to state 459
    expr_new                go to state 460
    expr_cast               go to state 461
    expr_type_decl          go to state 462
    expr_type_info          go to state 463
    block_or_lambda         go to state 464
    expr_full_block         go to state 465
    expr_numeric_const      go to state 466
    expr_named_call         go to state 467
    expr_method_call        go to state 468
    func_addr_expr          go to state 469
    expr_field              go to state 470
    expr_call               go to state 471
    expr                    go to state 807
    expr_mtag               go to state 473
    basic_type_declaration  go to state 474
    make_decl               go to state 475
    make_struct_decl        go to state 476
    make_tuple_call         go to state 477
    make_dim_decl           go to state 478
    make_table_decl         go to state 479
    array_comprehension     go to state 480


State 618

  444 expr_mtag: "$b" '(' . expr ')'

    "struct"                          shift, and go to state 408
    "class"                           shift, and go to state 409
    "true"                            shift, and go to state 410
    "false"                           shift, and go to state 411
    "new"                             shift, and go to state 412
    "typeinfo"                        shift, and go to state 413
    "type"                            shift, and go to state 414
    "array"                           shift, and go to state 415
    "null"                            shift, and go to state 416
    "table"                           shift, and go to state 417
    "deref"                           shift, and go to state 418
    "cast"                            shift, and go to state 419
    "upcast"                          shift, and go to state 420
    "addr"                            shift, and go to state 421
    "reinterpret"                     shift, and go to state 422
    "fixed_array"                     shift, and go to state 423
    "default"                         shift, and go to state 424
    "bool"                            shift, and go to state 222
    "void"                            shift, and go to state 223
    "string"                          shift, and go to state 224
    "int"                             shift, and go to state 226
    "int2"                            shift, and go to state 227
    "int3"                            shift, and go to state 228
    "int4"                            shift, and go to state 229
    "uint"                            shift, and go to state 230
    "bitfield"                        shift, and go to state 425
    "uint2"                           shift, and go to state 232
    "uint3"                           shift, and go to state 233
    "uint4"                           shift, and go to state 234
    "float"                           shift, and go to state 235
    "float2"                          shift, and go to state 236
    "float3"                          shift, and go to state 237
    "float4"                          shift, and go to state 238
    "range"                           shift, and go to state 239
    "urange"                          shift, and go to state 240
    "range64"                         shift, and go to state 241
    "urange64"                        shift, and go to state 242
    "int64"                           shift, and go to state 244
    "uint64"                          shift, and go to state 245
    "double"                          shift, and go to state 246
    "int8"                            shift, and go to state 249
    "uint8"                           shift, and go to state 250
    "int16"                           shift, and go to state 251
    "uint16"                          shift, and go to state 252
    "tuple"                           shift, and go to state 426
    "variant"                         shift, and go to state 427
    "generator"                       shift, and go to state 428
    "++"                              shift, and go to state 429
    "--"                              shift, and go to state 430
    "::"                              shift, and go to state 55
    "$$"                              shift, and go to state 431
    "$i"                              shift, and go to state 432
    "$v"                              shift, and go to state 433
    "$b"                              shift, and go to state 434
    "$a"                              shift, and go to state 435
    "$c"                              shift, and go to state 436
    "..."                             shift, and go to state 437
    "integer constant"                shift, and go to state 438
    "long integer constant"           shift, and go to state 439
    "unsigned integer constant"       shift, and go to state 440
    "unsigned long integer constant"  shift, and go to state 441
    "unsigned int8 constant"          shift, and go to state 442
    "floating point constant"         shift, and go to state 443
    "double constant"                 shift, and go to state 444
    "name"                            shift, and go to state 56
    "start of the string"             shift, and go to state 445
    "begin of code block"             shift, and go to state 446
    '-'                               shift, and go to state 447
    '+'                               shift, and go to state 448
    '*'                               shift, and go to state 449
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 450
    '!'                               shift, and go to state 451
    '['                               shift, and go to state 452
    '('                               shift, and go to state 453
    '$'                               shift, and go to state 454
    '@'                               shift, and go to state 455

    string_builder          go to state 456
    expr_reader             go to state 457
    expr_call_pipe          go to state 458
    name_in_namespace       go to state 459
    expr_new                go to state 460
    expr_cast               go to state 461
    expr_type_decl          go to state 462
    expr_type_info          go to state 463
    block_or_lambda         go to state 464
    expr_full_block         go to state 465
    expr_numeric_const      go to state 466
    expr_named_call         go to state 467
    expr_method_call        go to state 468
    func_addr_expr          go to state 469
    expr_field              go to state 470
    expr_call               go to state 471
    expr                    go to state 808
    expr_mtag               go to state 473
    basic_type_declaration  go to state 474
    make_decl               go to state 475
    make_struct_decl        go to state 476
    make_tuple_call         go to state 477
    make_dim_decl           go to state 478
    make_table_decl         go to state 479
    array_comprehension     go to state 480


State 619

  445 expr_mtag: "$a" '(' . expr ')'

    "struct"                          shift, and go to state 408
    "class"                           shift, and go to state 409
    "true"                            shift, and go to state 410
    "false"                           shift, and go to state 411
    "new"                             shift, and go to state 412
    "typeinfo"                        shift, and go to state 413
    "type"                            shift, and go to state 414
    "array"                           shift, and go to state 415
    "null"                            shift, and go to state 416
    "table"                           shift, and go to state 417
    "deref"                           shift, and go to state 418
    "cast"                            shift, and go to state 419
    "upcast"                          shift, and go to state 420
    "addr"                            shift, and go to state 421
    "reinterpret"                     shift, and go to state 422
    "fixed_array"                     shift, and go to state 423
    "default"                         shift, and go to state 424
    "bool"                            shift, and go to state 222
    "void"                            shift, and go to state 223
    "string"                          shift, and go to state 224
    "int"                             shift, and go to state 226
    "int2"                            shift, and go to state 227
    "int3"                            shift, and go to state 228
    "int4"                            shift, and go to state 229
    "uint"                            shift, and go to state 230
    "bitfield"                        shift, and go to state 425
    "uint2"                           shift, and go to state 232
    "uint3"                           shift, and go to state 233
    "uint4"                           shift, and go to state 234
    "float"                           shift, and go to state 235
    "float2"                          shift, and go to state 236
    "float3"                          shift, and go to state 237
    "float4"                          shift, and go to state 238
    "range"                           shift, and go to state 239
    "urange"                          shift, and go to state 240
    "range64"                         shift, and go to state 241
    "urange64"                        shift, and go to state 242
    "int64"                           shift, and go to state 244
    "uint64"                          shift, and go to state 245
    "double"                          shift, and go to state 246
    "int8"                            shift, and go to state 249
    "uint8"                           shift, and go to state 250
    "int16"                           shift, and go to state 251
    "uint16"                          shift, and go to state 252
    "tuple"                           shift, and go to state 426
    "variant"                         shift, and go to state 427
    "generator"                       shift, and go to state 428
    "++"                              shift, and go to state 429
    "--"                              shift, and go to state 430
    "::"                              shift, and go to state 55
    "$$"                              shift, and go to state 431
    "$i"                              shift, and go to state 432
    "$v"                              shift, and go to state 433
    "$b"                              shift, and go to state 434
    "$a"                              shift, and go to state 435
    "$c"                              shift, and go to state 436
    "..."                             shift, and go to state 437
    "integer constant"                shift, and go to state 438
    "long integer constant"           shift, and go to state 439
    "unsigned integer constant"       shift, and go to state 440
    "unsigned long integer constant"  shift, and go to state 441
    "unsigned int8 constant"          shift, and go to state 442
    "floating point constant"         shift, and go to state 443
    "double constant"                 shift, and go to state 444
    "name"                            shift, and go to state 56
    "start of the string"             shift, and go to state 445
    "begin of code block"             shift, and go to state 446
    '-'                               shift, and go to state 447
    '+'                               shift, and go to state 448
    '*'                               shift, and go to state 449
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 450
    '!'                               shift, and go to state 451
    '['                               shift, and go to state 452
    '('                               shift, and go to state 453
    '$'                               shift, and go to state 454
    '@'                               shift, and go to state 455

    string_builder          go to state 456
    expr_reader             go to state 457
    expr_call_pipe          go to state 458
    name_in_namespace       go to state 459
    expr_new                go to state 460
    expr_cast               go to state 461
    expr_type_decl          go to state 462
    expr_type_info          go to state 463
    block_or_lambda         go to state 464
    expr_full_block         go to state 465
    expr_numeric_const      go to state 466
    expr_named_call         go to state 467
    expr_method_call        go to state 468
    func_addr_expr          go to state 469
    expr_field              go to state 470
    expr_call               go to state 471
    expr                    go to state 809
    expr_mtag               go to state 473
    basic_type_declaration  go to state 474
    make_decl               go to state 475
    make_struct_decl        go to state 476
    make_tuple_call         go to state 477
    make_dim_decl           go to state 478
    make_table_decl         go to state 479
    array_comprehension     go to state 480


State 620

  447 expr_mtag: "$c" '(' . expr ')' '(' ')'
  448          | "$c" '(' . expr ')' '(' expr_list ')'

    "struct"                          shift, and go to state 408
    "class"                           shift, and go to state 409
    "true"                            shift, and go to state 410
    "false"                           shift, and go to state 411
    "new"                             shift, and go to state 412
    "typeinfo"                        shift, and go to state 413
    "type"                            shift, and go to state 414
    "array"                           shift, and go to state 415
    "null"                            shift, and go to state 416
    "table"                           shift, and go to state 417
    "deref"                           shift, and go to state 418
    "cast"                            shift, and go to state 419
    "upcast"                          shift, and go to state 420
    "addr"                            shift, and go to state 421
    "reinterpret"                     shift, and go to state 422
    "fixed_array"                     shift, and go to state 423
    "default"                         shift, and go to state 424
    "bool"                            shift, and go to state 222
    "void"                            shift, and go to state 223
    "string"                          shift, and go to state 224
    "int"                             shift, and go to state 226
    "int2"                            shift, and go to state 227
    "int3"                            shift, and go to state 228
    "int4"                            shift, and go to state 229
    "uint"                            shift, and go to state 230
    "bitfield"                        shift, and go to state 425
    "uint2"                           shift, and go to state 232
    "uint3"                           shift, and go to state 233
    "uint4"                           shift, and go to state 234
    "float"                           shift, and go to state 235
    "float2"                          shift, and go to state 236
    "float3"                          shift, and go to state 237
    "float4"                          shift, and go to state 238
    "range"                           shift, and go to state 239
    "urange"                          shift, and go to state 240
    "range64"                         shift, and go to state 241
    "urange64"                        shift, and go to state 242
    "int64"                           shift, and go to state 244
    "uint64"                          shift, and go to state 245
    "double"                          shift, and go to state 246
    "int8"                            shift, and go to state 249
    "uint8"                           shift, and go to state 250
    "int16"                           shift, and go to state 251
    "uint16"                          shift, and go to state 252
    "tuple"                           shift, and go to state 426
    "variant"                         shift, and go to state 427
    "generator"                       shift, and go to state 428
    "++"                              shift, and go to state 429
    "--"                              shift, and go to state 430
    "::"                              shift, and go to state 55
    "$$"                              shift, and go to state 431
    "$i"                              shift, and go to state 432
    "$v"                              shift, and go to state 433
    "$b"                              shift, and go to state 434
    "$a"                              shift, and go to state 435
    "$c"                              shift, and go to state 436
    "..."                             shift, and go to state 437
    "integer constant"                shift, and go to state 438
    "long integer constant"           shift, and go to state 439
    "unsigned integer constant"       shift, and go to state 440
    "unsigned long integer constant"  shift, and go to state 441
    "unsigned int8 constant"          shift, and go to state 442
    "floating point constant"         shift, and go to state 443
    "double constant"                 shift, and go to state 444
    "name"                            shift, and go to state 56
    "start of the string"             shift, and go to state 445
    "begin of code block"             shift, and go to state 446
    '-'                               shift, and go to state 447
    '+'                               shift, and go to state 448
    '*'                               shift, and go to state 449
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 450
    '!'                               shift, and go to state 451
    '['                               shift, and go to state 452
    '('                               shift, and go to state 453
    '$'                               shift, and go to state 454
    '@'                               shift, and go to state 455

    string_builder          go to state 456
    expr_reader             go to state 457
    expr_call_pipe          go to state 458
    name_in_namespace       go to state 459
    expr_new                go to state 460
    expr_cast               go to state 461
    expr_type_decl          go to state 462
    expr_type_info          go to state 463
    block_or_lambda         go to state 464
    expr_full_block         go to state 465
    expr_numeric_const      go to state 466
    expr_named_call         go to state 467
    expr_method_call        go to state 468
    func_addr_expr          go to state 469
    expr_field              go to state 470
    expr_call               go to state 471
    expr                    go to state 810
    expr_mtag               go to state 473
    basic_type_declaration  go to state 474
    make_decl               go to state 475
    make_struct_decl        go to state 476
    make_tuple_call         go to state 477
    make_dim_decl           go to state 478
    make_table_decl         go to state 479
    array_comprehension     go to state 480


State 621

   29 string_builder_body: string_builder_body . character_sequence
   30                    | string_builder_body . "{" expr "}"
   31 string_builder: "start of the string" string_builder_body . "end of the string"

    STRING_CHARACTER      shift, and go to state 153
    STRING_CHARACTER_ESC  shift, and go to state 154
    "end of the string"   shift, and go to state 811
    "{"                   shift, and go to state 812

    character_sequence  go to state 813


State 622

  764 array_comprehension: "begin of code block" "for" . variable_name_with_pos_list "in" expr_list "end of expression" make_map_tuple array_comprehension_where "end of code block"

    "$i"    shift, and go to state 712
    "name"  shift, and go to state 713

    variable_name_with_pos_list  go to state 814


State 623

  336 expr_method_call: expr . "->" "name" '(' ')'
  337                 | expr . "->" "name" '(' expr_list ')'
  347 expr_field: expr . '.' "name"
  348           | expr . '.' '.' "name"
  349           | expr . '.' "name" '(' ')'
  350           | expr . '.' "name" '(' expr_list ')'
  353           | expr . '.' $@17 error $@18
  373 expr: expr . "<<" expr
  374     | expr . ">>" expr
  375     | expr . "<<<" expr
  376     | expr . ">>>" expr
  377     | expr . '+' expr
  378     | expr . '-' expr
  379     | expr . '*' expr
  380     | expr . '/' expr
  381     | expr . '%' expr
  382     | expr . '<' expr
  383     | expr . '>' expr
  384     | expr . "==" expr
  385     | expr . "!=" expr
  386     | expr . "<=" expr
  387     | expr . ">=" expr
  388     | expr . '&' expr
  389     | expr . '|' expr
  390     | expr . '^' expr
  391     | expr . "&&" expr
  392     | expr . "||" expr
  393     | expr . "^^" expr
  394     | expr . ".." expr
  397     | expr . "++"
  398     | expr . "--"
  400     | expr . '[' expr ']'
  401     | expr . '.' '[' expr ']'
  402     | expr . "?[" expr ']'
  403     | expr . '.' "?[" expr ']'
  404     | expr . "?." "name"
  405     | expr . '.' "?." "name"
  413     | expr . "??" expr
  414     | expr . '?' expr ':' expr
  417     | expr . "is" "type" '<' $@19 type_declaration_no_options '>' $@20
  418     | expr . "is" basic_type_declaration
  419     | expr . "is" "name"
  420     | expr . "as" "name"
  423     | expr . "as" "type" '<' $@21 type_declaration '>' $@22
  424     | expr . "as" basic_type_declaration
  425     | expr . '?' "as" "name"
  428     | expr . '?' "as" "type" '<' $@23 type_declaration '>' $@24
  429     | expr . '?' "as" basic_type_declaration
  437     | expr . "<|" expr
  438     | expr . "|>" expr
  439     | expr . "|>" basic_type_declaration
  449 expr_mtag: expr . '.' "$f" '(' expr ')'
  450          | expr . "?." "$f" '(' expr ')'
  451          | expr . '.' '.' "$f" '(' expr ')'
  452          | expr . '.' "?." "$f" '(' expr ')'
  453          | expr . "as" "$f" '(' expr ')'
  454          | expr . '?' "as" "$f" '(' expr ')'
  455          | expr . "is" "$f" '(' expr ')'
  728 make_map_tuple: expr . "=>" expr
  729               | expr .

    "is"   shift, and go to state 643
    "as"   shift, and go to state 644
    "<<"   shift, and go to state 645
    ">>"   shift, and go to state 646
    "++"   shift, and go to state 647
    "--"   shift, and go to state 648
    "<="   shift, and go to state 649
    ">="   shift, and go to state 650
    "=="   shift, and go to state 651
    "!="   shift, and go to state 652
    "->"   shift, and go to state 653
    "??"   shift, and go to state 654
    "?."   shift, and go to state 655
    "?["   shift, and go to state 656
    "<|"   shift, and go to state 657
    "|>"   shift, and go to state 658
    "<<<"  shift, and go to state 659
    ">>>"  shift, and go to state 660
    "=>"   shift, and go to state 815
    "&&"   shift, and go to state 661
    "||"   shift, and go to state 662
    "^^"   shift, and go to state 663
    ".."   shift, and go to state 664
    '?'    shift, and go to state 665
    '|'    shift, and go to state 666
    '^'    shift, and go to state 667
    '&'    shift, and go to state 668
    '<'    shift, and go to state 669
    '>'    shift, and go to state 670
    '-'    shift, and go to state 671
    '+'    shift, and go to state 672
    '*'    shift, and go to state 673
    '/'    shift, and go to state 674
    '%'    shift, and go to state 675
    '.'    shift, and go to state 676
    '['    shift, and go to state 677

    $default  reduce using rule 729 (make_map_tuple)


State 624

  752 expr_map_tuple_list: make_map_tuple .

    $default  reduce using rule 752 (expr_map_tuple_list)


State 625

  753 expr_map_tuple_list: expr_map_tuple_list . ',' make_map_tuple
  754 make_table_decl: "begin of code block" expr_map_tuple_list . optional_comma "end of code block"

    ','  shift, and go to state 816

    $default  reduce using rule 760 (optional_comma)

    optional_comma  go to state 817


State 626

  336 expr_method_call: expr . "->" "name" '(' ')'
  337                 | expr . "->" "name" '(' expr_list ')'
  347 expr_field: expr . '.' "name"
  348           | expr . '.' '.' "name"
  349           | expr . '.' "name" '(' ')'
  350           | expr . '.' "name" '(' expr_list ')'
  353           | expr . '.' $@17 error $@18
  372 expr: '-' expr .
  373     | expr . "<<" expr
  374     | expr . ">>" expr
  375     | expr . "<<<" expr
  376     | expr . ">>>" expr
  377     | expr . '+' expr
  378     | expr . '-' expr
  379     | expr . '*' expr
  380     | expr . '/' expr
  381     | expr . '%' expr
  382     | expr . '<' expr
  383     | expr . '>' expr
  384     | expr . "==" expr
  385     | expr . "!=" expr
  386     | expr . "<=" expr
  387     | expr . ">=" expr
  388     | expr . '&' expr
  389     | expr . '|' expr
  390     | expr . '^' expr
  391     | expr . "&&" expr
  392     | expr . "||" expr
  393     | expr . "^^" expr
  394     | expr . ".." expr
  397     | expr . "++"
  398     | expr . "--"
  400     | expr . '[' expr ']'
  401     | expr . '.' '[' expr ']'
  402     | expr . "?[" expr ']'
  403     | expr . '.' "?[" expr ']'
  404     | expr . "?." "name"
  405     | expr . '.' "?." "name"
  413     | expr . "??" expr
  414     | expr . '?' expr ':' expr
  417     | expr . "is" "type" '<' $@19 type_declaration_no_options '>' $@20
  418     | expr . "is" basic_type_declaration
  419     | expr . "is" "name"
  420     | expr . "as" "name"
  423     | expr . "as" "type" '<' $@21 type_declaration '>' $@22
  424     | expr . "as" basic_type_declaration
  425     | expr . '?' "as" "name"
  428     | expr . '?' "as" "type" '<' $@23 type_declaration '>' $@24
  429     | expr . '?' "as" basic_type_declaration
  437     | expr . "<|" expr
  438     | expr . "|>" expr
  439     | expr . "|>" basic_type_declaration
  449 expr_mtag: expr . '.' "$f" '(' expr ')'
  450          | expr . "?." "$f" '(' expr ')'
  451          | expr . '.' '.' "$f" '(' expr ')'
  452          | expr . '.' "?." "$f" '(' expr ')'
  453          | expr . "as" "$f" '(' expr ')'
  454          | expr . '?' "as" "$f" '(' expr ')'
  455          | expr . "is" "$f" '(' expr ')'

    "is"  shift, and go to state 643
    "as"  shift, and go to state 644
    "++"  shift, and go to state 647
    "--"  shift, and go to state 648
    "->"  shift, and go to state 653
    "?."  shift, and go to state 655
    "?["  shift, and go to state 656
    "<|"  shift, and go to state 657
    "|>"  shift, and go to state 658
    '.'   shift, and go to state 676
    '['   shift, and go to state 677

    $default  reduce using rule 372 (expr)


State 627

  336 expr_method_call: expr . "->" "name" '(' ')'
  337                 | expr . "->" "name" '(' expr_list ')'
  347 expr_field: expr . '.' "name"
  348           | expr . '.' '.' "name"
  349           | expr . '.' "name" '(' ')'
  350           | expr . '.' "name" '(' expr_list ')'
  353           | expr . '.' $@17 error $@18
  371 expr: '+' expr .
  373     | expr . "<<" expr
  374     | expr . ">>" expr
  375     | expr . "<<<" expr
  376     | expr . ">>>" expr
  377     | expr . '+' expr
  378     | expr . '-' expr
  379     | expr . '*' expr
  380     | expr . '/' expr
  381     | expr . '%' expr
  382     | expr . '<' expr
  383     | expr . '>' expr
  384     | expr . "==" expr
  385     | expr . "!=" expr
  386     | expr . "<=" expr
  387     | expr . ">=" expr
  388     | expr . '&' expr
  389     | expr . '|' expr
  390     | expr . '^' expr
  391     | expr . "&&" expr
  392     | expr . "||" expr
  393     | expr . "^^" expr
  394     | expr . ".." expr
  397     | expr . "++"
  398     | expr . "--"
  400     | expr . '[' expr ']'
  401     | expr . '.' '[' expr ']'
  402     | expr . "?[" expr ']'
  403     | expr . '.' "?[" expr ']'
  404     | expr . "?." "name"
  405     | expr . '.' "?." "name"
  413     | expr . "??" expr
  414     | expr . '?' expr ':' expr
  417     | expr . "is" "type" '<' $@19 type_declaration_no_options '>' $@20
  418     | expr . "is" basic_type_declaration
  419     | expr . "is" "name"
  420     | expr . "as" "name"
  423     | expr . "as" "type" '<' $@21 type_declaration '>' $@22
  424     | expr . "as" basic_type_declaration
  425     | expr . '?' "as" "name"
  428     | expr . '?' "as" "type" '<' $@23 type_declaration '>' $@24
  429     | expr . '?' "as" basic_type_declaration
  437     | expr . "<|" expr
  438     | expr . "|>" expr
  439     | expr . "|>" basic_type_declaration
  449 expr_mtag: expr . '.' "$f" '(' expr ')'
  450          | expr . "?." "$f" '(' expr ')'
  451          | expr . '.' '.' "$f" '(' expr ')'
  452          | expr . '.' "?." "$f" '(' expr ')'
  453          | expr . "as" "$f" '(' expr ')'
  454          | expr . '?' "as" "$f" '(' expr ')'
  455          | expr . "is" "$f" '(' expr ')'

    "is"  shift, and go to state 643
    "as"  shift, and go to state 644
    "++"  shift, and go to state 647
    "--"  shift, and go to state 648
    "->"  shift, and go to state 653
    "?."  shift, and go to state 655
    "?["  shift, and go to state 656
    "<|"  shift, and go to state 657
    "|>"  shift, and go to state 658
    '.'   shift, and go to state 676
    '['   shift, and go to state 677

    $default  reduce using rule 371 (expr)


State 628

  336 expr_method_call: expr . "->" "name" '(' ')'
  337                 | expr . "->" "name" '(' expr_list ')'
  347 expr_field: expr . '.' "name"
  348           | expr . '.' '.' "name"
  349           | expr . '.' "name" '(' ')'
  350           | expr . '.' "name" '(' expr_list ')'
  353           | expr . '.' $@17 error $@18
  373 expr: expr . "<<" expr
  374     | expr . ">>" expr
  375     | expr . "<<<" expr
  376     | expr . ">>>" expr
  377     | expr . '+' expr
  378     | expr . '-' expr
  379     | expr . '*' expr
  380     | expr . '/' expr
  381     | expr . '%' expr
  382     | expr . '<' expr
  383     | expr . '>' expr
  384     | expr . "==" expr
  385     | expr . "!=" expr
  386     | expr . "<=" expr
  387     | expr . ">=" expr
  388     | expr . '&' expr
  389     | expr . '|' expr
  390     | expr . '^' expr
  391     | expr . "&&" expr
  392     | expr . "||" expr
  393     | expr . "^^" expr
  394     | expr . ".." expr
  397     | expr . "++"
  398     | expr . "--"
  400     | expr . '[' expr ']'
  401     | expr . '.' '[' expr ']'
  402     | expr . "?[" expr ']'
  403     | expr . '.' "?[" expr ']'
  404     | expr . "?." "name"
  405     | expr . '.' "?." "name"
  408     | '*' expr .
  413     | expr . "??" expr
  414     | expr . '?' expr ':' expr
  417     | expr . "is" "type" '<' $@19 type_declaration_no_options '>' $@20
  418     | expr . "is" basic_type_declaration
  419     | expr . "is" "name"
  420     | expr . "as" "name"
  423     | expr . "as" "type" '<' $@21 type_declaration '>' $@22
  424     | expr . "as" basic_type_declaration
  425     | expr . '?' "as" "name"
  428     | expr . '?' "as" "type" '<' $@23 type_declaration '>' $@24
  429     | expr . '?' "as" basic_type_declaration
  437     | expr . "<|" expr
  438     | expr . "|>" expr
  439     | expr . "|>" basic_type_declaration
  449 expr_mtag: expr . '.' "$f" '(' expr ')'
  450          | expr . "?." "$f" '(' expr ')'
  451          | expr . '.' '.' "$f" '(' expr ')'
  452          | expr . '.' "?." "$f" '(' expr ')'
  453          | expr . "as" "$f" '(' expr ')'
  454          | expr . '?' "as" "$f" '(' expr ')'
  455          | expr . "is" "$f" '(' expr ')'

    "?."  shift, and go to state 655
    "?["  shift, and go to state 656
    '.'   shift, and go to state 676
    '['   shift, and go to state 677

    $default  reduce using rule 408 (expr)


State 629

  336 expr_method_call: expr . "->" "name" '(' ')'
  337                 | expr . "->" "name" '(' expr_list ')'
  347 expr_field: expr . '.' "name"
  348           | expr . '.' '.' "name"
  349           | expr . '.' "name" '(' ')'
  350           | expr . '.' "name" '(' expr_list ')'
  353           | expr . '.' $@17 error $@18
  370 expr: '~' expr .
  373     | expr . "<<" expr
  374     | expr . ">>" expr
  375     | expr . "<<<" expr
  376     | expr . ">>>" expr
  377     | expr . '+' expr
  378     | expr . '-' expr
  379     | expr . '*' expr
  380     | expr . '/' expr
  381     | expr . '%' expr
  382     | expr . '<' expr
  383     | expr . '>' expr
  384     | expr . "==" expr
  385     | expr . "!=" expr
  386     | expr . "<=" expr
  387     | expr . ">=" expr
  388     | expr . '&' expr
  389     | expr . '|' expr
  390     | expr . '^' expr
  391     | expr . "&&" expr
  392     | expr . "||" expr
  393     | expr . "^^" expr
  394     | expr . ".." expr
  397     | expr . "++"
  398     | expr . "--"
  400     | expr . '[' expr ']'
  401     | expr . '.' '[' expr ']'
  402     | expr . "?[" expr ']'
  403     | expr . '.' "?[" expr ']'
  404     | expr . "?." "name"
  405     | expr . '.' "?." "name"
  413     | expr . "??" expr
  414     | expr . '?' expr ':' expr
  417     | expr . "is" "type" '<' $@19 type_declaration_no_options '>' $@20
  418     | expr . "is" basic_type_declaration
  419     | expr . "is" "name"
  420     | expr . "as" "name"
  423     | expr . "as" "type" '<' $@21 type_declaration '>' $@22
  424     | expr . "as" basic_type_declaration
  425     | expr . '?' "as" "name"
  428     | expr . '?' "as" "type" '<' $@23 type_declaration '>' $@24
  429     | expr . '?' "as" basic_type_declaration
  437     | expr . "<|" expr
  438     | expr . "|>" expr
  439     | expr . "|>" basic_type_declaration
  449 expr_mtag: expr . '.' "$f" '(' expr ')'
  450          | expr . "?." "$f" '(' expr ')'
  451          | expr . '.' '.' "$f" '(' expr ')'
  452          | expr . '.' "?." "$f" '(' expr ')'
  453          | expr . "as" "$f" '(' expr ')'
  454          | expr . '?' "as" "$f" '(' expr ')'
  455          | expr . "is" "$f" '(' expr ')'

    "is"  shift, and go to state 643
    "as"  shift, and go to state 644
    "++"  shift, and go to state 647
    "--"  shift, and go to state 648
    "->"  shift, and go to state 653
    "?."  shift, and go to state 655
    "?["  shift, and go to state 656
    "<|"  shift, and go to state 657
    "|>"  shift, and go to state 658
    '.'   shift, and go to state 676
    '['   shift, and go to state 677

    $default  reduce using rule 370 (expr)


State 630

  336 expr_method_call: expr . "->" "name" '(' ')'
  337                 | expr . "->" "name" '(' expr_list ')'
  347 expr_field: expr . '.' "name"
  348           | expr . '.' '.' "name"
  349           | expr . '.' "name" '(' ')'
  350           | expr . '.' "name" '(' expr_list ')'
  353           | expr . '.' $@17 error $@18
  369 expr: '!' expr .
  373     | expr . "<<" expr
  374     | expr . ">>" expr
  375     | expr . "<<<" expr
  376     | expr . ">>>" expr
  377     | expr . '+' expr
  378     | expr . '-' expr
  379     | expr . '*' expr
  380     | expr . '/' expr
  381     | expr . '%' expr
  382     | expr . '<' expr
  383     | expr . '>' expr
  384     | expr . "==" expr
  385     | expr . "!=" expr
  386     | expr . "<=" expr
  387     | expr . ">=" expr
  388     | expr . '&' expr
  389     | expr . '|' expr
  390     | expr . '^' expr
  391     | expr . "&&" expr
  392     | expr . "||" expr
  393     | expr . "^^" expr
  394     | expr . ".." expr
  397     | expr . "++"
  398     | expr . "--"
  400     | expr . '[' expr ']'
  401     | expr . '.' '[' expr ']'
  402     | expr . "?[" expr ']'
  403     | expr . '.' "?[" expr ']'
  404     | expr . "?." "name"
  405     | expr . '.' "?." "name"
  413     | expr . "??" expr
  414     | expr . '?' expr ':' expr
  417     | expr . "is" "type" '<' $@19 type_declaration_no_options '>' $@20
  418     | expr . "is" basic_type_declaration
  419     | expr . "is" "name"
  420     | expr . "as" "name"
  423     | expr . "as" "type" '<' $@21 type_declaration '>' $@22
  424     | expr . "as" basic_type_declaration
  425     | expr . '?' "as" "name"
  428     | expr . '?' "as" "type" '<' $@23 type_declaration '>' $@24
  429     | expr . '?' "as" basic_type_declaration
  437     | expr . "<|" expr
  438     | expr . "|>" expr
  439     | expr . "|>" basic_type_declaration
  449 expr_mtag: expr . '.' "$f" '(' expr ')'
  450          | expr . "?." "$f" '(' expr ')'
  451          | expr . '.' '.' "$f" '(' expr ')'
  452          | expr . '.' "?." "$f" '(' expr ')'
  453          | expr . "as" "$f" '(' expr ')'
  454          | expr . '?' "as" "$f" '(' expr ')'
  455          | expr . "is" "$f" '(' expr ')'

    "is"  shift, and go to state 643
    "as"  shift, and go to state 644
    "++"  shift, and go to state 647
    "--"  shift, and go to state 648
    "->"  shift, and go to state 653
    "?."  shift, and go to state 655
    "?["  shift, and go to state 656
    "<|"  shift, and go to state 657
    "|>"  shift, and go to state 658
    '.'   shift, and go to state 676
    '['   shift, and go to state 677

    $default  reduce using rule 369 (expr)


State 631

  762 array_comprehension: '[' "for" . variable_name_with_pos_list "in" expr_list "end of expression" expr array_comprehension_where ']'

    "$i"    shift, and go to state 712
    "name"  shift, and go to state 713

    variable_name_with_pos_list  go to state 818


State 632

  763 array_comprehension: '[' "iterator" . "for" variable_name_with_pos_list "in" expr_list "end of expression" expr array_comprehension_where ']'

    "for"  shift, and go to state 819


State 633

  290 expr_list: expr_list . ',' expr
  734 make_dim_decl: '[' expr_list . optional_comma ']'

    ','  shift, and go to state 820

    $default  reduce using rule 760 (optional_comma)

    optional_comma  go to state 821


State 634

  289 expr_list: expr .
  336 expr_method_call: expr . "->" "name" '(' ')'
  337                 | expr . "->" "name" '(' expr_list ')'
  347 expr_field: expr . '.' "name"
  348           | expr . '.' '.' "name"
  349           | expr . '.' "name" '(' ')'
  350           | expr . '.' "name" '(' expr_list ')'
  353           | expr . '.' $@17 error $@18
  373 expr: expr . "<<" expr
  374     | expr . ">>" expr
  375     | expr . "<<<" expr
  376     | expr . ">>>" expr
  377     | expr . '+' expr
  378     | expr . '-' expr
  379     | expr . '*' expr
  380     | expr . '/' expr
  381     | expr . '%' expr
  382     | expr . '<' expr
  383     | expr . '>' expr
  384     | expr . "==" expr
  385     | expr . "!=" expr
  386     | expr . "<=" expr
  387     | expr . ">=" expr
  388     | expr . '&' expr
  389     | expr . '|' expr
  390     | expr . '^' expr
  391     | expr . "&&" expr
  392     | expr . "||" expr
  393     | expr . "^^" expr
  394     | expr . ".." expr
  397     | expr . "++"
  398     | expr . "--"
  400     | expr . '[' expr ']'
  401     | expr . '.' '[' expr ']'
  402     | expr . "?[" expr ']'
  403     | expr . '.' "?[" expr ']'
  404     | expr . "?." "name"
  405     | expr . '.' "?." "name"
  413     | expr . "??" expr
  414     | expr . '?' expr ':' expr
  417     | expr . "is" "type" '<' $@19 type_declaration_no_options '>' $@20
  418     | expr . "is" basic_type_declaration
  419     | expr . "is" "name"
  420     | expr . "as" "name"
  423     | expr . "as" "type" '<' $@21 type_declaration '>' $@22
  424     | expr . "as" basic_type_declaration
  425     | expr . '?' "as" "name"
  428     | expr . '?' "as" "type" '<' $@23 type_declaration '>' $@24
  429     | expr . '?' "as" basic_type_declaration
  437     | expr . "<|" expr
  438     | expr . "|>" expr
  439     | expr . "|>" basic_type_declaration
  449 expr_mtag: expr . '.' "$f" '(' expr ')'
  450          | expr . "?." "$f" '(' expr ')'
  451          | expr . '.' '.' "$f" '(' expr ')'
  452          | expr . '.' "?." "$f" '(' expr ')'
  453          | expr . "as" "$f" '(' expr ')'
  454          | expr . '?' "as" "$f" '(' expr ')'
  455          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 643
    "as"   shift, and go to state 644
    "<<"   shift, and go to state 645
    ">>"   shift, and go to state 646
    "++"   shift, and go to state 647
    "--"   shift, and go to state 648
    "<="   shift, and go to state 649
    ">="   shift, and go to state 650
    "=="   shift, and go to state 651
    "!="   shift, and go to state 652
    "->"   shift, and go to state 653
    "??"   shift, and go to state 654
    "?."   shift, and go to state 655
    "?["   shift, and go to state 656
    "<|"   shift, and go to state 657
    "|>"   shift, and go to state 658
    "<<<"  shift, and go to state 659
    ">>>"  shift, and go to state 660
    "&&"   shift, and go to state 661
    "||"   shift, and go to state 662
    "^^"   shift, and go to state 663
    ".."   shift, and go to state 664
    '?'    shift, and go to state 665
    '|'    shift, and go to state 666
    '^'    shift, and go to state 667
    '&'    shift, and go to state 668
    '<'    shift, and go to state 669
    '>'    shift, and go to state 670
    '-'    shift, and go to state 671
    '+'    shift, and go to state 672
    '*'    shift, and go to state 673
    '/'    shift, and go to state 674
    '%'    shift, and go to state 675
    '.'    shift, and go to state 676
    '['    shift, and go to state 677

    $default  reduce using rule 289 (expr_list)


State 635

  290 expr_list: expr_list . ',' expr
  399 expr: '(' expr_list . optional_comma ')'

    ','  shift, and go to state 820

    $default  reduce using rule 760 (optional_comma)

    optional_comma  go to state 822


State 636

  296 block_or_lambda: '@' '@' .
  340 func_addr_expr: '@' '@' . func_addr_name
  343               | '@' '@' . '<' $@13 type_declaration_no_options '>' $@14 func_addr_name
  346               | '@' '@' . '<' $@15 optional_function_argument_list optional_function_type '>' $@16 func_addr_name
  456 expr_mtag: '@' '@' . "$c" '(' expr ')'

    "::"    shift, and go to state 55
    "$i"    shift, and go to state 823
    "$c"    shift, and go to state 824
    "name"  shift, and go to state 56
    '<'     shift, and go to state 825

    $default  reduce using rule 296 (block_or_lambda)

    name_in_namespace  go to state 826
    func_addr_name     go to state 827


State 637

  334 expr_named_call: name_in_namespace '(' . '[' make_struct_fields ']' ')'
  335                | name_in_namespace '(' . expr_list ',' '[' make_struct_fields ']' ')'
  354 expr_call: name_in_namespace '(' . ')'
  355          | name_in_namespace '(' . make_struct_single ')'
  356          | name_in_namespace '(' . expr_list ')'

    "struct"                          shift, and go to state 408
    "class"                           shift, and go to state 409
    "true"                            shift, and go to state 410
    "false"                           shift, and go to state 411
    "new"                             shift, and go to state 412
    "typeinfo"                        shift, and go to state 413
    "type"                            shift, and go to state 414
    "array"                           shift, and go to state 415
    "null"                            shift, and go to state 416
    "table"                           shift, and go to state 417
    "deref"                           shift, and go to state 418
    "cast"                            shift, and go to state 419
    "upcast"                          shift, and go to state 420
    "addr"                            shift, and go to state 421
    "reinterpret"                     shift, and go to state 422
    "fixed_array"                     shift, and go to state 423
    "default"                         shift, and go to state 424
    "bool"                            shift, and go to state 222
    "void"                            shift, and go to state 223
    "string"                          shift, and go to state 224
    "int"                             shift, and go to state 226
    "int2"                            shift, and go to state 227
    "int3"                            shift, and go to state 228
    "int4"                            shift, and go to state 229
    "uint"                            shift, and go to state 230
    "bitfield"                        shift, and go to state 425
    "uint2"                           shift, and go to state 232
    "uint3"                           shift, and go to state 233
    "uint4"                           shift, and go to state 234
    "float"                           shift, and go to state 235
    "float2"                          shift, and go to state 236
    "float3"                          shift, and go to state 237
    "float4"                          shift, and go to state 238
    "range"                           shift, and go to state 239
    "urange"                          shift, and go to state 240
    "range64"                         shift, and go to state 241
    "urange64"                        shift, and go to state 242
    "int64"                           shift, and go to state 244
    "uint64"                          shift, and go to state 245
    "double"                          shift, and go to state 246
    "int8"                            shift, and go to state 249
    "uint8"                           shift, and go to state 250
    "int16"                           shift, and go to state 251
    "uint16"                          shift, and go to state 252
    "tuple"                           shift, and go to state 426
    "variant"                         shift, and go to state 427
    "generator"                       shift, and go to state 428
    "++"                              shift, and go to state 429
    "--"                              shift, and go to state 430
    "::"                              shift, and go to state 55
    "$$"                              shift, and go to state 431
    "$i"                              shift, and go to state 432
    "$v"                              shift, and go to state 433
    "$b"                              shift, and go to state 434
    "$a"                              shift, and go to state 435
    "$c"                              shift, and go to state 436
    "$f"                              shift, and go to state 828
    "..."                             shift, and go to state 437
    "integer constant"                shift, and go to state 438
    "long integer constant"           shift, and go to state 439
    "unsigned integer constant"       shift, and go to state 440
    "unsigned long integer constant"  shift, and go to state 441
    "unsigned int8 constant"          shift, and go to state 442
    "floating point constant"         shift, and go to state 443
    "double constant"                 shift, and go to state 444
    "name"                            shift, and go to state 829
    "start of the string"             shift, and go to state 445
    "begin of code block"             shift, and go to state 446
    '-'                               shift, and go to state 447
    '+'                               shift, and go to state 448
    '*'                               shift, and go to state 449
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 450
    '!'                               shift, and go to state 451
    '['                               shift, and go to state 830
    '('                               shift, and go to state 453
    ')'                               shift, and go to state 831
    '$'                               shift, and go to state 454
    '@'                               shift, and go to state 455

    string_builder          go to state 456
    expr_reader             go to state 457
    expr_call_pipe          go to state 458
    name_in_namespace       go to state 459
    expr_new                go to state 460
    expr_cast               go to state 461
    expr_type_decl          go to state 462
    expr_type_info          go to state 463
    expr_list               go to state 832
    block_or_lambda         go to state 464
    expr_full_block         go to state 465
    expr_numeric_const      go to state 466
    expr_named_call         go to state 467
    expr_method_call        go to state 468
    func_addr_expr          go to state 469
    expr_field              go to state 470
    expr_call               go to state 471
    expr                    go to state 634
    expr_mtag               go to state 473
    basic_type_declaration  go to state 474
    make_decl               go to state 475
    make_struct_fields      go to state 833
    make_struct_single      go to state 834
    make_struct_decl        go to state 476
    make_tuple_call         go to state 477
    make_dim_decl           go to state 478
    make_table_decl         go to state 479
    array_comprehension     go to state 480


State 638

  305 expr_full_block: block_or_lambda optional_annotation_list . optional_capture_list optional_function_argument_list optional_function_type block_or_simple_block

    '['  shift, and go to state 835

    $default  reduce using rule 303 (optional_capture_list)

    optional_capture_list  go to state 836


State 639

  307 expr_full_block_assumed_piped: "begin of code block" . expressions "end of code block"

    $default  reduce using rule 232 (expressions)

    expressions  go to state 837


State 640

  295 block_or_lambda: '@' .
  296                | '@' . '@'

    '@'  shift, and go to state 838

    $default  reduce using rule 295 (block_or_lambda)


State 641

  306 expr_full_block_assumed_piped: block_or_lambda . optional_annotation_list optional_capture_list optional_function_argument_list optional_function_type expression_block

    '['  shift, and go to state 15

    '['       [reduce using rule 112 (optional_annotation_list)]
    $default  reduce using rule 112 (optional_annotation_list)

    optional_annotation_list  go to state 839

    shift/reduce conflict on token '[':
      112 optional_annotation_list: %empty .
      113 optional_annotation_list: . '[' annotation_list ']'
      First example: program kwd_let optional_shared optional_public_or_private_variable $@29 optional_field_annotation "$i" '(' block_or_lambda . '[' annotation_list ']' optional_capture_list optional_function_argument_list optional_function_type expression_block expr_full_block_assumed_piped ')' ':' type_declaration_no_options "end of expression" $end
      Shift derivation
        $accept
        `-> 0: program                                                                                                                                                                                                                                                                                                                                                                                                         $end
               `-> 5: program global_let
                              `-> 524: kwd_let optional_shared optional_public_or_private_variable $@29 optional_field_annotation let_variable_declaration
                                                                                                                                  `-> 511: let_variable_name_with_pos_list                                                                                                                                                                                                 ':' type_declaration_no_options "end of expression"
                                                                                                                                           `-> 507: "$i" '(' expr                                                                                                                                                                                                      ')'
                                                                                                                                                             `-> 440: expr_call_pipe
                                                                                                                                                                      `-> 213: expr_full_block_assumed_piped                                                                                                                             expr_full_block_assumed_piped
                                                                                                                                                                               `-> 306: block_or_lambda optional_annotation_list           optional_capture_list optional_function_argument_list optional_function_type expression_block
                                                                                                                                                                                                        `-> 113: . '[' annotation_list ']'
      Second example: program kwd_let optional_shared optional_public_or_private_variable $@29 optional_field_annotation "$i" '(' expr_call block_or_lambda . '[' '[' capture_list ']' ']' optional_function_argument_list optional_function_type expression_block ')' ':' type_declaration_no_options "end of expression" $end
      Reduce derivation
        $accept
        `-> 0: program                                                                                                                                                                                                                                                                                                                                                                                           $end
               `-> 5: program global_let
                              `-> 524: kwd_let optional_shared optional_public_or_private_variable $@29 optional_field_annotation let_variable_declaration
                                                                                                                                  `-> 511: let_variable_name_with_pos_list                                                                                                                                                                                   ':' type_declaration_no_options "end of expression"
                                                                                                                                           `-> 507: "$i" '(' expr                                                                                                                                                                                        ')'
                                                                                                                                                             `-> 440: expr_call_pipe
                                                                                                                                                                      `-> 213: expr_call expr_full_block_assumed_piped
                                                                                                                                                                                         `-> 306: block_or_lambda optional_annotation_list optional_capture_list                 optional_function_argument_list optional_function_type expression_block
                                                                                                                                                                                                                  `-> 112: %empty .        `-> 304: '[' '[' capture_list ']' ']'



State 642

  213 expr_call_pipe: expr_call expr_full_block_assumed_piped .

    $default  reduce using rule 213 (expr_call_pipe)


State 643

  417 expr: expr "is" . "type" '<' $@19 type_declaration_no_options '>' $@20
  418     | expr "is" . basic_type_declaration
  419     | expr "is" . "name"
  455 expr_mtag: expr "is" . "$f" '(' expr ')'

    "type"      shift, and go to state 840
    "bool"      shift, and go to state 222
    "void"      shift, and go to state 223
    "string"    shift, and go to state 224
    "int"       shift, and go to state 226
    "int2"      shift, and go to state 227
    "int3"      shift, and go to state 228
    "int4"      shift, and go to state 229
    "uint"      shift, and go to state 230
    "bitfield"  shift, and go to state 425
    "uint2"     shift, and go to state 232
    "uint3"     shift, and go to state 233
    "uint4"     shift, and go to state 234
    "float"     shift, and go to state 235
    "float2"    shift, and go to state 236
    "float3"    shift, and go to state 237
    "float4"    shift, and go to state 238
    "range"     shift, and go to state 239
    "urange"    shift, and go to state 240
    "range64"   shift, and go to state 241
    "urange64"  shift, and go to state 242
    "int64"     shift, and go to state 244
    "uint64"    shift, and go to state 245
    "double"    shift, and go to state 246
    "int8"      shift, and go to state 249
    "uint8"     shift, and go to state 250
    "int16"     shift, and go to state 251
    "uint16"    shift, and go to state 252
    "$f"        shift, and go to state 841
    "name"      shift, and go to state 842

    basic_type_declaration  go to state 843


State 644

  420 expr: expr "as" . "name"
  423     | expr "as" . "type" '<' $@21 type_declaration '>' $@22
  424     | expr "as" . basic_type_declaration
  453 expr_mtag: expr "as" . "$f" '(' expr ')'

    "type"      shift, and go to state 844
    "bool"      shift, and go to state 222
    "void"      shift, and go to state 223
    "string"    shift, and go to state 224
    "int"       shift, and go to state 226
    "int2"      shift, and go to state 227
    "int3"      shift, and go to state 228
    "int4"      shift, and go to state 229
    "uint"      shift, and go to state 230
    "bitfield"  shift, and go to state 425
    "uint2"     shift, and go to state 232
    "uint3"     shift, and go to state 233
    "uint4"     shift, and go to state 234
    "float"     shift, and go to state 235
    "float2"    shift, and go to state 236
    "float3"    shift, and go to state 237
    "float4"    shift, and go to state 238
    "range"     shift, and go to state 239
    "urange"    shift, and go to state 240
    "range64"   shift, and go to state 241
    "urange64"  shift, and go to state 242
    "int64"     shift, and go to state 244
    "uint64"    shift, and go to state 245
    "double"    shift, and go to state 246
    "int8"      shift, and go to state 249
    "uint8"     shift, and go to state 250
    "int16"     shift, and go to state 251
    "uint16"    shift, and go to state 252
    "$f"        shift, and go to state 845
    "name"      shift, and go to state 846

    basic_type_declaration  go to state 847


State 645

  373 expr: expr "<<" . expr

    "struct"                          shift, and go to state 408
    "class"                           shift, and go to state 409
    "true"                            shift, and go to state 410
    "false"                           shift, and go to state 411
    "new"                             shift, and go to state 412
    "typeinfo"                        shift, and go to state 413
    "type"                            shift, and go to state 414
    "array"                           shift, and go to state 415
    "null"                            shift, and go to state 416
    "table"                           shift, and go to state 417
    "deref"                           shift, and go to state 418
    "cast"                            shift, and go to state 419
    "upcast"                          shift, and go to state 420
    "addr"                            shift, and go to state 421
    "reinterpret"                     shift, and go to state 422
    "fixed_array"                     shift, and go to state 423
    "default"                         shift, and go to state 424
    "bool"                            shift, and go to state 222
    "void"                            shift, and go to state 223
    "string"                          shift, and go to state 224
    "int"                             shift, and go to state 226
    "int2"                            shift, and go to state 227
    "int3"                            shift, and go to state 228
    "int4"                            shift, and go to state 229
    "uint"                            shift, and go to state 230
    "bitfield"                        shift, and go to state 425
    "uint2"                           shift, and go to state 232
    "uint3"                           shift, and go to state 233
    "uint4"                           shift, and go to state 234
    "float"                           shift, and go to state 235
    "float2"                          shift, and go to state 236
    "float3"                          shift, and go to state 237
    "float4"                          shift, and go to state 238
    "range"                           shift, and go to state 239
    "urange"                          shift, and go to state 240
    "range64"                         shift, and go to state 241
    "urange64"                        shift, and go to state 242
    "int64"                           shift, and go to state 244
    "uint64"                          shift, and go to state 245
    "double"                          shift, and go to state 246
    "int8"                            shift, and go to state 249
    "uint8"                           shift, and go to state 250
    "int16"                           shift, and go to state 251
    "uint16"                          shift, and go to state 252
    "tuple"                           shift, and go to state 426
    "variant"                         shift, and go to state 427
    "generator"                       shift, and go to state 428
    "++"                              shift, and go to state 429
    "--"                              shift, and go to state 430
    "::"                              shift, and go to state 55
    "$$"                              shift, and go to state 431
    "$i"                              shift, and go to state 432
    "$v"                              shift, and go to state 433
    "$b"                              shift, and go to state 434
    "$a"                              shift, and go to state 435
    "$c"                              shift, and go to state 436
    "..."                             shift, and go to state 437
    "integer constant"                shift, and go to state 438
    "long integer constant"           shift, and go to state 439
    "unsigned integer constant"       shift, and go to state 440
    "unsigned long integer constant"  shift, and go to state 441
    "unsigned int8 constant"          shift, and go to state 442
    "floating point constant"         shift, and go to state 443
    "double constant"                 shift, and go to state 444
    "name"                            shift, and go to state 56
    "start of the string"             shift, and go to state 445
    "begin of code block"             shift, and go to state 446
    '-'                               shift, and go to state 447
    '+'                               shift, and go to state 448
    '*'                               shift, and go to state 449
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 450
    '!'                               shift, and go to state 451
    '['                               shift, and go to state 452
    '('                               shift, and go to state 453
    '$'                               shift, and go to state 454
    '@'                               shift, and go to state 455

    string_builder          go to state 456
    expr_reader             go to state 457
    expr_call_pipe          go to state 458
    name_in_namespace       go to state 459
    expr_new                go to state 460
    expr_cast               go to state 461
    expr_type_decl          go to state 462
    expr_type_info          go to state 463
    block_or_lambda         go to state 464
    expr_full_block         go to state 465
    expr_numeric_const      go to state 466
    expr_named_call         go to state 467
    expr_method_call        go to state 468
    func_addr_expr          go to state 469
    expr_field              go to state 470
    expr_call               go to state 471
    expr                    go to state 848
    expr_mtag               go to state 473
    basic_type_declaration  go to state 474
    make_decl               go to state 475
    make_struct_decl        go to state 476
    make_tuple_call         go to state 477
    make_dim_decl           go to state 478
    make_table_decl         go to state 479
    array_comprehension     go to state 480


State 646

  374 expr: expr ">>" . expr

    "struct"                          shift, and go to state 408
    "class"                           shift, and go to state 409
    "true"                            shift, and go to state 410
    "false"                           shift, and go to state 411
    "new"                             shift, and go to state 412
    "typeinfo"                        shift, and go to state 413
    "type"                            shift, and go to state 414
    "array"                           shift, and go to state 415
    "null"                            shift, and go to state 416
    "table"                           shift, and go to state 417
    "deref"                           shift, and go to state 418
    "cast"                            shift, and go to state 419
    "upcast"                          shift, and go to state 420
    "addr"                            shift, and go to state 421
    "reinterpret"                     shift, and go to state 422
    "fixed_array"                     shift, and go to state 423
    "default"                         shift, and go to state 424
    "bool"                            shift, and go to state 222
    "void"                            shift, and go to state 223
    "string"                          shift, and go to state 224
    "int"                             shift, and go to state 226
    "int2"                            shift, and go to state 227
    "int3"                            shift, and go to state 228
    "int4"                            shift, and go to state 229
    "uint"                            shift, and go to state 230
    "bitfield"                        shift, and go to state 425
    "uint2"                           shift, and go to state 232
    "uint3"                           shift, and go to state 233
    "uint4"                           shift, and go to state 234
    "float"                           shift, and go to state 235
    "float2"                          shift, and go to state 236
    "float3"                          shift, and go to state 237
    "float4"                          shift, and go to state 238
    "range"                           shift, and go to state 239
    "urange"                          shift, and go to state 240
    "range64"                         shift, and go to state 241
    "urange64"                        shift, and go to state 242
    "int64"                           shift, and go to state 244
    "uint64"                          shift, and go to state 245
    "double"                          shift, and go to state 246
    "int8"                            shift, and go to state 249
    "uint8"                           shift, and go to state 250
    "int16"                           shift, and go to state 251
    "uint16"                          shift, and go to state 252
    "tuple"                           shift, and go to state 426
    "variant"                         shift, and go to state 427
    "generator"                       shift, and go to state 428
    "++"                              shift, and go to state 429
    "--"                              shift, and go to state 430
    "::"                              shift, and go to state 55
    "$$"                              shift, and go to state 431
    "$i"                              shift, and go to state 432
    "$v"                              shift, and go to state 433
    "$b"                              shift, and go to state 434
    "$a"                              shift, and go to state 435
    "$c"                              shift, and go to state 436
    "..."                             shift, and go to state 437
    "integer constant"                shift, and go to state 438
    "long integer constant"           shift, and go to state 439
    "unsigned integer constant"       shift, and go to state 440
    "unsigned long integer constant"  shift, and go to state 441
    "unsigned int8 constant"          shift, and go to state 442
    "floating point constant"         shift, and go to state 443
    "double constant"                 shift, and go to state 444
    "name"                            shift, and go to state 56
    "start of the string"             shift, and go to state 445
    "begin of code block"             shift, and go to state 446
    '-'                               shift, and go to state 447
    '+'                               shift, and go to state 448
    '*'                               shift, and go to state 449
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 450
    '!'                               shift, and go to state 451
    '['                               shift, and go to state 452
    '('                               shift, and go to state 453
    '$'                               shift, and go to state 454
    '@'                               shift, and go to state 455

    string_builder          go to state 456
    expr_reader             go to state 457
    expr_call_pipe          go to state 458
    name_in_namespace       go to state 459
    expr_new                go to state 460
    expr_cast               go to state 461
    expr_type_decl          go to state 462
    expr_type_info          go to state 463
    block_or_lambda         go to state 464
    expr_full_block         go to state 465
    expr_numeric_const      go to state 466
    expr_named_call         go to state 467
    expr_method_call        go to state 468
    func_addr_expr          go to state 469
    expr_field              go to state 470
    expr_call               go to state 471
    expr                    go to state 849
    expr_mtag               go to state 473
    basic_type_declaration  go to state 474
    make_decl               go to state 475
    make_struct_decl        go to state 476
    make_tuple_call         go to state 477
    make_dim_decl           go to state 478
    make_table_decl         go to state 479
    array_comprehension     go to state 480


State 647

  397 expr: expr "++" .

    $default  reduce using rule 397 (expr)


State 648

  398 expr: expr "--" .

    $default  reduce using rule 398 (expr)


State 649

  386 expr: expr "<=" . expr

    "struct"                          shift, and go to state 408
    "class"                           shift, and go to state 409
    "true"                            shift, and go to state 410
    "false"                           shift, and go to state 411
    "new"                             shift, and go to state 412
    "typeinfo"                        shift, and go to state 413
    "type"                            shift, and go to state 414
    "array"                           shift, and go to state 415
    "null"                            shift, and go to state 416
    "table"                           shift, and go to state 417
    "deref"                           shift, and go to state 418
    "cast"                            shift, and go to state 419
    "upcast"                          shift, and go to state 420
    "addr"                            shift, and go to state 421
    "reinterpret"                     shift, and go to state 422
    "fixed_array"                     shift, and go to state 423
    "default"                         shift, and go to state 424
    "bool"                            shift, and go to state 222
    "void"                            shift, and go to state 223
    "string"                          shift, and go to state 224
    "int"                             shift, and go to state 226
    "int2"                            shift, and go to state 227
    "int3"                            shift, and go to state 228
    "int4"                            shift, and go to state 229
    "uint"                            shift, and go to state 230
    "bitfield"                        shift, and go to state 425
    "uint2"                           shift, and go to state 232
    "uint3"                           shift, and go to state 233
    "uint4"                           shift, and go to state 234
    "float"                           shift, and go to state 235
    "float2"                          shift, and go to state 236
    "float3"                          shift, and go to state 237
    "float4"                          shift, and go to state 238
    "range"                           shift, and go to state 239
    "urange"                          shift, and go to state 240
    "range64"                         shift, and go to state 241
    "urange64"                        shift, and go to state 242
    "int64"                           shift, and go to state 244
    "uint64"                          shift, and go to state 245
    "double"                          shift, and go to state 246
    "int8"                            shift, and go to state 249
    "uint8"                           shift, and go to state 250
    "int16"                           shift, and go to state 251
    "uint16"                          shift, and go to state 252
    "tuple"                           shift, and go to state 426
    "variant"                         shift, and go to state 427
    "generator"                       shift, and go to state 428
    "++"                              shift, and go to state 429
    "--"                              shift, and go to state 430
    "::"                              shift, and go to state 55
    "$$"                              shift, and go to state 431
    "$i"                              shift, and go to state 432
    "$v"                              shift, and go to state 433
    "$b"                              shift, and go to state 434
    "$a"                              shift, and go to state 435
    "$c"                              shift, and go to state 436
    "..."                             shift, and go to state 437
    "integer constant"                shift, and go to state 438
    "long integer constant"           shift, and go to state 439
    "unsigned integer constant"       shift, and go to state 440
    "unsigned long integer constant"  shift, and go to state 441
    "unsigned int8 constant"          shift, and go to state 442
    "floating point constant"         shift, and go to state 443
    "double constant"                 shift, and go to state 444
    "name"                            shift, and go to state 56
    "start of the string"             shift, and go to state 445
    "begin of code block"             shift, and go to state 446
    '-'                               shift, and go to state 447
    '+'                               shift, and go to state 448
    '*'                               shift, and go to state 449
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 450
    '!'                               shift, and go to state 451
    '['                               shift, and go to state 452
    '('                               shift, and go to state 453
    '$'                               shift, and go to state 454
    '@'                               shift, and go to state 455

    string_builder          go to state 456
    expr_reader             go to state 457
    expr_call_pipe          go to state 458
    name_in_namespace       go to state 459
    expr_new                go to state 460
    expr_cast               go to state 461
    expr_type_decl          go to state 462
    expr_type_info          go to state 463
    block_or_lambda         go to state 464
    expr_full_block         go to state 465
    expr_numeric_const      go to state 466
    expr_named_call         go to state 467
    expr_method_call        go to state 468
    func_addr_expr          go to state 469
    expr_field              go to state 470
    expr_call               go to state 471
    expr                    go to state 850
    expr_mtag               go to state 473
    basic_type_declaration  go to state 474
    make_decl               go to state 475
    make_struct_decl        go to state 476
    make_tuple_call         go to state 477
    make_dim_decl           go to state 478
    make_table_decl         go to state 479
    array_comprehension     go to state 480


State 650

  387 expr: expr ">=" . expr

    "struct"                          shift, and go to state 408
    "class"                           shift, and go to state 409
    "true"                            shift, and go to state 410
    "false"                           shift, and go to state 411
    "new"                             shift, and go to state 412
    "typeinfo"                        shift, and go to state 413
    "type"                            shift, and go to state 414
    "array"                           shift, and go to state 415
    "null"                            shift, and go to state 416
    "table"                           shift, and go to state 417
    "deref"                           shift, and go to state 418
    "cast"                            shift, and go to state 419
    "upcast"                          shift, and go to state 420
    "addr"                            shift, and go to state 421
    "reinterpret"                     shift, and go to state 422
    "fixed_array"                     shift, and go to state 423
    "default"                         shift, and go to state 424
    "bool"                            shift, and go to state 222
    "void"                            shift, and go to state 223
    "string"                          shift, and go to state 224
    "int"                             shift, and go to state 226
    "int2"                            shift, and go to state 227
    "int3"                            shift, and go to state 228
    "int4"                            shift, and go to state 229
    "uint"                            shift, and go to state 230
    "bitfield"                        shift, and go to state 425
    "uint2"                           shift, and go to state 232
    "uint3"                           shift, and go to state 233
    "uint4"                           shift, and go to state 234
    "float"                           shift, and go to state 235
    "float2"                          shift, and go to state 236
    "float3"                          shift, and go to state 237
    "float4"                          shift, and go to state 238
    "range"                           shift, and go to state 239
    "urange"                          shift, and go to state 240
    "range64"                         shift, and go to state 241
    "urange64"                        shift, and go to state 242
    "int64"                           shift, and go to state 244
    "uint64"                          shift, and go to state 245
    "double"                          shift, and go to state 246
    "int8"                            shift, and go to state 249
    "uint8"                           shift, and go to state 250
    "int16"                           shift, and go to state 251
    "uint16"                          shift, and go to state 252
    "tuple"                           shift, and go to state 426
    "variant"                         shift, and go to state 427
    "generator"                       shift, and go to state 428
    "++"                              shift, and go to state 429
    "--"                              shift, and go to state 430
    "::"                              shift, and go to state 55
    "$$"                              shift, and go to state 431
    "$i"                              shift, and go to state 432
    "$v"                              shift, and go to state 433
    "$b"                              shift, and go to state 434
    "$a"                              shift, and go to state 435
    "$c"                              shift, and go to state 436
    "..."                             shift, and go to state 437
    "integer constant"                shift, and go to state 438
    "long integer constant"           shift, and go to state 439
    "unsigned integer constant"       shift, and go to state 440
    "unsigned long integer constant"  shift, and go to state 441
    "unsigned int8 constant"          shift, and go to state 442
    "floating point constant"         shift, and go to state 443
    "double constant"                 shift, and go to state 444
    "name"                            shift, and go to state 56
    "start of the string"             shift, and go to state 445
    "begin of code block"             shift, and go to state 446
    '-'                               shift, and go to state 447
    '+'                               shift, and go to state 448
    '*'                               shift, and go to state 449
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 450
    '!'                               shift, and go to state 451
    '['                               shift, and go to state 452
    '('                               shift, and go to state 453
    '$'                               shift, and go to state 454
    '@'                               shift, and go to state 455

    string_builder          go to state 456
    expr_reader             go to state 457
    expr_call_pipe          go to state 458
    name_in_namespace       go to state 459
    expr_new                go to state 460
    expr_cast               go to state 461
    expr_type_decl          go to state 462
    expr_type_info          go to state 463
    block_or_lambda         go to state 464
    expr_full_block         go to state 465
    expr_numeric_const      go to state 466
    expr_named_call         go to state 467
    expr_method_call        go to state 468
    func_addr_expr          go to state 469
    expr_field              go to state 470
    expr_call               go to state 471
    expr                    go to state 851
    expr_mtag               go to state 473
    basic_type_declaration  go to state 474
    make_decl               go to state 475
    make_struct_decl        go to state 476
    make_tuple_call         go to state 477
    make_dim_decl           go to state 478
    make_table_decl         go to state 479
    array_comprehension     go to state 480


State 651

  384 expr: expr "==" . expr

    "struct"                          shift, and go to state 408
    "class"                           shift, and go to state 409
    "true"                            shift, and go to state 410
    "false"                           shift, and go to state 411
    "new"                             shift, and go to state 412
    "typeinfo"                        shift, and go to state 413
    "type"                            shift, and go to state 414
    "array"                           shift, and go to state 415
    "null"                            shift, and go to state 416
    "table"                           shift, and go to state 417
    "deref"                           shift, and go to state 418
    "cast"                            shift, and go to state 419
    "upcast"                          shift, and go to state 420
    "addr"                            shift, and go to state 421
    "reinterpret"                     shift, and go to state 422
    "fixed_array"                     shift, and go to state 423
    "default"                         shift, and go to state 424
    "bool"                            shift, and go to state 222
    "void"                            shift, and go to state 223
    "string"                          shift, and go to state 224
    "int"                             shift, and go to state 226
    "int2"                            shift, and go to state 227
    "int3"                            shift, and go to state 228
    "int4"                            shift, and go to state 229
    "uint"                            shift, and go to state 230
    "bitfield"                        shift, and go to state 425
    "uint2"                           shift, and go to state 232
    "uint3"                           shift, and go to state 233
    "uint4"                           shift, and go to state 234
    "float"                           shift, and go to state 235
    "float2"                          shift, and go to state 236
    "float3"                          shift, and go to state 237
    "float4"                          shift, and go to state 238
    "range"                           shift, and go to state 239
    "urange"                          shift, and go to state 240
    "range64"                         shift, and go to state 241
    "urange64"                        shift, and go to state 242
    "int64"                           shift, and go to state 244
    "uint64"                          shift, and go to state 245
    "double"                          shift, and go to state 246
    "int8"                            shift, and go to state 249
    "uint8"                           shift, and go to state 250
    "int16"                           shift, and go to state 251
    "uint16"                          shift, and go to state 252
    "tuple"                           shift, and go to state 426
    "variant"                         shift, and go to state 427
    "generator"                       shift, and go to state 428
    "++"                              shift, and go to state 429
    "--"                              shift, and go to state 430
    "::"                              shift, and go to state 55
    "$$"                              shift, and go to state 431
    "$i"                              shift, and go to state 432
    "$v"                              shift, and go to state 433
    "$b"                              shift, and go to state 434
    "$a"                              shift, and go to state 435
    "$c"                              shift, and go to state 436
    "..."                             shift, and go to state 437
    "integer constant"                shift, and go to state 438
    "long integer constant"           shift, and go to state 439
    "unsigned integer constant"       shift, and go to state 440
    "unsigned long integer constant"  shift, and go to state 441
    "unsigned int8 constant"          shift, and go to state 442
    "floating point constant"         shift, and go to state 443
    "double constant"                 shift, and go to state 444
    "name"                            shift, and go to state 56
    "start of the string"             shift, and go to state 445
    "begin of code block"             shift, and go to state 446
    '-'                               shift, and go to state 447
    '+'                               shift, and go to state 448
    '*'                               shift, and go to state 449
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 450
    '!'                               shift, and go to state 451
    '['                               shift, and go to state 452
    '('                               shift, and go to state 453
    '$'                               shift, and go to state 454
    '@'                               shift, and go to state 455

    string_builder          go to state 456
    expr_reader             go to state 457
    expr_call_pipe          go to state 458
    name_in_namespace       go to state 459
    expr_new                go to state 460
    expr_cast               go to state 461
    expr_type_decl          go to state 462
    expr_type_info          go to state 463
    block_or_lambda         go to state 464
    expr_full_block         go to state 465
    expr_numeric_const      go to state 466
    expr_named_call         go to state 467
    expr_method_call        go to state 468
    func_addr_expr          go to state 469
    expr_field              go to state 470
    expr_call               go to state 471
    expr                    go to state 852
    expr_mtag               go to state 473
    basic_type_declaration  go to state 474
    make_decl               go to state 475
    make_struct_decl        go to state 476
    make_tuple_call         go to state 477
    make_dim_decl           go to state 478
    make_table_decl         go to state 479
    array_comprehension     go to state 480


State 652

  385 expr: expr "!=" . expr

    "struct"                          shift, and go to state 408
    "class"                           shift, and go to state 409
    "true"                            shift, and go to state 410
    "false"                           shift, and go to state 411
    "new"                             shift, and go to state 412
    "typeinfo"                        shift, and go to state 413
    "type"                            shift, and go to state 414
    "array"                           shift, and go to state 415
    "null"                            shift, and go to state 416
    "table"                           shift, and go to state 417
    "deref"                           shift, and go to state 418
    "cast"                            shift, and go to state 419
    "upcast"                          shift, and go to state 420
    "addr"                            shift, and go to state 421
    "reinterpret"                     shift, and go to state 422
    "fixed_array"                     shift, and go to state 423
    "default"                         shift, and go to state 424
    "bool"                            shift, and go to state 222
    "void"                            shift, and go to state 223
    "string"                          shift, and go to state 224
    "int"                             shift, and go to state 226
    "int2"                            shift, and go to state 227
    "int3"                            shift, and go to state 228
    "int4"                            shift, and go to state 229
    "uint"                            shift, and go to state 230
    "bitfield"                        shift, and go to state 425
    "uint2"                           shift, and go to state 232
    "uint3"                           shift, and go to state 233
    "uint4"                           shift, and go to state 234
    "float"                           shift, and go to state 235
    "float2"                          shift, and go to state 236
    "float3"                          shift, and go to state 237
    "float4"                          shift, and go to state 238
    "range"                           shift, and go to state 239
    "urange"                          shift, and go to state 240
    "range64"                         shift, and go to state 241
    "urange64"                        shift, and go to state 242
    "int64"                           shift, and go to state 244
    "uint64"                          shift, and go to state 245
    "double"                          shift, and go to state 246
    "int8"                            shift, and go to state 249
    "uint8"                           shift, and go to state 250
    "int16"                           shift, and go to state 251
    "uint16"                          shift, and go to state 252
    "tuple"                           shift, and go to state 426
    "variant"                         shift, and go to state 427
    "generator"                       shift, and go to state 428
    "++"                              shift, and go to state 429
    "--"                              shift, and go to state 430
    "::"                              shift, and go to state 55
    "$$"                              shift, and go to state 431
    "$i"                              shift, and go to state 432
    "$v"                              shift, and go to state 433
    "$b"                              shift, and go to state 434
    "$a"                              shift, and go to state 435
    "$c"                              shift, and go to state 436
    "..."                             shift, and go to state 437
    "integer constant"                shift, and go to state 438
    "long integer constant"           shift, and go to state 439
    "unsigned integer constant"       shift, and go to state 440
    "unsigned long integer constant"  shift, and go to state 441
    "unsigned int8 constant"          shift, and go to state 442
    "floating point constant"         shift, and go to state 443
    "double constant"                 shift, and go to state 444
    "name"                            shift, and go to state 56
    "start of the string"             shift, and go to state 445
    "begin of code block"             shift, and go to state 446
    '-'                               shift, and go to state 447
    '+'                               shift, and go to state 448
    '*'                               shift, and go to state 449
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 450
    '!'                               shift, and go to state 451
    '['                               shift, and go to state 452
    '('                               shift, and go to state 453
    '$'                               shift, and go to state 454
    '@'                               shift, and go to state 455

    string_builder          go to state 456
    expr_reader             go to state 457
    expr_call_pipe          go to state 458
    name_in_namespace       go to state 459
    expr_new                go to state 460
    expr_cast               go to state 461
    expr_type_decl          go to state 462
    expr_type_info          go to state 463
    block_or_lambda         go to state 464
    expr_full_block         go to state 465
    expr_numeric_const      go to state 466
    expr_named_call         go to state 467
    expr_method_call        go to state 468
    func_addr_expr          go to state 469
    expr_field              go to state 470
    expr_call               go to state 471
    expr                    go to state 853
    expr_mtag               go to state 473
    basic_type_declaration  go to state 474
    make_decl               go to state 475
    make_struct_decl        go to state 476
    make_tuple_call         go to state 477
    make_dim_decl           go to state 478
    make_table_decl         go to state 479
    array_comprehension     go to state 480


State 653

  336 expr_method_call: expr "->" . "name" '(' ')'
  337                 | expr "->" . "name" '(' expr_list ')'

    "name"  shift, and go to state 854


State 654

  413 expr: expr "??" . expr

    "struct"                          shift, and go to state 408
    "class"                           shift, and go to state 409
    "true"                            shift, and go to state 410
    "false"                           shift, and go to state 411
    "new"                             shift, and go to state 412
    "typeinfo"                        shift, and go to state 413
    "type"                            shift, and go to state 414
    "array"                           shift, and go to state 415
    "null"                            shift, and go to state 416
    "table"                           shift, and go to state 417
    "deref"                           shift, and go to state 418
    "cast"                            shift, and go to state 419
    "upcast"                          shift, and go to state 420
    "addr"                            shift, and go to state 421
    "reinterpret"                     shift, and go to state 422
    "fixed_array"                     shift, and go to state 423
    "default"                         shift, and go to state 424
    "bool"                            shift, and go to state 222
    "void"                            shift, and go to state 223
    "string"                          shift, and go to state 224
    "int"                             shift, and go to state 226
    "int2"                            shift, and go to state 227
    "int3"                            shift, and go to state 228
    "int4"                            shift, and go to state 229
    "uint"                            shift, and go to state 230
    "bitfield"                        shift, and go to state 425
    "uint2"                           shift, and go to state 232
    "uint3"                           shift, and go to state 233
    "uint4"                           shift, and go to state 234
    "float"                           shift, and go to state 235
    "float2"                          shift, and go to state 236
    "float3"                          shift, and go to state 237
    "float4"                          shift, and go to state 238
    "range"                           shift, and go to state 239
    "urange"                          shift, and go to state 240
    "range64"                         shift, and go to state 241
    "urange64"                        shift, and go to state 242
    "int64"                           shift, and go to state 244
    "uint64"                          shift, and go to state 245
    "double"                          shift, and go to state 246
    "int8"                            shift, and go to state 249
    "uint8"                           shift, and go to state 250
    "int16"                           shift, and go to state 251
    "uint16"                          shift, and go to state 252
    "tuple"                           shift, and go to state 426
    "variant"                         shift, and go to state 427
    "generator"                       shift, and go to state 428
    "++"                              shift, and go to state 429
    "--"                              shift, and go to state 430
    "::"                              shift, and go to state 55
    "$$"                              shift, and go to state 431
    "$i"                              shift, and go to state 432
    "$v"                              shift, and go to state 433
    "$b"                              shift, and go to state 434
    "$a"                              shift, and go to state 435
    "$c"                              shift, and go to state 436
    "..."                             shift, and go to state 437
    "integer constant"                shift, and go to state 438
    "long integer constant"           shift, and go to state 439
    "unsigned integer constant"       shift, and go to state 440
    "unsigned long integer constant"  shift, and go to state 441
    "unsigned int8 constant"          shift, and go to state 442
    "floating point constant"         shift, and go to state 443
    "double constant"                 shift, and go to state 444
    "name"                            shift, and go to state 56
    "start of the string"             shift, and go to state 445
    "begin of code block"             shift, and go to state 446
    '-'                               shift, and go to state 447
    '+'                               shift, and go to state 448
    '*'                               shift, and go to state 449
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 450
    '!'                               shift, and go to state 451
    '['                               shift, and go to state 452
    '('                               shift, and go to state 453
    '$'                               shift, and go to state 454
    '@'                               shift, and go to state 455

    string_builder          go to state 456
    expr_reader             go to state 457
    expr_call_pipe          go to state 458
    name_in_namespace       go to state 459
    expr_new                go to state 460
    expr_cast               go to state 461
    expr_type_decl          go to state 462
    expr_type_info          go to state 463
    block_or_lambda         go to state 464
    expr_full_block         go to state 465
    expr_numeric_const      go to state 466
    expr_named_call         go to state 467
    expr_method_call        go to state 468
    func_addr_expr          go to state 469
    expr_field              go to state 470
    expr_call               go to state 471
    expr                    go to state 855
    expr_mtag               go to state 473
    basic_type_declaration  go to state 474
    make_decl               go to state 475
    make_struct_decl        go to state 476
    make_tuple_call         go to state 477
    make_dim_decl           go to state 478
    make_table_decl         go to state 479
    array_comprehension     go to state 480


State 655

  404 expr: expr "?." . "name"
  450 expr_mtag: expr "?." . "$f" '(' expr ')'

    "$f"    shift, and go to state 856
    "name"  shift, and go to state 857


State 656

  402 expr: expr "?[" . expr ']'

    "struct"                          shift, and go to state 408
    "class"                           shift, and go to state 409
    "true"                            shift, and go to state 410
    "false"                           shift, and go to state 411
    "new"                             shift, and go to state 412
    "typeinfo"                        shift, and go to state 413
    "type"                            shift, and go to state 414
    "array"                           shift, and go to state 415
    "null"                            shift, and go to state 416
    "table"                           shift, and go to state 417
    "deref"                           shift, and go to state 418
    "cast"                            shift, and go to state 419
    "upcast"                          shift, and go to state 420
    "addr"                            shift, and go to state 421
    "reinterpret"                     shift, and go to state 422
    "fixed_array"                     shift, and go to state 423
    "default"                         shift, and go to state 424
    "bool"                            shift, and go to state 222
    "void"                            shift, and go to state 223
    "string"                          shift, and go to state 224
    "int"                             shift, and go to state 226
    "int2"                            shift, and go to state 227
    "int3"                            shift, and go to state 228
    "int4"                            shift, and go to state 229
    "uint"                            shift, and go to state 230
    "bitfield"                        shift, and go to state 425
    "uint2"                           shift, and go to state 232
    "uint3"                           shift, and go to state 233
    "uint4"                           shift, and go to state 234
    "float"                           shift, and go to state 235
    "float2"                          shift, and go to state 236
    "float3"                          shift, and go to state 237
    "float4"                          shift, and go to state 238
    "range"                           shift, and go to state 239
    "urange"                          shift, and go to state 240
    "range64"                         shift, and go to state 241
    "urange64"                        shift, and go to state 242
    "int64"                           shift, and go to state 244
    "uint64"                          shift, and go to state 245
    "double"                          shift, and go to state 246
    "int8"                            shift, and go to state 249
    "uint8"                           shift, and go to state 250
    "int16"                           shift, and go to state 251
    "uint16"                          shift, and go to state 252
    "tuple"                           shift, and go to state 426
    "variant"                         shift, and go to state 427
    "generator"                       shift, and go to state 428
    "++"                              shift, and go to state 429
    "--"                              shift, and go to state 430
    "::"                              shift, and go to state 55
    "$$"                              shift, and go to state 431
    "$i"                              shift, and go to state 432
    "$v"                              shift, and go to state 433
    "$b"                              shift, and go to state 434
    "$a"                              shift, and go to state 435
    "$c"                              shift, and go to state 436
    "..."                             shift, and go to state 437
    "integer constant"                shift, and go to state 438
    "long integer constant"           shift, and go to state 439
    "unsigned integer constant"       shift, and go to state 440
    "unsigned long integer constant"  shift, and go to state 441
    "unsigned int8 constant"          shift, and go to state 442
    "floating point constant"         shift, and go to state 443
    "double constant"                 shift, and go to state 444
    "name"                            shift, and go to state 56
    "start of the string"             shift, and go to state 445
    "begin of code block"             shift, and go to state 446
    '-'                               shift, and go to state 447
    '+'                               shift, and go to state 448
    '*'                               shift, and go to state 449
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 450
    '!'                               shift, and go to state 451
    '['                               shift, and go to state 452
    '('                               shift, and go to state 453
    '$'                               shift, and go to state 454
    '@'                               shift, and go to state 455

    string_builder          go to state 456
    expr_reader             go to state 457
    expr_call_pipe          go to state 458
    name_in_namespace       go to state 459
    expr_new                go to state 460
    expr_cast               go to state 461
    expr_type_decl          go to state 462
    expr_type_info          go to state 463
    block_or_lambda         go to state 464
    expr_full_block         go to state 465
    expr_numeric_const      go to state 466
    expr_named_call         go to state 467
    expr_method_call        go to state 468
    func_addr_expr          go to state 469
    expr_field              go to state 470
    expr_call               go to state 471
    expr                    go to state 858
    expr_mtag               go to state 473
    basic_type_declaration  go to state 474
    make_decl               go to state 475
    make_struct_decl        go to state 476
    make_tuple_call         go to state 477
    make_dim_decl           go to state 478
    make_table_decl         go to state 479
    array_comprehension     go to state 480


State 657

  437 expr: expr "<|" . expr

    "struct"                          shift, and go to state 408
    "class"                           shift, and go to state 409
    "true"                            shift, and go to state 410
    "false"                           shift, and go to state 411
    "new"                             shift, and go to state 412
    "typeinfo"                        shift, and go to state 413
    "type"                            shift, and go to state 414
    "array"                           shift, and go to state 415
    "null"                            shift, and go to state 416
    "table"                           shift, and go to state 417
    "deref"                           shift, and go to state 418
    "cast"                            shift, and go to state 419
    "upcast"                          shift, and go to state 420
    "addr"                            shift, and go to state 421
    "reinterpret"                     shift, and go to state 422
    "fixed_array"                     shift, and go to state 423
    "default"                         shift, and go to state 424
    "bool"                            shift, and go to state 222
    "void"                            shift, and go to state 223
    "string"                          shift, and go to state 224
    "int"                             shift, and go to state 226
    "int2"                            shift, and go to state 227
    "int3"                            shift, and go to state 228
    "int4"                            shift, and go to state 229
    "uint"                            shift, and go to state 230
    "bitfield"                        shift, and go to state 425
    "uint2"                           shift, and go to state 232
    "uint3"                           shift, and go to state 233
    "uint4"                           shift, and go to state 234
    "float"                           shift, and go to state 235
    "float2"                          shift, and go to state 236
    "float3"                          shift, and go to state 237
    "float4"                          shift, and go to state 238
    "range"                           shift, and go to state 239
    "urange"                          shift, and go to state 240
    "range64"                         shift, and go to state 241
    "urange64"                        shift, and go to state 242
    "int64"                           shift, and go to state 244
    "uint64"                          shift, and go to state 245
    "double"                          shift, and go to state 246
    "int8"                            shift, and go to state 249
    "uint8"                           shift, and go to state 250
    "int16"                           shift, and go to state 251
    "uint16"                          shift, and go to state 252
    "tuple"                           shift, and go to state 426
    "variant"                         shift, and go to state 427
    "generator"                       shift, and go to state 428
    "++"                              shift, and go to state 429
    "--"                              shift, and go to state 430
    "::"                              shift, and go to state 55
    "$$"                              shift, and go to state 431
    "$i"                              shift, and go to state 432
    "$v"                              shift, and go to state 433
    "$b"                              shift, and go to state 434
    "$a"                              shift, and go to state 435
    "$c"                              shift, and go to state 436
    "..."                             shift, and go to state 437
    "integer constant"                shift, and go to state 438
    "long integer constant"           shift, and go to state 439
    "unsigned integer constant"       shift, and go to state 440
    "unsigned long integer constant"  shift, and go to state 441
    "unsigned int8 constant"          shift, and go to state 442
    "floating point constant"         shift, and go to state 443
    "double constant"                 shift, and go to state 444
    "name"                            shift, and go to state 56
    "start of the string"             shift, and go to state 445
    "begin of code block"             shift, and go to state 446
    '-'                               shift, and go to state 447
    '+'                               shift, and go to state 448
    '*'                               shift, and go to state 449
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 450
    '!'                               shift, and go to state 451
    '['                               shift, and go to state 452
    '('                               shift, and go to state 453
    '$'                               shift, and go to state 454
    '@'                               shift, and go to state 455

    string_builder          go to state 456
    expr_reader             go to state 457
    expr_call_pipe          go to state 458
    name_in_namespace       go to state 459
    expr_new                go to state 460
    expr_cast               go to state 461
    expr_type_decl          go to state 462
    expr_type_info          go to state 463
    block_or_lambda         go to state 464
    expr_full_block         go to state 465
    expr_numeric_const      go to state 466
    expr_named_call         go to state 467
    expr_method_call        go to state 468
    func_addr_expr          go to state 469
    expr_field              go to state 470
    expr_call               go to state 471
    expr                    go to state 859
    expr_mtag               go to state 473
    basic_type_declaration  go to state 474
    make_decl               go to state 475
    make_struct_decl        go to state 476
    make_tuple_call         go to state 477
    make_dim_decl           go to state 478
    make_table_decl         go to state 479
    array_comprehension     go to state 480


State 658

  438 expr: expr "|>" . expr
  439     | expr "|>" . basic_type_declaration

    "struct"                          shift, and go to state 408
    "class"                           shift, and go to state 409
    "true"                            shift, and go to state 410
    "false"                           shift, and go to state 411
    "new"                             shift, and go to state 412
    "typeinfo"                        shift, and go to state 413
    "type"                            shift, and go to state 414
    "array"                           shift, and go to state 415
    "null"                            shift, and go to state 416
    "table"                           shift, and go to state 417
    "deref"                           shift, and go to state 418
    "cast"                            shift, and go to state 419
    "upcast"                          shift, and go to state 420
    "addr"                            shift, and go to state 421
    "reinterpret"                     shift, and go to state 422
    "fixed_array"                     shift, and go to state 423
    "default"                         shift, and go to state 424
    "bool"                            shift, and go to state 222
    "void"                            shift, and go to state 223
    "string"                          shift, and go to state 224
    "int"                             shift, and go to state 226
    "int2"                            shift, and go to state 227
    "int3"                            shift, and go to state 228
    "int4"                            shift, and go to state 229
    "uint"                            shift, and go to state 230
    "bitfield"                        shift, and go to state 425
    "uint2"                           shift, and go to state 232
    "uint3"                           shift, and go to state 233
    "uint4"                           shift, and go to state 234
    "float"                           shift, and go to state 235
    "float2"                          shift, and go to state 236
    "float3"                          shift, and go to state 237
    "float4"                          shift, and go to state 238
    "range"                           shift, and go to state 239
    "urange"                          shift, and go to state 240
    "range64"                         shift, and go to state 241
    "urange64"                        shift, and go to state 242
    "int64"                           shift, and go to state 244
    "uint64"                          shift, and go to state 245
    "double"                          shift, and go to state 246
    "int8"                            shift, and go to state 249
    "uint8"                           shift, and go to state 250
    "int16"                           shift, and go to state 251
    "uint16"                          shift, and go to state 252
    "tuple"                           shift, and go to state 426
    "variant"                         shift, and go to state 427
    "generator"                       shift, and go to state 428
    "++"                              shift, and go to state 429
    "--"                              shift, and go to state 430
    "::"                              shift, and go to state 55
    "$$"                              shift, and go to state 431
    "$i"                              shift, and go to state 432
    "$v"                              shift, and go to state 433
    "$b"                              shift, and go to state 434
    "$a"                              shift, and go to state 435
    "$c"                              shift, and go to state 436
    "..."                             shift, and go to state 437
    "integer constant"                shift, and go to state 438
    "long integer constant"           shift, and go to state 439
    "unsigned integer constant"       shift, and go to state 440
    "unsigned long integer constant"  shift, and go to state 441
    "unsigned int8 constant"          shift, and go to state 442
    "floating point constant"         shift, and go to state 443
    "double constant"                 shift, and go to state 444
    "name"                            shift, and go to state 56
    "start of the string"             shift, and go to state 445
    "begin of code block"             shift, and go to state 446
    '-'                               shift, and go to state 447
    '+'                               shift, and go to state 448
    '*'                               shift, and go to state 449
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 450
    '!'                               shift, and go to state 451
    '['                               shift, and go to state 452
    '('                               shift, and go to state 453
    '$'                               shift, and go to state 454
    '@'                               shift, and go to state 455

    string_builder          go to state 456
    expr_reader             go to state 457
    expr_call_pipe          go to state 458
    name_in_namespace       go to state 459
    expr_new                go to state 460
    expr_cast               go to state 461
    expr_type_decl          go to state 462
    expr_type_info          go to state 463
    block_or_lambda         go to state 464
    expr_full_block         go to state 465
    expr_numeric_const      go to state 466
    expr_named_call         go to state 467
    expr_method_call        go to state 468
    func_addr_expr          go to state 469
    expr_field              go to state 470
    expr_call               go to state 471
    expr                    go to state 860
    expr_mtag               go to state 473
    basic_type_declaration  go to state 861
    make_decl               go to state 475
    make_struct_decl        go to state 476
    make_tuple_call         go to state 477
    make_dim_decl           go to state 478
    make_table_decl         go to state 479
    array_comprehension     go to state 480


State 659

  375 expr: expr "<<<" . expr

    "struct"                          shift, and go to state 408
    "class"                           shift, and go to state 409
    "true"                            shift, and go to state 410
    "false"                           shift, and go to state 411
    "new"                             shift, and go to state 412
    "typeinfo"                        shift, and go to state 413
    "type"                            shift, and go to state 414
    "array"                           shift, and go to state 415
    "null"                            shift, and go to state 416
    "table"                           shift, and go to state 417
    "deref"                           shift, and go to state 418
    "cast"                            shift, and go to state 419
    "upcast"                          shift, and go to state 420
    "addr"                            shift, and go to state 421
    "reinterpret"                     shift, and go to state 422
    "fixed_array"                     shift, and go to state 423
    "default"                         shift, and go to state 424
    "bool"                            shift, and go to state 222
    "void"                            shift, and go to state 223
    "string"                          shift, and go to state 224
    "int"                             shift, and go to state 226
    "int2"                            shift, and go to state 227
    "int3"                            shift, and go to state 228
    "int4"                            shift, and go to state 229
    "uint"                            shift, and go to state 230
    "bitfield"                        shift, and go to state 425
    "uint2"                           shift, and go to state 232
    "uint3"                           shift, and go to state 233
    "uint4"                           shift, and go to state 234
    "float"                           shift, and go to state 235
    "float2"                          shift, and go to state 236
    "float3"                          shift, and go to state 237
    "float4"                          shift, and go to state 238
    "range"                           shift, and go to state 239
    "urange"                          shift, and go to state 240
    "range64"                         shift, and go to state 241
    "urange64"                        shift, and go to state 242
    "int64"                           shift, and go to state 244
    "uint64"                          shift, and go to state 245
    "double"                          shift, and go to state 246
    "int8"                            shift, and go to state 249
    "uint8"                           shift, and go to state 250
    "int16"                           shift, and go to state 251
    "uint16"                          shift, and go to state 252
    "tuple"                           shift, and go to state 426
    "variant"                         shift, and go to state 427
    "generator"                       shift, and go to state 428
    "++"                              shift, and go to state 429
    "--"                              shift, and go to state 430
    "::"                              shift, and go to state 55
    "$$"                              shift, and go to state 431
    "$i"                              shift, and go to state 432
    "$v"                              shift, and go to state 433
    "$b"                              shift, and go to state 434
    "$a"                              shift, and go to state 435
    "$c"                              shift, and go to state 436
    "..."                             shift, and go to state 437
    "integer constant"                shift, and go to state 438
    "long integer constant"           shift, and go to state 439
    "unsigned integer constant"       shift, and go to state 440
    "unsigned long integer constant"  shift, and go to state 441
    "unsigned int8 constant"          shift, and go to state 442
    "floating point constant"         shift, and go to state 443
    "double constant"                 shift, and go to state 444
    "name"                            shift, and go to state 56
    "start of the string"             shift, and go to state 445
    "begin of code block"             shift, and go to state 446
    '-'                               shift, and go to state 447
    '+'                               shift, and go to state 448
    '*'                               shift, and go to state 449
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 450
    '!'                               shift, and go to state 451
    '['                               shift, and go to state 452
    '('                               shift, and go to state 453
    '$'                               shift, and go to state 454
    '@'                               shift, and go to state 455

    string_builder          go to state 456
    expr_reader             go to state 457
    expr_call_pipe          go to state 458
    name_in_namespace       go to state 459
    expr_new                go to state 460
    expr_cast               go to state 461
    expr_type_decl          go to state 462
    expr_type_info          go to state 463
    block_or_lambda         go to state 464
    expr_full_block         go to state 465
    expr_numeric_const      go to state 466
    expr_named_call         go to state 467
    expr_method_call        go to state 468
    func_addr_expr          go to state 469
    expr_field              go to state 470
    expr_call               go to state 471
    expr                    go to state 862
    expr_mtag               go to state 473
    basic_type_declaration  go to state 474
    make_decl               go to state 475
    make_struct_decl        go to state 476
    make_tuple_call         go to state 477
    make_dim_decl           go to state 478
    make_table_decl         go to state 479
    array_comprehension     go to state 480


State 660

  376 expr: expr ">>>" . expr

    "struct"                          shift, and go to state 408
    "class"                           shift, and go to state 409
    "true"                            shift, and go to state 410
    "false"                           shift, and go to state 411
    "new"                             shift, and go to state 412
    "typeinfo"                        shift, and go to state 413
    "type"                            shift, and go to state 414
    "array"                           shift, and go to state 415
    "null"                            shift, and go to state 416
    "table"                           shift, and go to state 417
    "deref"                           shift, and go to state 418
    "cast"                            shift, and go to state 419
    "upcast"                          shift, and go to state 420
    "addr"                            shift, and go to state 421
    "reinterpret"                     shift, and go to state 422
    "fixed_array"                     shift, and go to state 423
    "default"                         shift, and go to state 424
    "bool"                            shift, and go to state 222
    "void"                            shift, and go to state 223
    "string"                          shift, and go to state 224
    "int"                             shift, and go to state 226
    "int2"                            shift, and go to state 227
    "int3"                            shift, and go to state 228
    "int4"                            shift, and go to state 229
    "uint"                            shift, and go to state 230
    "bitfield"                        shift, and go to state 425
    "uint2"                           shift, and go to state 232
    "uint3"                           shift, and go to state 233
    "uint4"                           shift, and go to state 234
    "float"                           shift, and go to state 235
    "float2"                          shift, and go to state 236
    "float3"                          shift, and go to state 237
    "float4"                          shift, and go to state 238
    "range"                           shift, and go to state 239
    "urange"                          shift, and go to state 240
    "range64"                         shift, and go to state 241
    "urange64"                        shift, and go to state 242
    "int64"                           shift, and go to state 244
    "uint64"                          shift, and go to state 245
    "double"                          shift, and go to state 246
    "int8"                            shift, and go to state 249
    "uint8"                           shift, and go to state 250
    "int16"                           shift, and go to state 251
    "uint16"                          shift, and go to state 252
    "tuple"                           shift, and go to state 426
    "variant"                         shift, and go to state 427
    "generator"                       shift, and go to state 428
    "++"                              shift, and go to state 429
    "--"                              shift, and go to state 430
    "::"                              shift, and go to state 55
    "$$"                              shift, and go to state 431
    "$i"                              shift, and go to state 432
    "$v"                              shift, and go to state 433
    "$b"                              shift, and go to state 434
    "$a"                              shift, and go to state 435
    "$c"                              shift, and go to state 436
    "..."                             shift, and go to state 437
    "integer constant"                shift, and go to state 438
    "long integer constant"           shift, and go to state 439
    "unsigned integer constant"       shift, and go to state 440
    "unsigned long integer constant"  shift, and go to state 441
    "unsigned int8 constant"          shift, and go to state 442
    "floating point constant"         shift, and go to state 443
    "double constant"                 shift, and go to state 444
    "name"                            shift, and go to state 56
    "start of the string"             shift, and go to state 445
    "begin of code block"             shift, and go to state 446
    '-'                               shift, and go to state 447
    '+'                               shift, and go to state 448
    '*'                               shift, and go to state 449
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 450
    '!'                               shift, and go to state 451
    '['                               shift, and go to state 452
    '('                               shift, and go to state 453
    '$'                               shift, and go to state 454
    '@'                               shift, and go to state 455

    string_builder          go to state 456
    expr_reader             go to state 457
    expr_call_pipe          go to state 458
    name_in_namespace       go to state 459
    expr_new                go to state 460
    expr_cast               go to state 461
    expr_type_decl          go to state 462
    expr_type_info          go to state 463
    block_or_lambda         go to state 464
    expr_full_block         go to state 465
    expr_numeric_const      go to state 466
    expr_named_call         go to state 467
    expr_method_call        go to state 468
    func_addr_expr          go to state 469
    expr_field              go to state 470
    expr_call               go to state 471
    expr                    go to state 863
    expr_mtag               go to state 473
    basic_type_declaration  go to state 474
    make_decl               go to state 475
    make_struct_decl        go to state 476
    make_tuple_call         go to state 477
    make_dim_decl           go to state 478
    make_table_decl         go to state 479
    array_comprehension     go to state 480


State 661

  391 expr: expr "&&" . expr

    "struct"                          shift, and go to state 408
    "class"                           shift, and go to state 409
    "true"                            shift, and go to state 410
    "false"                           shift, and go to state 411
    "new"                             shift, and go to state 412
    "typeinfo"                        shift, and go to state 413
    "type"                            shift, and go to state 414
    "array"                           shift, and go to state 415
    "null"                            shift, and go to state 416
    "table"                           shift, and go to state 417
    "deref"                           shift, and go to state 418
    "cast"                            shift, and go to state 419
    "upcast"                          shift, and go to state 420
    "addr"                            shift, and go to state 421
    "reinterpret"                     shift, and go to state 422
    "fixed_array"                     shift, and go to state 423
    "default"                         shift, and go to state 424
    "bool"                            shift, and go to state 222
    "void"                            shift, and go to state 223
    "string"                          shift, and go to state 224
    "int"                             shift, and go to state 226
    "int2"                            shift, and go to state 227
    "int3"                            shift, and go to state 228
    "int4"                            shift, and go to state 229
    "uint"                            shift, and go to state 230
    "bitfield"                        shift, and go to state 425
    "uint2"                           shift, and go to state 232
    "uint3"                           shift, and go to state 233
    "uint4"                           shift, and go to state 234
    "float"                           shift, and go to state 235
    "float2"                          shift, and go to state 236
    "float3"                          shift, and go to state 237
    "float4"                          shift, and go to state 238
    "range"                           shift, and go to state 239
    "urange"                          shift, and go to state 240
    "range64"                         shift, and go to state 241
    "urange64"                        shift, and go to state 242
    "int64"                           shift, and go to state 244
    "uint64"                          shift, and go to state 245
    "double"                          shift, and go to state 246
    "int8"                            shift, and go to state 249
    "uint8"                           shift, and go to state 250
    "int16"                           shift, and go to state 251
    "uint16"                          shift, and go to state 252
    "tuple"                           shift, and go to state 426
    "variant"                         shift, and go to state 427
    "generator"                       shift, and go to state 428
    "++"                              shift, and go to state 429
    "--"                              shift, and go to state 430
    "::"                              shift, and go to state 55
    "$$"                              shift, and go to state 431
    "$i"                              shift, and go to state 432
    "$v"                              shift, and go to state 433
    "$b"                              shift, and go to state 434
    "$a"                              shift, and go to state 435
    "$c"                              shift, and go to state 436
    "..."                             shift, and go to state 437
    "integer constant"                shift, and go to state 438
    "long integer constant"           shift, and go to state 439
    "unsigned integer constant"       shift, and go to state 440
    "unsigned long integer constant"  shift, and go to state 441
    "unsigned int8 constant"          shift, and go to state 442
    "floating point constant"         shift, and go to state 443
    "double constant"                 shift, and go to state 444
    "name"                            shift, and go to state 56
    "start of the string"             shift, and go to state 445
    "begin of code block"             shift, and go to state 446
    '-'                               shift, and go to state 447
    '+'                               shift, and go to state 448
    '*'                               shift, and go to state 449
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 450
    '!'                               shift, and go to state 451
    '['                               shift, and go to state 452
    '('                               shift, and go to state 453
    '$'                               shift, and go to state 454
    '@'                               shift, and go to state 455

    string_builder          go to state 456
    expr_reader             go to state 457
    expr_call_pipe          go to state 458
    name_in_namespace       go to state 459
    expr_new                go to state 460
    expr_cast               go to state 461
    expr_type_decl          go to state 462
    expr_type_info          go to state 463
    block_or_lambda         go to state 464
    expr_full_block         go to state 465
    expr_numeric_const      go to state 466
    expr_named_call         go to state 467
    expr_method_call        go to state 468
    func_addr_expr          go to state 469
    expr_field              go to state 470
    expr_call               go to state 471
    expr                    go to state 864
    expr_mtag               go to state 473
    basic_type_declaration  go to state 474
    make_decl               go to state 475
    make_struct_decl        go to state 476
    make_tuple_call         go to state 477
    make_dim_decl           go to state 478
    make_table_decl         go to state 479
    array_comprehension     go to state 480


State 662

  392 expr: expr "||" . expr

    "struct"                          shift, and go to state 408
    "class"                           shift, and go to state 409
    "true"                            shift, and go to state 410
    "false"                           shift, and go to state 411
    "new"                             shift, and go to state 412
    "typeinfo"                        shift, and go to state 413
    "type"                            shift, and go to state 414
    "array"                           shift, and go to state 415
    "null"                            shift, and go to state 416
    "table"                           shift, and go to state 417
    "deref"                           shift, and go to state 418
    "cast"                            shift, and go to state 419
    "upcast"                          shift, and go to state 420
    "addr"                            shift, and go to state 421
    "reinterpret"                     shift, and go to state 422
    "fixed_array"                     shift, and go to state 423
    "default"                         shift, and go to state 424
    "bool"                            shift, and go to state 222
    "void"                            shift, and go to state 223
    "string"                          shift, and go to state 224
    "int"                             shift, and go to state 226
    "int2"                            shift, and go to state 227
    "int3"                            shift, and go to state 228
    "int4"                            shift, and go to state 229
    "uint"                            shift, and go to state 230
    "bitfield"                        shift, and go to state 425
    "uint2"                           shift, and go to state 232
    "uint3"                           shift, and go to state 233
    "uint4"                           shift, and go to state 234
    "float"                           shift, and go to state 235
    "float2"                          shift, and go to state 236
    "float3"                          shift, and go to state 237
    "float4"                          shift, and go to state 238
    "range"                           shift, and go to state 239
    "urange"                          shift, and go to state 240
    "range64"                         shift, and go to state 241
    "urange64"                        shift, and go to state 242
    "int64"                           shift, and go to state 244
    "uint64"                          shift, and go to state 245
    "double"                          shift, and go to state 246
    "int8"                            shift, and go to state 249
    "uint8"                           shift, and go to state 250
    "int16"                           shift, and go to state 251
    "uint16"                          shift, and go to state 252
    "tuple"                           shift, and go to state 426
    "variant"                         shift, and go to state 427
    "generator"                       shift, and go to state 428
    "++"                              shift, and go to state 429
    "--"                              shift, and go to state 430
    "::"                              shift, and go to state 55
    "$$"                              shift, and go to state 431
    "$i"                              shift, and go to state 432
    "$v"                              shift, and go to state 433
    "$b"                              shift, and go to state 434
    "$a"                              shift, and go to state 435
    "$c"                              shift, and go to state 436
    "..."                             shift, and go to state 437
    "integer constant"                shift, and go to state 438
    "long integer constant"           shift, and go to state 439
    "unsigned integer constant"       shift, and go to state 440
    "unsigned long integer constant"  shift, and go to state 441
    "unsigned int8 constant"          shift, and go to state 442
    "floating point constant"         shift, and go to state 443
    "double constant"                 shift, and go to state 444
    "name"                            shift, and go to state 56
    "start of the string"             shift, and go to state 445
    "begin of code block"             shift, and go to state 446
    '-'                               shift, and go to state 447
    '+'                               shift, and go to state 448
    '*'                               shift, and go to state 449
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 450
    '!'                               shift, and go to state 451
    '['                               shift, and go to state 452
    '('                               shift, and go to state 453
    '$'                               shift, and go to state 454
    '@'                               shift, and go to state 455

    string_builder          go to state 456
    expr_reader             go to state 457
    expr_call_pipe          go to state 458
    name_in_namespace       go to state 459
    expr_new                go to state 460
    expr_cast               go to state 461
    expr_type_decl          go to state 462
    expr_type_info          go to state 463
    block_or_lambda         go to state 464
    expr_full_block         go to state 465
    expr_numeric_const      go to state 466
    expr_named_call         go to state 467
    expr_method_call        go to state 468
    func_addr_expr          go to state 469
    expr_field              go to state 470
    expr_call               go to state 471
    expr                    go to state 865
    expr_mtag               go to state 473
    basic_type_declaration  go to state 474
    make_decl               go to state 475
    make_struct_decl        go to state 476
    make_tuple_call         go to state 477
    make_dim_decl           go to state 478
    make_table_decl         go to state 479
    array_comprehension     go to state 480


State 663

  393 expr: expr "^^" . expr

    "struct"                          shift, and go to state 408
    "class"                           shift, and go to state 409
    "true"                            shift, and go to state 410
    "false"                           shift, and go to state 411
    "new"                             shift, and go to state 412
    "typeinfo"                        shift, and go to state 413
    "type"                            shift, and go to state 414
    "array"                           shift, and go to state 415
    "null"                            shift, and go to state 416
    "table"                           shift, and go to state 417
    "deref"                           shift, and go to state 418
    "cast"                            shift, and go to state 419
    "upcast"                          shift, and go to state 420
    "addr"                            shift, and go to state 421
    "reinterpret"                     shift, and go to state 422
    "fixed_array"                     shift, and go to state 423
    "default"                         shift, and go to state 424
    "bool"                            shift, and go to state 222
    "void"                            shift, and go to state 223
    "string"                          shift, and go to state 224
    "int"                             shift, and go to state 226
    "int2"                            shift, and go to state 227
    "int3"                            shift, and go to state 228
    "int4"                            shift, and go to state 229
    "uint"                            shift, and go to state 230
    "bitfield"                        shift, and go to state 425
    "uint2"                           shift, and go to state 232
    "uint3"                           shift, and go to state 233
    "uint4"                           shift, and go to state 234
    "float"                           shift, and go to state 235
    "float2"                          shift, and go to state 236
    "float3"                          shift, and go to state 237
    "float4"                          shift, and go to state 238
    "range"                           shift, and go to state 239
    "urange"                          shift, and go to state 240
    "range64"                         shift, and go to state 241
    "urange64"                        shift, and go to state 242
    "int64"                           shift, and go to state 244
    "uint64"                          shift, and go to state 245
    "double"                          shift, and go to state 246
    "int8"                            shift, and go to state 249
    "uint8"                           shift, and go to state 250
    "int16"                           shift, and go to state 251
    "uint16"                          shift, and go to state 252
    "tuple"                           shift, and go to state 426
    "variant"                         shift, and go to state 427
    "generator"                       shift, and go to state 428
    "++"                              shift, and go to state 429
    "--"                              shift, and go to state 430
    "::"                              shift, and go to state 55
    "$$"                              shift, and go to state 431
    "$i"                              shift, and go to state 432
    "$v"                              shift, and go to state 433
    "$b"                              shift, and go to state 434
    "$a"                              shift, and go to state 435
    "$c"                              shift, and go to state 436
    "..."                             shift, and go to state 437
    "integer constant"                shift, and go to state 438
    "long integer constant"           shift, and go to state 439
    "unsigned integer constant"       shift, and go to state 440
    "unsigned long integer constant"  shift, and go to state 441
    "unsigned int8 constant"          shift, and go to state 442
    "floating point constant"         shift, and go to state 443
    "double constant"                 shift, and go to state 444
    "name"                            shift, and go to state 56
    "start of the string"             shift, and go to state 445
    "begin of code block"             shift, and go to state 446
    '-'                               shift, and go to state 447
    '+'                               shift, and go to state 448
    '*'                               shift, and go to state 449
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 450
    '!'                               shift, and go to state 451
    '['                               shift, and go to state 452
    '('                               shift, and go to state 453
    '$'                               shift, and go to state 454
    '@'                               shift, and go to state 455

    string_builder          go to state 456
    expr_reader             go to state 457
    expr_call_pipe          go to state 458
    name_in_namespace       go to state 459
    expr_new                go to state 460
    expr_cast               go to state 461
    expr_type_decl          go to state 462
    expr_type_info          go to state 463
    block_or_lambda         go to state 464
    expr_full_block         go to state 465
    expr_numeric_const      go to state 466
    expr_named_call         go to state 467
    expr_method_call        go to state 468
    func_addr_expr          go to state 469
    expr_field              go to state 470
    expr_call               go to state 471
    expr                    go to state 866
    expr_mtag               go to state 473
    basic_type_declaration  go to state 474
    make_decl               go to state 475
    make_struct_decl        go to state 476
    make_tuple_call         go to state 477
    make_dim_decl           go to state 478
    make_table_decl         go to state 479
    array_comprehension     go to state 480


State 664

  394 expr: expr ".." . expr

    "struct"                          shift, and go to state 408
    "class"                           shift, and go to state 409
    "true"                            shift, and go to state 410
    "false"                           shift, and go to state 411
    "new"                             shift, and go to state 412
    "typeinfo"                        shift, and go to state 413
    "type"                            shift, and go to state 414
    "array"                           shift, and go to state 415
    "null"                            shift, and go to state 416
    "table"                           shift, and go to state 417
    "deref"                           shift, and go to state 418
    "cast"                            shift, and go to state 419
    "upcast"                          shift, and go to state 420
    "addr"                            shift, and go to state 421
    "reinterpret"                     shift, and go to state 422
    "fixed_array"                     shift, and go to state 423
    "default"                         shift, and go to state 424
    "bool"                            shift, and go to state 222
    "void"                            shift, and go to state 223
    "string"                          shift, and go to state 224
    "int"                             shift, and go to state 226
    "int2"                            shift, and go to state 227
    "int3"                            shift, and go to state 228
    "int4"                            shift, and go to state 229
    "uint"                            shift, and go to state 230
    "bitfield"                        shift, and go to state 425
    "uint2"                           shift, and go to state 232
    "uint3"                           shift, and go to state 233
    "uint4"                           shift, and go to state 234
    "float"                           shift, and go to state 235
    "float2"                          shift, and go to state 236
    "float3"                          shift, and go to state 237
    "float4"                          shift, and go to state 238
    "range"                           shift, and go to state 239
    "urange"                          shift, and go to state 240
    "range64"                         shift, and go to state 241
    "urange64"                        shift, and go to state 242
    "int64"                           shift, and go to state 244
    "uint64"                          shift, and go to state 245
    "double"                          shift, and go to state 246
    "int8"                            shift, and go to state 249
    "uint8"                           shift, and go to state 250
    "int16"                           shift, and go to state 251
    "uint16"                          shift, and go to state 252
    "tuple"                           shift, and go to state 426
    "variant"                         shift, and go to state 427
    "generator"                       shift, and go to state 428
    "++"                              shift, and go to state 429
    "--"                              shift, and go to state 430
    "::"                              shift, and go to state 55
    "$$"                              shift, and go to state 431
    "$i"                              shift, and go to state 432
    "$v"                              shift, and go to state 433
    "$b"                              shift, and go to state 434
    "$a"                              shift, and go to state 435
    "$c"                              shift, and go to state 436
    "..."                             shift, and go to state 437
    "integer constant"                shift, and go to state 438
    "long integer constant"           shift, and go to state 439
    "unsigned integer constant"       shift, and go to state 440
    "unsigned long integer constant"  shift, and go to state 441
    "unsigned int8 constant"          shift, and go to state 442
    "floating point constant"         shift, and go to state 443
    "double constant"                 shift, and go to state 444
    "name"                            shift, and go to state 56
    "start of the string"             shift, and go to state 445
    "begin of code block"             shift, and go to state 446
    '-'                               shift, and go to state 447
    '+'                               shift, and go to state 448
    '*'                               shift, and go to state 449
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 450
    '!'                               shift, and go to state 451
    '['                               shift, and go to state 452
    '('                               shift, and go to state 453
    '$'                               shift, and go to state 454
    '@'                               shift, and go to state 455

    string_builder          go to state 456
    expr_reader             go to state 457
    expr_call_pipe          go to state 458
    name_in_namespace       go to state 459
    expr_new                go to state 460
    expr_cast               go to state 461
    expr_type_decl          go to state 462
    expr_type_info          go to state 463
    block_or_lambda         go to state 464
    expr_full_block         go to state 465
    expr_numeric_const      go to state 466
    expr_named_call         go to state 467
    expr_method_call        go to state 468
    func_addr_expr          go to state 469
    expr_field              go to state 470
    expr_call               go to state 471
    expr                    go to state 867
    expr_mtag               go to state 473
    basic_type_declaration  go to state 474
    make_decl               go to state 475
    make_struct_decl        go to state 476
    make_tuple_call         go to state 477
    make_dim_decl           go to state 478
    make_table_decl         go to state 479
    array_comprehension     go to state 480


State 665

  414 expr: expr '?' . expr ':' expr
  425     | expr '?' . "as" "name"
  428     | expr '?' . "as" "type" '<' $@23 type_declaration '>' $@24
  429     | expr '?' . "as" basic_type_declaration
  454 expr_mtag: expr '?' . "as" "$f" '(' expr ')'

    "struct"                          shift, and go to state 408
    "class"                           shift, and go to state 409
    "true"                            shift, and go to state 410
    "false"                           shift, and go to state 411
    "new"                             shift, and go to state 412
    "typeinfo"                        shift, and go to state 413
    "type"                            shift, and go to state 414
    "as"                              shift, and go to state 868
    "array"                           shift, and go to state 415
    "null"                            shift, and go to state 416
    "table"                           shift, and go to state 417
    "deref"                           shift, and go to state 418
    "cast"                            shift, and go to state 419
    "upcast"                          shift, and go to state 420
    "addr"                            shift, and go to state 421
    "reinterpret"                     shift, and go to state 422
    "fixed_array"                     shift, and go to state 423
    "default"                         shift, and go to state 424
    "bool"                            shift, and go to state 222
    "void"                            shift, and go to state 223
    "string"                          shift, and go to state 224
    "int"                             shift, and go to state 226
    "int2"                            shift, and go to state 227
    "int3"                            shift, and go to state 228
    "int4"                            shift, and go to state 229
    "uint"                            shift, and go to state 230
    "bitfield"                        shift, and go to state 425
    "uint2"                           shift, and go to state 232
    "uint3"                           shift, and go to state 233
    "uint4"                           shift, and go to state 234
    "float"                           shift, and go to state 235
    "float2"                          shift, and go to state 236
    "float3"                          shift, and go to state 237
    "float4"                          shift, and go to state 238
    "range"                           shift, and go to state 239
    "urange"                          shift, and go to state 240
    "range64"                         shift, and go to state 241
    "urange64"                        shift, and go to state 242
    "int64"                           shift, and go to state 244
    "uint64"                          shift, and go to state 245
    "double"                          shift, and go to state 246
    "int8"                            shift, and go to state 249
    "uint8"                           shift, and go to state 250
    "int16"                           shift, and go to state 251
    "uint16"                          shift, and go to state 252
    "tuple"                           shift, and go to state 426
    "variant"                         shift, and go to state 427
    "generator"                       shift, and go to state 428
    "++"                              shift, and go to state 429
    "--"                              shift, and go to state 430
    "::"                              shift, and go to state 55
    "$$"                              shift, and go to state 431
    "$i"                              shift, and go to state 432
    "$v"                              shift, and go to state 433
    "$b"                              shift, and go to state 434
    "$a"                              shift, and go to state 435
    "$c"                              shift, and go to state 436
    "..."                             shift, and go to state 437
    "integer constant"                shift, and go to state 438
    "long integer constant"           shift, and go to state 439
    "unsigned integer constant"       shift, and go to state 440
    "unsigned long integer constant"  shift, and go to state 441
    "unsigned int8 constant"          shift, and go to state 442
    "floating point constant"         shift, and go to state 443
    "double constant"                 shift, and go to state 444
    "name"                            shift, and go to state 56
    "start of the string"             shift, and go to state 445
    "begin of code block"             shift, and go to state 446
    '-'                               shift, and go to state 447
    '+'                               shift, and go to state 448
    '*'                               shift, and go to state 449
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 450
    '!'                               shift, and go to state 451
    '['                               shift, and go to state 452
    '('                               shift, and go to state 453
    '$'                               shift, and go to state 454
    '@'                               shift, and go to state 455

    string_builder          go to state 456
    expr_reader             go to state 457
    expr_call_pipe          go to state 458
    name_in_namespace       go to state 459
    expr_new                go to state 460
    expr_cast               go to state 461
    expr_type_decl          go to state 462
    expr_type_info          go to state 463
    block_or_lambda         go to state 464
    expr_full_block         go to state 465
    expr_numeric_const      go to state 466
    expr_named_call         go to state 467
    expr_method_call        go to state 468
    func_addr_expr          go to state 469
    expr_field              go to state 470
    expr_call               go to state 471
    expr                    go to state 869
    expr_mtag               go to state 473
    basic_type_declaration  go to state 474
    make_decl               go to state 475
    make_struct_decl        go to state 476
    make_tuple_call         go to state 477
    make_dim_decl           go to state 478
    make_table_decl         go to state 479
    array_comprehension     go to state 480


State 666

  389 expr: expr '|' . expr

    "struct"                          shift, and go to state 408
    "class"                           shift, and go to state 409
    "true"                            shift, and go to state 410
    "false"                           shift, and go to state 411
    "new"                             shift, and go to state 412
    "typeinfo"                        shift, and go to state 413
    "type"                            shift, and go to state 414
    "array"                           shift, and go to state 415
    "null"                            shift, and go to state 416
    "table"                           shift, and go to state 417
    "deref"                           shift, and go to state 418
    "cast"                            shift, and go to state 419
    "upcast"                          shift, and go to state 420
    "addr"                            shift, and go to state 421
    "reinterpret"                     shift, and go to state 422
    "fixed_array"                     shift, and go to state 423
    "default"                         shift, and go to state 424
    "bool"                            shift, and go to state 222
    "void"                            shift, and go to state 223
    "string"                          shift, and go to state 224
    "int"                             shift, and go to state 226
    "int2"                            shift, and go to state 227
    "int3"                            shift, and go to state 228
    "int4"                            shift, and go to state 229
    "uint"                            shift, and go to state 230
    "bitfield"                        shift, and go to state 425
    "uint2"                           shift, and go to state 232
    "uint3"                           shift, and go to state 233
    "uint4"                           shift, and go to state 234
    "float"                           shift, and go to state 235
    "float2"                          shift, and go to state 236
    "float3"                          shift, and go to state 237
    "float4"                          shift, and go to state 238
    "range"                           shift, and go to state 239
    "urange"                          shift, and go to state 240
    "range64"                         shift, and go to state 241
    "urange64"                        shift, and go to state 242
    "int64"                           shift, and go to state 244
    "uint64"                          shift, and go to state 245
    "double"                          shift, and go to state 246
    "int8"                            shift, and go to state 249
    "uint8"                           shift, and go to state 250
    "int16"                           shift, and go to state 251
    "uint16"                          shift, and go to state 252
    "tuple"                           shift, and go to state 426
    "variant"                         shift, and go to state 427
    "generator"                       shift, and go to state 428
    "++"                              shift, and go to state 429
    "--"                              shift, and go to state 430
    "::"                              shift, and go to state 55
    "$$"                              shift, and go to state 431
    "$i"                              shift, and go to state 432
    "$v"                              shift, and go to state 433
    "$b"                              shift, and go to state 434
    "$a"                              shift, and go to state 435
    "$c"                              shift, and go to state 436
    "..."                             shift, and go to state 437
    "integer constant"                shift, and go to state 438
    "long integer constant"           shift, and go to state 439
    "unsigned integer constant"       shift, and go to state 440
    "unsigned long integer constant"  shift, and go to state 441
    "unsigned int8 constant"          shift, and go to state 442
    "floating point constant"         shift, and go to state 443
    "double constant"                 shift, and go to state 444
    "name"                            shift, and go to state 56
    "start of the string"             shift, and go to state 445
    "begin of code block"             shift, and go to state 446
    '-'                               shift, and go to state 447
    '+'                               shift, and go to state 448
    '*'                               shift, and go to state 449
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 450
    '!'                               shift, and go to state 451
    '['                               shift, and go to state 452
    '('                               shift, and go to state 453
    '$'                               shift, and go to state 454
    '@'                               shift, and go to state 455

    string_builder          go to state 456
    expr_reader             go to state 457
    expr_call_pipe          go to state 458
    name_in_namespace       go to state 459
    expr_new                go to state 460
    expr_cast               go to state 461
    expr_type_decl          go to state 462
    expr_type_info          go to state 463
    block_or_lambda         go to state 464
    expr_full_block         go to state 465
    expr_numeric_const      go to state 466
    expr_named_call         go to state 467
    expr_method_call        go to state 468
    func_addr_expr          go to state 469
    expr_field              go to state 470
    expr_call               go to state 471
    expr                    go to state 870
    expr_mtag               go to state 473
    basic_type_declaration  go to state 474
    make_decl               go to state 475
    make_struct_decl        go to state 476
    make_tuple_call         go to state 477
    make_dim_decl           go to state 478
    make_table_decl         go to state 479
    array_comprehension     go to state 480


State 667

  390 expr: expr '^' . expr

    "struct"                          shift, and go to state 408
    "class"                           shift, and go to state 409
    "true"                            shift, and go to state 410
    "false"                           shift, and go to state 411
    "new"                             shift, and go to state 412
    "typeinfo"                        shift, and go to state 413
    "type"                            shift, and go to state 414
    "array"                           shift, and go to state 415
    "null"                            shift, and go to state 416
    "table"                           shift, and go to state 417
    "deref"                           shift, and go to state 418
    "cast"                            shift, and go to state 419
    "upcast"                          shift, and go to state 420
    "addr"                            shift, and go to state 421
    "reinterpret"                     shift, and go to state 422
    "fixed_array"                     shift, and go to state 423
    "default"                         shift, and go to state 424
    "bool"                            shift, and go to state 222
    "void"                            shift, and go to state 223
    "string"                          shift, and go to state 224
    "int"                             shift, and go to state 226
    "int2"                            shift, and go to state 227
    "int3"                            shift, and go to state 228
    "int4"                            shift, and go to state 229
    "uint"                            shift, and go to state 230
    "bitfield"                        shift, and go to state 425
    "uint2"                           shift, and go to state 232
    "uint3"                           shift, and go to state 233
    "uint4"                           shift, and go to state 234
    "float"                           shift, and go to state 235
    "float2"                          shift, and go to state 236
    "float3"                          shift, and go to state 237
    "float4"                          shift, and go to state 238
    "range"                           shift, and go to state 239
    "urange"                          shift, and go to state 240
    "range64"                         shift, and go to state 241
    "urange64"                        shift, and go to state 242
    "int64"                           shift, and go to state 244
    "uint64"                          shift, and go to state 245
    "double"                          shift, and go to state 246
    "int8"                            shift, and go to state 249
    "uint8"                           shift, and go to state 250
    "int16"                           shift, and go to state 251
    "uint16"                          shift, and go to state 252
    "tuple"                           shift, and go to state 426
    "variant"                         shift, and go to state 427
    "generator"                       shift, and go to state 428
    "++"                              shift, and go to state 429
    "--"                              shift, and go to state 430
    "::"                              shift, and go to state 55
    "$$"                              shift, and go to state 431
    "$i"                              shift, and go to state 432
    "$v"                              shift, and go to state 433
    "$b"                              shift, and go to state 434
    "$a"                              shift, and go to state 435
    "$c"                              shift, and go to state 436
    "..."                             shift, and go to state 437
    "integer constant"                shift, and go to state 438
    "long integer constant"           shift, and go to state 439
    "unsigned integer constant"       shift, and go to state 440
    "unsigned long integer constant"  shift, and go to state 441
    "unsigned int8 constant"          shift, and go to state 442
    "floating point constant"         shift, and go to state 443
    "double constant"                 shift, and go to state 444
    "name"                            shift, and go to state 56
    "start of the string"             shift, and go to state 445
    "begin of code block"             shift, and go to state 446
    '-'                               shift, and go to state 447
    '+'                               shift, and go to state 448
    '*'                               shift, and go to state 449
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 450
    '!'                               shift, and go to state 451
    '['                               shift, and go to state 452
    '('                               shift, and go to state 453
    '$'                               shift, and go to state 454
    '@'                               shift, and go to state 455

    string_builder          go to state 456
    expr_reader             go to state 457
    expr_call_pipe          go to state 458
    name_in_namespace       go to state 459
    expr_new                go to state 460
    expr_cast               go to state 461
    expr_type_decl          go to state 462
    expr_type_info          go to state 463
    block_or_lambda         go to state 464
    expr_full_block         go to state 465
    expr_numeric_const      go to state 466
    expr_named_call         go to state 467
    expr_method_call        go to state 468
    func_addr_expr          go to state 469
    expr_field              go to state 470
    expr_call               go to state 471
    expr                    go to state 871
    expr_mtag               go to state 473
    basic_type_declaration  go to state 474
    make_decl               go to state 475
    make_struct_decl        go to state 476
    make_tuple_call         go to state 477
    make_dim_decl           go to state 478
    make_table_decl         go to state 479
    array_comprehension     go to state 480


State 668

  388 expr: expr '&' . expr

    "struct"                          shift, and go to state 408
    "class"                           shift, and go to state 409
    "true"                            shift, and go to state 410
    "false"                           shift, and go to state 411
    "new"                             shift, and go to state 412
    "typeinfo"                        shift, and go to state 413
    "type"                            shift, and go to state 414
    "array"                           shift, and go to state 415
    "null"                            shift, and go to state 416
    "table"                           shift, and go to state 417
    "deref"                           shift, and go to state 418
    "cast"                            shift, and go to state 419
    "upcast"                          shift, and go to state 420
    "addr"                            shift, and go to state 421
    "reinterpret"                     shift, and go to state 422
    "fixed_array"                     shift, and go to state 423
    "default"                         shift, and go to state 424
    "bool"                            shift, and go to state 222
    "void"                            shift, and go to state 223
    "string"                          shift, and go to state 224
    "int"                             shift, and go to state 226
    "int2"                            shift, and go to state 227
    "int3"                            shift, and go to state 228
    "int4"                            shift, and go to state 229
    "uint"                            shift, and go to state 230
    "bitfield"                        shift, and go to state 425
    "uint2"                           shift, and go to state 232
    "uint3"                           shift, and go to state 233
    "uint4"                           shift, and go to state 234
    "float"                           shift, and go to state 235
    "float2"                          shift, and go to state 236
    "float3"                          shift, and go to state 237
    "float4"                          shift, and go to state 238
    "range"                           shift, and go to state 239
    "urange"                          shift, and go to state 240
    "range64"                         shift, and go to state 241
    "urange64"                        shift, and go to state 242
    "int64"                           shift, and go to state 244
    "uint64"                          shift, and go to state 245
    "double"                          shift, and go to state 246
    "int8"                            shift, and go to state 249
    "uint8"                           shift, and go to state 250
    "int16"                           shift, and go to state 251
    "uint16"                          shift, and go to state 252
    "tuple"                           shift, and go to state 426
    "variant"                         shift, and go to state 427
    "generator"                       shift, and go to state 428
    "++"                              shift, and go to state 429
    "--"                              shift, and go to state 430
    "::"                              shift, and go to state 55
    "$$"                              shift, and go to state 431
    "$i"                              shift, and go to state 432
    "$v"                              shift, and go to state 433
    "$b"                              shift, and go to state 434
    "$a"                              shift, and go to state 435
    "$c"                              shift, and go to state 436
    "..."                             shift, and go to state 437
    "integer constant"                shift, and go to state 438
    "long integer constant"           shift, and go to state 439
    "unsigned integer constant"       shift, and go to state 440
    "unsigned long integer constant"  shift, and go to state 441
    "unsigned int8 constant"          shift, and go to state 442
    "floating point constant"         shift, and go to state 443
    "double constant"                 shift, and go to state 444
    "name"                            shift, and go to state 56
    "start of the string"             shift, and go to state 445
    "begin of code block"             shift, and go to state 446
    '-'                               shift, and go to state 447
    '+'                               shift, and go to state 448
    '*'                               shift, and go to state 449
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 450
    '!'                               shift, and go to state 451
    '['                               shift, and go to state 452
    '('                               shift, and go to state 453
    '$'                               shift, and go to state 454
    '@'                               shift, and go to state 455

    string_builder          go to state 456
    expr_reader             go to state 457
    expr_call_pipe          go to state 458
    name_in_namespace       go to state 459
    expr_new                go to state 460
    expr_cast               go to state 461
    expr_type_decl          go to state 462
    expr_type_info          go to state 463
    block_or_lambda         go to state 464
    expr_full_block         go to state 465
    expr_numeric_const      go to state 466
    expr_named_call         go to state 467
    expr_method_call        go to state 468
    func_addr_expr          go to state 469
    expr_field              go to state 470
    expr_call               go to state 471
    expr                    go to state 872
    expr_mtag               go to state 473
    basic_type_declaration  go to state 474
    make_decl               go to state 475
    make_struct_decl        go to state 476
    make_tuple_call         go to state 477
    make_dim_decl           go to state 478
    make_table_decl         go to state 479
    array_comprehension     go to state 480


State 669

  382 expr: expr '<' . expr

    "struct"                          shift, and go to state 408
    "class"                           shift, and go to state 409
    "true"                            shift, and go to state 410
    "false"                           shift, and go to state 411
    "new"                             shift, and go to state 412
    "typeinfo"                        shift, and go to state 413
    "type"                            shift, and go to state 414
    "array"                           shift, and go to state 415
    "null"                            shift, and go to state 416
    "table"                           shift, and go to state 417
    "deref"                           shift, and go to state 418
    "cast"                            shift, and go to state 419
    "upcast"                          shift, and go to state 420
    "addr"                            shift, and go to state 421
    "reinterpret"                     shift, and go to state 422
    "fixed_array"                     shift, and go to state 423
    "default"                         shift, and go to state 424
    "bool"                            shift, and go to state 222
    "void"                            shift, and go to state 223
    "string"                          shift, and go to state 224
    "int"                             shift, and go to state 226
    "int2"                            shift, and go to state 227
    "int3"                            shift, and go to state 228
    "int4"                            shift, and go to state 229
    "uint"                            shift, and go to state 230
    "bitfield"                        shift, and go to state 425
    "uint2"                           shift, and go to state 232
    "uint3"                           shift, and go to state 233
    "uint4"                           shift, and go to state 234
    "float"                           shift, and go to state 235
    "float2"                          shift, and go to state 236
    "float3"                          shift, and go to state 237
    "float4"                          shift, and go to state 238
    "range"                           shift, and go to state 239
    "urange"                          shift, and go to state 240
    "range64"                         shift, and go to state 241
    "urange64"                        shift, and go to state 242
    "int64"                           shift, and go to state 244
    "uint64"                          shift, and go to state 245
    "double"                          shift, and go to state 246
    "int8"                            shift, and go to state 249
    "uint8"                           shift, and go to state 250
    "int16"                           shift, and go to state 251
    "uint16"                          shift, and go to state 252
    "tuple"                           shift, and go to state 426
    "variant"                         shift, and go to state 427
    "generator"                       shift, and go to state 428
    "++"                              shift, and go to state 429
    "--"                              shift, and go to state 430
    "::"                              shift, and go to state 55
    "$$"                              shift, and go to state 431
    "$i"                              shift, and go to state 432
    "$v"                              shift, and go to state 433
    "$b"                              shift, and go to state 434
    "$a"                              shift, and go to state 435
    "$c"                              shift, and go to state 436
    "..."                             shift, and go to state 437
    "integer constant"                shift, and go to state 438
    "long integer constant"           shift, and go to state 439
    "unsigned integer constant"       shift, and go to state 440
    "unsigned long integer constant"  shift, and go to state 441
    "unsigned int8 constant"          shift, and go to state 442
    "floating point constant"         shift, and go to state 443
    "double constant"                 shift, and go to state 444
    "name"                            shift, and go to state 56
    "start of the string"             shift, and go to state 445
    "begin of code block"             shift, and go to state 446
    '-'                               shift, and go to state 447
    '+'                               shift, and go to state 448
    '*'                               shift, and go to state 449
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 450
    '!'                               shift, and go to state 451
    '['                               shift, and go to state 452
    '('                               shift, and go to state 453
    '$'                               shift, and go to state 454
    '@'                               shift, and go to state 455

    string_builder          go to state 456
    expr_reader             go to state 457
    expr_call_pipe          go to state 458
    name_in_namespace       go to state 459
    expr_new                go to state 460
    expr_cast               go to state 461
    expr_type_decl          go to state 462
    expr_type_info          go to state 463
    block_or_lambda         go to state 464
    expr_full_block         go to state 465
    expr_numeric_const      go to state 466
    expr_named_call         go to state 467
    expr_method_call        go to state 468
    func_addr_expr          go to state 469
    expr_field              go to state 470
    expr_call               go to state 471
    expr                    go to state 873
    expr_mtag               go to state 473
    basic_type_declaration  go to state 474
    make_decl               go to state 475
    make_struct_decl        go to state 476
    make_tuple_call         go to state 477
    make_dim_decl           go to state 478
    make_table_decl         go to state 479
    array_comprehension     go to state 480


State 670

  383 expr: expr '>' . expr

    "struct"                          shift, and go to state 408
    "class"                           shift, and go to state 409
    "true"                            shift, and go to state 410
    "false"                           shift, and go to state 411
    "new"                             shift, and go to state 412
    "typeinfo"                        shift, and go to state 413
    "type"                            shift, and go to state 414
    "array"                           shift, and go to state 415
    "null"                            shift, and go to state 416
    "table"                           shift, and go to state 417
    "deref"                           shift, and go to state 418
    "cast"                            shift, and go to state 419
    "upcast"                          shift, and go to state 420
    "addr"                            shift, and go to state 421
    "reinterpret"                     shift, and go to state 422
    "fixed_array"                     shift, and go to state 423
    "default"                         shift, and go to state 424
    "bool"                            shift, and go to state 222
    "void"                            shift, and go to state 223
    "string"                          shift, and go to state 224
    "int"                             shift, and go to state 226
    "int2"                            shift, and go to state 227
    "int3"                            shift, and go to state 228
    "int4"                            shift, and go to state 229
    "uint"                            shift, and go to state 230
    "bitfield"                        shift, and go to state 425
    "uint2"                           shift, and go to state 232
    "uint3"                           shift, and go to state 233
    "uint4"                           shift, and go to state 234
    "float"                           shift, and go to state 235
    "float2"                          shift, and go to state 236
    "float3"                          shift, and go to state 237
    "float4"                          shift, and go to state 238
    "range"                           shift, and go to state 239
    "urange"                          shift, and go to state 240
    "range64"                         shift, and go to state 241
    "urange64"                        shift, and go to state 242
    "int64"                           shift, and go to state 244
    "uint64"                          shift, and go to state 245
    "double"                          shift, and go to state 246
    "int8"                            shift, and go to state 249
    "uint8"                           shift, and go to state 250
    "int16"                           shift, and go to state 251
    "uint16"                          shift, and go to state 252
    "tuple"                           shift, and go to state 426
    "variant"                         shift, and go to state 427
    "generator"                       shift, and go to state 428
    "++"                              shift, and go to state 429
    "--"                              shift, and go to state 430
    "::"                              shift, and go to state 55
    "$$"                              shift, and go to state 431
    "$i"                              shift, and go to state 432
    "$v"                              shift, and go to state 433
    "$b"                              shift, and go to state 434
    "$a"                              shift, and go to state 435
    "$c"                              shift, and go to state 436
    "..."                             shift, and go to state 437
    "integer constant"                shift, and go to state 438
    "long integer constant"           shift, and go to state 439
    "unsigned integer constant"       shift, and go to state 440
    "unsigned long integer constant"  shift, and go to state 441
    "unsigned int8 constant"          shift, and go to state 442
    "floating point constant"         shift, and go to state 443
    "double constant"                 shift, and go to state 444
    "name"                            shift, and go to state 56
    "start of the string"             shift, and go to state 445
    "begin of code block"             shift, and go to state 446
    '-'                               shift, and go to state 447
    '+'                               shift, and go to state 448
    '*'                               shift, and go to state 449
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 450
    '!'                               shift, and go to state 451
    '['                               shift, and go to state 452
    '('                               shift, and go to state 453
    '$'                               shift, and go to state 454
    '@'                               shift, and go to state 455

    string_builder          go to state 456
    expr_reader             go to state 457
    expr_call_pipe          go to state 458
    name_in_namespace       go to state 459
    expr_new                go to state 460
    expr_cast               go to state 461
    expr_type_decl          go to state 462
    expr_type_info          go to state 463
    block_or_lambda         go to state 464
    expr_full_block         go to state 465
    expr_numeric_const      go to state 466
    expr_named_call         go to state 467
    expr_method_call        go to state 468
    func_addr_expr          go to state 469
    expr_field              go to state 470
    expr_call               go to state 471
    expr                    go to state 874
    expr_mtag               go to state 473
    basic_type_declaration  go to state 474
    make_decl               go to state 475
    make_struct_decl        go to state 476
    make_tuple_call         go to state 477
    make_dim_decl           go to state 478
    make_table_decl         go to state 479
    array_comprehension     go to state 480


State 671

  378 expr: expr '-' . expr

    "struct"                          shift, and go to state 408
    "class"                           shift, and go to state 409
    "true"                            shift, and go to state 410
    "false"                           shift, and go to state 411
    "new"                             shift, and go to state 412
    "typeinfo"                        shift, and go to state 413
    "type"                            shift, and go to state 414
    "array"                           shift, and go to state 415
    "null"                            shift, and go to state 416
    "table"                           shift, and go to state 417
    "deref"                           shift, and go to state 418
    "cast"                            shift, and go to state 419
    "upcast"                          shift, and go to state 420
    "addr"                            shift, and go to state 421
    "reinterpret"                     shift, and go to state 422
    "fixed_array"                     shift, and go to state 423
    "default"                         shift, and go to state 424
    "bool"                            shift, and go to state 222
    "void"                            shift, and go to state 223
    "string"                          shift, and go to state 224
    "int"                             shift, and go to state 226
    "int2"                            shift, and go to state 227
    "int3"                            shift, and go to state 228
    "int4"                            shift, and go to state 229
    "uint"                            shift, and go to state 230
    "bitfield"                        shift, and go to state 425
    "uint2"                           shift, and go to state 232
    "uint3"                           shift, and go to state 233
    "uint4"                           shift, and go to state 234
    "float"                           shift, and go to state 235
    "float2"                          shift, and go to state 236
    "float3"                          shift, and go to state 237
    "float4"                          shift, and go to state 238
    "range"                           shift, and go to state 239
    "urange"                          shift, and go to state 240
    "range64"                         shift, and go to state 241
    "urange64"                        shift, and go to state 242
    "int64"                           shift, and go to state 244
    "uint64"                          shift, and go to state 245
    "double"                          shift, and go to state 246
    "int8"                            shift, and go to state 249
    "uint8"                           shift, and go to state 250
    "int16"                           shift, and go to state 251
    "uint16"                          shift, and go to state 252
    "tuple"                           shift, and go to state 426
    "variant"                         shift, and go to state 427
    "generator"                       shift, and go to state 428
    "++"                              shift, and go to state 429
    "--"                              shift, and go to state 430
    "::"                              shift, and go to state 55
    "$$"                              shift, and go to state 431
    "$i"                              shift, and go to state 432
    "$v"                              shift, and go to state 433
    "$b"                              shift, and go to state 434
    "$a"                              shift, and go to state 435
    "$c"                              shift, and go to state 436
    "..."                             shift, and go to state 437
    "integer constant"                shift, and go to state 438
    "long integer constant"           shift, and go to state 439
    "unsigned integer constant"       shift, and go to state 440
    "unsigned long integer constant"  shift, and go to state 441
    "unsigned int8 constant"          shift, and go to state 442
    "floating point constant"         shift, and go to state 443
    "double constant"                 shift, and go to state 444
    "name"                            shift, and go to state 56
    "start of the string"             shift, and go to state 445
    "begin of code block"             shift, and go to state 446
    '-'                               shift, and go to state 447
    '+'                               shift, and go to state 448
    '*'                               shift, and go to state 449
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 450
    '!'                               shift, and go to state 451
    '['                               shift, and go to state 452
    '('                               shift, and go to state 453
    '$'                               shift, and go to state 454
    '@'                               shift, and go to state 455

    string_builder          go to state 456
    expr_reader             go to state 457
    expr_call_pipe          go to state 458
    name_in_namespace       go to state 459
    expr_new                go to state 460
    expr_cast               go to state 461
    expr_type_decl          go to state 462
    expr_type_info          go to state 463
    block_or_lambda         go to state 464
    expr_full_block         go to state 465
    expr_numeric_const      go to state 466
    expr_named_call         go to state 467
    expr_method_call        go to state 468
    func_addr_expr          go to state 469
    expr_field              go to state 470
    expr_call               go to state 471
    expr                    go to state 875
    expr_mtag               go to state 473
    basic_type_declaration  go to state 474
    make_decl               go to state 475
    make_struct_decl        go to state 476
    make_tuple_call         go to state 477
    make_dim_decl           go to state 478
    make_table_decl         go to state 479
    array_comprehension     go to state 480


State 672

  377 expr: expr '+' . expr

    "struct"                          shift, and go to state 408
    "class"                           shift, and go to state 409
    "true"                            shift, and go to state 410
    "false"                           shift, and go to state 411
    "new"                             shift, and go to state 412
    "typeinfo"                        shift, and go to state 413
    "type"                            shift, and go to state 414
    "array"                           shift, and go to state 415
    "null"                            shift, and go to state 416
    "table"                           shift, and go to state 417
    "deref"                           shift, and go to state 418
    "cast"                            shift, and go to state 419
    "upcast"                          shift, and go to state 420
    "addr"                            shift, and go to state 421
    "reinterpret"                     shift, and go to state 422
    "fixed_array"                     shift, and go to state 423
    "default"                         shift, and go to state 424
    "bool"                            shift, and go to state 222
    "void"                            shift, and go to state 223
    "string"                          shift, and go to state 224
    "int"                             shift, and go to state 226
    "int2"                            shift, and go to state 227
    "int3"                            shift, and go to state 228
    "int4"                            shift, and go to state 229
    "uint"                            shift, and go to state 230
    "bitfield"                        shift, and go to state 425
    "uint2"                           shift, and go to state 232
    "uint3"                           shift, and go to state 233
    "uint4"                           shift, and go to state 234
    "float"                           shift, and go to state 235
    "float2"                          shift, and go to state 236
    "float3"                          shift, and go to state 237
    "float4"                          shift, and go to state 238
    "range"                           shift, and go to state 239
    "urange"                          shift, and go to state 240
    "range64"                         shift, and go to state 241
    "urange64"                        shift, and go to state 242
    "int64"                           shift, and go to state 244
    "uint64"                          shift, and go to state 245
    "double"                          shift, and go to state 246
    "int8"                            shift, and go to state 249
    "uint8"                           shift, and go to state 250
    "int16"                           shift, and go to state 251
    "uint16"                          shift, and go to state 252
    "tuple"                           shift, and go to state 426
    "variant"                         shift, and go to state 427
    "generator"                       shift, and go to state 428
    "++"                              shift, and go to state 429
    "--"                              shift, and go to state 430
    "::"                              shift, and go to state 55
    "$$"                              shift, and go to state 431
    "$i"                              shift, and go to state 432
    "$v"                              shift, and go to state 433
    "$b"                              shift, and go to state 434
    "$a"                              shift, and go to state 435
    "$c"                              shift, and go to state 436
    "..."                             shift, and go to state 437
    "integer constant"                shift, and go to state 438
    "long integer constant"           shift, and go to state 439
    "unsigned integer constant"       shift, and go to state 440
    "unsigned long integer constant"  shift, and go to state 441
    "unsigned int8 constant"          shift, and go to state 442
    "floating point constant"         shift, and go to state 443
    "double constant"                 shift, and go to state 444
    "name"                            shift, and go to state 56
    "start of the string"             shift, and go to state 445
    "begin of code block"             shift, and go to state 446
    '-'                               shift, and go to state 447
    '+'                               shift, and go to state 448
    '*'                               shift, and go to state 449
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 450
    '!'                               shift, and go to state 451
    '['                               shift, and go to state 452
    '('                               shift, and go to state 453
    '$'                               shift, and go to state 454
    '@'                               shift, and go to state 455

    string_builder          go to state 456
    expr_reader             go to state 457
    expr_call_pipe          go to state 458
    name_in_namespace       go to state 459
    expr_new                go to state 460
    expr_cast               go to state 461
    expr_type_decl          go to state 462
    expr_type_info          go to state 463
    block_or_lambda         go to state 464
    expr_full_block         go to state 465
    expr_numeric_const      go to state 466
    expr_named_call         go to state 467
    expr_method_call        go to state 468
    func_addr_expr          go to state 469
    expr_field              go to state 470
    expr_call               go to state 471
    expr                    go to state 876
    expr_mtag               go to state 473
    basic_type_declaration  go to state 474
    make_decl               go to state 475
    make_struct_decl        go to state 476
    make_tuple_call         go to state 477
    make_dim_decl           go to state 478
    make_table_decl         go to state 479
    array_comprehension     go to state 480


State 673

  379 expr: expr '*' . expr

    "struct"                          shift, and go to state 408
    "class"                           shift, and go to state 409
    "true"                            shift, and go to state 410
    "false"                           shift, and go to state 411
    "new"                             shift, and go to state 412
    "typeinfo"                        shift, and go to state 413
    "type"                            shift, and go to state 414
    "array"                           shift, and go to state 415
    "null"                            shift, and go to state 416
    "table"                           shift, and go to state 417
    "deref"                           shift, and go to state 418
    "cast"                            shift, and go to state 419
    "upcast"                          shift, and go to state 420
    "addr"                            shift, and go to state 421
    "reinterpret"                     shift, and go to state 422
    "fixed_array"                     shift, and go to state 423
    "default"                         shift, and go to state 424
    "bool"                            shift, and go to state 222
    "void"                            shift, and go to state 223
    "string"                          shift, and go to state 224
    "int"                             shift, and go to state 226
    "int2"                            shift, and go to state 227
    "int3"                            shift, and go to state 228
    "int4"                            shift, and go to state 229
    "uint"                            shift, and go to state 230
    "bitfield"                        shift, and go to state 425
    "uint2"                           shift, and go to state 232
    "uint3"                           shift, and go to state 233
    "uint4"                           shift, and go to state 234
    "float"                           shift, and go to state 235
    "float2"                          shift, and go to state 236
    "float3"                          shift, and go to state 237
    "float4"                          shift, and go to state 238
    "range"                           shift, and go to state 239
    "urange"                          shift, and go to state 240
    "range64"                         shift, and go to state 241
    "urange64"                        shift, and go to state 242
    "int64"                           shift, and go to state 244
    "uint64"                          shift, and go to state 245
    "double"                          shift, and go to state 246
    "int8"                            shift, and go to state 249
    "uint8"                           shift, and go to state 250
    "int16"                           shift, and go to state 251
    "uint16"                          shift, and go to state 252
    "tuple"                           shift, and go to state 426
    "variant"                         shift, and go to state 427
    "generator"                       shift, and go to state 428
    "++"                              shift, and go to state 429
    "--"                              shift, and go to state 430
    "::"                              shift, and go to state 55
    "$$"                              shift, and go to state 431
    "$i"                              shift, and go to state 432
    "$v"                              shift, and go to state 433
    "$b"                              shift, and go to state 434
    "$a"                              shift, and go to state 435
    "$c"                              shift, and go to state 436
    "..."                             shift, and go to state 437
    "integer constant"                shift, and go to state 438
    "long integer constant"           shift, and go to state 439
    "unsigned integer constant"       shift, and go to state 440
    "unsigned long integer constant"  shift, and go to state 441
    "unsigned int8 constant"          shift, and go to state 442
    "floating point constant"         shift, and go to state 443
    "double constant"                 shift, and go to state 444
    "name"                            shift, and go to state 56
    "start of the string"             shift, and go to state 445
    "begin of code block"             shift, and go to state 446
    '-'                               shift, and go to state 447
    '+'                               shift, and go to state 448
    '*'                               shift, and go to state 449
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 450
    '!'                               shift, and go to state 451
    '['                               shift, and go to state 452
    '('                               shift, and go to state 453
    '$'                               shift, and go to state 454
    '@'                               shift, and go to state 455

    string_builder          go to state 456
    expr_reader             go to state 457
    expr_call_pipe          go to state 458
    name_in_namespace       go to state 459
    expr_new                go to state 460
    expr_cast               go to state 461
    expr_type_decl          go to state 462
    expr_type_info          go to state 463
    block_or_lambda         go to state 464
    expr_full_block         go to state 465
    expr_numeric_const      go to state 466
    expr_named_call         go to state 467
    expr_method_call        go to state 468
    func_addr_expr          go to state 469
    expr_field              go to state 470
    expr_call               go to state 471
    expr                    go to state 877
    expr_mtag               go to state 473
    basic_type_declaration  go to state 474
    make_decl               go to state 475
    make_struct_decl        go to state 476
    make_tuple_call         go to state 477
    make_dim_decl           go to state 478
    make_table_decl         go to state 479
    array_comprehension     go to state 480


State 674

  380 expr: expr '/' . expr

    "struct"                          shift, and go to state 408
    "class"                           shift, and go to state 409
    "true"                            shift, and go to state 410
    "false"                           shift, and go to state 411
    "new"                             shift, and go to state 412
    "typeinfo"                        shift, and go to state 413
    "type"                            shift, and go to state 414
    "array"                           shift, and go to state 415
    "null"                            shift, and go to state 416
    "table"                           shift, and go to state 417
    "deref"                           shift, and go to state 418
    "cast"                            shift, and go to state 419
    "upcast"                          shift, and go to state 420
    "addr"                            shift, and go to state 421
    "reinterpret"                     shift, and go to state 422
    "fixed_array"                     shift, and go to state 423
    "default"                         shift, and go to state 424
    "bool"                            shift, and go to state 222
    "void"                            shift, and go to state 223
    "string"                          shift, and go to state 224
    "int"                             shift, and go to state 226
    "int2"                            shift, and go to state 227
    "int3"                            shift, and go to state 228
    "int4"                            shift, and go to state 229
    "uint"                            shift, and go to state 230
    "bitfield"                        shift, and go to state 425
    "uint2"                           shift, and go to state 232
    "uint3"                           shift, and go to state 233
    "uint4"                           shift, and go to state 234
    "float"                           shift, and go to state 235
    "float2"                          shift, and go to state 236
    "float3"                          shift, and go to state 237
    "float4"                          shift, and go to state 238
    "range"                           shift, and go to state 239
    "urange"                          shift, and go to state 240
    "range64"                         shift, and go to state 241
    "urange64"                        shift, and go to state 242
    "int64"                           shift, and go to state 244
    "uint64"                          shift, and go to state 245
    "double"                          shift, and go to state 246
    "int8"                            shift, and go to state 249
    "uint8"                           shift, and go to state 250
    "int16"                           shift, and go to state 251
    "uint16"                          shift, and go to state 252
    "tuple"                           shift, and go to state 426
    "variant"                         shift, and go to state 427
    "generator"                       shift, and go to state 428
    "++"                              shift, and go to state 429
    "--"                              shift, and go to state 430
    "::"                              shift, and go to state 55
    "$$"                              shift, and go to state 431
    "$i"                              shift, and go to state 432
    "$v"                              shift, and go to state 433
    "$b"                              shift, and go to state 434
    "$a"                              shift, and go to state 435
    "$c"                              shift, and go to state 436
    "..."                             shift, and go to state 437
    "integer constant"                shift, and go to state 438
    "long integer constant"           shift, and go to state 439
    "unsigned integer constant"       shift, and go to state 440
    "unsigned long integer constant"  shift, and go to state 441
    "unsigned int8 constant"          shift, and go to state 442
    "floating point constant"         shift, and go to state 443
    "double constant"                 shift, and go to state 444
    "name"                            shift, and go to state 56
    "start of the string"             shift, and go to state 445
    "begin of code block"             shift, and go to state 446
    '-'                               shift, and go to state 447
    '+'                               shift, and go to state 448
    '*'                               shift, and go to state 449
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 450
    '!'                               shift, and go to state 451
    '['                               shift, and go to state 452
    '('                               shift, and go to state 453
    '$'                               shift, and go to state 454
    '@'                               shift, and go to state 455

    string_builder          go to state 456
    expr_reader             go to state 457
    expr_call_pipe          go to state 458
    name_in_namespace       go to state 459
    expr_new                go to state 460
    expr_cast               go to state 461
    expr_type_decl          go to state 462
    expr_type_info          go to state 463
    block_or_lambda         go to state 464
    expr_full_block         go to state 465
    expr_numeric_const      go to state 466
    expr_named_call         go to state 467
    expr_method_call        go to state 468
    func_addr_expr          go to state 469
    expr_field              go to state 470
    expr_call               go to state 471
    expr                    go to state 878
    expr_mtag               go to state 473
    basic_type_declaration  go to state 474
    make_decl               go to state 475
    make_struct_decl        go to state 476
    make_tuple_call         go to state 477
    make_dim_decl           go to state 478
    make_table_decl         go to state 479
    array_comprehension     go to state 480


State 675

  381 expr: expr '%' . expr

    "struct"                          shift, and go to state 408
    "class"                           shift, and go to state 409
    "true"                            shift, and go to state 410
    "false"                           shift, and go to state 411
    "new"                             shift, and go to state 412
    "typeinfo"                        shift, and go to state 413
    "type"                            shift, and go to state 414
    "array"                           shift, and go to state 415
    "null"                            shift, and go to state 416
    "table"                           shift, and go to state 417
    "deref"                           shift, and go to state 418
    "cast"                            shift, and go to state 419
    "upcast"                          shift, and go to state 420
    "addr"                            shift, and go to state 421
    "reinterpret"                     shift, and go to state 422
    "fixed_array"                     shift, and go to state 423
    "default"                         shift, and go to state 424
    "bool"                            shift, and go to state 222
    "void"                            shift, and go to state 223
    "string"                          shift, and go to state 224
    "int"                             shift, and go to state 226
    "int2"                            shift, and go to state 227
    "int3"                            shift, and go to state 228
    "int4"                            shift, and go to state 229
    "uint"                            shift, and go to state 230
    "bitfield"                        shift, and go to state 425
    "uint2"                           shift, and go to state 232
    "uint3"                           shift, and go to state 233
    "uint4"                           shift, and go to state 234
    "float"                           shift, and go to state 235
    "float2"                          shift, and go to state 236
    "float3"                          shift, and go to state 237
    "float4"                          shift, and go to state 238
    "range"                           shift, and go to state 239
    "urange"                          shift, and go to state 240
    "range64"                         shift, and go to state 241
    "urange64"                        shift, and go to state 242
    "int64"                           shift, and go to state 244
    "uint64"                          shift, and go to state 245
    "double"                          shift, and go to state 246
    "int8"                            shift, and go to state 249
    "uint8"                           shift, and go to state 250
    "int16"                           shift, and go to state 251
    "uint16"                          shift, and go to state 252
    "tuple"                           shift, and go to state 426
    "variant"                         shift, and go to state 427
    "generator"                       shift, and go to state 428
    "++"                              shift, and go to state 429
    "--"                              shift, and go to state 430
    "::"                              shift, and go to state 55
    "$$"                              shift, and go to state 431
    "$i"                              shift, and go to state 432
    "$v"                              shift, and go to state 433
    "$b"                              shift, and go to state 434
    "$a"                              shift, and go to state 435
    "$c"                              shift, and go to state 436
    "..."                             shift, and go to state 437
    "integer constant"                shift, and go to state 438
    "long integer constant"           shift, and go to state 439
    "unsigned integer constant"       shift, and go to state 440
    "unsigned long integer constant"  shift, and go to state 441
    "unsigned int8 constant"          shift, and go to state 442
    "floating point constant"         shift, and go to state 443
    "double constant"                 shift, and go to state 444
    "name"                            shift, and go to state 56
    "start of the string"             shift, and go to state 445
    "begin of code block"             shift, and go to state 446
    '-'                               shift, and go to state 447
    '+'                               shift, and go to state 448
    '*'                               shift, and go to state 449
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 450
    '!'                               shift, and go to state 451
    '['                               shift, and go to state 452
    '('                               shift, and go to state 453
    '$'                               shift, and go to state 454
    '@'                               shift, and go to state 455

    string_builder          go to state 456
    expr_reader             go to state 457
    expr_call_pipe          go to state 458
    name_in_namespace       go to state 459
    expr_new                go to state 460
    expr_cast               go to state 461
    expr_type_decl          go to state 462
    expr_type_info          go to state 463
    block_or_lambda         go to state 464
    expr_full_block         go to state 465
    expr_numeric_const      go to state 466
    expr_named_call         go to state 467
    expr_method_call        go to state 468
    func_addr_expr          go to state 469
    expr_field              go to state 470
    expr_call               go to state 471
    expr                    go to state 879
    expr_mtag               go to state 473
    basic_type_declaration  go to state 474
    make_decl               go to state 475
    make_struct_decl        go to state 476
    make_tuple_call         go to state 477
    make_dim_decl           go to state 478
    make_table_decl         go to state 479
    array_comprehension     go to state 480


State 676

  347 expr_field: expr '.' . "name"
  348           | expr '.' . '.' "name"
  349           | expr '.' . "name" '(' ')'
  350           | expr '.' . "name" '(' expr_list ')'
  353           | expr '.' . $@17 error $@18
  401 expr: expr '.' . '[' expr ']'
  403     | expr '.' . "?[" expr ']'
  405     | expr '.' . "?." "name"
  449 expr_mtag: expr '.' . "$f" '(' expr ')'
  451          | expr '.' . '.' "$f" '(' expr ')'
  452          | expr '.' . "?." "$f" '(' expr ')'

    "?."    shift, and go to state 880
    "?["    shift, and go to state 881
    "$f"    shift, and go to state 882
    "name"  shift, and go to state 883
    '.'     shift, and go to state 884
    '['     shift, and go to state 885

    $default  reduce using rule 351 ($@17)

    $@17  go to state 886


State 677

  400 expr: expr '[' . expr ']'

    "struct"                          shift, and go to state 408
    "class"                           shift, and go to state 409
    "true"                            shift, and go to state 410
    "false"                           shift, and go to state 411
    "new"                             shift, and go to state 412
    "typeinfo"                        shift, and go to state 413
    "type"                            shift, and go to state 414
    "array"                           shift, and go to state 415
    "null"                            shift, and go to state 416
    "table"                           shift, and go to state 417
    "deref"                           shift, and go to state 418
    "cast"                            shift, and go to state 419
    "upcast"                          shift, and go to state 420
    "addr"                            shift, and go to state 421
    "reinterpret"                     shift, and go to state 422
    "fixed_array"                     shift, and go to state 423
    "default"                         shift, and go to state 424
    "bool"                            shift, and go to state 222
    "void"                            shift, and go to state 223
    "string"                          shift, and go to state 224
    "int"                             shift, and go to state 226
    "int2"                            shift, and go to state 227
    "int3"                            shift, and go to state 228
    "int4"                            shift, and go to state 229
    "uint"                            shift, and go to state 230
    "bitfield"                        shift, and go to state 425
    "uint2"                           shift, and go to state 232
    "uint3"                           shift, and go to state 233
    "uint4"                           shift, and go to state 234
    "float"                           shift, and go to state 235
    "float2"                          shift, and go to state 236
    "float3"                          shift, and go to state 237
    "float4"                          shift, and go to state 238
    "range"                           shift, and go to state 239
    "urange"                          shift, and go to state 240
    "range64"                         shift, and go to state 241
    "urange64"                        shift, and go to state 242
    "int64"                           shift, and go to state 244
    "uint64"                          shift, and go to state 245
    "double"                          shift, and go to state 246
    "int8"                            shift, and go to state 249
    "uint8"                           shift, and go to state 250
    "int16"                           shift, and go to state 251
    "uint16"                          shift, and go to state 252
    "tuple"                           shift, and go to state 426
    "variant"                         shift, and go to state 427
    "generator"                       shift, and go to state 428
    "++"                              shift, and go to state 429
    "--"                              shift, and go to state 430
    "::"                              shift, and go to state 55
    "$$"                              shift, and go to state 431
    "$i"                              shift, and go to state 432
    "$v"                              shift, and go to state 433
    "$b"                              shift, and go to state 434
    "$a"                              shift, and go to state 435
    "$c"                              shift, and go to state 436
    "..."                             shift, and go to state 437
    "integer constant"                shift, and go to state 438
    "long integer constant"           shift, and go to state 439
    "unsigned integer constant"       shift, and go to state 440
    "unsigned long integer constant"  shift, and go to state 441
    "unsigned int8 constant"          shift, and go to state 442
    "floating point constant"         shift, and go to state 443
    "double constant"                 shift, and go to state 444
    "name"                            shift, and go to state 56
    "start of the string"             shift, and go to state 445
    "begin of code block"             shift, and go to state 446
    '-'                               shift, and go to state 447
    '+'                               shift, and go to state 448
    '*'                               shift, and go to state 449
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 450
    '!'                               shift, and go to state 451
    '['                               shift, and go to state 452
    '('                               shift, and go to state 453
    '$'                               shift, and go to state 454
    '@'                               shift, and go to state 455

    string_builder          go to state 456
    expr_reader             go to state 457
    expr_call_pipe          go to state 458
    name_in_namespace       go to state 459
    expr_new                go to state 460
    expr_cast               go to state 461
    expr_type_decl          go to state 462
    expr_type_info          go to state 463
    block_or_lambda         go to state 464
    expr_full_block         go to state 465
    expr_numeric_const      go to state 466
    expr_named_call         go to state 467
    expr_method_call        go to state 468
    func_addr_expr          go to state 469
    expr_field              go to state 470
    expr_call               go to state 471
    expr                    go to state 887
    expr_mtag               go to state 473
    basic_type_declaration  go to state 474
    make_decl               go to state 475
    make_struct_decl        go to state 476
    make_tuple_call         go to state 477
    make_dim_decl           go to state 478
    make_table_decl         go to state 479
    array_comprehension     go to state 480


State 678

  627 type_declaration_no_options_no_dim: "typedecl" '(' expr ')' .

    $default  reduce using rule 627 (type_declaration_no_options_no_dim)


State 679

  357 expr_call: basic_type_declaration '(' . ')'
  358          | basic_type_declaration '(' . expr_list ')'

    "struct"                          shift, and go to state 408
    "class"                           shift, and go to state 409
    "true"                            shift, and go to state 410
    "false"                           shift, and go to state 411
    "new"                             shift, and go to state 412
    "typeinfo"                        shift, and go to state 413
    "type"                            shift, and go to state 414
    "array"                           shift, and go to state 415
    "null"                            shift, and go to state 416
    "table"                           shift, and go to state 417
    "deref"                           shift, and go to state 418
    "cast"                            shift, and go to state 419
    "upcast"                          shift, and go to state 420
    "addr"                            shift, and go to state 421
    "reinterpret"                     shift, and go to state 422
    "fixed_array"                     shift, and go to state 423
    "default"                         shift, and go to state 424
    "bool"                            shift, and go to state 222
    "void"                            shift, and go to state 223
    "string"                          shift, and go to state 224
    "int"                             shift, and go to state 226
    "int2"                            shift, and go to state 227
    "int3"                            shift, and go to state 228
    "int4"                            shift, and go to state 229
    "uint"                            shift, and go to state 230
    "bitfield"                        shift, and go to state 425
    "uint2"                           shift, and go to state 232
    "uint3"                           shift, and go to state 233
    "uint4"                           shift, and go to state 234
    "float"                           shift, and go to state 235
    "float2"                          shift, and go to state 236
    "float3"                          shift, and go to state 237
    "float4"                          shift, and go to state 238
    "range"                           shift, and go to state 239
    "urange"                          shift, and go to state 240
    "range64"                         shift, and go to state 241
    "urange64"                        shift, and go to state 242
    "int64"                           shift, and go to state 244
    "uint64"                          shift, and go to state 245
    "double"                          shift, and go to state 246
    "int8"                            shift, and go to state 249
    "uint8"                           shift, and go to state 250
    "int16"                           shift, and go to state 251
    "uint16"                          shift, and go to state 252
    "tuple"                           shift, and go to state 426
    "variant"                         shift, and go to state 427
    "generator"                       shift, and go to state 428
    "++"                              shift, and go to state 429
    "--"                              shift, and go to state 430
    "::"                              shift, and go to state 55
    "$$"                              shift, and go to state 431
    "$i"                              shift, and go to state 432
    "$v"                              shift, and go to state 433
    "$b"                              shift, and go to state 434
    "$a"                              shift, and go to state 435
    "$c"                              shift, and go to state 436
    "..."                             shift, and go to state 437
    "integer constant"                shift, and go to state 438
    "long integer constant"           shift, and go to state 439
    "unsigned integer constant"       shift, and go to state 440
    "unsigned long integer constant"  shift, and go to state 441
    "unsigned int8 constant"          shift, and go to state 442
    "floating point constant"         shift, and go to state 443
    "double constant"                 shift, and go to state 444
    "name"                            shift, and go to state 56
    "start of the string"             shift, and go to state 445
    "begin of code block"             shift, and go to state 446
    '-'                               shift, and go to state 447
    '+'                               shift, and go to state 448
    '*'                               shift, and go to state 449
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 450
    '!'                               shift, and go to state 451
    '['                               shift, and go to state 452
    '('                               shift, and go to state 453
    ')'                               shift, and go to state 888
    '$'                               shift, and go to state 454
    '@'                               shift, and go to state 455

    string_builder          go to state 456
    expr_reader             go to state 457
    expr_call_pipe          go to state 458
    name_in_namespace       go to state 459
    expr_new                go to state 460
    expr_cast               go to state 461
    expr_type_decl          go to state 462
    expr_type_info          go to state 463
    expr_list               go to state 889
    block_or_lambda         go to state 464
    expr_full_block         go to state 465
    expr_numeric_const      go to state 466
    expr_named_call         go to state 467
    expr_method_call        go to state 468
    func_addr_expr          go to state 469
    expr_field              go to state 470
    expr_call               go to state 471
    expr                    go to state 634
    expr_mtag               go to state 473
    basic_type_declaration  go to state 474
    make_decl               go to state 475
    make_struct_decl        go to state 476
    make_tuple_call         go to state 477
    make_dim_decl           go to state 478
    make_table_decl         go to state 479
    array_comprehension     go to state 480


State 680

  655 type_declaration_no_options_no_dim: "iterator" '<' $@46 type_declaration . '>' $@47
  684 type_declaration: type_declaration . '|' type_declaration_no_options
  685                 | type_declaration . '|' '#'

    '|'  shift, and go to state 372
    '>'  shift, and go to state 890


State 681

  645 type_declaration_no_options_no_dim: "smart_ptr" '<' $@40 type_declaration . '>' $@41
  684 type_declaration: type_declaration . '|' type_declaration_no_options
  685                 | type_declaration . '|' '#'

    '|'  shift, and go to state 372
    '>'  shift, and go to state 891


State 682

  602 auto_type_declaration: "auto" '(' "name" ')' .

    $default  reduce using rule 602 (auto_type_declaration)


State 683

  604 bitfield_bits: "name" .

    $default  reduce using rule 604 (bitfield_bits)


State 684

  605 bitfield_bits: bitfield_bits . "end of expression" "name"
  611 bitfield_type_declaration: "bitfield" '<' $@35 bitfield_bits . '>' $@36

    "end of expression"  shift, and go to state 892
    '>'                  shift, and go to state 893


State 685

  659 type_declaration_no_options_no_dim: "block" '<' $@48 type_declaration . '>' $@49
  684 type_declaration: type_declaration . '|' type_declaration_no_options
  685                 | type_declaration . '|' '#'

    '|'  shift, and go to state 372
    '>'  shift, and go to state 894


State 686

  662 type_declaration_no_options_no_dim: "block" '<' $@50 optional_function_argument_list . optional_function_type '>' $@51

    ':'  shift, and go to state 389

    $default  reduce using rule 117 (optional_function_type)

    optional_function_type  go to state 895


State 687

  666 type_declaration_no_options_no_dim: "function" '<' $@52 type_declaration . '>' $@53
  684 type_declaration: type_declaration . '|' type_declaration_no_options
  685                 | type_declaration . '|' '#'

    '|'  shift, and go to state 372
    '>'  shift, and go to state 896


State 688

  669 type_declaration_no_options_no_dim: "function" '<' $@54 optional_function_argument_list . optional_function_type '>' $@55

    ':'  shift, and go to state 389

    $default  reduce using rule 117 (optional_function_type)

    optional_function_type  go to state 897


State 689

  673 type_declaration_no_options_no_dim: "lambda" '<' $@56 type_declaration . '>' $@57
  684 type_declaration: type_declaration . '|' type_declaration_no_options
  685                 | type_declaration . '|' '#'

    '|'  shift, and go to state 372
    '>'  shift, and go to state 898


State 690

  676 type_declaration_no_options_no_dim: "lambda" '<' $@58 optional_function_argument_list . optional_function_type '>' $@59

    ':'  shift, and go to state 389

    $default  reduce using rule 117 (optional_function_type)

    optional_function_type  go to state 899


State 691

  483 tuple_type_list: tuple_type .

    $default  reduce using rule 483 (tuple_type_list)


State 692

  484 tuple_type_list: tuple_type_list . "end of expression" tuple_type
  679 type_declaration_no_options_no_dim: "tuple" '<' $@60 tuple_type_list . '>' $@61

    "end of expression"  shift, and go to state 900
    '>'                  shift, and go to state 901


State 693

  489 variant_type_list: variant_type .

    $default  reduce using rule 489 (variant_type_list)


State 694

  490 variant_type_list: variant_type_list . "end of expression" variant_type
  682 type_declaration_no_options_no_dim: "variant" '<' $@62 variant_type_list . '>' $@63

    "end of expression"  shift, and go to state 902
    '>'                  shift, and go to state 903


State 695

  603 auto_type_declaration: "$t" '(' expr ')' .

    $default  reduce using rule 603 (auto_type_declaration)


State 696

  630 type_declaration_no_options_no_dim: '$' name_in_namespace '<' $@39 . type_declaration_no_options_list '>' '(' optional_expr_list ')'

    "type"       shift, and go to state 216
    "array"      shift, and go to state 217
    "table"      shift, and go to state 218
    "typedecl"   shift, and go to state 219
    "iterator"   shift, and go to state 220
    "smart_ptr"  shift, and go to state 221
    "bool"       shift, and go to state 222
    "void"       shift, and go to state 223
    "string"     shift, and go to state 224
    "auto"       shift, and go to state 225
    "int"        shift, and go to state 226
    "int2"       shift, and go to state 227
    "int3"       shift, and go to state 228
    "int4"       shift, and go to state 229
    "uint"       shift, and go to state 230
    "bitfield"   shift, and go to state 231
    "uint2"      shift, and go to state 232
    "uint3"      shift, and go to state 233
    "uint4"      shift, and go to state 234
    "float"      shift, and go to state 235
    "float2"     shift, and go to state 236
    "float3"     shift, and go to state 237
    "float4"     shift, and go to state 238
    "range"      shift, and go to state 239
    "urange"     shift, and go to state 240
    "range64"    shift, and go to state 241
    "urange64"   shift, and go to state 242
    "block"      shift, and go to state 243
    "int64"      shift, and go to state 244
    "uint64"     shift, and go to state 245
    "double"     shift, and go to state 246
    "function"   shift, and go to state 247
    "lambda"     shift, and go to state 248
    "int8"       shift, and go to state 249
    "uint8"      shift, and go to state 250
    "int16"      shift, and go to state 251
    "uint16"     shift, and go to state 252
    "tuple"      shift, and go to state 253
    "variant"    shift, and go to state 254
    "::"         shift, and go to state 55
    "$t"         shift, and go to state 255
    "name"       shift, and go to state 56
    '$'          shift, and go to state 256

    type_declaration_no_options_list    go to state 904
    name_in_namespace                   go to state 257
    basic_type_declaration              go to state 258
    structure_type_declaration          go to state 259
    auto_type_declaration               go to state 260
    bitfield_type_declaration           go to state 261
    type_declaration_no_options         go to state 262
    type_declaration_no_options_no_dim  go to state 263
    type_declaration                    go to state 905


State 697

  628 type_declaration_no_options_no_dim: '$' name_in_namespace '(' optional_expr_list . ')'

    ')'  shift, and go to state 906


State 698

  236 optional_expr_list: expr_list .
  290 expr_list: expr_list . ',' expr

    ','  shift, and go to state 907

    $default  reduce using rule 236 (optional_expr_list)


State 699

  631 type_declaration_no_options_no_dim: type_declaration_no_options_no_dim '-' '[' ']' .

    $default  reduce using rule 631 (type_declaration_no_options_no_dim)


State 700

  614 dim_list: '[' expr ']' .

    $default  reduce using rule 614 (dim_list)


State 701

  617 dim_list: dim_list '[' ']' .

    $default  reduce using rule 617 (dim_list)


State 702

  336 expr_method_call: expr . "->" "name" '(' ')'
  337                 | expr . "->" "name" '(' expr_list ')'
  347 expr_field: expr . '.' "name"
  348           | expr . '.' '.' "name"
  349           | expr . '.' "name" '(' ')'
  350           | expr . '.' "name" '(' expr_list ')'
  353           | expr . '.' $@17 error $@18
  373 expr: expr . "<<" expr
  374     | expr . ">>" expr
  375     | expr . "<<<" expr
  376     | expr . ">>>" expr
  377     | expr . '+' expr
  378     | expr . '-' expr
  379     | expr . '*' expr
  380     | expr . '/' expr
  381     | expr . '%' expr
  382     | expr . '<' expr
  383     | expr . '>' expr
  384     | expr . "==" expr
  385     | expr . "!=" expr
  386     | expr . "<=" expr
  387     | expr . ">=" expr
  388     | expr . '&' expr
  389     | expr . '|' expr
  390     | expr . '^' expr
  391     | expr . "&&" expr
  392     | expr . "||" expr
  393     | expr . "^^" expr
  394     | expr . ".." expr
  397     | expr . "++"
  398     | expr . "--"
  400     | expr . '[' expr ']'
  401     | expr . '.' '[' expr ']'
  402     | expr . "?[" expr ']'
  403     | expr . '.' "?[" expr ']'
  404     | expr . "?." "name"
  405     | expr . '.' "?." "name"
  413     | expr . "??" expr
  414     | expr . '?' expr ':' expr
  417     | expr . "is" "type" '<' $@19 type_declaration_no_options '>' $@20
  418     | expr . "is" basic_type_declaration
  419     | expr . "is" "name"
  420     | expr . "as" "name"
  423     | expr . "as" "type" '<' $@21 type_declaration '>' $@22
  424     | expr . "as" basic_type_declaration
  425     | expr . '?' "as" "name"
  428     | expr . '?' "as" "type" '<' $@23 type_declaration '>' $@24
  429     | expr . '?' "as" basic_type_declaration
  437     | expr . "<|" expr
  438     | expr . "|>" expr
  439     | expr . "|>" basic_type_declaration
  449 expr_mtag: expr . '.' "$f" '(' expr ')'
  450          | expr . "?." "$f" '(' expr ')'
  451          | expr . '.' '.' "$f" '(' expr ')'
  452          | expr . '.' "?." "$f" '(' expr ')'
  453          | expr . "as" "$f" '(' expr ')'
  454          | expr . '?' "as" "$f" '(' expr ')'
  455          | expr . "is" "$f" '(' expr ')'
  616 dim_list: dim_list '[' expr . ']'

    "is"   shift, and go to state 643
    "as"   shift, and go to state 644
    "<<"   shift, and go to state 645
    ">>"   shift, and go to state 646
    "++"   shift, and go to state 647
    "--"   shift, and go to state 648
    "<="   shift, and go to state 649
    ">="   shift, and go to state 650
    "=="   shift, and go to state 651
    "!="   shift, and go to state 652
    "->"   shift, and go to state 653
    "??"   shift, and go to state 654
    "?."   shift, and go to state 655
    "?["   shift, and go to state 656
    "<|"   shift, and go to state 657
    "|>"   shift, and go to state 658
    "<<<"  shift, and go to state 659
    ">>>"  shift, and go to state 660
    "&&"   shift, and go to state 661
    "||"   shift, and go to state 662
    "^^"   shift, and go to state 663
    ".."   shift, and go to state 664
    '?'    shift, and go to state 665
    '|'    shift, and go to state 666
    '^'    shift, and go to state 667
    '&'    shift, and go to state 668
    '<'    shift, and go to state 669
    '>'    shift, and go to state 670
    '-'    shift, and go to state 671
    '+'    shift, and go to state 672
    '*'    shift, and go to state 673
    '/'    shift, and go to state 674
    '%'    shift, and go to state 675
    '.'    shift, and go to state 676
    '['    shift, and go to state 677
    ']'    shift, and go to state 908


State 703

  608 bitfield_alias_bits: bitfield_alias_bits ',' "name" .

    $default  reduce using rule 608 (bitfield_alias_bits)


State 704

  697 bitfield_alias_declaration: "bitfield" optional_public_or_private_alias "name" $@70 "begin of code block" $@71 bitfield_alias_bits optional_comma $@72 . "end of code block"

    "end of code block"  shift, and go to state 909


State 705

  482 tuple_type: "name" ':' . type_declaration

    "type"       shift, and go to state 216
    "array"      shift, and go to state 217
    "table"      shift, and go to state 218
    "typedecl"   shift, and go to state 219
    "iterator"   shift, and go to state 220
    "smart_ptr"  shift, and go to state 221
    "bool"       shift, and go to state 222
    "void"       shift, and go to state 223
    "string"     shift, and go to state 224
    "auto"       shift, and go to state 225
    "int"        shift, and go to state 226
    "int2"       shift, and go to state 227
    "int3"       shift, and go to state 228
    "int4"       shift, and go to state 229
    "uint"       shift, and go to state 230
    "bitfield"   shift, and go to state 231
    "uint2"      shift, and go to state 232
    "uint3"      shift, and go to state 233
    "uint4"      shift, and go to state 234
    "float"      shift, and go to state 235
    "float2"     shift, and go to state 236
    "float3"     shift, and go to state 237
    "float4"     shift, and go to state 238
    "range"      shift, and go to state 239
    "urange"     shift, and go to state 240
    "range64"    shift, and go to state 241
    "urange64"   shift, and go to state 242
    "block"      shift, and go to state 243
    "int64"      shift, and go to state 244
    "uint64"     shift, and go to state 245
    "double"     shift, and go to state 246
    "function"   shift, and go to state 247
    "lambda"     shift, and go to state 248
    "int8"       shift, and go to state 249
    "uint8"      shift, and go to state 250
    "int16"      shift, and go to state 251
    "uint16"     shift, and go to state 252
    "tuple"      shift, and go to state 253
    "variant"    shift, and go to state 254
    "::"         shift, and go to state 55
    "$t"         shift, and go to state 255
    "name"       shift, and go to state 56
    '$'          shift, and go to state 256

    name_in_namespace                   go to state 257
    basic_type_declaration              go to state 258
    structure_type_declaration          go to state 259
    auto_type_declaration               go to state 260
    bitfield_type_declaration           go to state 261
    type_declaration_no_options         go to state 262
    type_declaration_no_options_no_dim  go to state 263
    type_declaration                    go to state 910


State 706

  487 tuple_alias_type_list: tuple_alias_type_list tuple_type "end of expression" .

    $default  reduce using rule 487 (tuple_alias_type_list)


State 707

  689 tuple_alias_declaration: "tuple" optional_public_or_private_alias "name" $@64 "begin of code block" $@65 tuple_alias_type_list $@66 "end of code block" .

    $default  reduce using rule 689 (tuple_alias_declaration)


State 708

  488 variant_type: "name" ':' . type_declaration

    "type"       shift, and go to state 216
    "array"      shift, and go to state 217
    "table"      shift, and go to state 218
    "typedecl"   shift, and go to state 219
    "iterator"   shift, and go to state 220
    "smart_ptr"  shift, and go to state 221
    "bool"       shift, and go to state 222
    "void"       shift, and go to state 223
    "string"     shift, and go to state 224
    "auto"       shift, and go to state 225
    "int"        shift, and go to state 226
    "int2"       shift, and go to state 227
    "int3"       shift, and go to state 228
    "int4"       shift, and go to state 229
    "uint"       shift, and go to state 230
    "bitfield"   shift, and go to state 231
    "uint2"      shift, and go to state 232
    "uint3"      shift, and go to state 233
    "uint4"      shift, and go to state 234
    "float"      shift, and go to state 235
    "float2"     shift, and go to state 236
    "float3"     shift, and go to state 237
    "float4"     shift, and go to state 238
    "range"      shift, and go to state 239
    "urange"     shift, and go to state 240
    "range64"    shift, and go to state 241
    "urange64"   shift, and go to state 242
    "block"      shift, and go to state 243
    "int64"      shift, and go to state 244
    "uint64"     shift, and go to state 245
    "double"     shift, and go to state 246
    "function"   shift, and go to state 247
    "lambda"     shift, and go to state 248
    "int8"       shift, and go to state 249
    "uint8"      shift, and go to state 250
    "int16"      shift, and go to state 251
    "uint16"     shift, and go to state 252
    "tuple"      shift, and go to state 253
    "variant"    shift, and go to state 254
    "::"         shift, and go to state 55
    "$t"         shift, and go to state 255
    "name"       shift, and go to state 56
    '$'          shift, and go to state 256

    name_in_namespace                   go to state 257
    basic_type_declaration              go to state 258
    structure_type_declaration          go to state 259
    auto_type_declaration               go to state 260
    bitfield_type_declaration           go to state 261
    type_declaration_no_options         go to state 262
    type_declaration_no_options_no_dim  go to state 263
    type_declaration                    go to state 911


State 709

  493 variant_alias_type_list: variant_alias_type_list variant_type "end of expression" .

    $default  reduce using rule 493 (variant_alias_type_list)


State 710

  693 variant_alias_declaration: "variant" optional_public_or_private_alias "name" $@67 "begin of code block" $@68 variant_alias_type_list $@69 "end of code block" .

    $default  reduce using rule 693 (variant_alias_declaration)


State 711

  336 expr_method_call: expr . "->" "name" '(' ')'
  337                 | expr . "->" "name" '(' expr_list ')'
  347 expr_field: expr . '.' "name"
  348           | expr . '.' '.' "name"
  349           | expr . '.' "name" '(' ')'
  350           | expr . '.' "name" '(' expr_list ')'
  353           | expr . '.' $@17 error $@18
  373 expr: expr . "<<" expr
  374     | expr . ">>" expr
  375     | expr . "<<<" expr
  376     | expr . ">>>" expr
  377     | expr . '+' expr
  378     | expr . '-' expr
  379     | expr . '*' expr
  380     | expr . '/' expr
  381     | expr . '%' expr
  382     | expr . '<' expr
  383     | expr . '>' expr
  384     | expr . "==" expr
  385     | expr . "!=" expr
  386     | expr . "<=" expr
  387     | expr . ">=" expr
  388     | expr . '&' expr
  389     | expr . '|' expr
  390     | expr . '^' expr
  391     | expr . "&&" expr
  392     | expr . "||" expr
  393     | expr . "^^" expr
  394     | expr . ".." expr
  397     | expr . "++"
  398     | expr . "--"
  400     | expr . '[' expr ']'
  401     | expr . '.' '[' expr ']'
  402     | expr . "?[" expr ']'
  403     | expr . '.' "?[" expr ']'
  404     | expr . "?." "name"
  405     | expr . '.' "?." "name"
  413     | expr . "??" expr
  414     | expr . '?' expr ':' expr
  417     | expr . "is" "type" '<' $@19 type_declaration_no_options '>' $@20
  418     | expr . "is" basic_type_declaration
  419     | expr . "is" "name"
  420     | expr . "as" "name"
  423     | expr . "as" "type" '<' $@21 type_declaration '>' $@22
  424     | expr . "as" basic_type_declaration
  425     | expr . '?' "as" "name"
  428     | expr . '?' "as" "type" '<' $@23 type_declaration '>' $@24
  429     | expr . '?' "as" basic_type_declaration
  437     | expr . "<|" expr
  438     | expr . "|>" expr
  439     | expr . "|>" basic_type_declaration
  449 expr_mtag: expr . '.' "$f" '(' expr ')'
  450          | expr . "?." "$f" '(' expr ')'
  451          | expr . '.' '.' "$f" '(' expr ')'
  452          | expr . '.' "?." "$f" '(' expr ')'
  453          | expr . "as" "$f" '(' expr ')'
  454          | expr . '?' "as" "$f" '(' expr ')'
  455          | expr . "is" "$f" '(' expr ')'
  478 function_argument_declaration: "$a" '(' expr . ')'

    "is"   shift, and go to state 643
    "as"   shift, and go to state 644
    "<<"   shift, and go to state 645
    ">>"   shift, and go to state 646
    "++"   shift, and go to state 647
    "--"   shift, and go to state 648
    "<="   shift, and go to state 649
    ">="   shift, and go to state 650
    "=="   shift, and go to state 651
    "!="   shift, and go to state 652
    "->"   shift, and go to state 653
    "??"   shift, and go to state 654
    "?."   shift, and go to state 655
    "?["   shift, and go to state 656
    "<|"   shift, and go to state 657
    "|>"   shift, and go to state 658
    "<<<"  shift, and go to state 659
    ">>>"  shift, and go to state 660
    "&&"   shift, and go to state 661
    "||"   shift, and go to state 662
    "^^"   shift, and go to state 663
    ".."   shift, and go to state 664
    '?'    shift, and go to state 665
    '|'    shift, and go to state 666
    '^'    shift, and go to state 667
    '&'    shift, and go to state 668
    '<'    shift, and go to state 669
    '>'    shift, and go to state 670
    '-'    shift, and go to state 671
    '+'    shift, and go to state 672
    '*'    shift, and go to state 673
    '/'    shift, and go to state 674
    '%'    shift, and go to state 675
    '.'    shift, and go to state 676
    '['    shift, and go to state 677
    ')'    shift, and go to state 912


State 712

  561 variable_name_with_pos_list: "$i" . '(' expr ')'

    '('  shift, and go to state 913


State 713

  560 variable_name_with_pos_list: "name" .
  562                            | "name" . "aka" "name"

    "aka"  shift, and go to state 914

    $default  reduce using rule 560 (variable_name_with_pos_list)


State 714

  477 function_argument_declaration: optional_field_annotation kwd_let_var_or_nothing variable_declaration .

    $default  reduce using rule 477 (function_argument_declaration)


State 715

  496 variable_declaration: variable_name_with_pos_list .
  497                     | variable_name_with_pos_list . '&'
  498                     | variable_name_with_pos_list . ':' type_declaration
  499                     | variable_name_with_pos_list . ':' type_declaration copy_or_move expr
  500                     | variable_name_with_pos_list . copy_or_move expr
  563 variable_name_with_pos_list: variable_name_with_pos_list . ',' "name"
  564                            | variable_name_with_pos_list . ',' "name" "aka" "name"

    "<-"  shift, and go to state 915
    ','   shift, and go to state 916
    '='   shift, and go to state 917
    ':'   shift, and go to state 918
    '&'   shift, and go to state 919

    $default  reduce using rule 496 (variable_declaration)

    copy_or_move  go to state 920


State 716

  480 function_argument_list: function_argument_list "end of expression" function_argument_declaration .

    $default  reduce using rule 480 (function_argument_list)


State 717

   72 expression_while_loop: "while" expr . expression_block
  336 expr_method_call: expr . "->" "name" '(' ')'
  337                 | expr . "->" "name" '(' expr_list ')'
  347 expr_field: expr . '.' "name"
  348           | expr . '.' '.' "name"
  349           | expr . '.' "name" '(' ')'
  350           | expr . '.' "name" '(' expr_list ')'
  353           | expr . '.' $@17 error $@18
  373 expr: expr . "<<" expr
  374     | expr . ">>" expr
  375     | expr . "<<<" expr
  376     | expr . ">>>" expr
  377     | expr . '+' expr
  378     | expr . '-' expr
  379     | expr . '*' expr
  380     | expr . '/' expr
  381     | expr . '%' expr
  382     | expr . '<' expr
  383     | expr . '>' expr
  384     | expr . "==" expr
  385     | expr . "!=" expr
  386     | expr . "<=" expr
  387     | expr . ">=" expr
  388     | expr . '&' expr
  389     | expr . '|' expr
  390     | expr . '^' expr
  391     | expr . "&&" expr
  392     | expr . "||" expr
  393     | expr . "^^" expr
  394     | expr . ".." expr
  397     | expr . "++"
  398     | expr . "--"
  400     | expr . '[' expr ']'
  401     | expr . '.' '[' expr ']'
  402     | expr . "?[" expr ']'
  403     | expr . '.' "?[" expr ']'
  404     | expr . "?." "name"
  405     | expr . '.' "?." "name"
  413     | expr . "??" expr
  414     | expr . '?' expr ':' expr
  417     | expr . "is" "type" '<' $@19 type_declaration_no_options '>' $@20
  418     | expr . "is" basic_type_declaration
  419     | expr . "is" "name"
  420     | expr . "as" "name"
  423     | expr . "as" "type" '<' $@21 type_declaration '>' $@22
  424     | expr . "as" basic_type_declaration
  425     | expr . '?' "as" "name"
  428     | expr . '?' "as" "type" '<' $@23 type_declaration '>' $@24
  429     | expr . '?' "as" basic_type_declaration
  437     | expr . "<|" expr
  438     | expr . "|>" expr
  439     | expr . "|>" basic_type_declaration
  449 expr_mtag: expr . '.' "$f" '(' expr ')'
  450          | expr . "?." "$f" '(' expr ')'
  451          | expr . '.' '.' "$f" '(' expr ')'
  452          | expr . '.' "?." "$f" '(' expr ')'
  453          | expr . "as" "$f" '(' expr ')'
  454          | expr . '?' "as" "$f" '(' expr ')'
  455          | expr . "is" "$f" '(' expr ')'

    "is"                   shift, and go to state 643
    "as"                   shift, and go to state 644
    "<<"                   shift, and go to state 645
    ">>"                   shift, and go to state 646
    "++"                   shift, and go to state 647
    "--"                   shift, and go to state 648
    "<="                   shift, and go to state 649
    ">="                   shift, and go to state 650
    "=="                   shift, and go to state 651
    "!="                   shift, and go to state 652
    "->"                   shift, and go to state 653
    "??"                   shift, and go to state 654
    "?."                   shift, and go to state 655
    "?["                   shift, and go to state 656
    "<|"                   shift, and go to state 657
    "|>"                   shift, and go to state 658
    "<<<"                  shift, and go to state 659
    ">>>"                  shift, and go to state 660
    "&&"                   shift, and go to state 661
    "||"                   shift, and go to state 662
    "^^"                   shift, and go to state 663
    ".."                   shift, and go to state 664
    "begin of code block"  shift, and go to state 323
    '?'                    shift, and go to state 665
    '|'                    shift, and go to state 666
    '^'                    shift, and go to state 667
    '&'                    shift, and go to state 668
    '<'                    shift, and go to state 669
    '>'                    shift, and go to state 670
    '-'                    shift, and go to state 671
    '+'                    shift, and go to state 672
    '*'                    shift, and go to state 673
    '/'                    shift, and go to state 674
    '%'                    shift, and go to state 675
    '.'                    shift, and go to state 676
    '['                    shift, and go to state 677

    expression_block  go to state 921


State 718

   70 expression_for_loop: "for" '(' . variable_name_with_pos_list "in" expr_list ')' expression_block

    "$i"    shift, and go to state 712
    "name"  shift, and go to state 713

    variable_name_with_pos_list  go to state 922


State 719

  256 expression_return: "return" "<-" . expr

    "struct"                          shift, and go to state 408
    "class"                           shift, and go to state 409
    "true"                            shift, and go to state 410
    "false"                           shift, and go to state 411
    "new"                             shift, and go to state 412
    "typeinfo"                        shift, and go to state 413
    "type"                            shift, and go to state 414
    "array"                           shift, and go to state 415
    "null"                            shift, and go to state 416
    "table"                           shift, and go to state 417
    "deref"                           shift, and go to state 418
    "cast"                            shift, and go to state 419
    "upcast"                          shift, and go to state 420
    "addr"                            shift, and go to state 421
    "reinterpret"                     shift, and go to state 422
    "fixed_array"                     shift, and go to state 423
    "default"                         shift, and go to state 424
    "bool"                            shift, and go to state 222
    "void"                            shift, and go to state 223
    "string"                          shift, and go to state 224
    "int"                             shift, and go to state 226
    "int2"                            shift, and go to state 227
    "int3"                            shift, and go to state 228
    "int4"                            shift, and go to state 229
    "uint"                            shift, and go to state 230
    "bitfield"                        shift, and go to state 425
    "uint2"                           shift, and go to state 232
    "uint3"                           shift, and go to state 233
    "uint4"                           shift, and go to state 234
    "float"                           shift, and go to state 235
    "float2"                          shift, and go to state 236
    "float3"                          shift, and go to state 237
    "float4"                          shift, and go to state 238
    "range"                           shift, and go to state 239
    "urange"                          shift, and go to state 240
    "range64"                         shift, and go to state 241
    "urange64"                        shift, and go to state 242
    "int64"                           shift, and go to state 244
    "uint64"                          shift, and go to state 245
    "double"                          shift, and go to state 246
    "int8"                            shift, and go to state 249
    "uint8"                           shift, and go to state 250
    "int16"                           shift, and go to state 251
    "uint16"                          shift, and go to state 252
    "tuple"                           shift, and go to state 426
    "variant"                         shift, and go to state 427
    "generator"                       shift, and go to state 428
    "++"                              shift, and go to state 429
    "--"                              shift, and go to state 430
    "::"                              shift, and go to state 55
    "$$"                              shift, and go to state 431
    "$i"                              shift, and go to state 432
    "$v"                              shift, and go to state 433
    "$b"                              shift, and go to state 434
    "$a"                              shift, and go to state 435
    "$c"                              shift, and go to state 436
    "..."                             shift, and go to state 437
    "integer constant"                shift, and go to state 438
    "long integer constant"           shift, and go to state 439
    "unsigned integer constant"       shift, and go to state 440
    "unsigned long integer constant"  shift, and go to state 441
    "unsigned int8 constant"          shift, and go to state 442
    "floating point constant"         shift, and go to state 443
    "double constant"                 shift, and go to state 444
    "name"                            shift, and go to state 56
    "start of the string"             shift, and go to state 445
    "begin of code block"             shift, and go to state 446
    '-'                               shift, and go to state 447
    '+'                               shift, and go to state 448
    '*'                               shift, and go to state 449
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 450
    '!'                               shift, and go to state 451
    '['                               shift, and go to state 452
    '('                               shift, and go to state 453
    '$'                               shift, and go to state 454
    '@'                               shift, and go to state 455

    string_builder          go to state 456
    expr_reader             go to state 457
    expr_call_pipe          go to state 458
    name_in_namespace       go to state 459
    expr_new                go to state 460
    expr_cast               go to state 461
    expr_type_decl          go to state 462
    expr_type_info          go to state 463
    block_or_lambda         go to state 464
    expr_full_block         go to state 465
    expr_numeric_const      go to state 466
    expr_named_call         go to state 467
    expr_method_call        go to state 468
    func_addr_expr          go to state 469
    expr_field              go to state 470
    expr_call               go to state 471
    expr                    go to state 923
    expr_mtag               go to state 473
    basic_type_declaration  go to state 474
    make_decl               go to state 475
    make_struct_decl        go to state 476
    make_tuple_call         go to state 477
    make_dim_decl           go to state 478
    make_table_decl         go to state 479
    array_comprehension     go to state 480


State 720

  255 expression_return: "return" expr .
  336 expr_method_call: expr . "->" "name" '(' ')'
  337                 | expr . "->" "name" '(' expr_list ')'
  347 expr_field: expr . '.' "name"
  348           | expr . '.' '.' "name"
  349           | expr . '.' "name" '(' ')'
  350           | expr . '.' "name" '(' expr_list ')'
  353           | expr . '.' $@17 error $@18
  373 expr: expr . "<<" expr
  374     | expr . ">>" expr
  375     | expr . "<<<" expr
  376     | expr . ">>>" expr
  377     | expr . '+' expr
  378     | expr . '-' expr
  379     | expr . '*' expr
  380     | expr . '/' expr
  381     | expr . '%' expr
  382     | expr . '<' expr
  383     | expr . '>' expr
  384     | expr . "==" expr
  385     | expr . "!=" expr
  386     | expr . "<=" expr
  387     | expr . ">=" expr
  388     | expr . '&' expr
  389     | expr . '|' expr
  390     | expr . '^' expr
  391     | expr . "&&" expr
  392     | expr . "||" expr
  393     | expr . "^^" expr
  394     | expr . ".." expr
  397     | expr . "++"
  398     | expr . "--"
  400     | expr . '[' expr ']'
  401     | expr . '.' '[' expr ']'
  402     | expr . "?[" expr ']'
  403     | expr . '.' "?[" expr ']'
  404     | expr . "?." "name"
  405     | expr . '.' "?." "name"
  413     | expr . "??" expr
  414     | expr . '?' expr ':' expr
  417     | expr . "is" "type" '<' $@19 type_declaration_no_options '>' $@20
  418     | expr . "is" basic_type_declaration
  419     | expr . "is" "name"
  420     | expr . "as" "name"
  423     | expr . "as" "type" '<' $@21 type_declaration '>' $@22
  424     | expr . "as" basic_type_declaration
  425     | expr . '?' "as" "name"
  428     | expr . '?' "as" "type" '<' $@23 type_declaration '>' $@24
  429     | expr . '?' "as" basic_type_declaration
  437     | expr . "<|" expr
  438     | expr . "|>" expr
  439     | expr . "|>" basic_type_declaration
  449 expr_mtag: expr . '.' "$f" '(' expr ')'
  450          | expr . "?." "$f" '(' expr ')'
  451          | expr . '.' '.' "$f" '(' expr ')'
  452          | expr . '.' "?." "$f" '(' expr ')'
  453          | expr . "as" "$f" '(' expr ')'
  454          | expr . '?' "as" "$f" '(' expr ')'
  455          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 643
    "as"   shift, and go to state 644
    "<<"   shift, and go to state 645
    ">>"   shift, and go to state 646
    "++"   shift, and go to state 647
    "--"   shift, and go to state 648
    "<="   shift, and go to state 649
    ">="   shift, and go to state 650
    "=="   shift, and go to state 651
    "!="   shift, and go to state 652
    "->"   shift, and go to state 653
    "??"   shift, and go to state 654
    "?."   shift, and go to state 655
    "?["   shift, and go to state 656
    "<|"   shift, and go to state 657
    "|>"   shift, and go to state 658
    "<<<"  shift, and go to state 659
    ">>>"  shift, and go to state 660
    "&&"   shift, and go to state 661
    "||"   shift, and go to state 662
    "^^"   shift, and go to state 663
    ".."   shift, and go to state 664
    '?'    shift, and go to state 665
    '|'    shift, and go to state 666
    '^'    shift, and go to state 667
    '&'    shift, and go to state 668
    '<'    shift, and go to state 669
    '>'    shift, and go to state 670
    '-'    shift, and go to state 671
    '+'    shift, and go to state 672
    '*'    shift, and go to state 673
    '/'    shift, and go to state 674
    '%'    shift, and go to state 675
    '.'    shift, and go to state 676
    '['    shift, and go to state 677

    $default  reduce using rule 255 (expression_return)


State 721

  260 expression_try_catch: "try" expression_block . "recover" expression_block

    "recover"  shift, and go to state 924


State 722

  243 expression_delete: "delete" "explicit" . expr

    "struct"                          shift, and go to state 408
    "class"                           shift, and go to state 409
    "true"                            shift, and go to state 410
    "false"                           shift, and go to state 411
    "new"                             shift, and go to state 412
    "typeinfo"                        shift, and go to state 413
    "type"                            shift, and go to state 414
    "array"                           shift, and go to state 415
    "null"                            shift, and go to state 416
    "table"                           shift, and go to state 417
    "deref"                           shift, and go to state 418
    "cast"                            shift, and go to state 419
    "upcast"                          shift, and go to state 420
    "addr"                            shift, and go to state 421
    "reinterpret"                     shift, and go to state 422
    "fixed_array"                     shift, and go to state 423
    "default"                         shift, and go to state 424
    "bool"                            shift, and go to state 222
    "void"                            shift, and go to state 223
    "string"                          shift, and go to state 224
    "int"                             shift, and go to state 226
    "int2"                            shift, and go to state 227
    "int3"                            shift, and go to state 228
    "int4"                            shift, and go to state 229
    "uint"                            shift, and go to state 230
    "bitfield"                        shift, and go to state 425
    "uint2"                           shift, and go to state 232
    "uint3"                           shift, and go to state 233
    "uint4"                           shift, and go to state 234
    "float"                           shift, and go to state 235
    "float2"                          shift, and go to state 236
    "float3"                          shift, and go to state 237
    "float4"                          shift, and go to state 238
    "range"                           shift, and go to state 239
    "urange"                          shift, and go to state 240
    "range64"                         shift, and go to state 241
    "urange64"                        shift, and go to state 242
    "int64"                           shift, and go to state 244
    "uint64"                          shift, and go to state 245
    "double"                          shift, and go to state 246
    "int8"                            shift, and go to state 249
    "uint8"                           shift, and go to state 250
    "int16"                           shift, and go to state 251
    "uint16"                          shift, and go to state 252
    "tuple"                           shift, and go to state 426
    "variant"                         shift, and go to state 427
    "generator"                       shift, and go to state 428
    "++"                              shift, and go to state 429
    "--"                              shift, and go to state 430
    "::"                              shift, and go to state 55
    "$$"                              shift, and go to state 431
    "$i"                              shift, and go to state 432
    "$v"                              shift, and go to state 433
    "$b"                              shift, and go to state 434
    "$a"                              shift, and go to state 435
    "$c"                              shift, and go to state 436
    "..."                             shift, and go to state 437
    "integer constant"                shift, and go to state 438
    "long integer constant"           shift, and go to state 439
    "unsigned integer constant"       shift, and go to state 440
    "unsigned long integer constant"  shift, and go to state 441
    "unsigned int8 constant"          shift, and go to state 442
    "floating point constant"         shift, and go to state 443
    "double constant"                 shift, and go to state 444
    "name"                            shift, and go to state 56
    "start of the string"             shift, and go to state 445
    "begin of code block"             shift, and go to state 446
    '-'                               shift, and go to state 447
    '+'                               shift, and go to state 448
    '*'                               shift, and go to state 449
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 450
    '!'                               shift, and go to state 451
    '['                               shift, and go to state 452
    '('                               shift, and go to state 453
    '$'                               shift, and go to state 454
    '@'                               shift, and go to state 455

    string_builder          go to state 456
    expr_reader             go to state 457
    expr_call_pipe          go to state 458
    name_in_namespace       go to state 459
    expr_new                go to state 460
    expr_cast               go to state 461
    expr_type_decl          go to state 462
    expr_type_info          go to state 463
    block_or_lambda         go to state 464
    expr_full_block         go to state 465
    expr_numeric_const      go to state 466
    expr_named_call         go to state 467
    expr_method_call        go to state 468
    func_addr_expr          go to state 469
    expr_field              go to state 470
    expr_call               go to state 471
    expr                    go to state 925
    expr_mtag               go to state 473
    basic_type_declaration  go to state 474
    make_decl               go to state 475
    make_struct_decl        go to state 476
    make_tuple_call         go to state 477
    make_dim_decl           go to state 478
    make_table_decl         go to state 479
    array_comprehension     go to state 480


State 723

  242 expression_delete: "delete" expr .
  336 expr_method_call: expr . "->" "name" '(' ')'
  337                 | expr . "->" "name" '(' expr_list ')'
  347 expr_field: expr . '.' "name"
  348           | expr . '.' '.' "name"
  349           | expr . '.' "name" '(' ')'
  350           | expr . '.' "name" '(' expr_list ')'
  353           | expr . '.' $@17 error $@18
  373 expr: expr . "<<" expr
  374     | expr . ">>" expr
  375     | expr . "<<<" expr
  376     | expr . ">>>" expr
  377     | expr . '+' expr
  378     | expr . '-' expr
  379     | expr . '*' expr
  380     | expr . '/' expr
  381     | expr . '%' expr
  382     | expr . '<' expr
  383     | expr . '>' expr
  384     | expr . "==" expr
  385     | expr . "!=" expr
  386     | expr . "<=" expr
  387     | expr . ">=" expr
  388     | expr . '&' expr
  389     | expr . '|' expr
  390     | expr . '^' expr
  391     | expr . "&&" expr
  392     | expr . "||" expr
  393     | expr . "^^" expr
  394     | expr . ".." expr
  397     | expr . "++"
  398     | expr . "--"
  400     | expr . '[' expr ']'
  401     | expr . '.' '[' expr ']'
  402     | expr . "?[" expr ']'
  403     | expr . '.' "?[" expr ']'
  404     | expr . "?." "name"
  405     | expr . '.' "?." "name"
  413     | expr . "??" expr
  414     | expr . '?' expr ':' expr
  417     | expr . "is" "type" '<' $@19 type_declaration_no_options '>' $@20
  418     | expr . "is" basic_type_declaration
  419     | expr . "is" "name"
  420     | expr . "as" "name"
  423     | expr . "as" "type" '<' $@21 type_declaration '>' $@22
  424     | expr . "as" basic_type_declaration
  425     | expr . '?' "as" "name"
  428     | expr . '?' "as" "type" '<' $@23 type_declaration '>' $@24
  429     | expr . '?' "as" basic_type_declaration
  437     | expr . "<|" expr
  438     | expr . "|>" expr
  439     | expr . "|>" basic_type_declaration
  449 expr_mtag: expr . '.' "$f" '(' expr ')'
  450          | expr . "?." "$f" '(' expr ')'
  451          | expr . '.' '.' "$f" '(' expr ')'
  452          | expr . '.' "?." "$f" '(' expr ')'
  453          | expr . "as" "$f" '(' expr ')'
  454          | expr . '?' "as" "$f" '(' expr ')'
  455          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 643
    "as"   shift, and go to state 644
    "<<"   shift, and go to state 645
    ">>"   shift, and go to state 646
    "++"   shift, and go to state 647
    "--"   shift, and go to state 648
    "<="   shift, and go to state 649
    ">="   shift, and go to state 650
    "=="   shift, and go to state 651
    "!="   shift, and go to state 652
    "->"   shift, and go to state 653
    "??"   shift, and go to state 654
    "?."   shift, and go to state 655
    "?["   shift, and go to state 656
    "<|"   shift, and go to state 657
    "|>"   shift, and go to state 658
    "<<<"  shift, and go to state 659
    ">>>"  shift, and go to state 660
    "&&"   shift, and go to state 661
    "||"   shift, and go to state 662
    "^^"   shift, and go to state 663
    ".."   shift, and go to state 664
    '?'    shift, and go to state 665
    '|'    shift, and go to state 666
    '^'    shift, and go to state 667
    '&'    shift, and go to state 668
    '<'    shift, and go to state 669
    '>'    shift, and go to state 670
    '-'    shift, and go to state 671
    '+'    shift, and go to state 672
    '*'    shift, and go to state 673
    '/'    shift, and go to state 674
    '%'    shift, and go to state 675
    '.'    shift, and go to state 676
    '['    shift, and go to state 677

    $default  reduce using rule 242 (expression_delete)


State 724

   73 expression_with: "with" expr . expression_block
  336 expr_method_call: expr . "->" "name" '(' ')'
  337                 | expr . "->" "name" '(' expr_list ')'
  347 expr_field: expr . '.' "name"
  348           | expr . '.' '.' "name"
  349           | expr . '.' "name" '(' ')'
  350           | expr . '.' "name" '(' expr_list ')'
  353           | expr . '.' $@17 error $@18
  373 expr: expr . "<<" expr
  374     | expr . ">>" expr
  375     | expr . "<<<" expr
  376     | expr . ">>>" expr
  377     | expr . '+' expr
  378     | expr . '-' expr
  379     | expr . '*' expr
  380     | expr . '/' expr
  381     | expr . '%' expr
  382     | expr . '<' expr
  383     | expr . '>' expr
  384     | expr . "==" expr
  385     | expr . "!=" expr
  386     | expr . "<=" expr
  387     | expr . ">=" expr
  388     | expr . '&' expr
  389     | expr . '|' expr
  390     | expr . '^' expr
  391     | expr . "&&" expr
  392     | expr . "||" expr
  393     | expr . "^^" expr
  394     | expr . ".." expr
  397     | expr . "++"
  398     | expr . "--"
  400     | expr . '[' expr ']'
  401     | expr . '.' '[' expr ']'
  402     | expr . "?[" expr ']'
  403     | expr . '.' "?[" expr ']'
  404     | expr . "?." "name"
  405     | expr . '.' "?." "name"
  413     | expr . "??" expr
  414     | expr . '?' expr ':' expr
  417     | expr . "is" "type" '<' $@19 type_declaration_no_options '>' $@20
  418     | expr . "is" basic_type_declaration
  419     | expr . "is" "name"
  420     | expr . "as" "name"
  423     | expr . "as" "type" '<' $@21 type_declaration '>' $@22
  424     | expr . "as" basic_type_declaration
  425     | expr . '?' "as" "name"
  428     | expr . '?' "as" "type" '<' $@23 type_declaration '>' $@24
  429     | expr . '?' "as" basic_type_declaration
  437     | expr . "<|" expr
  438     | expr . "|>" expr
  439     | expr . "|>" basic_type_declaration
  449 expr_mtag: expr . '.' "$f" '(' expr ')'
  450          | expr . "?." "$f" '(' expr ')'
  451          | expr . '.' '.' "$f" '(' expr ')'
  452          | expr . '.' "?." "$f" '(' expr ')'
  453          | expr . "as" "$f" '(' expr ')'
  454          | expr . '?' "as" "$f" '(' expr ')'
  455          | expr . "is" "$f" '(' expr ')'

    "is"                   shift, and go to state 643
    "as"                   shift, and go to state 644
    "<<"                   shift, and go to state 645
    ">>"                   shift, and go to state 646
    "++"                   shift, and go to state 647
    "--"                   shift, and go to state 648
    "<="                   shift, and go to state 649
    ">="                   shift, and go to state 650
    "=="                   shift, and go to state 651
    "!="                   shift, and go to state 652
    "->"                   shift, and go to state 653
    "??"                   shift, and go to state 654
    "?."                   shift, and go to state 655
    "?["                   shift, and go to state 656
    "<|"                   shift, and go to state 657
    "|>"                   shift, and go to state 658
    "<<<"                  shift, and go to state 659
    ">>>"                  shift, and go to state 660
    "&&"                   shift, and go to state 661
    "||"                   shift, and go to state 662
    "^^"                   shift, and go to state 663
    ".."                   shift, and go to state 664
    "begin of code block"  shift, and go to state 323
    '?'                    shift, and go to state 665
    '|'                    shift, and go to state 666
    '^'                    shift, and go to state 667
    '&'                    shift, and go to state 668
    '<'                    shift, and go to state 669
    '>'                    shift, and go to state 670
    '-'                    shift, and go to state 671
    '+'                    shift, and go to state 672
    '*'                    shift, and go to state 673
    '/'                    shift, and go to state 674
    '%'                    shift, and go to state 675
    '.'                    shift, and go to state 676
    '['                    shift, and go to state 677

    expression_block  go to state 926


State 725

   74 expression_with_alias: "assume" "name" . '=' expr

    '='  shift, and go to state 927


State 726

  231 expression_any: "pass" "end of expression" .

    $default  reduce using rule 231 (expression_any)


State 727

   51 expression_label: "label" "integer constant" . ':'

    ':'  shift, and go to state 928


State 728

   52 expression_goto: "goto" "label" . "integer constant"

    "integer constant"  shift, and go to state 929


State 729

   53 expression_goto: "goto" expr .
  336 expr_method_call: expr . "->" "name" '(' ')'
  337                 | expr . "->" "name" '(' expr_list ')'
  347 expr_field: expr . '.' "name"
  348           | expr . '.' '.' "name"
  349           | expr . '.' "name" '(' ')'
  350           | expr . '.' "name" '(' expr_list ')'
  353           | expr . '.' $@17 error $@18
  373 expr: expr . "<<" expr
  374     | expr . ">>" expr
  375     | expr . "<<<" expr
  376     | expr . ">>>" expr
  377     | expr . '+' expr
  378     | expr . '-' expr
  379     | expr . '*' expr
  380     | expr . '/' expr
  381     | expr . '%' expr
  382     | expr . '<' expr
  383     | expr . '>' expr
  384     | expr . "==" expr
  385     | expr . "!=" expr
  386     | expr . "<=" expr
  387     | expr . ">=" expr
  388     | expr . '&' expr
  389     | expr . '|' expr
  390     | expr . '^' expr
  391     | expr . "&&" expr
  392     | expr . "||" expr
  393     | expr . "^^" expr
  394     | expr . ".." expr
  397     | expr . "++"
  398     | expr . "--"
  400     | expr . '[' expr ']'
  401     | expr . '.' '[' expr ']'
  402     | expr . "?[" expr ']'
  403     | expr . '.' "?[" expr ']'
  404     | expr . "?." "name"
  405     | expr . '.' "?." "name"
  413     | expr . "??" expr
  414     | expr . '?' expr ':' expr
  417     | expr . "is" "type" '<' $@19 type_declaration_no_options '>' $@20
  418     | expr . "is" basic_type_declaration
  419     | expr . "is" "name"
  420     | expr . "as" "name"
  423     | expr . "as" "type" '<' $@21 type_declaration '>' $@22
  424     | expr . "as" basic_type_declaration
  425     | expr . '?' "as" "name"
  428     | expr . '?' "as" "type" '<' $@23 type_declaration '>' $@24
  429     | expr . '?' "as" basic_type_declaration
  437     | expr . "<|" expr
  438     | expr . "|>" expr
  439     | expr . "|>" basic_type_declaration
  449 expr_mtag: expr . '.' "$f" '(' expr ')'
  450          | expr . "?." "$f" '(' expr ')'
  451          | expr . '.' '.' "$f" '(' expr ')'
  452          | expr . '.' "?." "$f" '(' expr ')'
  453          | expr . "as" "$f" '(' expr ')'
  454          | expr . '?' "as" "$f" '(' expr ')'
  455          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 643
    "as"   shift, and go to state 644
    "<<"   shift, and go to state 645
    ">>"   shift, and go to state 646
    "++"   shift, and go to state 647
    "--"   shift, and go to state 648
    "<="   shift, and go to state 649
    ">="   shift, and go to state 650
    "=="   shift, and go to state 651
    "!="   shift, and go to state 652
    "->"   shift, and go to state 653
    "??"   shift, and go to state 654
    "?."   shift, and go to state 655
    "?["   shift, and go to state 656
    "<|"   shift, and go to state 657
    "|>"   shift, and go to state 658
    "<<<"  shift, and go to state 659
    ">>>"  shift, and go to state 660
    "&&"   shift, and go to state 661
    "||"   shift, and go to state 662
    "^^"   shift, and go to state 663
    ".."   shift, and go to state 664
    '?'    shift, and go to state 665
    '|'    shift, and go to state 666
    '^'    shift, and go to state 667
    '&'    shift, and go to state 668
    '<'    shift, and go to state 669
    '>'    shift, and go to state 670
    '-'    shift, and go to state 671
    '+'    shift, and go to state 672
    '*'    shift, and go to state 673
    '/'    shift, and go to state 674
    '%'    shift, and go to state 675
    '.'    shift, and go to state 676
    '['    shift, and go to state 677

    $default  reduce using rule 53 (expression_goto)


State 730

   71 expression_unsafe: "unsafe" expression_block .

    $default  reduce using rule 71 (expression_unsafe)


State 731

  258 expression_yield_no_pipe: "yield" "<-" . expr

    "struct"                          shift, and go to state 408
    "class"                           shift, and go to state 409
    "true"                            shift, and go to state 410
    "false"                           shift, and go to state 411
    "new"                             shift, and go to state 412
    "typeinfo"                        shift, and go to state 413
    "type"                            shift, and go to state 414
    "array"                           shift, and go to state 415
    "null"                            shift, and go to state 416
    "table"                           shift, and go to state 417
    "deref"                           shift, and go to state 418
    "cast"                            shift, and go to state 419
    "upcast"                          shift, and go to state 420
    "addr"                            shift, and go to state 421
    "reinterpret"                     shift, and go to state 422
    "fixed_array"                     shift, and go to state 423
    "default"                         shift, and go to state 424
    "bool"                            shift, and go to state 222
    "void"                            shift, and go to state 223
    "string"                          shift, and go to state 224
    "int"                             shift, and go to state 226
    "int2"                            shift, and go to state 227
    "int3"                            shift, and go to state 228
    "int4"                            shift, and go to state 229
    "uint"                            shift, and go to state 230
    "bitfield"                        shift, and go to state 425
    "uint2"                           shift, and go to state 232
    "uint3"                           shift, and go to state 233
    "uint4"                           shift, and go to state 234
    "float"                           shift, and go to state 235
    "float2"                          shift, and go to state 236
    "float3"                          shift, and go to state 237
    "float4"                          shift, and go to state 238
    "range"                           shift, and go to state 239
    "urange"                          shift, and go to state 240
    "range64"                         shift, and go to state 241
    "urange64"                        shift, and go to state 242
    "int64"                           shift, and go to state 244
    "uint64"                          shift, and go to state 245
    "double"                          shift, and go to state 246
    "int8"                            shift, and go to state 249
    "uint8"                           shift, and go to state 250
    "int16"                           shift, and go to state 251
    "uint16"                          shift, and go to state 252
    "tuple"                           shift, and go to state 426
    "variant"                         shift, and go to state 427
    "generator"                       shift, and go to state 428
    "++"                              shift, and go to state 429
    "--"                              shift, and go to state 430
    "::"                              shift, and go to state 55
    "$$"                              shift, and go to state 431
    "$i"                              shift, and go to state 432
    "$v"                              shift, and go to state 433
    "$b"                              shift, and go to state 434
    "$a"                              shift, and go to state 435
    "$c"                              shift, and go to state 436
    "..."                             shift, and go to state 437
    "integer constant"                shift, and go to state 438
    "long integer constant"           shift, and go to state 439
    "unsigned integer constant"       shift, and go to state 440
    "unsigned long integer constant"  shift, and go to state 441
    "unsigned int8 constant"          shift, and go to state 442
    "floating point constant"         shift, and go to state 443
    "double constant"                 shift, and go to state 444
    "name"                            shift, and go to state 56
    "start of the string"             shift, and go to state 445
    "begin of code block"             shift, and go to state 446
    '-'                               shift, and go to state 447
    '+'                               shift, and go to state 448
    '*'                               shift, and go to state 449
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 450
    '!'                               shift, and go to state 451
    '['                               shift, and go to state 452
    '('                               shift, and go to state 453
    '$'                               shift, and go to state 454
    '@'                               shift, and go to state 455

    string_builder          go to state 456
    expr_reader             go to state 457
    expr_call_pipe          go to state 458
    name_in_namespace       go to state 459
    expr_new                go to state 460
    expr_cast               go to state 461
    expr_type_decl          go to state 462
    expr_type_info          go to state 463
    block_or_lambda         go to state 464
    expr_full_block         go to state 465
    expr_numeric_const      go to state 466
    expr_named_call         go to state 467
    expr_method_call        go to state 468
    func_addr_expr          go to state 469
    expr_field              go to state 470
    expr_call               go to state 471
    expr                    go to state 930
    expr_mtag               go to state 473
    basic_type_declaration  go to state 474
    make_decl               go to state 475
    make_struct_decl        go to state 476
    make_tuple_call         go to state 477
    make_dim_decl           go to state 478
    make_table_decl         go to state 479
    array_comprehension     go to state 480


State 732

  257 expression_yield_no_pipe: "yield" expr .
  336 expr_method_call: expr . "->" "name" '(' ')'
  337                 | expr . "->" "name" '(' expr_list ')'
  347 expr_field: expr . '.' "name"
  348           | expr . '.' '.' "name"
  349           | expr . '.' "name" '(' ')'
  350           | expr . '.' "name" '(' expr_list ')'
  353           | expr . '.' $@17 error $@18
  373 expr: expr . "<<" expr
  374     | expr . ">>" expr
  375     | expr . "<<<" expr
  376     | expr . ">>>" expr
  377     | expr . '+' expr
  378     | expr . '-' expr
  379     | expr . '*' expr
  380     | expr . '/' expr
  381     | expr . '%' expr
  382     | expr . '<' expr
  383     | expr . '>' expr
  384     | expr . "==" expr
  385     | expr . "!=" expr
  386     | expr . "<=" expr
  387     | expr . ">=" expr
  388     | expr . '&' expr
  389     | expr . '|' expr
  390     | expr . '^' expr
  391     | expr . "&&" expr
  392     | expr . "||" expr
  393     | expr . "^^" expr
  394     | expr . ".." expr
  397     | expr . "++"
  398     | expr . "--"
  400     | expr . '[' expr ']'
  401     | expr . '.' '[' expr ']'
  402     | expr . "?[" expr ']'
  403     | expr . '.' "?[" expr ']'
  404     | expr . "?." "name"
  405     | expr . '.' "?." "name"
  413     | expr . "??" expr
  414     | expr . '?' expr ':' expr
  417     | expr . "is" "type" '<' $@19 type_declaration_no_options '>' $@20
  418     | expr . "is" basic_type_declaration
  419     | expr . "is" "name"
  420     | expr . "as" "name"
  423     | expr . "as" "type" '<' $@21 type_declaration '>' $@22
  424     | expr . "as" basic_type_declaration
  425     | expr . '?' "as" "name"
  428     | expr . '?' "as" "type" '<' $@23 type_declaration '>' $@24
  429     | expr . '?' "as" basic_type_declaration
  437     | expr . "<|" expr
  438     | expr . "|>" expr
  439     | expr . "|>" basic_type_declaration
  449 expr_mtag: expr . '.' "$f" '(' expr ')'
  450          | expr . "?." "$f" '(' expr ')'
  451          | expr . '.' '.' "$f" '(' expr ')'
  452          | expr . '.' "?." "$f" '(' expr ')'
  453          | expr . "as" "$f" '(' expr ')'
  454          | expr . '?' "as" "$f" '(' expr ')'
  455          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 643
    "as"   shift, and go to state 644
    "<<"   shift, and go to state 645
    ">>"   shift, and go to state 646
    "++"   shift, and go to state 647
    "--"   shift, and go to state 648
    "<="   shift, and go to state 649
    ">="   shift, and go to state 650
    "=="   shift, and go to state 651
    "!="   shift, and go to state 652
    "->"   shift, and go to state 653
    "??"   shift, and go to state 654
    "?."   shift, and go to state 655
    "?["   shift, and go to state 656
    "<|"   shift, and go to state 657
    "|>"   shift, and go to state 658
    "<<<"  shift, and go to state 659
    ">>>"  shift, and go to state 660
    "&&"   shift, and go to state 661
    "||"   shift, and go to state 662
    "^^"   shift, and go to state 663
    ".."   shift, and go to state 664
    '?'    shift, and go to state 665
    '|'    shift, and go to state 666
    '^'    shift, and go to state 667
    '&'    shift, and go to state 668
    '<'    shift, and go to state 669
    '>'    shift, and go to state 670
    '-'    shift, and go to state 671
    '+'    shift, and go to state 672
    '*'    shift, and go to state 673
    '/'    shift, and go to state 674
    '%'    shift, and go to state 675
    '.'    shift, and go to state 676
    '['    shift, and go to state 677

    $default  reduce using rule 257 (expression_yield_no_pipe)


State 733

  212 expression_block: "begin of code block" expressions "end of code block" "finally" . "begin of code block" expressions "end of code block"

    "begin of code block"  shift, and go to state 931


State 734

  229 expression_any: expression_label "end of expression" .

    $default  reduce using rule 229 (expression_any)


State 735

  230 expression_any: expression_goto "end of expression" .

    $default  reduce using rule 230 (expression_any)


State 736

   68 expression_if_then_else: if_or_static_if '(' . expr ')' expression_block expression_else

    "struct"                          shift, and go to state 408
    "class"                           shift, and go to state 409
    "true"                            shift, and go to state 410
    "false"                           shift, and go to state 411
    "new"                             shift, and go to state 412
    "typeinfo"                        shift, and go to state 413
    "type"                            shift, and go to state 414
    "array"                           shift, and go to state 415
    "null"                            shift, and go to state 416
    "table"                           shift, and go to state 417
    "deref"                           shift, and go to state 418
    "cast"                            shift, and go to state 419
    "upcast"                          shift, and go to state 420
    "addr"                            shift, and go to state 421
    "reinterpret"                     shift, and go to state 422
    "fixed_array"                     shift, and go to state 423
    "default"                         shift, and go to state 424
    "bool"                            shift, and go to state 222
    "void"                            shift, and go to state 223
    "string"                          shift, and go to state 224
    "int"                             shift, and go to state 226
    "int2"                            shift, and go to state 227
    "int3"                            shift, and go to state 228
    "int4"                            shift, and go to state 229
    "uint"                            shift, and go to state 230
    "bitfield"                        shift, and go to state 425
    "uint2"                           shift, and go to state 232
    "uint3"                           shift, and go to state 233
    "uint4"                           shift, and go to state 234
    "float"                           shift, and go to state 235
    "float2"                          shift, and go to state 236
    "float3"                          shift, and go to state 237
    "float4"                          shift, and go to state 238
    "range"                           shift, and go to state 239
    "urange"                          shift, and go to state 240
    "range64"                         shift, and go to state 241
    "urange64"                        shift, and go to state 242
    "int64"                           shift, and go to state 244
    "uint64"                          shift, and go to state 245
    "double"                          shift, and go to state 246
    "int8"                            shift, and go to state 249
    "uint8"                           shift, and go to state 250
    "int16"                           shift, and go to state 251
    "uint16"                          shift, and go to state 252
    "tuple"                           shift, and go to state 426
    "variant"                         shift, and go to state 427
    "generator"                       shift, and go to state 428
    "++"                              shift, and go to state 429
    "--"                              shift, and go to state 430
    "::"                              shift, and go to state 55
    "$$"                              shift, and go to state 431
    "$i"                              shift, and go to state 432
    "$v"                              shift, and go to state 433
    "$b"                              shift, and go to state 434
    "$a"                              shift, and go to state 435
    "$c"                              shift, and go to state 436
    "..."                             shift, and go to state 437
    "integer constant"                shift, and go to state 438
    "long integer constant"           shift, and go to state 439
    "unsigned integer constant"       shift, and go to state 440
    "unsigned long integer constant"  shift, and go to state 441
    "unsigned int8 constant"          shift, and go to state 442
    "floating point constant"         shift, and go to state 443
    "double constant"                 shift, and go to state 444
    "name"                            shift, and go to state 56
    "start of the string"             shift, and go to state 445
    "begin of code block"             shift, and go to state 446
    '-'                               shift, and go to state 447
    '+'                               shift, and go to state 448
    '*'                               shift, and go to state 449
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 450
    '!'                               shift, and go to state 451
    '['                               shift, and go to state 452
    '('                               shift, and go to state 453
    '$'                               shift, and go to state 454
    '@'                               shift, and go to state 455

    string_builder          go to state 456
    expr_reader             go to state 457
    expr_call_pipe          go to state 458
    name_in_namespace       go to state 459
    expr_new                go to state 460
    expr_cast               go to state 461
    expr_type_decl          go to state 462
    expr_type_info          go to state 463
    block_or_lambda         go to state 464
    expr_full_block         go to state 465
    expr_numeric_const      go to state 466
    expr_named_call         go to state 467
    expr_method_call        go to state 468
    func_addr_expr          go to state 469
    expr_field              go to state 470
    expr_call               go to state 471
    expr                    go to state 932
    expr_mtag               go to state 473
    basic_type_declaration  go to state 474
    make_decl               go to state 475
    make_struct_decl        go to state 476
    make_tuple_call         go to state 477
    make_dim_decl           go to state 478
    make_table_decl         go to state 479
    array_comprehension     go to state 480


State 737

   69 expression_if_then_else: expression_if_one_liner "if" . '(' expr ')' expression_else_one_liner "end of expression"

    '('  shift, and go to state 933


State 738

  216 expression_any: expression_delete "end of expression" .

    $default  reduce using rule 216 (expression_any)


State 739

  223 expression_any: expression_break "end of expression" .

    $default  reduce using rule 223 (expression_any)


State 740

  224 expression_any: expression_continue "end of expression" .

    $default  reduce using rule 224 (expression_any)


State 741

  225 expression_any: expression_return "end of expression" .

    $default  reduce using rule 225 (expression_any)


State 742

  259 expression_yield: expression_yield_no_pipe "end of expression" .

    $default  reduce using rule 259 (expression_yield)


State 743

  266 optional_in_scope: "inscope" .

    $default  reduce using rule 266 (optional_in_scope)


State 744

  272 expression_let: kwd_let optional_in_scope . let_variable_declaration
  273               | kwd_let optional_in_scope . tuple_expansion_variable_declaration

    "$i"    shift, and go to state 341
    "name"  shift, and go to state 342
    '('     shift, and go to state 934

    tuple_expansion_variable_declaration  go to state 935
    let_variable_name_with_pos_list       go to state 343
    let_variable_declaration              go to state 936


State 745

  215 expression_any: expr_assign "end of expression" .

    $default  reduce using rule 215 (expression_any)


State 746

  325 expr_assign: expr "+=" . expr

    "struct"                          shift, and go to state 408
    "class"                           shift, and go to state 409
    "true"                            shift, and go to state 410
    "false"                           shift, and go to state 411
    "new"                             shift, and go to state 412
    "typeinfo"                        shift, and go to state 413
    "type"                            shift, and go to state 414
    "array"                           shift, and go to state 415
    "null"                            shift, and go to state 416
    "table"                           shift, and go to state 417
    "deref"                           shift, and go to state 418
    "cast"                            shift, and go to state 419
    "upcast"                          shift, and go to state 420
    "addr"                            shift, and go to state 421
    "reinterpret"                     shift, and go to state 422
    "fixed_array"                     shift, and go to state 423
    "default"                         shift, and go to state 424
    "bool"                            shift, and go to state 222
    "void"                            shift, and go to state 223
    "string"                          shift, and go to state 224
    "int"                             shift, and go to state 226
    "int2"                            shift, and go to state 227
    "int3"                            shift, and go to state 228
    "int4"                            shift, and go to state 229
    "uint"                            shift, and go to state 230
    "bitfield"                        shift, and go to state 425
    "uint2"                           shift, and go to state 232
    "uint3"                           shift, and go to state 233
    "uint4"                           shift, and go to state 234
    "float"                           shift, and go to state 235
    "float2"                          shift, and go to state 236
    "float3"                          shift, and go to state 237
    "float4"                          shift, and go to state 238
    "range"                           shift, and go to state 239
    "urange"                          shift, and go to state 240
    "range64"                         shift, and go to state 241
    "urange64"                        shift, and go to state 242
    "int64"                           shift, and go to state 244
    "uint64"                          shift, and go to state 245
    "double"                          shift, and go to state 246
    "int8"                            shift, and go to state 249
    "uint8"                           shift, and go to state 250
    "int16"                           shift, and go to state 251
    "uint16"                          shift, and go to state 252
    "tuple"                           shift, and go to state 426
    "variant"                         shift, and go to state 427
    "generator"                       shift, and go to state 428
    "++"                              shift, and go to state 429
    "--"                              shift, and go to state 430
    "::"                              shift, and go to state 55
    "$$"                              shift, and go to state 431
    "$i"                              shift, and go to state 432
    "$v"                              shift, and go to state 433
    "$b"                              shift, and go to state 434
    "$a"                              shift, and go to state 435
    "$c"                              shift, and go to state 436
    "..."                             shift, and go to state 437
    "integer constant"                shift, and go to state 438
    "long integer constant"           shift, and go to state 439
    "unsigned integer constant"       shift, and go to state 440
    "unsigned long integer constant"  shift, and go to state 441
    "unsigned int8 constant"          shift, and go to state 442
    "floating point constant"         shift, and go to state 443
    "double constant"                 shift, and go to state 444
    "name"                            shift, and go to state 56
    "start of the string"             shift, and go to state 445
    "begin of code block"             shift, and go to state 446
    '-'                               shift, and go to state 447
    '+'                               shift, and go to state 448
    '*'                               shift, and go to state 449
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 450
    '!'                               shift, and go to state 451
    '['                               shift, and go to state 452
    '('                               shift, and go to state 453
    '$'                               shift, and go to state 454
    '@'                               shift, and go to state 455

    string_builder          go to state 456
    expr_reader             go to state 457
    expr_call_pipe          go to state 458
    name_in_namespace       go to state 459
    expr_new                go to state 460
    expr_cast               go to state 461
    expr_type_decl          go to state 462
    expr_type_info          go to state 463
    block_or_lambda         go to state 464
    expr_full_block         go to state 465
    expr_numeric_const      go to state 466
    expr_named_call         go to state 467
    expr_method_call        go to state 468
    func_addr_expr          go to state 469
    expr_field              go to state 470
    expr_call               go to state 471
    expr                    go to state 937
    expr_mtag               go to state 473
    basic_type_declaration  go to state 474
    make_decl               go to state 475
    make_struct_decl        go to state 476
    make_tuple_call         go to state 477
    make_dim_decl           go to state 478
    make_table_decl         go to state 479
    array_comprehension     go to state 480


State 747

  326 expr_assign: expr "-=" . expr

    "struct"                          shift, and go to state 408
    "class"                           shift, and go to state 409
    "true"                            shift, and go to state 410
    "false"                           shift, and go to state 411
    "new"                             shift, and go to state 412
    "typeinfo"                        shift, and go to state 413
    "type"                            shift, and go to state 414
    "array"                           shift, and go to state 415
    "null"                            shift, and go to state 416
    "table"                           shift, and go to state 417
    "deref"                           shift, and go to state 418
    "cast"                            shift, and go to state 419
    "upcast"                          shift, and go to state 420
    "addr"                            shift, and go to state 421
    "reinterpret"                     shift, and go to state 422
    "fixed_array"                     shift, and go to state 423
    "default"                         shift, and go to state 424
    "bool"                            shift, and go to state 222
    "void"                            shift, and go to state 223
    "string"                          shift, and go to state 224
    "int"                             shift, and go to state 226
    "int2"                            shift, and go to state 227
    "int3"                            shift, and go to state 228
    "int4"                            shift, and go to state 229
    "uint"                            shift, and go to state 230
    "bitfield"                        shift, and go to state 425
    "uint2"                           shift, and go to state 232
    "uint3"                           shift, and go to state 233
    "uint4"                           shift, and go to state 234
    "float"                           shift, and go to state 235
    "float2"                          shift, and go to state 236
    "float3"                          shift, and go to state 237
    "float4"                          shift, and go to state 238
    "range"                           shift, and go to state 239
    "urange"                          shift, and go to state 240
    "range64"                         shift, and go to state 241
    "urange64"                        shift, and go to state 242
    "int64"                           shift, and go to state 244
    "uint64"                          shift, and go to state 245
    "double"                          shift, and go to state 246
    "int8"                            shift, and go to state 249
    "uint8"                           shift, and go to state 250
    "int16"                           shift, and go to state 251
    "uint16"                          shift, and go to state 252
    "tuple"                           shift, and go to state 426
    "variant"                         shift, and go to state 427
    "generator"                       shift, and go to state 428
    "++"                              shift, and go to state 429
    "--"                              shift, and go to state 430
    "::"                              shift, and go to state 55
    "$$"                              shift, and go to state 431
    "$i"                              shift, and go to state 432
    "$v"                              shift, and go to state 433
    "$b"                              shift, and go to state 434
    "$a"                              shift, and go to state 435
    "$c"                              shift, and go to state 436
    "..."                             shift, and go to state 437
    "integer constant"                shift, and go to state 438
    "long integer constant"           shift, and go to state 439
    "unsigned integer constant"       shift, and go to state 440
    "unsigned long integer constant"  shift, and go to state 441
    "unsigned int8 constant"          shift, and go to state 442
    "floating point constant"         shift, and go to state 443
    "double constant"                 shift, and go to state 444
    "name"                            shift, and go to state 56
    "start of the string"             shift, and go to state 445
    "begin of code block"             shift, and go to state 446
    '-'                               shift, and go to state 447
    '+'                               shift, and go to state 448
    '*'                               shift, and go to state 449
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 450
    '!'                               shift, and go to state 451
    '['                               shift, and go to state 452
    '('                               shift, and go to state 453
    '$'                               shift, and go to state 454
    '@'                               shift, and go to state 455

    string_builder          go to state 456
    expr_reader             go to state 457
    expr_call_pipe          go to state 458
    name_in_namespace       go to state 459
    expr_new                go to state 460
    expr_cast               go to state 461
    expr_type_decl          go to state 462
    expr_type_info          go to state 463
    block_or_lambda         go to state 464
    expr_full_block         go to state 465
    expr_numeric_const      go to state 466
    expr_named_call         go to state 467
    expr_method_call        go to state 468
    func_addr_expr          go to state 469
    expr_field              go to state 470
    expr_call               go to state 471
    expr                    go to state 938
    expr_mtag               go to state 473
    basic_type_declaration  go to state 474
    make_decl               go to state 475
    make_struct_decl        go to state 476
    make_tuple_call         go to state 477
    make_dim_decl           go to state 478
    make_table_decl         go to state 479
    array_comprehension     go to state 480


State 748

  328 expr_assign: expr "/=" . expr

    "struct"                          shift, and go to state 408
    "class"                           shift, and go to state 409
    "true"                            shift, and go to state 410
    "false"                           shift, and go to state 411
    "new"                             shift, and go to state 412
    "typeinfo"                        shift, and go to state 413
    "type"                            shift, and go to state 414
    "array"                           shift, and go to state 415
    "null"                            shift, and go to state 416
    "table"                           shift, and go to state 417
    "deref"                           shift, and go to state 418
    "cast"                            shift, and go to state 419
    "upcast"                          shift, and go to state 420
    "addr"                            shift, and go to state 421
    "reinterpret"                     shift, and go to state 422
    "fixed_array"                     shift, and go to state 423
    "default"                         shift, and go to state 424
    "bool"                            shift, and go to state 222
    "void"                            shift, and go to state 223
    "string"                          shift, and go to state 224
    "int"                             shift, and go to state 226
    "int2"                            shift, and go to state 227
    "int3"                            shift, and go to state 228
    "int4"                            shift, and go to state 229
    "uint"                            shift, and go to state 230
    "bitfield"                        shift, and go to state 425
    "uint2"                           shift, and go to state 232
    "uint3"                           shift, and go to state 233
    "uint4"                           shift, and go to state 234
    "float"                           shift, and go to state 235
    "float2"                          shift, and go to state 236
    "float3"                          shift, and go to state 237
    "float4"                          shift, and go to state 238
    "range"                           shift, and go to state 239
    "urange"                          shift, and go to state 240
    "range64"                         shift, and go to state 241
    "urange64"                        shift, and go to state 242
    "int64"                           shift, and go to state 244
    "uint64"                          shift, and go to state 245
    "double"                          shift, and go to state 246
    "int8"                            shift, and go to state 249
    "uint8"                           shift, and go to state 250
    "int16"                           shift, and go to state 251
    "uint16"                          shift, and go to state 252
    "tuple"                           shift, and go to state 426
    "variant"                         shift, and go to state 427
    "generator"                       shift, and go to state 428
    "++"                              shift, and go to state 429
    "--"                              shift, and go to state 430
    "::"                              shift, and go to state 55
    "$$"                              shift, and go to state 431
    "$i"                              shift, and go to state 432
    "$v"                              shift, and go to state 433
    "$b"                              shift, and go to state 434
    "$a"                              shift, and go to state 435
    "$c"                              shift, and go to state 436
    "..."                             shift, and go to state 437
    "integer constant"                shift, and go to state 438
    "long integer constant"           shift, and go to state 439
    "unsigned integer constant"       shift, and go to state 440
    "unsigned long integer constant"  shift, and go to state 441
    "unsigned int8 constant"          shift, and go to state 442
    "floating point constant"         shift, and go to state 443
    "double constant"                 shift, and go to state 444
    "name"                            shift, and go to state 56
    "start of the string"             shift, and go to state 445
    "begin of code block"             shift, and go to state 446
    '-'                               shift, and go to state 447
    '+'                               shift, and go to state 448
    '*'                               shift, and go to state 449
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 450
    '!'                               shift, and go to state 451
    '['                               shift, and go to state 452
    '('                               shift, and go to state 453
    '$'                               shift, and go to state 454
    '@'                               shift, and go to state 455

    string_builder          go to state 456
    expr_reader             go to state 457
    expr_call_pipe          go to state 458
    name_in_namespace       go to state 459
    expr_new                go to state 460
    expr_cast               go to state 461
    expr_type_decl          go to state 462
    expr_type_info          go to state 463
    block_or_lambda         go to state 464
    expr_full_block         go to state 465
    expr_numeric_const      go to state 466
    expr_named_call         go to state 467
    expr_method_call        go to state 468
    func_addr_expr          go to state 469
    expr_field              go to state 470
    expr_call               go to state 471
    expr                    go to state 939
    expr_mtag               go to state 473
    basic_type_declaration  go to state 474
    make_decl               go to state 475
    make_struct_decl        go to state 476
    make_tuple_call         go to state 477
    make_dim_decl           go to state 478
    make_table_decl         go to state 479
    array_comprehension     go to state 480


State 749

  327 expr_assign: expr "*=" . expr

    "struct"                          shift, and go to state 408
    "class"                           shift, and go to state 409
    "true"                            shift, and go to state 410
    "false"                           shift, and go to state 411
    "new"                             shift, and go to state 412
    "typeinfo"                        shift, and go to state 413
    "type"                            shift, and go to state 414
    "array"                           shift, and go to state 415
    "null"                            shift, and go to state 416
    "table"                           shift, and go to state 417
    "deref"                           shift, and go to state 418
    "cast"                            shift, and go to state 419
    "upcast"                          shift, and go to state 420
    "addr"                            shift, and go to state 421
    "reinterpret"                     shift, and go to state 422
    "fixed_array"                     shift, and go to state 423
    "default"                         shift, and go to state 424
    "bool"                            shift, and go to state 222
    "void"                            shift, and go to state 223
    "string"                          shift, and go to state 224
    "int"                             shift, and go to state 226
    "int2"                            shift, and go to state 227
    "int3"                            shift, and go to state 228
    "int4"                            shift, and go to state 229
    "uint"                            shift, and go to state 230
    "bitfield"                        shift, and go to state 425
    "uint2"                           shift, and go to state 232
    "uint3"                           shift, and go to state 233
    "uint4"                           shift, and go to state 234
    "float"                           shift, and go to state 235
    "float2"                          shift, and go to state 236
    "float3"                          shift, and go to state 237
    "float4"                          shift, and go to state 238
    "range"                           shift, and go to state 239
    "urange"                          shift, and go to state 240
    "range64"                         shift, and go to state 241
    "urange64"                        shift, and go to state 242
    "int64"                           shift, and go to state 244
    "uint64"                          shift, and go to state 245
    "double"                          shift, and go to state 246
    "int8"                            shift, and go to state 249
    "uint8"                           shift, and go to state 250
    "int16"                           shift, and go to state 251
    "uint16"                          shift, and go to state 252
    "tuple"                           shift, and go to state 426
    "variant"                         shift, and go to state 427
    "generator"                       shift, and go to state 428
    "++"                              shift, and go to state 429
    "--"                              shift, and go to state 430
    "::"                              shift, and go to state 55
    "$$"                              shift, and go to state 431
    "$i"                              shift, and go to state 432
    "$v"                              shift, and go to state 433
    "$b"                              shift, and go to state 434
    "$a"                              shift, and go to state 435
    "$c"                              shift, and go to state 436
    "..."                             shift, and go to state 437
    "integer constant"                shift, and go to state 438
    "long integer constant"           shift, and go to state 439
    "unsigned integer constant"       shift, and go to state 440
    "unsigned long integer constant"  shift, and go to state 441
    "unsigned int8 constant"          shift, and go to state 442
    "floating point constant"         shift, and go to state 443
    "double constant"                 shift, and go to state 444
    "name"                            shift, and go to state 56
    "start of the string"             shift, and go to state 445
    "begin of code block"             shift, and go to state 446
    '-'                               shift, and go to state 447
    '+'                               shift, and go to state 448
    '*'                               shift, and go to state 449
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 450
    '!'                               shift, and go to state 451
    '['                               shift, and go to state 452
    '('                               shift, and go to state 453
    '$'                               shift, and go to state 454
    '@'                               shift, and go to state 455

    string_builder          go to state 456
    expr_reader             go to state 457
    expr_call_pipe          go to state 458
    name_in_namespace       go to state 459
    expr_new                go to state 460
    expr_cast               go to state 461
    expr_type_decl          go to state 462
    expr_type_info          go to state 463
    block_or_lambda         go to state 464
    expr_full_block         go to state 465
    expr_numeric_const      go to state 466
    expr_named_call         go to state 467
    expr_method_call        go to state 468
    func_addr_expr          go to state 469
    expr_field              go to state 470
    expr_call               go to state 471
    expr                    go to state 940
    expr_mtag               go to state 473
    basic_type_declaration  go to state 474
    make_decl               go to state 475
    make_struct_decl        go to state 476
    make_tuple_call         go to state 477
    make_dim_decl           go to state 478
    make_table_decl         go to state 479
    array_comprehension     go to state 480


State 750

  329 expr_assign: expr "%=" . expr

    "struct"                          shift, and go to state 408
    "class"                           shift, and go to state 409
    "true"                            shift, and go to state 410
    "false"                           shift, and go to state 411
    "new"                             shift, and go to state 412
    "typeinfo"                        shift, and go to state 413
    "type"                            shift, and go to state 414
    "array"                           shift, and go to state 415
    "null"                            shift, and go to state 416
    "table"                           shift, and go to state 417
    "deref"                           shift, and go to state 418
    "cast"                            shift, and go to state 419
    "upcast"                          shift, and go to state 420
    "addr"                            shift, and go to state 421
    "reinterpret"                     shift, and go to state 422
    "fixed_array"                     shift, and go to state 423
    "default"                         shift, and go to state 424
    "bool"                            shift, and go to state 222
    "void"                            shift, and go to state 223
    "string"                          shift, and go to state 224
    "int"                             shift, and go to state 226
    "int2"                            shift, and go to state 227
    "int3"                            shift, and go to state 228
    "int4"                            shift, and go to state 229
    "uint"                            shift, and go to state 230
    "bitfield"                        shift, and go to state 425
    "uint2"                           shift, and go to state 232
    "uint3"                           shift, and go to state 233
    "uint4"                           shift, and go to state 234
    "float"                           shift, and go to state 235
    "float2"                          shift, and go to state 236
    "float3"                          shift, and go to state 237
    "float4"                          shift, and go to state 238
    "range"                           shift, and go to state 239
    "urange"                          shift, and go to state 240
    "range64"                         shift, and go to state 241
    "urange64"                        shift, and go to state 242
    "int64"                           shift, and go to state 244
    "uint64"                          shift, and go to state 245
    "double"                          shift, and go to state 246
    "int8"                            shift, and go to state 249
    "uint8"                           shift, and go to state 250
    "int16"                           shift, and go to state 251
    "uint16"                          shift, and go to state 252
    "tuple"                           shift, and go to state 426
    "variant"                         shift, and go to state 427
    "generator"                       shift, and go to state 428
    "++"                              shift, and go to state 429
    "--"                              shift, and go to state 430
    "::"                              shift, and go to state 55
    "$$"                              shift, and go to state 431
    "$i"                              shift, and go to state 432
    "$v"                              shift, and go to state 433
    "$b"                              shift, and go to state 434
    "$a"                              shift, and go to state 435
    "$c"                              shift, and go to state 436
    "..."                             shift, and go to state 437
    "integer constant"                shift, and go to state 438
    "long integer constant"           shift, and go to state 439
    "unsigned integer constant"       shift, and go to state 440
    "unsigned long integer constant"  shift, and go to state 441
    "unsigned int8 constant"          shift, and go to state 442
    "floating point constant"         shift, and go to state 443
    "double constant"                 shift, and go to state 444
    "name"                            shift, and go to state 56
    "start of the string"             shift, and go to state 445
    "begin of code block"             shift, and go to state 446
    '-'                               shift, and go to state 447
    '+'                               shift, and go to state 448
    '*'                               shift, and go to state 449
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 450
    '!'                               shift, and go to state 451
    '['                               shift, and go to state 452
    '('                               shift, and go to state 453
    '$'                               shift, and go to state 454
    '@'                               shift, and go to state 455

    string_builder          go to state 456
    expr_reader             go to state 457
    expr_call_pipe          go to state 458
    name_in_namespace       go to state 459
    expr_new                go to state 460
    expr_cast               go to state 461
    expr_type_decl          go to state 462
    expr_type_info          go to state 463
    block_or_lambda         go to state 464
    expr_full_block         go to state 465
    expr_numeric_const      go to state 466
    expr_named_call         go to state 467
    expr_method_call        go to state 468
    func_addr_expr          go to state 469
    expr_field              go to state 470
    expr_call               go to state 471
    expr                    go to state 941
    expr_mtag               go to state 473
    basic_type_declaration  go to state 474
    make_decl               go to state 475
    make_struct_decl        go to state 476
    make_tuple_call         go to state 477
    make_dim_decl           go to state 478
    make_table_decl         go to state 479
    array_comprehension     go to state 480


State 751

  319 expr_assign: expr "&=" . expr

    "struct"                          shift, and go to state 408
    "class"                           shift, and go to state 409
    "true"                            shift, and go to state 410
    "false"                           shift, and go to state 411
    "new"                             shift, and go to state 412
    "typeinfo"                        shift, and go to state 413
    "type"                            shift, and go to state 414
    "array"                           shift, and go to state 415
    "null"                            shift, and go to state 416
    "table"                           shift, and go to state 417
    "deref"                           shift, and go to state 418
    "cast"                            shift, and go to state 419
    "upcast"                          shift, and go to state 420
    "addr"                            shift, and go to state 421
    "reinterpret"                     shift, and go to state 422
    "fixed_array"                     shift, and go to state 423
    "default"                         shift, and go to state 424
    "bool"                            shift, and go to state 222
    "void"                            shift, and go to state 223
    "string"                          shift, and go to state 224
    "int"                             shift, and go to state 226
    "int2"                            shift, and go to state 227
    "int3"                            shift, and go to state 228
    "int4"                            shift, and go to state 229
    "uint"                            shift, and go to state 230
    "bitfield"                        shift, and go to state 425
    "uint2"                           shift, and go to state 232
    "uint3"                           shift, and go to state 233
    "uint4"                           shift, and go to state 234
    "float"                           shift, and go to state 235
    "float2"                          shift, and go to state 236
    "float3"                          shift, and go to state 237
    "float4"                          shift, and go to state 238
    "range"                           shift, and go to state 239
    "urange"                          shift, and go to state 240
    "range64"                         shift, and go to state 241
    "urange64"                        shift, and go to state 242
    "int64"                           shift, and go to state 244
    "uint64"                          shift, and go to state 245
    "double"                          shift, and go to state 246
    "int8"                            shift, and go to state 249
    "uint8"                           shift, and go to state 250
    "int16"                           shift, and go to state 251
    "uint16"                          shift, and go to state 252
    "tuple"                           shift, and go to state 426
    "variant"                         shift, and go to state 427
    "generator"                       shift, and go to state 428
    "++"                              shift, and go to state 429
    "--"                              shift, and go to state 430
    "::"                              shift, and go to state 55
    "$$"                              shift, and go to state 431
    "$i"                              shift, and go to state 432
    "$v"                              shift, and go to state 433
    "$b"                              shift, and go to state 434
    "$a"                              shift, and go to state 435
    "$c"                              shift, and go to state 436
    "..."                             shift, and go to state 437
    "integer constant"                shift, and go to state 438
    "long integer constant"           shift, and go to state 439
    "unsigned integer constant"       shift, and go to state 440
    "unsigned long integer constant"  shift, and go to state 441
    "unsigned int8 constant"          shift, and go to state 442
    "floating point constant"         shift, and go to state 443
    "double constant"                 shift, and go to state 444
    "name"                            shift, and go to state 56
    "start of the string"             shift, and go to state 445
    "begin of code block"             shift, and go to state 446
    '-'                               shift, and go to state 447
    '+'                               shift, and go to state 448
    '*'                               shift, and go to state 449
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 450
    '!'                               shift, and go to state 451
    '['                               shift, and go to state 452
    '('                               shift, and go to state 453
    '$'                               shift, and go to state 454
    '@'                               shift, and go to state 455

    string_builder          go to state 456
    expr_reader             go to state 457
    expr_call_pipe          go to state 458
    name_in_namespace       go to state 459
    expr_new                go to state 460
    expr_cast               go to state 461
    expr_type_decl          go to state 462
    expr_type_info          go to state 463
    block_or_lambda         go to state 464
    expr_full_block         go to state 465
    expr_numeric_const      go to state 466
    expr_named_call         go to state 467
    expr_method_call        go to state 468
    func_addr_expr          go to state 469
    expr_field              go to state 470
    expr_call               go to state 471
    expr                    go to state 942
    expr_mtag               go to state 473
    basic_type_declaration  go to state 474
    make_decl               go to state 475
    make_struct_decl        go to state 476
    make_tuple_call         go to state 477
    make_dim_decl           go to state 478
    make_table_decl         go to state 479
    array_comprehension     go to state 480


State 752

  320 expr_assign: expr "|=" . expr

    "struct"                          shift, and go to state 408
    "class"                           shift, and go to state 409
    "true"                            shift, and go to state 410
    "false"                           shift, and go to state 411
    "new"                             shift, and go to state 412
    "typeinfo"                        shift, and go to state 413
    "type"                            shift, and go to state 414
    "array"                           shift, and go to state 415
    "null"                            shift, and go to state 416
    "table"                           shift, and go to state 417
    "deref"                           shift, and go to state 418
    "cast"                            shift, and go to state 419
    "upcast"                          shift, and go to state 420
    "addr"                            shift, and go to state 421
    "reinterpret"                     shift, and go to state 422
    "fixed_array"                     shift, and go to state 423
    "default"                         shift, and go to state 424
    "bool"                            shift, and go to state 222
    "void"                            shift, and go to state 223
    "string"                          shift, and go to state 224
    "int"                             shift, and go to state 226
    "int2"                            shift, and go to state 227
    "int3"                            shift, and go to state 228
    "int4"                            shift, and go to state 229
    "uint"                            shift, and go to state 230
    "bitfield"                        shift, and go to state 425
    "uint2"                           shift, and go to state 232
    "uint3"                           shift, and go to state 233
    "uint4"                           shift, and go to state 234
    "float"                           shift, and go to state 235
    "float2"                          shift, and go to state 236
    "float3"                          shift, and go to state 237
    "float4"                          shift, and go to state 238
    "range"                           shift, and go to state 239
    "urange"                          shift, and go to state 240
    "range64"                         shift, and go to state 241
    "urange64"                        shift, and go to state 242
    "int64"                           shift, and go to state 244
    "uint64"                          shift, and go to state 245
    "double"                          shift, and go to state 246
    "int8"                            shift, and go to state 249
    "uint8"                           shift, and go to state 250
    "int16"                           shift, and go to state 251
    "uint16"                          shift, and go to state 252
    "tuple"                           shift, and go to state 426
    "variant"                         shift, and go to state 427
    "generator"                       shift, and go to state 428
    "++"                              shift, and go to state 429
    "--"                              shift, and go to state 430
    "::"                              shift, and go to state 55
    "$$"                              shift, and go to state 431
    "$i"                              shift, and go to state 432
    "$v"                              shift, and go to state 433
    "$b"                              shift, and go to state 434
    "$a"                              shift, and go to state 435
    "$c"                              shift, and go to state 436
    "..."                             shift, and go to state 437
    "integer constant"                shift, and go to state 438
    "long integer constant"           shift, and go to state 439
    "unsigned integer constant"       shift, and go to state 440
    "unsigned long integer constant"  shift, and go to state 441
    "unsigned int8 constant"          shift, and go to state 442
    "floating point constant"         shift, and go to state 443
    "double constant"                 shift, and go to state 444
    "name"                            shift, and go to state 56
    "start of the string"             shift, and go to state 445
    "begin of code block"             shift, and go to state 446
    '-'                               shift, and go to state 447
    '+'                               shift, and go to state 448
    '*'                               shift, and go to state 449
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 450
    '!'                               shift, and go to state 451
    '['                               shift, and go to state 452
    '('                               shift, and go to state 453
    '$'                               shift, and go to state 454
    '@'                               shift, and go to state 455

    string_builder          go to state 456
    expr_reader             go to state 457
    expr_call_pipe          go to state 458
    name_in_namespace       go to state 459
    expr_new                go to state 460
    expr_cast               go to state 461
    expr_type_decl          go to state 462
    expr_type_info          go to state 463
    block_or_lambda         go to state 464
    expr_full_block         go to state 465
    expr_numeric_const      go to state 466
    expr_named_call         go to state 467
    expr_method_call        go to state 468
    func_addr_expr          go to state 469
    expr_field              go to state 470
    expr_call               go to state 471
    expr                    go to state 943
    expr_mtag               go to state 473
    basic_type_declaration  go to state 474
    make_decl               go to state 475
    make_struct_decl        go to state 476
    make_tuple_call         go to state 477
    make_dim_decl           go to state 478
    make_table_decl         go to state 479
    array_comprehension     go to state 480


State 753

  321 expr_assign: expr "^=" . expr

    "struct"                          shift, and go to state 408
    "class"                           shift, and go to state 409
    "true"                            shift, and go to state 410
    "false"                           shift, and go to state 411
    "new"                             shift, and go to state 412
    "typeinfo"                        shift, and go to state 413
    "type"                            shift, and go to state 414
    "array"                           shift, and go to state 415
    "null"                            shift, and go to state 416
    "table"                           shift, and go to state 417
    "deref"                           shift, and go to state 418
    "cast"                            shift, and go to state 419
    "upcast"                          shift, and go to state 420
    "addr"                            shift, and go to state 421
    "reinterpret"                     shift, and go to state 422
    "fixed_array"                     shift, and go to state 423
    "default"                         shift, and go to state 424
    "bool"                            shift, and go to state 222
    "void"                            shift, and go to state 223
    "string"                          shift, and go to state 224
    "int"                             shift, and go to state 226
    "int2"                            shift, and go to state 227
    "int3"                            shift, and go to state 228
    "int4"                            shift, and go to state 229
    "uint"                            shift, and go to state 230
    "bitfield"                        shift, and go to state 425
    "uint2"                           shift, and go to state 232
    "uint3"                           shift, and go to state 233
    "uint4"                           shift, and go to state 234
    "float"                           shift, and go to state 235
    "float2"                          shift, and go to state 236
    "float3"                          shift, and go to state 237
    "float4"                          shift, and go to state 238
    "range"                           shift, and go to state 239
    "urange"                          shift, and go to state 240
    "range64"                         shift, and go to state 241
    "urange64"                        shift, and go to state 242
    "int64"                           shift, and go to state 244
    "uint64"                          shift, and go to state 245
    "double"                          shift, and go to state 246
    "int8"                            shift, and go to state 249
    "uint8"                           shift, and go to state 250
    "int16"                           shift, and go to state 251
    "uint16"                          shift, and go to state 252
    "tuple"                           shift, and go to state 426
    "variant"                         shift, and go to state 427
    "generator"                       shift, and go to state 428
    "++"                              shift, and go to state 429
    "--"                              shift, and go to state 430
    "::"                              shift, and go to state 55
    "$$"                              shift, and go to state 431
    "$i"                              shift, and go to state 432
    "$v"                              shift, and go to state 433
    "$b"                              shift, and go to state 434
    "$a"                              shift, and go to state 435
    "$c"                              shift, and go to state 436
    "..."                             shift, and go to state 437
    "integer constant"                shift, and go to state 438
    "long integer constant"           shift, and go to state 439
    "unsigned integer constant"       shift, and go to state 440
    "unsigned long integer constant"  shift, and go to state 441
    "unsigned int8 constant"          shift, and go to state 442
    "floating point constant"         shift, and go to state 443
    "double constant"                 shift, and go to state 444
    "name"                            shift, and go to state 56
    "start of the string"             shift, and go to state 445
    "begin of code block"             shift, and go to state 446
    '-'                               shift, and go to state 447
    '+'                               shift, and go to state 448
    '*'                               shift, and go to state 449
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 450
    '!'                               shift, and go to state 451
    '['                               shift, and go to state 452
    '('                               shift, and go to state 453
    '$'                               shift, and go to state 454
    '@'                               shift, and go to state 455

    string_builder          go to state 456
    expr_reader             go to state 457
    expr_call_pipe          go to state 458
    name_in_namespace       go to state 459
    expr_new                go to state 460
    expr_cast               go to state 461
    expr_type_decl          go to state 462
    expr_type_info          go to state 463
    block_or_lambda         go to state 464
    expr_full_block         go to state 465
    expr_numeric_const      go to state 466
    expr_named_call         go to state 467
    expr_method_call        go to state 468
    func_addr_expr          go to state 469
    expr_field              go to state 470
    expr_call               go to state 471
    expr                    go to state 944
    expr_mtag               go to state 473
    basic_type_declaration  go to state 474
    make_decl               go to state 475
    make_struct_decl        go to state 476
    make_tuple_call         go to state 477
    make_dim_decl           go to state 478
    make_table_decl         go to state 479
    array_comprehension     go to state 480


State 754

  330 expr_assign: expr "<<=" . expr

    "struct"                          shift, and go to state 408
    "class"                           shift, and go to state 409
    "true"                            shift, and go to state 410
    "false"                           shift, and go to state 411
    "new"                             shift, and go to state 412
    "typeinfo"                        shift, and go to state 413
    "type"                            shift, and go to state 414
    "array"                           shift, and go to state 415
    "null"                            shift, and go to state 416
    "table"                           shift, and go to state 417
    "deref"                           shift, and go to state 418
    "cast"                            shift, and go to state 419
    "upcast"                          shift, and go to state 420
    "addr"                            shift, and go to state 421
    "reinterpret"                     shift, and go to state 422
    "fixed_array"                     shift, and go to state 423
    "default"                         shift, and go to state 424
    "bool"                            shift, and go to state 222
    "void"                            shift, and go to state 223
    "string"                          shift, and go to state 224
    "int"                             shift, and go to state 226
    "int2"                            shift, and go to state 227
    "int3"                            shift, and go to state 228
    "int4"                            shift, and go to state 229
    "uint"                            shift, and go to state 230
    "bitfield"                        shift, and go to state 425
    "uint2"                           shift, and go to state 232
    "uint3"                           shift, and go to state 233
    "uint4"                           shift, and go to state 234
    "float"                           shift, and go to state 235
    "float2"                          shift, and go to state 236
    "float3"                          shift, and go to state 237
    "float4"                          shift, and go to state 238
    "range"                           shift, and go to state 239
    "urange"                          shift, and go to state 240
    "range64"                         shift, and go to state 241
    "urange64"                        shift, and go to state 242
    "int64"                           shift, and go to state 244
    "uint64"                          shift, and go to state 245
    "double"                          shift, and go to state 246
    "int8"                            shift, and go to state 249
    "uint8"                           shift, and go to state 250
    "int16"                           shift, and go to state 251
    "uint16"                          shift, and go to state 252
    "tuple"                           shift, and go to state 426
    "variant"                         shift, and go to state 427
    "generator"                       shift, and go to state 428
    "++"                              shift, and go to state 429
    "--"                              shift, and go to state 430
    "::"                              shift, and go to state 55
    "$$"                              shift, and go to state 431
    "$i"                              shift, and go to state 432
    "$v"                              shift, and go to state 433
    "$b"                              shift, and go to state 434
    "$a"                              shift, and go to state 435
    "$c"                              shift, and go to state 436
    "..."                             shift, and go to state 437
    "integer constant"                shift, and go to state 438
    "long integer constant"           shift, and go to state 439
    "unsigned integer constant"       shift, and go to state 440
    "unsigned long integer constant"  shift, and go to state 441
    "unsigned int8 constant"          shift, and go to state 442
    "floating point constant"         shift, and go to state 443
    "double constant"                 shift, and go to state 444
    "name"                            shift, and go to state 56
    "start of the string"             shift, and go to state 445
    "begin of code block"             shift, and go to state 446
    '-'                               shift, and go to state 447
    '+'                               shift, and go to state 448
    '*'                               shift, and go to state 449
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 450
    '!'                               shift, and go to state 451
    '['                               shift, and go to state 452
    '('                               shift, and go to state 453
    '$'                               shift, and go to state 454
    '@'                               shift, and go to state 455

    string_builder          go to state 456
    expr_reader             go to state 457
    expr_call_pipe          go to state 458
    name_in_namespace       go to state 459
    expr_new                go to state 460
    expr_cast               go to state 461
    expr_type_decl          go to state 462
    expr_type_info          go to state 463
    block_or_lambda         go to state 464
    expr_full_block         go to state 465
    expr_numeric_const      go to state 466
    expr_named_call         go to state 467
    expr_method_call        go to state 468
    func_addr_expr          go to state 469
    expr_field              go to state 470
    expr_call               go to state 471
    expr                    go to state 945
    expr_mtag               go to state 473
    basic_type_declaration  go to state 474
    make_decl               go to state 475
    make_struct_decl        go to state 476
    make_tuple_call         go to state 477
    make_dim_decl           go to state 478
    make_table_decl         go to state 479
    array_comprehension     go to state 480


State 755

  331 expr_assign: expr ">>=" . expr

    "struct"                          shift, and go to state 408
    "class"                           shift, and go to state 409
    "true"                            shift, and go to state 410
    "false"                           shift, and go to state 411
    "new"                             shift, and go to state 412
    "typeinfo"                        shift, and go to state 413
    "type"                            shift, and go to state 414
    "array"                           shift, and go to state 415
    "null"                            shift, and go to state 416
    "table"                           shift, and go to state 417
    "deref"                           shift, and go to state 418
    "cast"                            shift, and go to state 419
    "upcast"                          shift, and go to state 420
    "addr"                            shift, and go to state 421
    "reinterpret"                     shift, and go to state 422
    "fixed_array"                     shift, and go to state 423
    "default"                         shift, and go to state 424
    "bool"                            shift, and go to state 222
    "void"                            shift, and go to state 223
    "string"                          shift, and go to state 224
    "int"                             shift, and go to state 226
    "int2"                            shift, and go to state 227
    "int3"                            shift, and go to state 228
    "int4"                            shift, and go to state 229
    "uint"                            shift, and go to state 230
    "bitfield"                        shift, and go to state 425
    "uint2"                           shift, and go to state 232
    "uint3"                           shift, and go to state 233
    "uint4"                           shift, and go to state 234
    "float"                           shift, and go to state 235
    "float2"                          shift, and go to state 236
    "float3"                          shift, and go to state 237
    "float4"                          shift, and go to state 238
    "range"                           shift, and go to state 239
    "urange"                          shift, and go to state 240
    "range64"                         shift, and go to state 241
    "urange64"                        shift, and go to state 242
    "int64"                           shift, and go to state 244
    "uint64"                          shift, and go to state 245
    "double"                          shift, and go to state 246
    "int8"                            shift, and go to state 249
    "uint8"                           shift, and go to state 250
    "int16"                           shift, and go to state 251
    "uint16"                          shift, and go to state 252
    "tuple"                           shift, and go to state 426
    "variant"                         shift, and go to state 427
    "generator"                       shift, and go to state 428
    "++"                              shift, and go to state 429
    "--"                              shift, and go to state 430
    "::"                              shift, and go to state 55
    "$$"                              shift, and go to state 431
    "$i"                              shift, and go to state 432
    "$v"                              shift, and go to state 433
    "$b"                              shift, and go to state 434
    "$a"                              shift, and go to state 435
    "$c"                              shift, and go to state 436
    "..."                             shift, and go to state 437
    "integer constant"                shift, and go to state 438
    "long integer constant"           shift, and go to state 439
    "unsigned integer constant"       shift, and go to state 440
    "unsigned long integer constant"  shift, and go to state 441
    "unsigned int8 constant"          shift, and go to state 442
    "floating point constant"         shift, and go to state 443
    "double constant"                 shift, and go to state 444
    "name"                            shift, and go to state 56
    "start of the string"             shift, and go to state 445
    "begin of code block"             shift, and go to state 446
    '-'                               shift, and go to state 447
    '+'                               shift, and go to state 448
    '*'                               shift, and go to state 449
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 450
    '!'                               shift, and go to state 451
    '['                               shift, and go to state 452
    '('                               shift, and go to state 453
    '$'                               shift, and go to state 454
    '@'                               shift, and go to state 455

    string_builder          go to state 456
    expr_reader             go to state 457
    expr_call_pipe          go to state 458
    name_in_namespace       go to state 459
    expr_new                go to state 460
    expr_cast               go to state 461
    expr_type_decl          go to state 462
    expr_type_info          go to state 463
    block_or_lambda         go to state 464
    expr_full_block         go to state 465
    expr_numeric_const      go to state 466
    expr_named_call         go to state 467
    expr_method_call        go to state 468
    func_addr_expr          go to state 469
    expr_field              go to state 470
    expr_call               go to state 471
    expr                    go to state 946
    expr_mtag               go to state 473
    basic_type_declaration  go to state 474
    make_decl               go to state 475
    make_struct_decl        go to state 476
    make_tuple_call         go to state 477
    make_dim_decl           go to state 478
    make_table_decl         go to state 479
    array_comprehension     go to state 480


State 756

  317 expr_assign: expr "<-" . expr

    "struct"                          shift, and go to state 408
    "class"                           shift, and go to state 409
    "true"                            shift, and go to state 410
    "false"                           shift, and go to state 411
    "new"                             shift, and go to state 412
    "typeinfo"                        shift, and go to state 413
    "type"                            shift, and go to state 414
    "array"                           shift, and go to state 415
    "null"                            shift, and go to state 416
    "table"                           shift, and go to state 417
    "deref"                           shift, and go to state 418
    "cast"                            shift, and go to state 419
    "upcast"                          shift, and go to state 420
    "addr"                            shift, and go to state 421
    "reinterpret"                     shift, and go to state 422
    "fixed_array"                     shift, and go to state 423
    "default"                         shift, and go to state 424
    "bool"                            shift, and go to state 222
    "void"                            shift, and go to state 223
    "string"                          shift, and go to state 224
    "int"                             shift, and go to state 226
    "int2"                            shift, and go to state 227
    "int3"                            shift, and go to state 228
    "int4"                            shift, and go to state 229
    "uint"                            shift, and go to state 230
    "bitfield"                        shift, and go to state 425
    "uint2"                           shift, and go to state 232
    "uint3"                           shift, and go to state 233
    "uint4"                           shift, and go to state 234
    "float"                           shift, and go to state 235
    "float2"                          shift, and go to state 236
    "float3"                          shift, and go to state 237
    "float4"                          shift, and go to state 238
    "range"                           shift, and go to state 239
    "urange"                          shift, and go to state 240
    "range64"                         shift, and go to state 241
    "urange64"                        shift, and go to state 242
    "int64"                           shift, and go to state 244
    "uint64"                          shift, and go to state 245
    "double"                          shift, and go to state 246
    "int8"                            shift, and go to state 249
    "uint8"                           shift, and go to state 250
    "int16"                           shift, and go to state 251
    "uint16"                          shift, and go to state 252
    "tuple"                           shift, and go to state 426
    "variant"                         shift, and go to state 427
    "generator"                       shift, and go to state 428
    "++"                              shift, and go to state 429
    "--"                              shift, and go to state 430
    "::"                              shift, and go to state 55
    "$$"                              shift, and go to state 431
    "$i"                              shift, and go to state 432
    "$v"                              shift, and go to state 433
    "$b"                              shift, and go to state 434
    "$a"                              shift, and go to state 435
    "$c"                              shift, and go to state 436
    "..."                             shift, and go to state 437
    "integer constant"                shift, and go to state 438
    "long integer constant"           shift, and go to state 439
    "unsigned integer constant"       shift, and go to state 440
    "unsigned long integer constant"  shift, and go to state 441
    "unsigned int8 constant"          shift, and go to state 442
    "floating point constant"         shift, and go to state 443
    "double constant"                 shift, and go to state 444
    "name"                            shift, and go to state 56
    "start of the string"             shift, and go to state 445
    "begin of code block"             shift, and go to state 446
    '-'                               shift, and go to state 447
    '+'                               shift, and go to state 448
    '*'                               shift, and go to state 449
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 450
    '!'                               shift, and go to state 451
    '['                               shift, and go to state 452
    '('                               shift, and go to state 453
    '$'                               shift, and go to state 454
    '@'                               shift, and go to state 455

    string_builder          go to state 456
    expr_reader             go to state 457
    expr_call_pipe          go to state 458
    name_in_namespace       go to state 459
    expr_new                go to state 460
    expr_cast               go to state 461
    expr_type_decl          go to state 462
    expr_type_info          go to state 463
    block_or_lambda         go to state 464
    expr_full_block         go to state 465
    expr_numeric_const      go to state 466
    expr_named_call         go to state 467
    expr_method_call        go to state 468
    func_addr_expr          go to state 469
    expr_field              go to state 470
    expr_call               go to state 471
    expr                    go to state 947
    expr_mtag               go to state 473
    basic_type_declaration  go to state 474
    make_decl               go to state 475
    make_struct_decl        go to state 476
    make_tuple_call         go to state 477
    make_dim_decl           go to state 478
    make_table_decl         go to state 479
    array_comprehension     go to state 480


State 757

  318 expr_assign: expr ":=" . expr

    "struct"                          shift, and go to state 408
    "class"                           shift, and go to state 409
    "true"                            shift, and go to state 410
    "false"                           shift, and go to state 411
    "new"                             shift, and go to state 412
    "typeinfo"                        shift, and go to state 413
    "type"                            shift, and go to state 414
    "array"                           shift, and go to state 415
    "null"                            shift, and go to state 416
    "table"                           shift, and go to state 417
    "deref"                           shift, and go to state 418
    "cast"                            shift, and go to state 419
    "upcast"                          shift, and go to state 420
    "addr"                            shift, and go to state 421
    "reinterpret"                     shift, and go to state 422
    "fixed_array"                     shift, and go to state 423
    "default"                         shift, and go to state 424
    "bool"                            shift, and go to state 222
    "void"                            shift, and go to state 223
    "string"                          shift, and go to state 224
    "int"                             shift, and go to state 226
    "int2"                            shift, and go to state 227
    "int3"                            shift, and go to state 228
    "int4"                            shift, and go to state 229
    "uint"                            shift, and go to state 230
    "bitfield"                        shift, and go to state 425
    "uint2"                           shift, and go to state 232
    "uint3"                           shift, and go to state 233
    "uint4"                           shift, and go to state 234
    "float"                           shift, and go to state 235
    "float2"                          shift, and go to state 236
    "float3"                          shift, and go to state 237
    "float4"                          shift, and go to state 238
    "range"                           shift, and go to state 239
    "urange"                          shift, and go to state 240
    "range64"                         shift, and go to state 241
    "urange64"                        shift, and go to state 242
    "int64"                           shift, and go to state 244
    "uint64"                          shift, and go to state 245
    "double"                          shift, and go to state 246
    "int8"                            shift, and go to state 249
    "uint8"                           shift, and go to state 250
    "int16"                           shift, and go to state 251
    "uint16"                          shift, and go to state 252
    "tuple"                           shift, and go to state 426
    "variant"                         shift, and go to state 427
    "generator"                       shift, and go to state 428
    "++"                              shift, and go to state 429
    "--"                              shift, and go to state 430
    "::"                              shift, and go to state 55
    "$$"                              shift, and go to state 431
    "$i"                              shift, and go to state 432
    "$v"                              shift, and go to state 433
    "$b"                              shift, and go to state 434
    "$a"                              shift, and go to state 435
    "$c"                              shift, and go to state 436
    "..."                             shift, and go to state 437
    "integer constant"                shift, and go to state 438
    "long integer constant"           shift, and go to state 439
    "unsigned integer constant"       shift, and go to state 440
    "unsigned long integer constant"  shift, and go to state 441
    "unsigned int8 constant"          shift, and go to state 442
    "floating point constant"         shift, and go to state 443
    "double constant"                 shift, and go to state 444
    "name"                            shift, and go to state 56
    "start of the string"             shift, and go to state 445
    "begin of code block"             shift, and go to state 446
    '-'                               shift, and go to state 447
    '+'                               shift, and go to state 448
    '*'                               shift, and go to state 449
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 450
    '!'                               shift, and go to state 451
    '['                               shift, and go to state 452
    '('                               shift, and go to state 453
    '$'                               shift, and go to state 454
    '@'                               shift, and go to state 455

    string_builder          go to state 456
    expr_reader             go to state 457
    expr_call_pipe          go to state 458
    name_in_namespace       go to state 459
    expr_new                go to state 460
    expr_cast               go to state 461
    expr_type_decl          go to state 462
    expr_type_info          go to state 463
    block_or_lambda         go to state 464
    expr_full_block         go to state 465
    expr_numeric_const      go to state 466
    expr_named_call         go to state 467
    expr_method_call        go to state 468
    func_addr_expr          go to state 469
    expr_field              go to state 470
    expr_call               go to state 471
    expr                    go to state 948
    expr_mtag               go to state 473
    basic_type_declaration  go to state 474
    make_decl               go to state 475
    make_struct_decl        go to state 476
    make_tuple_call         go to state 477
    make_dim_decl           go to state 478
    make_table_decl         go to state 479
    array_comprehension     go to state 480


State 758

  332 expr_assign: expr "<<<=" . expr

    "struct"                          shift, and go to state 408
    "class"                           shift, and go to state 409
    "true"                            shift, and go to state 410
    "false"                           shift, and go to state 411
    "new"                             shift, and go to state 412
    "typeinfo"                        shift, and go to state 413
    "type"                            shift, and go to state 414
    "array"                           shift, and go to state 415
    "null"                            shift, and go to state 416
    "table"                           shift, and go to state 417
    "deref"                           shift, and go to state 418
    "cast"                            shift, and go to state 419
    "upcast"                          shift, and go to state 420
    "addr"                            shift, and go to state 421
    "reinterpret"                     shift, and go to state 422
    "fixed_array"                     shift, and go to state 423
    "default"                         shift, and go to state 424
    "bool"                            shift, and go to state 222
    "void"                            shift, and go to state 223
    "string"                          shift, and go to state 224
    "int"                             shift, and go to state 226
    "int2"                            shift, and go to state 227
    "int3"                            shift, and go to state 228
    "int4"                            shift, and go to state 229
    "uint"                            shift, and go to state 230
    "bitfield"                        shift, and go to state 425
    "uint2"                           shift, and go to state 232
    "uint3"                           shift, and go to state 233
    "uint4"                           shift, and go to state 234
    "float"                           shift, and go to state 235
    "float2"                          shift, and go to state 236
    "float3"                          shift, and go to state 237
    "float4"                          shift, and go to state 238
    "range"                           shift, and go to state 239
    "urange"                          shift, and go to state 240
    "range64"                         shift, and go to state 241
    "urange64"                        shift, and go to state 242
    "int64"                           shift, and go to state 244
    "uint64"                          shift, and go to state 245
    "double"                          shift, and go to state 246
    "int8"                            shift, and go to state 249
    "uint8"                           shift, and go to state 250
    "int16"                           shift, and go to state 251
    "uint16"                          shift, and go to state 252
    "tuple"                           shift, and go to state 426
    "variant"                         shift, and go to state 427
    "generator"                       shift, and go to state 428
    "++"                              shift, and go to state 429
    "--"                              shift, and go to state 430
    "::"                              shift, and go to state 55
    "$$"                              shift, and go to state 431
    "$i"                              shift, and go to state 432
    "$v"                              shift, and go to state 433
    "$b"                              shift, and go to state 434
    "$a"                              shift, and go to state 435
    "$c"                              shift, and go to state 436
    "..."                             shift, and go to state 437
    "integer constant"                shift, and go to state 438
    "long integer constant"           shift, and go to state 439
    "unsigned integer constant"       shift, and go to state 440
    "unsigned long integer constant"  shift, and go to state 441
    "unsigned int8 constant"          shift, and go to state 442
    "floating point constant"         shift, and go to state 443
    "double constant"                 shift, and go to state 444
    "name"                            shift, and go to state 56
    "start of the string"             shift, and go to state 445
    "begin of code block"             shift, and go to state 446
    '-'                               shift, and go to state 447
    '+'                               shift, and go to state 448
    '*'                               shift, and go to state 449
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 450
    '!'                               shift, and go to state 451
    '['                               shift, and go to state 452
    '('                               shift, and go to state 453
    '$'                               shift, and go to state 454
    '@'                               shift, and go to state 455

    string_builder          go to state 456
    expr_reader             go to state 457
    expr_call_pipe          go to state 458
    name_in_namespace       go to state 459
    expr_new                go to state 460
    expr_cast               go to state 461
    expr_type_decl          go to state 462
    expr_type_info          go to state 463
    block_or_lambda         go to state 464
    expr_full_block         go to state 465
    expr_numeric_const      go to state 466
    expr_named_call         go to state 467
    expr_method_call        go to state 468
    func_addr_expr          go to state 469
    expr_field              go to state 470
    expr_call               go to state 471
    expr                    go to state 949
    expr_mtag               go to state 473
    basic_type_declaration  go to state 474
    make_decl               go to state 475
    make_struct_decl        go to state 476
    make_tuple_call         go to state 477
    make_dim_decl           go to state 478
    make_table_decl         go to state 479
    array_comprehension     go to state 480


State 759

  333 expr_assign: expr ">>>=" . expr

    "struct"                          shift, and go to state 408
    "class"                           shift, and go to state 409
    "true"                            shift, and go to state 410
    "false"                           shift, and go to state 411
    "new"                             shift, and go to state 412
    "typeinfo"                        shift, and go to state 413
    "type"                            shift, and go to state 414
    "array"                           shift, and go to state 415
    "null"                            shift, and go to state 416
    "table"                           shift, and go to state 417
    "deref"                           shift, and go to state 418
    "cast"                            shift, and go to state 419
    "upcast"                          shift, and go to state 420
    "addr"                            shift, and go to state 421
    "reinterpret"                     shift, and go to state 422
    "fixed_array"                     shift, and go to state 423
    "default"                         shift, and go to state 424
    "bool"                            shift, and go to state 222
    "void"                            shift, and go to state 223
    "string"                          shift, and go to state 224
    "int"                             shift, and go to state 226
    "int2"                            shift, and go to state 227
    "int3"                            shift, and go to state 228
    "int4"                            shift, and go to state 229
    "uint"                            shift, and go to state 230
    "bitfield"                        shift, and go to state 425
    "uint2"                           shift, and go to state 232
    "uint3"                           shift, and go to state 233
    "uint4"                           shift, and go to state 234
    "float"                           shift, and go to state 235
    "float2"                          shift, and go to state 236
    "float3"                          shift, and go to state 237
    "float4"                          shift, and go to state 238
    "range"                           shift, and go to state 239
    "urange"                          shift, and go to state 240
    "range64"                         shift, and go to state 241
    "urange64"                        shift, and go to state 242
    "int64"                           shift, and go to state 244
    "uint64"                          shift, and go to state 245
    "double"                          shift, and go to state 246
    "int8"                            shift, and go to state 249
    "uint8"                           shift, and go to state 250
    "int16"                           shift, and go to state 251
    "uint16"                          shift, and go to state 252
    "tuple"                           shift, and go to state 426
    "variant"                         shift, and go to state 427
    "generator"                       shift, and go to state 428
    "++"                              shift, and go to state 429
    "--"                              shift, and go to state 430
    "::"                              shift, and go to state 55
    "$$"                              shift, and go to state 431
    "$i"                              shift, and go to state 432
    "$v"                              shift, and go to state 433
    "$b"                              shift, and go to state 434
    "$a"                              shift, and go to state 435
    "$c"                              shift, and go to state 436
    "..."                             shift, and go to state 437
    "integer constant"                shift, and go to state 438
    "long integer constant"           shift, and go to state 439
    "unsigned integer constant"       shift, and go to state 440
    "unsigned long integer constant"  shift, and go to state 441
    "unsigned int8 constant"          shift, and go to state 442
    "floating point constant"         shift, and go to state 443
    "double constant"                 shift, and go to state 444
    "name"                            shift, and go to state 56
    "start of the string"             shift, and go to state 445
    "begin of code block"             shift, and go to state 446
    '-'                               shift, and go to state 447
    '+'                               shift, and go to state 448
    '*'                               shift, and go to state 449
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 450
    '!'                               shift, and go to state 451
    '['                               shift, and go to state 452
    '('                               shift, and go to state 453
    '$'                               shift, and go to state 454
    '@'                               shift, and go to state 455

    string_builder          go to state 456
    expr_reader             go to state 457
    expr_call_pipe          go to state 458
    name_in_namespace       go to state 459
    expr_new                go to state 460
    expr_cast               go to state 461
    expr_type_decl          go to state 462
    expr_type_info          go to state 463
    block_or_lambda         go to state 464
    expr_full_block         go to state 465
    expr_numeric_const      go to state 466
    expr_named_call         go to state 467
    expr_method_call        go to state 468
    func_addr_expr          go to state 469
    expr_field              go to state 470
    expr_call               go to state 471
    expr                    go to state 950
    expr_mtag               go to state 473
    basic_type_declaration  go to state 474
    make_decl               go to state 475
    make_struct_decl        go to state 476
    make_tuple_call         go to state 477
    make_dim_decl           go to state 478
    make_table_decl         go to state 479
    array_comprehension     go to state 480


State 760

  322 expr_assign: expr "&&=" . expr

    "struct"                          shift, and go to state 408
    "class"                           shift, and go to state 409
    "true"                            shift, and go to state 410
    "false"                           shift, and go to state 411
    "new"                             shift, and go to state 412
    "typeinfo"                        shift, and go to state 413
    "type"                            shift, and go to state 414
    "array"                           shift, and go to state 415
    "null"                            shift, and go to state 416
    "table"                           shift, and go to state 417
    "deref"                           shift, and go to state 418
    "cast"                            shift, and go to state 419
    "upcast"                          shift, and go to state 420
    "addr"                            shift, and go to state 421
    "reinterpret"                     shift, and go to state 422
    "fixed_array"                     shift, and go to state 423
    "default"                         shift, and go to state 424
    "bool"                            shift, and go to state 222
    "void"                            shift, and go to state 223
    "string"                          shift, and go to state 224
    "int"                             shift, and go to state 226
    "int2"                            shift, and go to state 227
    "int3"                            shift, and go to state 228
    "int4"                            shift, and go to state 229
    "uint"                            shift, and go to state 230
    "bitfield"                        shift, and go to state 425
    "uint2"                           shift, and go to state 232
    "uint3"                           shift, and go to state 233
    "uint4"                           shift, and go to state 234
    "float"                           shift, and go to state 235
    "float2"                          shift, and go to state 236
    "float3"                          shift, and go to state 237
    "float4"                          shift, and go to state 238
    "range"                           shift, and go to state 239
    "urange"                          shift, and go to state 240
    "range64"                         shift, and go to state 241
    "urange64"                        shift, and go to state 242
    "int64"                           shift, and go to state 244
    "uint64"                          shift, and go to state 245
    "double"                          shift, and go to state 246
    "int8"                            shift, and go to state 249
    "uint8"                           shift, and go to state 250
    "int16"                           shift, and go to state 251
    "uint16"                          shift, and go to state 252
    "tuple"                           shift, and go to state 426
    "variant"                         shift, and go to state 427
    "generator"                       shift, and go to state 428
    "++"                              shift, and go to state 429
    "--"                              shift, and go to state 430
    "::"                              shift, and go to state 55
    "$$"                              shift, and go to state 431
    "$i"                              shift, and go to state 432
    "$v"                              shift, and go to state 433
    "$b"                              shift, and go to state 434
    "$a"                              shift, and go to state 435
    "$c"                              shift, and go to state 436
    "..."                             shift, and go to state 437
    "integer constant"                shift, and go to state 438
    "long integer constant"           shift, and go to state 439
    "unsigned integer constant"       shift, and go to state 440
    "unsigned long integer constant"  shift, and go to state 441
    "unsigned int8 constant"          shift, and go to state 442
    "floating point constant"         shift, and go to state 443
    "double constant"                 shift, and go to state 444
    "name"                            shift, and go to state 56
    "start of the string"             shift, and go to state 445
    "begin of code block"             shift, and go to state 446
    '-'                               shift, and go to state 447
    '+'                               shift, and go to state 448
    '*'                               shift, and go to state 449
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 450
    '!'                               shift, and go to state 451
    '['                               shift, and go to state 452
    '('                               shift, and go to state 453
    '$'                               shift, and go to state 454
    '@'                               shift, and go to state 455

    string_builder          go to state 456
    expr_reader             go to state 457
    expr_call_pipe          go to state 458
    name_in_namespace       go to state 459
    expr_new                go to state 460
    expr_cast               go to state 461
    expr_type_decl          go to state 462
    expr_type_info          go to state 463
    block_or_lambda         go to state 464
    expr_full_block         go to state 465
    expr_numeric_const      go to state 466
    expr_named_call         go to state 467
    expr_method_call        go to state 468
    func_addr_expr          go to state 469
    expr_field              go to state 470
    expr_call               go to state 471
    expr                    go to state 951
    expr_mtag               go to state 473
    basic_type_declaration  go to state 474
    make_decl               go to state 475
    make_struct_decl        go to state 476
    make_tuple_call         go to state 477
    make_dim_decl           go to state 478
    make_table_decl         go to state 479
    array_comprehension     go to state 480


State 761

  323 expr_assign: expr "||=" . expr

    "struct"                          shift, and go to state 408
    "class"                           shift, and go to state 409
    "true"                            shift, and go to state 410
    "false"                           shift, and go to state 411
    "new"                             shift, and go to state 412
    "typeinfo"                        shift, and go to state 413
    "type"                            shift, and go to state 414
    "array"                           shift, and go to state 415
    "null"                            shift, and go to state 416
    "table"                           shift, and go to state 417
    "deref"                           shift, and go to state 418
    "cast"                            shift, and go to state 419
    "upcast"                          shift, and go to state 420
    "addr"                            shift, and go to state 421
    "reinterpret"                     shift, and go to state 422
    "fixed_array"                     shift, and go to state 423
    "default"                         shift, and go to state 424
    "bool"                            shift, and go to state 222
    "void"                            shift, and go to state 223
    "string"                          shift, and go to state 224
    "int"                             shift, and go to state 226
    "int2"                            shift, and go to state 227
    "int3"                            shift, and go to state 228
    "int4"                            shift, and go to state 229
    "uint"                            shift, and go to state 230
    "bitfield"                        shift, and go to state 425
    "uint2"                           shift, and go to state 232
    "uint3"                           shift, and go to state 233
    "uint4"                           shift, and go to state 234
    "float"                           shift, and go to state 235
    "float2"                          shift, and go to state 236
    "float3"                          shift, and go to state 237
    "float4"                          shift, and go to state 238
    "range"                           shift, and go to state 239
    "urange"                          shift, and go to state 240
    "range64"                         shift, and go to state 241
    "urange64"                        shift, and go to state 242
    "int64"                           shift, and go to state 244
    "uint64"                          shift, and go to state 245
    "double"                          shift, and go to state 246
    "int8"                            shift, and go to state 249
    "uint8"                           shift, and go to state 250
    "int16"                           shift, and go to state 251
    "uint16"                          shift, and go to state 252
    "tuple"                           shift, and go to state 426
    "variant"                         shift, and go to state 427
    "generator"                       shift, and go to state 428
    "++"                              shift, and go to state 429
    "--"                              shift, and go to state 430
    "::"                              shift, and go to state 55
    "$$"                              shift, and go to state 431
    "$i"                              shift, and go to state 432
    "$v"                              shift, and go to state 433
    "$b"                              shift, and go to state 434
    "$a"                              shift, and go to state 435
    "$c"                              shift, and go to state 436
    "..."                             shift, and go to state 437
    "integer constant"                shift, and go to state 438
    "long integer constant"           shift, and go to state 439
    "unsigned integer constant"       shift, and go to state 440
    "unsigned long integer constant"  shift, and go to state 441
    "unsigned int8 constant"          shift, and go to state 442
    "floating point constant"         shift, and go to state 443
    "double constant"                 shift, and go to state 444
    "name"                            shift, and go to state 56
    "start of the string"             shift, and go to state 445
    "begin of code block"             shift, and go to state 446
    '-'                               shift, and go to state 447
    '+'                               shift, and go to state 448
    '*'                               shift, and go to state 449
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 450
    '!'                               shift, and go to state 451
    '['                               shift, and go to state 452
    '('                               shift, and go to state 453
    '$'                               shift, and go to state 454
    '@'                               shift, and go to state 455

    string_builder          go to state 456
    expr_reader             go to state 457
    expr_call_pipe          go to state 458
    name_in_namespace       go to state 459
    expr_new                go to state 460
    expr_cast               go to state 461
    expr_type_decl          go to state 462
    expr_type_info          go to state 463
    block_or_lambda         go to state 464
    expr_full_block         go to state 465
    expr_numeric_const      go to state 466
    expr_named_call         go to state 467
    expr_method_call        go to state 468
    func_addr_expr          go to state 469
    expr_field              go to state 470
    expr_call               go to state 471
    expr                    go to state 952
    expr_mtag               go to state 473
    basic_type_declaration  go to state 474
    make_decl               go to state 475
    make_struct_decl        go to state 476
    make_tuple_call         go to state 477
    make_dim_decl           go to state 478
    make_table_decl         go to state 479
    array_comprehension     go to state 480


State 762

  324 expr_assign: expr "^^=" . expr

    "struct"                          shift, and go to state 408
    "class"                           shift, and go to state 409
    "true"                            shift, and go to state 410
    "false"                           shift, and go to state 411
    "new"                             shift, and go to state 412
    "typeinfo"                        shift, and go to state 413
    "type"                            shift, and go to state 414
    "array"                           shift, and go to state 415
    "null"                            shift, and go to state 416
    "table"                           shift, and go to state 417
    "deref"                           shift, and go to state 418
    "cast"                            shift, and go to state 419
    "upcast"                          shift, and go to state 420
    "addr"                            shift, and go to state 421
    "reinterpret"                     shift, and go to state 422
    "fixed_array"                     shift, and go to state 423
    "default"                         shift, and go to state 424
    "bool"                            shift, and go to state 222
    "void"                            shift, and go to state 223
    "string"                          shift, and go to state 224
    "int"                             shift, and go to state 226
    "int2"                            shift, and go to state 227
    "int3"                            shift, and go to state 228
    "int4"                            shift, and go to state 229
    "uint"                            shift, and go to state 230
    "bitfield"                        shift, and go to state 425
    "uint2"                           shift, and go to state 232
    "uint3"                           shift, and go to state 233
    "uint4"                           shift, and go to state 234
    "float"                           shift, and go to state 235
    "float2"                          shift, and go to state 236
    "float3"                          shift, and go to state 237
    "float4"                          shift, and go to state 238
    "range"                           shift, and go to state 239
    "urange"                          shift, and go to state 240
    "range64"                         shift, and go to state 241
    "urange64"                        shift, and go to state 242
    "int64"                           shift, and go to state 244
    "uint64"                          shift, and go to state 245
    "double"                          shift, and go to state 246
    "int8"                            shift, and go to state 249
    "uint8"                           shift, and go to state 250
    "int16"                           shift, and go to state 251
    "uint16"                          shift, and go to state 252
    "tuple"                           shift, and go to state 426
    "variant"                         shift, and go to state 427
    "generator"                       shift, and go to state 428
    "++"                              shift, and go to state 429
    "--"                              shift, and go to state 430
    "::"                              shift, and go to state 55
    "$$"                              shift, and go to state 431
    "$i"                              shift, and go to state 432
    "$v"                              shift, and go to state 433
    "$b"                              shift, and go to state 434
    "$a"                              shift, and go to state 435
    "$c"                              shift, and go to state 436
    "..."                             shift, and go to state 437
    "integer constant"                shift, and go to state 438
    "long integer constant"           shift, and go to state 439
    "unsigned integer constant"       shift, and go to state 440
    "unsigned long integer constant"  shift, and go to state 441
    "unsigned int8 constant"          shift, and go to state 442
    "floating point constant"         shift, and go to state 443
    "double constant"                 shift, and go to state 444
    "name"                            shift, and go to state 56
    "start of the string"             shift, and go to state 445
    "begin of code block"             shift, and go to state 446
    '-'                               shift, and go to state 447
    '+'                               shift, and go to state 448
    '*'                               shift, and go to state 449
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 450
    '!'                               shift, and go to state 451
    '['                               shift, and go to state 452
    '('                               shift, and go to state 453
    '$'                               shift, and go to state 454
    '@'                               shift, and go to state 455

    string_builder          go to state 456
    expr_reader             go to state 457
    expr_call_pipe          go to state 458
    name_in_namespace       go to state 459
    expr_new                go to state 460
    expr_cast               go to state 461
    expr_type_decl          go to state 462
    expr_type_info          go to state 463
    block_or_lambda         go to state 464
    expr_full_block         go to state 465
    expr_numeric_const      go to state 466
    expr_named_call         go to state 467
    expr_method_call        go to state 468
    func_addr_expr          go to state 469
    expr_field              go to state 470
    expr_call               go to state 471
    expr                    go to state 953
    expr_mtag               go to state 473
    basic_type_declaration  go to state 474
    make_decl               go to state 475
    make_struct_decl        go to state 476
    make_tuple_call         go to state 477
    make_dim_decl           go to state 478
    make_table_decl         go to state 479
    array_comprehension     go to state 480


State 763

  316 expr_assign: expr '=' . expr

    "struct"                          shift, and go to state 408
    "class"                           shift, and go to state 409
    "true"                            shift, and go to state 410
    "false"                           shift, and go to state 411
    "new"                             shift, and go to state 412
    "typeinfo"                        shift, and go to state 413
    "type"                            shift, and go to state 414
    "array"                           shift, and go to state 415
    "null"                            shift, and go to state 416
    "table"                           shift, and go to state 417
    "deref"                           shift, and go to state 418
    "cast"                            shift, and go to state 419
    "upcast"                          shift, and go to state 420
    "addr"                            shift, and go to state 421
    "reinterpret"                     shift, and go to state 422
    "fixed_array"                     shift, and go to state 423
    "default"                         shift, and go to state 424
    "bool"                            shift, and go to state 222
    "void"                            shift, and go to state 223
    "string"                          shift, and go to state 224
    "int"                             shift, and go to state 226
    "int2"                            shift, and go to state 227
    "int3"                            shift, and go to state 228
    "int4"                            shift, and go to state 229
    "uint"                            shift, and go to state 230
    "bitfield"                        shift, and go to state 425
    "uint2"                           shift, and go to state 232
    "uint3"                           shift, and go to state 233
    "uint4"                           shift, and go to state 234
    "float"                           shift, and go to state 235
    "float2"                          shift, and go to state 236
    "float3"                          shift, and go to state 237
    "float4"                          shift, and go to state 238
    "range"                           shift, and go to state 239
    "urange"                          shift, and go to state 240
    "range64"                         shift, and go to state 241
    "urange64"                        shift, and go to state 242
    "int64"                           shift, and go to state 244
    "uint64"                          shift, and go to state 245
    "double"                          shift, and go to state 246
    "int8"                            shift, and go to state 249
    "uint8"                           shift, and go to state 250
    "int16"                           shift, and go to state 251
    "uint16"                          shift, and go to state 252
    "tuple"                           shift, and go to state 426
    "variant"                         shift, and go to state 427
    "generator"                       shift, and go to state 428
    "++"                              shift, and go to state 429
    "--"                              shift, and go to state 430
    "::"                              shift, and go to state 55
    "$$"                              shift, and go to state 431
    "$i"                              shift, and go to state 432
    "$v"                              shift, and go to state 433
    "$b"                              shift, and go to state 434
    "$a"                              shift, and go to state 435
    "$c"                              shift, and go to state 436
    "..."                             shift, and go to state 437
    "integer constant"                shift, and go to state 438
    "long integer constant"           shift, and go to state 439
    "unsigned integer constant"       shift, and go to state 440
    "unsigned long integer constant"  shift, and go to state 441
    "unsigned int8 constant"          shift, and go to state 442
    "floating point constant"         shift, and go to state 443
    "double constant"                 shift, and go to state 444
    "name"                            shift, and go to state 56
    "start of the string"             shift, and go to state 445
    "begin of code block"             shift, and go to state 446
    '-'                               shift, and go to state 447
    '+'                               shift, and go to state 448
    '*'                               shift, and go to state 449
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 450
    '!'                               shift, and go to state 451
    '['                               shift, and go to state 452
    '('                               shift, and go to state 453
    '$'                               shift, and go to state 454
    '@'                               shift, and go to state 455

    string_builder          go to state 456
    expr_reader             go to state 457
    expr_call_pipe          go to state 458
    name_in_namespace       go to state 459
    expr_new                go to state 460
    expr_cast               go to state 461
    expr_type_decl          go to state 462
    expr_type_info          go to state 463
    block_or_lambda         go to state 464
    expr_full_block         go to state 465
    expr_numeric_const      go to state 466
    expr_named_call         go to state 467
    expr_method_call        go to state 468
    func_addr_expr          go to state 469
    expr_field              go to state 470
    expr_call               go to state 471
    expr                    go to state 954
    expr_mtag               go to state 473
    basic_type_declaration  go to state 474
    make_decl               go to state 475
    make_struct_decl        go to state 476
    make_tuple_call         go to state 477
    make_dim_decl           go to state 478
    make_table_decl         go to state 479
    array_comprehension     go to state 480


State 764

  526 enum_expression: "name" '=' . expr

    "struct"                          shift, and go to state 408
    "class"                           shift, and go to state 409
    "true"                            shift, and go to state 410
    "false"                           shift, and go to state 411
    "new"                             shift, and go to state 412
    "typeinfo"                        shift, and go to state 413
    "type"                            shift, and go to state 414
    "array"                           shift, and go to state 415
    "null"                            shift, and go to state 416
    "table"                           shift, and go to state 417
    "deref"                           shift, and go to state 418
    "cast"                            shift, and go to state 419
    "upcast"                          shift, and go to state 420
    "addr"                            shift, and go to state 421
    "reinterpret"                     shift, and go to state 422
    "fixed_array"                     shift, and go to state 423
    "default"                         shift, and go to state 424
    "bool"                            shift, and go to state 222
    "void"                            shift, and go to state 223
    "string"                          shift, and go to state 224
    "int"                             shift, and go to state 226
    "int2"                            shift, and go to state 227
    "int3"                            shift, and go to state 228
    "int4"                            shift, and go to state 229
    "uint"                            shift, and go to state 230
    "bitfield"                        shift, and go to state 425
    "uint2"                           shift, and go to state 232
    "uint3"                           shift, and go to state 233
    "uint4"                           shift, and go to state 234
    "float"                           shift, and go to state 235
    "float2"                          shift, and go to state 236
    "float3"                          shift, and go to state 237
    "float4"                          shift, and go to state 238
    "range"                           shift, and go to state 239
    "urange"                          shift, and go to state 240
    "range64"                         shift, and go to state 241
    "urange64"                        shift, and go to state 242
    "int64"                           shift, and go to state 244
    "uint64"                          shift, and go to state 245
    "double"                          shift, and go to state 246
    "int8"                            shift, and go to state 249
    "uint8"                           shift, and go to state 250
    "int16"                           shift, and go to state 251
    "uint16"                          shift, and go to state 252
    "tuple"                           shift, and go to state 426
    "variant"                         shift, and go to state 427
    "generator"                       shift, and go to state 428
    "++"                              shift, and go to state 429
    "--"                              shift, and go to state 430
    "::"                              shift, and go to state 55
    "$$"                              shift, and go to state 431
    "$i"                              shift, and go to state 432
    "$v"                              shift, and go to state 433
    "$b"                              shift, and go to state 434
    "$a"                              shift, and go to state 435
    "$c"                              shift, and go to state 436
    "..."                             shift, and go to state 437
    "integer constant"                shift, and go to state 438
    "long integer constant"           shift, and go to state 439
    "unsigned integer constant"       shift, and go to state 440
    "unsigned long integer constant"  shift, and go to state 441
    "unsigned int8 constant"          shift, and go to state 442
    "floating point constant"         shift, and go to state 443
    "double constant"                 shift, and go to state 444
    "name"                            shift, and go to state 56
    "start of the string"             shift, and go to state 445
    "begin of code block"             shift, and go to state 446
    '-'                               shift, and go to state 447
    '+'                               shift, and go to state 448
    '*'                               shift, and go to state 449
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 450
    '!'                               shift, and go to state 451
    '['                               shift, and go to state 452
    '('                               shift, and go to state 453
    '$'                               shift, and go to state 454
    '@'                               shift, and go to state 455

    string_builder          go to state 456
    expr_reader             go to state 457
    expr_call_pipe          go to state 458
    name_in_namespace       go to state 459
    expr_new                go to state 460
    expr_cast               go to state 461
    expr_type_decl          go to state 462
    expr_type_info          go to state 463
    block_or_lambda         go to state 464
    expr_full_block         go to state 465
    expr_numeric_const      go to state 466
    expr_named_call         go to state 467
    expr_method_call        go to state 468
    func_addr_expr          go to state 469
    expr_field              go to state 470
    expr_call               go to state 471
    expr                    go to state 955
    expr_mtag               go to state 473
    basic_type_declaration  go to state 474
    make_decl               go to state 475
    make_struct_decl        go to state 476
    make_tuple_call         go to state 477
    make_dim_decl           go to state 478
    make_table_decl         go to state 479
    array_comprehension     go to state 480


State 765

  529 enum_list: enum_list ',' . enum_expression
  761 optional_comma: ',' .

    "name"  shift, and go to state 568

    $default  reduce using rule 761 (optional_comma)

    enum_expression  go to state 956


State 766

  544 enum_declaration: optional_annotation_list "enum" optional_public_or_private_enum enum_name optional_enum_basic_type_declaration "begin of code block" $@31 enum_list optional_comma . $@32 "end of code block"

    $default  reduce using rule 543 ($@32)

    $@32  go to state 957


State 767

  556 optional_struct_variable_declaration_list: "begin of code block" struct_variable_declaration_list "end of code block" .

    $default  reduce using rule 556 (optional_struct_variable_declaration_list)


State 768

  474 struct_variable_declaration_list: struct_variable_declaration_list optional_annotation_list . "def" optional_public_or_private_member_variable "abstract" optional_constant $@26 function_declaration_header "end of expression"
  476                                 | struct_variable_declaration_list optional_annotation_list . "def" optional_public_or_private_member_variable optional_static_member_variable optional_override optional_constant $@27 function_declaration_header expression_block

    "def"  shift, and go to state 958


State 769

  472 struct_variable_declaration_list: struct_variable_declaration_list $@25 . structure_variable_declaration "end of expression"

    '@'  shift, and go to state 208

    $default  reduce using rule 457 (optional_field_annotation)

    metadata_argument_list          go to state 209
    optional_field_annotation       go to state 959
    structure_variable_declaration  go to state 960


State 770

  507 let_variable_name_with_pos_list: "$i" '(' expr ')' .

    $default  reduce using rule 507 (let_variable_name_with_pos_list)


State 771

  510 let_variable_name_with_pos_list: let_variable_name_with_pos_list ',' "name" "aka" . "name"

    "name"  shift, and go to state 961


State 772

  511 let_variable_declaration: let_variable_name_with_pos_list ':' type_declaration_no_options "end of expression" .

    $default  reduce using rule 511 (let_variable_declaration)


State 773

  512 let_variable_declaration: let_variable_name_with_pos_list ':' type_declaration_no_options copy_or_move_or_clone . expr "end of expression"

    "struct"                          shift, and go to state 408
    "class"                           shift, and go to state 409
    "true"                            shift, and go to state 410
    "false"                           shift, and go to state 411
    "new"                             shift, and go to state 412
    "typeinfo"                        shift, and go to state 413
    "type"                            shift, and go to state 414
    "array"                           shift, and go to state 415
    "null"                            shift, and go to state 416
    "table"                           shift, and go to state 417
    "deref"                           shift, and go to state 418
    "cast"                            shift, and go to state 419
    "upcast"                          shift, and go to state 420
    "addr"                            shift, and go to state 421
    "reinterpret"                     shift, and go to state 422
    "fixed_array"                     shift, and go to state 423
    "default"                         shift, and go to state 424
    "bool"                            shift, and go to state 222
    "void"                            shift, and go to state 223
    "string"                          shift, and go to state 224
    "int"                             shift, and go to state 226
    "int2"                            shift, and go to state 227
    "int3"                            shift, and go to state 228
    "int4"                            shift, and go to state 229
    "uint"                            shift, and go to state 230
    "bitfield"                        shift, and go to state 425
    "uint2"                           shift, and go to state 232
    "uint3"                           shift, and go to state 233
    "uint4"                           shift, and go to state 234
    "float"                           shift, and go to state 235
    "float2"                          shift, and go to state 236
    "float3"                          shift, and go to state 237
    "float4"                          shift, and go to state 238
    "range"                           shift, and go to state 239
    "urange"                          shift, and go to state 240
    "range64"                         shift, and go to state 241
    "urange64"                        shift, and go to state 242
    "int64"                           shift, and go to state 244
    "uint64"                          shift, and go to state 245
    "double"                          shift, and go to state 246
    "int8"                            shift, and go to state 249
    "uint8"                           shift, and go to state 250
    "int16"                           shift, and go to state 251
    "uint16"                          shift, and go to state 252
    "tuple"                           shift, and go to state 426
    "variant"                         shift, and go to state 427
    "generator"                       shift, and go to state 428
    "++"                              shift, and go to state 429
    "--"                              shift, and go to state 430
    "::"                              shift, and go to state 55
    "$$"                              shift, and go to state 431
    "$i"                              shift, and go to state 432
    "$v"                              shift, and go to state 433
    "$b"                              shift, and go to state 434
    "$a"                              shift, and go to state 435
    "$c"                              shift, and go to state 436
    "..."                             shift, and go to state 437
    "integer constant"                shift, and go to state 438
    "long integer constant"           shift, and go to state 439
    "unsigned integer constant"       shift, and go to state 440
    "unsigned long integer constant"  shift, and go to state 441
    "unsigned int8 constant"          shift, and go to state 442
    "floating point constant"         shift, and go to state 443
    "double constant"                 shift, and go to state 444
    "name"                            shift, and go to state 56
    "start of the string"             shift, and go to state 445
    "begin of code block"             shift, and go to state 446
    '-'                               shift, and go to state 447
    '+'                               shift, and go to state 448
    '*'                               shift, and go to state 449
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 450
    '!'                               shift, and go to state 451
    '['                               shift, and go to state 452
    '('                               shift, and go to state 453
    '$'                               shift, and go to state 454
    '@'                               shift, and go to state 455

    string_builder          go to state 456
    expr_reader             go to state 457
    expr_call_pipe          go to state 458
    name_in_namespace       go to state 459
    expr_new                go to state 460
    expr_cast               go to state 461
    expr_type_decl          go to state 462
    expr_type_info          go to state 463
    block_or_lambda         go to state 464
    expr_full_block         go to state 465
    expr_numeric_const      go to state 466
    expr_named_call         go to state 467
    expr_method_call        go to state 468
    func_addr_expr          go to state 469
    expr_field              go to state 470
    expr_call               go to state 471
    expr                    go to state 962
    expr_mtag               go to state 473
    basic_type_declaration  go to state 474
    make_decl               go to state 475
    make_struct_decl        go to state 476
    make_tuple_call         go to state 477
    make_dim_decl           go to state 478
    make_table_decl         go to state 479
    array_comprehension     go to state 480


State 774

  336 expr_method_call: expr . "->" "name" '(' ')'
  337                 | expr . "->" "name" '(' expr_list ')'
  347 expr_field: expr . '.' "name"
  348           | expr . '.' '.' "name"
  349           | expr . '.' "name" '(' ')'
  350           | expr . '.' "name" '(' expr_list ')'
  353           | expr . '.' $@17 error $@18
  373 expr: expr . "<<" expr
  374     | expr . ">>" expr
  375     | expr . "<<<" expr
  376     | expr . ">>>" expr
  377     | expr . '+' expr
  378     | expr . '-' expr
  379     | expr . '*' expr
  380     | expr . '/' expr
  381     | expr . '%' expr
  382     | expr . '<' expr
  383     | expr . '>' expr
  384     | expr . "==" expr
  385     | expr . "!=" expr
  386     | expr . "<=" expr
  387     | expr . ">=" expr
  388     | expr . '&' expr
  389     | expr . '|' expr
  390     | expr . '^' expr
  391     | expr . "&&" expr
  392     | expr . "||" expr
  393     | expr . "^^" expr
  394     | expr . ".." expr
  397     | expr . "++"
  398     | expr . "--"
  400     | expr . '[' expr ']'
  401     | expr . '.' '[' expr ']'
  402     | expr . "?[" expr ']'
  403     | expr . '.' "?[" expr ']'
  404     | expr . "?." "name"
  405     | expr . '.' "?." "name"
  413     | expr . "??" expr
  414     | expr . '?' expr ':' expr
  417     | expr . "is" "type" '<' $@19 type_declaration_no_options '>' $@20
  418     | expr . "is" basic_type_declaration
  419     | expr . "is" "name"
  420     | expr . "as" "name"
  423     | expr . "as" "type" '<' $@21 type_declaration '>' $@22
  424     | expr . "as" basic_type_declaration
  425     | expr . '?' "as" "name"
  428     | expr . '?' "as" "type" '<' $@23 type_declaration '>' $@24
  429     | expr . '?' "as" basic_type_declaration
  437     | expr . "<|" expr
  438     | expr . "|>" expr
  439     | expr . "|>" basic_type_declaration
  449 expr_mtag: expr . '.' "$f" '(' expr ')'
  450          | expr . "?." "$f" '(' expr ')'
  451          | expr . '.' '.' "$f" '(' expr ')'
  452          | expr . '.' "?." "$f" '(' expr ')'
  453          | expr . "as" "$f" '(' expr ')'
  454          | expr . '?' "as" "$f" '(' expr ')'
  455          | expr . "is" "$f" '(' expr ')'
  513 let_variable_declaration: let_variable_name_with_pos_list optional_ref copy_or_move_or_clone expr . "end of expression"

    "is"                 shift, and go to state 643
    "as"                 shift, and go to state 644
    "<<"                 shift, and go to state 645
    ">>"                 shift, and go to state 646
    "++"                 shift, and go to state 647
    "--"                 shift, and go to state 648
    "<="                 shift, and go to state 649
    ">="                 shift, and go to state 650
    "=="                 shift, and go to state 651
    "!="                 shift, and go to state 652
    "->"                 shift, and go to state 653
    "??"                 shift, and go to state 654
    "?."                 shift, and go to state 655
    "?["                 shift, and go to state 656
    "<|"                 shift, and go to state 657
    "|>"                 shift, and go to state 658
    "<<<"                shift, and go to state 659
    ">>>"                shift, and go to state 660
    "&&"                 shift, and go to state 661
    "||"                 shift, and go to state 662
    "^^"                 shift, and go to state 663
    ".."                 shift, and go to state 664
    "end of expression"  shift, and go to state 963
    '?'                  shift, and go to state 665
    '|'                  shift, and go to state 666
    '^'                  shift, and go to state 667
    '&'                  shift, and go to state 668
    '<'                  shift, and go to state 669
    '>'                  shift, and go to state 670
    '-'                  shift, and go to state 671
    '+'                  shift, and go to state 672
    '*'                  shift, and go to state 673
    '/'                  shift, and go to state 674
    '%'                  shift, and go to state 675
    '.'                  shift, and go to state 676
    '['                  shift, and go to state 677


State 775

  626 type_declaration_no_options_no_dim: "type" '<' $@37 type_declaration '>' . $@38

    $default  reduce using rule 625 ($@38)

    $@38  go to state 964


State 776

  649 type_declaration_no_options_no_dim: "array" '<' $@42 type_declaration '>' . $@43

    $default  reduce using rule 648 ($@43)

    $@43  go to state 965


State 777

  652 type_declaration_no_options_no_dim: "table" '<' $@44 table_type_pair '>' . $@45

    $default  reduce using rule 651 ($@45)

    $@45  go to state 966


State 778

  613 table_type_pair: type_declaration "end of expression" . type_declaration

    "type"       shift, and go to state 216
    "array"      shift, and go to state 217
    "table"      shift, and go to state 218
    "typedecl"   shift, and go to state 219
    "iterator"   shift, and go to state 220
    "smart_ptr"  shift, and go to state 221
    "bool"       shift, and go to state 222
    "void"       shift, and go to state 223
    "string"     shift, and go to state 224
    "auto"       shift, and go to state 225
    "int"        shift, and go to state 226
    "int2"       shift, and go to state 227
    "int3"       shift, and go to state 228
    "int4"       shift, and go to state 229
    "uint"       shift, and go to state 230
    "bitfield"   shift, and go to state 231
    "uint2"      shift, and go to state 232
    "uint3"      shift, and go to state 233
    "uint4"      shift, and go to state 234
    "float"      shift, and go to state 235
    "float2"     shift, and go to state 236
    "float3"     shift, and go to state 237
    "float4"     shift, and go to state 238
    "range"      shift, and go to state 239
    "urange"     shift, and go to state 240
    "range64"    shift, and go to state 241
    "urange64"   shift, and go to state 242
    "block"      shift, and go to state 243
    "int64"      shift, and go to state 244
    "uint64"     shift, and go to state 245
    "double"     shift, and go to state 246
    "function"   shift, and go to state 247
    "lambda"     shift, and go to state 248
    "int8"       shift, and go to state 249
    "uint8"      shift, and go to state 250
    "int16"      shift, and go to state 251
    "uint16"     shift, and go to state 252
    "tuple"      shift, and go to state 253
    "variant"    shift, and go to state 254
    "::"         shift, and go to state 55
    "$t"         shift, and go to state 255
    "name"       shift, and go to state 56
    '$'          shift, and go to state 256

    name_in_namespace                   go to state 257
    basic_type_declaration              go to state 258
    structure_type_declaration          go to state 259
    auto_type_declaration               go to state 260
    bitfield_type_declaration           go to state 261
    type_declaration_no_options         go to state 262
    type_declaration_no_options_no_dim  go to state 263
    type_declaration                    go to state 967


State 779

  718 make_struct_decl: "struct" '<' $@73 . type_declaration_no_options '>' $@74 '(' use_initializer make_struct_dim ')'

    "type"       shift, and go to state 216
    "array"      shift, and go to state 217
    "table"      shift, and go to state 218
    "typedecl"   shift, and go to state 219
    "iterator"   shift, and go to state 220
    "smart_ptr"  shift, and go to state 221
    "bool"       shift, and go to state 222
    "void"       shift, and go to state 223
    "string"     shift, and go to state 224
    "auto"       shift, and go to state 225
    "int"        shift, and go to state 226
    "int2"       shift, and go to state 227
    "int3"       shift, and go to state 228
    "int4"       shift, and go to state 229
    "uint"       shift, and go to state 230
    "bitfield"   shift, and go to state 231
    "uint2"      shift, and go to state 232
    "uint3"      shift, and go to state 233
    "uint4"      shift, and go to state 234
    "float"      shift, and go to state 235
    "float2"     shift, and go to state 236
    "float3"     shift, and go to state 237
    "float4"     shift, and go to state 238
    "range"      shift, and go to state 239
    "urange"     shift, and go to state 240
    "range64"    shift, and go to state 241
    "urange64"   shift, and go to state 242
    "block"      shift, and go to state 243
    "int64"      shift, and go to state 244
    "uint64"     shift, and go to state 245
    "double"     shift, and go to state 246
    "function"   shift, and go to state 247
    "lambda"     shift, and go to state 248
    "int8"       shift, and go to state 249
    "uint8"      shift, and go to state 250
    "int16"      shift, and go to state 251
    "uint16"     shift, and go to state 252
    "tuple"      shift, and go to state 253
    "variant"    shift, and go to state 254
    "::"         shift, and go to state 55
    "$t"         shift, and go to state 255
    "name"       shift, and go to state 56
    '$'          shift, and go to state 256

    name_in_namespace                   go to state 257
    basic_type_declaration              go to state 258
    structure_type_declaration          go to state 259
    auto_type_declaration               go to state 260
    bitfield_type_declaration           go to state 261
    type_declaration_no_options         go to state 968
    type_declaration_no_options_no_dim  go to state 263


State 780

  721 make_struct_decl: "class" '<' $@75 . type_declaration_no_options '>' $@76 '(' use_initializer make_struct_dim ')'

    "type"       shift, and go to state 216
    "array"      shift, and go to state 217
    "table"      shift, and go to state 218
    "typedecl"   shift, and go to state 219
    "iterator"   shift, and go to state 220
    "smart_ptr"  shift, and go to state 221
    "bool"       shift, and go to state 222
    "void"       shift, and go to state 223
    "string"     shift, and go to state 224
    "auto"       shift, and go to state 225
    "int"        shift, and go to state 226
    "int2"       shift, and go to state 227
    "int3"       shift, and go to state 228
    "int4"       shift, and go to state 229
    "uint"       shift, and go to state 230
    "bitfield"   shift, and go to state 231
    "uint2"      shift, and go to state 232
    "uint3"      shift, and go to state 233
    "uint4"      shift, and go to state 234
    "float"      shift, and go to state 235
    "float2"     shift, and go to state 236
    "float3"     shift, and go to state 237
    "float4"     shift, and go to state 238
    "range"      shift, and go to state 239
    "urange"     shift, and go to state 240
    "range64"    shift, and go to state 241
    "urange64"   shift, and go to state 242
    "block"      shift, and go to state 243
    "int64"      shift, and go to state 244
    "uint64"     shift, and go to state 245
    "double"     shift, and go to state 246
    "function"   shift, and go to state 247
    "lambda"     shift, and go to state 248
    "int8"       shift, and go to state 249
    "uint8"      shift, and go to state 250
    "int16"      shift, and go to state 251
    "uint16"     shift, and go to state 252
    "tuple"      shift, and go to state 253
    "variant"    shift, and go to state 254
    "::"         shift, and go to state 55
    "$t"         shift, and go to state 255
    "name"       shift, and go to state 56
    '$'          shift, and go to state 256

    name_in_namespace                   go to state 257
    basic_type_declaration              go to state 258
    structure_type_declaration          go to state 259
    auto_type_declaration               go to state 260
    bitfield_type_declaration           go to state 261
    type_declaration_no_options         go to state 969
    type_declaration_no_options_no_dim  go to state 263


State 781

  246 new_type_declaration: '<' $@3 . type_declaration '>' $@4

    "type"       shift, and go to state 216
    "array"      shift, and go to state 217
    "table"      shift, and go to state 218
    "typedecl"   shift, and go to state 219
    "iterator"   shift, and go to state 220
    "smart_ptr"  shift, and go to state 221
    "bool"       shift, and go to state 222
    "void"       shift, and go to state 223
    "string"     shift, and go to state 224
    "auto"       shift, and go to state 225
    "int"        shift, and go to state 226
    "int2"       shift, and go to state 227
    "int3"       shift, and go to state 228
    "int4"       shift, and go to state 229
    "uint"       shift, and go to state 230
    "bitfield"   shift, and go to state 231
    "uint2"      shift, and go to state 232
    "uint3"      shift, and go to state 233
    "uint4"      shift, and go to state 234
    "float"      shift, and go to state 235
    "float2"     shift, and go to state 236
    "float3"     shift, and go to state 237
    "float4"     shift, and go to state 238
    "range"      shift, and go to state 239
    "urange"     shift, and go to state 240
    "range64"    shift, and go to state 241
    "urange64"   shift, and go to state 242
    "block"      shift, and go to state 243
    "int64"      shift, and go to state 244
    "uint64"     shift, and go to state 245
    "double"     shift, and go to state 246
    "function"   shift, and go to state 247
    "lambda"     shift, and go to state 248
    "int8"       shift, and go to state 249
    "uint8"      shift, and go to state 250
    "int16"      shift, and go to state 251
    "uint16"     shift, and go to state 252
    "tuple"      shift, and go to state 253
    "variant"    shift, and go to state 254
    "::"         shift, and go to state 55
    "$t"         shift, and go to state 255
    "name"       shift, and go to state 56
    '$'          shift, and go to state 256

    name_in_namespace                   go to state 257
    basic_type_declaration              go to state 258
    structure_type_declaration          go to state 259
    auto_type_declaration               go to state 260
    bitfield_type_declaration           go to state 261
    type_declaration_no_options         go to state 262
    type_declaration_no_options_no_dim  go to state 263
    type_declaration                    go to state 970


State 782

  249 expr_new: "new" new_type_declaration '(' . use_initializer ')'
  250         | "new" new_type_declaration '(' . use_initializer make_struct_single ')'

    "uninitialized"  shift, and go to state 971

    $default  reduce using rule 714 (use_initializer)

    use_initializer  go to state 972


State 783

  248 expr_new: "new" structure_type_declaration '(' . optional_expr_list ')'

    "struct"                          shift, and go to state 408
    "class"                           shift, and go to state 409
    "true"                            shift, and go to state 410
    "false"                           shift, and go to state 411
    "new"                             shift, and go to state 412
    "typeinfo"                        shift, and go to state 413
    "type"                            shift, and go to state 414
    "array"                           shift, and go to state 415
    "null"                            shift, and go to state 416
    "table"                           shift, and go to state 417
    "deref"                           shift, and go to state 418
    "cast"                            shift, and go to state 419
    "upcast"                          shift, and go to state 420
    "addr"                            shift, and go to state 421
    "reinterpret"                     shift, and go to state 422
    "fixed_array"                     shift, and go to state 423
    "default"                         shift, and go to state 424
    "bool"                            shift, and go to state 222
    "void"                            shift, and go to state 223
    "string"                          shift, and go to state 224
    "int"                             shift, and go to state 226
    "int2"                            shift, and go to state 227
    "int3"                            shift, and go to state 228
    "int4"                            shift, and go to state 229
    "uint"                            shift, and go to state 230
    "bitfield"                        shift, and go to state 425
    "uint2"                           shift, and go to state 232
    "uint3"                           shift, and go to state 233
    "uint4"                           shift, and go to state 234
    "float"                           shift, and go to state 235
    "float2"                          shift, and go to state 236
    "float3"                          shift, and go to state 237
    "float4"                          shift, and go to state 238
    "range"                           shift, and go to state 239
    "urange"                          shift, and go to state 240
    "range64"                         shift, and go to state 241
    "urange64"                        shift, and go to state 242
    "int64"                           shift, and go to state 244
    "uint64"                          shift, and go to state 245
    "double"                          shift, and go to state 246
    "int8"                            shift, and go to state 249
    "uint8"                           shift, and go to state 250
    "int16"                           shift, and go to state 251
    "uint16"                          shift, and go to state 252
    "tuple"                           shift, and go to state 426
    "variant"                         shift, and go to state 427
    "generator"                       shift, and go to state 428
    "++"                              shift, and go to state 429
    "--"                              shift, and go to state 430
    "::"                              shift, and go to state 55
    "$$"                              shift, and go to state 431
    "$i"                              shift, and go to state 432
    "$v"                              shift, and go to state 433
    "$b"                              shift, and go to state 434
    "$a"                              shift, and go to state 435
    "$c"                              shift, and go to state 436
    "..."                             shift, and go to state 437
    "integer constant"                shift, and go to state 438
    "long integer constant"           shift, and go to state 439
    "unsigned integer constant"       shift, and go to state 440
    "unsigned long integer constant"  shift, and go to state 441
    "unsigned int8 constant"          shift, and go to state 442
    "floating point constant"         shift, and go to state 443
    "double constant"                 shift, and go to state 444
    "name"                            shift, and go to state 56
    "start of the string"             shift, and go to state 445
    "begin of code block"             shift, and go to state 446
    '-'                               shift, and go to state 447
    '+'                               shift, and go to state 448
    '*'                               shift, and go to state 449
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 450
    '!'                               shift, and go to state 451
    '['                               shift, and go to state 452
    '('                               shift, and go to state 453
    '$'                               shift, and go to state 454
    '@'                               shift, and go to state 455

    $default  reduce using rule 235 (optional_expr_list)

    string_builder          go to state 456
    expr_reader             go to state 457
    expr_call_pipe          go to state 458
    optional_expr_list      go to state 973
    name_in_namespace       go to state 459
    expr_new                go to state 460
    expr_cast               go to state 461
    expr_type_decl          go to state 462
    expr_type_info          go to state 463
    expr_list               go to state 698
    block_or_lambda         go to state 464
    expr_full_block         go to state 465
    expr_numeric_const      go to state 466
    expr_named_call         go to state 467
    expr_method_call        go to state 468
    func_addr_expr          go to state 469
    expr_field              go to state 470
    expr_call               go to state 471
    expr                    go to state 634
    expr_mtag               go to state 473
    basic_type_declaration  go to state 474
    make_decl               go to state 475
    make_struct_decl        go to state 476
    make_tuple_call         go to state 477
    make_dim_decl           go to state 478
    make_table_decl         go to state 479
    array_comprehension     go to state 480


State 784

  286 expr_type_info: "typeinfo" '(' name_in_namespace . expr ')'
  287               | "typeinfo" '(' name_in_namespace . '<' "name" '>' expr ')'
  288               | "typeinfo" '(' name_in_namespace . '<' "name" "end of expression" "name" '>' expr ')'

    "struct"                          shift, and go to state 408
    "class"                           shift, and go to state 409
    "true"                            shift, and go to state 410
    "false"                           shift, and go to state 411
    "new"                             shift, and go to state 412
    "typeinfo"                        shift, and go to state 413
    "type"                            shift, and go to state 414
    "array"                           shift, and go to state 415
    "null"                            shift, and go to state 416
    "table"                           shift, and go to state 417
    "deref"                           shift, and go to state 418
    "cast"                            shift, and go to state 419
    "upcast"                          shift, and go to state 420
    "addr"                            shift, and go to state 421
    "reinterpret"                     shift, and go to state 422
    "fixed_array"                     shift, and go to state 423
    "default"                         shift, and go to state 424
    "bool"                            shift, and go to state 222
    "void"                            shift, and go to state 223
    "string"                          shift, and go to state 224
    "int"                             shift, and go to state 226
    "int2"                            shift, and go to state 227
    "int3"                            shift, and go to state 228
    "int4"                            shift, and go to state 229
    "uint"                            shift, and go to state 230
    "bitfield"                        shift, and go to state 425
    "uint2"                           shift, and go to state 232
    "uint3"                           shift, and go to state 233
    "uint4"                           shift, and go to state 234
    "float"                           shift, and go to state 235
    "float2"                          shift, and go to state 236
    "float3"                          shift, and go to state 237
    "float4"                          shift, and go to state 238
    "range"                           shift, and go to state 239
    "urange"                          shift, and go to state 240
    "range64"                         shift, and go to state 241
    "urange64"                        shift, and go to state 242
    "int64"                           shift, and go to state 244
    "uint64"                          shift, and go to state 245
    "double"                          shift, and go to state 246
    "int8"                            shift, and go to state 249
    "uint8"                           shift, and go to state 250
    "int16"                           shift, and go to state 251
    "uint16"                          shift, and go to state 252
    "tuple"                           shift, and go to state 426
    "variant"                         shift, and go to state 427
    "generator"                       shift, and go to state 428
    "++"                              shift, and go to state 429
    "--"                              shift, and go to state 430
    "::"                              shift, and go to state 55
    "$$"                              shift, and go to state 431
    "$i"                              shift, and go to state 432
    "$v"                              shift, and go to state 433
    "$b"                              shift, and go to state 434
    "$a"                              shift, and go to state 435
    "$c"                              shift, and go to state 436
    "..."                             shift, and go to state 437
    "integer constant"                shift, and go to state 438
    "long integer constant"           shift, and go to state 439
    "unsigned integer constant"       shift, and go to state 440
    "unsigned long integer constant"  shift, and go to state 441
    "unsigned int8 constant"          shift, and go to state 442
    "floating point constant"         shift, and go to state 443
    "double constant"                 shift, and go to state 444
    "name"                            shift, and go to state 56
    "start of the string"             shift, and go to state 445
    "begin of code block"             shift, and go to state 446
    '<'                               shift, and go to state 974
    '-'                               shift, and go to state 447
    '+'                               shift, and go to state 448
    '*'                               shift, and go to state 449
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 450
    '!'                               shift, and go to state 451
    '['                               shift, and go to state 452
    '('                               shift, and go to state 453
    '$'                               shift, and go to state 454
    '@'                               shift, and go to state 455

    string_builder          go to state 456
    expr_reader             go to state 457
    expr_call_pipe          go to state 458
    name_in_namespace       go to state 459
    expr_new                go to state 460
    expr_cast               go to state 461
    expr_type_decl          go to state 462
    expr_type_info          go to state 463
    block_or_lambda         go to state 464
    expr_full_block         go to state 465
    expr_numeric_const      go to state 466
    expr_named_call         go to state 467
    expr_method_call        go to state 468
    func_addr_expr          go to state 469
    expr_field              go to state 470
    expr_call               go to state 471
    expr                    go to state 975
    expr_mtag               go to state 473
    basic_type_declaration  go to state 474
    make_decl               go to state 475
    make_struct_decl        go to state 476
    make_tuple_call         go to state 477
    make_dim_decl           go to state 478
    make_table_decl         go to state 479
    array_comprehension     go to state 480


State 785

  285 expr_type_decl: "type" '<' $@11 . type_declaration '>' $@12

    "type"       shift, and go to state 216
    "array"      shift, and go to state 217
    "table"      shift, and go to state 218
    "typedecl"   shift, and go to state 219
    "iterator"   shift, and go to state 220
    "smart_ptr"  shift, and go to state 221
    "bool"       shift, and go to state 222
    "void"       shift, and go to state 223
    "string"     shift, and go to state 224
    "auto"       shift, and go to state 225
    "int"        shift, and go to state 226
    "int2"       shift, and go to state 227
    "int3"       shift, and go to state 228
    "int4"       shift, and go to state 229
    "uint"       shift, and go to state 230
    "bitfield"   shift, and go to state 231
    "uint2"      shift, and go to state 232
    "uint3"      shift, and go to state 233
    "uint4"      shift, and go to state 234
    "float"      shift, and go to state 235
    "float2"     shift, and go to state 236
    "float3"     shift, and go to state 237
    "float4"     shift, and go to state 238
    "range"      shift, and go to state 239
    "urange"     shift, and go to state 240
    "range64"    shift, and go to state 241
    "urange64"   shift, and go to state 242
    "block"      shift, and go to state 243
    "int64"      shift, and go to state 244
    "uint64"     shift, and go to state 245
    "double"     shift, and go to state 246
    "function"   shift, and go to state 247
    "lambda"     shift, and go to state 248
    "int8"       shift, and go to state 249
    "uint8"      shift, and go to state 250
    "int16"      shift, and go to state 251
    "uint16"     shift, and go to state 252
    "tuple"      shift, and go to state 253
    "variant"    shift, and go to state 254
    "::"         shift, and go to state 55
    "$t"         shift, and go to state 255
    "name"       shift, and go to state 56
    '$'          shift, and go to state 256

    name_in_namespace                   go to state 257
    basic_type_declaration              go to state 258
    structure_type_declaration          go to state 259
    auto_type_declaration               go to state 260
    bitfield_type_declaration           go to state 261
    type_declaration_no_options         go to state 262
    type_declaration_no_options_no_dim  go to state 263
    type_declaration                    go to state 976


State 786

  737 make_dim_decl: "array" "struct" '<' . $@83 type_declaration_no_options '>' $@84 '(' use_initializer make_struct_dim ')'

    $default  reduce using rule 735 ($@83)

    $@83  go to state 977


State 787

  740 make_dim_decl: "array" "tuple" '<' . $@85 type_declaration_no_options '>' $@86 '(' use_initializer make_struct_dim ')'

    $default  reduce using rule 738 ($@85)

    $@85  go to state 978


State 788

  743 make_dim_decl: "array" "variant" '<' . $@87 type_declaration_no_options '>' $@88 '(' make_struct_dim ')'

    $default  reduce using rule 741 ($@87)

    $@87  go to state 979


State 789

  747 make_dim_decl: "array" '<' $@89 . type_declaration_no_options '>' $@90 '(' expr_list optional_comma ')'

    "type"       shift, and go to state 216
    "array"      shift, and go to state 217
    "table"      shift, and go to state 218
    "typedecl"   shift, and go to state 219
    "iterator"   shift, and go to state 220
    "smart_ptr"  shift, and go to state 221
    "bool"       shift, and go to state 222
    "void"       shift, and go to state 223
    "string"     shift, and go to state 224
    "auto"       shift, and go to state 225
    "int"        shift, and go to state 226
    "int2"       shift, and go to state 227
    "int3"       shift, and go to state 228
    "int4"       shift, and go to state 229
    "uint"       shift, and go to state 230
    "bitfield"   shift, and go to state 231
    "uint2"      shift, and go to state 232
    "uint3"      shift, and go to state 233
    "uint4"      shift, and go to state 234
    "float"      shift, and go to state 235
    "float2"     shift, and go to state 236
    "float3"     shift, and go to state 237
    "float4"     shift, and go to state 238
    "range"      shift, and go to state 239
    "urange"     shift, and go to state 240
    "range64"    shift, and go to state 241
    "urange64"   shift, and go to state 242
    "block"      shift, and go to state 243
    "int64"      shift, and go to state 244
    "uint64"     shift, and go to state 245
    "double"     shift, and go to state 246
    "function"   shift, and go to state 247
    "lambda"     shift, and go to state 248
    "int8"       shift, and go to state 249
    "uint8"      shift, and go to state 250
    "int16"      shift, and go to state 251
    "uint16"     shift, and go to state 252
    "tuple"      shift, and go to state 253
    "variant"    shift, and go to state 254
    "::"         shift, and go to state 55
    "$t"         shift, and go to state 255
    "name"       shift, and go to state 56
    '$'          shift, and go to state 256

    name_in_namespace                   go to state 257
    basic_type_declaration              go to state 258
    structure_type_declaration          go to state 259
    auto_type_declaration               go to state 260
    bitfield_type_declaration           go to state 261
    type_declaration_no_options         go to state 980
    type_declaration_no_options_no_dim  go to state 263


State 790

  290 expr_list: expr_list . ',' expr
  744 make_dim_decl: "array" '(' expr_list . optional_comma ')'

    ','  shift, and go to state 820

    $default  reduce using rule 760 (optional_comma)

    optional_comma  go to state 981


State 791

  756 make_table_decl: "table" '<' type_declaration_no_options . '>' '(' expr_map_tuple_list optional_comma ')'
  757                | "table" '<' type_declaration_no_options . "end of expression" type_declaration_no_options '>' '(' expr_map_tuple_list optional_comma ')'

    "end of expression"  shift, and go to state 982
    '>'                  shift, and go to state 983


State 792

  753 expr_map_tuple_list: expr_map_tuple_list . ',' make_map_tuple
  755 make_table_decl: "table" '(' expr_map_tuple_list . optional_comma ')'

    ','  shift, and go to state 816

    $default  reduce using rule 760 (optional_comma)

    optional_comma  go to state 984


State 793

  336 expr_method_call: expr . "->" "name" '(' ')'
  337                 | expr . "->" "name" '(' expr_list ')'
  347 expr_field: expr . '.' "name"
  348           | expr . '.' '.' "name"
  349           | expr . '.' "name" '(' ')'
  350           | expr . '.' "name" '(' expr_list ')'
  353           | expr . '.' $@17 error $@18
  373 expr: expr . "<<" expr
  374     | expr . ">>" expr
  375     | expr . "<<<" expr
  376     | expr . ">>>" expr
  377     | expr . '+' expr
  378     | expr . '-' expr
  379     | expr . '*' expr
  380     | expr . '/' expr
  381     | expr . '%' expr
  382     | expr . '<' expr
  383     | expr . '>' expr
  384     | expr . "==" expr
  385     | expr . "!=" expr
  386     | expr . "<=" expr
  387     | expr . ">=" expr
  388     | expr . '&' expr
  389     | expr . '|' expr
  390     | expr . '^' expr
  391     | expr . "&&" expr
  392     | expr . "||" expr
  393     | expr . "^^" expr
  394     | expr . ".." expr
  397     | expr . "++"
  398     | expr . "--"
  400     | expr . '[' expr ']'
  401     | expr . '.' '[' expr ']'
  402     | expr . "?[" expr ']'
  403     | expr . '.' "?[" expr ']'
  404     | expr . "?." "name"
  405     | expr . '.' "?." "name"
  409     | "deref" '(' expr . ')'
  413     | expr . "??" expr
  414     | expr . '?' expr ':' expr
  417     | expr . "is" "type" '<' $@19 type_declaration_no_options '>' $@20
  418     | expr . "is" basic_type_declaration
  419     | expr . "is" "name"
  420     | expr . "as" "name"
  423     | expr . "as" "type" '<' $@21 type_declaration '>' $@22
  424     | expr . "as" basic_type_declaration
  425     | expr . '?' "as" "name"
  428     | expr . '?' "as" "type" '<' $@23 type_declaration '>' $@24
  429     | expr . '?' "as" basic_type_declaration
  437     | expr . "<|" expr
  438     | expr . "|>" expr
  439     | expr . "|>" basic_type_declaration
  449 expr_mtag: expr . '.' "$f" '(' expr ')'
  450          | expr . "?." "$f" '(' expr ')'
  451          | expr . '.' '.' "$f" '(' expr ')'
  452          | expr . '.' "?." "$f" '(' expr ')'
  453          | expr . "as" "$f" '(' expr ')'
  454          | expr . '?' "as" "$f" '(' expr ')'
  455          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 643
    "as"   shift, and go to state 644
    "<<"   shift, and go to state 645
    ">>"   shift, and go to state 646
    "++"   shift, and go to state 647
    "--"   shift, and go to state 648
    "<="   shift, and go to state 649
    ">="   shift, and go to state 650
    "=="   shift, and go to state 651
    "!="   shift, and go to state 652
    "->"   shift, and go to state 653
    "??"   shift, and go to state 654
    "?."   shift, and go to state 655
    "?["   shift, and go to state 656
    "<|"   shift, and go to state 657
    "|>"   shift, and go to state 658
    "<<<"  shift, and go to state 659
    ">>>"  shift, and go to state 660
    "&&"   shift, and go to state 661
    "||"   shift, and go to state 662
    "^^"   shift, and go to state 663
    ".."   shift, and go to state 664
    '?'    shift, and go to state 665
    '|'    shift, and go to state 666
    '^'    shift, and go to state 667
    '&'    shift, and go to state 668
    '<'    shift, and go to state 669
    '>'    shift, and go to state 670
    '-'    shift, and go to state 671
    '+'    shift, and go to state 672
    '*'    shift, and go to state 673
    '/'    shift, and go to state 674
    '%'    shift, and go to state 675
    '.'    shift, and go to state 676
    '['    shift, and go to state 677
    ')'    shift, and go to state 985


State 794

  276 expr_cast: "cast" '<' $@5 . type_declaration_no_options '>' $@6 expr

    "type"       shift, and go to state 216
    "array"      shift, and go to state 217
    "table"      shift, and go to state 218
    "typedecl"   shift, and go to state 219
    "iterator"   shift, and go to state 220
    "smart_ptr"  shift, and go to state 221
    "bool"       shift, and go to state 222
    "void"       shift, and go to state 223
    "string"     shift, and go to state 224
    "auto"       shift, and go to state 225
    "int"        shift, and go to state 226
    "int2"       shift, and go to state 227
    "int3"       shift, and go to state 228
    "int4"       shift, and go to state 229
    "uint"       shift, and go to state 230
    "bitfield"   shift, and go to state 231
    "uint2"      shift, and go to state 232
    "uint3"      shift, and go to state 233
    "uint4"      shift, and go to state 234
    "float"      shift, and go to state 235
    "float2"     shift, and go to state 236
    "float3"     shift, and go to state 237
    "float4"     shift, and go to state 238
    "range"      shift, and go to state 239
    "urange"     shift, and go to state 240
    "range64"    shift, and go to state 241
    "urange64"   shift, and go to state 242
    "block"      shift, and go to state 243
    "int64"      shift, and go to state 244
    "uint64"     shift, and go to state 245
    "double"     shift, and go to state 246
    "function"   shift, and go to state 247
    "lambda"     shift, and go to state 248
    "int8"       shift, and go to state 249
    "uint8"      shift, and go to state 250
    "int16"      shift, and go to state 251
    "uint16"     shift, and go to state 252
    "tuple"      shift, and go to state 253
    "variant"    shift, and go to state 254
    "::"         shift, and go to state 55
    "$t"         shift, and go to state 255
    "name"       shift, and go to state 56
    '$'          shift, and go to state 256

    name_in_namespace                   go to state 257
    basic_type_declaration              go to state 258
    structure_type_declaration          go to state 259
    auto_type_declaration               go to state 260
    bitfield_type_declaration           go to state 261
    type_declaration_no_options         go to state 986
    type_declaration_no_options_no_dim  go to state 263


State 795

  279 expr_cast: "upcast" '<' $@7 . type_declaration_no_options '>' $@8 expr

    "type"       shift, and go to state 216
    "array"      shift, and go to state 217
    "table"      shift, and go to state 218
    "typedecl"   shift, and go to state 219
    "iterator"   shift, and go to state 220
    "smart_ptr"  shift, and go to state 221
    "bool"       shift, and go to state 222
    "void"       shift, and go to state 223
    "string"     shift, and go to state 224
    "auto"       shift, and go to state 225
    "int"        shift, and go to state 226
    "int2"       shift, and go to state 227
    "int3"       shift, and go to state 228
    "int4"       shift, and go to state 229
    "uint"       shift, and go to state 230
    "bitfield"   shift, and go to state 231
    "uint2"      shift, and go to state 232
    "uint3"      shift, and go to state 233
    "uint4"      shift, and go to state 234
    "float"      shift, and go to state 235
    "float2"     shift, and go to state 236
    "float3"     shift, and go to state 237
    "float4"     shift, and go to state 238
    "range"      shift, and go to state 239
    "urange"     shift, and go to state 240
    "range64"    shift, and go to state 241
    "urange64"   shift, and go to state 242
    "block"      shift, and go to state 243
    "int64"      shift, and go to state 244
    "uint64"     shift, and go to state 245
    "double"     shift, and go to state 246
    "function"   shift, and go to state 247
    "lambda"     shift, and go to state 248
    "int8"       shift, and go to state 249
    "uint8"      shift, and go to state 250
    "int16"      shift, and go to state 251
    "uint16"     shift, and go to state 252
    "tuple"      shift, and go to state 253
    "variant"    shift, and go to state 254
    "::"         shift, and go to state 55
    "$t"         shift, and go to state 255
    "name"       shift, and go to state 56
    '$'          shift, and go to state 256

    name_in_namespace                   go to state 257
    basic_type_declaration              go to state 258
    structure_type_declaration          go to state 259
    auto_type_declaration               go to state 260
    bitfield_type_declaration           go to state 261
    type_declaration_no_options         go to state 987
    type_declaration_no_options_no_dim  go to state 263


State 796

  336 expr_method_call: expr . "->" "name" '(' ')'
  337                 | expr . "->" "name" '(' expr_list ')'
  347 expr_field: expr . '.' "name"
  348           | expr . '.' '.' "name"
  349           | expr . '.' "name" '(' ')'
  350           | expr . '.' "name" '(' expr_list ')'
  353           | expr . '.' $@17 error $@18
  373 expr: expr . "<<" expr
  374     | expr . ">>" expr
  375     | expr . "<<<" expr
  376     | expr . ">>>" expr
  377     | expr . '+' expr
  378     | expr . '-' expr
  379     | expr . '*' expr
  380     | expr . '/' expr
  381     | expr . '%' expr
  382     | expr . '<' expr
  383     | expr . '>' expr
  384     | expr . "==" expr
  385     | expr . "!=" expr
  386     | expr . "<=" expr
  387     | expr . ">=" expr
  388     | expr . '&' expr
  389     | expr . '|' expr
  390     | expr . '^' expr
  391     | expr . "&&" expr
  392     | expr . "||" expr
  393     | expr . "^^" expr
  394     | expr . ".." expr
  397     | expr . "++"
  398     | expr . "--"
  400     | expr . '[' expr ']'
  401     | expr . '.' '[' expr ']'
  402     | expr . "?[" expr ']'
  403     | expr . '.' "?[" expr ']'
  404     | expr . "?." "name"
  405     | expr . '.' "?." "name"
  410     | "addr" '(' expr . ')'
  413     | expr . "??" expr
  414     | expr . '?' expr ':' expr
  417     | expr . "is" "type" '<' $@19 type_declaration_no_options '>' $@20
  418     | expr . "is" basic_type_declaration
  419     | expr . "is" "name"
  420     | expr . "as" "name"
  423     | expr . "as" "type" '<' $@21 type_declaration '>' $@22
  424     | expr . "as" basic_type_declaration
  425     | expr . '?' "as" "name"
  428     | expr . '?' "as" "type" '<' $@23 type_declaration '>' $@24
  429     | expr . '?' "as" basic_type_declaration
  437     | expr . "<|" expr
  438     | expr . "|>" expr
  439     | expr . "|>" basic_type_declaration
  449 expr_mtag: expr . '.' "$f" '(' expr ')'
  450          | expr . "?." "$f" '(' expr ')'
  451          | expr . '.' '.' "$f" '(' expr ')'
  452          | expr . '.' "?." "$f" '(' expr ')'
  453          | expr . "as" "$f" '(' expr ')'
  454          | expr . '?' "as" "$f" '(' expr ')'
  455          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 643
    "as"   shift, and go to state 644
    "<<"   shift, and go to state 645
    ">>"   shift, and go to state 646
    "++"   shift, and go to state 647
    "--"   shift, and go to state 648
    "<="   shift, and go to state 649
    ">="   shift, and go to state 650
    "=="   shift, and go to state 651
    "!="   shift, and go to state 652
    "->"   shift, and go to state 653
    "??"   shift, and go to state 654
    "?."   shift, and go to state 655
    "?["   shift, and go to state 656
    "<|"   shift, and go to state 657
    "|>"   shift, and go to state 658
    "<<<"  shift, and go to state 659
    ">>>"  shift, and go to state 660
    "&&"   shift, and go to state 661
    "||"   shift, and go to state 662
    "^^"   shift, and go to state 663
    ".."   shift, and go to state 664
    '?'    shift, and go to state 665
    '|'    shift, and go to state 666
    '^'    shift, and go to state 667
    '&'    shift, and go to state 668
    '<'    shift, and go to state 669
    '>'    shift, and go to state 670
    '-'    shift, and go to state 671
    '+'    shift, and go to state 672
    '*'    shift, and go to state 673
    '/'    shift, and go to state 674
    '%'    shift, and go to state 675
    '.'    shift, and go to state 676
    '['    shift, and go to state 677
    ')'    shift, and go to state 988


State 797

  282 expr_cast: "reinterpret" '<' $@9 . type_declaration_no_options '>' $@10 expr

    "type"       shift, and go to state 216
    "array"      shift, and go to state 217
    "table"      shift, and go to state 218
    "typedecl"   shift, and go to state 219
    "iterator"   shift, and go to state 220
    "smart_ptr"  shift, and go to state 221
    "bool"       shift, and go to state 222
    "void"       shift, and go to state 223
    "string"     shift, and go to state 224
    "auto"       shift, and go to state 225
    "int"        shift, and go to state 226
    "int2"       shift, and go to state 227
    "int3"       shift, and go to state 228
    "int4"       shift, and go to state 229
    "uint"       shift, and go to state 230
    "bitfield"   shift, and go to state 231
    "uint2"      shift, and go to state 232
    "uint3"      shift, and go to state 233
    "uint4"      shift, and go to state 234
    "float"      shift, and go to state 235
    "float2"     shift, and go to state 236
    "float3"     shift, and go to state 237
    "float4"     shift, and go to state 238
    "range"      shift, and go to state 239
    "urange"     shift, and go to state 240
    "range64"    shift, and go to state 241
    "urange64"   shift, and go to state 242
    "block"      shift, and go to state 243
    "int64"      shift, and go to state 244
    "uint64"     shift, and go to state 245
    "double"     shift, and go to state 246
    "function"   shift, and go to state 247
    "lambda"     shift, and go to state 248
    "int8"       shift, and go to state 249
    "uint8"      shift, and go to state 250
    "int16"      shift, and go to state 251
    "uint16"     shift, and go to state 252
    "tuple"      shift, and go to state 253
    "variant"    shift, and go to state 254
    "::"         shift, and go to state 55
    "$t"         shift, and go to state 255
    "name"       shift, and go to state 56
    '$'          shift, and go to state 256

    name_in_namespace                   go to state 257
    basic_type_declaration              go to state 258
    structure_type_declaration          go to state 259
    auto_type_declaration               go to state 260
    bitfield_type_declaration           go to state 261
    type_declaration_no_options         go to state 989
    type_declaration_no_options_no_dim  go to state 263


State 798

  751 make_dim_decl: "fixed_array" '<' $@91 . type_declaration_no_options '>' $@92 '(' expr_list optional_comma ')'

    "type"       shift, and go to state 216
    "array"      shift, and go to state 217
    "table"      shift, and go to state 218
    "typedecl"   shift, and go to state 219
    "iterator"   shift, and go to state 220
    "smart_ptr"  shift, and go to state 221
    "bool"       shift, and go to state 222
    "void"       shift, and go to state 223
    "string"     shift, and go to state 224
    "auto"       shift, and go to state 225
    "int"        shift, and go to state 226
    "int2"       shift, and go to state 227
    "int3"       shift, and go to state 228
    "int4"       shift, and go to state 229
    "uint"       shift, and go to state 230
    "bitfield"   shift, and go to state 231
    "uint2"      shift, and go to state 232
    "uint3"      shift, and go to state 233
    "uint4"      shift, and go to state 234
    "float"      shift, and go to state 235
    "float2"     shift, and go to state 236
    "float3"     shift, and go to state 237
    "float4"     shift, and go to state 238
    "range"      shift, and go to state 239
    "urange"     shift, and go to state 240
    "range64"    shift, and go to state 241
    "urange64"   shift, and go to state 242
    "block"      shift, and go to state 243
    "int64"      shift, and go to state 244
    "uint64"     shift, and go to state 245
    "double"     shift, and go to state 246
    "function"   shift, and go to state 247
    "lambda"     shift, and go to state 248
    "int8"       shift, and go to state 249
    "uint8"      shift, and go to state 250
    "int16"      shift, and go to state 251
    "uint16"     shift, and go to state 252
    "tuple"      shift, and go to state 253
    "variant"    shift, and go to state 254
    "::"         shift, and go to state 55
    "$t"         shift, and go to state 255
    "name"       shift, and go to state 56
    '$'          shift, and go to state 256

    name_in_namespace                   go to state 257
    basic_type_declaration              go to state 258
    structure_type_declaration          go to state 259
    auto_type_declaration               go to state 260
    bitfield_type_declaration           go to state 261
    type_declaration_no_options         go to state 990
    type_declaration_no_options_no_dim  go to state 263


State 799

  290 expr_list: expr_list . ',' expr
  748 make_dim_decl: "fixed_array" '(' expr_list . optional_comma ')'

    ','  shift, and go to state 820

    $default  reduce using rule 760 (optional_comma)

    optional_comma  go to state 991


State 800

  727 make_struct_decl: "default" '<' $@79 . type_declaration_no_options '>' $@80 use_initializer

    "type"       shift, and go to state 216
    "array"      shift, and go to state 217
    "table"      shift, and go to state 218
    "typedecl"   shift, and go to state 219
    "iterator"   shift, and go to state 220
    "smart_ptr"  shift, and go to state 221
    "bool"       shift, and go to state 222
    "void"       shift, and go to state 223
    "string"     shift, and go to state 224
    "auto"       shift, and go to state 225
    "int"        shift, and go to state 226
    "int2"       shift, and go to state 227
    "int3"       shift, and go to state 228
    "int4"       shift, and go to state 229
    "uint"       shift, and go to state 230
    "bitfield"   shift, and go to state 231
    "uint2"      shift, and go to state 232
    "uint3"      shift, and go to state 233
    "uint4"      shift, and go to state 234
    "float"      shift, and go to state 235
    "float2"     shift, and go to state 236
    "float3"     shift, and go to state 237
    "float4"     shift, and go to state 238
    "range"      shift, and go to state 239
    "urange"     shift, and go to state 240
    "range64"    shift, and go to state 241
    "urange64"   shift, and go to state 242
    "block"      shift, and go to state 243
    "int64"      shift, and go to state 244
    "uint64"     shift, and go to state 245
    "double"     shift, and go to state 246
    "function"   shift, and go to state 247
    "lambda"     shift, and go to state 248
    "int8"       shift, and go to state 249
    "uint8"      shift, and go to state 250
    "int16"      shift, and go to state 251
    "uint16"     shift, and go to state 252
    "tuple"      shift, and go to state 253
    "variant"    shift, and go to state 254
    "::"         shift, and go to state 55
    "$t"         shift, and go to state 255
    "name"       shift, and go to state 56
    '$'          shift, and go to state 256

    name_in_namespace                   go to state 257
    basic_type_declaration              go to state 258
    structure_type_declaration          go to state 259
    auto_type_declaration               go to state 260
    bitfield_type_declaration           go to state 261
    type_declaration_no_options         go to state 992
    type_declaration_no_options_no_dim  go to state 263


State 801

  733 make_tuple_call: "tuple" '<' $@81 . type_declaration_no_options '>' $@82 '(' use_initializer make_struct_dim ')'

    "type"       shift, and go to state 216
    "array"      shift, and go to state 217
    "table"      shift, and go to state 218
    "typedecl"   shift, and go to state 219
    "iterator"   shift, and go to state 220
    "smart_ptr"  shift, and go to state 221
    "bool"       shift, and go to state 222
    "void"       shift, and go to state 223
    "string"     shift, and go to state 224
    "auto"       shift, and go to state 225
    "int"        shift, and go to state 226
    "int2"       shift, and go to state 227
    "int3"       shift, and go to state 228
    "int4"       shift, and go to state 229
    "uint"       shift, and go to state 230
    "bitfield"   shift, and go to state 231
    "uint2"      shift, and go to state 232
    "uint3"      shift, and go to state 233
    "uint4"      shift, and go to state 234
    "float"      shift, and go to state 235
    "float2"     shift, and go to state 236
    "float3"     shift, and go to state 237
    "float4"     shift, and go to state 238
    "range"      shift, and go to state 239
    "urange"     shift, and go to state 240
    "range64"    shift, and go to state 241
    "urange64"   shift, and go to state 242
    "block"      shift, and go to state 243
    "int64"      shift, and go to state 244
    "uint64"     shift, and go to state 245
    "double"     shift, and go to state 246
    "function"   shift, and go to state 247
    "lambda"     shift, and go to state 248
    "int8"       shift, and go to state 249
    "uint8"      shift, and go to state 250
    "int16"      shift, and go to state 251
    "uint16"     shift, and go to state 252
    "tuple"      shift, and go to state 253
    "variant"    shift, and go to state 254
    "::"         shift, and go to state 55
    "$t"         shift, and go to state 255
    "name"       shift, and go to state 56
    '$'          shift, and go to state 256

    name_in_namespace                   go to state 257
    basic_type_declaration              go to state 258
    structure_type_declaration          go to state 259
    auto_type_declaration               go to state 260
    bitfield_type_declaration           go to state 261
    type_declaration_no_options         go to state 993
    type_declaration_no_options_no_dim  go to state 263


State 802

  290 expr_list: expr_list . ',' expr
  730 make_tuple_call: "tuple" '(' expr_list . optional_comma ')'

    ','  shift, and go to state 820

    $default  reduce using rule 760 (optional_comma)

    optional_comma  go to state 994


State 803

  724 make_struct_decl: "variant" '<' $@77 . type_declaration_no_options '>' $@78 '(' make_struct_dim ')'

    "type"       shift, and go to state 216
    "array"      shift, and go to state 217
    "table"      shift, and go to state 218
    "typedecl"   shift, and go to state 219
    "iterator"   shift, and go to state 220
    "smart_ptr"  shift, and go to state 221
    "bool"       shift, and go to state 222
    "void"       shift, and go to state 223
    "string"     shift, and go to state 224
    "auto"       shift, and go to state 225
    "int"        shift, and go to state 226
    "int2"       shift, and go to state 227
    "int3"       shift, and go to state 228
    "int4"       shift, and go to state 229
    "uint"       shift, and go to state 230
    "bitfield"   shift, and go to state 231
    "uint2"      shift, and go to state 232
    "uint3"      shift, and go to state 233
    "uint4"      shift, and go to state 234
    "float"      shift, and go to state 235
    "float2"     shift, and go to state 236
    "float3"     shift, and go to state 237
    "float4"     shift, and go to state 238
    "range"      shift, and go to state 239
    "urange"     shift, and go to state 240
    "range64"    shift, and go to state 241
    "urange64"   shift, and go to state 242
    "block"      shift, and go to state 243
    "int64"      shift, and go to state 244
    "uint64"     shift, and go to state 245
    "double"     shift, and go to state 246
    "function"   shift, and go to state 247
    "lambda"     shift, and go to state 248
    "int8"       shift, and go to state 249
    "uint8"      shift, and go to state 250
    "int16"      shift, and go to state 251
    "uint16"     shift, and go to state 252
    "tuple"      shift, and go to state 253
    "variant"    shift, and go to state 254
    "::"         shift, and go to state 55
    "$t"         shift, and go to state 255
    "name"       shift, and go to state 56
    '$'          shift, and go to state 256

    name_in_namespace                   go to state 257
    basic_type_declaration              go to state 258
    structure_type_declaration          go to state 259
    auto_type_declaration               go to state 260
    bitfield_type_declaration           go to state 261
    type_declaration_no_options         go to state 995
    type_declaration_no_options_no_dim  go to state 263


State 804

  411 expr: "generator" '<' type_declaration_no_options . '>' optional_capture_list '(' ')'
  412     | "generator" '<' type_declaration_no_options . '>' optional_capture_list '(' expr ')'

    '>'  shift, and go to state 996


State 805

  336 expr_method_call: expr . "->" "name" '(' ')'
  337                 | expr . "->" "name" '(' expr_list ')'
  347 expr_field: expr . '.' "name"
  348           | expr . '.' '.' "name"
  349           | expr . '.' "name" '(' ')'
  350           | expr . '.' "name" '(' expr_list ')'
  353           | expr . '.' $@17 error $@18
  373 expr: expr . "<<" expr
  374     | expr . ">>" expr
  375     | expr . "<<<" expr
  376     | expr . ">>>" expr
  377     | expr . '+' expr
  378     | expr . '-' expr
  379     | expr . '*' expr
  380     | expr . '/' expr
  381     | expr . '%' expr
  382     | expr . '<' expr
  383     | expr . '>' expr
  384     | expr . "==" expr
  385     | expr . "!=" expr
  386     | expr . "<=" expr
  387     | expr . ">=" expr
  388     | expr . '&' expr
  389     | expr . '|' expr
  390     | expr . '^' expr
  391     | expr . "&&" expr
  392     | expr . "||" expr
  393     | expr . "^^" expr
  394     | expr . ".." expr
  397     | expr . "++"
  398     | expr . "--"
  400     | expr . '[' expr ']'
  401     | expr . '.' '[' expr ']'
  402     | expr . "?[" expr ']'
  403     | expr . '.' "?[" expr ']'
  404     | expr . "?." "name"
  405     | expr . '.' "?." "name"
  413     | expr . "??" expr
  414     | expr . '?' expr ':' expr
  417     | expr . "is" "type" '<' $@19 type_declaration_no_options '>' $@20
  418     | expr . "is" basic_type_declaration
  419     | expr . "is" "name"
  420     | expr . "as" "name"
  423     | expr . "as" "type" '<' $@21 type_declaration '>' $@22
  424     | expr . "as" basic_type_declaration
  425     | expr . '?' "as" "name"
  428     | expr . '?' "as" "type" '<' $@23 type_declaration '>' $@24
  429     | expr . '?' "as" basic_type_declaration
  437     | expr . "<|" expr
  438     | expr . "|>" expr
  439     | expr . "|>" basic_type_declaration
  441 expr_mtag: "$$" '(' expr . ')'
  449          | expr . '.' "$f" '(' expr ')'
  450          | expr . "?." "$f" '(' expr ')'
  451          | expr . '.' '.' "$f" '(' expr ')'
  452          | expr . '.' "?." "$f" '(' expr ')'
  453          | expr . "as" "$f" '(' expr ')'
  454          | expr . '?' "as" "$f" '(' expr ')'
  455          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 643
    "as"   shift, and go to state 644
    "<<"   shift, and go to state 645
    ">>"   shift, and go to state 646
    "++"   shift, and go to state 647
    "--"   shift, and go to state 648
    "<="   shift, and go to state 649
    ">="   shift, and go to state 650
    "=="   shift, and go to state 651
    "!="   shift, and go to state 652
    "->"   shift, and go to state 653
    "??"   shift, and go to state 654
    "?."   shift, and go to state 655
    "?["   shift, and go to state 656
    "<|"   shift, and go to state 657
    "|>"   shift, and go to state 658
    "<<<"  shift, and go to state 659
    ">>>"  shift, and go to state 660
    "&&"   shift, and go to state 661
    "||"   shift, and go to state 662
    "^^"   shift, and go to state 663
    ".."   shift, and go to state 664
    '?'    shift, and go to state 665
    '|'    shift, and go to state 666
    '^'    shift, and go to state 667
    '&'    shift, and go to state 668
    '<'    shift, and go to state 669
    '>'    shift, and go to state 670
    '-'    shift, and go to state 671
    '+'    shift, and go to state 672
    '*'    shift, and go to state 673
    '/'    shift, and go to state 674
    '%'    shift, and go to state 675
    '.'    shift, and go to state 676
    '['    shift, and go to state 677
    ')'    shift, and go to state 997


State 806

  336 expr_method_call: expr . "->" "name" '(' ')'
  337                 | expr . "->" "name" '(' expr_list ')'
  347 expr_field: expr . '.' "name"
  348           | expr . '.' '.' "name"
  349           | expr . '.' "name" '(' ')'
  350           | expr . '.' "name" '(' expr_list ')'
  353           | expr . '.' $@17 error $@18
  373 expr: expr . "<<" expr
  374     | expr . ">>" expr
  375     | expr . "<<<" expr
  376     | expr . ">>>" expr
  377     | expr . '+' expr
  378     | expr . '-' expr
  379     | expr . '*' expr
  380     | expr . '/' expr
  381     | expr . '%' expr
  382     | expr . '<' expr
  383     | expr . '>' expr
  384     | expr . "==" expr
  385     | expr . "!=" expr
  386     | expr . "<=" expr
  387     | expr . ">=" expr
  388     | expr . '&' expr
  389     | expr . '|' expr
  390     | expr . '^' expr
  391     | expr . "&&" expr
  392     | expr . "||" expr
  393     | expr . "^^" expr
  394     | expr . ".." expr
  397     | expr . "++"
  398     | expr . "--"
  400     | expr . '[' expr ']'
  401     | expr . '.' '[' expr ']'
  402     | expr . "?[" expr ']'
  403     | expr . '.' "?[" expr ']'
  404     | expr . "?." "name"
  405     | expr . '.' "?." "name"
  413     | expr . "??" expr
  414     | expr . '?' expr ':' expr
  417     | expr . "is" "type" '<' $@19 type_declaration_no_options '>' $@20
  418     | expr . "is" basic_type_declaration
  419     | expr . "is" "name"
  420     | expr . "as" "name"
  423     | expr . "as" "type" '<' $@21 type_declaration '>' $@22
  424     | expr . "as" basic_type_declaration
  425     | expr . '?' "as" "name"
  428     | expr . '?' "as" "type" '<' $@23 type_declaration '>' $@24
  429     | expr . '?' "as" basic_type_declaration
  437     | expr . "<|" expr
  438     | expr . "|>" expr
  439     | expr . "|>" basic_type_declaration
  442 expr_mtag: "$i" '(' expr . ')'
  449          | expr . '.' "$f" '(' expr ')'
  450          | expr . "?." "$f" '(' expr ')'
  451          | expr . '.' '.' "$f" '(' expr ')'
  452          | expr . '.' "?." "$f" '(' expr ')'
  453          | expr . "as" "$f" '(' expr ')'
  454          | expr . '?' "as" "$f" '(' expr ')'
  455          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 643
    "as"   shift, and go to state 644
    "<<"   shift, and go to state 645
    ">>"   shift, and go to state 646
    "++"   shift, and go to state 647
    "--"   shift, and go to state 648
    "<="   shift, and go to state 649
    ">="   shift, and go to state 650
    "=="   shift, and go to state 651
    "!="   shift, and go to state 652
    "->"   shift, and go to state 653
    "??"   shift, and go to state 654
    "?."   shift, and go to state 655
    "?["   shift, and go to state 656
    "<|"   shift, and go to state 657
    "|>"   shift, and go to state 658
    "<<<"  shift, and go to state 659
    ">>>"  shift, and go to state 660
    "&&"   shift, and go to state 661
    "||"   shift, and go to state 662
    "^^"   shift, and go to state 663
    ".."   shift, and go to state 664
    '?'    shift, and go to state 665
    '|'    shift, and go to state 666
    '^'    shift, and go to state 667
    '&'    shift, and go to state 668
    '<'    shift, and go to state 669
    '>'    shift, and go to state 670
    '-'    shift, and go to state 671
    '+'    shift, and go to state 672
    '*'    shift, and go to state 673
    '/'    shift, and go to state 674
    '%'    shift, and go to state 675
    '.'    shift, and go to state 676
    '['    shift, and go to state 677
    ')'    shift, and go to state 998


State 807

  336 expr_method_call: expr . "->" "name" '(' ')'
  337                 | expr . "->" "name" '(' expr_list ')'
  347 expr_field: expr . '.' "name"
  348           | expr . '.' '.' "name"
  349           | expr . '.' "name" '(' ')'
  350           | expr . '.' "name" '(' expr_list ')'
  353           | expr . '.' $@17 error $@18
  373 expr: expr . "<<" expr
  374     | expr . ">>" expr
  375     | expr . "<<<" expr
  376     | expr . ">>>" expr
  377     | expr . '+' expr
  378     | expr . '-' expr
  379     | expr . '*' expr
  380     | expr . '/' expr
  381     | expr . '%' expr
  382     | expr . '<' expr
  383     | expr . '>' expr
  384     | expr . "==" expr
  385     | expr . "!=" expr
  386     | expr . "<=" expr
  387     | expr . ">=" expr
  388     | expr . '&' expr
  389     | expr . '|' expr
  390     | expr . '^' expr
  391     | expr . "&&" expr
  392     | expr . "||" expr
  393     | expr . "^^" expr
  394     | expr . ".." expr
  397     | expr . "++"
  398     | expr . "--"
  400     | expr . '[' expr ']'
  401     | expr . '.' '[' expr ']'
  402     | expr . "?[" expr ']'
  403     | expr . '.' "?[" expr ']'
  404     | expr . "?." "name"
  405     | expr . '.' "?." "name"
  413     | expr . "??" expr
  414     | expr . '?' expr ':' expr
  417     | expr . "is" "type" '<' $@19 type_declaration_no_options '>' $@20
  418     | expr . "is" basic_type_declaration
  419     | expr . "is" "name"
  420     | expr . "as" "name"
  423     | expr . "as" "type" '<' $@21 type_declaration '>' $@22
  424     | expr . "as" basic_type_declaration
  425     | expr . '?' "as" "name"
  428     | expr . '?' "as" "type" '<' $@23 type_declaration '>' $@24
  429     | expr . '?' "as" basic_type_declaration
  437     | expr . "<|" expr
  438     | expr . "|>" expr
  439     | expr . "|>" basic_type_declaration
  443 expr_mtag: "$v" '(' expr . ')'
  449          | expr . '.' "$f" '(' expr ')'
  450          | expr . "?." "$f" '(' expr ')'
  451          | expr . '.' '.' "$f" '(' expr ')'
  452          | expr . '.' "?." "$f" '(' expr ')'
  453          | expr . "as" "$f" '(' expr ')'
  454          | expr . '?' "as" "$f" '(' expr ')'
  455          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 643
    "as"   shift, and go to state 644
    "<<"   shift, and go to state 645
    ">>"   shift, and go to state 646
    "++"   shift, and go to state 647
    "--"   shift, and go to state 648
    "<="   shift, and go to state 649
    ">="   shift, and go to state 650
    "=="   shift, and go to state 651
    "!="   shift, and go to state 652
    "->"   shift, and go to state 653
    "??"   shift, and go to state 654
    "?."   shift, and go to state 655
    "?["   shift, and go to state 656
    "<|"   shift, and go to state 657
    "|>"   shift, and go to state 658
    "<<<"  shift, and go to state 659
    ">>>"  shift, and go to state 660
    "&&"   shift, and go to state 661
    "||"   shift, and go to state 662
    "^^"   shift, and go to state 663
    ".."   shift, and go to state 664
    '?'    shift, and go to state 665
    '|'    shift, and go to state 666
    '^'    shift, and go to state 667
    '&'    shift, and go to state 668
    '<'    shift, and go to state 669
    '>'    shift, and go to state 670
    '-'    shift, and go to state 671
    '+'    shift, and go to state 672
    '*'    shift, and go to state 673
    '/'    shift, and go to state 674
    '%'    shift, and go to state 675
    '.'    shift, and go to state 676
    '['    shift, and go to state 677
    ')'    shift, and go to state 999


State 808

  336 expr_method_call: expr . "->" "name" '(' ')'
  337                 | expr . "->" "name" '(' expr_list ')'
  347 expr_field: expr . '.' "name"
  348           | expr . '.' '.' "name"
  349           | expr . '.' "name" '(' ')'
  350           | expr . '.' "name" '(' expr_list ')'
  353           | expr . '.' $@17 error $@18
  373 expr: expr . "<<" expr
  374     | expr . ">>" expr
  375     | expr . "<<<" expr
  376     | expr . ">>>" expr
  377     | expr . '+' expr
  378     | expr . '-' expr
  379     | expr . '*' expr
  380     | expr . '/' expr
  381     | expr . '%' expr
  382     | expr . '<' expr
  383     | expr . '>' expr
  384     | expr . "==" expr
  385     | expr . "!=" expr
  386     | expr . "<=" expr
  387     | expr . ">=" expr
  388     | expr . '&' expr
  389     | expr . '|' expr
  390     | expr . '^' expr
  391     | expr . "&&" expr
  392     | expr . "||" expr
  393     | expr . "^^" expr
  394     | expr . ".." expr
  397     | expr . "++"
  398     | expr . "--"
  400     | expr . '[' expr ']'
  401     | expr . '.' '[' expr ']'
  402     | expr . "?[" expr ']'
  403     | expr . '.' "?[" expr ']'
  404     | expr . "?." "name"
  405     | expr . '.' "?." "name"
  413     | expr . "??" expr
  414     | expr . '?' expr ':' expr
  417     | expr . "is" "type" '<' $@19 type_declaration_no_options '>' $@20
  418     | expr . "is" basic_type_declaration
  419     | expr . "is" "name"
  420     | expr . "as" "name"
  423     | expr . "as" "type" '<' $@21 type_declaration '>' $@22
  424     | expr . "as" basic_type_declaration
  425     | expr . '?' "as" "name"
  428     | expr . '?' "as" "type" '<' $@23 type_declaration '>' $@24
  429     | expr . '?' "as" basic_type_declaration
  437     | expr . "<|" expr
  438     | expr . "|>" expr
  439     | expr . "|>" basic_type_declaration
  444 expr_mtag: "$b" '(' expr . ')'
  449          | expr . '.' "$f" '(' expr ')'
  450          | expr . "?." "$f" '(' expr ')'
  451          | expr . '.' '.' "$f" '(' expr ')'
  452          | expr . '.' "?." "$f" '(' expr ')'
  453          | expr . "as" "$f" '(' expr ')'
  454          | expr . '?' "as" "$f" '(' expr ')'
  455          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 643
    "as"   shift, and go to state 644
    "<<"   shift, and go to state 645
    ">>"   shift, and go to state 646
    "++"   shift, and go to state 647
    "--"   shift, and go to state 648
    "<="   shift, and go to state 649
    ">="   shift, and go to state 650
    "=="   shift, and go to state 651
    "!="   shift, and go to state 652
    "->"   shift, and go to state 653
    "??"   shift, and go to state 654
    "?."   shift, and go to state 655
    "?["   shift, and go to state 656
    "<|"   shift, and go to state 657
    "|>"   shift, and go to state 658
    "<<<"  shift, and go to state 659
    ">>>"  shift, and go to state 660
    "&&"   shift, and go to state 661
    "||"   shift, and go to state 662
    "^^"   shift, and go to state 663
    ".."   shift, and go to state 664
    '?'    shift, and go to state 665
    '|'    shift, and go to state 666
    '^'    shift, and go to state 667
    '&'    shift, and go to state 668
    '<'    shift, and go to state 669
    '>'    shift, and go to state 670
    '-'    shift, and go to state 671
    '+'    shift, and go to state 672
    '*'    shift, and go to state 673
    '/'    shift, and go to state 674
    '%'    shift, and go to state 675
    '.'    shift, and go to state 676
    '['    shift, and go to state 677
    ')'    shift, and go to state 1000


State 809

  336 expr_method_call: expr . "->" "name" '(' ')'
  337                 | expr . "->" "name" '(' expr_list ')'
  347 expr_field: expr . '.' "name"
  348           | expr . '.' '.' "name"
  349           | expr . '.' "name" '(' ')'
  350           | expr . '.' "name" '(' expr_list ')'
  353           | expr . '.' $@17 error $@18
  373 expr: expr . "<<" expr
  374     | expr . ">>" expr
  375     | expr . "<<<" expr
  376     | expr . ">>>" expr
  377     | expr . '+' expr
  378     | expr . '-' expr
  379     | expr . '*' expr
  380     | expr . '/' expr
  381     | expr . '%' expr
  382     | expr . '<' expr
  383     | expr . '>' expr
  384     | expr . "==" expr
  385     | expr . "!=" expr
  386     | expr . "<=" expr
  387     | expr . ">=" expr
  388     | expr . '&' expr
  389     | expr . '|' expr
  390     | expr . '^' expr
  391     | expr . "&&" expr
  392     | expr . "||" expr
  393     | expr . "^^" expr
  394     | expr . ".." expr
  397     | expr . "++"
  398     | expr . "--"
  400     | expr . '[' expr ']'
  401     | expr . '.' '[' expr ']'
  402     | expr . "?[" expr ']'
  403     | expr . '.' "?[" expr ']'
  404     | expr . "?." "name"
  405     | expr . '.' "?." "name"
  413     | expr . "??" expr
  414     | expr . '?' expr ':' expr
  417     | expr . "is" "type" '<' $@19 type_declaration_no_options '>' $@20
  418     | expr . "is" basic_type_declaration
  419     | expr . "is" "name"
  420     | expr . "as" "name"
  423     | expr . "as" "type" '<' $@21 type_declaration '>' $@22
  424     | expr . "as" basic_type_declaration
  425     | expr . '?' "as" "name"
  428     | expr . '?' "as" "type" '<' $@23 type_declaration '>' $@24
  429     | expr . '?' "as" basic_type_declaration
  437     | expr . "<|" expr
  438     | expr . "|>" expr
  439     | expr . "|>" basic_type_declaration
  445 expr_mtag: "$a" '(' expr . ')'
  449          | expr . '.' "$f" '(' expr ')'
  450          | expr . "?." "$f" '(' expr ')'
  451          | expr . '.' '.' "$f" '(' expr ')'
  452          | expr . '.' "?." "$f" '(' expr ')'
  453          | expr . "as" "$f" '(' expr ')'
  454          | expr . '?' "as" "$f" '(' expr ')'
  455          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 643
    "as"   shift, and go to state 644
    "<<"   shift, and go to state 645
    ">>"   shift, and go to state 646
    "++"   shift, and go to state 647
    "--"   shift, and go to state 648
    "<="   shift, and go to state 649
    ">="   shift, and go to state 650
    "=="   shift, and go to state 651
    "!="   shift, and go to state 652
    "->"   shift, and go to state 653
    "??"   shift, and go to state 654
    "?."   shift, and go to state 655
    "?["   shift, and go to state 656
    "<|"   shift, and go to state 657
    "|>"   shift, and go to state 658
    "<<<"  shift, and go to state 659
    ">>>"  shift, and go to state 660
    "&&"   shift, and go to state 661
    "||"   shift, and go to state 662
    "^^"   shift, and go to state 663
    ".."   shift, and go to state 664
    '?'    shift, and go to state 665
    '|'    shift, and go to state 666
    '^'    shift, and go to state 667
    '&'    shift, and go to state 668
    '<'    shift, and go to state 669
    '>'    shift, and go to state 670
    '-'    shift, and go to state 671
    '+'    shift, and go to state 672
    '*'    shift, and go to state 673
    '/'    shift, and go to state 674
    '%'    shift, and go to state 675
    '.'    shift, and go to state 676
    '['    shift, and go to state 677
    ')'    shift, and go to state 1001


State 810

  336 expr_method_call: expr . "->" "name" '(' ')'
  337                 | expr . "->" "name" '(' expr_list ')'
  347 expr_field: expr . '.' "name"
  348           | expr . '.' '.' "name"
  349           | expr . '.' "name" '(' ')'
  350           | expr . '.' "name" '(' expr_list ')'
  353           | expr . '.' $@17 error $@18
  373 expr: expr . "<<" expr
  374     | expr . ">>" expr
  375     | expr . "<<<" expr
  376     | expr . ">>>" expr
  377     | expr . '+' expr
  378     | expr . '-' expr
  379     | expr . '*' expr
  380     | expr . '/' expr
  381     | expr . '%' expr
  382     | expr . '<' expr
  383     | expr . '>' expr
  384     | expr . "==" expr
  385     | expr . "!=" expr
  386     | expr . "<=" expr
  387     | expr . ">=" expr
  388     | expr . '&' expr
  389     | expr . '|' expr
  390     | expr . '^' expr
  391     | expr . "&&" expr
  392     | expr . "||" expr
  393     | expr . "^^" expr
  394     | expr . ".." expr
  397     | expr . "++"
  398     | expr . "--"
  400     | expr . '[' expr ']'
  401     | expr . '.' '[' expr ']'
  402     | expr . "?[" expr ']'
  403     | expr . '.' "?[" expr ']'
  404     | expr . "?." "name"
  405     | expr . '.' "?." "name"
  413     | expr . "??" expr
  414     | expr . '?' expr ':' expr
  417     | expr . "is" "type" '<' $@19 type_declaration_no_options '>' $@20
  418     | expr . "is" basic_type_declaration
  419     | expr . "is" "name"
  420     | expr . "as" "name"
  423     | expr . "as" "type" '<' $@21 type_declaration '>' $@22
  424     | expr . "as" basic_type_declaration
  425     | expr . '?' "as" "name"
  428     | expr . '?' "as" "type" '<' $@23 type_declaration '>' $@24
  429     | expr . '?' "as" basic_type_declaration
  437     | expr . "<|" expr
  438     | expr . "|>" expr
  439     | expr . "|>" basic_type_declaration
  447 expr_mtag: "$c" '(' expr . ')' '(' ')'
  448          | "$c" '(' expr . ')' '(' expr_list ')'
  449          | expr . '.' "$f" '(' expr ')'
  450          | expr . "?." "$f" '(' expr ')'
  451          | expr . '.' '.' "$f" '(' expr ')'
  452          | expr . '.' "?." "$f" '(' expr ')'
  453          | expr . "as" "$f" '(' expr ')'
  454          | expr . '?' "as" "$f" '(' expr ')'
  455          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 643
    "as"   shift, and go to state 644
    "<<"   shift, and go to state 645
    ">>"   shift, and go to state 646
    "++"   shift, and go to state 647
    "--"   shift, and go to state 648
    "<="   shift, and go to state 649
    ">="   shift, and go to state 650
    "=="   shift, and go to state 651
    "!="   shift, and go to state 652
    "->"   shift, and go to state 653
    "??"   shift, and go to state 654
    "?."   shift, and go to state 655
    "?["   shift, and go to state 656
    "<|"   shift, and go to state 657
    "|>"   shift, and go to state 658
    "<<<"  shift, and go to state 659
    ">>>"  shift, and go to state 660
    "&&"   shift, and go to state 661
    "||"   shift, and go to state 662
    "^^"   shift, and go to state 663
    ".."   shift, and go to state 664
    '?'    shift, and go to state 665
    '|'    shift, and go to state 666
    '^'    shift, and go to state 667
    '&'    shift, and go to state 668
    '<'    shift, and go to state 669
    '>'    shift, and go to state 670
    '-'    shift, and go to state 671
    '+'    shift, and go to state 672
    '*'    shift, and go to state 673
    '/'    shift, and go to state 674
    '%'    shift, and go to state 675
    '.'    shift, and go to state 676
    '['    shift, and go to state 677
    ')'    shift, and go to state 1002


State 811

   31 string_builder: "start of the string" string_builder_body "end of the string" .

    $default  reduce using rule 31 (string_builder)


State 812

   30 string_builder_body: string_builder_body "{" . expr "}"

    "struct"                          shift, and go to state 408
    "class"                           shift, and go to state 409
    "true"                            shift, and go to state 410
    "false"                           shift, and go to state 411
    "new"                             shift, and go to state 412
    "typeinfo"                        shift, and go to state 413
    "type"                            shift, and go to state 414
    "array"                           shift, and go to state 415
    "null"                            shift, and go to state 416
    "table"                           shift, and go to state 417
    "deref"                           shift, and go to state 418
    "cast"                            shift, and go to state 419
    "upcast"                          shift, and go to state 420
    "addr"                            shift, and go to state 421
    "reinterpret"                     shift, and go to state 422
    "fixed_array"                     shift, and go to state 423
    "default"                         shift, and go to state 424
    "bool"                            shift, and go to state 222
    "void"                            shift, and go to state 223
    "string"                          shift, and go to state 224
    "int"                             shift, and go to state 226
    "int2"                            shift, and go to state 227
    "int3"                            shift, and go to state 228
    "int4"                            shift, and go to state 229
    "uint"                            shift, and go to state 230
    "bitfield"                        shift, and go to state 425
    "uint2"                           shift, and go to state 232
    "uint3"                           shift, and go to state 233
    "uint4"                           shift, and go to state 234
    "float"                           shift, and go to state 235
    "float2"                          shift, and go to state 236
    "float3"                          shift, and go to state 237
    "float4"                          shift, and go to state 238
    "range"                           shift, and go to state 239
    "urange"                          shift, and go to state 240
    "range64"                         shift, and go to state 241
    "urange64"                        shift, and go to state 242
    "int64"                           shift, and go to state 244
    "uint64"                          shift, and go to state 245
    "double"                          shift, and go to state 246
    "int8"                            shift, and go to state 249
    "uint8"                           shift, and go to state 250
    "int16"                           shift, and go to state 251
    "uint16"                          shift, and go to state 252
    "tuple"                           shift, and go to state 426
    "variant"                         shift, and go to state 427
    "generator"                       shift, and go to state 428
    "++"                              shift, and go to state 429
    "--"                              shift, and go to state 430
    "::"                              shift, and go to state 55
    "$$"                              shift, and go to state 431
    "$i"                              shift, and go to state 432
    "$v"                              shift, and go to state 433
    "$b"                              shift, and go to state 434
    "$a"                              shift, and go to state 435
    "$c"                              shift, and go to state 436
    "..."                             shift, and go to state 437
    "integer constant"                shift, and go to state 438
    "long integer constant"           shift, and go to state 439
    "unsigned integer constant"       shift, and go to state 440
    "unsigned long integer constant"  shift, and go to state 441
    "unsigned int8 constant"          shift, and go to state 442
    "floating point constant"         shift, and go to state 443
    "double constant"                 shift, and go to state 444
    "name"                            shift, and go to state 56
    "start of the string"             shift, and go to state 445
    "begin of code block"             shift, and go to state 446
    '-'                               shift, and go to state 447
    '+'                               shift, and go to state 448
    '*'                               shift, and go to state 449
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 450
    '!'                               shift, and go to state 451
    '['                               shift, and go to state 452
    '('                               shift, and go to state 453
    '$'                               shift, and go to state 454
    '@'                               shift, and go to state 455

    string_builder          go to state 456
    expr_reader             go to state 457
    expr_call_pipe          go to state 458
    name_in_namespace       go to state 459
    expr_new                go to state 460
    expr_cast               go to state 461
    expr_type_decl          go to state 462
    expr_type_info          go to state 463
    block_or_lambda         go to state 464
    expr_full_block         go to state 465
    expr_numeric_const      go to state 466
    expr_named_call         go to state 467
    expr_method_call        go to state 468
    func_addr_expr          go to state 469
    expr_field              go to state 470
    expr_call               go to state 471
    expr                    go to state 1003
    expr_mtag               go to state 473
    basic_type_declaration  go to state 474
    make_decl               go to state 475
    make_struct_decl        go to state 476
    make_tuple_call         go to state 477
    make_dim_decl           go to state 478
    make_table_decl         go to state 479
    array_comprehension     go to state 480


State 813

   25 character_sequence: character_sequence . STRING_CHARACTER
   26                   | character_sequence . STRING_CHARACTER_ESC
   29 string_builder_body: string_builder_body character_sequence .

    STRING_CHARACTER      shift, and go to state 211
    STRING_CHARACTER_ESC  shift, and go to state 212

    STRING_CHARACTER      [reduce using rule 29 (string_builder_body)]
    STRING_CHARACTER_ESC  [reduce using rule 29 (string_builder_body)]
    $default              reduce using rule 29 (string_builder_body)

    shift/reduce conflict on token STRING_CHARACTER:
       29 string_builder_body: string_builder_body character_sequence .
       25 character_sequence: character_sequence . STRING_CHARACTER
      First example: program kwd_let optional_shared optional_public_or_private_variable $@29 optional_field_annotation "$i" '(' "start of the string" string_builder_body character_sequence . STRING_CHARACTER "end of the string" ')' ':' type_declaration_no_options "end of expression" $end
      Shift derivation
        $accept
        `-> 0: program                                                                                                                                                                                                                                                                                                                                    $end
               `-> 5: program global_let
                              `-> 524: kwd_let optional_shared optional_public_or_private_variable $@29 optional_field_annotation let_variable_declaration
                                                                                                                                  `-> 511: let_variable_name_with_pos_list                                                                                                                            ':' type_declaration_no_options "end of expression"
                                                                                                                                           `-> 507: "$i" '(' expr                                                                                                                                 ')'
                                                                                                                                                             `-> 363: string_builder
                                                                                                                                                                      `-> 31: "start of the string" string_builder_body                                                       "end of the string"
                                                                                                                                                                                                    `-> 29: string_builder_body character_sequence
                                                                                                                                                                                                                                `-> 25: character_sequence . STRING_CHARACTER
      Second example: program kwd_let optional_shared optional_public_or_private_variable $@29 optional_field_annotation "$i" '(' "start of the string" string_builder_body character_sequence . STRING_CHARACTER "end of the string" ')' ':' type_declaration_no_options "end of expression" $end
      Reduce derivation
        $accept
        `-> 0: program                                                                                                                                                                                                                                                                                                                                            $end
               `-> 5: program global_let
                              `-> 524: kwd_let optional_shared optional_public_or_private_variable $@29 optional_field_annotation let_variable_declaration
                                                                                                                                  `-> 511: let_variable_name_with_pos_list                                                                                                                                    ':' type_declaration_no_options "end of expression"
                                                                                                                                           `-> 507: "$i" '(' expr                                                                                                                                         ')'
                                                                                                                                                             `-> 363: string_builder
                                                                                                                                                                      `-> 31: "start of the string" string_builder_body                                                               "end of the string"
                                                                                                                                                                                                    `-> 29: string_builder_body                              character_sequence
                                                                                                                                                                                                            `-> 29: string_builder_body character_sequence . `-> 23: STRING_CHARACTER

    shift/reduce conflict on token STRING_CHARACTER_ESC:
       29 string_builder_body: string_builder_body character_sequence .
       26 character_sequence: character_sequence . STRING_CHARACTER_ESC
      First example: program kwd_let optional_shared optional_public_or_private_variable $@29 optional_field_annotation "$i" '(' "start of the string" string_builder_body character_sequence . STRING_CHARACTER_ESC "end of the string" ')' ':' type_declaration_no_options "end of expression" $end
      Shift derivation
        $accept
        `-> 0: program                                                                                                                                                                                                                                                                                                                                        $end
               `-> 5: program global_let
                              `-> 524: kwd_let optional_shared optional_public_or_private_variable $@29 optional_field_annotation let_variable_declaration
                                                                                                                                  `-> 511: let_variable_name_with_pos_list                                                                                                                                ':' type_declaration_no_options "end of expression"
                                                                                                                                           `-> 507: "$i" '(' expr                                                                                                                                     ')'
                                                                                                                                                             `-> 363: string_builder
                                                                                                                                                                      `-> 31: "start of the string" string_builder_body                                                           "end of the string"
                                                                                                                                                                                                    `-> 29: string_builder_body character_sequence
                                                                                                                                                                                                                                `-> 26: character_sequence . STRING_CHARACTER_ESC
      Second example: program kwd_let optional_shared optional_public_or_private_variable $@29 optional_field_annotation "$i" '(' "start of the string" string_builder_body character_sequence . STRING_CHARACTER_ESC "end of the string" ')' ':' type_declaration_no_options "end of expression" $end
      Reduce derivation
        $accept
        `-> 0: program                                                                                                                                                                                                                                                                                                                                                $end
               `-> 5: program global_let
                              `-> 524: kwd_let optional_shared optional_public_or_private_variable $@29 optional_field_annotation let_variable_declaration
                                                                                                                                  `-> 511: let_variable_name_with_pos_list                                                                                                                                        ':' type_declaration_no_options "end of expression"
                                                                                                                                           `-> 507: "$i" '(' expr                                                                                                                                             ')'
                                                                                                                                                             `-> 363: string_builder
                                                                                                                                                                      `-> 31: "start of the string" string_builder_body                                                                   "end of the string"
                                                                                                                                                                                                    `-> 29: string_builder_body                              character_sequence
                                                                                                                                                                                                            `-> 29: string_builder_body character_sequence . `-> 24: STRING_CHARACTER_ESC



State 814

  563 variable_name_with_pos_list: variable_name_with_pos_list . ',' "name"
  564                            | variable_name_with_pos_list . ',' "name" "aka" "name"
  764 array_comprehension: "begin of code block" "for" variable_name_with_pos_list . "in" expr_list "end of expression" make_map_tuple array_comprehension_where "end of code block"

    "in"  shift, and go to state 1004
    ','   shift, and go to state 916


State 815

  728 make_map_tuple: expr "=>" . expr

    "struct"                          shift, and go to state 408
    "class"                           shift, and go to state 409
    "true"                            shift, and go to state 410
    "false"                           shift, and go to state 411
    "new"                             shift, and go to state 412
    "typeinfo"                        shift, and go to state 413
    "type"                            shift, and go to state 414
    "array"                           shift, and go to state 415
    "null"                            shift, and go to state 416
    "table"                           shift, and go to state 417
    "deref"                           shift, and go to state 418
    "cast"                            shift, and go to state 419
    "upcast"                          shift, and go to state 420
    "addr"                            shift, and go to state 421
    "reinterpret"                     shift, and go to state 422
    "fixed_array"                     shift, and go to state 423
    "default"                         shift, and go to state 424
    "bool"                            shift, and go to state 222
    "void"                            shift, and go to state 223
    "string"                          shift, and go to state 224
    "int"                             shift, and go to state 226
    "int2"                            shift, and go to state 227
    "int3"                            shift, and go to state 228
    "int4"                            shift, and go to state 229
    "uint"                            shift, and go to state 230
    "bitfield"                        shift, and go to state 425
    "uint2"                           shift, and go to state 232
    "uint3"                           shift, and go to state 233
    "uint4"                           shift, and go to state 234
    "float"                           shift, and go to state 235
    "float2"                          shift, and go to state 236
    "float3"                          shift, and go to state 237
    "float4"                          shift, and go to state 238
    "range"                           shift, and go to state 239
    "urange"                          shift, and go to state 240
    "range64"                         shift, and go to state 241
    "urange64"                        shift, and go to state 242
    "int64"                           shift, and go to state 244
    "uint64"                          shift, and go to state 245
    "double"                          shift, and go to state 246
    "int8"                            shift, and go to state 249
    "uint8"                           shift, and go to state 250
    "int16"                           shift, and go to state 251
    "uint16"                          shift, and go to state 252
    "tuple"                           shift, and go to state 426
    "variant"                         shift, and go to state 427
    "generator"                       shift, and go to state 428
    "++"                              shift, and go to state 429
    "--"                              shift, and go to state 430
    "::"                              shift, and go to state 55
    "$$"                              shift, and go to state 431
    "$i"                              shift, and go to state 432
    "$v"                              shift, and go to state 433
    "$b"                              shift, and go to state 434
    "$a"                              shift, and go to state 435
    "$c"                              shift, and go to state 436
    "..."                             shift, and go to state 437
    "integer constant"                shift, and go to state 438
    "long integer constant"           shift, and go to state 439
    "unsigned integer constant"       shift, and go to state 440
    "unsigned long integer constant"  shift, and go to state 441
    "unsigned int8 constant"          shift, and go to state 442
    "floating point constant"         shift, and go to state 443
    "double constant"                 shift, and go to state 444
    "name"                            shift, and go to state 56
    "start of the string"             shift, and go to state 445
    "begin of code block"             shift, and go to state 446
    '-'                               shift, and go to state 447
    '+'                               shift, and go to state 448
    '*'                               shift, and go to state 449
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 450
    '!'                               shift, and go to state 451
    '['                               shift, and go to state 452
    '('                               shift, and go to state 453
    '$'                               shift, and go to state 454
    '@'                               shift, and go to state 455

    string_builder          go to state 456
    expr_reader             go to state 457
    expr_call_pipe          go to state 458
    name_in_namespace       go to state 459
    expr_new                go to state 460
    expr_cast               go to state 461
    expr_type_decl          go to state 462
    expr_type_info          go to state 463
    block_or_lambda         go to state 464
    expr_full_block         go to state 465
    expr_numeric_const      go to state 466
    expr_named_call         go to state 467
    expr_method_call        go to state 468
    func_addr_expr          go to state 469
    expr_field              go to state 470
    expr_call               go to state 471
    expr                    go to state 1005
    expr_mtag               go to state 473
    basic_type_declaration  go to state 474
    make_decl               go to state 475
    make_struct_decl        go to state 476
    make_tuple_call         go to state 477
    make_dim_decl           go to state 478
    make_table_decl         go to state 479
    array_comprehension     go to state 480


State 816

  753 expr_map_tuple_list: expr_map_tuple_list ',' . make_map_tuple
  761 optional_comma: ',' .

    "struct"                          shift, and go to state 408
    "class"                           shift, and go to state 409
    "true"                            shift, and go to state 410
    "false"                           shift, and go to state 411
    "new"                             shift, and go to state 412
    "typeinfo"                        shift, and go to state 413
    "type"                            shift, and go to state 414
    "array"                           shift, and go to state 415
    "null"                            shift, and go to state 416
    "table"                           shift, and go to state 417
    "deref"                           shift, and go to state 418
    "cast"                            shift, and go to state 419
    "upcast"                          shift, and go to state 420
    "addr"                            shift, and go to state 421
    "reinterpret"                     shift, and go to state 422
    "fixed_array"                     shift, and go to state 423
    "default"                         shift, and go to state 424
    "bool"                            shift, and go to state 222
    "void"                            shift, and go to state 223
    "string"                          shift, and go to state 224
    "int"                             shift, and go to state 226
    "int2"                            shift, and go to state 227
    "int3"                            shift, and go to state 228
    "int4"                            shift, and go to state 229
    "uint"                            shift, and go to state 230
    "bitfield"                        shift, and go to state 425
    "uint2"                           shift, and go to state 232
    "uint3"                           shift, and go to state 233
    "uint4"                           shift, and go to state 234
    "float"                           shift, and go to state 235
    "float2"                          shift, and go to state 236
    "float3"                          shift, and go to state 237
    "float4"                          shift, and go to state 238
    "range"                           shift, and go to state 239
    "urange"                          shift, and go to state 240
    "range64"                         shift, and go to state 241
    "urange64"                        shift, and go to state 242
    "int64"                           shift, and go to state 244
    "uint64"                          shift, and go to state 245
    "double"                          shift, and go to state 246
    "int8"                            shift, and go to state 249
    "uint8"                           shift, and go to state 250
    "int16"                           shift, and go to state 251
    "uint16"                          shift, and go to state 252
    "tuple"                           shift, and go to state 426
    "variant"                         shift, and go to state 427
    "generator"                       shift, and go to state 428
    "++"                              shift, and go to state 429
    "--"                              shift, and go to state 430
    "::"                              shift, and go to state 55
    "$$"                              shift, and go to state 431
    "$i"                              shift, and go to state 432
    "$v"                              shift, and go to state 433
    "$b"                              shift, and go to state 434
    "$a"                              shift, and go to state 435
    "$c"                              shift, and go to state 436
    "..."                             shift, and go to state 437
    "integer constant"                shift, and go to state 438
    "long integer constant"           shift, and go to state 439
    "unsigned integer constant"       shift, and go to state 440
    "unsigned long integer constant"  shift, and go to state 441
    "unsigned int8 constant"          shift, and go to state 442
    "floating point constant"         shift, and go to state 443
    "double constant"                 shift, and go to state 444
    "name"                            shift, and go to state 56
    "start of the string"             shift, and go to state 445
    "begin of code block"             shift, and go to state 446
    '-'                               shift, and go to state 447
    '+'                               shift, and go to state 448
    '*'                               shift, and go to state 449
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 450
    '!'                               shift, and go to state 451
    '['                               shift, and go to state 452
    '('                               shift, and go to state 453
    '$'                               shift, and go to state 454
    '@'                               shift, and go to state 455

    $default  reduce using rule 761 (optional_comma)

    string_builder          go to state 456
    expr_reader             go to state 457
    expr_call_pipe          go to state 458
    name_in_namespace       go to state 459
    expr_new                go to state 460
    expr_cast               go to state 461
    expr_type_decl          go to state 462
    expr_type_info          go to state 463
    block_or_lambda         go to state 464
    expr_full_block         go to state 465
    expr_numeric_const      go to state 466
    expr_named_call         go to state 467
    expr_method_call        go to state 468
    func_addr_expr          go to state 469
    expr_field              go to state 470
    expr_call               go to state 471
    expr                    go to state 623
    expr_mtag               go to state 473
    basic_type_declaration  go to state 474
    make_decl               go to state 475
    make_struct_decl        go to state 476
    make_map_tuple          go to state 1006
    make_tuple_call         go to state 477
    make_dim_decl           go to state 478
    make_table_decl         go to state 479
    array_comprehension     go to state 480


State 817

  754 make_table_decl: "begin of code block" expr_map_tuple_list optional_comma . "end of code block"

    "end of code block"  shift, and go to state 1007


State 818

  563 variable_name_with_pos_list: variable_name_with_pos_list . ',' "name"
  564                            | variable_name_with_pos_list . ',' "name" "aka" "name"
  762 array_comprehension: '[' "for" variable_name_with_pos_list . "in" expr_list "end of expression" expr array_comprehension_where ']'

    "in"  shift, and go to state 1008
    ','   shift, and go to state 916


State 819

  763 array_comprehension: '[' "iterator" "for" . variable_name_with_pos_list "in" expr_list "end of expression" expr array_comprehension_where ']'

    "$i"    shift, and go to state 712
    "name"  shift, and go to state 713

    variable_name_with_pos_list  go to state 1009


State 820

  290 expr_list: expr_list ',' . expr
  761 optional_comma: ',' .

    "struct"                          shift, and go to state 408
    "class"                           shift, and go to state 409
    "true"                            shift, and go to state 410
    "false"                           shift, and go to state 411
    "new"                             shift, and go to state 412
    "typeinfo"                        shift, and go to state 413
    "type"                            shift, and go to state 414
    "array"                           shift, and go to state 415
    "null"                            shift, and go to state 416
    "table"                           shift, and go to state 417
    "deref"                           shift, and go to state 418
    "cast"                            shift, and go to state 419
    "upcast"                          shift, and go to state 420
    "addr"                            shift, and go to state 421
    "reinterpret"                     shift, and go to state 422
    "fixed_array"                     shift, and go to state 423
    "default"                         shift, and go to state 424
    "bool"                            shift, and go to state 222
    "void"                            shift, and go to state 223
    "string"                          shift, and go to state 224
    "int"                             shift, and go to state 226
    "int2"                            shift, and go to state 227
    "int3"                            shift, and go to state 228
    "int4"                            shift, and go to state 229
    "uint"                            shift, and go to state 230
    "bitfield"                        shift, and go to state 425
    "uint2"                           shift, and go to state 232
    "uint3"                           shift, and go to state 233
    "uint4"                           shift, and go to state 234
    "float"                           shift, and go to state 235
    "float2"                          shift, and go to state 236
    "float3"                          shift, and go to state 237
    "float4"                          shift, and go to state 238
    "range"                           shift, and go to state 239
    "urange"                          shift, and go to state 240
    "range64"                         shift, and go to state 241
    "urange64"                        shift, and go to state 242
    "int64"                           shift, and go to state 244
    "uint64"                          shift, and go to state 245
    "double"                          shift, and go to state 246
    "int8"                            shift, and go to state 249
    "uint8"                           shift, and go to state 250
    "int16"                           shift, and go to state 251
    "uint16"                          shift, and go to state 252
    "tuple"                           shift, and go to state 426
    "variant"                         shift, and go to state 427
    "generator"                       shift, and go to state 428
    "++"                              shift, and go to state 429
    "--"                              shift, and go to state 430
    "::"                              shift, and go to state 55
    "$$"                              shift, and go to state 431
    "$i"                              shift, and go to state 432
    "$v"                              shift, and go to state 433
    "$b"                              shift, and go to state 434
    "$a"                              shift, and go to state 435
    "$c"                              shift, and go to state 436
    "..."                             shift, and go to state 437
    "integer constant"                shift, and go to state 438
    "long integer constant"           shift, and go to state 439
    "unsigned integer constant"       shift, and go to state 440
    "unsigned long integer constant"  shift, and go to state 441
    "unsigned int8 constant"          shift, and go to state 442
    "floating point constant"         shift, and go to state 443
    "double constant"                 shift, and go to state 444
    "name"                            shift, and go to state 56
    "start of the string"             shift, and go to state 445
    "begin of code block"             shift, and go to state 446
    '-'                               shift, and go to state 447
    '+'                               shift, and go to state 448
    '*'                               shift, and go to state 449
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 450
    '!'                               shift, and go to state 451
    '['                               shift, and go to state 452
    '('                               shift, and go to state 453
    '$'                               shift, and go to state 454
    '@'                               shift, and go to state 455

    $default  reduce using rule 761 (optional_comma)

    string_builder          go to state 456
    expr_reader             go to state 457
    expr_call_pipe          go to state 458
    name_in_namespace       go to state 459
    expr_new                go to state 460
    expr_cast               go to state 461
    expr_type_decl          go to state 462
    expr_type_info          go to state 463
    block_or_lambda         go to state 464
    expr_full_block         go to state 465
    expr_numeric_const      go to state 466
    expr_named_call         go to state 467
    expr_method_call        go to state 468
    func_addr_expr          go to state 469
    expr_field              go to state 470
    expr_call               go to state 471
    expr                    go to state 1010
    expr_mtag               go to state 473
    basic_type_declaration  go to state 474
    make_decl               go to state 475
    make_struct_decl        go to state 476
    make_tuple_call         go to state 477
    make_dim_decl           go to state 478
    make_table_decl         go to state 479
    array_comprehension     go to state 480


State 821

  734 make_dim_decl: '[' expr_list optional_comma . ']'

    ']'  shift, and go to state 1011


State 822

  399 expr: '(' expr_list optional_comma . ')'

    ')'  shift, and go to state 1012


State 823

  339 func_addr_name: "$i" . '(' expr ')'

    '('  shift, and go to state 1013


State 824

  456 expr_mtag: '@' '@' "$c" . '(' expr ')'

    '('  shift, and go to state 1014


State 825

  343 func_addr_expr: '@' '@' '<' . $@13 type_declaration_no_options '>' $@14 func_addr_name
  346               | '@' '@' '<' . $@15 optional_function_argument_list optional_function_type '>' $@16 func_addr_name

    ':'       reduce using rule 344 ($@15)
    '>'       reduce using rule 344 ($@15)
    '('       reduce using rule 344 ($@15)
    $default  reduce using rule 341 ($@13)

    $@13  go to state 1015
    $@15  go to state 1016


State 826

  338 func_addr_name: name_in_namespace .

    $default  reduce using rule 338 (func_addr_name)


State 827

  340 func_addr_expr: '@' '@' func_addr_name .

    $default  reduce using rule 340 (func_addr_expr)


State 828

  707 make_struct_fields: "$f" . '(' expr ')' copy_or_move expr
  708                   | "$f" . '(' expr ')' ":=" expr

    '('  shift, and go to state 1017


State 829

  239 name_in_namespace: "name" .
  240                  | "name" . "::" "name"
  703 make_struct_fields: "name" . copy_or_move expr
  704                   | "name" . ":=" expr

    "<-"  shift, and go to state 915
    ":="  shift, and go to state 1018
    "::"  shift, and go to state 93
    '='   shift, and go to state 917

    $default  reduce using rule 239 (name_in_namespace)

    copy_or_move  go to state 1019


State 830

  334 expr_named_call: name_in_namespace '(' '[' . make_struct_fields ']' ')'
  734 make_dim_decl: '[' . expr_list optional_comma ']'
  762 array_comprehension: '[' . "for" variable_name_with_pos_list "in" expr_list "end of expression" expr array_comprehension_where ']'
  763                    | '[' . "iterator" "for" variable_name_with_pos_list "in" expr_list "end of expression" expr array_comprehension_where ']'

    "struct"                          shift, and go to state 408
    "class"                           shift, and go to state 409
    "for"                             shift, and go to state 631
    "true"                            shift, and go to state 410
    "false"                           shift, and go to state 411
    "new"                             shift, and go to state 412
    "typeinfo"                        shift, and go to state 413
    "type"                            shift, and go to state 414
    "array"                           shift, and go to state 415
    "null"                            shift, and go to state 416
    "table"                           shift, and go to state 417
    "deref"                           shift, and go to state 418
    "cast"                            shift, and go to state 419
    "upcast"                          shift, and go to state 420
    "iterator"                        shift, and go to state 632
    "addr"                            shift, and go to state 421
    "reinterpret"                     shift, and go to state 422
    "fixed_array"                     shift, and go to state 423
    "default"                         shift, and go to state 424
    "bool"                            shift, and go to state 222
    "void"                            shift, and go to state 223
    "string"                          shift, and go to state 224
    "int"                             shift, and go to state 226
    "int2"                            shift, and go to state 227
    "int3"                            shift, and go to state 228
    "int4"                            shift, and go to state 229
    "uint"                            shift, and go to state 230
    "bitfield"                        shift, and go to state 425
    "uint2"                           shift, and go to state 232
    "uint3"                           shift, and go to state 233
    "uint4"                           shift, and go to state 234
    "float"                           shift, and go to state 235
    "float2"                          shift, and go to state 236
    "float3"                          shift, and go to state 237
    "float4"                          shift, and go to state 238
    "range"                           shift, and go to state 239
    "urange"                          shift, and go to state 240
    "range64"                         shift, and go to state 241
    "urange64"                        shift, and go to state 242
    "int64"                           shift, and go to state 244
    "uint64"                          shift, and go to state 245
    "double"                          shift, and go to state 246
    "int8"                            shift, and go to state 249
    "uint8"                           shift, and go to state 250
    "int16"                           shift, and go to state 251
    "uint16"                          shift, and go to state 252
    "tuple"                           shift, and go to state 426
    "variant"                         shift, and go to state 427
    "generator"                       shift, and go to state 428
    "++"                              shift, and go to state 429
    "--"                              shift, and go to state 430
    "::"                              shift, and go to state 55
    "$$"                              shift, and go to state 431
    "$i"                              shift, and go to state 432
    "$v"                              shift, and go to state 433
    "$b"                              shift, and go to state 434
    "$a"                              shift, and go to state 435
    "$c"                              shift, and go to state 436
    "$f"                              shift, and go to state 828
    "..."                             shift, and go to state 437
    "integer constant"                shift, and go to state 438
    "long integer constant"           shift, and go to state 439
    "unsigned integer constant"       shift, and go to state 440
    "unsigned long integer constant"  shift, and go to state 441
    "unsigned int8 constant"          shift, and go to state 442
    "floating point constant"         shift, and go to state 443
    "double constant"                 shift, and go to state 444
    "name"                            shift, and go to state 829
    "start of the string"             shift, and go to state 445
    "begin of code block"             shift, and go to state 446
    '-'                               shift, and go to state 447
    '+'                               shift, and go to state 448
    '*'                               shift, and go to state 449
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 450
    '!'                               shift, and go to state 451
    '['                               shift, and go to state 452
    '('                               shift, and go to state 453
    '$'                               shift, and go to state 454
    '@'                               shift, and go to state 455

    string_builder          go to state 456
    expr_reader             go to state 457
    expr_call_pipe          go to state 458
    name_in_namespace       go to state 459
    expr_new                go to state 460
    expr_cast               go to state 461
    expr_type_decl          go to state 462
    expr_type_info          go to state 463
    expr_list               go to state 633
    block_or_lambda         go to state 464
    expr_full_block         go to state 465
    expr_numeric_const      go to state 466
    expr_named_call         go to state 467
    expr_method_call        go to state 468
    func_addr_expr          go to state 469
    expr_field              go to state 470
    expr_call               go to state 471
    expr                    go to state 634
    expr_mtag               go to state 473
    basic_type_declaration  go to state 474
    make_decl               go to state 475
    make_struct_fields      go to state 1020
    make_struct_decl        go to state 476
    make_tuple_call         go to state 477
    make_dim_decl           go to state 478
    make_table_decl         go to state 479
    array_comprehension     go to state 480


State 831

  354 expr_call: name_in_namespace '(' ')' .

    $default  reduce using rule 354 (expr_call)


State 832

  290 expr_list: expr_list . ',' expr
  335 expr_named_call: name_in_namespace '(' expr_list . ',' '[' make_struct_fields ']' ')'
  356 expr_call: name_in_namespace '(' expr_list . ')'

    ','  shift, and go to state 1021
    ')'  shift, and go to state 1022


State 833

  705 make_struct_fields: make_struct_fields . ',' "name" copy_or_move expr
  706                   | make_struct_fields . ',' "name" ":=" expr
  709                   | make_struct_fields . ',' "$f" '(' expr ')' copy_or_move expr
  710                   | make_struct_fields . ',' "$f" '(' expr ')' ":=" expr
  711 make_struct_single: make_struct_fields .

    ','  shift, and go to state 1023

    $default  reduce using rule 711 (make_struct_single)


State 834

  355 expr_call: name_in_namespace '(' make_struct_single . ')'

    ')'  shift, and go to state 1024


State 835

  304 optional_capture_list: '[' . '[' capture_list ']' ']'

    '['  shift, and go to state 1025


State 836

  305 expr_full_block: block_or_lambda optional_annotation_list optional_capture_list . optional_function_argument_list optional_function_type block_or_simple_block

    '('  shift, and go to state 321

    $default  reduce using rule 114 (optional_function_argument_list)

    optional_function_argument_list  go to state 1026


State 837

  233 expressions: expressions . expression_any
  234            | expressions . error
  307 expr_full_block_assumed_piped: "begin of code block" expressions . "end of code block"

    error                             shift, and go to state 527
    "struct"                          shift, and go to state 408
    "class"                           shift, and go to state 409
    "let"                             shift, and go to state 3
    "while"                           shift, and go to state 528
    "if"                              shift, and go to state 529
    "static_if"                       shift, and go to state 530
    "for"                             shift, and go to state 531
    "true"                            shift, and go to state 410
    "false"                           shift, and go to state 411
    "new"                             shift, and go to state 412
    "typeinfo"                        shift, and go to state 413
    "type"                            shift, and go to state 414
    "array"                           shift, and go to state 415
    "return"                          shift, and go to state 532
    "null"                            shift, and go to state 416
    "break"                           shift, and go to state 533
    "try"                             shift, and go to state 534
    "table"                           shift, and go to state 417
    "delete"                          shift, and go to state 535
    "deref"                           shift, and go to state 418
    "with"                            shift, and go to state 536
    "assume"                          shift, and go to state 537
    "cast"                            shift, and go to state 419
    "upcast"                          shift, and go to state 420
    "var"                             shift, and go to state 8
    "addr"                            shift, and go to state 421
    "continue"                        shift, and go to state 538
    "pass"                            shift, and go to state 539
    "reinterpret"                     shift, and go to state 422
    "label"                           shift, and go to state 540
    "goto"                            shift, and go to state 541
    "unsafe"                          shift, and go to state 542
    "fixed_array"                     shift, and go to state 423
    "default"                         shift, and go to state 424
    "bool"                            shift, and go to state 222
    "void"                            shift, and go to state 223
    "string"                          shift, and go to state 224
    "int"                             shift, and go to state 226
    "int2"                            shift, and go to state 227
    "int3"                            shift, and go to state 228
    "int4"                            shift, and go to state 229
    "uint"                            shift, and go to state 230
    "bitfield"                        shift, and go to state 425
    "uint2"                           shift, and go to state 232
    "uint3"                           shift, and go to state 233
    "uint4"                           shift, and go to state 234
    "float"                           shift, and go to state 235
    "float2"                          shift, and go to state 236
    "float3"                          shift, and go to state 237
    "float4"                          shift, and go to state 238
    "range"                           shift, and go to state 239
    "urange"                          shift, and go to state 240
    "range64"                         shift, and go to state 241
    "urange64"                        shift, and go to state 242
    "int64"                           shift, and go to state 244
    "uint64"                          shift, and go to state 245
    "double"                          shift, and go to state 246
    "int8"                            shift, and go to state 249
    "uint8"                           shift, and go to state 250
    "int16"                           shift, and go to state 251
    "uint16"                          shift, and go to state 252
    "tuple"                           shift, and go to state 426
    "variant"                         shift, and go to state 427
    "generator"                       shift, and go to state 428
    "yield"                           shift, and go to state 543
    "++"                              shift, and go to state 429
    "--"                              shift, and go to state 430
    "::"                              shift, and go to state 55
    "$$"                              shift, and go to state 431
    "$i"                              shift, and go to state 432
    "$v"                              shift, and go to state 433
    "$b"                              shift, and go to state 434
    "$a"                              shift, and go to state 435
    "$c"                              shift, and go to state 436
    "..."                             shift, and go to state 437
    "integer constant"                shift, and go to state 438
    "long integer constant"           shift, and go to state 439
    "unsigned integer constant"       shift, and go to state 440
    "unsigned long integer constant"  shift, and go to state 441
    "unsigned int8 constant"          shift, and go to state 442
    "floating point constant"         shift, and go to state 443
    "double constant"                 shift, and go to state 444
    "name"                            shift, and go to state 56
    "start of the string"             shift, and go to state 445
    "begin of code block"             shift, and go to state 446
    "end of code block"               shift, and go to state 1027
    "end of expression"               shift, and go to state 545
    '-'                               shift, and go to state 447
    '+'                               shift, and go to state 448
    '*'                               shift, and go to state 449
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 450
    '!'                               shift, and go to state 451
    '['                               shift, and go to state 452
    '('                               shift, and go to state 453
    '$'                               shift, and go to state 454
    '@'                               shift, and go to state 455

    string_builder            go to state 456
    expr_reader               go to state 457
    expression_label          go to state 546
    expression_goto           go to state 547
    if_or_static_if           go to state 548
    expression_if_one_liner   go to state 549
    expression_if_then_else   go to state 550
    expression_for_loop       go to state 551
    expression_unsafe         go to state 552
    expression_while_loop     go to state 553
    expression_with           go to state 554
    expression_with_alias     go to state 555
    expr_call_pipe            go to state 458
    expression_any            go to state 556
    name_in_namespace         go to state 459
    expression_delete         go to state 557
    expr_new                  go to state 460
    expression_break          go to state 558
    expression_continue       go to state 559
    expression_return         go to state 560
    expression_yield_no_pipe  go to state 561
    expression_yield          go to state 562
    expression_try_catch      go to state 563
    kwd_let                   go to state 564
    expression_let            go to state 565
    expr_cast                 go to state 461
    expr_type_decl            go to state 462
    expr_type_info            go to state 463
    block_or_lambda           go to state 464
    expr_full_block           go to state 465
    expr_numeric_const        go to state 466
    expr_assign               go to state 566
    expr_named_call           go to state 467
    expr_method_call          go to state 468
    func_addr_expr            go to state 469
    expr_field                go to state 470
    expr_call                 go to state 471
    expr                      go to state 567
    expr_mtag                 go to state 473
    basic_type_declaration    go to state 474
    make_decl                 go to state 475
    make_struct_decl          go to state 476
    make_tuple_call           go to state 477
    make_dim_decl             go to state 478
    make_table_decl           go to state 479
    array_comprehension       go to state 480


State 838

  296 block_or_lambda: '@' '@' .

    $default  reduce using rule 296 (block_or_lambda)


State 839

  306 expr_full_block_assumed_piped: block_or_lambda optional_annotation_list . optional_capture_list optional_function_argument_list optional_function_type expression_block

    '['  shift, and go to state 835

    $default  reduce using rule 303 (optional_capture_list)

    optional_capture_list  go to state 1028


State 840

  417 expr: expr "is" "type" . '<' $@19 type_declaration_no_options '>' $@20

    '<'  shift, and go to state 1029


State 841

  455 expr_mtag: expr "is" "$f" . '(' expr ')'

    '('  shift, and go to state 1030


State 842

  419 expr: expr "is" "name" .

    $default  reduce using rule 419 (expr)


State 843

  418 expr: expr "is" basic_type_declaration .

    $default  reduce using rule 418 (expr)


State 844

  423 expr: expr "as" "type" . '<' $@21 type_declaration '>' $@22

    '<'  shift, and go to state 1031


State 845

  453 expr_mtag: expr "as" "$f" . '(' expr ')'

    '('  shift, and go to state 1032


State 846

  420 expr: expr "as" "name" .

    $default  reduce using rule 420 (expr)


State 847

  424 expr: expr "as" basic_type_declaration .

    $default  reduce using rule 424 (expr)


State 848

  336 expr_method_call: expr . "->" "name" '(' ')'
  337                 | expr . "->" "name" '(' expr_list ')'
  347 expr_field: expr . '.' "name"
  348           | expr . '.' '.' "name"
  349           | expr . '.' "name" '(' ')'
  350           | expr . '.' "name" '(' expr_list ')'
  353           | expr . '.' $@17 error $@18
  373 expr: expr . "<<" expr
  373     | expr "<<" expr .
  374     | expr . ">>" expr
  375     | expr . "<<<" expr
  376     | expr . ">>>" expr
  377     | expr . '+' expr
  378     | expr . '-' expr
  379     | expr . '*' expr
  380     | expr . '/' expr
  381     | expr . '%' expr
  382     | expr . '<' expr
  383     | expr . '>' expr
  384     | expr . "==" expr
  385     | expr . "!=" expr
  386     | expr . "<=" expr
  387     | expr . ">=" expr
  388     | expr . '&' expr
  389     | expr . '|' expr
  390     | expr . '^' expr
  391     | expr . "&&" expr
  392     | expr . "||" expr
  393     | expr . "^^" expr
  394     | expr . ".." expr
  397     | expr . "++"
  398     | expr . "--"
  400     | expr . '[' expr ']'
  401     | expr . '.' '[' expr ']'
  402     | expr . "?[" expr ']'
  403     | expr . '.' "?[" expr ']'
  404     | expr . "?." "name"
  405     | expr . '.' "?." "name"
  413     | expr . "??" expr
  414     | expr . '?' expr ':' expr
  417     | expr . "is" "type" '<' $@19 type_declaration_no_options '>' $@20
  418     | expr . "is" basic_type_declaration
  419     | expr . "is" "name"
  420     | expr . "as" "name"
  423     | expr . "as" "type" '<' $@21 type_declaration '>' $@22
  424     | expr . "as" basic_type_declaration
  425     | expr . '?' "as" "name"
  428     | expr . '?' "as" "type" '<' $@23 type_declaration '>' $@24
  429     | expr . '?' "as" basic_type_declaration
  437     | expr . "<|" expr
  438     | expr . "|>" expr
  439     | expr . "|>" basic_type_declaration
  449 expr_mtag: expr . '.' "$f" '(' expr ')'
  450          | expr . "?." "$f" '(' expr ')'
  451          | expr . '.' '.' "$f" '(' expr ')'
  452          | expr . '.' "?." "$f" '(' expr ')'
  453          | expr . "as" "$f" '(' expr ')'
  454          | expr . '?' "as" "$f" '(' expr ')'
  455          | expr . "is" "$f" '(' expr ')'

    "is"  shift, and go to state 643
    "as"  shift, and go to state 644
    "++"  shift, and go to state 647
    "--"  shift, and go to state 648
    "->"  shift, and go to state 653
    "??"  shift, and go to state 654
    "?."  shift, and go to state 655
    "?["  shift, and go to state 656
    "<|"  shift, and go to state 657
    "|>"  shift, and go to state 658
    '-'   shift, and go to state 671
    '+'   shift, and go to state 672
    '*'   shift, and go to state 673
    '/'   shift, and go to state 674
    '%'   shift, and go to state 675
    '.'   shift, and go to state 676
    '['   shift, and go to state 677

    $default  reduce using rule 373 (expr)


State 849

  336 expr_method_call: expr . "->" "name" '(' ')'
  337                 | expr . "->" "name" '(' expr_list ')'
  347 expr_field: expr . '.' "name"
  348           | expr . '.' '.' "name"
  349           | expr . '.' "name" '(' ')'
  350           | expr . '.' "name" '(' expr_list ')'
  353           | expr . '.' $@17 error $@18
  373 expr: expr . "<<" expr
  374     | expr . ">>" expr
  374     | expr ">>" expr .
  375     | expr . "<<<" expr
  376     | expr . ">>>" expr
  377     | expr . '+' expr
  378     | expr . '-' expr
  379     | expr . '*' expr
  380     | expr . '/' expr
  381     | expr . '%' expr
  382     | expr . '<' expr
  383     | expr . '>' expr
  384     | expr . "==" expr
  385     | expr . "!=" expr
  386     | expr . "<=" expr
  387     | expr . ">=" expr
  388     | expr . '&' expr
  389     | expr . '|' expr
  390     | expr . '^' expr
  391     | expr . "&&" expr
  392     | expr . "||" expr
  393     | expr . "^^" expr
  394     | expr . ".." expr
  397     | expr . "++"
  398     | expr . "--"
  400     | expr . '[' expr ']'
  401     | expr . '.' '[' expr ']'
  402     | expr . "?[" expr ']'
  403     | expr . '.' "?[" expr ']'
  404     | expr . "?." "name"
  405     | expr . '.' "?." "name"
  413     | expr . "??" expr
  414     | expr . '?' expr ':' expr
  417     | expr . "is" "type" '<' $@19 type_declaration_no_options '>' $@20
  418     | expr . "is" basic_type_declaration
  419     | expr . "is" "name"
  420     | expr . "as" "name"
  423     | expr . "as" "type" '<' $@21 type_declaration '>' $@22
  424     | expr . "as" basic_type_declaration
  425     | expr . '?' "as" "name"
  428     | expr . '?' "as" "type" '<' $@23 type_declaration '>' $@24
  429     | expr . '?' "as" basic_type_declaration
  437     | expr . "<|" expr
  438     | expr . "|>" expr
  439     | expr . "|>" basic_type_declaration
  449 expr_mtag: expr . '.' "$f" '(' expr ')'
  450          | expr . "?." "$f" '(' expr ')'
  451          | expr . '.' '.' "$f" '(' expr ')'
  452          | expr . '.' "?." "$f" '(' expr ')'
  453          | expr . "as" "$f" '(' expr ')'
  454          | expr . '?' "as" "$f" '(' expr ')'
  455          | expr . "is" "$f" '(' expr ')'

    "is"  shift, and go to state 643
    "as"  shift, and go to state 644
    "++"  shift, and go to state 647
    "--"  shift, and go to state 648
    "->"  shift, and go to state 653
    "??"  shift, and go to state 654
    "?."  shift, and go to state 655
    "?["  shift, and go to state 656
    "<|"  shift, and go to state 657
    "|>"  shift, and go to state 658
    '-'   shift, and go to state 671
    '+'   shift, and go to state 672
    '*'   shift, and go to state 673
    '/'   shift, and go to state 674
    '%'   shift, and go to state 675
    '.'   shift, and go to state 676
    '['   shift, and go to state 677

    $default  reduce using rule 374 (expr)


State 850

  336 expr_method_call: expr . "->" "name" '(' ')'
  337                 | expr . "->" "name" '(' expr_list ')'
  347 expr_field: expr . '.' "name"
  348           | expr . '.' '.' "name"
  349           | expr . '.' "name" '(' ')'
  350           | expr . '.' "name" '(' expr_list ')'
  353           | expr . '.' $@17 error $@18
  373 expr: expr . "<<" expr
  374     | expr . ">>" expr
  375     | expr . "<<<" expr
  376     | expr . ">>>" expr
  377     | expr . '+' expr
  378     | expr . '-' expr
  379     | expr . '*' expr
  380     | expr . '/' expr
  381     | expr . '%' expr
  382     | expr . '<' expr
  383     | expr . '>' expr
  384     | expr . "==" expr
  385     | expr . "!=" expr
  386     | expr . "<=" expr
  386     | expr "<=" expr .
  387     | expr . ">=" expr
  388     | expr . '&' expr
  389     | expr . '|' expr
  390     | expr . '^' expr
  391     | expr . "&&" expr
  392     | expr . "||" expr
  393     | expr . "^^" expr
  394     | expr . ".." expr
  397     | expr . "++"
  398     | expr . "--"
  400     | expr . '[' expr ']'
  401     | expr . '.' '[' expr ']'
  402     | expr . "?[" expr ']'
  403     | expr . '.' "?[" expr ']'
  404     | expr . "?." "name"
  405     | expr . '.' "?." "name"
  413     | expr . "??" expr
  414     | expr . '?' expr ':' expr
  417     | expr . "is" "type" '<' $@19 type_declaration_no_options '>' $@20
  418     | expr . "is" basic_type_declaration
  419     | expr . "is" "name"
  420     | expr . "as" "name"
  423     | expr . "as" "type" '<' $@21 type_declaration '>' $@22
  424     | expr . "as" basic_type_declaration
  425     | expr . '?' "as" "name"
  428     | expr . '?' "as" "type" '<' $@23 type_declaration '>' $@24
  429     | expr . '?' "as" basic_type_declaration
  437     | expr . "<|" expr
  438     | expr . "|>" expr
  439     | expr . "|>" basic_type_declaration
  449 expr_mtag: expr . '.' "$f" '(' expr ')'
  450          | expr . "?." "$f" '(' expr ')'
  451          | expr . '.' '.' "$f" '(' expr ')'
  452          | expr . '.' "?." "$f" '(' expr ')'
  453          | expr . "as" "$f" '(' expr ')'
  454          | expr . '?' "as" "$f" '(' expr ')'
  455          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 643
    "as"   shift, and go to state 644
    "<<"   shift, and go to state 645
    ">>"   shift, and go to state 646
    "++"   shift, and go to state 647
    "--"   shift, and go to state 648
    "->"   shift, and go to state 653
    "??"   shift, and go to state 654
    "?."   shift, and go to state 655
    "?["   shift, and go to state 656
    "<|"   shift, and go to state 657
    "|>"   shift, and go to state 658
    "<<<"  shift, and go to state 659
    ">>>"  shift, and go to state 660
    '-'    shift, and go to state 671
    '+'    shift, and go to state 672
    '*'    shift, and go to state 673
    '/'    shift, and go to state 674
    '%'    shift, and go to state 675
    '.'    shift, and go to state 676
    '['    shift, and go to state 677

    $default  reduce using rule 386 (expr)


State 851

  336 expr_method_call: expr . "->" "name" '(' ')'
  337                 | expr . "->" "name" '(' expr_list ')'
  347 expr_field: expr . '.' "name"
  348           | expr . '.' '.' "name"
  349           | expr . '.' "name" '(' ')'
  350           | expr . '.' "name" '(' expr_list ')'
  353           | expr . '.' $@17 error $@18
  373 expr: expr . "<<" expr
  374     | expr . ">>" expr
  375     | expr . "<<<" expr
  376     | expr . ">>>" expr
  377     | expr . '+' expr
  378     | expr . '-' expr
  379     | expr . '*' expr
  380     | expr . '/' expr
  381     | expr . '%' expr
  382     | expr . '<' expr
  383     | expr . '>' expr
  384     | expr . "==" expr
  385     | expr . "!=" expr
  386     | expr . "<=" expr
  387     | expr . ">=" expr
  387     | expr ">=" expr .
  388     | expr . '&' expr
  389     | expr . '|' expr
  390     | expr . '^' expr
  391     | expr . "&&" expr
  392     | expr . "||" expr
  393     | expr . "^^" expr
  394     | expr . ".." expr
  397     | expr . "++"
  398     | expr . "--"
  400     | expr . '[' expr ']'
  401     | expr . '.' '[' expr ']'
  402     | expr . "?[" expr ']'
  403     | expr . '.' "?[" expr ']'
  404     | expr . "?." "name"
  405     | expr . '.' "?." "name"
  413     | expr . "??" expr
  414     | expr . '?' expr ':' expr
  417     | expr . "is" "type" '<' $@19 type_declaration_no_options '>' $@20
  418     | expr . "is" basic_type_declaration
  419     | expr . "is" "name"
  420     | expr . "as" "name"
  423     | expr . "as" "type" '<' $@21 type_declaration '>' $@22
  424     | expr . "as" basic_type_declaration
  425     | expr . '?' "as" "name"
  428     | expr . '?' "as" "type" '<' $@23 type_declaration '>' $@24
  429     | expr . '?' "as" basic_type_declaration
  437     | expr . "<|" expr
  438     | expr . "|>" expr
  439     | expr . "|>" basic_type_declaration
  449 expr_mtag: expr . '.' "$f" '(' expr ')'
  450          | expr . "?." "$f" '(' expr ')'
  451          | expr . '.' '.' "$f" '(' expr ')'
  452          | expr . '.' "?." "$f" '(' expr ')'
  453          | expr . "as" "$f" '(' expr ')'
  454          | expr . '?' "as" "$f" '(' expr ')'
  455          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 643
    "as"   shift, and go to state 644
    "<<"   shift, and go to state 645
    ">>"   shift, and go to state 646
    "++"   shift, and go to state 647
    "--"   shift, and go to state 648
    "->"   shift, and go to state 653
    "??"   shift, and go to state 654
    "?."   shift, and go to state 655
    "?["   shift, and go to state 656
    "<|"   shift, and go to state 657
    "|>"   shift, and go to state 658
    "<<<"  shift, and go to state 659
    ">>>"  shift, and go to state 660
    '-'    shift, and go to state 671
    '+'    shift, and go to state 672
    '*'    shift, and go to state 673
    '/'    shift, and go to state 674
    '%'    shift, and go to state 675
    '.'    shift, and go to state 676
    '['    shift, and go to state 677

    $default  reduce using rule 387 (expr)


State 852

  336 expr_method_call: expr . "->" "name" '(' ')'
  337                 | expr . "->" "name" '(' expr_list ')'
  347 expr_field: expr . '.' "name"
  348           | expr . '.' '.' "name"
  349           | expr . '.' "name" '(' ')'
  350           | expr . '.' "name" '(' expr_list ')'
  353           | expr . '.' $@17 error $@18
  373 expr: expr . "<<" expr
  374     | expr . ">>" expr
  375     | expr . "<<<" expr
  376     | expr . ">>>" expr
  377     | expr . '+' expr
  378     | expr . '-' expr
  379     | expr . '*' expr
  380     | expr . '/' expr
  381     | expr . '%' expr
  382     | expr . '<' expr
  383     | expr . '>' expr
  384     | expr . "==" expr
  384     | expr "==" expr .
  385     | expr . "!=" expr
  386     | expr . "<=" expr
  387     | expr . ">=" expr
  388     | expr . '&' expr
  389     | expr . '|' expr
  390     | expr . '^' expr
  391     | expr . "&&" expr
  392     | expr . "||" expr
  393     | expr . "^^" expr
  394     | expr . ".." expr
  397     | expr . "++"
  398     | expr . "--"
  400     | expr . '[' expr ']'
  401     | expr . '.' '[' expr ']'
  402     | expr . "?[" expr ']'
  403     | expr . '.' "?[" expr ']'
  404     | expr . "?." "name"
  405     | expr . '.' "?." "name"
  413     | expr . "??" expr
  414     | expr . '?' expr ':' expr
  417     | expr . "is" "type" '<' $@19 type_declaration_no_options '>' $@20
  418     | expr . "is" basic_type_declaration
  419     | expr . "is" "name"
  420     | expr . "as" "name"
  423     | expr . "as" "type" '<' $@21 type_declaration '>' $@22
  424     | expr . "as" basic_type_declaration
  425     | expr . '?' "as" "name"
  428     | expr . '?' "as" "type" '<' $@23 type_declaration '>' $@24
  429     | expr . '?' "as" basic_type_declaration
  437     | expr . "<|" expr
  438     | expr . "|>" expr
  439     | expr . "|>" basic_type_declaration
  449 expr_mtag: expr . '.' "$f" '(' expr ')'
  450          | expr . "?." "$f" '(' expr ')'
  451          | expr . '.' '.' "$f" '(' expr ')'
  452          | expr . '.' "?." "$f" '(' expr ')'
  453          | expr . "as" "$f" '(' expr ')'
  454          | expr . '?' "as" "$f" '(' expr ')'
  455          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 643
    "as"   shift, and go to state 644
    "<<"   shift, and go to state 645
    ">>"   shift, and go to state 646
    "++"   shift, and go to state 647
    "--"   shift, and go to state 648
    "<="   shift, and go to state 649
    ">="   shift, and go to state 650
    "->"   shift, and go to state 653
    "??"   shift, and go to state 654
    "?."   shift, and go to state 655
    "?["   shift, and go to state 656
    "<|"   shift, and go to state 657
    "|>"   shift, and go to state 658
    "<<<"  shift, and go to state 659
    ">>>"  shift, and go to state 660
    '<'    shift, and go to state 669
    '>'    shift, and go to state 670
    '-'    shift, and go to state 671
    '+'    shift, and go to state 672
    '*'    shift, and go to state 673
    '/'    shift, and go to state 674
    '%'    shift, and go to state 675
    '.'    shift, and go to state 676
    '['    shift, and go to state 677

    $default  reduce using rule 384 (expr)


State 853

  336 expr_method_call: expr . "->" "name" '(' ')'
  337                 | expr . "->" "name" '(' expr_list ')'
  347 expr_field: expr . '.' "name"
  348           | expr . '.' '.' "name"
  349           | expr . '.' "name" '(' ')'
  350           | expr . '.' "name" '(' expr_list ')'
  353           | expr . '.' $@17 error $@18
  373 expr: expr . "<<" expr
  374     | expr . ">>" expr
  375     | expr . "<<<" expr
  376     | expr . ">>>" expr
  377     | expr . '+' expr
  378     | expr . '-' expr
  379     | expr . '*' expr
  380     | expr . '/' expr
  381     | expr . '%' expr
  382     | expr . '<' expr
  383     | expr . '>' expr
  384     | expr . "==" expr
  385     | expr . "!=" expr
  385     | expr "!=" expr .
  386     | expr . "<=" expr
  387     | expr . ">=" expr
  388     | expr . '&' expr
  389     | expr . '|' expr
  390     | expr . '^' expr
  391     | expr . "&&" expr
  392     | expr . "||" expr
  393     | expr . "^^" expr
  394     | expr . ".." expr
  397     | expr . "++"
  398     | expr . "--"
  400     | expr . '[' expr ']'
  401     | expr . '.' '[' expr ']'
  402     | expr . "?[" expr ']'
  403     | expr . '.' "?[" expr ']'
  404     | expr . "?." "name"
  405     | expr . '.' "?." "name"
  413     | expr . "??" expr
  414     | expr . '?' expr ':' expr
  417     | expr . "is" "type" '<' $@19 type_declaration_no_options '>' $@20
  418     | expr . "is" basic_type_declaration
  419     | expr . "is" "name"
  420     | expr . "as" "name"
  423     | expr . "as" "type" '<' $@21 type_declaration '>' $@22
  424     | expr . "as" basic_type_declaration
  425     | expr . '?' "as" "name"
  428     | expr . '?' "as" "type" '<' $@23 type_declaration '>' $@24
  429     | expr . '?' "as" basic_type_declaration
  437     | expr . "<|" expr
  438     | expr . "|>" expr
  439     | expr . "|>" basic_type_declaration
  449 expr_mtag: expr . '.' "$f" '(' expr ')'
  450          | expr . "?." "$f" '(' expr ')'
  451          | expr . '.' '.' "$f" '(' expr ')'
  452          | expr . '.' "?." "$f" '(' expr ')'
  453          | expr . "as" "$f" '(' expr ')'
  454          | expr . '?' "as" "$f" '(' expr ')'
  455          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 643
    "as"   shift, and go to state 644
    "<<"   shift, and go to state 645
    ">>"   shift, and go to state 646
    "++"   shift, and go to state 647
    "--"   shift, and go to state 648
    "<="   shift, and go to state 649
    ">="   shift, and go to state 650
    "->"   shift, and go to state 653
    "??"   shift, and go to state 654
    "?."   shift, and go to state 655
    "?["   shift, and go to state 656
    "<|"   shift, and go to state 657
    "|>"   shift, and go to state 658
    "<<<"  shift, and go to state 659
    ">>>"  shift, and go to state 660
    '<'    shift, and go to state 669
    '>'    shift, and go to state 670
    '-'    shift, and go to state 671
    '+'    shift, and go to state 672
    '*'    shift, and go to state 673
    '/'    shift, and go to state 674
    '%'    shift, and go to state 675
    '.'    shift, and go to state 676
    '['    shift, and go to state 677

    $default  reduce using rule 385 (expr)


State 854

  336 expr_method_call: expr "->" "name" . '(' ')'
  337                 | expr "->" "name" . '(' expr_list ')'

    '('  shift, and go to state 1033


State 855

  336 expr_method_call: expr . "->" "name" '(' ')'
  337                 | expr . "->" "name" '(' expr_list ')'
  347 expr_field: expr . '.' "name"
  348           | expr . '.' '.' "name"
  349           | expr . '.' "name" '(' ')'
  350           | expr . '.' "name" '(' expr_list ')'
  353           | expr . '.' $@17 error $@18
  373 expr: expr . "<<" expr
  374     | expr . ">>" expr
  375     | expr . "<<<" expr
  376     | expr . ">>>" expr
  377     | expr . '+' expr
  378     | expr . '-' expr
  379     | expr . '*' expr
  380     | expr . '/' expr
  381     | expr . '%' expr
  382     | expr . '<' expr
  383     | expr . '>' expr
  384     | expr . "==" expr
  385     | expr . "!=" expr
  386     | expr . "<=" expr
  387     | expr . ">=" expr
  388     | expr . '&' expr
  389     | expr . '|' expr
  390     | expr . '^' expr
  391     | expr . "&&" expr
  392     | expr . "||" expr
  393     | expr . "^^" expr
  394     | expr . ".." expr
  397     | expr . "++"
  398     | expr . "--"
  400     | expr . '[' expr ']'
  401     | expr . '.' '[' expr ']'
  402     | expr . "?[" expr ']'
  403     | expr . '.' "?[" expr ']'
  404     | expr . "?." "name"
  405     | expr . '.' "?." "name"
  413     | expr . "??" expr
  413     | expr "??" expr .
  414     | expr . '?' expr ':' expr
  417     | expr . "is" "type" '<' $@19 type_declaration_no_options '>' $@20
  418     | expr . "is" basic_type_declaration
  419     | expr . "is" "name"
  420     | expr . "as" "name"
  423     | expr . "as" "type" '<' $@21 type_declaration '>' $@22
  424     | expr . "as" basic_type_declaration
  425     | expr . '?' "as" "name"
  428     | expr . '?' "as" "type" '<' $@23 type_declaration '>' $@24
  429     | expr . '?' "as" basic_type_declaration
  437     | expr . "<|" expr
  438     | expr . "|>" expr
  439     | expr . "|>" basic_type_declaration
  449 expr_mtag: expr . '.' "$f" '(' expr ')'
  450          | expr . "?." "$f" '(' expr ')'
  451          | expr . '.' '.' "$f" '(' expr ')'
  452          | expr . '.' "?." "$f" '(' expr ')'
  453          | expr . "as" "$f" '(' expr ')'
  454          | expr . '?' "as" "$f" '(' expr ')'
  455          | expr . "is" "$f" '(' expr ')'

    "is"  shift, and go to state 643
    "as"  shift, and go to state 644
    "++"  shift, and go to state 647
    "--"  shift, and go to state 648
    "->"  shift, and go to state 653
    "??"  shift, and go to state 654
    "?."  shift, and go to state 655
    "?["  shift, and go to state 656
    "<|"  shift, and go to state 657
    "|>"  shift, and go to state 658
    '.'   shift, and go to state 676
    '['   shift, and go to state 677

    $default  reduce using rule 413 (expr)


State 856

  450 expr_mtag: expr "?." "$f" . '(' expr ')'

    '('  shift, and go to state 1034


State 857

  404 expr: expr "?." "name" .

    $default  reduce using rule 404 (expr)


State 858

  336 expr_method_call: expr . "->" "name" '(' ')'
  337                 | expr . "->" "name" '(' expr_list ')'
  347 expr_field: expr . '.' "name"
  348           | expr . '.' '.' "name"
  349           | expr . '.' "name" '(' ')'
  350           | expr . '.' "name" '(' expr_list ')'
  353           | expr . '.' $@17 error $@18
  373 expr: expr . "<<" expr
  374     | expr . ">>" expr
  375     | expr . "<<<" expr
  376     | expr . ">>>" expr
  377     | expr . '+' expr
  378     | expr . '-' expr
  379     | expr . '*' expr
  380     | expr . '/' expr
  381     | expr . '%' expr
  382     | expr . '<' expr
  383     | expr . '>' expr
  384     | expr . "==" expr
  385     | expr . "!=" expr
  386     | expr . "<=" expr
  387     | expr . ">=" expr
  388     | expr . '&' expr
  389     | expr . '|' expr
  390     | expr . '^' expr
  391     | expr . "&&" expr
  392     | expr . "||" expr
  393     | expr . "^^" expr
  394     | expr . ".." expr
  397     | expr . "++"
  398     | expr . "--"
  400     | expr . '[' expr ']'
  401     | expr . '.' '[' expr ']'
  402     | expr . "?[" expr ']'
  402     | expr "?[" expr . ']'
  403     | expr . '.' "?[" expr ']'
  404     | expr . "?." "name"
  405     | expr . '.' "?." "name"
  413     | expr . "??" expr
  414     | expr . '?' expr ':' expr
  417     | expr . "is" "type" '<' $@19 type_declaration_no_options '>' $@20
  418     | expr . "is" basic_type_declaration
  419     | expr . "is" "name"
  420     | expr . "as" "name"
  423     | expr . "as" "type" '<' $@21 type_declaration '>' $@22
  424     | expr . "as" basic_type_declaration
  425     | expr . '?' "as" "name"
  428     | expr . '?' "as" "type" '<' $@23 type_declaration '>' $@24
  429     | expr . '?' "as" basic_type_declaration
  437     | expr . "<|" expr
  438     | expr . "|>" expr
  439     | expr . "|>" basic_type_declaration
  449 expr_mtag: expr . '.' "$f" '(' expr ')'
  450          | expr . "?." "$f" '(' expr ')'
  451          | expr . '.' '.' "$f" '(' expr ')'
  452          | expr . '.' "?." "$f" '(' expr ')'
  453          | expr . "as" "$f" '(' expr ')'
  454          | expr . '?' "as" "$f" '(' expr ')'
  455          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 643
    "as"   shift, and go to state 644
    "<<"   shift, and go to state 645
    ">>"   shift, and go to state 646
    "++"   shift, and go to state 647
    "--"   shift, and go to state 648
    "<="   shift, and go to state 649
    ">="   shift, and go to state 650
    "=="   shift, and go to state 651
    "!="   shift, and go to state 652
    "->"   shift, and go to state 653
    "??"   shift, and go to state 654
    "?."   shift, and go to state 655
    "?["   shift, and go to state 656
    "<|"   shift, and go to state 657
    "|>"   shift, and go to state 658
    "<<<"  shift, and go to state 659
    ">>>"  shift, and go to state 660
    "&&"   shift, and go to state 661
    "||"   shift, and go to state 662
    "^^"   shift, and go to state 663
    ".."   shift, and go to state 664
    '?'    shift, and go to state 665
    '|'    shift, and go to state 666
    '^'    shift, and go to state 667
    '&'    shift, and go to state 668
    '<'    shift, and go to state 669
    '>'    shift, and go to state 670
    '-'    shift, and go to state 671
    '+'    shift, and go to state 672
    '*'    shift, and go to state 673
    '/'    shift, and go to state 674
    '%'    shift, and go to state 675
    '.'    shift, and go to state 676
    '['    shift, and go to state 677
    ']'    shift, and go to state 1035


State 859

  336 expr_method_call: expr . "->" "name" '(' ')'
  337                 | expr . "->" "name" '(' expr_list ')'
  347 expr_field: expr . '.' "name"
  348           | expr . '.' '.' "name"
  349           | expr . '.' "name" '(' ')'
  350           | expr . '.' "name" '(' expr_list ')'
  353           | expr . '.' $@17 error $@18
  373 expr: expr . "<<" expr
  374     | expr . ">>" expr
  375     | expr . "<<<" expr
  376     | expr . ">>>" expr
  377     | expr . '+' expr
  378     | expr . '-' expr
  379     | expr . '*' expr
  380     | expr . '/' expr
  381     | expr . '%' expr
  382     | expr . '<' expr
  383     | expr . '>' expr
  384     | expr . "==" expr
  385     | expr . "!=" expr
  386     | expr . "<=" expr
  387     | expr . ">=" expr
  388     | expr . '&' expr
  389     | expr . '|' expr
  390     | expr . '^' expr
  391     | expr . "&&" expr
  392     | expr . "||" expr
  393     | expr . "^^" expr
  394     | expr . ".." expr
  397     | expr . "++"
  398     | expr . "--"
  400     | expr . '[' expr ']'
  401     | expr . '.' '[' expr ']'
  402     | expr . "?[" expr ']'
  403     | expr . '.' "?[" expr ']'
  404     | expr . "?." "name"
  405     | expr . '.' "?." "name"
  413     | expr . "??" expr
  414     | expr . '?' expr ':' expr
  417     | expr . "is" "type" '<' $@19 type_declaration_no_options '>' $@20
  418     | expr . "is" basic_type_declaration
  419     | expr . "is" "name"
  420     | expr . "as" "name"
  423     | expr . "as" "type" '<' $@21 type_declaration '>' $@22
  424     | expr . "as" basic_type_declaration
  425     | expr . '?' "as" "name"
  428     | expr . '?' "as" "type" '<' $@23 type_declaration '>' $@24
  429     | expr . '?' "as" basic_type_declaration
  437     | expr . "<|" expr
  437     | expr "<|" expr .
  438     | expr . "|>" expr
  439     | expr . "|>" basic_type_declaration
  449 expr_mtag: expr . '.' "$f" '(' expr ')'
  450          | expr . "?." "$f" '(' expr ')'
  451          | expr . '.' '.' "$f" '(' expr ')'
  452          | expr . '.' "?." "$f" '(' expr ')'
  453          | expr . "as" "$f" '(' expr ')'
  454          | expr . '?' "as" "$f" '(' expr ')'
  455          | expr . "is" "$f" '(' expr ')'

    "->"  shift, and go to state 653
    "?."  shift, and go to state 655
    "?["  shift, and go to state 656
    '.'   shift, and go to state 676
    '['   shift, and go to state 677

    $default  reduce using rule 437 (expr)


State 860

  336 expr_method_call: expr . "->" "name" '(' ')'
  337                 | expr . "->" "name" '(' expr_list ')'
  347 expr_field: expr . '.' "name"
  348           | expr . '.' '.' "name"
  349           | expr . '.' "name" '(' ')'
  350           | expr . '.' "name" '(' expr_list ')'
  353           | expr . '.' $@17 error $@18
  373 expr: expr . "<<" expr
  374     | expr . ">>" expr
  375     | expr . "<<<" expr
  376     | expr . ">>>" expr
  377     | expr . '+' expr
  378     | expr . '-' expr
  379     | expr . '*' expr
  380     | expr . '/' expr
  381     | expr . '%' expr
  382     | expr . '<' expr
  383     | expr . '>' expr
  384     | expr . "==" expr
  385     | expr . "!=" expr
  386     | expr . "<=" expr
  387     | expr . ">=" expr
  388     | expr . '&' expr
  389     | expr . '|' expr
  390     | expr . '^' expr
  391     | expr . "&&" expr
  392     | expr . "||" expr
  393     | expr . "^^" expr
  394     | expr . ".." expr
  397     | expr . "++"
  398     | expr . "--"
  400     | expr . '[' expr ']'
  401     | expr . '.' '[' expr ']'
  402     | expr . "?[" expr ']'
  403     | expr . '.' "?[" expr ']'
  404     | expr . "?." "name"
  405     | expr . '.' "?." "name"
  413     | expr . "??" expr
  414     | expr . '?' expr ':' expr
  417     | expr . "is" "type" '<' $@19 type_declaration_no_options '>' $@20
  418     | expr . "is" basic_type_declaration
  419     | expr . "is" "name"
  420     | expr . "as" "name"
  423     | expr . "as" "type" '<' $@21 type_declaration '>' $@22
  424     | expr . "as" basic_type_declaration
  425     | expr . '?' "as" "name"
  428     | expr . '?' "as" "type" '<' $@23 type_declaration '>' $@24
  429     | expr . '?' "as" basic_type_declaration
  437     | expr . "<|" expr
  438     | expr . "|>" expr
  438     | expr "|>" expr .
  439     | expr . "|>" basic_type_declaration
  449 expr_mtag: expr . '.' "$f" '(' expr ')'
  450          | expr . "?." "$f" '(' expr ')'
  451          | expr . '.' '.' "$f" '(' expr ')'
  452          | expr . '.' "?." "$f" '(' expr ')'
  453          | expr . "as" "$f" '(' expr ')'
  454          | expr . '?' "as" "$f" '(' expr ')'
  455          | expr . "is" "$f" '(' expr ')'

    "->"  shift, and go to state 653
    "?."  shift, and go to state 655
    "?["  shift, and go to state 656
    '.'   shift, and go to state 676
    '['   shift, and go to state 677

    $default  reduce using rule 438 (expr)


State 861

  357 expr_call: basic_type_declaration . '(' ')'
  358          | basic_type_declaration . '(' expr_list ')'
  439 expr: expr "|>" basic_type_declaration .

    '('  shift, and go to state 679

    $default  reduce using rule 439 (expr)


State 862

  336 expr_method_call: expr . "->" "name" '(' ')'
  337                 | expr . "->" "name" '(' expr_list ')'
  347 expr_field: expr . '.' "name"
  348           | expr . '.' '.' "name"
  349           | expr . '.' "name" '(' ')'
  350           | expr . '.' "name" '(' expr_list ')'
  353           | expr . '.' $@17 error $@18
  373 expr: expr . "<<" expr
  374     | expr . ">>" expr
  375     | expr . "<<<" expr
  375     | expr "<<<" expr .
  376     | expr . ">>>" expr
  377     | expr . '+' expr
  378     | expr . '-' expr
  379     | expr . '*' expr
  380     | expr . '/' expr
  381     | expr . '%' expr
  382     | expr . '<' expr
  383     | expr . '>' expr
  384     | expr . "==" expr
  385     | expr . "!=" expr
  386     | expr . "<=" expr
  387     | expr . ">=" expr
  388     | expr . '&' expr
  389     | expr . '|' expr
  390     | expr . '^' expr
  391     | expr . "&&" expr
  392     | expr . "||" expr
  393     | expr . "^^" expr
  394     | expr . ".." expr
  397     | expr . "++"
  398     | expr . "--"
  400     | expr . '[' expr ']'
  401     | expr . '.' '[' expr ']'
  402     | expr . "?[" expr ']'
  403     | expr . '.' "?[" expr ']'
  404     | expr . "?." "name"
  405     | expr . '.' "?." "name"
  413     | expr . "??" expr
  414     | expr . '?' expr ':' expr
  417     | expr . "is" "type" '<' $@19 type_declaration_no_options '>' $@20
  418     | expr . "is" basic_type_declaration
  419     | expr . "is" "name"
  420     | expr . "as" "name"
  423     | expr . "as" "type" '<' $@21 type_declaration '>' $@22
  424     | expr . "as" basic_type_declaration
  425     | expr . '?' "as" "name"
  428     | expr . '?' "as" "type" '<' $@23 type_declaration '>' $@24
  429     | expr . '?' "as" basic_type_declaration
  437     | expr . "<|" expr
  438     | expr . "|>" expr
  439     | expr . "|>" basic_type_declaration
  449 expr_mtag: expr . '.' "$f" '(' expr ')'
  450          | expr . "?." "$f" '(' expr ')'
  451          | expr . '.' '.' "$f" '(' expr ')'
  452          | expr . '.' "?." "$f" '(' expr ')'
  453          | expr . "as" "$f" '(' expr ')'
  454          | expr . '?' "as" "$f" '(' expr ')'
  455          | expr . "is" "$f" '(' expr ')'

    "is"  shift, and go to state 643
    "as"  shift, and go to state 644
    "++"  shift, and go to state 647
    "--"  shift, and go to state 648
    "->"  shift, and go to state 653
    "??"  shift, and go to state 654
    "?."  shift, and go to state 655
    "?["  shift, and go to state 656
    "<|"  shift, and go to state 657
    "|>"  shift, and go to state 658
    '-'   shift, and go to state 671
    '+'   shift, and go to state 672
    '*'   shift, and go to state 673
    '/'   shift, and go to state 674
    '%'   shift, and go to state 675
    '.'   shift, and go to state 676
    '['   shift, and go to state 677

    $default  reduce using rule 375 (expr)


State 863

  336 expr_method_call: expr . "->" "name" '(' ')'
  337                 | expr . "->" "name" '(' expr_list ')'
  347 expr_field: expr . '.' "name"
  348           | expr . '.' '.' "name"
  349           | expr . '.' "name" '(' ')'
  350           | expr . '.' "name" '(' expr_list ')'
  353           | expr . '.' $@17 error $@18
  373 expr: expr . "<<" expr
  374     | expr . ">>" expr
  375     | expr . "<<<" expr
  376     | expr . ">>>" expr
  376     | expr ">>>" expr .
  377     | expr . '+' expr
  378     | expr . '-' expr
  379     | expr . '*' expr
  380     | expr . '/' expr
  381     | expr . '%' expr
  382     | expr . '<' expr
  383     | expr . '>' expr
  384     | expr . "==" expr
  385     | expr . "!=" expr
  386     | expr . "<=" expr
  387     | expr . ">=" expr
  388     | expr . '&' expr
  389     | expr . '|' expr
  390     | expr . '^' expr
  391     | expr . "&&" expr
  392     | expr . "||" expr
  393     | expr . "^^" expr
  394     | expr . ".." expr
  397     | expr . "++"
  398     | expr . "--"
  400     | expr . '[' expr ']'
  401     | expr . '.' '[' expr ']'
  402     | expr . "?[" expr ']'
  403     | expr . '.' "?[" expr ']'
  404     | expr . "?." "name"
  405     | expr . '.' "?." "name"
  413     | expr . "??" expr
  414     | expr . '?' expr ':' expr
  417     | expr . "is" "type" '<' $@19 type_declaration_no_options '>' $@20
  418     | expr . "is" basic_type_declaration
  419     | expr . "is" "name"
  420     | expr . "as" "name"
  423     | expr . "as" "type" '<' $@21 type_declaration '>' $@22
  424     | expr . "as" basic_type_declaration
  425     | expr . '?' "as" "name"
  428     | expr . '?' "as" "type" '<' $@23 type_declaration '>' $@24
  429     | expr . '?' "as" basic_type_declaration
  437     | expr . "<|" expr
  438     | expr . "|>" expr
  439     | expr . "|>" basic_type_declaration
  449 expr_mtag: expr . '.' "$f" '(' expr ')'
  450          | expr . "?." "$f" '(' expr ')'
  451          | expr . '.' '.' "$f" '(' expr ')'
  452          | expr . '.' "?." "$f" '(' expr ')'
  453          | expr . "as" "$f" '(' expr ')'
  454          | expr . '?' "as" "$f" '(' expr ')'
  455          | expr . "is" "$f" '(' expr ')'

    "is"  shift, and go to state 643
    "as"  shift, and go to state 644
    "++"  shift, and go to state 647
    "--"  shift, and go to state 648
    "->"  shift, and go to state 653
    "??"  shift, and go to state 654
    "?."  shift, and go to state 655
    "?["  shift, and go to state 656
    "<|"  shift, and go to state 657
    "|>"  shift, and go to state 658
    '-'   shift, and go to state 671
    '+'   shift, and go to state 672
    '*'   shift, and go to state 673
    '/'   shift, and go to state 674
    '%'   shift, and go to state 675
    '.'   shift, and go to state 676
    '['   shift, and go to state 677

    $default  reduce using rule 376 (expr)


State 864

  336 expr_method_call: expr . "->" "name" '(' ')'
  337                 | expr . "->" "name" '(' expr_list ')'
  347 expr_field: expr . '.' "name"
  348           | expr . '.' '.' "name"
  349           | expr . '.' "name" '(' ')'
  350           | expr . '.' "name" '(' expr_list ')'
  353           | expr . '.' $@17 error $@18
  373 expr: expr . "<<" expr
  374     | expr . ">>" expr
  375     | expr . "<<<" expr
  376     | expr . ">>>" expr
  377     | expr . '+' expr
  378     | expr . '-' expr
  379     | expr . '*' expr
  380     | expr . '/' expr
  381     | expr . '%' expr
  382     | expr . '<' expr
  383     | expr . '>' expr
  384     | expr . "==" expr
  385     | expr . "!=" expr
  386     | expr . "<=" expr
  387     | expr . ">=" expr
  388     | expr . '&' expr
  389     | expr . '|' expr
  390     | expr . '^' expr
  391     | expr . "&&" expr
  391     | expr "&&" expr .
  392     | expr . "||" expr
  393     | expr . "^^" expr
  394     | expr . ".." expr
  397     | expr . "++"
  398     | expr . "--"
  400     | expr . '[' expr ']'
  401     | expr . '.' '[' expr ']'
  402     | expr . "?[" expr ']'
  403     | expr . '.' "?[" expr ']'
  404     | expr . "?." "name"
  405     | expr . '.' "?." "name"
  413     | expr . "??" expr
  414     | expr . '?' expr ':' expr
  417     | expr . "is" "type" '<' $@19 type_declaration_no_options '>' $@20
  418     | expr . "is" basic_type_declaration
  419     | expr . "is" "name"
  420     | expr . "as" "name"
  423     | expr . "as" "type" '<' $@21 type_declaration '>' $@22
  424     | expr . "as" basic_type_declaration
  425     | expr . '?' "as" "name"
  428     | expr . '?' "as" "type" '<' $@23 type_declaration '>' $@24
  429     | expr . '?' "as" basic_type_declaration
  437     | expr . "<|" expr
  438     | expr . "|>" expr
  439     | expr . "|>" basic_type_declaration
  449 expr_mtag: expr . '.' "$f" '(' expr ')'
  450          | expr . "?." "$f" '(' expr ')'
  451          | expr . '.' '.' "$f" '(' expr ')'
  452          | expr . '.' "?." "$f" '(' expr ')'
  453          | expr . "as" "$f" '(' expr ')'
  454          | expr . '?' "as" "$f" '(' expr ')'
  455          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 643
    "as"   shift, and go to state 644
    "<<"   shift, and go to state 645
    ">>"   shift, and go to state 646
    "++"   shift, and go to state 647
    "--"   shift, and go to state 648
    "<="   shift, and go to state 649
    ">="   shift, and go to state 650
    "=="   shift, and go to state 651
    "!="   shift, and go to state 652
    "->"   shift, and go to state 653
    "??"   shift, and go to state 654
    "?."   shift, and go to state 655
    "?["   shift, and go to state 656
    "<|"   shift, and go to state 657
    "|>"   shift, and go to state 658
    "<<<"  shift, and go to state 659
    ">>>"  shift, and go to state 660
    '|'    shift, and go to state 666
    '^'    shift, and go to state 667
    '&'    shift, and go to state 668
    '<'    shift, and go to state 669
    '>'    shift, and go to state 670
    '-'    shift, and go to state 671
    '+'    shift, and go to state 672
    '*'    shift, and go to state 673
    '/'    shift, and go to state 674
    '%'    shift, and go to state 675
    '.'    shift, and go to state 676
    '['    shift, and go to state 677

    $default  reduce using rule 391 (expr)


State 865

  336 expr_method_call: expr . "->" "name" '(' ')'
  337                 | expr . "->" "name" '(' expr_list ')'
  347 expr_field: expr . '.' "name"
  348           | expr . '.' '.' "name"
  349           | expr . '.' "name" '(' ')'
  350           | expr . '.' "name" '(' expr_list ')'
  353           | expr . '.' $@17 error $@18
  373 expr: expr . "<<" expr
  374     | expr . ">>" expr
  375     | expr . "<<<" expr
  376     | expr . ">>>" expr
  377     | expr . '+' expr
  378     | expr . '-' expr
  379     | expr . '*' expr
  380     | expr . '/' expr
  381     | expr . '%' expr
  382     | expr . '<' expr
  383     | expr . '>' expr
  384     | expr . "==" expr
  385     | expr . "!=" expr
  386     | expr . "<=" expr
  387     | expr . ">=" expr
  388     | expr . '&' expr
  389     | expr . '|' expr
  390     | expr . '^' expr
  391     | expr . "&&" expr
  392     | expr . "||" expr
  392     | expr "||" expr .
  393     | expr . "^^" expr
  394     | expr . ".." expr
  397     | expr . "++"
  398     | expr . "--"
  400     | expr . '[' expr ']'
  401     | expr . '.' '[' expr ']'
  402     | expr . "?[" expr ']'
  403     | expr . '.' "?[" expr ']'
  404     | expr . "?." "name"
  405     | expr . '.' "?." "name"
  413     | expr . "??" expr
  414     | expr . '?' expr ':' expr
  417     | expr . "is" "type" '<' $@19 type_declaration_no_options '>' $@20
  418     | expr . "is" basic_type_declaration
  419     | expr . "is" "name"
  420     | expr . "as" "name"
  423     | expr . "as" "type" '<' $@21 type_declaration '>' $@22
  424     | expr . "as" basic_type_declaration
  425     | expr . '?' "as" "name"
  428     | expr . '?' "as" "type" '<' $@23 type_declaration '>' $@24
  429     | expr . '?' "as" basic_type_declaration
  437     | expr . "<|" expr
  438     | expr . "|>" expr
  439     | expr . "|>" basic_type_declaration
  449 expr_mtag: expr . '.' "$f" '(' expr ')'
  450          | expr . "?." "$f" '(' expr ')'
  451          | expr . '.' '.' "$f" '(' expr ')'
  452          | expr . '.' "?." "$f" '(' expr ')'
  453          | expr . "as" "$f" '(' expr ')'
  454          | expr . '?' "as" "$f" '(' expr ')'
  455          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 643
    "as"   shift, and go to state 644
    "<<"   shift, and go to state 645
    ">>"   shift, and go to state 646
    "++"   shift, and go to state 647
    "--"   shift, and go to state 648
    "<="   shift, and go to state 649
    ">="   shift, and go to state 650
    "=="   shift, and go to state 651
    "!="   shift, and go to state 652
    "->"   shift, and go to state 653
    "??"   shift, and go to state 654
    "?."   shift, and go to state 655
    "?["   shift, and go to state 656
    "<|"   shift, and go to state 657
    "|>"   shift, and go to state 658
    "<<<"  shift, and go to state 659
    ">>>"  shift, and go to state 660
    "&&"   shift, and go to state 661
    "^^"   shift, and go to state 663
    '|'    shift, and go to state 666
    '^'    shift, and go to state 667
    '&'    shift, and go to state 668
    '<'    shift, and go to state 669
    '>'    shift, and go to state 670
    '-'    shift, and go to state 671
    '+'    shift, and go to state 672
    '*'    shift, and go to state 673
    '/'    shift, and go to state 674
    '%'    shift, and go to state 675
    '.'    shift, and go to state 676
    '['    shift, and go to state 677

    $default  reduce using rule 392 (expr)


State 866

  336 expr_method_call: expr . "->" "name" '(' ')'
  337                 | expr . "->" "name" '(' expr_list ')'
  347 expr_field: expr . '.' "name"
  348           | expr . '.' '.' "name"
  349           | expr . '.' "name" '(' ')'
  350           | expr . '.' "name" '(' expr_list ')'
  353           | expr . '.' $@17 error $@18
  373 expr: expr . "<<" expr
  374     | expr . ">>" expr
  375     | expr . "<<<" expr
  376     | expr . ">>>" expr
  377     | expr . '+' expr
  378     | expr . '-' expr
  379     | expr . '*' expr
  380     | expr . '/' expr
  381     | expr . '%' expr
  382     | expr . '<' expr
  383     | expr . '>' expr
  384     | expr . "==" expr
  385     | expr . "!=" expr
  386     | expr . "<=" expr
  387     | expr . ">=" expr
  388     | expr . '&' expr
  389     | expr . '|' expr
  390     | expr . '^' expr
  391     | expr . "&&" expr
  392     | expr . "||" expr
  393     | expr . "^^" expr
  393     | expr "^^" expr .
  394     | expr . ".." expr
  397     | expr . "++"
  398     | expr . "--"
  400     | expr . '[' expr ']'
  401     | expr . '.' '[' expr ']'
  402     | expr . "?[" expr ']'
  403     | expr . '.' "?[" expr ']'
  404     | expr . "?." "name"
  405     | expr . '.' "?." "name"
  413     | expr . "??" expr
  414     | expr . '?' expr ':' expr
  417     | expr . "is" "type" '<' $@19 type_declaration_no_options '>' $@20
  418     | expr . "is" basic_type_declaration
  419     | expr . "is" "name"
  420     | expr . "as" "name"
  423     | expr . "as" "type" '<' $@21 type_declaration '>' $@22
  424     | expr . "as" basic_type_declaration
  425     | expr . '?' "as" "name"
  428     | expr . '?' "as" "type" '<' $@23 type_declaration '>' $@24
  429     | expr . '?' "as" basic_type_declaration
  437     | expr . "<|" expr
  438     | expr . "|>" expr
  439     | expr . "|>" basic_type_declaration
  449 expr_mtag: expr . '.' "$f" '(' expr ')'
  450          | expr . "?." "$f" '(' expr ')'
  451          | expr . '.' '.' "$f" '(' expr ')'
  452          | expr . '.' "?." "$f" '(' expr ')'
  453          | expr . "as" "$f" '(' expr ')'
  454          | expr . '?' "as" "$f" '(' expr ')'
  455          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 643
    "as"   shift, and go to state 644
    "<<"   shift, and go to state 645
    ">>"   shift, and go to state 646
    "++"   shift, and go to state 647
    "--"   shift, and go to state 648
    "<="   shift, and go to state 649
    ">="   shift, and go to state 650
    "=="   shift, and go to state 651
    "!="   shift, and go to state 652
    "->"   shift, and go to state 653
    "??"   shift, and go to state 654
    "?."   shift, and go to state 655
    "?["   shift, and go to state 656
    "<|"   shift, and go to state 657
    "|>"   shift, and go to state 658
    "<<<"  shift, and go to state 659
    ">>>"  shift, and go to state 660
    "&&"   shift, and go to state 661
    '|'    shift, and go to state 666
    '^'    shift, and go to state 667
    '&'    shift, and go to state 668
    '<'    shift, and go to state 669
    '>'    shift, and go to state 670
    '-'    shift, and go to state 671
    '+'    shift, and go to state 672
    '*'    shift, and go to state 673
    '/'    shift, and go to state 674
    '%'    shift, and go to state 675
    '.'    shift, and go to state 676
    '['    shift, and go to state 677

    $default  reduce using rule 393 (expr)


State 867

  336 expr_method_call: expr . "->" "name" '(' ')'
  337                 | expr . "->" "name" '(' expr_list ')'
  347 expr_field: expr . '.' "name"
  348           | expr . '.' '.' "name"
  349           | expr . '.' "name" '(' ')'
  350           | expr . '.' "name" '(' expr_list ')'
  353           | expr . '.' $@17 error $@18
  373 expr: expr . "<<" expr
  374     | expr . ">>" expr
  375     | expr . "<<<" expr
  376     | expr . ">>>" expr
  377     | expr . '+' expr
  378     | expr . '-' expr
  379     | expr . '*' expr
  380     | expr . '/' expr
  381     | expr . '%' expr
  382     | expr . '<' expr
  383     | expr . '>' expr
  384     | expr . "==" expr
  385     | expr . "!=" expr
  386     | expr . "<=" expr
  387     | expr . ">=" expr
  388     | expr . '&' expr
  389     | expr . '|' expr
  390     | expr . '^' expr
  391     | expr . "&&" expr
  392     | expr . "||" expr
  393     | expr . "^^" expr
  394     | expr . ".." expr
  394     | expr ".." expr .
  397     | expr . "++"
  398     | expr . "--"
  400     | expr . '[' expr ']'
  401     | expr . '.' '[' expr ']'
  402     | expr . "?[" expr ']'
  403     | expr . '.' "?[" expr ']'
  404     | expr . "?." "name"
  405     | expr . '.' "?." "name"
  413     | expr . "??" expr
  414     | expr . '?' expr ':' expr
  417     | expr . "is" "type" '<' $@19 type_declaration_no_options '>' $@20
  418     | expr . "is" basic_type_declaration
  419     | expr . "is" "name"
  420     | expr . "as" "name"
  423     | expr . "as" "type" '<' $@21 type_declaration '>' $@22
  424     | expr . "as" basic_type_declaration
  425     | expr . '?' "as" "name"
  428     | expr . '?' "as" "type" '<' $@23 type_declaration '>' $@24
  429     | expr . '?' "as" basic_type_declaration
  437     | expr . "<|" expr
  438     | expr . "|>" expr
  439     | expr . "|>" basic_type_declaration
  449 expr_mtag: expr . '.' "$f" '(' expr ')'
  450          | expr . "?." "$f" '(' expr ')'
  451          | expr . '.' '.' "$f" '(' expr ')'
  452          | expr . '.' "?." "$f" '(' expr ')'
  453          | expr . "as" "$f" '(' expr ')'
  454          | expr . '?' "as" "$f" '(' expr ')'
  455          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 643
    "as"   shift, and go to state 644
    "<<"   shift, and go to state 645
    ">>"   shift, and go to state 646
    "++"   shift, and go to state 647
    "--"   shift, and go to state 648
    "<="   shift, and go to state 649
    ">="   shift, and go to state 650
    "=="   shift, and go to state 651
    "!="   shift, and go to state 652
    "->"   shift, and go to state 653
    "??"   shift, and go to state 654
    "?."   shift, and go to state 655
    "?["   shift, and go to state 656
    "<|"   shift, and go to state 657
    "|>"   shift, and go to state 658
    "<<<"  shift, and go to state 659
    ">>>"  shift, and go to state 660
    "&&"   shift, and go to state 661
    "||"   shift, and go to state 662
    "^^"   shift, and go to state 663
    '?'    shift, and go to state 665
    '|'    shift, and go to state 666
    '^'    shift, and go to state 667
    '&'    shift, and go to state 668
    '<'    shift, and go to state 669
    '>'    shift, and go to state 670
    '-'    shift, and go to state 671
    '+'    shift, and go to state 672
    '*'    shift, and go to state 673
    '/'    shift, and go to state 674
    '%'    shift, and go to state 675
    '.'    shift, and go to state 676
    '['    shift, and go to state 677

    ".."  error (nonassociative)

    $default  reduce using rule 394 (expr)


State 868

  425 expr: expr '?' "as" . "name"
  428     | expr '?' "as" . "type" '<' $@23 type_declaration '>' $@24
  429     | expr '?' "as" . basic_type_declaration
  454 expr_mtag: expr '?' "as" . "$f" '(' expr ')'

    "type"      shift, and go to state 1036
    "bool"      shift, and go to state 222
    "void"      shift, and go to state 223
    "string"    shift, and go to state 224
    "int"       shift, and go to state 226
    "int2"      shift, and go to state 227
    "int3"      shift, and go to state 228
    "int4"      shift, and go to state 229
    "uint"      shift, and go to state 230
    "bitfield"  shift, and go to state 425
    "uint2"     shift, and go to state 232
    "uint3"     shift, and go to state 233
    "uint4"     shift, and go to state 234
    "float"     shift, and go to state 235
    "float2"    shift, and go to state 236
    "float3"    shift, and go to state 237
    "float4"    shift, and go to state 238
    "range"     shift, and go to state 239
    "urange"    shift, and go to state 240
    "range64"   shift, and go to state 241
    "urange64"  shift, and go to state 242
    "int64"     shift, and go to state 244
    "uint64"    shift, and go to state 245
    "double"    shift, and go to state 246
    "int8"      shift, and go to state 249
    "uint8"     shift, and go to state 250
    "int16"     shift, and go to state 251
    "uint16"    shift, and go to state 252
    "$f"        shift, and go to state 1037
    "name"      shift, and go to state 1038

    basic_type_declaration  go to state 1039


State 869

  336 expr_method_call: expr . "->" "name" '(' ')'
  337                 | expr . "->" "name" '(' expr_list ')'
  347 expr_field: expr . '.' "name"
  348           | expr . '.' '.' "name"
  349           | expr . '.' "name" '(' ')'
  350           | expr . '.' "name" '(' expr_list ')'
  353           | expr . '.' $@17 error $@18
  373 expr: expr . "<<" expr
  374     | expr . ">>" expr
  375     | expr . "<<<" expr
  376     | expr . ">>>" expr
  377     | expr . '+' expr
  378     | expr . '-' expr
  379     | expr . '*' expr
  380     | expr . '/' expr
  381     | expr . '%' expr
  382     | expr . '<' expr
  383     | expr . '>' expr
  384     | expr . "==" expr
  385     | expr . "!=" expr
  386     | expr . "<=" expr
  387     | expr . ">=" expr
  388     | expr . '&' expr
  389     | expr . '|' expr
  390     | expr . '^' expr
  391     | expr . "&&" expr
  392     | expr . "||" expr
  393     | expr . "^^" expr
  394     | expr . ".." expr
  397     | expr . "++"
  398     | expr . "--"
  400     | expr . '[' expr ']'
  401     | expr . '.' '[' expr ']'
  402     | expr . "?[" expr ']'
  403     | expr . '.' "?[" expr ']'
  404     | expr . "?." "name"
  405     | expr . '.' "?." "name"
  413     | expr . "??" expr
  414     | expr . '?' expr ':' expr
  414     | expr '?' expr . ':' expr
  417     | expr . "is" "type" '<' $@19 type_declaration_no_options '>' $@20
  418     | expr . "is" basic_type_declaration
  419     | expr . "is" "name"
  420     | expr . "as" "name"
  423     | expr . "as" "type" '<' $@21 type_declaration '>' $@22
  424     | expr . "as" basic_type_declaration
  425     | expr . '?' "as" "name"
  428     | expr . '?' "as" "type" '<' $@23 type_declaration '>' $@24
  429     | expr . '?' "as" basic_type_declaration
  437     | expr . "<|" expr
  438     | expr . "|>" expr
  439     | expr . "|>" basic_type_declaration
  449 expr_mtag: expr . '.' "$f" '(' expr ')'
  450          | expr . "?." "$f" '(' expr ')'
  451          | expr . '.' '.' "$f" '(' expr ')'
  452          | expr . '.' "?." "$f" '(' expr ')'
  453          | expr . "as" "$f" '(' expr ')'
  454          | expr . '?' "as" "$f" '(' expr ')'
  455          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 643
    "as"   shift, and go to state 644
    "<<"   shift, and go to state 645
    ">>"   shift, and go to state 646
    "++"   shift, and go to state 647
    "--"   shift, and go to state 648
    "<="   shift, and go to state 649
    ">="   shift, and go to state 650
    "=="   shift, and go to state 651
    "!="   shift, and go to state 652
    "->"   shift, and go to state 653
    "??"   shift, and go to state 654
    "?."   shift, and go to state 655
    "?["   shift, and go to state 656
    "<|"   shift, and go to state 657
    "|>"   shift, and go to state 658
    "<<<"  shift, and go to state 659
    ">>>"  shift, and go to state 660
    "&&"   shift, and go to state 661
    "||"   shift, and go to state 662
    "^^"   shift, and go to state 663
    ".."   shift, and go to state 664
    '?'    shift, and go to state 665
    ':'    shift, and go to state 1040
    '|'    shift, and go to state 666
    '^'    shift, and go to state 667
    '&'    shift, and go to state 668
    '<'    shift, and go to state 669
    '>'    shift, and go to state 670
    '-'    shift, and go to state 671
    '+'    shift, and go to state 672
    '*'    shift, and go to state 673
    '/'    shift, and go to state 674
    '%'    shift, and go to state 675
    '.'    shift, and go to state 676
    '['    shift, and go to state 677


State 870

  336 expr_method_call: expr . "->" "name" '(' ')'
  337                 | expr . "->" "name" '(' expr_list ')'
  347 expr_field: expr . '.' "name"
  348           | expr . '.' '.' "name"
  349           | expr . '.' "name" '(' ')'
  350           | expr . '.' "name" '(' expr_list ')'
  353           | expr . '.' $@17 error $@18
  373 expr: expr . "<<" expr
  374     | expr . ">>" expr
  375     | expr . "<<<" expr
  376     | expr . ">>>" expr
  377     | expr . '+' expr
  378     | expr . '-' expr
  379     | expr . '*' expr
  380     | expr . '/' expr
  381     | expr . '%' expr
  382     | expr . '<' expr
  383     | expr . '>' expr
  384     | expr . "==" expr
  385     | expr . "!=" expr
  386     | expr . "<=" expr
  387     | expr . ">=" expr
  388     | expr . '&' expr
  389     | expr . '|' expr
  389     | expr '|' expr .
  390     | expr . '^' expr
  391     | expr . "&&" expr
  392     | expr . "||" expr
  393     | expr . "^^" expr
  394     | expr . ".." expr
  397     | expr . "++"
  398     | expr . "--"
  400     | expr . '[' expr ']'
  401     | expr . '.' '[' expr ']'
  402     | expr . "?[" expr ']'
  403     | expr . '.' "?[" expr ']'
  404     | expr . "?." "name"
  405     | expr . '.' "?." "name"
  413     | expr . "??" expr
  414     | expr . '?' expr ':' expr
  417     | expr . "is" "type" '<' $@19 type_declaration_no_options '>' $@20
  418     | expr . "is" basic_type_declaration
  419     | expr . "is" "name"
  420     | expr . "as" "name"
  423     | expr . "as" "type" '<' $@21 type_declaration '>' $@22
  424     | expr . "as" basic_type_declaration
  425     | expr . '?' "as" "name"
  428     | expr . '?' "as" "type" '<' $@23 type_declaration '>' $@24
  429     | expr . '?' "as" basic_type_declaration
  437     | expr . "<|" expr
  438     | expr . "|>" expr
  439     | expr . "|>" basic_type_declaration
  449 expr_mtag: expr . '.' "$f" '(' expr ')'
  450          | expr . "?." "$f" '(' expr ')'
  451          | expr . '.' '.' "$f" '(' expr ')'
  452          | expr . '.' "?." "$f" '(' expr ')'
  453          | expr . "as" "$f" '(' expr ')'
  454          | expr . '?' "as" "$f" '(' expr ')'
  455          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 643
    "as"   shift, and go to state 644
    "<<"   shift, and go to state 645
    ">>"   shift, and go to state 646
    "++"   shift, and go to state 647
    "--"   shift, and go to state 648
    "<="   shift, and go to state 649
    ">="   shift, and go to state 650
    "=="   shift, and go to state 651
    "!="   shift, and go to state 652
    "->"   shift, and go to state 653
    "??"   shift, and go to state 654
    "?."   shift, and go to state 655
    "?["   shift, and go to state 656
    "<|"   shift, and go to state 657
    "|>"   shift, and go to state 658
    "<<<"  shift, and go to state 659
    ">>>"  shift, and go to state 660
    '^'    shift, and go to state 667
    '&'    shift, and go to state 668
    '<'    shift, and go to state 669
    '>'    shift, and go to state 670
    '-'    shift, and go to state 671
    '+'    shift, and go to state 672
    '*'    shift, and go to state 673
    '/'    shift, and go to state 674
    '%'    shift, and go to state 675
    '.'    shift, and go to state 676
    '['    shift, and go to state 677

    $default  reduce using rule 389 (expr)


State 871

  336 expr_method_call: expr . "->" "name" '(' ')'
  337                 | expr . "->" "name" '(' expr_list ')'
  347 expr_field: expr . '.' "name"
  348           | expr . '.' '.' "name"
  349           | expr . '.' "name" '(' ')'
  350           | expr . '.' "name" '(' expr_list ')'
  353           | expr . '.' $@17 error $@18
  373 expr: expr . "<<" expr
  374     | expr . ">>" expr
  375     | expr . "<<<" expr
  376     | expr . ">>>" expr
  377     | expr . '+' expr
  378     | expr . '-' expr
  379     | expr . '*' expr
  380     | expr . '/' expr
  381     | expr . '%' expr
  382     | expr . '<' expr
  383     | expr . '>' expr
  384     | expr . "==" expr
  385     | expr . "!=" expr
  386     | expr . "<=" expr
  387     | expr . ">=" expr
  388     | expr . '&' expr
  389     | expr . '|' expr
  390     | expr . '^' expr
  390     | expr '^' expr .
  391     | expr . "&&" expr
  392     | expr . "||" expr
  393     | expr . "^^" expr
  394     | expr . ".." expr
  397     | expr . "++"
  398     | expr . "--"
  400     | expr . '[' expr ']'
  401     | expr . '.' '[' expr ']'
  402     | expr . "?[" expr ']'
  403     | expr . '.' "?[" expr ']'
  404     | expr . "?." "name"
  405     | expr . '.' "?." "name"
  413     | expr . "??" expr
  414     | expr . '?' expr ':' expr
  417     | expr . "is" "type" '<' $@19 type_declaration_no_options '>' $@20
  418     | expr . "is" basic_type_declaration
  419     | expr . "is" "name"
  420     | expr . "as" "name"
  423     | expr . "as" "type" '<' $@21 type_declaration '>' $@22
  424     | expr . "as" basic_type_declaration
  425     | expr . '?' "as" "name"
  428     | expr . '?' "as" "type" '<' $@23 type_declaration '>' $@24
  429     | expr . '?' "as" basic_type_declaration
  437     | expr . "<|" expr
  438     | expr . "|>" expr
  439     | expr . "|>" basic_type_declaration
  449 expr_mtag: expr . '.' "$f" '(' expr ')'
  450          | expr . "?." "$f" '(' expr ')'
  451          | expr . '.' '.' "$f" '(' expr ')'
  452          | expr . '.' "?." "$f" '(' expr ')'
  453          | expr . "as" "$f" '(' expr ')'
  454          | expr . '?' "as" "$f" '(' expr ')'
  455          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 643
    "as"   shift, and go to state 644
    "<<"   shift, and go to state 645
    ">>"   shift, and go to state 646
    "++"   shift, and go to state 647
    "--"   shift, and go to state 648
    "<="   shift, and go to state 649
    ">="   shift, and go to state 650
    "=="   shift, and go to state 651
    "!="   shift, and go to state 652
    "->"   shift, and go to state 653
    "??"   shift, and go to state 654
    "?."   shift, and go to state 655
    "?["   shift, and go to state 656
    "<|"   shift, and go to state 657
    "|>"   shift, and go to state 658
    "<<<"  shift, and go to state 659
    ">>>"  shift, and go to state 660
    '&'    shift, and go to state 668
    '<'    shift, and go to state 669
    '>'    shift, and go to state 670
    '-'    shift, and go to state 671
    '+'    shift, and go to state 672
    '*'    shift, and go to state 673
    '/'    shift, and go to state 674
    '%'    shift, and go to state 675
    '.'    shift, and go to state 676
    '['    shift, and go to state 677

    $default  reduce using rule 390 (expr)


State 872

  336 expr_method_call: expr . "->" "name" '(' ')'
  337                 | expr . "->" "name" '(' expr_list ')'
  347 expr_field: expr . '.' "name"
  348           | expr . '.' '.' "name"
  349           | expr . '.' "name" '(' ')'
  350           | expr . '.' "name" '(' expr_list ')'
  353           | expr . '.' $@17 error $@18
  373 expr: expr . "<<" expr
  374     | expr . ">>" expr
  375     | expr . "<<<" expr
  376     | expr . ">>>" expr
  377     | expr . '+' expr
  378     | expr . '-' expr
  379     | expr . '*' expr
  380     | expr . '/' expr
  381     | expr . '%' expr
  382     | expr . '<' expr
  383     | expr . '>' expr
  384     | expr . "==" expr
  385     | expr . "!=" expr
  386     | expr . "<=" expr
  387     | expr . ">=" expr
  388     | expr . '&' expr
  388     | expr '&' expr .
  389     | expr . '|' expr
  390     | expr . '^' expr
  391     | expr . "&&" expr
  392     | expr . "||" expr
  393     | expr . "^^" expr
  394     | expr . ".." expr
  397     | expr . "++"
  398     | expr . "--"
  400     | expr . '[' expr ']'
  401     | expr . '.' '[' expr ']'
  402     | expr . "?[" expr ']'
  403     | expr . '.' "?[" expr ']'
  404     | expr . "?." "name"
  405     | expr . '.' "?." "name"
  413     | expr . "??" expr
  414     | expr . '?' expr ':' expr
  417     | expr . "is" "type" '<' $@19 type_declaration_no_options '>' $@20
  418     | expr . "is" basic_type_declaration
  419     | expr . "is" "name"
  420     | expr . "as" "name"
  423     | expr . "as" "type" '<' $@21 type_declaration '>' $@22
  424     | expr . "as" basic_type_declaration
  425     | expr . '?' "as" "name"
  428     | expr . '?' "as" "type" '<' $@23 type_declaration '>' $@24
  429     | expr . '?' "as" basic_type_declaration
  437     | expr . "<|" expr
  438     | expr . "|>" expr
  439     | expr . "|>" basic_type_declaration
  449 expr_mtag: expr . '.' "$f" '(' expr ')'
  450          | expr . "?." "$f" '(' expr ')'
  451          | expr . '.' '.' "$f" '(' expr ')'
  452          | expr . '.' "?." "$f" '(' expr ')'
  453          | expr . "as" "$f" '(' expr ')'
  454          | expr . '?' "as" "$f" '(' expr ')'
  455          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 643
    "as"   shift, and go to state 644
    "<<"   shift, and go to state 645
    ">>"   shift, and go to state 646
    "++"   shift, and go to state 647
    "--"   shift, and go to state 648
    "<="   shift, and go to state 649
    ">="   shift, and go to state 650
    "=="   shift, and go to state 651
    "!="   shift, and go to state 652
    "->"   shift, and go to state 653
    "??"   shift, and go to state 654
    "?."   shift, and go to state 655
    "?["   shift, and go to state 656
    "<|"   shift, and go to state 657
    "|>"   shift, and go to state 658
    "<<<"  shift, and go to state 659
    ">>>"  shift, and go to state 660
    '<'    shift, and go to state 669
    '>'    shift, and go to state 670
    '-'    shift, and go to state 671
    '+'    shift, and go to state 672
    '*'    shift, and go to state 673
    '/'    shift, and go to state 674
    '%'    shift, and go to state 675
    '.'    shift, and go to state 676
    '['    shift, and go to state 677

    $default  reduce using rule 388 (expr)


State 873

  336 expr_method_call: expr . "->" "name" '(' ')'
  337                 | expr . "->" "name" '(' expr_list ')'
  347 expr_field: expr . '.' "name"
  348           | expr . '.' '.' "name"
  349           | expr . '.' "name" '(' ')'
  350           | expr . '.' "name" '(' expr_list ')'
  353           | expr . '.' $@17 error $@18
  373 expr: expr . "<<" expr
  374     | expr . ">>" expr
  375     | expr . "<<<" expr
  376     | expr . ">>>" expr
  377     | expr . '+' expr
  378     | expr . '-' expr
  379     | expr . '*' expr
  380     | expr . '/' expr
  381     | expr . '%' expr
  382     | expr . '<' expr
  382     | expr '<' expr .
  383     | expr . '>' expr
  384     | expr . "==" expr
  385     | expr . "!=" expr
  386     | expr . "<=" expr
  387     | expr . ">=" expr
  388     | expr . '&' expr
  389     | expr . '|' expr
  390     | expr . '^' expr
  391     | expr . "&&" expr
  392     | expr . "||" expr
  393     | expr . "^^" expr
  394     | expr . ".." expr
  397     | expr . "++"
  398     | expr . "--"
  400     | expr . '[' expr ']'
  401     | expr . '.' '[' expr ']'
  402     | expr . "?[" expr ']'
  403     | expr . '.' "?[" expr ']'
  404     | expr . "?." "name"
  405     | expr . '.' "?." "name"
  413     | expr . "??" expr
  414     | expr . '?' expr ':' expr
  417     | expr . "is" "type" '<' $@19 type_declaration_no_options '>' $@20
  418     | expr . "is" basic_type_declaration
  419     | expr . "is" "name"
  420     | expr . "as" "name"
  423     | expr . "as" "type" '<' $@21 type_declaration '>' $@22
  424     | expr . "as" basic_type_declaration
  425     | expr . '?' "as" "name"
  428     | expr . '?' "as" "type" '<' $@23 type_declaration '>' $@24
  429     | expr . '?' "as" basic_type_declaration
  437     | expr . "<|" expr
  438     | expr . "|>" expr
  439     | expr . "|>" basic_type_declaration
  449 expr_mtag: expr . '.' "$f" '(' expr ')'
  450          | expr . "?." "$f" '(' expr ')'
  451          | expr . '.' '.' "$f" '(' expr ')'
  452          | expr . '.' "?." "$f" '(' expr ')'
  453          | expr . "as" "$f" '(' expr ')'
  454          | expr . '?' "as" "$f" '(' expr ')'
  455          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 643
    "as"   shift, and go to state 644
    "<<"   shift, and go to state 645
    ">>"   shift, and go to state 646
    "++"   shift, and go to state 647
    "--"   shift, and go to state 648
    "->"   shift, and go to state 653
    "??"   shift, and go to state 654
    "?."   shift, and go to state 655
    "?["   shift, and go to state 656
    "<|"   shift, and go to state 657
    "|>"   shift, and go to state 658
    "<<<"  shift, and go to state 659
    ">>>"  shift, and go to state 660
    '-'    shift, and go to state 671
    '+'    shift, and go to state 672
    '*'    shift, and go to state 673
    '/'    shift, and go to state 674
    '%'    shift, and go to state 675
    '.'    shift, and go to state 676
    '['    shift, and go to state 677

    $default  reduce using rule 382 (expr)


State 874

  336 expr_method_call: expr . "->" "name" '(' ')'
  337                 | expr . "->" "name" '(' expr_list ')'
  347 expr_field: expr . '.' "name"
  348           | expr . '.' '.' "name"
  349           | expr . '.' "name" '(' ')'
  350           | expr . '.' "name" '(' expr_list ')'
  353           | expr . '.' $@17 error $@18
  373 expr: expr . "<<" expr
  374     | expr . ">>" expr
  375     | expr . "<<<" expr
  376     | expr . ">>>" expr
  377     | expr . '+' expr
  378     | expr . '-' expr
  379     | expr . '*' expr
  380     | expr . '/' expr
  381     | expr . '%' expr
  382     | expr . '<' expr
  383     | expr . '>' expr
  383     | expr '>' expr .
  384     | expr . "==" expr
  385     | expr . "!=" expr
  386     | expr . "<=" expr
  387     | expr . ">=" expr
  388     | expr . '&' expr
  389     | expr . '|' expr
  390     | expr . '^' expr
  391     | expr . "&&" expr
  392     | expr . "||" expr
  393     | expr . "^^" expr
  394     | expr . ".." expr
  397     | expr . "++"
  398     | expr . "--"
  400     | expr . '[' expr ']'
  401     | expr . '.' '[' expr ']'
  402     | expr . "?[" expr ']'
  403     | expr . '.' "?[" expr ']'
  404     | expr . "?." "name"
  405     | expr . '.' "?." "name"
  413     | expr . "??" expr
  414     | expr . '?' expr ':' expr
  417     | expr . "is" "type" '<' $@19 type_declaration_no_options '>' $@20
  418     | expr . "is" basic_type_declaration
  419     | expr . "is" "name"
  420     | expr . "as" "name"
  423     | expr . "as" "type" '<' $@21 type_declaration '>' $@22
  424     | expr . "as" basic_type_declaration
  425     | expr . '?' "as" "name"
  428     | expr . '?' "as" "type" '<' $@23 type_declaration '>' $@24
  429     | expr . '?' "as" basic_type_declaration
  437     | expr . "<|" expr
  438     | expr . "|>" expr
  439     | expr . "|>" basic_type_declaration
  449 expr_mtag: expr . '.' "$f" '(' expr ')'
  450          | expr . "?." "$f" '(' expr ')'
  451          | expr . '.' '.' "$f" '(' expr ')'
  452          | expr . '.' "?." "$f" '(' expr ')'
  453          | expr . "as" "$f" '(' expr ')'
  454          | expr . '?' "as" "$f" '(' expr ')'
  455          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 643
    "as"   shift, and go to state 644
    "<<"   shift, and go to state 645
    ">>"   shift, and go to state 646
    "++"   shift, and go to state 647
    "--"   shift, and go to state 648
    "->"   shift, and go to state 653
    "??"   shift, and go to state 654
    "?."   shift, and go to state 655
    "?["   shift, and go to state 656
    "<|"   shift, and go to state 657
    "|>"   shift, and go to state 658
    "<<<"  shift, and go to state 659
    ">>>"  shift, and go to state 660
    '-'    shift, and go to state 671
    '+'    shift, and go to state 672
    '*'    shift, and go to state 673
    '/'    shift, and go to state 674
    '%'    shift, and go to state 675
    '.'    shift, and go to state 676
    '['    shift, and go to state 677

    $default  reduce using rule 383 (expr)


State 875

  336 expr_method_call: expr . "->" "name" '(' ')'
  337                 | expr . "->" "name" '(' expr_list ')'
  347 expr_field: expr . '.' "name"
  348           | expr . '.' '.' "name"
  349           | expr . '.' "name" '(' ')'
  350           | expr . '.' "name" '(' expr_list ')'
  353           | expr . '.' $@17 error $@18
  373 expr: expr . "<<" expr
  374     | expr . ">>" expr
  375     | expr . "<<<" expr
  376     | expr . ">>>" expr
  377     | expr . '+' expr
  378     | expr . '-' expr
  378     | expr '-' expr .
  379     | expr . '*' expr
  380     | expr . '/' expr
  381     | expr . '%' expr
  382     | expr . '<' expr
  383     | expr . '>' expr
  384     | expr . "==" expr
  385     | expr . "!=" expr
  386     | expr . "<=" expr
  387     | expr . ">=" expr
  388     | expr . '&' expr
  389     | expr . '|' expr
  390     | expr . '^' expr
  391     | expr . "&&" expr
  392     | expr . "||" expr
  393     | expr . "^^" expr
  394     | expr . ".." expr
  397     | expr . "++"
  398     | expr . "--"
  400     | expr . '[' expr ']'
  401     | expr . '.' '[' expr ']'
  402     | expr . "?[" expr ']'
  403     | expr . '.' "?[" expr ']'
  404     | expr . "?." "name"
  405     | expr . '.' "?." "name"
  413     | expr . "??" expr
  414     | expr . '?' expr ':' expr
  417     | expr . "is" "type" '<' $@19 type_declaration_no_options '>' $@20
  418     | expr . "is" basic_type_declaration
  419     | expr . "is" "name"
  420     | expr . "as" "name"
  423     | expr . "as" "type" '<' $@21 type_declaration '>' $@22
  424     | expr . "as" basic_type_declaration
  425     | expr . '?' "as" "name"
  428     | expr . '?' "as" "type" '<' $@23 type_declaration '>' $@24
  429     | expr . '?' "as" basic_type_declaration
  437     | expr . "<|" expr
  438     | expr . "|>" expr
  439     | expr . "|>" basic_type_declaration
  449 expr_mtag: expr . '.' "$f" '(' expr ')'
  450          | expr . "?." "$f" '(' expr ')'
  451          | expr . '.' '.' "$f" '(' expr ')'
  452          | expr . '.' "?." "$f" '(' expr ')'
  453          | expr . "as" "$f" '(' expr ')'
  454          | expr . '?' "as" "$f" '(' expr ')'
  455          | expr . "is" "$f" '(' expr ')'

    "is"  shift, and go to state 643
    "as"  shift, and go to state 644
    "++"  shift, and go to state 647
    "--"  shift, and go to state 648
    "->"  shift, and go to state 653
    "??"  shift, and go to state 654
    "?."  shift, and go to state 655
    "?["  shift, and go to state 656
    "<|"  shift, and go to state 657
    "|>"  shift, and go to state 658
    '*'   shift, and go to state 673
    '/'   shift, and go to state 674
    '%'   shift, and go to state 675
    '.'   shift, and go to state 676
    '['   shift, and go to state 677

    $default  reduce using rule 378 (expr)


State 876

  336 expr_method_call: expr . "->" "name" '(' ')'
  337                 | expr . "->" "name" '(' expr_list ')'
  347 expr_field: expr . '.' "name"
  348           | expr . '.' '.' "name"
  349           | expr . '.' "name" '(' ')'
  350           | expr . '.' "name" '(' expr_list ')'
  353           | expr . '.' $@17 error $@18
  373 expr: expr . "<<" expr
  374     | expr . ">>" expr
  375     | expr . "<<<" expr
  376     | expr . ">>>" expr
  377     | expr . '+' expr
  377     | expr '+' expr .
  378     | expr . '-' expr
  379     | expr . '*' expr
  380     | expr . '/' expr
  381     | expr . '%' expr
  382     | expr . '<' expr
  383     | expr . '>' expr
  384     | expr . "==" expr
  385     | expr . "!=" expr
  386     | expr . "<=" expr
  387     | expr . ">=" expr
  388     | expr . '&' expr
  389     | expr . '|' expr
  390     | expr . '^' expr
  391     | expr . "&&" expr
  392     | expr . "||" expr
  393     | expr . "^^" expr
  394     | expr . ".." expr
  397     | expr . "++"
  398     | expr . "--"
  400     | expr . '[' expr ']'
  401     | expr . '.' '[' expr ']'
  402     | expr . "?[" expr ']'
  403     | expr . '.' "?[" expr ']'
  404     | expr . "?." "name"
  405     | expr . '.' "?." "name"
  413     | expr . "??" expr
  414     | expr . '?' expr ':' expr
  417     | expr . "is" "type" '<' $@19 type_declaration_no_options '>' $@20
  418     | expr . "is" basic_type_declaration
  419     | expr . "is" "name"
  420     | expr . "as" "name"
  423     | expr . "as" "type" '<' $@21 type_declaration '>' $@22
  424     | expr . "as" basic_type_declaration
  425     | expr . '?' "as" "name"
  428     | expr . '?' "as" "type" '<' $@23 type_declaration '>' $@24
  429     | expr . '?' "as" basic_type_declaration
  437     | expr . "<|" expr
  438     | expr . "|>" expr
  439     | expr . "|>" basic_type_declaration
  449 expr_mtag: expr . '.' "$f" '(' expr ')'
  450          | expr . "?." "$f" '(' expr ')'
  451          | expr . '.' '.' "$f" '(' expr ')'
  452          | expr . '.' "?." "$f" '(' expr ')'
  453          | expr . "as" "$f" '(' expr ')'
  454          | expr . '?' "as" "$f" '(' expr ')'
  455          | expr . "is" "$f" '(' expr ')'

    "is"  shift, and go to state 643
    "as"  shift, and go to state 644
    "++"  shift, and go to state 647
    "--"  shift, and go to state 648
    "->"  shift, and go to state 653
    "??"  shift, and go to state 654
    "?."  shift, and go to state 655
    "?["  shift, and go to state 656
    "<|"  shift, and go to state 657
    "|>"  shift, and go to state 658
    '*'   shift, and go to state 673
    '/'   shift, and go to state 674
    '%'   shift, and go to state 675
    '.'   shift, and go to state 676
    '['   shift, and go to state 677

    $default  reduce using rule 377 (expr)


State 877

  336 expr_method_call: expr . "->" "name" '(' ')'
  337                 | expr . "->" "name" '(' expr_list ')'
  347 expr_field: expr . '.' "name"
  348           | expr . '.' '.' "name"
  349           | expr . '.' "name" '(' ')'
  350           | expr . '.' "name" '(' expr_list ')'
  353           | expr . '.' $@17 error $@18
  373 expr: expr . "<<" expr
  374     | expr . ">>" expr
  375     | expr . "<<<" expr
  376     | expr . ">>>" expr
  377     | expr . '+' expr
  378     | expr . '-' expr
  379     | expr . '*' expr
  379     | expr '*' expr .
  380     | expr . '/' expr
  381     | expr . '%' expr
  382     | expr . '<' expr
  383     | expr . '>' expr
  384     | expr . "==" expr
  385     | expr . "!=" expr
  386     | expr . "<=" expr
  387     | expr . ">=" expr
  388     | expr . '&' expr
  389     | expr . '|' expr
  390     | expr . '^' expr
  391     | expr . "&&" expr
  392     | expr . "||" expr
  393     | expr . "^^" expr
  394     | expr . ".." expr
  397     | expr . "++"
  398     | expr . "--"
  400     | expr . '[' expr ']'
  401     | expr . '.' '[' expr ']'
  402     | expr . "?[" expr ']'
  403     | expr . '.' "?[" expr ']'
  404     | expr . "?." "name"
  405     | expr . '.' "?." "name"
  413     | expr . "??" expr
  414     | expr . '?' expr ':' expr
  417     | expr . "is" "type" '<' $@19 type_declaration_no_options '>' $@20
  418     | expr . "is" basic_type_declaration
  419     | expr . "is" "name"
  420     | expr . "as" "name"
  423     | expr . "as" "type" '<' $@21 type_declaration '>' $@22
  424     | expr . "as" basic_type_declaration
  425     | expr . '?' "as" "name"
  428     | expr . '?' "as" "type" '<' $@23 type_declaration '>' $@24
  429     | expr . '?' "as" basic_type_declaration
  437     | expr . "<|" expr
  438     | expr . "|>" expr
  439     | expr . "|>" basic_type_declaration
  449 expr_mtag: expr . '.' "$f" '(' expr ')'
  450          | expr . "?." "$f" '(' expr ')'
  451          | expr . '.' '.' "$f" '(' expr ')'
  452          | expr . '.' "?." "$f" '(' expr ')'
  453          | expr . "as" "$f" '(' expr ')'
  454          | expr . '?' "as" "$f" '(' expr ')'
  455          | expr . "is" "$f" '(' expr ')'

    "is"  shift, and go to state 643
    "as"  shift, and go to state 644
    "++"  shift, and go to state 647
    "--"  shift, and go to state 648
    "->"  shift, and go to state 653
    "??"  shift, and go to state 654
    "?."  shift, and go to state 655
    "?["  shift, and go to state 656
    "<|"  shift, and go to state 657
    "|>"  shift, and go to state 658
    '.'   shift, and go to state 676
    '['   shift, and go to state 677

    $default  reduce using rule 379 (expr)


State 878

  336 expr_method_call: expr . "->" "name" '(' ')'
  337                 | expr . "->" "name" '(' expr_list ')'
  347 expr_field: expr . '.' "name"
  348           | expr . '.' '.' "name"
  349           | expr . '.' "name" '(' ')'
  350           | expr . '.' "name" '(' expr_list ')'
  353           | expr . '.' $@17 error $@18
  373 expr: expr . "<<" expr
  374     | expr . ">>" expr
  375     | expr . "<<<" expr
  376     | expr . ">>>" expr
  377     | expr . '+' expr
  378     | expr . '-' expr
  379     | expr . '*' expr
  380     | expr . '/' expr
  380     | expr '/' expr .
  381     | expr . '%' expr
  382     | expr . '<' expr
  383     | expr . '>' expr
  384     | expr . "==" expr
  385     | expr . "!=" expr
  386     | expr . "<=" expr
  387     | expr . ">=" expr
  388     | expr . '&' expr
  389     | expr . '|' expr
  390     | expr . '^' expr
  391     | expr . "&&" expr
  392     | expr . "||" expr
  393     | expr . "^^" expr
  394     | expr . ".." expr
  397     | expr . "++"
  398     | expr . "--"
  400     | expr . '[' expr ']'
  401     | expr . '.' '[' expr ']'
  402     | expr . "?[" expr ']'
  403     | expr . '.' "?[" expr ']'
  404     | expr . "?." "name"
  405     | expr . '.' "?." "name"
  413     | expr . "??" expr
  414     | expr . '?' expr ':' expr
  417     | expr . "is" "type" '<' $@19 type_declaration_no_options '>' $@20
  418     | expr . "is" basic_type_declaration
  419     | expr . "is" "name"
  420     | expr . "as" "name"
  423     | expr . "as" "type" '<' $@21 type_declaration '>' $@22
  424     | expr . "as" basic_type_declaration
  425     | expr . '?' "as" "name"
  428     | expr . '?' "as" "type" '<' $@23 type_declaration '>' $@24
  429     | expr . '?' "as" basic_type_declaration
  437     | expr . "<|" expr
  438     | expr . "|>" expr
  439     | expr . "|>" basic_type_declaration
  449 expr_mtag: expr . '.' "$f" '(' expr ')'
  450          | expr . "?." "$f" '(' expr ')'
  451          | expr . '.' '.' "$f" '(' expr ')'
  452          | expr . '.' "?." "$f" '(' expr ')'
  453          | expr . "as" "$f" '(' expr ')'
  454          | expr . '?' "as" "$f" '(' expr ')'
  455          | expr . "is" "$f" '(' expr ')'

    "is"  shift, and go to state 643
    "as"  shift, and go to state 644
    "++"  shift, and go to state 647
    "--"  shift, and go to state 648
    "->"  shift, and go to state 653
    "??"  shift, and go to state 654
    "?."  shift, and go to state 655
    "?["  shift, and go to state 656
    "<|"  shift, and go to state 657
    "|>"  shift, and go to state 658
    '.'   shift, and go to state 676
    '['   shift, and go to state 677

    $default  reduce using rule 380 (expr)


State 879

  336 expr_method_call: expr . "->" "name" '(' ')'
  337                 | expr . "->" "name" '(' expr_list ')'
  347 expr_field: expr . '.' "name"
  348           | expr . '.' '.' "name"
  349           | expr . '.' "name" '(' ')'
  350           | expr . '.' "name" '(' expr_list ')'
  353           | expr . '.' $@17 error $@18
  373 expr: expr . "<<" expr
  374     | expr . ">>" expr
  375     | expr . "<<<" expr
  376     | expr . ">>>" expr
  377     | expr . '+' expr
  378     | expr . '-' expr
  379     | expr . '*' expr
  380     | expr . '/' expr
  381     | expr . '%' expr
  381     | expr '%' expr .
  382     | expr . '<' expr
  383     | expr . '>' expr
  384     | expr . "==" expr
  385     | expr . "!=" expr
  386     | expr . "<=" expr
  387     | expr . ">=" expr
  388     | expr . '&' expr
  389     | expr . '|' expr
  390     | expr . '^' expr
  391     | expr . "&&" expr
  392     | expr . "||" expr
  393     | expr . "^^" expr
  394     | expr . ".." expr
  397     | expr . "++"
  398     | expr . "--"
  400     | expr . '[' expr ']'
  401     | expr . '.' '[' expr ']'
  402     | expr . "?[" expr ']'
  403     | expr . '.' "?[" expr ']'
  404     | expr . "?." "name"
  405     | expr . '.' "?." "name"
  413     | expr . "??" expr
  414     | expr . '?' expr ':' expr
  417     | expr . "is" "type" '<' $@19 type_declaration_no_options '>' $@20
  418     | expr . "is" basic_type_declaration
  419     | expr . "is" "name"
  420     | expr . "as" "name"
  423     | expr . "as" "type" '<' $@21 type_declaration '>' $@22
  424     | expr . "as" basic_type_declaration
  425     | expr . '?' "as" "name"
  428     | expr . '?' "as" "type" '<' $@23 type_declaration '>' $@24
  429     | expr . '?' "as" basic_type_declaration
  437     | expr . "<|" expr
  438     | expr . "|>" expr
  439     | expr . "|>" basic_type_declaration
  449 expr_mtag: expr . '.' "$f" '(' expr ')'
  450          | expr . "?." "$f" '(' expr ')'
  451          | expr . '.' '.' "$f" '(' expr ')'
  452          | expr . '.' "?." "$f" '(' expr ')'
  453          | expr . "as" "$f" '(' expr ')'
  454          | expr . '?' "as" "$f" '(' expr ')'
  455          | expr . "is" "$f" '(' expr ')'

    "is"  shift, and go to state 643
    "as"  shift, and go to state 644
    "++"  shift, and go to state 647
    "--"  shift, and go to state 648
    "->"  shift, and go to state 653
    "??"  shift, and go to state 654
    "?."  shift, and go to state 655
    "?["  shift, and go to state 656
    "<|"  shift, and go to state 657
    "|>"  shift, and go to state 658
    '.'   shift, and go to state 676
    '['   shift, and go to state 677

    $default  reduce using rule 381 (expr)


State 880

  405 expr: expr '.' "?." . "name"
  452 expr_mtag: expr '.' "?." . "$f" '(' expr ')'

    "$f"    shift, and go to state 1041
    "name"  shift, and go to state 1042


State 881

  403 expr: expr '.' "?[" . expr ']'

    "struct"                          shift, and go to state 408
    "class"                           shift, and go to state 409
    "true"                            shift, and go to state 410
    "false"                           shift, and go to state 411
    "new"                             shift, and go to state 412
    "typeinfo"                        shift, and go to state 413
    "type"                            shift, and go to state 414
    "array"                           shift, and go to state 415
    "null"                            shift, and go to state 416
    "table"                           shift, and go to state 417
    "deref"                           shift, and go to state 418
    "cast"                            shift, and go to state 419
    "upcast"                          shift, and go to state 420
    "addr"                            shift, and go to state 421
    "reinterpret"                     shift, and go to state 422
    "fixed_array"                     shift, and go to state 423
    "default"                         shift, and go to state 424
    "bool"                            shift, and go to state 222
    "void"                            shift, and go to state 223
    "string"                          shift, and go to state 224
    "int"                             shift, and go to state 226
    "int2"                            shift, and go to state 227
    "int3"                            shift, and go to state 228
    "int4"                            shift, and go to state 229
    "uint"                            shift, and go to state 230
    "bitfield"                        shift, and go to state 425
    "uint2"                           shift, and go to state 232
    "uint3"                           shift, and go to state 233
    "uint4"                           shift, and go to state 234
    "float"                           shift, and go to state 235
    "float2"                          shift, and go to state 236
    "float3"                          shift, and go to state 237
    "float4"                          shift, and go to state 238
    "range"                           shift, and go to state 239
    "urange"                          shift, and go to state 240
    "range64"                         shift, and go to state 241
    "urange64"                        shift, and go to state 242
    "int64"                           shift, and go to state 244
    "uint64"                          shift, and go to state 245
    "double"                          shift, and go to state 246
    "int8"                            shift, and go to state 249
    "uint8"                           shift, and go to state 250
    "int16"                           shift, and go to state 251
    "uint16"                          shift, and go to state 252
    "tuple"                           shift, and go to state 426
    "variant"                         shift, and go to state 427
    "generator"                       shift, and go to state 428
    "++"                              shift, and go to state 429
    "--"                              shift, and go to state 430
    "::"                              shift, and go to state 55
    "$$"                              shift, and go to state 431
    "$i"                              shift, and go to state 432
    "$v"                              shift, and go to state 433
    "$b"                              shift, and go to state 434
    "$a"                              shift, and go to state 435
    "$c"                              shift, and go to state 436
    "..."                             shift, and go to state 437
    "integer constant"                shift, and go to state 438
    "long integer constant"           shift, and go to state 439
    "unsigned integer constant"       shift, and go to state 440
    "unsigned long integer constant"  shift, and go to state 441
    "unsigned int8 constant"          shift, and go to state 442
    "floating point constant"         shift, and go to state 443
    "double constant"                 shift, and go to state 444
    "name"                            shift, and go to state 56
    "start of the string"             shift, and go to state 445
    "begin of code block"             shift, and go to state 446
    '-'                               shift, and go to state 447
    '+'                               shift, and go to state 448
    '*'                               shift, and go to state 449
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 450
    '!'                               shift, and go to state 451
    '['                               shift, and go to state 452
    '('                               shift, and go to state 453
    '$'                               shift, and go to state 454
    '@'                               shift, and go to state 455

    string_builder          go to state 456
    expr_reader             go to state 457
    expr_call_pipe          go to state 458
    name_in_namespace       go to state 459
    expr_new                go to state 460
    expr_cast               go to state 461
    expr_type_decl          go to state 462
    expr_type_info          go to state 463
    block_or_lambda         go to state 464
    expr_full_block         go to state 465
    expr_numeric_const      go to state 466
    expr_named_call         go to state 467
    expr_method_call        go to state 468
    func_addr_expr          go to state 469
    expr_field              go to state 470
    expr_call               go to state 471
    expr                    go to state 1043
    expr_mtag               go to state 473
    basic_type_declaration  go to state 474
    make_decl               go to state 475
    make_struct_decl        go to state 476
    make_tuple_call         go to state 477
    make_dim_decl           go to state 478
    make_table_decl         go to state 479
    array_comprehension     go to state 480


State 882

  449 expr_mtag: expr '.' "$f" . '(' expr ')'

    '('  shift, and go to state 1044


State 883

  347 expr_field: expr '.' "name" .
  349           | expr '.' "name" . '(' ')'
  350           | expr '.' "name" . '(' expr_list ')'

    '('  shift, and go to state 1045

    '('       [reduce using rule 347 (expr_field)]
    $default  reduce using rule 347 (expr_field)

    shift/reduce conflict on token '(':
      347 expr_field: expr '.' "name" .
      349 expr_field: expr '.' "name" . '(' ')'
      First example: program optional_annotation_list "def" optional_public_or_private_function $@2 function_declaration_header "begin of code block" expressions "assume" "name" '=' expr '.' "name" . '(' ')' expression_any "end of code block" $end
      Shift derivation
        $accept
        `-> 0: program                                                                                                                                                                                                                                                                                                     $end
               `-> 6: program global_function_declaration
                              `-> 204: optional_annotation_list "def" function_declaration
                                                                      `-> 210: optional_public_or_private_function $@2 function_declaration_header expression_block
                                                                                                                                                   `-> 211: "begin of code block" expressions                                                                                                          "end of code block"
                                                                                                                                                                                  `-> 233: expressions                                                                                  expression_any
                                                                                                                                                                                           `-> 233: expressions expression_with_alias
                                                                                                                                                                                                                `-> 74: "assume" "name" '=' expr
                                                                                                                                                                                                                                            `-> 367: expr_field
                                                                                                                                                                                                                                                     `-> 349: expr '.' "name" . '(' ')'
      Second example: program optional_annotation_list "def" optional_public_or_private_function $@2 function_declaration_header "begin of code block" expressions "assume" "name" '=' expr '.' "name" . '(' expr_list optional_comma ')' "end of expression" "end of code block" $end
      Reduce derivation
        $accept
        `-> 0: program                                                                                                                                                                                                                                                                                                                                                                       $end
               `-> 6: program global_function_declaration
                              `-> 204: optional_annotation_list "def" function_declaration
                                                                      `-> 210: optional_public_or_private_function $@2 function_declaration_header expression_block
                                                                                                                                                   `-> 211: "begin of code block" expressions                                                                                                                                                                            "end of code block"
                                                                                                                                                                                  `-> 233: expressions                                                                                   expression_any
                                                                                                                                                                                           `-> 233: expressions expression_any                                                           `-> 215: expr_assign                                        "end of expression"
                                                                                                                                                                                                                `-> 221: expression_with_alias                                                    `-> 315: expr
                                                                                                                                                                                                                         `-> 74: "assume" "name" '=' expr                                                  `-> 399: '(' expr_list optional_comma ')'
                                                                                                                                                                                                                                                     `-> 367: expr_field
                                                                                                                                                                                                                                                              `-> 347: expr '.' "name" .

    shift/reduce conflict on token '(':
      347 expr_field: expr '.' "name" .
      350 expr_field: expr '.' "name" . '(' expr_list ')'
      First example: program optional_annotation_list "def" optional_public_or_private_function $@2 function_declaration_header "begin of code block" expressions "assume" "name" '=' expr '.' "name" . '(' expr_list ')' expression_any "end of code block" $end
      Shift derivation
        $accept
        `-> 0: program                                                                                                                                                                                                                                                                                                               $end
               `-> 6: program global_function_declaration
                              `-> 204: optional_annotation_list "def" function_declaration
                                                                      `-> 210: optional_public_or_private_function $@2 function_declaration_header expression_block
                                                                                                                                                   `-> 211: "begin of code block" expressions                                                                                                                    "end of code block"
                                                                                                                                                                                  `-> 233: expressions                                                                                            expression_any
                                                                                                                                                                                           `-> 233: expressions expression_with_alias
                                                                                                                                                                                                                `-> 74: "assume" "name" '=' expr
                                                                                                                                                                                                                                            `-> 367: expr_field
                                                                                                                                                                                                                                                     `-> 350: expr '.' "name" . '(' expr_list ')'
      Second example: program optional_annotation_list "def" optional_public_or_private_function $@2 function_declaration_header "begin of code block" expressions "assume" "name" '=' expr '.' "name" . '(' expr_list optional_comma ')' "end of expression" "end of code block" $end
      Reduce derivation
        $accept
        `-> 0: program                                                                                                                                                                                                                                                                                                                                                                       $end
               `-> 6: program global_function_declaration
                              `-> 204: optional_annotation_list "def" function_declaration
                                                                      `-> 210: optional_public_or_private_function $@2 function_declaration_header expression_block
                                                                                                                                                   `-> 211: "begin of code block" expressions                                                                                                                                                                            "end of code block"
                                                                                                                                                                                  `-> 233: expressions                                                                                   expression_any
                                                                                                                                                                                           `-> 233: expressions expression_any                                                           `-> 215: expr_assign                                        "end of expression"
                                                                                                                                                                                                                `-> 221: expression_with_alias                                                    `-> 315: expr
                                                                                                                                                                                                                         `-> 74: "assume" "name" '=' expr                                                  `-> 399: '(' expr_list optional_comma ')'
                                                                                                                                                                                                                                                     `-> 367: expr_field
                                                                                                                                                                                                                                                              `-> 347: expr '.' "name" .



State 884

  348 expr_field: expr '.' '.' . "name"
  451 expr_mtag: expr '.' '.' . "$f" '(' expr ')'

    "$f"    shift, and go to state 1046
    "name"  shift, and go to state 1047


State 885

  401 expr: expr '.' '[' . expr ']'

    "struct"                          shift, and go to state 408
    "class"                           shift, and go to state 409
    "true"                            shift, and go to state 410
    "false"                           shift, and go to state 411
    "new"                             shift, and go to state 412
    "typeinfo"                        shift, and go to state 413
    "type"                            shift, and go to state 414
    "array"                           shift, and go to state 415
    "null"                            shift, and go to state 416
    "table"                           shift, and go to state 417
    "deref"                           shift, and go to state 418
    "cast"                            shift, and go to state 419
    "upcast"                          shift, and go to state 420
    "addr"                            shift, and go to state 421
    "reinterpret"                     shift, and go to state 422
    "fixed_array"                     shift, and go to state 423
    "default"                         shift, and go to state 424
    "bool"                            shift, and go to state 222
    "void"                            shift, and go to state 223
    "string"                          shift, and go to state 224
    "int"                             shift, and go to state 226
    "int2"                            shift, and go to state 227
    "int3"                            shift, and go to state 228
    "int4"                            shift, and go to state 229
    "uint"                            shift, and go to state 230
    "bitfield"                        shift, and go to state 425
    "uint2"                           shift, and go to state 232
    "uint3"                           shift, and go to state 233
    "uint4"                           shift, and go to state 234
    "float"                           shift, and go to state 235
    "float2"                          shift, and go to state 236
    "float3"                          shift, and go to state 237
    "float4"                          shift, and go to state 238
    "range"                           shift, and go to state 239
    "urange"                          shift, and go to state 240
    "range64"                         shift, and go to state 241
    "urange64"                        shift, and go to state 242
    "int64"                           shift, and go to state 244
    "uint64"                          shift, and go to state 245
    "double"                          shift, and go to state 246
    "int8"                            shift, and go to state 249
    "uint8"                           shift, and go to state 250
    "int16"                           shift, and go to state 251
    "uint16"                          shift, and go to state 252
    "tuple"                           shift, and go to state 426
    "variant"                         shift, and go to state 427
    "generator"                       shift, and go to state 428
    "++"                              shift, and go to state 429
    "--"                              shift, and go to state 430
    "::"                              shift, and go to state 55
    "$$"                              shift, and go to state 431
    "$i"                              shift, and go to state 432
    "$v"                              shift, and go to state 433
    "$b"                              shift, and go to state 434
    "$a"                              shift, and go to state 435
    "$c"                              shift, and go to state 436
    "..."                             shift, and go to state 437
    "integer constant"                shift, and go to state 438
    "long integer constant"           shift, and go to state 439
    "unsigned integer constant"       shift, and go to state 440
    "unsigned long integer constant"  shift, and go to state 441
    "unsigned int8 constant"          shift, and go to state 442
    "floating point constant"         shift, and go to state 443
    "double constant"                 shift, and go to state 444
    "name"                            shift, and go to state 56
    "start of the string"             shift, and go to state 445
    "begin of code block"             shift, and go to state 446
    '-'                               shift, and go to state 447
    '+'                               shift, and go to state 448
    '*'                               shift, and go to state 449
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 450
    '!'                               shift, and go to state 451
    '['                               shift, and go to state 452
    '('                               shift, and go to state 453
    '$'                               shift, and go to state 454
    '@'                               shift, and go to state 455

    string_builder          go to state 456
    expr_reader             go to state 457
    expr_call_pipe          go to state 458
    name_in_namespace       go to state 459
    expr_new                go to state 460
    expr_cast               go to state 461
    expr_type_decl          go to state 462
    expr_type_info          go to state 463
    block_or_lambda         go to state 464
    expr_full_block         go to state 465
    expr_numeric_const      go to state 466
    expr_named_call         go to state 467
    expr_method_call        go to state 468
    func_addr_expr          go to state 469
    expr_field              go to state 470
    expr_call               go to state 471
    expr                    go to state 1048
    expr_mtag               go to state 473
    basic_type_declaration  go to state 474
    make_decl               go to state 475
    make_struct_decl        go to state 476
    make_tuple_call         go to state 477
    make_dim_decl           go to state 478
    make_table_decl         go to state 479
    array_comprehension     go to state 480


State 886

  353 expr_field: expr '.' $@17 . error $@18

    error  shift, and go to state 1049


State 887

  336 expr_method_call: expr . "->" "name" '(' ')'
  337                 | expr . "->" "name" '(' expr_list ')'
  347 expr_field: expr . '.' "name"
  348           | expr . '.' '.' "name"
  349           | expr . '.' "name" '(' ')'
  350           | expr . '.' "name" '(' expr_list ')'
  353           | expr . '.' $@17 error $@18
  373 expr: expr . "<<" expr
  374     | expr . ">>" expr
  375     | expr . "<<<" expr
  376     | expr . ">>>" expr
  377     | expr . '+' expr
  378     | expr . '-' expr
  379     | expr . '*' expr
  380     | expr . '/' expr
  381     | expr . '%' expr
  382     | expr . '<' expr
  383     | expr . '>' expr
  384     | expr . "==" expr
  385     | expr . "!=" expr
  386     | expr . "<=" expr
  387     | expr . ">=" expr
  388     | expr . '&' expr
  389     | expr . '|' expr
  390     | expr . '^' expr
  391     | expr . "&&" expr
  392     | expr . "||" expr
  393     | expr . "^^" expr
  394     | expr . ".." expr
  397     | expr . "++"
  398     | expr . "--"
  400     | expr . '[' expr ']'
  400     | expr '[' expr . ']'
  401     | expr . '.' '[' expr ']'
  402     | expr . "?[" expr ']'
  403     | expr . '.' "?[" expr ']'
  404     | expr . "?." "name"
  405     | expr . '.' "?." "name"
  413     | expr . "??" expr
  414     | expr . '?' expr ':' expr
  417     | expr . "is" "type" '<' $@19 type_declaration_no_options '>' $@20
  418     | expr . "is" basic_type_declaration
  419     | expr . "is" "name"
  420     | expr . "as" "name"
  423     | expr . "as" "type" '<' $@21 type_declaration '>' $@22
  424     | expr . "as" basic_type_declaration
  425     | expr . '?' "as" "name"
  428     | expr . '?' "as" "type" '<' $@23 type_declaration '>' $@24
  429     | expr . '?' "as" basic_type_declaration
  437     | expr . "<|" expr
  438     | expr . "|>" expr
  439     | expr . "|>" basic_type_declaration
  449 expr_mtag: expr . '.' "$f" '(' expr ')'
  450          | expr . "?." "$f" '(' expr ')'
  451          | expr . '.' '.' "$f" '(' expr ')'
  452          | expr . '.' "?." "$f" '(' expr ')'
  453          | expr . "as" "$f" '(' expr ')'
  454          | expr . '?' "as" "$f" '(' expr ')'
  455          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 643
    "as"   shift, and go to state 644
    "<<"   shift, and go to state 645
    ">>"   shift, and go to state 646
    "++"   shift, and go to state 647
    "--"   shift, and go to state 648
    "<="   shift, and go to state 649
    ">="   shift, and go to state 650
    "=="   shift, and go to state 651
    "!="   shift, and go to state 652
    "->"   shift, and go to state 653
    "??"   shift, and go to state 654
    "?."   shift, and go to state 655
    "?["   shift, and go to state 656
    "<|"   shift, and go to state 657
    "|>"   shift, and go to state 658
    "<<<"  shift, and go to state 659
    ">>>"  shift, and go to state 660
    "&&"   shift, and go to state 661
    "||"   shift, and go to state 662
    "^^"   shift, and go to state 663
    ".."   shift, and go to state 664
    '?'    shift, and go to state 665
    '|'    shift, and go to state 666
    '^'    shift, and go to state 667
    '&'    shift, and go to state 668
    '<'    shift, and go to state 669
    '>'    shift, and go to state 670
    '-'    shift, and go to state 671
    '+'    shift, and go to state 672
    '*'    shift, and go to state 673
    '/'    shift, and go to state 674
    '%'    shift, and go to state 675
    '.'    shift, and go to state 676
    '['    shift, and go to state 677
    ']'    shift, and go to state 1050


State 888

  357 expr_call: basic_type_declaration '(' ')' .

    $default  reduce using rule 357 (expr_call)


State 889

  290 expr_list: expr_list . ',' expr
  358 expr_call: basic_type_declaration '(' expr_list . ')'

    ','  shift, and go to state 907
    ')'  shift, and go to state 1051


State 890

  655 type_declaration_no_options_no_dim: "iterator" '<' $@46 type_declaration '>' . $@47

    $default  reduce using rule 654 ($@47)

    $@47  go to state 1052


State 891

  645 type_declaration_no_options_no_dim: "smart_ptr" '<' $@40 type_declaration '>' . $@41

    $default  reduce using rule 644 ($@41)

    $@41  go to state 1053


State 892

  605 bitfield_bits: bitfield_bits "end of expression" . "name"

    "name"  shift, and go to state 1054


State 893

  611 bitfield_type_declaration: "bitfield" '<' $@35 bitfield_bits '>' . $@36

    $default  reduce using rule 610 ($@36)

    $@36  go to state 1055


State 894

  659 type_declaration_no_options_no_dim: "block" '<' $@48 type_declaration '>' . $@49

    $default  reduce using rule 658 ($@49)

    $@49  go to state 1056


State 895

  662 type_declaration_no_options_no_dim: "block" '<' $@50 optional_function_argument_list optional_function_type . '>' $@51

    '>'  shift, and go to state 1057


State 896

  666 type_declaration_no_options_no_dim: "function" '<' $@52 type_declaration '>' . $@53

    $default  reduce using rule 665 ($@53)

    $@53  go to state 1058


State 897

  669 type_declaration_no_options_no_dim: "function" '<' $@54 optional_function_argument_list optional_function_type . '>' $@55

    '>'  shift, and go to state 1059


State 898

  673 type_declaration_no_options_no_dim: "lambda" '<' $@56 type_declaration '>' . $@57

    $default  reduce using rule 672 ($@57)

    $@57  go to state 1060


State 899

  676 type_declaration_no_options_no_dim: "lambda" '<' $@58 optional_function_argument_list optional_function_type . '>' $@59

    '>'  shift, and go to state 1061


State 900

  484 tuple_type_list: tuple_type_list "end of expression" . tuple_type

    "type"       shift, and go to state 216
    "array"      shift, and go to state 217
    "table"      shift, and go to state 218
    "typedecl"   shift, and go to state 219
    "iterator"   shift, and go to state 220
    "smart_ptr"  shift, and go to state 221
    "bool"       shift, and go to state 222
    "void"       shift, and go to state 223
    "string"     shift, and go to state 224
    "auto"       shift, and go to state 225
    "int"        shift, and go to state 226
    "int2"       shift, and go to state 227
    "int3"       shift, and go to state 228
    "int4"       shift, and go to state 229
    "uint"       shift, and go to state 230
    "bitfield"   shift, and go to state 231
    "uint2"      shift, and go to state 232
    "uint3"      shift, and go to state 233
    "uint4"      shift, and go to state 234
    "float"      shift, and go to state 235
    "float2"     shift, and go to state 236
    "float3"     shift, and go to state 237
    "float4"     shift, and go to state 238
    "range"      shift, and go to state 239
    "urange"     shift, and go to state 240
    "range64"    shift, and go to state 241
    "urange64"   shift, and go to state 242
    "block"      shift, and go to state 243
    "int64"      shift, and go to state 244
    "uint64"     shift, and go to state 245
    "double"     shift, and go to state 246
    "function"   shift, and go to state 247
    "lambda"     shift, and go to state 248
    "int8"       shift, and go to state 249
    "uint8"      shift, and go to state 250
    "int16"      shift, and go to state 251
    "uint16"     shift, and go to state 252
    "tuple"      shift, and go to state 253
    "variant"    shift, and go to state 254
    "::"         shift, and go to state 55
    "$t"         shift, and go to state 255
    "name"       shift, and go to state 509
    '$'          shift, and go to state 256

    name_in_namespace                   go to state 257
    tuple_type                          go to state 1062
    basic_type_declaration              go to state 258
    structure_type_declaration          go to state 259
    auto_type_declaration               go to state 260
    bitfield_type_declaration           go to state 261
    type_declaration_no_options         go to state 262
    type_declaration_no_options_no_dim  go to state 263
    type_declaration                    go to state 512


State 901

  679 type_declaration_no_options_no_dim: "tuple" '<' $@60 tuple_type_list '>' . $@61

    $default  reduce using rule 678 ($@61)

    $@61  go to state 1063


State 902

  490 variant_type_list: variant_type_list "end of expression" . variant_type

    "name"  shift, and go to state 514

    variant_type  go to state 1064


State 903

  682 type_declaration_no_options_no_dim: "variant" '<' $@62 variant_type_list '>' . $@63

    $default  reduce using rule 681 ($@63)

    $@63  go to state 1065


State 904

  238 type_declaration_no_options_list: type_declaration_no_options_list . "end of expression" type_declaration
  630 type_declaration_no_options_no_dim: '$' name_in_namespace '<' $@39 type_declaration_no_options_list . '>' '(' optional_expr_list ')'

    "end of expression"  shift, and go to state 1066
    '>'                  shift, and go to state 1067


State 905

  237 type_declaration_no_options_list: type_declaration .
  684 type_declaration: type_declaration . '|' type_declaration_no_options
  685                 | type_declaration . '|' '#'

    '|'  shift, and go to state 372

    $default  reduce using rule 237 (type_declaration_no_options_list)


State 906

  628 type_declaration_no_options_no_dim: '$' name_in_namespace '(' optional_expr_list ')' .

    $default  reduce using rule 628 (type_declaration_no_options_no_dim)


State 907

  290 expr_list: expr_list ',' . expr

    "struct"                          shift, and go to state 408
    "class"                           shift, and go to state 409
    "true"                            shift, and go to state 410
    "false"                           shift, and go to state 411
    "new"                             shift, and go to state 412
    "typeinfo"                        shift, and go to state 413
    "type"                            shift, and go to state 414
    "array"                           shift, and go to state 415
    "null"                            shift, and go to state 416
    "table"                           shift, and go to state 417
    "deref"                           shift, and go to state 418
    "cast"                            shift, and go to state 419
    "upcast"                          shift, and go to state 420
    "addr"                            shift, and go to state 421
    "reinterpret"                     shift, and go to state 422
    "fixed_array"                     shift, and go to state 423
    "default"                         shift, and go to state 424
    "bool"                            shift, and go to state 222
    "void"                            shift, and go to state 223
    "string"                          shift, and go to state 224
    "int"                             shift, and go to state 226
    "int2"                            shift, and go to state 227
    "int3"                            shift, and go to state 228
    "int4"                            shift, and go to state 229
    "uint"                            shift, and go to state 230
    "bitfield"                        shift, and go to state 425
    "uint2"                           shift, and go to state 232
    "uint3"                           shift, and go to state 233
    "uint4"                           shift, and go to state 234
    "float"                           shift, and go to state 235
    "float2"                          shift, and go to state 236
    "float3"                          shift, and go to state 237
    "float4"                          shift, and go to state 238
    "range"                           shift, and go to state 239
    "urange"                          shift, and go to state 240
    "range64"                         shift, and go to state 241
    "urange64"                        shift, and go to state 242
    "int64"                           shift, and go to state 244
    "uint64"                          shift, and go to state 245
    "double"                          shift, and go to state 246
    "int8"                            shift, and go to state 249
    "uint8"                           shift, and go to state 250
    "int16"                           shift, and go to state 251
    "uint16"                          shift, and go to state 252
    "tuple"                           shift, and go to state 426
    "variant"                         shift, and go to state 427
    "generator"                       shift, and go to state 428
    "++"                              shift, and go to state 429
    "--"                              shift, and go to state 430
    "::"                              shift, and go to state 55
    "$$"                              shift, and go to state 431
    "$i"                              shift, and go to state 432
    "$v"                              shift, and go to state 433
    "$b"                              shift, and go to state 434
    "$a"                              shift, and go to state 435
    "$c"                              shift, and go to state 436
    "..."                             shift, and go to state 437
    "integer constant"                shift, and go to state 438
    "long integer constant"           shift, and go to state 439
    "unsigned integer constant"       shift, and go to state 440
    "unsigned long integer constant"  shift, and go to state 441
    "unsigned int8 constant"          shift, and go to state 442
    "floating point constant"         shift, and go to state 443
    "double constant"                 shift, and go to state 444
    "name"                            shift, and go to state 56
    "start of the string"             shift, and go to state 445
    "begin of code block"             shift, and go to state 446
    '-'                               shift, and go to state 447
    '+'                               shift, and go to state 448
    '*'                               shift, and go to state 449
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 450
    '!'                               shift, and go to state 451
    '['                               shift, and go to state 452
    '('                               shift, and go to state 453
    '$'                               shift, and go to state 454
    '@'                               shift, and go to state 455

    string_builder          go to state 456
    expr_reader             go to state 457
    expr_call_pipe          go to state 458
    name_in_namespace       go to state 459
    expr_new                go to state 460
    expr_cast               go to state 461
    expr_type_decl          go to state 462
    expr_type_info          go to state 463
    block_or_lambda         go to state 464
    expr_full_block         go to state 465
    expr_numeric_const      go to state 466
    expr_named_call         go to state 467
    expr_method_call        go to state 468
    func_addr_expr          go to state 469
    expr_field              go to state 470
    expr_call               go to state 471
    expr                    go to state 1010
    expr_mtag               go to state 473
    basic_type_declaration  go to state 474
    make_decl               go to state 475
    make_struct_decl        go to state 476
    make_tuple_call         go to state 477
    make_dim_decl           go to state 478
    make_table_decl         go to state 479
    array_comprehension     go to state 480


State 908

  616 dim_list: dim_list '[' expr ']' .

    $default  reduce using rule 616 (dim_list)


State 909

  697 bitfield_alias_declaration: "bitfield" optional_public_or_private_alias "name" $@70 "begin of code block" $@71 bitfield_alias_bits optional_comma $@72 "end of code block" .

    $default  reduce using rule 697 (bitfield_alias_declaration)


State 910

  482 tuple_type: "name" ':' type_declaration .
  684 type_declaration: type_declaration . '|' type_declaration_no_options
  685                 | type_declaration . '|' '#'

    '|'  shift, and go to state 372

    $default  reduce using rule 482 (tuple_type)


State 911

  488 variant_type: "name" ':' type_declaration .
  684 type_declaration: type_declaration . '|' type_declaration_no_options
  685                 | type_declaration . '|' '#'

    '|'  shift, and go to state 372

    $default  reduce using rule 488 (variant_type)


State 912

  478 function_argument_declaration: "$a" '(' expr ')' .

    $default  reduce using rule 478 (function_argument_declaration)


State 913

  561 variable_name_with_pos_list: "$i" '(' . expr ')'

    "struct"                          shift, and go to state 408
    "class"                           shift, and go to state 409
    "true"                            shift, and go to state 410
    "false"                           shift, and go to state 411
    "new"                             shift, and go to state 412
    "typeinfo"                        shift, and go to state 413
    "type"                            shift, and go to state 414
    "array"                           shift, and go to state 415
    "null"                            shift, and go to state 416
    "table"                           shift, and go to state 417
    "deref"                           shift, and go to state 418
    "cast"                            shift, and go to state 419
    "upcast"                          shift, and go to state 420
    "addr"                            shift, and go to state 421
    "reinterpret"                     shift, and go to state 422
    "fixed_array"                     shift, and go to state 423
    "default"                         shift, and go to state 424
    "bool"                            shift, and go to state 222
    "void"                            shift, and go to state 223
    "string"                          shift, and go to state 224
    "int"                             shift, and go to state 226
    "int2"                            shift, and go to state 227
    "int3"                            shift, and go to state 228
    "int4"                            shift, and go to state 229
    "uint"                            shift, and go to state 230
    "bitfield"                        shift, and go to state 425
    "uint2"                           shift, and go to state 232
    "uint3"                           shift, and go to state 233
    "uint4"                           shift, and go to state 234
    "float"                           shift, and go to state 235
    "float2"                          shift, and go to state 236
    "float3"                          shift, and go to state 237
    "float4"                          shift, and go to state 238
    "range"                           shift, and go to state 239
    "urange"                          shift, and go to state 240
    "range64"                         shift, and go to state 241
    "urange64"                        shift, and go to state 242
    "int64"                           shift, and go to state 244
    "uint64"                          shift, and go to state 245
    "double"                          shift, and go to state 246
    "int8"                            shift, and go to state 249
    "uint8"                           shift, and go to state 250
    "int16"                           shift, and go to state 251
    "uint16"                          shift, and go to state 252
    "tuple"                           shift, and go to state 426
    "variant"                         shift, and go to state 427
    "generator"                       shift, and go to state 428
    "++"                              shift, and go to state 429
    "--"                              shift, and go to state 430
    "::"                              shift, and go to state 55
    "$$"                              shift, and go to state 431
    "$i"                              shift, and go to state 432
    "$v"                              shift, and go to state 433
    "$b"                              shift, and go to state 434
    "$a"                              shift, and go to state 435
    "$c"                              shift, and go to state 436
    "..."                             shift, and go to state 437
    "integer constant"                shift, and go to state 438
    "long integer constant"           shift, and go to state 439
    "unsigned integer constant"       shift, and go to state 440
    "unsigned long integer constant"  shift, and go to state 441
    "unsigned int8 constant"          shift, and go to state 442
    "floating point constant"         shift, and go to state 443
    "double constant"                 shift, and go to state 444
    "name"                            shift, and go to state 56
    "start of the string"             shift, and go to state 445
    "begin of code block"             shift, and go to state 446
    '-'                               shift, and go to state 447
    '+'                               shift, and go to state 448
    '*'                               shift, and go to state 449
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 450
    '!'                               shift, and go to state 451
    '['                               shift, and go to state 452
    '('                               shift, and go to state 453
    '$'                               shift, and go to state 454
    '@'                               shift, and go to state 455

    string_builder          go to state 456
    expr_reader             go to state 457
    expr_call_pipe          go to state 458
    name_in_namespace       go to state 459
    expr_new                go to state 460
    expr_cast               go to state 461
    expr_type_decl          go to state 462
    expr_type_info          go to state 463
    block_or_lambda         go to state 464
    expr_full_block         go to state 465
    expr_numeric_const      go to state 466
    expr_named_call         go to state 467
    expr_method_call        go to state 468
    func_addr_expr          go to state 469
    expr_field              go to state 470
    expr_call               go to state 471
    expr                    go to state 1068
    expr_mtag               go to state 473
    basic_type_declaration  go to state 474
    make_decl               go to state 475
    make_struct_decl        go to state 476
    make_tuple_call         go to state 477
    make_dim_decl           go to state 478
    make_table_decl         go to state 479
    array_comprehension     go to state 480


State 914

  562 variable_name_with_pos_list: "name" "aka" . "name"

    "name"  shift, and go to state 1069


State 915

  495 copy_or_move: "<-" .

    $default  reduce using rule 495 (copy_or_move)


State 916

  563 variable_name_with_pos_list: variable_name_with_pos_list ',' . "name"
  564                            | variable_name_with_pos_list ',' . "name" "aka" "name"

    "name"  shift, and go to state 1070


State 917

  494 copy_or_move: '=' .

    $default  reduce using rule 494 (copy_or_move)


State 918

  498 variable_declaration: variable_name_with_pos_list ':' . type_declaration
  499                     | variable_name_with_pos_list ':' . type_declaration copy_or_move expr

    "type"       shift, and go to state 216
    "array"      shift, and go to state 217
    "table"      shift, and go to state 218
    "typedecl"   shift, and go to state 219
    "iterator"   shift, and go to state 220
    "smart_ptr"  shift, and go to state 221
    "bool"       shift, and go to state 222
    "void"       shift, and go to state 223
    "string"     shift, and go to state 224
    "auto"       shift, and go to state 225
    "int"        shift, and go to state 226
    "int2"       shift, and go to state 227
    "int3"       shift, and go to state 228
    "int4"       shift, and go to state 229
    "uint"       shift, and go to state 230
    "bitfield"   shift, and go to state 231
    "uint2"      shift, and go to state 232
    "uint3"      shift, and go to state 233
    "uint4"      shift, and go to state 234
    "float"      shift, and go to state 235
    "float2"     shift, and go to state 236
    "float3"     shift, and go to state 237
    "float4"     shift, and go to state 238
    "range"      shift, and go to state 239
    "urange"     shift, and go to state 240
    "range64"    shift, and go to state 241
    "urange64"   shift, and go to state 242
    "block"      shift, and go to state 243
    "int64"      shift, and go to state 244
    "uint64"     shift, and go to state 245
    "double"     shift, and go to state 246
    "function"   shift, and go to state 247
    "lambda"     shift, and go to state 248
    "int8"       shift, and go to state 249
    "uint8"      shift, and go to state 250
    "int16"      shift, and go to state 251
    "uint16"     shift, and go to state 252
    "tuple"      shift, and go to state 253
    "variant"    shift, and go to state 254
    "::"         shift, and go to state 55
    "$t"         shift, and go to state 255
    "name"       shift, and go to state 56
    '$'          shift, and go to state 256

    name_in_namespace                   go to state 257
    basic_type_declaration              go to state 258
    structure_type_declaration          go to state 259
    auto_type_declaration               go to state 260
    bitfield_type_declaration           go to state 261
    type_declaration_no_options         go to state 262
    type_declaration_no_options_no_dim  go to state 263
    type_declaration                    go to state 1071


State 919

  497 variable_declaration: variable_name_with_pos_list '&' .

    $default  reduce using rule 497 (variable_declaration)


State 920

  500 variable_declaration: variable_name_with_pos_list copy_or_move . expr

    "struct"                          shift, and go to state 408
    "class"                           shift, and go to state 409
    "true"                            shift, and go to state 410
    "false"                           shift, and go to state 411
    "new"                             shift, and go to state 412
    "typeinfo"                        shift, and go to state 413
    "type"                            shift, and go to state 414
    "array"                           shift, and go to state 415
    "null"                            shift, and go to state 416
    "table"                           shift, and go to state 417
    "deref"                           shift, and go to state 418
    "cast"                            shift, and go to state 419
    "upcast"                          shift, and go to state 420
    "addr"                            shift, and go to state 421
    "reinterpret"                     shift, and go to state 422
    "fixed_array"                     shift, and go to state 423
    "default"                         shift, and go to state 424
    "bool"                            shift, and go to state 222
    "void"                            shift, and go to state 223
    "string"                          shift, and go to state 224
    "int"                             shift, and go to state 226
    "int2"                            shift, and go to state 227
    "int3"                            shift, and go to state 228
    "int4"                            shift, and go to state 229
    "uint"                            shift, and go to state 230
    "bitfield"                        shift, and go to state 425
    "uint2"                           shift, and go to state 232
    "uint3"                           shift, and go to state 233
    "uint4"                           shift, and go to state 234
    "float"                           shift, and go to state 235
    "float2"                          shift, and go to state 236
    "float3"                          shift, and go to state 237
    "float4"                          shift, and go to state 238
    "range"                           shift, and go to state 239
    "urange"                          shift, and go to state 240
    "range64"                         shift, and go to state 241
    "urange64"                        shift, and go to state 242
    "int64"                           shift, and go to state 244
    "uint64"                          shift, and go to state 245
    "double"                          shift, and go to state 246
    "int8"                            shift, and go to state 249
    "uint8"                           shift, and go to state 250
    "int16"                           shift, and go to state 251
    "uint16"                          shift, and go to state 252
    "tuple"                           shift, and go to state 426
    "variant"                         shift, and go to state 427
    "generator"                       shift, and go to state 428
    "++"                              shift, and go to state 429
    "--"                              shift, and go to state 430
    "::"                              shift, and go to state 55
    "$$"                              shift, and go to state 431
    "$i"                              shift, and go to state 432
    "$v"                              shift, and go to state 433
    "$b"                              shift, and go to state 434
    "$a"                              shift, and go to state 435
    "$c"                              shift, and go to state 436
    "..."                             shift, and go to state 437
    "integer constant"                shift, and go to state 438
    "long integer constant"           shift, and go to state 439
    "unsigned integer constant"       shift, and go to state 440
    "unsigned long integer constant"  shift, and go to state 441
    "unsigned int8 constant"          shift, and go to state 442
    "floating point constant"         shift, and go to state 443
    "double constant"                 shift, and go to state 444
    "name"                            shift, and go to state 56
    "start of the string"             shift, and go to state 445
    "begin of code block"             shift, and go to state 446
    '-'                               shift, and go to state 447
    '+'                               shift, and go to state 448
    '*'                               shift, and go to state 449
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 450
    '!'                               shift, and go to state 451
    '['                               shift, and go to state 452
    '('                               shift, and go to state 453
    '$'                               shift, and go to state 454
    '@'                               shift, and go to state 455

    string_builder          go to state 456
    expr_reader             go to state 457
    expr_call_pipe          go to state 458
    name_in_namespace       go to state 459
    expr_new                go to state 460
    expr_cast               go to state 461
    expr_type_decl          go to state 462
    expr_type_info          go to state 463
    block_or_lambda         go to state 464
    expr_full_block         go to state 465
    expr_numeric_const      go to state 466
    expr_named_call         go to state 467
    expr_method_call        go to state 468
    func_addr_expr          go to state 469
    expr_field              go to state 470
    expr_call               go to state 471
    expr                    go to state 1072
    expr_mtag               go to state 473
    basic_type_declaration  go to state 474
    make_decl               go to state 475
    make_struct_decl        go to state 476
    make_tuple_call         go to state 477
    make_dim_decl           go to state 478
    make_table_decl         go to state 479
    array_comprehension     go to state 480


State 921

   72 expression_while_loop: "while" expr expression_block .

    $default  reduce using rule 72 (expression_while_loop)


State 922

   70 expression_for_loop: "for" '(' variable_name_with_pos_list . "in" expr_list ')' expression_block
  563 variable_name_with_pos_list: variable_name_with_pos_list . ',' "name"
  564                            | variable_name_with_pos_list . ',' "name" "aka" "name"

    "in"  shift, and go to state 1073
    ','   shift, and go to state 916


State 923

  256 expression_return: "return" "<-" expr .
  336 expr_method_call: expr . "->" "name" '(' ')'
  337                 | expr . "->" "name" '(' expr_list ')'
  347 expr_field: expr . '.' "name"
  348           | expr . '.' '.' "name"
  349           | expr . '.' "name" '(' ')'
  350           | expr . '.' "name" '(' expr_list ')'
  353           | expr . '.' $@17 error $@18
  373 expr: expr . "<<" expr
  374     | expr . ">>" expr
  375     | expr . "<<<" expr
  376     | expr . ">>>" expr
  377     | expr . '+' expr
  378     | expr . '-' expr
  379     | expr . '*' expr
  380     | expr . '/' expr
  381     | expr . '%' expr
  382     | expr . '<' expr
  383     | expr . '>' expr
  384     | expr . "==" expr
  385     | expr . "!=" expr
  386     | expr . "<=" expr
  387     | expr . ">=" expr
  388     | expr . '&' expr
  389     | expr . '|' expr
  390     | expr . '^' expr
  391     | expr . "&&" expr
  392     | expr . "||" expr
  393     | expr . "^^" expr
  394     | expr . ".." expr
  397     | expr . "++"
  398     | expr . "--"
  400     | expr . '[' expr ']'
  401     | expr . '.' '[' expr ']'
  402     | expr . "?[" expr ']'
  403     | expr . '.' "?[" expr ']'
  404     | expr . "?." "name"
  405     | expr . '.' "?." "name"
  413     | expr . "??" expr
  414     | expr . '?' expr ':' expr
  417     | expr . "is" "type" '<' $@19 type_declaration_no_options '>' $@20
  418     | expr . "is" basic_type_declaration
  419     | expr . "is" "name"
  420     | expr . "as" "name"
  423     | expr . "as" "type" '<' $@21 type_declaration '>' $@22
  424     | expr . "as" basic_type_declaration
  425     | expr . '?' "as" "name"
  428     | expr . '?' "as" "type" '<' $@23 type_declaration '>' $@24
  429     | expr . '?' "as" basic_type_declaration
  437     | expr . "<|" expr
  438     | expr . "|>" expr
  439     | expr . "|>" basic_type_declaration
  449 expr_mtag: expr . '.' "$f" '(' expr ')'
  450          | expr . "?." "$f" '(' expr ')'
  451          | expr . '.' '.' "$f" '(' expr ')'
  452          | expr . '.' "?." "$f" '(' expr ')'
  453          | expr . "as" "$f" '(' expr ')'
  454          | expr . '?' "as" "$f" '(' expr ')'
  455          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 643
    "as"   shift, and go to state 644
    "<<"   shift, and go to state 645
    ">>"   shift, and go to state 646
    "++"   shift, and go to state 647
    "--"   shift, and go to state 648
    "<="   shift, and go to state 649
    ">="   shift, and go to state 650
    "=="   shift, and go to state 651
    "!="   shift, and go to state 652
    "->"   shift, and go to state 653
    "??"   shift, and go to state 654
    "?."   shift, and go to state 655
    "?["   shift, and go to state 656
    "<|"   shift, and go to state 657
    "|>"   shift, and go to state 658
    "<<<"  shift, and go to state 659
    ">>>"  shift, and go to state 660
    "&&"   shift, and go to state 661
    "||"   shift, and go to state 662
    "^^"   shift, and go to state 663
    ".."   shift, and go to state 664
    '?'    shift, and go to state 665
    '|'    shift, and go to state 666
    '^'    shift, and go to state 667
    '&'    shift, and go to state 668
    '<'    shift, and go to state 669
    '>'    shift, and go to state 670
    '-'    shift, and go to state 671
    '+'    shift, and go to state 672
    '*'    shift, and go to state 673
    '/'    shift, and go to state 674
    '%'    shift, and go to state 675
    '.'    shift, and go to state 676
    '['    shift, and go to state 677

    $default  reduce using rule 256 (expression_return)


State 924

  260 expression_try_catch: "try" expression_block "recover" . expression_block

    "begin of code block"  shift, and go to state 323

    expression_block  go to state 1074


State 925

  243 expression_delete: "delete" "explicit" expr .
  336 expr_method_call: expr . "->" "name" '(' ')'
  337                 | expr . "->" "name" '(' expr_list ')'
  347 expr_field: expr . '.' "name"
  348           | expr . '.' '.' "name"
  349           | expr . '.' "name" '(' ')'
  350           | expr . '.' "name" '(' expr_list ')'
  353           | expr . '.' $@17 error $@18
  373 expr: expr . "<<" expr
  374     | expr . ">>" expr
  375     | expr . "<<<" expr
  376     | expr . ">>>" expr
  377     | expr . '+' expr
  378     | expr . '-' expr
  379     | expr . '*' expr
  380     | expr . '/' expr
  381     | expr . '%' expr
  382     | expr . '<' expr
  383     | expr . '>' expr
  384     | expr . "==" expr
  385     | expr . "!=" expr
  386     | expr . "<=" expr
  387     | expr . ">=" expr
  388     | expr . '&' expr
  389     | expr . '|' expr
  390     | expr . '^' expr
  391     | expr . "&&" expr
  392     | expr . "||" expr
  393     | expr . "^^" expr
  394     | expr . ".." expr
  397     | expr . "++"
  398     | expr . "--"
  400     | expr . '[' expr ']'
  401     | expr . '.' '[' expr ']'
  402     | expr . "?[" expr ']'
  403     | expr . '.' "?[" expr ']'
  404     | expr . "?." "name"
  405     | expr . '.' "?." "name"
  413     | expr . "??" expr
  414     | expr . '?' expr ':' expr
  417     | expr . "is" "type" '<' $@19 type_declaration_no_options '>' $@20
  418     | expr . "is" basic_type_declaration
  419     | expr . "is" "name"
  420     | expr . "as" "name"
  423     | expr . "as" "type" '<' $@21 type_declaration '>' $@22
  424     | expr . "as" basic_type_declaration
  425     | expr . '?' "as" "name"
  428     | expr . '?' "as" "type" '<' $@23 type_declaration '>' $@24
  429     | expr . '?' "as" basic_type_declaration
  437     | expr . "<|" expr
  438     | expr . "|>" expr
  439     | expr . "|>" basic_type_declaration
  449 expr_mtag: expr . '.' "$f" '(' expr ')'
  450          | expr . "?." "$f" '(' expr ')'
  451          | expr . '.' '.' "$f" '(' expr ')'
  452          | expr . '.' "?." "$f" '(' expr ')'
  453          | expr . "as" "$f" '(' expr ')'
  454          | expr . '?' "as" "$f" '(' expr ')'
  455          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 643
    "as"   shift, and go to state 644
    "<<"   shift, and go to state 645
    ">>"   shift, and go to state 646
    "++"   shift, and go to state 647
    "--"   shift, and go to state 648
    "<="   shift, and go to state 649
    ">="   shift, and go to state 650
    "=="   shift, and go to state 651
    "!="   shift, and go to state 652
    "->"   shift, and go to state 653
    "??"   shift, and go to state 654
    "?."   shift, and go to state 655
    "?["   shift, and go to state 656
    "<|"   shift, and go to state 657
    "|>"   shift, and go to state 658
    "<<<"  shift, and go to state 659
    ">>>"  shift, and go to state 660
    "&&"   shift, and go to state 661
    "||"   shift, and go to state 662
    "^^"   shift, and go to state 663
    ".."   shift, and go to state 664
    '?'    shift, and go to state 665
    '|'    shift, and go to state 666
    '^'    shift, and go to state 667
    '&'    shift, and go to state 668
    '<'    shift, and go to state 669
    '>'    shift, and go to state 670
    '-'    shift, and go to state 671
    '+'    shift, and go to state 672
    '*'    shift, and go to state 673
    '/'    shift, and go to state 674
    '%'    shift, and go to state 675
    '.'    shift, and go to state 676
    '['    shift, and go to state 677

    $default  reduce using rule 243 (expression_delete)


State 926

   73 expression_with: "with" expr expression_block .

    $default  reduce using rule 73 (expression_with)


State 927

   74 expression_with_alias: "assume" "name" '=' . expr

    "struct"                          shift, and go to state 408
    "class"                           shift, and go to state 409
    "true"                            shift, and go to state 410
    "false"                           shift, and go to state 411
    "new"                             shift, and go to state 412
    "typeinfo"                        shift, and go to state 413
    "type"                            shift, and go to state 414
    "array"                           shift, and go to state 415
    "null"                            shift, and go to state 416
    "table"                           shift, and go to state 417
    "deref"                           shift, and go to state 418
    "cast"                            shift, and go to state 419
    "upcast"                          shift, and go to state 420
    "addr"                            shift, and go to state 421
    "reinterpret"                     shift, and go to state 422
    "fixed_array"                     shift, and go to state 423
    "default"                         shift, and go to state 424
    "bool"                            shift, and go to state 222
    "void"                            shift, and go to state 223
    "string"                          shift, and go to state 224
    "int"                             shift, and go to state 226
    "int2"                            shift, and go to state 227
    "int3"                            shift, and go to state 228
    "int4"                            shift, and go to state 229
    "uint"                            shift, and go to state 230
    "bitfield"                        shift, and go to state 425
    "uint2"                           shift, and go to state 232
    "uint3"                           shift, and go to state 233
    "uint4"                           shift, and go to state 234
    "float"                           shift, and go to state 235
    "float2"                          shift, and go to state 236
    "float3"                          shift, and go to state 237
    "float4"                          shift, and go to state 238
    "range"                           shift, and go to state 239
    "urange"                          shift, and go to state 240
    "range64"                         shift, and go to state 241
    "urange64"                        shift, and go to state 242
    "int64"                           shift, and go to state 244
    "uint64"                          shift, and go to state 245
    "double"                          shift, and go to state 246
    "int8"                            shift, and go to state 249
    "uint8"                           shift, and go to state 250
    "int16"                           shift, and go to state 251
    "uint16"                          shift, and go to state 252
    "tuple"                           shift, and go to state 426
    "variant"                         shift, and go to state 427
    "generator"                       shift, and go to state 428
    "++"                              shift, and go to state 429
    "--"                              shift, and go to state 430
    "::"                              shift, and go to state 55
    "$$"                              shift, and go to state 431
    "$i"                              shift, and go to state 432
    "$v"                              shift, and go to state 433
    "$b"                              shift, and go to state 434
    "$a"                              shift, and go to state 435
    "$c"                              shift, and go to state 436
    "..."                             shift, and go to state 437
    "integer constant"                shift, and go to state 438
    "long integer constant"           shift, and go to state 439
    "unsigned integer constant"       shift, and go to state 440
    "unsigned long integer constant"  shift, and go to state 441
    "unsigned int8 constant"          shift, and go to state 442
    "floating point constant"         shift, and go to state 443
    "double constant"                 shift, and go to state 444
    "name"                            shift, and go to state 56
    "start of the string"             shift, and go to state 445
    "begin of code block"             shift, and go to state 446
    '-'                               shift, and go to state 447
    '+'                               shift, and go to state 448
    '*'                               shift, and go to state 449
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 450
    '!'                               shift, and go to state 451
    '['                               shift, and go to state 452
    '('                               shift, and go to state 453
    '$'                               shift, and go to state 454
    '@'                               shift, and go to state 455

    string_builder          go to state 456
    expr_reader             go to state 457
    expr_call_pipe          go to state 458
    name_in_namespace       go to state 459
    expr_new                go to state 460
    expr_cast               go to state 461
    expr_type_decl          go to state 462
    expr_type_info          go to state 463
    block_or_lambda         go to state 464
    expr_full_block         go to state 465
    expr_numeric_const      go to state 466
    expr_named_call         go to state 467
    expr_method_call        go to state 468
    func_addr_expr          go to state 469
    expr_field              go to state 470
    expr_call               go to state 471
    expr                    go to state 1075
    expr_mtag               go to state 473
    basic_type_declaration  go to state 474
    make_decl               go to state 475
    make_struct_decl        go to state 476
    make_tuple_call         go to state 477
    make_dim_decl           go to state 478
    make_table_decl         go to state 479
    array_comprehension     go to state 480


State 928

   51 expression_label: "label" "integer constant" ':' .

    $default  reduce using rule 51 (expression_label)


State 929

   52 expression_goto: "goto" "label" "integer constant" .

    $default  reduce using rule 52 (expression_goto)


State 930

  258 expression_yield_no_pipe: "yield" "<-" expr .
  336 expr_method_call: expr . "->" "name" '(' ')'
  337                 | expr . "->" "name" '(' expr_list ')'
  347 expr_field: expr . '.' "name"
  348           | expr . '.' '.' "name"
  349           | expr . '.' "name" '(' ')'
  350           | expr . '.' "name" '(' expr_list ')'
  353           | expr . '.' $@17 error $@18
  373 expr: expr . "<<" expr
  374     | expr . ">>" expr
  375     | expr . "<<<" expr
  376     | expr . ">>>" expr
  377     | expr . '+' expr
  378     | expr . '-' expr
  379     | expr . '*' expr
  380     | expr . '/' expr
  381     | expr . '%' expr
  382     | expr . '<' expr
  383     | expr . '>' expr
  384     | expr . "==" expr
  385     | expr . "!=" expr
  386     | expr . "<=" expr
  387     | expr . ">=" expr
  388     | expr . '&' expr
  389     | expr . '|' expr
  390     | expr . '^' expr
  391     | expr . "&&" expr
  392     | expr . "||" expr
  393     | expr . "^^" expr
  394     | expr . ".." expr
  397     | expr . "++"
  398     | expr . "--"
  400     | expr . '[' expr ']'
  401     | expr . '.' '[' expr ']'
  402     | expr . "?[" expr ']'
  403     | expr . '.' "?[" expr ']'
  404     | expr . "?." "name"
  405     | expr . '.' "?." "name"
  413     | expr . "??" expr
  414     | expr . '?' expr ':' expr
  417     | expr . "is" "type" '<' $@19 type_declaration_no_options '>' $@20
  418     | expr . "is" basic_type_declaration
  419     | expr . "is" "name"
  420     | expr . "as" "name"
  423     | expr . "as" "type" '<' $@21 type_declaration '>' $@22
  424     | expr . "as" basic_type_declaration
  425     | expr . '?' "as" "name"
  428     | expr . '?' "as" "type" '<' $@23 type_declaration '>' $@24
  429     | expr . '?' "as" basic_type_declaration
  437     | expr . "<|" expr
  438     | expr . "|>" expr
  439     | expr . "|>" basic_type_declaration
  449 expr_mtag: expr . '.' "$f" '(' expr ')'
  450          | expr . "?." "$f" '(' expr ')'
  451          | expr . '.' '.' "$f" '(' expr ')'
  452          | expr . '.' "?." "$f" '(' expr ')'
  453          | expr . "as" "$f" '(' expr ')'
  454          | expr . '?' "as" "$f" '(' expr ')'
  455          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 643
    "as"   shift, and go to state 644
    "<<"   shift, and go to state 645
    ">>"   shift, and go to state 646
    "++"   shift, and go to state 647
    "--"   shift, and go to state 648
    "<="   shift, and go to state 649
    ">="   shift, and go to state 650
    "=="   shift, and go to state 651
    "!="   shift, and go to state 652
    "->"   shift, and go to state 653
    "??"   shift, and go to state 654
    "?."   shift, and go to state 655
    "?["   shift, and go to state 656
    "<|"   shift, and go to state 657
    "|>"   shift, and go to state 658
    "<<<"  shift, and go to state 659
    ">>>"  shift, and go to state 660
    "&&"   shift, and go to state 661
    "||"   shift, and go to state 662
    "^^"   shift, and go to state 663
    ".."   shift, and go to state 664
    '?'    shift, and go to state 665
    '|'    shift, and go to state 666
    '^'    shift, and go to state 667
    '&'    shift, and go to state 668
    '<'    shift, and go to state 669
    '>'    shift, and go to state 670
    '-'    shift, and go to state 671
    '+'    shift, and go to state 672
    '*'    shift, and go to state 673
    '/'    shift, and go to state 674
    '%'    shift, and go to state 675
    '.'    shift, and go to state 676
    '['    shift, and go to state 677

    $default  reduce using rule 258 (expression_yield_no_pipe)


State 931

  212 expression_block: "begin of code block" expressions "end of code block" "finally" "begin of code block" . expressions "end of code block"

    $default  reduce using rule 232 (expressions)

    expressions  go to state 1076


State 932

   68 expression_if_then_else: if_or_static_if '(' expr . ')' expression_block expression_else
  336 expr_method_call: expr . "->" "name" '(' ')'
  337                 | expr . "->" "name" '(' expr_list ')'
  347 expr_field: expr . '.' "name"
  348           | expr . '.' '.' "name"
  349           | expr . '.' "name" '(' ')'
  350           | expr . '.' "name" '(' expr_list ')'
  353           | expr . '.' $@17 error $@18
  373 expr: expr . "<<" expr
  374     | expr . ">>" expr
  375     | expr . "<<<" expr
  376     | expr . ">>>" expr
  377     | expr . '+' expr
  378     | expr . '-' expr
  379     | expr . '*' expr
  380     | expr . '/' expr
  381     | expr . '%' expr
  382     | expr . '<' expr
  383     | expr . '>' expr
  384     | expr . "==" expr
  385     | expr . "!=" expr
  386     | expr . "<=" expr
  387     | expr . ">=" expr
  388     | expr . '&' expr
  389     | expr . '|' expr
  390     | expr . '^' expr
  391     | expr . "&&" expr
  392     | expr . "||" expr
  393     | expr . "^^" expr
  394     | expr . ".." expr
  397     | expr . "++"
  398     | expr . "--"
  400     | expr . '[' expr ']'
  401     | expr . '.' '[' expr ']'
  402     | expr . "?[" expr ']'
  403     | expr . '.' "?[" expr ']'
  404     | expr . "?." "name"
  405     | expr . '.' "?." "name"
  413     | expr . "??" expr
  414     | expr . '?' expr ':' expr
  417     | expr . "is" "type" '<' $@19 type_declaration_no_options '>' $@20
  418     | expr . "is" basic_type_declaration
  419     | expr . "is" "name"
  420     | expr . "as" "name"
  423     | expr . "as" "type" '<' $@21 type_declaration '>' $@22
  424     | expr . "as" basic_type_declaration
  425     | expr . '?' "as" "name"
  428     | expr . '?' "as" "type" '<' $@23 type_declaration '>' $@24
  429     | expr . '?' "as" basic_type_declaration
  437     | expr . "<|" expr
  438     | expr . "|>" expr
  439     | expr . "|>" basic_type_declaration
  449 expr_mtag: expr . '.' "$f" '(' expr ')'
  450          | expr . "?." "$f" '(' expr ')'
  451          | expr . '.' '.' "$f" '(' expr ')'
  452          | expr . '.' "?." "$f" '(' expr ')'
  453          | expr . "as" "$f" '(' expr ')'
  454          | expr . '?' "as" "$f" '(' expr ')'
  455          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 643
    "as"   shift, and go to state 644
    "<<"   shift, and go to state 645
    ">>"   shift, and go to state 646
    "++"   shift, and go to state 647
    "--"   shift, and go to state 648
    "<="   shift, and go to state 649
    ">="   shift, and go to state 650
    "=="   shift, and go to state 651
    "!="   shift, and go to state 652
    "->"   shift, and go to state 653
    "??"   shift, and go to state 654
    "?."   shift, and go to state 655
    "?["   shift, and go to state 656
    "<|"   shift, and go to state 657
    "|>"   shift, and go to state 658
    "<<<"  shift, and go to state 659
    ">>>"  shift, and go to state 660
    "&&"   shift, and go to state 661
    "||"   shift, and go to state 662
    "^^"   shift, and go to state 663
    ".."   shift, and go to state 664
    '?'    shift, and go to state 665
    '|'    shift, and go to state 666
    '^'    shift, and go to state 667
    '&'    shift, and go to state 668
    '<'    shift, and go to state 669
    '>'    shift, and go to state 670
    '-'    shift, and go to state 671
    '+'    shift, and go to state 672
    '*'    shift, and go to state 673
    '/'    shift, and go to state 674
    '%'    shift, and go to state 675
    '.'    shift, and go to state 676
    '['    shift, and go to state 677
    ')'    shift, and go to state 1077


State 933

   69 expression_if_then_else: expression_if_one_liner "if" '(' . expr ')' expression_else_one_liner "end of expression"

    "struct"                          shift, and go to state 408
    "class"                           shift, and go to state 409
    "true"                            shift, and go to state 410
    "false"                           shift, and go to state 411
    "new"                             shift, and go to state 412
    "typeinfo"                        shift, and go to state 413
    "type"                            shift, and go to state 414
    "array"                           shift, and go to state 415
    "null"                            shift, and go to state 416
    "table"                           shift, and go to state 417
    "deref"                           shift, and go to state 418
    "cast"                            shift, and go to state 419
    "upcast"                          shift, and go to state 420
    "addr"                            shift, and go to state 421
    "reinterpret"                     shift, and go to state 422
    "fixed_array"                     shift, and go to state 423
    "default"                         shift, and go to state 424
    "bool"                            shift, and go to state 222
    "void"                            shift, and go to state 223
    "string"                          shift, and go to state 224
    "int"                             shift, and go to state 226
    "int2"                            shift, and go to state 227
    "int3"                            shift, and go to state 228
    "int4"                            shift, and go to state 229
    "uint"                            shift, and go to state 230
    "bitfield"                        shift, and go to state 425
    "uint2"                           shift, and go to state 232
    "uint3"                           shift, and go to state 233
    "uint4"                           shift, and go to state 234
    "float"                           shift, and go to state 235
    "float2"                          shift, and go to state 236
    "float3"                          shift, and go to state 237
    "float4"                          shift, and go to state 238
    "range"                           shift, and go to state 239
    "urange"                          shift, and go to state 240
    "range64"                         shift, and go to state 241
    "urange64"                        shift, and go to state 242
    "int64"                           shift, and go to state 244
    "uint64"                          shift, and go to state 245
    "double"                          shift, and go to state 246
    "int8"                            shift, and go to state 249
    "uint8"                           shift, and go to state 250
    "int16"                           shift, and go to state 251
    "uint16"                          shift, and go to state 252
    "tuple"                           shift, and go to state 426
    "variant"                         shift, and go to state 427
    "generator"                       shift, and go to state 428
    "++"                              shift, and go to state 429
    "--"                              shift, and go to state 430
    "::"                              shift, and go to state 55
    "$$"                              shift, and go to state 431
    "$i"                              shift, and go to state 432
    "$v"                              shift, and go to state 433
    "$b"                              shift, and go to state 434
    "$a"                              shift, and go to state 435
    "$c"                              shift, and go to state 436
    "..."                             shift, and go to state 437
    "integer constant"                shift, and go to state 438
    "long integer constant"           shift, and go to state 439
    "unsigned integer constant"       shift, and go to state 440
    "unsigned long integer constant"  shift, and go to state 441
    "unsigned int8 constant"          shift, and go to state 442
    "floating point constant"         shift, and go to state 443
    "double constant"                 shift, and go to state 444
    "name"                            shift, and go to state 56
    "start of the string"             shift, and go to state 445
    "begin of code block"             shift, and go to state 446
    '-'                               shift, and go to state 447
    '+'                               shift, and go to state 448
    '*'                               shift, and go to state 449
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 450
    '!'                               shift, and go to state 451
    '['                               shift, and go to state 452
    '('                               shift, and go to state 453
    '$'                               shift, and go to state 454
    '@'                               shift, and go to state 455

    string_builder          go to state 456
    expr_reader             go to state 457
    expr_call_pipe          go to state 458
    name_in_namespace       go to state 459
    expr_new                go to state 460
    expr_cast               go to state 461
    expr_type_decl          go to state 462
    expr_type_info          go to state 463
    block_or_lambda         go to state 464
    expr_full_block         go to state 465
    expr_numeric_const      go to state 466
    expr_named_call         go to state 467
    expr_method_call        go to state 468
    func_addr_expr          go to state 469
    expr_field              go to state 470
    expr_call               go to state 471
    expr                    go to state 1078
    expr_mtag               go to state 473
    basic_type_declaration  go to state 474
    make_decl               go to state 475
    make_struct_decl        go to state 476
    make_tuple_call         go to state 477
    make_dim_decl           go to state 478
    make_table_decl         go to state 479
    array_comprehension     go to state 480


State 934

  270 tuple_expansion_variable_declaration: '(' . tuple_expansion ')' ':' type_declaration_no_options copy_or_move_or_clone expr "end of expression"
  271                                     | '(' . tuple_expansion ')' optional_ref copy_or_move_or_clone expr "end of expression"

    "name"  shift, and go to state 1079

    tuple_expansion  go to state 1080


State 935

  273 expression_let: kwd_let optional_in_scope tuple_expansion_variable_declaration .

    $default  reduce using rule 273 (expression_let)


State 936

  272 expression_let: kwd_let optional_in_scope let_variable_declaration .

    $default  reduce using rule 272 (expression_let)


State 937

  325 expr_assign: expr "+=" expr .
  336 expr_method_call: expr . "->" "name" '(' ')'
  337                 | expr . "->" "name" '(' expr_list ')'
  347 expr_field: expr . '.' "name"
  348           | expr . '.' '.' "name"
  349           | expr . '.' "name" '(' ')'
  350           | expr . '.' "name" '(' expr_list ')'
  353           | expr . '.' $@17 error $@18
  373 expr: expr . "<<" expr
  374     | expr . ">>" expr
  375     | expr . "<<<" expr
  376     | expr . ">>>" expr
  377     | expr . '+' expr
  378     | expr . '-' expr
  379     | expr . '*' expr
  380     | expr . '/' expr
  381     | expr . '%' expr
  382     | expr . '<' expr
  383     | expr . '>' expr
  384     | expr . "==" expr
  385     | expr . "!=" expr
  386     | expr . "<=" expr
  387     | expr . ">=" expr
  388     | expr . '&' expr
  389     | expr . '|' expr
  390     | expr . '^' expr
  391     | expr . "&&" expr
  392     | expr . "||" expr
  393     | expr . "^^" expr
  394     | expr . ".." expr
  397     | expr . "++"
  398     | expr . "--"
  400     | expr . '[' expr ']'
  401     | expr . '.' '[' expr ']'
  402     | expr . "?[" expr ']'
  403     | expr . '.' "?[" expr ']'
  404     | expr . "?." "name"
  405     | expr . '.' "?." "name"
  413     | expr . "??" expr
  414     | expr . '?' expr ':' expr
  417     | expr . "is" "type" '<' $@19 type_declaration_no_options '>' $@20
  418     | expr . "is" basic_type_declaration
  419     | expr . "is" "name"
  420     | expr . "as" "name"
  423     | expr . "as" "type" '<' $@21 type_declaration '>' $@22
  424     | expr . "as" basic_type_declaration
  425     | expr . '?' "as" "name"
  428     | expr . '?' "as" "type" '<' $@23 type_declaration '>' $@24
  429     | expr . '?' "as" basic_type_declaration
  437     | expr . "<|" expr
  438     | expr . "|>" expr
  439     | expr . "|>" basic_type_declaration
  449 expr_mtag: expr . '.' "$f" '(' expr ')'
  450          | expr . "?." "$f" '(' expr ')'
  451          | expr . '.' '.' "$f" '(' expr ')'
  452          | expr . '.' "?." "$f" '(' expr ')'
  453          | expr . "as" "$f" '(' expr ')'
  454          | expr . '?' "as" "$f" '(' expr ')'
  455          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 643
    "as"   shift, and go to state 644
    "<<"   shift, and go to state 645
    ">>"   shift, and go to state 646
    "++"   shift, and go to state 647
    "--"   shift, and go to state 648
    "<="   shift, and go to state 649
    ">="   shift, and go to state 650
    "=="   shift, and go to state 651
    "!="   shift, and go to state 652
    "->"   shift, and go to state 653
    "??"   shift, and go to state 654
    "?."   shift, and go to state 655
    "?["   shift, and go to state 656
    "<|"   shift, and go to state 657
    "|>"   shift, and go to state 658
    "<<<"  shift, and go to state 659
    ">>>"  shift, and go to state 660
    "&&"   shift, and go to state 661
    "||"   shift, and go to state 662
    "^^"   shift, and go to state 663
    ".."   shift, and go to state 664
    '?'    shift, and go to state 665
    '|'    shift, and go to state 666
    '^'    shift, and go to state 667
    '&'    shift, and go to state 668
    '<'    shift, and go to state 669
    '>'    shift, and go to state 670
    '-'    shift, and go to state 671
    '+'    shift, and go to state 672
    '*'    shift, and go to state 673
    '/'    shift, and go to state 674
    '%'    shift, and go to state 675
    '.'    shift, and go to state 676
    '['    shift, and go to state 677

    $default  reduce using rule 325 (expr_assign)


State 938

  326 expr_assign: expr "-=" expr .
  336 expr_method_call: expr . "->" "name" '(' ')'
  337                 | expr . "->" "name" '(' expr_list ')'
  347 expr_field: expr . '.' "name"
  348           | expr . '.' '.' "name"
  349           | expr . '.' "name" '(' ')'
  350           | expr . '.' "name" '(' expr_list ')'
  353           | expr . '.' $@17 error $@18
  373 expr: expr . "<<" expr
  374     | expr . ">>" expr
  375     | expr . "<<<" expr
  376     | expr . ">>>" expr
  377     | expr . '+' expr
  378     | expr . '-' expr
  379     | expr . '*' expr
  380     | expr . '/' expr
  381     | expr . '%' expr
  382     | expr . '<' expr
  383     | expr . '>' expr
  384     | expr . "==" expr
  385     | expr . "!=" expr
  386     | expr . "<=" expr
  387     | expr . ">=" expr
  388     | expr . '&' expr
  389     | expr . '|' expr
  390     | expr . '^' expr
  391     | expr . "&&" expr
  392     | expr . "||" expr
  393     | expr . "^^" expr
  394     | expr . ".." expr
  397     | expr . "++"
  398     | expr . "--"
  400     | expr . '[' expr ']'
  401     | expr . '.' '[' expr ']'
  402     | expr . "?[" expr ']'
  403     | expr . '.' "?[" expr ']'
  404     | expr . "?." "name"
  405     | expr . '.' "?." "name"
  413     | expr . "??" expr
  414     | expr . '?' expr ':' expr
  417     | expr . "is" "type" '<' $@19 type_declaration_no_options '>' $@20
  418     | expr . "is" basic_type_declaration
  419     | expr . "is" "name"
  420     | expr . "as" "name"
  423     | expr . "as" "type" '<' $@21 type_declaration '>' $@22
  424     | expr . "as" basic_type_declaration
  425     | expr . '?' "as" "name"
  428     | expr . '?' "as" "type" '<' $@23 type_declaration '>' $@24
  429     | expr . '?' "as" basic_type_declaration
  437     | expr . "<|" expr
  438     | expr . "|>" expr
  439     | expr . "|>" basic_type_declaration
  449 expr_mtag: expr . '.' "$f" '(' expr ')'
  450          | expr . "?." "$f" '(' expr ')'
  451          | expr . '.' '.' "$f" '(' expr ')'
  452          | expr . '.' "?." "$f" '(' expr ')'
  453          | expr . "as" "$f" '(' expr ')'
  454          | expr . '?' "as" "$f" '(' expr ')'
  455          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 643
    "as"   shift, and go to state 644
    "<<"   shift, and go to state 645
    ">>"   shift, and go to state 646
    "++"   shift, and go to state 647
    "--"   shift, and go to state 648
    "<="   shift, and go to state 649
    ">="   shift, and go to state 650
    "=="   shift, and go to state 651
    "!="   shift, and go to state 652
    "->"   shift, and go to state 653
    "??"   shift, and go to state 654
    "?."   shift, and go to state 655
    "?["   shift, and go to state 656
    "<|"   shift, and go to state 657
    "|>"   shift, and go to state 658
    "<<<"  shift, and go to state 659
    ">>>"  shift, and go to state 660
    "&&"   shift, and go to state 661
    "||"   shift, and go to state 662
    "^^"   shift, and go to state 663
    ".."   shift, and go to state 664
    '?'    shift, and go to state 665
    '|'    shift, and go to state 666
    '^'    shift, and go to state 667
    '&'    shift, and go to state 668
    '<'    shift, and go to state 669
    '>'    shift, and go to state 670
    '-'    shift, and go to state 671
    '+'    shift, and go to state 672
    '*'    shift, and go to state 673
    '/'    shift, and go to state 674
    '%'    shift, and go to state 675
    '.'    shift, and go to state 676
    '['    shift, and go to state 677

    $default  reduce using rule 326 (expr_assign)


State 939

  328 expr_assign: expr "/=" expr .
  336 expr_method_call: expr . "->" "name" '(' ')'
  337                 | expr . "->" "name" '(' expr_list ')'
  347 expr_field: expr . '.' "name"
  348           | expr . '.' '.' "name"
  349           | expr . '.' "name" '(' ')'
  350           | expr . '.' "name" '(' expr_list ')'
  353           | expr . '.' $@17 error $@18
  373 expr: expr . "<<" expr
  374     | expr . ">>" expr
  375     | expr . "<<<" expr
  376     | expr . ">>>" expr
  377     | expr . '+' expr
  378     | expr . '-' expr
  379     | expr . '*' expr
  380     | expr . '/' expr
  381     | expr . '%' expr
  382     | expr . '<' expr
  383     | expr . '>' expr
  384     | expr . "==" expr
  385     | expr . "!=" expr
  386     | expr . "<=" expr
  387     | expr . ">=" expr
  388     | expr . '&' expr
  389     | expr . '|' expr
  390     | expr . '^' expr
  391     | expr . "&&" expr
  392     | expr . "||" expr
  393     | expr . "^^" expr
  394     | expr . ".." expr
  397     | expr . "++"
  398     | expr . "--"
  400     | expr . '[' expr ']'
  401     | expr . '.' '[' expr ']'
  402     | expr . "?[" expr ']'
  403     | expr . '.' "?[" expr ']'
  404     | expr . "?." "name"
  405     | expr . '.' "?." "name"
  413     | expr . "??" expr
  414     | expr . '?' expr ':' expr
  417     | expr . "is" "type" '<' $@19 type_declaration_no_options '>' $@20
  418     | expr . "is" basic_type_declaration
  419     | expr . "is" "name"
  420     | expr . "as" "name"
  423     | expr . "as" "type" '<' $@21 type_declaration '>' $@22
  424     | expr . "as" basic_type_declaration
  425     | expr . '?' "as" "name"
  428     | expr . '?' "as" "type" '<' $@23 type_declaration '>' $@24
  429     | expr . '?' "as" basic_type_declaration
  437     | expr . "<|" expr
  438     | expr . "|>" expr
  439     | expr . "|>" basic_type_declaration
  449 expr_mtag: expr . '.' "$f" '(' expr ')'
  450          | expr . "?." "$f" '(' expr ')'
  451          | expr . '.' '.' "$f" '(' expr ')'
  452          | expr . '.' "?." "$f" '(' expr ')'
  453          | expr . "as" "$f" '(' expr ')'
  454          | expr . '?' "as" "$f" '(' expr ')'
  455          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 643
    "as"   shift, and go to state 644
    "<<"   shift, and go to state 645
    ">>"   shift, and go to state 646
    "++"   shift, and go to state 647
    "--"   shift, and go to state 648
    "<="   shift, and go to state 649
    ">="   shift, and go to state 650
    "=="   shift, and go to state 651
    "!="   shift, and go to state 652
    "->"   shift, and go to state 653
    "??"   shift, and go to state 654
    "?."   shift, and go to state 655
    "?["   shift, and go to state 656
    "<|"   shift, and go to state 657
    "|>"   shift, and go to state 658
    "<<<"  shift, and go to state 659
    ">>>"  shift, and go to state 660
    "&&"   shift, and go to state 661
    "||"   shift, and go to state 662
    "^^"   shift, and go to state 663
    ".."   shift, and go to state 664
    '?'    shift, and go to state 665
    '|'    shift, and go to state 666
    '^'    shift, and go to state 667
    '&'    shift, and go to state 668
    '<'    shift, and go to state 669
    '>'    shift, and go to state 670
    '-'    shift, and go to state 671
    '+'    shift, and go to state 672
    '*'    shift, and go to state 673
    '/'    shift, and go to state 674
    '%'    shift, and go to state 675
    '.'    shift, and go to state 676
    '['    shift, and go to state 677

    $default  reduce using rule 328 (expr_assign)


State 940

  327 expr_assign: expr "*=" expr .
  336 expr_method_call: expr . "->" "name" '(' ')'
  337                 | expr . "->" "name" '(' expr_list ')'
  347 expr_field: expr . '.' "name"
  348           | expr . '.' '.' "name"
  349           | expr . '.' "name" '(' ')'
  350           | expr . '.' "name" '(' expr_list ')'
  353           | expr . '.' $@17 error $@18
  373 expr: expr . "<<" expr
  374     | expr . ">>" expr
  375     | expr . "<<<" expr
  376     | expr . ">>>" expr
  377     | expr . '+' expr
  378     | expr . '-' expr
  379     | expr . '*' expr
  380     | expr . '/' expr
  381     | expr . '%' expr
  382     | expr . '<' expr
  383     | expr . '>' expr
  384     | expr . "==" expr
  385     | expr . "!=" expr
  386     | expr . "<=" expr
  387     | expr . ">=" expr
  388     | expr . '&' expr
  389     | expr . '|' expr
  390     | expr . '^' expr
  391     | expr . "&&" expr
  392     | expr . "||" expr
  393     | expr . "^^" expr
  394     | expr . ".." expr
  397     | expr . "++"
  398     | expr . "--"
  400     | expr . '[' expr ']'
  401     | expr . '.' '[' expr ']'
  402     | expr . "?[" expr ']'
  403     | expr . '.' "?[" expr ']'
  404     | expr . "?." "name"
  405     | expr . '.' "?." "name"
  413     | expr . "??" expr
  414     | expr . '?' expr ':' expr
  417     | expr . "is" "type" '<' $@19 type_declaration_no_options '>' $@20
  418     | expr . "is" basic_type_declaration
  419     | expr . "is" "name"
  420     | expr . "as" "name"
  423     | expr . "as" "type" '<' $@21 type_declaration '>' $@22
  424     | expr . "as" basic_type_declaration
  425     | expr . '?' "as" "name"
  428     | expr . '?' "as" "type" '<' $@23 type_declaration '>' $@24
  429     | expr . '?' "as" basic_type_declaration
  437     | expr . "<|" expr
  438     | expr . "|>" expr
  439     | expr . "|>" basic_type_declaration
  449 expr_mtag: expr . '.' "$f" '(' expr ')'
  450          | expr . "?." "$f" '(' expr ')'
  451          | expr . '.' '.' "$f" '(' expr ')'
  452          | expr . '.' "?." "$f" '(' expr ')'
  453          | expr . "as" "$f" '(' expr ')'
  454          | expr . '?' "as" "$f" '(' expr ')'
  455          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 643
    "as"   shift, and go to state 644
    "<<"   shift, and go to state 645
    ">>"   shift, and go to state 646
    "++"   shift, and go to state 647
    "--"   shift, and go to state 648
    "<="   shift, and go to state 649
    ">="   shift, and go to state 650
    "=="   shift, and go to state 651
    "!="   shift, and go to state 652
    "->"   shift, and go to state 653
    "??"   shift, and go to state 654
    "?."   shift, and go to state 655
    "?["   shift, and go to state 656
    "<|"   shift, and go to state 657
    "|>"   shift, and go to state 658
    "<<<"  shift, and go to state 659
    ">>>"  shift, and go to state 660
    "&&"   shift, and go to state 661
    "||"   shift, and go to state 662
    "^^"   shift, and go to state 663
    ".."   shift, and go to state 664
    '?'    shift, and go to state 665
    '|'    shift, and go to state 666
    '^'    shift, and go to state 667
    '&'    shift, and go to state 668
    '<'    shift, and go to state 669
    '>'    shift, and go to state 670
    '-'    shift, and go to state 671
    '+'    shift, and go to state 672
    '*'    shift, and go to state 673
    '/'    shift, and go to state 674
    '%'    shift, and go to state 675
    '.'    shift, and go to state 676
    '['    shift, and go to state 677

    $default  reduce using rule 327 (expr_assign)


State 941

  329 expr_assign: expr "%=" expr .
  336 expr_method_call: expr . "->" "name" '(' ')'
  337                 | expr . "->" "name" '(' expr_list ')'
  347 expr_field: expr . '.' "name"
  348           | expr . '.' '.' "name"
  349           | expr . '.' "name" '(' ')'
  350           | expr . '.' "name" '(' expr_list ')'
  353           | expr . '.' $@17 error $@18
  373 expr: expr . "<<" expr
  374     | expr . ">>" expr
  375     | expr . "<<<" expr
  376     | expr . ">>>" expr
  377     | expr . '+' expr
  378     | expr . '-' expr
  379     | expr . '*' expr
  380     | expr . '/' expr
  381     | expr . '%' expr
  382     | expr . '<' expr
  383     | expr . '>' expr
  384     | expr . "==" expr
  385     | expr . "!=" expr
  386     | expr . "<=" expr
  387     | expr . ">=" expr
  388     | expr . '&' expr
  389     | expr . '|' expr
  390     | expr . '^' expr
  391     | expr . "&&" expr
  392     | expr . "||" expr
  393     | expr . "^^" expr
  394     | expr . ".." expr
  397     | expr . "++"
  398     | expr . "--"
  400     | expr . '[' expr ']'
  401     | expr . '.' '[' expr ']'
  402     | expr . "?[" expr ']'
  403     | expr . '.' "?[" expr ']'
  404     | expr . "?." "name"
  405     | expr . '.' "?." "name"
  413     | expr . "??" expr
  414     | expr . '?' expr ':' expr
  417     | expr . "is" "type" '<' $@19 type_declaration_no_options '>' $@20
  418     | expr . "is" basic_type_declaration
  419     | expr . "is" "name"
  420     | expr . "as" "name"
  423     | expr . "as" "type" '<' $@21 type_declaration '>' $@22
  424     | expr . "as" basic_type_declaration
  425     | expr . '?' "as" "name"
  428     | expr . '?' "as" "type" '<' $@23 type_declaration '>' $@24
  429     | expr . '?' "as" basic_type_declaration
  437     | expr . "<|" expr
  438     | expr . "|>" expr
  439     | expr . "|>" basic_type_declaration
  449 expr_mtag: expr . '.' "$f" '(' expr ')'
  450          | expr . "?." "$f" '(' expr ')'
  451          | expr . '.' '.' "$f" '(' expr ')'
  452          | expr . '.' "?." "$f" '(' expr ')'
  453          | expr . "as" "$f" '(' expr ')'
  454          | expr . '?' "as" "$f" '(' expr ')'
  455          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 643
    "as"   shift, and go to state 644
    "<<"   shift, and go to state 645
    ">>"   shift, and go to state 646
    "++"   shift, and go to state 647
    "--"   shift, and go to state 648
    "<="   shift, and go to state 649
    ">="   shift, and go to state 650
    "=="   shift, and go to state 651
    "!="   shift, and go to state 652
    "->"   shift, and go to state 653
    "??"   shift, and go to state 654
    "?."   shift, and go to state 655
    "?["   shift, and go to state 656
    "<|"   shift, and go to state 657
    "|>"   shift, and go to state 658
    "<<<"  shift, and go to state 659
    ">>>"  shift, and go to state 660
    "&&"   shift, and go to state 661
    "||"   shift, and go to state 662
    "^^"   shift, and go to state 663
    ".."   shift, and go to state 664
    '?'    shift, and go to state 665
    '|'    shift, and go to state 666
    '^'    shift, and go to state 667
    '&'    shift, and go to state 668
    '<'    shift, and go to state 669
    '>'    shift, and go to state 670
    '-'    shift, and go to state 671
    '+'    shift, and go to state 672
    '*'    shift, and go to state 673
    '/'    shift, and go to state 674
    '%'    shift, and go to state 675
    '.'    shift, and go to state 676
    '['    shift, and go to state 677

    $default  reduce using rule 329 (expr_assign)


State 942

  319 expr_assign: expr "&=" expr .
  336 expr_method_call: expr . "->" "name" '(' ')'
  337                 | expr . "->" "name" '(' expr_list ')'
  347 expr_field: expr . '.' "name"
  348           | expr . '.' '.' "name"
  349           | expr . '.' "name" '(' ')'
  350           | expr . '.' "name" '(' expr_list ')'
  353           | expr . '.' $@17 error $@18
  373 expr: expr . "<<" expr
  374     | expr . ">>" expr
  375     | expr . "<<<" expr
  376     | expr . ">>>" expr
  377     | expr . '+' expr
  378     | expr . '-' expr
  379     | expr . '*' expr
  380     | expr . '/' expr
  381     | expr . '%' expr
  382     | expr . '<' expr
  383     | expr . '>' expr
  384     | expr . "==" expr
  385     | expr . "!=" expr
  386     | expr . "<=" expr
  387     | expr . ">=" expr
  388     | expr . '&' expr
  389     | expr . '|' expr
  390     | expr . '^' expr
  391     | expr . "&&" expr
  392     | expr . "||" expr
  393     | expr . "^^" expr
  394     | expr . ".." expr
  397     | expr . "++"
  398     | expr . "--"
  400     | expr . '[' expr ']'
  401     | expr . '.' '[' expr ']'
  402     | expr . "?[" expr ']'
  403     | expr . '.' "?[" expr ']'
  404     | expr . "?." "name"
  405     | expr . '.' "?." "name"
  413     | expr . "??" expr
  414     | expr . '?' expr ':' expr
  417     | expr . "is" "type" '<' $@19 type_declaration_no_options '>' $@20
  418     | expr . "is" basic_type_declaration
  419     | expr . "is" "name"
  420     | expr . "as" "name"
  423     | expr . "as" "type" '<' $@21 type_declaration '>' $@22
  424     | expr . "as" basic_type_declaration
  425     | expr . '?' "as" "name"
  428     | expr . '?' "as" "type" '<' $@23 type_declaration '>' $@24
  429     | expr . '?' "as" basic_type_declaration
  437     | expr . "<|" expr
  438     | expr . "|>" expr
  439     | expr . "|>" basic_type_declaration
  449 expr_mtag: expr . '.' "$f" '(' expr ')'
  450          | expr . "?." "$f" '(' expr ')'
  451          | expr . '.' '.' "$f" '(' expr ')'
  452          | expr . '.' "?." "$f" '(' expr ')'
  453          | expr . "as" "$f" '(' expr ')'
  454          | expr . '?' "as" "$f" '(' expr ')'
  455          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 643
    "as"   shift, and go to state 644
    "<<"   shift, and go to state 645
    ">>"   shift, and go to state 646
    "++"   shift, and go to state 647
    "--"   shift, and go to state 648
    "<="   shift, and go to state 649
    ">="   shift, and go to state 650
    "=="   shift, and go to state 651
    "!="   shift, and go to state 652
    "->"   shift, and go to state 653
    "??"   shift, and go to state 654
    "?."   shift, and go to state 655
    "?["   shift, and go to state 656
    "<|"   shift, and go to state 657
    "|>"   shift, and go to state 658
    "<<<"  shift, and go to state 659
    ">>>"  shift, and go to state 660
    "&&"   shift, and go to state 661
    "||"   shift, and go to state 662
    "^^"   shift, and go to state 663
    ".."   shift, and go to state 664
    '?'    shift, and go to state 665
    '|'    shift, and go to state 666
    '^'    shift, and go to state 667
    '&'    shift, and go to state 668
    '<'    shift, and go to state 669
    '>'    shift, and go to state 670
    '-'    shift, and go to state 671
    '+'    shift, and go to state 672
    '*'    shift, and go to state 673
    '/'    shift, and go to state 674
    '%'    shift, and go to state 675
    '.'    shift, and go to state 676
    '['    shift, and go to state 677

    $default  reduce using rule 319 (expr_assign)


State 943

  320 expr_assign: expr "|=" expr .
  336 expr_method_call: expr . "->" "name" '(' ')'
  337                 | expr . "->" "name" '(' expr_list ')'
  347 expr_field: expr . '.' "name"
  348           | expr . '.' '.' "name"
  349           | expr . '.' "name" '(' ')'
  350           | expr . '.' "name" '(' expr_list ')'
  353           | expr . '.' $@17 error $@18
  373 expr: expr . "<<" expr
  374     | expr . ">>" expr
  375     | expr . "<<<" expr
  376     | expr . ">>>" expr
  377     | expr . '+' expr
  378     | expr . '-' expr
  379     | expr . '*' expr
  380     | expr . '/' expr
  381     | expr . '%' expr
  382     | expr . '<' expr
  383     | expr . '>' expr
  384     | expr . "==" expr
  385     | expr . "!=" expr
  386     | expr . "<=" expr
  387     | expr . ">=" expr
  388     | expr . '&' expr
  389     | expr . '|' expr
  390     | expr . '^' expr
  391     | expr . "&&" expr
  392     | expr . "||" expr
  393     | expr . "^^" expr
  394     | expr . ".." expr
  397     | expr . "++"
  398     | expr . "--"
  400     | expr . '[' expr ']'
  401     | expr . '.' '[' expr ']'
  402     | expr . "?[" expr ']'
  403     | expr . '.' "?[" expr ']'
  404     | expr . "?." "name"
  405     | expr . '.' "?." "name"
  413     | expr . "??" expr
  414     | expr . '?' expr ':' expr
  417     | expr . "is" "type" '<' $@19 type_declaration_no_options '>' $@20
  418     | expr . "is" basic_type_declaration
  419     | expr . "is" "name"
  420     | expr . "as" "name"
  423     | expr . "as" "type" '<' $@21 type_declaration '>' $@22
  424     | expr . "as" basic_type_declaration
  425     | expr . '?' "as" "name"
  428     | expr . '?' "as" "type" '<' $@23 type_declaration '>' $@24
  429     | expr . '?' "as" basic_type_declaration
  437     | expr . "<|" expr
  438     | expr . "|>" expr
  439     | expr . "|>" basic_type_declaration
  449 expr_mtag: expr . '.' "$f" '(' expr ')'
  450          | expr . "?." "$f" '(' expr ')'
  451          | expr . '.' '.' "$f" '(' expr ')'
  452          | expr . '.' "?." "$f" '(' expr ')'
  453          | expr . "as" "$f" '(' expr ')'
  454          | expr . '?' "as" "$f" '(' expr ')'
  455          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 643
    "as"   shift, and go to state 644
    "<<"   shift, and go to state 645
    ">>"   shift, and go to state 646
    "++"   shift, and go to state 647
    "--"   shift, and go to state 648
    "<="   shift, and go to state 649
    ">="   shift, and go to state 650
    "=="   shift, and go to state 651
    "!="   shift, and go to state 652
    "->"   shift, and go to state 653
    "??"   shift, and go to state 654
    "?."   shift, and go to state 655
    "?["   shift, and go to state 656
    "<|"   shift, and go to state 657
    "|>"   shift, and go to state 658
    "<<<"  shift, and go to state 659
    ">>>"  shift, and go to state 660
    "&&"   shift, and go to state 661
    "||"   shift, and go to state 662
    "^^"   shift, and go to state 663
    ".."   shift, and go to state 664
    '?'    shift, and go to state 665
    '|'    shift, and go to state 666
    '^'    shift, and go to state 667
    '&'    shift, and go to state 668
    '<'    shift, and go to state 669
    '>'    shift, and go to state 670
    '-'    shift, and go to state 671
    '+'    shift, and go to state 672
    '*'    shift, and go to state 673
    '/'    shift, and go to state 674
    '%'    shift, and go to state 675
    '.'    shift, and go to state 676
    '['    shift, and go to state 677

    $default  reduce using rule 320 (expr_assign)


State 944

  321 expr_assign: expr "^=" expr .
  336 expr_method_call: expr . "->" "name" '(' ')'
  337                 | expr . "->" "name" '(' expr_list ')'
  347 expr_field: expr . '.' "name"
  348           | expr . '.' '.' "name"
  349           | expr . '.' "name" '(' ')'
  350           | expr . '.' "name" '(' expr_list ')'
  353           | expr . '.' $@17 error $@18
  373 expr: expr . "<<" expr
  374     | expr . ">>" expr
  375     | expr . "<<<" expr
  376     | expr . ">>>" expr
  377     | expr . '+' expr
  378     | expr . '-' expr
  379     | expr . '*' expr
  380     | expr . '/' expr
  381     | expr . '%' expr
  382     | expr . '<' expr
  383     | expr . '>' expr
  384     | expr . "==" expr
  385     | expr . "!=" expr
  386     | expr . "<=" expr
  387     | expr . ">=" expr
  388     | expr . '&' expr
  389     | expr . '|' expr
  390     | expr . '^' expr
  391     | expr . "&&" expr
  392     | expr . "||" expr
  393     | expr . "^^" expr
  394     | expr . ".." expr
  397     | expr . "++"
  398     | expr . "--"
  400     | expr . '[' expr ']'
  401     | expr . '.' '[' expr ']'
  402     | expr . "?[" expr ']'
  403     | expr . '.' "?[" expr ']'
  404     | expr . "?." "name"
  405     | expr . '.' "?." "name"
  413     | expr . "??" expr
  414     | expr . '?' expr ':' expr
  417     | expr . "is" "type" '<' $@19 type_declaration_no_options '>' $@20
  418     | expr . "is" basic_type_declaration
  419     | expr . "is" "name"
  420     | expr . "as" "name"
  423     | expr . "as" "type" '<' $@21 type_declaration '>' $@22
  424     | expr . "as" basic_type_declaration
  425     | expr . '?' "as" "name"
  428     | expr . '?' "as" "type" '<' $@23 type_declaration '>' $@24
  429     | expr . '?' "as" basic_type_declaration
  437     | expr . "<|" expr
  438     | expr . "|>" expr
  439     | expr . "|>" basic_type_declaration
  449 expr_mtag: expr . '.' "$f" '(' expr ')'
  450          | expr . "?." "$f" '(' expr ')'
  451          | expr . '.' '.' "$f" '(' expr ')'
  452          | expr . '.' "?." "$f" '(' expr ')'
  453          | expr . "as" "$f" '(' expr ')'
  454          | expr . '?' "as" "$f" '(' expr ')'
  455          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 643
    "as"   shift, and go to state 644
    "<<"   shift, and go to state 645
    ">>"   shift, and go to state 646
    "++"   shift, and go to state 647
    "--"   shift, and go to state 648
    "<="   shift, and go to state 649
    ">="   shift, and go to state 650
    "=="   shift, and go to state 651
    "!="   shift, and go to state 652
    "->"   shift, and go to state 653
    "??"   shift, and go to state 654
    "?."   shift, and go to state 655
    "?["   shift, and go to state 656
    "<|"   shift, and go to state 657
    "|>"   shift, and go to state 658
    "<<<"  shift, and go to state 659
    ">>>"  shift, and go to state 660
    "&&"   shift, and go to state 661
    "||"   shift, and go to state 662
    "^^"   shift, and go to state 663
    ".."   shift, and go to state 664
    '?'    shift, and go to state 665
    '|'    shift, and go to state 666
    '^'    shift, and go to state 667
    '&'    shift, and go to state 668
    '<'    shift, and go to state 669
    '>'    shift, and go to state 670
    '-'    shift, and go to state 671
    '+'    shift, and go to state 672
    '*'    shift, and go to state 673
    '/'    shift, and go to state 674
    '%'    shift, and go to state 675
    '.'    shift, and go to state 676
    '['    shift, and go to state 677

    $default  reduce using rule 321 (expr_assign)


State 945

  330 expr_assign: expr "<<=" expr .
  336 expr_method_call: expr . "->" "name" '(' ')'
  337                 | expr . "->" "name" '(' expr_list ')'
  347 expr_field: expr . '.' "name"
  348           | expr . '.' '.' "name"
  349           | expr . '.' "name" '(' ')'
  350           | expr . '.' "name" '(' expr_list ')'
  353           | expr . '.' $@17 error $@18
  373 expr: expr . "<<" expr
  374     | expr . ">>" expr
  375     | expr . "<<<" expr
  376     | expr . ">>>" expr
  377     | expr . '+' expr
  378     | expr . '-' expr
  379     | expr . '*' expr
  380     | expr . '/' expr
  381     | expr . '%' expr
  382     | expr . '<' expr
  383     | expr . '>' expr
  384     | expr . "==" expr
  385     | expr . "!=" expr
  386     | expr . "<=" expr
  387     | expr . ">=" expr
  388     | expr . '&' expr
  389     | expr . '|' expr
  390     | expr . '^' expr
  391     | expr . "&&" expr
  392     | expr . "||" expr
  393     | expr . "^^" expr
  394     | expr . ".." expr
  397     | expr . "++"
  398     | expr . "--"
  400     | expr . '[' expr ']'
  401     | expr . '.' '[' expr ']'
  402     | expr . "?[" expr ']'
  403     | expr . '.' "?[" expr ']'
  404     | expr . "?." "name"
  405     | expr . '.' "?." "name"
  413     | expr . "??" expr
  414     | expr . '?' expr ':' expr
  417     | expr . "is" "type" '<' $@19 type_declaration_no_options '>' $@20
  418     | expr . "is" basic_type_declaration
  419     | expr . "is" "name"
  420     | expr . "as" "name"
  423     | expr . "as" "type" '<' $@21 type_declaration '>' $@22
  424     | expr . "as" basic_type_declaration
  425     | expr . '?' "as" "name"
  428     | expr . '?' "as" "type" '<' $@23 type_declaration '>' $@24
  429     | expr . '?' "as" basic_type_declaration
  437     | expr . "<|" expr
  438     | expr . "|>" expr
  439     | expr . "|>" basic_type_declaration
  449 expr_mtag: expr . '.' "$f" '(' expr ')'
  450          | expr . "?." "$f" '(' expr ')'
  451          | expr . '.' '.' "$f" '(' expr ')'
  452          | expr . '.' "?." "$f" '(' expr ')'
  453          | expr . "as" "$f" '(' expr ')'
  454          | expr . '?' "as" "$f" '(' expr ')'
  455          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 643
    "as"   shift, and go to state 644
    "<<"   shift, and go to state 645
    ">>"   shift, and go to state 646
    "++"   shift, and go to state 647
    "--"   shift, and go to state 648
    "<="   shift, and go to state 649
    ">="   shift, and go to state 650
    "=="   shift, and go to state 651
    "!="   shift, and go to state 652
    "->"   shift, and go to state 653
    "??"   shift, and go to state 654
    "?."   shift, and go to state 655
    "?["   shift, and go to state 656
    "<|"   shift, and go to state 657
    "|>"   shift, and go to state 658
    "<<<"  shift, and go to state 659
    ">>>"  shift, and go to state 660
    "&&"   shift, and go to state 661
    "||"   shift, and go to state 662
    "^^"   shift, and go to state 663
    ".."   shift, and go to state 664
    '?'    shift, and go to state 665
    '|'    shift, and go to state 666
    '^'    shift, and go to state 667
    '&'    shift, and go to state 668
    '<'    shift, and go to state 669
    '>'    shift, and go to state 670
    '-'    shift, and go to state 671
    '+'    shift, and go to state 672
    '*'    shift, and go to state 673
    '/'    shift, and go to state 674
    '%'    shift, and go to state 675
    '.'    shift, and go to state 676
    '['    shift, and go to state 677

    $default  reduce using rule 330 (expr_assign)


State 946

  331 expr_assign: expr ">>=" expr .
  336 expr_method_call: expr . "->" "name" '(' ')'
  337                 | expr . "->" "name" '(' expr_list ')'
  347 expr_field: expr . '.' "name"
  348           | expr . '.' '.' "name"
  349           | expr . '.' "name" '(' ')'
  350           | expr . '.' "name" '(' expr_list ')'
  353           | expr . '.' $@17 error $@18
  373 expr: expr . "<<" expr
  374     | expr . ">>" expr
  375     | expr . "<<<" expr
  376     | expr . ">>>" expr
  377     | expr . '+' expr
  378     | expr . '-' expr
  379     | expr . '*' expr
  380     | expr . '/' expr
  381     | expr . '%' expr
  382     | expr . '<' expr
  383     | expr . '>' expr
  384     | expr . "==" expr
  385     | expr . "!=" expr
  386     | expr . "<=" expr
  387     | expr . ">=" expr
  388     | expr . '&' expr
  389     | expr . '|' expr
  390     | expr . '^' expr
  391     | expr . "&&" expr
  392     | expr . "||" expr
  393     | expr . "^^" expr
  394     | expr . ".." expr
  397     | expr . "++"
  398     | expr . "--"
  400     | expr . '[' expr ']'
  401     | expr . '.' '[' expr ']'
  402     | expr . "?[" expr ']'
  403     | expr . '.' "?[" expr ']'
  404     | expr . "?." "name"
  405     | expr . '.' "?." "name"
  413     | expr . "??" expr
  414     | expr . '?' expr ':' expr
  417     | expr . "is" "type" '<' $@19 type_declaration_no_options '>' $@20
  418     | expr . "is" basic_type_declaration
  419     | expr . "is" "name"
  420     | expr . "as" "name"
  423     | expr . "as" "type" '<' $@21 type_declaration '>' $@22
  424     | expr . "as" basic_type_declaration
  425     | expr . '?' "as" "name"
  428     | expr . '?' "as" "type" '<' $@23 type_declaration '>' $@24
  429     | expr . '?' "as" basic_type_declaration
  437     | expr . "<|" expr
  438     | expr . "|>" expr
  439     | expr . "|>" basic_type_declaration
  449 expr_mtag: expr . '.' "$f" '(' expr ')'
  450          | expr . "?." "$f" '(' expr ')'
  451          | expr . '.' '.' "$f" '(' expr ')'
  452          | expr . '.' "?." "$f" '(' expr ')'
  453          | expr . "as" "$f" '(' expr ')'
  454          | expr . '?' "as" "$f" '(' expr ')'
  455          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 643
    "as"   shift, and go to state 644
    "<<"   shift, and go to state 645
    ">>"   shift, and go to state 646
    "++"   shift, and go to state 647
    "--"   shift, and go to state 648
    "<="   shift, and go to state 649
    ">="   shift, and go to state 650
    "=="   shift, and go to state 651
    "!="   shift, and go to state 652
    "->"   shift, and go to state 653
    "??"   shift, and go to state 654
    "?."   shift, and go to state 655
    "?["   shift, and go to state 656
    "<|"   shift, and go to state 657
    "|>"   shift, and go to state 658
    "<<<"  shift, and go to state 659
    ">>>"  shift, and go to state 660
    "&&"   shift, and go to state 661
    "||"   shift, and go to state 662
    "^^"   shift, and go to state 663
    ".."   shift, and go to state 664
    '?'    shift, and go to state 665
    '|'    shift, and go to state 666
    '^'    shift, and go to state 667
    '&'    shift, and go to state 668
    '<'    shift, and go to state 669
    '>'    shift, and go to state 670
    '-'    shift, and go to state 671
    '+'    shift, and go to state 672
    '*'    shift, and go to state 673
    '/'    shift, and go to state 674
    '%'    shift, and go to state 675
    '.'    shift, and go to state 676
    '['    shift, and go to state 677

    $default  reduce using rule 331 (expr_assign)


State 947

  317 expr_assign: expr "<-" expr .
  336 expr_method_call: expr . "->" "name" '(' ')'
  337                 | expr . "->" "name" '(' expr_list ')'
  347 expr_field: expr . '.' "name"
  348           | expr . '.' '.' "name"
  349           | expr . '.' "name" '(' ')'
  350           | expr . '.' "name" '(' expr_list ')'
  353           | expr . '.' $@17 error $@18
  373 expr: expr . "<<" expr
  374     | expr . ">>" expr
  375     | expr . "<<<" expr
  376     | expr . ">>>" expr
  377     | expr . '+' expr
  378     | expr . '-' expr
  379     | expr . '*' expr
  380     | expr . '/' expr
  381     | expr . '%' expr
  382     | expr . '<' expr
  383     | expr . '>' expr
  384     | expr . "==" expr
  385     | expr . "!=" expr
  386     | expr . "<=" expr
  387     | expr . ">=" expr
  388     | expr . '&' expr
  389     | expr . '|' expr
  390     | expr . '^' expr
  391     | expr . "&&" expr
  392     | expr . "||" expr
  393     | expr . "^^" expr
  394     | expr . ".." expr
  397     | expr . "++"
  398     | expr . "--"
  400     | expr . '[' expr ']'
  401     | expr . '.' '[' expr ']'
  402     | expr . "?[" expr ']'
  403     | expr . '.' "?[" expr ']'
  404     | expr . "?." "name"
  405     | expr . '.' "?." "name"
  413     | expr . "??" expr
  414     | expr . '?' expr ':' expr
  417     | expr . "is" "type" '<' $@19 type_declaration_no_options '>' $@20
  418     | expr . "is" basic_type_declaration
  419     | expr . "is" "name"
  420     | expr . "as" "name"
  423     | expr . "as" "type" '<' $@21 type_declaration '>' $@22
  424     | expr . "as" basic_type_declaration
  425     | expr . '?' "as" "name"
  428     | expr . '?' "as" "type" '<' $@23 type_declaration '>' $@24
  429     | expr . '?' "as" basic_type_declaration
  437     | expr . "<|" expr
  438     | expr . "|>" expr
  439     | expr . "|>" basic_type_declaration
  449 expr_mtag: expr . '.' "$f" '(' expr ')'
  450          | expr . "?." "$f" '(' expr ')'
  451          | expr . '.' '.' "$f" '(' expr ')'
  452          | expr . '.' "?." "$f" '(' expr ')'
  453          | expr . "as" "$f" '(' expr ')'
  454          | expr . '?' "as" "$f" '(' expr ')'
  455          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 643
    "as"   shift, and go to state 644
    "<<"   shift, and go to state 645
    ">>"   shift, and go to state 646
    "++"   shift, and go to state 647
    "--"   shift, and go to state 648
    "<="   shift, and go to state 649
    ">="   shift, and go to state 650
    "=="   shift, and go to state 651
    "!="   shift, and go to state 652
    "->"   shift, and go to state 653
    "??"   shift, and go to state 654
    "?."   shift, and go to state 655
    "?["   shift, and go to state 656
    "<|"   shift, and go to state 657
    "|>"   shift, and go to state 658
    "<<<"  shift, and go to state 659
    ">>>"  shift, and go to state 660
    "&&"   shift, and go to state 661
    "||"   shift, and go to state 662
    "^^"   shift, and go to state 663
    ".."   shift, and go to state 664
    '?'    shift, and go to state 665
    '|'    shift, and go to state 666
    '^'    shift, and go to state 667
    '&'    shift, and go to state 668
    '<'    shift, and go to state 669
    '>'    shift, and go to state 670
    '-'    shift, and go to state 671
    '+'    shift, and go to state 672
    '*'    shift, and go to state 673
    '/'    shift, and go to state 674
    '%'    shift, and go to state 675
    '.'    shift, and go to state 676
    '['    shift, and go to state 677

    $default  reduce using rule 317 (expr_assign)


State 948

  318 expr_assign: expr ":=" expr .
  336 expr_method_call: expr . "->" "name" '(' ')'
  337                 | expr . "->" "name" '(' expr_list ')'
  347 expr_field: expr . '.' "name"
  348           | expr . '.' '.' "name"
  349           | expr . '.' "name" '(' ')'
  350           | expr . '.' "name" '(' expr_list ')'
  353           | expr . '.' $@17 error $@18
  373 expr: expr . "<<" expr
  374     | expr . ">>" expr
  375     | expr . "<<<" expr
  376     | expr . ">>>" expr
  377     | expr . '+' expr
  378     | expr . '-' expr
  379     | expr . '*' expr
  380     | expr . '/' expr
  381     | expr . '%' expr
  382     | expr . '<' expr
  383     | expr . '>' expr
  384     | expr . "==" expr
  385     | expr . "!=" expr
  386     | expr . "<=" expr
  387     | expr . ">=" expr
  388     | expr . '&' expr
  389     | expr . '|' expr
  390     | expr . '^' expr
  391     | expr . "&&" expr
  392     | expr . "||" expr
  393     | expr . "^^" expr
  394     | expr . ".." expr
  397     | expr . "++"
  398     | expr . "--"
  400     | expr . '[' expr ']'
  401     | expr . '.' '[' expr ']'
  402     | expr . "?[" expr ']'
  403     | expr . '.' "?[" expr ']'
  404     | expr . "?." "name"
  405     | expr . '.' "?." "name"
  413     | expr . "??" expr
  414     | expr . '?' expr ':' expr
  417     | expr . "is" "type" '<' $@19 type_declaration_no_options '>' $@20
  418     | expr . "is" basic_type_declaration
  419     | expr . "is" "name"
  420     | expr . "as" "name"
  423     | expr . "as" "type" '<' $@21 type_declaration '>' $@22
  424     | expr . "as" basic_type_declaration
  425     | expr . '?' "as" "name"
  428     | expr . '?' "as" "type" '<' $@23 type_declaration '>' $@24
  429     | expr . '?' "as" basic_type_declaration
  437     | expr . "<|" expr
  438     | expr . "|>" expr
  439     | expr . "|>" basic_type_declaration
  449 expr_mtag: expr . '.' "$f" '(' expr ')'
  450          | expr . "?." "$f" '(' expr ')'
  451          | expr . '.' '.' "$f" '(' expr ')'
  452          | expr . '.' "?." "$f" '(' expr ')'
  453          | expr . "as" "$f" '(' expr ')'
  454          | expr . '?' "as" "$f" '(' expr ')'
  455          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 643
    "as"   shift, and go to state 644
    "<<"   shift, and go to state 645
    ">>"   shift, and go to state 646
    "++"   shift, and go to state 647
    "--"   shift, and go to state 648
    "<="   shift, and go to state 649
    ">="   shift, and go to state 650
    "=="   shift, and go to state 651
    "!="   shift, and go to state 652
    "->"   shift, and go to state 653
    "??"   shift, and go to state 654
    "?."   shift, and go to state 655
    "?["   shift, and go to state 656
    "<|"   shift, and go to state 657
    "|>"   shift, and go to state 658
    "<<<"  shift, and go to state 659
    ">>>"  shift, and go to state 660
    "&&"   shift, and go to state 661
    "||"   shift, and go to state 662
    "^^"   shift, and go to state 663
    ".."   shift, and go to state 664
    '?'    shift, and go to state 665
    '|'    shift, and go to state 666
    '^'    shift, and go to state 667
    '&'    shift, and go to state 668
    '<'    shift, and go to state 669
    '>'    shift, and go to state 670
    '-'    shift, and go to state 671
    '+'    shift, and go to state 672
    '*'    shift, and go to state 673
    '/'    shift, and go to state 674
    '%'    shift, and go to state 675
    '.'    shift, and go to state 676
    '['    shift, and go to state 677

    $default  reduce using rule 318 (expr_assign)


State 949

  332 expr_assign: expr "<<<=" expr .
  336 expr_method_call: expr . "->" "name" '(' ')'
  337                 | expr . "->" "name" '(' expr_list ')'
  347 expr_field: expr . '.' "name"
  348           | expr . '.' '.' "name"
  349           | expr . '.' "name" '(' ')'
  350           | expr . '.' "name" '(' expr_list ')'
  353           | expr . '.' $@17 error $@18
  373 expr: expr . "<<" expr
  374     | expr . ">>" expr
  375     | expr . "<<<" expr
  376     | expr . ">>>" expr
  377     | expr . '+' expr
  378     | expr . '-' expr
  379     | expr . '*' expr
  380     | expr . '/' expr
  381     | expr . '%' expr
  382     | expr . '<' expr
  383     | expr . '>' expr
  384     | expr . "==" expr
  385     | expr . "!=" expr
  386     | expr . "<=" expr
  387     | expr . ">=" expr
  388     | expr . '&' expr
  389     | expr . '|' expr
  390     | expr . '^' expr
  391     | expr . "&&" expr
  392     | expr . "||" expr
  393     | expr . "^^" expr
  394     | expr . ".." expr
  397     | expr . "++"
  398     | expr . "--"
  400     | expr . '[' expr ']'
  401     | expr . '.' '[' expr ']'
  402     | expr . "?[" expr ']'
  403     | expr . '.' "?[" expr ']'
  404     | expr . "?." "name"
  405     | expr . '.' "?." "name"
  413     | expr . "??" expr
  414     | expr . '?' expr ':' expr
  417     | expr . "is" "type" '<' $@19 type_declaration_no_options '>' $@20
  418     | expr . "is" basic_type_declaration
  419     | expr . "is" "name"
  420     | expr . "as" "name"
  423     | expr . "as" "type" '<' $@21 type_declaration '>' $@22
  424     | expr . "as" basic_type_declaration
  425     | expr . '?' "as" "name"
  428     | expr . '?' "as" "type" '<' $@23 type_declaration '>' $@24
  429     | expr . '?' "as" basic_type_declaration
  437     | expr . "<|" expr
  438     | expr . "|>" expr
  439     | expr . "|>" basic_type_declaration
  449 expr_mtag: expr . '.' "$f" '(' expr ')'
  450          | expr . "?." "$f" '(' expr ')'
  451          | expr . '.' '.' "$f" '(' expr ')'
  452          | expr . '.' "?." "$f" '(' expr ')'
  453          | expr . "as" "$f" '(' expr ')'
  454          | expr . '?' "as" "$f" '(' expr ')'
  455          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 643
    "as"   shift, and go to state 644
    "<<"   shift, and go to state 645
    ">>"   shift, and go to state 646
    "++"   shift, and go to state 647
    "--"   shift, and go to state 648
    "<="   shift, and go to state 649
    ">="   shift, and go to state 650
    "=="   shift, and go to state 651
    "!="   shift, and go to state 652
    "->"   shift, and go to state 653
    "??"   shift, and go to state 654
    "?."   shift, and go to state 655
    "?["   shift, and go to state 656
    "<|"   shift, and go to state 657
    "|>"   shift, and go to state 658
    "<<<"  shift, and go to state 659
    ">>>"  shift, and go to state 660
    "&&"   shift, and go to state 661
    "||"   shift, and go to state 662
    "^^"   shift, and go to state 663
    ".."   shift, and go to state 664
    '?'    shift, and go to state 665
    '|'    shift, and go to state 666
    '^'    shift, and go to state 667
    '&'    shift, and go to state 668
    '<'    shift, and go to state 669
    '>'    shift, and go to state 670
    '-'    shift, and go to state 671
    '+'    shift, and go to state 672
    '*'    shift, and go to state 673
    '/'    shift, and go to state 674
    '%'    shift, and go to state 675
    '.'    shift, and go to state 676
    '['    shift, and go to state 677

    $default  reduce using rule 332 (expr_assign)


State 950

  333 expr_assign: expr ">>>=" expr .
  336 expr_method_call: expr . "->" "name" '(' ')'
  337                 | expr . "->" "name" '(' expr_list ')'
  347 expr_field: expr . '.' "name"
  348           | expr . '.' '.' "name"
  349           | expr . '.' "name" '(' ')'
  350           | expr . '.' "name" '(' expr_list ')'
  353           | expr . '.' $@17 error $@18
  373 expr: expr . "<<" expr
  374     | expr . ">>" expr
  375     | expr . "<<<" expr
  376     | expr . ">>>" expr
  377     | expr . '+' expr
  378     | expr . '-' expr
  379     | expr . '*' expr
  380     | expr . '/' expr
  381     | expr . '%' expr
  382     | expr . '<' expr
  383     | expr . '>' expr
  384     | expr . "==" expr
  385     | expr . "!=" expr
  386     | expr . "<=" expr
  387     | expr . ">=" expr
  388     | expr . '&' expr
  389     | expr . '|' expr
  390     | expr . '^' expr
  391     | expr . "&&" expr
  392     | expr . "||" expr
  393     | expr . "^^" expr
  394     | expr . ".." expr
  397     | expr . "++"
  398     | expr . "--"
  400     | expr . '[' expr ']'
  401     | expr . '.' '[' expr ']'
  402     | expr . "?[" expr ']'
  403     | expr . '.' "?[" expr ']'
  404     | expr . "?." "name"
  405     | expr . '.' "?." "name"
  413     | expr . "??" expr
  414     | expr . '?' expr ':' expr
  417     | expr . "is" "type" '<' $@19 type_declaration_no_options '>' $@20
  418     | expr . "is" basic_type_declaration
  419     | expr . "is" "name"
  420     | expr . "as" "name"
  423     | expr . "as" "type" '<' $@21 type_declaration '>' $@22
  424     | expr . "as" basic_type_declaration
  425     | expr . '?' "as" "name"
  428     | expr . '?' "as" "type" '<' $@23 type_declaration '>' $@24
  429     | expr . '?' "as" basic_type_declaration
  437     | expr . "<|" expr
  438     | expr . "|>" expr
  439     | expr . "|>" basic_type_declaration
  449 expr_mtag: expr . '.' "$f" '(' expr ')'
  450          | expr . "?." "$f" '(' expr ')'
  451          | expr . '.' '.' "$f" '(' expr ')'
  452          | expr . '.' "?." "$f" '(' expr ')'
  453          | expr . "as" "$f" '(' expr ')'
  454          | expr . '?' "as" "$f" '(' expr ')'
  455          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 643
    "as"   shift, and go to state 644
    "<<"   shift, and go to state 645
    ">>"   shift, and go to state 646
    "++"   shift, and go to state 647
    "--"   shift, and go to state 648
    "<="   shift, and go to state 649
    ">="   shift, and go to state 650
    "=="   shift, and go to state 651
    "!="   shift, and go to state 652
    "->"   shift, and go to state 653
    "??"   shift, and go to state 654
    "?."   shift, and go to state 655
    "?["   shift, and go to state 656
    "<|"   shift, and go to state 657
    "|>"   shift, and go to state 658
    "<<<"  shift, and go to state 659
    ">>>"  shift, and go to state 660
    "&&"   shift, and go to state 661
    "||"   shift, and go to state 662
    "^^"   shift, and go to state 663
    ".."   shift, and go to state 664
    '?'    shift, and go to state 665
    '|'    shift, and go to state 666
    '^'    shift, and go to state 667
    '&'    shift, and go to state 668
    '<'    shift, and go to state 669
    '>'    shift, and go to state 670
    '-'    shift, and go to state 671
    '+'    shift, and go to state 672
    '*'    shift, and go to state 673
    '/'    shift, and go to state 674
    '%'    shift, and go to state 675
    '.'    shift, and go to state 676
    '['    shift, and go to state 677

    $default  reduce using rule 333 (expr_assign)


State 951

  322 expr_assign: expr "&&=" expr .
  336 expr_method_call: expr . "->" "name" '(' ')'
  337                 | expr . "->" "name" '(' expr_list ')'
  347 expr_field: expr . '.' "name"
  348           | expr . '.' '.' "name"
  349           | expr . '.' "name" '(' ')'
  350           | expr . '.' "name" '(' expr_list ')'
  353           | expr . '.' $@17 error $@18
  373 expr: expr . "<<" expr
  374     | expr . ">>" expr
  375     | expr . "<<<" expr
  376     | expr . ">>>" expr
  377     | expr . '+' expr
  378     | expr . '-' expr
  379     | expr . '*' expr
  380     | expr . '/' expr
  381     | expr . '%' expr
  382     | expr . '<' expr
  383     | expr . '>' expr
  384     | expr . "==" expr
  385     | expr . "!=" expr
  386     | expr . "<=" expr
  387     | expr . ">=" expr
  388     | expr . '&' expr
  389     | expr . '|' expr
  390     | expr . '^' expr
  391     | expr . "&&" expr
  392     | expr . "||" expr
  393     | expr . "^^" expr
  394     | expr . ".." expr
  397     | expr . "++"
  398     | expr . "--"
  400     | expr . '[' expr ']'
  401     | expr . '.' '[' expr ']'
  402     | expr . "?[" expr ']'
  403     | expr . '.' "?[" expr ']'
  404     | expr . "?." "name"
  405     | expr . '.' "?." "name"
  413     | expr . "??" expr
  414     | expr . '?' expr ':' expr
  417     | expr . "is" "type" '<' $@19 type_declaration_no_options '>' $@20
  418     | expr . "is" basic_type_declaration
  419     | expr . "is" "name"
  420     | expr . "as" "name"
  423     | expr . "as" "type" '<' $@21 type_declaration '>' $@22
  424     | expr . "as" basic_type_declaration
  425     | expr . '?' "as" "name"
  428     | expr . '?' "as" "type" '<' $@23 type_declaration '>' $@24
  429     | expr . '?' "as" basic_type_declaration
  437     | expr . "<|" expr
  438     | expr . "|>" expr
  439     | expr . "|>" basic_type_declaration
  449 expr_mtag: expr . '.' "$f" '(' expr ')'
  450          | expr . "?." "$f" '(' expr ')'
  451          | expr . '.' '.' "$f" '(' expr ')'
  452          | expr . '.' "?." "$f" '(' expr ')'
  453          | expr . "as" "$f" '(' expr ')'
  454          | expr . '?' "as" "$f" '(' expr ')'
  455          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 643
    "as"   shift, and go to state 644
    "<<"   shift, and go to state 645
    ">>"   shift, and go to state 646
    "++"   shift, and go to state 647
    "--"   shift, and go to state 648
    "<="   shift, and go to state 649
    ">="   shift, and go to state 650
    "=="   shift, and go to state 651
    "!="   shift, and go to state 652
    "->"   shift, and go to state 653
    "??"   shift, and go to state 654
    "?."   shift, and go to state 655
    "?["   shift, and go to state 656
    "<|"   shift, and go to state 657
    "|>"   shift, and go to state 658
    "<<<"  shift, and go to state 659
    ">>>"  shift, and go to state 660
    "&&"   shift, and go to state 661
    "||"   shift, and go to state 662
    "^^"   shift, and go to state 663
    ".."   shift, and go to state 664
    '?'    shift, and go to state 665
    '|'    shift, and go to state 666
    '^'    shift, and go to state 667
    '&'    shift, and go to state 668
    '<'    shift, and go to state 669
    '>'    shift, and go to state 670
    '-'    shift, and go to state 671
    '+'    shift, and go to state 672
    '*'    shift, and go to state 673
    '/'    shift, and go to state 674
    '%'    shift, and go to state 675
    '.'    shift, and go to state 676
    '['    shift, and go to state 677

    $default  reduce using rule 322 (expr_assign)


State 952

  323 expr_assign: expr "||=" expr .
  336 expr_method_call: expr . "->" "name" '(' ')'
  337                 | expr . "->" "name" '(' expr_list ')'
  347 expr_field: expr . '.' "name"
  348           | expr . '.' '.' "name"
  349           | expr . '.' "name" '(' ')'
  350           | expr . '.' "name" '(' expr_list ')'
  353           | expr . '.' $@17 error $@18
  373 expr: expr . "<<" expr
  374     | expr . ">>" expr
  375     | expr . "<<<" expr
  376     | expr . ">>>" expr
  377     | expr . '+' expr
  378     | expr . '-' expr
  379     | expr . '*' expr
  380     | expr . '/' expr
  381     | expr . '%' expr
  382     | expr . '<' expr
  383     | expr . '>' expr
  384     | expr . "==" expr
  385     | expr . "!=" expr
  386     | expr . "<=" expr
  387     | expr . ">=" expr
  388     | expr . '&' expr
  389     | expr . '|' expr
  390     | expr . '^' expr
  391     | expr . "&&" expr
  392     | expr . "||" expr
  393     | expr . "^^" expr
  394     | expr . ".." expr
  397     | expr . "++"
  398     | expr . "--"
  400     | expr . '[' expr ']'
  401     | expr . '.' '[' expr ']'
  402     | expr . "?[" expr ']'
  403     | expr . '.' "?[" expr ']'
  404     | expr . "?." "name"
  405     | expr . '.' "?." "name"
  413     | expr . "??" expr
  414     | expr . '?' expr ':' expr
  417     | expr . "is" "type" '<' $@19 type_declaration_no_options '>' $@20
  418     | expr . "is" basic_type_declaration
  419     | expr . "is" "name"
  420     | expr . "as" "name"
  423     | expr . "as" "type" '<' $@21 type_declaration '>' $@22
  424     | expr . "as" basic_type_declaration
  425     | expr . '?' "as" "name"
  428     | expr . '?' "as" "type" '<' $@23 type_declaration '>' $@24
  429     | expr . '?' "as" basic_type_declaration
  437     | expr . "<|" expr
  438     | expr . "|>" expr
  439     | expr . "|>" basic_type_declaration
  449 expr_mtag: expr . '.' "$f" '(' expr ')'
  450          | expr . "?." "$f" '(' expr ')'
  451          | expr . '.' '.' "$f" '(' expr ')'
  452          | expr . '.' "?." "$f" '(' expr ')'
  453          | expr . "as" "$f" '(' expr ')'
  454          | expr . '?' "as" "$f" '(' expr ')'
  455          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 643
    "as"   shift, and go to state 644
    "<<"   shift, and go to state 645
    ">>"   shift, and go to state 646
    "++"   shift, and go to state 647
    "--"   shift, and go to state 648
    "<="   shift, and go to state 649
    ">="   shift, and go to state 650
    "=="   shift, and go to state 651
    "!="   shift, and go to state 652
    "->"   shift, and go to state 653
    "??"   shift, and go to state 654
    "?."   shift, and go to state 655
    "?["   shift, and go to state 656
    "<|"   shift, and go to state 657
    "|>"   shift, and go to state 658
    "<<<"  shift, and go to state 659
    ">>>"  shift, and go to state 660
    "&&"   shift, and go to state 661
    "||"   shift, and go to state 662
    "^^"   shift, and go to state 663
    ".."   shift, and go to state 664
    '?'    shift, and go to state 665
    '|'    shift, and go to state 666
    '^'    shift, and go to state 667
    '&'    shift, and go to state 668
    '<'    shift, and go to state 669
    '>'    shift, and go to state 670
    '-'    shift, and go to state 671
    '+'    shift, and go to state 672
    '*'    shift, and go to state 673
    '/'    shift, and go to state 674
    '%'    shift, and go to state 675
    '.'    shift, and go to state 676
    '['    shift, and go to state 677

    $default  reduce using rule 323 (expr_assign)


State 953

  324 expr_assign: expr "^^=" expr .
  336 expr_method_call: expr . "->" "name" '(' ')'
  337                 | expr . "->" "name" '(' expr_list ')'
  347 expr_field: expr . '.' "name"
  348           | expr . '.' '.' "name"
  349           | expr . '.' "name" '(' ')'
  350           | expr . '.' "name" '(' expr_list ')'
  353           | expr . '.' $@17 error $@18
  373 expr: expr . "<<" expr
  374     | expr . ">>" expr
  375     | expr . "<<<" expr
  376     | expr . ">>>" expr
  377     | expr . '+' expr
  378     | expr . '-' expr
  379     | expr . '*' expr
  380     | expr . '/' expr
  381     | expr . '%' expr
  382     | expr . '<' expr
  383     | expr . '>' expr
  384     | expr . "==" expr
  385     | expr . "!=" expr
  386     | expr . "<=" expr
  387     | expr . ">=" expr
  388     | expr . '&' expr
  389     | expr . '|' expr
  390     | expr . '^' expr
  391     | expr . "&&" expr
  392     | expr . "||" expr
  393     | expr . "^^" expr
  394     | expr . ".." expr
  397     | expr . "++"
  398     | expr . "--"
  400     | expr . '[' expr ']'
  401     | expr . '.' '[' expr ']'
  402     | expr . "?[" expr ']'
  403     | expr . '.' "?[" expr ']'
  404     | expr . "?." "name"
  405     | expr . '.' "?." "name"
  413     | expr . "??" expr
  414     | expr . '?' expr ':' expr
  417     | expr . "is" "type" '<' $@19 type_declaration_no_options '>' $@20
  418     | expr . "is" basic_type_declaration
  419     | expr . "is" "name"
  420     | expr . "as" "name"
  423     | expr . "as" "type" '<' $@21 type_declaration '>' $@22
  424     | expr . "as" basic_type_declaration
  425     | expr . '?' "as" "name"
  428     | expr . '?' "as" "type" '<' $@23 type_declaration '>' $@24
  429     | expr . '?' "as" basic_type_declaration
  437     | expr . "<|" expr
  438     | expr . "|>" expr
  439     | expr . "|>" basic_type_declaration
  449 expr_mtag: expr . '.' "$f" '(' expr ')'
  450          | expr . "?." "$f" '(' expr ')'
  451          | expr . '.' '.' "$f" '(' expr ')'
  452          | expr . '.' "?." "$f" '(' expr ')'
  453          | expr . "as" "$f" '(' expr ')'
  454          | expr . '?' "as" "$f" '(' expr ')'
  455          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 643
    "as"   shift, and go to state 644
    "<<"   shift, and go to state 645
    ">>"   shift, and go to state 646
    "++"   shift, and go to state 647
    "--"   shift, and go to state 648
    "<="   shift, and go to state 649
    ">="   shift, and go to state 650
    "=="   shift, and go to state 651
    "!="   shift, and go to state 652
    "->"   shift, and go to state 653
    "??"   shift, and go to state 654
    "?."   shift, and go to state 655
    "?["   shift, and go to state 656
    "<|"   shift, and go to state 657
    "|>"   shift, and go to state 658
    "<<<"  shift, and go to state 659
    ">>>"  shift, and go to state 660
    "&&"   shift, and go to state 661
    "||"   shift, and go to state 662
    "^^"   shift, and go to state 663
    ".."   shift, and go to state 664
    '?'    shift, and go to state 665
    '|'    shift, and go to state 666
    '^'    shift, and go to state 667
    '&'    shift, and go to state 668
    '<'    shift, and go to state 669
    '>'    shift, and go to state 670
    '-'    shift, and go to state 671
    '+'    shift, and go to state 672
    '*'    shift, and go to state 673
    '/'    shift, and go to state 674
    '%'    shift, and go to state 675
    '.'    shift, and go to state 676
    '['    shift, and go to state 677

    $default  reduce using rule 324 (expr_assign)


State 954

  316 expr_assign: expr '=' expr .
  336 expr_method_call: expr . "->" "name" '(' ')'
  337                 | expr . "->" "name" '(' expr_list ')'
  347 expr_field: expr . '.' "name"
  348           | expr . '.' '.' "name"
  349           | expr . '.' "name" '(' ')'
  350           | expr . '.' "name" '(' expr_list ')'
  353           | expr . '.' $@17 error $@18
  373 expr: expr . "<<" expr
  374     | expr . ">>" expr
  375     | expr . "<<<" expr
  376     | expr . ">>>" expr
  377     | expr . '+' expr
  378     | expr . '-' expr
  379     | expr . '*' expr
  380     | expr . '/' expr
  381     | expr . '%' expr
  382     | expr . '<' expr
  383     | expr . '>' expr
  384     | expr . "==" expr
  385     | expr . "!=" expr
  386     | expr . "<=" expr
  387     | expr . ">=" expr
  388     | expr . '&' expr
  389     | expr . '|' expr
  390     | expr . '^' expr
  391     | expr . "&&" expr
  392     | expr . "||" expr
  393     | expr . "^^" expr
  394     | expr . ".." expr
  397     | expr . "++"
  398     | expr . "--"
  400     | expr . '[' expr ']'
  401     | expr . '.' '[' expr ']'
  402     | expr . "?[" expr ']'
  403     | expr . '.' "?[" expr ']'
  404     | expr . "?." "name"
  405     | expr . '.' "?." "name"
  413     | expr . "??" expr
  414     | expr . '?' expr ':' expr
  417     | expr . "is" "type" '<' $@19 type_declaration_no_options '>' $@20
  418     | expr . "is" basic_type_declaration
  419     | expr . "is" "name"
  420     | expr . "as" "name"
  423     | expr . "as" "type" '<' $@21 type_declaration '>' $@22
  424     | expr . "as" basic_type_declaration
  425     | expr . '?' "as" "name"
  428     | expr . '?' "as" "type" '<' $@23 type_declaration '>' $@24
  429     | expr . '?' "as" basic_type_declaration
  437     | expr . "<|" expr
  438     | expr . "|>" expr
  439     | expr . "|>" basic_type_declaration
  449 expr_mtag: expr . '.' "$f" '(' expr ')'
  450          | expr . "?." "$f" '(' expr ')'
  451          | expr . '.' '.' "$f" '(' expr ')'
  452          | expr . '.' "?." "$f" '(' expr ')'
  453          | expr . "as" "$f" '(' expr ')'
  454          | expr . '?' "as" "$f" '(' expr ')'
  455          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 643
    "as"   shift, and go to state 644
    "<<"   shift, and go to state 645
    ">>"   shift, and go to state 646
    "++"   shift, and go to state 647
    "--"   shift, and go to state 648
    "<="   shift, and go to state 649
    ">="   shift, and go to state 650
    "=="   shift, and go to state 651
    "!="   shift, and go to state 652
    "->"   shift, and go to state 653
    "??"   shift, and go to state 654
    "?."   shift, and go to state 655
    "?["   shift, and go to state 656
    "<|"   shift, and go to state 657
    "|>"   shift, and go to state 658
    "<<<"  shift, and go to state 659
    ">>>"  shift, and go to state 660
    "&&"   shift, and go to state 661
    "||"   shift, and go to state 662
    "^^"   shift, and go to state 663
    ".."   shift, and go to state 664
    '?'    shift, and go to state 665
    '|'    shift, and go to state 666
    '^'    shift, and go to state 667
    '&'    shift, and go to state 668
    '<'    shift, and go to state 669
    '>'    shift, and go to state 670
    '-'    shift, and go to state 671
    '+'    shift, and go to state 672
    '*'    shift, and go to state 673
    '/'    shift, and go to state 674
    '%'    shift, and go to state 675
    '.'    shift, and go to state 676
    '['    shift, and go to state 677

    $default  reduce using rule 316 (expr_assign)


State 955

  336 expr_method_call: expr . "->" "name" '(' ')'
  337                 | expr . "->" "name" '(' expr_list ')'
  347 expr_field: expr . '.' "name"
  348           | expr . '.' '.' "name"
  349           | expr . '.' "name" '(' ')'
  350           | expr . '.' "name" '(' expr_list ')'
  353           | expr . '.' $@17 error $@18
  373 expr: expr . "<<" expr
  374     | expr . ">>" expr
  375     | expr . "<<<" expr
  376     | expr . ">>>" expr
  377     | expr . '+' expr
  378     | expr . '-' expr
  379     | expr . '*' expr
  380     | expr . '/' expr
  381     | expr . '%' expr
  382     | expr . '<' expr
  383     | expr . '>' expr
  384     | expr . "==" expr
  385     | expr . "!=" expr
  386     | expr . "<=" expr
  387     | expr . ">=" expr
  388     | expr . '&' expr
  389     | expr . '|' expr
  390     | expr . '^' expr
  391     | expr . "&&" expr
  392     | expr . "||" expr
  393     | expr . "^^" expr
  394     | expr . ".." expr
  397     | expr . "++"
  398     | expr . "--"
  400     | expr . '[' expr ']'
  401     | expr . '.' '[' expr ']'
  402     | expr . "?[" expr ']'
  403     | expr . '.' "?[" expr ']'
  404     | expr . "?." "name"
  405     | expr . '.' "?." "name"
  413     | expr . "??" expr
  414     | expr . '?' expr ':' expr
  417     | expr . "is" "type" '<' $@19 type_declaration_no_options '>' $@20
  418     | expr . "is" basic_type_declaration
  419     | expr . "is" "name"
  420     | expr . "as" "name"
  423     | expr . "as" "type" '<' $@21 type_declaration '>' $@22
  424     | expr . "as" basic_type_declaration
  425     | expr . '?' "as" "name"
  428     | expr . '?' "as" "type" '<' $@23 type_declaration '>' $@24
  429     | expr . '?' "as" basic_type_declaration
  437     | expr . "<|" expr
  438     | expr . "|>" expr
  439     | expr . "|>" basic_type_declaration
  449 expr_mtag: expr . '.' "$f" '(' expr ')'
  450          | expr . "?." "$f" '(' expr ')'
  451          | expr . '.' '.' "$f" '(' expr ')'
  452          | expr . '.' "?." "$f" '(' expr ')'
  453          | expr . "as" "$f" '(' expr ')'
  454          | expr . '?' "as" "$f" '(' expr ')'
  455          | expr . "is" "$f" '(' expr ')'
  526 enum_expression: "name" '=' expr .

    "is"   shift, and go to state 643
    "as"   shift, and go to state 644
    "<<"   shift, and go to state 645
    ">>"   shift, and go to state 646
    "++"   shift, and go to state 647
    "--"   shift, and go to state 648
    "<="   shift, and go to state 649
    ">="   shift, and go to state 650
    "=="   shift, and go to state 651
    "!="   shift, and go to state 652
    "->"   shift, and go to state 653
    "??"   shift, and go to state 654
    "?."   shift, and go to state 655
    "?["   shift, and go to state 656
    "<|"   shift, and go to state 657
    "|>"   shift, and go to state 658
    "<<<"  shift, and go to state 659
    ">>>"  shift, and go to state 660
    "&&"   shift, and go to state 661
    "||"   shift, and go to state 662
    "^^"   shift, and go to state 663
    ".."   shift, and go to state 664
    '?'    shift, and go to state 665
    '|'    shift, and go to state 666
    '^'    shift, and go to state 667
    '&'    shift, and go to state 668
    '<'    shift, and go to state 669
    '>'    shift, and go to state 670
    '-'    shift, and go to state 671
    '+'    shift, and go to state 672
    '*'    shift, and go to state 673
    '/'    shift, and go to state 674
    '%'    shift, and go to state 675
    '.'    shift, and go to state 676
    '['    shift, and go to state 677

    $default  reduce using rule 526 (enum_expression)


State 956

  529 enum_list: enum_list ',' enum_expression .

    $default  reduce using rule 529 (enum_list)


State 957

  544 enum_declaration: optional_annotation_list "enum" optional_public_or_private_enum enum_name optional_enum_basic_type_declaration "begin of code block" $@31 enum_list optional_comma $@32 . "end of code block"

    "end of code block"  shift, and go to state 1081


State 958

  474 struct_variable_declaration_list: struct_variable_declaration_list optional_annotation_list "def" . optional_public_or_private_member_variable "abstract" optional_constant $@26 function_declaration_header "end of expression"
  476                                 | struct_variable_declaration_list optional_annotation_list "def" . optional_public_or_private_member_variable optional_static_member_variable optional_override optional_constant $@27 function_declaration_header expression_block

    "public"   shift, and go to state 1082
    "private"  shift, and go to state 1083

    $default  reduce using rule 464 (optional_public_or_private_member_variable)

    optional_public_or_private_member_variable  go to state 1084


State 959

  469 structure_variable_declaration: optional_field_annotation . optional_static_member_variable optional_override optional_public_or_private_member_variable variable_declaration

    "static"  shift, and go to state 1085

    $default  reduce using rule 467 (optional_static_member_variable)

    optional_static_member_variable  go to state 1086


State 960

  472 struct_variable_declaration_list: struct_variable_declaration_list $@25 structure_variable_declaration . "end of expression"

    "end of expression"  shift, and go to state 1087


State 961

  510 let_variable_name_with_pos_list: let_variable_name_with_pos_list ',' "name" "aka" "name" .

    $default  reduce using rule 510 (let_variable_name_with_pos_list)


State 962

  336 expr_method_call: expr . "->" "name" '(' ')'
  337                 | expr . "->" "name" '(' expr_list ')'
  347 expr_field: expr . '.' "name"
  348           | expr . '.' '.' "name"
  349           | expr . '.' "name" '(' ')'
  350           | expr . '.' "name" '(' expr_list ')'
  353           | expr . '.' $@17 error $@18
  373 expr: expr . "<<" expr
  374     | expr . ">>" expr
  375     | expr . "<<<" expr
  376     | expr . ">>>" expr
  377     | expr . '+' expr
  378     | expr . '-' expr
  379     | expr . '*' expr
  380     | expr . '/' expr
  381     | expr . '%' expr
  382     | expr . '<' expr
  383     | expr . '>' expr
  384     | expr . "==" expr
  385     | expr . "!=" expr
  386     | expr . "<=" expr
  387     | expr . ">=" expr
  388     | expr . '&' expr
  389     | expr . '|' expr
  390     | expr . '^' expr
  391     | expr . "&&" expr
  392     | expr . "||" expr
  393     | expr . "^^" expr
  394     | expr . ".." expr
  397     | expr . "++"
  398     | expr . "--"
  400     | expr . '[' expr ']'
  401     | expr . '.' '[' expr ']'
  402     | expr . "?[" expr ']'
  403     | expr . '.' "?[" expr ']'
  404     | expr . "?." "name"
  405     | expr . '.' "?." "name"
  413     | expr . "??" expr
  414     | expr . '?' expr ':' expr
  417     | expr . "is" "type" '<' $@19 type_declaration_no_options '>' $@20
  418     | expr . "is" basic_type_declaration
  419     | expr . "is" "name"
  420     | expr . "as" "name"
  423     | expr . "as" "type" '<' $@21 type_declaration '>' $@22
  424     | expr . "as" basic_type_declaration
  425     | expr . '?' "as" "name"
  428     | expr . '?' "as" "type" '<' $@23 type_declaration '>' $@24
  429     | expr . '?' "as" basic_type_declaration
  437     | expr . "<|" expr
  438     | expr . "|>" expr
  439     | expr . "|>" basic_type_declaration
  449 expr_mtag: expr . '.' "$f" '(' expr ')'
  450          | expr . "?." "$f" '(' expr ')'
  451          | expr . '.' '.' "$f" '(' expr ')'
  452          | expr . '.' "?." "$f" '(' expr ')'
  453          | expr . "as" "$f" '(' expr ')'
  454          | expr . '?' "as" "$f" '(' expr ')'
  455          | expr . "is" "$f" '(' expr ')'
  512 let_variable_declaration: let_variable_name_with_pos_list ':' type_declaration_no_options copy_or_move_or_clone expr . "end of expression"

    "is"                 shift, and go to state 643
    "as"                 shift, and go to state 644
    "<<"                 shift, and go to state 645
    ">>"                 shift, and go to state 646
    "++"                 shift, and go to state 647
    "--"                 shift, and go to state 648
    "<="                 shift, and go to state 649
    ">="                 shift, and go to state 650
    "=="                 shift, and go to state 651
    "!="                 shift, and go to state 652
    "->"                 shift, and go to state 653
    "??"                 shift, and go to state 654
    "?."                 shift, and go to state 655
    "?["                 shift, and go to state 656
    "<|"                 shift, and go to state 657
    "|>"                 shift, and go to state 658
    "<<<"                shift, and go to state 659
    ">>>"                shift, and go to state 660
    "&&"                 shift, and go to state 661
    "||"                 shift, and go to state 662
    "^^"                 shift, and go to state 663
    ".."                 shift, and go to state 664
    "end of expression"  shift, and go to state 1088
    '?'                  shift, and go to state 665
    '|'                  shift, and go to state 666
    '^'                  shift, and go to state 667
    '&'                  shift, and go to state 668
    '<'                  shift, and go to state 669
    '>'                  shift, and go to state 670
    '-'                  shift, and go to state 671
    '+'                  shift, and go to state 672
    '*'                  shift, and go to state 673
    '/'                  shift, and go to state 674
    '%'                  shift, and go to state 675
    '.'                  shift, and go to state 676
    '['                  shift, and go to state 677


State 963

  513 let_variable_declaration: let_variable_name_with_pos_list optional_ref copy_or_move_or_clone expr "end of expression" .

    $default  reduce using rule 513 (let_variable_declaration)


State 964

  626 type_declaration_no_options_no_dim: "type" '<' $@37 type_declaration '>' $@38 .

    $default  reduce using rule 626 (type_declaration_no_options_no_dim)


State 965

  649 type_declaration_no_options_no_dim: "array" '<' $@42 type_declaration '>' $@43 .

    $default  reduce using rule 649 (type_declaration_no_options_no_dim)


State 966

  652 type_declaration_no_options_no_dim: "table" '<' $@44 table_type_pair '>' $@45 .

    $default  reduce using rule 652 (type_declaration_no_options_no_dim)


State 967

  613 table_type_pair: type_declaration "end of expression" type_declaration .
  684 type_declaration: type_declaration . '|' type_declaration_no_options
  685                 | type_declaration . '|' '#'

    '|'  shift, and go to state 372

    $default  reduce using rule 613 (table_type_pair)


State 968

  718 make_struct_decl: "struct" '<' $@73 type_declaration_no_options . '>' $@74 '(' use_initializer make_struct_dim ')'

    '>'  shift, and go to state 1089


State 969

  721 make_struct_decl: "class" '<' $@75 type_declaration_no_options . '>' $@76 '(' use_initializer make_struct_dim ')'

    '>'  shift, and go to state 1090


State 970

  246 new_type_declaration: '<' $@3 type_declaration . '>' $@4
  684 type_declaration: type_declaration . '|' type_declaration_no_options
  685                 | type_declaration . '|' '#'

    '|'  shift, and go to state 372
    '>'  shift, and go to state 1091


State 971

  715 use_initializer: "uninitialized" .

    $default  reduce using rule 715 (use_initializer)


State 972

  249 expr_new: "new" new_type_declaration '(' use_initializer . ')'
  250         | "new" new_type_declaration '(' use_initializer . make_struct_single ')'

    "$f"    shift, and go to state 828
    "name"  shift, and go to state 1092
    ')'     shift, and go to state 1093

    make_struct_fields  go to state 833
    make_struct_single  go to state 1094


State 973

  248 expr_new: "new" structure_type_declaration '(' optional_expr_list . ')'

    ')'  shift, and go to state 1095


State 974

  287 expr_type_info: "typeinfo" '(' name_in_namespace '<' . "name" '>' expr ')'
  288               | "typeinfo" '(' name_in_namespace '<' . "name" "end of expression" "name" '>' expr ')'

    "name"  shift, and go to state 1096


State 975

  286 expr_type_info: "typeinfo" '(' name_in_namespace expr . ')'
  336 expr_method_call: expr . "->" "name" '(' ')'
  337                 | expr . "->" "name" '(' expr_list ')'
  347 expr_field: expr . '.' "name"
  348           | expr . '.' '.' "name"
  349           | expr . '.' "name" '(' ')'
  350           | expr . '.' "name" '(' expr_list ')'
  353           | expr . '.' $@17 error $@18
  373 expr: expr . "<<" expr
  374     | expr . ">>" expr
  375     | expr . "<<<" expr
  376     | expr . ">>>" expr
  377     | expr . '+' expr
  378     | expr . '-' expr
  379     | expr . '*' expr
  380     | expr . '/' expr
  381     | expr . '%' expr
  382     | expr . '<' expr
  383     | expr . '>' expr
  384     | expr . "==" expr
  385     | expr . "!=" expr
  386     | expr . "<=" expr
  387     | expr . ">=" expr
  388     | expr . '&' expr
  389     | expr . '|' expr
  390     | expr . '^' expr
  391     | expr . "&&" expr
  392     | expr . "||" expr
  393     | expr . "^^" expr
  394     | expr . ".." expr
  397     | expr . "++"
  398     | expr . "--"
  400     | expr . '[' expr ']'
  401     | expr . '.' '[' expr ']'
  402     | expr . "?[" expr ']'
  403     | expr . '.' "?[" expr ']'
  404     | expr . "?." "name"
  405     | expr . '.' "?." "name"
  413     | expr . "??" expr
  414     | expr . '?' expr ':' expr
  417     | expr . "is" "type" '<' $@19 type_declaration_no_options '>' $@20
  418     | expr . "is" basic_type_declaration
  419     | expr . "is" "name"
  420     | expr . "as" "name"
  423     | expr . "as" "type" '<' $@21 type_declaration '>' $@22
  424     | expr . "as" basic_type_declaration
  425     | expr . '?' "as" "name"
  428     | expr . '?' "as" "type" '<' $@23 type_declaration '>' $@24
  429     | expr . '?' "as" basic_type_declaration
  437     | expr . "<|" expr
  438     | expr . "|>" expr
  439     | expr . "|>" basic_type_declaration
  449 expr_mtag: expr . '.' "$f" '(' expr ')'
  450          | expr . "?." "$f" '(' expr ')'
  451          | expr . '.' '.' "$f" '(' expr ')'
  452          | expr . '.' "?." "$f" '(' expr ')'
  453          | expr . "as" "$f" '(' expr ')'
  454          | expr . '?' "as" "$f" '(' expr ')'
  455          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 643
    "as"   shift, and go to state 644
    "<<"   shift, and go to state 645
    ">>"   shift, and go to state 646
    "++"   shift, and go to state 647
    "--"   shift, and go to state 648
    "<="   shift, and go to state 649
    ">="   shift, and go to state 650
    "=="   shift, and go to state 651
    "!="   shift, and go to state 652
    "->"   shift, and go to state 653
    "??"   shift, and go to state 654
    "?."   shift, and go to state 655
    "?["   shift, and go to state 656
    "<|"   shift, and go to state 657
    "|>"   shift, and go to state 658
    "<<<"  shift, and go to state 659
    ">>>"  shift, and go to state 660
    "&&"   shift, and go to state 661
    "||"   shift, and go to state 662
    "^^"   shift, and go to state 663
    ".."   shift, and go to state 664
    '?'    shift, and go to state 665
    '|'    shift, and go to state 666
    '^'    shift, and go to state 667
    '&'    shift, and go to state 668
    '<'    shift, and go to state 669
    '>'    shift, and go to state 670
    '-'    shift, and go to state 671
    '+'    shift, and go to state 672
    '*'    shift, and go to state 673
    '/'    shift, and go to state 674
    '%'    shift, and go to state 675
    '.'    shift, and go to state 676
    '['    shift, and go to state 677
    ')'    shift, and go to state 1097


State 976

  285 expr_type_decl: "type" '<' $@11 type_declaration . '>' $@12
  684 type_declaration: type_declaration . '|' type_declaration_no_options
  685                 | type_declaration . '|' '#'

    '|'  shift, and go to state 372
    '>'  shift, and go to state 1098


State 977

  737 make_dim_decl: "array" "struct" '<' $@83 . type_declaration_no_options '>' $@84 '(' use_initializer make_struct_dim ')'

    "type"       shift, and go to state 216
    "array"      shift, and go to state 217
    "table"      shift, and go to state 218
    "typedecl"   shift, and go to state 219
    "iterator"   shift, and go to state 220
    "smart_ptr"  shift, and go to state 221
    "bool"       shift, and go to state 222
    "void"       shift, and go to state 223
    "string"     shift, and go to state 224
    "auto"       shift, and go to state 225
    "int"        shift, and go to state 226
    "int2"       shift, and go to state 227
    "int3"       shift, and go to state 228
    "int4"       shift, and go to state 229
    "uint"       shift, and go to state 230
    "bitfield"   shift, and go to state 231
    "uint2"      shift, and go to state 232
    "uint3"      shift, and go to state 233
    "uint4"      shift, and go to state 234
    "float"      shift, and go to state 235
    "float2"     shift, and go to state 236
    "float3"     shift, and go to state 237
    "float4"     shift, and go to state 238
    "range"      shift, and go to state 239
    "urange"     shift, and go to state 240
    "range64"    shift, and go to state 241
    "urange64"   shift, and go to state 242
    "block"      shift, and go to state 243
    "int64"      shift, and go to state 244
    "uint64"     shift, and go to state 245
    "double"     shift, and go to state 246
    "function"   shift, and go to state 247
    "lambda"     shift, and go to state 248
    "int8"       shift, and go to state 249
    "uint8"      shift, and go to state 250
    "int16"      shift, and go to state 251
    "uint16"     shift, and go to state 252
    "tuple"      shift, and go to state 253
    "variant"    shift, and go to state 254
    "::"         shift, and go to state 55
    "$t"         shift, and go to state 255
    "name"       shift, and go to state 56
    '$'          shift, and go to state 256

    name_in_namespace                   go to state 257
    basic_type_declaration              go to state 258
    structure_type_declaration          go to state 259
    auto_type_declaration               go to state 260
    bitfield_type_declaration           go to state 261
    type_declaration_no_options         go to state 1099
    type_declaration_no_options_no_dim  go to state 263


State 978

  740 make_dim_decl: "array" "tuple" '<' $@85 . type_declaration_no_options '>' $@86 '(' use_initializer make_struct_dim ')'

    "type"       shift, and go to state 216
    "array"      shift, and go to state 217
    "table"      shift, and go to state 218
    "typedecl"   shift, and go to state 219
    "iterator"   shift, and go to state 220
    "smart_ptr"  shift, and go to state 221
    "bool"       shift, and go to state 222
    "void"       shift, and go to state 223
    "string"     shift, and go to state 224
    "auto"       shift, and go to state 225
    "int"        shift, and go to state 226
    "int2"       shift, and go to state 227
    "int3"       shift, and go to state 228
    "int4"       shift, and go to state 229
    "uint"       shift, and go to state 230
    "bitfield"   shift, and go to state 231
    "uint2"      shift, and go to state 232
    "uint3"      shift, and go to state 233
    "uint4"      shift, and go to state 234
    "float"      shift, and go to state 235
    "float2"     shift, and go to state 236
    "float3"     shift, and go to state 237
    "float4"     shift, and go to state 238
    "range"      shift, and go to state 239
    "urange"     shift, and go to state 240
    "range64"    shift, and go to state 241
    "urange64"   shift, and go to state 242
    "block"      shift, and go to state 243
    "int64"      shift, and go to state 244
    "uint64"     shift, and go to state 245
    "double"     shift, and go to state 246
    "function"   shift, and go to state 247
    "lambda"     shift, and go to state 248
    "int8"       shift, and go to state 249
    "uint8"      shift, and go to state 250
    "int16"      shift, and go to state 251
    "uint16"     shift, and go to state 252
    "tuple"      shift, and go to state 253
    "variant"    shift, and go to state 254
    "::"         shift, and go to state 55
    "$t"         shift, and go to state 255
    "name"       shift, and go to state 56
    '$'          shift, and go to state 256

    name_in_namespace                   go to state 257
    basic_type_declaration              go to state 258
    structure_type_declaration          go to state 259
    auto_type_declaration               go to state 260
    bitfield_type_declaration           go to state 261
    type_declaration_no_options         go to state 1100
    type_declaration_no_options_no_dim  go to state 263


State 979

  743 make_dim_decl: "array" "variant" '<' $@87 . type_declaration_no_options '>' $@88 '(' make_struct_dim ')'

    "type"       shift, and go to state 216
    "array"      shift, and go to state 217
    "table"      shift, and go to state 218
    "typedecl"   shift, and go to state 219
    "iterator"   shift, and go to state 220
    "smart_ptr"  shift, and go to state 221
    "bool"       shift, and go to state 222
    "void"       shift, and go to state 223
    "string"     shift, and go to state 224
    "auto"       shift, and go to state 225
    "int"        shift, and go to state 226
    "int2"       shift, and go to state 227
    "int3"       shift, and go to state 228
    "int4"       shift, and go to state 229
    "uint"       shift, and go to state 230
    "bitfield"   shift, and go to state 231
    "uint2"      shift, and go to state 232
    "uint3"      shift, and go to state 233
    "uint4"      shift, and go to state 234
    "float"      shift, and go to state 235
    "float2"     shift, and go to state 236
    "float3"     shift, and go to state 237
    "float4"     shift, and go to state 238
    "range"      shift, and go to state 239
    "urange"     shift, and go to state 240
    "range64"    shift, and go to state 241
    "urange64"   shift, and go to state 242
    "block"      shift, and go to state 243
    "int64"      shift, and go to state 244
    "uint64"     shift, and go to state 245
    "double"     shift, and go to state 246
    "function"   shift, and go to state 247
    "lambda"     shift, and go to state 248
    "int8"       shift, and go to state 249
    "uint8"      shift, and go to state 250
    "int16"      shift, and go to state 251
    "uint16"     shift, and go to state 252
    "tuple"      shift, and go to state 253
    "variant"    shift, and go to state 254
    "::"         shift, and go to state 55
    "$t"         shift, and go to state 255
    "name"       shift, and go to state 56
    '$'          shift, and go to state 256

    name_in_namespace                   go to state 257
    basic_type_declaration              go to state 258
    structure_type_declaration          go to state 259
    auto_type_declaration               go to state 260
    bitfield_type_declaration           go to state 261
    type_declaration_no_options         go to state 1101
    type_declaration_no_options_no_dim  go to state 263


State 980

  747 make_dim_decl: "array" '<' $@89 type_declaration_no_options . '>' $@90 '(' expr_list optional_comma ')'

    '>'  shift, and go to state 1102


State 981

  744 make_dim_decl: "array" '(' expr_list optional_comma . ')'

    ')'  shift, and go to state 1103


State 982

  757 make_table_decl: "table" '<' type_declaration_no_options "end of expression" . type_declaration_no_options '>' '(' expr_map_tuple_list optional_comma ')'

    "type"       shift, and go to state 216
    "array"      shift, and go to state 217
    "table"      shift, and go to state 218
    "typedecl"   shift, and go to state 219
    "iterator"   shift, and go to state 220
    "smart_ptr"  shift, and go to state 221
    "bool"       shift, and go to state 222
    "void"       shift, and go to state 223
    "string"     shift, and go to state 224
    "auto"       shift, and go to state 225
    "int"        shift, and go to state 226
    "int2"       shift, and go to state 227
    "int3"       shift, and go to state 228
    "int4"       shift, and go to state 229
    "uint"       shift, and go to state 230
    "bitfield"   shift, and go to state 231
    "uint2"      shift, and go to state 232
    "uint3"      shift, and go to state 233
    "uint4"      shift, and go to state 234
    "float"      shift, and go to state 235
    "float2"     shift, and go to state 236
    "float3"     shift, and go to state 237
    "float4"     shift, and go to state 238
    "range"      shift, and go to state 239
    "urange"     shift, and go to state 240
    "range64"    shift, and go to state 241
    "urange64"   shift, and go to state 242
    "block"      shift, and go to state 243
    "int64"      shift, and go to state 244
    "uint64"     shift, and go to state 245
    "double"     shift, and go to state 246
    "function"   shift, and go to state 247
    "lambda"     shift, and go to state 248
    "int8"       shift, and go to state 249
    "uint8"      shift, and go to state 250
    "int16"      shift, and go to state 251
    "uint16"     shift, and go to state 252
    "tuple"      shift, and go to state 253
    "variant"    shift, and go to state 254
    "::"         shift, and go to state 55
    "$t"         shift, and go to state 255
    "name"       shift, and go to state 56
    '$'          shift, and go to state 256

    name_in_namespace                   go to state 257
    basic_type_declaration              go to state 258
    structure_type_declaration          go to state 259
    auto_type_declaration               go to state 260
    bitfield_type_declaration           go to state 261
    type_declaration_no_options         go to state 1104
    type_declaration_no_options_no_dim  go to state 263


State 983

  756 make_table_decl: "table" '<' type_declaration_no_options '>' . '(' expr_map_tuple_list optional_comma ')'

    '('  shift, and go to state 1105


State 984

  755 make_table_decl: "table" '(' expr_map_tuple_list optional_comma . ')'

    ')'  shift, and go to state 1106


State 985

  409 expr: "deref" '(' expr ')' .

    $default  reduce using rule 409 (expr)


State 986

  276 expr_cast: "cast" '<' $@5 type_declaration_no_options . '>' $@6 expr

    '>'  shift, and go to state 1107


State 987

  279 expr_cast: "upcast" '<' $@7 type_declaration_no_options . '>' $@8 expr

    '>'  shift, and go to state 1108


State 988

  410 expr: "addr" '(' expr ')' .

    $default  reduce using rule 410 (expr)


State 989

  282 expr_cast: "reinterpret" '<' $@9 type_declaration_no_options . '>' $@10 expr

    '>'  shift, and go to state 1109


State 990

  751 make_dim_decl: "fixed_array" '<' $@91 type_declaration_no_options . '>' $@92 '(' expr_list optional_comma ')'

    '>'  shift, and go to state 1110


State 991

  748 make_dim_decl: "fixed_array" '(' expr_list optional_comma . ')'

    ')'  shift, and go to state 1111


State 992

  727 make_struct_decl: "default" '<' $@79 type_declaration_no_options . '>' $@80 use_initializer

    '>'  shift, and go to state 1112


State 993

  733 make_tuple_call: "tuple" '<' $@81 type_declaration_no_options . '>' $@82 '(' use_initializer make_struct_dim ')'

    '>'  shift, and go to state 1113


State 994

  730 make_tuple_call: "tuple" '(' expr_list optional_comma . ')'

    ')'  shift, and go to state 1114


State 995

  724 make_struct_decl: "variant" '<' $@77 type_declaration_no_options . '>' $@78 '(' make_struct_dim ')'

    '>'  shift, and go to state 1115


State 996

  411 expr: "generator" '<' type_declaration_no_options '>' . optional_capture_list '(' ')'
  412     | "generator" '<' type_declaration_no_options '>' . optional_capture_list '(' expr ')'

    '['  shift, and go to state 835

    $default  reduce using rule 303 (optional_capture_list)

    optional_capture_list  go to state 1116


State 997

  441 expr_mtag: "$$" '(' expr ')' .

    $default  reduce using rule 441 (expr_mtag)


State 998

  442 expr_mtag: "$i" '(' expr ')' .

    $default  reduce using rule 442 (expr_mtag)


State 999

  443 expr_mtag: "$v" '(' expr ')' .

    $default  reduce using rule 443 (expr_mtag)


State 1000

  444 expr_mtag: "$b" '(' expr ')' .

    $default  reduce using rule 444 (expr_mtag)


State 1001

  445 expr_mtag: "$a" '(' expr ')' .

    $default  reduce using rule 445 (expr_mtag)


State 1002

  447 expr_mtag: "$c" '(' expr ')' . '(' ')'
  448          | "$c" '(' expr ')' . '(' expr_list ')'

    '('  shift, and go to state 1117


State 1003

   30 string_builder_body: string_builder_body "{" expr . "}"
  336 expr_method_call: expr . "->" "name" '(' ')'
  337                 | expr . "->" "name" '(' expr_list ')'
  347 expr_field: expr . '.' "name"
  348           | expr . '.' '.' "name"
  349           | expr . '.' "name" '(' ')'
  350           | expr . '.' "name" '(' expr_list ')'
  353           | expr . '.' $@17 error $@18
  373 expr: expr . "<<" expr
  374     | expr . ">>" expr
  375     | expr . "<<<" expr
  376     | expr . ">>>" expr
  377     | expr . '+' expr
  378     | expr . '-' expr
  379     | expr . '*' expr
  380     | expr . '/' expr
  381     | expr . '%' expr
  382     | expr . '<' expr
  383     | expr . '>' expr
  384     | expr . "==" expr
  385     | expr . "!=" expr
  386     | expr . "<=" expr
  387     | expr . ">=" expr
  388     | expr . '&' expr
  389     | expr . '|' expr
  390     | expr . '^' expr
  391     | expr . "&&" expr
  392     | expr . "||" expr
  393     | expr . "^^" expr
  394     | expr . ".." expr
  397     | expr . "++"
  398     | expr . "--"
  400     | expr . '[' expr ']'
  401     | expr . '.' '[' expr ']'
  402     | expr . "?[" expr ']'
  403     | expr . '.' "?[" expr ']'
  404     | expr . "?." "name"
  405     | expr . '.' "?." "name"
  413     | expr . "??" expr
  414     | expr . '?' expr ':' expr
  417     | expr . "is" "type" '<' $@19 type_declaration_no_options '>' $@20
  418     | expr . "is" basic_type_declaration
  419     | expr . "is" "name"
  420     | expr . "as" "name"
  423     | expr . "as" "type" '<' $@21 type_declaration '>' $@22
  424     | expr . "as" basic_type_declaration
  425     | expr . '?' "as" "name"
  428     | expr . '?' "as" "type" '<' $@23 type_declaration '>' $@24
  429     | expr . '?' "as" basic_type_declaration
  437     | expr . "<|" expr
  438     | expr . "|>" expr
  439     | expr . "|>" basic_type_declaration
  449 expr_mtag: expr . '.' "$f" '(' expr ')'
  450          | expr . "?." "$f" '(' expr ')'
  451          | expr . '.' '.' "$f" '(' expr ')'
  452          | expr . '.' "?." "$f" '(' expr ')'
  453          | expr . "as" "$f" '(' expr ')'
  454          | expr . '?' "as" "$f" '(' expr ')'
  455          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 643
    "as"   shift, and go to state 644
    "<<"   shift, and go to state 645
    ">>"   shift, and go to state 646
    "++"   shift, and go to state 647
    "--"   shift, and go to state 648
    "<="   shift, and go to state 649
    ">="   shift, and go to state 650
    "=="   shift, and go to state 651
    "!="   shift, and go to state 652
    "->"   shift, and go to state 653
    "??"   shift, and go to state 654
    "?."   shift, and go to state 655
    "?["   shift, and go to state 656
    "<|"   shift, and go to state 657
    "|>"   shift, and go to state 658
    "<<<"  shift, and go to state 659
    ">>>"  shift, and go to state 660
    "&&"   shift, and go to state 661
    "||"   shift, and go to state 662
    "^^"   shift, and go to state 663
    ".."   shift, and go to state 664
    "}"    shift, and go to state 1118
    '?'    shift, and go to state 665
    '|'    shift, and go to state 666
    '^'    shift, and go to state 667
    '&'    shift, and go to state 668
    '<'    shift, and go to state 669
    '>'    shift, and go to state 670
    '-'    shift, and go to state 671
    '+'    shift, and go to state 672
    '*'    shift, and go to state 673
    '/'    shift, and go to state 674
    '%'    shift, and go to state 675
    '.'    shift, and go to state 676
    '['    shift, and go to state 677


State 1004

  764 array_comprehension: "begin of code block" "for" variable_name_with_pos_list "in" . expr_list "end of expression" make_map_tuple array_comprehension_where "end of code block"

    "struct"                          shift, and go to state 408
    "class"                           shift, and go to state 409
    "true"                            shift, and go to state 410
    "false"                           shift, and go to state 411
    "new"                             shift, and go to state 412
    "typeinfo"                        shift, and go to state 413
    "type"                            shift, and go to state 414
    "array"                           shift, and go to state 415
    "null"                            shift, and go to state 416
    "table"                           shift, and go to state 417
    "deref"                           shift, and go to state 418
    "cast"                            shift, and go to state 419
    "upcast"                          shift, and go to state 420
    "addr"                            shift, and go to state 421
    "reinterpret"                     shift, and go to state 422
    "fixed_array"                     shift, and go to state 423
    "default"                         shift, and go to state 424
    "bool"                            shift, and go to state 222
    "void"                            shift, and go to state 223
    "string"                          shift, and go to state 224
    "int"                             shift, and go to state 226
    "int2"                            shift, and go to state 227
    "int3"                            shift, and go to state 228
    "int4"                            shift, and go to state 229
    "uint"                            shift, and go to state 230
    "bitfield"                        shift, and go to state 425
    "uint2"                           shift, and go to state 232
    "uint3"                           shift, and go to state 233
    "uint4"                           shift, and go to state 234
    "float"                           shift, and go to state 235
    "float2"                          shift, and go to state 236
    "float3"                          shift, and go to state 237
    "float4"                          shift, and go to state 238
    "range"                           shift, and go to state 239
    "urange"                          shift, and go to state 240
    "range64"                         shift, and go to state 241
    "urange64"                        shift, and go to state 242
    "int64"                           shift, and go to state 244
    "uint64"                          shift, and go to state 245
    "double"                          shift, and go to state 246
    "int8"                            shift, and go to state 249
    "uint8"                           shift, and go to state 250
    "int16"                           shift, and go to state 251
    "uint16"                          shift, and go to state 252
    "tuple"                           shift, and go to state 426
    "variant"                         shift, and go to state 427
    "generator"                       shift, and go to state 428
    "++"                              shift, and go to state 429
    "--"                              shift, and go to state 430
    "::"                              shift, and go to state 55
    "$$"                              shift, and go to state 431
    "$i"                              shift, and go to state 432
    "$v"                              shift, and go to state 433
    "$b"                              shift, and go to state 434
    "$a"                              shift, and go to state 435
    "$c"                              shift, and go to state 436
    "..."                             shift, and go to state 437
    "integer constant"                shift, and go to state 438
    "long integer constant"           shift, and go to state 439
    "unsigned integer constant"       shift, and go to state 440
    "unsigned long integer constant"  shift, and go to state 441
    "unsigned int8 constant"          shift, and go to state 442
    "floating point constant"         shift, and go to state 443
    "double constant"                 shift, and go to state 444
    "name"                            shift, and go to state 56
    "start of the string"             shift, and go to state 445
    "begin of code block"             shift, and go to state 446
    '-'                               shift, and go to state 447
    '+'                               shift, and go to state 448
    '*'                               shift, and go to state 449
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 450
    '!'                               shift, and go to state 451
    '['                               shift, and go to state 452
    '('                               shift, and go to state 453
    '$'                               shift, and go to state 454
    '@'                               shift, and go to state 455

    string_builder          go to state 456
    expr_reader             go to state 457
    expr_call_pipe          go to state 458
    name_in_namespace       go to state 459
    expr_new                go to state 460
    expr_cast               go to state 461
    expr_type_decl          go to state 462
    expr_type_info          go to state 463
    expr_list               go to state 1119
    block_or_lambda         go to state 464
    expr_full_block         go to state 465
    expr_numeric_const      go to state 466
    expr_named_call         go to state 467
    expr_method_call        go to state 468
    func_addr_expr          go to state 469
    expr_field              go to state 470
    expr_call               go to state 471
    expr                    go to state 634
    expr_mtag               go to state 473
    basic_type_declaration  go to state 474
    make_decl               go to state 475
    make_struct_decl        go to state 476
    make_tuple_call         go to state 477
    make_dim_decl           go to state 478
    make_table_decl         go to state 479
    array_comprehension     go to state 480


State 1005

  336 expr_method_call: expr . "->" "name" '(' ')'
  337                 | expr . "->" "name" '(' expr_list ')'
  347 expr_field: expr . '.' "name"
  348           | expr . '.' '.' "name"
  349           | expr . '.' "name" '(' ')'
  350           | expr . '.' "name" '(' expr_list ')'
  353           | expr . '.' $@17 error $@18
  373 expr: expr . "<<" expr
  374     | expr . ">>" expr
  375     | expr . "<<<" expr
  376     | expr . ">>>" expr
  377     | expr . '+' expr
  378     | expr . '-' expr
  379     | expr . '*' expr
  380     | expr . '/' expr
  381     | expr . '%' expr
  382     | expr . '<' expr
  383     | expr . '>' expr
  384     | expr . "==" expr
  385     | expr . "!=" expr
  386     | expr . "<=" expr
  387     | expr . ">=" expr
  388     | expr . '&' expr
  389     | expr . '|' expr
  390     | expr . '^' expr
  391     | expr . "&&" expr
  392     | expr . "||" expr
  393     | expr . "^^" expr
  394     | expr . ".." expr
  397     | expr . "++"
  398     | expr . "--"
  400     | expr . '[' expr ']'
  401     | expr . '.' '[' expr ']'
  402     | expr . "?[" expr ']'
  403     | expr . '.' "?[" expr ']'
  404     | expr . "?." "name"
  405     | expr . '.' "?." "name"
  413     | expr . "??" expr
  414     | expr . '?' expr ':' expr
  417     | expr . "is" "type" '<' $@19 type_declaration_no_options '>' $@20
  418     | expr . "is" basic_type_declaration
  419     | expr . "is" "name"
  420     | expr . "as" "name"
  423     | expr . "as" "type" '<' $@21 type_declaration '>' $@22
  424     | expr . "as" basic_type_declaration
  425     | expr . '?' "as" "name"
  428     | expr . '?' "as" "type" '<' $@23 type_declaration '>' $@24
  429     | expr . '?' "as" basic_type_declaration
  437     | expr . "<|" expr
  438     | expr . "|>" expr
  439     | expr . "|>" basic_type_declaration
  449 expr_mtag: expr . '.' "$f" '(' expr ')'
  450          | expr . "?." "$f" '(' expr ')'
  451          | expr . '.' '.' "$f" '(' expr ')'
  452          | expr . '.' "?." "$f" '(' expr ')'
  453          | expr . "as" "$f" '(' expr ')'
  454          | expr . '?' "as" "$f" '(' expr ')'
  455          | expr . "is" "$f" '(' expr ')'
  728 make_map_tuple: expr "=>" expr .

    "is"   shift, and go to state 643
    "as"   shift, and go to state 644
    "<<"   shift, and go to state 645
    ">>"   shift, and go to state 646
    "++"   shift, and go to state 647
    "--"   shift, and go to state 648
    "<="   shift, and go to state 649
    ">="   shift, and go to state 650
    "=="   shift, and go to state 651
    "!="   shift, and go to state 652
    "->"   shift, and go to state 653
    "??"   shift, and go to state 654
    "?."   shift, and go to state 655
    "?["   shift, and go to state 656
    "<|"   shift, and go to state 657
    "|>"   shift, and go to state 658
    "<<<"  shift, and go to state 659
    ">>>"  shift, and go to state 660
    "&&"   shift, and go to state 661
    "||"   shift, and go to state 662
    "^^"   shift, and go to state 663
    ".."   shift, and go to state 664
    '?'    shift, and go to state 665
    '|'    shift, and go to state 666
    '^'    shift, and go to state 667
    '&'    shift, and go to state 668
    '<'    shift, and go to state 669
    '>'    shift, and go to state 670
    '-'    shift, and go to state 671
    '+'    shift, and go to state 672
    '*'    shift, and go to state 673
    '/'    shift, and go to state 674
    '%'    shift, and go to state 675
    '.'    shift, and go to state 676
    '['    shift, and go to state 677

    $default  reduce using rule 728 (make_map_tuple)


State 1006

  753 expr_map_tuple_list: expr_map_tuple_list ',' make_map_tuple .

    $default  reduce using rule 753 (expr_map_tuple_list)


State 1007

  754 make_table_decl: "begin of code block" expr_map_tuple_list optional_comma "end of code block" .

    $default  reduce using rule 754 (make_table_decl)


State 1008

  762 array_comprehension: '[' "for" variable_name_with_pos_list "in" . expr_list "end of expression" expr array_comprehension_where ']'

    "struct"                          shift, and go to state 408
    "class"                           shift, and go to state 409
    "true"                            shift, and go to state 410
    "false"                           shift, and go to state 411
    "new"                             shift, and go to state 412
    "typeinfo"                        shift, and go to state 413
    "type"                            shift, and go to state 414
    "array"                           shift, and go to state 415
    "null"                            shift, and go to state 416
    "table"                           shift, and go to state 417
    "deref"                           shift, and go to state 418
    "cast"                            shift, and go to state 419
    "upcast"                          shift, and go to state 420
    "addr"                            shift, and go to state 421
    "reinterpret"                     shift, and go to state 422
    "fixed_array"                     shift, and go to state 423
    "default"                         shift, and go to state 424
    "bool"                            shift, and go to state 222
    "void"                            shift, and go to state 223
    "string"                          shift, and go to state 224
    "int"                             shift, and go to state 226
    "int2"                            shift, and go to state 227
    "int3"                            shift, and go to state 228
    "int4"                            shift, and go to state 229
    "uint"                            shift, and go to state 230
    "bitfield"                        shift, and go to state 425
    "uint2"                           shift, and go to state 232
    "uint3"                           shift, and go to state 233
    "uint4"                           shift, and go to state 234
    "float"                           shift, and go to state 235
    "float2"                          shift, and go to state 236
    "float3"                          shift, and go to state 237
    "float4"                          shift, and go to state 238
    "range"                           shift, and go to state 239
    "urange"                          shift, and go to state 240
    "range64"                         shift, and go to state 241
    "urange64"                        shift, and go to state 242
    "int64"                           shift, and go to state 244
    "uint64"                          shift, and go to state 245
    "double"                          shift, and go to state 246
    "int8"                            shift, and go to state 249
    "uint8"                           shift, and go to state 250
    "int16"                           shift, and go to state 251
    "uint16"                          shift, and go to state 252
    "tuple"                           shift, and go to state 426
    "variant"                         shift, and go to state 427
    "generator"                       shift, and go to state 428
    "++"                              shift, and go to state 429
    "--"                              shift, and go to state 430
    "::"                              shift, and go to state 55
    "$$"                              shift, and go to state 431
    "$i"                              shift, and go to state 432
    "$v"                              shift, and go to state 433
    "$b"                              shift, and go to state 434
    "$a"                              shift, and go to state 435
    "$c"                              shift, and go to state 436
    "..."                             shift, and go to state 437
    "integer constant"                shift, and go to state 438
    "long integer constant"           shift, and go to state 439
    "unsigned integer constant"       shift, and go to state 440
    "unsigned long integer constant"  shift, and go to state 441
    "unsigned int8 constant"          shift, and go to state 442
    "floating point constant"         shift, and go to state 443
    "double constant"                 shift, and go to state 444
    "name"                            shift, and go to state 56
    "start of the string"             shift, and go to state 445
    "begin of code block"             shift, and go to state 446
    '-'                               shift, and go to state 447
    '+'                               shift, and go to state 448
    '*'                               shift, and go to state 449
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 450
    '!'                               shift, and go to state 451
    '['                               shift, and go to state 452
    '('                               shift, and go to state 453
    '$'                               shift, and go to state 454
    '@'                               shift, and go to state 455

    string_builder          go to state 456
    expr_reader             go to state 457
    expr_call_pipe          go to state 458
    name_in_namespace       go to state 459
    expr_new                go to state 460
    expr_cast               go to state 461
    expr_type_decl          go to state 462
    expr_type_info          go to state 463
    expr_list               go to state 1120
    block_or_lambda         go to state 464
    expr_full_block         go to state 465
    expr_numeric_const      go to state 466
    expr_named_call         go to state 467
    expr_method_call        go to state 468
    func_addr_expr          go to state 469
    expr_field              go to state 470
    expr_call               go to state 471
    expr                    go to state 634
    expr_mtag               go to state 473
    basic_type_declaration  go to state 474
    make_decl               go to state 475
    make_struct_decl        go to state 476
    make_tuple_call         go to state 477
    make_dim_decl           go to state 478
    make_table_decl         go to state 479
    array_comprehension     go to state 480


State 1009

  563 variable_name_with_pos_list: variable_name_with_pos_list . ',' "name"
  564                            | variable_name_with_pos_list . ',' "name" "aka" "name"
  763 array_comprehension: '[' "iterator" "for" variable_name_with_pos_list . "in" expr_list "end of expression" expr array_comprehension_where ']'

    "in"  shift, and go to state 1121
    ','   shift, and go to state 916


State 1010

  290 expr_list: expr_list ',' expr .
  336 expr_method_call: expr . "->" "name" '(' ')'
  337                 | expr . "->" "name" '(' expr_list ')'
  347 expr_field: expr . '.' "name"
  348           | expr . '.' '.' "name"
  349           | expr . '.' "name" '(' ')'
  350           | expr . '.' "name" '(' expr_list ')'
  353           | expr . '.' $@17 error $@18
  373 expr: expr . "<<" expr
  374     | expr . ">>" expr
  375     | expr . "<<<" expr
  376     | expr . ">>>" expr
  377     | expr . '+' expr
  378     | expr . '-' expr
  379     | expr . '*' expr
  380     | expr . '/' expr
  381     | expr . '%' expr
  382     | expr . '<' expr
  383     | expr . '>' expr
  384     | expr . "==" expr
  385     | expr . "!=" expr
  386     | expr . "<=" expr
  387     | expr . ">=" expr
  388     | expr . '&' expr
  389     | expr . '|' expr
  390     | expr . '^' expr
  391     | expr . "&&" expr
  392     | expr . "||" expr
  393     | expr . "^^" expr
  394     | expr . ".." expr
  397     | expr . "++"
  398     | expr . "--"
  400     | expr . '[' expr ']'
  401     | expr . '.' '[' expr ']'
  402     | expr . "?[" expr ']'
  403     | expr . '.' "?[" expr ']'
  404     | expr . "?." "name"
  405     | expr . '.' "?." "name"
  413     | expr . "??" expr
  414     | expr . '?' expr ':' expr
  417     | expr . "is" "type" '<' $@19 type_declaration_no_options '>' $@20
  418     | expr . "is" basic_type_declaration
  419     | expr . "is" "name"
  420     | expr . "as" "name"
  423     | expr . "as" "type" '<' $@21 type_declaration '>' $@22
  424     | expr . "as" basic_type_declaration
  425     | expr . '?' "as" "name"
  428     | expr . '?' "as" "type" '<' $@23 type_declaration '>' $@24
  429     | expr . '?' "as" basic_type_declaration
  437     | expr . "<|" expr
  438     | expr . "|>" expr
  439     | expr . "|>" basic_type_declaration
  449 expr_mtag: expr . '.' "$f" '(' expr ')'
  450          | expr . "?." "$f" '(' expr ')'
  451          | expr . '.' '.' "$f" '(' expr ')'
  452          | expr . '.' "?." "$f" '(' expr ')'
  453          | expr . "as" "$f" '(' expr ')'
  454          | expr . '?' "as" "$f" '(' expr ')'
  455          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 643
    "as"   shift, and go to state 644
    "<<"   shift, and go to state 645
    ">>"   shift, and go to state 646
    "++"   shift, and go to state 647
    "--"   shift, and go to state 648
    "<="   shift, and go to state 649
    ">="   shift, and go to state 650
    "=="   shift, and go to state 651
    "!="   shift, and go to state 652
    "->"   shift, and go to state 653
    "??"   shift, and go to state 654
    "?."   shift, and go to state 655
    "?["   shift, and go to state 656
    "<|"   shift, and go to state 657
    "|>"   shift, and go to state 658
    "<<<"  shift, and go to state 659
    ">>>"  shift, and go to state 660
    "&&"   shift, and go to state 661
    "||"   shift, and go to state 662
    "^^"   shift, and go to state 663
    ".."   shift, and go to state 664
    '?'    shift, and go to state 665
    '|'    shift, and go to state 666
    '^'    shift, and go to state 667
    '&'    shift, and go to state 668
    '<'    shift, and go to state 669
    '>'    shift, and go to state 670
    '-'    shift, and go to state 671
    '+'    shift, and go to state 672
    '*'    shift, and go to state 673
    '/'    shift, and go to state 674
    '%'    shift, and go to state 675
    '.'    shift, and go to state 676
    '['    shift, and go to state 677

    $default  reduce using rule 290 (expr_list)


State 1011

  734 make_dim_decl: '[' expr_list optional_comma ']' .

    $default  reduce using rule 734 (make_dim_decl)


State 1012

  399 expr: '(' expr_list optional_comma ')' .

    $default  reduce using rule 399 (expr)


State 1013

  339 func_addr_name: "$i" '(' . expr ')'

    "struct"                          shift, and go to state 408
    "class"                           shift, and go to state 409
    "true"                            shift, and go to state 410
    "false"                           shift, and go to state 411
    "new"                             shift, and go to state 412
    "typeinfo"                        shift, and go to state 413
    "type"                            shift, and go to state 414
    "array"                           shift, and go to state 415
    "null"                            shift, and go to state 416
    "table"                           shift, and go to state 417
    "deref"                           shift, and go to state 418
    "cast"                            shift, and go to state 419
    "upcast"                          shift, and go to state 420
    "addr"                            shift, and go to state 421
    "reinterpret"                     shift, and go to state 422
    "fixed_array"                     shift, and go to state 423
    "default"                         shift, and go to state 424
    "bool"                            shift, and go to state 222
    "void"                            shift, and go to state 223
    "string"                          shift, and go to state 224
    "int"                             shift, and go to state 226
    "int2"                            shift, and go to state 227
    "int3"                            shift, and go to state 228
    "int4"                            shift, and go to state 229
    "uint"                            shift, and go to state 230
    "bitfield"                        shift, and go to state 425
    "uint2"                           shift, and go to state 232
    "uint3"                           shift, and go to state 233
    "uint4"                           shift, and go to state 234
    "float"                           shift, and go to state 235
    "float2"                          shift, and go to state 236
    "float3"                          shift, and go to state 237
    "float4"                          shift, and go to state 238
    "range"                           shift, and go to state 239
    "urange"                          shift, and go to state 240
    "range64"                         shift, and go to state 241
    "urange64"                        shift, and go to state 242
    "int64"                           shift, and go to state 244
    "uint64"                          shift, and go to state 245
    "double"                          shift, and go to state 246
    "int8"                            shift, and go to state 249
    "uint8"                           shift, and go to state 250
    "int16"                           shift, and go to state 251
    "uint16"                          shift, and go to state 252
    "tuple"                           shift, and go to state 426
    "variant"                         shift, and go to state 427
    "generator"                       shift, and go to state 428
    "++"                              shift, and go to state 429
    "--"                              shift, and go to state 430
    "::"                              shift, and go to state 55
    "$$"                              shift, and go to state 431
    "$i"                              shift, and go to state 432
    "$v"                              shift, and go to state 433
    "$b"                              shift, and go to state 434
    "$a"                              shift, and go to state 435
    "$c"                              shift, and go to state 436
    "..."                             shift, and go to state 437
    "integer constant"                shift, and go to state 438
    "long integer constant"           shift, and go to state 439
    "unsigned integer constant"       shift, and go to state 440
    "unsigned long integer constant"  shift, and go to state 441
    "unsigned int8 constant"          shift, and go to state 442
    "floating point constant"         shift, and go to state 443
    "double constant"                 shift, and go to state 444
    "name"                            shift, and go to state 56
    "start of the string"             shift, and go to state 445
    "begin of code block"             shift, and go to state 446
    '-'                               shift, and go to state 447
    '+'                               shift, and go to state 448
    '*'                               shift, and go to state 449
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 450
    '!'                               shift, and go to state 451
    '['                               shift, and go to state 452
    '('                               shift, and go to state 453
    '$'                               shift, and go to state 454
    '@'                               shift, and go to state 455

    string_builder          go to state 456
    expr_reader             go to state 457
    expr_call_pipe          go to state 458
    name_in_namespace       go to state 459
    expr_new                go to state 460
    expr_cast               go to state 461
    expr_type_decl          go to state 462
    expr_type_info          go to state 463
    block_or_lambda         go to state 464
    expr_full_block         go to state 465
    expr_numeric_const      go to state 466
    expr_named_call         go to state 467
    expr_method_call        go to state 468
    func_addr_expr          go to state 469
    expr_field              go to state 470
    expr_call               go to state 471
    expr                    go to state 1122
    expr_mtag               go to state 473
    basic_type_declaration  go to state 474
    make_decl               go to state 475
    make_struct_decl        go to state 476
    make_tuple_call         go to state 477
    make_dim_decl           go to state 478
    make_table_decl         go to state 479
    array_comprehension     go to state 480


State 1014

  456 expr_mtag: '@' '@' "$c" '(' . expr ')'

    "struct"                          shift, and go to state 408
    "class"                           shift, and go to state 409
    "true"                            shift, and go to state 410
    "false"                           shift, and go to state 411
    "new"                             shift, and go to state 412
    "typeinfo"                        shift, and go to state 413
    "type"                            shift, and go to state 414
    "array"                           shift, and go to state 415
    "null"                            shift, and go to state 416
    "table"                           shift, and go to state 417
    "deref"                           shift, and go to state 418
    "cast"                            shift, and go to state 419
    "upcast"                          shift, and go to state 420
    "addr"                            shift, and go to state 421
    "reinterpret"                     shift, and go to state 422
    "fixed_array"                     shift, and go to state 423
    "default"                         shift, and go to state 424
    "bool"                            shift, and go to state 222
    "void"                            shift, and go to state 223
    "string"                          shift, and go to state 224
    "int"                             shift, and go to state 226
    "int2"                            shift, and go to state 227
    "int3"                            shift, and go to state 228
    "int4"                            shift, and go to state 229
    "uint"                            shift, and go to state 230
    "bitfield"                        shift, and go to state 425
    "uint2"                           shift, and go to state 232
    "uint3"                           shift, and go to state 233
    "uint4"                           shift, and go to state 234
    "float"                           shift, and go to state 235
    "float2"                          shift, and go to state 236
    "float3"                          shift, and go to state 237
    "float4"                          shift, and go to state 238
    "range"                           shift, and go to state 239
    "urange"                          shift, and go to state 240
    "range64"                         shift, and go to state 241
    "urange64"                        shift, and go to state 242
    "int64"                           shift, and go to state 244
    "uint64"                          shift, and go to state 245
    "double"                          shift, and go to state 246
    "int8"                            shift, and go to state 249
    "uint8"                           shift, and go to state 250
    "int16"                           shift, and go to state 251
    "uint16"                          shift, and go to state 252
    "tuple"                           shift, and go to state 426
    "variant"                         shift, and go to state 427
    "generator"                       shift, and go to state 428
    "++"                              shift, and go to state 429
    "--"                              shift, and go to state 430
    "::"                              shift, and go to state 55
    "$$"                              shift, and go to state 431
    "$i"                              shift, and go to state 432
    "$v"                              shift, and go to state 433
    "$b"                              shift, and go to state 434
    "$a"                              shift, and go to state 435
    "$c"                              shift, and go to state 436
    "..."                             shift, and go to state 437
    "integer constant"                shift, and go to state 438
    "long integer constant"           shift, and go to state 439
    "unsigned integer constant"       shift, and go to state 440
    "unsigned long integer constant"  shift, and go to state 441
    "unsigned int8 constant"          shift, and go to state 442
    "floating point constant"         shift, and go to state 443
    "double constant"                 shift, and go to state 444
    "name"                            shift, and go to state 56
    "start of the string"             shift, and go to state 445
    "begin of code block"             shift, and go to state 446
    '-'                               shift, and go to state 447
    '+'                               shift, and go to state 448
    '*'                               shift, and go to state 449
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 450
    '!'                               shift, and go to state 451
    '['                               shift, and go to state 452
    '('                               shift, and go to state 453
    '$'                               shift, and go to state 454
    '@'                               shift, and go to state 455

    string_builder          go to state 456
    expr_reader             go to state 457
    expr_call_pipe          go to state 458
    name_in_namespace       go to state 459
    expr_new                go to state 460
    expr_cast               go to state 461
    expr_type_decl          go to state 462
    expr_type_info          go to state 463
    block_or_lambda         go to state 464
    expr_full_block         go to state 465
    expr_numeric_const      go to state 466
    expr_named_call         go to state 467
    expr_method_call        go to state 468
    func_addr_expr          go to state 469
    expr_field              go to state 470
    expr_call               go to state 471
    expr                    go to state 1123
    expr_mtag               go to state 473
    basic_type_declaration  go to state 474
    make_decl               go to state 475
    make_struct_decl        go to state 476
    make_tuple_call         go to state 477
    make_dim_decl           go to state 478
    make_table_decl         go to state 479
    array_comprehension     go to state 480


State 1015

  343 func_addr_expr: '@' '@' '<' $@13 . type_declaration_no_options '>' $@14 func_addr_name

    "type"       shift, and go to state 216
    "array"      shift, and go to state 217
    "table"      shift, and go to state 218
    "typedecl"   shift, and go to state 219
    "iterator"   shift, and go to state 220
    "smart_ptr"  shift, and go to state 221
    "bool"       shift, and go to state 222
    "void"       shift, and go to state 223
    "string"     shift, and go to state 224
    "auto"       shift, and go to state 225
    "int"        shift, and go to state 226
    "int2"       shift, and go to state 227
    "int3"       shift, and go to state 228
    "int4"       shift, and go to state 229
    "uint"       shift, and go to state 230
    "bitfield"   shift, and go to state 231
    "uint2"      shift, and go to state 232
    "uint3"      shift, and go to state 233
    "uint4"      shift, and go to state 234
    "float"      shift, and go to state 235
    "float2"     shift, and go to state 236
    "float3"     shift, and go to state 237
    "float4"     shift, and go to state 238
    "range"      shift, and go to state 239
    "urange"     shift, and go to state 240
    "range64"    shift, and go to state 241
    "urange64"   shift, and go to state 242
    "block"      shift, and go to state 243
    "int64"      shift, and go to state 244
    "uint64"     shift, and go to state 245
    "double"     shift, and go to state 246
    "function"   shift, and go to state 247
    "lambda"     shift, and go to state 248
    "int8"       shift, and go to state 249
    "uint8"      shift, and go to state 250
    "int16"      shift, and go to state 251
    "uint16"     shift, and go to state 252
    "tuple"      shift, and go to state 253
    "variant"    shift, and go to state 254
    "::"         shift, and go to state 55
    "$t"         shift, and go to state 255
    "name"       shift, and go to state 56
    '$'          shift, and go to state 256

    name_in_namespace                   go to state 257
    basic_type_declaration              go to state 258
    structure_type_declaration          go to state 259
    auto_type_declaration               go to state 260
    bitfield_type_declaration           go to state 261
    type_declaration_no_options         go to state 1124
    type_declaration_no_options_no_dim  go to state 263


State 1016

  346 func_addr_expr: '@' '@' '<' $@15 . optional_function_argument_list optional_function_type '>' $@16 func_addr_name

    '('  shift, and go to state 321

    $default  reduce using rule 114 (optional_function_argument_list)

    optional_function_argument_list  go to state 1125


State 1017

  707 make_struct_fields: "$f" '(' . expr ')' copy_or_move expr
  708                   | "$f" '(' . expr ')' ":=" expr

    "struct"                          shift, and go to state 408
    "class"                           shift, and go to state 409
    "true"                            shift, and go to state 410
    "false"                           shift, and go to state 411
    "new"                             shift, and go to state 412
    "typeinfo"                        shift, and go to state 413
    "type"                            shift, and go to state 414
    "array"                           shift, and go to state 415
    "null"                            shift, and go to state 416
    "table"                           shift, and go to state 417
    "deref"                           shift, and go to state 418
    "cast"                            shift, and go to state 419
    "upcast"                          shift, and go to state 420
    "addr"                            shift, and go to state 421
    "reinterpret"                     shift, and go to state 422
    "fixed_array"                     shift, and go to state 423
    "default"                         shift, and go to state 424
    "bool"                            shift, and go to state 222
    "void"                            shift, and go to state 223
    "string"                          shift, and go to state 224
    "int"                             shift, and go to state 226
    "int2"                            shift, and go to state 227
    "int3"                            shift, and go to state 228
    "int4"                            shift, and go to state 229
    "uint"                            shift, and go to state 230
    "bitfield"                        shift, and go to state 425
    "uint2"                           shift, and go to state 232
    "uint3"                           shift, and go to state 233
    "uint4"                           shift, and go to state 234
    "float"                           shift, and go to state 235
    "float2"                          shift, and go to state 236
    "float3"                          shift, and go to state 237
    "float4"                          shift, and go to state 238
    "range"                           shift, and go to state 239
    "urange"                          shift, and go to state 240
    "range64"                         shift, and go to state 241
    "urange64"                        shift, and go to state 242
    "int64"                           shift, and go to state 244
    "uint64"                          shift, and go to state 245
    "double"                          shift, and go to state 246
    "int8"                            shift, and go to state 249
    "uint8"                           shift, and go to state 250
    "int16"                           shift, and go to state 251
    "uint16"                          shift, and go to state 252
    "tuple"                           shift, and go to state 426
    "variant"                         shift, and go to state 427
    "generator"                       shift, and go to state 428
    "++"                              shift, and go to state 429
    "--"                              shift, and go to state 430
    "::"                              shift, and go to state 55
    "$$"                              shift, and go to state 431
    "$i"                              shift, and go to state 432
    "$v"                              shift, and go to state 433
    "$b"                              shift, and go to state 434
    "$a"                              shift, and go to state 435
    "$c"                              shift, and go to state 436
    "..."                             shift, and go to state 437
    "integer constant"                shift, and go to state 438
    "long integer constant"           shift, and go to state 439
    "unsigned integer constant"       shift, and go to state 440
    "unsigned long integer constant"  shift, and go to state 441
    "unsigned int8 constant"          shift, and go to state 442
    "floating point constant"         shift, and go to state 443
    "double constant"                 shift, and go to state 444
    "name"                            shift, and go to state 56
    "start of the string"             shift, and go to state 445
    "begin of code block"             shift, and go to state 446
    '-'                               shift, and go to state 447
    '+'                               shift, and go to state 448
    '*'                               shift, and go to state 449
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 450
    '!'                               shift, and go to state 451
    '['                               shift, and go to state 452
    '('                               shift, and go to state 453
    '$'                               shift, and go to state 454
    '@'                               shift, and go to state 455

    string_builder          go to state 456
    expr_reader             go to state 457
    expr_call_pipe          go to state 458
    name_in_namespace       go to state 459
    expr_new                go to state 460
    expr_cast               go to state 461
    expr_type_decl          go to state 462
    expr_type_info          go to state 463
    block_or_lambda         go to state 464
    expr_full_block         go to state 465
    expr_numeric_const      go to state 466
    expr_named_call         go to state 467
    expr_method_call        go to state 468
    func_addr_expr          go to state 469
    expr_field              go to state 470
    expr_call               go to state 471
    expr                    go to state 1126
    expr_mtag               go to state 473
    basic_type_declaration  go to state 474
    make_decl               go to state 475
    make_struct_decl        go to state 476
    make_tuple_call         go to state 477
    make_dim_decl           go to state 478
    make_table_decl         go to state 479
    array_comprehension     go to state 480


State 1018

  704 make_struct_fields: "name" ":=" . expr

    "struct"                          shift, and go to state 408
    "class"                           shift, and go to state 409
    "true"                            shift, and go to state 410
    "false"                           shift, and go to state 411
    "new"                             shift, and go to state 412
    "typeinfo"                        shift, and go to state 413
    "type"                            shift, and go to state 414
    "array"                           shift, and go to state 415
    "null"                            shift, and go to state 416
    "table"                           shift, and go to state 417
    "deref"                           shift, and go to state 418
    "cast"                            shift, and go to state 419
    "upcast"                          shift, and go to state 420
    "addr"                            shift, and go to state 421
    "reinterpret"                     shift, and go to state 422
    "fixed_array"                     shift, and go to state 423
    "default"                         shift, and go to state 424
    "bool"                            shift, and go to state 222
    "void"                            shift, and go to state 223
    "string"                          shift, and go to state 224
    "int"                             shift, and go to state 226
    "int2"                            shift, and go to state 227
    "int3"                            shift, and go to state 228
    "int4"                            shift, and go to state 229
    "uint"                            shift, and go to state 230
    "bitfield"                        shift, and go to state 425
    "uint2"                           shift, and go to state 232
    "uint3"                           shift, and go to state 233
    "uint4"                           shift, and go to state 234
    "float"                           shift, and go to state 235
    "float2"                          shift, and go to state 236
    "float3"                          shift, and go to state 237
    "float4"                          shift, and go to state 238
    "range"                           shift, and go to state 239
    "urange"                          shift, and go to state 240
    "range64"                         shift, and go to state 241
    "urange64"                        shift, and go to state 242
    "int64"                           shift, and go to state 244
    "uint64"                          shift, and go to state 245
    "double"                          shift, and go to state 246
    "int8"                            shift, and go to state 249
    "uint8"                           shift, and go to state 250
    "int16"                           shift, and go to state 251
    "uint16"                          shift, and go to state 252
    "tuple"                           shift, and go to state 426
    "variant"                         shift, and go to state 427
    "generator"                       shift, and go to state 428
    "++"                              shift, and go to state 429
    "--"                              shift, and go to state 430
    "::"                              shift, and go to state 55
    "$$"                              shift, and go to state 431
    "$i"                              shift, and go to state 432
    "$v"                              shift, and go to state 433
    "$b"                              shift, and go to state 434
    "$a"                              shift, and go to state 435
    "$c"                              shift, and go to state 436
    "..."                             shift, and go to state 437
    "integer constant"                shift, and go to state 438
    "long integer constant"           shift, and go to state 439
    "unsigned integer constant"       shift, and go to state 440
    "unsigned long integer constant"  shift, and go to state 441
    "unsigned int8 constant"          shift, and go to state 442
    "floating point constant"         shift, and go to state 443
    "double constant"                 shift, and go to state 444
    "name"                            shift, and go to state 56
    "start of the string"             shift, and go to state 445
    "begin of code block"             shift, and go to state 446
    '-'                               shift, and go to state 447
    '+'                               shift, and go to state 448
    '*'                               shift, and go to state 449
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 450
    '!'                               shift, and go to state 451
    '['                               shift, and go to state 452
    '('                               shift, and go to state 453
    '$'                               shift, and go to state 454
    '@'                               shift, and go to state 455

    string_builder          go to state 456
    expr_reader             go to state 457
    expr_call_pipe          go to state 458
    name_in_namespace       go to state 459
    expr_new                go to state 460
    expr_cast               go to state 461
    expr_type_decl          go to state 462
    expr_type_info          go to state 463
    block_or_lambda         go to state 464
    expr_full_block         go to state 465
    expr_numeric_const      go to state 466
    expr_named_call         go to state 467
    expr_method_call        go to state 468
    func_addr_expr          go to state 469
    expr_field              go to state 470
    expr_call               go to state 471
    expr                    go to state 1127
    expr_mtag               go to state 473
    basic_type_declaration  go to state 474
    make_decl               go to state 475
    make_struct_decl        go to state 476
    make_tuple_call         go to state 477
    make_dim_decl           go to state 478
    make_table_decl         go to state 479
    array_comprehension     go to state 480


State 1019

  703 make_struct_fields: "name" copy_or_move . expr

    "struct"                          shift, and go to state 408
    "class"                           shift, and go to state 409
    "true"                            shift, and go to state 410
    "false"                           shift, and go to state 411
    "new"                             shift, and go to state 412
    "typeinfo"                        shift, and go to state 413
    "type"                            shift, and go to state 414
    "array"                           shift, and go to state 415
    "null"                            shift, and go to state 416
    "table"                           shift, and go to state 417
    "deref"                           shift, and go to state 418
    "cast"                            shift, and go to state 419
    "upcast"                          shift, and go to state 420
    "addr"                            shift, and go to state 421
    "reinterpret"                     shift, and go to state 422
    "fixed_array"                     shift, and go to state 423
    "default"                         shift, and go to state 424
    "bool"                            shift, and go to state 222
    "void"                            shift, and go to state 223
    "string"                          shift, and go to state 224
    "int"                             shift, and go to state 226
    "int2"                            shift, and go to state 227
    "int3"                            shift, and go to state 228
    "int4"                            shift, and go to state 229
    "uint"                            shift, and go to state 230
    "bitfield"                        shift, and go to state 425
    "uint2"                           shift, and go to state 232
    "uint3"                           shift, and go to state 233
    "uint4"                           shift, and go to state 234
    "float"                           shift, and go to state 235
    "float2"                          shift, and go to state 236
    "float3"                          shift, and go to state 237
    "float4"                          shift, and go to state 238
    "range"                           shift, and go to state 239
    "urange"                          shift, and go to state 240
    "range64"                         shift, and go to state 241
    "urange64"                        shift, and go to state 242
    "int64"                           shift, and go to state 244
    "uint64"                          shift, and go to state 245
    "double"                          shift, and go to state 246
    "int8"                            shift, and go to state 249
    "uint8"                           shift, and go to state 250
    "int16"                           shift, and go to state 251
    "uint16"                          shift, and go to state 252
    "tuple"                           shift, and go to state 426
    "variant"                         shift, and go to state 427
    "generator"                       shift, and go to state 428
    "++"                              shift, and go to state 429
    "--"                              shift, and go to state 430
    "::"                              shift, and go to state 55
    "$$"                              shift, and go to state 431
    "$i"                              shift, and go to state 432
    "$v"                              shift, and go to state 433
    "$b"                              shift, and go to state 434
    "$a"                              shift, and go to state 435
    "$c"                              shift, and go to state 436
    "..."                             shift, and go to state 437
    "integer constant"                shift, and go to state 438
    "long integer constant"           shift, and go to state 439
    "unsigned integer constant"       shift, and go to state 440
    "unsigned long integer constant"  shift, and go to state 441
    "unsigned int8 constant"          shift, and go to state 442
    "floating point constant"         shift, and go to state 443
    "double constant"                 shift, and go to state 444
    "name"                            shift, and go to state 56
    "start of the string"             shift, and go to state 445
    "begin of code block"             shift, and go to state 446
    '-'                               shift, and go to state 447
    '+'                               shift, and go to state 448
    '*'                               shift, and go to state 449
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 450
    '!'                               shift, and go to state 451
    '['                               shift, and go to state 452
    '('                               shift, and go to state 453
    '$'                               shift, and go to state 454
    '@'                               shift, and go to state 455

    string_builder          go to state 456
    expr_reader             go to state 457
    expr_call_pipe          go to state 458
    name_in_namespace       go to state 459
    expr_new                go to state 460
    expr_cast               go to state 461
    expr_type_decl          go to state 462
    expr_type_info          go to state 463
    block_or_lambda         go to state 464
    expr_full_block         go to state 465
    expr_numeric_const      go to state 466
    expr_named_call         go to state 467
    expr_method_call        go to state 468
    func_addr_expr          go to state 469
    expr_field              go to state 470
    expr_call               go to state 471
    expr                    go to state 1128
    expr_mtag               go to state 473
    basic_type_declaration  go to state 474
    make_decl               go to state 475
    make_struct_decl        go to state 476
    make_tuple_call         go to state 477
    make_dim_decl           go to state 478
    make_table_decl         go to state 479
    array_comprehension     go to state 480


State 1020

  334 expr_named_call: name_in_namespace '(' '[' make_struct_fields . ']' ')'
  705 make_struct_fields: make_struct_fields . ',' "name" copy_or_move expr
  706                   | make_struct_fields . ',' "name" ":=" expr
  709                   | make_struct_fields . ',' "$f" '(' expr ')' copy_or_move expr
  710                   | make_struct_fields . ',' "$f" '(' expr ')' ":=" expr

    ','  shift, and go to state 1023
    ']'  shift, and go to state 1129


State 1021

  290 expr_list: expr_list ',' . expr
  335 expr_named_call: name_in_namespace '(' expr_list ',' . '[' make_struct_fields ']' ')'

    "struct"                          shift, and go to state 408
    "class"                           shift, and go to state 409
    "true"                            shift, and go to state 410
    "false"                           shift, and go to state 411
    "new"                             shift, and go to state 412
    "typeinfo"                        shift, and go to state 413
    "type"                            shift, and go to state 414
    "array"                           shift, and go to state 415
    "null"                            shift, and go to state 416
    "table"                           shift, and go to state 417
    "deref"                           shift, and go to state 418
    "cast"                            shift, and go to state 419
    "upcast"                          shift, and go to state 420
    "addr"                            shift, and go to state 421
    "reinterpret"                     shift, and go to state 422
    "fixed_array"                     shift, and go to state 423
    "default"                         shift, and go to state 424
    "bool"                            shift, and go to state 222
    "void"                            shift, and go to state 223
    "string"                          shift, and go to state 224
    "int"                             shift, and go to state 226
    "int2"                            shift, and go to state 227
    "int3"                            shift, and go to state 228
    "int4"                            shift, and go to state 229
    "uint"                            shift, and go to state 230
    "bitfield"                        shift, and go to state 425
    "uint2"                           shift, and go to state 232
    "uint3"                           shift, and go to state 233
    "uint4"                           shift, and go to state 234
    "float"                           shift, and go to state 235
    "float2"                          shift, and go to state 236
    "float3"                          shift, and go to state 237
    "float4"                          shift, and go to state 238
    "range"                           shift, and go to state 239
    "urange"                          shift, and go to state 240
    "range64"                         shift, and go to state 241
    "urange64"                        shift, and go to state 242
    "int64"                           shift, and go to state 244
    "uint64"                          shift, and go to state 245
    "double"                          shift, and go to state 246
    "int8"                            shift, and go to state 249
    "uint8"                           shift, and go to state 250
    "int16"                           shift, and go to state 251
    "uint16"                          shift, and go to state 252
    "tuple"                           shift, and go to state 426
    "variant"                         shift, and go to state 427
    "generator"                       shift, and go to state 428
    "++"                              shift, and go to state 429
    "--"                              shift, and go to state 430
    "::"                              shift, and go to state 55
    "$$"                              shift, and go to state 431
    "$i"                              shift, and go to state 432
    "$v"                              shift, and go to state 433
    "$b"                              shift, and go to state 434
    "$a"                              shift, and go to state 435
    "$c"                              shift, and go to state 436
    "..."                             shift, and go to state 437
    "integer constant"                shift, and go to state 438
    "long integer constant"           shift, and go to state 439
    "unsigned integer constant"       shift, and go to state 440
    "unsigned long integer constant"  shift, and go to state 441
    "unsigned int8 constant"          shift, and go to state 442
    "floating point constant"         shift, and go to state 443
    "double constant"                 shift, and go to state 444
    "name"                            shift, and go to state 56
    "start of the string"             shift, and go to state 445
    "begin of code block"             shift, and go to state 446
    '-'                               shift, and go to state 447
    '+'                               shift, and go to state 448
    '*'                               shift, and go to state 449
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 450
    '!'                               shift, and go to state 451
    '['                               shift, and go to state 1130
    '('                               shift, and go to state 453
    '$'                               shift, and go to state 454
    '@'                               shift, and go to state 455

    string_builder          go to state 456
    expr_reader             go to state 457
    expr_call_pipe          go to state 458
    name_in_namespace       go to state 459
    expr_new                go to state 460
    expr_cast               go to state 461
    expr_type_decl          go to state 462
    expr_type_info          go to state 463
    block_or_lambda         go to state 464
    expr_full_block         go to state 465
    expr_numeric_const      go to state 466
    expr_named_call         go to state 467
    expr_method_call        go to state 468
    func_addr_expr          go to state 469
    expr_field              go to state 470
    expr_call               go to state 471
    expr                    go to state 1010
    expr_mtag               go to state 473
    basic_type_declaration  go to state 474
    make_decl               go to state 475
    make_struct_decl        go to state 476
    make_tuple_call         go to state 477
    make_dim_decl           go to state 478
    make_table_decl         go to state 479
    array_comprehension     go to state 480


State 1022

  356 expr_call: name_in_namespace '(' expr_list ')' .

    $default  reduce using rule 356 (expr_call)


State 1023

  705 make_struct_fields: make_struct_fields ',' . "name" copy_or_move expr
  706                   | make_struct_fields ',' . "name" ":=" expr
  709                   | make_struct_fields ',' . "$f" '(' expr ')' copy_or_move expr
  710                   | make_struct_fields ',' . "$f" '(' expr ')' ":=" expr

    "$f"    shift, and go to state 1131
    "name"  shift, and go to state 1132


State 1024

  355 expr_call: name_in_namespace '(' make_struct_single ')' .

    $default  reduce using rule 355 (expr_call)


State 1025

  304 optional_capture_list: '[' '[' . capture_list ']' ']'

    "<-"  shift, and go to state 1133
    ":="  shift, and go to state 1134
    '='   shift, and go to state 1135
    '&'   shift, and go to state 1136

    capture_entry  go to state 1137
    capture_list   go to state 1138


State 1026

  305 expr_full_block: block_or_lambda optional_annotation_list optional_capture_list optional_function_argument_list . optional_function_type block_or_simple_block

    ':'  shift, and go to state 389

    $default  reduce using rule 117 (optional_function_type)

    optional_function_type  go to state 1139


State 1027

  307 expr_full_block_assumed_piped: "begin of code block" expressions "end of code block" .

    $default  reduce using rule 307 (expr_full_block_assumed_piped)


State 1028

  306 expr_full_block_assumed_piped: block_or_lambda optional_annotation_list optional_capture_list . optional_function_argument_list optional_function_type expression_block

    '('  shift, and go to state 321

    $default  reduce using rule 114 (optional_function_argument_list)

    optional_function_argument_list  go to state 1140


State 1029

  417 expr: expr "is" "type" '<' . $@19 type_declaration_no_options '>' $@20

    $default  reduce using rule 415 ($@19)

    $@19  go to state 1141


State 1030

  455 expr_mtag: expr "is" "$f" '(' . expr ')'

    "struct"                          shift, and go to state 408
    "class"                           shift, and go to state 409
    "true"                            shift, and go to state 410
    "false"                           shift, and go to state 411
    "new"                             shift, and go to state 412
    "typeinfo"                        shift, and go to state 413
    "type"                            shift, and go to state 414
    "array"                           shift, and go to state 415
    "null"                            shift, and go to state 416
    "table"                           shift, and go to state 417
    "deref"                           shift, and go to state 418
    "cast"                            shift, and go to state 419
    "upcast"                          shift, and go to state 420
    "addr"                            shift, and go to state 421
    "reinterpret"                     shift, and go to state 422
    "fixed_array"                     shift, and go to state 423
    "default"                         shift, and go to state 424
    "bool"                            shift, and go to state 222
    "void"                            shift, and go to state 223
    "string"                          shift, and go to state 224
    "int"                             shift, and go to state 226
    "int2"                            shift, and go to state 227
    "int3"                            shift, and go to state 228
    "int4"                            shift, and go to state 229
    "uint"                            shift, and go to state 230
    "bitfield"                        shift, and go to state 425
    "uint2"                           shift, and go to state 232
    "uint3"                           shift, and go to state 233
    "uint4"                           shift, and go to state 234
    "float"                           shift, and go to state 235
    "float2"                          shift, and go to state 236
    "float3"                          shift, and go to state 237
    "float4"                          shift, and go to state 238
    "range"                           shift, and go to state 239
    "urange"                          shift, and go to state 240
    "range64"                         shift, and go to state 241
    "urange64"                        shift, and go to state 242
    "int64"                           shift, and go to state 244
    "uint64"                          shift, and go to state 245
    "double"                          shift, and go to state 246
    "int8"                            shift, and go to state 249
    "uint8"                           shift, and go to state 250
    "int16"                           shift, and go to state 251
    "uint16"                          shift, and go to state 252
    "tuple"                           shift, and go to state 426
    "variant"                         shift, and go to state 427
    "generator"                       shift, and go to state 428
    "++"                              shift, and go to state 429
    "--"                              shift, and go to state 430
    "::"                              shift, and go to state 55
    "$$"                              shift, and go to state 431
    "$i"                              shift, and go to state 432
    "$v"                              shift, and go to state 433
    "$b"                              shift, and go to state 434
    "$a"                              shift, and go to state 435
    "$c"                              shift, and go to state 436
    "..."                             shift, and go to state 437
    "integer constant"                shift, and go to state 438
    "long integer constant"           shift, and go to state 439
    "unsigned integer constant"       shift, and go to state 440
    "unsigned long integer constant"  shift, and go to state 441
    "unsigned int8 constant"          shift, and go to state 442
    "floating point constant"         shift, and go to state 443
    "double constant"                 shift, and go to state 444
    "name"                            shift, and go to state 56
    "start of the string"             shift, and go to state 445
    "begin of code block"             shift, and go to state 446
    '-'                               shift, and go to state 447
    '+'                               shift, and go to state 448
    '*'                               shift, and go to state 449
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 450
    '!'                               shift, and go to state 451
    '['                               shift, and go to state 452
    '('                               shift, and go to state 453
    '$'                               shift, and go to state 454
    '@'                               shift, and go to state 455

    string_builder          go to state 456
    expr_reader             go to state 457
    expr_call_pipe          go to state 458
    name_in_namespace       go to state 459
    expr_new                go to state 460
    expr_cast               go to state 461
    expr_type_decl          go to state 462
    expr_type_info          go to state 463
    block_or_lambda         go to state 464
    expr_full_block         go to state 465
    expr_numeric_const      go to state 466
    expr_named_call         go to state 467
    expr_method_call        go to state 468
    func_addr_expr          go to state 469
    expr_field              go to state 470
    expr_call               go to state 471
    expr                    go to state 1142
    expr_mtag               go to state 473
    basic_type_declaration  go to state 474
    make_decl               go to state 475
    make_struct_decl        go to state 476
    make_tuple_call         go to state 477
    make_dim_decl           go to state 478
    make_table_decl         go to state 479
    array_comprehension     go to state 480


State 1031

  423 expr: expr "as" "type" '<' . $@21 type_declaration '>' $@22

    $default  reduce using rule 421 ($@21)

    $@21  go to state 1143


State 1032

  453 expr_mtag: expr "as" "$f" '(' . expr ')'

    "struct"                          shift, and go to state 408
    "class"                           shift, and go to state 409
    "true"                            shift, and go to state 410
    "false"                           shift, and go to state 411
    "new"                             shift, and go to state 412
    "typeinfo"                        shift, and go to state 413
    "type"                            shift, and go to state 414
    "array"                           shift, and go to state 415
    "null"                            shift, and go to state 416
    "table"                           shift, and go to state 417
    "deref"                           shift, and go to state 418
    "cast"                            shift, and go to state 419
    "upcast"                          shift, and go to state 420
    "addr"                            shift, and go to state 421
    "reinterpret"                     shift, and go to state 422
    "fixed_array"                     shift, and go to state 423
    "default"                         shift, and go to state 424
    "bool"                            shift, and go to state 222
    "void"                            shift, and go to state 223
    "string"                          shift, and go to state 224
    "int"                             shift, and go to state 226
    "int2"                            shift, and go to state 227
    "int3"                            shift, and go to state 228
    "int4"                            shift, and go to state 229
    "uint"                            shift, and go to state 230
    "bitfield"                        shift, and go to state 425
    "uint2"                           shift, and go to state 232
    "uint3"                           shift, and go to state 233
    "uint4"                           shift, and go to state 234
    "float"                           shift, and go to state 235
    "float2"                          shift, and go to state 236
    "float3"                          shift, and go to state 237
    "float4"                          shift, and go to state 238
    "range"                           shift, and go to state 239
    "urange"                          shift, and go to state 240
    "range64"                         shift, and go to state 241
    "urange64"                        shift, and go to state 242
    "int64"                           shift, and go to state 244
    "uint64"                          shift, and go to state 245
    "double"                          shift, and go to state 246
    "int8"                            shift, and go to state 249
    "uint8"                           shift, and go to state 250
    "int16"                           shift, and go to state 251
    "uint16"                          shift, and go to state 252
    "tuple"                           shift, and go to state 426
    "variant"                         shift, and go to state 427
    "generator"                       shift, and go to state 428
    "++"                              shift, and go to state 429
    "--"                              shift, and go to state 430
    "::"                              shift, and go to state 55
    "$$"                              shift, and go to state 431
    "$i"                              shift, and go to state 432
    "$v"                              shift, and go to state 433
    "$b"                              shift, and go to state 434
    "$a"                              shift, and go to state 435
    "$c"                              shift, and go to state 436
    "..."                             shift, and go to state 437
    "integer constant"                shift, and go to state 438
    "long integer constant"           shift, and go to state 439
    "unsigned integer constant"       shift, and go to state 440
    "unsigned long integer constant"  shift, and go to state 441
    "unsigned int8 constant"          shift, and go to state 442
    "floating point constant"         shift, and go to state 443
    "double constant"                 shift, and go to state 444
    "name"                            shift, and go to state 56
    "start of the string"             shift, and go to state 445
    "begin of code block"             shift, and go to state 446
    '-'                               shift, and go to state 447
    '+'                               shift, and go to state 448
    '*'                               shift, and go to state 449
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 450
    '!'                               shift, and go to state 451
    '['                               shift, and go to state 452
    '('                               shift, and go to state 453
    '$'                               shift, and go to state 454
    '@'                               shift, and go to state 455

    string_builder          go to state 456
    expr_reader             go to state 457
    expr_call_pipe          go to state 458
    name_in_namespace       go to state 459
    expr_new                go to state 460
    expr_cast               go to state 461
    expr_type_decl          go to state 462
    expr_type_info          go to state 463
    block_or_lambda         go to state 464
    expr_full_block         go to state 465
    expr_numeric_const      go to state 466
    expr_named_call         go to state 467
    expr_method_call        go to state 468
    func_addr_expr          go to state 469
    expr_field              go to state 470
    expr_call               go to state 471
    expr                    go to state 1144
    expr_mtag               go to state 473
    basic_type_declaration  go to state 474
    make_decl               go to state 475
    make_struct_decl        go to state 476
    make_tuple_call         go to state 477
    make_dim_decl           go to state 478
    make_table_decl         go to state 479
    array_comprehension     go to state 480


State 1033

  336 expr_method_call: expr "->" "name" '(' . ')'
  337                 | expr "->" "name" '(' . expr_list ')'

    "struct"                          shift, and go to state 408
    "class"                           shift, and go to state 409
    "true"                            shift, and go to state 410
    "false"                           shift, and go to state 411
    "new"                             shift, and go to state 412
    "typeinfo"                        shift, and go to state 413
    "type"                            shift, and go to state 414
    "array"                           shift, and go to state 415
    "null"                            shift, and go to state 416
    "table"                           shift, and go to state 417
    "deref"                           shift, and go to state 418
    "cast"                            shift, and go to state 419
    "upcast"                          shift, and go to state 420
    "addr"                            shift, and go to state 421
    "reinterpret"                     shift, and go to state 422
    "fixed_array"                     shift, and go to state 423
    "default"                         shift, and go to state 424
    "bool"                            shift, and go to state 222
    "void"                            shift, and go to state 223
    "string"                          shift, and go to state 224
    "int"                             shift, and go to state 226
    "int2"                            shift, and go to state 227
    "int3"                            shift, and go to state 228
    "int4"                            shift, and go to state 229
    "uint"                            shift, and go to state 230
    "bitfield"                        shift, and go to state 425
    "uint2"                           shift, and go to state 232
    "uint3"                           shift, and go to state 233
    "uint4"                           shift, and go to state 234
    "float"                           shift, and go to state 235
    "float2"                          shift, and go to state 236
    "float3"                          shift, and go to state 237
    "float4"                          shift, and go to state 238
    "range"                           shift, and go to state 239
    "urange"                          shift, and go to state 240
    "range64"                         shift, and go to state 241
    "urange64"                        shift, and go to state 242
    "int64"                           shift, and go to state 244
    "uint64"                          shift, and go to state 245
    "double"                          shift, and go to state 246
    "int8"                            shift, and go to state 249
    "uint8"                           shift, and go to state 250
    "int16"                           shift, and go to state 251
    "uint16"                          shift, and go to state 252
    "tuple"                           shift, and go to state 426
    "variant"                         shift, and go to state 427
    "generator"                       shift, and go to state 428
    "++"                              shift, and go to state 429
    "--"                              shift, and go to state 430
    "::"                              shift, and go to state 55
    "$$"                              shift, and go to state 431
    "$i"                              shift, and go to state 432
    "$v"                              shift, and go to state 433
    "$b"                              shift, and go to state 434
    "$a"                              shift, and go to state 435
    "$c"                              shift, and go to state 436
    "..."                             shift, and go to state 437
    "integer constant"                shift, and go to state 438
    "long integer constant"           shift, and go to state 439
    "unsigned integer constant"       shift, and go to state 440
    "unsigned long integer constant"  shift, and go to state 441
    "unsigned int8 constant"          shift, and go to state 442
    "floating point constant"         shift, and go to state 443
    "double constant"                 shift, and go to state 444
    "name"                            shift, and go to state 56
    "start of the string"             shift, and go to state 445
    "begin of code block"             shift, and go to state 446
    '-'                               shift, and go to state 447
    '+'                               shift, and go to state 448
    '*'                               shift, and go to state 449
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 450
    '!'                               shift, and go to state 451
    '['                               shift, and go to state 452
    '('                               shift, and go to state 453
    ')'                               shift, and go to state 1145
    '$'                               shift, and go to state 454
    '@'                               shift, and go to state 455

    string_builder          go to state 456
    expr_reader             go to state 457
    expr_call_pipe          go to state 458
    name_in_namespace       go to state 459
    expr_new                go to state 460
    expr_cast               go to state 461
    expr_type_decl          go to state 462
    expr_type_info          go to state 463
    expr_list               go to state 1146
    block_or_lambda         go to state 464
    expr_full_block         go to state 465
    expr_numeric_const      go to state 466
    expr_named_call         go to state 467
    expr_method_call        go to state 468
    func_addr_expr          go to state 469
    expr_field              go to state 470
    expr_call               go to state 471
    expr                    go to state 634
    expr_mtag               go to state 473
    basic_type_declaration  go to state 474
    make_decl               go to state 475
    make_struct_decl        go to state 476
    make_tuple_call         go to state 477
    make_dim_decl           go to state 478
    make_table_decl         go to state 479
    array_comprehension     go to state 480


State 1034

  450 expr_mtag: expr "?." "$f" '(' . expr ')'

    "struct"                          shift, and go to state 408
    "class"                           shift, and go to state 409
    "true"                            shift, and go to state 410
    "false"                           shift, and go to state 411
    "new"                             shift, and go to state 412
    "typeinfo"                        shift, and go to state 413
    "type"                            shift, and go to state 414
    "array"                           shift, and go to state 415
    "null"                            shift, and go to state 416
    "table"                           shift, and go to state 417
    "deref"                           shift, and go to state 418
    "cast"                            shift, and go to state 419
    "upcast"                          shift, and go to state 420
    "addr"                            shift, and go to state 421
    "reinterpret"                     shift, and go to state 422
    "fixed_array"                     shift, and go to state 423
    "default"                         shift, and go to state 424
    "bool"                            shift, and go to state 222
    "void"                            shift, and go to state 223
    "string"                          shift, and go to state 224
    "int"                             shift, and go to state 226
    "int2"                            shift, and go to state 227
    "int3"                            shift, and go to state 228
    "int4"                            shift, and go to state 229
    "uint"                            shift, and go to state 230
    "bitfield"                        shift, and go to state 425
    "uint2"                           shift, and go to state 232
    "uint3"                           shift, and go to state 233
    "uint4"                           shift, and go to state 234
    "float"                           shift, and go to state 235
    "float2"                          shift, and go to state 236
    "float3"                          shift, and go to state 237
    "float4"                          shift, and go to state 238
    "range"                           shift, and go to state 239
    "urange"                          shift, and go to state 240
    "range64"                         shift, and go to state 241
    "urange64"                        shift, and go to state 242
    "int64"                           shift, and go to state 244
    "uint64"                          shift, and go to state 245
    "double"                          shift, and go to state 246
    "int8"                            shift, and go to state 249
    "uint8"                           shift, and go to state 250
    "int16"                           shift, and go to state 251
    "uint16"                          shift, and go to state 252
    "tuple"                           shift, and go to state 426
    "variant"                         shift, and go to state 427
    "generator"                       shift, and go to state 428
    "++"                              shift, and go to state 429
    "--"                              shift, and go to state 430
    "::"                              shift, and go to state 55
    "$$"                              shift, and go to state 431
    "$i"                              shift, and go to state 432
    "$v"                              shift, and go to state 433
    "$b"                              shift, and go to state 434
    "$a"                              shift, and go to state 435
    "$c"                              shift, and go to state 436
    "..."                             shift, and go to state 437
    "integer constant"                shift, and go to state 438
    "long integer constant"           shift, and go to state 439
    "unsigned integer constant"       shift, and go to state 440
    "unsigned long integer constant"  shift, and go to state 441
    "unsigned int8 constant"          shift, and go to state 442
    "floating point constant"         shift, and go to state 443
    "double constant"                 shift, and go to state 444
    "name"                            shift, and go to state 56
    "start of the string"             shift, and go to state 445
    "begin of code block"             shift, and go to state 446
    '-'                               shift, and go to state 447
    '+'                               shift, and go to state 448
    '*'                               shift, and go to state 449
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 450
    '!'                               shift, and go to state 451
    '['                               shift, and go to state 452
    '('                               shift, and go to state 453
    '$'                               shift, and go to state 454
    '@'                               shift, and go to state 455

    string_builder          go to state 456
    expr_reader             go to state 457
    expr_call_pipe          go to state 458
    name_in_namespace       go to state 459
    expr_new                go to state 460
    expr_cast               go to state 461
    expr_type_decl          go to state 462
    expr_type_info          go to state 463
    block_or_lambda         go to state 464
    expr_full_block         go to state 465
    expr_numeric_const      go to state 466
    expr_named_call         go to state 467
    expr_method_call        go to state 468
    func_addr_expr          go to state 469
    expr_field              go to state 470
    expr_call               go to state 471
    expr                    go to state 1147
    expr_mtag               go to state 473
    basic_type_declaration  go to state 474
    make_decl               go to state 475
    make_struct_decl        go to state 476
    make_tuple_call         go to state 477
    make_dim_decl           go to state 478
    make_table_decl         go to state 479
    array_comprehension     go to state 480


State 1035

  402 expr: expr "?[" expr ']' .

    $default  reduce using rule 402 (expr)


State 1036

  428 expr: expr '?' "as" "type" . '<' $@23 type_declaration '>' $@24

    '<'  shift, and go to state 1148


State 1037

  454 expr_mtag: expr '?' "as" "$f" . '(' expr ')'

    '('  shift, and go to state 1149


State 1038

  425 expr: expr '?' "as" "name" .

    $default  reduce using rule 425 (expr)


State 1039

  429 expr: expr '?' "as" basic_type_declaration .

    $default  reduce using rule 429 (expr)


State 1040

  414 expr: expr '?' expr ':' . expr

    "struct"                          shift, and go to state 408
    "class"                           shift, and go to state 409
    "true"                            shift, and go to state 410
    "false"                           shift, and go to state 411
    "new"                             shift, and go to state 412
    "typeinfo"                        shift, and go to state 413
    "type"                            shift, and go to state 414
    "array"                           shift, and go to state 415
    "null"                            shift, and go to state 416
    "table"                           shift, and go to state 417
    "deref"                           shift, and go to state 418
    "cast"                            shift, and go to state 419
    "upcast"                          shift, and go to state 420
    "addr"                            shift, and go to state 421
    "reinterpret"                     shift, and go to state 422
    "fixed_array"                     shift, and go to state 423
    "default"                         shift, and go to state 424
    "bool"                            shift, and go to state 222
    "void"                            shift, and go to state 223
    "string"                          shift, and go to state 224
    "int"                             shift, and go to state 226
    "int2"                            shift, and go to state 227
    "int3"                            shift, and go to state 228
    "int4"                            shift, and go to state 229
    "uint"                            shift, and go to state 230
    "bitfield"                        shift, and go to state 425
    "uint2"                           shift, and go to state 232
    "uint3"                           shift, and go to state 233
    "uint4"                           shift, and go to state 234
    "float"                           shift, and go to state 235
    "float2"                          shift, and go to state 236
    "float3"                          shift, and go to state 237
    "float4"                          shift, and go to state 238
    "range"                           shift, and go to state 239
    "urange"                          shift, and go to state 240
    "range64"                         shift, and go to state 241
    "urange64"                        shift, and go to state 242
    "int64"                           shift, and go to state 244
    "uint64"                          shift, and go to state 245
    "double"                          shift, and go to state 246
    "int8"                            shift, and go to state 249
    "uint8"                           shift, and go to state 250
    "int16"                           shift, and go to state 251
    "uint16"                          shift, and go to state 252
    "tuple"                           shift, and go to state 426
    "variant"                         shift, and go to state 427
    "generator"                       shift, and go to state 428
    "++"                              shift, and go to state 429
    "--"                              shift, and go to state 430
    "::"                              shift, and go to state 55
    "$$"                              shift, and go to state 431
    "$i"                              shift, and go to state 432
    "$v"                              shift, and go to state 433
    "$b"                              shift, and go to state 434
    "$a"                              shift, and go to state 435
    "$c"                              shift, and go to state 436
    "..."                             shift, and go to state 437
    "integer constant"                shift, and go to state 438
    "long integer constant"           shift, and go to state 439
    "unsigned integer constant"       shift, and go to state 440
    "unsigned long integer constant"  shift, and go to state 441
    "unsigned int8 constant"          shift, and go to state 442
    "floating point constant"         shift, and go to state 443
    "double constant"                 shift, and go to state 444
    "name"                            shift, and go to state 56
    "start of the string"             shift, and go to state 445
    "begin of code block"             shift, and go to state 446
    '-'                               shift, and go to state 447
    '+'                               shift, and go to state 448
    '*'                               shift, and go to state 449
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 450
    '!'                               shift, and go to state 451
    '['                               shift, and go to state 452
    '('                               shift, and go to state 453
    '$'                               shift, and go to state 454
    '@'                               shift, and go to state 455

    string_builder          go to state 456
    expr_reader             go to state 457
    expr_call_pipe          go to state 458
    name_in_namespace       go to state 459
    expr_new                go to state 460
    expr_cast               go to state 461
    expr_type_decl          go to state 462
    expr_type_info          go to state 463
    block_or_lambda         go to state 464
    expr_full_block         go to state 465
    expr_numeric_const      go to state 466
    expr_named_call         go to state 467
    expr_method_call        go to state 468
    func_addr_expr          go to state 469
    expr_field              go to state 470
    expr_call               go to state 471
    expr                    go to state 1150
    expr_mtag               go to state 473
    basic_type_declaration  go to state 474
    make_decl               go to state 475
    make_struct_decl        go to state 476
    make_tuple_call         go to state 477
    make_dim_decl           go to state 478
    make_table_decl         go to state 479
    array_comprehension     go to state 480


State 1041

  452 expr_mtag: expr '.' "?." "$f" . '(' expr ')'

    '('  shift, and go to state 1151


State 1042

  405 expr: expr '.' "?." "name" .

    $default  reduce using rule 405 (expr)


State 1043

  336 expr_method_call: expr . "->" "name" '(' ')'
  337                 | expr . "->" "name" '(' expr_list ')'
  347 expr_field: expr . '.' "name"
  348           | expr . '.' '.' "name"
  349           | expr . '.' "name" '(' ')'
  350           | expr . '.' "name" '(' expr_list ')'
  353           | expr . '.' $@17 error $@18
  373 expr: expr . "<<" expr
  374     | expr . ">>" expr
  375     | expr . "<<<" expr
  376     | expr . ">>>" expr
  377     | expr . '+' expr
  378     | expr . '-' expr
  379     | expr . '*' expr
  380     | expr . '/' expr
  381     | expr . '%' expr
  382     | expr . '<' expr
  383     | expr . '>' expr
  384     | expr . "==" expr
  385     | expr . "!=" expr
  386     | expr . "<=" expr
  387     | expr . ">=" expr
  388     | expr . '&' expr
  389     | expr . '|' expr
  390     | expr . '^' expr
  391     | expr . "&&" expr
  392     | expr . "||" expr
  393     | expr . "^^" expr
  394     | expr . ".." expr
  397     | expr . "++"
  398     | expr . "--"
  400     | expr . '[' expr ']'
  401     | expr . '.' '[' expr ']'
  402     | expr . "?[" expr ']'
  403     | expr . '.' "?[" expr ']'
  403     | expr '.' "?[" expr . ']'
  404     | expr . "?." "name"
  405     | expr . '.' "?." "name"
  413     | expr . "??" expr
  414     | expr . '?' expr ':' expr
  417     | expr . "is" "type" '<' $@19 type_declaration_no_options '>' $@20
  418     | expr . "is" basic_type_declaration
  419     | expr . "is" "name"
  420     | expr . "as" "name"
  423     | expr . "as" "type" '<' $@21 type_declaration '>' $@22
  424     | expr . "as" basic_type_declaration
  425     | expr . '?' "as" "name"
  428     | expr . '?' "as" "type" '<' $@23 type_declaration '>' $@24
  429     | expr . '?' "as" basic_type_declaration
  437     | expr . "<|" expr
  438     | expr . "|>" expr
  439     | expr . "|>" basic_type_declaration
  449 expr_mtag: expr . '.' "$f" '(' expr ')'
  450          | expr . "?." "$f" '(' expr ')'
  451          | expr . '.' '.' "$f" '(' expr ')'
  452          | expr . '.' "?." "$f" '(' expr ')'
  453          | expr . "as" "$f" '(' expr ')'
  454          | expr . '?' "as" "$f" '(' expr ')'
  455          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 643
    "as"   shift, and go to state 644
    "<<"   shift, and go to state 645
    ">>"   shift, and go to state 646
    "++"   shift, and go to state 647
    "--"   shift, and go to state 648
    "<="   shift, and go to state 649
    ">="   shift, and go to state 650
    "=="   shift, and go to state 651
    "!="   shift, and go to state 652
    "->"   shift, and go to state 653
    "??"   shift, and go to state 654
    "?."   shift, and go to state 655
    "?["   shift, and go to state 656
    "<|"   shift, and go to state 657
    "|>"   shift, and go to state 658
    "<<<"  shift, and go to state 659
    ">>>"  shift, and go to state 660
    "&&"   shift, and go to state 661
    "||"   shift, and go to state 662
    "^^"   shift, and go to state 663
    ".."   shift, and go to state 664
    '?'    shift, and go to state 665
    '|'    shift, and go to state 666
    '^'    shift, and go to state 667
    '&'    shift, and go to state 668
    '<'    shift, and go to state 669
    '>'    shift, and go to state 670
    '-'    shift, and go to state 671
    '+'    shift, and go to state 672
    '*'    shift, and go to state 673
    '/'    shift, and go to state 674
    '%'    shift, and go to state 675
    '.'    shift, and go to state 676
    '['    shift, and go to state 677
    ']'    shift, and go to state 1152


State 1044

  449 expr_mtag: expr '.' "$f" '(' . expr ')'

    "struct"                          shift, and go to state 408
    "class"                           shift, and go to state 409
    "true"                            shift, and go to state 410
    "false"                           shift, and go to state 411
    "new"                             shift, and go to state 412
    "typeinfo"                        shift, and go to state 413
    "type"                            shift, and go to state 414
    "array"                           shift, and go to state 415
    "null"                            shift, and go to state 416
    "table"                           shift, and go to state 417
    "deref"                           shift, and go to state 418
    "cast"                            shift, and go to state 419
    "upcast"                          shift, and go to state 420
    "addr"                            shift, and go to state 421
    "reinterpret"                     shift, and go to state 422
    "fixed_array"                     shift, and go to state 423
    "default"                         shift, and go to state 424
    "bool"                            shift, and go to state 222
    "void"                            shift, and go to state 223
    "string"                          shift, and go to state 224
    "int"                             shift, and go to state 226
    "int2"                            shift, and go to state 227
    "int3"                            shift, and go to state 228
    "int4"                            shift, and go to state 229
    "uint"                            shift, and go to state 230
    "bitfield"                        shift, and go to state 425
    "uint2"                           shift, and go to state 232
    "uint3"                           shift, and go to state 233
    "uint4"                           shift, and go to state 234
    "float"                           shift, and go to state 235
    "float2"                          shift, and go to state 236
    "float3"                          shift, and go to state 237
    "float4"                          shift, and go to state 238
    "range"                           shift, and go to state 239
    "urange"                          shift, and go to state 240
    "range64"                         shift, and go to state 241
    "urange64"                        shift, and go to state 242
    "int64"                           shift, and go to state 244
    "uint64"                          shift, and go to state 245
    "double"                          shift, and go to state 246
    "int8"                            shift, and go to state 249
    "uint8"                           shift, and go to state 250
    "int16"                           shift, and go to state 251
    "uint16"                          shift, and go to state 252
    "tuple"                           shift, and go to state 426
    "variant"                         shift, and go to state 427
    "generator"                       shift, and go to state 428
    "++"                              shift, and go to state 429
    "--"                              shift, and go to state 430
    "::"                              shift, and go to state 55
    "$$"                              shift, and go to state 431
    "$i"                              shift, and go to state 432
    "$v"                              shift, and go to state 433
    "$b"                              shift, and go to state 434
    "$a"                              shift, and go to state 435
    "$c"                              shift, and go to state 436
    "..."                             shift, and go to state 437
    "integer constant"                shift, and go to state 438
    "long integer constant"           shift, and go to state 439
    "unsigned integer constant"       shift, and go to state 440
    "unsigned long integer constant"  shift, and go to state 441
    "unsigned int8 constant"          shift, and go to state 442
    "floating point constant"         shift, and go to state 443
    "double constant"                 shift, and go to state 444
    "name"                            shift, and go to state 56
    "start of the string"             shift, and go to state 445
    "begin of code block"             shift, and go to state 446
    '-'                               shift, and go to state 447
    '+'                               shift, and go to state 448
    '*'                               shift, and go to state 449
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 450
    '!'                               shift, and go to state 451
    '['                               shift, and go to state 452
    '('                               shift, and go to state 453
    '$'                               shift, and go to state 454
    '@'                               shift, and go to state 455

    string_builder          go to state 456
    expr_reader             go to state 457
    expr_call_pipe          go to state 458
    name_in_namespace       go to state 459
    expr_new                go to state 460
    expr_cast               go to state 461
    expr_type_decl          go to state 462
    expr_type_info          go to state 463
    block_or_lambda         go to state 464
    expr_full_block         go to state 465
    expr_numeric_const      go to state 466
    expr_named_call         go to state 467
    expr_method_call        go to state 468
    func_addr_expr          go to state 469
    expr_field              go to state 470
    expr_call               go to state 471
    expr                    go to state 1153
    expr_mtag               go to state 473
    basic_type_declaration  go to state 474
    make_decl               go to state 475
    make_struct_decl        go to state 476
    make_tuple_call         go to state 477
    make_dim_decl           go to state 478
    make_table_decl         go to state 479
    array_comprehension     go to state 480


State 1045

  349 expr_field: expr '.' "name" '(' . ')'
  350           | expr '.' "name" '(' . expr_list ')'

    "struct"                          shift, and go to state 408
    "class"                           shift, and go to state 409
    "true"                            shift, and go to state 410
    "false"                           shift, and go to state 411
    "new"                             shift, and go to state 412
    "typeinfo"                        shift, and go to state 413
    "type"                            shift, and go to state 414
    "array"                           shift, and go to state 415
    "null"                            shift, and go to state 416
    "table"                           shift, and go to state 417
    "deref"                           shift, and go to state 418
    "cast"                            shift, and go to state 419
    "upcast"                          shift, and go to state 420
    "addr"                            shift, and go to state 421
    "reinterpret"                     shift, and go to state 422
    "fixed_array"                     shift, and go to state 423
    "default"                         shift, and go to state 424
    "bool"                            shift, and go to state 222
    "void"                            shift, and go to state 223
    "string"                          shift, and go to state 224
    "int"                             shift, and go to state 226
    "int2"                            shift, and go to state 227
    "int3"                            shift, and go to state 228
    "int4"                            shift, and go to state 229
    "uint"                            shift, and go to state 230
    "bitfield"                        shift, and go to state 425
    "uint2"                           shift, and go to state 232
    "uint3"                           shift, and go to state 233
    "uint4"                           shift, and go to state 234
    "float"                           shift, and go to state 235
    "float2"                          shift, and go to state 236
    "float3"                          shift, and go to state 237
    "float4"                          shift, and go to state 238
    "range"                           shift, and go to state 239
    "urange"                          shift, and go to state 240
    "range64"                         shift, and go to state 241
    "urange64"                        shift, and go to state 242
    "int64"                           shift, and go to state 244
    "uint64"                          shift, and go to state 245
    "double"                          shift, and go to state 246
    "int8"                            shift, and go to state 249
    "uint8"                           shift, and go to state 250
    "int16"                           shift, and go to state 251
    "uint16"                          shift, and go to state 252
    "tuple"                           shift, and go to state 426
    "variant"                         shift, and go to state 427
    "generator"                       shift, and go to state 428
    "++"                              shift, and go to state 429
    "--"                              shift, and go to state 430
    "::"                              shift, and go to state 55
    "$$"                              shift, and go to state 431
    "$i"                              shift, and go to state 432
    "$v"                              shift, and go to state 433
    "$b"                              shift, and go to state 434
    "$a"                              shift, and go to state 435
    "$c"                              shift, and go to state 436
    "..."                             shift, and go to state 437
    "integer constant"                shift, and go to state 438
    "long integer constant"           shift, and go to state 439
    "unsigned integer constant"       shift, and go to state 440
    "unsigned long integer constant"  shift, and go to state 441
    "unsigned int8 constant"          shift, and go to state 442
    "floating point constant"         shift, and go to state 443
    "double constant"                 shift, and go to state 444
    "name"                            shift, and go to state 56
    "start of the string"             shift, and go to state 445
    "begin of code block"             shift, and go to state 446
    '-'                               shift, and go to state 447
    '+'                               shift, and go to state 448
    '*'                               shift, and go to state 449
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 450
    '!'                               shift, and go to state 451
    '['                               shift, and go to state 452
    '('                               shift, and go to state 453
    ')'                               shift, and go to state 1154
    '$'                               shift, and go to state 454
    '@'                               shift, and go to state 455

    string_builder          go to state 456
    expr_reader             go to state 457
    expr_call_pipe          go to state 458
    name_in_namespace       go to state 459
    expr_new                go to state 460
    expr_cast               go to state 461
    expr_type_decl          go to state 462
    expr_type_info          go to state 463
    expr_list               go to state 1155
    block_or_lambda         go to state 464
    expr_full_block         go to state 465
    expr_numeric_const      go to state 466
    expr_named_call         go to state 467
    expr_method_call        go to state 468
    func_addr_expr          go to state 469
    expr_field              go to state 470
    expr_call               go to state 471
    expr                    go to state 634
    expr_mtag               go to state 473
    basic_type_declaration  go to state 474
    make_decl               go to state 475
    make_struct_decl        go to state 476
    make_tuple_call         go to state 477
    make_dim_decl           go to state 478
    make_table_decl         go to state 479
    array_comprehension     go to state 480


State 1046

  451 expr_mtag: expr '.' '.' "$f" . '(' expr ')'

    '('  shift, and go to state 1156


State 1047

  348 expr_field: expr '.' '.' "name" .

    $default  reduce using rule 348 (expr_field)


State 1048

  336 expr_method_call: expr . "->" "name" '(' ')'
  337                 | expr . "->" "name" '(' expr_list ')'
  347 expr_field: expr . '.' "name"
  348           | expr . '.' '.' "name"
  349           | expr . '.' "name" '(' ')'
  350           | expr . '.' "name" '(' expr_list ')'
  353           | expr . '.' $@17 error $@18
  373 expr: expr . "<<" expr
  374     | expr . ">>" expr
  375     | expr . "<<<" expr
  376     | expr . ">>>" expr
  377     | expr . '+' expr
  378     | expr . '-' expr
  379     | expr . '*' expr
  380     | expr . '/' expr
  381     | expr . '%' expr
  382     | expr . '<' expr
  383     | expr . '>' expr
  384     | expr . "==" expr
  385     | expr . "!=" expr
  386     | expr . "<=" expr
  387     | expr . ">=" expr
  388     | expr . '&' expr
  389     | expr . '|' expr
  390     | expr . '^' expr
  391     | expr . "&&" expr
  392     | expr . "||" expr
  393     | expr . "^^" expr
  394     | expr . ".." expr
  397     | expr . "++"
  398     | expr . "--"
  400     | expr . '[' expr ']'
  401     | expr . '.' '[' expr ']'
  401     | expr '.' '[' expr . ']'
  402     | expr . "?[" expr ']'
  403     | expr . '.' "?[" expr ']'
  404     | expr . "?." "name"
  405     | expr . '.' "?." "name"
  413     | expr . "??" expr
  414     | expr . '?' expr ':' expr
  417     | expr . "is" "type" '<' $@19 type_declaration_no_options '>' $@20
  418     | expr . "is" basic_type_declaration
  419     | expr . "is" "name"
  420     | expr . "as" "name"
  423     | expr . "as" "type" '<' $@21 type_declaration '>' $@22
  424     | expr . "as" basic_type_declaration
  425     | expr . '?' "as" "name"
  428     | expr . '?' "as" "type" '<' $@23 type_declaration '>' $@24
  429     | expr . '?' "as" basic_type_declaration
  437     | expr . "<|" expr
  438     | expr . "|>" expr
  439     | expr . "|>" basic_type_declaration
  449 expr_mtag: expr . '.' "$f" '(' expr ')'
  450          | expr . "?." "$f" '(' expr ')'
  451          | expr . '.' '.' "$f" '(' expr ')'
  452          | expr . '.' "?." "$f" '(' expr ')'
  453          | expr . "as" "$f" '(' expr ')'
  454          | expr . '?' "as" "$f" '(' expr ')'
  455          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 643
    "as"   shift, and go to state 644
    "<<"   shift, and go to state 645
    ">>"   shift, and go to state 646
    "++"   shift, and go to state 647
    "--"   shift, and go to state 648
    "<="   shift, and go to state 649
    ">="   shift, and go to state 650
    "=="   shift, and go to state 651
    "!="   shift, and go to state 652
    "->"   shift, and go to state 653
    "??"   shift, and go to state 654
    "?."   shift, and go to state 655
    "?["   shift, and go to state 656
    "<|"   shift, and go to state 657
    "|>"   shift, and go to state 658
    "<<<"  shift, and go to state 659
    ">>>"  shift, and go to state 660
    "&&"   shift, and go to state 661
    "||"   shift, and go to state 662
    "^^"   shift, and go to state 663
    ".."   shift, and go to state 664
    '?'    shift, and go to state 665
    '|'    shift, and go to state 666
    '^'    shift, and go to state 667
    '&'    shift, and go to state 668
    '<'    shift, and go to state 669
    '>'    shift, and go to state 670
    '-'    shift, and go to state 671
    '+'    shift, and go to state 672
    '*'    shift, and go to state 673
    '/'    shift, and go to state 674
    '%'    shift, and go to state 675
    '.'    shift, and go to state 676
    '['    shift, and go to state 677
    ']'    shift, and go to state 1157


State 1049

  353 expr_field: expr '.' $@17 error . $@18

    $default  reduce using rule 352 ($@18)

    $@18  go to state 1158


State 1050

  400 expr: expr '[' expr ']' .

    $default  reduce using rule 400 (expr)


State 1051

  358 expr_call: basic_type_declaration '(' expr_list ')' .

    $default  reduce using rule 358 (expr_call)


State 1052

  655 type_declaration_no_options_no_dim: "iterator" '<' $@46 type_declaration '>' $@47 .

    $default  reduce using rule 655 (type_declaration_no_options_no_dim)


State 1053

  645 type_declaration_no_options_no_dim: "smart_ptr" '<' $@40 type_declaration '>' $@41 .

    $default  reduce using rule 645 (type_declaration_no_options_no_dim)


State 1054

  605 bitfield_bits: bitfield_bits "end of expression" "name" .

    $default  reduce using rule 605 (bitfield_bits)


State 1055

  611 bitfield_type_declaration: "bitfield" '<' $@35 bitfield_bits '>' $@36 .

    $default  reduce using rule 611 (bitfield_type_declaration)


State 1056

  659 type_declaration_no_options_no_dim: "block" '<' $@48 type_declaration '>' $@49 .

    $default  reduce using rule 659 (type_declaration_no_options_no_dim)


State 1057

  662 type_declaration_no_options_no_dim: "block" '<' $@50 optional_function_argument_list optional_function_type '>' . $@51

    $default  reduce using rule 661 ($@51)

    $@51  go to state 1159


State 1058

  666 type_declaration_no_options_no_dim: "function" '<' $@52 type_declaration '>' $@53 .

    $default  reduce using rule 666 (type_declaration_no_options_no_dim)


State 1059

  669 type_declaration_no_options_no_dim: "function" '<' $@54 optional_function_argument_list optional_function_type '>' . $@55

    $default  reduce using rule 668 ($@55)

    $@55  go to state 1160


State 1060

  673 type_declaration_no_options_no_dim: "lambda" '<' $@56 type_declaration '>' $@57 .

    $default  reduce using rule 673 (type_declaration_no_options_no_dim)


State 1061

  676 type_declaration_no_options_no_dim: "lambda" '<' $@58 optional_function_argument_list optional_function_type '>' . $@59

    $default  reduce using rule 675 ($@59)

    $@59  go to state 1161


State 1062

  484 tuple_type_list: tuple_type_list "end of expression" tuple_type .

    $default  reduce using rule 484 (tuple_type_list)


State 1063

  679 type_declaration_no_options_no_dim: "tuple" '<' $@60 tuple_type_list '>' $@61 .

    $default  reduce using rule 679 (type_declaration_no_options_no_dim)


State 1064

  490 variant_type_list: variant_type_list "end of expression" variant_type .

    $default  reduce using rule 490 (variant_type_list)


State 1065

  682 type_declaration_no_options_no_dim: "variant" '<' $@62 variant_type_list '>' $@63 .

    $default  reduce using rule 682 (type_declaration_no_options_no_dim)


State 1066

  238 type_declaration_no_options_list: type_declaration_no_options_list "end of expression" . type_declaration

    "type"       shift, and go to state 216
    "array"      shift, and go to state 217
    "table"      shift, and go to state 218
    "typedecl"   shift, and go to state 219
    "iterator"   shift, and go to state 220
    "smart_ptr"  shift, and go to state 221
    "bool"       shift, and go to state 222
    "void"       shift, and go to state 223
    "string"     shift, and go to state 224
    "auto"       shift, and go to state 225
    "int"        shift, and go to state 226
    "int2"       shift, and go to state 227
    "int3"       shift, and go to state 228
    "int4"       shift, and go to state 229
    "uint"       shift, and go to state 230
    "bitfield"   shift, and go to state 231
    "uint2"      shift, and go to state 232
    "uint3"      shift, and go to state 233
    "uint4"      shift, and go to state 234
    "float"      shift, and go to state 235
    "float2"     shift, and go to state 236
    "float3"     shift, and go to state 237
    "float4"     shift, and go to state 238
    "range"      shift, and go to state 239
    "urange"     shift, and go to state 240
    "range64"    shift, and go to state 241
    "urange64"   shift, and go to state 242
    "block"      shift, and go to state 243
    "int64"      shift, and go to state 244
    "uint64"     shift, and go to state 245
    "double"     shift, and go to state 246
    "function"   shift, and go to state 247
    "lambda"     shift, and go to state 248
    "int8"       shift, and go to state 249
    "uint8"      shift, and go to state 250
    "int16"      shift, and go to state 251
    "uint16"     shift, and go to state 252
    "tuple"      shift, and go to state 253
    "variant"    shift, and go to state 254
    "::"         shift, and go to state 55
    "$t"         shift, and go to state 255
    "name"       shift, and go to state 56
    '$'          shift, and go to state 256

    name_in_namespace                   go to state 257
    basic_type_declaration              go to state 258
    structure_type_declaration          go to state 259
    auto_type_declaration               go to state 260
    bitfield_type_declaration           go to state 261
    type_declaration_no_options         go to state 262
    type_declaration_no_options_no_dim  go to state 263
    type_declaration                    go to state 1162


State 1067

  630 type_declaration_no_options_no_dim: '$' name_in_namespace '<' $@39 type_declaration_no_options_list '>' . '(' optional_expr_list ')'

    '('  shift, and go to state 1163


State 1068

  336 expr_method_call: expr . "->" "name" '(' ')'
  337                 | expr . "->" "name" '(' expr_list ')'
  347 expr_field: expr . '.' "name"
  348           | expr . '.' '.' "name"
  349           | expr . '.' "name" '(' ')'
  350           | expr . '.' "name" '(' expr_list ')'
  353           | expr . '.' $@17 error $@18
  373 expr: expr . "<<" expr
  374     | expr . ">>" expr
  375     | expr . "<<<" expr
  376     | expr . ">>>" expr
  377     | expr . '+' expr
  378     | expr . '-' expr
  379     | expr . '*' expr
  380     | expr . '/' expr
  381     | expr . '%' expr
  382     | expr . '<' expr
  383     | expr . '>' expr
  384     | expr . "==" expr
  385     | expr . "!=" expr
  386     | expr . "<=" expr
  387     | expr . ">=" expr
  388     | expr . '&' expr
  389     | expr . '|' expr
  390     | expr . '^' expr
  391     | expr . "&&" expr
  392     | expr . "||" expr
  393     | expr . "^^" expr
  394     | expr . ".." expr
  397     | expr . "++"
  398     | expr . "--"
  400     | expr . '[' expr ']'
  401     | expr . '.' '[' expr ']'
  402     | expr . "?[" expr ']'
  403     | expr . '.' "?[" expr ']'
  404     | expr . "?." "name"
  405     | expr . '.' "?." "name"
  413     | expr . "??" expr
  414     | expr . '?' expr ':' expr
  417     | expr . "is" "type" '<' $@19 type_declaration_no_options '>' $@20
  418     | expr . "is" basic_type_declaration
  419     | expr . "is" "name"
  420     | expr . "as" "name"
  423     | expr . "as" "type" '<' $@21 type_declaration '>' $@22
  424     | expr . "as" basic_type_declaration
  425     | expr . '?' "as" "name"
  428     | expr . '?' "as" "type" '<' $@23 type_declaration '>' $@24
  429     | expr . '?' "as" basic_type_declaration
  437     | expr . "<|" expr
  438     | expr . "|>" expr
  439     | expr . "|>" basic_type_declaration
  449 expr_mtag: expr . '.' "$f" '(' expr ')'
  450          | expr . "?." "$f" '(' expr ')'
  451          | expr . '.' '.' "$f" '(' expr ')'
  452          | expr . '.' "?." "$f" '(' expr ')'
  453          | expr . "as" "$f" '(' expr ')'
  454          | expr . '?' "as" "$f" '(' expr ')'
  455          | expr . "is" "$f" '(' expr ')'
  561 variable_name_with_pos_list: "$i" '(' expr . ')'

    "is"   shift, and go to state 643
    "as"   shift, and go to state 644
    "<<"   shift, and go to state 645
    ">>"   shift, and go to state 646
    "++"   shift, and go to state 647
    "--"   shift, and go to state 648
    "<="   shift, and go to state 649
    ">="   shift, and go to state 650
    "=="   shift, and go to state 651
    "!="   shift, and go to state 652
    "->"   shift, and go to state 653
    "??"   shift, and go to state 654
    "?."   shift, and go to state 655
    "?["   shift, and go to state 656
    "<|"   shift, and go to state 657
    "|>"   shift, and go to state 658
    "<<<"  shift, and go to state 659
    ">>>"  shift, and go to state 660
    "&&"   shift, and go to state 661
    "||"   shift, and go to state 662
    "^^"   shift, and go to state 663
    ".."   shift, and go to state 664
    '?'    shift, and go to state 665
    '|'    shift, and go to state 666
    '^'    shift, and go to state 667
    '&'    shift, and go to state 668
    '<'    shift, and go to state 669
    '>'    shift, and go to state 670
    '-'    shift, and go to state 671
    '+'    shift, and go to state 672
    '*'    shift, and go to state 673
    '/'    shift, and go to state 674
    '%'    shift, and go to state 675
    '.'    shift, and go to state 676
    '['    shift, and go to state 677
    ')'    shift, and go to state 1164


State 1069

  562 variable_name_with_pos_list: "name" "aka" "name" .

    $default  reduce using rule 562 (variable_name_with_pos_list)


State 1070

  563 variable_name_with_pos_list: variable_name_with_pos_list ',' "name" .
  564                            | variable_name_with_pos_list ',' "name" . "aka" "name"

    "aka"  shift, and go to state 1165

    $default  reduce using rule 563 (variable_name_with_pos_list)


State 1071

  498 variable_declaration: variable_name_with_pos_list ':' type_declaration .
  499                     | variable_name_with_pos_list ':' type_declaration . copy_or_move expr
  684 type_declaration: type_declaration . '|' type_declaration_no_options
  685                 | type_declaration . '|' '#'

    "<-"  shift, and go to state 915
    '='   shift, and go to state 917
    '|'   shift, and go to state 372

    $default  reduce using rule 498 (variable_declaration)

    copy_or_move  go to state 1166


State 1072

  336 expr_method_call: expr . "->" "name" '(' ')'
  337                 | expr . "->" "name" '(' expr_list ')'
  347 expr_field: expr . '.' "name"
  348           | expr . '.' '.' "name"
  349           | expr . '.' "name" '(' ')'
  350           | expr . '.' "name" '(' expr_list ')'
  353           | expr . '.' $@17 error $@18
  373 expr: expr . "<<" expr
  374     | expr . ">>" expr
  375     | expr . "<<<" expr
  376     | expr . ">>>" expr
  377     | expr . '+' expr
  378     | expr . '-' expr
  379     | expr . '*' expr
  380     | expr . '/' expr
  381     | expr . '%' expr
  382     | expr . '<' expr
  383     | expr . '>' expr
  384     | expr . "==" expr
  385     | expr . "!=" expr
  386     | expr . "<=" expr
  387     | expr . ">=" expr
  388     | expr . '&' expr
  389     | expr . '|' expr
  390     | expr . '^' expr
  391     | expr . "&&" expr
  392     | expr . "||" expr
  393     | expr . "^^" expr
  394     | expr . ".." expr
  397     | expr . "++"
  398     | expr . "--"
  400     | expr . '[' expr ']'
  401     | expr . '.' '[' expr ']'
  402     | expr . "?[" expr ']'
  403     | expr . '.' "?[" expr ']'
  404     | expr . "?." "name"
  405     | expr . '.' "?." "name"
  413     | expr . "??" expr
  414     | expr . '?' expr ':' expr
  417     | expr . "is" "type" '<' $@19 type_declaration_no_options '>' $@20
  418     | expr . "is" basic_type_declaration
  419     | expr . "is" "name"
  420     | expr . "as" "name"
  423     | expr . "as" "type" '<' $@21 type_declaration '>' $@22
  424     | expr . "as" basic_type_declaration
  425     | expr . '?' "as" "name"
  428     | expr . '?' "as" "type" '<' $@23 type_declaration '>' $@24
  429     | expr . '?' "as" basic_type_declaration
  437     | expr . "<|" expr
  438     | expr . "|>" expr
  439     | expr . "|>" basic_type_declaration
  449 expr_mtag: expr . '.' "$f" '(' expr ')'
  450          | expr . "?." "$f" '(' expr ')'
  451          | expr . '.' '.' "$f" '(' expr ')'
  452          | expr . '.' "?." "$f" '(' expr ')'
  453          | expr . "as" "$f" '(' expr ')'
  454          | expr . '?' "as" "$f" '(' expr ')'
  455          | expr . "is" "$f" '(' expr ')'
  500 variable_declaration: variable_name_with_pos_list copy_or_move expr .

    "is"   shift, and go to state 643
    "as"   shift, and go to state 644
    "<<"   shift, and go to state 645
    ">>"   shift, and go to state 646
    "++"   shift, and go to state 647
    "--"   shift, and go to state 648
    "<="   shift, and go to state 649
    ">="   shift, and go to state 650
    "=="   shift, and go to state 651
    "!="   shift, and go to state 652
    "->"   shift, and go to state 653
    "??"   shift, and go to state 654
    "?."   shift, and go to state 655
    "?["   shift, and go to state 656
    "<|"   shift, and go to state 657
    "|>"   shift, and go to state 658
    "<<<"  shift, and go to state 659
    ">>>"  shift, and go to state 660
    "&&"   shift, and go to state 661
    "||"   shift, and go to state 662
    "^^"   shift, and go to state 663
    ".."   shift, and go to state 664
    '?'    shift, and go to state 665
    '|'    shift, and go to state 666
    '^'    shift, and go to state 667
    '&'    shift, and go to state 668
    '<'    shift, and go to state 669
    '>'    shift, and go to state 670
    '-'    shift, and go to state 671
    '+'    shift, and go to state 672
    '*'    shift, and go to state 673
    '/'    shift, and go to state 674
    '%'    shift, and go to state 675
    '.'    shift, and go to state 676
    '['    shift, and go to state 677

    $default  reduce using rule 500 (variable_declaration)


State 1073

   70 expression_for_loop: "for" '(' variable_name_with_pos_list "in" . expr_list ')' expression_block

    "struct"                          shift, and go to state 408
    "class"                           shift, and go to state 409
    "true"                            shift, and go to state 410
    "false"                           shift, and go to state 411
    "new"                             shift, and go to state 412
    "typeinfo"                        shift, and go to state 413
    "type"                            shift, and go to state 414
    "array"                           shift, and go to state 415
    "null"                            shift, and go to state 416
    "table"                           shift, and go to state 417
    "deref"                           shift, and go to state 418
    "cast"                            shift, and go to state 419
    "upcast"                          shift, and go to state 420
    "addr"                            shift, and go to state 421
    "reinterpret"                     shift, and go to state 422
    "fixed_array"                     shift, and go to state 423
    "default"                         shift, and go to state 424
    "bool"                            shift, and go to state 222
    "void"                            shift, and go to state 223
    "string"                          shift, and go to state 224
    "int"                             shift, and go to state 226
    "int2"                            shift, and go to state 227
    "int3"                            shift, and go to state 228
    "int4"                            shift, and go to state 229
    "uint"                            shift, and go to state 230
    "bitfield"                        shift, and go to state 425
    "uint2"                           shift, and go to state 232
    "uint3"                           shift, and go to state 233
    "uint4"                           shift, and go to state 234
    "float"                           shift, and go to state 235
    "float2"                          shift, and go to state 236
    "float3"                          shift, and go to state 237
    "float4"                          shift, and go to state 238
    "range"                           shift, and go to state 239
    "urange"                          shift, and go to state 240
    "range64"                         shift, and go to state 241
    "urange64"                        shift, and go to state 242
    "int64"                           shift, and go to state 244
    "uint64"                          shift, and go to state 245
    "double"                          shift, and go to state 246
    "int8"                            shift, and go to state 249
    "uint8"                           shift, and go to state 250
    "int16"                           shift, and go to state 251
    "uint16"                          shift, and go to state 252
    "tuple"                           shift, and go to state 426
    "variant"                         shift, and go to state 427
    "generator"                       shift, and go to state 428
    "++"                              shift, and go to state 429
    "--"                              shift, and go to state 430
    "::"                              shift, and go to state 55
    "$$"                              shift, and go to state 431
    "$i"                              shift, and go to state 432
    "$v"                              shift, and go to state 433
    "$b"                              shift, and go to state 434
    "$a"                              shift, and go to state 435
    "$c"                              shift, and go to state 436
    "..."                             shift, and go to state 437
    "integer constant"                shift, and go to state 438
    "long integer constant"           shift, and go to state 439
    "unsigned integer constant"       shift, and go to state 440
    "unsigned long integer constant"  shift, and go to state 441
    "unsigned int8 constant"          shift, and go to state 442
    "floating point constant"         shift, and go to state 443
    "double constant"                 shift, and go to state 444
    "name"                            shift, and go to state 56
    "start of the string"             shift, and go to state 445
    "begin of code block"             shift, and go to state 446
    '-'                               shift, and go to state 447
    '+'                               shift, and go to state 448
    '*'                               shift, and go to state 449
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 450
    '!'                               shift, and go to state 451
    '['                               shift, and go to state 452
    '('                               shift, and go to state 453
    '$'                               shift, and go to state 454
    '@'                               shift, and go to state 455

    string_builder          go to state 456
    expr_reader             go to state 457
    expr_call_pipe          go to state 458
    name_in_namespace       go to state 459
    expr_new                go to state 460
    expr_cast               go to state 461
    expr_type_decl          go to state 462
    expr_type_info          go to state 463
    expr_list               go to state 1167
    block_or_lambda         go to state 464
    expr_full_block         go to state 465
    expr_numeric_const      go to state 466
    expr_named_call         go to state 467
    expr_method_call        go to state 468
    func_addr_expr          go to state 469
    expr_field              go to state 470
    expr_call               go to state 471
    expr                    go to state 634
    expr_mtag               go to state 473
    basic_type_declaration  go to state 474
    make_decl               go to state 475
    make_struct_decl        go to state 476
    make_tuple_call         go to state 477
    make_dim_decl           go to state 478
    make_table_decl         go to state 479
    array_comprehension     go to state 480


State 1074

  260 expression_try_catch: "try" expression_block "recover" expression_block .

    $default  reduce using rule 260 (expression_try_catch)


State 1075

   74 expression_with_alias: "assume" "name" '=' expr .
  336 expr_method_call: expr . "->" "name" '(' ')'
  337                 | expr . "->" "name" '(' expr_list ')'
  347 expr_field: expr . '.' "name"
  348           | expr . '.' '.' "name"
  349           | expr . '.' "name" '(' ')'
  350           | expr . '.' "name" '(' expr_list ')'
  353           | expr . '.' $@17 error $@18
  373 expr: expr . "<<" expr
  374     | expr . ">>" expr
  375     | expr . "<<<" expr
  376     | expr . ">>>" expr
  377     | expr . '+' expr
  378     | expr . '-' expr
  379     | expr . '*' expr
  380     | expr . '/' expr
  381     | expr . '%' expr
  382     | expr . '<' expr
  383     | expr . '>' expr
  384     | expr . "==" expr
  385     | expr . "!=" expr
  386     | expr . "<=" expr
  387     | expr . ">=" expr
  388     | expr . '&' expr
  389     | expr . '|' expr
  390     | expr . '^' expr
  391     | expr . "&&" expr
  392     | expr . "||" expr
  393     | expr . "^^" expr
  394     | expr . ".." expr
  397     | expr . "++"
  398     | expr . "--"
  400     | expr . '[' expr ']'
  401     | expr . '.' '[' expr ']'
  402     | expr . "?[" expr ']'
  403     | expr . '.' "?[" expr ']'
  404     | expr . "?." "name"
  405     | expr . '.' "?." "name"
  413     | expr . "??" expr
  414     | expr . '?' expr ':' expr
  417     | expr . "is" "type" '<' $@19 type_declaration_no_options '>' $@20
  418     | expr . "is" basic_type_declaration
  419     | expr . "is" "name"
  420     | expr . "as" "name"
  423     | expr . "as" "type" '<' $@21 type_declaration '>' $@22
  424     | expr . "as" basic_type_declaration
  425     | expr . '?' "as" "name"
  428     | expr . '?' "as" "type" '<' $@23 type_declaration '>' $@24
  429     | expr . '?' "as" basic_type_declaration
  437     | expr . "<|" expr
  438     | expr . "|>" expr
  439     | expr . "|>" basic_type_declaration
  449 expr_mtag: expr . '.' "$f" '(' expr ')'
  450          | expr . "?." "$f" '(' expr ')'
  451          | expr . '.' '.' "$f" '(' expr ')'
  452          | expr . '.' "?." "$f" '(' expr ')'
  453          | expr . "as" "$f" '(' expr ')'
  454          | expr . '?' "as" "$f" '(' expr ')'
  455          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 643
    "as"   shift, and go to state 644
    "<<"   shift, and go to state 645
    ">>"   shift, and go to state 646
    "++"   shift, and go to state 647
    "--"   shift, and go to state 648
    "<="   shift, and go to state 649
    ">="   shift, and go to state 650
    "=="   shift, and go to state 651
    "!="   shift, and go to state 652
    "->"   shift, and go to state 653
    "??"   shift, and go to state 654
    "?."   shift, and go to state 655
    "?["   shift, and go to state 656
    "<|"   shift, and go to state 657
    "|>"   shift, and go to state 658
    "<<<"  shift, and go to state 659
    ">>>"  shift, and go to state 660
    "&&"   shift, and go to state 661
    "||"   shift, and go to state 662
    "^^"   shift, and go to state 663
    ".."   shift, and go to state 664
    '?'    shift, and go to state 665
    '|'    shift, and go to state 666
    '^'    shift, and go to state 667
    '&'    shift, and go to state 668
    '<'    shift, and go to state 669
    '>'    shift, and go to state 670
    '-'    shift, and go to state 671
    '+'    shift, and go to state 672
    '*'    shift, and go to state 673
    '/'    shift, and go to state 674
    '%'    shift, and go to state 675
    '.'    shift, and go to state 676
    '['    shift, and go to state 677

    $default  reduce using rule 74 (expression_with_alias)


State 1076

  212 expression_block: "begin of code block" expressions "end of code block" "finally" "begin of code block" expressions . "end of code block"
  233 expressions: expressions . expression_any
  234            | expressions . error

    error                             shift, and go to state 527
    "struct"                          shift, and go to state 408
    "class"                           shift, and go to state 409
    "let"                             shift, and go to state 3
    "while"                           shift, and go to state 528
    "if"                              shift, and go to state 529
    "static_if"                       shift, and go to state 530
    "for"                             shift, and go to state 531
    "true"                            shift, and go to state 410
    "false"                           shift, and go to state 411
    "new"                             shift, and go to state 412
    "typeinfo"                        shift, and go to state 413
    "type"                            shift, and go to state 414
    "array"                           shift, and go to state 415
    "return"                          shift, and go to state 532
    "null"                            shift, and go to state 416
    "break"                           shift, and go to state 533
    "try"                             shift, and go to state 534
    "table"                           shift, and go to state 417
    "delete"                          shift, and go to state 535
    "deref"                           shift, and go to state 418
    "with"                            shift, and go to state 536
    "assume"                          shift, and go to state 537
    "cast"                            shift, and go to state 419
    "upcast"                          shift, and go to state 420
    "var"                             shift, and go to state 8
    "addr"                            shift, and go to state 421
    "continue"                        shift, and go to state 538
    "pass"                            shift, and go to state 539
    "reinterpret"                     shift, and go to state 422
    "label"                           shift, and go to state 540
    "goto"                            shift, and go to state 541
    "unsafe"                          shift, and go to state 542
    "fixed_array"                     shift, and go to state 423
    "default"                         shift, and go to state 424
    "bool"                            shift, and go to state 222
    "void"                            shift, and go to state 223
    "string"                          shift, and go to state 224
    "int"                             shift, and go to state 226
    "int2"                            shift, and go to state 227
    "int3"                            shift, and go to state 228
    "int4"                            shift, and go to state 229
    "uint"                            shift, and go to state 230
    "bitfield"                        shift, and go to state 425
    "uint2"                           shift, and go to state 232
    "uint3"                           shift, and go to state 233
    "uint4"                           shift, and go to state 234
    "float"                           shift, and go to state 235
    "float2"                          shift, and go to state 236
    "float3"                          shift, and go to state 237
    "float4"                          shift, and go to state 238
    "range"                           shift, and go to state 239
    "urange"                          shift, and go to state 240
    "range64"                         shift, and go to state 241
    "urange64"                        shift, and go to state 242
    "int64"                           shift, and go to state 244
    "uint64"                          shift, and go to state 245
    "double"                          shift, and go to state 246
    "int8"                            shift, and go to state 249
    "uint8"                           shift, and go to state 250
    "int16"                           shift, and go to state 251
    "uint16"                          shift, and go to state 252
    "tuple"                           shift, and go to state 426
    "variant"                         shift, and go to state 427
    "generator"                       shift, and go to state 428
    "yield"                           shift, and go to state 543
    "++"                              shift, and go to state 429
    "--"                              shift, and go to state 430
    "::"                              shift, and go to state 55
    "$$"                              shift, and go to state 431
    "$i"                              shift, and go to state 432
    "$v"                              shift, and go to state 433
    "$b"                              shift, and go to state 434
    "$a"                              shift, and go to state 435
    "$c"                              shift, and go to state 436
    "..."                             shift, and go to state 437
    "integer constant"                shift, and go to state 438
    "long integer constant"           shift, and go to state 439
    "unsigned integer constant"       shift, and go to state 440
    "unsigned long integer constant"  shift, and go to state 441
    "unsigned int8 constant"          shift, and go to state 442
    "floating point constant"         shift, and go to state 443
    "double constant"                 shift, and go to state 444
    "name"                            shift, and go to state 56
    "start of the string"             shift, and go to state 445
    "begin of code block"             shift, and go to state 446
    "end of code block"               shift, and go to state 1168
    "end of expression"               shift, and go to state 545
    '-'                               shift, and go to state 447
    '+'                               shift, and go to state 448
    '*'                               shift, and go to state 449
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 450
    '!'                               shift, and go to state 451
    '['                               shift, and go to state 452
    '('                               shift, and go to state 453
    '$'                               shift, and go to state 454
    '@'                               shift, and go to state 455

    string_builder            go to state 456
    expr_reader               go to state 457
    expression_label          go to state 546
    expression_goto           go to state 547
    if_or_static_if           go to state 548
    expression_if_one_liner   go to state 549
    expression_if_then_else   go to state 550
    expression_for_loop       go to state 551
    expression_unsafe         go to state 552
    expression_while_loop     go to state 553
    expression_with           go to state 554
    expression_with_alias     go to state 555
    expr_call_pipe            go to state 458
    expression_any            go to state 556
    name_in_namespace         go to state 459
    expression_delete         go to state 557
    expr_new                  go to state 460
    expression_break          go to state 558
    expression_continue       go to state 559
    expression_return         go to state 560
    expression_yield_no_pipe  go to state 561
    expression_yield          go to state 562
    expression_try_catch      go to state 563
    kwd_let                   go to state 564
    expression_let            go to state 565
    expr_cast                 go to state 461
    expr_type_decl            go to state 462
    expr_type_info            go to state 463
    block_or_lambda           go to state 464
    expr_full_block           go to state 465
    expr_numeric_const        go to state 466
    expr_assign               go to state 566
    expr_named_call           go to state 467
    expr_method_call          go to state 468
    func_addr_expr            go to state 469
    expr_field                go to state 470
    expr_call                 go to state 471
    expr                      go to state 567
    expr_mtag                 go to state 473
    basic_type_declaration    go to state 474
    make_decl                 go to state 475
    make_struct_decl          go to state 476
    make_tuple_call           go to state 477
    make_dim_decl             go to state 478
    make_table_decl           go to state 479
    array_comprehension       go to state 480


State 1077

   68 expression_if_then_else: if_or_static_if '(' expr ')' . expression_block expression_else

    "begin of code block"  shift, and go to state 323

    expression_block  go to state 1169


State 1078

   69 expression_if_then_else: expression_if_one_liner "if" '(' expr . ')' expression_else_one_liner "end of expression"
  336 expr_method_call: expr . "->" "name" '(' ')'
  337                 | expr . "->" "name" '(' expr_list ')'
  347 expr_field: expr . '.' "name"
  348           | expr . '.' '.' "name"
  349           | expr . '.' "name" '(' ')'
  350           | expr . '.' "name" '(' expr_list ')'
  353           | expr . '.' $@17 error $@18
  373 expr: expr . "<<" expr
  374     | expr . ">>" expr
  375     | expr . "<<<" expr
  376     | expr . ">>>" expr
  377     | expr . '+' expr
  378     | expr . '-' expr
  379     | expr . '*' expr
  380     | expr . '/' expr
  381     | expr . '%' expr
  382     | expr . '<' expr
  383     | expr . '>' expr
  384     | expr . "==" expr
  385     | expr . "!=" expr
  386     | expr . "<=" expr
  387     | expr . ">=" expr
  388     | expr . '&' expr
  389     | expr . '|' expr
  390     | expr . '^' expr
  391     | expr . "&&" expr
  392     | expr . "||" expr
  393     | expr . "^^" expr
  394     | expr . ".." expr
  397     | expr . "++"
  398     | expr . "--"
  400     | expr . '[' expr ']'
  401     | expr . '.' '[' expr ']'
  402     | expr . "?[" expr ']'
  403     | expr . '.' "?[" expr ']'
  404     | expr . "?." "name"
  405     | expr . '.' "?." "name"
  413     | expr . "??" expr
  414     | expr . '?' expr ':' expr
  417     | expr . "is" "type" '<' $@19 type_declaration_no_options '>' $@20
  418     | expr . "is" basic_type_declaration
  419     | expr . "is" "name"
  420     | expr . "as" "name"
  423     | expr . "as" "type" '<' $@21 type_declaration '>' $@22
  424     | expr . "as" basic_type_declaration
  425     | expr . '?' "as" "name"
  428     | expr . '?' "as" "type" '<' $@23 type_declaration '>' $@24
  429     | expr . '?' "as" basic_type_declaration
  437     | expr . "<|" expr
  438     | expr . "|>" expr
  439     | expr . "|>" basic_type_declaration
  449 expr_mtag: expr . '.' "$f" '(' expr ')'
  450          | expr . "?." "$f" '(' expr ')'
  451          | expr . '.' '.' "$f" '(' expr ')'
  452          | expr . '.' "?." "$f" '(' expr ')'
  453          | expr . "as" "$f" '(' expr ')'
  454          | expr . '?' "as" "$f" '(' expr ')'
  455          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 643
    "as"   shift, and go to state 644
    "<<"   shift, and go to state 645
    ">>"   shift, and go to state 646
    "++"   shift, and go to state 647
    "--"   shift, and go to state 648
    "<="   shift, and go to state 649
    ">="   shift, and go to state 650
    "=="   shift, and go to state 651
    "!="   shift, and go to state 652
    "->"   shift, and go to state 653
    "??"   shift, and go to state 654
    "?."   shift, and go to state 655
    "?["   shift, and go to state 656
    "<|"   shift, and go to state 657
    "|>"   shift, and go to state 658
    "<<<"  shift, and go to state 659
    ">>>"  shift, and go to state 660
    "&&"   shift, and go to state 661
    "||"   shift, and go to state 662
    "^^"   shift, and go to state 663
    ".."   shift, and go to state 664
    '?'    shift, and go to state 665
    '|'    shift, and go to state 666
    '^'    shift, and go to state 667
    '&'    shift, and go to state 668
    '<'    shift, and go to state 669
    '>'    shift, and go to state 670
    '-'    shift, and go to state 671
    '+'    shift, and go to state 672
    '*'    shift, and go to state 673
    '/'    shift, and go to state 674
    '%'    shift, and go to state 675
    '.'    shift, and go to state 676
    '['    shift, and go to state 677
    ')'    shift, and go to state 1170


State 1079

  268 tuple_expansion: "name" .

    $default  reduce using rule 268 (tuple_expansion)


State 1080

  269 tuple_expansion: tuple_expansion . ',' "name"
  270 tuple_expansion_variable_declaration: '(' tuple_expansion . ')' ':' type_declaration_no_options copy_or_move_or_clone expr "end of expression"
  271                                     | '(' tuple_expansion . ')' optional_ref copy_or_move_or_clone expr "end of expression"

    ','  shift, and go to state 1171
    ')'  shift, and go to state 1172


State 1081

  544 enum_declaration: optional_annotation_list "enum" optional_public_or_private_enum enum_name optional_enum_basic_type_declaration "begin of code block" $@31 enum_list optional_comma $@32 "end of code block" .

    $default  reduce using rule 544 (enum_declaration)


State 1082

  465 optional_public_or_private_member_variable: "public" .

    $default  reduce using rule 465 (optional_public_or_private_member_variable)


State 1083

  466 optional_public_or_private_member_variable: "private" .

    $default  reduce using rule 466 (optional_public_or_private_member_variable)


State 1084

  474 struct_variable_declaration_list: struct_variable_declaration_list optional_annotation_list "def" optional_public_or_private_member_variable . "abstract" optional_constant $@26 function_declaration_header "end of expression"
  476                                 | struct_variable_declaration_list optional_annotation_list "def" optional_public_or_private_member_variable . optional_static_member_variable optional_override optional_constant $@27 function_declaration_header expression_block

    "abstract"  shift, and go to state 1173
    "static"    shift, and go to state 1085

    $default  reduce using rule 467 (optional_static_member_variable)

    optional_static_member_variable  go to state 1174


State 1085

  468 optional_static_member_variable: "static" .

    $default  reduce using rule 468 (optional_static_member_variable)


State 1086

  469 structure_variable_declaration: optional_field_annotation optional_static_member_variable . optional_override optional_public_or_private_member_variable variable_declaration

    "override"  shift, and go to state 1175
    "sealed"    shift, and go to state 1176

    $default  reduce using rule 459 (optional_override)

    optional_override  go to state 1177


State 1087

  472 struct_variable_declaration_list: struct_variable_declaration_list $@25 structure_variable_declaration "end of expression" .

    $default  reduce using rule 472 (struct_variable_declaration_list)


State 1088

  512 let_variable_declaration: let_variable_name_with_pos_list ':' type_declaration_no_options copy_or_move_or_clone expr "end of expression" .

    $default  reduce using rule 512 (let_variable_declaration)


State 1089

  718 make_struct_decl: "struct" '<' $@73 type_declaration_no_options '>' . $@74 '(' use_initializer make_struct_dim ')'

    $default  reduce using rule 717 ($@74)

    $@74  go to state 1178


State 1090

  721 make_struct_decl: "class" '<' $@75 type_declaration_no_options '>' . $@76 '(' use_initializer make_struct_dim ')'

    $default  reduce using rule 720 ($@76)

    $@76  go to state 1179


State 1091

  246 new_type_declaration: '<' $@3 type_declaration '>' . $@4

    $default  reduce using rule 245 ($@4)

    $@4  go to state 1180


State 1092

  703 make_struct_fields: "name" . copy_or_move expr
  704                   | "name" . ":=" expr

    "<-"  shift, and go to state 915
    ":="  shift, and go to state 1018
    '='   shift, and go to state 917

    copy_or_move  go to state 1019


State 1093

  249 expr_new: "new" new_type_declaration '(' use_initializer ')' .

    $default  reduce using rule 249 (expr_new)


State 1094

  250 expr_new: "new" new_type_declaration '(' use_initializer make_struct_single . ')'

    ')'  shift, and go to state 1181


State 1095

  248 expr_new: "new" structure_type_declaration '(' optional_expr_list ')' .

    $default  reduce using rule 248 (expr_new)


State 1096

  287 expr_type_info: "typeinfo" '(' name_in_namespace '<' "name" . '>' expr ')'
  288               | "typeinfo" '(' name_in_namespace '<' "name" . "end of expression" "name" '>' expr ')'

    "end of expression"  shift, and go to state 1182
    '>'                  shift, and go to state 1183


State 1097

  286 expr_type_info: "typeinfo" '(' name_in_namespace expr ')' .

    $default  reduce using rule 286 (expr_type_info)


State 1098

  285 expr_type_decl: "type" '<' $@11 type_declaration '>' . $@12

    $default  reduce using rule 284 ($@12)

    $@12  go to state 1184


State 1099

  737 make_dim_decl: "array" "struct" '<' $@83 type_declaration_no_options . '>' $@84 '(' use_initializer make_struct_dim ')'

    '>'  shift, and go to state 1185


State 1100

  740 make_dim_decl: "array" "tuple" '<' $@85 type_declaration_no_options . '>' $@86 '(' use_initializer make_struct_dim ')'

    '>'  shift, and go to state 1186


State 1101

  743 make_dim_decl: "array" "variant" '<' $@87 type_declaration_no_options . '>' $@88 '(' make_struct_dim ')'

    '>'  shift, and go to state 1187


State 1102

  747 make_dim_decl: "array" '<' $@89 type_declaration_no_options '>' . $@90 '(' expr_list optional_comma ')'

    $default  reduce using rule 746 ($@90)

    $@90  go to state 1188


State 1103

  744 make_dim_decl: "array" '(' expr_list optional_comma ')' .

    $default  reduce using rule 744 (make_dim_decl)


State 1104

  757 make_table_decl: "table" '<' type_declaration_no_options "end of expression" type_declaration_no_options . '>' '(' expr_map_tuple_list optional_comma ')'

    '>'  shift, and go to state 1189


State 1105

  756 make_table_decl: "table" '<' type_declaration_no_options '>' '(' . expr_map_tuple_list optional_comma ')'

    "struct"                          shift, and go to state 408
    "class"                           shift, and go to state 409
    "true"                            shift, and go to state 410
    "false"                           shift, and go to state 411
    "new"                             shift, and go to state 412
    "typeinfo"                        shift, and go to state 413
    "type"                            shift, and go to state 414
    "array"                           shift, and go to state 415
    "null"                            shift, and go to state 416
    "table"                           shift, and go to state 417
    "deref"                           shift, and go to state 418
    "cast"                            shift, and go to state 419
    "upcast"                          shift, and go to state 420
    "addr"                            shift, and go to state 421
    "reinterpret"                     shift, and go to state 422
    "fixed_array"                     shift, and go to state 423
    "default"                         shift, and go to state 424
    "bool"                            shift, and go to state 222
    "void"                            shift, and go to state 223
    "string"                          shift, and go to state 224
    "int"                             shift, and go to state 226
    "int2"                            shift, and go to state 227
    "int3"                            shift, and go to state 228
    "int4"                            shift, and go to state 229
    "uint"                            shift, and go to state 230
    "bitfield"                        shift, and go to state 425
    "uint2"                           shift, and go to state 232
    "uint3"                           shift, and go to state 233
    "uint4"                           shift, and go to state 234
    "float"                           shift, and go to state 235
    "float2"                          shift, and go to state 236
    "float3"                          shift, and go to state 237
    "float4"                          shift, and go to state 238
    "range"                           shift, and go to state 239
    "urange"                          shift, and go to state 240
    "range64"                         shift, and go to state 241
    "urange64"                        shift, and go to state 242
    "int64"                           shift, and go to state 244
    "uint64"                          shift, and go to state 245
    "double"                          shift, and go to state 246
    "int8"                            shift, and go to state 249
    "uint8"                           shift, and go to state 250
    "int16"                           shift, and go to state 251
    "uint16"                          shift, and go to state 252
    "tuple"                           shift, and go to state 426
    "variant"                         shift, and go to state 427
    "generator"                       shift, and go to state 428
    "++"                              shift, and go to state 429
    "--"                              shift, and go to state 430
    "::"                              shift, and go to state 55
    "$$"                              shift, and go to state 431
    "$i"                              shift, and go to state 432
    "$v"                              shift, and go to state 433
    "$b"                              shift, and go to state 434
    "$a"                              shift, and go to state 435
    "$c"                              shift, and go to state 436
    "..."                             shift, and go to state 437
    "integer constant"                shift, and go to state 438
    "long integer constant"           shift, and go to state 439
    "unsigned integer constant"       shift, and go to state 440
    "unsigned long integer constant"  shift, and go to state 441
    "unsigned int8 constant"          shift, and go to state 442
    "floating point constant"         shift, and go to state 443
    "double constant"                 shift, and go to state 444
    "name"                            shift, and go to state 56
    "start of the string"             shift, and go to state 445
    "begin of code block"             shift, and go to state 446
    '-'                               shift, and go to state 447
    '+'                               shift, and go to state 448
    '*'                               shift, and go to state 449
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 450
    '!'                               shift, and go to state 451
    '['                               shift, and go to state 452
    '('                               shift, and go to state 453
    '$'                               shift, and go to state 454
    '@'                               shift, and go to state 455

    string_builder          go to state 456
    expr_reader             go to state 457
    expr_call_pipe          go to state 458
    name_in_namespace       go to state 459
    expr_new                go to state 460
    expr_cast               go to state 461
    expr_type_decl          go to state 462
    expr_type_info          go to state 463
    block_or_lambda         go to state 464
    expr_full_block         go to state 465
    expr_numeric_const      go to state 466
    expr_named_call         go to state 467
    expr_method_call        go to state 468
    func_addr_expr          go to state 469
    expr_field              go to state 470
    expr_call               go to state 471
    expr                    go to state 623
    expr_mtag               go to state 473
    basic_type_declaration  go to state 474
    make_decl               go to state 475
    make_struct_decl        go to state 476
    make_map_tuple          go to state 624
    make_tuple_call         go to state 477
    make_dim_decl           go to state 478
    expr_map_tuple_list     go to state 1190
    make_table_decl         go to state 479
    array_comprehension     go to state 480


State 1106

  755 make_table_decl: "table" '(' expr_map_tuple_list optional_comma ')' .

    $default  reduce using rule 755 (make_table_decl)


State 1107

  276 expr_cast: "cast" '<' $@5 type_declaration_no_options '>' . $@6 expr

    $default  reduce using rule 275 ($@6)

    $@6  go to state 1191


State 1108

  279 expr_cast: "upcast" '<' $@7 type_declaration_no_options '>' . $@8 expr

    $default  reduce using rule 278 ($@8)

    $@8  go to state 1192


State 1109

  282 expr_cast: "reinterpret" '<' $@9 type_declaration_no_options '>' . $@10 expr

    $default  reduce using rule 281 ($@10)

    $@10  go to state 1193


State 1110

  751 make_dim_decl: "fixed_array" '<' $@91 type_declaration_no_options '>' . $@92 '(' expr_list optional_comma ')'

    $default  reduce using rule 750 ($@92)

    $@92  go to state 1194


State 1111

  748 make_dim_decl: "fixed_array" '(' expr_list optional_comma ')' .

    $default  reduce using rule 748 (make_dim_decl)


State 1112

  727 make_struct_decl: "default" '<' $@79 type_declaration_no_options '>' . $@80 use_initializer

    $default  reduce using rule 726 ($@80)

    $@80  go to state 1195


State 1113

  733 make_tuple_call: "tuple" '<' $@81 type_declaration_no_options '>' . $@82 '(' use_initializer make_struct_dim ')'

    $default  reduce using rule 732 ($@82)

    $@82  go to state 1196


State 1114

  730 make_tuple_call: "tuple" '(' expr_list optional_comma ')' .

    $default  reduce using rule 730 (make_tuple_call)


State 1115

  724 make_struct_decl: "variant" '<' $@77 type_declaration_no_options '>' . $@78 '(' make_struct_dim ')'

    $default  reduce using rule 723 ($@78)

    $@78  go to state 1197


State 1116

  411 expr: "generator" '<' type_declaration_no_options '>' optional_capture_list . '(' ')'
  412     | "generator" '<' type_declaration_no_options '>' optional_capture_list . '(' expr ')'

    '('  shift, and go to state 1198


State 1117

  447 expr_mtag: "$c" '(' expr ')' '(' . ')'
  448          | "$c" '(' expr ')' '(' . expr_list ')'

    "struct"                          shift, and go to state 408
    "class"                           shift, and go to state 409
    "true"                            shift, and go to state 410
    "false"                           shift, and go to state 411
    "new"                             shift, and go to state 412
    "typeinfo"                        shift, and go to state 413
    "type"                            shift, and go to state 414
    "array"                           shift, and go to state 415
    "null"                            shift, and go to state 416
    "table"                           shift, and go to state 417
    "deref"                           shift, and go to state 418
    "cast"                            shift, and go to state 419
    "upcast"                          shift, and go to state 420
    "addr"                            shift, and go to state 421
    "reinterpret"                     shift, and go to state 422
    "fixed_array"                     shift, and go to state 423
    "default"                         shift, and go to state 424
    "bool"                            shift, and go to state 222
    "void"                            shift, and go to state 223
    "string"                          shift, and go to state 224
    "int"                             shift, and go to state 226
    "int2"                            shift, and go to state 227
    "int3"                            shift, and go to state 228
    "int4"                            shift, and go to state 229
    "uint"                            shift, and go to state 230
    "bitfield"                        shift, and go to state 425
    "uint2"                           shift, and go to state 232
    "uint3"                           shift, and go to state 233
    "uint4"                           shift, and go to state 234
    "float"                           shift, and go to state 235
    "float2"                          shift, and go to state 236
    "float3"                          shift, and go to state 237
    "float4"                          shift, and go to state 238
    "range"                           shift, and go to state 239
    "urange"                          shift, and go to state 240
    "range64"                         shift, and go to state 241
    "urange64"                        shift, and go to state 242
    "int64"                           shift, and go to state 244
    "uint64"                          shift, and go to state 245
    "double"                          shift, and go to state 246
    "int8"                            shift, and go to state 249
    "uint8"                           shift, and go to state 250
    "int16"                           shift, and go to state 251
    "uint16"                          shift, and go to state 252
    "tuple"                           shift, and go to state 426
    "variant"                         shift, and go to state 427
    "generator"                       shift, and go to state 428
    "++"                              shift, and go to state 429
    "--"                              shift, and go to state 430
    "::"                              shift, and go to state 55
    "$$"                              shift, and go to state 431
    "$i"                              shift, and go to state 432
    "$v"                              shift, and go to state 433
    "$b"                              shift, and go to state 434
    "$a"                              shift, and go to state 435
    "$c"                              shift, and go to state 436
    "..."                             shift, and go to state 437
    "integer constant"                shift, and go to state 438
    "long integer constant"           shift, and go to state 439
    "unsigned integer constant"       shift, and go to state 440
    "unsigned long integer constant"  shift, and go to state 441
    "unsigned int8 constant"          shift, and go to state 442
    "floating point constant"         shift, and go to state 443
    "double constant"                 shift, and go to state 444
    "name"                            shift, and go to state 56
    "start of the string"             shift, and go to state 445
    "begin of code block"             shift, and go to state 446
    '-'                               shift, and go to state 447
    '+'                               shift, and go to state 448
    '*'                               shift, and go to state 449
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 450
    '!'                               shift, and go to state 451
    '['                               shift, and go to state 452
    '('                               shift, and go to state 453
    ')'                               shift, and go to state 1199
    '$'                               shift, and go to state 454
    '@'                               shift, and go to state 455

    string_builder          go to state 456
    expr_reader             go to state 457
    expr_call_pipe          go to state 458
    name_in_namespace       go to state 459
    expr_new                go to state 460
    expr_cast               go to state 461
    expr_type_decl          go to state 462
    expr_type_info          go to state 463
    expr_list               go to state 1200
    block_or_lambda         go to state 464
    expr_full_block         go to state 465
    expr_numeric_const      go to state 466
    expr_named_call         go to state 467
    expr_method_call        go to state 468
    func_addr_expr          go to state 469
    expr_field              go to state 470
    expr_call               go to state 471
    expr                    go to state 634
    expr_mtag               go to state 473
    basic_type_declaration  go to state 474
    make_decl               go to state 475
    make_struct_decl        go to state 476
    make_tuple_call         go to state 477
    make_dim_decl           go to state 478
    make_table_decl         go to state 479
    array_comprehension     go to state 480


State 1118

   30 string_builder_body: string_builder_body "{" expr "}" .

    $default  reduce using rule 30 (string_builder_body)


State 1119

  290 expr_list: expr_list . ',' expr
  764 array_comprehension: "begin of code block" "for" variable_name_with_pos_list "in" expr_list . "end of expression" make_map_tuple array_comprehension_where "end of code block"

    "end of expression"  shift, and go to state 1201
    ','                  shift, and go to state 907


State 1120

  290 expr_list: expr_list . ',' expr
  762 array_comprehension: '[' "for" variable_name_with_pos_list "in" expr_list . "end of expression" expr array_comprehension_where ']'

    "end of expression"  shift, and go to state 1202
    ','                  shift, and go to state 907


State 1121

  763 array_comprehension: '[' "iterator" "for" variable_name_with_pos_list "in" . expr_list "end of expression" expr array_comprehension_where ']'

    "struct"                          shift, and go to state 408
    "class"                           shift, and go to state 409
    "true"                            shift, and go to state 410
    "false"                           shift, and go to state 411
    "new"                             shift, and go to state 412
    "typeinfo"                        shift, and go to state 413
    "type"                            shift, and go to state 414
    "array"                           shift, and go to state 415
    "null"                            shift, and go to state 416
    "table"                           shift, and go to state 417
    "deref"                           shift, and go to state 418
    "cast"                            shift, and go to state 419
    "upcast"                          shift, and go to state 420
    "addr"                            shift, and go to state 421
    "reinterpret"                     shift, and go to state 422
    "fixed_array"                     shift, and go to state 423
    "default"                         shift, and go to state 424
    "bool"                            shift, and go to state 222
    "void"                            shift, and go to state 223
    "string"                          shift, and go to state 224
    "int"                             shift, and go to state 226
    "int2"                            shift, and go to state 227
    "int3"                            shift, and go to state 228
    "int4"                            shift, and go to state 229
    "uint"                            shift, and go to state 230
    "bitfield"                        shift, and go to state 425
    "uint2"                           shift, and go to state 232
    "uint3"                           shift, and go to state 233
    "uint4"                           shift, and go to state 234
    "float"                           shift, and go to state 235
    "float2"                          shift, and go to state 236
    "float3"                          shift, and go to state 237
    "float4"                          shift, and go to state 238
    "range"                           shift, and go to state 239
    "urange"                          shift, and go to state 240
    "range64"                         shift, and go to state 241
    "urange64"                        shift, and go to state 242
    "int64"                           shift, and go to state 244
    "uint64"                          shift, and go to state 245
    "double"                          shift, and go to state 246
    "int8"                            shift, and go to state 249
    "uint8"                           shift, and go to state 250
    "int16"                           shift, and go to state 251
    "uint16"                          shift, and go to state 252
    "tuple"                           shift, and go to state 426
    "variant"                         shift, and go to state 427
    "generator"                       shift, and go to state 428
    "++"                              shift, and go to state 429
    "--"                              shift, and go to state 430
    "::"                              shift, and go to state 55
    "$$"                              shift, and go to state 431
    "$i"                              shift, and go to state 432
    "$v"                              shift, and go to state 433
    "$b"                              shift, and go to state 434
    "$a"                              shift, and go to state 435
    "$c"                              shift, and go to state 436
    "..."                             shift, and go to state 437
    "integer constant"                shift, and go to state 438
    "long integer constant"           shift, and go to state 439
    "unsigned integer constant"       shift, and go to state 440
    "unsigned long integer constant"  shift, and go to state 441
    "unsigned int8 constant"          shift, and go to state 442
    "floating point constant"         shift, and go to state 443
    "double constant"                 shift, and go to state 444
    "name"                            shift, and go to state 56
    "start of the string"             shift, and go to state 445
    "begin of code block"             shift, and go to state 446
    '-'                               shift, and go to state 447
    '+'                               shift, and go to state 448
    '*'                               shift, and go to state 449
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 450
    '!'                               shift, and go to state 451
    '['                               shift, and go to state 452
    '('                               shift, and go to state 453
    '$'                               shift, and go to state 454
    '@'                               shift, and go to state 455

    string_builder          go to state 456
    expr_reader             go to state 457
    expr_call_pipe          go to state 458
    name_in_namespace       go to state 459
    expr_new                go to state 460
    expr_cast               go to state 461
    expr_type_decl          go to state 462
    expr_type_info          go to state 463
    expr_list               go to state 1203
    block_or_lambda         go to state 464
    expr_full_block         go to state 465
    expr_numeric_const      go to state 466
    expr_named_call         go to state 467
    expr_method_call        go to state 468
    func_addr_expr          go to state 469
    expr_field              go to state 470
    expr_call               go to state 471
    expr                    go to state 634
    expr_mtag               go to state 473
    basic_type_declaration  go to state 474
    make_decl               go to state 475
    make_struct_decl        go to state 476
    make_tuple_call         go to state 477
    make_dim_decl           go to state 478
    make_table_decl         go to state 479
    array_comprehension     go to state 480


State 1122

  336 expr_method_call: expr . "->" "name" '(' ')'
  337                 | expr . "->" "name" '(' expr_list ')'
  339 func_addr_name: "$i" '(' expr . ')'
  347 expr_field: expr . '.' "name"
  348           | expr . '.' '.' "name"
  349           | expr . '.' "name" '(' ')'
  350           | expr . '.' "name" '(' expr_list ')'
  353           | expr . '.' $@17 error $@18
  373 expr: expr . "<<" expr
  374     | expr . ">>" expr
  375     | expr . "<<<" expr
  376     | expr . ">>>" expr
  377     | expr . '+' expr
  378     | expr . '-' expr
  379     | expr . '*' expr
  380     | expr . '/' expr
  381     | expr . '%' expr
  382     | expr . '<' expr
  383     | expr . '>' expr
  384     | expr . "==" expr
  385     | expr . "!=" expr
  386     | expr . "<=" expr
  387     | expr . ">=" expr
  388     | expr . '&' expr
  389     | expr . '|' expr
  390     | expr . '^' expr
  391     | expr . "&&" expr
  392     | expr . "||" expr
  393     | expr . "^^" expr
  394     | expr . ".." expr
  397     | expr . "++"
  398     | expr . "--"
  400     | expr . '[' expr ']'
  401     | expr . '.' '[' expr ']'
  402     | expr . "?[" expr ']'
  403     | expr . '.' "?[" expr ']'
  404     | expr . "?." "name"
  405     | expr . '.' "?." "name"
  413     | expr . "??" expr
  414     | expr . '?' expr ':' expr
  417     | expr . "is" "type" '<' $@19 type_declaration_no_options '>' $@20
  418     | expr . "is" basic_type_declaration
  419     | expr . "is" "name"
  420     | expr . "as" "name"
  423     | expr . "as" "type" '<' $@21 type_declaration '>' $@22
  424     | expr . "as" basic_type_declaration
  425     | expr . '?' "as" "name"
  428     | expr . '?' "as" "type" '<' $@23 type_declaration '>' $@24
  429     | expr . '?' "as" basic_type_declaration
  437     | expr . "<|" expr
  438     | expr . "|>" expr
  439     | expr . "|>" basic_type_declaration
  449 expr_mtag: expr . '.' "$f" '(' expr ')'
  450          | expr . "?." "$f" '(' expr ')'
  451          | expr . '.' '.' "$f" '(' expr ')'
  452          | expr . '.' "?." "$f" '(' expr ')'
  453          | expr . "as" "$f" '(' expr ')'
  454          | expr . '?' "as" "$f" '(' expr ')'
  455          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 643
    "as"   shift, and go to state 644
    "<<"   shift, and go to state 645
    ">>"   shift, and go to state 646
    "++"   shift, and go to state 647
    "--"   shift, and go to state 648
    "<="   shift, and go to state 649
    ">="   shift, and go to state 650
    "=="   shift, and go to state 651
    "!="   shift, and go to state 652
    "->"   shift, and go to state 653
    "??"   shift, and go to state 654
    "?."   shift, and go to state 655
    "?["   shift, and go to state 656
    "<|"   shift, and go to state 657
    "|>"   shift, and go to state 658
    "<<<"  shift, and go to state 659
    ">>>"  shift, and go to state 660
    "&&"   shift, and go to state 661
    "||"   shift, and go to state 662
    "^^"   shift, and go to state 663
    ".."   shift, and go to state 664
    '?'    shift, and go to state 665
    '|'    shift, and go to state 666
    '^'    shift, and go to state 667
    '&'    shift, and go to state 668
    '<'    shift, and go to state 669
    '>'    shift, and go to state 670
    '-'    shift, and go to state 671
    '+'    shift, and go to state 672
    '*'    shift, and go to state 673
    '/'    shift, and go to state 674
    '%'    shift, and go to state 675
    '.'    shift, and go to state 676
    '['    shift, and go to state 677
    ')'    shift, and go to state 1204


State 1123

  336 expr_method_call: expr . "->" "name" '(' ')'
  337                 | expr . "->" "name" '(' expr_list ')'
  347 expr_field: expr . '.' "name"
  348           | expr . '.' '.' "name"
  349           | expr . '.' "name" '(' ')'
  350           | expr . '.' "name" '(' expr_list ')'
  353           | expr . '.' $@17 error $@18
  373 expr: expr . "<<" expr
  374     | expr . ">>" expr
  375     | expr . "<<<" expr
  376     | expr . ">>>" expr
  377     | expr . '+' expr
  378     | expr . '-' expr
  379     | expr . '*' expr
  380     | expr . '/' expr
  381     | expr . '%' expr
  382     | expr . '<' expr
  383     | expr . '>' expr
  384     | expr . "==" expr
  385     | expr . "!=" expr
  386     | expr . "<=" expr
  387     | expr . ">=" expr
  388     | expr . '&' expr
  389     | expr . '|' expr
  390     | expr . '^' expr
  391     | expr . "&&" expr
  392     | expr . "||" expr
  393     | expr . "^^" expr
  394     | expr . ".." expr
  397     | expr . "++"
  398     | expr . "--"
  400     | expr . '[' expr ']'
  401     | expr . '.' '[' expr ']'
  402     | expr . "?[" expr ']'
  403     | expr . '.' "?[" expr ']'
  404     | expr . "?." "name"
  405     | expr . '.' "?." "name"
  413     | expr . "??" expr
  414     | expr . '?' expr ':' expr
  417     | expr . "is" "type" '<' $@19 type_declaration_no_options '>' $@20
  418     | expr . "is" basic_type_declaration
  419     | expr . "is" "name"
  420     | expr . "as" "name"
  423     | expr . "as" "type" '<' $@21 type_declaration '>' $@22
  424     | expr . "as" basic_type_declaration
  425     | expr . '?' "as" "name"
  428     | expr . '?' "as" "type" '<' $@23 type_declaration '>' $@24
  429     | expr . '?' "as" basic_type_declaration
  437     | expr . "<|" expr
  438     | expr . "|>" expr
  439     | expr . "|>" basic_type_declaration
  449 expr_mtag: expr . '.' "$f" '(' expr ')'
  450          | expr . "?." "$f" '(' expr ')'
  451          | expr . '.' '.' "$f" '(' expr ')'
  452          | expr . '.' "?." "$f" '(' expr ')'
  453          | expr . "as" "$f" '(' expr ')'
  454          | expr . '?' "as" "$f" '(' expr ')'
  455          | expr . "is" "$f" '(' expr ')'
  456          | '@' '@' "$c" '(' expr . ')'

    "is"   shift, and go to state 643
    "as"   shift, and go to state 644
    "<<"   shift, and go to state 645
    ">>"   shift, and go to state 646
    "++"   shift, and go to state 647
    "--"   shift, and go to state 648
    "<="   shift, and go to state 649
    ">="   shift, and go to state 650
    "=="   shift, and go to state 651
    "!="   shift, and go to state 652
    "->"   shift, and go to state 653
    "??"   shift, and go to state 654
    "?."   shift, and go to state 655
    "?["   shift, and go to state 656
    "<|"   shift, and go to state 657
    "|>"   shift, and go to state 658
    "<<<"  shift, and go to state 659
    ">>>"  shift, and go to state 660
    "&&"   shift, and go to state 661
    "||"   shift, and go to state 662
    "^^"   shift, and go to state 663
    ".."   shift, and go to state 664
    '?'    shift, and go to state 665
    '|'    shift, and go to state 666
    '^'    shift, and go to state 667
    '&'    shift, and go to state 668
    '<'    shift, and go to state 669
    '>'    shift, and go to state 670
    '-'    shift, and go to state 671
    '+'    shift, and go to state 672
    '*'    shift, and go to state 673
    '/'    shift, and go to state 674
    '%'    shift, and go to state 675
    '.'    shift, and go to state 676
    '['    shift, and go to state 677
    ')'    shift, and go to state 1205


State 1124

  343 func_addr_expr: '@' '@' '<' $@13 type_declaration_no_options . '>' $@14 func_addr_name

    '>'  shift, and go to state 1206


State 1125

  346 func_addr_expr: '@' '@' '<' $@15 optional_function_argument_list . optional_function_type '>' $@16 func_addr_name

    ':'  shift, and go to state 389

    $default  reduce using rule 117 (optional_function_type)

    optional_function_type  go to state 1207


State 1126

  336 expr_method_call: expr . "->" "name" '(' ')'
  337                 | expr . "->" "name" '(' expr_list ')'
  347 expr_field: expr . '.' "name"
  348           | expr . '.' '.' "name"
  349           | expr . '.' "name" '(' ')'
  350           | expr . '.' "name" '(' expr_list ')'
  353           | expr . '.' $@17 error $@18
  373 expr: expr . "<<" expr
  374     | expr . ">>" expr
  375     | expr . "<<<" expr
  376     | expr . ">>>" expr
  377     | expr . '+' expr
  378     | expr . '-' expr
  379     | expr . '*' expr
  380     | expr . '/' expr
  381     | expr . '%' expr
  382     | expr . '<' expr
  383     | expr . '>' expr
  384     | expr . "==" expr
  385     | expr . "!=" expr
  386     | expr . "<=" expr
  387     | expr . ">=" expr
  388     | expr . '&' expr
  389     | expr . '|' expr
  390     | expr . '^' expr
  391     | expr . "&&" expr
  392     | expr . "||" expr
  393     | expr . "^^" expr
  394     | expr . ".." expr
  397     | expr . "++"
  398     | expr . "--"
  400     | expr . '[' expr ']'
  401     | expr . '.' '[' expr ']'
  402     | expr . "?[" expr ']'
  403     | expr . '.' "?[" expr ']'
  404     | expr . "?." "name"
  405     | expr . '.' "?." "name"
  413     | expr . "??" expr
  414     | expr . '?' expr ':' expr
  417     | expr . "is" "type" '<' $@19 type_declaration_no_options '>' $@20
  418     | expr . "is" basic_type_declaration
  419     | expr . "is" "name"
  420     | expr . "as" "name"
  423     | expr . "as" "type" '<' $@21 type_declaration '>' $@22
  424     | expr . "as" basic_type_declaration
  425     | expr . '?' "as" "name"
  428     | expr . '?' "as" "type" '<' $@23 type_declaration '>' $@24
  429     | expr . '?' "as" basic_type_declaration
  437     | expr . "<|" expr
  438     | expr . "|>" expr
  439     | expr . "|>" basic_type_declaration
  449 expr_mtag: expr . '.' "$f" '(' expr ')'
  450          | expr . "?." "$f" '(' expr ')'
  451          | expr . '.' '.' "$f" '(' expr ')'
  452          | expr . '.' "?." "$f" '(' expr ')'
  453          | expr . "as" "$f" '(' expr ')'
  454          | expr . '?' "as" "$f" '(' expr ')'
  455          | expr . "is" "$f" '(' expr ')'
  707 make_struct_fields: "$f" '(' expr . ')' copy_or_move expr
  708                   | "$f" '(' expr . ')' ":=" expr

    "is"   shift, and go to state 643
    "as"   shift, and go to state 644
    "<<"   shift, and go to state 645
    ">>"   shift, and go to state 646
    "++"   shift, and go to state 647
    "--"   shift, and go to state 648
    "<="   shift, and go to state 649
    ">="   shift, and go to state 650
    "=="   shift, and go to state 651
    "!="   shift, and go to state 652
    "->"   shift, and go to state 653
    "??"   shift, and go to state 654
    "?."   shift, and go to state 655
    "?["   shift, and go to state 656
    "<|"   shift, and go to state 657
    "|>"   shift, and go to state 658
    "<<<"  shift, and go to state 659
    ">>>"  shift, and go to state 660
    "&&"   shift, and go to state 661
    "||"   shift, and go to state 662
    "^^"   shift, and go to state 663
    ".."   shift, and go to state 664
    '?'    shift, and go to state 665
    '|'    shift, and go to state 666
    '^'    shift, and go to state 667
    '&'    shift, and go to state 668
    '<'    shift, and go to state 669
    '>'    shift, and go to state 670
    '-'    shift, and go to state 671
    '+'    shift, and go to state 672
    '*'    shift, and go to state 673
    '/'    shift, and go to state 674
    '%'    shift, and go to state 675
    '.'    shift, and go to state 676
    '['    shift, and go to state 677
    ')'    shift, and go to state 1208


State 1127

  336 expr_method_call: expr . "->" "name" '(' ')'
  337                 | expr . "->" "name" '(' expr_list ')'
  347 expr_field: expr . '.' "name"
  348           | expr . '.' '.' "name"
  349           | expr . '.' "name" '(' ')'
  350           | expr . '.' "name" '(' expr_list ')'
  353           | expr . '.' $@17 error $@18
  373 expr: expr . "<<" expr
  374     | expr . ">>" expr
  375     | expr . "<<<" expr
  376     | expr . ">>>" expr
  377     | expr . '+' expr
  378     | expr . '-' expr
  379     | expr . '*' expr
  380     | expr . '/' expr
  381     | expr . '%' expr
  382     | expr . '<' expr
  383     | expr . '>' expr
  384     | expr . "==" expr
  385     | expr . "!=" expr
  386     | expr . "<=" expr
  387     | expr . ">=" expr
  388     | expr . '&' expr
  389     | expr . '|' expr
  390     | expr . '^' expr
  391     | expr . "&&" expr
  392     | expr . "||" expr
  393     | expr . "^^" expr
  394     | expr . ".." expr
  397     | expr . "++"
  398     | expr . "--"
  400     | expr . '[' expr ']'
  401     | expr . '.' '[' expr ']'
  402     | expr . "?[" expr ']'
  403     | expr . '.' "?[" expr ']'
  404     | expr . "?." "name"
  405     | expr . '.' "?." "name"
  413     | expr . "??" expr
  414     | expr . '?' expr ':' expr
  417     | expr . "is" "type" '<' $@19 type_declaration_no_options '>' $@20
  418     | expr . "is" basic_type_declaration
  419     | expr . "is" "name"
  420     | expr . "as" "name"
  423     | expr . "as" "type" '<' $@21 type_declaration '>' $@22
  424     | expr . "as" basic_type_declaration
  425     | expr . '?' "as" "name"
  428     | expr . '?' "as" "type" '<' $@23 type_declaration '>' $@24
  429     | expr . '?' "as" basic_type_declaration
  437     | expr . "<|" expr
  438     | expr . "|>" expr
  439     | expr . "|>" basic_type_declaration
  449 expr_mtag: expr . '.' "$f" '(' expr ')'
  450          | expr . "?." "$f" '(' expr ')'
  451          | expr . '.' '.' "$f" '(' expr ')'
  452          | expr . '.' "?." "$f" '(' expr ')'
  453          | expr . "as" "$f" '(' expr ')'
  454          | expr . '?' "as" "$f" '(' expr ')'
  455          | expr . "is" "$f" '(' expr ')'
  704 make_struct_fields: "name" ":=" expr .

    "is"   shift, and go to state 643
    "as"   shift, and go to state 644
    "<<"   shift, and go to state 645
    ">>"   shift, and go to state 646
    "++"   shift, and go to state 647
    "--"   shift, and go to state 648
    "<="   shift, and go to state 649
    ">="   shift, and go to state 650
    "=="   shift, and go to state 651
    "!="   shift, and go to state 652
    "->"   shift, and go to state 653
    "??"   shift, and go to state 654
    "?."   shift, and go to state 655
    "?["   shift, and go to state 656
    "<|"   shift, and go to state 657
    "|>"   shift, and go to state 658
    "<<<"  shift, and go to state 659
    ">>>"  shift, and go to state 660
    "&&"   shift, and go to state 661
    "||"   shift, and go to state 662
    "^^"   shift, and go to state 663
    ".."   shift, and go to state 664
    '?'    shift, and go to state 665
    '|'    shift, and go to state 666
    '^'    shift, and go to state 667
    '&'    shift, and go to state 668
    '<'    shift, and go to state 669
    '>'    shift, and go to state 670
    '-'    shift, and go to state 671
    '+'    shift, and go to state 672
    '*'    shift, and go to state 673
    '/'    shift, and go to state 674
    '%'    shift, and go to state 675
    '.'    shift, and go to state 676
    '['    shift, and go to state 677

    $default  reduce using rule 704 (make_struct_fields)


State 1128

  336 expr_method_call: expr . "->" "name" '(' ')'
  337                 | expr . "->" "name" '(' expr_list ')'
  347 expr_field: expr . '.' "name"
  348           | expr . '.' '.' "name"
  349           | expr . '.' "name" '(' ')'
  350           | expr . '.' "name" '(' expr_list ')'
  353           | expr . '.' $@17 error $@18
  373 expr: expr . "<<" expr
  374     | expr . ">>" expr
  375     | expr . "<<<" expr
  376     | expr . ">>>" expr
  377     | expr . '+' expr
  378     | expr . '-' expr
  379     | expr . '*' expr
  380     | expr . '/' expr
  381     | expr . '%' expr
  382     | expr . '<' expr
  383     | expr . '>' expr
  384     | expr . "==" expr
  385     | expr . "!=" expr
  386     | expr . "<=" expr
  387     | expr . ">=" expr
  388     | expr . '&' expr
  389     | expr . '|' expr
  390     | expr . '^' expr
  391     | expr . "&&" expr
  392     | expr . "||" expr
  393     | expr . "^^" expr
  394     | expr . ".." expr
  397     | expr . "++"
  398     | expr . "--"
  400     | expr . '[' expr ']'
  401     | expr . '.' '[' expr ']'
  402     | expr . "?[" expr ']'
  403     | expr . '.' "?[" expr ']'
  404     | expr . "?." "name"
  405     | expr . '.' "?." "name"
  413     | expr . "??" expr
  414     | expr . '?' expr ':' expr
  417     | expr . "is" "type" '<' $@19 type_declaration_no_options '>' $@20
  418     | expr . "is" basic_type_declaration
  419     | expr . "is" "name"
  420     | expr . "as" "name"
  423     | expr . "as" "type" '<' $@21 type_declaration '>' $@22
  424     | expr . "as" basic_type_declaration
  425     | expr . '?' "as" "name"
  428     | expr . '?' "as" "type" '<' $@23 type_declaration '>' $@24
  429     | expr . '?' "as" basic_type_declaration
  437     | expr . "<|" expr
  438     | expr . "|>" expr
  439     | expr . "|>" basic_type_declaration
  449 expr_mtag: expr . '.' "$f" '(' expr ')'
  450          | expr . "?." "$f" '(' expr ')'
  451          | expr . '.' '.' "$f" '(' expr ')'
  452          | expr . '.' "?." "$f" '(' expr ')'
  453          | expr . "as" "$f" '(' expr ')'
  454          | expr . '?' "as" "$f" '(' expr ')'
  455          | expr . "is" "$f" '(' expr ')'
  703 make_struct_fields: "name" copy_or_move expr .

    "is"   shift, and go to state 643
    "as"   shift, and go to state 644
    "<<"   shift, and go to state 645
    ">>"   shift, and go to state 646
    "++"   shift, and go to state 647
    "--"   shift, and go to state 648
    "<="   shift, and go to state 649
    ">="   shift, and go to state 650
    "=="   shift, and go to state 651
    "!="   shift, and go to state 652
    "->"   shift, and go to state 653
    "??"   shift, and go to state 654
    "?."   shift, and go to state 655
    "?["   shift, and go to state 656
    "<|"   shift, and go to state 657
    "|>"   shift, and go to state 658
    "<<<"  shift, and go to state 659
    ">>>"  shift, and go to state 660
    "&&"   shift, and go to state 661
    "||"   shift, and go to state 662
    "^^"   shift, and go to state 663
    ".."   shift, and go to state 664
    '?'    shift, and go to state 665
    '|'    shift, and go to state 666
    '^'    shift, and go to state 667
    '&'    shift, and go to state 668
    '<'    shift, and go to state 669
    '>'    shift, and go to state 670
    '-'    shift, and go to state 671
    '+'    shift, and go to state 672
    '*'    shift, and go to state 673
    '/'    shift, and go to state 674
    '%'    shift, and go to state 675
    '.'    shift, and go to state 676
    '['    shift, and go to state 677

    $default  reduce using rule 703 (make_struct_fields)


State 1129

  334 expr_named_call: name_in_namespace '(' '[' make_struct_fields ']' . ')'

    ')'  shift, and go to state 1209


State 1130

  335 expr_named_call: name_in_namespace '(' expr_list ',' '[' . make_struct_fields ']' ')'
  734 make_dim_decl: '[' . expr_list optional_comma ']'
  762 array_comprehension: '[' . "for" variable_name_with_pos_list "in" expr_list "end of expression" expr array_comprehension_where ']'
  763                    | '[' . "iterator" "for" variable_name_with_pos_list "in" expr_list "end of expression" expr array_comprehension_where ']'

    "struct"                          shift, and go to state 408
    "class"                           shift, and go to state 409
    "for"                             shift, and go to state 631
    "true"                            shift, and go to state 410
    "false"                           shift, and go to state 411
    "new"                             shift, and go to state 412
    "typeinfo"                        shift, and go to state 413
    "type"                            shift, and go to state 414
    "array"                           shift, and go to state 415
    "null"                            shift, and go to state 416
    "table"                           shift, and go to state 417
    "deref"                           shift, and go to state 418
    "cast"                            shift, and go to state 419
    "upcast"                          shift, and go to state 420
    "iterator"                        shift, and go to state 632
    "addr"                            shift, and go to state 421
    "reinterpret"                     shift, and go to state 422
    "fixed_array"                     shift, and go to state 423
    "default"                         shift, and go to state 424
    "bool"                            shift, and go to state 222
    "void"                            shift, and go to state 223
    "string"                          shift, and go to state 224
    "int"                             shift, and go to state 226
    "int2"                            shift, and go to state 227
    "int3"                            shift, and go to state 228
    "int4"                            shift, and go to state 229
    "uint"                            shift, and go to state 230
    "bitfield"                        shift, and go to state 425
    "uint2"                           shift, and go to state 232
    "uint3"                           shift, and go to state 233
    "uint4"                           shift, and go to state 234
    "float"                           shift, and go to state 235
    "float2"                          shift, and go to state 236
    "float3"                          shift, and go to state 237
    "float4"                          shift, and go to state 238
    "range"                           shift, and go to state 239
    "urange"                          shift, and go to state 240
    "range64"                         shift, and go to state 241
    "urange64"                        shift, and go to state 242
    "int64"                           shift, and go to state 244
    "uint64"                          shift, and go to state 245
    "double"                          shift, and go to state 246
    "int8"                            shift, and go to state 249
    "uint8"                           shift, and go to state 250
    "int16"                           shift, and go to state 251
    "uint16"                          shift, and go to state 252
    "tuple"                           shift, and go to state 426
    "variant"                         shift, and go to state 427
    "generator"                       shift, and go to state 428
    "++"                              shift, and go to state 429
    "--"                              shift, and go to state 430
    "::"                              shift, and go to state 55
    "$$"                              shift, and go to state 431
    "$i"                              shift, and go to state 432
    "$v"                              shift, and go to state 433
    "$b"                              shift, and go to state 434
    "$a"                              shift, and go to state 435
    "$c"                              shift, and go to state 436
    "$f"                              shift, and go to state 828
    "..."                             shift, and go to state 437
    "integer constant"                shift, and go to state 438
    "long integer constant"           shift, and go to state 439
    "unsigned integer constant"       shift, and go to state 440
    "unsigned long integer constant"  shift, and go to state 441
    "unsigned int8 constant"          shift, and go to state 442
    "floating point constant"         shift, and go to state 443
    "double constant"                 shift, and go to state 444
    "name"                            shift, and go to state 829
    "start of the string"             shift, and go to state 445
    "begin of code block"             shift, and go to state 446
    '-'                               shift, and go to state 447
    '+'                               shift, and go to state 448
    '*'                               shift, and go to state 449
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 450
    '!'                               shift, and go to state 451
    '['                               shift, and go to state 452
    '('                               shift, and go to state 453
    '$'                               shift, and go to state 454
    '@'                               shift, and go to state 455

    string_builder          go to state 456
    expr_reader             go to state 457
    expr_call_pipe          go to state 458
    name_in_namespace       go to state 459
    expr_new                go to state 460
    expr_cast               go to state 461
    expr_type_decl          go to state 462
    expr_type_info          go to state 463
    expr_list               go to state 633
    block_or_lambda         go to state 464
    expr_full_block         go to state 465
    expr_numeric_const      go to state 466
    expr_named_call         go to state 467
    expr_method_call        go to state 468
    func_addr_expr          go to state 469
    expr_field              go to state 470
    expr_call               go to state 471
    expr                    go to state 634
    expr_mtag               go to state 473
    basic_type_declaration  go to state 474
    make_decl               go to state 475
    make_struct_fields      go to state 1210
    make_struct_decl        go to state 476
    make_tuple_call         go to state 477
    make_dim_decl           go to state 478
    make_table_decl         go to state 479
    array_comprehension     go to state 480


State 1131

  709 make_struct_fields: make_struct_fields ',' "$f" . '(' expr ')' copy_or_move expr
  710                   | make_struct_fields ',' "$f" . '(' expr ')' ":=" expr

    '('  shift, and go to state 1211


State 1132

  705 make_struct_fields: make_struct_fields ',' "name" . copy_or_move expr
  706                   | make_struct_fields ',' "name" . ":=" expr

    "<-"  shift, and go to state 915
    ":="  shift, and go to state 1212
    '='   shift, and go to state 917

    copy_or_move  go to state 1213


State 1133

  299 capture_entry: "<-" . "name"

    "name"  shift, and go to state 1214


State 1134

  300 capture_entry: ":=" . "name"

    "name"  shift, and go to state 1215


State 1135

  298 capture_entry: '=' . "name"

    "name"  shift, and go to state 1216


State 1136

  297 capture_entry: '&' . "name"

    "name"  shift, and go to state 1217


State 1137

  301 capture_list: capture_entry .

    $default  reduce using rule 301 (capture_list)


State 1138

  302 capture_list: capture_list . ',' capture_entry
  304 optional_capture_list: '[' '[' capture_list . ']' ']'

    ','  shift, and go to state 1218
    ']'  shift, and go to state 1219


State 1139

  305 expr_full_block: block_or_lambda optional_annotation_list optional_capture_list optional_function_argument_list optional_function_type . block_or_simple_block

    "=>"                   shift, and go to state 1220
    "begin of code block"  shift, and go to state 323

    expression_block       go to state 1221
    block_or_simple_block  go to state 1222


State 1140

  306 expr_full_block_assumed_piped: block_or_lambda optional_annotation_list optional_capture_list optional_function_argument_list . optional_function_type expression_block

    ':'  shift, and go to state 389

    $default  reduce using rule 117 (optional_function_type)

    optional_function_type  go to state 1223


State 1141

  417 expr: expr "is" "type" '<' $@19 . type_declaration_no_options '>' $@20

    "type"       shift, and go to state 216
    "array"      shift, and go to state 217
    "table"      shift, and go to state 218
    "typedecl"   shift, and go to state 219
    "iterator"   shift, and go to state 220
    "smart_ptr"  shift, and go to state 221
    "bool"       shift, and go to state 222
    "void"       shift, and go to state 223
    "string"     shift, and go to state 224
    "auto"       shift, and go to state 225
    "int"        shift, and go to state 226
    "int2"       shift, and go to state 227
    "int3"       shift, and go to state 228
    "int4"       shift, and go to state 229
    "uint"       shift, and go to state 230
    "bitfield"   shift, and go to state 231
    "uint2"      shift, and go to state 232
    "uint3"      shift, and go to state 233
    "uint4"      shift, and go to state 234
    "float"      shift, and go to state 235
    "float2"     shift, and go to state 236
    "float3"     shift, and go to state 237
    "float4"     shift, and go to state 238
    "range"      shift, and go to state 239
    "urange"     shift, and go to state 240
    "range64"    shift, and go to state 241
    "urange64"   shift, and go to state 242
    "block"      shift, and go to state 243
    "int64"      shift, and go to state 244
    "uint64"     shift, and go to state 245
    "double"     shift, and go to state 246
    "function"   shift, and go to state 247
    "lambda"     shift, and go to state 248
    "int8"       shift, and go to state 249
    "uint8"      shift, and go to state 250
    "int16"      shift, and go to state 251
    "uint16"     shift, and go to state 252
    "tuple"      shift, and go to state 253
    "variant"    shift, and go to state 254
    "::"         shift, and go to state 55
    "$t"         shift, and go to state 255
    "name"       shift, and go to state 56
    '$'          shift, and go to state 256

    name_in_namespace                   go to state 257
    basic_type_declaration              go to state 258
    structure_type_declaration          go to state 259
    auto_type_declaration               go to state 260
    bitfield_type_declaration           go to state 261
    type_declaration_no_options         go to state 1224
    type_declaration_no_options_no_dim  go to state 263


State 1142

  336 expr_method_call: expr . "->" "name" '(' ')'
  337                 | expr . "->" "name" '(' expr_list ')'
  347 expr_field: expr . '.' "name"
  348           | expr . '.' '.' "name"
  349           | expr . '.' "name" '(' ')'
  350           | expr . '.' "name" '(' expr_list ')'
  353           | expr . '.' $@17 error $@18
  373 expr: expr . "<<" expr
  374     | expr . ">>" expr
  375     | expr . "<<<" expr
  376     | expr . ">>>" expr
  377     | expr . '+' expr
  378     | expr . '-' expr
  379     | expr . '*' expr
  380     | expr . '/' expr
  381     | expr . '%' expr
  382     | expr . '<' expr
  383     | expr . '>' expr
  384     | expr . "==" expr
  385     | expr . "!=" expr
  386     | expr . "<=" expr
  387     | expr . ">=" expr
  388     | expr . '&' expr
  389     | expr . '|' expr
  390     | expr . '^' expr
  391     | expr . "&&" expr
  392     | expr . "||" expr
  393     | expr . "^^" expr
  394     | expr . ".." expr
  397     | expr . "++"
  398     | expr . "--"
  400     | expr . '[' expr ']'
  401     | expr . '.' '[' expr ']'
  402     | expr . "?[" expr ']'
  403     | expr . '.' "?[" expr ']'
  404     | expr . "?." "name"
  405     | expr . '.' "?." "name"
  413     | expr . "??" expr
  414     | expr . '?' expr ':' expr
  417     | expr . "is" "type" '<' $@19 type_declaration_no_options '>' $@20
  418     | expr . "is" basic_type_declaration
  419     | expr . "is" "name"
  420     | expr . "as" "name"
  423     | expr . "as" "type" '<' $@21 type_declaration '>' $@22
  424     | expr . "as" basic_type_declaration
  425     | expr . '?' "as" "name"
  428     | expr . '?' "as" "type" '<' $@23 type_declaration '>' $@24
  429     | expr . '?' "as" basic_type_declaration
  437     | expr . "<|" expr
  438     | expr . "|>" expr
  439     | expr . "|>" basic_type_declaration
  449 expr_mtag: expr . '.' "$f" '(' expr ')'
  450          | expr . "?." "$f" '(' expr ')'
  451          | expr . '.' '.' "$f" '(' expr ')'
  452          | expr . '.' "?." "$f" '(' expr ')'
  453          | expr . "as" "$f" '(' expr ')'
  454          | expr . '?' "as" "$f" '(' expr ')'
  455          | expr . "is" "$f" '(' expr ')'
  455          | expr "is" "$f" '(' expr . ')'

    "is"   shift, and go to state 643
    "as"   shift, and go to state 644
    "<<"   shift, and go to state 645
    ">>"   shift, and go to state 646
    "++"   shift, and go to state 647
    "--"   shift, and go to state 648
    "<="   shift, and go to state 649
    ">="   shift, and go to state 650
    "=="   shift, and go to state 651
    "!="   shift, and go to state 652
    "->"   shift, and go to state 653
    "??"   shift, and go to state 654
    "?."   shift, and go to state 655
    "?["   shift, and go to state 656
    "<|"   shift, and go to state 657
    "|>"   shift, and go to state 658
    "<<<"  shift, and go to state 659
    ">>>"  shift, and go to state 660
    "&&"   shift, and go to state 661
    "||"   shift, and go to state 662
    "^^"   shift, and go to state 663
    ".."   shift, and go to state 664
    '?'    shift, and go to state 665
    '|'    shift, and go to state 666
    '^'    shift, and go to state 667
    '&'    shift, and go to state 668
    '<'    shift, and go to state 669
    '>'    shift, and go to state 670
    '-'    shift, and go to state 671
    '+'    shift, and go to state 672
    '*'    shift, and go to state 673
    '/'    shift, and go to state 674
    '%'    shift, and go to state 675
    '.'    shift, and go to state 676
    '['    shift, and go to state 677
    ')'    shift, and go to state 1225


State 1143

  423 expr: expr "as" "type" '<' $@21 . type_declaration '>' $@22

    "type"       shift, and go to state 216
    "array"      shift, and go to state 217
    "table"      shift, and go to state 218
    "typedecl"   shift, and go to state 219
    "iterator"   shift, and go to state 220
    "smart_ptr"  shift, and go to state 221
    "bool"       shift, and go to state 222
    "void"       shift, and go to state 223
    "string"     shift, and go to state 224
    "auto"       shift, and go to state 225
    "int"        shift, and go to state 226
    "int2"       shift, and go to state 227
    "int3"       shift, and go to state 228
    "int4"       shift, and go to state 229
    "uint"       shift, and go to state 230
    "bitfield"   shift, and go to state 231
    "uint2"      shift, and go to state 232
    "uint3"      shift, and go to state 233
    "uint4"      shift, and go to state 234
    "float"      shift, and go to state 235
    "float2"     shift, and go to state 236
    "float3"     shift, and go to state 237
    "float4"     shift, and go to state 238
    "range"      shift, and go to state 239
    "urange"     shift, and go to state 240
    "range64"    shift, and go to state 241
    "urange64"   shift, and go to state 242
    "block"      shift, and go to state 243
    "int64"      shift, and go to state 244
    "uint64"     shift, and go to state 245
    "double"     shift, and go to state 246
    "function"   shift, and go to state 247
    "lambda"     shift, and go to state 248
    "int8"       shift, and go to state 249
    "uint8"      shift, and go to state 250
    "int16"      shift, and go to state 251
    "uint16"     shift, and go to state 252
    "tuple"      shift, and go to state 253
    "variant"    shift, and go to state 254
    "::"         shift, and go to state 55
    "$t"         shift, and go to state 255
    "name"       shift, and go to state 56
    '$'          shift, and go to state 256

    name_in_namespace                   go to state 257
    basic_type_declaration              go to state 258
    structure_type_declaration          go to state 259
    auto_type_declaration               go to state 260
    bitfield_type_declaration           go to state 261
    type_declaration_no_options         go to state 262
    type_declaration_no_options_no_dim  go to state 263
    type_declaration                    go to state 1226


State 1144

  336 expr_method_call: expr . "->" "name" '(' ')'
  337                 | expr . "->" "name" '(' expr_list ')'
  347 expr_field: expr . '.' "name"
  348           | expr . '.' '.' "name"
  349           | expr . '.' "name" '(' ')'
  350           | expr . '.' "name" '(' expr_list ')'
  353           | expr . '.' $@17 error $@18
  373 expr: expr . "<<" expr
  374     | expr . ">>" expr
  375     | expr . "<<<" expr
  376     | expr . ">>>" expr
  377     | expr . '+' expr
  378     | expr . '-' expr
  379     | expr . '*' expr
  380     | expr . '/' expr
  381     | expr . '%' expr
  382     | expr . '<' expr
  383     | expr . '>' expr
  384     | expr . "==" expr
  385     | expr . "!=" expr
  386     | expr . "<=" expr
  387     | expr . ">=" expr
  388     | expr . '&' expr
  389     | expr . '|' expr
  390     | expr . '^' expr
  391     | expr . "&&" expr
  392     | expr . "||" expr
  393     | expr . "^^" expr
  394     | expr . ".." expr
  397     | expr . "++"
  398     | expr . "--"
  400     | expr . '[' expr ']'
  401     | expr . '.' '[' expr ']'
  402     | expr . "?[" expr ']'
  403     | expr . '.' "?[" expr ']'
  404     | expr . "?." "name"
  405     | expr . '.' "?." "name"
  413     | expr . "??" expr
  414     | expr . '?' expr ':' expr
  417     | expr . "is" "type" '<' $@19 type_declaration_no_options '>' $@20
  418     | expr . "is" basic_type_declaration
  419     | expr . "is" "name"
  420     | expr . "as" "name"
  423     | expr . "as" "type" '<' $@21 type_declaration '>' $@22
  424     | expr . "as" basic_type_declaration
  425     | expr . '?' "as" "name"
  428     | expr . '?' "as" "type" '<' $@23 type_declaration '>' $@24
  429     | expr . '?' "as" basic_type_declaration
  437     | expr . "<|" expr
  438     | expr . "|>" expr
  439     | expr . "|>" basic_type_declaration
  449 expr_mtag: expr . '.' "$f" '(' expr ')'
  450          | expr . "?." "$f" '(' expr ')'
  451          | expr . '.' '.' "$f" '(' expr ')'
  452          | expr . '.' "?." "$f" '(' expr ')'
  453          | expr . "as" "$f" '(' expr ')'
  453          | expr "as" "$f" '(' expr . ')'
  454          | expr . '?' "as" "$f" '(' expr ')'
  455          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 643
    "as"   shift, and go to state 644
    "<<"   shift, and go to state 645
    ">>"   shift, and go to state 646
    "++"   shift, and go to state 647
    "--"   shift, and go to state 648
    "<="   shift, and go to state 649
    ">="   shift, and go to state 650
    "=="   shift, and go to state 651
    "!="   shift, and go to state 652
    "->"   shift, and go to state 653
    "??"   shift, and go to state 654
    "?."   shift, and go to state 655
    "?["   shift, and go to state 656
    "<|"   shift, and go to state 657
    "|>"   shift, and go to state 658
    "<<<"  shift, and go to state 659
    ">>>"  shift, and go to state 660
    "&&"   shift, and go to state 661
    "||"   shift, and go to state 662
    "^^"   shift, and go to state 663
    ".."   shift, and go to state 664
    '?'    shift, and go to state 665
    '|'    shift, and go to state 666
    '^'    shift, and go to state 667
    '&'    shift, and go to state 668
    '<'    shift, and go to state 669
    '>'    shift, and go to state 670
    '-'    shift, and go to state 671
    '+'    shift, and go to state 672
    '*'    shift, and go to state 673
    '/'    shift, and go to state 674
    '%'    shift, and go to state 675
    '.'    shift, and go to state 676
    '['    shift, and go to state 677
    ')'    shift, and go to state 1227


State 1145

  336 expr_method_call: expr "->" "name" '(' ')' .

    $default  reduce using rule 336 (expr_method_call)


State 1146

  290 expr_list: expr_list . ',' expr
  337 expr_method_call: expr "->" "name" '(' expr_list . ')'

    ','  shift, and go to state 907
    ')'  shift, and go to state 1228


State 1147

  336 expr_method_call: expr . "->" "name" '(' ')'
  337                 | expr . "->" "name" '(' expr_list ')'
  347 expr_field: expr . '.' "name"
  348           | expr . '.' '.' "name"
  349           | expr . '.' "name" '(' ')'
  350           | expr . '.' "name" '(' expr_list ')'
  353           | expr . '.' $@17 error $@18
  373 expr: expr . "<<" expr
  374     | expr . ">>" expr
  375     | expr . "<<<" expr
  376     | expr . ">>>" expr
  377     | expr . '+' expr
  378     | expr . '-' expr
  379     | expr . '*' expr
  380     | expr . '/' expr
  381     | expr . '%' expr
  382     | expr . '<' expr
  383     | expr . '>' expr
  384     | expr . "==" expr
  385     | expr . "!=" expr
  386     | expr . "<=" expr
  387     | expr . ">=" expr
  388     | expr . '&' expr
  389     | expr . '|' expr
  390     | expr . '^' expr
  391     | expr . "&&" expr
  392     | expr . "||" expr
  393     | expr . "^^" expr
  394     | expr . ".." expr
  397     | expr . "++"
  398     | expr . "--"
  400     | expr . '[' expr ']'
  401     | expr . '.' '[' expr ']'
  402     | expr . "?[" expr ']'
  403     | expr . '.' "?[" expr ']'
  404     | expr . "?." "name"
  405     | expr . '.' "?." "name"
  413     | expr . "??" expr
  414     | expr . '?' expr ':' expr
  417     | expr . "is" "type" '<' $@19 type_declaration_no_options '>' $@20
  418     | expr . "is" basic_type_declaration
  419     | expr . "is" "name"
  420     | expr . "as" "name"
  423     | expr . "as" "type" '<' $@21 type_declaration '>' $@22
  424     | expr . "as" basic_type_declaration
  425     | expr . '?' "as" "name"
  428     | expr . '?' "as" "type" '<' $@23 type_declaration '>' $@24
  429     | expr . '?' "as" basic_type_declaration
  437     | expr . "<|" expr
  438     | expr . "|>" expr
  439     | expr . "|>" basic_type_declaration
  449 expr_mtag: expr . '.' "$f" '(' expr ')'
  450          | expr . "?." "$f" '(' expr ')'
  450          | expr "?." "$f" '(' expr . ')'
  451          | expr . '.' '.' "$f" '(' expr ')'
  452          | expr . '.' "?." "$f" '(' expr ')'
  453          | expr . "as" "$f" '(' expr ')'
  454          | expr . '?' "as" "$f" '(' expr ')'
  455          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 643
    "as"   shift, and go to state 644
    "<<"   shift, and go to state 645
    ">>"   shift, and go to state 646
    "++"   shift, and go to state 647
    "--"   shift, and go to state 648
    "<="   shift, and go to state 649
    ">="   shift, and go to state 650
    "=="   shift, and go to state 651
    "!="   shift, and go to state 652
    "->"   shift, and go to state 653
    "??"   shift, and go to state 654
    "?."   shift, and go to state 655
    "?["   shift, and go to state 656
    "<|"   shift, and go to state 657
    "|>"   shift, and go to state 658
    "<<<"  shift, and go to state 659
    ">>>"  shift, and go to state 660
    "&&"   shift, and go to state 661
    "||"   shift, and go to state 662
    "^^"   shift, and go to state 663
    ".."   shift, and go to state 664
    '?'    shift, and go to state 665
    '|'    shift, and go to state 666
    '^'    shift, and go to state 667
    '&'    shift, and go to state 668
    '<'    shift, and go to state 669
    '>'    shift, and go to state 670
    '-'    shift, and go to state 671
    '+'    shift, and go to state 672
    '*'    shift, and go to state 673
    '/'    shift, and go to state 674
    '%'    shift, and go to state 675
    '.'    shift, and go to state 676
    '['    shift, and go to state 677
    ')'    shift, and go to state 1229


State 1148

  428 expr: expr '?' "as" "type" '<' . $@23 type_declaration '>' $@24

    $default  reduce using rule 426 ($@23)

    $@23  go to state 1230


State 1149

  454 expr_mtag: expr '?' "as" "$f" '(' . expr ')'

    "struct"                          shift, and go to state 408
    "class"                           shift, and go to state 409
    "true"                            shift, and go to state 410
    "false"                           shift, and go to state 411
    "new"                             shift, and go to state 412
    "typeinfo"                        shift, and go to state 413
    "type"                            shift, and go to state 414
    "array"                           shift, and go to state 415
    "null"                            shift, and go to state 416
    "table"                           shift, and go to state 417
    "deref"                           shift, and go to state 418
    "cast"                            shift, and go to state 419
    "upcast"                          shift, and go to state 420
    "addr"                            shift, and go to state 421
    "reinterpret"                     shift, and go to state 422
    "fixed_array"                     shift, and go to state 423
    "default"                         shift, and go to state 424
    "bool"                            shift, and go to state 222
    "void"                            shift, and go to state 223
    "string"                          shift, and go to state 224
    "int"                             shift, and go to state 226
    "int2"                            shift, and go to state 227
    "int3"                            shift, and go to state 228
    "int4"                            shift, and go to state 229
    "uint"                            shift, and go to state 230
    "bitfield"                        shift, and go to state 425
    "uint2"                           shift, and go to state 232
    "uint3"                           shift, and go to state 233
    "uint4"                           shift, and go to state 234
    "float"                           shift, and go to state 235
    "float2"                          shift, and go to state 236
    "float3"                          shift, and go to state 237
    "float4"                          shift, and go to state 238
    "range"                           shift, and go to state 239
    "urange"                          shift, and go to state 240
    "range64"                         shift, and go to state 241
    "urange64"                        shift, and go to state 242
    "int64"                           shift, and go to state 244
    "uint64"                          shift, and go to state 245
    "double"                          shift, and go to state 246
    "int8"                            shift, and go to state 249
    "uint8"                           shift, and go to state 250
    "int16"                           shift, and go to state 251
    "uint16"                          shift, and go to state 252
    "tuple"                           shift, and go to state 426
    "variant"                         shift, and go to state 427
    "generator"                       shift, and go to state 428
    "++"                              shift, and go to state 429
    "--"                              shift, and go to state 430
    "::"                              shift, and go to state 55
    "$$"                              shift, and go to state 431
    "$i"                              shift, and go to state 432
    "$v"                              shift, and go to state 433
    "$b"                              shift, and go to state 434
    "$a"                              shift, and go to state 435
    "$c"                              shift, and go to state 436
    "..."                             shift, and go to state 437
    "integer constant"                shift, and go to state 438
    "long integer constant"           shift, and go to state 439
    "unsigned integer constant"       shift, and go to state 440
    "unsigned long integer constant"  shift, and go to state 441
    "unsigned int8 constant"          shift, and go to state 442
    "floating point constant"         shift, and go to state 443
    "double constant"                 shift, and go to state 444
    "name"                            shift, and go to state 56
    "start of the string"             shift, and go to state 445
    "begin of code block"             shift, and go to state 446
    '-'                               shift, and go to state 447
    '+'                               shift, and go to state 448
    '*'                               shift, and go to state 449
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 450
    '!'                               shift, and go to state 451
    '['                               shift, and go to state 452
    '('                               shift, and go to state 453
    '$'                               shift, and go to state 454
    '@'                               shift, and go to state 455

    string_builder          go to state 456
    expr_reader             go to state 457
    expr_call_pipe          go to state 458
    name_in_namespace       go to state 459
    expr_new                go to state 460
    expr_cast               go to state 461
    expr_type_decl          go to state 462
    expr_type_info          go to state 463
    block_or_lambda         go to state 464
    expr_full_block         go to state 465
    expr_numeric_const      go to state 466
    expr_named_call         go to state 467
    expr_method_call        go to state 468
    func_addr_expr          go to state 469
    expr_field              go to state 470
    expr_call               go to state 471
    expr                    go to state 1231
    expr_mtag               go to state 473
    basic_type_declaration  go to state 474
    make_decl               go to state 475
    make_struct_decl        go to state 476
    make_tuple_call         go to state 477
    make_dim_decl           go to state 478
    make_table_decl         go to state 479
    array_comprehension     go to state 480


State 1150

  336 expr_method_call: expr . "->" "name" '(' ')'
  337                 | expr . "->" "name" '(' expr_list ')'
  347 expr_field: expr . '.' "name"
  348           | expr . '.' '.' "name"
  349           | expr . '.' "name" '(' ')'
  350           | expr . '.' "name" '(' expr_list ')'
  353           | expr . '.' $@17 error $@18
  373 expr: expr . "<<" expr
  374     | expr . ">>" expr
  375     | expr . "<<<" expr
  376     | expr . ">>>" expr
  377     | expr . '+' expr
  378     | expr . '-' expr
  379     | expr . '*' expr
  380     | expr . '/' expr
  381     | expr . '%' expr
  382     | expr . '<' expr
  383     | expr . '>' expr
  384     | expr . "==" expr
  385     | expr . "!=" expr
  386     | expr . "<=" expr
  387     | expr . ">=" expr
  388     | expr . '&' expr
  389     | expr . '|' expr
  390     | expr . '^' expr
  391     | expr . "&&" expr
  392     | expr . "||" expr
  393     | expr . "^^" expr
  394     | expr . ".." expr
  397     | expr . "++"
  398     | expr . "--"
  400     | expr . '[' expr ']'
  401     | expr . '.' '[' expr ']'
  402     | expr . "?[" expr ']'
  403     | expr . '.' "?[" expr ']'
  404     | expr . "?." "name"
  405     | expr . '.' "?." "name"
  413     | expr . "??" expr
  414     | expr . '?' expr ':' expr
  414     | expr '?' expr ':' expr .
  417     | expr . "is" "type" '<' $@19 type_declaration_no_options '>' $@20
  418     | expr . "is" basic_type_declaration
  419     | expr . "is" "name"
  420     | expr . "as" "name"
  423     | expr . "as" "type" '<' $@21 type_declaration '>' $@22
  424     | expr . "as" basic_type_declaration
  425     | expr . '?' "as" "name"
  428     | expr . '?' "as" "type" '<' $@23 type_declaration '>' $@24
  429     | expr . '?' "as" basic_type_declaration
  437     | expr . "<|" expr
  438     | expr . "|>" expr
  439     | expr . "|>" basic_type_declaration
  449 expr_mtag: expr . '.' "$f" '(' expr ')'
  450          | expr . "?." "$f" '(' expr ')'
  451          | expr . '.' '.' "$f" '(' expr ')'
  452          | expr . '.' "?." "$f" '(' expr ')'
  453          | expr . "as" "$f" '(' expr ')'
  454          | expr . '?' "as" "$f" '(' expr ')'
  455          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 643
    "as"   shift, and go to state 644
    "<<"   shift, and go to state 645
    ">>"   shift, and go to state 646
    "++"   shift, and go to state 647
    "--"   shift, and go to state 648
    "<="   shift, and go to state 649
    ">="   shift, and go to state 650
    "=="   shift, and go to state 651
    "!="   shift, and go to state 652
    "->"   shift, and go to state 653
    "??"   shift, and go to state 654
    "?."   shift, and go to state 655
    "?["   shift, and go to state 656
    "<|"   shift, and go to state 657
    "|>"   shift, and go to state 658
    "<<<"  shift, and go to state 659
    ">>>"  shift, and go to state 660
    "&&"   shift, and go to state 661
    "||"   shift, and go to state 662
    "^^"   shift, and go to state 663
    '?'    shift, and go to state 665
    '|'    shift, and go to state 666
    '^'    shift, and go to state 667
    '&'    shift, and go to state 668
    '<'    shift, and go to state 669
    '>'    shift, and go to state 670
    '-'    shift, and go to state 671
    '+'    shift, and go to state 672
    '*'    shift, and go to state 673
    '/'    shift, and go to state 674
    '%'    shift, and go to state 675
    '.'    shift, and go to state 676
    '['    shift, and go to state 677

    $default  reduce using rule 414 (expr)


State 1151

  452 expr_mtag: expr '.' "?." "$f" '(' . expr ')'

    "struct"                          shift, and go to state 408
    "class"                           shift, and go to state 409
    "true"                            shift, and go to state 410
    "false"                           shift, and go to state 411
    "new"                             shift, and go to state 412
    "typeinfo"                        shift, and go to state 413
    "type"                            shift, and go to state 414
    "array"                           shift, and go to state 415
    "null"                            shift, and go to state 416
    "table"                           shift, and go to state 417
    "deref"                           shift, and go to state 418
    "cast"                            shift, and go to state 419
    "upcast"                          shift, and go to state 420
    "addr"                            shift, and go to state 421
    "reinterpret"                     shift, and go to state 422
    "fixed_array"                     shift, and go to state 423
    "default"                         shift, and go to state 424
    "bool"                            shift, and go to state 222
    "void"                            shift, and go to state 223
    "string"                          shift, and go to state 224
    "int"                             shift, and go to state 226
    "int2"                            shift, and go to state 227
    "int3"                            shift, and go to state 228
    "int4"                            shift, and go to state 229
    "uint"                            shift, and go to state 230
    "bitfield"                        shift, and go to state 425
    "uint2"                           shift, and go to state 232
    "uint3"                           shift, and go to state 233
    "uint4"                           shift, and go to state 234
    "float"                           shift, and go to state 235
    "float2"                          shift, and go to state 236
    "float3"                          shift, and go to state 237
    "float4"                          shift, and go to state 238
    "range"                           shift, and go to state 239
    "urange"                          shift, and go to state 240
    "range64"                         shift, and go to state 241
    "urange64"                        shift, and go to state 242
    "int64"                           shift, and go to state 244
    "uint64"                          shift, and go to state 245
    "double"                          shift, and go to state 246
    "int8"                            shift, and go to state 249
    "uint8"                           shift, and go to state 250
    "int16"                           shift, and go to state 251
    "uint16"                          shift, and go to state 252
    "tuple"                           shift, and go to state 426
    "variant"                         shift, and go to state 427
    "generator"                       shift, and go to state 428
    "++"                              shift, and go to state 429
    "--"                              shift, and go to state 430
    "::"                              shift, and go to state 55
    "$$"                              shift, and go to state 431
    "$i"                              shift, and go to state 432
    "$v"                              shift, and go to state 433
    "$b"                              shift, and go to state 434
    "$a"                              shift, and go to state 435
    "$c"                              shift, and go to state 436
    "..."                             shift, and go to state 437
    "integer constant"                shift, and go to state 438
    "long integer constant"           shift, and go to state 439
    "unsigned integer constant"       shift, and go to state 440
    "unsigned long integer constant"  shift, and go to state 441
    "unsigned int8 constant"          shift, and go to state 442
    "floating point constant"         shift, and go to state 443
    "double constant"                 shift, and go to state 444
    "name"                            shift, and go to state 56
    "start of the string"             shift, and go to state 445
    "begin of code block"             shift, and go to state 446
    '-'                               shift, and go to state 447
    '+'                               shift, and go to state 448
    '*'                               shift, and go to state 449
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 450
    '!'                               shift, and go to state 451
    '['                               shift, and go to state 452
    '('                               shift, and go to state 453
    '$'                               shift, and go to state 454
    '@'                               shift, and go to state 455

    string_builder          go to state 456
    expr_reader             go to state 457
    expr_call_pipe          go to state 458
    name_in_namespace       go to state 459
    expr_new                go to state 460
    expr_cast               go to state 461
    expr_type_decl          go to state 462
    expr_type_info          go to state 463
    block_or_lambda         go to state 464
    expr_full_block         go to state 465
    expr_numeric_const      go to state 466
    expr_named_call         go to state 467
    expr_method_call        go to state 468
    func_addr_expr          go to state 469
    expr_field              go to state 470
    expr_call               go to state 471
    expr                    go to state 1232
    expr_mtag               go to state 473
    basic_type_declaration  go to state 474
    make_decl               go to state 475
    make_struct_decl        go to state 476
    make_tuple_call         go to state 477
    make_dim_decl           go to state 478
    make_table_decl         go to state 479
    array_comprehension     go to state 480


State 1152

  403 expr: expr '.' "?[" expr ']' .

    $default  reduce using rule 403 (expr)


State 1153

  336 expr_method_call: expr . "->" "name" '(' ')'
  337                 | expr . "->" "name" '(' expr_list ')'
  347 expr_field: expr . '.' "name"
  348           | expr . '.' '.' "name"
  349           | expr . '.' "name" '(' ')'
  350           | expr . '.' "name" '(' expr_list ')'
  353           | expr . '.' $@17 error $@18
  373 expr: expr . "<<" expr
  374     | expr . ">>" expr
  375     | expr . "<<<" expr
  376     | expr . ">>>" expr
  377     | expr . '+' expr
  378     | expr . '-' expr
  379     | expr . '*' expr
  380     | expr . '/' expr
  381     | expr . '%' expr
  382     | expr . '<' expr
  383     | expr . '>' expr
  384     | expr . "==" expr
  385     | expr . "!=" expr
  386     | expr . "<=" expr
  387     | expr . ">=" expr
  388     | expr . '&' expr
  389     | expr . '|' expr
  390     | expr . '^' expr
  391     | expr . "&&" expr
  392     | expr . "||" expr
  393     | expr . "^^" expr
  394     | expr . ".." expr
  397     | expr . "++"
  398     | expr . "--"
  400     | expr . '[' expr ']'
  401     | expr . '.' '[' expr ']'
  402     | expr . "?[" expr ']'
  403     | expr . '.' "?[" expr ']'
  404     | expr . "?." "name"
  405     | expr . '.' "?." "name"
  413     | expr . "??" expr
  414     | expr . '?' expr ':' expr
  417     | expr . "is" "type" '<' $@19 type_declaration_no_options '>' $@20
  418     | expr . "is" basic_type_declaration
  419     | expr . "is" "name"
  420     | expr . "as" "name"
  423     | expr . "as" "type" '<' $@21 type_declaration '>' $@22
  424     | expr . "as" basic_type_declaration
  425     | expr . '?' "as" "name"
  428     | expr . '?' "as" "type" '<' $@23 type_declaration '>' $@24
  429     | expr . '?' "as" basic_type_declaration
  437     | expr . "<|" expr
  438     | expr . "|>" expr
  439     | expr . "|>" basic_type_declaration
  449 expr_mtag: expr . '.' "$f" '(' expr ')'
  449          | expr '.' "$f" '(' expr . ')'
  450          | expr . "?." "$f" '(' expr ')'
  451          | expr . '.' '.' "$f" '(' expr ')'
  452          | expr . '.' "?." "$f" '(' expr ')'
  453          | expr . "as" "$f" '(' expr ')'
  454          | expr . '?' "as" "$f" '(' expr ')'
  455          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 643
    "as"   shift, and go to state 644
    "<<"   shift, and go to state 645
    ">>"   shift, and go to state 646
    "++"   shift, and go to state 647
    "--"   shift, and go to state 648
    "<="   shift, and go to state 649
    ">="   shift, and go to state 650
    "=="   shift, and go to state 651
    "!="   shift, and go to state 652
    "->"   shift, and go to state 653
    "??"   shift, and go to state 654
    "?."   shift, and go to state 655
    "?["   shift, and go to state 656
    "<|"   shift, and go to state 657
    "|>"   shift, and go to state 658
    "<<<"  shift, and go to state 659
    ">>>"  shift, and go to state 660
    "&&"   shift, and go to state 661
    "||"   shift, and go to state 662
    "^^"   shift, and go to state 663
    ".."   shift, and go to state 664
    '?'    shift, and go to state 665
    '|'    shift, and go to state 666
    '^'    shift, and go to state 667
    '&'    shift, and go to state 668
    '<'    shift, and go to state 669
    '>'    shift, and go to state 670
    '-'    shift, and go to state 671
    '+'    shift, and go to state 672
    '*'    shift, and go to state 673
    '/'    shift, and go to state 674
    '%'    shift, and go to state 675
    '.'    shift, and go to state 676
    '['    shift, and go to state 677
    ')'    shift, and go to state 1233


State 1154

  349 expr_field: expr '.' "name" '(' ')' .

    $default  reduce using rule 349 (expr_field)


State 1155

  290 expr_list: expr_list . ',' expr
  350 expr_field: expr '.' "name" '(' expr_list . ')'

    ','  shift, and go to state 907
    ')'  shift, and go to state 1234


State 1156

  451 expr_mtag: expr '.' '.' "$f" '(' . expr ')'

    "struct"                          shift, and go to state 408
    "class"                           shift, and go to state 409
    "true"                            shift, and go to state 410
    "false"                           shift, and go to state 411
    "new"                             shift, and go to state 412
    "typeinfo"                        shift, and go to state 413
    "type"                            shift, and go to state 414
    "array"                           shift, and go to state 415
    "null"                            shift, and go to state 416
    "table"                           shift, and go to state 417
    "deref"                           shift, and go to state 418
    "cast"                            shift, and go to state 419
    "upcast"                          shift, and go to state 420
    "addr"                            shift, and go to state 421
    "reinterpret"                     shift, and go to state 422
    "fixed_array"                     shift, and go to state 423
    "default"                         shift, and go to state 424
    "bool"                            shift, and go to state 222
    "void"                            shift, and go to state 223
    "string"                          shift, and go to state 224
    "int"                             shift, and go to state 226
    "int2"                            shift, and go to state 227
    "int3"                            shift, and go to state 228
    "int4"                            shift, and go to state 229
    "uint"                            shift, and go to state 230
    "bitfield"                        shift, and go to state 425
    "uint2"                           shift, and go to state 232
    "uint3"                           shift, and go to state 233
    "uint4"                           shift, and go to state 234
    "float"                           shift, and go to state 235
    "float2"                          shift, and go to state 236
    "float3"                          shift, and go to state 237
    "float4"                          shift, and go to state 238
    "range"                           shift, and go to state 239
    "urange"                          shift, and go to state 240
    "range64"                         shift, and go to state 241
    "urange64"                        shift, and go to state 242
    "int64"                           shift, and go to state 244
    "uint64"                          shift, and go to state 245
    "double"                          shift, and go to state 246
    "int8"                            shift, and go to state 249
    "uint8"                           shift, and go to state 250
    "int16"                           shift, and go to state 251
    "uint16"                          shift, and go to state 252
    "tuple"                           shift, and go to state 426
    "variant"                         shift, and go to state 427
    "generator"                       shift, and go to state 428
    "++"                              shift, and go to state 429
    "--"                              shift, and go to state 430
    "::"                              shift, and go to state 55
    "$$"                              shift, and go to state 431
    "$i"                              shift, and go to state 432
    "$v"                              shift, and go to state 433
    "$b"                              shift, and go to state 434
    "$a"                              shift, and go to state 435
    "$c"                              shift, and go to state 436
    "..."                             shift, and go to state 437
    "integer constant"                shift, and go to state 438
    "long integer constant"           shift, and go to state 439
    "unsigned integer constant"       shift, and go to state 440
    "unsigned long integer constant"  shift, and go to state 441
    "unsigned int8 constant"          shift, and go to state 442
    "floating point constant"         shift, and go to state 443
    "double constant"                 shift, and go to state 444
    "name"                            shift, and go to state 56
    "start of the string"             shift, and go to state 445
    "begin of code block"             shift, and go to state 446
    '-'                               shift, and go to state 447
    '+'                               shift, and go to state 448
    '*'                               shift, and go to state 449
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 450
    '!'                               shift, and go to state 451
    '['                               shift, and go to state 452
    '('                               shift, and go to state 453
    '$'                               shift, and go to state 454
    '@'                               shift, and go to state 455

    string_builder          go to state 456
    expr_reader             go to state 457
    expr_call_pipe          go to state 458
    name_in_namespace       go to state 459
    expr_new                go to state 460
    expr_cast               go to state 461
    expr_type_decl          go to state 462
    expr_type_info          go to state 463
    block_or_lambda         go to state 464
    expr_full_block         go to state 465
    expr_numeric_const      go to state 466
    expr_named_call         go to state 467
    expr_method_call        go to state 468
    func_addr_expr          go to state 469
    expr_field              go to state 470
    expr_call               go to state 471
    expr                    go to state 1235
    expr_mtag               go to state 473
    basic_type_declaration  go to state 474
    make_decl               go to state 475
    make_struct_decl        go to state 476
    make_tuple_call         go to state 477
    make_dim_decl           go to state 478
    make_table_decl         go to state 479
    array_comprehension     go to state 480


State 1157

  401 expr: expr '.' '[' expr ']' .

    $default  reduce using rule 401 (expr)


State 1158

  353 expr_field: expr '.' $@17 error $@18 .

    $default  reduce using rule 353 (expr_field)


State 1159

  662 type_declaration_no_options_no_dim: "block" '<' $@50 optional_function_argument_list optional_function_type '>' $@51 .

    $default  reduce using rule 662 (type_declaration_no_options_no_dim)


State 1160

  669 type_declaration_no_options_no_dim: "function" '<' $@54 optional_function_argument_list optional_function_type '>' $@55 .

    $default  reduce using rule 669 (type_declaration_no_options_no_dim)


State 1161

  676 type_declaration_no_options_no_dim: "lambda" '<' $@58 optional_function_argument_list optional_function_type '>' $@59 .

    $default  reduce using rule 676 (type_declaration_no_options_no_dim)


State 1162

  238 type_declaration_no_options_list: type_declaration_no_options_list "end of expression" type_declaration .
  684 type_declaration: type_declaration . '|' type_declaration_no_options
  685                 | type_declaration . '|' '#'

    '|'  shift, and go to state 372

    $default  reduce using rule 238 (type_declaration_no_options_list)


State 1163

  630 type_declaration_no_options_no_dim: '$' name_in_namespace '<' $@39 type_declaration_no_options_list '>' '(' . optional_expr_list ')'

    "struct"                          shift, and go to state 408
    "class"                           shift, and go to state 409
    "true"                            shift, and go to state 410
    "false"                           shift, and go to state 411
    "new"                             shift, and go to state 412
    "typeinfo"                        shift, and go to state 413
    "type"                            shift, and go to state 414
    "array"                           shift, and go to state 415
    "null"                            shift, and go to state 416
    "table"                           shift, and go to state 417
    "deref"                           shift, and go to state 418
    "cast"                            shift, and go to state 419
    "upcast"                          shift, and go to state 420
    "addr"                            shift, and go to state 421
    "reinterpret"                     shift, and go to state 422
    "fixed_array"                     shift, and go to state 423
    "default"                         shift, and go to state 424
    "bool"                            shift, and go to state 222
    "void"                            shift, and go to state 223
    "string"                          shift, and go to state 224
    "int"                             shift, and go to state 226
    "int2"                            shift, and go to state 227
    "int3"                            shift, and go to state 228
    "int4"                            shift, and go to state 229
    "uint"                            shift, and go to state 230
    "bitfield"                        shift, and go to state 425
    "uint2"                           shift, and go to state 232
    "uint3"                           shift, and go to state 233
    "uint4"                           shift, and go to state 234
    "float"                           shift, and go to state 235
    "float2"                          shift, and go to state 236
    "float3"                          shift, and go to state 237
    "float4"                          shift, and go to state 238
    "range"                           shift, and go to state 239
    "urange"                          shift, and go to state 240
    "range64"                         shift, and go to state 241
    "urange64"                        shift, and go to state 242
    "int64"                           shift, and go to state 244
    "uint64"                          shift, and go to state 245
    "double"                          shift, and go to state 246
    "int8"                            shift, and go to state 249
    "uint8"                           shift, and go to state 250
    "int16"                           shift, and go to state 251
    "uint16"                          shift, and go to state 252
    "tuple"                           shift, and go to state 426
    "variant"                         shift, and go to state 427
    "generator"                       shift, and go to state 428
    "++"                              shift, and go to state 429
    "--"                              shift, and go to state 430
    "::"                              shift, and go to state 55
    "$$"                              shift, and go to state 431
    "$i"                              shift, and go to state 432
    "$v"                              shift, and go to state 433
    "$b"                              shift, and go to state 434
    "$a"                              shift, and go to state 435
    "$c"                              shift, and go to state 436
    "..."                             shift, and go to state 437
    "integer constant"                shift, and go to state 438
    "long integer constant"           shift, and go to state 439
    "unsigned integer constant"       shift, and go to state 440
    "unsigned long integer constant"  shift, and go to state 441
    "unsigned int8 constant"          shift, and go to state 442
    "floating point constant"         shift, and go to state 443
    "double constant"                 shift, and go to state 444
    "name"                            shift, and go to state 56
    "start of the string"             shift, and go to state 445
    "begin of code block"             shift, and go to state 446
    '-'                               shift, and go to state 447
    '+'                               shift, and go to state 448
    '*'                               shift, and go to state 449
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 450
    '!'                               shift, and go to state 451
    '['                               shift, and go to state 452
    '('                               shift, and go to state 453
    '$'                               shift, and go to state 454
    '@'                               shift, and go to state 455

    $default  reduce using rule 235 (optional_expr_list)

    string_builder          go to state 456
    expr_reader             go to state 457
    expr_call_pipe          go to state 458
    optional_expr_list      go to state 1236
    name_in_namespace       go to state 459
    expr_new                go to state 460
    expr_cast               go to state 461
    expr_type_decl          go to state 462
    expr_type_info          go to state 463
    expr_list               go to state 698
    block_or_lambda         go to state 464
    expr_full_block         go to state 465
    expr_numeric_const      go to state 466
    expr_named_call         go to state 467
    expr_method_call        go to state 468
    func_addr_expr          go to state 469
    expr_field              go to state 470
    expr_call               go to state 471
    expr                    go to state 634
    expr_mtag               go to state 473
    basic_type_declaration  go to state 474
    make_decl               go to state 475
    make_struct_decl        go to state 476
    make_tuple_call         go to state 477
    make_dim_decl           go to state 478
    make_table_decl         go to state 479
    array_comprehension     go to state 480


State 1164

  561 variable_name_with_pos_list: "$i" '(' expr ')' .

    $default  reduce using rule 561 (variable_name_with_pos_list)


State 1165

  564 variable_name_with_pos_list: variable_name_with_pos_list ',' "name" "aka" . "name"

    "name"  shift, and go to state 1237


State 1166

  499 variable_declaration: variable_name_with_pos_list ':' type_declaration copy_or_move . expr

    "struct"                          shift, and go to state 408
    "class"                           shift, and go to state 409
    "true"                            shift, and go to state 410
    "false"                           shift, and go to state 411
    "new"                             shift, and go to state 412
    "typeinfo"                        shift, and go to state 413
    "type"                            shift, and go to state 414
    "array"                           shift, and go to state 415
    "null"                            shift, and go to state 416
    "table"                           shift, and go to state 417
    "deref"                           shift, and go to state 418
    "cast"                            shift, and go to state 419
    "upcast"                          shift, and go to state 420
    "addr"                            shift, and go to state 421
    "reinterpret"                     shift, and go to state 422
    "fixed_array"                     shift, and go to state 423
    "default"                         shift, and go to state 424
    "bool"                            shift, and go to state 222
    "void"                            shift, and go to state 223
    "string"                          shift, and go to state 224
    "int"                             shift, and go to state 226
    "int2"                            shift, and go to state 227
    "int3"                            shift, and go to state 228
    "int4"                            shift, and go to state 229
    "uint"                            shift, and go to state 230
    "bitfield"                        shift, and go to state 425
    "uint2"                           shift, and go to state 232
    "uint3"                           shift, and go to state 233
    "uint4"                           shift, and go to state 234
    "float"                           shift, and go to state 235
    "float2"                          shift, and go to state 236
    "float3"                          shift, and go to state 237
    "float4"                          shift, and go to state 238
    "range"                           shift, and go to state 239
    "urange"                          shift, and go to state 240
    "range64"                         shift, and go to state 241
    "urange64"                        shift, and go to state 242
    "int64"                           shift, and go to state 244
    "uint64"                          shift, and go to state 245
    "double"                          shift, and go to state 246
    "int8"                            shift, and go to state 249
    "uint8"                           shift, and go to state 250
    "int16"                           shift, and go to state 251
    "uint16"                          shift, and go to state 252
    "tuple"                           shift, and go to state 426
    "variant"                         shift, and go to state 427
    "generator"                       shift, and go to state 428
    "++"                              shift, and go to state 429
    "--"                              shift, and go to state 430
    "::"                              shift, and go to state 55
    "$$"                              shift, and go to state 431
    "$i"                              shift, and go to state 432
    "$v"                              shift, and go to state 433
    "$b"                              shift, and go to state 434
    "$a"                              shift, and go to state 435
    "$c"                              shift, and go to state 436
    "..."                             shift, and go to state 437
    "integer constant"                shift, and go to state 438
    "long integer constant"           shift, and go to state 439
    "unsigned integer constant"       shift, and go to state 440
    "unsigned long integer constant"  shift, and go to state 441
    "unsigned int8 constant"          shift, and go to state 442
    "floating point constant"         shift, and go to state 443
    "double constant"                 shift, and go to state 444
    "name"                            shift, and go to state 56
    "start of the string"             shift, and go to state 445
    "begin of code block"             shift, and go to state 446
    '-'                               shift, and go to state 447
    '+'                               shift, and go to state 448
    '*'                               shift, and go to state 449
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 450
    '!'                               shift, and go to state 451
    '['                               shift, and go to state 452
    '('                               shift, and go to state 453
    '$'                               shift, and go to state 454
    '@'                               shift, and go to state 455

    string_builder          go to state 456
    expr_reader             go to state 457
    expr_call_pipe          go to state 458
    name_in_namespace       go to state 459
    expr_new                go to state 460
    expr_cast               go to state 461
    expr_type_decl          go to state 462
    expr_type_info          go to state 463
    block_or_lambda         go to state 464
    expr_full_block         go to state 465
    expr_numeric_const      go to state 466
    expr_named_call         go to state 467
    expr_method_call        go to state 468
    func_addr_expr          go to state 469
    expr_field              go to state 470
    expr_call               go to state 471
    expr                    go to state 1238
    expr_mtag               go to state 473
    basic_type_declaration  go to state 474
    make_decl               go to state 475
    make_struct_decl        go to state 476
    make_tuple_call         go to state 477
    make_dim_decl           go to state 478
    make_table_decl         go to state 479
    array_comprehension     go to state 480


State 1167

   70 expression_for_loop: "for" '(' variable_name_with_pos_list "in" expr_list . ')' expression_block
  290 expr_list: expr_list . ',' expr

    ','  shift, and go to state 907
    ')'  shift, and go to state 1239


State 1168

  212 expression_block: "begin of code block" expressions "end of code block" "finally" "begin of code block" expressions "end of code block" .

    $default  reduce using rule 212 (expression_block)


State 1169

   68 expression_if_then_else: if_or_static_if '(' expr ')' expression_block . expression_else

    "else"         shift, and go to state 1240
    "elif"         shift, and go to state 1241
    "static_elif"  shift, and go to state 1242

    $default  reduce using rule 56 (expression_else)

    elif_or_static_elif  go to state 1243
    expression_else      go to state 1244


State 1170

   69 expression_if_then_else: expression_if_one_liner "if" '(' expr ')' . expression_else_one_liner "end of expression"

    "else"  shift, and go to state 1245

    $default  reduce using rule 61 (expression_else_one_liner)

    expression_else_one_liner  go to state 1246


State 1171

  269 tuple_expansion: tuple_expansion ',' . "name"

    "name"  shift, and go to state 1247


State 1172

  270 tuple_expansion_variable_declaration: '(' tuple_expansion ')' . ':' type_declaration_no_options copy_or_move_or_clone expr "end of expression"
  271                                     | '(' tuple_expansion ')' . optional_ref copy_or_move_or_clone expr "end of expression"

    ':'  shift, and go to state 1248
    '&'  shift, and go to state 403

    $default  reduce using rule 504 (optional_ref)

    optional_ref  go to state 1249


State 1173

  474 struct_variable_declaration_list: struct_variable_declaration_list optional_annotation_list "def" optional_public_or_private_member_variable "abstract" . optional_constant $@26 function_declaration_header "end of expression"

    "const"  shift, and go to state 1250

    $default  reduce using rule 462 (optional_constant)

    optional_constant  go to state 1251


State 1174

  476 struct_variable_declaration_list: struct_variable_declaration_list optional_annotation_list "def" optional_public_or_private_member_variable optional_static_member_variable . optional_override optional_constant $@27 function_declaration_header expression_block

    "override"  shift, and go to state 1175
    "sealed"    shift, and go to state 1176

    $default  reduce using rule 459 (optional_override)

    optional_override  go to state 1252


State 1175

  460 optional_override: "override" .

    $default  reduce using rule 460 (optional_override)


State 1176

  461 optional_override: "sealed" .

    $default  reduce using rule 461 (optional_override)


State 1177

  469 structure_variable_declaration: optional_field_annotation optional_static_member_variable optional_override . optional_public_or_private_member_variable variable_declaration

    "public"   shift, and go to state 1082
    "private"  shift, and go to state 1083

    $default  reduce using rule 464 (optional_public_or_private_member_variable)

    optional_public_or_private_member_variable  go to state 1253


State 1178

  718 make_struct_decl: "struct" '<' $@73 type_declaration_no_options '>' $@74 . '(' use_initializer make_struct_dim ')'

    '('  shift, and go to state 1254


State 1179

  721 make_struct_decl: "class" '<' $@75 type_declaration_no_options '>' $@76 . '(' use_initializer make_struct_dim ')'

    '('  shift, and go to state 1255


State 1180

  246 new_type_declaration: '<' $@3 type_declaration '>' $@4 .

    $default  reduce using rule 246 (new_type_declaration)


State 1181

  250 expr_new: "new" new_type_declaration '(' use_initializer make_struct_single ')' .

    $default  reduce using rule 250 (expr_new)


State 1182

  288 expr_type_info: "typeinfo" '(' name_in_namespace '<' "name" "end of expression" . "name" '>' expr ')'

    "name"  shift, and go to state 1256


State 1183

  287 expr_type_info: "typeinfo" '(' name_in_namespace '<' "name" '>' . expr ')'

    "struct"                          shift, and go to state 408
    "class"                           shift, and go to state 409
    "true"                            shift, and go to state 410
    "false"                           shift, and go to state 411
    "new"                             shift, and go to state 412
    "typeinfo"                        shift, and go to state 413
    "type"                            shift, and go to state 414
    "array"                           shift, and go to state 415
    "null"                            shift, and go to state 416
    "table"                           shift, and go to state 417
    "deref"                           shift, and go to state 418
    "cast"                            shift, and go to state 419
    "upcast"                          shift, and go to state 420
    "addr"                            shift, and go to state 421
    "reinterpret"                     shift, and go to state 422
    "fixed_array"                     shift, and go to state 423
    "default"                         shift, and go to state 424
    "bool"                            shift, and go to state 222
    "void"                            shift, and go to state 223
    "string"                          shift, and go to state 224
    "int"                             shift, and go to state 226
    "int2"                            shift, and go to state 227
    "int3"                            shift, and go to state 228
    "int4"                            shift, and go to state 229
    "uint"                            shift, and go to state 230
    "bitfield"                        shift, and go to state 425
    "uint2"                           shift, and go to state 232
    "uint3"                           shift, and go to state 233
    "uint4"                           shift, and go to state 234
    "float"                           shift, and go to state 235
    "float2"                          shift, and go to state 236
    "float3"                          shift, and go to state 237
    "float4"                          shift, and go to state 238
    "range"                           shift, and go to state 239
    "urange"                          shift, and go to state 240
    "range64"                         shift, and go to state 241
    "urange64"                        shift, and go to state 242
    "int64"                           shift, and go to state 244
    "uint64"                          shift, and go to state 245
    "double"                          shift, and go to state 246
    "int8"                            shift, and go to state 249
    "uint8"                           shift, and go to state 250
    "int16"                           shift, and go to state 251
    "uint16"                          shift, and go to state 252
    "tuple"                           shift, and go to state 426
    "variant"                         shift, and go to state 427
    "generator"                       shift, and go to state 428
    "++"                              shift, and go to state 429
    "--"                              shift, and go to state 430
    "::"                              shift, and go to state 55
    "$$"                              shift, and go to state 431
    "$i"                              shift, and go to state 432
    "$v"                              shift, and go to state 433
    "$b"                              shift, and go to state 434
    "$a"                              shift, and go to state 435
    "$c"                              shift, and go to state 436
    "..."                             shift, and go to state 437
    "integer constant"                shift, and go to state 438
    "long integer constant"           shift, and go to state 439
    "unsigned integer constant"       shift, and go to state 440
    "unsigned long integer constant"  shift, and go to state 441
    "unsigned int8 constant"          shift, and go to state 442
    "floating point constant"         shift, and go to state 443
    "double constant"                 shift, and go to state 444
    "name"                            shift, and go to state 56
    "start of the string"             shift, and go to state 445
    "begin of code block"             shift, and go to state 446
    '-'                               shift, and go to state 447
    '+'                               shift, and go to state 448
    '*'                               shift, and go to state 449
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 450
    '!'                               shift, and go to state 451
    '['                               shift, and go to state 452
    '('                               shift, and go to state 453
    '$'                               shift, and go to state 454
    '@'                               shift, and go to state 455

    string_builder          go to state 456
    expr_reader             go to state 457
    expr_call_pipe          go to state 458
    name_in_namespace       go to state 459
    expr_new                go to state 460
    expr_cast               go to state 461
    expr_type_decl          go to state 462
    expr_type_info          go to state 463
    block_or_lambda         go to state 464
    expr_full_block         go to state 465
    expr_numeric_const      go to state 466
    expr_named_call         go to state 467
    expr_method_call        go to state 468
    func_addr_expr          go to state 469
    expr_field              go to state 470
    expr_call               go to state 471
    expr                    go to state 1257
    expr_mtag               go to state 473
    basic_type_declaration  go to state 474
    make_decl               go to state 475
    make_struct_decl        go to state 476
    make_tuple_call         go to state 477
    make_dim_decl           go to state 478
    make_table_decl         go to state 479
    array_comprehension     go to state 480


State 1184

  285 expr_type_decl: "type" '<' $@11 type_declaration '>' $@12 .

    $default  reduce using rule 285 (expr_type_decl)


State 1185

  737 make_dim_decl: "array" "struct" '<' $@83 type_declaration_no_options '>' . $@84 '(' use_initializer make_struct_dim ')'

    $default  reduce using rule 736 ($@84)

    $@84  go to state 1258


State 1186

  740 make_dim_decl: "array" "tuple" '<' $@85 type_declaration_no_options '>' . $@86 '(' use_initializer make_struct_dim ')'

    $default  reduce using rule 739 ($@86)

    $@86  go to state 1259


State 1187

  743 make_dim_decl: "array" "variant" '<' $@87 type_declaration_no_options '>' . $@88 '(' make_struct_dim ')'

    $default  reduce using rule 742 ($@88)

    $@88  go to state 1260


State 1188

  747 make_dim_decl: "array" '<' $@89 type_declaration_no_options '>' $@90 . '(' expr_list optional_comma ')'

    '('  shift, and go to state 1261


State 1189

  757 make_table_decl: "table" '<' type_declaration_no_options "end of expression" type_declaration_no_options '>' . '(' expr_map_tuple_list optional_comma ')'

    '('  shift, and go to state 1262


State 1190

  753 expr_map_tuple_list: expr_map_tuple_list . ',' make_map_tuple
  756 make_table_decl: "table" '<' type_declaration_no_options '>' '(' expr_map_tuple_list . optional_comma ')'

    ','  shift, and go to state 816

    $default  reduce using rule 760 (optional_comma)

    optional_comma  go to state 1263


State 1191

  276 expr_cast: "cast" '<' $@5 type_declaration_no_options '>' $@6 . expr

    "struct"                          shift, and go to state 408
    "class"                           shift, and go to state 409
    "true"                            shift, and go to state 410
    "false"                           shift, and go to state 411
    "new"                             shift, and go to state 412
    "typeinfo"                        shift, and go to state 413
    "type"                            shift, and go to state 414
    "array"                           shift, and go to state 415
    "null"                            shift, and go to state 416
    "table"                           shift, and go to state 417
    "deref"                           shift, and go to state 418
    "cast"                            shift, and go to state 419
    "upcast"                          shift, and go to state 420
    "addr"                            shift, and go to state 421
    "reinterpret"                     shift, and go to state 422
    "fixed_array"                     shift, and go to state 423
    "default"                         shift, and go to state 424
    "bool"                            shift, and go to state 222
    "void"                            shift, and go to state 223
    "string"                          shift, and go to state 224
    "int"                             shift, and go to state 226
    "int2"                            shift, and go to state 227
    "int3"                            shift, and go to state 228
    "int4"                            shift, and go to state 229
    "uint"                            shift, and go to state 230
    "bitfield"                        shift, and go to state 425
    "uint2"                           shift, and go to state 232
    "uint3"                           shift, and go to state 233
    "uint4"                           shift, and go to state 234
    "float"                           shift, and go to state 235
    "float2"                          shift, and go to state 236
    "float3"                          shift, and go to state 237
    "float4"                          shift, and go to state 238
    "range"                           shift, and go to state 239
    "urange"                          shift, and go to state 240
    "range64"                         shift, and go to state 241
    "urange64"                        shift, and go to state 242
    "int64"                           shift, and go to state 244
    "uint64"                          shift, and go to state 245
    "double"                          shift, and go to state 246
    "int8"                            shift, and go to state 249
    "uint8"                           shift, and go to state 250
    "int16"                           shift, and go to state 251
    "uint16"                          shift, and go to state 252
    "tuple"                           shift, and go to state 426
    "variant"                         shift, and go to state 427
    "generator"                       shift, and go to state 428
    "++"                              shift, and go to state 429
    "--"                              shift, and go to state 430
    "::"                              shift, and go to state 55
    "$$"                              shift, and go to state 431
    "$i"                              shift, and go to state 432
    "$v"                              shift, and go to state 433
    "$b"                              shift, and go to state 434
    "$a"                              shift, and go to state 435
    "$c"                              shift, and go to state 436
    "..."                             shift, and go to state 437
    "integer constant"                shift, and go to state 438
    "long integer constant"           shift, and go to state 439
    "unsigned integer constant"       shift, and go to state 440
    "unsigned long integer constant"  shift, and go to state 441
    "unsigned int8 constant"          shift, and go to state 442
    "floating point constant"         shift, and go to state 443
    "double constant"                 shift, and go to state 444
    "name"                            shift, and go to state 56
    "start of the string"             shift, and go to state 445
    "begin of code block"             shift, and go to state 446
    '-'                               shift, and go to state 447
    '+'                               shift, and go to state 448
    '*'                               shift, and go to state 449
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 450
    '!'                               shift, and go to state 451
    '['                               shift, and go to state 452
    '('                               shift, and go to state 453
    '$'                               shift, and go to state 454
    '@'                               shift, and go to state 455

    string_builder          go to state 456
    expr_reader             go to state 457
    expr_call_pipe          go to state 458
    name_in_namespace       go to state 459
    expr_new                go to state 460
    expr_cast               go to state 461
    expr_type_decl          go to state 462
    expr_type_info          go to state 463
    block_or_lambda         go to state 464
    expr_full_block         go to state 465
    expr_numeric_const      go to state 466
    expr_named_call         go to state 467
    expr_method_call        go to state 468
    func_addr_expr          go to state 469
    expr_field              go to state 470
    expr_call               go to state 471
    expr                    go to state 1264
    expr_mtag               go to state 473
    basic_type_declaration  go to state 474
    make_decl               go to state 475
    make_struct_decl        go to state 476
    make_tuple_call         go to state 477
    make_dim_decl           go to state 478
    make_table_decl         go to state 479
    array_comprehension     go to state 480


State 1192

  279 expr_cast: "upcast" '<' $@7 type_declaration_no_options '>' $@8 . expr

    "struct"                          shift, and go to state 408
    "class"                           shift, and go to state 409
    "true"                            shift, and go to state 410
    "false"                           shift, and go to state 411
    "new"                             shift, and go to state 412
    "typeinfo"                        shift, and go to state 413
    "type"                            shift, and go to state 414
    "array"                           shift, and go to state 415
    "null"                            shift, and go to state 416
    "table"                           shift, and go to state 417
    "deref"                           shift, and go to state 418
    "cast"                            shift, and go to state 419
    "upcast"                          shift, and go to state 420
    "addr"                            shift, and go to state 421
    "reinterpret"                     shift, and go to state 422
    "fixed_array"                     shift, and go to state 423
    "default"                         shift, and go to state 424
    "bool"                            shift, and go to state 222
    "void"                            shift, and go to state 223
    "string"                          shift, and go to state 224
    "int"                             shift, and go to state 226
    "int2"                            shift, and go to state 227
    "int3"                            shift, and go to state 228
    "int4"                            shift, and go to state 229
    "uint"                            shift, and go to state 230
    "bitfield"                        shift, and go to state 425
    "uint2"                           shift, and go to state 232
    "uint3"                           shift, and go to state 233
    "uint4"                           shift, and go to state 234
    "float"                           shift, and go to state 235
    "float2"                          shift, and go to state 236
    "float3"                          shift, and go to state 237
    "float4"                          shift, and go to state 238
    "range"                           shift, and go to state 239
    "urange"                          shift, and go to state 240
    "range64"                         shift, and go to state 241
    "urange64"                        shift, and go to state 242
    "int64"                           shift, and go to state 244
    "uint64"                          shift, and go to state 245
    "double"                          shift, and go to state 246
    "int8"                            shift, and go to state 249
    "uint8"                           shift, and go to state 250
    "int16"                           shift, and go to state 251
    "uint16"                          shift, and go to state 252
    "tuple"                           shift, and go to state 426
    "variant"                         shift, and go to state 427
    "generator"                       shift, and go to state 428
    "++"                              shift, and go to state 429
    "--"                              shift, and go to state 430
    "::"                              shift, and go to state 55
    "$$"                              shift, and go to state 431
    "$i"                              shift, and go to state 432
    "$v"                              shift, and go to state 433
    "$b"                              shift, and go to state 434
    "$a"                              shift, and go to state 435
    "$c"                              shift, and go to state 436
    "..."                             shift, and go to state 437
    "integer constant"                shift, and go to state 438
    "long integer constant"           shift, and go to state 439
    "unsigned integer constant"       shift, and go to state 440
    "unsigned long integer constant"  shift, and go to state 441
    "unsigned int8 constant"          shift, and go to state 442
    "floating point constant"         shift, and go to state 443
    "double constant"                 shift, and go to state 444
    "name"                            shift, and go to state 56
    "start of the string"             shift, and go to state 445
    "begin of code block"             shift, and go to state 446
    '-'                               shift, and go to state 447
    '+'                               shift, and go to state 448
    '*'                               shift, and go to state 449
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 450
    '!'                               shift, and go to state 451
    '['                               shift, and go to state 452
    '('                               shift, and go to state 453
    '$'                               shift, and go to state 454
    '@'                               shift, and go to state 455

    string_builder          go to state 456
    expr_reader             go to state 457
    expr_call_pipe          go to state 458
    name_in_namespace       go to state 459
    expr_new                go to state 460
    expr_cast               go to state 461
    expr_type_decl          go to state 462
    expr_type_info          go to state 463
    block_or_lambda         go to state 464
    expr_full_block         go to state 465
    expr_numeric_const      go to state 466
    expr_named_call         go to state 467
    expr_method_call        go to state 468
    func_addr_expr          go to state 469
    expr_field              go to state 470
    expr_call               go to state 471
    expr                    go to state 1265
    expr_mtag               go to state 473
    basic_type_declaration  go to state 474
    make_decl               go to state 475
    make_struct_decl        go to state 476
    make_tuple_call         go to state 477
    make_dim_decl           go to state 478
    make_table_decl         go to state 479
    array_comprehension     go to state 480


State 1193

  282 expr_cast: "reinterpret" '<' $@9 type_declaration_no_options '>' $@10 . expr

    "struct"                          shift, and go to state 408
    "class"                           shift, and go to state 409
    "true"                            shift, and go to state 410
    "false"                           shift, and go to state 411
    "new"                             shift, and go to state 412
    "typeinfo"                        shift, and go to state 413
    "type"                            shift, and go to state 414
    "array"                           shift, and go to state 415
    "null"                            shift, and go to state 416
    "table"                           shift, and go to state 417
    "deref"                           shift, and go to state 418
    "cast"                            shift, and go to state 419
    "upcast"                          shift, and go to state 420
    "addr"                            shift, and go to state 421
    "reinterpret"                     shift, and go to state 422
    "fixed_array"                     shift, and go to state 423
    "default"                         shift, and go to state 424
    "bool"                            shift, and go to state 222
    "void"                            shift, and go to state 223
    "string"                          shift, and go to state 224
    "int"                             shift, and go to state 226
    "int2"                            shift, and go to state 227
    "int3"                            shift, and go to state 228
    "int4"                            shift, and go to state 229
    "uint"                            shift, and go to state 230
    "bitfield"                        shift, and go to state 425
    "uint2"                           shift, and go to state 232
    "uint3"                           shift, and go to state 233
    "uint4"                           shift, and go to state 234
    "float"                           shift, and go to state 235
    "float2"                          shift, and go to state 236
    "float3"                          shift, and go to state 237
    "float4"                          shift, and go to state 238
    "range"                           shift, and go to state 239
    "urange"                          shift, and go to state 240
    "range64"                         shift, and go to state 241
    "urange64"                        shift, and go to state 242
    "int64"                           shift, and go to state 244
    "uint64"                          shift, and go to state 245
    "double"                          shift, and go to state 246
    "int8"                            shift, and go to state 249
    "uint8"                           shift, and go to state 250
    "int16"                           shift, and go to state 251
    "uint16"                          shift, and go to state 252
    "tuple"                           shift, and go to state 426
    "variant"                         shift, and go to state 427
    "generator"                       shift, and go to state 428
    "++"                              shift, and go to state 429
    "--"                              shift, and go to state 430
    "::"                              shift, and go to state 55
    "$$"                              shift, and go to state 431
    "$i"                              shift, and go to state 432
    "$v"                              shift, and go to state 433
    "$b"                              shift, and go to state 434
    "$a"                              shift, and go to state 435
    "$c"                              shift, and go to state 436
    "..."                             shift, and go to state 437
    "integer constant"                shift, and go to state 438
    "long integer constant"           shift, and go to state 439
    "unsigned integer constant"       shift, and go to state 440
    "unsigned long integer constant"  shift, and go to state 441
    "unsigned int8 constant"          shift, and go to state 442
    "floating point constant"         shift, and go to state 443
    "double constant"                 shift, and go to state 444
    "name"                            shift, and go to state 56
    "start of the string"             shift, and go to state 445
    "begin of code block"             shift, and go to state 446
    '-'                               shift, and go to state 447
    '+'                               shift, and go to state 448
    '*'                               shift, and go to state 449
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 450
    '!'                               shift, and go to state 451
    '['                               shift, and go to state 452
    '('                               shift, and go to state 453
    '$'                               shift, and go to state 454
    '@'                               shift, and go to state 455

    string_builder          go to state 456
    expr_reader             go to state 457
    expr_call_pipe          go to state 458
    name_in_namespace       go to state 459
    expr_new                go to state 460
    expr_cast               go to state 461
    expr_type_decl          go to state 462
    expr_type_info          go to state 463
    block_or_lambda         go to state 464
    expr_full_block         go to state 465
    expr_numeric_const      go to state 466
    expr_named_call         go to state 467
    expr_method_call        go to state 468
    func_addr_expr          go to state 469
    expr_field              go to state 470
    expr_call               go to state 471
    expr                    go to state 1266
    expr_mtag               go to state 473
    basic_type_declaration  go to state 474
    make_decl               go to state 475
    make_struct_decl        go to state 476
    make_tuple_call         go to state 477
    make_dim_decl           go to state 478
    make_table_decl         go to state 479
    array_comprehension     go to state 480


State 1194

  751 make_dim_decl: "fixed_array" '<' $@91 type_declaration_no_options '>' $@92 . '(' expr_list optional_comma ')'

    '('  shift, and go to state 1267


State 1195

  727 make_struct_decl: "default" '<' $@79 type_declaration_no_options '>' $@80 . use_initializer

    "uninitialized"  shift, and go to state 971

    $default  reduce using rule 714 (use_initializer)

    use_initializer  go to state 1268


State 1196

  733 make_tuple_call: "tuple" '<' $@81 type_declaration_no_options '>' $@82 . '(' use_initializer make_struct_dim ')'

    '('  shift, and go to state 1269


State 1197

  724 make_struct_decl: "variant" '<' $@77 type_declaration_no_options '>' $@78 . '(' make_struct_dim ')'

    '('  shift, and go to state 1270


State 1198

  411 expr: "generator" '<' type_declaration_no_options '>' optional_capture_list '(' . ')'
  412     | "generator" '<' type_declaration_no_options '>' optional_capture_list '(' . expr ')'

    "struct"                          shift, and go to state 408
    "class"                           shift, and go to state 409
    "true"                            shift, and go to state 410
    "false"                           shift, and go to state 411
    "new"                             shift, and go to state 412
    "typeinfo"                        shift, and go to state 413
    "type"                            shift, and go to state 414
    "array"                           shift, and go to state 415
    "null"                            shift, and go to state 416
    "table"                           shift, and go to state 417
    "deref"                           shift, and go to state 418
    "cast"                            shift, and go to state 419
    "upcast"                          shift, and go to state 420
    "addr"                            shift, and go to state 421
    "reinterpret"                     shift, and go to state 422
    "fixed_array"                     shift, and go to state 423
    "default"                         shift, and go to state 424
    "bool"                            shift, and go to state 222
    "void"                            shift, and go to state 223
    "string"                          shift, and go to state 224
    "int"                             shift, and go to state 226
    "int2"                            shift, and go to state 227
    "int3"                            shift, and go to state 228
    "int4"                            shift, and go to state 229
    "uint"                            shift, and go to state 230
    "bitfield"                        shift, and go to state 425
    "uint2"                           shift, and go to state 232
    "uint3"                           shift, and go to state 233
    "uint4"                           shift, and go to state 234
    "float"                           shift, and go to state 235
    "float2"                          shift, and go to state 236
    "float3"                          shift, and go to state 237
    "float4"                          shift, and go to state 238
    "range"                           shift, and go to state 239
    "urange"                          shift, and go to state 240
    "range64"                         shift, and go to state 241
    "urange64"                        shift, and go to state 242
    "int64"                           shift, and go to state 244
    "uint64"                          shift, and go to state 245
    "double"                          shift, and go to state 246
    "int8"                            shift, and go to state 249
    "uint8"                           shift, and go to state 250
    "int16"                           shift, and go to state 251
    "uint16"                          shift, and go to state 252
    "tuple"                           shift, and go to state 426
    "variant"                         shift, and go to state 427
    "generator"                       shift, and go to state 428
    "++"                              shift, and go to state 429
    "--"                              shift, and go to state 430
    "::"                              shift, and go to state 55
    "$$"                              shift, and go to state 431
    "$i"                              shift, and go to state 432
    "$v"                              shift, and go to state 433
    "$b"                              shift, and go to state 434
    "$a"                              shift, and go to state 435
    "$c"                              shift, and go to state 436
    "..."                             shift, and go to state 437
    "integer constant"                shift, and go to state 438
    "long integer constant"           shift, and go to state 439
    "unsigned integer constant"       shift, and go to state 440
    "unsigned long integer constant"  shift, and go to state 441
    "unsigned int8 constant"          shift, and go to state 442
    "floating point constant"         shift, and go to state 443
    "double constant"                 shift, and go to state 444
    "name"                            shift, and go to state 56
    "start of the string"             shift, and go to state 445
    "begin of code block"             shift, and go to state 446
    '-'                               shift, and go to state 447
    '+'                               shift, and go to state 448
    '*'                               shift, and go to state 449
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 450
    '!'                               shift, and go to state 451
    '['                               shift, and go to state 452
    '('                               shift, and go to state 453
    ')'                               shift, and go to state 1271
    '$'                               shift, and go to state 454
    '@'                               shift, and go to state 455

    string_builder          go to state 456
    expr_reader             go to state 457
    expr_call_pipe          go to state 458
    name_in_namespace       go to state 459
    expr_new                go to state 460
    expr_cast               go to state 461
    expr_type_decl          go to state 462
    expr_type_info          go to state 463
    block_or_lambda         go to state 464
    expr_full_block         go to state 465
    expr_numeric_const      go to state 466
    expr_named_call         go to state 467
    expr_method_call        go to state 468
    func_addr_expr          go to state 469
    expr_field              go to state 470
    expr_call               go to state 471
    expr                    go to state 1272
    expr_mtag               go to state 473
    basic_type_declaration  go to state 474
    make_decl               go to state 475
    make_struct_decl        go to state 476
    make_tuple_call         go to state 477
    make_dim_decl           go to state 478
    make_table_decl         go to state 479
    array_comprehension     go to state 480


State 1199

  447 expr_mtag: "$c" '(' expr ')' '(' ')' .

    $default  reduce using rule 447 (expr_mtag)


State 1200

  290 expr_list: expr_list . ',' expr
  448 expr_mtag: "$c" '(' expr ')' '(' expr_list . ')'

    ','  shift, and go to state 907
    ')'  shift, and go to state 1273


State 1201

  764 array_comprehension: "begin of code block" "for" variable_name_with_pos_list "in" expr_list "end of expression" . make_map_tuple array_comprehension_where "end of code block"

    "struct"                          shift, and go to state 408
    "class"                           shift, and go to state 409
    "true"                            shift, and go to state 410
    "false"                           shift, and go to state 411
    "new"                             shift, and go to state 412
    "typeinfo"                        shift, and go to state 413
    "type"                            shift, and go to state 414
    "array"                           shift, and go to state 415
    "null"                            shift, and go to state 416
    "table"                           shift, and go to state 417
    "deref"                           shift, and go to state 418
    "cast"                            shift, and go to state 419
    "upcast"                          shift, and go to state 420
    "addr"                            shift, and go to state 421
    "reinterpret"                     shift, and go to state 422
    "fixed_array"                     shift, and go to state 423
    "default"                         shift, and go to state 424
    "bool"                            shift, and go to state 222
    "void"                            shift, and go to state 223
    "string"                          shift, and go to state 224
    "int"                             shift, and go to state 226
    "int2"                            shift, and go to state 227
    "int3"                            shift, and go to state 228
    "int4"                            shift, and go to state 229
    "uint"                            shift, and go to state 230
    "bitfield"                        shift, and go to state 425
    "uint2"                           shift, and go to state 232
    "uint3"                           shift, and go to state 233
    "uint4"                           shift, and go to state 234
    "float"                           shift, and go to state 235
    "float2"                          shift, and go to state 236
    "float3"                          shift, and go to state 237
    "float4"                          shift, and go to state 238
    "range"                           shift, and go to state 239
    "urange"                          shift, and go to state 240
    "range64"                         shift, and go to state 241
    "urange64"                        shift, and go to state 242
    "int64"                           shift, and go to state 244
    "uint64"                          shift, and go to state 245
    "double"                          shift, and go to state 246
    "int8"                            shift, and go to state 249
    "uint8"                           shift, and go to state 250
    "int16"                           shift, and go to state 251
    "uint16"                          shift, and go to state 252
    "tuple"                           shift, and go to state 426
    "variant"                         shift, and go to state 427
    "generator"                       shift, and go to state 428
    "++"                              shift, and go to state 429
    "--"                              shift, and go to state 430
    "::"                              shift, and go to state 55
    "$$"                              shift, and go to state 431
    "$i"                              shift, and go to state 432
    "$v"                              shift, and go to state 433
    "$b"                              shift, and go to state 434
    "$a"                              shift, and go to state 435
    "$c"                              shift, and go to state 436
    "..."                             shift, and go to state 437
    "integer constant"                shift, and go to state 438
    "long integer constant"           shift, and go to state 439
    "unsigned integer constant"       shift, and go to state 440
    "unsigned long integer constant"  shift, and go to state 441
    "unsigned int8 constant"          shift, and go to state 442
    "floating point constant"         shift, and go to state 443
    "double constant"                 shift, and go to state 444
    "name"                            shift, and go to state 56
    "start of the string"             shift, and go to state 445
    "begin of code block"             shift, and go to state 446
    '-'                               shift, and go to state 447
    '+'                               shift, and go to state 448
    '*'                               shift, and go to state 449
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 450
    '!'                               shift, and go to state 451
    '['                               shift, and go to state 452
    '('                               shift, and go to state 453
    '$'                               shift, and go to state 454
    '@'                               shift, and go to state 455

    string_builder          go to state 456
    expr_reader             go to state 457
    expr_call_pipe          go to state 458
    name_in_namespace       go to state 459
    expr_new                go to state 460
    expr_cast               go to state 461
    expr_type_decl          go to state 462
    expr_type_info          go to state 463
    block_or_lambda         go to state 464
    expr_full_block         go to state 465
    expr_numeric_const      go to state 466
    expr_named_call         go to state 467
    expr_method_call        go to state 468
    func_addr_expr          go to state 469
    expr_field              go to state 470
    expr_call               go to state 471
    expr                    go to state 623
    expr_mtag               go to state 473
    basic_type_declaration  go to state 474
    make_decl               go to state 475
    make_struct_decl        go to state 476
    make_map_tuple          go to state 1274
    make_tuple_call         go to state 477
    make_dim_decl           go to state 478
    make_table_decl         go to state 479
    array_comprehension     go to state 480


State 1202

  762 array_comprehension: '[' "for" variable_name_with_pos_list "in" expr_list "end of expression" . expr array_comprehension_where ']'

    "struct"                          shift, and go to state 408
    "class"                           shift, and go to state 409
    "true"                            shift, and go to state 410
    "false"                           shift, and go to state 411
    "new"                             shift, and go to state 412
    "typeinfo"                        shift, and go to state 413
    "type"                            shift, and go to state 414
    "array"                           shift, and go to state 415
    "null"                            shift, and go to state 416
    "table"                           shift, and go to state 417
    "deref"                           shift, and go to state 418
    "cast"                            shift, and go to state 419
    "upcast"                          shift, and go to state 420
    "addr"                            shift, and go to state 421
    "reinterpret"                     shift, and go to state 422
    "fixed_array"                     shift, and go to state 423
    "default"                         shift, and go to state 424
    "bool"                            shift, and go to state 222
    "void"                            shift, and go to state 223
    "string"                          shift, and go to state 224
    "int"                             shift, and go to state 226
    "int2"                            shift, and go to state 227
    "int3"                            shift, and go to state 228
    "int4"                            shift, and go to state 229
    "uint"                            shift, and go to state 230
    "bitfield"                        shift, and go to state 425
    "uint2"                           shift, and go to state 232
    "uint3"                           shift, and go to state 233
    "uint4"                           shift, and go to state 234
    "float"                           shift, and go to state 235
    "float2"                          shift, and go to state 236
    "float3"                          shift, and go to state 237
    "float4"                          shift, and go to state 238
    "range"                           shift, and go to state 239
    "urange"                          shift, and go to state 240
    "range64"                         shift, and go to state 241
    "urange64"                        shift, and go to state 242
    "int64"                           shift, and go to state 244
    "uint64"                          shift, and go to state 245
    "double"                          shift, and go to state 246
    "int8"                            shift, and go to state 249
    "uint8"                           shift, and go to state 250
    "int16"                           shift, and go to state 251
    "uint16"                          shift, and go to state 252
    "tuple"                           shift, and go to state 426
    "variant"                         shift, and go to state 427
    "generator"                       shift, and go to state 428
    "++"                              shift, and go to state 429
    "--"                              shift, and go to state 430
    "::"                              shift, and go to state 55
    "$$"                              shift, and go to state 431
    "$i"                              shift, and go to state 432
    "$v"                              shift, and go to state 433
    "$b"                              shift, and go to state 434
    "$a"                              shift, and go to state 435
    "$c"                              shift, and go to state 436
    "..."                             shift, and go to state 437
    "integer constant"                shift, and go to state 438
    "long integer constant"           shift, and go to state 439
    "unsigned integer constant"       shift, and go to state 440
    "unsigned long integer constant"  shift, and go to state 441
    "unsigned int8 constant"          shift, and go to state 442
    "floating point constant"         shift, and go to state 443
    "double constant"                 shift, and go to state 444
    "name"                            shift, and go to state 56
    "start of the string"             shift, and go to state 445
    "begin of code block"             shift, and go to state 446
    '-'                               shift, and go to state 447
    '+'                               shift, and go to state 448
    '*'                               shift, and go to state 449
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 450
    '!'                               shift, and go to state 451
    '['                               shift, and go to state 452
    '('                               shift, and go to state 453
    '$'                               shift, and go to state 454
    '@'                               shift, and go to state 455

    string_builder          go to state 456
    expr_reader             go to state 457
    expr_call_pipe          go to state 458
    name_in_namespace       go to state 459
    expr_new                go to state 460
    expr_cast               go to state 461
    expr_type_decl          go to state 462
    expr_type_info          go to state 463
    block_or_lambda         go to state 464
    expr_full_block         go to state 465
    expr_numeric_const      go to state 466
    expr_named_call         go to state 467
    expr_method_call        go to state 468
    func_addr_expr          go to state 469
    expr_field              go to state 470
    expr_call               go to state 471
    expr                    go to state 1275
    expr_mtag               go to state 473
    basic_type_declaration  go to state 474
    make_decl               go to state 475
    make_struct_decl        go to state 476
    make_tuple_call         go to state 477
    make_dim_decl           go to state 478
    make_table_decl         go to state 479
    array_comprehension     go to state 480


State 1203

  290 expr_list: expr_list . ',' expr
  763 array_comprehension: '[' "iterator" "for" variable_name_with_pos_list "in" expr_list . "end of expression" expr array_comprehension_where ']'

    "end of expression"  shift, and go to state 1276
    ','                  shift, and go to state 907


State 1204

  339 func_addr_name: "$i" '(' expr ')' .

    $default  reduce using rule 339 (func_addr_name)


State 1205

  456 expr_mtag: '@' '@' "$c" '(' expr ')' .

    $default  reduce using rule 456 (expr_mtag)


State 1206

  343 func_addr_expr: '@' '@' '<' $@13 type_declaration_no_options '>' . $@14 func_addr_name

    $default  reduce using rule 342 ($@14)

    $@14  go to state 1277


State 1207

  346 func_addr_expr: '@' '@' '<' $@15 optional_function_argument_list optional_function_type . '>' $@16 func_addr_name

    '>'  shift, and go to state 1278


State 1208

  707 make_struct_fields: "$f" '(' expr ')' . copy_or_move expr
  708                   | "$f" '(' expr ')' . ":=" expr

    "<-"  shift, and go to state 915
    ":="  shift, and go to state 1279
    '='   shift, and go to state 917

    copy_or_move  go to state 1280


State 1209

  334 expr_named_call: name_in_namespace '(' '[' make_struct_fields ']' ')' .

    $default  reduce using rule 334 (expr_named_call)


State 1210

  335 expr_named_call: name_in_namespace '(' expr_list ',' '[' make_struct_fields . ']' ')'
  705 make_struct_fields: make_struct_fields . ',' "name" copy_or_move expr
  706                   | make_struct_fields . ',' "name" ":=" expr
  709                   | make_struct_fields . ',' "$f" '(' expr ')' copy_or_move expr
  710                   | make_struct_fields . ',' "$f" '(' expr ')' ":=" expr

    ','  shift, and go to state 1023
    ']'  shift, and go to state 1281


State 1211

  709 make_struct_fields: make_struct_fields ',' "$f" '(' . expr ')' copy_or_move expr
  710                   | make_struct_fields ',' "$f" '(' . expr ')' ":=" expr

    "struct"                          shift, and go to state 408
    "class"                           shift, and go to state 409
    "true"                            shift, and go to state 410
    "false"                           shift, and go to state 411
    "new"                             shift, and go to state 412
    "typeinfo"                        shift, and go to state 413
    "type"                            shift, and go to state 414
    "array"                           shift, and go to state 415
    "null"                            shift, and go to state 416
    "table"                           shift, and go to state 417
    "deref"                           shift, and go to state 418
    "cast"                            shift, and go to state 419
    "upcast"                          shift, and go to state 420
    "addr"                            shift, and go to state 421
    "reinterpret"                     shift, and go to state 422
    "fixed_array"                     shift, and go to state 423
    "default"                         shift, and go to state 424
    "bool"                            shift, and go to state 222
    "void"                            shift, and go to state 223
    "string"                          shift, and go to state 224
    "int"                             shift, and go to state 226
    "int2"                            shift, and go to state 227
    "int3"                            shift, and go to state 228
    "int4"                            shift, and go to state 229
    "uint"                            shift, and go to state 230
    "bitfield"                        shift, and go to state 425
    "uint2"                           shift, and go to state 232
    "uint3"                           shift, and go to state 233
    "uint4"                           shift, and go to state 234
    "float"                           shift, and go to state 235
    "float2"                          shift, and go to state 236
    "float3"                          shift, and go to state 237
    "float4"                          shift, and go to state 238
    "range"                           shift, and go to state 239
    "urange"                          shift, and go to state 240
    "range64"                         shift, and go to state 241
    "urange64"                        shift, and go to state 242
    "int64"                           shift, and go to state 244
    "uint64"                          shift, and go to state 245
    "double"                          shift, and go to state 246
    "int8"                            shift, and go to state 249
    "uint8"                           shift, and go to state 250
    "int16"                           shift, and go to state 251
    "uint16"                          shift, and go to state 252
    "tuple"                           shift, and go to state 426
    "variant"                         shift, and go to state 427
    "generator"                       shift, and go to state 428
    "++"                              shift, and go to state 429
    "--"                              shift, and go to state 430
    "::"                              shift, and go to state 55
    "$$"                              shift, and go to state 431
    "$i"                              shift, and go to state 432
    "$v"                              shift, and go to state 433
    "$b"                              shift, and go to state 434
    "$a"                              shift, and go to state 435
    "$c"                              shift, and go to state 436
    "..."                             shift, and go to state 437
    "integer constant"                shift, and go to state 438
    "long integer constant"           shift, and go to state 439
    "unsigned integer constant"       shift, and go to state 440
    "unsigned long integer constant"  shift, and go to state 441
    "unsigned int8 constant"          shift, and go to state 442
    "floating point constant"         shift, and go to state 443
    "double constant"                 shift, and go to state 444
    "name"                            shift, and go to state 56
    "start of the string"             shift, and go to state 445
    "begin of code block"             shift, and go to state 446
    '-'                               shift, and go to state 447
    '+'                               shift, and go to state 448
    '*'                               shift, and go to state 449
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 450
    '!'                               shift, and go to state 451
    '['                               shift, and go to state 452
    '('                               shift, and go to state 453
    '$'                               shift, and go to state 454
    '@'                               shift, and go to state 455

    string_builder          go to state 456
    expr_reader             go to state 457
    expr_call_pipe          go to state 458
    name_in_namespace       go to state 459
    expr_new                go to state 460
    expr_cast               go to state 461
    expr_type_decl          go to state 462
    expr_type_info          go to state 463
    block_or_lambda         go to state 464
    expr_full_block         go to state 465
    expr_numeric_const      go to state 466
    expr_named_call         go to state 467
    expr_method_call        go to state 468
    func_addr_expr          go to state 469
    expr_field              go to state 470
    expr_call               go to state 471
    expr                    go to state 1282
    expr_mtag               go to state 473
    basic_type_declaration  go to state 474
    make_decl               go to state 475
    make_struct_decl        go to state 476
    make_tuple_call         go to state 477
    make_dim_decl           go to state 478
    make_table_decl         go to state 479
    array_comprehension     go to state 480


State 1212

  706 make_struct_fields: make_struct_fields ',' "name" ":=" . expr

    "struct"                          shift, and go to state 408
    "class"                           shift, and go to state 409
    "true"                            shift, and go to state 410
    "false"                           shift, and go to state 411
    "new"                             shift, and go to state 412
    "typeinfo"                        shift, and go to state 413
    "type"                            shift, and go to state 414
    "array"                           shift, and go to state 415
    "null"                            shift, and go to state 416
    "table"                           shift, and go to state 417
    "deref"                           shift, and go to state 418
    "cast"                            shift, and go to state 419
    "upcast"                          shift, and go to state 420
    "addr"                            shift, and go to state 421
    "reinterpret"                     shift, and go to state 422
    "fixed_array"                     shift, and go to state 423
    "default"                         shift, and go to state 424
    "bool"                            shift, and go to state 222
    "void"                            shift, and go to state 223
    "string"                          shift, and go to state 224
    "int"                             shift, and go to state 226
    "int2"                            shift, and go to state 227
    "int3"                            shift, and go to state 228
    "int4"                            shift, and go to state 229
    "uint"                            shift, and go to state 230
    "bitfield"                        shift, and go to state 425
    "uint2"                           shift, and go to state 232
    "uint3"                           shift, and go to state 233
    "uint4"                           shift, and go to state 234
    "float"                           shift, and go to state 235
    "float2"                          shift, and go to state 236
    "float3"                          shift, and go to state 237
    "float4"                          shift, and go to state 238
    "range"                           shift, and go to state 239
    "urange"                          shift, and go to state 240
    "range64"                         shift, and go to state 241
    "urange64"                        shift, and go to state 242
    "int64"                           shift, and go to state 244
    "uint64"                          shift, and go to state 245
    "double"                          shift, and go to state 246
    "int8"                            shift, and go to state 249
    "uint8"                           shift, and go to state 250
    "int16"                           shift, and go to state 251
    "uint16"                          shift, and go to state 252
    "tuple"                           shift, and go to state 426
    "variant"                         shift, and go to state 427
    "generator"                       shift, and go to state 428
    "++"                              shift, and go to state 429
    "--"                              shift, and go to state 430
    "::"                              shift, and go to state 55
    "$$"                              shift, and go to state 431
    "$i"                              shift, and go to state 432
    "$v"                              shift, and go to state 433
    "$b"                              shift, and go to state 434
    "$a"                              shift, and go to state 435
    "$c"                              shift, and go to state 436
    "..."                             shift, and go to state 437
    "integer constant"                shift, and go to state 438
    "long integer constant"           shift, and go to state 439
    "unsigned integer constant"       shift, and go to state 440
    "unsigned long integer constant"  shift, and go to state 441
    "unsigned int8 constant"          shift, and go to state 442
    "floating point constant"         shift, and go to state 443
    "double constant"                 shift, and go to state 444
    "name"                            shift, and go to state 56
    "start of the string"             shift, and go to state 445
    "begin of code block"             shift, and go to state 446
    '-'                               shift, and go to state 447
    '+'                               shift, and go to state 448
    '*'                               shift, and go to state 449
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 450
    '!'                               shift, and go to state 451
    '['                               shift, and go to state 452
    '('                               shift, and go to state 453
    '$'                               shift, and go to state 454
    '@'                               shift, and go to state 455

    string_builder          go to state 456
    expr_reader             go to state 457
    expr_call_pipe          go to state 458
    name_in_namespace       go to state 459
    expr_new                go to state 460
    expr_cast               go to state 461
    expr_type_decl          go to state 462
    expr_type_info          go to state 463
    block_or_lambda         go to state 464
    expr_full_block         go to state 465
    expr_numeric_const      go to state 466
    expr_named_call         go to state 467
    expr_method_call        go to state 468
    func_addr_expr          go to state 469
    expr_field              go to state 470
    expr_call               go to state 471
    expr                    go to state 1283
    expr_mtag               go to state 473
    basic_type_declaration  go to state 474
    make_decl               go to state 475
    make_struct_decl        go to state 476
    make_tuple_call         go to state 477
    make_dim_decl           go to state 478
    make_table_decl         go to state 479
    array_comprehension     go to state 480


State 1213

  705 make_struct_fields: make_struct_fields ',' "name" copy_or_move . expr

    "struct"                          shift, and go to state 408
    "class"                           shift, and go to state 409
    "true"                            shift, and go to state 410
    "false"                           shift, and go to state 411
    "new"                             shift, and go to state 412
    "typeinfo"                        shift, and go to state 413
    "type"                            shift, and go to state 414
    "array"                           shift, and go to state 415
    "null"                            shift, and go to state 416
    "table"                           shift, and go to state 417
    "deref"                           shift, and go to state 418
    "cast"                            shift, and go to state 419
    "upcast"                          shift, and go to state 420
    "addr"                            shift, and go to state 421
    "reinterpret"                     shift, and go to state 422
    "fixed_array"                     shift, and go to state 423
    "default"                         shift, and go to state 424
    "bool"                            shift, and go to state 222
    "void"                            shift, and go to state 223
    "string"                          shift, and go to state 224
    "int"                             shift, and go to state 226
    "int2"                            shift, and go to state 227
    "int3"                            shift, and go to state 228
    "int4"                            shift, and go to state 229
    "uint"                            shift, and go to state 230
    "bitfield"                        shift, and go to state 425
    "uint2"                           shift, and go to state 232
    "uint3"                           shift, and go to state 233
    "uint4"                           shift, and go to state 234
    "float"                           shift, and go to state 235
    "float2"                          shift, and go to state 236
    "float3"                          shift, and go to state 237
    "float4"                          shift, and go to state 238
    "range"                           shift, and go to state 239
    "urange"                          shift, and go to state 240
    "range64"                         shift, and go to state 241
    "urange64"                        shift, and go to state 242
    "int64"                           shift, and go to state 244
    "uint64"                          shift, and go to state 245
    "double"                          shift, and go to state 246
    "int8"                            shift, and go to state 249
    "uint8"                           shift, and go to state 250
    "int16"                           shift, and go to state 251
    "uint16"                          shift, and go to state 252
    "tuple"                           shift, and go to state 426
    "variant"                         shift, and go to state 427
    "generator"                       shift, and go to state 428
    "++"                              shift, and go to state 429
    "--"                              shift, and go to state 430
    "::"                              shift, and go to state 55
    "$$"                              shift, and go to state 431
    "$i"                              shift, and go to state 432
    "$v"                              shift, and go to state 433
    "$b"                              shift, and go to state 434
    "$a"                              shift, and go to state 435
    "$c"                              shift, and go to state 436
    "..."                             shift, and go to state 437
    "integer constant"                shift, and go to state 438
    "long integer constant"           shift, and go to state 439
    "unsigned integer constant"       shift, and go to state 440
    "unsigned long integer constant"  shift, and go to state 441
    "unsigned int8 constant"          shift, and go to state 442
    "floating point constant"         shift, and go to state 443
    "double constant"                 shift, and go to state 444
    "name"                            shift, and go to state 56
    "start of the string"             shift, and go to state 445
    "begin of code block"             shift, and go to state 446
    '-'                               shift, and go to state 447
    '+'                               shift, and go to state 448
    '*'                               shift, and go to state 449
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 450
    '!'                               shift, and go to state 451
    '['                               shift, and go to state 452
    '('                               shift, and go to state 453
    '$'                               shift, and go to state 454
    '@'                               shift, and go to state 455

    string_builder          go to state 456
    expr_reader             go to state 457
    expr_call_pipe          go to state 458
    name_in_namespace       go to state 459
    expr_new                go to state 460
    expr_cast               go to state 461
    expr_type_decl          go to state 462
    expr_type_info          go to state 463
    block_or_lambda         go to state 464
    expr_full_block         go to state 465
    expr_numeric_const      go to state 466
    expr_named_call         go to state 467
    expr_method_call        go to state 468
    func_addr_expr          go to state 469
    expr_field              go to state 470
    expr_call               go to state 471
    expr                    go to state 1284
    expr_mtag               go to state 473
    basic_type_declaration  go to state 474
    make_decl               go to state 475
    make_struct_decl        go to state 476
    make_tuple_call         go to state 477
    make_dim_decl           go to state 478
    make_table_decl         go to state 479
    array_comprehension     go to state 480


State 1214

  299 capture_entry: "<-" "name" .

    $default  reduce using rule 299 (capture_entry)


State 1215

  300 capture_entry: ":=" "name" .

    $default  reduce using rule 300 (capture_entry)


State 1216

  298 capture_entry: '=' "name" .

    $default  reduce using rule 298 (capture_entry)


State 1217

  297 capture_entry: '&' "name" .

    $default  reduce using rule 297 (capture_entry)


State 1218

  302 capture_list: capture_list ',' . capture_entry

    "<-"  shift, and go to state 1133
    ":="  shift, and go to state 1134
    '='   shift, and go to state 1135
    '&'   shift, and go to state 1136

    capture_entry  go to state 1285


State 1219

  304 optional_capture_list: '[' '[' capture_list ']' . ']'

    ']'  shift, and go to state 1286


State 1220

  292 block_or_simple_block: "=>" . expr
  293                      | "=>" . "<-" expr

    "struct"                          shift, and go to state 408
    "class"                           shift, and go to state 409
    "true"                            shift, and go to state 410
    "false"                           shift, and go to state 411
    "new"                             shift, and go to state 412
    "typeinfo"                        shift, and go to state 413
    "type"                            shift, and go to state 414
    "array"                           shift, and go to state 415
    "null"                            shift, and go to state 416
    "table"                           shift, and go to state 417
    "deref"                           shift, and go to state 418
    "cast"                            shift, and go to state 419
    "upcast"                          shift, and go to state 420
    "addr"                            shift, and go to state 421
    "reinterpret"                     shift, and go to state 422
    "fixed_array"                     shift, and go to state 423
    "default"                         shift, and go to state 424
    "bool"                            shift, and go to state 222
    "void"                            shift, and go to state 223
    "string"                          shift, and go to state 224
    "int"                             shift, and go to state 226
    "int2"                            shift, and go to state 227
    "int3"                            shift, and go to state 228
    "int4"                            shift, and go to state 229
    "uint"                            shift, and go to state 230
    "bitfield"                        shift, and go to state 425
    "uint2"                           shift, and go to state 232
    "uint3"                           shift, and go to state 233
    "uint4"                           shift, and go to state 234
    "float"                           shift, and go to state 235
    "float2"                          shift, and go to state 236
    "float3"                          shift, and go to state 237
    "float4"                          shift, and go to state 238
    "range"                           shift, and go to state 239
    "urange"                          shift, and go to state 240
    "range64"                         shift, and go to state 241
    "urange64"                        shift, and go to state 242
    "int64"                           shift, and go to state 244
    "uint64"                          shift, and go to state 245
    "double"                          shift, and go to state 246
    "int8"                            shift, and go to state 249
    "uint8"                           shift, and go to state 250
    "int16"                           shift, and go to state 251
    "uint16"                          shift, and go to state 252
    "tuple"                           shift, and go to state 426
    "variant"                         shift, and go to state 427
    "generator"                       shift, and go to state 428
    "++"                              shift, and go to state 429
    "--"                              shift, and go to state 430
    "<-"                              shift, and go to state 1287
    "::"                              shift, and go to state 55
    "$$"                              shift, and go to state 431
    "$i"                              shift, and go to state 432
    "$v"                              shift, and go to state 433
    "$b"                              shift, and go to state 434
    "$a"                              shift, and go to state 435
    "$c"                              shift, and go to state 436
    "..."                             shift, and go to state 437
    "integer constant"                shift, and go to state 438
    "long integer constant"           shift, and go to state 439
    "unsigned integer constant"       shift, and go to state 440
    "unsigned long integer constant"  shift, and go to state 441
    "unsigned int8 constant"          shift, and go to state 442
    "floating point constant"         shift, and go to state 443
    "double constant"                 shift, and go to state 444
    "name"                            shift, and go to state 56
    "start of the string"             shift, and go to state 445
    "begin of code block"             shift, and go to state 446
    '-'                               shift, and go to state 447
    '+'                               shift, and go to state 448
    '*'                               shift, and go to state 449
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 450
    '!'                               shift, and go to state 451
    '['                               shift, and go to state 452
    '('                               shift, and go to state 453
    '$'                               shift, and go to state 454
    '@'                               shift, and go to state 455

    string_builder          go to state 456
    expr_reader             go to state 457
    expr_call_pipe          go to state 458
    name_in_namespace       go to state 459
    expr_new                go to state 460
    expr_cast               go to state 461
    expr_type_decl          go to state 462
    expr_type_info          go to state 463
    block_or_lambda         go to state 464
    expr_full_block         go to state 465
    expr_numeric_const      go to state 466
    expr_named_call         go to state 467
    expr_method_call        go to state 468
    func_addr_expr          go to state 469
    expr_field              go to state 470
    expr_call               go to state 471
    expr                    go to state 1288
    expr_mtag               go to state 473
    basic_type_declaration  go to state 474
    make_decl               go to state 475
    make_struct_decl        go to state 476
    make_tuple_call         go to state 477
    make_dim_decl           go to state 478
    make_table_decl         go to state 479
    array_comprehension     go to state 480


State 1221

  291 block_or_simple_block: expression_block .

    $default  reduce using rule 291 (block_or_simple_block)


State 1222

  305 expr_full_block: block_or_lambda optional_annotation_list optional_capture_list optional_function_argument_list optional_function_type block_or_simple_block .

    $default  reduce using rule 305 (expr_full_block)


State 1223

  306 expr_full_block_assumed_piped: block_or_lambda optional_annotation_list optional_capture_list optional_function_argument_list optional_function_type . expression_block

    "begin of code block"  shift, and go to state 323

    expression_block  go to state 1289


State 1224

  417 expr: expr "is" "type" '<' $@19 type_declaration_no_options . '>' $@20

    '>'  shift, and go to state 1290


State 1225

  455 expr_mtag: expr "is" "$f" '(' expr ')' .

    $default  reduce using rule 455 (expr_mtag)


State 1226

  423 expr: expr "as" "type" '<' $@21 type_declaration . '>' $@22
  684 type_declaration: type_declaration . '|' type_declaration_no_options
  685                 | type_declaration . '|' '#'

    '|'  shift, and go to state 372
    '>'  shift, and go to state 1291


State 1227

  453 expr_mtag: expr "as" "$f" '(' expr ')' .

    $default  reduce using rule 453 (expr_mtag)


State 1228

  337 expr_method_call: expr "->" "name" '(' expr_list ')' .

    $default  reduce using rule 337 (expr_method_call)


State 1229

  450 expr_mtag: expr "?." "$f" '(' expr ')' .

    $default  reduce using rule 450 (expr_mtag)


State 1230

  428 expr: expr '?' "as" "type" '<' $@23 . type_declaration '>' $@24

    "type"       shift, and go to state 216
    "array"      shift, and go to state 217
    "table"      shift, and go to state 218
    "typedecl"   shift, and go to state 219
    "iterator"   shift, and go to state 220
    "smart_ptr"  shift, and go to state 221
    "bool"       shift, and go to state 222
    "void"       shift, and go to state 223
    "string"     shift, and go to state 224
    "auto"       shift, and go to state 225
    "int"        shift, and go to state 226
    "int2"       shift, and go to state 227
    "int3"       shift, and go to state 228
    "int4"       shift, and go to state 229
    "uint"       shift, and go to state 230
    "bitfield"   shift, and go to state 231
    "uint2"      shift, and go to state 232
    "uint3"      shift, and go to state 233
    "uint4"      shift, and go to state 234
    "float"      shift, and go to state 235
    "float2"     shift, and go to state 236
    "float3"     shift, and go to state 237
    "float4"     shift, and go to state 238
    "range"      shift, and go to state 239
    "urange"     shift, and go to state 240
    "range64"    shift, and go to state 241
    "urange64"   shift, and go to state 242
    "block"      shift, and go to state 243
    "int64"      shift, and go to state 244
    "uint64"     shift, and go to state 245
    "double"     shift, and go to state 246
    "function"   shift, and go to state 247
    "lambda"     shift, and go to state 248
    "int8"       shift, and go to state 249
    "uint8"      shift, and go to state 250
    "int16"      shift, and go to state 251
    "uint16"     shift, and go to state 252
    "tuple"      shift, and go to state 253
    "variant"    shift, and go to state 254
    "::"         shift, and go to state 55
    "$t"         shift, and go to state 255
    "name"       shift, and go to state 56
    '$'          shift, and go to state 256

    name_in_namespace                   go to state 257
    basic_type_declaration              go to state 258
    structure_type_declaration          go to state 259
    auto_type_declaration               go to state 260
    bitfield_type_declaration           go to state 261
    type_declaration_no_options         go to state 262
    type_declaration_no_options_no_dim  go to state 263
    type_declaration                    go to state 1292


State 1231

  336 expr_method_call: expr . "->" "name" '(' ')'
  337                 | expr . "->" "name" '(' expr_list ')'
  347 expr_field: expr . '.' "name"
  348           | expr . '.' '.' "name"
  349           | expr . '.' "name" '(' ')'
  350           | expr . '.' "name" '(' expr_list ')'
  353           | expr . '.' $@17 error $@18
  373 expr: expr . "<<" expr
  374     | expr . ">>" expr
  375     | expr . "<<<" expr
  376     | expr . ">>>" expr
  377     | expr . '+' expr
  378     | expr . '-' expr
  379     | expr . '*' expr
  380     | expr . '/' expr
  381     | expr . '%' expr
  382     | expr . '<' expr
  383     | expr . '>' expr
  384     | expr . "==" expr
  385     | expr . "!=" expr
  386     | expr . "<=" expr
  387     | expr . ">=" expr
  388     | expr . '&' expr
  389     | expr . '|' expr
  390     | expr . '^' expr
  391     | expr . "&&" expr
  392     | expr . "||" expr
  393     | expr . "^^" expr
  394     | expr . ".." expr
  397     | expr . "++"
  398     | expr . "--"
  400     | expr . '[' expr ']'
  401     | expr . '.' '[' expr ']'
  402     | expr . "?[" expr ']'
  403     | expr . '.' "?[" expr ']'
  404     | expr . "?." "name"
  405     | expr . '.' "?." "name"
  413     | expr . "??" expr
  414     | expr . '?' expr ':' expr
  417     | expr . "is" "type" '<' $@19 type_declaration_no_options '>' $@20
  418     | expr . "is" basic_type_declaration
  419     | expr . "is" "name"
  420     | expr . "as" "name"
  423     | expr . "as" "type" '<' $@21 type_declaration '>' $@22
  424     | expr . "as" basic_type_declaration
  425     | expr . '?' "as" "name"
  428     | expr . '?' "as" "type" '<' $@23 type_declaration '>' $@24
  429     | expr . '?' "as" basic_type_declaration
  437     | expr . "<|" expr
  438     | expr . "|>" expr
  439     | expr . "|>" basic_type_declaration
  449 expr_mtag: expr . '.' "$f" '(' expr ')'
  450          | expr . "?." "$f" '(' expr ')'
  451          | expr . '.' '.' "$f" '(' expr ')'
  452          | expr . '.' "?." "$f" '(' expr ')'
  453          | expr . "as" "$f" '(' expr ')'
  454          | expr . '?' "as" "$f" '(' expr ')'
  454          | expr '?' "as" "$f" '(' expr . ')'
  455          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 643
    "as"   shift, and go to state 644
    "<<"   shift, and go to state 645
    ">>"   shift, and go to state 646
    "++"   shift, and go to state 647
    "--"   shift, and go to state 648
    "<="   shift, and go to state 649
    ">="   shift, and go to state 650
    "=="   shift, and go to state 651
    "!="   shift, and go to state 652
    "->"   shift, and go to state 653
    "??"   shift, and go to state 654
    "?."   shift, and go to state 655
    "?["   shift, and go to state 656
    "<|"   shift, and go to state 657
    "|>"   shift, and go to state 658
    "<<<"  shift, and go to state 659
    ">>>"  shift, and go to state 660
    "&&"   shift, and go to state 661
    "||"   shift, and go to state 662
    "^^"   shift, and go to state 663
    ".."   shift, and go to state 664
    '?'    shift, and go to state 665
    '|'    shift, and go to state 666
    '^'    shift, and go to state 667
    '&'    shift, and go to state 668
    '<'    shift, and go to state 669
    '>'    shift, and go to state 670
    '-'    shift, and go to state 671
    '+'    shift, and go to state 672
    '*'    shift, and go to state 673
    '/'    shift, and go to state 674
    '%'    shift, and go to state 675
    '.'    shift, and go to state 676
    '['    shift, and go to state 677
    ')'    shift, and go to state 1293


State 1232

  336 expr_method_call: expr . "->" "name" '(' ')'
  337                 | expr . "->" "name" '(' expr_list ')'
  347 expr_field: expr . '.' "name"
  348           | expr . '.' '.' "name"
  349           | expr . '.' "name" '(' ')'
  350           | expr . '.' "name" '(' expr_list ')'
  353           | expr . '.' $@17 error $@18
  373 expr: expr . "<<" expr
  374     | expr . ">>" expr
  375     | expr . "<<<" expr
  376     | expr . ">>>" expr
  377     | expr . '+' expr
  378     | expr . '-' expr
  379     | expr . '*' expr
  380     | expr . '/' expr
  381     | expr . '%' expr
  382     | expr . '<' expr
  383     | expr . '>' expr
  384     | expr . "==" expr
  385     | expr . "!=" expr
  386     | expr . "<=" expr
  387     | expr . ">=" expr
  388     | expr . '&' expr
  389     | expr . '|' expr
  390     | expr . '^' expr
  391     | expr . "&&" expr
  392     | expr . "||" expr
  393     | expr . "^^" expr
  394     | expr . ".." expr
  397     | expr . "++"
  398     | expr . "--"
  400     | expr . '[' expr ']'
  401     | expr . '.' '[' expr ']'
  402     | expr . "?[" expr ']'
  403     | expr . '.' "?[" expr ']'
  404     | expr . "?." "name"
  405     | expr . '.' "?." "name"
  413     | expr . "??" expr
  414     | expr . '?' expr ':' expr
  417     | expr . "is" "type" '<' $@19 type_declaration_no_options '>' $@20
  418     | expr . "is" basic_type_declaration
  419     | expr . "is" "name"
  420     | expr . "as" "name"
  423     | expr . "as" "type" '<' $@21 type_declaration '>' $@22
  424     | expr . "as" basic_type_declaration
  425     | expr . '?' "as" "name"
  428     | expr . '?' "as" "type" '<' $@23 type_declaration '>' $@24
  429     | expr . '?' "as" basic_type_declaration
  437     | expr . "<|" expr
  438     | expr . "|>" expr
  439     | expr . "|>" basic_type_declaration
  449 expr_mtag: expr . '.' "$f" '(' expr ')'
  450          | expr . "?." "$f" '(' expr ')'
  451          | expr . '.' '.' "$f" '(' expr ')'
  452          | expr . '.' "?." "$f" '(' expr ')'
  452          | expr '.' "?." "$f" '(' expr . ')'
  453          | expr . "as" "$f" '(' expr ')'
  454          | expr . '?' "as" "$f" '(' expr ')'
  455          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 643
    "as"   shift, and go to state 644
    "<<"   shift, and go to state 645
    ">>"   shift, and go to state 646
    "++"   shift, and go to state 647
    "--"   shift, and go to state 648
    "<="   shift, and go to state 649
    ">="   shift, and go to state 650
    "=="   shift, and go to state 651
    "!="   shift, and go to state 652
    "->"   shift, and go to state 653
    "??"   shift, and go to state 654
    "?."   shift, and go to state 655
    "?["   shift, and go to state 656
    "<|"   shift, and go to state 657
    "|>"   shift, and go to state 658
    "<<<"  shift, and go to state 659
    ">>>"  shift, and go to state 660
    "&&"   shift, and go to state 661
    "||"   shift, and go to state 662
    "^^"   shift, and go to state 663
    ".."   shift, and go to state 664
    '?'    shift, and go to state 665
    '|'    shift, and go to state 666
    '^'    shift, and go to state 667
    '&'    shift, and go to state 668
    '<'    shift, and go to state 669
    '>'    shift, and go to state 670
    '-'    shift, and go to state 671
    '+'    shift, and go to state 672
    '*'    shift, and go to state 673
    '/'    shift, and go to state 674
    '%'    shift, and go to state 675
    '.'    shift, and go to state 676
    '['    shift, and go to state 677
    ')'    shift, and go to state 1294


State 1233

  449 expr_mtag: expr '.' "$f" '(' expr ')' .

    $default  reduce using rule 449 (expr_mtag)


State 1234

  350 expr_field: expr '.' "name" '(' expr_list ')' .

    $default  reduce using rule 350 (expr_field)


State 1235

  336 expr_method_call: expr . "->" "name" '(' ')'
  337                 | expr . "->" "name" '(' expr_list ')'
  347 expr_field: expr . '.' "name"
  348           | expr . '.' '.' "name"
  349           | expr . '.' "name" '(' ')'
  350           | expr . '.' "name" '(' expr_list ')'
  353           | expr . '.' $@17 error $@18
  373 expr: expr . "<<" expr
  374     | expr . ">>" expr
  375     | expr . "<<<" expr
  376     | expr . ">>>" expr
  377     | expr . '+' expr
  378     | expr . '-' expr
  379     | expr . '*' expr
  380     | expr . '/' expr
  381     | expr . '%' expr
  382     | expr . '<' expr
  383     | expr . '>' expr
  384     | expr . "==" expr
  385     | expr . "!=" expr
  386     | expr . "<=" expr
  387     | expr . ">=" expr
  388     | expr . '&' expr
  389     | expr . '|' expr
  390     | expr . '^' expr
  391     | expr . "&&" expr
  392     | expr . "||" expr
  393     | expr . "^^" expr
  394     | expr . ".." expr
  397     | expr . "++"
  398     | expr . "--"
  400     | expr . '[' expr ']'
  401     | expr . '.' '[' expr ']'
  402     | expr . "?[" expr ']'
  403     | expr . '.' "?[" expr ']'
  404     | expr . "?." "name"
  405     | expr . '.' "?." "name"
  413     | expr . "??" expr
  414     | expr . '?' expr ':' expr
  417     | expr . "is" "type" '<' $@19 type_declaration_no_options '>' $@20
  418     | expr . "is" basic_type_declaration
  419     | expr . "is" "name"
  420     | expr . "as" "name"
  423     | expr . "as" "type" '<' $@21 type_declaration '>' $@22
  424     | expr . "as" basic_type_declaration
  425     | expr . '?' "as" "name"
  428     | expr . '?' "as" "type" '<' $@23 type_declaration '>' $@24
  429     | expr . '?' "as" basic_type_declaration
  437     | expr . "<|" expr
  438     | expr . "|>" expr
  439     | expr . "|>" basic_type_declaration
  449 expr_mtag: expr . '.' "$f" '(' expr ')'
  450          | expr . "?." "$f" '(' expr ')'
  451          | expr . '.' '.' "$f" '(' expr ')'
  451          | expr '.' '.' "$f" '(' expr . ')'
  452          | expr . '.' "?." "$f" '(' expr ')'
  453          | expr . "as" "$f" '(' expr ')'
  454          | expr . '?' "as" "$f" '(' expr ')'
  455          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 643
    "as"   shift, and go to state 644
    "<<"   shift, and go to state 645
    ">>"   shift, and go to state 646
    "++"   shift, and go to state 647
    "--"   shift, and go to state 648
    "<="   shift, and go to state 649
    ">="   shift, and go to state 650
    "=="   shift, and go to state 651
    "!="   shift, and go to state 652
    "->"   shift, and go to state 653
    "??"   shift, and go to state 654
    "?."   shift, and go to state 655
    "?["   shift, and go to state 656
    "<|"   shift, and go to state 657
    "|>"   shift, and go to state 658
    "<<<"  shift, and go to state 659
    ">>>"  shift, and go to state 660
    "&&"   shift, and go to state 661
    "||"   shift, and go to state 662
    "^^"   shift, and go to state 663
    ".."   shift, and go to state 664
    '?'    shift, and go to state 665
    '|'    shift, and go to state 666
    '^'    shift, and go to state 667
    '&'    shift, and go to state 668
    '<'    shift, and go to state 669
    '>'    shift, and go to state 670
    '-'    shift, and go to state 671
    '+'    shift, and go to state 672
    '*'    shift, and go to state 673
    '/'    shift, and go to state 674
    '%'    shift, and go to state 675
    '.'    shift, and go to state 676
    '['    shift, and go to state 677
    ')'    shift, and go to state 1295


State 1236

  630 type_declaration_no_options_no_dim: '$' name_in_namespace '<' $@39 type_declaration_no_options_list '>' '(' optional_expr_list . ')'

    ')'  shift, and go to state 1296


State 1237

  564 variable_name_with_pos_list: variable_name_with_pos_list ',' "name" "aka" "name" .

    $default  reduce using rule 564 (variable_name_with_pos_list)


State 1238

  336 expr_method_call: expr . "->" "name" '(' ')'
  337                 | expr . "->" "name" '(' expr_list ')'
  347 expr_field: expr . '.' "name"
  348           | expr . '.' '.' "name"
  349           | expr . '.' "name" '(' ')'
  350           | expr . '.' "name" '(' expr_list ')'
  353           | expr . '.' $@17 error $@18
  373 expr: expr . "<<" expr
  374     | expr . ">>" expr
  375     | expr . "<<<" expr
  376     | expr . ">>>" expr
  377     | expr . '+' expr
  378     | expr . '-' expr
  379     | expr . '*' expr
  380     | expr . '/' expr
  381     | expr . '%' expr
  382     | expr . '<' expr
  383     | expr . '>' expr
  384     | expr . "==" expr
  385     | expr . "!=" expr
  386     | expr . "<=" expr
  387     | expr . ">=" expr
  388     | expr . '&' expr
  389     | expr . '|' expr
  390     | expr . '^' expr
  391     | expr . "&&" expr
  392     | expr . "||" expr
  393     | expr . "^^" expr
  394     | expr . ".." expr
  397     | expr . "++"
  398     | expr . "--"
  400     | expr . '[' expr ']'
  401     | expr . '.' '[' expr ']'
  402     | expr . "?[" expr ']'
  403     | expr . '.' "?[" expr ']'
  404     | expr . "?." "name"
  405     | expr . '.' "?." "name"
  413     | expr . "??" expr
  414     | expr . '?' expr ':' expr
  417     | expr . "is" "type" '<' $@19 type_declaration_no_options '>' $@20
  418     | expr . "is" basic_type_declaration
  419     | expr . "is" "name"
  420     | expr . "as" "name"
  423     | expr . "as" "type" '<' $@21 type_declaration '>' $@22
  424     | expr . "as" basic_type_declaration
  425     | expr . '?' "as" "name"
  428     | expr . '?' "as" "type" '<' $@23 type_declaration '>' $@24
  429     | expr . '?' "as" basic_type_declaration
  437     | expr . "<|" expr
  438     | expr . "|>" expr
  439     | expr . "|>" basic_type_declaration
  449 expr_mtag: expr . '.' "$f" '(' expr ')'
  450          | expr . "?." "$f" '(' expr ')'
  451          | expr . '.' '.' "$f" '(' expr ')'
  452          | expr . '.' "?." "$f" '(' expr ')'
  453          | expr . "as" "$f" '(' expr ')'
  454          | expr . '?' "as" "$f" '(' expr ')'
  455          | expr . "is" "$f" '(' expr ')'
  499 variable_declaration: variable_name_with_pos_list ':' type_declaration copy_or_move expr .

    "is"   shift, and go to state 643
    "as"   shift, and go to state 644
    "<<"   shift, and go to state 645
    ">>"   shift, and go to state 646
    "++"   shift, and go to state 647
    "--"   shift, and go to state 648
    "<="   shift, and go to state 649
    ">="   shift, and go to state 650
    "=="   shift, and go to state 651
    "!="   shift, and go to state 652
    "->"   shift, and go to state 653
    "??"   shift, and go to state 654
    "?."   shift, and go to state 655
    "?["   shift, and go to state 656
    "<|"   shift, and go to state 657
    "|>"   shift, and go to state 658
    "<<<"  shift, and go to state 659
    ">>>"  shift, and go to state 660
    "&&"   shift, and go to state 661
    "||"   shift, and go to state 662
    "^^"   shift, and go to state 663
    ".."   shift, and go to state 664
    '?'    shift, and go to state 665
    '|'    shift, and go to state 666
    '^'    shift, and go to state 667
    '&'    shift, and go to state 668
    '<'    shift, and go to state 669
    '>'    shift, and go to state 670
    '-'    shift, and go to state 671
    '+'    shift, and go to state 672
    '*'    shift, and go to state 673
    '/'    shift, and go to state 674
    '%'    shift, and go to state 675
    '.'    shift, and go to state 676
    '['    shift, and go to state 677

    $default  reduce using rule 499 (variable_declaration)


State 1239

   70 expression_for_loop: "for" '(' variable_name_with_pos_list "in" expr_list ')' . expression_block

    "begin of code block"  shift, and go to state 323

    expression_block  go to state 1297


State 1240

   57 expression_else: "else" . expression_block

    "begin of code block"  shift, and go to state 323

    expression_block  go to state 1298


State 1241

   54 elif_or_static_elif: "elif" .

    $default  reduce using rule 54 (elif_or_static_elif)


State 1242

   55 elif_or_static_elif: "static_elif" .

    $default  reduce using rule 55 (elif_or_static_elif)


State 1243

   58 expression_else: elif_or_static_elif . '(' expr ')' expression_block expression_else

    '('  shift, and go to state 1299


State 1244

   68 expression_if_then_else: if_or_static_if '(' expr ')' expression_block expression_else .

    $default  reduce using rule 68 (expression_if_then_else)


State 1245

   62 expression_else_one_liner: "else" . expression_if_one_liner

    "struct"                          shift, and go to state 408
    "class"                           shift, and go to state 409
    "true"                            shift, and go to state 410
    "false"                           shift, and go to state 411
    "new"                             shift, and go to state 412
    "typeinfo"                        shift, and go to state 413
    "type"                            shift, and go to state 414
    "array"                           shift, and go to state 415
    "return"                          shift, and go to state 532
    "null"                            shift, and go to state 416
    "break"                           shift, and go to state 533
    "table"                           shift, and go to state 417
    "deref"                           shift, and go to state 418
    "cast"                            shift, and go to state 419
    "upcast"                          shift, and go to state 420
    "addr"                            shift, and go to state 421
    "continue"                        shift, and go to state 538
    "reinterpret"                     shift, and go to state 422
    "fixed_array"                     shift, and go to state 423
    "default"                         shift, and go to state 424
    "bool"                            shift, and go to state 222
    "void"                            shift, and go to state 223
    "string"                          shift, and go to state 224
    "int"                             shift, and go to state 226
    "int2"                            shift, and go to state 227
    "int3"                            shift, and go to state 228
    "int4"                            shift, and go to state 229
    "uint"                            shift, and go to state 230
    "bitfield"                        shift, and go to state 425
    "uint2"                           shift, and go to state 232
    "uint3"                           shift, and go to state 233
    "uint4"                           shift, and go to state 234
    "float"                           shift, and go to state 235
    "float2"                          shift, and go to state 236
    "float3"                          shift, and go to state 237
    "float4"                          shift, and go to state 238
    "range"                           shift, and go to state 239
    "urange"                          shift, and go to state 240
    "range64"                         shift, and go to state 241
    "urange64"                        shift, and go to state 242
    "int64"                           shift, and go to state 244
    "uint64"                          shift, and go to state 245
    "double"                          shift, and go to state 246
    "int8"                            shift, and go to state 249
    "uint8"                           shift, and go to state 250
    "int16"                           shift, and go to state 251
    "uint16"                          shift, and go to state 252
    "tuple"                           shift, and go to state 426
    "variant"                         shift, and go to state 427
    "generator"                       shift, and go to state 428
    "yield"                           shift, and go to state 543
    "++"                              shift, and go to state 429
    "--"                              shift, and go to state 430
    "::"                              shift, and go to state 55
    "$$"                              shift, and go to state 431
    "$i"                              shift, and go to state 432
    "$v"                              shift, and go to state 433
    "$b"                              shift, and go to state 434
    "$a"                              shift, and go to state 435
    "$c"                              shift, and go to state 436
    "..."                             shift, and go to state 437
    "integer constant"                shift, and go to state 438
    "long integer constant"           shift, and go to state 439
    "unsigned integer constant"       shift, and go to state 440
    "unsigned long integer constant"  shift, and go to state 441
    "unsigned int8 constant"          shift, and go to state 442
    "floating point constant"         shift, and go to state 443
    "double constant"                 shift, and go to state 444
    "name"                            shift, and go to state 56
    "start of the string"             shift, and go to state 445
    "begin of code block"             shift, and go to state 446
    '-'                               shift, and go to state 447
    '+'                               shift, and go to state 448
    '*'                               shift, and go to state 449
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 450
    '!'                               shift, and go to state 451
    '['                               shift, and go to state 452
    '('                               shift, and go to state 453
    '$'                               shift, and go to state 454
    '@'                               shift, and go to state 455

    string_builder            go to state 456
    expr_reader               go to state 457
    expression_if_one_liner   go to state 1300
    expr_call_pipe            go to state 458
    name_in_namespace         go to state 459
    expr_new                  go to state 460
    expression_break          go to state 1301
    expression_continue       go to state 1302
    expression_return         go to state 1303
    expression_yield_no_pipe  go to state 1304
    expr_cast                 go to state 461
    expr_type_decl            go to state 462
    expr_type_info            go to state 463
    block_or_lambda           go to state 464
    expr_full_block           go to state 465
    expr_numeric_const        go to state 466
    expr_named_call           go to state 467
    expr_method_call          go to state 468
    func_addr_expr            go to state 469
    expr_field                go to state 470
    expr_call                 go to state 471
    expr                      go to state 1305
    expr_mtag                 go to state 473
    basic_type_declaration    go to state 474
    make_decl                 go to state 475
    make_struct_decl          go to state 476
    make_tuple_call           go to state 477
    make_dim_decl             go to state 478
    make_table_decl           go to state 479
    array_comprehension       go to state 480


State 1246

   69 expression_if_then_else: expression_if_one_liner "if" '(' expr ')' expression_else_one_liner . "end of expression"

    "end of expression"  shift, and go to state 1306


State 1247

  269 tuple_expansion: tuple_expansion ',' "name" .

    $default  reduce using rule 269 (tuple_expansion)


State 1248

  270 tuple_expansion_variable_declaration: '(' tuple_expansion ')' ':' . type_declaration_no_options copy_or_move_or_clone expr "end of expression"

    "type"       shift, and go to state 216
    "array"      shift, and go to state 217
    "table"      shift, and go to state 218
    "typedecl"   shift, and go to state 219
    "iterator"   shift, and go to state 220
    "smart_ptr"  shift, and go to state 221
    "bool"       shift, and go to state 222
    "void"       shift, and go to state 223
    "string"     shift, and go to state 224
    "auto"       shift, and go to state 225
    "int"        shift, and go to state 226
    "int2"       shift, and go to state 227
    "int3"       shift, and go to state 228
    "int4"       shift, and go to state 229
    "uint"       shift, and go to state 230
    "bitfield"   shift, and go to state 231
    "uint2"      shift, and go to state 232
    "uint3"      shift, and go to state 233
    "uint4"      shift, and go to state 234
    "float"      shift, and go to state 235
    "float2"     shift, and go to state 236
    "float3"     shift, and go to state 237
    "float4"     shift, and go to state 238
    "range"      shift, and go to state 239
    "urange"     shift, and go to state 240
    "range64"    shift, and go to state 241
    "urange64"   shift, and go to state 242
    "block"      shift, and go to state 243
    "int64"      shift, and go to state 244
    "uint64"     shift, and go to state 245
    "double"     shift, and go to state 246
    "function"   shift, and go to state 247
    "lambda"     shift, and go to state 248
    "int8"       shift, and go to state 249
    "uint8"      shift, and go to state 250
    "int16"      shift, and go to state 251
    "uint16"     shift, and go to state 252
    "tuple"      shift, and go to state 253
    "variant"    shift, and go to state 254
    "::"         shift, and go to state 55
    "$t"         shift, and go to state 255
    "name"       shift, and go to state 56
    '$'          shift, and go to state 256

    name_in_namespace                   go to state 257
    basic_type_declaration              go to state 258
    structure_type_declaration          go to state 259
    auto_type_declaration               go to state 260
    bitfield_type_declaration           go to state 261
    type_declaration_no_options         go to state 1307
    type_declaration_no_options_no_dim  go to state 263


State 1249

  271 tuple_expansion_variable_declaration: '(' tuple_expansion ')' optional_ref . copy_or_move_or_clone expr "end of expression"

    "<-"  shift, and go to state 578
    ":="  shift, and go to state 579
    '='   shift, and go to state 580

    copy_or_move_or_clone  go to state 1308


State 1250

  463 optional_constant: "const" .

    $default  reduce using rule 463 (optional_constant)


State 1251

  474 struct_variable_declaration_list: struct_variable_declaration_list optional_annotation_list "def" optional_public_or_private_member_variable "abstract" optional_constant . $@26 function_declaration_header "end of expression"

    $default  reduce using rule 473 ($@26)

    $@26  go to state 1309


State 1252

  476 struct_variable_declaration_list: struct_variable_declaration_list optional_annotation_list "def" optional_public_or_private_member_variable optional_static_member_variable optional_override . optional_constant $@27 function_declaration_header expression_block

    "const"  shift, and go to state 1250

    $default  reduce using rule 462 (optional_constant)

    optional_constant  go to state 1310


State 1253

  469 structure_variable_declaration: optional_field_annotation optional_static_member_variable optional_override optional_public_or_private_member_variable . variable_declaration

    "$i"    shift, and go to state 712
    "name"  shift, and go to state 713

    variable_declaration         go to state 1311
    variable_name_with_pos_list  go to state 715


State 1254

  718 make_struct_decl: "struct" '<' $@73 type_declaration_no_options '>' $@74 '(' . use_initializer make_struct_dim ')'

    "uninitialized"  shift, and go to state 971

    $default  reduce using rule 714 (use_initializer)

    use_initializer  go to state 1312


State 1255

  721 make_struct_decl: "class" '<' $@75 type_declaration_no_options '>' $@76 '(' . use_initializer make_struct_dim ')'

    "uninitialized"  shift, and go to state 971

    $default  reduce using rule 714 (use_initializer)

    use_initializer  go to state 1313


State 1256

  288 expr_type_info: "typeinfo" '(' name_in_namespace '<' "name" "end of expression" "name" . '>' expr ')'

    '>'  shift, and go to state 1314


State 1257

  287 expr_type_info: "typeinfo" '(' name_in_namespace '<' "name" '>' expr . ')'
  336 expr_method_call: expr . "->" "name" '(' ')'
  337                 | expr . "->" "name" '(' expr_list ')'
  347 expr_field: expr . '.' "name"
  348           | expr . '.' '.' "name"
  349           | expr . '.' "name" '(' ')'
  350           | expr . '.' "name" '(' expr_list ')'
  353           | expr . '.' $@17 error $@18
  373 expr: expr . "<<" expr
  374     | expr . ">>" expr
  375     | expr . "<<<" expr
  376     | expr . ">>>" expr
  377     | expr . '+' expr
  378     | expr . '-' expr
  379     | expr . '*' expr
  380     | expr . '/' expr
  381     | expr . '%' expr
  382     | expr . '<' expr
  383     | expr . '>' expr
  384     | expr . "==" expr
  385     | expr . "!=" expr
  386     | expr . "<=" expr
  387     | expr . ">=" expr
  388     | expr . '&' expr
  389     | expr . '|' expr
  390     | expr . '^' expr
  391     | expr . "&&" expr
  392     | expr . "||" expr
  393     | expr . "^^" expr
  394     | expr . ".." expr
  397     | expr . "++"
  398     | expr . "--"
  400     | expr . '[' expr ']'
  401     | expr . '.' '[' expr ']'
  402     | expr . "?[" expr ']'
  403     | expr . '.' "?[" expr ']'
  404     | expr . "?." "name"
  405     | expr . '.' "?." "name"
  413     | expr . "??" expr
  414     | expr . '?' expr ':' expr
  417     | expr . "is" "type" '<' $@19 type_declaration_no_options '>' $@20
  418     | expr . "is" basic_type_declaration
  419     | expr . "is" "name"
  420     | expr . "as" "name"
  423     | expr . "as" "type" '<' $@21 type_declaration '>' $@22
  424     | expr . "as" basic_type_declaration
  425     | expr . '?' "as" "name"
  428     | expr . '?' "as" "type" '<' $@23 type_declaration '>' $@24
  429     | expr . '?' "as" basic_type_declaration
  437     | expr . "<|" expr
  438     | expr . "|>" expr
  439     | expr . "|>" basic_type_declaration
  449 expr_mtag: expr . '.' "$f" '(' expr ')'
  450          | expr . "?." "$f" '(' expr ')'
  451          | expr . '.' '.' "$f" '(' expr ')'
  452          | expr . '.' "?." "$f" '(' expr ')'
  453          | expr . "as" "$f" '(' expr ')'
  454          | expr . '?' "as" "$f" '(' expr ')'
  455          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 643
    "as"   shift, and go to state 644
    "<<"   shift, and go to state 645
    ">>"   shift, and go to state 646
    "++"   shift, and go to state 647
    "--"   shift, and go to state 648
    "<="   shift, and go to state 649
    ">="   shift, and go to state 650
    "=="   shift, and go to state 651
    "!="   shift, and go to state 652
    "->"   shift, and go to state 653
    "??"   shift, and go to state 654
    "?."   shift, and go to state 655
    "?["   shift, and go to state 656
    "<|"   shift, and go to state 657
    "|>"   shift, and go to state 658
    "<<<"  shift, and go to state 659
    ">>>"  shift, and go to state 660
    "&&"   shift, and go to state 661
    "||"   shift, and go to state 662
    "^^"   shift, and go to state 663
    ".."   shift, and go to state 664
    '?'    shift, and go to state 665
    '|'    shift, and go to state 666
    '^'    shift, and go to state 667
    '&'    shift, and go to state 668
    '<'    shift, and go to state 669
    '>'    shift, and go to state 670
    '-'    shift, and go to state 671
    '+'    shift, and go to state 672
    '*'    shift, and go to state 673
    '/'    shift, and go to state 674
    '%'    shift, and go to state 675
    '.'    shift, and go to state 676
    '['    shift, and go to state 677
    ')'    shift, and go to state 1315


State 1258

  737 make_dim_decl: "array" "struct" '<' $@83 type_declaration_no_options '>' $@84 . '(' use_initializer make_struct_dim ')'

    '('  shift, and go to state 1316


State 1259

  740 make_dim_decl: "array" "tuple" '<' $@85 type_declaration_no_options '>' $@86 . '(' use_initializer make_struct_dim ')'

    '('  shift, and go to state 1317


State 1260

  743 make_dim_decl: "array" "variant" '<' $@87 type_declaration_no_options '>' $@88 . '(' make_struct_dim ')'

    '('  shift, and go to state 1318


State 1261

  747 make_dim_decl: "array" '<' $@89 type_declaration_no_options '>' $@90 '(' . expr_list optional_comma ')'

    "struct"                          shift, and go to state 408
    "class"                           shift, and go to state 409
    "true"                            shift, and go to state 410
    "false"                           shift, and go to state 411
    "new"                             shift, and go to state 412
    "typeinfo"                        shift, and go to state 413
    "type"                            shift, and go to state 414
    "array"                           shift, and go to state 415
    "null"                            shift, and go to state 416
    "table"                           shift, and go to state 417
    "deref"                           shift, and go to state 418
    "cast"                            shift, and go to state 419
    "upcast"                          shift, and go to state 420
    "addr"                            shift, and go to state 421
    "reinterpret"                     shift, and go to state 422
    "fixed_array"                     shift, and go to state 423
    "default"                         shift, and go to state 424
    "bool"                            shift, and go to state 222
    "void"                            shift, and go to state 223
    "string"                          shift, and go to state 224
    "int"                             shift, and go to state 226
    "int2"                            shift, and go to state 227
    "int3"                            shift, and go to state 228
    "int4"                            shift, and go to state 229
    "uint"                            shift, and go to state 230
    "bitfield"                        shift, and go to state 425
    "uint2"                           shift, and go to state 232
    "uint3"                           shift, and go to state 233
    "uint4"                           shift, and go to state 234
    "float"                           shift, and go to state 235
    "float2"                          shift, and go to state 236
    "float3"                          shift, and go to state 237
    "float4"                          shift, and go to state 238
    "range"                           shift, and go to state 239
    "urange"                          shift, and go to state 240
    "range64"                         shift, and go to state 241
    "urange64"                        shift, and go to state 242
    "int64"                           shift, and go to state 244
    "uint64"                          shift, and go to state 245
    "double"                          shift, and go to state 246
    "int8"                            shift, and go to state 249
    "uint8"                           shift, and go to state 250
    "int16"                           shift, and go to state 251
    "uint16"                          shift, and go to state 252
    "tuple"                           shift, and go to state 426
    "variant"                         shift, and go to state 427
    "generator"                       shift, and go to state 428
    "++"                              shift, and go to state 429
    "--"                              shift, and go to state 430
    "::"                              shift, and go to state 55
    "$$"                              shift, and go to state 431
    "$i"                              shift, and go to state 432
    "$v"                              shift, and go to state 433
    "$b"                              shift, and go to state 434
    "$a"                              shift, and go to state 435
    "$c"                              shift, and go to state 436
    "..."                             shift, and go to state 437
    "integer constant"                shift, and go to state 438
    "long integer constant"           shift, and go to state 439
    "unsigned integer constant"       shift, and go to state 440
    "unsigned long integer constant"  shift, and go to state 441
    "unsigned int8 constant"          shift, and go to state 442
    "floating point constant"         shift, and go to state 443
    "double constant"                 shift, and go to state 444
    "name"                            shift, and go to state 56
    "start of the string"             shift, and go to state 445
    "begin of code block"             shift, and go to state 446
    '-'                               shift, and go to state 447
    '+'                               shift, and go to state 448
    '*'                               shift, and go to state 449
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 450
    '!'                               shift, and go to state 451
    '['                               shift, and go to state 452
    '('                               shift, and go to state 453
    '$'                               shift, and go to state 454
    '@'                               shift, and go to state 455

    string_builder          go to state 456
    expr_reader             go to state 457
    expr_call_pipe          go to state 458
    name_in_namespace       go to state 459
    expr_new                go to state 460
    expr_cast               go to state 461
    expr_type_decl          go to state 462
    expr_type_info          go to state 463
    expr_list               go to state 1319
    block_or_lambda         go to state 464
    expr_full_block         go to state 465
    expr_numeric_const      go to state 466
    expr_named_call         go to state 467
    expr_method_call        go to state 468
    func_addr_expr          go to state 469
    expr_field              go to state 470
    expr_call               go to state 471
    expr                    go to state 634
    expr_mtag               go to state 473
    basic_type_declaration  go to state 474
    make_decl               go to state 475
    make_struct_decl        go to state 476
    make_tuple_call         go to state 477
    make_dim_decl           go to state 478
    make_table_decl         go to state 479
    array_comprehension     go to state 480


State 1262

  757 make_table_decl: "table" '<' type_declaration_no_options "end of expression" type_declaration_no_options '>' '(' . expr_map_tuple_list optional_comma ')'

    "struct"                          shift, and go to state 408
    "class"                           shift, and go to state 409
    "true"                            shift, and go to state 410
    "false"                           shift, and go to state 411
    "new"                             shift, and go to state 412
    "typeinfo"                        shift, and go to state 413
    "type"                            shift, and go to state 414
    "array"                           shift, and go to state 415
    "null"                            shift, and go to state 416
    "table"                           shift, and go to state 417
    "deref"                           shift, and go to state 418
    "cast"                            shift, and go to state 419
    "upcast"                          shift, and go to state 420
    "addr"                            shift, and go to state 421
    "reinterpret"                     shift, and go to state 422
    "fixed_array"                     shift, and go to state 423
    "default"                         shift, and go to state 424
    "bool"                            shift, and go to state 222
    "void"                            shift, and go to state 223
    "string"                          shift, and go to state 224
    "int"                             shift, and go to state 226
    "int2"                            shift, and go to state 227
    "int3"                            shift, and go to state 228
    "int4"                            shift, and go to state 229
    "uint"                            shift, and go to state 230
    "bitfield"                        shift, and go to state 425
    "uint2"                           shift, and go to state 232
    "uint3"                           shift, and go to state 233
    "uint4"                           shift, and go to state 234
    "float"                           shift, and go to state 235
    "float2"                          shift, and go to state 236
    "float3"                          shift, and go to state 237
    "float4"                          shift, and go to state 238
    "range"                           shift, and go to state 239
    "urange"                          shift, and go to state 240
    "range64"                         shift, and go to state 241
    "urange64"                        shift, and go to state 242
    "int64"                           shift, and go to state 244
    "uint64"                          shift, and go to state 245
    "double"                          shift, and go to state 246
    "int8"                            shift, and go to state 249
    "uint8"                           shift, and go to state 250
    "int16"                           shift, and go to state 251
    "uint16"                          shift, and go to state 252
    "tuple"                           shift, and go to state 426
    "variant"                         shift, and go to state 427
    "generator"                       shift, and go to state 428
    "++"                              shift, and go to state 429
    "--"                              shift, and go to state 430
    "::"                              shift, and go to state 55
    "$$"                              shift, and go to state 431
    "$i"                              shift, and go to state 432
    "$v"                              shift, and go to state 433
    "$b"                              shift, and go to state 434
    "$a"                              shift, and go to state 435
    "$c"                              shift, and go to state 436
    "..."                             shift, and go to state 437
    "integer constant"                shift, and go to state 438
    "long integer constant"           shift, and go to state 439
    "unsigned integer constant"       shift, and go to state 440
    "unsigned long integer constant"  shift, and go to state 441
    "unsigned int8 constant"          shift, and go to state 442
    "floating point constant"         shift, and go to state 443
    "double constant"                 shift, and go to state 444
    "name"                            shift, and go to state 56
    "start of the string"             shift, and go to state 445
    "begin of code block"             shift, and go to state 446
    '-'                               shift, and go to state 447
    '+'                               shift, and go to state 448
    '*'                               shift, and go to state 449
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 450
    '!'                               shift, and go to state 451
    '['                               shift, and go to state 452
    '('                               shift, and go to state 453
    '$'                               shift, and go to state 454
    '@'                               shift, and go to state 455

    string_builder          go to state 456
    expr_reader             go to state 457
    expr_call_pipe          go to state 458
    name_in_namespace       go to state 459
    expr_new                go to state 460
    expr_cast               go to state 461
    expr_type_decl          go to state 462
    expr_type_info          go to state 463
    block_or_lambda         go to state 464
    expr_full_block         go to state 465
    expr_numeric_const      go to state 466
    expr_named_call         go to state 467
    expr_method_call        go to state 468
    func_addr_expr          go to state 469
    expr_field              go to state 470
    expr_call               go to state 471
    expr                    go to state 623
    expr_mtag               go to state 473
    basic_type_declaration  go to state 474
    make_decl               go to state 475
    make_struct_decl        go to state 476
    make_map_tuple          go to state 624
    make_tuple_call         go to state 477
    make_dim_decl           go to state 478
    expr_map_tuple_list     go to state 1320
    make_table_decl         go to state 479
    array_comprehension     go to state 480


State 1263

  756 make_table_decl: "table" '<' type_declaration_no_options '>' '(' expr_map_tuple_list optional_comma . ')'

    ')'  shift, and go to state 1321


State 1264

  276 expr_cast: "cast" '<' $@5 type_declaration_no_options '>' $@6 expr .
  336 expr_method_call: expr . "->" "name" '(' ')'
  337                 | expr . "->" "name" '(' expr_list ')'
  347 expr_field: expr . '.' "name"
  348           | expr . '.' '.' "name"
  349           | expr . '.' "name" '(' ')'
  350           | expr . '.' "name" '(' expr_list ')'
  353           | expr . '.' $@17 error $@18
  373 expr: expr . "<<" expr
  374     | expr . ">>" expr
  375     | expr . "<<<" expr
  376     | expr . ">>>" expr
  377     | expr . '+' expr
  378     | expr . '-' expr
  379     | expr . '*' expr
  380     | expr . '/' expr
  381     | expr . '%' expr
  382     | expr . '<' expr
  383     | expr . '>' expr
  384     | expr . "==" expr
  385     | expr . "!=" expr
  386     | expr . "<=" expr
  387     | expr . ">=" expr
  388     | expr . '&' expr
  389     | expr . '|' expr
  390     | expr . '^' expr
  391     | expr . "&&" expr
  392     | expr . "||" expr
  393     | expr . "^^" expr
  394     | expr . ".." expr
  397     | expr . "++"
  398     | expr . "--"
  400     | expr . '[' expr ']'
  401     | expr . '.' '[' expr ']'
  402     | expr . "?[" expr ']'
  403     | expr . '.' "?[" expr ']'
  404     | expr . "?." "name"
  405     | expr . '.' "?." "name"
  413     | expr . "??" expr
  414     | expr . '?' expr ':' expr
  417     | expr . "is" "type" '<' $@19 type_declaration_no_options '>' $@20
  418     | expr . "is" basic_type_declaration
  419     | expr . "is" "name"
  420     | expr . "as" "name"
  423     | expr . "as" "type" '<' $@21 type_declaration '>' $@22
  424     | expr . "as" basic_type_declaration
  425     | expr . '?' "as" "name"
  428     | expr . '?' "as" "type" '<' $@23 type_declaration '>' $@24
  429     | expr . '?' "as" basic_type_declaration
  437     | expr . "<|" expr
  438     | expr . "|>" expr
  439     | expr . "|>" basic_type_declaration
  449 expr_mtag: expr . '.' "$f" '(' expr ')'
  450          | expr . "?." "$f" '(' expr ')'
  451          | expr . '.' '.' "$f" '(' expr ')'
  452          | expr . '.' "?." "$f" '(' expr ')'
  453          | expr . "as" "$f" '(' expr ')'
  454          | expr . '?' "as" "$f" '(' expr ')'
  455          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 643
    "as"   shift, and go to state 644
    "<<"   shift, and go to state 645
    ">>"   shift, and go to state 646
    "++"   shift, and go to state 647
    "--"   shift, and go to state 648
    "->"   shift, and go to state 653
    "??"   shift, and go to state 654
    "?."   shift, and go to state 655
    "?["   shift, and go to state 656
    "<|"   shift, and go to state 657
    "|>"   shift, and go to state 658
    "<<<"  shift, and go to state 659
    ">>>"  shift, and go to state 660
    '-'    shift, and go to state 671
    '+'    shift, and go to state 672
    '*'    shift, and go to state 673
    '/'    shift, and go to state 674
    '%'    shift, and go to state 675
    '.'    shift, and go to state 676
    '['    shift, and go to state 677

    $default  reduce using rule 276 (expr_cast)


State 1265

  279 expr_cast: "upcast" '<' $@7 type_declaration_no_options '>' $@8 expr .
  336 expr_method_call: expr . "->" "name" '(' ')'
  337                 | expr . "->" "name" '(' expr_list ')'
  347 expr_field: expr . '.' "name"
  348           | expr . '.' '.' "name"
  349           | expr . '.' "name" '(' ')'
  350           | expr . '.' "name" '(' expr_list ')'
  353           | expr . '.' $@17 error $@18
  373 expr: expr . "<<" expr
  374     | expr . ">>" expr
  375     | expr . "<<<" expr
  376     | expr . ">>>" expr
  377     | expr . '+' expr
  378     | expr . '-' expr
  379     | expr . '*' expr
  380     | expr . '/' expr
  381     | expr . '%' expr
  382     | expr . '<' expr
  383     | expr . '>' expr
  384     | expr . "==" expr
  385     | expr . "!=" expr
  386     | expr . "<=" expr
  387     | expr . ">=" expr
  388     | expr . '&' expr
  389     | expr . '|' expr
  390     | expr . '^' expr
  391     | expr . "&&" expr
  392     | expr . "||" expr
  393     | expr . "^^" expr
  394     | expr . ".." expr
  397     | expr . "++"
  398     | expr . "--"
  400     | expr . '[' expr ']'
  401     | expr . '.' '[' expr ']'
  402     | expr . "?[" expr ']'
  403     | expr . '.' "?[" expr ']'
  404     | expr . "?." "name"
  405     | expr . '.' "?." "name"
  413     | expr . "??" expr
  414     | expr . '?' expr ':' expr
  417     | expr . "is" "type" '<' $@19 type_declaration_no_options '>' $@20
  418     | expr . "is" basic_type_declaration
  419     | expr . "is" "name"
  420     | expr . "as" "name"
  423     | expr . "as" "type" '<' $@21 type_declaration '>' $@22
  424     | expr . "as" basic_type_declaration
  425     | expr . '?' "as" "name"
  428     | expr . '?' "as" "type" '<' $@23 type_declaration '>' $@24
  429     | expr . '?' "as" basic_type_declaration
  437     | expr . "<|" expr
  438     | expr . "|>" expr
  439     | expr . "|>" basic_type_declaration
  449 expr_mtag: expr . '.' "$f" '(' expr ')'
  450          | expr . "?." "$f" '(' expr ')'
  451          | expr . '.' '.' "$f" '(' expr ')'
  452          | expr . '.' "?." "$f" '(' expr ')'
  453          | expr . "as" "$f" '(' expr ')'
  454          | expr . '?' "as" "$f" '(' expr ')'
  455          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 643
    "as"   shift, and go to state 644
    "<<"   shift, and go to state 645
    ">>"   shift, and go to state 646
    "++"   shift, and go to state 647
    "--"   shift, and go to state 648
    "->"   shift, and go to state 653
    "??"   shift, and go to state 654
    "?."   shift, and go to state 655
    "?["   shift, and go to state 656
    "<|"   shift, and go to state 657
    "|>"   shift, and go to state 658
    "<<<"  shift, and go to state 659
    ">>>"  shift, and go to state 660
    '-'    shift, and go to state 671
    '+'    shift, and go to state 672
    '*'    shift, and go to state 673
    '/'    shift, and go to state 674
    '%'    shift, and go to state 675
    '.'    shift, and go to state 676
    '['    shift, and go to state 677

    $default  reduce using rule 279 (expr_cast)


State 1266

  282 expr_cast: "reinterpret" '<' $@9 type_declaration_no_options '>' $@10 expr .
  336 expr_method_call: expr . "->" "name" '(' ')'
  337                 | expr . "->" "name" '(' expr_list ')'
  347 expr_field: expr . '.' "name"
  348           | expr . '.' '.' "name"
  349           | expr . '.' "name" '(' ')'
  350           | expr . '.' "name" '(' expr_list ')'
  353           | expr . '.' $@17 error $@18
  373 expr: expr . "<<" expr
  374     | expr . ">>" expr
  375     | expr . "<<<" expr
  376     | expr . ">>>" expr
  377     | expr . '+' expr
  378     | expr . '-' expr
  379     | expr . '*' expr
  380     | expr . '/' expr
  381     | expr . '%' expr
  382     | expr . '<' expr
  383     | expr . '>' expr
  384     | expr . "==" expr
  385     | expr . "!=" expr
  386     | expr . "<=" expr
  387     | expr . ">=" expr
  388     | expr . '&' expr
  389     | expr . '|' expr
  390     | expr . '^' expr
  391     | expr . "&&" expr
  392     | expr . "||" expr
  393     | expr . "^^" expr
  394     | expr . ".." expr
  397     | expr . "++"
  398     | expr . "--"
  400     | expr . '[' expr ']'
  401     | expr . '.' '[' expr ']'
  402     | expr . "?[" expr ']'
  403     | expr . '.' "?[" expr ']'
  404     | expr . "?." "name"
  405     | expr . '.' "?." "name"
  413     | expr . "??" expr
  414     | expr . '?' expr ':' expr
  417     | expr . "is" "type" '<' $@19 type_declaration_no_options '>' $@20
  418     | expr . "is" basic_type_declaration
  419     | expr . "is" "name"
  420     | expr . "as" "name"
  423     | expr . "as" "type" '<' $@21 type_declaration '>' $@22
  424     | expr . "as" basic_type_declaration
  425     | expr . '?' "as" "name"
  428     | expr . '?' "as" "type" '<' $@23 type_declaration '>' $@24
  429     | expr . '?' "as" basic_type_declaration
  437     | expr . "<|" expr
  438     | expr . "|>" expr
  439     | expr . "|>" basic_type_declaration
  449 expr_mtag: expr . '.' "$f" '(' expr ')'
  450          | expr . "?." "$f" '(' expr ')'
  451          | expr . '.' '.' "$f" '(' expr ')'
  452          | expr . '.' "?." "$f" '(' expr ')'
  453          | expr . "as" "$f" '(' expr ')'
  454          | expr . '?' "as" "$f" '(' expr ')'
  455          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 643
    "as"   shift, and go to state 644
    "<<"   shift, and go to state 645
    ">>"   shift, and go to state 646
    "++"   shift, and go to state 647
    "--"   shift, and go to state 648
    "->"   shift, and go to state 653
    "??"   shift, and go to state 654
    "?."   shift, and go to state 655
    "?["   shift, and go to state 656
    "<|"   shift, and go to state 657
    "|>"   shift, and go to state 658
    "<<<"  shift, and go to state 659
    ">>>"  shift, and go to state 660
    '-'    shift, and go to state 671
    '+'    shift, and go to state 672
    '*'    shift, and go to state 673
    '/'    shift, and go to state 674
    '%'    shift, and go to state 675
    '.'    shift, and go to state 676
    '['    shift, and go to state 677

    $default  reduce using rule 282 (expr_cast)


State 1267

  751 make_dim_decl: "fixed_array" '<' $@91 type_declaration_no_options '>' $@92 '(' . expr_list optional_comma ')'

    "struct"                          shift, and go to state 408
    "class"                           shift, and go to state 409
    "true"                            shift, and go to state 410
    "false"                           shift, and go to state 411
    "new"                             shift, and go to state 412
    "typeinfo"                        shift, and go to state 413
    "type"                            shift, and go to state 414
    "array"                           shift, and go to state 415
    "null"                            shift, and go to state 416
    "table"                           shift, and go to state 417
    "deref"                           shift, and go to state 418
    "cast"                            shift, and go to state 419
    "upcast"                          shift, and go to state 420
    "addr"                            shift, and go to state 421
    "reinterpret"                     shift, and go to state 422
    "fixed_array"                     shift, and go to state 423
    "default"                         shift, and go to state 424
    "bool"                            shift, and go to state 222
    "void"                            shift, and go to state 223
    "string"                          shift, and go to state 224
    "int"                             shift, and go to state 226
    "int2"                            shift, and go to state 227
    "int3"                            shift, and go to state 228
    "int4"                            shift, and go to state 229
    "uint"                            shift, and go to state 230
    "bitfield"                        shift, and go to state 425
    "uint2"                           shift, and go to state 232
    "uint3"                           shift, and go to state 233
    "uint4"                           shift, and go to state 234
    "float"                           shift, and go to state 235
    "float2"                          shift, and go to state 236
    "float3"                          shift, and go to state 237
    "float4"                          shift, and go to state 238
    "range"                           shift, and go to state 239
    "urange"                          shift, and go to state 240
    "range64"                         shift, and go to state 241
    "urange64"                        shift, and go to state 242
    "int64"                           shift, and go to state 244
    "uint64"                          shift, and go to state 245
    "double"                          shift, and go to state 246
    "int8"                            shift, and go to state 249
    "uint8"                           shift, and go to state 250
    "int16"                           shift, and go to state 251
    "uint16"                          shift, and go to state 252
    "tuple"                           shift, and go to state 426
    "variant"                         shift, and go to state 427
    "generator"                       shift, and go to state 428
    "++"                              shift, and go to state 429
    "--"                              shift, and go to state 430
    "::"                              shift, and go to state 55
    "$$"                              shift, and go to state 431
    "$i"                              shift, and go to state 432
    "$v"                              shift, and go to state 433
    "$b"                              shift, and go to state 434
    "$a"                              shift, and go to state 435
    "$c"                              shift, and go to state 436
    "..."                             shift, and go to state 437
    "integer constant"                shift, and go to state 438
    "long integer constant"           shift, and go to state 439
    "unsigned integer constant"       shift, and go to state 440
    "unsigned long integer constant"  shift, and go to state 441
    "unsigned int8 constant"          shift, and go to state 442
    "floating point constant"         shift, and go to state 443
    "double constant"                 shift, and go to state 444
    "name"                            shift, and go to state 56
    "start of the string"             shift, and go to state 445
    "begin of code block"             shift, and go to state 446
    '-'                               shift, and go to state 447
    '+'                               shift, and go to state 448
    '*'                               shift, and go to state 449
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 450
    '!'                               shift, and go to state 451
    '['                               shift, and go to state 452
    '('                               shift, and go to state 453
    '$'                               shift, and go to state 454
    '@'                               shift, and go to state 455

    string_builder          go to state 456
    expr_reader             go to state 457
    expr_call_pipe          go to state 458
    name_in_namespace       go to state 459
    expr_new                go to state 460
    expr_cast               go to state 461
    expr_type_decl          go to state 462
    expr_type_info          go to state 463
    expr_list               go to state 1322
    block_or_lambda         go to state 464
    expr_full_block         go to state 465
    expr_numeric_const      go to state 466
    expr_named_call         go to state 467
    expr_method_call        go to state 468
    func_addr_expr          go to state 469
    expr_field              go to state 470
    expr_call               go to state 471
    expr                    go to state 634
    expr_mtag               go to state 473
    basic_type_declaration  go to state 474
    make_decl               go to state 475
    make_struct_decl        go to state 476
    make_tuple_call         go to state 477
    make_dim_decl           go to state 478
    make_table_decl         go to state 479
    array_comprehension     go to state 480


State 1268

  727 make_struct_decl: "default" '<' $@79 type_declaration_no_options '>' $@80 use_initializer .

    $default  reduce using rule 727 (make_struct_decl)


State 1269

  733 make_tuple_call: "tuple" '<' $@81 type_declaration_no_options '>' $@82 '(' . use_initializer make_struct_dim ')'

    "uninitialized"  shift, and go to state 971

    $default  reduce using rule 714 (use_initializer)

    use_initializer  go to state 1323


State 1270

  724 make_struct_decl: "variant" '<' $@77 type_declaration_no_options '>' $@78 '(' . make_struct_dim ')'

    "$f"    shift, and go to state 828
    "name"  shift, and go to state 1092

    make_struct_fields  go to state 1324
    make_struct_dim     go to state 1325


State 1271

  411 expr: "generator" '<' type_declaration_no_options '>' optional_capture_list '(' ')' .

    $default  reduce using rule 411 (expr)


State 1272

  336 expr_method_call: expr . "->" "name" '(' ')'
  337                 | expr . "->" "name" '(' expr_list ')'
  347 expr_field: expr . '.' "name"
  348           | expr . '.' '.' "name"
  349           | expr . '.' "name" '(' ')'
  350           | expr . '.' "name" '(' expr_list ')'
  353           | expr . '.' $@17 error $@18
  373 expr: expr . "<<" expr
  374     | expr . ">>" expr
  375     | expr . "<<<" expr
  376     | expr . ">>>" expr
  377     | expr . '+' expr
  378     | expr . '-' expr
  379     | expr . '*' expr
  380     | expr . '/' expr
  381     | expr . '%' expr
  382     | expr . '<' expr
  383     | expr . '>' expr
  384     | expr . "==" expr
  385     | expr . "!=" expr
  386     | expr . "<=" expr
  387     | expr . ">=" expr
  388     | expr . '&' expr
  389     | expr . '|' expr
  390     | expr . '^' expr
  391     | expr . "&&" expr
  392     | expr . "||" expr
  393     | expr . "^^" expr
  394     | expr . ".." expr
  397     | expr . "++"
  398     | expr . "--"
  400     | expr . '[' expr ']'
  401     | expr . '.' '[' expr ']'
  402     | expr . "?[" expr ']'
  403     | expr . '.' "?[" expr ']'
  404     | expr . "?." "name"
  405     | expr . '.' "?." "name"
  412     | "generator" '<' type_declaration_no_options '>' optional_capture_list '(' expr . ')'
  413     | expr . "??" expr
  414     | expr . '?' expr ':' expr
  417     | expr . "is" "type" '<' $@19 type_declaration_no_options '>' $@20
  418     | expr . "is" basic_type_declaration
  419     | expr . "is" "name"
  420     | expr . "as" "name"
  423     | expr . "as" "type" '<' $@21 type_declaration '>' $@22
  424     | expr . "as" basic_type_declaration
  425     | expr . '?' "as" "name"
  428     | expr . '?' "as" "type" '<' $@23 type_declaration '>' $@24
  429     | expr . '?' "as" basic_type_declaration
  437     | expr . "<|" expr
  438     | expr . "|>" expr
  439     | expr . "|>" basic_type_declaration
  449 expr_mtag: expr . '.' "$f" '(' expr ')'
  450          | expr . "?." "$f" '(' expr ')'
  451          | expr . '.' '.' "$f" '(' expr ')'
  452          | expr . '.' "?." "$f" '(' expr ')'
  453          | expr . "as" "$f" '(' expr ')'
  454          | expr . '?' "as" "$f" '(' expr ')'
  455          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 643
    "as"   shift, and go to state 644
    "<<"   shift, and go to state 645
    ">>"   shift, and go to state 646
    "++"   shift, and go to state 647
    "--"   shift, and go to state 648
    "<="   shift, and go to state 649
    ">="   shift, and go to state 650
    "=="   shift, and go to state 651
    "!="   shift, and go to state 652
    "->"   shift, and go to state 653
    "??"   shift, and go to state 654
    "?."   shift, and go to state 655
    "?["   shift, and go to state 656
    "<|"   shift, and go to state 657
    "|>"   shift, and go to state 658
    "<<<"  shift, and go to state 659
    ">>>"  shift, and go to state 660
    "&&"   shift, and go to state 661
    "||"   shift, and go to state 662
    "^^"   shift, and go to state 663
    ".."   shift, and go to state 664
    '?'    shift, and go to state 665
    '|'    shift, and go to state 666
    '^'    shift, and go to state 667
    '&'    shift, and go to state 668
    '<'    shift, and go to state 669
    '>'    shift, and go to state 670
    '-'    shift, and go to state 671
    '+'    shift, and go to state 672
    '*'    shift, and go to state 673
    '/'    shift, and go to state 674
    '%'    shift, and go to state 675
    '.'    shift, and go to state 676
    '['    shift, and go to state 677
    ')'    shift, and go to state 1326


State 1273

  448 expr_mtag: "$c" '(' expr ')' '(' expr_list ')' .

    $default  reduce using rule 448 (expr_mtag)


State 1274

  764 array_comprehension: "begin of code block" "for" variable_name_with_pos_list "in" expr_list "end of expression" make_map_tuple . array_comprehension_where "end of code block"

    "end of expression"  shift, and go to state 1327

    $default  reduce using rule 758 (array_comprehension_where)

    array_comprehension_where  go to state 1328


State 1275

  336 expr_method_call: expr . "->" "name" '(' ')'
  337                 | expr . "->" "name" '(' expr_list ')'
  347 expr_field: expr . '.' "name"
  348           | expr . '.' '.' "name"
  349           | expr . '.' "name" '(' ')'
  350           | expr . '.' "name" '(' expr_list ')'
  353           | expr . '.' $@17 error $@18
  373 expr: expr . "<<" expr
  374     | expr . ">>" expr
  375     | expr . "<<<" expr
  376     | expr . ">>>" expr
  377     | expr . '+' expr
  378     | expr . '-' expr
  379     | expr . '*' expr
  380     | expr . '/' expr
  381     | expr . '%' expr
  382     | expr . '<' expr
  383     | expr . '>' expr
  384     | expr . "==" expr
  385     | expr . "!=" expr
  386     | expr . "<=" expr
  387     | expr . ">=" expr
  388     | expr . '&' expr
  389     | expr . '|' expr
  390     | expr . '^' expr
  391     | expr . "&&" expr
  392     | expr . "||" expr
  393     | expr . "^^" expr
  394     | expr . ".." expr
  397     | expr . "++"
  398     | expr . "--"
  400     | expr . '[' expr ']'
  401     | expr . '.' '[' expr ']'
  402     | expr . "?[" expr ']'
  403     | expr . '.' "?[" expr ']'
  404     | expr . "?." "name"
  405     | expr . '.' "?." "name"
  413     | expr . "??" expr
  414     | expr . '?' expr ':' expr
  417     | expr . "is" "type" '<' $@19 type_declaration_no_options '>' $@20
  418     | expr . "is" basic_type_declaration
  419     | expr . "is" "name"
  420     | expr . "as" "name"
  423     | expr . "as" "type" '<' $@21 type_declaration '>' $@22
  424     | expr . "as" basic_type_declaration
  425     | expr . '?' "as" "name"
  428     | expr . '?' "as" "type" '<' $@23 type_declaration '>' $@24
  429     | expr . '?' "as" basic_type_declaration
  437     | expr . "<|" expr
  438     | expr . "|>" expr
  439     | expr . "|>" basic_type_declaration
  449 expr_mtag: expr . '.' "$f" '(' expr ')'
  450          | expr . "?." "$f" '(' expr ')'
  451          | expr . '.' '.' "$f" '(' expr ')'
  452          | expr . '.' "?." "$f" '(' expr ')'
  453          | expr . "as" "$f" '(' expr ')'
  454          | expr . '?' "as" "$f" '(' expr ')'
  455          | expr . "is" "$f" '(' expr ')'
  762 array_comprehension: '[' "for" variable_name_with_pos_list "in" expr_list "end of expression" expr . array_comprehension_where ']'

    "is"                 shift, and go to state 643
    "as"                 shift, and go to state 644
    "<<"                 shift, and go to state 645
    ">>"                 shift, and go to state 646
    "++"                 shift, and go to state 647
    "--"                 shift, and go to state 648
    "<="                 shift, and go to state 649
    ">="                 shift, and go to state 650
    "=="                 shift, and go to state 651
    "!="                 shift, and go to state 652
    "->"                 shift, and go to state 653
    "??"                 shift, and go to state 654
    "?."                 shift, and go to state 655
    "?["                 shift, and go to state 656
    "<|"                 shift, and go to state 657
    "|>"                 shift, and go to state 658
    "<<<"                shift, and go to state 659
    ">>>"                shift, and go to state 660
    "&&"                 shift, and go to state 661
    "||"                 shift, and go to state 662
    "^^"                 shift, and go to state 663
    ".."                 shift, and go to state 664
    "end of expression"  shift, and go to state 1327
    '?'                  shift, and go to state 665
    '|'                  shift, and go to state 666
    '^'                  shift, and go to state 667
    '&'                  shift, and go to state 668
    '<'                  shift, and go to state 669
    '>'                  shift, and go to state 670
    '-'                  shift, and go to state 671
    '+'                  shift, and go to state 672
    '*'                  shift, and go to state 673
    '/'                  shift, and go to state 674
    '%'                  shift, and go to state 675
    '.'                  shift, and go to state 676
    '['                  shift, and go to state 677

    $default  reduce using rule 758 (array_comprehension_where)

    array_comprehension_where  go to state 1329


State 1276

  763 array_comprehension: '[' "iterator" "for" variable_name_with_pos_list "in" expr_list "end of expression" . expr array_comprehension_where ']'

    "struct"                          shift, and go to state 408
    "class"                           shift, and go to state 409
    "true"                            shift, and go to state 410
    "false"                           shift, and go to state 411
    "new"                             shift, and go to state 412
    "typeinfo"                        shift, and go to state 413
    "type"                            shift, and go to state 414
    "array"                           shift, and go to state 415
    "null"                            shift, and go to state 416
    "table"                           shift, and go to state 417
    "deref"                           shift, and go to state 418
    "cast"                            shift, and go to state 419
    "upcast"                          shift, and go to state 420
    "addr"                            shift, and go to state 421
    "reinterpret"                     shift, and go to state 422
    "fixed_array"                     shift, and go to state 423
    "default"                         shift, and go to state 424
    "bool"                            shift, and go to state 222
    "void"                            shift, and go to state 223
    "string"                          shift, and go to state 224
    "int"                             shift, and go to state 226
    "int2"                            shift, and go to state 227
    "int3"                            shift, and go to state 228
    "int4"                            shift, and go to state 229
    "uint"                            shift, and go to state 230
    "bitfield"                        shift, and go to state 425
    "uint2"                           shift, and go to state 232
    "uint3"                           shift, and go to state 233
    "uint4"                           shift, and go to state 234
    "float"                           shift, and go to state 235
    "float2"                          shift, and go to state 236
    "float3"                          shift, and go to state 237
    "float4"                          shift, and go to state 238
    "range"                           shift, and go to state 239
    "urange"                          shift, and go to state 240
    "range64"                         shift, and go to state 241
    "urange64"                        shift, and go to state 242
    "int64"                           shift, and go to state 244
    "uint64"                          shift, and go to state 245
    "double"                          shift, and go to state 246
    "int8"                            shift, and go to state 249
    "uint8"                           shift, and go to state 250
    "int16"                           shift, and go to state 251
    "uint16"                          shift, and go to state 252
    "tuple"                           shift, and go to state 426
    "variant"                         shift, and go to state 427
    "generator"                       shift, and go to state 428
    "++"                              shift, and go to state 429
    "--"                              shift, and go to state 430
    "::"                              shift, and go to state 55
    "$$"                              shift, and go to state 431
    "$i"                              shift, and go to state 432
    "$v"                              shift, and go to state 433
    "$b"                              shift, and go to state 434
    "$a"                              shift, and go to state 435
    "$c"                              shift, and go to state 436
    "..."                             shift, and go to state 437
    "integer constant"                shift, and go to state 438
    "long integer constant"           shift, and go to state 439
    "unsigned integer constant"       shift, and go to state 440
    "unsigned long integer constant"  shift, and go to state 441
    "unsigned int8 constant"          shift, and go to state 442
    "floating point constant"         shift, and go to state 443
    "double constant"                 shift, and go to state 444
    "name"                            shift, and go to state 56
    "start of the string"             shift, and go to state 445
    "begin of code block"             shift, and go to state 446
    '-'                               shift, and go to state 447
    '+'                               shift, and go to state 448
    '*'                               shift, and go to state 449
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 450
    '!'                               shift, and go to state 451
    '['                               shift, and go to state 452
    '('                               shift, and go to state 453
    '$'                               shift, and go to state 454
    '@'                               shift, and go to state 455

    string_builder          go to state 456
    expr_reader             go to state 457
    expr_call_pipe          go to state 458
    name_in_namespace       go to state 459
    expr_new                go to state 460
    expr_cast               go to state 461
    expr_type_decl          go to state 462
    expr_type_info          go to state 463
    block_or_lambda         go to state 464
    expr_full_block         go to state 465
    expr_numeric_const      go to state 466
    expr_named_call         go to state 467
    expr_method_call        go to state 468
    func_addr_expr          go to state 469
    expr_field              go to state 470
    expr_call               go to state 471
    expr                    go to state 1330
    expr_mtag               go to state 473
    basic_type_declaration  go to state 474
    make_decl               go to state 475
    make_struct_decl        go to state 476
    make_tuple_call         go to state 477
    make_dim_decl           go to state 478
    make_table_decl         go to state 479
    array_comprehension     go to state 480


State 1277

  343 func_addr_expr: '@' '@' '<' $@13 type_declaration_no_options '>' $@14 . func_addr_name

    "::"    shift, and go to state 55
    "$i"    shift, and go to state 823
    "name"  shift, and go to state 56

    name_in_namespace  go to state 826
    func_addr_name     go to state 1331


State 1278

  346 func_addr_expr: '@' '@' '<' $@15 optional_function_argument_list optional_function_type '>' . $@16 func_addr_name

    $default  reduce using rule 345 ($@16)

    $@16  go to state 1332


State 1279

  708 make_struct_fields: "$f" '(' expr ')' ":=" . expr

    "struct"                          shift, and go to state 408
    "class"                           shift, and go to state 409
    "true"                            shift, and go to state 410
    "false"                           shift, and go to state 411
    "new"                             shift, and go to state 412
    "typeinfo"                        shift, and go to state 413
    "type"                            shift, and go to state 414
    "array"                           shift, and go to state 415
    "null"                            shift, and go to state 416
    "table"                           shift, and go to state 417
    "deref"                           shift, and go to state 418
    "cast"                            shift, and go to state 419
    "upcast"                          shift, and go to state 420
    "addr"                            shift, and go to state 421
    "reinterpret"                     shift, and go to state 422
    "fixed_array"                     shift, and go to state 423
    "default"                         shift, and go to state 424
    "bool"                            shift, and go to state 222
    "void"                            shift, and go to state 223
    "string"                          shift, and go to state 224
    "int"                             shift, and go to state 226
    "int2"                            shift, and go to state 227
    "int3"                            shift, and go to state 228
    "int4"                            shift, and go to state 229
    "uint"                            shift, and go to state 230
    "bitfield"                        shift, and go to state 425
    "uint2"                           shift, and go to state 232
    "uint3"                           shift, and go to state 233
    "uint4"                           shift, and go to state 234
    "float"                           shift, and go to state 235
    "float2"                          shift, and go to state 236
    "float3"                          shift, and go to state 237
    "float4"                          shift, and go to state 238
    "range"                           shift, and go to state 239
    "urange"                          shift, and go to state 240
    "range64"                         shift, and go to state 241
    "urange64"                        shift, and go to state 242
    "int64"                           shift, and go to state 244
    "uint64"                          shift, and go to state 245
    "double"                          shift, and go to state 246
    "int8"                            shift, and go to state 249
    "uint8"                           shift, and go to state 250
    "int16"                           shift, and go to state 251
    "uint16"                          shift, and go to state 252
    "tuple"                           shift, and go to state 426
    "variant"                         shift, and go to state 427
    "generator"                       shift, and go to state 428
    "++"                              shift, and go to state 429
    "--"                              shift, and go to state 430
    "::"                              shift, and go to state 55
    "$$"                              shift, and go to state 431
    "$i"                              shift, and go to state 432
    "$v"                              shift, and go to state 433
    "$b"                              shift, and go to state 434
    "$a"                              shift, and go to state 435
    "$c"                              shift, and go to state 436
    "..."                             shift, and go to state 437
    "integer constant"                shift, and go to state 438
    "long integer constant"           shift, and go to state 439
    "unsigned integer constant"       shift, and go to state 440
    "unsigned long integer constant"  shift, and go to state 441
    "unsigned int8 constant"          shift, and go to state 442
    "floating point constant"         shift, and go to state 443
    "double constant"                 shift, and go to state 444
    "name"                            shift, and go to state 56
    "start of the string"             shift, and go to state 445
    "begin of code block"             shift, and go to state 446
    '-'                               shift, and go to state 447
    '+'                               shift, and go to state 448
    '*'                               shift, and go to state 449
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 450
    '!'                               shift, and go to state 451
    '['                               shift, and go to state 452
    '('                               shift, and go to state 453
    '$'                               shift, and go to state 454
    '@'                               shift, and go to state 455

    string_builder          go to state 456
    expr_reader             go to state 457
    expr_call_pipe          go to state 458
    name_in_namespace       go to state 459
    expr_new                go to state 460
    expr_cast               go to state 461
    expr_type_decl          go to state 462
    expr_type_info          go to state 463
    block_or_lambda         go to state 464
    expr_full_block         go to state 465
    expr_numeric_const      go to state 466
    expr_named_call         go to state 467
    expr_method_call        go to state 468
    func_addr_expr          go to state 469
    expr_field              go to state 470
    expr_call               go to state 471
    expr                    go to state 1333
    expr_mtag               go to state 473
    basic_type_declaration  go to state 474
    make_decl               go to state 475
    make_struct_decl        go to state 476
    make_tuple_call         go to state 477
    make_dim_decl           go to state 478
    make_table_decl         go to state 479
    array_comprehension     go to state 480


State 1280

  707 make_struct_fields: "$f" '(' expr ')' copy_or_move . expr

    "struct"                          shift, and go to state 408
    "class"                           shift, and go to state 409
    "true"                            shift, and go to state 410
    "false"                           shift, and go to state 411
    "new"                             shift, and go to state 412
    "typeinfo"                        shift, and go to state 413
    "type"                            shift, and go to state 414
    "array"                           shift, and go to state 415
    "null"                            shift, and go to state 416
    "table"                           shift, and go to state 417
    "deref"                           shift, and go to state 418
    "cast"                            shift, and go to state 419
    "upcast"                          shift, and go to state 420
    "addr"                            shift, and go to state 421
    "reinterpret"                     shift, and go to state 422
    "fixed_array"                     shift, and go to state 423
    "default"                         shift, and go to state 424
    "bool"                            shift, and go to state 222
    "void"                            shift, and go to state 223
    "string"                          shift, and go to state 224
    "int"                             shift, and go to state 226
    "int2"                            shift, and go to state 227
    "int3"                            shift, and go to state 228
    "int4"                            shift, and go to state 229
    "uint"                            shift, and go to state 230
    "bitfield"                        shift, and go to state 425
    "uint2"                           shift, and go to state 232
    "uint3"                           shift, and go to state 233
    "uint4"                           shift, and go to state 234
    "float"                           shift, and go to state 235
    "float2"                          shift, and go to state 236
    "float3"                          shift, and go to state 237
    "float4"                          shift, and go to state 238
    "range"                           shift, and go to state 239
    "urange"                          shift, and go to state 240
    "range64"                         shift, and go to state 241
    "urange64"                        shift, and go to state 242
    "int64"                           shift, and go to state 244
    "uint64"                          shift, and go to state 245
    "double"                          shift, and go to state 246
    "int8"                            shift, and go to state 249
    "uint8"                           shift, and go to state 250
    "int16"                           shift, and go to state 251
    "uint16"                          shift, and go to state 252
    "tuple"                           shift, and go to state 426
    "variant"                         shift, and go to state 427
    "generator"                       shift, and go to state 428
    "++"                              shift, and go to state 429
    "--"                              shift, and go to state 430
    "::"                              shift, and go to state 55
    "$$"                              shift, and go to state 431
    "$i"                              shift, and go to state 432
    "$v"                              shift, and go to state 433
    "$b"                              shift, and go to state 434
    "$a"                              shift, and go to state 435
    "$c"                              shift, and go to state 436
    "..."                             shift, and go to state 437
    "integer constant"                shift, and go to state 438
    "long integer constant"           shift, and go to state 439
    "unsigned integer constant"       shift, and go to state 440
    "unsigned long integer constant"  shift, and go to state 441
    "unsigned int8 constant"          shift, and go to state 442
    "floating point constant"         shift, and go to state 443
    "double constant"                 shift, and go to state 444
    "name"                            shift, and go to state 56
    "start of the string"             shift, and go to state 445
    "begin of code block"             shift, and go to state 446
    '-'                               shift, and go to state 447
    '+'                               shift, and go to state 448
    '*'                               shift, and go to state 449
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 450
    '!'                               shift, and go to state 451
    '['                               shift, and go to state 452
    '('                               shift, and go to state 453
    '$'                               shift, and go to state 454
    '@'                               shift, and go to state 455

    string_builder          go to state 456
    expr_reader             go to state 457
    expr_call_pipe          go to state 458
    name_in_namespace       go to state 459
    expr_new                go to state 460
    expr_cast               go to state 461
    expr_type_decl          go to state 462
    expr_type_info          go to state 463
    block_or_lambda         go to state 464
    expr_full_block         go to state 465
    expr_numeric_const      go to state 466
    expr_named_call         go to state 467
    expr_method_call        go to state 468
    func_addr_expr          go to state 469
    expr_field              go to state 470
    expr_call               go to state 471
    expr                    go to state 1334
    expr_mtag               go to state 473
    basic_type_declaration  go to state 474
    make_decl               go to state 475
    make_struct_decl        go to state 476
    make_tuple_call         go to state 477
    make_dim_decl           go to state 478
    make_table_decl         go to state 479
    array_comprehension     go to state 480


State 1281

  335 expr_named_call: name_in_namespace '(' expr_list ',' '[' make_struct_fields ']' . ')'

    ')'  shift, and go to state 1335


State 1282

  336 expr_method_call: expr . "->" "name" '(' ')'
  337                 | expr . "->" "name" '(' expr_list ')'
  347 expr_field: expr . '.' "name"
  348           | expr . '.' '.' "name"
  349           | expr . '.' "name" '(' ')'
  350           | expr . '.' "name" '(' expr_list ')'
  353           | expr . '.' $@17 error $@18
  373 expr: expr . "<<" expr
  374     | expr . ">>" expr
  375     | expr . "<<<" expr
  376     | expr . ">>>" expr
  377     | expr . '+' expr
  378     | expr . '-' expr
  379     | expr . '*' expr
  380     | expr . '/' expr
  381     | expr . '%' expr
  382     | expr . '<' expr
  383     | expr . '>' expr
  384     | expr . "==" expr
  385     | expr . "!=" expr
  386     | expr . "<=" expr
  387     | expr . ">=" expr
  388     | expr . '&' expr
  389     | expr . '|' expr
  390     | expr . '^' expr
  391     | expr . "&&" expr
  392     | expr . "||" expr
  393     | expr . "^^" expr
  394     | expr . ".." expr
  397     | expr . "++"
  398     | expr . "--"
  400     | expr . '[' expr ']'
  401     | expr . '.' '[' expr ']'
  402     | expr . "?[" expr ']'
  403     | expr . '.' "?[" expr ']'
  404     | expr . "?." "name"
  405     | expr . '.' "?." "name"
  413     | expr . "??" expr
  414     | expr . '?' expr ':' expr
  417     | expr . "is" "type" '<' $@19 type_declaration_no_options '>' $@20
  418     | expr . "is" basic_type_declaration
  419     | expr . "is" "name"
  420     | expr . "as" "name"
  423     | expr . "as" "type" '<' $@21 type_declaration '>' $@22
  424     | expr . "as" basic_type_declaration
  425     | expr . '?' "as" "name"
  428     | expr . '?' "as" "type" '<' $@23 type_declaration '>' $@24
  429     | expr . '?' "as" basic_type_declaration
  437     | expr . "<|" expr
  438     | expr . "|>" expr
  439     | expr . "|>" basic_type_declaration
  449 expr_mtag: expr . '.' "$f" '(' expr ')'
  450          | expr . "?." "$f" '(' expr ')'
  451          | expr . '.' '.' "$f" '(' expr ')'
  452          | expr . '.' "?." "$f" '(' expr ')'
  453          | expr . "as" "$f" '(' expr ')'
  454          | expr . '?' "as" "$f" '(' expr ')'
  455          | expr . "is" "$f" '(' expr ')'
  709 make_struct_fields: make_struct_fields ',' "$f" '(' expr . ')' copy_or_move expr
  710                   | make_struct_fields ',' "$f" '(' expr . ')' ":=" expr

    "is"   shift, and go to state 643
    "as"   shift, and go to state 644
    "<<"   shift, and go to state 645
    ">>"   shift, and go to state 646
    "++"   shift, and go to state 647
    "--"   shift, and go to state 648
    "<="   shift, and go to state 649
    ">="   shift, and go to state 650
    "=="   shift, and go to state 651
    "!="   shift, and go to state 652
    "->"   shift, and go to state 653
    "??"   shift, and go to state 654
    "?."   shift, and go to state 655
    "?["   shift, and go to state 656
    "<|"   shift, and go to state 657
    "|>"   shift, and go to state 658
    "<<<"  shift, and go to state 659
    ">>>"  shift, and go to state 660
    "&&"   shift, and go to state 661
    "||"   shift, and go to state 662
    "^^"   shift, and go to state 663
    ".."   shift, and go to state 664
    '?'    shift, and go to state 665
    '|'    shift, and go to state 666
    '^'    shift, and go to state 667
    '&'    shift, and go to state 668
    '<'    shift, and go to state 669
    '>'    shift, and go to state 670
    '-'    shift, and go to state 671
    '+'    shift, and go to state 672
    '*'    shift, and go to state 673
    '/'    shift, and go to state 674
    '%'    shift, and go to state 675
    '.'    shift, and go to state 676
    '['    shift, and go to state 677
    ')'    shift, and go to state 1336


State 1283

  336 expr_method_call: expr . "->" "name" '(' ')'
  337                 | expr . "->" "name" '(' expr_list ')'
  347 expr_field: expr . '.' "name"
  348           | expr . '.' '.' "name"
  349           | expr . '.' "name" '(' ')'
  350           | expr . '.' "name" '(' expr_list ')'
  353           | expr . '.' $@17 error $@18
  373 expr: expr . "<<" expr
  374     | expr . ">>" expr
  375     | expr . "<<<" expr
  376     | expr . ">>>" expr
  377     | expr . '+' expr
  378     | expr . '-' expr
  379     | expr . '*' expr
  380     | expr . '/' expr
  381     | expr . '%' expr
  382     | expr . '<' expr
  383     | expr . '>' expr
  384     | expr . "==" expr
  385     | expr . "!=" expr
  386     | expr . "<=" expr
  387     | expr . ">=" expr
  388     | expr . '&' expr
  389     | expr . '|' expr
  390     | expr . '^' expr
  391     | expr . "&&" expr
  392     | expr . "||" expr
  393     | expr . "^^" expr
  394     | expr . ".." expr
  397     | expr . "++"
  398     | expr . "--"
  400     | expr . '[' expr ']'
  401     | expr . '.' '[' expr ']'
  402     | expr . "?[" expr ']'
  403     | expr . '.' "?[" expr ']'
  404     | expr . "?." "name"
  405     | expr . '.' "?." "name"
  413     | expr . "??" expr
  414     | expr . '?' expr ':' expr
  417     | expr . "is" "type" '<' $@19 type_declaration_no_options '>' $@20
  418     | expr . "is" basic_type_declaration
  419     | expr . "is" "name"
  420     | expr . "as" "name"
  423     | expr . "as" "type" '<' $@21 type_declaration '>' $@22
  424     | expr . "as" basic_type_declaration
  425     | expr . '?' "as" "name"
  428     | expr . '?' "as" "type" '<' $@23 type_declaration '>' $@24
  429     | expr . '?' "as" basic_type_declaration
  437     | expr . "<|" expr
  438     | expr . "|>" expr
  439     | expr . "|>" basic_type_declaration
  449 expr_mtag: expr . '.' "$f" '(' expr ')'
  450          | expr . "?." "$f" '(' expr ')'
  451          | expr . '.' '.' "$f" '(' expr ')'
  452          | expr . '.' "?." "$f" '(' expr ')'
  453          | expr . "as" "$f" '(' expr ')'
  454          | expr . '?' "as" "$f" '(' expr ')'
  455          | expr . "is" "$f" '(' expr ')'
  706 make_struct_fields: make_struct_fields ',' "name" ":=" expr .

    "is"   shift, and go to state 643
    "as"   shift, and go to state 644
    "<<"   shift, and go to state 645
    ">>"   shift, and go to state 646
    "++"   shift, and go to state 647
    "--"   shift, and go to state 648
    "<="   shift, and go to state 649
    ">="   shift, and go to state 650
    "=="   shift, and go to state 651
    "!="   shift, and go to state 652
    "->"   shift, and go to state 653
    "??"   shift, and go to state 654
    "?."   shift, and go to state 655
    "?["   shift, and go to state 656
    "<|"   shift, and go to state 657
    "|>"   shift, and go to state 658
    "<<<"  shift, and go to state 659
    ">>>"  shift, and go to state 660
    "&&"   shift, and go to state 661
    "||"   shift, and go to state 662
    "^^"   shift, and go to state 663
    ".."   shift, and go to state 664
    '?'    shift, and go to state 665
    '|'    shift, and go to state 666
    '^'    shift, and go to state 667
    '&'    shift, and go to state 668
    '<'    shift, and go to state 669
    '>'    shift, and go to state 670
    '-'    shift, and go to state 671
    '+'    shift, and go to state 672
    '*'    shift, and go to state 673
    '/'    shift, and go to state 674
    '%'    shift, and go to state 675
    '.'    shift, and go to state 676
    '['    shift, and go to state 677

    $default  reduce using rule 706 (make_struct_fields)


State 1284

  336 expr_method_call: expr . "->" "name" '(' ')'
  337                 | expr . "->" "name" '(' expr_list ')'
  347 expr_field: expr . '.' "name"
  348           | expr . '.' '.' "name"
  349           | expr . '.' "name" '(' ')'
  350           | expr . '.' "name" '(' expr_list ')'
  353           | expr . '.' $@17 error $@18
  373 expr: expr . "<<" expr
  374     | expr . ">>" expr
  375     | expr . "<<<" expr
  376     | expr . ">>>" expr
  377     | expr . '+' expr
  378     | expr . '-' expr
  379     | expr . '*' expr
  380     | expr . '/' expr
  381     | expr . '%' expr
  382     | expr . '<' expr
  383     | expr . '>' expr
  384     | expr . "==" expr
  385     | expr . "!=" expr
  386     | expr . "<=" expr
  387     | expr . ">=" expr
  388     | expr . '&' expr
  389     | expr . '|' expr
  390     | expr . '^' expr
  391     | expr . "&&" expr
  392     | expr . "||" expr
  393     | expr . "^^" expr
  394     | expr . ".." expr
  397     | expr . "++"
  398     | expr . "--"
  400     | expr . '[' expr ']'
  401     | expr . '.' '[' expr ']'
  402     | expr . "?[" expr ']'
  403     | expr . '.' "?[" expr ']'
  404     | expr . "?." "name"
  405     | expr . '.' "?." "name"
  413     | expr . "??" expr
  414     | expr . '?' expr ':' expr
  417     | expr . "is" "type" '<' $@19 type_declaration_no_options '>' $@20
  418     | expr . "is" basic_type_declaration
  419     | expr . "is" "name"
  420     | expr . "as" "name"
  423     | expr . "as" "type" '<' $@21 type_declaration '>' $@22
  424     | expr . "as" basic_type_declaration
  425     | expr . '?' "as" "name"
  428     | expr . '?' "as" "type" '<' $@23 type_declaration '>' $@24
  429     | expr . '?' "as" basic_type_declaration
  437     | expr . "<|" expr
  438     | expr . "|>" expr
  439     | expr . "|>" basic_type_declaration
  449 expr_mtag: expr . '.' "$f" '(' expr ')'
  450          | expr . "?." "$f" '(' expr ')'
  451          | expr . '.' '.' "$f" '(' expr ')'
  452          | expr . '.' "?." "$f" '(' expr ')'
  453          | expr . "as" "$f" '(' expr ')'
  454          | expr . '?' "as" "$f" '(' expr ')'
  455          | expr . "is" "$f" '(' expr ')'
  705 make_struct_fields: make_struct_fields ',' "name" copy_or_move expr .

    "is"   shift, and go to state 643
    "as"   shift, and go to state 644
    "<<"   shift, and go to state 645
    ">>"   shift, and go to state 646
    "++"   shift, and go to state 647
    "--"   shift, and go to state 648
    "<="   shift, and go to state 649
    ">="   shift, and go to state 650
    "=="   shift, and go to state 651
    "!="   shift, and go to state 652
    "->"   shift, and go to state 653
    "??"   shift, and go to state 654
    "?."   shift, and go to state 655
    "?["   shift, and go to state 656
    "<|"   shift, and go to state 657
    "|>"   shift, and go to state 658
    "<<<"  shift, and go to state 659
    ">>>"  shift, and go to state 660
    "&&"   shift, and go to state 661
    "||"   shift, and go to state 662
    "^^"   shift, and go to state 663
    ".."   shift, and go to state 664
    '?'    shift, and go to state 665
    '|'    shift, and go to state 666
    '^'    shift, and go to state 667
    '&'    shift, and go to state 668
    '<'    shift, and go to state 669
    '>'    shift, and go to state 670
    '-'    shift, and go to state 671
    '+'    shift, and go to state 672
    '*'    shift, and go to state 673
    '/'    shift, and go to state 674
    '%'    shift, and go to state 675
    '.'    shift, and go to state 676
    '['    shift, and go to state 677

    $default  reduce using rule 705 (make_struct_fields)


State 1285

  302 capture_list: capture_list ',' capture_entry .

    $default  reduce using rule 302 (capture_list)


State 1286

  304 optional_capture_list: '[' '[' capture_list ']' ']' .

    $default  reduce using rule 304 (optional_capture_list)


State 1287

  293 block_or_simple_block: "=>" "<-" . expr

    "struct"                          shift, and go to state 408
    "class"                           shift, and go to state 409
    "true"                            shift, and go to state 410
    "false"                           shift, and go to state 411
    "new"                             shift, and go to state 412
    "typeinfo"                        shift, and go to state 413
    "type"                            shift, and go to state 414
    "array"                           shift, and go to state 415
    "null"                            shift, and go to state 416
    "table"                           shift, and go to state 417
    "deref"                           shift, and go to state 418
    "cast"                            shift, and go to state 419
    "upcast"                          shift, and go to state 420
    "addr"                            shift, and go to state 421
    "reinterpret"                     shift, and go to state 422
    "fixed_array"                     shift, and go to state 423
    "default"                         shift, and go to state 424
    "bool"                            shift, and go to state 222
    "void"                            shift, and go to state 223
    "string"                          shift, and go to state 224
    "int"                             shift, and go to state 226
    "int2"                            shift, and go to state 227
    "int3"                            shift, and go to state 228
    "int4"                            shift, and go to state 229
    "uint"                            shift, and go to state 230
    "bitfield"                        shift, and go to state 425
    "uint2"                           shift, and go to state 232
    "uint3"                           shift, and go to state 233
    "uint4"                           shift, and go to state 234
    "float"                           shift, and go to state 235
    "float2"                          shift, and go to state 236
    "float3"                          shift, and go to state 237
    "float4"                          shift, and go to state 238
    "range"                           shift, and go to state 239
    "urange"                          shift, and go to state 240
    "range64"                         shift, and go to state 241
    "urange64"                        shift, and go to state 242
    "int64"                           shift, and go to state 244
    "uint64"                          shift, and go to state 245
    "double"                          shift, and go to state 246
    "int8"                            shift, and go to state 249
    "uint8"                           shift, and go to state 250
    "int16"                           shift, and go to state 251
    "uint16"                          shift, and go to state 252
    "tuple"                           shift, and go to state 426
    "variant"                         shift, and go to state 427
    "generator"                       shift, and go to state 428
    "++"                              shift, and go to state 429
    "--"                              shift, and go to state 430
    "::"                              shift, and go to state 55
    "$$"                              shift, and go to state 431
    "$i"                              shift, and go to state 432
    "$v"                              shift, and go to state 433
    "$b"                              shift, and go to state 434
    "$a"                              shift, and go to state 435
    "$c"                              shift, and go to state 436
    "..."                             shift, and go to state 437
    "integer constant"                shift, and go to state 438
    "long integer constant"           shift, and go to state 439
    "unsigned integer constant"       shift, and go to state 440
    "unsigned long integer constant"  shift, and go to state 441
    "unsigned int8 constant"          shift, and go to state 442
    "floating point constant"         shift, and go to state 443
    "double constant"                 shift, and go to state 444
    "name"                            shift, and go to state 56
    "start of the string"             shift, and go to state 445
    "begin of code block"             shift, and go to state 446
    '-'                               shift, and go to state 447
    '+'                               shift, and go to state 448
    '*'                               shift, and go to state 449
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 450
    '!'                               shift, and go to state 451
    '['                               shift, and go to state 452
    '('                               shift, and go to state 453
    '$'                               shift, and go to state 454
    '@'                               shift, and go to state 455

    string_builder          go to state 456
    expr_reader             go to state 457
    expr_call_pipe          go to state 458
    name_in_namespace       go to state 459
    expr_new                go to state 460
    expr_cast               go to state 461
    expr_type_decl          go to state 462
    expr_type_info          go to state 463
    block_or_lambda         go to state 464
    expr_full_block         go to state 465
    expr_numeric_const      go to state 466
    expr_named_call         go to state 467
    expr_method_call        go to state 468
    func_addr_expr          go to state 469
    expr_field              go to state 470
    expr_call               go to state 471
    expr                    go to state 1337
    expr_mtag               go to state 473
    basic_type_declaration  go to state 474
    make_decl               go to state 475
    make_struct_decl        go to state 476
    make_tuple_call         go to state 477
    make_dim_decl           go to state 478
    make_table_decl         go to state 479
    array_comprehension     go to state 480


State 1288

  292 block_or_simple_block: "=>" expr .
  336 expr_method_call: expr . "->" "name" '(' ')'
  337                 | expr . "->" "name" '(' expr_list ')'
  347 expr_field: expr . '.' "name"
  348           | expr . '.' '.' "name"
  349           | expr . '.' "name" '(' ')'
  350           | expr . '.' "name" '(' expr_list ')'
  353           | expr . '.' $@17 error $@18
  373 expr: expr . "<<" expr
  374     | expr . ">>" expr
  375     | expr . "<<<" expr
  376     | expr . ">>>" expr
  377     | expr . '+' expr
  378     | expr . '-' expr
  379     | expr . '*' expr
  380     | expr . '/' expr
  381     | expr . '%' expr
  382     | expr . '<' expr
  383     | expr . '>' expr
  384     | expr . "==" expr
  385     | expr . "!=" expr
  386     | expr . "<=" expr
  387     | expr . ">=" expr
  388     | expr . '&' expr
  389     | expr . '|' expr
  390     | expr . '^' expr
  391     | expr . "&&" expr
  392     | expr . "||" expr
  393     | expr . "^^" expr
  394     | expr . ".." expr
  397     | expr . "++"
  398     | expr . "--"
  400     | expr . '[' expr ']'
  401     | expr . '.' '[' expr ']'
  402     | expr . "?[" expr ']'
  403     | expr . '.' "?[" expr ']'
  404     | expr . "?." "name"
  405     | expr . '.' "?." "name"
  413     | expr . "??" expr
  414     | expr . '?' expr ':' expr
  417     | expr . "is" "type" '<' $@19 type_declaration_no_options '>' $@20
  418     | expr . "is" basic_type_declaration
  419     | expr . "is" "name"
  420     | expr . "as" "name"
  423     | expr . "as" "type" '<' $@21 type_declaration '>' $@22
  424     | expr . "as" basic_type_declaration
  425     | expr . '?' "as" "name"
  428     | expr . '?' "as" "type" '<' $@23 type_declaration '>' $@24
  429     | expr . '?' "as" basic_type_declaration
  437     | expr . "<|" expr
  438     | expr . "|>" expr
  439     | expr . "|>" basic_type_declaration
  449 expr_mtag: expr . '.' "$f" '(' expr ')'
  450          | expr . "?." "$f" '(' expr ')'
  451          | expr . '.' '.' "$f" '(' expr ')'
  452          | expr . '.' "?." "$f" '(' expr ')'
  453          | expr . "as" "$f" '(' expr ')'
  454          | expr . '?' "as" "$f" '(' expr ')'
  455          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 643
    "as"   shift, and go to state 644
    "<<"   shift, and go to state 645
    ">>"   shift, and go to state 646
    "++"   shift, and go to state 647
    "--"   shift, and go to state 648
    "<="   shift, and go to state 649
    ">="   shift, and go to state 650
    "=="   shift, and go to state 651
    "!="   shift, and go to state 652
    "->"   shift, and go to state 653
    "??"   shift, and go to state 654
    "?."   shift, and go to state 655
    "?["   shift, and go to state 656
    "<|"   shift, and go to state 657
    "|>"   shift, and go to state 658
    "<<<"  shift, and go to state 659
    ">>>"  shift, and go to state 660
    "&&"   shift, and go to state 661
    "||"   shift, and go to state 662
    "^^"   shift, and go to state 663
    '?'    shift, and go to state 665
    '|'    shift, and go to state 666
    '^'    shift, and go to state 667
    '&'    shift, and go to state 668
    '<'    shift, and go to state 669
    '>'    shift, and go to state 670
    '-'    shift, and go to state 671
    '+'    shift, and go to state 672
    '*'    shift, and go to state 673
    '/'    shift, and go to state 674
    '%'    shift, and go to state 675
    '.'    shift, and go to state 676
    '['    shift, and go to state 677

    ".."  error (nonassociative)

    $default  reduce using rule 292 (block_or_simple_block)


State 1289

  306 expr_full_block_assumed_piped: block_or_lambda optional_annotation_list optional_capture_list optional_function_argument_list optional_function_type expression_block .

    $default  reduce using rule 306 (expr_full_block_assumed_piped)


State 1290

  417 expr: expr "is" "type" '<' $@19 type_declaration_no_options '>' . $@20

    $default  reduce using rule 416 ($@20)

    $@20  go to state 1338


State 1291

  423 expr: expr "as" "type" '<' $@21 type_declaration '>' . $@22

    $default  reduce using rule 422 ($@22)

    $@22  go to state 1339


State 1292

  428 expr: expr '?' "as" "type" '<' $@23 type_declaration . '>' $@24
  684 type_declaration: type_declaration . '|' type_declaration_no_options
  685                 | type_declaration . '|' '#'

    '|'  shift, and go to state 372
    '>'  shift, and go to state 1340


State 1293

  454 expr_mtag: expr '?' "as" "$f" '(' expr ')' .

    $default  reduce using rule 454 (expr_mtag)


State 1294

  452 expr_mtag: expr '.' "?." "$f" '(' expr ')' .

    $default  reduce using rule 452 (expr_mtag)


State 1295

  451 expr_mtag: expr '.' '.' "$f" '(' expr ')' .

    $default  reduce using rule 451 (expr_mtag)


State 1296

  630 type_declaration_no_options_no_dim: '$' name_in_namespace '<' $@39 type_declaration_no_options_list '>' '(' optional_expr_list ')' .

    $default  reduce using rule 630 (type_declaration_no_options_no_dim)


State 1297

   70 expression_for_loop: "for" '(' variable_name_with_pos_list "in" expr_list ')' expression_block .

    $default  reduce using rule 70 (expression_for_loop)


State 1298

   57 expression_else: "else" expression_block .

    $default  reduce using rule 57 (expression_else)


State 1299

   58 expression_else: elif_or_static_elif '(' . expr ')' expression_block expression_else

    "struct"                          shift, and go to state 408
    "class"                           shift, and go to state 409
    "true"                            shift, and go to state 410
    "false"                           shift, and go to state 411
    "new"                             shift, and go to state 412
    "typeinfo"                        shift, and go to state 413
    "type"                            shift, and go to state 414
    "array"                           shift, and go to state 415
    "null"                            shift, and go to state 416
    "table"                           shift, and go to state 417
    "deref"                           shift, and go to state 418
    "cast"                            shift, and go to state 419
    "upcast"                          shift, and go to state 420
    "addr"                            shift, and go to state 421
    "reinterpret"                     shift, and go to state 422
    "fixed_array"                     shift, and go to state 423
    "default"                         shift, and go to state 424
    "bool"                            shift, and go to state 222
    "void"                            shift, and go to state 223
    "string"                          shift, and go to state 224
    "int"                             shift, and go to state 226
    "int2"                            shift, and go to state 227
    "int3"                            shift, and go to state 228
    "int4"                            shift, and go to state 229
    "uint"                            shift, and go to state 230
    "bitfield"                        shift, and go to state 425
    "uint2"                           shift, and go to state 232
    "uint3"                           shift, and go to state 233
    "uint4"                           shift, and go to state 234
    "float"                           shift, and go to state 235
    "float2"                          shift, and go to state 236
    "float3"                          shift, and go to state 237
    "float4"                          shift, and go to state 238
    "range"                           shift, and go to state 239
    "urange"                          shift, and go to state 240
    "range64"                         shift, and go to state 241
    "urange64"                        shift, and go to state 242
    "int64"                           shift, and go to state 244
    "uint64"                          shift, and go to state 245
    "double"                          shift, and go to state 246
    "int8"                            shift, and go to state 249
    "uint8"                           shift, and go to state 250
    "int16"                           shift, and go to state 251
    "uint16"                          shift, and go to state 252
    "tuple"                           shift, and go to state 426
    "variant"                         shift, and go to state 427
    "generator"                       shift, and go to state 428
    "++"                              shift, and go to state 429
    "--"                              shift, and go to state 430
    "::"                              shift, and go to state 55
    "$$"                              shift, and go to state 431
    "$i"                              shift, and go to state 432
    "$v"                              shift, and go to state 433
    "$b"                              shift, and go to state 434
    "$a"                              shift, and go to state 435
    "$c"                              shift, and go to state 436
    "..."                             shift, and go to state 437
    "integer constant"                shift, and go to state 438
    "long integer constant"           shift, and go to state 439
    "unsigned integer constant"       shift, and go to state 440
    "unsigned long integer constant"  shift, and go to state 441
    "unsigned int8 constant"          shift, and go to state 442
    "floating point constant"         shift, and go to state 443
    "double constant"                 shift, and go to state 444
    "name"                            shift, and go to state 56
    "start of the string"             shift, and go to state 445
    "begin of code block"             shift, and go to state 446
    '-'                               shift, and go to state 447
    '+'                               shift, and go to state 448
    '*'                               shift, and go to state 449
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 450
    '!'                               shift, and go to state 451
    '['                               shift, and go to state 452
    '('                               shift, and go to state 453
    '$'                               shift, and go to state 454
    '@'                               shift, and go to state 455

    string_builder          go to state 456
    expr_reader             go to state 457
    expr_call_pipe          go to state 458
    name_in_namespace       go to state 459
    expr_new                go to state 460
    expr_cast               go to state 461
    expr_type_decl          go to state 462
    expr_type_info          go to state 463
    block_or_lambda         go to state 464
    expr_full_block         go to state 465
    expr_numeric_const      go to state 466
    expr_named_call         go to state 467
    expr_method_call        go to state 468
    func_addr_expr          go to state 469
    expr_field              go to state 470
    expr_call               go to state 471
    expr                    go to state 1341
    expr_mtag               go to state 473
    basic_type_declaration  go to state 474
    make_decl               go to state 475
    make_struct_decl        go to state 476
    make_tuple_call         go to state 477
    make_dim_decl           go to state 478
    make_table_decl         go to state 479
    array_comprehension     go to state 480


State 1300

   62 expression_else_one_liner: "else" expression_if_one_liner .

    $default  reduce using rule 62 (expression_else_one_liner)


State 1301

   66 expression_if_one_liner: expression_break .

    $default  reduce using rule 66 (expression_if_one_liner)


State 1302

   67 expression_if_one_liner: expression_continue .

    $default  reduce using rule 67 (expression_if_one_liner)


State 1303

   64 expression_if_one_liner: expression_return .

    $default  reduce using rule 64 (expression_if_one_liner)


State 1304

   65 expression_if_one_liner: expression_yield_no_pipe .

    $default  reduce using rule 65 (expression_if_one_liner)


State 1305

   63 expression_if_one_liner: expr .
  336 expr_method_call: expr . "->" "name" '(' ')'
  337                 | expr . "->" "name" '(' expr_list ')'
  347 expr_field: expr . '.' "name"
  348           | expr . '.' '.' "name"
  349           | expr . '.' "name" '(' ')'
  350           | expr . '.' "name" '(' expr_list ')'
  353           | expr . '.' $@17 error $@18
  373 expr: expr . "<<" expr
  374     | expr . ">>" expr
  375     | expr . "<<<" expr
  376     | expr . ">>>" expr
  377     | expr . '+' expr
  378     | expr . '-' expr
  379     | expr . '*' expr
  380     | expr . '/' expr
  381     | expr . '%' expr
  382     | expr . '<' expr
  383     | expr . '>' expr
  384     | expr . "==" expr
  385     | expr . "!=" expr
  386     | expr . "<=" expr
  387     | expr . ">=" expr
  388     | expr . '&' expr
  389     | expr . '|' expr
  390     | expr . '^' expr
  391     | expr . "&&" expr
  392     | expr . "||" expr
  393     | expr . "^^" expr
  394     | expr . ".." expr
  397     | expr . "++"
  398     | expr . "--"
  400     | expr . '[' expr ']'
  401     | expr . '.' '[' expr ']'
  402     | expr . "?[" expr ']'
  403     | expr . '.' "?[" expr ']'
  404     | expr . "?." "name"
  405     | expr . '.' "?." "name"
  413     | expr . "??" expr
  414     | expr . '?' expr ':' expr
  417     | expr . "is" "type" '<' $@19 type_declaration_no_options '>' $@20
  418     | expr . "is" basic_type_declaration
  419     | expr . "is" "name"
  420     | expr . "as" "name"
  423     | expr . "as" "type" '<' $@21 type_declaration '>' $@22
  424     | expr . "as" basic_type_declaration
  425     | expr . '?' "as" "name"
  428     | expr . '?' "as" "type" '<' $@23 type_declaration '>' $@24
  429     | expr . '?' "as" basic_type_declaration
  437     | expr . "<|" expr
  438     | expr . "|>" expr
  439     | expr . "|>" basic_type_declaration
  449 expr_mtag: expr . '.' "$f" '(' expr ')'
  450          | expr . "?." "$f" '(' expr ')'
  451          | expr . '.' '.' "$f" '(' expr ')'
  452          | expr . '.' "?." "$f" '(' expr ')'
  453          | expr . "as" "$f" '(' expr ')'
  454          | expr . '?' "as" "$f" '(' expr ')'
  455          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 643
    "as"   shift, and go to state 644
    "<<"   shift, and go to state 645
    ">>"   shift, and go to state 646
    "++"   shift, and go to state 647
    "--"   shift, and go to state 648
    "<="   shift, and go to state 649
    ">="   shift, and go to state 650
    "=="   shift, and go to state 651
    "!="   shift, and go to state 652
    "->"   shift, and go to state 653
    "??"   shift, and go to state 654
    "?."   shift, and go to state 655
    "?["   shift, and go to state 656
    "<|"   shift, and go to state 657
    "|>"   shift, and go to state 658
    "<<<"  shift, and go to state 659
    ">>>"  shift, and go to state 660
    "&&"   shift, and go to state 661
    "||"   shift, and go to state 662
    "^^"   shift, and go to state 663
    ".."   shift, and go to state 664
    '?'    shift, and go to state 665
    '|'    shift, and go to state 666
    '^'    shift, and go to state 667
    '&'    shift, and go to state 668
    '<'    shift, and go to state 669
    '>'    shift, and go to state 670
    '-'    shift, and go to state 671
    '+'    shift, and go to state 672
    '*'    shift, and go to state 673
    '/'    shift, and go to state 674
    '%'    shift, and go to state 675
    '.'    shift, and go to state 676
    '['    shift, and go to state 677

    $default  reduce using rule 63 (expression_if_one_liner)


State 1306

   69 expression_if_then_else: expression_if_one_liner "if" '(' expr ')' expression_else_one_liner "end of expression" .

    $default  reduce using rule 69 (expression_if_then_else)


State 1307

  270 tuple_expansion_variable_declaration: '(' tuple_expansion ')' ':' type_declaration_no_options . copy_or_move_or_clone expr "end of expression"

    "<-"  shift, and go to state 578
    ":="  shift, and go to state 579
    '='   shift, and go to state 580

    copy_or_move_or_clone  go to state 1342


State 1308

  271 tuple_expansion_variable_declaration: '(' tuple_expansion ')' optional_ref copy_or_move_or_clone . expr "end of expression"

    "struct"                          shift, and go to state 408
    "class"                           shift, and go to state 409
    "true"                            shift, and go to state 410
    "false"                           shift, and go to state 411
    "new"                             shift, and go to state 412
    "typeinfo"                        shift, and go to state 413
    "type"                            shift, and go to state 414
    "array"                           shift, and go to state 415
    "null"                            shift, and go to state 416
    "table"                           shift, and go to state 417
    "deref"                           shift, and go to state 418
    "cast"                            shift, and go to state 419
    "upcast"                          shift, and go to state 420
    "addr"                            shift, and go to state 421
    "reinterpret"                     shift, and go to state 422
    "fixed_array"                     shift, and go to state 423
    "default"                         shift, and go to state 424
    "bool"                            shift, and go to state 222
    "void"                            shift, and go to state 223
    "string"                          shift, and go to state 224
    "int"                             shift, and go to state 226
    "int2"                            shift, and go to state 227
    "int3"                            shift, and go to state 228
    "int4"                            shift, and go to state 229
    "uint"                            shift, and go to state 230
    "bitfield"                        shift, and go to state 425
    "uint2"                           shift, and go to state 232
    "uint3"                           shift, and go to state 233
    "uint4"                           shift, and go to state 234
    "float"                           shift, and go to state 235
    "float2"                          shift, and go to state 236
    "float3"                          shift, and go to state 237
    "float4"                          shift, and go to state 238
    "range"                           shift, and go to state 239
    "urange"                          shift, and go to state 240
    "range64"                         shift, and go to state 241
    "urange64"                        shift, and go to state 242
    "int64"                           shift, and go to state 244
    "uint64"                          shift, and go to state 245
    "double"                          shift, and go to state 246
    "int8"                            shift, and go to state 249
    "uint8"                           shift, and go to state 250
    "int16"                           shift, and go to state 251
    "uint16"                          shift, and go to state 252
    "tuple"                           shift, and go to state 426
    "variant"                         shift, and go to state 427
    "generator"                       shift, and go to state 428
    "++"                              shift, and go to state 429
    "--"                              shift, and go to state 430
    "::"                              shift, and go to state 55
    "$$"                              shift, and go to state 431
    "$i"                              shift, and go to state 432
    "$v"                              shift, and go to state 433
    "$b"                              shift, and go to state 434
    "$a"                              shift, and go to state 435
    "$c"                              shift, and go to state 436
    "..."                             shift, and go to state 437
    "integer constant"                shift, and go to state 438
    "long integer constant"           shift, and go to state 439
    "unsigned integer constant"       shift, and go to state 440
    "unsigned long integer constant"  shift, and go to state 441
    "unsigned int8 constant"          shift, and go to state 442
    "floating point constant"         shift, and go to state 443
    "double constant"                 shift, and go to state 444
    "name"                            shift, and go to state 56
    "start of the string"             shift, and go to state 445
    "begin of code block"             shift, and go to state 446
    '-'                               shift, and go to state 447
    '+'                               shift, and go to state 448
    '*'                               shift, and go to state 449
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 450
    '!'                               shift, and go to state 451
    '['                               shift, and go to state 452
    '('                               shift, and go to state 453
    '$'                               shift, and go to state 454
    '@'                               shift, and go to state 455

    string_builder          go to state 456
    expr_reader             go to state 457
    expr_call_pipe          go to state 458
    name_in_namespace       go to state 459
    expr_new                go to state 460
    expr_cast               go to state 461
    expr_type_decl          go to state 462
    expr_type_info          go to state 463
    block_or_lambda         go to state 464
    expr_full_block         go to state 465
    expr_numeric_const      go to state 466
    expr_named_call         go to state 467
    expr_method_call        go to state 468
    func_addr_expr          go to state 469
    expr_field              go to state 470
    expr_call               go to state 471
    expr                    go to state 1343
    expr_mtag               go to state 473
    basic_type_declaration  go to state 474
    make_decl               go to state 475
    make_struct_decl        go to state 476
    make_tuple_call         go to state 477
    make_dim_decl           go to state 478
    make_table_decl         go to state 479
    array_comprehension     go to state 480


State 1309

  474 struct_variable_declaration_list: struct_variable_declaration_list optional_annotation_list "def" optional_public_or_private_member_variable "abstract" optional_constant $@26 . function_declaration_header "end of expression"

    "operator"  shift, and go to state 171
    "bool"      shift, and go to state 172
    "string"    shift, and go to state 173
    "int"       shift, and go to state 174
    "int2"      shift, and go to state 175
    "int3"      shift, and go to state 176
    "int4"      shift, and go to state 177
    "uint"      shift, and go to state 178
    "uint2"     shift, and go to state 179
    "uint3"     shift, and go to state 180
    "uint4"     shift, and go to state 181
    "float"     shift, and go to state 182
    "float2"    shift, and go to state 183
    "float3"    shift, and go to state 184
    "float4"    shift, and go to state 185
    "range"     shift, and go to state 186
    "urange"    shift, and go to state 187
    "range64"   shift, and go to state 188
    "urange64"  shift, and go to state 189
    "int64"     shift, and go to state 190
    "uint64"    shift, and go to state 191
    "double"    shift, and go to state 192
    "int8"      shift, and go to state 193
    "uint8"     shift, and go to state 194
    "int16"     shift, and go to state 195
    "uint16"    shift, and go to state 196
    "++"        shift, and go to state 197
    "--"        shift, and go to state 198
    "name"      shift, and go to state 199

    function_name                go to state 200
    function_declaration_header  go to state 1344


State 1310

  476 struct_variable_declaration_list: struct_variable_declaration_list optional_annotation_list "def" optional_public_or_private_member_variable optional_static_member_variable optional_override optional_constant . $@27 function_declaration_header expression_block

    $default  reduce using rule 475 ($@27)

    $@27  go to state 1345


State 1311

  469 structure_variable_declaration: optional_field_annotation optional_static_member_variable optional_override optional_public_or_private_member_variable variable_declaration .

    $default  reduce using rule 469 (structure_variable_declaration)


State 1312

  718 make_struct_decl: "struct" '<' $@73 type_declaration_no_options '>' $@74 '(' use_initializer . make_struct_dim ')'

    "$f"    shift, and go to state 828
    "name"  shift, and go to state 1092

    make_struct_fields  go to state 1324
    make_struct_dim     go to state 1346


State 1313

  721 make_struct_decl: "class" '<' $@75 type_declaration_no_options '>' $@76 '(' use_initializer . make_struct_dim ')'

    "$f"    shift, and go to state 828
    "name"  shift, and go to state 1092

    make_struct_fields  go to state 1324
    make_struct_dim     go to state 1347


State 1314

  288 expr_type_info: "typeinfo" '(' name_in_namespace '<' "name" "end of expression" "name" '>' . expr ')'

    "struct"                          shift, and go to state 408
    "class"                           shift, and go to state 409
    "true"                            shift, and go to state 410
    "false"                           shift, and go to state 411
    "new"                             shift, and go to state 412
    "typeinfo"                        shift, and go to state 413
    "type"                            shift, and go to state 414
    "array"                           shift, and go to state 415
    "null"                            shift, and go to state 416
    "table"                           shift, and go to state 417
    "deref"                           shift, and go to state 418
    "cast"                            shift, and go to state 419
    "upcast"                          shift, and go to state 420
    "addr"                            shift, and go to state 421
    "reinterpret"                     shift, and go to state 422
    "fixed_array"                     shift, and go to state 423
    "default"                         shift, and go to state 424
    "bool"                            shift, and go to state 222
    "void"                            shift, and go to state 223
    "string"                          shift, and go to state 224
    "int"                             shift, and go to state 226
    "int2"                            shift, and go to state 227
    "int3"                            shift, and go to state 228
    "int4"                            shift, and go to state 229
    "uint"                            shift, and go to state 230
    "bitfield"                        shift, and go to state 425
    "uint2"                           shift, and go to state 232
    "uint3"                           shift, and go to state 233
    "uint4"                           shift, and go to state 234
    "float"                           shift, and go to state 235
    "float2"                          shift, and go to state 236
    "float3"                          shift, and go to state 237
    "float4"                          shift, and go to state 238
    "range"                           shift, and go to state 239
    "urange"                          shift, and go to state 240
    "range64"                         shift, and go to state 241
    "urange64"                        shift, and go to state 242
    "int64"                           shift, and go to state 244
    "uint64"                          shift, and go to state 245
    "double"                          shift, and go to state 246
    "int8"                            shift, and go to state 249
    "uint8"                           shift, and go to state 250
    "int16"                           shift, and go to state 251
    "uint16"                          shift, and go to state 252
    "tuple"                           shift, and go to state 426
    "variant"                         shift, and go to state 427
    "generator"                       shift, and go to state 428
    "++"                              shift, and go to state 429
    "--"                              shift, and go to state 430
    "::"                              shift, and go to state 55
    "$$"                              shift, and go to state 431
    "$i"                              shift, and go to state 432
    "$v"                              shift, and go to state 433
    "$b"                              shift, and go to state 434
    "$a"                              shift, and go to state 435
    "$c"                              shift, and go to state 436
    "..."                             shift, and go to state 437
    "integer constant"                shift, and go to state 438
    "long integer constant"           shift, and go to state 439
    "unsigned integer constant"       shift, and go to state 440
    "unsigned long integer constant"  shift, and go to state 441
    "unsigned int8 constant"          shift, and go to state 442
    "floating point constant"         shift, and go to state 443
    "double constant"                 shift, and go to state 444
    "name"                            shift, and go to state 56
    "start of the string"             shift, and go to state 445
    "begin of code block"             shift, and go to state 446
    '-'                               shift, and go to state 447
    '+'                               shift, and go to state 448
    '*'                               shift, and go to state 449
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 450
    '!'                               shift, and go to state 451
    '['                               shift, and go to state 452
    '('                               shift, and go to state 453
    '$'                               shift, and go to state 454
    '@'                               shift, and go to state 455

    string_builder          go to state 456
    expr_reader             go to state 457
    expr_call_pipe          go to state 458
    name_in_namespace       go to state 459
    expr_new                go to state 460
    expr_cast               go to state 461
    expr_type_decl          go to state 462
    expr_type_info          go to state 463
    block_or_lambda         go to state 464
    expr_full_block         go to state 465
    expr_numeric_const      go to state 466
    expr_named_call         go to state 467
    expr_method_call        go to state 468
    func_addr_expr          go to state 469
    expr_field              go to state 470
    expr_call               go to state 471
    expr                    go to state 1348
    expr_mtag               go to state 473
    basic_type_declaration  go to state 474
    make_decl               go to state 475
    make_struct_decl        go to state 476
    make_tuple_call         go to state 477
    make_dim_decl           go to state 478
    make_table_decl         go to state 479
    array_comprehension     go to state 480


State 1315

  287 expr_type_info: "typeinfo" '(' name_in_namespace '<' "name" '>' expr ')' .

    $default  reduce using rule 287 (expr_type_info)


State 1316

  737 make_dim_decl: "array" "struct" '<' $@83 type_declaration_no_options '>' $@84 '(' . use_initializer make_struct_dim ')'

    "uninitialized"  shift, and go to state 971

    $default  reduce using rule 714 (use_initializer)

    use_initializer  go to state 1349


State 1317

  740 make_dim_decl: "array" "tuple" '<' $@85 type_declaration_no_options '>' $@86 '(' . use_initializer make_struct_dim ')'

    "uninitialized"  shift, and go to state 971

    $default  reduce using rule 714 (use_initializer)

    use_initializer  go to state 1350


State 1318

  743 make_dim_decl: "array" "variant" '<' $@87 type_declaration_no_options '>' $@88 '(' . make_struct_dim ')'

    "$f"    shift, and go to state 828
    "name"  shift, and go to state 1092

    make_struct_fields  go to state 1324
    make_struct_dim     go to state 1351


State 1319

  290 expr_list: expr_list . ',' expr
  747 make_dim_decl: "array" '<' $@89 type_declaration_no_options '>' $@90 '(' expr_list . optional_comma ')'

    ','  shift, and go to state 820

    $default  reduce using rule 760 (optional_comma)

    optional_comma  go to state 1352


State 1320

  753 expr_map_tuple_list: expr_map_tuple_list . ',' make_map_tuple
  757 make_table_decl: "table" '<' type_declaration_no_options "end of expression" type_declaration_no_options '>' '(' expr_map_tuple_list . optional_comma ')'

    ','  shift, and go to state 816

    $default  reduce using rule 760 (optional_comma)

    optional_comma  go to state 1353


State 1321

  756 make_table_decl: "table" '<' type_declaration_no_options '>' '(' expr_map_tuple_list optional_comma ')' .

    $default  reduce using rule 756 (make_table_decl)


State 1322

  290 expr_list: expr_list . ',' expr
  751 make_dim_decl: "fixed_array" '<' $@91 type_declaration_no_options '>' $@92 '(' expr_list . optional_comma ')'

    ','  shift, and go to state 820

    $default  reduce using rule 760 (optional_comma)

    optional_comma  go to state 1354


State 1323

  733 make_tuple_call: "tuple" '<' $@81 type_declaration_no_options '>' $@82 '(' use_initializer . make_struct_dim ')'

    "$f"    shift, and go to state 828
    "name"  shift, and go to state 1092

    make_struct_fields  go to state 1324
    make_struct_dim     go to state 1355


State 1324

  705 make_struct_fields: make_struct_fields . ',' "name" copy_or_move expr
  706                   | make_struct_fields . ',' "name" ":=" expr
  709                   | make_struct_fields . ',' "$f" '(' expr ')' copy_or_move expr
  710                   | make_struct_fields . ',' "$f" '(' expr ')' ":=" expr
  712 make_struct_dim: make_struct_fields .

    ','  shift, and go to state 1023

    $default  reduce using rule 712 (make_struct_dim)


State 1325

  713 make_struct_dim: make_struct_dim . "end of expression" make_struct_fields
  724 make_struct_decl: "variant" '<' $@77 type_declaration_no_options '>' $@78 '(' make_struct_dim . ')'

    "end of expression"  shift, and go to state 1356
    ')'                  shift, and go to state 1357


State 1326

  412 expr: "generator" '<' type_declaration_no_options '>' optional_capture_list '(' expr ')' .

    $default  reduce using rule 412 (expr)


State 1327

  759 array_comprehension_where: "end of expression" . "where" expr

    "where"  shift, and go to state 1358


State 1328

  764 array_comprehension: "begin of code block" "for" variable_name_with_pos_list "in" expr_list "end of expression" make_map_tuple array_comprehension_where . "end of code block"

    "end of code block"  shift, and go to state 1359


State 1329

  762 array_comprehension: '[' "for" variable_name_with_pos_list "in" expr_list "end of expression" expr array_comprehension_where . ']'

    ']'  shift, and go to state 1360


State 1330

  336 expr_method_call: expr . "->" "name" '(' ')'
  337                 | expr . "->" "name" '(' expr_list ')'
  347 expr_field: expr . '.' "name"
  348           | expr . '.' '.' "name"
  349           | expr . '.' "name" '(' ')'
  350           | expr . '.' "name" '(' expr_list ')'
  353           | expr . '.' $@17 error $@18
  373 expr: expr . "<<" expr
  374     | expr . ">>" expr
  375     | expr . "<<<" expr
  376     | expr . ">>>" expr
  377     | expr . '+' expr
  378     | expr . '-' expr
  379     | expr . '*' expr
  380     | expr . '/' expr
  381     | expr . '%' expr
  382     | expr . '<' expr
  383     | expr . '>' expr
  384     | expr . "==" expr
  385     | expr . "!=" expr
  386     | expr . "<=" expr
  387     | expr . ">=" expr
  388     | expr . '&' expr
  389     | expr . '|' expr
  390     | expr . '^' expr
  391     | expr . "&&" expr
  392     | expr . "||" expr
  393     | expr . "^^" expr
  394     | expr . ".." expr
  397     | expr . "++"
  398     | expr . "--"
  400     | expr . '[' expr ']'
  401     | expr . '.' '[' expr ']'
  402     | expr . "?[" expr ']'
  403     | expr . '.' "?[" expr ']'
  404     | expr . "?." "name"
  405     | expr . '.' "?." "name"
  413     | expr . "??" expr
  414     | expr . '?' expr ':' expr
  417     | expr . "is" "type" '<' $@19 type_declaration_no_options '>' $@20
  418     | expr . "is" basic_type_declaration
  419     | expr . "is" "name"
  420     | expr . "as" "name"
  423     | expr . "as" "type" '<' $@21 type_declaration '>' $@22
  424     | expr . "as" basic_type_declaration
  425     | expr . '?' "as" "name"
  428     | expr . '?' "as" "type" '<' $@23 type_declaration '>' $@24
  429     | expr . '?' "as" basic_type_declaration
  437     | expr . "<|" expr
  438     | expr . "|>" expr
  439     | expr . "|>" basic_type_declaration
  449 expr_mtag: expr . '.' "$f" '(' expr ')'
  450          | expr . "?." "$f" '(' expr ')'
  451          | expr . '.' '.' "$f" '(' expr ')'
  452          | expr . '.' "?." "$f" '(' expr ')'
  453          | expr . "as" "$f" '(' expr ')'
  454          | expr . '?' "as" "$f" '(' expr ')'
  455          | expr . "is" "$f" '(' expr ')'
  763 array_comprehension: '[' "iterator" "for" variable_name_with_pos_list "in" expr_list "end of expression" expr . array_comprehension_where ']'

    "is"                 shift, and go to state 643
    "as"                 shift, and go to state 644
    "<<"                 shift, and go to state 645
    ">>"                 shift, and go to state 646
    "++"                 shift, and go to state 647
    "--"                 shift, and go to state 648
    "<="                 shift, and go to state 649
    ">="                 shift, and go to state 650
    "=="                 shift, and go to state 651
    "!="                 shift, and go to state 652
    "->"                 shift, and go to state 653
    "??"                 shift, and go to state 654
    "?."                 shift, and go to state 655
    "?["                 shift, and go to state 656
    "<|"                 shift, and go to state 657
    "|>"                 shift, and go to state 658
    "<<<"                shift, and go to state 659
    ">>>"                shift, and go to state 660
    "&&"                 shift, and go to state 661
    "||"                 shift, and go to state 662
    "^^"                 shift, and go to state 663
    ".."                 shift, and go to state 664
    "end of expression"  shift, and go to state 1327
    '?'                  shift, and go to state 665
    '|'                  shift, and go to state 666
    '^'                  shift, and go to state 667
    '&'                  shift, and go to state 668
    '<'                  shift, and go to state 669
    '>'                  shift, and go to state 670
    '-'                  shift, and go to state 671
    '+'                  shift, and go to state 672
    '*'                  shift, and go to state 673
    '/'                  shift, and go to state 674
    '%'                  shift, and go to state 675
    '.'                  shift, and go to state 676
    '['                  shift, and go to state 677

    $default  reduce using rule 758 (array_comprehension_where)

    array_comprehension_where  go to state 1361


State 1331

  343 func_addr_expr: '@' '@' '<' $@13 type_declaration_no_options '>' $@14 func_addr_name .

    $default  reduce using rule 343 (func_addr_expr)


State 1332

  346 func_addr_expr: '@' '@' '<' $@15 optional_function_argument_list optional_function_type '>' $@16 . func_addr_name

    "::"    shift, and go to state 55
    "$i"    shift, and go to state 823
    "name"  shift, and go to state 56

    name_in_namespace  go to state 826
    func_addr_name     go to state 1362


State 1333

  336 expr_method_call: expr . "->" "name" '(' ')'
  337                 | expr . "->" "name" '(' expr_list ')'
  347 expr_field: expr . '.' "name"
  348           | expr . '.' '.' "name"
  349           | expr . '.' "name" '(' ')'
  350           | expr . '.' "name" '(' expr_list ')'
  353           | expr . '.' $@17 error $@18
  373 expr: expr . "<<" expr
  374     | expr . ">>" expr
  375     | expr . "<<<" expr
  376     | expr . ">>>" expr
  377     | expr . '+' expr
  378     | expr . '-' expr
  379     | expr . '*' expr
  380     | expr . '/' expr
  381     | expr . '%' expr
  382     | expr . '<' expr
  383     | expr . '>' expr
  384     | expr . "==" expr
  385     | expr . "!=" expr
  386     | expr . "<=" expr
  387     | expr . ">=" expr
  388     | expr . '&' expr
  389     | expr . '|' expr
  390     | expr . '^' expr
  391     | expr . "&&" expr
  392     | expr . "||" expr
  393     | expr . "^^" expr
  394     | expr . ".." expr
  397     | expr . "++"
  398     | expr . "--"
  400     | expr . '[' expr ']'
  401     | expr . '.' '[' expr ']'
  402     | expr . "?[" expr ']'
  403     | expr . '.' "?[" expr ']'
  404     | expr . "?." "name"
  405     | expr . '.' "?." "name"
  413     | expr . "??" expr
  414     | expr . '?' expr ':' expr
  417     | expr . "is" "type" '<' $@19 type_declaration_no_options '>' $@20
  418     | expr . "is" basic_type_declaration
  419     | expr . "is" "name"
  420     | expr . "as" "name"
  423     | expr . "as" "type" '<' $@21 type_declaration '>' $@22
  424     | expr . "as" basic_type_declaration
  425     | expr . '?' "as" "name"
  428     | expr . '?' "as" "type" '<' $@23 type_declaration '>' $@24
  429     | expr . '?' "as" basic_type_declaration
  437     | expr . "<|" expr
  438     | expr . "|>" expr
  439     | expr . "|>" basic_type_declaration
  449 expr_mtag: expr . '.' "$f" '(' expr ')'
  450          | expr . "?." "$f" '(' expr ')'
  451          | expr . '.' '.' "$f" '(' expr ')'
  452          | expr . '.' "?." "$f" '(' expr ')'
  453          | expr . "as" "$f" '(' expr ')'
  454          | expr . '?' "as" "$f" '(' expr ')'
  455          | expr . "is" "$f" '(' expr ')'
  708 make_struct_fields: "$f" '(' expr ')' ":=" expr .

    "is"   shift, and go to state 643
    "as"   shift, and go to state 644
    "<<"   shift, and go to state 645
    ">>"   shift, and go to state 646
    "++"   shift, and go to state 647
    "--"   shift, and go to state 648
    "<="   shift, and go to state 649
    ">="   shift, and go to state 650
    "=="   shift, and go to state 651
    "!="   shift, and go to state 652
    "->"   shift, and go to state 653
    "??"   shift, and go to state 654
    "?."   shift, and go to state 655
    "?["   shift, and go to state 656
    "<|"   shift, and go to state 657
    "|>"   shift, and go to state 658
    "<<<"  shift, and go to state 659
    ">>>"  shift, and go to state 660
    "&&"   shift, and go to state 661
    "||"   shift, and go to state 662
    "^^"   shift, and go to state 663
    ".."   shift, and go to state 664
    '?'    shift, and go to state 665
    '|'    shift, and go to state 666
    '^'    shift, and go to state 667
    '&'    shift, and go to state 668
    '<'    shift, and go to state 669
    '>'    shift, and go to state 670
    '-'    shift, and go to state 671
    '+'    shift, and go to state 672
    '*'    shift, and go to state 673
    '/'    shift, and go to state 674
    '%'    shift, and go to state 675
    '.'    shift, and go to state 676
    '['    shift, and go to state 677

    $default  reduce using rule 708 (make_struct_fields)


State 1334

  336 expr_method_call: expr . "->" "name" '(' ')'
  337                 | expr . "->" "name" '(' expr_list ')'
  347 expr_field: expr . '.' "name"
  348           | expr . '.' '.' "name"
  349           | expr . '.' "name" '(' ')'
  350           | expr . '.' "name" '(' expr_list ')'
  353           | expr . '.' $@17 error $@18
  373 expr: expr . "<<" expr
  374     | expr . ">>" expr
  375     | expr . "<<<" expr
  376     | expr . ">>>" expr
  377     | expr . '+' expr
  378     | expr . '-' expr
  379     | expr . '*' expr
  380     | expr . '/' expr
  381     | expr . '%' expr
  382     | expr . '<' expr
  383     | expr . '>' expr
  384     | expr . "==" expr
  385     | expr . "!=" expr
  386     | expr . "<=" expr
  387     | expr . ">=" expr
  388     | expr . '&' expr
  389     | expr . '|' expr
  390     | expr . '^' expr
  391     | expr . "&&" expr
  392     | expr . "||" expr
  393     | expr . "^^" expr
  394     | expr . ".." expr
  397     | expr . "++"
  398     | expr . "--"
  400     | expr . '[' expr ']'
  401     | expr . '.' '[' expr ']'
  402     | expr . "?[" expr ']'
  403     | expr . '.' "?[" expr ']'
  404     | expr . "?." "name"
  405     | expr . '.' "?." "name"
  413     | expr . "??" expr
  414     | expr . '?' expr ':' expr
  417     | expr . "is" "type" '<' $@19 type_declaration_no_options '>' $@20
  418     | expr . "is" basic_type_declaration
  419     | expr . "is" "name"
  420     | expr . "as" "name"
  423     | expr . "as" "type" '<' $@21 type_declaration '>' $@22
  424     | expr . "as" basic_type_declaration
  425     | expr . '?' "as" "name"
  428     | expr . '?' "as" "type" '<' $@23 type_declaration '>' $@24
  429     | expr . '?' "as" basic_type_declaration
  437     | expr . "<|" expr
  438     | expr . "|>" expr
  439     | expr . "|>" basic_type_declaration
  449 expr_mtag: expr . '.' "$f" '(' expr ')'
  450          | expr . "?." "$f" '(' expr ')'
  451          | expr . '.' '.' "$f" '(' expr ')'
  452          | expr . '.' "?." "$f" '(' expr ')'
  453          | expr . "as" "$f" '(' expr ')'
  454          | expr . '?' "as" "$f" '(' expr ')'
  455          | expr . "is" "$f" '(' expr ')'
  707 make_struct_fields: "$f" '(' expr ')' copy_or_move expr .

    "is"   shift, and go to state 643
    "as"   shift, and go to state 644
    "<<"   shift, and go to state 645
    ">>"   shift, and go to state 646
    "++"   shift, and go to state 647
    "--"   shift, and go to state 648
    "<="   shift, and go to state 649
    ">="   shift, and go to state 650
    "=="   shift, and go to state 651
    "!="   shift, and go to state 652
    "->"   shift, and go to state 653
    "??"   shift, and go to state 654
    "?."   shift, and go to state 655
    "?["   shift, and go to state 656
    "<|"   shift, and go to state 657
    "|>"   shift, and go to state 658
    "<<<"  shift, and go to state 659
    ">>>"  shift, and go to state 660
    "&&"   shift, and go to state 661
    "||"   shift, and go to state 662
    "^^"   shift, and go to state 663
    ".."   shift, and go to state 664
    '?'    shift, and go to state 665
    '|'    shift, and go to state 666
    '^'    shift, and go to state 667
    '&'    shift, and go to state 668
    '<'    shift, and go to state 669
    '>'    shift, and go to state 670
    '-'    shift, and go to state 671
    '+'    shift, and go to state 672
    '*'    shift, and go to state 673
    '/'    shift, and go to state 674
    '%'    shift, and go to state 675
    '.'    shift, and go to state 676
    '['    shift, and go to state 677

    $default  reduce using rule 707 (make_struct_fields)


State 1335

  335 expr_named_call: name_in_namespace '(' expr_list ',' '[' make_struct_fields ']' ')' .

    $default  reduce using rule 335 (expr_named_call)


State 1336

  709 make_struct_fields: make_struct_fields ',' "$f" '(' expr ')' . copy_or_move expr
  710                   | make_struct_fields ',' "$f" '(' expr ')' . ":=" expr

    "<-"  shift, and go to state 915
    ":="  shift, and go to state 1363
    '='   shift, and go to state 917

    copy_or_move  go to state 1364


State 1337

  293 block_or_simple_block: "=>" "<-" expr .
  336 expr_method_call: expr . "->" "name" '(' ')'
  337                 | expr . "->" "name" '(' expr_list ')'
  347 expr_field: expr . '.' "name"
  348           | expr . '.' '.' "name"
  349           | expr . '.' "name" '(' ')'
  350           | expr . '.' "name" '(' expr_list ')'
  353           | expr . '.' $@17 error $@18
  373 expr: expr . "<<" expr
  374     | expr . ">>" expr
  375     | expr . "<<<" expr
  376     | expr . ">>>" expr
  377     | expr . '+' expr
  378     | expr . '-' expr
  379     | expr . '*' expr
  380     | expr . '/' expr
  381     | expr . '%' expr
  382     | expr . '<' expr
  383     | expr . '>' expr
  384     | expr . "==" expr
  385     | expr . "!=" expr
  386     | expr . "<=" expr
  387     | expr . ">=" expr
  388     | expr . '&' expr
  389     | expr . '|' expr
  390     | expr . '^' expr
  391     | expr . "&&" expr
  392     | expr . "||" expr
  393     | expr . "^^" expr
  394     | expr . ".." expr
  397     | expr . "++"
  398     | expr . "--"
  400     | expr . '[' expr ']'
  401     | expr . '.' '[' expr ']'
  402     | expr . "?[" expr ']'
  403     | expr . '.' "?[" expr ']'
  404     | expr . "?." "name"
  405     | expr . '.' "?." "name"
  413     | expr . "??" expr
  414     | expr . '?' expr ':' expr
  417     | expr . "is" "type" '<' $@19 type_declaration_no_options '>' $@20
  418     | expr . "is" basic_type_declaration
  419     | expr . "is" "name"
  420     | expr . "as" "name"
  423     | expr . "as" "type" '<' $@21 type_declaration '>' $@22
  424     | expr . "as" basic_type_declaration
  425     | expr . '?' "as" "name"
  428     | expr . '?' "as" "type" '<' $@23 type_declaration '>' $@24
  429     | expr . '?' "as" basic_type_declaration
  437     | expr . "<|" expr
  438     | expr . "|>" expr
  439     | expr . "|>" basic_type_declaration
  449 expr_mtag: expr . '.' "$f" '(' expr ')'
  450          | expr . "?." "$f" '(' expr ')'
  451          | expr . '.' '.' "$f" '(' expr ')'
  452          | expr . '.' "?." "$f" '(' expr ')'
  453          | expr . "as" "$f" '(' expr ')'
  454          | expr . '?' "as" "$f" '(' expr ')'
  455          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 643
    "as"   shift, and go to state 644
    "<<"   shift, and go to state 645
    ">>"   shift, and go to state 646
    "++"   shift, and go to state 647
    "--"   shift, and go to state 648
    "<="   shift, and go to state 649
    ">="   shift, and go to state 650
    "=="   shift, and go to state 651
    "!="   shift, and go to state 652
    "->"   shift, and go to state 653
    "??"   shift, and go to state 654
    "?."   shift, and go to state 655
    "?["   shift, and go to state 656
    "<|"   shift, and go to state 657
    "|>"   shift, and go to state 658
    "<<<"  shift, and go to state 659
    ">>>"  shift, and go to state 660
    "&&"   shift, and go to state 661
    "||"   shift, and go to state 662
    "^^"   shift, and go to state 663
    '?'    shift, and go to state 665
    '|'    shift, and go to state 666
    '^'    shift, and go to state 667
    '&'    shift, and go to state 668
    '<'    shift, and go to state 669
    '>'    shift, and go to state 670
    '-'    shift, and go to state 671
    '+'    shift, and go to state 672
    '*'    shift, and go to state 673
    '/'    shift, and go to state 674
    '%'    shift, and go to state 675
    '.'    shift, and go to state 676
    '['    shift, and go to state 677

    $default  reduce using rule 293 (block_or_simple_block)


State 1338

  417 expr: expr "is" "type" '<' $@19 type_declaration_no_options '>' $@20 .

    $default  reduce using rule 417 (expr)


State 1339

  423 expr: expr "as" "type" '<' $@21 type_declaration '>' $@22 .

    $default  reduce using rule 423 (expr)


State 1340

  428 expr: expr '?' "as" "type" '<' $@23 type_declaration '>' . $@24

    $default  reduce using rule 427 ($@24)

    $@24  go to state 1365


State 1341

   58 expression_else: elif_or_static_elif '(' expr . ')' expression_block expression_else
  336 expr_method_call: expr . "->" "name" '(' ')'
  337                 | expr . "->" "name" '(' expr_list ')'
  347 expr_field: expr . '.' "name"
  348           | expr . '.' '.' "name"
  349           | expr . '.' "name" '(' ')'
  350           | expr . '.' "name" '(' expr_list ')'
  353           | expr . '.' $@17 error $@18
  373 expr: expr . "<<" expr
  374     | expr . ">>" expr
  375     | expr . "<<<" expr
  376     | expr . ">>>" expr
  377     | expr . '+' expr
  378     | expr . '-' expr
  379     | expr . '*' expr
  380     | expr . '/' expr
  381     | expr . '%' expr
  382     | expr . '<' expr
  383     | expr . '>' expr
  384     | expr . "==" expr
  385     | expr . "!=" expr
  386     | expr . "<=" expr
  387     | expr . ">=" expr
  388     | expr . '&' expr
  389     | expr . '|' expr
  390     | expr . '^' expr
  391     | expr . "&&" expr
  392     | expr . "||" expr
  393     | expr . "^^" expr
  394     | expr . ".." expr
  397     | expr . "++"
  398     | expr . "--"
  400     | expr . '[' expr ']'
  401     | expr . '.' '[' expr ']'
  402     | expr . "?[" expr ']'
  403     | expr . '.' "?[" expr ']'
  404     | expr . "?." "name"
  405     | expr . '.' "?." "name"
  413     | expr . "??" expr
  414     | expr . '?' expr ':' expr
  417     | expr . "is" "type" '<' $@19 type_declaration_no_options '>' $@20
  418     | expr . "is" basic_type_declaration
  419     | expr . "is" "name"
  420     | expr . "as" "name"
  423     | expr . "as" "type" '<' $@21 type_declaration '>' $@22
  424     | expr . "as" basic_type_declaration
  425     | expr . '?' "as" "name"
  428     | expr . '?' "as" "type" '<' $@23 type_declaration '>' $@24
  429     | expr . '?' "as" basic_type_declaration
  437     | expr . "<|" expr
  438     | expr . "|>" expr
  439     | expr . "|>" basic_type_declaration
  449 expr_mtag: expr . '.' "$f" '(' expr ')'
  450          | expr . "?." "$f" '(' expr ')'
  451          | expr . '.' '.' "$f" '(' expr ')'
  452          | expr . '.' "?." "$f" '(' expr ')'
  453          | expr . "as" "$f" '(' expr ')'
  454          | expr . '?' "as" "$f" '(' expr ')'
  455          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 643
    "as"   shift, and go to state 644
    "<<"   shift, and go to state 645
    ">>"   shift, and go to state 646
    "++"   shift, and go to state 647
    "--"   shift, and go to state 648
    "<="   shift, and go to state 649
    ">="   shift, and go to state 650
    "=="   shift, and go to state 651
    "!="   shift, and go to state 652
    "->"   shift, and go to state 653
    "??"   shift, and go to state 654
    "?."   shift, and go to state 655
    "?["   shift, and go to state 656
    "<|"   shift, and go to state 657
    "|>"   shift, and go to state 658
    "<<<"  shift, and go to state 659
    ">>>"  shift, and go to state 660
    "&&"   shift, and go to state 661
    "||"   shift, and go to state 662
    "^^"   shift, and go to state 663
    ".."   shift, and go to state 664
    '?'    shift, and go to state 665
    '|'    shift, and go to state 666
    '^'    shift, and go to state 667
    '&'    shift, and go to state 668
    '<'    shift, and go to state 669
    '>'    shift, and go to state 670
    '-'    shift, and go to state 671
    '+'    shift, and go to state 672
    '*'    shift, and go to state 673
    '/'    shift, and go to state 674
    '%'    shift, and go to state 675
    '.'    shift, and go to state 676
    '['    shift, and go to state 677
    ')'    shift, and go to state 1366


State 1342

  270 tuple_expansion_variable_declaration: '(' tuple_expansion ')' ':' type_declaration_no_options copy_or_move_or_clone . expr "end of expression"

    "struct"                          shift, and go to state 408
    "class"                           shift, and go to state 409
    "true"                            shift, and go to state 410
    "false"                           shift, and go to state 411
    "new"                             shift, and go to state 412
    "typeinfo"                        shift, and go to state 413
    "type"                            shift, and go to state 414
    "array"                           shift, and go to state 415
    "null"                            shift, and go to state 416
    "table"                           shift, and go to state 417
    "deref"                           shift, and go to state 418
    "cast"                            shift, and go to state 419
    "upcast"                          shift, and go to state 420
    "addr"                            shift, and go to state 421
    "reinterpret"                     shift, and go to state 422
    "fixed_array"                     shift, and go to state 423
    "default"                         shift, and go to state 424
    "bool"                            shift, and go to state 222
    "void"                            shift, and go to state 223
    "string"                          shift, and go to state 224
    "int"                             shift, and go to state 226
    "int2"                            shift, and go to state 227
    "int3"                            shift, and go to state 228
    "int4"                            shift, and go to state 229
    "uint"                            shift, and go to state 230
    "bitfield"                        shift, and go to state 425
    "uint2"                           shift, and go to state 232
    "uint3"                           shift, and go to state 233
    "uint4"                           shift, and go to state 234
    "float"                           shift, and go to state 235
    "float2"                          shift, and go to state 236
    "float3"                          shift, and go to state 237
    "float4"                          shift, and go to state 238
    "range"                           shift, and go to state 239
    "urange"                          shift, and go to state 240
    "range64"                         shift, and go to state 241
    "urange64"                        shift, and go to state 242
    "int64"                           shift, and go to state 244
    "uint64"                          shift, and go to state 245
    "double"                          shift, and go to state 246
    "int8"                            shift, and go to state 249
    "uint8"                           shift, and go to state 250
    "int16"                           shift, and go to state 251
    "uint16"                          shift, and go to state 252
    "tuple"                           shift, and go to state 426
    "variant"                         shift, and go to state 427
    "generator"                       shift, and go to state 428
    "++"                              shift, and go to state 429
    "--"                              shift, and go to state 430
    "::"                              shift, and go to state 55
    "$$"                              shift, and go to state 431
    "$i"                              shift, and go to state 432
    "$v"                              shift, and go to state 433
    "$b"                              shift, and go to state 434
    "$a"                              shift, and go to state 435
    "$c"                              shift, and go to state 436
    "..."                             shift, and go to state 437
    "integer constant"                shift, and go to state 438
    "long integer constant"           shift, and go to state 439
    "unsigned integer constant"       shift, and go to state 440
    "unsigned long integer constant"  shift, and go to state 441
    "unsigned int8 constant"          shift, and go to state 442
    "floating point constant"         shift, and go to state 443
    "double constant"                 shift, and go to state 444
    "name"                            shift, and go to state 56
    "start of the string"             shift, and go to state 445
    "begin of code block"             shift, and go to state 446
    '-'                               shift, and go to state 447
    '+'                               shift, and go to state 448
    '*'                               shift, and go to state 449
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 450
    '!'                               shift, and go to state 451
    '['                               shift, and go to state 452
    '('                               shift, and go to state 453
    '$'                               shift, and go to state 454
    '@'                               shift, and go to state 455

    string_builder          go to state 456
    expr_reader             go to state 457
    expr_call_pipe          go to state 458
    name_in_namespace       go to state 459
    expr_new                go to state 460
    expr_cast               go to state 461
    expr_type_decl          go to state 462
    expr_type_info          go to state 463
    block_or_lambda         go to state 464
    expr_full_block         go to state 465
    expr_numeric_const      go to state 466
    expr_named_call         go to state 467
    expr_method_call        go to state 468
    func_addr_expr          go to state 469
    expr_field              go to state 470
    expr_call               go to state 471
    expr                    go to state 1367
    expr_mtag               go to state 473
    basic_type_declaration  go to state 474
    make_decl               go to state 475
    make_struct_decl        go to state 476
    make_tuple_call         go to state 477
    make_dim_decl           go to state 478
    make_table_decl         go to state 479
    array_comprehension     go to state 480


State 1343

  271 tuple_expansion_variable_declaration: '(' tuple_expansion ')' optional_ref copy_or_move_or_clone expr . "end of expression"
  336 expr_method_call: expr . "->" "name" '(' ')'
  337                 | expr . "->" "name" '(' expr_list ')'
  347 expr_field: expr . '.' "name"
  348           | expr . '.' '.' "name"
  349           | expr . '.' "name" '(' ')'
  350           | expr . '.' "name" '(' expr_list ')'
  353           | expr . '.' $@17 error $@18
  373 expr: expr . "<<" expr
  374     | expr . ">>" expr
  375     | expr . "<<<" expr
  376     | expr . ">>>" expr
  377     | expr . '+' expr
  378     | expr . '-' expr
  379     | expr . '*' expr
  380     | expr . '/' expr
  381     | expr . '%' expr
  382     | expr . '<' expr
  383     | expr . '>' expr
  384     | expr . "==" expr
  385     | expr . "!=" expr
  386     | expr . "<=" expr
  387     | expr . ">=" expr
  388     | expr . '&' expr
  389     | expr . '|' expr
  390     | expr . '^' expr
  391     | expr . "&&" expr
  392     | expr . "||" expr
  393     | expr . "^^" expr
  394     | expr . ".." expr
  397     | expr . "++"
  398     | expr . "--"
  400     | expr . '[' expr ']'
  401     | expr . '.' '[' expr ']'
  402     | expr . "?[" expr ']'
  403     | expr . '.' "?[" expr ']'
  404     | expr . "?." "name"
  405     | expr . '.' "?." "name"
  413     | expr . "??" expr
  414     | expr . '?' expr ':' expr
  417     | expr . "is" "type" '<' $@19 type_declaration_no_options '>' $@20
  418     | expr . "is" basic_type_declaration
  419     | expr . "is" "name"
  420     | expr . "as" "name"
  423     | expr . "as" "type" '<' $@21 type_declaration '>' $@22
  424     | expr . "as" basic_type_declaration
  425     | expr . '?' "as" "name"
  428     | expr . '?' "as" "type" '<' $@23 type_declaration '>' $@24
  429     | expr . '?' "as" basic_type_declaration
  437     | expr . "<|" expr
  438     | expr . "|>" expr
  439     | expr . "|>" basic_type_declaration
  449 expr_mtag: expr . '.' "$f" '(' expr ')'
  450          | expr . "?." "$f" '(' expr ')'
  451          | expr . '.' '.' "$f" '(' expr ')'
  452          | expr . '.' "?." "$f" '(' expr ')'
  453          | expr . "as" "$f" '(' expr ')'
  454          | expr . '?' "as" "$f" '(' expr ')'
  455          | expr . "is" "$f" '(' expr ')'

    "is"                 shift, and go to state 643
    "as"                 shift, and go to state 644
    "<<"                 shift, and go to state 645
    ">>"                 shift, and go to state 646
    "++"                 shift, and go to state 647
    "--"                 shift, and go to state 648
    "<="                 shift, and go to state 649
    ">="                 shift, and go to state 650
    "=="                 shift, and go to state 651
    "!="                 shift, and go to state 652
    "->"                 shift, and go to state 653
    "??"                 shift, and go to state 654
    "?."                 shift, and go to state 655
    "?["                 shift, and go to state 656
    "<|"                 shift, and go to state 657
    "|>"                 shift, and go to state 658
    "<<<"                shift, and go to state 659
    ">>>"                shift, and go to state 660
    "&&"                 shift, and go to state 661
    "||"                 shift, and go to state 662
    "^^"                 shift, and go to state 663
    ".."                 shift, and go to state 664
    "end of expression"  shift, and go to state 1368
    '?'                  shift, and go to state 665
    '|'                  shift, and go to state 666
    '^'                  shift, and go to state 667
    '&'                  shift, and go to state 668
    '<'                  shift, and go to state 669
    '>'                  shift, and go to state 670
    '-'                  shift, and go to state 671
    '+'                  shift, and go to state 672
    '*'                  shift, and go to state 673
    '/'                  shift, and go to state 674
    '%'                  shift, and go to state 675
    '.'                  shift, and go to state 676
    '['                  shift, and go to state 677


State 1344

  474 struct_variable_declaration_list: struct_variable_declaration_list optional_annotation_list "def" optional_public_or_private_member_variable "abstract" optional_constant $@26 function_declaration_header . "end of expression"

    "end of expression"  shift, and go to state 1369


State 1345

  476 struct_variable_declaration_list: struct_variable_declaration_list optional_annotation_list "def" optional_public_or_private_member_variable optional_static_member_variable optional_override optional_constant $@27 . function_declaration_header expression_block

    "operator"  shift, and go to state 171
    "bool"      shift, and go to state 172
    "string"    shift, and go to state 173
    "int"       shift, and go to state 174
    "int2"      shift, and go to state 175
    "int3"      shift, and go to state 176
    "int4"      shift, and go to state 177
    "uint"      shift, and go to state 178
    "uint2"     shift, and go to state 179
    "uint3"     shift, and go to state 180
    "uint4"     shift, and go to state 181
    "float"     shift, and go to state 182
    "float2"    shift, and go to state 183
    "float3"    shift, and go to state 184
    "float4"    shift, and go to state 185
    "range"     shift, and go to state 186
    "urange"    shift, and go to state 187
    "range64"   shift, and go to state 188
    "urange64"  shift, and go to state 189
    "int64"     shift, and go to state 190
    "uint64"    shift, and go to state 191
    "double"    shift, and go to state 192
    "int8"      shift, and go to state 193
    "uint8"     shift, and go to state 194
    "int16"     shift, and go to state 195
    "uint16"    shift, and go to state 196
    "++"        shift, and go to state 197
    "--"        shift, and go to state 198
    "name"      shift, and go to state 199

    function_name                go to state 200
    function_declaration_header  go to state 1370


State 1346

  713 make_struct_dim: make_struct_dim . "end of expression" make_struct_fields
  718 make_struct_decl: "struct" '<' $@73 type_declaration_no_options '>' $@74 '(' use_initializer make_struct_dim . ')'

    "end of expression"  shift, and go to state 1356
    ')'                  shift, and go to state 1371


State 1347

  713 make_struct_dim: make_struct_dim . "end of expression" make_struct_fields
  721 make_struct_decl: "class" '<' $@75 type_declaration_no_options '>' $@76 '(' use_initializer make_struct_dim . ')'

    "end of expression"  shift, and go to state 1356
    ')'                  shift, and go to state 1372


State 1348

  288 expr_type_info: "typeinfo" '(' name_in_namespace '<' "name" "end of expression" "name" '>' expr . ')'
  336 expr_method_call: expr . "->" "name" '(' ')'
  337                 | expr . "->" "name" '(' expr_list ')'
  347 expr_field: expr . '.' "name"
  348           | expr . '.' '.' "name"
  349           | expr . '.' "name" '(' ')'
  350           | expr . '.' "name" '(' expr_list ')'
  353           | expr . '.' $@17 error $@18
  373 expr: expr . "<<" expr
  374     | expr . ">>" expr
  375     | expr . "<<<" expr
  376     | expr . ">>>" expr
  377     | expr . '+' expr
  378     | expr . '-' expr
  379     | expr . '*' expr
  380     | expr . '/' expr
  381     | expr . '%' expr
  382     | expr . '<' expr
  383     | expr . '>' expr
  384     | expr . "==" expr
  385     | expr . "!=" expr
  386     | expr . "<=" expr
  387     | expr . ">=" expr
  388     | expr . '&' expr
  389     | expr . '|' expr
  390     | expr . '^' expr
  391     | expr . "&&" expr
  392     | expr . "||" expr
  393     | expr . "^^" expr
  394     | expr . ".." expr
  397     | expr . "++"
  398     | expr . "--"
  400     | expr . '[' expr ']'
  401     | expr . '.' '[' expr ']'
  402     | expr . "?[" expr ']'
  403     | expr . '.' "?[" expr ']'
  404     | expr . "?." "name"
  405     | expr . '.' "?." "name"
  413     | expr . "??" expr
  414     | expr . '?' expr ':' expr
  417     | expr . "is" "type" '<' $@19 type_declaration_no_options '>' $@20
  418     | expr . "is" basic_type_declaration
  419     | expr . "is" "name"
  420     | expr . "as" "name"
  423     | expr . "as" "type" '<' $@21 type_declaration '>' $@22
  424     | expr . "as" basic_type_declaration
  425     | expr . '?' "as" "name"
  428     | expr . '?' "as" "type" '<' $@23 type_declaration '>' $@24
  429     | expr . '?' "as" basic_type_declaration
  437     | expr . "<|" expr
  438     | expr . "|>" expr
  439     | expr . "|>" basic_type_declaration
  449 expr_mtag: expr . '.' "$f" '(' expr ')'
  450          | expr . "?." "$f" '(' expr ')'
  451          | expr . '.' '.' "$f" '(' expr ')'
  452          | expr . '.' "?." "$f" '(' expr ')'
  453          | expr . "as" "$f" '(' expr ')'
  454          | expr . '?' "as" "$f" '(' expr ')'
  455          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 643
    "as"   shift, and go to state 644
    "<<"   shift, and go to state 645
    ">>"   shift, and go to state 646
    "++"   shift, and go to state 647
    "--"   shift, and go to state 648
    "<="   shift, and go to state 649
    ">="   shift, and go to state 650
    "=="   shift, and go to state 651
    "!="   shift, and go to state 652
    "->"   shift, and go to state 653
    "??"   shift, and go to state 654
    "?."   shift, and go to state 655
    "?["   shift, and go to state 656
    "<|"   shift, and go to state 657
    "|>"   shift, and go to state 658
    "<<<"  shift, and go to state 659
    ">>>"  shift, and go to state 660
    "&&"   shift, and go to state 661
    "||"   shift, and go to state 662
    "^^"   shift, and go to state 663
    ".."   shift, and go to state 664
    '?'    shift, and go to state 665
    '|'    shift, and go to state 666
    '^'    shift, and go to state 667
    '&'    shift, and go to state 668
    '<'    shift, and go to state 669
    '>'    shift, and go to state 670
    '-'    shift, and go to state 671
    '+'    shift, and go to state 672
    '*'    shift, and go to state 673
    '/'    shift, and go to state 674
    '%'    shift, and go to state 675
    '.'    shift, and go to state 676
    '['    shift, and go to state 677
    ')'    shift, and go to state 1373


State 1349

  737 make_dim_decl: "array" "struct" '<' $@83 type_declaration_no_options '>' $@84 '(' use_initializer . make_struct_dim ')'

    "$f"    shift, and go to state 828
    "name"  shift, and go to state 1092

    make_struct_fields  go to state 1324
    make_struct_dim     go to state 1374


State 1350

  740 make_dim_decl: "array" "tuple" '<' $@85 type_declaration_no_options '>' $@86 '(' use_initializer . make_struct_dim ')'

    "$f"    shift, and go to state 828
    "name"  shift, and go to state 1092

    make_struct_fields  go to state 1324
    make_struct_dim     go to state 1375


State 1351

  713 make_struct_dim: make_struct_dim . "end of expression" make_struct_fields
  743 make_dim_decl: "array" "variant" '<' $@87 type_declaration_no_options '>' $@88 '(' make_struct_dim . ')'

    "end of expression"  shift, and go to state 1356
    ')'                  shift, and go to state 1376


State 1352

  747 make_dim_decl: "array" '<' $@89 type_declaration_no_options '>' $@90 '(' expr_list optional_comma . ')'

    ')'  shift, and go to state 1377


State 1353

  757 make_table_decl: "table" '<' type_declaration_no_options "end of expression" type_declaration_no_options '>' '(' expr_map_tuple_list optional_comma . ')'

    ')'  shift, and go to state 1378


State 1354

  751 make_dim_decl: "fixed_array" '<' $@91 type_declaration_no_options '>' $@92 '(' expr_list optional_comma . ')'

    ')'  shift, and go to state 1379


State 1355

  713 make_struct_dim: make_struct_dim . "end of expression" make_struct_fields
  733 make_tuple_call: "tuple" '<' $@81 type_declaration_no_options '>' $@82 '(' use_initializer make_struct_dim . ')'

    "end of expression"  shift, and go to state 1356
    ')'                  shift, and go to state 1380


State 1356

  713 make_struct_dim: make_struct_dim "end of expression" . make_struct_fields

    "$f"    shift, and go to state 828
    "name"  shift, and go to state 1092

    make_struct_fields  go to state 1381


State 1357

  724 make_struct_decl: "variant" '<' $@77 type_declaration_no_options '>' $@78 '(' make_struct_dim ')' .

    $default  reduce using rule 724 (make_struct_decl)


State 1358

  759 array_comprehension_where: "end of expression" "where" . expr

    "struct"                          shift, and go to state 408
    "class"                           shift, and go to state 409
    "true"                            shift, and go to state 410
    "false"                           shift, and go to state 411
    "new"                             shift, and go to state 412
    "typeinfo"                        shift, and go to state 413
    "type"                            shift, and go to state 414
    "array"                           shift, and go to state 415
    "null"                            shift, and go to state 416
    "table"                           shift, and go to state 417
    "deref"                           shift, and go to state 418
    "cast"                            shift, and go to state 419
    "upcast"                          shift, and go to state 420
    "addr"                            shift, and go to state 421
    "reinterpret"                     shift, and go to state 422
    "fixed_array"                     shift, and go to state 423
    "default"                         shift, and go to state 424
    "bool"                            shift, and go to state 222
    "void"                            shift, and go to state 223
    "string"                          shift, and go to state 224
    "int"                             shift, and go to state 226
    "int2"                            shift, and go to state 227
    "int3"                            shift, and go to state 228
    "int4"                            shift, and go to state 229
    "uint"                            shift, and go to state 230
    "bitfield"                        shift, and go to state 425
    "uint2"                           shift, and go to state 232
    "uint3"                           shift, and go to state 233
    "uint4"                           shift, and go to state 234
    "float"                           shift, and go to state 235
    "float2"                          shift, and go to state 236
    "float3"                          shift, and go to state 237
    "float4"                          shift, and go to state 238
    "range"                           shift, and go to state 239
    "urange"                          shift, and go to state 240
    "range64"                         shift, and go to state 241
    "urange64"                        shift, and go to state 242
    "int64"                           shift, and go to state 244
    "uint64"                          shift, and go to state 245
    "double"                          shift, and go to state 246
    "int8"                            shift, and go to state 249
    "uint8"                           shift, and go to state 250
    "int16"                           shift, and go to state 251
    "uint16"                          shift, and go to state 252
    "tuple"                           shift, and go to state 426
    "variant"                         shift, and go to state 427
    "generator"                       shift, and go to state 428
    "++"                              shift, and go to state 429
    "--"                              shift, and go to state 430
    "::"                              shift, and go to state 55
    "$$"                              shift, and go to state 431
    "$i"                              shift, and go to state 432
    "$v"                              shift, and go to state 433
    "$b"                              shift, and go to state 434
    "$a"                              shift, and go to state 435
    "$c"                              shift, and go to state 436
    "..."                             shift, and go to state 437
    "integer constant"                shift, and go to state 438
    "long integer constant"           shift, and go to state 439
    "unsigned integer constant"       shift, and go to state 440
    "unsigned long integer constant"  shift, and go to state 441
    "unsigned int8 constant"          shift, and go to state 442
    "floating point constant"         shift, and go to state 443
    "double constant"                 shift, and go to state 444
    "name"                            shift, and go to state 56
    "start of the string"             shift, and go to state 445
    "begin of code block"             shift, and go to state 446
    '-'                               shift, and go to state 447
    '+'                               shift, and go to state 448
    '*'                               shift, and go to state 449
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 450
    '!'                               shift, and go to state 451
    '['                               shift, and go to state 452
    '('                               shift, and go to state 453
    '$'                               shift, and go to state 454
    '@'                               shift, and go to state 455

    string_builder          go to state 456
    expr_reader             go to state 457
    expr_call_pipe          go to state 458
    name_in_namespace       go to state 459
    expr_new                go to state 460
    expr_cast               go to state 461
    expr_type_decl          go to state 462
    expr_type_info          go to state 463
    block_or_lambda         go to state 464
    expr_full_block         go to state 465
    expr_numeric_const      go to state 466
    expr_named_call         go to state 467
    expr_method_call        go to state 468
    func_addr_expr          go to state 469
    expr_field              go to state 470
    expr_call               go to state 471
    expr                    go to state 1382
    expr_mtag               go to state 473
    basic_type_declaration  go to state 474
    make_decl               go to state 475
    make_struct_decl        go to state 476
    make_tuple_call         go to state 477
    make_dim_decl           go to state 478
    make_table_decl         go to state 479
    array_comprehension     go to state 480


State 1359

  764 array_comprehension: "begin of code block" "for" variable_name_with_pos_list "in" expr_list "end of expression" make_map_tuple array_comprehension_where "end of code block" .

    $default  reduce using rule 764 (array_comprehension)


State 1360

  762 array_comprehension: '[' "for" variable_name_with_pos_list "in" expr_list "end of expression" expr array_comprehension_where ']' .

    $default  reduce using rule 762 (array_comprehension)


State 1361

  763 array_comprehension: '[' "iterator" "for" variable_name_with_pos_list "in" expr_list "end of expression" expr array_comprehension_where . ']'

    ']'  shift, and go to state 1383


State 1362

  346 func_addr_expr: '@' '@' '<' $@15 optional_function_argument_list optional_function_type '>' $@16 func_addr_name .

    $default  reduce using rule 346 (func_addr_expr)


State 1363

  710 make_struct_fields: make_struct_fields ',' "$f" '(' expr ')' ":=" . expr

    "struct"                          shift, and go to state 408
    "class"                           shift, and go to state 409
    "true"                            shift, and go to state 410
    "false"                           shift, and go to state 411
    "new"                             shift, and go to state 412
    "typeinfo"                        shift, and go to state 413
    "type"                            shift, and go to state 414
    "array"                           shift, and go to state 415
    "null"                            shift, and go to state 416
    "table"                           shift, and go to state 417
    "deref"                           shift, and go to state 418
    "cast"                            shift, and go to state 419
    "upcast"                          shift, and go to state 420
    "addr"                            shift, and go to state 421
    "reinterpret"                     shift, and go to state 422
    "fixed_array"                     shift, and go to state 423
    "default"                         shift, and go to state 424
    "bool"                            shift, and go to state 222
    "void"                            shift, and go to state 223
    "string"                          shift, and go to state 224
    "int"                             shift, and go to state 226
    "int2"                            shift, and go to state 227
    "int3"                            shift, and go to state 228
    "int4"                            shift, and go to state 229
    "uint"                            shift, and go to state 230
    "bitfield"                        shift, and go to state 425
    "uint2"                           shift, and go to state 232
    "uint3"                           shift, and go to state 233
    "uint4"                           shift, and go to state 234
    "float"                           shift, and go to state 235
    "float2"                          shift, and go to state 236
    "float3"                          shift, and go to state 237
    "float4"                          shift, and go to state 238
    "range"                           shift, and go to state 239
    "urange"                          shift, and go to state 240
    "range64"                         shift, and go to state 241
    "urange64"                        shift, and go to state 242
    "int64"                           shift, and go to state 244
    "uint64"                          shift, and go to state 245
    "double"                          shift, and go to state 246
    "int8"                            shift, and go to state 249
    "uint8"                           shift, and go to state 250
    "int16"                           shift, and go to state 251
    "uint16"                          shift, and go to state 252
    "tuple"                           shift, and go to state 426
    "variant"                         shift, and go to state 427
    "generator"                       shift, and go to state 428
    "++"                              shift, and go to state 429
    "--"                              shift, and go to state 430
    "::"                              shift, and go to state 55
    "$$"                              shift, and go to state 431
    "$i"                              shift, and go to state 432
    "$v"                              shift, and go to state 433
    "$b"                              shift, and go to state 434
    "$a"                              shift, and go to state 435
    "$c"                              shift, and go to state 436
    "..."                             shift, and go to state 437
    "integer constant"                shift, and go to state 438
    "long integer constant"           shift, and go to state 439
    "unsigned integer constant"       shift, and go to state 440
    "unsigned long integer constant"  shift, and go to state 441
    "unsigned int8 constant"          shift, and go to state 442
    "floating point constant"         shift, and go to state 443
    "double constant"                 shift, and go to state 444
    "name"                            shift, and go to state 56
    "start of the string"             shift, and go to state 445
    "begin of code block"             shift, and go to state 446
    '-'                               shift, and go to state 447
    '+'                               shift, and go to state 448
    '*'                               shift, and go to state 449
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 450
    '!'                               shift, and go to state 451
    '['                               shift, and go to state 452
    '('                               shift, and go to state 453
    '$'                               shift, and go to state 454
    '@'                               shift, and go to state 455

    string_builder          go to state 456
    expr_reader             go to state 457
    expr_call_pipe          go to state 458
    name_in_namespace       go to state 459
    expr_new                go to state 460
    expr_cast               go to state 461
    expr_type_decl          go to state 462
    expr_type_info          go to state 463
    block_or_lambda         go to state 464
    expr_full_block         go to state 465
    expr_numeric_const      go to state 466
    expr_named_call         go to state 467
    expr_method_call        go to state 468
    func_addr_expr          go to state 469
    expr_field              go to state 470
    expr_call               go to state 471
    expr                    go to state 1384
    expr_mtag               go to state 473
    basic_type_declaration  go to state 474
    make_decl               go to state 475
    make_struct_decl        go to state 476
    make_tuple_call         go to state 477
    make_dim_decl           go to state 478
    make_table_decl         go to state 479
    array_comprehension     go to state 480


State 1364

  709 make_struct_fields: make_struct_fields ',' "$f" '(' expr ')' copy_or_move . expr

    "struct"                          shift, and go to state 408
    "class"                           shift, and go to state 409
    "true"                            shift, and go to state 410
    "false"                           shift, and go to state 411
    "new"                             shift, and go to state 412
    "typeinfo"                        shift, and go to state 413
    "type"                            shift, and go to state 414
    "array"                           shift, and go to state 415
    "null"                            shift, and go to state 416
    "table"                           shift, and go to state 417
    "deref"                           shift, and go to state 418
    "cast"                            shift, and go to state 419
    "upcast"                          shift, and go to state 420
    "addr"                            shift, and go to state 421
    "reinterpret"                     shift, and go to state 422
    "fixed_array"                     shift, and go to state 423
    "default"                         shift, and go to state 424
    "bool"                            shift, and go to state 222
    "void"                            shift, and go to state 223
    "string"                          shift, and go to state 224
    "int"                             shift, and go to state 226
    "int2"                            shift, and go to state 227
    "int3"                            shift, and go to state 228
    "int4"                            shift, and go to state 229
    "uint"                            shift, and go to state 230
    "bitfield"                        shift, and go to state 425
    "uint2"                           shift, and go to state 232
    "uint3"                           shift, and go to state 233
    "uint4"                           shift, and go to state 234
    "float"                           shift, and go to state 235
    "float2"                          shift, and go to state 236
    "float3"                          shift, and go to state 237
    "float4"                          shift, and go to state 238
    "range"                           shift, and go to state 239
    "urange"                          shift, and go to state 240
    "range64"                         shift, and go to state 241
    "urange64"                        shift, and go to state 242
    "int64"                           shift, and go to state 244
    "uint64"                          shift, and go to state 245
    "double"                          shift, and go to state 246
    "int8"                            shift, and go to state 249
    "uint8"                           shift, and go to state 250
    "int16"                           shift, and go to state 251
    "uint16"                          shift, and go to state 252
    "tuple"                           shift, and go to state 426
    "variant"                         shift, and go to state 427
    "generator"                       shift, and go to state 428
    "++"                              shift, and go to state 429
    "--"                              shift, and go to state 430
    "::"                              shift, and go to state 55
    "$$"                              shift, and go to state 431
    "$i"                              shift, and go to state 432
    "$v"                              shift, and go to state 433
    "$b"                              shift, and go to state 434
    "$a"                              shift, and go to state 435
    "$c"                              shift, and go to state 436
    "..."                             shift, and go to state 437
    "integer constant"                shift, and go to state 438
    "long integer constant"           shift, and go to state 439
    "unsigned integer constant"       shift, and go to state 440
    "unsigned long integer constant"  shift, and go to state 441
    "unsigned int8 constant"          shift, and go to state 442
    "floating point constant"         shift, and go to state 443
    "double constant"                 shift, and go to state 444
    "name"                            shift, and go to state 56
    "start of the string"             shift, and go to state 445
    "begin of code block"             shift, and go to state 446
    '-'                               shift, and go to state 447
    '+'                               shift, and go to state 448
    '*'                               shift, and go to state 449
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 450
    '!'                               shift, and go to state 451
    '['                               shift, and go to state 452
    '('                               shift, and go to state 453
    '$'                               shift, and go to state 454
    '@'                               shift, and go to state 455

    string_builder          go to state 456
    expr_reader             go to state 457
    expr_call_pipe          go to state 458
    name_in_namespace       go to state 459
    expr_new                go to state 460
    expr_cast               go to state 461
    expr_type_decl          go to state 462
    expr_type_info          go to state 463
    block_or_lambda         go to state 464
    expr_full_block         go to state 465
    expr_numeric_const      go to state 466
    expr_named_call         go to state 467
    expr_method_call        go to state 468
    func_addr_expr          go to state 469
    expr_field              go to state 470
    expr_call               go to state 471
    expr                    go to state 1385
    expr_mtag               go to state 473
    basic_type_declaration  go to state 474
    make_decl               go to state 475
    make_struct_decl        go to state 476
    make_tuple_call         go to state 477
    make_dim_decl           go to state 478
    make_table_decl         go to state 479
    array_comprehension     go to state 480


State 1365

  428 expr: expr '?' "as" "type" '<' $@23 type_declaration '>' $@24 .

    $default  reduce using rule 428 (expr)


State 1366

   58 expression_else: elif_or_static_elif '(' expr ')' . expression_block expression_else

    "begin of code block"  shift, and go to state 323

    expression_block  go to state 1386


State 1367

  270 tuple_expansion_variable_declaration: '(' tuple_expansion ')' ':' type_declaration_no_options copy_or_move_or_clone expr . "end of expression"
  336 expr_method_call: expr . "->" "name" '(' ')'
  337                 | expr . "->" "name" '(' expr_list ')'
  347 expr_field: expr . '.' "name"
  348           | expr . '.' '.' "name"
  349           | expr . '.' "name" '(' ')'
  350           | expr . '.' "name" '(' expr_list ')'
  353           | expr . '.' $@17 error $@18
  373 expr: expr . "<<" expr
  374     | expr . ">>" expr
  375     | expr . "<<<" expr
  376     | expr . ">>>" expr
  377     | expr . '+' expr
  378     | expr . '-' expr
  379     | expr . '*' expr
  380     | expr . '/' expr
  381     | expr . '%' expr
  382     | expr . '<' expr
  383     | expr . '>' expr
  384     | expr . "==" expr
  385     | expr . "!=" expr
  386     | expr . "<=" expr
  387     | expr . ">=" expr
  388     | expr . '&' expr
  389     | expr . '|' expr
  390     | expr . '^' expr
  391     | expr . "&&" expr
  392     | expr . "||" expr
  393     | expr . "^^" expr
  394     | expr . ".." expr
  397     | expr . "++"
  398     | expr . "--"
  400     | expr . '[' expr ']'
  401     | expr . '.' '[' expr ']'
  402     | expr . "?[" expr ']'
  403     | expr . '.' "?[" expr ']'
  404     | expr . "?." "name"
  405     | expr . '.' "?." "name"
  413     | expr . "??" expr
  414     | expr . '?' expr ':' expr
  417     | expr . "is" "type" '<' $@19 type_declaration_no_options '>' $@20
  418     | expr . "is" basic_type_declaration
  419     | expr . "is" "name"
  420     | expr . "as" "name"
  423     | expr . "as" "type" '<' $@21 type_declaration '>' $@22
  424     | expr . "as" basic_type_declaration
  425     | expr . '?' "as" "name"
  428     | expr . '?' "as" "type" '<' $@23 type_declaration '>' $@24
  429     | expr . '?' "as" basic_type_declaration
  437     | expr . "<|" expr
  438     | expr . "|>" expr
  439     | expr . "|>" basic_type_declaration
  449 expr_mtag: expr . '.' "$f" '(' expr ')'
  450          | expr . "?." "$f" '(' expr ')'
  451          | expr . '.' '.' "$f" '(' expr ')'
  452          | expr . '.' "?." "$f" '(' expr ')'
  453          | expr . "as" "$f" '(' expr ')'
  454          | expr . '?' "as" "$f" '(' expr ')'
  455          | expr . "is" "$f" '(' expr ')'

    "is"                 shift, and go to state 643
    "as"                 shift, and go to state 644
    "<<"                 shift, and go to state 645
    ">>"                 shift, and go to state 646
    "++"                 shift, and go to state 647
    "--"                 shift, and go to state 648
    "<="                 shift, and go to state 649
    ">="                 shift, and go to state 650
    "=="                 shift, and go to state 651
    "!="                 shift, and go to state 652
    "->"                 shift, and go to state 653
    "??"                 shift, and go to state 654
    "?."                 shift, and go to state 655
    "?["                 shift, and go to state 656
    "<|"                 shift, and go to state 657
    "|>"                 shift, and go to state 658
    "<<<"                shift, and go to state 659
    ">>>"                shift, and go to state 660
    "&&"                 shift, and go to state 661
    "||"                 shift, and go to state 662
    "^^"                 shift, and go to state 663
    ".."                 shift, and go to state 664
    "end of expression"  shift, and go to state 1387
    '?'                  shift, and go to state 665
    '|'                  shift, and go to state 666
    '^'                  shift, and go to state 667
    '&'                  shift, and go to state 668
    '<'                  shift, and go to state 669
    '>'                  shift, and go to state 670
    '-'                  shift, and go to state 671
    '+'                  shift, and go to state 672
    '*'                  shift, and go to state 673
    '/'                  shift, and go to state 674
    '%'                  shift, and go to state 675
    '.'                  shift, and go to state 676
    '['                  shift, and go to state 677


State 1368

  271 tuple_expansion_variable_declaration: '(' tuple_expansion ')' optional_ref copy_or_move_or_clone expr "end of expression" .

    $default  reduce using rule 271 (tuple_expansion_variable_declaration)


State 1369

  474 struct_variable_declaration_list: struct_variable_declaration_list optional_annotation_list "def" optional_public_or_private_member_variable "abstract" optional_constant $@26 function_declaration_header "end of expression" .

    $default  reduce using rule 474 (struct_variable_declaration_list)


State 1370

  476 struct_variable_declaration_list: struct_variable_declaration_list optional_annotation_list "def" optional_public_or_private_member_variable optional_static_member_variable optional_override optional_constant $@27 function_declaration_header . expression_block

    "begin of code block"  shift, and go to state 323

    expression_block  go to state 1388


State 1371

  718 make_struct_decl: "struct" '<' $@73 type_declaration_no_options '>' $@74 '(' use_initializer make_struct_dim ')' .

    $default  reduce using rule 718 (make_struct_decl)


State 1372

  721 make_struct_decl: "class" '<' $@75 type_declaration_no_options '>' $@76 '(' use_initializer make_struct_dim ')' .

    $default  reduce using rule 721 (make_struct_decl)


State 1373

  288 expr_type_info: "typeinfo" '(' name_in_namespace '<' "name" "end of expression" "name" '>' expr ')' .

    $default  reduce using rule 288 (expr_type_info)


State 1374

  713 make_struct_dim: make_struct_dim . "end of expression" make_struct_fields
  737 make_dim_decl: "array" "struct" '<' $@83 type_declaration_no_options '>' $@84 '(' use_initializer make_struct_dim . ')'

    "end of expression"  shift, and go to state 1356
    ')'                  shift, and go to state 1389


State 1375

  713 make_struct_dim: make_struct_dim . "end of expression" make_struct_fields
  740 make_dim_decl: "array" "tuple" '<' $@85 type_declaration_no_options '>' $@86 '(' use_initializer make_struct_dim . ')'

    "end of expression"  shift, and go to state 1356
    ')'                  shift, and go to state 1390


State 1376

  743 make_dim_decl: "array" "variant" '<' $@87 type_declaration_no_options '>' $@88 '(' make_struct_dim ')' .

    $default  reduce using rule 743 (make_dim_decl)


State 1377

  747 make_dim_decl: "array" '<' $@89 type_declaration_no_options '>' $@90 '(' expr_list optional_comma ')' .

    $default  reduce using rule 747 (make_dim_decl)


State 1378

  757 make_table_decl: "table" '<' type_declaration_no_options "end of expression" type_declaration_no_options '>' '(' expr_map_tuple_list optional_comma ')' .

    $default  reduce using rule 757 (make_table_decl)


State 1379

  751 make_dim_decl: "fixed_array" '<' $@91 type_declaration_no_options '>' $@92 '(' expr_list optional_comma ')' .

    $default  reduce using rule 751 (make_dim_decl)


State 1380

  733 make_tuple_call: "tuple" '<' $@81 type_declaration_no_options '>' $@82 '(' use_initializer make_struct_dim ')' .

    $default  reduce using rule 733 (make_tuple_call)


State 1381

  705 make_struct_fields: make_struct_fields . ',' "name" copy_or_move expr
  706                   | make_struct_fields . ',' "name" ":=" expr
  709                   | make_struct_fields . ',' "$f" '(' expr ')' copy_or_move expr
  710                   | make_struct_fields . ',' "$f" '(' expr ')' ":=" expr
  713 make_struct_dim: make_struct_dim "end of expression" make_struct_fields .

    ','  shift, and go to state 1023

    $default  reduce using rule 713 (make_struct_dim)


State 1382

  336 expr_method_call: expr . "->" "name" '(' ')'
  337                 | expr . "->" "name" '(' expr_list ')'
  347 expr_field: expr . '.' "name"
  348           | expr . '.' '.' "name"
  349           | expr . '.' "name" '(' ')'
  350           | expr . '.' "name" '(' expr_list ')'
  353           | expr . '.' $@17 error $@18
  373 expr: expr . "<<" expr
  374     | expr . ">>" expr
  375     | expr . "<<<" expr
  376     | expr . ">>>" expr
  377     | expr . '+' expr
  378     | expr . '-' expr
  379     | expr . '*' expr
  380     | expr . '/' expr
  381     | expr . '%' expr
  382     | expr . '<' expr
  383     | expr . '>' expr
  384     | expr . "==" expr
  385     | expr . "!=" expr
  386     | expr . "<=" expr
  387     | expr . ">=" expr
  388     | expr . '&' expr
  389     | expr . '|' expr
  390     | expr . '^' expr
  391     | expr . "&&" expr
  392     | expr . "||" expr
  393     | expr . "^^" expr
  394     | expr . ".." expr
  397     | expr . "++"
  398     | expr . "--"
  400     | expr . '[' expr ']'
  401     | expr . '.' '[' expr ']'
  402     | expr . "?[" expr ']'
  403     | expr . '.' "?[" expr ']'
  404     | expr . "?." "name"
  405     | expr . '.' "?." "name"
  413     | expr . "??" expr
  414     | expr . '?' expr ':' expr
  417     | expr . "is" "type" '<' $@19 type_declaration_no_options '>' $@20
  418     | expr . "is" basic_type_declaration
  419     | expr . "is" "name"
  420     | expr . "as" "name"
  423     | expr . "as" "type" '<' $@21 type_declaration '>' $@22
  424     | expr . "as" basic_type_declaration
  425     | expr . '?' "as" "name"
  428     | expr . '?' "as" "type" '<' $@23 type_declaration '>' $@24
  429     | expr . '?' "as" basic_type_declaration
  437     | expr . "<|" expr
  438     | expr . "|>" expr
  439     | expr . "|>" basic_type_declaration
  449 expr_mtag: expr . '.' "$f" '(' expr ')'
  450          | expr . "?." "$f" '(' expr ')'
  451          | expr . '.' '.' "$f" '(' expr ')'
  452          | expr . '.' "?." "$f" '(' expr ')'
  453          | expr . "as" "$f" '(' expr ')'
  454          | expr . '?' "as" "$f" '(' expr ')'
  455          | expr . "is" "$f" '(' expr ')'
  759 array_comprehension_where: "end of expression" "where" expr .

    "is"   shift, and go to state 643
    "as"   shift, and go to state 644
    "<<"   shift, and go to state 645
    ">>"   shift, and go to state 646
    "++"   shift, and go to state 647
    "--"   shift, and go to state 648
    "<="   shift, and go to state 649
    ">="   shift, and go to state 650
    "=="   shift, and go to state 651
    "!="   shift, and go to state 652
    "->"   shift, and go to state 653
    "??"   shift, and go to state 654
    "?."   shift, and go to state 655
    "?["   shift, and go to state 656
    "<|"   shift, and go to state 657
    "|>"   shift, and go to state 658
    "<<<"  shift, and go to state 659
    ">>>"  shift, and go to state 660
    "&&"   shift, and go to state 661
    "||"   shift, and go to state 662
    "^^"   shift, and go to state 663
    ".."   shift, and go to state 664
    '?'    shift, and go to state 665
    '|'    shift, and go to state 666
    '^'    shift, and go to state 667
    '&'    shift, and go to state 668
    '<'    shift, and go to state 669
    '>'    shift, and go to state 670
    '-'    shift, and go to state 671
    '+'    shift, and go to state 672
    '*'    shift, and go to state 673
    '/'    shift, and go to state 674
    '%'    shift, and go to state 675
    '.'    shift, and go to state 676
    '['    shift, and go to state 677

    $default  reduce using rule 759 (array_comprehension_where)


State 1383

  763 array_comprehension: '[' "iterator" "for" variable_name_with_pos_list "in" expr_list "end of expression" expr array_comprehension_where ']' .

    $default  reduce using rule 763 (array_comprehension)


State 1384

  336 expr_method_call: expr . "->" "name" '(' ')'
  337                 | expr . "->" "name" '(' expr_list ')'
  347 expr_field: expr . '.' "name"
  348           | expr . '.' '.' "name"
  349           | expr . '.' "name" '(' ')'
  350           | expr . '.' "name" '(' expr_list ')'
  353           | expr . '.' $@17 error $@18
  373 expr: expr . "<<" expr
  374     | expr . ">>" expr
  375     | expr . "<<<" expr
  376     | expr . ">>>" expr
  377     | expr . '+' expr
  378     | expr . '-' expr
  379     | expr . '*' expr
  380     | expr . '/' expr
  381     | expr . '%' expr
  382     | expr . '<' expr
  383     | expr . '>' expr
  384     | expr . "==" expr
  385     | expr . "!=" expr
  386     | expr . "<=" expr
  387     | expr . ">=" expr
  388     | expr . '&' expr
  389     | expr . '|' expr
  390     | expr . '^' expr
  391     | expr . "&&" expr
  392     | expr . "||" expr
  393     | expr . "^^" expr
  394     | expr . ".." expr
  397     | expr . "++"
  398     | expr . "--"
  400     | expr . '[' expr ']'
  401     | expr . '.' '[' expr ']'
  402     | expr . "?[" expr ']'
  403     | expr . '.' "?[" expr ']'
  404     | expr . "?." "name"
  405     | expr . '.' "?." "name"
  413     | expr . "??" expr
  414     | expr . '?' expr ':' expr
  417     | expr . "is" "type" '<' $@19 type_declaration_no_options '>' $@20
  418     | expr . "is" basic_type_declaration
  419     | expr . "is" "name"
  420     | expr . "as" "name"
  423     | expr . "as" "type" '<' $@21 type_declaration '>' $@22
  424     | expr . "as" basic_type_declaration
  425     | expr . '?' "as" "name"
  428     | expr . '?' "as" "type" '<' $@23 type_declaration '>' $@24
  429     | expr . '?' "as" basic_type_declaration
  437     | expr . "<|" expr
  438     | expr . "|>" expr
  439     | expr . "|>" basic_type_declaration
  449 expr_mtag: expr . '.' "$f" '(' expr ')'
  450          | expr . "?." "$f" '(' expr ')'
  451          | expr . '.' '.' "$f" '(' expr ')'
  452          | expr . '.' "?." "$f" '(' expr ')'
  453          | expr . "as" "$f" '(' expr ')'
  454          | expr . '?' "as" "$f" '(' expr ')'
  455          | expr . "is" "$f" '(' expr ')'
  710 make_struct_fields: make_struct_fields ',' "$f" '(' expr ')' ":=" expr .

    "is"   shift, and go to state 643
    "as"   shift, and go to state 644
    "<<"   shift, and go to state 645
    ">>"   shift, and go to state 646
    "++"   shift, and go to state 647
    "--"   shift, and go to state 648
    "<="   shift, and go to state 649
    ">="   shift, and go to state 650
    "=="   shift, and go to state 651
    "!="   shift, and go to state 652
    "->"   shift, and go to state 653
    "??"   shift, and go to state 654
    "?."   shift, and go to state 655
    "?["   shift, and go to state 656
    "<|"   shift, and go to state 657
    "|>"   shift, and go to state 658
    "<<<"  shift, and go to state 659
    ">>>"  shift, and go to state 660
    "&&"   shift, and go to state 661
    "||"   shift, and go to state 662
    "^^"   shift, and go to state 663
    ".."   shift, and go to state 664
    '?'    shift, and go to state 665
    '|'    shift, and go to state 666
    '^'    shift, and go to state 667
    '&'    shift, and go to state 668
    '<'    shift, and go to state 669
    '>'    shift, and go to state 670
    '-'    shift, and go to state 671
    '+'    shift, and go to state 672
    '*'    shift, and go to state 673
    '/'    shift, and go to state 674
    '%'    shift, and go to state 675
    '.'    shift, and go to state 676
    '['    shift, and go to state 677

    $default  reduce using rule 710 (make_struct_fields)


State 1385

  336 expr_method_call: expr . "->" "name" '(' ')'
  337                 | expr . "->" "name" '(' expr_list ')'
  347 expr_field: expr . '.' "name"
  348           | expr . '.' '.' "name"
  349           | expr . '.' "name" '(' ')'
  350           | expr . '.' "name" '(' expr_list ')'
  353           | expr . '.' $@17 error $@18
  373 expr: expr . "<<" expr
  374     | expr . ">>" expr
  375     | expr . "<<<" expr
  376     | expr . ">>>" expr
  377     | expr . '+' expr
  378     | expr . '-' expr
  379     | expr . '*' expr
  380     | expr . '/' expr
  381     | expr . '%' expr
  382     | expr . '<' expr
  383     | expr . '>' expr
  384     | expr . "==" expr
  385     | expr . "!=" expr
  386     | expr . "<=" expr
  387     | expr . ">=" expr
  388     | expr . '&' expr
  389     | expr . '|' expr
  390     | expr . '^' expr
  391     | expr . "&&" expr
  392     | expr . "||" expr
  393     | expr . "^^" expr
  394     | expr . ".." expr
  397     | expr . "++"
  398     | expr . "--"
  400     | expr . '[' expr ']'
  401     | expr . '.' '[' expr ']'
  402     | expr . "?[" expr ']'
  403     | expr . '.' "?[" expr ']'
  404     | expr . "?." "name"
  405     | expr . '.' "?." "name"
  413     | expr . "??" expr
  414     | expr . '?' expr ':' expr
  417     | expr . "is" "type" '<' $@19 type_declaration_no_options '>' $@20
  418     | expr . "is" basic_type_declaration
  419     | expr . "is" "name"
  420     | expr . "as" "name"
  423     | expr . "as" "type" '<' $@21 type_declaration '>' $@22
  424     | expr . "as" basic_type_declaration
  425     | expr . '?' "as" "name"
  428     | expr . '?' "as" "type" '<' $@23 type_declaration '>' $@24
  429     | expr . '?' "as" basic_type_declaration
  437     | expr . "<|" expr
  438     | expr . "|>" expr
  439     | expr . "|>" basic_type_declaration
  449 expr_mtag: expr . '.' "$f" '(' expr ')'
  450          | expr . "?." "$f" '(' expr ')'
  451          | expr . '.' '.' "$f" '(' expr ')'
  452          | expr . '.' "?." "$f" '(' expr ')'
  453          | expr . "as" "$f" '(' expr ')'
  454          | expr . '?' "as" "$f" '(' expr ')'
  455          | expr . "is" "$f" '(' expr ')'
  709 make_struct_fields: make_struct_fields ',' "$f" '(' expr ')' copy_or_move expr .

    "is"   shift, and go to state 643
    "as"   shift, and go to state 644
    "<<"   shift, and go to state 645
    ">>"   shift, and go to state 646
    "++"   shift, and go to state 647
    "--"   shift, and go to state 648
    "<="   shift, and go to state 649
    ">="   shift, and go to state 650
    "=="   shift, and go to state 651
    "!="   shift, and go to state 652
    "->"   shift, and go to state 653
    "??"   shift, and go to state 654
    "?."   shift, and go to state 655
    "?["   shift, and go to state 656
    "<|"   shift, and go to state 657
    "|>"   shift, and go to state 658
    "<<<"  shift, and go to state 659
    ">>>"  shift, and go to state 660
    "&&"   shift, and go to state 661
    "||"   shift, and go to state 662
    "^^"   shift, and go to state 663
    ".."   shift, and go to state 664
    '?'    shift, and go to state 665
    '|'    shift, and go to state 666
    '^'    shift, and go to state 667
    '&'    shift, and go to state 668
    '<'    shift, and go to state 669
    '>'    shift, and go to state 670
    '-'    shift, and go to state 671
    '+'    shift, and go to state 672
    '*'    shift, and go to state 673
    '/'    shift, and go to state 674
    '%'    shift, and go to state 675
    '.'    shift, and go to state 676
    '['    shift, and go to state 677

    $default  reduce using rule 709 (make_struct_fields)


State 1386

   58 expression_else: elif_or_static_elif '(' expr ')' expression_block . expression_else

    "else"         shift, and go to state 1240
    "elif"         shift, and go to state 1241
    "static_elif"  shift, and go to state 1242

    $default  reduce using rule 56 (expression_else)

    elif_or_static_elif  go to state 1243
    expression_else      go to state 1391


State 1387

  270 tuple_expansion_variable_declaration: '(' tuple_expansion ')' ':' type_declaration_no_options copy_or_move_or_clone expr "end of expression" .

    $default  reduce using rule 270 (tuple_expansion_variable_declaration)


State 1388

  476 struct_variable_declaration_list: struct_variable_declaration_list optional_annotation_list "def" optional_public_or_private_member_variable optional_static_member_variable optional_override optional_constant $@27 function_declaration_header expression_block .

    $default  reduce using rule 476 (struct_variable_declaration_list)


State 1389

  737 make_dim_decl: "array" "struct" '<' $@83 type_declaration_no_options '>' $@84 '(' use_initializer make_struct_dim ')' .

    $default  reduce using rule 737 (make_dim_decl)


State 1390

  740 make_dim_decl: "array" "tuple" '<' $@85 type_declaration_no_options '>' $@86 '(' use_initializer make_struct_dim ')' .

    $default  reduce using rule 740 (make_dim_decl)


State 1391

   58 expression_else: elif_or_static_elif '(' expr ')' expression_block expression_else .

    $default  reduce using rule 58 (expression_else)
