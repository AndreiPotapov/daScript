Terminals unused in grammar

    "lexer error"
    "end of failed eader macro"
    LLPIPE


Grammar

    0 $accept: program $end

    1 program: %empty
    2        | program module_declaration
    3        | program structure_declaration
    4        | program enum_declaration
    5        | program global_let
    6        | program global_function_declaration
    7        | program expect_declaration
    8        | program require_declaration "end of expression"
    9        | program options_declaration "end of expression"
   10        | program alias_declaration
   11        | program variant_alias_declaration
   12        | program tuple_alias_declaration
   13        | program bitfield_alias_declaration
   14        | program top_level_reader_macro
   15        | program "end of expression"

   16 top_level_reader_macro: expr_reader "end of expression"

   17 optional_public_or_private_module: %empty
   18                                  | "public"
   19                                  | "private"

   20 module_name: '$'
   21            | "name"

   22 module_declaration: "module" module_name optional_shared optional_public_or_private_module

   23 character_sequence: STRING_CHARACTER
   24                   | STRING_CHARACTER_ESC
   25                   | character_sequence STRING_CHARACTER
   26                   | character_sequence STRING_CHARACTER_ESC

   27 string_constant: "start of the string" character_sequence "end of the string"
   28                | "start of the string" "end of the string"

   29 string_builder_body: %empty
   30                    | string_builder_body character_sequence
   31                    | string_builder_body "{" expr "}"

   32 string_builder: "start of the string" string_builder_body "end of the string"

   33 reader_character_sequence: STRING_CHARACTER
   34                          | reader_character_sequence STRING_CHARACTER

   35 $@1: %empty

   36 expr_reader: '%' name_in_namespace $@1 reader_character_sequence

   37 options_declaration: "options" annotation_argument_list

   38 require_declaration: "require" require_module

   39 require_module_name: "name"
   40                    | '%' require_module_name
   41                    | require_module_name '.' "name"
   42                    | require_module_name '/' "name"

   43 require_module: require_module_name is_public_module
   44               | require_module_name "as" "name" is_public_module

   45 is_public_module: %empty
   46                 | "public"

   47 expect_declaration: "expect" expect_list

   48 expect_list: expect_error
   49            | expect_list ',' expect_error

   50 expect_error: "integer constant"
   51             | "integer constant" ':' "integer constant"

   52 expression_label: "label" "integer constant" ':'

   53 expression_goto: "goto" "label" "integer constant"
   54                | "goto" expr

   55 elif_or_static_elif: "elif"
   56                    | "static_elif"

   57 expression_else: %empty
   58                | "else" expression_block
   59                | elif_or_static_elif '(' expr ')' expression_block expression_else

   60 if_or_static_if: "if"
   61                | "static_if"

   62 expression_else_one_liner: %empty
   63                          | "else" expression_if_one_liner

   64 expression_if_one_liner: expr
   65                        | expression_return
   66                        | expression_yield
   67                        | expression_break
   68                        | expression_continue

   69 expression_if_then_else: if_or_static_if '(' expr ')' expression_block expression_else
   70                        | expression_if_one_liner "if" '(' expr ')' expression_else_one_liner "end of expression"

   71 expression_for_loop: "for" '(' variable_name_with_pos_list "in" expr_list ')' expression_block

   72 expression_unsafe: "unsafe" expression_block

   73 expression_while_loop: "while" '(' expr ')' expression_block

   74 expression_with: "with" '(' expr ')' expression_block

   75 expression_with_alias: "assume" "name" '=' expr

   76 annotation_argument_value: string_constant
   77                          | "name"
   78                          | "integer constant"
   79                          | "floating point constant"
   80                          | "true"
   81                          | "false"

   82 annotation_argument_value_list: annotation_argument_value
   83                               | annotation_argument_value_list ',' annotation_argument_value

   84 annotation_argument_name: "name"
   85                         | "type"
   86                         | "in"

   87 annotation_argument: annotation_argument_name '=' string_constant
   88                    | annotation_argument_name '=' "name"
   89                    | annotation_argument_name '=' "integer constant"
   90                    | annotation_argument_name '=' "floating point constant"
   91                    | annotation_argument_name '=' "true"
   92                    | annotation_argument_name '=' "false"
   93                    | annotation_argument_name
   94                    | annotation_argument_name '=' '(' annotation_argument_value_list ')'

   95 annotation_argument_list: annotation_argument
   96                         | annotation_argument_list ',' annotation_argument

   97 metadata_argument_list: '@' annotation_argument
   98                       | metadata_argument_list '@' annotation_argument

   99 annotation_declaration_name: name_in_namespace
  100                            | "require"
  101                            | "private"

  102 annotation_declaration_basic: annotation_declaration_name
  103                             | annotation_declaration_name '(' annotation_argument_list ')'

  104 annotation_declaration: annotation_declaration_basic
  105                       | '!' annotation_declaration
  106                       | annotation_declaration "&&" annotation_declaration
  107                       | annotation_declaration "||" annotation_declaration
  108                       | annotation_declaration "^^" annotation_declaration
  109                       | '(' annotation_declaration ')'
  110                       | "|>" annotation_declaration

  111 annotation_list: annotation_declaration
  112                | annotation_list ',' annotation_declaration

  113 optional_annotation_list: %empty
  114                         | '[' annotation_list ']'

  115 optional_function_argument_list: %empty
  116                                | '(' ')'
  117                                | '(' function_argument_list ')'

  118 optional_function_type: %empty
  119                       | ':' type_declaration

  120 function_name: "name"
  121              | "operator" '!'
  122              | "operator" '~'
  123              | "operator" "+="
  124              | "operator" "-="
  125              | "operator" "*="
  126              | "operator" "/="
  127              | "operator" "%="
  128              | "operator" "&="
  129              | "operator" "|="
  130              | "operator" "^="
  131              | "operator" "&&="
  132              | "operator" "||="
  133              | "operator" "^^="
  134              | "operator" "&&"
  135              | "operator" "||"
  136              | "operator" "^^"
  137              | "operator" '+'
  138              | "operator" '-'
  139              | "operator" '*'
  140              | "operator" '/'
  141              | "operator" '%'
  142              | "operator" '<'
  143              | "operator" '>'
  144              | "operator" ".."
  145              | "operator" "=="
  146              | "operator" "!="
  147              | "operator" "<="
  148              | "operator" ">="
  149              | "operator" '&'
  150              | "operator" '|'
  151              | "operator" '^'
  152              | "++" "operator"
  153              | "--" "operator"
  154              | "operator" "++"
  155              | "operator" "--"
  156              | "operator" "<<"
  157              | "operator" ">>"
  158              | "operator" "<<="
  159              | "operator" ">>="
  160              | "operator" "<<<"
  161              | "operator" ">>>"
  162              | "operator" "<<<="
  163              | "operator" ">>>="
  164              | "operator" '[' ']'
  165              | "operator" "?[" ']'
  166              | "operator" '.'
  167              | "operator" "?."
  168              | "operator" '.' "name"
  169              | "operator" '.' "name" ":="
  170              | "operator" "?." "name"
  171              | "operator" ":="
  172              | "operator" "delete"
  173              | "operator" "??"
  174              | "operator" "is"
  175              | "operator" "as"
  176              | "operator" "is" "name"
  177              | "operator" "as" "name"
  178              | "operator" '?' "as"
  179              | "operator" '?' "as" "name"
  180              | "bool"
  181              | "string"
  182              | "int"
  183              | "int2"
  184              | "int3"
  185              | "int4"
  186              | "uint"
  187              | "uint2"
  188              | "uint3"
  189              | "uint4"
  190              | "float"
  191              | "float2"
  192              | "float3"
  193              | "float4"
  194              | "range"
  195              | "urange"
  196              | "range64"
  197              | "urange64"
  198              | "int64"
  199              | "uint64"
  200              | "double"
  201              | "int8"
  202              | "uint8"
  203              | "int16"
  204              | "uint16"

  205 global_function_declaration: optional_annotation_list "def" function_declaration

  206 optional_public_or_private_function: %empty
  207                                    | "private"
  208                                    | "public"

  209 function_declaration_header: function_name optional_function_argument_list optional_function_type

  210 $@2: %empty

  211 function_declaration: optional_public_or_private_function $@2 function_declaration_header expression_block

  212 expression_block_finally: %empty

  213 $@3: %empty

  214 $@4: %empty

  215 expression_block_finally: "finally" $@3 "begin of code block" expressions $@4 "end of code block"

  216 $@5: %empty

  217 $@6: %empty

  218 expression_block: $@5 "begin of code block" expressions $@6 "end of code block" expression_block_finally

  219 expr_call_pipe: expr_call expr_full_block_assumed_piped

  220 expression_any: "end of expression"
  221               | expr_assign "end of expression"
  222               | expression_delete "end of expression"
  223               | expression_let
  224               | expression_while_loop
  225               | expression_unsafe
  226               | expression_with
  227               | expression_with_alias "end of expression"
  228               | expression_for_loop
  229               | expression_break "end of expression"
  230               | expression_continue "end of expression"
  231               | expression_return "end of expression"
  232               | expression_yield "end of expression"
  233               | expression_if_then_else
  234               | expression_try_catch
  235               | expression_label "end of expression"
  236               | expression_goto "end of expression"
  237               | "pass" "end of expression"

  238 expressions: %empty
  239            | expressions expression_any
  240            | expressions error

  241 optional_expr_list: %empty
  242                   | expr_list optional_comma

  243 optional_expr_map_tuple_list: %empty
  244                             | expr_map_tuple_list optional_comma

  245 type_declaration_no_options_list: type_declaration
  246                                 | type_declaration_no_options_list c_or_s type_declaration

  247 name_in_namespace: "name"
  248                  | "name" "::" "name"
  249                  | "::" "name"

  250 expression_delete: "delete" expr
  251                  | "delete" "explicit" expr

  252 $@7: %empty

  253 $@8: %empty

  254 new_type_declaration: '<' $@7 type_declaration '>' $@8
  255                     | structure_type_declaration

  256 expr_new: "new" new_type_declaration
  257         | "new" new_type_declaration '(' use_initializer ')'
  258         | "new" new_type_declaration '(' expr_list ')'
  259         | "new" new_type_declaration '(' make_struct_single ')'
  260         | "new" new_type_declaration '(' "uninitialized" make_struct_single ')'
  261         | "new" make_decl

  262 expression_break: "break"

  263 expression_continue: "continue"

  264 expression_return: "return"
  265                  | "return" expr
  266                  | "return" "<-" expr

  267 expression_yield: "yield" expr
  268                 | "yield" "<-" expr

  269 expression_try_catch: "try" expression_block "recover" expression_block

  270 kwd_let_var_or_nothing: "let"
  271                       | "var"
  272                       | %empty

  273 kwd_let: "let"
  274        | "var"

  275 optional_in_scope: "inscope"
  276                  | %empty

  277 tuple_expansion: "name"
  278                | tuple_expansion ',' "name"

  279 tuple_expansion_variable_declaration: '(' tuple_expansion ')' ':' type_declaration_no_options copy_or_move_or_clone expr "end of expression"
  280                                     | '(' tuple_expansion ')' optional_ref copy_or_move_or_clone expr "end of expression"

  281 expression_let: kwd_let optional_in_scope let_variable_declaration
  282               | kwd_let optional_in_scope tuple_expansion_variable_declaration
  283               | kwd_let optional_in_scope "begin of code block" variable_declaration_list "end of code block"

  284 $@9: %empty

  285 $@10: %empty

  286 expr_cast: "cast" '<' $@9 type_declaration_no_options '>' $@10 expr

  287 $@11: %empty

  288 $@12: %empty

  289 expr_cast: "upcast" '<' $@11 type_declaration_no_options '>' $@12 expr

  290 $@13: %empty

  291 $@14: %empty

  292 expr_cast: "reinterpret" '<' $@13 type_declaration_no_options '>' $@14 expr

  293 $@15: %empty

  294 $@16: %empty

  295 expr_type_decl: "type" '<' $@15 type_declaration '>' $@16

  296 expr_type_info: "typeinfo" name_in_namespace '(' expr ')'
  297               | "typeinfo" name_in_namespace '<' "name" '>' '(' expr ')'
  298               | "typeinfo" name_in_namespace '<' "name" c_or_s "name" '>' '(' expr ')'

  299 expr_list: expr
  300          | expr_list ',' expr

  301 block_or_simple_block: expression_block
  302                      | "=>" expr
  303                      | "=>" "<-" expr

  304 block_or_lambda: '$'
  305                | '@'
  306                | '@' '@'

  307 capture_entry: '&' "name"
  308              | '=' "name"
  309              | "<-" "name"
  310              | ":=" "name"
  311              | "name" '(' "name" ')'

  312 capture_list: capture_entry
  313             | capture_list ',' capture_entry

  314 optional_capture_list: %empty
  315                      | "capture" '(' capture_list ')'

  316 expr_full_block: block_or_lambda optional_annotation_list optional_capture_list optional_function_argument_list optional_function_type block_or_simple_block

  317 expr_full_block_assumed_piped: block_or_lambda optional_annotation_list optional_capture_list optional_function_argument_list optional_function_type expression_block
  318                              | "begin of code block" expressions "end of code block"

  319 expr_numeric_const: "integer constant"
  320                   | "unsigned integer constant"
  321                   | "long integer constant"
  322                   | "unsigned long integer constant"
  323                   | "unsigned int8 constant"
  324                   | "floating point constant"
  325                   | "double constant"

  326 expr_assign: expr
  327            | expr '=' expr
  328            | expr "<-" expr
  329            | expr ":=" expr
  330            | expr "&=" expr
  331            | expr "|=" expr
  332            | expr "^=" expr
  333            | expr "&&=" expr
  334            | expr "||=" expr
  335            | expr "^^=" expr
  336            | expr "+=" expr
  337            | expr "-=" expr
  338            | expr "*=" expr
  339            | expr "/=" expr
  340            | expr "%=" expr
  341            | expr "<<=" expr
  342            | expr ">>=" expr
  343            | expr "<<<=" expr
  344            | expr ">>>=" expr

  345 expr_named_call: name_in_namespace '(' '[' make_struct_fields ']' ')'
  346                | name_in_namespace '(' expr_list ',' '[' make_struct_fields ']' ')'

  347 expr_method_call: expr "->" "name" '(' ')'
  348                 | expr "->" "name" '(' expr_list ')'

  349 func_addr_name: name_in_namespace
  350               | "$i" '(' expr ')'

  351 func_addr_expr: '@' '@' func_addr_name

  352 $@17: %empty

  353 $@18: %empty

  354 func_addr_expr: '@' '@' '<' $@17 type_declaration_no_options '>' $@18 func_addr_name

  355 $@19: %empty

  356 $@20: %empty

  357 func_addr_expr: '@' '@' '<' $@19 optional_function_argument_list optional_function_type '>' $@20 func_addr_name

  358 expr_field: expr '.' "name"
  359           | expr '.' '.' "name"
  360           | expr '.' "name" '(' ')'
  361           | expr '.' "name" '(' expr_list ')'
  362           | expr '.' basic_type_declaration '(' ')'
  363           | expr '.' basic_type_declaration '(' expr_list ')'

  364 $@21: %empty

  365 $@22: %empty

  366 expr_field: expr '.' $@21 error $@22

  367 expr_call: name_in_namespace '(' ')'
  368          | name_in_namespace '(' "uninitialized" ')'
  369          | name_in_namespace '(' make_struct_single ')'
  370          | name_in_namespace '(' "uninitialized" make_struct_single ')'
  371          | name_in_namespace '(' expr_list ')'
  372          | basic_type_declaration '(' ')'
  373          | basic_type_declaration '(' expr_list ')'

  374 expr: "null"
  375     | name_in_namespace
  376     | expr_numeric_const
  377     | expr_reader
  378     | string_builder
  379     | make_decl
  380     | "true"
  381     | "false"
  382     | expr_field
  383     | expr_mtag
  384     | '!' expr
  385     | '~' expr
  386     | '+' expr
  387     | '-' expr
  388     | expr "<<" expr
  389     | expr ">>" expr
  390     | expr "<<<" expr
  391     | expr ">>>" expr
  392     | expr '+' expr
  393     | expr '-' expr
  394     | expr '*' expr
  395     | expr '/' expr
  396     | expr '%' expr
  397     | expr '<' expr
  398     | expr '>' expr
  399     | expr "==" expr
  400     | expr "!=" expr
  401     | expr "<=" expr
  402     | expr ">=" expr
  403     | expr '&' expr
  404     | expr '|' expr
  405     | expr '^' expr
  406     | expr "&&" expr
  407     | expr "||" expr
  408     | expr "^^" expr
  409     | expr ".." expr
  410     | "++" expr
  411     | "--" expr
  412     | expr "++"
  413     | expr "--"
  414     | '(' expr_list optional_comma ')'
  415     | expr '[' expr ']'
  416     | expr '.' '[' expr ']'
  417     | expr "?[" expr ']'
  418     | expr '.' "?[" expr ']'
  419     | expr "?." "name"
  420     | expr '.' "?." "name"
  421     | func_addr_expr
  422     | expr_call
  423     | '*' expr
  424     | "deref" '(' expr ')'
  425     | "addr" '(' expr ')'
  426     | "generator" '<' type_declaration_no_options '>' optional_capture_list '(' ')'
  427     | "generator" '<' type_declaration_no_options '>' optional_capture_list '(' expr ')'
  428     | "generator" '<' type_declaration_no_options '>' optional_capture_list expression_block
  429     | expr "??" expr
  430     | expr '?' expr ':' expr

  431 $@23: %empty

  432 $@24: %empty

  433 expr: expr "is" "type" '<' $@23 type_declaration_no_options '>' $@24
  434     | expr "is" basic_type_declaration
  435     | expr "is" "name"
  436     | expr "as" "name"

  437 $@25: %empty

  438 $@26: %empty

  439 expr: expr "as" "type" '<' $@25 type_declaration '>' $@26
  440     | expr "as" basic_type_declaration
  441     | expr '?' "as" "name"

  442 $@27: %empty

  443 $@28: %empty

  444 expr: expr '?' "as" "type" '<' $@27 type_declaration '>' $@28
  445     | expr '?' "as" basic_type_declaration
  446     | expr_type_info
  447     | expr_type_decl
  448     | expr_cast
  449     | expr_new
  450     | expr_method_call
  451     | expr_named_call
  452     | expr_full_block
  453     | expr "<|" expr
  454     | expr "|>" expr
  455     | expr "|>" basic_type_declaration
  456     | expr_call_pipe
  457     | "unsafe" '(' expr ')'

  458 expr_mtag: "$$" '(' expr ')'
  459          | "$i" '(' expr ')'
  460          | "$v" '(' expr ')'
  461          | "$b" '(' expr ')'
  462          | "$a" '(' expr ')'
  463          | "..."
  464          | "$c" '(' expr ')' '(' ')'
  465          | "$c" '(' expr ')' '(' expr_list ')'
  466          | expr '.' "$f" '(' expr ')'
  467          | expr "?." "$f" '(' expr ')'
  468          | expr '.' '.' "$f" '(' expr ')'
  469          | expr '.' "?." "$f" '(' expr ')'
  470          | expr "as" "$f" '(' expr ')'
  471          | expr '?' "as" "$f" '(' expr ')'
  472          | expr "is" "$f" '(' expr ')'
  473          | '@' '@' "$c" '(' expr ')'

  474 optional_field_annotation: %empty
  475                          | metadata_argument_list

  476 optional_override: %empty
  477                  | "override"
  478                  | "sealed"

  479 optional_constant: %empty
  480                  | "const"

  481 optional_public_or_private_member_variable: %empty
  482                                           | "public"
  483                                           | "private"

  484 optional_static_member_variable: %empty
  485                                | "static"

  486 structure_variable_declaration: optional_field_annotation optional_static_member_variable optional_override optional_public_or_private_member_variable variable_declaration

  487 struct_variable_declaration_list: %empty

  488 $@29: %empty

  489 struct_variable_declaration_list: struct_variable_declaration_list $@29 structure_variable_declaration "end of expression"

  490 $@30: %empty

  491 struct_variable_declaration_list: struct_variable_declaration_list optional_annotation_list "def" optional_public_or_private_member_variable "abstract" optional_constant $@30 function_declaration_header "end of expression"

  492 $@31: %empty

  493 struct_variable_declaration_list: struct_variable_declaration_list optional_annotation_list "def" optional_public_or_private_member_variable optional_static_member_variable optional_override optional_constant $@31 function_declaration_header expression_block

  494 function_argument_declaration: optional_field_annotation kwd_let_var_or_nothing variable_declaration
  495                              | "$a" '(' expr ')'

  496 function_argument_list: function_argument_declaration
  497                       | function_argument_list "end of expression" function_argument_declaration

  498 tuple_type: type_declaration
  499           | "name" ':' type_declaration

  500 tuple_type_list: tuple_type
  501                | tuple_type_list c_or_s tuple_type

  502 tuple_alias_type_list: %empty
  503                      | tuple_alias_type_list c_or_s
  504                      | tuple_alias_type_list tuple_type c_or_s

  505 variant_type: "name" ':' type_declaration

  506 variant_type_list: variant_type
  507                  | variant_type_list c_or_s variant_type

  508 variant_alias_type_list: %empty
  509                        | variant_alias_type_list c_or_s
  510                        | variant_alias_type_list variant_type c_or_s

  511 copy_or_move: '='
  512             | "<-"

  513 variable_declaration: variable_name_with_pos_list
  514                     | variable_name_with_pos_list '&'
  515                     | variable_name_with_pos_list ':' type_declaration
  516                     | variable_name_with_pos_list ':' type_declaration copy_or_move expr
  517                     | variable_name_with_pos_list copy_or_move expr

  518 copy_or_move_or_clone: '='
  519                      | "<-"
  520                      | ":="

  521 optional_ref: %empty
  522             | '&'

  523 let_variable_name_with_pos_list: "name"
  524                                | "$i" '(' expr ')'
  525                                | "name" "aka" "name"
  526                                | let_variable_name_with_pos_list ',' "name"
  527                                | let_variable_name_with_pos_list ',' "name" "aka" "name"

  528 global_let_variable_name_with_pos_list: "name"
  529                                       | global_let_variable_name_with_pos_list ',' "name"

  530 variable_declaration_list: %empty
  531                          | variable_declaration_list "end of expression"
  532                          | variable_declaration_list let_variable_declaration

  533 let_variable_declaration: let_variable_name_with_pos_list ':' type_declaration_no_options "end of expression"
  534                         | let_variable_name_with_pos_list ':' type_declaration_no_options copy_or_move_or_clone expr "end of expression"
  535                         | let_variable_name_with_pos_list optional_ref copy_or_move_or_clone expr "end of expression"

  536 global_let_variable_declaration: global_let_variable_name_with_pos_list ':' type_declaration_no_options "end of expression"
  537                                | global_let_variable_name_with_pos_list ':' type_declaration_no_options copy_or_move_or_clone expr "end of expression"
  538                                | global_let_variable_name_with_pos_list optional_ref copy_or_move_or_clone expr "end of expression"

  539 optional_shared: %empty
  540                | "shared"

  541 optional_public_or_private_variable: %empty
  542                                    | "private"
  543                                    | "public"

  544 global_variable_declaration_list: %empty
  545                                 | global_variable_declaration_list "end of expression"

  546 $@32: %empty

  547 global_variable_declaration_list: global_variable_declaration_list $@32 optional_field_annotation let_variable_declaration

  548 global_let: kwd_let optional_shared optional_public_or_private_variable "begin of code block" global_variable_declaration_list "end of code block"

  549 $@33: %empty

  550 global_let: kwd_let optional_shared optional_public_or_private_variable $@33 optional_field_annotation global_let_variable_declaration

  551 enum_expression: "name"
  552                | "name" '=' expr

  553 enum_list: %empty
  554          | enum_expression
  555          | enum_list ',' enum_expression

  556 optional_public_or_private_alias: %empty
  557                                 | "private"
  558                                 | "public"

  559 $@34: %empty

  560 single_alias: optional_public_or_private_alias "name" $@34 '=' type_declaration

  561 alias_declaration: "typedef" single_alias "end of expression"

  562 optional_public_or_private_enum: %empty
  563                                | "private"
  564                                | "public"

  565 enum_name: "name"

  566 optional_enum_basic_type_declaration: %empty
  567                                     | ':' enum_basic_type_declaration

  568 $@35: %empty

  569 $@36: %empty

  570 enum_declaration: optional_annotation_list "enum" optional_public_or_private_enum enum_name optional_enum_basic_type_declaration "begin of code block" $@35 enum_list optional_comma $@36 "end of code block"

  571 optional_structure_parent: %empty
  572                          | ':' name_in_namespace

  573 optional_sealed: %empty
  574                | "sealed"

  575 structure_name: optional_sealed "name" optional_structure_parent

  576 class_or_struct: "class"
  577                | "struct"

  578 optional_public_or_private_structure: %empty
  579                                     | "private"
  580                                     | "public"

  581 optional_struct_variable_declaration_list: %empty
  582                                          | "begin of code block" struct_variable_declaration_list "end of code block"

  583 $@37: %empty

  584 $@38: %empty

  585 structure_declaration: optional_annotation_list class_or_struct optional_public_or_private_structure $@37 structure_name $@38 optional_struct_variable_declaration_list

  586 variable_name_with_pos_list: "name"
  587                            | "$i" '(' expr ')'
  588                            | "name" "aka" "name"
  589                            | variable_name_with_pos_list ',' "name"
  590                            | variable_name_with_pos_list ',' "name" "aka" "name"

  591 basic_type_declaration: "bool"
  592                       | "string"
  593                       | "int"
  594                       | "int8"
  595                       | "int16"
  596                       | "int64"
  597                       | "int2"
  598                       | "int3"
  599                       | "int4"
  600                       | "uint"
  601                       | "uint8"
  602                       | "uint16"
  603                       | "uint64"
  604                       | "uint2"
  605                       | "uint3"
  606                       | "uint4"
  607                       | "float"
  608                       | "float2"
  609                       | "float3"
  610                       | "float4"
  611                       | "void"
  612                       | "range"
  613                       | "urange"
  614                       | "range64"
  615                       | "urange64"
  616                       | "double"
  617                       | "bitfield"

  618 enum_basic_type_declaration: "int"
  619                            | "int8"
  620                            | "int16"
  621                            | "uint"
  622                            | "uint8"
  623                            | "uint16"
  624                            | "int64"
  625                            | "uint64"

  626 structure_type_declaration: name_in_namespace

  627 auto_type_declaration: "auto"
  628                      | "auto" '(' "name" ')'
  629                      | "$t" '(' expr ')'

  630 bitfield_bits: "name"
  631              | bitfield_bits "end of expression" "name"

  632 bitfield_alias_bits: %empty
  633                    | "name"
  634                    | bitfield_alias_bits ',' "name"

  635 $@39: %empty

  636 $@40: %empty

  637 bitfield_type_declaration: "bitfield" '<' $@39 bitfield_bits '>' $@40

  638 c_or_s: ','
  639       | "end of expression"

  640 table_type_pair: type_declaration
  641                | type_declaration c_or_s type_declaration

  642 dim_list: '[' expr ']'
  643         | '[' ']'
  644         | dim_list '[' expr ']'
  645         | dim_list '[' ']'

  646 type_declaration_no_options: type_declaration_no_options_no_dim
  647                            | type_declaration_no_options_no_dim dim_list

  648 type_declaration_no_options_no_dim: basic_type_declaration
  649                                   | auto_type_declaration
  650                                   | bitfield_type_declaration
  651                                   | structure_type_declaration

  652 $@41: %empty

  653 $@42: %empty

  654 type_declaration_no_options_no_dim: "type" '<' $@41 type_declaration '>' $@42
  655                                   | "typedecl" '(' expr ')'
  656                                   | '$' name_in_namespace '(' optional_expr_list ')'

  657 $@43: %empty

  658 type_declaration_no_options_no_dim: '$' name_in_namespace '<' $@43 type_declaration_no_options_list '>' '(' optional_expr_list ')'
  659                                   | type_declaration_no_options_no_dim '-' '[' ']'
  660                                   | type_declaration_no_options_no_dim "explicit"
  661                                   | type_declaration_no_options_no_dim "const"
  662                                   | type_declaration_no_options_no_dim '-' "const"
  663                                   | type_declaration_no_options_no_dim '&'
  664                                   | type_declaration_no_options_no_dim '-' '&'
  665                                   | type_declaration_no_options_no_dim '#'
  666                                   | type_declaration_no_options_no_dim "implicit"
  667                                   | type_declaration_no_options_no_dim '-' '#'
  668                                   | type_declaration_no_options_no_dim "==" "const"
  669                                   | type_declaration_no_options_no_dim "==" '&'
  670                                   | type_declaration_no_options_no_dim '?'

  671 $@44: %empty

  672 $@45: %empty

  673 type_declaration_no_options_no_dim: "smart_ptr" '<' $@44 type_declaration '>' $@45
  674                                   | type_declaration_no_options_no_dim "??"

  675 $@46: %empty

  676 $@47: %empty

  677 type_declaration_no_options_no_dim: "array" '<' $@46 type_declaration '>' $@47

  678 $@48: %empty

  679 $@49: %empty

  680 type_declaration_no_options_no_dim: "table" '<' $@48 table_type_pair '>' $@49

  681 $@50: %empty

  682 $@51: %empty

  683 type_declaration_no_options_no_dim: "iterator" '<' $@50 type_declaration '>' $@51
  684                                   | "block"

  685 $@52: %empty

  686 $@53: %empty

  687 type_declaration_no_options_no_dim: "block" '<' $@52 type_declaration '>' $@53

  688 $@54: %empty

  689 $@55: %empty

  690 type_declaration_no_options_no_dim: "block" '<' $@54 optional_function_argument_list optional_function_type '>' $@55
  691                                   | "function"

  692 $@56: %empty

  693 $@57: %empty

  694 type_declaration_no_options_no_dim: "function" '<' $@56 type_declaration '>' $@57

  695 $@58: %empty

  696 $@59: %empty

  697 type_declaration_no_options_no_dim: "function" '<' $@58 optional_function_argument_list optional_function_type '>' $@59
  698                                   | "lambda"

  699 $@60: %empty

  700 $@61: %empty

  701 type_declaration_no_options_no_dim: "lambda" '<' $@60 type_declaration '>' $@61

  702 $@62: %empty

  703 $@63: %empty

  704 type_declaration_no_options_no_dim: "lambda" '<' $@62 optional_function_argument_list optional_function_type '>' $@63

  705 $@64: %empty

  706 $@65: %empty

  707 type_declaration_no_options_no_dim: "tuple" '<' $@64 tuple_type_list '>' $@65

  708 $@66: %empty

  709 $@67: %empty

  710 type_declaration_no_options_no_dim: "variant" '<' $@66 variant_type_list '>' $@67

  711 type_declaration: type_declaration_no_options
  712                 | type_declaration '|' type_declaration_no_options
  713                 | type_declaration '|' '#'

  714 $@68: %empty

  715 $@69: %empty

  716 $@70: %empty

  717 tuple_alias_declaration: "tuple" optional_public_or_private_alias "name" $@68 "begin of code block" $@69 tuple_alias_type_list $@70 "end of code block"

  718 $@71: %empty

  719 $@72: %empty

  720 $@73: %empty

  721 variant_alias_declaration: "variant" optional_public_or_private_alias "name" $@71 "begin of code block" $@72 variant_alias_type_list $@73 "end of code block"

  722 $@74: %empty

  723 $@75: %empty

  724 $@76: %empty

  725 bitfield_alias_declaration: "bitfield" optional_public_or_private_alias "name" $@74 "begin of code block" $@75 bitfield_alias_bits optional_comma $@76 "end of code block"

  726 make_decl: make_struct_decl
  727          | make_dim_decl
  728          | make_table_decl
  729          | array_comprehension
  730          | make_tuple_call

  731 make_struct_fields: "name" copy_or_move expr
  732                   | "name" ":=" expr
  733                   | make_struct_fields ',' "name" copy_or_move expr
  734                   | make_struct_fields ',' "name" ":=" expr
  735                   | "$f" '(' expr ')' copy_or_move expr
  736                   | "$f" '(' expr ')' ":=" expr
  737                   | make_struct_fields ',' "$f" '(' expr ')' copy_or_move expr
  738                   | make_struct_fields ',' "$f" '(' expr ')' ":=" expr

  739 make_variant_dim: make_struct_fields

  740 make_struct_single: make_struct_fields

  741 make_struct_dim_list: '(' make_struct_fields ')'
  742                     | make_struct_dim_list ',' '(' make_struct_fields ')'

  743 make_struct_dim_decl: make_struct_fields
  744                     | make_struct_dim_list optional_comma

  745 optional_make_struct_dim_decl: make_struct_dim_decl
  746                              | %empty

  747 use_initializer: %empty
  748                | "uninitialized"

  749 $@77: %empty

  750 $@78: %empty

  751 make_struct_decl: "struct" '<' $@77 type_declaration_no_options '>' $@78 '(' use_initializer optional_make_struct_dim_decl ')'

  752 $@79: %empty

  753 $@80: %empty

  754 make_struct_decl: "class" '<' $@79 type_declaration_no_options '>' $@80 '(' use_initializer optional_make_struct_dim_decl ')'

  755 $@81: %empty

  756 $@82: %empty

  757 make_struct_decl: "variant" '<' $@81 type_declaration_no_options '>' $@82 '(' make_variant_dim ')'

  758 $@83: %empty

  759 $@84: %empty

  760 make_struct_decl: "default" '<' $@83 type_declaration_no_options '>' $@84 use_initializer

  761 make_map_tuple: expr "=>" expr
  762               | expr

  763 make_tuple_call: "tuple" '(' expr_list optional_comma ')'

  764 $@85: %empty

  765 $@86: %empty

  766 make_tuple_call: "tuple" '<' $@85 type_declaration_no_options '>' $@86 '(' use_initializer optional_make_struct_dim_decl ')'

  767 make_dim_decl: '[' expr_list optional_comma ']'

  768 $@87: %empty

  769 $@88: %empty

  770 make_dim_decl: "array" "struct" '<' $@87 type_declaration_no_options '>' $@88 '(' use_initializer optional_make_struct_dim_decl ')'

  771 $@89: %empty

  772 $@90: %empty

  773 make_dim_decl: "array" "tuple" '<' $@89 type_declaration_no_options '>' $@90 '(' use_initializer optional_make_struct_dim_decl ')'

  774 $@91: %empty

  775 $@92: %empty

  776 make_dim_decl: "array" "variant" '<' $@91 type_declaration_no_options '>' $@92 '(' make_variant_dim ')'
  777              | "array" '(' expr_list optional_comma ')'

  778 $@93: %empty

  779 $@94: %empty

  780 make_dim_decl: "array" '<' $@93 type_declaration_no_options '>' $@94 '(' optional_expr_list ')'
  781              | "fixed_array" '(' expr_list optional_comma ')'

  782 $@95: %empty

  783 $@96: %empty

  784 make_dim_decl: "fixed_array" '<' $@95 type_declaration_no_options '>' $@96 '(' expr_list optional_comma ')'

  785 expr_map_tuple_list: make_map_tuple
  786                    | expr_map_tuple_list ',' make_map_tuple

  787 make_table_decl: "begin of code block" expr_map_tuple_list optional_comma "end of code block"
  788                | "table" '(' expr_map_tuple_list optional_comma ')'
  789                | "table" '<' type_declaration_no_options '>' '(' optional_expr_map_tuple_list ')'
  790                | "table" '<' type_declaration_no_options c_or_s type_declaration_no_options '>' '(' optional_expr_map_tuple_list ')'

  791 array_comprehension_where: %empty
  792                          | "end of expression" "where" expr

  793 optional_comma: %empty
  794               | ','

  795 array_comprehension: '[' "for" '(' variable_name_with_pos_list "in" expr_list ')' "end of expression" expr array_comprehension_where ']'
  796                    | '[' "iterator" "for" '(' variable_name_with_pos_list "in" expr_list ')' "end of expression" expr array_comprehension_where ']'
  797                    | "begin of code block" "for" '(' variable_name_with_pos_list "in" expr_list ')' "end of expression" make_map_tuple array_comprehension_where "end of code block"


Terminals, with rules where they appear

    $end (0) 0
    '!' (33) 105 121 384
    '#' (35) 665 667 713
    '$' (36) 20 304 656 658
    '%' (37) 36 40 141 396
    '&' (38) 149 307 403 514 522 663 664 669
    '(' (40) 59 69 70 71 73 74 94 103 109 116 117 257 258 259 260 279 280 296 297 298 311 315 345 346 347 348 350 360 361 362 363 367 368 369 370 371 372 373 414 424 425 426 427 457 458 459 460 461 462 464 465 466 467 468 469 470 471 472 473 495 524 587 628 629 655 656 658 735 736 737 738 741 742 751 754 757 763 766 770 773 776 777 780 781 784 788 789 790 795 796 797
    ')' (41) 59 69 70 71 73 74 94 103 109 116 117 257 258 259 260 279 280 296 297 298 311 315 345 346 347 348 350 360 361 362 363 367 368 369 370 371 372 373 414 424 425 426 427 457 458 459 460 461 462 464 465 466 467 468 469 470 471 472 473 495 524 587 628 629 655 656 658 735 736 737 738 741 742 751 754 757 763 766 770 773 776 777 780 781 784 788 789 790 795 796 797
    '*' (42) 139 394 423
    '+' (43) 137 386 392
    ',' (44) 49 83 96 112 278 300 313 346 526 527 529 555 589 590 634 638 733 734 737 738 742 786 794
    '-' (45) 138 387 393 659 662 664 667
    '.' (46) 41 166 168 169 358 359 360 361 362 363 366 416 418 420 466 468 469
    '/' (47) 42 140 395
    ':' (58) 51 52 119 279 430 499 505 515 516 533 534 536 537 567 572
    "end of expression" (59) 8 9 15 16 70 220 221 222 227 229 230 231 232 235 236 237 279 280 489 491 497 531 533 534 535 536 537 538 545 561 631 639 792 795 796 797
    '<' (60) 142 254 286 289 292 295 297 298 354 357 397 426 427 428 433 439 444 637 654 658 673 677 680 683 687 690 694 697 701 704 707 710 751 754 757 760 766 770 773 776 780 784 789 790
    '=' (61) 75 87 88 89 90 91 92 94 308 327 511 518 552 560
    '>' (62) 143 254 286 289 292 295 297 298 354 357 398 426 427 428 433 439 444 637 654 658 673 677 680 683 687 690 694 697 701 704 707 710 751 754 757 760 766 770 773 776 780 784 789 790
    '?' (63) 178 179 430 441 444 445 471 670
    '@' (64) 97 98 305 306 351 354 357 473
    '[' (91) 114 164 345 346 415 416 642 643 644 645 659 767 795 796
    ']' (93) 114 164 165 345 346 415 416 417 418 642 643 644 645 659 767 795 796
    '^' (94) 151 405
    "begin of code block" (123) 215 218 283 318 548 570 582 717 721 725 787 797
    '|' (124) 150 404 712 713
    "end of code block" (125) 215 218 283 318 548 570 582 717 721 725 787 797
    '~' (126) 122 385
    error (256) 240 366
    "lexer error" (258)
    "capture" (259) 315
    "struct" (260) 577 751 770
    "class" (261) 576 754
    "let" (262) 270 273
    "def" (263) 205 491 493
    "while" (264) 73
    "if" (265) 60 70
    "static_if" (266) 61
    "else" (267) 58 63
    "for" (268) 71 795 796 797
    "recover" (269) 269
    "true" (270) 80 91 380
    "false" (271) 81 92 381
    "new" (272) 256 257 258 259 260 261
    "typeinfo" (273) 296 297 298
    "type" (274) 85 295 433 439 444 654
    "in" (275) 71 86 795 796 797
    "is" (276) 174 176 433 434 435 472
    "as" (277) 44 175 177 178 179 436 439 440 441 444 445 470 471
    "elif" (278) 55
    "static_elif" (279) 56
    "array" (280) 677 770 773 776 777 780
    "return" (281) 264 265 266
    "null" (282) 374
    "break" (283) 262
    "try" (284) 269
    "options" (285) 37
    "table" (286) 680 788 789 790
    "expect" (287) 47
    "const" (288) 480 661 662 668
    "require" (289) 38 100
    "operator" (290) 121 122 123 124 125 126 127 128 129 130 131 132 133 134 135 136 137 138 139 140 141 142 143 144 145 146 147 148 149 150 151 152 153 154 155 156 157 158 159 160 161 162 163 164 165 166 167 168 169 170 171 172 173 174 175 176 177 178 179
    "enum" (291) 570
    "finally" (292) 215
    "delete" (293) 172 250 251
    "deref" (294) 424
    "typedef" (295) 561
    "typedecl" (296) 655
    "with" (297) 74
    "aka" (298) 525 527 588 590
    "assume" (299) 75
    "cast" (300) 286
    "override" (301) 477
    "abstract" (302) 491
    "upcast" (303) 289
    "iterator" (304) 683 796
    "var" (305) 271 274
    "addr" (306) 425
    "continue" (307) 263
    "where" (308) 792
    "pass" (309) 237
    "reinterpret" (310) 292
    "module" (311) 22
    "public" (312) 18 46 208 482 543 558 564 580
    "label" (313) 52 53
    "goto" (314) 53 54
    "implicit" (315) 666
    "explicit" (316) 251 660
    "shared" (317) 540
    "private" (318) 19 101 207 483 542 557 563 579
    "smart_ptr" (319) 673
    "unsafe" (320) 72 457
    "inscope" (321) 275
    "static" (322) 485
    "fixed_array" (323) 781 784
    "default" (324) 760
    "uninitialized" (325) 260 368 370 748
    "bool" (326) 180 591
    "void" (327) 611
    "string" (328) 181 592
    "auto" (329) 627 628
    "int" (330) 182 593 618
    "int2" (331) 183 597
    "int3" (332) 184 598
    "int4" (333) 185 599
    "uint" (334) 186 600 621
    "bitfield" (335) 617 637 725
    "uint2" (336) 187 604
    "uint3" (337) 188 605
    "uint4" (338) 189 606
    "float" (339) 190 607
    "float2" (340) 191 608
    "float3" (341) 192 609
    "float4" (342) 193 610
    "range" (343) 194 612
    "urange" (344) 195 613
    "range64" (345) 196 614
    "urange64" (346) 197 615
    "block" (347) 684 687 690
    "int64" (348) 198 596 624
    "uint64" (349) 199 603 625
    "double" (350) 200 616
    "function" (351) 691 694 697
    "lambda" (352) 698 701 704
    "int8" (353) 201 594 619
    "uint8" (354) 202 601 622
    "int16" (355) 203 595 620
    "uint16" (356) 204 602 623
    "tuple" (357) 707 717 763 766 773
    "variant" (358) 710 721 757 776
    "generator" (359) 426 427 428
    "yield" (360) 267 268
    "sealed" (361) 478 574
    "+=" (362) 123 336
    "-=" (363) 124 337
    "/=" (364) 126 339
    "*=" (365) 125 338
    "%=" (366) 127 340
    "&=" (367) 128 330
    "|=" (368) 129 331
    "^=" (369) 130 332
    "<<" (370) 156 388
    ">>" (371) 157 389
    "++" (372) 152 154 410 412
    "--" (373) 153 155 411 413
    "<=" (374) 147 401
    "<<=" (375) 158 341
    ">>=" (376) 159 342
    ">=" (377) 148 402
    "==" (378) 145 399 668 669
    "!=" (379) 146 400
    "->" (380) 347 348
    "<-" (381) 266 268 303 309 328 512 519
    "??" (382) 173 429 674
    "?." (383) 167 170 419 420 467 469
    "?[" (384) 165 417 418
    "<|" (385) 453
    "|>" (386) 110 454 455
    ":=" (387) 169 171 310 329 520 732 734 736 738
    "<<<" (388) 160 390
    ">>>" (389) 161 391
    "<<<=" (390) 162 343
    ">>>=" (391) 163 344
    "=>" (392) 302 303 761
    "::" (393) 248 249
    "&&" (394) 106 134 406
    "||" (395) 107 135 407
    "^^" (396) 108 136 408
    "&&=" (397) 131 333
    "||=" (398) 132 334
    "^^=" (399) 133 335
    ".." (400) 144 409
    "$$" (401) 458
    "$i" (402) 350 459 524 587
    "$v" (403) 460
    "$b" (404) 461
    "$a" (405) 462 495
    "$t" (406) 629
    "$c" (407) 464 465 473
    "$f" (408) 466 467 468 469 470 471 472 735 736 737 738
    "..." (409) 463
    "integer constant" <i> (410) 50 51 52 53 78 89 319
    "long integer constant" <i64> (411) 321
    "unsigned integer constant" <ui> (412) 320
    "unsigned long integer constant" <ui64> (413) 322
    "unsigned int8 constant" <ui> (414) 323
    "floating point constant" <fd> (415) 79 90 324
    "double constant" <d> (416) 325
    "name" <s> (417) 21 39 41 42 44 75 77 84 88 120 168 169 170 176 177 179 247 248 249 277 278 297 298 307 308 309 310 311 347 348 358 359 360 361 419 420 435 436 441 499 505 523 525 526 527 528 529 551 552 560 565 575 586 588 589 590 628 630 631 633 634 717 721 725 731 732 733 734
    "start of the string" (418) 27 28 32
    STRING_CHARACTER <ch> (419) 23 25 33 34
    STRING_CHARACTER_ESC (420) 24 26
    "end of the string" (421) 27 28 32
    "{" (422) 31
    "}" (423) 31
    "end of failed eader macro" (424)
    UNARY_MINUS (425)
    UNARY_PLUS (426)
    PRE_INC (427)
    PRE_DEC (428)
    LLPIPE (429)
    POST_INC (430)
    POST_DEC (431)
    DEREF (432)


Nonterminals, with rules where they appear

    $accept (205)
        on left: 0
    program (206)
        on left: 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15
        on right: 0 2 3 4 5 6 7 8 9 10 11 12 13 14 15
    top_level_reader_macro (207)
        on left: 16
        on right: 14
    optional_public_or_private_module <b> (208)
        on left: 17 18 19
        on right: 22
    module_name <s> (209)
        on left: 20 21
        on right: 22
    module_declaration (210)
        on left: 22
        on right: 2
    character_sequence <s> (211)
        on left: 23 24 25 26
        on right: 25 26 27 30
    string_constant <s> (212)
        on left: 27 28
        on right: 76 87
    string_builder_body <pExpression> (213)
        on left: 29 30 31
        on right: 30 31 32
    string_builder <pExpression> (214)
        on left: 32
        on right: 378
    reader_character_sequence (215)
        on left: 33 34
        on right: 34 36
    expr_reader <pExpression> (216)
        on left: 36
        on right: 16 377
    $@1 (217)
        on left: 35
        on right: 36
    options_declaration (218)
        on left: 37
        on right: 9
    require_declaration (219)
        on left: 38
        on right: 8
    require_module_name <s> (220)
        on left: 39 40 41 42
        on right: 40 41 42 43 44
    require_module (221)
        on left: 43 44
        on right: 38
    is_public_module <b> (222)
        on left: 45 46
        on right: 43 44
    expect_declaration (223)
        on left: 47
        on right: 7
    expect_list (224)
        on left: 48 49
        on right: 47 49
    expect_error (225)
        on left: 50 51
        on right: 48 49
    expression_label <pExpression> (226)
        on left: 52
        on right: 235
    expression_goto <pExpression> (227)
        on left: 53 54
        on right: 236
    elif_or_static_elif <b> (228)
        on left: 55 56
        on right: 59
    expression_else <pExpression> (229)
        on left: 57 58 59
        on right: 59 69
    if_or_static_if <b> (230)
        on left: 60 61
        on right: 69
    expression_else_one_liner <pExpression> (231)
        on left: 62 63
        on right: 70
    expression_if_one_liner <pExpression> (232)
        on left: 64 65 66 67 68
        on right: 63 70
    expression_if_then_else <pExpression> (233)
        on left: 69 70
        on right: 233
    expression_for_loop <pExpression> (234)
        on left: 71
        on right: 228
    expression_unsafe <pExpression> (235)
        on left: 72
        on right: 225
    expression_while_loop <pExpression> (236)
        on left: 73
        on right: 224
    expression_with <pExpression> (237)
        on left: 74
        on right: 226
    expression_with_alias <pExpression> (238)
        on left: 75
        on right: 227
    annotation_argument_value <aa> (239)
        on left: 76 77 78 79 80 81
        on right: 82 83
    annotation_argument_value_list <aaList> (240)
        on left: 82 83
        on right: 83 94
    annotation_argument_name <s> (241)
        on left: 84 85 86
        on right: 87 88 89 90 91 92 93 94
    annotation_argument <aa> (242)
        on left: 87 88 89 90 91 92 93 94
        on right: 95 96 97 98
    annotation_argument_list <aaList> (243)
        on left: 95 96
        on right: 37 96 103
    metadata_argument_list <aaList> (244)
        on left: 97 98
        on right: 98 475
    annotation_declaration_name <s> (245)
        on left: 99 100 101
        on right: 102 103
    annotation_declaration_basic <fa> (246)
        on left: 102 103
        on right: 104
    annotation_declaration <fa> (247)
        on left: 104 105 106 107 108 109 110
        on right: 105 106 107 108 109 110 111 112
    annotation_list <faList> (248)
        on left: 111 112
        on right: 112 114
    optional_annotation_list <faList> (249)
        on left: 113 114
        on right: 205 316 317 491 493 570 585
    optional_function_argument_list <pVarDeclList> (250)
        on left: 115 116 117
        on right: 209 316 317 357 690 697 704
    optional_function_type <pTypeDecl> (251)
        on left: 118 119
        on right: 209 316 317 357 690 697 704
    function_name <s> (252)
        on left: 120 121 122 123 124 125 126 127 128 129 130 131 132 133 134 135 136 137 138 139 140 141 142 143 144 145 146 147 148 149 150 151 152 153 154 155 156 157 158 159 160 161 162 163 164 165 166 167 168 169 170 171 172 173 174 175 176 177 178 179 180 181 182 183 184 185 186 187 188 189 190 191 192 193 194 195 196 197 198 199 200 201 202 203 204
        on right: 209
    global_function_declaration (253)
        on left: 205
        on right: 6
    optional_public_or_private_function <b> (254)
        on left: 206 207 208
        on right: 211
    function_declaration_header <pFuncDecl> (255)
        on left: 209
        on right: 211 491 493
    function_declaration <pFuncDecl> (256)
        on left: 211
        on right: 205
    $@2 (257)
        on left: 210
        on right: 211
    expression_block_finally <pExpression> (258)
        on left: 212 215
        on right: 218
    $@3 (259)
        on left: 213
        on right: 215
    $@4 (260)
        on left: 214
        on right: 215
    expression_block <pExpression> (261)
        on left: 218
        on right: 58 59 69 71 72 73 74 211 269 301 317 428 493
    $@5 (262)
        on left: 216
        on right: 218
    $@6 (263)
        on left: 217
        on right: 218
    expr_call_pipe <pExpression> (264)
        on left: 219
        on right: 456
    expression_any <pExpression> (265)
        on left: 220 221 222 223 224 225 226 227 228 229 230 231 232 233 234 235 236 237
        on right: 239
    expressions <pExpression> (266)
        on left: 238 239 240
        on right: 215 218 239 240 318
    optional_expr_list <pExpression> (267)
        on left: 241 242
        on right: 656 658 780
    optional_expr_map_tuple_list <pExpression> (268)
        on left: 243 244
        on right: 789 790
    type_declaration_no_options_list <pTypeDeclList> (269)
        on left: 245 246
        on right: 246 658
    name_in_namespace <s> (270)
        on left: 247 248 249
        on right: 36 99 296 297 298 345 346 349 367 368 369 370 371 375 572 626 656 658
    expression_delete <pExpression> (271)
        on left: 250 251
        on right: 222
    new_type_declaration <pTypeDecl> (272)
        on left: 254 255
        on right: 256 257 258 259 260
    $@7 (273)
        on left: 252
        on right: 254
    $@8 (274)
        on left: 253
        on right: 254
    expr_new <pExpression> (275)
        on left: 256 257 258 259 260 261
        on right: 449
    expression_break <pExpression> (276)
        on left: 262
        on right: 67 229
    expression_continue <pExpression> (277)
        on left: 263
        on right: 68 230
    expression_return <pExpression> (278)
        on left: 264 265 266
        on right: 65 231
    expression_yield <pExpression> (279)
        on left: 267 268
        on right: 66 232
    expression_try_catch <pExpression> (280)
        on left: 269
        on right: 234
    kwd_let_var_or_nothing <b> (281)
        on left: 270 271 272
        on right: 494
    kwd_let <b> (282)
        on left: 273 274
        on right: 281 282 283 548 550
    optional_in_scope <b> (283)
        on left: 275 276
        on right: 281 282 283
    tuple_expansion <pNameList> (284)
        on left: 277 278
        on right: 278 279 280
    tuple_expansion_variable_declaration <pVarDecl> (285)
        on left: 279 280
        on right: 282
    expression_let <pExpression> (286)
        on left: 281 282 283
        on right: 223
    expr_cast <pExpression> (287)
        on left: 286 289 292
        on right: 448
    $@9 (288)
        on left: 284
        on right: 286
    $@10 (289)
        on left: 285
        on right: 286
    $@11 (290)
        on left: 287
        on right: 289
    $@12 (291)
        on left: 288
        on right: 289
    $@13 (292)
        on left: 290
        on right: 292
    $@14 (293)
        on left: 291
        on right: 292
    expr_type_decl <pExpression> (294)
        on left: 295
        on right: 447
    $@15 (295)
        on left: 293
        on right: 295
    $@16 (296)
        on left: 294
        on right: 295
    expr_type_info <pExpression> (297)
        on left: 296 297 298
        on right: 446
    expr_list <pExpression> (298)
        on left: 299 300
        on right: 71 242 258 300 346 348 361 363 371 373 414 465 763 767 777 781 784 795 796 797
    block_or_simple_block <pExpression> (299)
        on left: 301 302 303
        on right: 316
    block_or_lambda <i> (300)
        on left: 304 305 306
        on right: 316 317
    capture_entry <pCapt> (301)
        on left: 307 308 309 310 311
        on right: 312 313
    capture_list <pCaptList> (302)
        on left: 312 313
        on right: 313 315
    optional_capture_list <pCaptList> (303)
        on left: 314 315
        on right: 316 317 426 427 428
    expr_full_block <pExpression> (304)
        on left: 316
        on right: 452
    expr_full_block_assumed_piped <pExpression> (305)
        on left: 317 318
        on right: 219
    expr_numeric_const <pExpression> (306)
        on left: 319 320 321 322 323 324 325
        on right: 376
    expr_assign <pExpression> (307)
        on left: 326 327 328 329 330 331 332 333 334 335 336 337 338 339 340 341 342 343 344
        on right: 221
    expr_named_call <pExpression> (308)
        on left: 345 346
        on right: 451
    expr_method_call <pExpression> (309)
        on left: 347 348
        on right: 450
    func_addr_name <pExpression> (310)
        on left: 349 350
        on right: 351 354 357
    func_addr_expr <pExpression> (311)
        on left: 351 354 357
        on right: 421
    $@17 (312)
        on left: 352
        on right: 354
    $@18 (313)
        on left: 353
        on right: 354
    $@19 (314)
        on left: 355
        on right: 357
    $@20 (315)
        on left: 356
        on right: 357
    expr_field <pExpression> (316)
        on left: 358 359 360 361 362 363 366
        on right: 382
    $@21 (317)
        on left: 364
        on right: 366
    $@22 (318)
        on left: 365
        on right: 366
    expr_call <pExpression> (319)
        on left: 367 368 369 370 371 372 373
        on right: 219 422
    expr <pExpression> (320)
        on left: 374 375 376 377 378 379 380 381 382 383 384 385 386 387 388 389 390 391 392 393 394 395 396 397 398 399 400 401 402 403 404 405 406 407 408 409 410 411 412 413 414 415 416 417 418 419 420 421 422 423 424 425 426 427 428 429 430 433 434 435 436 439 440 441 444 445 446 447 448 449 450 451 452 453 454 455 456 457
        on right
    $@23 (321)
        on left: 431
        on right: 433
    $@24 (322)
        on left: 432
        on right: 433
    $@25 (323)
        on left: 437
        on right: 439
    $@26 (324)
        on left: 438
        on right: 439
    $@27 (325)
        on left: 442
        on right: 444
    $@28 (326)
        on left: 443
        on right: 444
    expr_mtag <pExpression> (327)
        on left: 458 459 460 461 462 463 464 465 466 467 468 469 470 471 472 473
        on right: 383
    optional_field_annotation <aaList> (328)
        on left: 474 475
        on right: 486 494 547 550
    optional_override <i> (329)
        on left: 476 477 478
        on right: 486 493
    optional_constant <b> (330)
        on left: 479 480
        on right: 491 493
    optional_public_or_private_member_variable <b> (331)
        on left: 481 482 483
        on right: 486 491 493
    optional_static_member_variable <b> (332)
        on left: 484 485
        on right: 486 493
    structure_variable_declaration <pVarDecl> (333)
        on left: 486
        on right: 489
    struct_variable_declaration_list <pVarDeclList> (334)
        on left: 487 489 491 493
        on right: 489 491 493 582
    $@29 (335)
        on left: 488
        on right: 489
    $@30 (336)
        on left: 490
        on right: 491
    $@31 (337)
        on left: 492
        on right: 493
    function_argument_declaration <pVarDecl> (338)
        on left: 494 495
        on right: 496 497
    function_argument_list <pVarDeclList> (339)
        on left: 496 497
        on right: 117 497
    tuple_type <pVarDecl> (340)
        on left: 498 499
        on right: 500 501 504
    tuple_type_list <pVarDeclList> (341)
        on left: 500 501
        on right: 501 707
    tuple_alias_type_list <pVarDeclList> (342)
        on left: 502 503 504
        on right: 503 504 717
    variant_type <pVarDecl> (343)
        on left: 505
        on right: 506 507 510
    variant_type_list <pVarDeclList> (344)
        on left: 506 507
        on right: 507 710
    variant_alias_type_list <pVarDeclList> (345)
        on left: 508 509 510
        on right: 509 510 721
    copy_or_move <b> (346)
        on left: 511 512
        on right: 516 517 731 733 735 737
    variable_declaration <pVarDecl> (347)
        on left: 513 514 515 516 517
        on right: 486 494
    copy_or_move_or_clone <i> (348)
        on left: 518 519 520
        on right: 279 280 534 535 537 538
    optional_ref <b> (349)
        on left: 521 522
        on right: 280 535 538
    let_variable_name_with_pos_list <pNameWithPosList> (350)
        on left: 523 524 525 526 527
        on right: 526 527 533 534 535
    global_let_variable_name_with_pos_list <pNameWithPosList> (351)
        on left: 528 529
        on right: 529 536 537 538
    variable_declaration_list <pVarDeclList> (352)
        on left: 530 531 532
        on right: 283 531 532
    let_variable_declaration <pVarDecl> (353)
        on left: 533 534 535
        on right: 281 532 547
    global_let_variable_declaration <pVarDecl> (354)
        on left: 536 537 538
        on right: 550
    optional_shared <b> (355)
        on left: 539 540
        on right: 22 548 550
    optional_public_or_private_variable <b> (356)
        on left: 541 542 543
        on right: 548 550
    global_variable_declaration_list <pVarDeclList> (357)
        on left: 544 545 547
        on right: 545 547 548
    $@32 (358)
        on left: 546
        on right: 547
    global_let (359)
        on left: 548 550
        on right: 5
    $@33 (360)
        on left: 549
        on right: 550
    enum_expression <pEnumPair> (361)
        on left: 551 552
        on right: 554 555
    enum_list <pEnum> (362)
        on left: 553 554 555
        on right: 555 570
    optional_public_or_private_alias <b> (363)
        on left: 556 557 558
        on right: 560 717 721 725
    single_alias (364)
        on left: 560
        on right: 561
    $@34 (365)
        on left: 559
        on right: 560
    alias_declaration (366)
        on left: 561
        on right: 10
    optional_public_or_private_enum <b> (367)
        on left: 562 563 564
        on right: 570
    enum_name <pEnum> (368)
        on left: 565
        on right: 570
    optional_enum_basic_type_declaration <type> (369)
        on left: 566 567
        on right: 570
    enum_declaration (370)
        on left: 570
        on right: 4
    $@35 (371)
        on left: 568
        on right: 570
    $@36 (372)
        on left: 569
        on right: 570
    optional_structure_parent <s> (373)
        on left: 571 572
        on right: 575
    optional_sealed <b> (374)
        on left: 573 574
        on right: 575
    structure_name <pStructure> (375)
        on left: 575
        on right: 585
    class_or_struct <b> (376)
        on left: 576 577
        on right: 585
    optional_public_or_private_structure <b> (377)
        on left: 578 579 580
        on right: 585
    optional_struct_variable_declaration_list <pVarDeclList> (378)
        on left: 581 582
        on right: 585
    structure_declaration (379)
        on left: 585
        on right: 3
    $@37 (380)
        on left: 583
        on right: 585
    $@38 (381)
        on left: 584
        on right: 585
    variable_name_with_pos_list <pNameWithPosList> (382)
        on left: 586 587 588 589 590
        on right: 71 513 514 515 516 517 589 590 795 796 797
    basic_type_declaration <type> (383)
        on left: 591 592 593 594 595 596 597 598 599 600 601 602 603 604 605 606 607 608 609 610 611 612 613 614 615 616 617
        on right: 362 363 372 373 434 440 445 455 648
    enum_basic_type_declaration <type> (384)
        on left: 618 619 620 621 622 623 624 625
        on right: 567
    structure_type_declaration <pTypeDecl> (385)
        on left: 626
        on right: 255 651
    auto_type_declaration <pTypeDecl> (386)
        on left: 627 628 629
        on right: 649
    bitfield_bits <pNameList> (387)
        on left: 630 631
        on right: 631 637
    bitfield_alias_bits <pNameList> (388)
        on left: 632 633 634
        on right: 634 725
    bitfield_type_declaration <pTypeDecl> (389)
        on left: 637
        on right: 650
    $@39 (390)
        on left: 635
        on right: 637
    $@40 (391)
        on left: 636
        on right: 637
    c_or_s (392)
        on left: 638 639
        on right: 246 298 501 503 504 507 509 510 641 790
    table_type_pair <aTypePair> (393)
        on left: 640 641
        on right: 680
    dim_list <pTypeDecl> (394)
        on left: 642 643 644 645
        on right: 644 645 647
    type_declaration_no_options <pTypeDecl> (395)
        on left: 646 647
        on right: 279 286 289 292 354 426 427 428 433 533 534 536 537 711 712 751 754 757 760 766 770 773 776 780 784 789 790
    type_declaration_no_options_no_dim <pTypeDecl> (396)
        on left: 648 649 650 651 654 655 656 658 659 660 661 662 663 664 665 666 667 668 669 670 673 674 677 680 683 684 687 690 691 694 697 698 701 704 707 710
        on right: 646 647 659 660 661 662 663 664 665 666 667 668 669 670 674
    $@41 (397)
        on left: 652
        on right: 654
    $@42 (398)
        on left: 653
        on right: 654
    $@43 (399)
        on left: 657
        on right: 658
    $@44 (400)
        on left: 671
        on right: 673
    $@45 (401)
        on left: 672
        on right: 673
    $@46 (402)
        on left: 675
        on right: 677
    $@47 (403)
        on left: 676
        on right: 677
    $@48 (404)
        on left: 678
        on right: 680
    $@49 (405)
        on left: 679
        on right: 680
    $@50 (406)
        on left: 681
        on right: 683
    $@51 (407)
        on left: 682
        on right: 683
    $@52 (408)
        on left: 685
        on right: 687
    $@53 (409)
        on left: 686
        on right: 687
    $@54 (410)
        on left: 688
        on right: 690
    $@55 (411)
        on left: 689
        on right: 690
    $@56 (412)
        on left: 692
        on right: 694
    $@57 (413)
        on left: 693
        on right: 694
    $@58 (414)
        on left: 695
        on right: 697
    $@59 (415)
        on left: 696
        on right: 697
    $@60 (416)
        on left: 699
        on right: 701
    $@61 (417)
        on left: 700
        on right: 701
    $@62 (418)
        on left: 702
        on right: 704
    $@63 (419)
        on left: 703
        on right: 704
    $@64 (420)
        on left: 705
        on right: 707
    $@65 (421)
        on left: 706
        on right: 707
    $@66 (422)
        on left: 708
        on right: 710
    $@67 (423)
        on left: 709
        on right: 710
    type_declaration <pTypeDecl> (424)
        on left: 711 712 713
        on right: 119 245 246 254 295 439 444 498 499 505 515 516 560 640 641 654 673 677 683 687 694 701 712 713
    tuple_alias_declaration (425)
        on left: 717
        on right: 12
    $@68 (426)
        on left: 714
        on right: 717
    $@69 (427)
        on left: 715
        on right: 717
    $@70 (428)
        on left: 716
        on right: 717
    variant_alias_declaration (429)
        on left: 721
        on right: 11
    $@71 (430)
        on left: 718
        on right: 721
    $@72 (431)
        on left: 719
        on right: 721
    $@73 (432)
        on left: 720
        on right: 721
    bitfield_alias_declaration (433)
        on left: 725
        on right: 13
    $@74 (434)
        on left: 722
        on right: 725
    $@75 (435)
        on left: 723
        on right: 725
    $@76 (436)
        on left: 724
        on right: 725
    make_decl <pExpression> (437)
        on left: 726 727 728 729 730
        on right: 261 379
    make_struct_fields <pMakeStruct> (438)
        on left: 731 732 733 734 735 736 737 738
        on right: 345 346 733 734 737 738 739 740 741 742 743
    make_variant_dim <pExpression> (439)
        on left: 739
        on right: 757 776
    make_struct_single <pExpression> (440)
        on left: 740
        on right: 259 260 369 370
    make_struct_dim_list <pExpression> (441)
        on left: 741 742
        on right: 742 744
    make_struct_dim_decl <pExpression> (442)
        on left: 743 744
        on right: 745
    optional_make_struct_dim_decl <pExpression> (443)
        on left: 745 746
        on right: 751 754 766 770 773
    use_initializer <b> (444)
        on left: 747 748
        on right: 257 751 754 760 766 770 773
    make_struct_decl <pExpression> (445)
        on left: 751 754 757 760
        on right: 726
    $@77 (446)
        on left: 749
        on right: 751
    $@78 (447)
        on left: 750
        on right: 751
    $@79 (448)
        on left: 752
        on right: 754
    $@80 (449)
        on left: 753
        on right: 754
    $@81 (450)
        on left: 755
        on right: 757
    $@82 (451)
        on left: 756
        on right: 757
    $@83 (452)
        on left: 758
        on right: 760
    $@84 (453)
        on left: 759
        on right: 760
    make_map_tuple <pExpression> (454)
        on left: 761 762
        on right: 785 786 797
    make_tuple_call <pExpression> (455)
        on left: 763 766
        on right: 730
    $@85 (456)
        on left: 764
        on right: 766
    $@86 (457)
        on left: 765
        on right: 766
    make_dim_decl <pExpression> (458)
        on left: 767 770 773 776 777 780 781 784
        on right: 727
    $@87 (459)
        on left: 768
        on right: 770
    $@88 (460)
        on left: 769
        on right: 770
    $@89 (461)
        on left: 771
        on right: 773
    $@90 (462)
        on left: 772
        on right: 773
    $@91 (463)
        on left: 774
        on right: 776
    $@92 (464)
        on left: 775
        on right: 776
    $@93 (465)
        on left: 778
        on right: 780
    $@94 (466)
        on left: 779
        on right: 780
    $@95 (467)
        on left: 782
        on right: 784
    $@96 (468)
        on left: 783
        on right: 784
    expr_map_tuple_list <pExpression> (469)
        on left: 785 786
        on right: 244 786 787 788
    make_table_decl <pExpression> (470)
        on left: 787 788 789 790
        on right: 728
    array_comprehension_where <pExpression> (471)
        on left: 791 792
        on right: 795 796 797
    optional_comma <b> (472)
        on left: 793 794
        on right: 242 244 414 570 725 744 763 767 777 781 784 787 788
    array_comprehension <pExpression> (473)
        on left: 795 796 797
        on right: 729


State 0

    0 $accept: . program $end

    $default  reduce using rule 1 (program)

    program  go to state 1


State 1

    0 $accept: program . $end
    2 program: program . module_declaration
    3        | program . structure_declaration
    4        | program . enum_declaration
    5        | program . global_let
    6        | program . global_function_declaration
    7        | program . expect_declaration
    8        | program . require_declaration "end of expression"
    9        | program . options_declaration "end of expression"
   10        | program . alias_declaration
   11        | program . variant_alias_declaration
   12        | program . tuple_alias_declaration
   13        | program . bitfield_alias_declaration
   14        | program . top_level_reader_macro
   15        | program . "end of expression"

    $end                 shift, and go to state 2
    "let"                shift, and go to state 3
    "options"            shift, and go to state 4
    "expect"             shift, and go to state 5
    "require"            shift, and go to state 6
    "typedef"            shift, and go to state 7
    "var"                shift, and go to state 8
    "module"             shift, and go to state 9
    "bitfield"           shift, and go to state 10
    "tuple"              shift, and go to state 11
    "variant"            shift, and go to state 12
    "end of expression"  shift, and go to state 13
    '%'                  shift, and go to state 14
    '['                  shift, and go to state 15

    $default  reduce using rule 113 (optional_annotation_list)

    top_level_reader_macro       go to state 16
    module_declaration           go to state 17
    expr_reader                  go to state 18
    options_declaration          go to state 19
    require_declaration          go to state 20
    expect_declaration           go to state 21
    optional_annotation_list     go to state 22
    global_function_declaration  go to state 23
    kwd_let                      go to state 24
    global_let                   go to state 25
    alias_declaration            go to state 26
    enum_declaration             go to state 27
    structure_declaration        go to state 28
    tuple_alias_declaration      go to state 29
    variant_alias_declaration    go to state 30
    bitfield_alias_declaration   go to state 31


State 2

    0 $accept: program $end .

    $default  accept


State 3

  273 kwd_let: "let" .

    $default  reduce using rule 273 (kwd_let)


State 4

   37 options_declaration: "options" . annotation_argument_list

    "type"  shift, and go to state 32
    "in"    shift, and go to state 33
    "name"  shift, and go to state 34

    annotation_argument_name  go to state 35
    annotation_argument       go to state 36
    annotation_argument_list  go to state 37


State 5

   47 expect_declaration: "expect" . expect_list

    "integer constant"  shift, and go to state 38

    expect_list   go to state 39
    expect_error  go to state 40


State 6

   38 require_declaration: "require" . require_module

    "name"  shift, and go to state 41
    '%'     shift, and go to state 42

    require_module_name  go to state 43
    require_module       go to state 44


State 7

  561 alias_declaration: "typedef" . single_alias "end of expression"

    "public"   shift, and go to state 45
    "private"  shift, and go to state 46

    $default  reduce using rule 556 (optional_public_or_private_alias)

    optional_public_or_private_alias  go to state 47
    single_alias                      go to state 48


State 8

  274 kwd_let: "var" .

    $default  reduce using rule 274 (kwd_let)


State 9

   22 module_declaration: "module" . module_name optional_shared optional_public_or_private_module

    "name"  shift, and go to state 49
    '$'     shift, and go to state 50

    module_name  go to state 51


State 10

  725 bitfield_alias_declaration: "bitfield" . optional_public_or_private_alias "name" $@74 "begin of code block" $@75 bitfield_alias_bits optional_comma $@76 "end of code block"

    "public"   shift, and go to state 45
    "private"  shift, and go to state 46

    $default  reduce using rule 556 (optional_public_or_private_alias)

    optional_public_or_private_alias  go to state 52


State 11

  717 tuple_alias_declaration: "tuple" . optional_public_or_private_alias "name" $@68 "begin of code block" $@69 tuple_alias_type_list $@70 "end of code block"

    "public"   shift, and go to state 45
    "private"  shift, and go to state 46

    $default  reduce using rule 556 (optional_public_or_private_alias)

    optional_public_or_private_alias  go to state 53


State 12

  721 variant_alias_declaration: "variant" . optional_public_or_private_alias "name" $@71 "begin of code block" $@72 variant_alias_type_list $@73 "end of code block"

    "public"   shift, and go to state 45
    "private"  shift, and go to state 46

    $default  reduce using rule 556 (optional_public_or_private_alias)

    optional_public_or_private_alias  go to state 54


State 13

   15 program: program "end of expression" .

    $default  reduce using rule 15 (program)


State 14

   36 expr_reader: '%' . name_in_namespace $@1 reader_character_sequence

    "::"    shift, and go to state 55
    "name"  shift, and go to state 56

    name_in_namespace  go to state 57


State 15

  114 optional_annotation_list: '[' . annotation_list ']'

    "require"  shift, and go to state 58
    "private"  shift, and go to state 59
    "|>"       shift, and go to state 60
    "::"       shift, and go to state 55
    "name"     shift, and go to state 56
    '!'        shift, and go to state 61
    '('        shift, and go to state 62

    annotation_declaration_name   go to state 63
    annotation_declaration_basic  go to state 64
    annotation_declaration        go to state 65
    annotation_list               go to state 66
    name_in_namespace             go to state 67


State 16

   14 program: program top_level_reader_macro .

    $default  reduce using rule 14 (program)


State 17

    2 program: program module_declaration .

    $default  reduce using rule 2 (program)


State 18

   16 top_level_reader_macro: expr_reader . "end of expression"

    "end of expression"  shift, and go to state 68


State 19

    9 program: program options_declaration . "end of expression"

    "end of expression"  shift, and go to state 69


State 20

    8 program: program require_declaration . "end of expression"

    "end of expression"  shift, and go to state 70


State 21

    7 program: program expect_declaration .

    $default  reduce using rule 7 (program)


State 22

  205 global_function_declaration: optional_annotation_list . "def" function_declaration
  570 enum_declaration: optional_annotation_list . "enum" optional_public_or_private_enum enum_name optional_enum_basic_type_declaration "begin of code block" $@35 enum_list optional_comma $@36 "end of code block"
  585 structure_declaration: optional_annotation_list . class_or_struct optional_public_or_private_structure $@37 structure_name $@38 optional_struct_variable_declaration_list

    "struct"  shift, and go to state 71
    "class"   shift, and go to state 72
    "def"     shift, and go to state 73
    "enum"    shift, and go to state 74

    class_or_struct  go to state 75


State 23

    6 program: program global_function_declaration .

    $default  reduce using rule 6 (program)


State 24

  548 global_let: kwd_let . optional_shared optional_public_or_private_variable "begin of code block" global_variable_declaration_list "end of code block"
  550           | kwd_let . optional_shared optional_public_or_private_variable $@33 optional_field_annotation global_let_variable_declaration

    "shared"  shift, and go to state 76

    $default  reduce using rule 539 (optional_shared)

    optional_shared  go to state 77


State 25

    5 program: program global_let .

    $default  reduce using rule 5 (program)


State 26

   10 program: program alias_declaration .

    $default  reduce using rule 10 (program)


State 27

    4 program: program enum_declaration .

    $default  reduce using rule 4 (program)


State 28

    3 program: program structure_declaration .

    $default  reduce using rule 3 (program)


State 29

   12 program: program tuple_alias_declaration .

    $default  reduce using rule 12 (program)


State 30

   11 program: program variant_alias_declaration .

    $default  reduce using rule 11 (program)


State 31

   13 program: program bitfield_alias_declaration .

    $default  reduce using rule 13 (program)


State 32

   85 annotation_argument_name: "type" .

    $default  reduce using rule 85 (annotation_argument_name)


State 33

   86 annotation_argument_name: "in" .

    $default  reduce using rule 86 (annotation_argument_name)


State 34

   84 annotation_argument_name: "name" .

    $default  reduce using rule 84 (annotation_argument_name)


State 35

   87 annotation_argument: annotation_argument_name . '=' string_constant
   88                    | annotation_argument_name . '=' "name"
   89                    | annotation_argument_name . '=' "integer constant"
   90                    | annotation_argument_name . '=' "floating point constant"
   91                    | annotation_argument_name . '=' "true"
   92                    | annotation_argument_name . '=' "false"
   93                    | annotation_argument_name .
   94                    | annotation_argument_name . '=' '(' annotation_argument_value_list ')'

    '='  shift, and go to state 78

    $default  reduce using rule 93 (annotation_argument)


State 36

   95 annotation_argument_list: annotation_argument .

    $default  reduce using rule 95 (annotation_argument_list)


State 37

   37 options_declaration: "options" annotation_argument_list .
   96 annotation_argument_list: annotation_argument_list . ',' annotation_argument

    ','  shift, and go to state 79

    $default  reduce using rule 37 (options_declaration)


State 38

   50 expect_error: "integer constant" .
   51             | "integer constant" . ':' "integer constant"

    ':'  shift, and go to state 80

    $default  reduce using rule 50 (expect_error)


State 39

   47 expect_declaration: "expect" expect_list .
   49 expect_list: expect_list . ',' expect_error

    ','  shift, and go to state 81

    $default  reduce using rule 47 (expect_declaration)


State 40

   48 expect_list: expect_error .

    $default  reduce using rule 48 (expect_list)


State 41

   39 require_module_name: "name" .

    $default  reduce using rule 39 (require_module_name)


State 42

   40 require_module_name: '%' . require_module_name

    "name"  shift, and go to state 41
    '%'     shift, and go to state 42

    require_module_name  go to state 82


State 43

   41 require_module_name: require_module_name . '.' "name"
   42                    | require_module_name . '/' "name"
   43 require_module: require_module_name . is_public_module
   44               | require_module_name . "as" "name" is_public_module

    "as"      shift, and go to state 83
    "public"  shift, and go to state 84
    '/'       shift, and go to state 85
    '.'       shift, and go to state 86

    $default  reduce using rule 45 (is_public_module)

    is_public_module  go to state 87


State 44

   38 require_declaration: "require" require_module .

    $default  reduce using rule 38 (require_declaration)


State 45

  558 optional_public_or_private_alias: "public" .

    $default  reduce using rule 558 (optional_public_or_private_alias)


State 46

  557 optional_public_or_private_alias: "private" .

    $default  reduce using rule 557 (optional_public_or_private_alias)


State 47

  560 single_alias: optional_public_or_private_alias . "name" $@34 '=' type_declaration

    "name"  shift, and go to state 88


State 48

  561 alias_declaration: "typedef" single_alias . "end of expression"

    "end of expression"  shift, and go to state 89


State 49

   21 module_name: "name" .

    $default  reduce using rule 21 (module_name)


State 50

   20 module_name: '$' .

    $default  reduce using rule 20 (module_name)


State 51

   22 module_declaration: "module" module_name . optional_shared optional_public_or_private_module

    "shared"  shift, and go to state 76

    $default  reduce using rule 539 (optional_shared)

    optional_shared  go to state 90


State 52

  725 bitfield_alias_declaration: "bitfield" optional_public_or_private_alias . "name" $@74 "begin of code block" $@75 bitfield_alias_bits optional_comma $@76 "end of code block"

    "name"  shift, and go to state 91


State 53

  717 tuple_alias_declaration: "tuple" optional_public_or_private_alias . "name" $@68 "begin of code block" $@69 tuple_alias_type_list $@70 "end of code block"

    "name"  shift, and go to state 92


State 54

  721 variant_alias_declaration: "variant" optional_public_or_private_alias . "name" $@71 "begin of code block" $@72 variant_alias_type_list $@73 "end of code block"

    "name"  shift, and go to state 93


State 55

  249 name_in_namespace: "::" . "name"

    "name"  shift, and go to state 94


State 56

  247 name_in_namespace: "name" .
  248                  | "name" . "::" "name"

    "::"  shift, and go to state 95

    $default  reduce using rule 247 (name_in_namespace)


State 57

   36 expr_reader: '%' name_in_namespace . $@1 reader_character_sequence

    $default  reduce using rule 35 ($@1)

    $@1  go to state 96


State 58

  100 annotation_declaration_name: "require" .

    $default  reduce using rule 100 (annotation_declaration_name)


State 59

  101 annotation_declaration_name: "private" .

    $default  reduce using rule 101 (annotation_declaration_name)


State 60

  110 annotation_declaration: "|>" . annotation_declaration

    "require"  shift, and go to state 58
    "private"  shift, and go to state 59
    "|>"       shift, and go to state 60
    "::"       shift, and go to state 55
    "name"     shift, and go to state 56
    '!'        shift, and go to state 61
    '('        shift, and go to state 62

    annotation_declaration_name   go to state 63
    annotation_declaration_basic  go to state 64
    annotation_declaration        go to state 97
    name_in_namespace             go to state 67


State 61

  105 annotation_declaration: '!' . annotation_declaration

    "require"  shift, and go to state 58
    "private"  shift, and go to state 59
    "|>"       shift, and go to state 60
    "::"       shift, and go to state 55
    "name"     shift, and go to state 56
    '!'        shift, and go to state 61
    '('        shift, and go to state 62

    annotation_declaration_name   go to state 63
    annotation_declaration_basic  go to state 64
    annotation_declaration        go to state 98
    name_in_namespace             go to state 67


State 62

  109 annotation_declaration: '(' . annotation_declaration ')'

    "require"  shift, and go to state 58
    "private"  shift, and go to state 59
    "|>"       shift, and go to state 60
    "::"       shift, and go to state 55
    "name"     shift, and go to state 56
    '!'        shift, and go to state 61
    '('        shift, and go to state 62

    annotation_declaration_name   go to state 63
    annotation_declaration_basic  go to state 64
    annotation_declaration        go to state 99
    name_in_namespace             go to state 67


State 63

  102 annotation_declaration_basic: annotation_declaration_name .
  103                             | annotation_declaration_name . '(' annotation_argument_list ')'

    '('  shift, and go to state 100

    $default  reduce using rule 102 (annotation_declaration_basic)


State 64

  104 annotation_declaration: annotation_declaration_basic .

    $default  reduce using rule 104 (annotation_declaration)


State 65

  106 annotation_declaration: annotation_declaration . "&&" annotation_declaration
  107                       | annotation_declaration . "||" annotation_declaration
  108                       | annotation_declaration . "^^" annotation_declaration
  111 annotation_list: annotation_declaration .

    "&&"  shift, and go to state 101
    "||"  shift, and go to state 102
    "^^"  shift, and go to state 103

    $default  reduce using rule 111 (annotation_list)


State 66

  112 annotation_list: annotation_list . ',' annotation_declaration
  114 optional_annotation_list: '[' annotation_list . ']'

    ','  shift, and go to state 104
    ']'  shift, and go to state 105


State 67

   99 annotation_declaration_name: name_in_namespace .

    $default  reduce using rule 99 (annotation_declaration_name)


State 68

   16 top_level_reader_macro: expr_reader "end of expression" .

    $default  reduce using rule 16 (top_level_reader_macro)


State 69

    9 program: program options_declaration "end of expression" .

    $default  reduce using rule 9 (program)


State 70

    8 program: program require_declaration "end of expression" .

    $default  reduce using rule 8 (program)


State 71

  577 class_or_struct: "struct" .

    $default  reduce using rule 577 (class_or_struct)


State 72

  576 class_or_struct: "class" .

    $default  reduce using rule 576 (class_or_struct)


State 73

  205 global_function_declaration: optional_annotation_list "def" . function_declaration

    "public"   shift, and go to state 106
    "private"  shift, and go to state 107

    $default  reduce using rule 206 (optional_public_or_private_function)

    optional_public_or_private_function  go to state 108
    function_declaration                 go to state 109


State 74

  570 enum_declaration: optional_annotation_list "enum" . optional_public_or_private_enum enum_name optional_enum_basic_type_declaration "begin of code block" $@35 enum_list optional_comma $@36 "end of code block"

    "public"   shift, and go to state 110
    "private"  shift, and go to state 111

    $default  reduce using rule 562 (optional_public_or_private_enum)

    optional_public_or_private_enum  go to state 112


State 75

  585 structure_declaration: optional_annotation_list class_or_struct . optional_public_or_private_structure $@37 structure_name $@38 optional_struct_variable_declaration_list

    "public"   shift, and go to state 113
    "private"  shift, and go to state 114

    $default  reduce using rule 578 (optional_public_or_private_structure)

    optional_public_or_private_structure  go to state 115


State 76

  540 optional_shared: "shared" .

    $default  reduce using rule 540 (optional_shared)


State 77

  548 global_let: kwd_let optional_shared . optional_public_or_private_variable "begin of code block" global_variable_declaration_list "end of code block"
  550           | kwd_let optional_shared . optional_public_or_private_variable $@33 optional_field_annotation global_let_variable_declaration

    "public"   shift, and go to state 116
    "private"  shift, and go to state 117

    $default  reduce using rule 541 (optional_public_or_private_variable)

    optional_public_or_private_variable  go to state 118


State 78

   87 annotation_argument: annotation_argument_name '=' . string_constant
   88                    | annotation_argument_name '=' . "name"
   89                    | annotation_argument_name '=' . "integer constant"
   90                    | annotation_argument_name '=' . "floating point constant"
   91                    | annotation_argument_name '=' . "true"
   92                    | annotation_argument_name '=' . "false"
   94                    | annotation_argument_name '=' . '(' annotation_argument_value_list ')'

    "true"                     shift, and go to state 119
    "false"                    shift, and go to state 120
    "integer constant"         shift, and go to state 121
    "floating point constant"  shift, and go to state 122
    "name"                     shift, and go to state 123
    "start of the string"      shift, and go to state 124
    '('                        shift, and go to state 125

    string_constant  go to state 126


State 79

   96 annotation_argument_list: annotation_argument_list ',' . annotation_argument

    "type"  shift, and go to state 32
    "in"    shift, and go to state 33
    "name"  shift, and go to state 34

    annotation_argument_name  go to state 35
    annotation_argument       go to state 127


State 80

   51 expect_error: "integer constant" ':' . "integer constant"

    "integer constant"  shift, and go to state 128


State 81

   49 expect_list: expect_list ',' . expect_error

    "integer constant"  shift, and go to state 38

    expect_error  go to state 129


State 82

   40 require_module_name: '%' require_module_name .
   41                    | require_module_name . '.' "name"
   42                    | require_module_name . '/' "name"

    '.'  shift, and go to state 86

    $default  reduce using rule 40 (require_module_name)


State 83

   44 require_module: require_module_name "as" . "name" is_public_module

    "name"  shift, and go to state 130


State 84

   46 is_public_module: "public" .

    $default  reduce using rule 46 (is_public_module)


State 85

   42 require_module_name: require_module_name '/' . "name"

    "name"  shift, and go to state 131


State 86

   41 require_module_name: require_module_name '.' . "name"

    "name"  shift, and go to state 132


State 87

   43 require_module: require_module_name is_public_module .

    $default  reduce using rule 43 (require_module)


State 88

  560 single_alias: optional_public_or_private_alias "name" . $@34 '=' type_declaration

    $default  reduce using rule 559 ($@34)

    $@34  go to state 133


State 89

  561 alias_declaration: "typedef" single_alias "end of expression" .

    $default  reduce using rule 561 (alias_declaration)


State 90

   22 module_declaration: "module" module_name optional_shared . optional_public_or_private_module

    "public"   shift, and go to state 134
    "private"  shift, and go to state 135

    $default  reduce using rule 17 (optional_public_or_private_module)

    optional_public_or_private_module  go to state 136


State 91

  725 bitfield_alias_declaration: "bitfield" optional_public_or_private_alias "name" . $@74 "begin of code block" $@75 bitfield_alias_bits optional_comma $@76 "end of code block"

    $default  reduce using rule 722 ($@74)

    $@74  go to state 137


State 92

  717 tuple_alias_declaration: "tuple" optional_public_or_private_alias "name" . $@68 "begin of code block" $@69 tuple_alias_type_list $@70 "end of code block"

    $default  reduce using rule 714 ($@68)

    $@68  go to state 138


State 93

  721 variant_alias_declaration: "variant" optional_public_or_private_alias "name" . $@71 "begin of code block" $@72 variant_alias_type_list $@73 "end of code block"

    $default  reduce using rule 718 ($@71)

    $@71  go to state 139


State 94

  249 name_in_namespace: "::" "name" .

    $default  reduce using rule 249 (name_in_namespace)


State 95

  248 name_in_namespace: "name" "::" . "name"

    "name"  shift, and go to state 140


State 96

   36 expr_reader: '%' name_in_namespace $@1 . reader_character_sequence

    STRING_CHARACTER  shift, and go to state 141

    reader_character_sequence  go to state 142


State 97

  106 annotation_declaration: annotation_declaration . "&&" annotation_declaration
  107                       | annotation_declaration . "||" annotation_declaration
  108                       | annotation_declaration . "^^" annotation_declaration
  110                       | "|>" annotation_declaration .

    $default  reduce using rule 110 (annotation_declaration)


State 98

  105 annotation_declaration: '!' annotation_declaration .
  106                       | annotation_declaration . "&&" annotation_declaration
  107                       | annotation_declaration . "||" annotation_declaration
  108                       | annotation_declaration . "^^" annotation_declaration

    $default  reduce using rule 105 (annotation_declaration)


State 99

  106 annotation_declaration: annotation_declaration . "&&" annotation_declaration
  107                       | annotation_declaration . "||" annotation_declaration
  108                       | annotation_declaration . "^^" annotation_declaration
  109                       | '(' annotation_declaration . ')'

    "&&"  shift, and go to state 101
    "||"  shift, and go to state 102
    "^^"  shift, and go to state 103
    ')'   shift, and go to state 143


State 100

  103 annotation_declaration_basic: annotation_declaration_name '(' . annotation_argument_list ')'

    "type"  shift, and go to state 32
    "in"    shift, and go to state 33
    "name"  shift, and go to state 34

    annotation_argument_name  go to state 35
    annotation_argument       go to state 36
    annotation_argument_list  go to state 144


State 101

  106 annotation_declaration: annotation_declaration "&&" . annotation_declaration

    "require"  shift, and go to state 58
    "private"  shift, and go to state 59
    "|>"       shift, and go to state 60
    "::"       shift, and go to state 55
    "name"     shift, and go to state 56
    '!'        shift, and go to state 61
    '('        shift, and go to state 62

    annotation_declaration_name   go to state 63
    annotation_declaration_basic  go to state 64
    annotation_declaration        go to state 145
    name_in_namespace             go to state 67


State 102

  107 annotation_declaration: annotation_declaration "||" . annotation_declaration

    "require"  shift, and go to state 58
    "private"  shift, and go to state 59
    "|>"       shift, and go to state 60
    "::"       shift, and go to state 55
    "name"     shift, and go to state 56
    '!'        shift, and go to state 61
    '('        shift, and go to state 62

    annotation_declaration_name   go to state 63
    annotation_declaration_basic  go to state 64
    annotation_declaration        go to state 146
    name_in_namespace             go to state 67


State 103

  108 annotation_declaration: annotation_declaration "^^" . annotation_declaration

    "require"  shift, and go to state 58
    "private"  shift, and go to state 59
    "|>"       shift, and go to state 60
    "::"       shift, and go to state 55
    "name"     shift, and go to state 56
    '!'        shift, and go to state 61
    '('        shift, and go to state 62

    annotation_declaration_name   go to state 63
    annotation_declaration_basic  go to state 64
    annotation_declaration        go to state 147
    name_in_namespace             go to state 67


State 104

  112 annotation_list: annotation_list ',' . annotation_declaration

    "require"  shift, and go to state 58
    "private"  shift, and go to state 59
    "|>"       shift, and go to state 60
    "::"       shift, and go to state 55
    "name"     shift, and go to state 56
    '!'        shift, and go to state 61
    '('        shift, and go to state 62

    annotation_declaration_name   go to state 63
    annotation_declaration_basic  go to state 64
    annotation_declaration        go to state 148
    name_in_namespace             go to state 67


State 105

  114 optional_annotation_list: '[' annotation_list ']' .

    $default  reduce using rule 114 (optional_annotation_list)


State 106

  208 optional_public_or_private_function: "public" .

    $default  reduce using rule 208 (optional_public_or_private_function)


State 107

  207 optional_public_or_private_function: "private" .

    $default  reduce using rule 207 (optional_public_or_private_function)


State 108

  211 function_declaration: optional_public_or_private_function . $@2 function_declaration_header expression_block

    $default  reduce using rule 210 ($@2)

    $@2  go to state 149


State 109

  205 global_function_declaration: optional_annotation_list "def" function_declaration .

    $default  reduce using rule 205 (global_function_declaration)


State 110

  564 optional_public_or_private_enum: "public" .

    $default  reduce using rule 564 (optional_public_or_private_enum)


State 111

  563 optional_public_or_private_enum: "private" .

    $default  reduce using rule 563 (optional_public_or_private_enum)


State 112

  570 enum_declaration: optional_annotation_list "enum" optional_public_or_private_enum . enum_name optional_enum_basic_type_declaration "begin of code block" $@35 enum_list optional_comma $@36 "end of code block"

    "name"  shift, and go to state 150

    enum_name  go to state 151


State 113

  580 optional_public_or_private_structure: "public" .

    $default  reduce using rule 580 (optional_public_or_private_structure)


State 114

  579 optional_public_or_private_structure: "private" .

    $default  reduce using rule 579 (optional_public_or_private_structure)


State 115

  585 structure_declaration: optional_annotation_list class_or_struct optional_public_or_private_structure . $@37 structure_name $@38 optional_struct_variable_declaration_list

    $default  reduce using rule 583 ($@37)

    $@37  go to state 152


State 116

  543 optional_public_or_private_variable: "public" .

    $default  reduce using rule 543 (optional_public_or_private_variable)


State 117

  542 optional_public_or_private_variable: "private" .

    $default  reduce using rule 542 (optional_public_or_private_variable)


State 118

  548 global_let: kwd_let optional_shared optional_public_or_private_variable . "begin of code block" global_variable_declaration_list "end of code block"
  550           | kwd_let optional_shared optional_public_or_private_variable . $@33 optional_field_annotation global_let_variable_declaration

    "begin of code block"  shift, and go to state 153

    $default  reduce using rule 549 ($@33)

    $@33  go to state 154


State 119

   91 annotation_argument: annotation_argument_name '=' "true" .

    $default  reduce using rule 91 (annotation_argument)


State 120

   92 annotation_argument: annotation_argument_name '=' "false" .

    $default  reduce using rule 92 (annotation_argument)


State 121

   89 annotation_argument: annotation_argument_name '=' "integer constant" .

    $default  reduce using rule 89 (annotation_argument)


State 122

   90 annotation_argument: annotation_argument_name '=' "floating point constant" .

    $default  reduce using rule 90 (annotation_argument)


State 123

   88 annotation_argument: annotation_argument_name '=' "name" .

    $default  reduce using rule 88 (annotation_argument)


State 124

   27 string_constant: "start of the string" . character_sequence "end of the string"
   28                | "start of the string" . "end of the string"

    STRING_CHARACTER      shift, and go to state 155
    STRING_CHARACTER_ESC  shift, and go to state 156
    "end of the string"   shift, and go to state 157

    character_sequence  go to state 158


State 125

   94 annotation_argument: annotation_argument_name '=' '(' . annotation_argument_value_list ')'

    "true"                     shift, and go to state 159
    "false"                    shift, and go to state 160
    "integer constant"         shift, and go to state 161
    "floating point constant"  shift, and go to state 162
    "name"                     shift, and go to state 163
    "start of the string"      shift, and go to state 124

    string_constant                 go to state 164
    annotation_argument_value       go to state 165
    annotation_argument_value_list  go to state 166


State 126

   87 annotation_argument: annotation_argument_name '=' string_constant .

    $default  reduce using rule 87 (annotation_argument)


State 127

   96 annotation_argument_list: annotation_argument_list ',' annotation_argument .

    $default  reduce using rule 96 (annotation_argument_list)


State 128

   51 expect_error: "integer constant" ':' "integer constant" .

    $default  reduce using rule 51 (expect_error)


State 129

   49 expect_list: expect_list ',' expect_error .

    $default  reduce using rule 49 (expect_list)


State 130

   44 require_module: require_module_name "as" "name" . is_public_module

    "public"  shift, and go to state 84

    $default  reduce using rule 45 (is_public_module)

    is_public_module  go to state 167


State 131

   42 require_module_name: require_module_name '/' "name" .

    $default  reduce using rule 42 (require_module_name)


State 132

   41 require_module_name: require_module_name '.' "name" .

    $default  reduce using rule 41 (require_module_name)


State 133

  560 single_alias: optional_public_or_private_alias "name" $@34 . '=' type_declaration

    '='  shift, and go to state 168


State 134

   18 optional_public_or_private_module: "public" .

    $default  reduce using rule 18 (optional_public_or_private_module)


State 135

   19 optional_public_or_private_module: "private" .

    $default  reduce using rule 19 (optional_public_or_private_module)


State 136

   22 module_declaration: "module" module_name optional_shared optional_public_or_private_module .

    $default  reduce using rule 22 (module_declaration)


State 137

  725 bitfield_alias_declaration: "bitfield" optional_public_or_private_alias "name" $@74 . "begin of code block" $@75 bitfield_alias_bits optional_comma $@76 "end of code block"

    "begin of code block"  shift, and go to state 169


State 138

  717 tuple_alias_declaration: "tuple" optional_public_or_private_alias "name" $@68 . "begin of code block" $@69 tuple_alias_type_list $@70 "end of code block"

    "begin of code block"  shift, and go to state 170


State 139

  721 variant_alias_declaration: "variant" optional_public_or_private_alias "name" $@71 . "begin of code block" $@72 variant_alias_type_list $@73 "end of code block"

    "begin of code block"  shift, and go to state 171


State 140

  248 name_in_namespace: "name" "::" "name" .

    $default  reduce using rule 248 (name_in_namespace)


State 141

   33 reader_character_sequence: STRING_CHARACTER .

    $default  reduce using rule 33 (reader_character_sequence)


State 142

   34 reader_character_sequence: reader_character_sequence . STRING_CHARACTER
   36 expr_reader: '%' name_in_namespace $@1 reader_character_sequence .

    STRING_CHARACTER  shift, and go to state 172

    $default  reduce using rule 36 (expr_reader)


State 143

  109 annotation_declaration: '(' annotation_declaration ')' .

    $default  reduce using rule 109 (annotation_declaration)


State 144

   96 annotation_argument_list: annotation_argument_list . ',' annotation_argument
  103 annotation_declaration_basic: annotation_declaration_name '(' annotation_argument_list . ')'

    ','  shift, and go to state 79
    ')'  shift, and go to state 173


State 145

  106 annotation_declaration: annotation_declaration . "&&" annotation_declaration
  106                       | annotation_declaration "&&" annotation_declaration .
  107                       | annotation_declaration . "||" annotation_declaration
  108                       | annotation_declaration . "^^" annotation_declaration

    $default  reduce using rule 106 (annotation_declaration)


State 146

  106 annotation_declaration: annotation_declaration . "&&" annotation_declaration
  107                       | annotation_declaration . "||" annotation_declaration
  107                       | annotation_declaration "||" annotation_declaration .
  108                       | annotation_declaration . "^^" annotation_declaration

    "&&"  shift, and go to state 101
    "^^"  shift, and go to state 103

    $default  reduce using rule 107 (annotation_declaration)


State 147

  106 annotation_declaration: annotation_declaration . "&&" annotation_declaration
  107                       | annotation_declaration . "||" annotation_declaration
  108                       | annotation_declaration . "^^" annotation_declaration
  108                       | annotation_declaration "^^" annotation_declaration .

    "&&"  shift, and go to state 101

    $default  reduce using rule 108 (annotation_declaration)


State 148

  106 annotation_declaration: annotation_declaration . "&&" annotation_declaration
  107                       | annotation_declaration . "||" annotation_declaration
  108                       | annotation_declaration . "^^" annotation_declaration
  112 annotation_list: annotation_list ',' annotation_declaration .

    "&&"  shift, and go to state 101
    "||"  shift, and go to state 102
    "^^"  shift, and go to state 103

    $default  reduce using rule 112 (annotation_list)


State 149

  211 function_declaration: optional_public_or_private_function $@2 . function_declaration_header expression_block

    "operator"  shift, and go to state 174
    "bool"      shift, and go to state 175
    "string"    shift, and go to state 176
    "int"       shift, and go to state 177
    "int2"      shift, and go to state 178
    "int3"      shift, and go to state 179
    "int4"      shift, and go to state 180
    "uint"      shift, and go to state 181
    "uint2"     shift, and go to state 182
    "uint3"     shift, and go to state 183
    "uint4"     shift, and go to state 184
    "float"     shift, and go to state 185
    "float2"    shift, and go to state 186
    "float3"    shift, and go to state 187
    "float4"    shift, and go to state 188
    "range"     shift, and go to state 189
    "urange"    shift, and go to state 190
    "range64"   shift, and go to state 191
    "urange64"  shift, and go to state 192
    "int64"     shift, and go to state 193
    "uint64"    shift, and go to state 194
    "double"    shift, and go to state 195
    "int8"      shift, and go to state 196
    "uint8"     shift, and go to state 197
    "int16"     shift, and go to state 198
    "uint16"    shift, and go to state 199
    "++"        shift, and go to state 200
    "--"        shift, and go to state 201
    "name"      shift, and go to state 202

    function_name                go to state 203
    function_declaration_header  go to state 204


State 150

  565 enum_name: "name" .

    $default  reduce using rule 565 (enum_name)


State 151

  570 enum_declaration: optional_annotation_list "enum" optional_public_or_private_enum enum_name . optional_enum_basic_type_declaration "begin of code block" $@35 enum_list optional_comma $@36 "end of code block"

    ':'  shift, and go to state 205

    $default  reduce using rule 566 (optional_enum_basic_type_declaration)

    optional_enum_basic_type_declaration  go to state 206


State 152

  585 structure_declaration: optional_annotation_list class_or_struct optional_public_or_private_structure $@37 . structure_name $@38 optional_struct_variable_declaration_list

    "sealed"  shift, and go to state 207

    $default  reduce using rule 573 (optional_sealed)

    optional_sealed  go to state 208
    structure_name   go to state 209


State 153

  548 global_let: kwd_let optional_shared optional_public_or_private_variable "begin of code block" . global_variable_declaration_list "end of code block"

    $default  reduce using rule 544 (global_variable_declaration_list)

    global_variable_declaration_list  go to state 210


State 154

  550 global_let: kwd_let optional_shared optional_public_or_private_variable $@33 . optional_field_annotation global_let_variable_declaration

    '@'  shift, and go to state 211

    $default  reduce using rule 474 (optional_field_annotation)

    metadata_argument_list     go to state 212
    optional_field_annotation  go to state 213


State 155

   23 character_sequence: STRING_CHARACTER .

    $default  reduce using rule 23 (character_sequence)


State 156

   24 character_sequence: STRING_CHARACTER_ESC .

    $default  reduce using rule 24 (character_sequence)


State 157

   28 string_constant: "start of the string" "end of the string" .

    $default  reduce using rule 28 (string_constant)


State 158

   25 character_sequence: character_sequence . STRING_CHARACTER
   26                   | character_sequence . STRING_CHARACTER_ESC
   27 string_constant: "start of the string" character_sequence . "end of the string"

    STRING_CHARACTER      shift, and go to state 214
    STRING_CHARACTER_ESC  shift, and go to state 215
    "end of the string"   shift, and go to state 216


State 159

   80 annotation_argument_value: "true" .

    $default  reduce using rule 80 (annotation_argument_value)


State 160

   81 annotation_argument_value: "false" .

    $default  reduce using rule 81 (annotation_argument_value)


State 161

   78 annotation_argument_value: "integer constant" .

    $default  reduce using rule 78 (annotation_argument_value)


State 162

   79 annotation_argument_value: "floating point constant" .

    $default  reduce using rule 79 (annotation_argument_value)


State 163

   77 annotation_argument_value: "name" .

    $default  reduce using rule 77 (annotation_argument_value)


State 164

   76 annotation_argument_value: string_constant .

    $default  reduce using rule 76 (annotation_argument_value)


State 165

   82 annotation_argument_value_list: annotation_argument_value .

    $default  reduce using rule 82 (annotation_argument_value_list)


State 166

   83 annotation_argument_value_list: annotation_argument_value_list . ',' annotation_argument_value
   94 annotation_argument: annotation_argument_name '=' '(' annotation_argument_value_list . ')'

    ','  shift, and go to state 217
    ')'  shift, and go to state 218


State 167

   44 require_module: require_module_name "as" "name" is_public_module .

    $default  reduce using rule 44 (require_module)


State 168

  560 single_alias: optional_public_or_private_alias "name" $@34 '=' . type_declaration

    "type"       shift, and go to state 219
    "array"      shift, and go to state 220
    "table"      shift, and go to state 221
    "typedecl"   shift, and go to state 222
    "iterator"   shift, and go to state 223
    "smart_ptr"  shift, and go to state 224
    "bool"       shift, and go to state 225
    "void"       shift, and go to state 226
    "string"     shift, and go to state 227
    "auto"       shift, and go to state 228
    "int"        shift, and go to state 229
    "int2"       shift, and go to state 230
    "int3"       shift, and go to state 231
    "int4"       shift, and go to state 232
    "uint"       shift, and go to state 233
    "bitfield"   shift, and go to state 234
    "uint2"      shift, and go to state 235
    "uint3"      shift, and go to state 236
    "uint4"      shift, and go to state 237
    "float"      shift, and go to state 238
    "float2"     shift, and go to state 239
    "float3"     shift, and go to state 240
    "float4"     shift, and go to state 241
    "range"      shift, and go to state 242
    "urange"     shift, and go to state 243
    "range64"    shift, and go to state 244
    "urange64"   shift, and go to state 245
    "block"      shift, and go to state 246
    "int64"      shift, and go to state 247
    "uint64"     shift, and go to state 248
    "double"     shift, and go to state 249
    "function"   shift, and go to state 250
    "lambda"     shift, and go to state 251
    "int8"       shift, and go to state 252
    "uint8"      shift, and go to state 253
    "int16"      shift, and go to state 254
    "uint16"     shift, and go to state 255
    "tuple"      shift, and go to state 256
    "variant"    shift, and go to state 257
    "::"         shift, and go to state 55
    "$t"         shift, and go to state 258
    "name"       shift, and go to state 56
    '$'          shift, and go to state 259

    name_in_namespace                   go to state 260
    basic_type_declaration              go to state 261
    structure_type_declaration          go to state 262
    auto_type_declaration               go to state 263
    bitfield_type_declaration           go to state 264
    type_declaration_no_options         go to state 265
    type_declaration_no_options_no_dim  go to state 266
    type_declaration                    go to state 267


State 169

  725 bitfield_alias_declaration: "bitfield" optional_public_or_private_alias "name" $@74 "begin of code block" . $@75 bitfield_alias_bits optional_comma $@76 "end of code block"

    $default  reduce using rule 723 ($@75)

    $@75  go to state 268


State 170

  717 tuple_alias_declaration: "tuple" optional_public_or_private_alias "name" $@68 "begin of code block" . $@69 tuple_alias_type_list $@70 "end of code block"

    $default  reduce using rule 715 ($@69)

    $@69  go to state 269


State 171

  721 variant_alias_declaration: "variant" optional_public_or_private_alias "name" $@71 "begin of code block" . $@72 variant_alias_type_list $@73 "end of code block"

    $default  reduce using rule 719 ($@72)

    $@72  go to state 270


State 172

   34 reader_character_sequence: reader_character_sequence STRING_CHARACTER .

    $default  reduce using rule 34 (reader_character_sequence)


State 173

  103 annotation_declaration_basic: annotation_declaration_name '(' annotation_argument_list ')' .

    $default  reduce using rule 103 (annotation_declaration_basic)


State 174

  121 function_name: "operator" . '!'
  122              | "operator" . '~'
  123              | "operator" . "+="
  124              | "operator" . "-="
  125              | "operator" . "*="
  126              | "operator" . "/="
  127              | "operator" . "%="
  128              | "operator" . "&="
  129              | "operator" . "|="
  130              | "operator" . "^="
  131              | "operator" . "&&="
  132              | "operator" . "||="
  133              | "operator" . "^^="
  134              | "operator" . "&&"
  135              | "operator" . "||"
  136              | "operator" . "^^"
  137              | "operator" . '+'
  138              | "operator" . '-'
  139              | "operator" . '*'
  140              | "operator" . '/'
  141              | "operator" . '%'
  142              | "operator" . '<'
  143              | "operator" . '>'
  144              | "operator" . ".."
  145              | "operator" . "=="
  146              | "operator" . "!="
  147              | "operator" . "<="
  148              | "operator" . ">="
  149              | "operator" . '&'
  150              | "operator" . '|'
  151              | "operator" . '^'
  154              | "operator" . "++"
  155              | "operator" . "--"
  156              | "operator" . "<<"
  157              | "operator" . ">>"
  158              | "operator" . "<<="
  159              | "operator" . ">>="
  160              | "operator" . "<<<"
  161              | "operator" . ">>>"
  162              | "operator" . "<<<="
  163              | "operator" . ">>>="
  164              | "operator" . '[' ']'
  165              | "operator" . "?[" ']'
  166              | "operator" . '.'
  167              | "operator" . "?."
  168              | "operator" . '.' "name"
  169              | "operator" . '.' "name" ":="
  170              | "operator" . "?." "name"
  171              | "operator" . ":="
  172              | "operator" . "delete"
  173              | "operator" . "??"
  174              | "operator" . "is"
  175              | "operator" . "as"
  176              | "operator" . "is" "name"
  177              | "operator" . "as" "name"
  178              | "operator" . '?' "as"
  179              | "operator" . '?' "as" "name"

    "is"      shift, and go to state 271
    "as"      shift, and go to state 272
    "delete"  shift, and go to state 273
    "+="      shift, and go to state 274
    "-="      shift, and go to state 275
    "/="      shift, and go to state 276
    "*="      shift, and go to state 277
    "%="      shift, and go to state 278
    "&="      shift, and go to state 279
    "|="      shift, and go to state 280
    "^="      shift, and go to state 281
    "<<"      shift, and go to state 282
    ">>"      shift, and go to state 283
    "++"      shift, and go to state 284
    "--"      shift, and go to state 285
    "<="      shift, and go to state 286
    "<<="     shift, and go to state 287
    ">>="     shift, and go to state 288
    ">="      shift, and go to state 289
    "=="      shift, and go to state 290
    "!="      shift, and go to state 291
    "??"      shift, and go to state 292
    "?."      shift, and go to state 293
    "?["      shift, and go to state 294
    ":="      shift, and go to state 295
    "<<<"     shift, and go to state 296
    ">>>"     shift, and go to state 297
    "<<<="    shift, and go to state 298
    ">>>="    shift, and go to state 299
    "&&"      shift, and go to state 300
    "||"      shift, and go to state 301
    "^^"      shift, and go to state 302
    "&&="     shift, and go to state 303
    "||="     shift, and go to state 304
    "^^="     shift, and go to state 305
    ".."      shift, and go to state 306
    '?'       shift, and go to state 307
    '|'       shift, and go to state 308
    '^'       shift, and go to state 309
    '&'       shift, and go to state 310
    '<'       shift, and go to state 311
    '>'       shift, and go to state 312
    '-'       shift, and go to state 313
    '+'       shift, and go to state 314
    '*'       shift, and go to state 315
    '/'       shift, and go to state 316
    '%'       shift, and go to state 317
    '~'       shift, and go to state 318
    '!'       shift, and go to state 319
    '.'       shift, and go to state 320
    '['       shift, and go to state 321


State 175

  180 function_name: "bool" .

    $default  reduce using rule 180 (function_name)


State 176

  181 function_name: "string" .

    $default  reduce using rule 181 (function_name)


State 177

  182 function_name: "int" .

    $default  reduce using rule 182 (function_name)


State 178

  183 function_name: "int2" .

    $default  reduce using rule 183 (function_name)


State 179

  184 function_name: "int3" .

    $default  reduce using rule 184 (function_name)


State 180

  185 function_name: "int4" .

    $default  reduce using rule 185 (function_name)


State 181

  186 function_name: "uint" .

    $default  reduce using rule 186 (function_name)


State 182

  187 function_name: "uint2" .

    $default  reduce using rule 187 (function_name)


State 183

  188 function_name: "uint3" .

    $default  reduce using rule 188 (function_name)


State 184

  189 function_name: "uint4" .

    $default  reduce using rule 189 (function_name)


State 185

  190 function_name: "float" .

    $default  reduce using rule 190 (function_name)


State 186

  191 function_name: "float2" .

    $default  reduce using rule 191 (function_name)


State 187

  192 function_name: "float3" .

    $default  reduce using rule 192 (function_name)


State 188

  193 function_name: "float4" .

    $default  reduce using rule 193 (function_name)


State 189

  194 function_name: "range" .

    $default  reduce using rule 194 (function_name)


State 190

  195 function_name: "urange" .

    $default  reduce using rule 195 (function_name)


State 191

  196 function_name: "range64" .

    $default  reduce using rule 196 (function_name)


State 192

  197 function_name: "urange64" .

    $default  reduce using rule 197 (function_name)


State 193

  198 function_name: "int64" .

    $default  reduce using rule 198 (function_name)


State 194

  199 function_name: "uint64" .

    $default  reduce using rule 199 (function_name)


State 195

  200 function_name: "double" .

    $default  reduce using rule 200 (function_name)


State 196

  201 function_name: "int8" .

    $default  reduce using rule 201 (function_name)


State 197

  202 function_name: "uint8" .

    $default  reduce using rule 202 (function_name)


State 198

  203 function_name: "int16" .

    $default  reduce using rule 203 (function_name)


State 199

  204 function_name: "uint16" .

    $default  reduce using rule 204 (function_name)


State 200

  152 function_name: "++" . "operator"

    "operator"  shift, and go to state 322


State 201

  153 function_name: "--" . "operator"

    "operator"  shift, and go to state 323


State 202

  120 function_name: "name" .

    $default  reduce using rule 120 (function_name)


State 203

  209 function_declaration_header: function_name . optional_function_argument_list optional_function_type

    '('  shift, and go to state 324

    $default  reduce using rule 115 (optional_function_argument_list)

    optional_function_argument_list  go to state 325


State 204

  211 function_declaration: optional_public_or_private_function $@2 function_declaration_header . expression_block

    $default  reduce using rule 216 ($@5)

    expression_block  go to state 326
    $@5               go to state 327


State 205

  567 optional_enum_basic_type_declaration: ':' . enum_basic_type_declaration

    "int"     shift, and go to state 328
    "uint"    shift, and go to state 329
    "int64"   shift, and go to state 330
    "uint64"  shift, and go to state 331
    "int8"    shift, and go to state 332
    "uint8"   shift, and go to state 333
    "int16"   shift, and go to state 334
    "uint16"  shift, and go to state 335

    enum_basic_type_declaration  go to state 336


State 206

  570 enum_declaration: optional_annotation_list "enum" optional_public_or_private_enum enum_name optional_enum_basic_type_declaration . "begin of code block" $@35 enum_list optional_comma $@36 "end of code block"

    "begin of code block"  shift, and go to state 337


State 207

  574 optional_sealed: "sealed" .

    $default  reduce using rule 574 (optional_sealed)


State 208

  575 structure_name: optional_sealed . "name" optional_structure_parent

    "name"  shift, and go to state 338


State 209

  585 structure_declaration: optional_annotation_list class_or_struct optional_public_or_private_structure $@37 structure_name . $@38 optional_struct_variable_declaration_list

    $default  reduce using rule 584 ($@38)

    $@38  go to state 339


State 210

  545 global_variable_declaration_list: global_variable_declaration_list . "end of expression"
  547                                 | global_variable_declaration_list . $@32 optional_field_annotation let_variable_declaration
  548 global_let: kwd_let optional_shared optional_public_or_private_variable "begin of code block" global_variable_declaration_list . "end of code block"

    "end of code block"  shift, and go to state 340
    "end of expression"  shift, and go to state 341

    $default  reduce using rule 546 ($@32)

    $@32  go to state 342


State 211

   97 metadata_argument_list: '@' . annotation_argument

    "type"  shift, and go to state 32
    "in"    shift, and go to state 33
    "name"  shift, and go to state 34

    annotation_argument_name  go to state 35
    annotation_argument       go to state 343


State 212

   98 metadata_argument_list: metadata_argument_list . '@' annotation_argument
  475 optional_field_annotation: metadata_argument_list .

    '@'  shift, and go to state 344

    $default  reduce using rule 475 (optional_field_annotation)


State 213

  550 global_let: kwd_let optional_shared optional_public_or_private_variable $@33 optional_field_annotation . global_let_variable_declaration

    "name"  shift, and go to state 345

    global_let_variable_name_with_pos_list  go to state 346
    global_let_variable_declaration         go to state 347


State 214

   25 character_sequence: character_sequence STRING_CHARACTER .

    $default  reduce using rule 25 (character_sequence)


State 215

   26 character_sequence: character_sequence STRING_CHARACTER_ESC .

    $default  reduce using rule 26 (character_sequence)


State 216

   27 string_constant: "start of the string" character_sequence "end of the string" .

    $default  reduce using rule 27 (string_constant)


State 217

   83 annotation_argument_value_list: annotation_argument_value_list ',' . annotation_argument_value

    "true"                     shift, and go to state 159
    "false"                    shift, and go to state 160
    "integer constant"         shift, and go to state 161
    "floating point constant"  shift, and go to state 162
    "name"                     shift, and go to state 163
    "start of the string"      shift, and go to state 124

    string_constant            go to state 164
    annotation_argument_value  go to state 348


State 218

   94 annotation_argument: annotation_argument_name '=' '(' annotation_argument_value_list ')' .

    $default  reduce using rule 94 (annotation_argument)


State 219

  654 type_declaration_no_options_no_dim: "type" . '<' $@41 type_declaration '>' $@42

    '<'  shift, and go to state 349


State 220

  677 type_declaration_no_options_no_dim: "array" . '<' $@46 type_declaration '>' $@47

    '<'  shift, and go to state 350


State 221

  680 type_declaration_no_options_no_dim: "table" . '<' $@48 table_type_pair '>' $@49

    '<'  shift, and go to state 351


State 222

  655 type_declaration_no_options_no_dim: "typedecl" . '(' expr ')'

    '('  shift, and go to state 352


State 223

  683 type_declaration_no_options_no_dim: "iterator" . '<' $@50 type_declaration '>' $@51

    '<'  shift, and go to state 353


State 224

  673 type_declaration_no_options_no_dim: "smart_ptr" . '<' $@44 type_declaration '>' $@45

    '<'  shift, and go to state 354


State 225

  591 basic_type_declaration: "bool" .

    $default  reduce using rule 591 (basic_type_declaration)


State 226

  611 basic_type_declaration: "void" .

    $default  reduce using rule 611 (basic_type_declaration)


State 227

  592 basic_type_declaration: "string" .

    $default  reduce using rule 592 (basic_type_declaration)


State 228

  627 auto_type_declaration: "auto" .
  628                      | "auto" . '(' "name" ')'

    '('  shift, and go to state 355

    $default  reduce using rule 627 (auto_type_declaration)


State 229

  593 basic_type_declaration: "int" .

    $default  reduce using rule 593 (basic_type_declaration)


State 230

  597 basic_type_declaration: "int2" .

    $default  reduce using rule 597 (basic_type_declaration)


State 231

  598 basic_type_declaration: "int3" .

    $default  reduce using rule 598 (basic_type_declaration)


State 232

  599 basic_type_declaration: "int4" .

    $default  reduce using rule 599 (basic_type_declaration)


State 233

  600 basic_type_declaration: "uint" .

    $default  reduce using rule 600 (basic_type_declaration)


State 234

  617 basic_type_declaration: "bitfield" .
  637 bitfield_type_declaration: "bitfield" . '<' $@39 bitfield_bits '>' $@40

    '<'  shift, and go to state 356

    $default  reduce using rule 617 (basic_type_declaration)


State 235

  604 basic_type_declaration: "uint2" .

    $default  reduce using rule 604 (basic_type_declaration)


State 236

  605 basic_type_declaration: "uint3" .

    $default  reduce using rule 605 (basic_type_declaration)


State 237

  606 basic_type_declaration: "uint4" .

    $default  reduce using rule 606 (basic_type_declaration)


State 238

  607 basic_type_declaration: "float" .

    $default  reduce using rule 607 (basic_type_declaration)


State 239

  608 basic_type_declaration: "float2" .

    $default  reduce using rule 608 (basic_type_declaration)


State 240

  609 basic_type_declaration: "float3" .

    $default  reduce using rule 609 (basic_type_declaration)


State 241

  610 basic_type_declaration: "float4" .

    $default  reduce using rule 610 (basic_type_declaration)


State 242

  612 basic_type_declaration: "range" .

    $default  reduce using rule 612 (basic_type_declaration)


State 243

  613 basic_type_declaration: "urange" .

    $default  reduce using rule 613 (basic_type_declaration)


State 244

  614 basic_type_declaration: "range64" .

    $default  reduce using rule 614 (basic_type_declaration)


State 245

  615 basic_type_declaration: "urange64" .

    $default  reduce using rule 615 (basic_type_declaration)


State 246

  684 type_declaration_no_options_no_dim: "block" .
  687                                   | "block" . '<' $@52 type_declaration '>' $@53
  690                                   | "block" . '<' $@54 optional_function_argument_list optional_function_type '>' $@55

    '<'  shift, and go to state 357

    $default  reduce using rule 684 (type_declaration_no_options_no_dim)


State 247

  596 basic_type_declaration: "int64" .

    $default  reduce using rule 596 (basic_type_declaration)


State 248

  603 basic_type_declaration: "uint64" .

    $default  reduce using rule 603 (basic_type_declaration)


State 249

  616 basic_type_declaration: "double" .

    $default  reduce using rule 616 (basic_type_declaration)


State 250

  691 type_declaration_no_options_no_dim: "function" .
  694                                   | "function" . '<' $@56 type_declaration '>' $@57
  697                                   | "function" . '<' $@58 optional_function_argument_list optional_function_type '>' $@59

    '<'  shift, and go to state 358

    $default  reduce using rule 691 (type_declaration_no_options_no_dim)


State 251

  698 type_declaration_no_options_no_dim: "lambda" .
  701                                   | "lambda" . '<' $@60 type_declaration '>' $@61
  704                                   | "lambda" . '<' $@62 optional_function_argument_list optional_function_type '>' $@63

    '<'  shift, and go to state 359

    $default  reduce using rule 698 (type_declaration_no_options_no_dim)


State 252

  594 basic_type_declaration: "int8" .

    $default  reduce using rule 594 (basic_type_declaration)


State 253

  601 basic_type_declaration: "uint8" .

    $default  reduce using rule 601 (basic_type_declaration)


State 254

  595 basic_type_declaration: "int16" .

    $default  reduce using rule 595 (basic_type_declaration)


State 255

  602 basic_type_declaration: "uint16" .

    $default  reduce using rule 602 (basic_type_declaration)


State 256

  707 type_declaration_no_options_no_dim: "tuple" . '<' $@64 tuple_type_list '>' $@65

    '<'  shift, and go to state 360


State 257

  710 type_declaration_no_options_no_dim: "variant" . '<' $@66 variant_type_list '>' $@67

    '<'  shift, and go to state 361


State 258

  629 auto_type_declaration: "$t" . '(' expr ')'

    '('  shift, and go to state 362


State 259

  656 type_declaration_no_options_no_dim: '$' . name_in_namespace '(' optional_expr_list ')'
  658                                   | '$' . name_in_namespace '<' $@43 type_declaration_no_options_list '>' '(' optional_expr_list ')'

    "::"    shift, and go to state 55
    "name"  shift, and go to state 56

    name_in_namespace  go to state 363


State 260

  626 structure_type_declaration: name_in_namespace .

    $default  reduce using rule 626 (structure_type_declaration)


State 261

  648 type_declaration_no_options_no_dim: basic_type_declaration .

    $default  reduce using rule 648 (type_declaration_no_options_no_dim)


State 262

  651 type_declaration_no_options_no_dim: structure_type_declaration .

    $default  reduce using rule 651 (type_declaration_no_options_no_dim)


State 263

  649 type_declaration_no_options_no_dim: auto_type_declaration .

    $default  reduce using rule 649 (type_declaration_no_options_no_dim)


State 264

  650 type_declaration_no_options_no_dim: bitfield_type_declaration .

    $default  reduce using rule 650 (type_declaration_no_options_no_dim)


State 265

  711 type_declaration: type_declaration_no_options .

    $default  reduce using rule 711 (type_declaration)


State 266

  646 type_declaration_no_options: type_declaration_no_options_no_dim .
  647                            | type_declaration_no_options_no_dim . dim_list
  659 type_declaration_no_options_no_dim: type_declaration_no_options_no_dim . '-' '[' ']'
  660                                   | type_declaration_no_options_no_dim . "explicit"
  661                                   | type_declaration_no_options_no_dim . "const"
  662                                   | type_declaration_no_options_no_dim . '-' "const"
  663                                   | type_declaration_no_options_no_dim . '&'
  664                                   | type_declaration_no_options_no_dim . '-' '&'
  665                                   | type_declaration_no_options_no_dim . '#'
  666                                   | type_declaration_no_options_no_dim . "implicit"
  667                                   | type_declaration_no_options_no_dim . '-' '#'
  668                                   | type_declaration_no_options_no_dim . "==" "const"
  669                                   | type_declaration_no_options_no_dim . "==" '&'
  670                                   | type_declaration_no_options_no_dim . '?'
  674                                   | type_declaration_no_options_no_dim . "??"

    "const"     shift, and go to state 364
    "implicit"  shift, and go to state 365
    "explicit"  shift, and go to state 366
    "=="        shift, and go to state 367
    "??"        shift, and go to state 368
    '?'         shift, and go to state 369
    '&'         shift, and go to state 370
    '-'         shift, and go to state 371
    '['         shift, and go to state 372
    '#'         shift, and go to state 373

    $default  reduce using rule 646 (type_declaration_no_options)

    dim_list  go to state 374


State 267

  560 single_alias: optional_public_or_private_alias "name" $@34 '=' type_declaration .
  712 type_declaration: type_declaration . '|' type_declaration_no_options
  713                 | type_declaration . '|' '#'

    '|'  shift, and go to state 375

    $default  reduce using rule 560 (single_alias)


State 268

  725 bitfield_alias_declaration: "bitfield" optional_public_or_private_alias "name" $@74 "begin of code block" $@75 . bitfield_alias_bits optional_comma $@76 "end of code block"

    "name"  shift, and go to state 376

    $default  reduce using rule 632 (bitfield_alias_bits)

    bitfield_alias_bits  go to state 377


State 269

  717 tuple_alias_declaration: "tuple" optional_public_or_private_alias "name" $@68 "begin of code block" $@69 . tuple_alias_type_list $@70 "end of code block"

    $default  reduce using rule 502 (tuple_alias_type_list)

    tuple_alias_type_list  go to state 378


State 270

  721 variant_alias_declaration: "variant" optional_public_or_private_alias "name" $@71 "begin of code block" $@72 . variant_alias_type_list $@73 "end of code block"

    $default  reduce using rule 508 (variant_alias_type_list)

    variant_alias_type_list  go to state 379


State 271

  174 function_name: "operator" "is" .
  176              | "operator" "is" . "name"

    "name"  shift, and go to state 380

    $default  reduce using rule 174 (function_name)


State 272

  175 function_name: "operator" "as" .
  177              | "operator" "as" . "name"

    "name"  shift, and go to state 381

    $default  reduce using rule 175 (function_name)


State 273

  172 function_name: "operator" "delete" .

    $default  reduce using rule 172 (function_name)


State 274

  123 function_name: "operator" "+=" .

    $default  reduce using rule 123 (function_name)


State 275

  124 function_name: "operator" "-=" .

    $default  reduce using rule 124 (function_name)


State 276

  126 function_name: "operator" "/=" .

    $default  reduce using rule 126 (function_name)


State 277

  125 function_name: "operator" "*=" .

    $default  reduce using rule 125 (function_name)


State 278

  127 function_name: "operator" "%=" .

    $default  reduce using rule 127 (function_name)


State 279

  128 function_name: "operator" "&=" .

    $default  reduce using rule 128 (function_name)


State 280

  129 function_name: "operator" "|=" .

    $default  reduce using rule 129 (function_name)


State 281

  130 function_name: "operator" "^=" .

    $default  reduce using rule 130 (function_name)


State 282

  156 function_name: "operator" "<<" .

    $default  reduce using rule 156 (function_name)


State 283

  157 function_name: "operator" ">>" .

    $default  reduce using rule 157 (function_name)


State 284

  154 function_name: "operator" "++" .

    $default  reduce using rule 154 (function_name)


State 285

  155 function_name: "operator" "--" .

    $default  reduce using rule 155 (function_name)


State 286

  147 function_name: "operator" "<=" .

    $default  reduce using rule 147 (function_name)


State 287

  158 function_name: "operator" "<<=" .

    $default  reduce using rule 158 (function_name)


State 288

  159 function_name: "operator" ">>=" .

    $default  reduce using rule 159 (function_name)


State 289

  148 function_name: "operator" ">=" .

    $default  reduce using rule 148 (function_name)


State 290

  145 function_name: "operator" "==" .

    $default  reduce using rule 145 (function_name)


State 291

  146 function_name: "operator" "!=" .

    $default  reduce using rule 146 (function_name)


State 292

  173 function_name: "operator" "??" .

    $default  reduce using rule 173 (function_name)


State 293

  167 function_name: "operator" "?." .
  170              | "operator" "?." . "name"

    "name"  shift, and go to state 382

    $default  reduce using rule 167 (function_name)


State 294

  165 function_name: "operator" "?[" . ']'

    ']'  shift, and go to state 383


State 295

  171 function_name: "operator" ":=" .

    $default  reduce using rule 171 (function_name)


State 296

  160 function_name: "operator" "<<<" .

    $default  reduce using rule 160 (function_name)


State 297

  161 function_name: "operator" ">>>" .

    $default  reduce using rule 161 (function_name)


State 298

  162 function_name: "operator" "<<<=" .

    $default  reduce using rule 162 (function_name)


State 299

  163 function_name: "operator" ">>>=" .

    $default  reduce using rule 163 (function_name)


State 300

  134 function_name: "operator" "&&" .

    $default  reduce using rule 134 (function_name)


State 301

  135 function_name: "operator" "||" .

    $default  reduce using rule 135 (function_name)


State 302

  136 function_name: "operator" "^^" .

    $default  reduce using rule 136 (function_name)


State 303

  131 function_name: "operator" "&&=" .

    $default  reduce using rule 131 (function_name)


State 304

  132 function_name: "operator" "||=" .

    $default  reduce using rule 132 (function_name)


State 305

  133 function_name: "operator" "^^=" .

    $default  reduce using rule 133 (function_name)


State 306

  144 function_name: "operator" ".." .

    $default  reduce using rule 144 (function_name)


State 307

  178 function_name: "operator" '?' . "as"
  179              | "operator" '?' . "as" "name"

    "as"  shift, and go to state 384


State 308

  150 function_name: "operator" '|' .

    $default  reduce using rule 150 (function_name)


State 309

  151 function_name: "operator" '^' .

    $default  reduce using rule 151 (function_name)


State 310

  149 function_name: "operator" '&' .

    $default  reduce using rule 149 (function_name)


State 311

  142 function_name: "operator" '<' .

    $default  reduce using rule 142 (function_name)


State 312

  143 function_name: "operator" '>' .

    $default  reduce using rule 143 (function_name)


State 313

  138 function_name: "operator" '-' .

    $default  reduce using rule 138 (function_name)


State 314

  137 function_name: "operator" '+' .

    $default  reduce using rule 137 (function_name)


State 315

  139 function_name: "operator" '*' .

    $default  reduce using rule 139 (function_name)


State 316

  140 function_name: "operator" '/' .

    $default  reduce using rule 140 (function_name)


State 317

  141 function_name: "operator" '%' .

    $default  reduce using rule 141 (function_name)


State 318

  122 function_name: "operator" '~' .

    $default  reduce using rule 122 (function_name)


State 319

  121 function_name: "operator" '!' .

    $default  reduce using rule 121 (function_name)


State 320

  166 function_name: "operator" '.' .
  168              | "operator" '.' . "name"
  169              | "operator" '.' . "name" ":="

    "name"  shift, and go to state 385

    $default  reduce using rule 166 (function_name)


State 321

  164 function_name: "operator" '[' . ']'

    ']'  shift, and go to state 386


State 322

  152 function_name: "++" "operator" .

    $default  reduce using rule 152 (function_name)


State 323

  153 function_name: "--" "operator" .

    $default  reduce using rule 153 (function_name)


State 324

  116 optional_function_argument_list: '(' . ')'
  117                                | '(' . function_argument_list ')'

    "$a"  shift, and go to state 387
    ')'   shift, and go to state 388
    '@'   shift, and go to state 211

    $default  reduce using rule 474 (optional_field_annotation)

    metadata_argument_list         go to state 212
    optional_field_annotation      go to state 389
    function_argument_declaration  go to state 390
    function_argument_list         go to state 391


State 325

  209 function_declaration_header: function_name optional_function_argument_list . optional_function_type

    ':'  shift, and go to state 392

    $default  reduce using rule 118 (optional_function_type)

    optional_function_type  go to state 393


State 326

  211 function_declaration: optional_public_or_private_function $@2 function_declaration_header expression_block .

    $default  reduce using rule 211 (function_declaration)


State 327

  218 expression_block: $@5 . "begin of code block" expressions $@6 "end of code block" expression_block_finally

    "begin of code block"  shift, and go to state 394


State 328

  618 enum_basic_type_declaration: "int" .

    $default  reduce using rule 618 (enum_basic_type_declaration)


State 329

  621 enum_basic_type_declaration: "uint" .

    $default  reduce using rule 621 (enum_basic_type_declaration)


State 330

  624 enum_basic_type_declaration: "int64" .

    $default  reduce using rule 624 (enum_basic_type_declaration)


State 331

  625 enum_basic_type_declaration: "uint64" .

    $default  reduce using rule 625 (enum_basic_type_declaration)


State 332

  619 enum_basic_type_declaration: "int8" .

    $default  reduce using rule 619 (enum_basic_type_declaration)


State 333

  622 enum_basic_type_declaration: "uint8" .

    $default  reduce using rule 622 (enum_basic_type_declaration)


State 334

  620 enum_basic_type_declaration: "int16" .

    $default  reduce using rule 620 (enum_basic_type_declaration)


State 335

  623 enum_basic_type_declaration: "uint16" .

    $default  reduce using rule 623 (enum_basic_type_declaration)


State 336

  567 optional_enum_basic_type_declaration: ':' enum_basic_type_declaration .

    $default  reduce using rule 567 (optional_enum_basic_type_declaration)


State 337

  570 enum_declaration: optional_annotation_list "enum" optional_public_or_private_enum enum_name optional_enum_basic_type_declaration "begin of code block" . $@35 enum_list optional_comma $@36 "end of code block"

    $default  reduce using rule 568 ($@35)

    $@35  go to state 395


State 338

  575 structure_name: optional_sealed "name" . optional_structure_parent

    ':'  shift, and go to state 396

    $default  reduce using rule 571 (optional_structure_parent)

    optional_structure_parent  go to state 397


State 339

  585 structure_declaration: optional_annotation_list class_or_struct optional_public_or_private_structure $@37 structure_name $@38 . optional_struct_variable_declaration_list

    "begin of code block"  shift, and go to state 398

    $default  reduce using rule 581 (optional_struct_variable_declaration_list)

    optional_struct_variable_declaration_list  go to state 399


State 340

  548 global_let: kwd_let optional_shared optional_public_or_private_variable "begin of code block" global_variable_declaration_list "end of code block" .

    $default  reduce using rule 548 (global_let)


State 341

  545 global_variable_declaration_list: global_variable_declaration_list "end of expression" .

    $default  reduce using rule 545 (global_variable_declaration_list)


State 342

  547 global_variable_declaration_list: global_variable_declaration_list $@32 . optional_field_annotation let_variable_declaration

    '@'  shift, and go to state 211

    $default  reduce using rule 474 (optional_field_annotation)

    metadata_argument_list     go to state 212
    optional_field_annotation  go to state 400


State 343

   97 metadata_argument_list: '@' annotation_argument .

    $default  reduce using rule 97 (metadata_argument_list)


State 344

   98 metadata_argument_list: metadata_argument_list '@' . annotation_argument

    "type"  shift, and go to state 32
    "in"    shift, and go to state 33
    "name"  shift, and go to state 34

    annotation_argument_name  go to state 35
    annotation_argument       go to state 401


State 345

  528 global_let_variable_name_with_pos_list: "name" .

    $default  reduce using rule 528 (global_let_variable_name_with_pos_list)


State 346

  529 global_let_variable_name_with_pos_list: global_let_variable_name_with_pos_list . ',' "name"
  536 global_let_variable_declaration: global_let_variable_name_with_pos_list . ':' type_declaration_no_options "end of expression"
  537                                | global_let_variable_name_with_pos_list . ':' type_declaration_no_options copy_or_move_or_clone expr "end of expression"
  538                                | global_let_variable_name_with_pos_list . optional_ref copy_or_move_or_clone expr "end of expression"

    ','  shift, and go to state 402
    ':'  shift, and go to state 403
    '&'  shift, and go to state 404

    $default  reduce using rule 521 (optional_ref)

    optional_ref  go to state 405


State 347

  550 global_let: kwd_let optional_shared optional_public_or_private_variable $@33 optional_field_annotation global_let_variable_declaration .

    $default  reduce using rule 550 (global_let)


State 348

   83 annotation_argument_value_list: annotation_argument_value_list ',' annotation_argument_value .

    $default  reduce using rule 83 (annotation_argument_value_list)


State 349

  654 type_declaration_no_options_no_dim: "type" '<' . $@41 type_declaration '>' $@42

    $default  reduce using rule 652 ($@41)

    $@41  go to state 406


State 350

  677 type_declaration_no_options_no_dim: "array" '<' . $@46 type_declaration '>' $@47

    $default  reduce using rule 675 ($@46)

    $@46  go to state 407


State 351

  680 type_declaration_no_options_no_dim: "table" '<' . $@48 table_type_pair '>' $@49

    $default  reduce using rule 678 ($@48)

    $@48  go to state 408


State 352

  655 type_declaration_no_options_no_dim: "typedecl" '(' . expr ')'

    "struct"                          shift, and go to state 409
    "class"                           shift, and go to state 410
    "true"                            shift, and go to state 411
    "false"                           shift, and go to state 412
    "new"                             shift, and go to state 413
    "typeinfo"                        shift, and go to state 414
    "type"                            shift, and go to state 415
    "array"                           shift, and go to state 416
    "null"                            shift, and go to state 417
    "table"                           shift, and go to state 418
    "deref"                           shift, and go to state 419
    "cast"                            shift, and go to state 420
    "upcast"                          shift, and go to state 421
    "addr"                            shift, and go to state 422
    "reinterpret"                     shift, and go to state 423
    "unsafe"                          shift, and go to state 424
    "fixed_array"                     shift, and go to state 425
    "default"                         shift, and go to state 426
    "bool"                            shift, and go to state 225
    "void"                            shift, and go to state 226
    "string"                          shift, and go to state 227
    "int"                             shift, and go to state 229
    "int2"                            shift, and go to state 230
    "int3"                            shift, and go to state 231
    "int4"                            shift, and go to state 232
    "uint"                            shift, and go to state 233
    "bitfield"                        shift, and go to state 427
    "uint2"                           shift, and go to state 235
    "uint3"                           shift, and go to state 236
    "uint4"                           shift, and go to state 237
    "float"                           shift, and go to state 238
    "float2"                          shift, and go to state 239
    "float3"                          shift, and go to state 240
    "float4"                          shift, and go to state 241
    "range"                           shift, and go to state 242
    "urange"                          shift, and go to state 243
    "range64"                         shift, and go to state 244
    "urange64"                        shift, and go to state 245
    "int64"                           shift, and go to state 247
    "uint64"                          shift, and go to state 248
    "double"                          shift, and go to state 249
    "int8"                            shift, and go to state 252
    "uint8"                           shift, and go to state 253
    "int16"                           shift, and go to state 254
    "uint16"                          shift, and go to state 255
    "tuple"                           shift, and go to state 428
    "variant"                         shift, and go to state 429
    "generator"                       shift, and go to state 430
    "++"                              shift, and go to state 431
    "--"                              shift, and go to state 432
    "::"                              shift, and go to state 55
    "$$"                              shift, and go to state 433
    "$i"                              shift, and go to state 434
    "$v"                              shift, and go to state 435
    "$b"                              shift, and go to state 436
    "$a"                              shift, and go to state 437
    "$c"                              shift, and go to state 438
    "..."                             shift, and go to state 439
    "integer constant"                shift, and go to state 440
    "long integer constant"           shift, and go to state 441
    "unsigned integer constant"       shift, and go to state 442
    "unsigned long integer constant"  shift, and go to state 443
    "unsigned int8 constant"          shift, and go to state 444
    "floating point constant"         shift, and go to state 445
    "double constant"                 shift, and go to state 446
    "name"                            shift, and go to state 56
    "start of the string"             shift, and go to state 447
    "begin of code block"             shift, and go to state 448
    '-'                               shift, and go to state 449
    '+'                               shift, and go to state 450
    '*'                               shift, and go to state 451
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 452
    '!'                               shift, and go to state 453
    '['                               shift, and go to state 454
    '('                               shift, and go to state 455
    '$'                               shift, and go to state 456
    '@'                               shift, and go to state 457

    string_builder          go to state 458
    expr_reader             go to state 459
    expr_call_pipe          go to state 460
    name_in_namespace       go to state 461
    expr_new                go to state 462
    expr_cast               go to state 463
    expr_type_decl          go to state 464
    expr_type_info          go to state 465
    block_or_lambda         go to state 466
    expr_full_block         go to state 467
    expr_numeric_const      go to state 468
    expr_named_call         go to state 469
    expr_method_call        go to state 470
    func_addr_expr          go to state 471
    expr_field              go to state 472
    expr_call               go to state 473
    expr                    go to state 474
    expr_mtag               go to state 475
    basic_type_declaration  go to state 476
    make_decl               go to state 477
    make_struct_decl        go to state 478
    make_tuple_call         go to state 479
    make_dim_decl           go to state 480
    make_table_decl         go to state 481
    array_comprehension     go to state 482


State 353

  683 type_declaration_no_options_no_dim: "iterator" '<' . $@50 type_declaration '>' $@51

    $default  reduce using rule 681 ($@50)

    $@50  go to state 483


State 354

  673 type_declaration_no_options_no_dim: "smart_ptr" '<' . $@44 type_declaration '>' $@45

    $default  reduce using rule 671 ($@44)

    $@44  go to state 484


State 355

  628 auto_type_declaration: "auto" '(' . "name" ')'

    "name"  shift, and go to state 485


State 356

  637 bitfield_type_declaration: "bitfield" '<' . $@39 bitfield_bits '>' $@40

    $default  reduce using rule 635 ($@39)

    $@39  go to state 486


State 357

  687 type_declaration_no_options_no_dim: "block" '<' . $@52 type_declaration '>' $@53
  690                                   | "block" '<' . $@54 optional_function_argument_list optional_function_type '>' $@55

    ':'       reduce using rule 688 ($@54)
    '>'       reduce using rule 688 ($@54)
    '('       reduce using rule 688 ($@54)
    $default  reduce using rule 685 ($@52)

    $@52  go to state 487
    $@54  go to state 488


State 358

  694 type_declaration_no_options_no_dim: "function" '<' . $@56 type_declaration '>' $@57
  697                                   | "function" '<' . $@58 optional_function_argument_list optional_function_type '>' $@59

    ':'       reduce using rule 695 ($@58)
    '>'       reduce using rule 695 ($@58)
    '('       reduce using rule 695 ($@58)
    $default  reduce using rule 692 ($@56)

    $@56  go to state 489
    $@58  go to state 490


State 359

  701 type_declaration_no_options_no_dim: "lambda" '<' . $@60 type_declaration '>' $@61
  704                                   | "lambda" '<' . $@62 optional_function_argument_list optional_function_type '>' $@63

    ':'       reduce using rule 702 ($@62)
    '>'       reduce using rule 702 ($@62)
    '('       reduce using rule 702 ($@62)
    $default  reduce using rule 699 ($@60)

    $@60  go to state 491
    $@62  go to state 492


State 360

  707 type_declaration_no_options_no_dim: "tuple" '<' . $@64 tuple_type_list '>' $@65

    $default  reduce using rule 705 ($@64)

    $@64  go to state 493


State 361

  710 type_declaration_no_options_no_dim: "variant" '<' . $@66 variant_type_list '>' $@67

    $default  reduce using rule 708 ($@66)

    $@66  go to state 494


State 362

  629 auto_type_declaration: "$t" '(' . expr ')'

    "struct"                          shift, and go to state 409
    "class"                           shift, and go to state 410
    "true"                            shift, and go to state 411
    "false"                           shift, and go to state 412
    "new"                             shift, and go to state 413
    "typeinfo"                        shift, and go to state 414
    "type"                            shift, and go to state 415
    "array"                           shift, and go to state 416
    "null"                            shift, and go to state 417
    "table"                           shift, and go to state 418
    "deref"                           shift, and go to state 419
    "cast"                            shift, and go to state 420
    "upcast"                          shift, and go to state 421
    "addr"                            shift, and go to state 422
    "reinterpret"                     shift, and go to state 423
    "unsafe"                          shift, and go to state 424
    "fixed_array"                     shift, and go to state 425
    "default"                         shift, and go to state 426
    "bool"                            shift, and go to state 225
    "void"                            shift, and go to state 226
    "string"                          shift, and go to state 227
    "int"                             shift, and go to state 229
    "int2"                            shift, and go to state 230
    "int3"                            shift, and go to state 231
    "int4"                            shift, and go to state 232
    "uint"                            shift, and go to state 233
    "bitfield"                        shift, and go to state 427
    "uint2"                           shift, and go to state 235
    "uint3"                           shift, and go to state 236
    "uint4"                           shift, and go to state 237
    "float"                           shift, and go to state 238
    "float2"                          shift, and go to state 239
    "float3"                          shift, and go to state 240
    "float4"                          shift, and go to state 241
    "range"                           shift, and go to state 242
    "urange"                          shift, and go to state 243
    "range64"                         shift, and go to state 244
    "urange64"                        shift, and go to state 245
    "int64"                           shift, and go to state 247
    "uint64"                          shift, and go to state 248
    "double"                          shift, and go to state 249
    "int8"                            shift, and go to state 252
    "uint8"                           shift, and go to state 253
    "int16"                           shift, and go to state 254
    "uint16"                          shift, and go to state 255
    "tuple"                           shift, and go to state 428
    "variant"                         shift, and go to state 429
    "generator"                       shift, and go to state 430
    "++"                              shift, and go to state 431
    "--"                              shift, and go to state 432
    "::"                              shift, and go to state 55
    "$$"                              shift, and go to state 433
    "$i"                              shift, and go to state 434
    "$v"                              shift, and go to state 435
    "$b"                              shift, and go to state 436
    "$a"                              shift, and go to state 437
    "$c"                              shift, and go to state 438
    "..."                             shift, and go to state 439
    "integer constant"                shift, and go to state 440
    "long integer constant"           shift, and go to state 441
    "unsigned integer constant"       shift, and go to state 442
    "unsigned long integer constant"  shift, and go to state 443
    "unsigned int8 constant"          shift, and go to state 444
    "floating point constant"         shift, and go to state 445
    "double constant"                 shift, and go to state 446
    "name"                            shift, and go to state 56
    "start of the string"             shift, and go to state 447
    "begin of code block"             shift, and go to state 448
    '-'                               shift, and go to state 449
    '+'                               shift, and go to state 450
    '*'                               shift, and go to state 451
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 452
    '!'                               shift, and go to state 453
    '['                               shift, and go to state 454
    '('                               shift, and go to state 455
    '$'                               shift, and go to state 456
    '@'                               shift, and go to state 457

    string_builder          go to state 458
    expr_reader             go to state 459
    expr_call_pipe          go to state 460
    name_in_namespace       go to state 461
    expr_new                go to state 462
    expr_cast               go to state 463
    expr_type_decl          go to state 464
    expr_type_info          go to state 465
    block_or_lambda         go to state 466
    expr_full_block         go to state 467
    expr_numeric_const      go to state 468
    expr_named_call         go to state 469
    expr_method_call        go to state 470
    func_addr_expr          go to state 471
    expr_field              go to state 472
    expr_call               go to state 473
    expr                    go to state 495
    expr_mtag               go to state 475
    basic_type_declaration  go to state 476
    make_decl               go to state 477
    make_struct_decl        go to state 478
    make_tuple_call         go to state 479
    make_dim_decl           go to state 480
    make_table_decl         go to state 481
    array_comprehension     go to state 482


State 363

  656 type_declaration_no_options_no_dim: '$' name_in_namespace . '(' optional_expr_list ')'
  658                                   | '$' name_in_namespace . '<' $@43 type_declaration_no_options_list '>' '(' optional_expr_list ')'

    '<'  shift, and go to state 496
    '('  shift, and go to state 497


State 364

  661 type_declaration_no_options_no_dim: type_declaration_no_options_no_dim "const" .

    $default  reduce using rule 661 (type_declaration_no_options_no_dim)


State 365

  666 type_declaration_no_options_no_dim: type_declaration_no_options_no_dim "implicit" .

    $default  reduce using rule 666 (type_declaration_no_options_no_dim)


State 366

  660 type_declaration_no_options_no_dim: type_declaration_no_options_no_dim "explicit" .

    $default  reduce using rule 660 (type_declaration_no_options_no_dim)


State 367

  668 type_declaration_no_options_no_dim: type_declaration_no_options_no_dim "==" . "const"
  669                                   | type_declaration_no_options_no_dim "==" . '&'

    "const"  shift, and go to state 498
    '&'      shift, and go to state 499


State 368

  674 type_declaration_no_options_no_dim: type_declaration_no_options_no_dim "??" .

    $default  reduce using rule 674 (type_declaration_no_options_no_dim)


State 369

  670 type_declaration_no_options_no_dim: type_declaration_no_options_no_dim '?' .

    $default  reduce using rule 670 (type_declaration_no_options_no_dim)


State 370

  663 type_declaration_no_options_no_dim: type_declaration_no_options_no_dim '&' .

    $default  reduce using rule 663 (type_declaration_no_options_no_dim)


State 371

  659 type_declaration_no_options_no_dim: type_declaration_no_options_no_dim '-' . '[' ']'
  662                                   | type_declaration_no_options_no_dim '-' . "const"
  664                                   | type_declaration_no_options_no_dim '-' . '&'
  667                                   | type_declaration_no_options_no_dim '-' . '#'

    "const"  shift, and go to state 500
    '&'      shift, and go to state 501
    '['      shift, and go to state 502
    '#'      shift, and go to state 503


State 372

  642 dim_list: '[' . expr ']'
  643         | '[' . ']'

    "struct"                          shift, and go to state 409
    "class"                           shift, and go to state 410
    "true"                            shift, and go to state 411
    "false"                           shift, and go to state 412
    "new"                             shift, and go to state 413
    "typeinfo"                        shift, and go to state 414
    "type"                            shift, and go to state 415
    "array"                           shift, and go to state 416
    "null"                            shift, and go to state 417
    "table"                           shift, and go to state 418
    "deref"                           shift, and go to state 419
    "cast"                            shift, and go to state 420
    "upcast"                          shift, and go to state 421
    "addr"                            shift, and go to state 422
    "reinterpret"                     shift, and go to state 423
    "unsafe"                          shift, and go to state 424
    "fixed_array"                     shift, and go to state 425
    "default"                         shift, and go to state 426
    "bool"                            shift, and go to state 225
    "void"                            shift, and go to state 226
    "string"                          shift, and go to state 227
    "int"                             shift, and go to state 229
    "int2"                            shift, and go to state 230
    "int3"                            shift, and go to state 231
    "int4"                            shift, and go to state 232
    "uint"                            shift, and go to state 233
    "bitfield"                        shift, and go to state 427
    "uint2"                           shift, and go to state 235
    "uint3"                           shift, and go to state 236
    "uint4"                           shift, and go to state 237
    "float"                           shift, and go to state 238
    "float2"                          shift, and go to state 239
    "float3"                          shift, and go to state 240
    "float4"                          shift, and go to state 241
    "range"                           shift, and go to state 242
    "urange"                          shift, and go to state 243
    "range64"                         shift, and go to state 244
    "urange64"                        shift, and go to state 245
    "int64"                           shift, and go to state 247
    "uint64"                          shift, and go to state 248
    "double"                          shift, and go to state 249
    "int8"                            shift, and go to state 252
    "uint8"                           shift, and go to state 253
    "int16"                           shift, and go to state 254
    "uint16"                          shift, and go to state 255
    "tuple"                           shift, and go to state 428
    "variant"                         shift, and go to state 429
    "generator"                       shift, and go to state 430
    "++"                              shift, and go to state 431
    "--"                              shift, and go to state 432
    "::"                              shift, and go to state 55
    "$$"                              shift, and go to state 433
    "$i"                              shift, and go to state 434
    "$v"                              shift, and go to state 435
    "$b"                              shift, and go to state 436
    "$a"                              shift, and go to state 437
    "$c"                              shift, and go to state 438
    "..."                             shift, and go to state 439
    "integer constant"                shift, and go to state 440
    "long integer constant"           shift, and go to state 441
    "unsigned integer constant"       shift, and go to state 442
    "unsigned long integer constant"  shift, and go to state 443
    "unsigned int8 constant"          shift, and go to state 444
    "floating point constant"         shift, and go to state 445
    "double constant"                 shift, and go to state 446
    "name"                            shift, and go to state 56
    "start of the string"             shift, and go to state 447
    "begin of code block"             shift, and go to state 448
    '-'                               shift, and go to state 449
    '+'                               shift, and go to state 450
    '*'                               shift, and go to state 451
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 452
    '!'                               shift, and go to state 453
    '['                               shift, and go to state 454
    ']'                               shift, and go to state 504
    '('                               shift, and go to state 455
    '$'                               shift, and go to state 456
    '@'                               shift, and go to state 457

    string_builder          go to state 458
    expr_reader             go to state 459
    expr_call_pipe          go to state 460
    name_in_namespace       go to state 461
    expr_new                go to state 462
    expr_cast               go to state 463
    expr_type_decl          go to state 464
    expr_type_info          go to state 465
    block_or_lambda         go to state 466
    expr_full_block         go to state 467
    expr_numeric_const      go to state 468
    expr_named_call         go to state 469
    expr_method_call        go to state 470
    func_addr_expr          go to state 471
    expr_field              go to state 472
    expr_call               go to state 473
    expr                    go to state 505
    expr_mtag               go to state 475
    basic_type_declaration  go to state 476
    make_decl               go to state 477
    make_struct_decl        go to state 478
    make_tuple_call         go to state 479
    make_dim_decl           go to state 480
    make_table_decl         go to state 481
    array_comprehension     go to state 482


State 373

  665 type_declaration_no_options_no_dim: type_declaration_no_options_no_dim '#' .

    $default  reduce using rule 665 (type_declaration_no_options_no_dim)


State 374

  644 dim_list: dim_list . '[' expr ']'
  645         | dim_list . '[' ']'
  647 type_declaration_no_options: type_declaration_no_options_no_dim dim_list .

    '['  shift, and go to state 506

    $default  reduce using rule 647 (type_declaration_no_options)


State 375

  712 type_declaration: type_declaration '|' . type_declaration_no_options
  713                 | type_declaration '|' . '#'

    "type"       shift, and go to state 219
    "array"      shift, and go to state 220
    "table"      shift, and go to state 221
    "typedecl"   shift, and go to state 222
    "iterator"   shift, and go to state 223
    "smart_ptr"  shift, and go to state 224
    "bool"       shift, and go to state 225
    "void"       shift, and go to state 226
    "string"     shift, and go to state 227
    "auto"       shift, and go to state 228
    "int"        shift, and go to state 229
    "int2"       shift, and go to state 230
    "int3"       shift, and go to state 231
    "int4"       shift, and go to state 232
    "uint"       shift, and go to state 233
    "bitfield"   shift, and go to state 234
    "uint2"      shift, and go to state 235
    "uint3"      shift, and go to state 236
    "uint4"      shift, and go to state 237
    "float"      shift, and go to state 238
    "float2"     shift, and go to state 239
    "float3"     shift, and go to state 240
    "float4"     shift, and go to state 241
    "range"      shift, and go to state 242
    "urange"     shift, and go to state 243
    "range64"    shift, and go to state 244
    "urange64"   shift, and go to state 245
    "block"      shift, and go to state 246
    "int64"      shift, and go to state 247
    "uint64"     shift, and go to state 248
    "double"     shift, and go to state 249
    "function"   shift, and go to state 250
    "lambda"     shift, and go to state 251
    "int8"       shift, and go to state 252
    "uint8"      shift, and go to state 253
    "int16"      shift, and go to state 254
    "uint16"     shift, and go to state 255
    "tuple"      shift, and go to state 256
    "variant"    shift, and go to state 257
    "::"         shift, and go to state 55
    "$t"         shift, and go to state 258
    "name"       shift, and go to state 56
    '$'          shift, and go to state 259
    '#'          shift, and go to state 507

    name_in_namespace                   go to state 260
    basic_type_declaration              go to state 261
    structure_type_declaration          go to state 262
    auto_type_declaration               go to state 263
    bitfield_type_declaration           go to state 264
    type_declaration_no_options         go to state 508
    type_declaration_no_options_no_dim  go to state 266


State 376

  633 bitfield_alias_bits: "name" .

    $default  reduce using rule 633 (bitfield_alias_bits)


State 377

  634 bitfield_alias_bits: bitfield_alias_bits . ',' "name"
  725 bitfield_alias_declaration: "bitfield" optional_public_or_private_alias "name" $@74 "begin of code block" $@75 bitfield_alias_bits . optional_comma $@76 "end of code block"

    ','  shift, and go to state 509

    $default  reduce using rule 793 (optional_comma)

    optional_comma  go to state 510


State 378

  503 tuple_alias_type_list: tuple_alias_type_list . c_or_s
  504                      | tuple_alias_type_list . tuple_type c_or_s
  717 tuple_alias_declaration: "tuple" optional_public_or_private_alias "name" $@68 "begin of code block" $@69 tuple_alias_type_list . $@70 "end of code block"

    "type"               shift, and go to state 219
    "array"              shift, and go to state 220
    "table"              shift, and go to state 221
    "typedecl"           shift, and go to state 222
    "iterator"           shift, and go to state 223
    "smart_ptr"          shift, and go to state 224
    "bool"               shift, and go to state 225
    "void"               shift, and go to state 226
    "string"             shift, and go to state 227
    "auto"               shift, and go to state 228
    "int"                shift, and go to state 229
    "int2"               shift, and go to state 230
    "int3"               shift, and go to state 231
    "int4"               shift, and go to state 232
    "uint"               shift, and go to state 233
    "bitfield"           shift, and go to state 234
    "uint2"              shift, and go to state 235
    "uint3"              shift, and go to state 236
    "uint4"              shift, and go to state 237
    "float"              shift, and go to state 238
    "float2"             shift, and go to state 239
    "float3"             shift, and go to state 240
    "float4"             shift, and go to state 241
    "range"              shift, and go to state 242
    "urange"             shift, and go to state 243
    "range64"            shift, and go to state 244
    "urange64"           shift, and go to state 245
    "block"              shift, and go to state 246
    "int64"              shift, and go to state 247
    "uint64"             shift, and go to state 248
    "double"             shift, and go to state 249
    "function"           shift, and go to state 250
    "lambda"             shift, and go to state 251
    "int8"               shift, and go to state 252
    "uint8"              shift, and go to state 253
    "int16"              shift, and go to state 254
    "uint16"             shift, and go to state 255
    "tuple"              shift, and go to state 256
    "variant"            shift, and go to state 257
    "::"                 shift, and go to state 55
    "$t"                 shift, and go to state 258
    "name"               shift, and go to state 511
    "end of expression"  shift, and go to state 512
    ','                  shift, and go to state 513
    '$'                  shift, and go to state 259

    $default  reduce using rule 716 ($@70)

    name_in_namespace                   go to state 260
    tuple_type                          go to state 514
    basic_type_declaration              go to state 261
    structure_type_declaration          go to state 262
    auto_type_declaration               go to state 263
    bitfield_type_declaration           go to state 264
    c_or_s                              go to state 515
    type_declaration_no_options         go to state 265
    type_declaration_no_options_no_dim  go to state 266
    type_declaration                    go to state 516
    $@70                                go to state 517


State 379

  509 variant_alias_type_list: variant_alias_type_list . c_or_s
  510                        | variant_alias_type_list . variant_type c_or_s
  721 variant_alias_declaration: "variant" optional_public_or_private_alias "name" $@71 "begin of code block" $@72 variant_alias_type_list . $@73 "end of code block"

    "name"               shift, and go to state 518
    "end of expression"  shift, and go to state 512
    ','                  shift, and go to state 513

    $default  reduce using rule 720 ($@73)

    variant_type  go to state 519
    c_or_s        go to state 520
    $@73          go to state 521


State 380

  176 function_name: "operator" "is" "name" .

    $default  reduce using rule 176 (function_name)


State 381

  177 function_name: "operator" "as" "name" .

    $default  reduce using rule 177 (function_name)


State 382

  170 function_name: "operator" "?." "name" .

    $default  reduce using rule 170 (function_name)


State 383

  165 function_name: "operator" "?[" ']' .

    $default  reduce using rule 165 (function_name)


State 384

  178 function_name: "operator" '?' "as" .
  179              | "operator" '?' "as" . "name"

    "name"  shift, and go to state 522

    $default  reduce using rule 178 (function_name)


State 385

  168 function_name: "operator" '.' "name" .
  169              | "operator" '.' "name" . ":="

    ":="  shift, and go to state 523

    $default  reduce using rule 168 (function_name)


State 386

  164 function_name: "operator" '[' ']' .

    $default  reduce using rule 164 (function_name)


State 387

  495 function_argument_declaration: "$a" . '(' expr ')'

    '('  shift, and go to state 524


State 388

  116 optional_function_argument_list: '(' ')' .

    $default  reduce using rule 116 (optional_function_argument_list)


State 389

  494 function_argument_declaration: optional_field_annotation . kwd_let_var_or_nothing variable_declaration

    "let"  shift, and go to state 525
    "var"  shift, and go to state 526

    $default  reduce using rule 272 (kwd_let_var_or_nothing)

    kwd_let_var_or_nothing  go to state 527


State 390

  496 function_argument_list: function_argument_declaration .

    $default  reduce using rule 496 (function_argument_list)


State 391

  117 optional_function_argument_list: '(' function_argument_list . ')'
  497 function_argument_list: function_argument_list . "end of expression" function_argument_declaration

    "end of expression"  shift, and go to state 528
    ')'                  shift, and go to state 529


State 392

  119 optional_function_type: ':' . type_declaration

    "type"       shift, and go to state 219
    "array"      shift, and go to state 220
    "table"      shift, and go to state 221
    "typedecl"   shift, and go to state 222
    "iterator"   shift, and go to state 223
    "smart_ptr"  shift, and go to state 224
    "bool"       shift, and go to state 225
    "void"       shift, and go to state 226
    "string"     shift, and go to state 227
    "auto"       shift, and go to state 228
    "int"        shift, and go to state 229
    "int2"       shift, and go to state 230
    "int3"       shift, and go to state 231
    "int4"       shift, and go to state 232
    "uint"       shift, and go to state 233
    "bitfield"   shift, and go to state 234
    "uint2"      shift, and go to state 235
    "uint3"      shift, and go to state 236
    "uint4"      shift, and go to state 237
    "float"      shift, and go to state 238
    "float2"     shift, and go to state 239
    "float3"     shift, and go to state 240
    "float4"     shift, and go to state 241
    "range"      shift, and go to state 242
    "urange"     shift, and go to state 243
    "range64"    shift, and go to state 244
    "urange64"   shift, and go to state 245
    "block"      shift, and go to state 246
    "int64"      shift, and go to state 247
    "uint64"     shift, and go to state 248
    "double"     shift, and go to state 249
    "function"   shift, and go to state 250
    "lambda"     shift, and go to state 251
    "int8"       shift, and go to state 252
    "uint8"      shift, and go to state 253
    "int16"      shift, and go to state 254
    "uint16"     shift, and go to state 255
    "tuple"      shift, and go to state 256
    "variant"    shift, and go to state 257
    "::"         shift, and go to state 55
    "$t"         shift, and go to state 258
    "name"       shift, and go to state 56
    '$'          shift, and go to state 259

    name_in_namespace                   go to state 260
    basic_type_declaration              go to state 261
    structure_type_declaration          go to state 262
    auto_type_declaration               go to state 263
    bitfield_type_declaration           go to state 264
    type_declaration_no_options         go to state 265
    type_declaration_no_options_no_dim  go to state 266
    type_declaration                    go to state 530


State 393

  209 function_declaration_header: function_name optional_function_argument_list optional_function_type .

    $default  reduce using rule 209 (function_declaration_header)


State 394

  218 expression_block: $@5 "begin of code block" . expressions $@6 "end of code block" expression_block_finally

    $default  reduce using rule 238 (expressions)

    expressions  go to state 531


State 395

  570 enum_declaration: optional_annotation_list "enum" optional_public_or_private_enum enum_name optional_enum_basic_type_declaration "begin of code block" $@35 . enum_list optional_comma $@36 "end of code block"

    "name"  shift, and go to state 532

    $default  reduce using rule 553 (enum_list)

    enum_expression  go to state 533
    enum_list        go to state 534


State 396

  572 optional_structure_parent: ':' . name_in_namespace

    "::"    shift, and go to state 55
    "name"  shift, and go to state 56

    name_in_namespace  go to state 535


State 397

  575 structure_name: optional_sealed "name" optional_structure_parent .

    $default  reduce using rule 575 (structure_name)


State 398

  582 optional_struct_variable_declaration_list: "begin of code block" . struct_variable_declaration_list "end of code block"

    $default  reduce using rule 487 (struct_variable_declaration_list)

    struct_variable_declaration_list  go to state 536


State 399

  585 structure_declaration: optional_annotation_list class_or_struct optional_public_or_private_structure $@37 structure_name $@38 optional_struct_variable_declaration_list .

    $default  reduce using rule 585 (structure_declaration)


State 400

  547 global_variable_declaration_list: global_variable_declaration_list $@32 optional_field_annotation . let_variable_declaration

    "$i"    shift, and go to state 537
    "name"  shift, and go to state 538

    let_variable_name_with_pos_list  go to state 539
    let_variable_declaration         go to state 540


State 401

   98 metadata_argument_list: metadata_argument_list '@' annotation_argument .

    $default  reduce using rule 98 (metadata_argument_list)


State 402

  529 global_let_variable_name_with_pos_list: global_let_variable_name_with_pos_list ',' . "name"

    "name"  shift, and go to state 541


State 403

  536 global_let_variable_declaration: global_let_variable_name_with_pos_list ':' . type_declaration_no_options "end of expression"
  537                                | global_let_variable_name_with_pos_list ':' . type_declaration_no_options copy_or_move_or_clone expr "end of expression"

    "type"       shift, and go to state 219
    "array"      shift, and go to state 220
    "table"      shift, and go to state 221
    "typedecl"   shift, and go to state 222
    "iterator"   shift, and go to state 223
    "smart_ptr"  shift, and go to state 224
    "bool"       shift, and go to state 225
    "void"       shift, and go to state 226
    "string"     shift, and go to state 227
    "auto"       shift, and go to state 228
    "int"        shift, and go to state 229
    "int2"       shift, and go to state 230
    "int3"       shift, and go to state 231
    "int4"       shift, and go to state 232
    "uint"       shift, and go to state 233
    "bitfield"   shift, and go to state 234
    "uint2"      shift, and go to state 235
    "uint3"      shift, and go to state 236
    "uint4"      shift, and go to state 237
    "float"      shift, and go to state 238
    "float2"     shift, and go to state 239
    "float3"     shift, and go to state 240
    "float4"     shift, and go to state 241
    "range"      shift, and go to state 242
    "urange"     shift, and go to state 243
    "range64"    shift, and go to state 244
    "urange64"   shift, and go to state 245
    "block"      shift, and go to state 246
    "int64"      shift, and go to state 247
    "uint64"     shift, and go to state 248
    "double"     shift, and go to state 249
    "function"   shift, and go to state 250
    "lambda"     shift, and go to state 251
    "int8"       shift, and go to state 252
    "uint8"      shift, and go to state 253
    "int16"      shift, and go to state 254
    "uint16"     shift, and go to state 255
    "tuple"      shift, and go to state 256
    "variant"    shift, and go to state 257
    "::"         shift, and go to state 55
    "$t"         shift, and go to state 258
    "name"       shift, and go to state 56
    '$'          shift, and go to state 259

    name_in_namespace                   go to state 260
    basic_type_declaration              go to state 261
    structure_type_declaration          go to state 262
    auto_type_declaration               go to state 263
    bitfield_type_declaration           go to state 264
    type_declaration_no_options         go to state 542
    type_declaration_no_options_no_dim  go to state 266


State 404

  522 optional_ref: '&' .

    $default  reduce using rule 522 (optional_ref)


State 405

  538 global_let_variable_declaration: global_let_variable_name_with_pos_list optional_ref . copy_or_move_or_clone expr "end of expression"

    "<-"  shift, and go to state 543
    ":="  shift, and go to state 544
    '='   shift, and go to state 545

    copy_or_move_or_clone  go to state 546


State 406

  654 type_declaration_no_options_no_dim: "type" '<' $@41 . type_declaration '>' $@42

    "type"       shift, and go to state 219
    "array"      shift, and go to state 220
    "table"      shift, and go to state 221
    "typedecl"   shift, and go to state 222
    "iterator"   shift, and go to state 223
    "smart_ptr"  shift, and go to state 224
    "bool"       shift, and go to state 225
    "void"       shift, and go to state 226
    "string"     shift, and go to state 227
    "auto"       shift, and go to state 228
    "int"        shift, and go to state 229
    "int2"       shift, and go to state 230
    "int3"       shift, and go to state 231
    "int4"       shift, and go to state 232
    "uint"       shift, and go to state 233
    "bitfield"   shift, and go to state 234
    "uint2"      shift, and go to state 235
    "uint3"      shift, and go to state 236
    "uint4"      shift, and go to state 237
    "float"      shift, and go to state 238
    "float2"     shift, and go to state 239
    "float3"     shift, and go to state 240
    "float4"     shift, and go to state 241
    "range"      shift, and go to state 242
    "urange"     shift, and go to state 243
    "range64"    shift, and go to state 244
    "urange64"   shift, and go to state 245
    "block"      shift, and go to state 246
    "int64"      shift, and go to state 247
    "uint64"     shift, and go to state 248
    "double"     shift, and go to state 249
    "function"   shift, and go to state 250
    "lambda"     shift, and go to state 251
    "int8"       shift, and go to state 252
    "uint8"      shift, and go to state 253
    "int16"      shift, and go to state 254
    "uint16"     shift, and go to state 255
    "tuple"      shift, and go to state 256
    "variant"    shift, and go to state 257
    "::"         shift, and go to state 55
    "$t"         shift, and go to state 258
    "name"       shift, and go to state 56
    '$'          shift, and go to state 259

    name_in_namespace                   go to state 260
    basic_type_declaration              go to state 261
    structure_type_declaration          go to state 262
    auto_type_declaration               go to state 263
    bitfield_type_declaration           go to state 264
    type_declaration_no_options         go to state 265
    type_declaration_no_options_no_dim  go to state 266
    type_declaration                    go to state 547


State 407

  677 type_declaration_no_options_no_dim: "array" '<' $@46 . type_declaration '>' $@47

    "type"       shift, and go to state 219
    "array"      shift, and go to state 220
    "table"      shift, and go to state 221
    "typedecl"   shift, and go to state 222
    "iterator"   shift, and go to state 223
    "smart_ptr"  shift, and go to state 224
    "bool"       shift, and go to state 225
    "void"       shift, and go to state 226
    "string"     shift, and go to state 227
    "auto"       shift, and go to state 228
    "int"        shift, and go to state 229
    "int2"       shift, and go to state 230
    "int3"       shift, and go to state 231
    "int4"       shift, and go to state 232
    "uint"       shift, and go to state 233
    "bitfield"   shift, and go to state 234
    "uint2"      shift, and go to state 235
    "uint3"      shift, and go to state 236
    "uint4"      shift, and go to state 237
    "float"      shift, and go to state 238
    "float2"     shift, and go to state 239
    "float3"     shift, and go to state 240
    "float4"     shift, and go to state 241
    "range"      shift, and go to state 242
    "urange"     shift, and go to state 243
    "range64"    shift, and go to state 244
    "urange64"   shift, and go to state 245
    "block"      shift, and go to state 246
    "int64"      shift, and go to state 247
    "uint64"     shift, and go to state 248
    "double"     shift, and go to state 249
    "function"   shift, and go to state 250
    "lambda"     shift, and go to state 251
    "int8"       shift, and go to state 252
    "uint8"      shift, and go to state 253
    "int16"      shift, and go to state 254
    "uint16"     shift, and go to state 255
    "tuple"      shift, and go to state 256
    "variant"    shift, and go to state 257
    "::"         shift, and go to state 55
    "$t"         shift, and go to state 258
    "name"       shift, and go to state 56
    '$'          shift, and go to state 259

    name_in_namespace                   go to state 260
    basic_type_declaration              go to state 261
    structure_type_declaration          go to state 262
    auto_type_declaration               go to state 263
    bitfield_type_declaration           go to state 264
    type_declaration_no_options         go to state 265
    type_declaration_no_options_no_dim  go to state 266
    type_declaration                    go to state 548


State 408

  680 type_declaration_no_options_no_dim: "table" '<' $@48 . table_type_pair '>' $@49

    "type"       shift, and go to state 219
    "array"      shift, and go to state 220
    "table"      shift, and go to state 221
    "typedecl"   shift, and go to state 222
    "iterator"   shift, and go to state 223
    "smart_ptr"  shift, and go to state 224
    "bool"       shift, and go to state 225
    "void"       shift, and go to state 226
    "string"     shift, and go to state 227
    "auto"       shift, and go to state 228
    "int"        shift, and go to state 229
    "int2"       shift, and go to state 230
    "int3"       shift, and go to state 231
    "int4"       shift, and go to state 232
    "uint"       shift, and go to state 233
    "bitfield"   shift, and go to state 234
    "uint2"      shift, and go to state 235
    "uint3"      shift, and go to state 236
    "uint4"      shift, and go to state 237
    "float"      shift, and go to state 238
    "float2"     shift, and go to state 239
    "float3"     shift, and go to state 240
    "float4"     shift, and go to state 241
    "range"      shift, and go to state 242
    "urange"     shift, and go to state 243
    "range64"    shift, and go to state 244
    "urange64"   shift, and go to state 245
    "block"      shift, and go to state 246
    "int64"      shift, and go to state 247
    "uint64"     shift, and go to state 248
    "double"     shift, and go to state 249
    "function"   shift, and go to state 250
    "lambda"     shift, and go to state 251
    "int8"       shift, and go to state 252
    "uint8"      shift, and go to state 253
    "int16"      shift, and go to state 254
    "uint16"     shift, and go to state 255
    "tuple"      shift, and go to state 256
    "variant"    shift, and go to state 257
    "::"         shift, and go to state 55
    "$t"         shift, and go to state 258
    "name"       shift, and go to state 56
    '$'          shift, and go to state 259

    name_in_namespace                   go to state 260
    basic_type_declaration              go to state 261
    structure_type_declaration          go to state 262
    auto_type_declaration               go to state 263
    bitfield_type_declaration           go to state 264
    table_type_pair                     go to state 549
    type_declaration_no_options         go to state 265
    type_declaration_no_options_no_dim  go to state 266
    type_declaration                    go to state 550


State 409

  751 make_struct_decl: "struct" . '<' $@77 type_declaration_no_options '>' $@78 '(' use_initializer optional_make_struct_dim_decl ')'

    '<'  shift, and go to state 551


State 410

  754 make_struct_decl: "class" . '<' $@79 type_declaration_no_options '>' $@80 '(' use_initializer optional_make_struct_dim_decl ')'

    '<'  shift, and go to state 552


State 411

  380 expr: "true" .

    $default  reduce using rule 380 (expr)


State 412

  381 expr: "false" .

    $default  reduce using rule 381 (expr)


State 413

  256 expr_new: "new" . new_type_declaration
  257         | "new" . new_type_declaration '(' use_initializer ')'
  258         | "new" . new_type_declaration '(' expr_list ')'
  259         | "new" . new_type_declaration '(' make_struct_single ')'
  260         | "new" . new_type_declaration '(' "uninitialized" make_struct_single ')'
  261         | "new" . make_decl

    "struct"               shift, and go to state 409
    "class"                shift, and go to state 410
    "array"                shift, and go to state 416
    "table"                shift, and go to state 418
    "fixed_array"          shift, and go to state 425
    "default"              shift, and go to state 426
    "tuple"                shift, and go to state 428
    "variant"              shift, and go to state 429
    "::"                   shift, and go to state 55
    "name"                 shift, and go to state 56
    "begin of code block"  shift, and go to state 448
    '<'                    shift, and go to state 553
    '['                    shift, and go to state 454

    name_in_namespace           go to state 260
    new_type_declaration        go to state 554
    structure_type_declaration  go to state 555
    make_decl                   go to state 556
    make_struct_decl            go to state 478
    make_tuple_call             go to state 479
    make_dim_decl               go to state 480
    make_table_decl             go to state 481
    array_comprehension         go to state 482


State 414

  296 expr_type_info: "typeinfo" . name_in_namespace '(' expr ')'
  297               | "typeinfo" . name_in_namespace '<' "name" '>' '(' expr ')'
  298               | "typeinfo" . name_in_namespace '<' "name" c_or_s "name" '>' '(' expr ')'

    "::"    shift, and go to state 55
    "name"  shift, and go to state 56

    name_in_namespace  go to state 557


State 415

  295 expr_type_decl: "type" . '<' $@15 type_declaration '>' $@16

    '<'  shift, and go to state 558


State 416

  770 make_dim_decl: "array" . "struct" '<' $@87 type_declaration_no_options '>' $@88 '(' use_initializer optional_make_struct_dim_decl ')'
  773              | "array" . "tuple" '<' $@89 type_declaration_no_options '>' $@90 '(' use_initializer optional_make_struct_dim_decl ')'
  776              | "array" . "variant" '<' $@91 type_declaration_no_options '>' $@92 '(' make_variant_dim ')'
  777              | "array" . '(' expr_list optional_comma ')'
  780              | "array" . '<' $@93 type_declaration_no_options '>' $@94 '(' optional_expr_list ')'

    "struct"   shift, and go to state 559
    "tuple"    shift, and go to state 560
    "variant"  shift, and go to state 561
    '<'        shift, and go to state 562
    '('        shift, and go to state 563


State 417

  374 expr: "null" .

    $default  reduce using rule 374 (expr)


State 418

  788 make_table_decl: "table" . '(' expr_map_tuple_list optional_comma ')'
  789                | "table" . '<' type_declaration_no_options '>' '(' optional_expr_map_tuple_list ')'
  790                | "table" . '<' type_declaration_no_options c_or_s type_declaration_no_options '>' '(' optional_expr_map_tuple_list ')'

    '<'  shift, and go to state 564
    '('  shift, and go to state 565


State 419

  424 expr: "deref" . '(' expr ')'

    '('  shift, and go to state 566


State 420

  286 expr_cast: "cast" . '<' $@9 type_declaration_no_options '>' $@10 expr

    '<'  shift, and go to state 567


State 421

  289 expr_cast: "upcast" . '<' $@11 type_declaration_no_options '>' $@12 expr

    '<'  shift, and go to state 568


State 422

  425 expr: "addr" . '(' expr ')'

    '('  shift, and go to state 569


State 423

  292 expr_cast: "reinterpret" . '<' $@13 type_declaration_no_options '>' $@14 expr

    '<'  shift, and go to state 570


State 424

  457 expr: "unsafe" . '(' expr ')'

    '('  shift, and go to state 571


State 425

  781 make_dim_decl: "fixed_array" . '(' expr_list optional_comma ')'
  784              | "fixed_array" . '<' $@95 type_declaration_no_options '>' $@96 '(' expr_list optional_comma ')'

    '<'  shift, and go to state 572
    '('  shift, and go to state 573


State 426

  760 make_struct_decl: "default" . '<' $@83 type_declaration_no_options '>' $@84 use_initializer

    '<'  shift, and go to state 574


State 427

  617 basic_type_declaration: "bitfield" .

    $default  reduce using rule 617 (basic_type_declaration)


State 428

  763 make_tuple_call: "tuple" . '(' expr_list optional_comma ')'
  766                | "tuple" . '<' $@85 type_declaration_no_options '>' $@86 '(' use_initializer optional_make_struct_dim_decl ')'

    '<'  shift, and go to state 575
    '('  shift, and go to state 576


State 429

  757 make_struct_decl: "variant" . '<' $@81 type_declaration_no_options '>' $@82 '(' make_variant_dim ')'

    '<'  shift, and go to state 577


State 430

  426 expr: "generator" . '<' type_declaration_no_options '>' optional_capture_list '(' ')'
  427     | "generator" . '<' type_declaration_no_options '>' optional_capture_list '(' expr ')'
  428     | "generator" . '<' type_declaration_no_options '>' optional_capture_list expression_block

    '<'  shift, and go to state 578


State 431

  410 expr: "++" . expr

    "struct"                          shift, and go to state 409
    "class"                           shift, and go to state 410
    "true"                            shift, and go to state 411
    "false"                           shift, and go to state 412
    "new"                             shift, and go to state 413
    "typeinfo"                        shift, and go to state 414
    "type"                            shift, and go to state 415
    "array"                           shift, and go to state 416
    "null"                            shift, and go to state 417
    "table"                           shift, and go to state 418
    "deref"                           shift, and go to state 419
    "cast"                            shift, and go to state 420
    "upcast"                          shift, and go to state 421
    "addr"                            shift, and go to state 422
    "reinterpret"                     shift, and go to state 423
    "unsafe"                          shift, and go to state 424
    "fixed_array"                     shift, and go to state 425
    "default"                         shift, and go to state 426
    "bool"                            shift, and go to state 225
    "void"                            shift, and go to state 226
    "string"                          shift, and go to state 227
    "int"                             shift, and go to state 229
    "int2"                            shift, and go to state 230
    "int3"                            shift, and go to state 231
    "int4"                            shift, and go to state 232
    "uint"                            shift, and go to state 233
    "bitfield"                        shift, and go to state 427
    "uint2"                           shift, and go to state 235
    "uint3"                           shift, and go to state 236
    "uint4"                           shift, and go to state 237
    "float"                           shift, and go to state 238
    "float2"                          shift, and go to state 239
    "float3"                          shift, and go to state 240
    "float4"                          shift, and go to state 241
    "range"                           shift, and go to state 242
    "urange"                          shift, and go to state 243
    "range64"                         shift, and go to state 244
    "urange64"                        shift, and go to state 245
    "int64"                           shift, and go to state 247
    "uint64"                          shift, and go to state 248
    "double"                          shift, and go to state 249
    "int8"                            shift, and go to state 252
    "uint8"                           shift, and go to state 253
    "int16"                           shift, and go to state 254
    "uint16"                          shift, and go to state 255
    "tuple"                           shift, and go to state 428
    "variant"                         shift, and go to state 429
    "generator"                       shift, and go to state 430
    "++"                              shift, and go to state 431
    "--"                              shift, and go to state 432
    "::"                              shift, and go to state 55
    "$$"                              shift, and go to state 433
    "$i"                              shift, and go to state 434
    "$v"                              shift, and go to state 435
    "$b"                              shift, and go to state 436
    "$a"                              shift, and go to state 437
    "$c"                              shift, and go to state 438
    "..."                             shift, and go to state 439
    "integer constant"                shift, and go to state 440
    "long integer constant"           shift, and go to state 441
    "unsigned integer constant"       shift, and go to state 442
    "unsigned long integer constant"  shift, and go to state 443
    "unsigned int8 constant"          shift, and go to state 444
    "floating point constant"         shift, and go to state 445
    "double constant"                 shift, and go to state 446
    "name"                            shift, and go to state 56
    "start of the string"             shift, and go to state 447
    "begin of code block"             shift, and go to state 448
    '-'                               shift, and go to state 449
    '+'                               shift, and go to state 450
    '*'                               shift, and go to state 451
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 452
    '!'                               shift, and go to state 453
    '['                               shift, and go to state 454
    '('                               shift, and go to state 455
    '$'                               shift, and go to state 456
    '@'                               shift, and go to state 457

    string_builder          go to state 458
    expr_reader             go to state 459
    expr_call_pipe          go to state 460
    name_in_namespace       go to state 461
    expr_new                go to state 462
    expr_cast               go to state 463
    expr_type_decl          go to state 464
    expr_type_info          go to state 465
    block_or_lambda         go to state 466
    expr_full_block         go to state 467
    expr_numeric_const      go to state 468
    expr_named_call         go to state 469
    expr_method_call        go to state 470
    func_addr_expr          go to state 471
    expr_field              go to state 472
    expr_call               go to state 473
    expr                    go to state 579
    expr_mtag               go to state 475
    basic_type_declaration  go to state 476
    make_decl               go to state 477
    make_struct_decl        go to state 478
    make_tuple_call         go to state 479
    make_dim_decl           go to state 480
    make_table_decl         go to state 481
    array_comprehension     go to state 482


State 432

  411 expr: "--" . expr

    "struct"                          shift, and go to state 409
    "class"                           shift, and go to state 410
    "true"                            shift, and go to state 411
    "false"                           shift, and go to state 412
    "new"                             shift, and go to state 413
    "typeinfo"                        shift, and go to state 414
    "type"                            shift, and go to state 415
    "array"                           shift, and go to state 416
    "null"                            shift, and go to state 417
    "table"                           shift, and go to state 418
    "deref"                           shift, and go to state 419
    "cast"                            shift, and go to state 420
    "upcast"                          shift, and go to state 421
    "addr"                            shift, and go to state 422
    "reinterpret"                     shift, and go to state 423
    "unsafe"                          shift, and go to state 424
    "fixed_array"                     shift, and go to state 425
    "default"                         shift, and go to state 426
    "bool"                            shift, and go to state 225
    "void"                            shift, and go to state 226
    "string"                          shift, and go to state 227
    "int"                             shift, and go to state 229
    "int2"                            shift, and go to state 230
    "int3"                            shift, and go to state 231
    "int4"                            shift, and go to state 232
    "uint"                            shift, and go to state 233
    "bitfield"                        shift, and go to state 427
    "uint2"                           shift, and go to state 235
    "uint3"                           shift, and go to state 236
    "uint4"                           shift, and go to state 237
    "float"                           shift, and go to state 238
    "float2"                          shift, and go to state 239
    "float3"                          shift, and go to state 240
    "float4"                          shift, and go to state 241
    "range"                           shift, and go to state 242
    "urange"                          shift, and go to state 243
    "range64"                         shift, and go to state 244
    "urange64"                        shift, and go to state 245
    "int64"                           shift, and go to state 247
    "uint64"                          shift, and go to state 248
    "double"                          shift, and go to state 249
    "int8"                            shift, and go to state 252
    "uint8"                           shift, and go to state 253
    "int16"                           shift, and go to state 254
    "uint16"                          shift, and go to state 255
    "tuple"                           shift, and go to state 428
    "variant"                         shift, and go to state 429
    "generator"                       shift, and go to state 430
    "++"                              shift, and go to state 431
    "--"                              shift, and go to state 432
    "::"                              shift, and go to state 55
    "$$"                              shift, and go to state 433
    "$i"                              shift, and go to state 434
    "$v"                              shift, and go to state 435
    "$b"                              shift, and go to state 436
    "$a"                              shift, and go to state 437
    "$c"                              shift, and go to state 438
    "..."                             shift, and go to state 439
    "integer constant"                shift, and go to state 440
    "long integer constant"           shift, and go to state 441
    "unsigned integer constant"       shift, and go to state 442
    "unsigned long integer constant"  shift, and go to state 443
    "unsigned int8 constant"          shift, and go to state 444
    "floating point constant"         shift, and go to state 445
    "double constant"                 shift, and go to state 446
    "name"                            shift, and go to state 56
    "start of the string"             shift, and go to state 447
    "begin of code block"             shift, and go to state 448
    '-'                               shift, and go to state 449
    '+'                               shift, and go to state 450
    '*'                               shift, and go to state 451
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 452
    '!'                               shift, and go to state 453
    '['                               shift, and go to state 454
    '('                               shift, and go to state 455
    '$'                               shift, and go to state 456
    '@'                               shift, and go to state 457

    string_builder          go to state 458
    expr_reader             go to state 459
    expr_call_pipe          go to state 460
    name_in_namespace       go to state 461
    expr_new                go to state 462
    expr_cast               go to state 463
    expr_type_decl          go to state 464
    expr_type_info          go to state 465
    block_or_lambda         go to state 466
    expr_full_block         go to state 467
    expr_numeric_const      go to state 468
    expr_named_call         go to state 469
    expr_method_call        go to state 470
    func_addr_expr          go to state 471
    expr_field              go to state 472
    expr_call               go to state 473
    expr                    go to state 580
    expr_mtag               go to state 475
    basic_type_declaration  go to state 476
    make_decl               go to state 477
    make_struct_decl        go to state 478
    make_tuple_call         go to state 479
    make_dim_decl           go to state 480
    make_table_decl         go to state 481
    array_comprehension     go to state 482


State 433

  458 expr_mtag: "$$" . '(' expr ')'

    '('  shift, and go to state 581


State 434

  459 expr_mtag: "$i" . '(' expr ')'

    '('  shift, and go to state 582


State 435

  460 expr_mtag: "$v" . '(' expr ')'

    '('  shift, and go to state 583


State 436

  461 expr_mtag: "$b" . '(' expr ')'

    '('  shift, and go to state 584


State 437

  462 expr_mtag: "$a" . '(' expr ')'

    '('  shift, and go to state 585


State 438

  464 expr_mtag: "$c" . '(' expr ')' '(' ')'
  465          | "$c" . '(' expr ')' '(' expr_list ')'

    '('  shift, and go to state 586


State 439

  463 expr_mtag: "..." .

    $default  reduce using rule 463 (expr_mtag)


State 440

  319 expr_numeric_const: "integer constant" .

    $default  reduce using rule 319 (expr_numeric_const)


State 441

  321 expr_numeric_const: "long integer constant" .

    $default  reduce using rule 321 (expr_numeric_const)


State 442

  320 expr_numeric_const: "unsigned integer constant" .

    $default  reduce using rule 320 (expr_numeric_const)


State 443

  322 expr_numeric_const: "unsigned long integer constant" .

    $default  reduce using rule 322 (expr_numeric_const)


State 444

  323 expr_numeric_const: "unsigned int8 constant" .

    $default  reduce using rule 323 (expr_numeric_const)


State 445

  324 expr_numeric_const: "floating point constant" .

    $default  reduce using rule 324 (expr_numeric_const)


State 446

  325 expr_numeric_const: "double constant" .

    $default  reduce using rule 325 (expr_numeric_const)


State 447

   32 string_builder: "start of the string" . string_builder_body "end of the string"

    $default  reduce using rule 29 (string_builder_body)

    string_builder_body  go to state 587


State 448

  787 make_table_decl: "begin of code block" . expr_map_tuple_list optional_comma "end of code block"
  797 array_comprehension: "begin of code block" . "for" '(' variable_name_with_pos_list "in" expr_list ')' "end of expression" make_map_tuple array_comprehension_where "end of code block"

    "struct"                          shift, and go to state 409
    "class"                           shift, and go to state 410
    "for"                             shift, and go to state 588
    "true"                            shift, and go to state 411
    "false"                           shift, and go to state 412
    "new"                             shift, and go to state 413
    "typeinfo"                        shift, and go to state 414
    "type"                            shift, and go to state 415
    "array"                           shift, and go to state 416
    "null"                            shift, and go to state 417
    "table"                           shift, and go to state 418
    "deref"                           shift, and go to state 419
    "cast"                            shift, and go to state 420
    "upcast"                          shift, and go to state 421
    "addr"                            shift, and go to state 422
    "reinterpret"                     shift, and go to state 423
    "unsafe"                          shift, and go to state 424
    "fixed_array"                     shift, and go to state 425
    "default"                         shift, and go to state 426
    "bool"                            shift, and go to state 225
    "void"                            shift, and go to state 226
    "string"                          shift, and go to state 227
    "int"                             shift, and go to state 229
    "int2"                            shift, and go to state 230
    "int3"                            shift, and go to state 231
    "int4"                            shift, and go to state 232
    "uint"                            shift, and go to state 233
    "bitfield"                        shift, and go to state 427
    "uint2"                           shift, and go to state 235
    "uint3"                           shift, and go to state 236
    "uint4"                           shift, and go to state 237
    "float"                           shift, and go to state 238
    "float2"                          shift, and go to state 239
    "float3"                          shift, and go to state 240
    "float4"                          shift, and go to state 241
    "range"                           shift, and go to state 242
    "urange"                          shift, and go to state 243
    "range64"                         shift, and go to state 244
    "urange64"                        shift, and go to state 245
    "int64"                           shift, and go to state 247
    "uint64"                          shift, and go to state 248
    "double"                          shift, and go to state 249
    "int8"                            shift, and go to state 252
    "uint8"                           shift, and go to state 253
    "int16"                           shift, and go to state 254
    "uint16"                          shift, and go to state 255
    "tuple"                           shift, and go to state 428
    "variant"                         shift, and go to state 429
    "generator"                       shift, and go to state 430
    "++"                              shift, and go to state 431
    "--"                              shift, and go to state 432
    "::"                              shift, and go to state 55
    "$$"                              shift, and go to state 433
    "$i"                              shift, and go to state 434
    "$v"                              shift, and go to state 435
    "$b"                              shift, and go to state 436
    "$a"                              shift, and go to state 437
    "$c"                              shift, and go to state 438
    "..."                             shift, and go to state 439
    "integer constant"                shift, and go to state 440
    "long integer constant"           shift, and go to state 441
    "unsigned integer constant"       shift, and go to state 442
    "unsigned long integer constant"  shift, and go to state 443
    "unsigned int8 constant"          shift, and go to state 444
    "floating point constant"         shift, and go to state 445
    "double constant"                 shift, and go to state 446
    "name"                            shift, and go to state 56
    "start of the string"             shift, and go to state 447
    "begin of code block"             shift, and go to state 448
    '-'                               shift, and go to state 449
    '+'                               shift, and go to state 450
    '*'                               shift, and go to state 451
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 452
    '!'                               shift, and go to state 453
    '['                               shift, and go to state 454
    '('                               shift, and go to state 455
    '$'                               shift, and go to state 456
    '@'                               shift, and go to state 457

    string_builder          go to state 458
    expr_reader             go to state 459
    expr_call_pipe          go to state 460
    name_in_namespace       go to state 461
    expr_new                go to state 462
    expr_cast               go to state 463
    expr_type_decl          go to state 464
    expr_type_info          go to state 465
    block_or_lambda         go to state 466
    expr_full_block         go to state 467
    expr_numeric_const      go to state 468
    expr_named_call         go to state 469
    expr_method_call        go to state 470
    func_addr_expr          go to state 471
    expr_field              go to state 472
    expr_call               go to state 473
    expr                    go to state 589
    expr_mtag               go to state 475
    basic_type_declaration  go to state 476
    make_decl               go to state 477
    make_struct_decl        go to state 478
    make_map_tuple          go to state 590
    make_tuple_call         go to state 479
    make_dim_decl           go to state 480
    expr_map_tuple_list     go to state 591
    make_table_decl         go to state 481
    array_comprehension     go to state 482


State 449

  387 expr: '-' . expr

    "struct"                          shift, and go to state 409
    "class"                           shift, and go to state 410
    "true"                            shift, and go to state 411
    "false"                           shift, and go to state 412
    "new"                             shift, and go to state 413
    "typeinfo"                        shift, and go to state 414
    "type"                            shift, and go to state 415
    "array"                           shift, and go to state 416
    "null"                            shift, and go to state 417
    "table"                           shift, and go to state 418
    "deref"                           shift, and go to state 419
    "cast"                            shift, and go to state 420
    "upcast"                          shift, and go to state 421
    "addr"                            shift, and go to state 422
    "reinterpret"                     shift, and go to state 423
    "unsafe"                          shift, and go to state 424
    "fixed_array"                     shift, and go to state 425
    "default"                         shift, and go to state 426
    "bool"                            shift, and go to state 225
    "void"                            shift, and go to state 226
    "string"                          shift, and go to state 227
    "int"                             shift, and go to state 229
    "int2"                            shift, and go to state 230
    "int3"                            shift, and go to state 231
    "int4"                            shift, and go to state 232
    "uint"                            shift, and go to state 233
    "bitfield"                        shift, and go to state 427
    "uint2"                           shift, and go to state 235
    "uint3"                           shift, and go to state 236
    "uint4"                           shift, and go to state 237
    "float"                           shift, and go to state 238
    "float2"                          shift, and go to state 239
    "float3"                          shift, and go to state 240
    "float4"                          shift, and go to state 241
    "range"                           shift, and go to state 242
    "urange"                          shift, and go to state 243
    "range64"                         shift, and go to state 244
    "urange64"                        shift, and go to state 245
    "int64"                           shift, and go to state 247
    "uint64"                          shift, and go to state 248
    "double"                          shift, and go to state 249
    "int8"                            shift, and go to state 252
    "uint8"                           shift, and go to state 253
    "int16"                           shift, and go to state 254
    "uint16"                          shift, and go to state 255
    "tuple"                           shift, and go to state 428
    "variant"                         shift, and go to state 429
    "generator"                       shift, and go to state 430
    "++"                              shift, and go to state 431
    "--"                              shift, and go to state 432
    "::"                              shift, and go to state 55
    "$$"                              shift, and go to state 433
    "$i"                              shift, and go to state 434
    "$v"                              shift, and go to state 435
    "$b"                              shift, and go to state 436
    "$a"                              shift, and go to state 437
    "$c"                              shift, and go to state 438
    "..."                             shift, and go to state 439
    "integer constant"                shift, and go to state 440
    "long integer constant"           shift, and go to state 441
    "unsigned integer constant"       shift, and go to state 442
    "unsigned long integer constant"  shift, and go to state 443
    "unsigned int8 constant"          shift, and go to state 444
    "floating point constant"         shift, and go to state 445
    "double constant"                 shift, and go to state 446
    "name"                            shift, and go to state 56
    "start of the string"             shift, and go to state 447
    "begin of code block"             shift, and go to state 448
    '-'                               shift, and go to state 449
    '+'                               shift, and go to state 450
    '*'                               shift, and go to state 451
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 452
    '!'                               shift, and go to state 453
    '['                               shift, and go to state 454
    '('                               shift, and go to state 455
    '$'                               shift, and go to state 456
    '@'                               shift, and go to state 457

    string_builder          go to state 458
    expr_reader             go to state 459
    expr_call_pipe          go to state 460
    name_in_namespace       go to state 461
    expr_new                go to state 462
    expr_cast               go to state 463
    expr_type_decl          go to state 464
    expr_type_info          go to state 465
    block_or_lambda         go to state 466
    expr_full_block         go to state 467
    expr_numeric_const      go to state 468
    expr_named_call         go to state 469
    expr_method_call        go to state 470
    func_addr_expr          go to state 471
    expr_field              go to state 472
    expr_call               go to state 473
    expr                    go to state 592
    expr_mtag               go to state 475
    basic_type_declaration  go to state 476
    make_decl               go to state 477
    make_struct_decl        go to state 478
    make_tuple_call         go to state 479
    make_dim_decl           go to state 480
    make_table_decl         go to state 481
    array_comprehension     go to state 482


State 450

  386 expr: '+' . expr

    "struct"                          shift, and go to state 409
    "class"                           shift, and go to state 410
    "true"                            shift, and go to state 411
    "false"                           shift, and go to state 412
    "new"                             shift, and go to state 413
    "typeinfo"                        shift, and go to state 414
    "type"                            shift, and go to state 415
    "array"                           shift, and go to state 416
    "null"                            shift, and go to state 417
    "table"                           shift, and go to state 418
    "deref"                           shift, and go to state 419
    "cast"                            shift, and go to state 420
    "upcast"                          shift, and go to state 421
    "addr"                            shift, and go to state 422
    "reinterpret"                     shift, and go to state 423
    "unsafe"                          shift, and go to state 424
    "fixed_array"                     shift, and go to state 425
    "default"                         shift, and go to state 426
    "bool"                            shift, and go to state 225
    "void"                            shift, and go to state 226
    "string"                          shift, and go to state 227
    "int"                             shift, and go to state 229
    "int2"                            shift, and go to state 230
    "int3"                            shift, and go to state 231
    "int4"                            shift, and go to state 232
    "uint"                            shift, and go to state 233
    "bitfield"                        shift, and go to state 427
    "uint2"                           shift, and go to state 235
    "uint3"                           shift, and go to state 236
    "uint4"                           shift, and go to state 237
    "float"                           shift, and go to state 238
    "float2"                          shift, and go to state 239
    "float3"                          shift, and go to state 240
    "float4"                          shift, and go to state 241
    "range"                           shift, and go to state 242
    "urange"                          shift, and go to state 243
    "range64"                         shift, and go to state 244
    "urange64"                        shift, and go to state 245
    "int64"                           shift, and go to state 247
    "uint64"                          shift, and go to state 248
    "double"                          shift, and go to state 249
    "int8"                            shift, and go to state 252
    "uint8"                           shift, and go to state 253
    "int16"                           shift, and go to state 254
    "uint16"                          shift, and go to state 255
    "tuple"                           shift, and go to state 428
    "variant"                         shift, and go to state 429
    "generator"                       shift, and go to state 430
    "++"                              shift, and go to state 431
    "--"                              shift, and go to state 432
    "::"                              shift, and go to state 55
    "$$"                              shift, and go to state 433
    "$i"                              shift, and go to state 434
    "$v"                              shift, and go to state 435
    "$b"                              shift, and go to state 436
    "$a"                              shift, and go to state 437
    "$c"                              shift, and go to state 438
    "..."                             shift, and go to state 439
    "integer constant"                shift, and go to state 440
    "long integer constant"           shift, and go to state 441
    "unsigned integer constant"       shift, and go to state 442
    "unsigned long integer constant"  shift, and go to state 443
    "unsigned int8 constant"          shift, and go to state 444
    "floating point constant"         shift, and go to state 445
    "double constant"                 shift, and go to state 446
    "name"                            shift, and go to state 56
    "start of the string"             shift, and go to state 447
    "begin of code block"             shift, and go to state 448
    '-'                               shift, and go to state 449
    '+'                               shift, and go to state 450
    '*'                               shift, and go to state 451
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 452
    '!'                               shift, and go to state 453
    '['                               shift, and go to state 454
    '('                               shift, and go to state 455
    '$'                               shift, and go to state 456
    '@'                               shift, and go to state 457

    string_builder          go to state 458
    expr_reader             go to state 459
    expr_call_pipe          go to state 460
    name_in_namespace       go to state 461
    expr_new                go to state 462
    expr_cast               go to state 463
    expr_type_decl          go to state 464
    expr_type_info          go to state 465
    block_or_lambda         go to state 466
    expr_full_block         go to state 467
    expr_numeric_const      go to state 468
    expr_named_call         go to state 469
    expr_method_call        go to state 470
    func_addr_expr          go to state 471
    expr_field              go to state 472
    expr_call               go to state 473
    expr                    go to state 593
    expr_mtag               go to state 475
    basic_type_declaration  go to state 476
    make_decl               go to state 477
    make_struct_decl        go to state 478
    make_tuple_call         go to state 479
    make_dim_decl           go to state 480
    make_table_decl         go to state 481
    array_comprehension     go to state 482


State 451

  423 expr: '*' . expr

    "struct"                          shift, and go to state 409
    "class"                           shift, and go to state 410
    "true"                            shift, and go to state 411
    "false"                           shift, and go to state 412
    "new"                             shift, and go to state 413
    "typeinfo"                        shift, and go to state 414
    "type"                            shift, and go to state 415
    "array"                           shift, and go to state 416
    "null"                            shift, and go to state 417
    "table"                           shift, and go to state 418
    "deref"                           shift, and go to state 419
    "cast"                            shift, and go to state 420
    "upcast"                          shift, and go to state 421
    "addr"                            shift, and go to state 422
    "reinterpret"                     shift, and go to state 423
    "unsafe"                          shift, and go to state 424
    "fixed_array"                     shift, and go to state 425
    "default"                         shift, and go to state 426
    "bool"                            shift, and go to state 225
    "void"                            shift, and go to state 226
    "string"                          shift, and go to state 227
    "int"                             shift, and go to state 229
    "int2"                            shift, and go to state 230
    "int3"                            shift, and go to state 231
    "int4"                            shift, and go to state 232
    "uint"                            shift, and go to state 233
    "bitfield"                        shift, and go to state 427
    "uint2"                           shift, and go to state 235
    "uint3"                           shift, and go to state 236
    "uint4"                           shift, and go to state 237
    "float"                           shift, and go to state 238
    "float2"                          shift, and go to state 239
    "float3"                          shift, and go to state 240
    "float4"                          shift, and go to state 241
    "range"                           shift, and go to state 242
    "urange"                          shift, and go to state 243
    "range64"                         shift, and go to state 244
    "urange64"                        shift, and go to state 245
    "int64"                           shift, and go to state 247
    "uint64"                          shift, and go to state 248
    "double"                          shift, and go to state 249
    "int8"                            shift, and go to state 252
    "uint8"                           shift, and go to state 253
    "int16"                           shift, and go to state 254
    "uint16"                          shift, and go to state 255
    "tuple"                           shift, and go to state 428
    "variant"                         shift, and go to state 429
    "generator"                       shift, and go to state 430
    "++"                              shift, and go to state 431
    "--"                              shift, and go to state 432
    "::"                              shift, and go to state 55
    "$$"                              shift, and go to state 433
    "$i"                              shift, and go to state 434
    "$v"                              shift, and go to state 435
    "$b"                              shift, and go to state 436
    "$a"                              shift, and go to state 437
    "$c"                              shift, and go to state 438
    "..."                             shift, and go to state 439
    "integer constant"                shift, and go to state 440
    "long integer constant"           shift, and go to state 441
    "unsigned integer constant"       shift, and go to state 442
    "unsigned long integer constant"  shift, and go to state 443
    "unsigned int8 constant"          shift, and go to state 444
    "floating point constant"         shift, and go to state 445
    "double constant"                 shift, and go to state 446
    "name"                            shift, and go to state 56
    "start of the string"             shift, and go to state 447
    "begin of code block"             shift, and go to state 448
    '-'                               shift, and go to state 449
    '+'                               shift, and go to state 450
    '*'                               shift, and go to state 451
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 452
    '!'                               shift, and go to state 453
    '['                               shift, and go to state 454
    '('                               shift, and go to state 455
    '$'                               shift, and go to state 456
    '@'                               shift, and go to state 457

    string_builder          go to state 458
    expr_reader             go to state 459
    expr_call_pipe          go to state 460
    name_in_namespace       go to state 461
    expr_new                go to state 462
    expr_cast               go to state 463
    expr_type_decl          go to state 464
    expr_type_info          go to state 465
    block_or_lambda         go to state 466
    expr_full_block         go to state 467
    expr_numeric_const      go to state 468
    expr_named_call         go to state 469
    expr_method_call        go to state 470
    func_addr_expr          go to state 471
    expr_field              go to state 472
    expr_call               go to state 473
    expr                    go to state 594
    expr_mtag               go to state 475
    basic_type_declaration  go to state 476
    make_decl               go to state 477
    make_struct_decl        go to state 478
    make_tuple_call         go to state 479
    make_dim_decl           go to state 480
    make_table_decl         go to state 481
    array_comprehension     go to state 482


State 452

  385 expr: '~' . expr

    "struct"                          shift, and go to state 409
    "class"                           shift, and go to state 410
    "true"                            shift, and go to state 411
    "false"                           shift, and go to state 412
    "new"                             shift, and go to state 413
    "typeinfo"                        shift, and go to state 414
    "type"                            shift, and go to state 415
    "array"                           shift, and go to state 416
    "null"                            shift, and go to state 417
    "table"                           shift, and go to state 418
    "deref"                           shift, and go to state 419
    "cast"                            shift, and go to state 420
    "upcast"                          shift, and go to state 421
    "addr"                            shift, and go to state 422
    "reinterpret"                     shift, and go to state 423
    "unsafe"                          shift, and go to state 424
    "fixed_array"                     shift, and go to state 425
    "default"                         shift, and go to state 426
    "bool"                            shift, and go to state 225
    "void"                            shift, and go to state 226
    "string"                          shift, and go to state 227
    "int"                             shift, and go to state 229
    "int2"                            shift, and go to state 230
    "int3"                            shift, and go to state 231
    "int4"                            shift, and go to state 232
    "uint"                            shift, and go to state 233
    "bitfield"                        shift, and go to state 427
    "uint2"                           shift, and go to state 235
    "uint3"                           shift, and go to state 236
    "uint4"                           shift, and go to state 237
    "float"                           shift, and go to state 238
    "float2"                          shift, and go to state 239
    "float3"                          shift, and go to state 240
    "float4"                          shift, and go to state 241
    "range"                           shift, and go to state 242
    "urange"                          shift, and go to state 243
    "range64"                         shift, and go to state 244
    "urange64"                        shift, and go to state 245
    "int64"                           shift, and go to state 247
    "uint64"                          shift, and go to state 248
    "double"                          shift, and go to state 249
    "int8"                            shift, and go to state 252
    "uint8"                           shift, and go to state 253
    "int16"                           shift, and go to state 254
    "uint16"                          shift, and go to state 255
    "tuple"                           shift, and go to state 428
    "variant"                         shift, and go to state 429
    "generator"                       shift, and go to state 430
    "++"                              shift, and go to state 431
    "--"                              shift, and go to state 432
    "::"                              shift, and go to state 55
    "$$"                              shift, and go to state 433
    "$i"                              shift, and go to state 434
    "$v"                              shift, and go to state 435
    "$b"                              shift, and go to state 436
    "$a"                              shift, and go to state 437
    "$c"                              shift, and go to state 438
    "..."                             shift, and go to state 439
    "integer constant"                shift, and go to state 440
    "long integer constant"           shift, and go to state 441
    "unsigned integer constant"       shift, and go to state 442
    "unsigned long integer constant"  shift, and go to state 443
    "unsigned int8 constant"          shift, and go to state 444
    "floating point constant"         shift, and go to state 445
    "double constant"                 shift, and go to state 446
    "name"                            shift, and go to state 56
    "start of the string"             shift, and go to state 447
    "begin of code block"             shift, and go to state 448
    '-'                               shift, and go to state 449
    '+'                               shift, and go to state 450
    '*'                               shift, and go to state 451
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 452
    '!'                               shift, and go to state 453
    '['                               shift, and go to state 454
    '('                               shift, and go to state 455
    '$'                               shift, and go to state 456
    '@'                               shift, and go to state 457

    string_builder          go to state 458
    expr_reader             go to state 459
    expr_call_pipe          go to state 460
    name_in_namespace       go to state 461
    expr_new                go to state 462
    expr_cast               go to state 463
    expr_type_decl          go to state 464
    expr_type_info          go to state 465
    block_or_lambda         go to state 466
    expr_full_block         go to state 467
    expr_numeric_const      go to state 468
    expr_named_call         go to state 469
    expr_method_call        go to state 470
    func_addr_expr          go to state 471
    expr_field              go to state 472
    expr_call               go to state 473
    expr                    go to state 595
    expr_mtag               go to state 475
    basic_type_declaration  go to state 476
    make_decl               go to state 477
    make_struct_decl        go to state 478
    make_tuple_call         go to state 479
    make_dim_decl           go to state 480
    make_table_decl         go to state 481
    array_comprehension     go to state 482


State 453

  384 expr: '!' . expr

    "struct"                          shift, and go to state 409
    "class"                           shift, and go to state 410
    "true"                            shift, and go to state 411
    "false"                           shift, and go to state 412
    "new"                             shift, and go to state 413
    "typeinfo"                        shift, and go to state 414
    "type"                            shift, and go to state 415
    "array"                           shift, and go to state 416
    "null"                            shift, and go to state 417
    "table"                           shift, and go to state 418
    "deref"                           shift, and go to state 419
    "cast"                            shift, and go to state 420
    "upcast"                          shift, and go to state 421
    "addr"                            shift, and go to state 422
    "reinterpret"                     shift, and go to state 423
    "unsafe"                          shift, and go to state 424
    "fixed_array"                     shift, and go to state 425
    "default"                         shift, and go to state 426
    "bool"                            shift, and go to state 225
    "void"                            shift, and go to state 226
    "string"                          shift, and go to state 227
    "int"                             shift, and go to state 229
    "int2"                            shift, and go to state 230
    "int3"                            shift, and go to state 231
    "int4"                            shift, and go to state 232
    "uint"                            shift, and go to state 233
    "bitfield"                        shift, and go to state 427
    "uint2"                           shift, and go to state 235
    "uint3"                           shift, and go to state 236
    "uint4"                           shift, and go to state 237
    "float"                           shift, and go to state 238
    "float2"                          shift, and go to state 239
    "float3"                          shift, and go to state 240
    "float4"                          shift, and go to state 241
    "range"                           shift, and go to state 242
    "urange"                          shift, and go to state 243
    "range64"                         shift, and go to state 244
    "urange64"                        shift, and go to state 245
    "int64"                           shift, and go to state 247
    "uint64"                          shift, and go to state 248
    "double"                          shift, and go to state 249
    "int8"                            shift, and go to state 252
    "uint8"                           shift, and go to state 253
    "int16"                           shift, and go to state 254
    "uint16"                          shift, and go to state 255
    "tuple"                           shift, and go to state 428
    "variant"                         shift, and go to state 429
    "generator"                       shift, and go to state 430
    "++"                              shift, and go to state 431
    "--"                              shift, and go to state 432
    "::"                              shift, and go to state 55
    "$$"                              shift, and go to state 433
    "$i"                              shift, and go to state 434
    "$v"                              shift, and go to state 435
    "$b"                              shift, and go to state 436
    "$a"                              shift, and go to state 437
    "$c"                              shift, and go to state 438
    "..."                             shift, and go to state 439
    "integer constant"                shift, and go to state 440
    "long integer constant"           shift, and go to state 441
    "unsigned integer constant"       shift, and go to state 442
    "unsigned long integer constant"  shift, and go to state 443
    "unsigned int8 constant"          shift, and go to state 444
    "floating point constant"         shift, and go to state 445
    "double constant"                 shift, and go to state 446
    "name"                            shift, and go to state 56
    "start of the string"             shift, and go to state 447
    "begin of code block"             shift, and go to state 448
    '-'                               shift, and go to state 449
    '+'                               shift, and go to state 450
    '*'                               shift, and go to state 451
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 452
    '!'                               shift, and go to state 453
    '['                               shift, and go to state 454
    '('                               shift, and go to state 455
    '$'                               shift, and go to state 456
    '@'                               shift, and go to state 457

    string_builder          go to state 458
    expr_reader             go to state 459
    expr_call_pipe          go to state 460
    name_in_namespace       go to state 461
    expr_new                go to state 462
    expr_cast               go to state 463
    expr_type_decl          go to state 464
    expr_type_info          go to state 465
    block_or_lambda         go to state 466
    expr_full_block         go to state 467
    expr_numeric_const      go to state 468
    expr_named_call         go to state 469
    expr_method_call        go to state 470
    func_addr_expr          go to state 471
    expr_field              go to state 472
    expr_call               go to state 473
    expr                    go to state 596
    expr_mtag               go to state 475
    basic_type_declaration  go to state 476
    make_decl               go to state 477
    make_struct_decl        go to state 478
    make_tuple_call         go to state 479
    make_dim_decl           go to state 480
    make_table_decl         go to state 481
    array_comprehension     go to state 482


State 454

  767 make_dim_decl: '[' . expr_list optional_comma ']'
  795 array_comprehension: '[' . "for" '(' variable_name_with_pos_list "in" expr_list ')' "end of expression" expr array_comprehension_where ']'
  796                    | '[' . "iterator" "for" '(' variable_name_with_pos_list "in" expr_list ')' "end of expression" expr array_comprehension_where ']'

    "struct"                          shift, and go to state 409
    "class"                           shift, and go to state 410
    "for"                             shift, and go to state 597
    "true"                            shift, and go to state 411
    "false"                           shift, and go to state 412
    "new"                             shift, and go to state 413
    "typeinfo"                        shift, and go to state 414
    "type"                            shift, and go to state 415
    "array"                           shift, and go to state 416
    "null"                            shift, and go to state 417
    "table"                           shift, and go to state 418
    "deref"                           shift, and go to state 419
    "cast"                            shift, and go to state 420
    "upcast"                          shift, and go to state 421
    "iterator"                        shift, and go to state 598
    "addr"                            shift, and go to state 422
    "reinterpret"                     shift, and go to state 423
    "unsafe"                          shift, and go to state 424
    "fixed_array"                     shift, and go to state 425
    "default"                         shift, and go to state 426
    "bool"                            shift, and go to state 225
    "void"                            shift, and go to state 226
    "string"                          shift, and go to state 227
    "int"                             shift, and go to state 229
    "int2"                            shift, and go to state 230
    "int3"                            shift, and go to state 231
    "int4"                            shift, and go to state 232
    "uint"                            shift, and go to state 233
    "bitfield"                        shift, and go to state 427
    "uint2"                           shift, and go to state 235
    "uint3"                           shift, and go to state 236
    "uint4"                           shift, and go to state 237
    "float"                           shift, and go to state 238
    "float2"                          shift, and go to state 239
    "float3"                          shift, and go to state 240
    "float4"                          shift, and go to state 241
    "range"                           shift, and go to state 242
    "urange"                          shift, and go to state 243
    "range64"                         shift, and go to state 244
    "urange64"                        shift, and go to state 245
    "int64"                           shift, and go to state 247
    "uint64"                          shift, and go to state 248
    "double"                          shift, and go to state 249
    "int8"                            shift, and go to state 252
    "uint8"                           shift, and go to state 253
    "int16"                           shift, and go to state 254
    "uint16"                          shift, and go to state 255
    "tuple"                           shift, and go to state 428
    "variant"                         shift, and go to state 429
    "generator"                       shift, and go to state 430
    "++"                              shift, and go to state 431
    "--"                              shift, and go to state 432
    "::"                              shift, and go to state 55
    "$$"                              shift, and go to state 433
    "$i"                              shift, and go to state 434
    "$v"                              shift, and go to state 435
    "$b"                              shift, and go to state 436
    "$a"                              shift, and go to state 437
    "$c"                              shift, and go to state 438
    "..."                             shift, and go to state 439
    "integer constant"                shift, and go to state 440
    "long integer constant"           shift, and go to state 441
    "unsigned integer constant"       shift, and go to state 442
    "unsigned long integer constant"  shift, and go to state 443
    "unsigned int8 constant"          shift, and go to state 444
    "floating point constant"         shift, and go to state 445
    "double constant"                 shift, and go to state 446
    "name"                            shift, and go to state 56
    "start of the string"             shift, and go to state 447
    "begin of code block"             shift, and go to state 448
    '-'                               shift, and go to state 449
    '+'                               shift, and go to state 450
    '*'                               shift, and go to state 451
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 452
    '!'                               shift, and go to state 453
    '['                               shift, and go to state 454
    '('                               shift, and go to state 455
    '$'                               shift, and go to state 456
    '@'                               shift, and go to state 457

    string_builder          go to state 458
    expr_reader             go to state 459
    expr_call_pipe          go to state 460
    name_in_namespace       go to state 461
    expr_new                go to state 462
    expr_cast               go to state 463
    expr_type_decl          go to state 464
    expr_type_info          go to state 465
    expr_list               go to state 599
    block_or_lambda         go to state 466
    expr_full_block         go to state 467
    expr_numeric_const      go to state 468
    expr_named_call         go to state 469
    expr_method_call        go to state 470
    func_addr_expr          go to state 471
    expr_field              go to state 472
    expr_call               go to state 473
    expr                    go to state 600
    expr_mtag               go to state 475
    basic_type_declaration  go to state 476
    make_decl               go to state 477
    make_struct_decl        go to state 478
    make_tuple_call         go to state 479
    make_dim_decl           go to state 480
    make_table_decl         go to state 481
    array_comprehension     go to state 482


State 455

  414 expr: '(' . expr_list optional_comma ')'

    "struct"                          shift, and go to state 409
    "class"                           shift, and go to state 410
    "true"                            shift, and go to state 411
    "false"                           shift, and go to state 412
    "new"                             shift, and go to state 413
    "typeinfo"                        shift, and go to state 414
    "type"                            shift, and go to state 415
    "array"                           shift, and go to state 416
    "null"                            shift, and go to state 417
    "table"                           shift, and go to state 418
    "deref"                           shift, and go to state 419
    "cast"                            shift, and go to state 420
    "upcast"                          shift, and go to state 421
    "addr"                            shift, and go to state 422
    "reinterpret"                     shift, and go to state 423
    "unsafe"                          shift, and go to state 424
    "fixed_array"                     shift, and go to state 425
    "default"                         shift, and go to state 426
    "bool"                            shift, and go to state 225
    "void"                            shift, and go to state 226
    "string"                          shift, and go to state 227
    "int"                             shift, and go to state 229
    "int2"                            shift, and go to state 230
    "int3"                            shift, and go to state 231
    "int4"                            shift, and go to state 232
    "uint"                            shift, and go to state 233
    "bitfield"                        shift, and go to state 427
    "uint2"                           shift, and go to state 235
    "uint3"                           shift, and go to state 236
    "uint4"                           shift, and go to state 237
    "float"                           shift, and go to state 238
    "float2"                          shift, and go to state 239
    "float3"                          shift, and go to state 240
    "float4"                          shift, and go to state 241
    "range"                           shift, and go to state 242
    "urange"                          shift, and go to state 243
    "range64"                         shift, and go to state 244
    "urange64"                        shift, and go to state 245
    "int64"                           shift, and go to state 247
    "uint64"                          shift, and go to state 248
    "double"                          shift, and go to state 249
    "int8"                            shift, and go to state 252
    "uint8"                           shift, and go to state 253
    "int16"                           shift, and go to state 254
    "uint16"                          shift, and go to state 255
    "tuple"                           shift, and go to state 428
    "variant"                         shift, and go to state 429
    "generator"                       shift, and go to state 430
    "++"                              shift, and go to state 431
    "--"                              shift, and go to state 432
    "::"                              shift, and go to state 55
    "$$"                              shift, and go to state 433
    "$i"                              shift, and go to state 434
    "$v"                              shift, and go to state 435
    "$b"                              shift, and go to state 436
    "$a"                              shift, and go to state 437
    "$c"                              shift, and go to state 438
    "..."                             shift, and go to state 439
    "integer constant"                shift, and go to state 440
    "long integer constant"           shift, and go to state 441
    "unsigned integer constant"       shift, and go to state 442
    "unsigned long integer constant"  shift, and go to state 443
    "unsigned int8 constant"          shift, and go to state 444
    "floating point constant"         shift, and go to state 445
    "double constant"                 shift, and go to state 446
    "name"                            shift, and go to state 56
    "start of the string"             shift, and go to state 447
    "begin of code block"             shift, and go to state 448
    '-'                               shift, and go to state 449
    '+'                               shift, and go to state 450
    '*'                               shift, and go to state 451
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 452
    '!'                               shift, and go to state 453
    '['                               shift, and go to state 454
    '('                               shift, and go to state 455
    '$'                               shift, and go to state 456
    '@'                               shift, and go to state 457

    string_builder          go to state 458
    expr_reader             go to state 459
    expr_call_pipe          go to state 460
    name_in_namespace       go to state 461
    expr_new                go to state 462
    expr_cast               go to state 463
    expr_type_decl          go to state 464
    expr_type_info          go to state 465
    expr_list               go to state 601
    block_or_lambda         go to state 466
    expr_full_block         go to state 467
    expr_numeric_const      go to state 468
    expr_named_call         go to state 469
    expr_method_call        go to state 470
    func_addr_expr          go to state 471
    expr_field              go to state 472
    expr_call               go to state 473
    expr                    go to state 600
    expr_mtag               go to state 475
    basic_type_declaration  go to state 476
    make_decl               go to state 477
    make_struct_decl        go to state 478
    make_tuple_call         go to state 479
    make_dim_decl           go to state 480
    make_table_decl         go to state 481
    array_comprehension     go to state 482


State 456

  304 block_or_lambda: '$' .

    $default  reduce using rule 304 (block_or_lambda)


State 457

  305 block_or_lambda: '@' .
  306                | '@' . '@'
  351 func_addr_expr: '@' . '@' func_addr_name
  354               | '@' . '@' '<' $@17 type_declaration_no_options '>' $@18 func_addr_name
  357               | '@' . '@' '<' $@19 optional_function_argument_list optional_function_type '>' $@20 func_addr_name
  473 expr_mtag: '@' . '@' "$c" '(' expr ')'

    '@'  shift, and go to state 602

    $default  reduce using rule 305 (block_or_lambda)


State 458

  378 expr: string_builder .

    $default  reduce using rule 378 (expr)


State 459

  377 expr: expr_reader .

    $default  reduce using rule 377 (expr)


State 460

  456 expr: expr_call_pipe .

    $default  reduce using rule 456 (expr)


State 461

  345 expr_named_call: name_in_namespace . '(' '[' make_struct_fields ']' ')'
  346                | name_in_namespace . '(' expr_list ',' '[' make_struct_fields ']' ')'
  367 expr_call: name_in_namespace . '(' ')'
  368          | name_in_namespace . '(' "uninitialized" ')'
  369          | name_in_namespace . '(' make_struct_single ')'
  370          | name_in_namespace . '(' "uninitialized" make_struct_single ')'
  371          | name_in_namespace . '(' expr_list ')'
  375 expr: name_in_namespace .

    '('  shift, and go to state 603

    $default  reduce using rule 375 (expr)


State 462

  449 expr: expr_new .

    $default  reduce using rule 449 (expr)


State 463

  448 expr: expr_cast .

    $default  reduce using rule 448 (expr)


State 464

  447 expr: expr_type_decl .

    $default  reduce using rule 447 (expr)


State 465

  446 expr: expr_type_info .

    $default  reduce using rule 446 (expr)


State 466

  316 expr_full_block: block_or_lambda . optional_annotation_list optional_capture_list optional_function_argument_list optional_function_type block_or_simple_block

    '['  shift, and go to state 15

    $default  reduce using rule 113 (optional_annotation_list)

    optional_annotation_list  go to state 604


State 467

  452 expr: expr_full_block .

    $default  reduce using rule 452 (expr)


State 468

  376 expr: expr_numeric_const .

    $default  reduce using rule 376 (expr)


State 469

  451 expr: expr_named_call .

    $default  reduce using rule 451 (expr)


State 470

  450 expr: expr_method_call .

    $default  reduce using rule 450 (expr)


State 471

  421 expr: func_addr_expr .

    $default  reduce using rule 421 (expr)


State 472

  382 expr: expr_field .

    $default  reduce using rule 382 (expr)


State 473

  219 expr_call_pipe: expr_call . expr_full_block_assumed_piped
  422 expr: expr_call .

    "begin of code block"  shift, and go to state 605
    '$'                    shift, and go to state 456
    '@'                    shift, and go to state 606

    $default  reduce using rule 422 (expr)

    block_or_lambda                go to state 607
    expr_full_block_assumed_piped  go to state 608


State 474

  347 expr_method_call: expr . "->" "name" '(' ')'
  348                 | expr . "->" "name" '(' expr_list ')'
  358 expr_field: expr . '.' "name"
  359           | expr . '.' '.' "name"
  360           | expr . '.' "name" '(' ')'
  361           | expr . '.' "name" '(' expr_list ')'
  362           | expr . '.' basic_type_declaration '(' ')'
  363           | expr . '.' basic_type_declaration '(' expr_list ')'
  366           | expr . '.' $@21 error $@22
  388 expr: expr . "<<" expr
  389     | expr . ">>" expr
  390     | expr . "<<<" expr
  391     | expr . ">>>" expr
  392     | expr . '+' expr
  393     | expr . '-' expr
  394     | expr . '*' expr
  395     | expr . '/' expr
  396     | expr . '%' expr
  397     | expr . '<' expr
  398     | expr . '>' expr
  399     | expr . "==" expr
  400     | expr . "!=" expr
  401     | expr . "<=" expr
  402     | expr . ">=" expr
  403     | expr . '&' expr
  404     | expr . '|' expr
  405     | expr . '^' expr
  406     | expr . "&&" expr
  407     | expr . "||" expr
  408     | expr . "^^" expr
  409     | expr . ".." expr
  412     | expr . "++"
  413     | expr . "--"
  415     | expr . '[' expr ']'
  416     | expr . '.' '[' expr ']'
  417     | expr . "?[" expr ']'
  418     | expr . '.' "?[" expr ']'
  419     | expr . "?." "name"
  420     | expr . '.' "?." "name"
  429     | expr . "??" expr
  430     | expr . '?' expr ':' expr
  433     | expr . "is" "type" '<' $@23 type_declaration_no_options '>' $@24
  434     | expr . "is" basic_type_declaration
  435     | expr . "is" "name"
  436     | expr . "as" "name"
  439     | expr . "as" "type" '<' $@25 type_declaration '>' $@26
  440     | expr . "as" basic_type_declaration
  441     | expr . '?' "as" "name"
  444     | expr . '?' "as" "type" '<' $@27 type_declaration '>' $@28
  445     | expr . '?' "as" basic_type_declaration
  453     | expr . "<|" expr
  454     | expr . "|>" expr
  455     | expr . "|>" basic_type_declaration
  466 expr_mtag: expr . '.' "$f" '(' expr ')'
  467          | expr . "?." "$f" '(' expr ')'
  468          | expr . '.' '.' "$f" '(' expr ')'
  469          | expr . '.' "?." "$f" '(' expr ')'
  470          | expr . "as" "$f" '(' expr ')'
  471          | expr . '?' "as" "$f" '(' expr ')'
  472          | expr . "is" "$f" '(' expr ')'
  655 type_declaration_no_options_no_dim: "typedecl" '(' expr . ')'

    "is"   shift, and go to state 609
    "as"   shift, and go to state 610
    "<<"   shift, and go to state 611
    ">>"   shift, and go to state 612
    "++"   shift, and go to state 613
    "--"   shift, and go to state 614
    "<="   shift, and go to state 615
    ">="   shift, and go to state 616
    "=="   shift, and go to state 617
    "!="   shift, and go to state 618
    "->"   shift, and go to state 619
    "??"   shift, and go to state 620
    "?."   shift, and go to state 621
    "?["   shift, and go to state 622
    "<|"   shift, and go to state 623
    "|>"   shift, and go to state 624
    "<<<"  shift, and go to state 625
    ">>>"  shift, and go to state 626
    "&&"   shift, and go to state 627
    "||"   shift, and go to state 628
    "^^"   shift, and go to state 629
    ".."   shift, and go to state 630
    '?'    shift, and go to state 631
    '|'    shift, and go to state 632
    '^'    shift, and go to state 633
    '&'    shift, and go to state 634
    '<'    shift, and go to state 635
    '>'    shift, and go to state 636
    '-'    shift, and go to state 637
    '+'    shift, and go to state 638
    '*'    shift, and go to state 639
    '/'    shift, and go to state 640
    '%'    shift, and go to state 641
    '.'    shift, and go to state 642
    '['    shift, and go to state 643
    ')'    shift, and go to state 644


State 475

  383 expr: expr_mtag .

    $default  reduce using rule 383 (expr)


State 476

  372 expr_call: basic_type_declaration . '(' ')'
  373          | basic_type_declaration . '(' expr_list ')'

    '('  shift, and go to state 645


State 477

  379 expr: make_decl .

    $default  reduce using rule 379 (expr)


State 478

  726 make_decl: make_struct_decl .

    $default  reduce using rule 726 (make_decl)


State 479

  730 make_decl: make_tuple_call .

    $default  reduce using rule 730 (make_decl)


State 480

  727 make_decl: make_dim_decl .

    $default  reduce using rule 727 (make_decl)


State 481

  728 make_decl: make_table_decl .

    $default  reduce using rule 728 (make_decl)


State 482

  729 make_decl: array_comprehension .

    $default  reduce using rule 729 (make_decl)


State 483

  683 type_declaration_no_options_no_dim: "iterator" '<' $@50 . type_declaration '>' $@51

    "type"       shift, and go to state 219
    "array"      shift, and go to state 220
    "table"      shift, and go to state 221
    "typedecl"   shift, and go to state 222
    "iterator"   shift, and go to state 223
    "smart_ptr"  shift, and go to state 224
    "bool"       shift, and go to state 225
    "void"       shift, and go to state 226
    "string"     shift, and go to state 227
    "auto"       shift, and go to state 228
    "int"        shift, and go to state 229
    "int2"       shift, and go to state 230
    "int3"       shift, and go to state 231
    "int4"       shift, and go to state 232
    "uint"       shift, and go to state 233
    "bitfield"   shift, and go to state 234
    "uint2"      shift, and go to state 235
    "uint3"      shift, and go to state 236
    "uint4"      shift, and go to state 237
    "float"      shift, and go to state 238
    "float2"     shift, and go to state 239
    "float3"     shift, and go to state 240
    "float4"     shift, and go to state 241
    "range"      shift, and go to state 242
    "urange"     shift, and go to state 243
    "range64"    shift, and go to state 244
    "urange64"   shift, and go to state 245
    "block"      shift, and go to state 246
    "int64"      shift, and go to state 247
    "uint64"     shift, and go to state 248
    "double"     shift, and go to state 249
    "function"   shift, and go to state 250
    "lambda"     shift, and go to state 251
    "int8"       shift, and go to state 252
    "uint8"      shift, and go to state 253
    "int16"      shift, and go to state 254
    "uint16"     shift, and go to state 255
    "tuple"      shift, and go to state 256
    "variant"    shift, and go to state 257
    "::"         shift, and go to state 55
    "$t"         shift, and go to state 258
    "name"       shift, and go to state 56
    '$'          shift, and go to state 259

    name_in_namespace                   go to state 260
    basic_type_declaration              go to state 261
    structure_type_declaration          go to state 262
    auto_type_declaration               go to state 263
    bitfield_type_declaration           go to state 264
    type_declaration_no_options         go to state 265
    type_declaration_no_options_no_dim  go to state 266
    type_declaration                    go to state 646


State 484

  673 type_declaration_no_options_no_dim: "smart_ptr" '<' $@44 . type_declaration '>' $@45

    "type"       shift, and go to state 219
    "array"      shift, and go to state 220
    "table"      shift, and go to state 221
    "typedecl"   shift, and go to state 222
    "iterator"   shift, and go to state 223
    "smart_ptr"  shift, and go to state 224
    "bool"       shift, and go to state 225
    "void"       shift, and go to state 226
    "string"     shift, and go to state 227
    "auto"       shift, and go to state 228
    "int"        shift, and go to state 229
    "int2"       shift, and go to state 230
    "int3"       shift, and go to state 231
    "int4"       shift, and go to state 232
    "uint"       shift, and go to state 233
    "bitfield"   shift, and go to state 234
    "uint2"      shift, and go to state 235
    "uint3"      shift, and go to state 236
    "uint4"      shift, and go to state 237
    "float"      shift, and go to state 238
    "float2"     shift, and go to state 239
    "float3"     shift, and go to state 240
    "float4"     shift, and go to state 241
    "range"      shift, and go to state 242
    "urange"     shift, and go to state 243
    "range64"    shift, and go to state 244
    "urange64"   shift, and go to state 245
    "block"      shift, and go to state 246
    "int64"      shift, and go to state 247
    "uint64"     shift, and go to state 248
    "double"     shift, and go to state 249
    "function"   shift, and go to state 250
    "lambda"     shift, and go to state 251
    "int8"       shift, and go to state 252
    "uint8"      shift, and go to state 253
    "int16"      shift, and go to state 254
    "uint16"     shift, and go to state 255
    "tuple"      shift, and go to state 256
    "variant"    shift, and go to state 257
    "::"         shift, and go to state 55
    "$t"         shift, and go to state 258
    "name"       shift, and go to state 56
    '$'          shift, and go to state 259

    name_in_namespace                   go to state 260
    basic_type_declaration              go to state 261
    structure_type_declaration          go to state 262
    auto_type_declaration               go to state 263
    bitfield_type_declaration           go to state 264
    type_declaration_no_options         go to state 265
    type_declaration_no_options_no_dim  go to state 266
    type_declaration                    go to state 647


State 485

  628 auto_type_declaration: "auto" '(' "name" . ')'

    ')'  shift, and go to state 648


State 486

  637 bitfield_type_declaration: "bitfield" '<' $@39 . bitfield_bits '>' $@40

    "name"  shift, and go to state 649

    bitfield_bits  go to state 650


State 487

  687 type_declaration_no_options_no_dim: "block" '<' $@52 . type_declaration '>' $@53

    "type"       shift, and go to state 219
    "array"      shift, and go to state 220
    "table"      shift, and go to state 221
    "typedecl"   shift, and go to state 222
    "iterator"   shift, and go to state 223
    "smart_ptr"  shift, and go to state 224
    "bool"       shift, and go to state 225
    "void"       shift, and go to state 226
    "string"     shift, and go to state 227
    "auto"       shift, and go to state 228
    "int"        shift, and go to state 229
    "int2"       shift, and go to state 230
    "int3"       shift, and go to state 231
    "int4"       shift, and go to state 232
    "uint"       shift, and go to state 233
    "bitfield"   shift, and go to state 234
    "uint2"      shift, and go to state 235
    "uint3"      shift, and go to state 236
    "uint4"      shift, and go to state 237
    "float"      shift, and go to state 238
    "float2"     shift, and go to state 239
    "float3"     shift, and go to state 240
    "float4"     shift, and go to state 241
    "range"      shift, and go to state 242
    "urange"     shift, and go to state 243
    "range64"    shift, and go to state 244
    "urange64"   shift, and go to state 245
    "block"      shift, and go to state 246
    "int64"      shift, and go to state 247
    "uint64"     shift, and go to state 248
    "double"     shift, and go to state 249
    "function"   shift, and go to state 250
    "lambda"     shift, and go to state 251
    "int8"       shift, and go to state 252
    "uint8"      shift, and go to state 253
    "int16"      shift, and go to state 254
    "uint16"     shift, and go to state 255
    "tuple"      shift, and go to state 256
    "variant"    shift, and go to state 257
    "::"         shift, and go to state 55
    "$t"         shift, and go to state 258
    "name"       shift, and go to state 56
    '$'          shift, and go to state 259

    name_in_namespace                   go to state 260
    basic_type_declaration              go to state 261
    structure_type_declaration          go to state 262
    auto_type_declaration               go to state 263
    bitfield_type_declaration           go to state 264
    type_declaration_no_options         go to state 265
    type_declaration_no_options_no_dim  go to state 266
    type_declaration                    go to state 651


State 488

  690 type_declaration_no_options_no_dim: "block" '<' $@54 . optional_function_argument_list optional_function_type '>' $@55

    '('  shift, and go to state 324

    $default  reduce using rule 115 (optional_function_argument_list)

    optional_function_argument_list  go to state 652


State 489

  694 type_declaration_no_options_no_dim: "function" '<' $@56 . type_declaration '>' $@57

    "type"       shift, and go to state 219
    "array"      shift, and go to state 220
    "table"      shift, and go to state 221
    "typedecl"   shift, and go to state 222
    "iterator"   shift, and go to state 223
    "smart_ptr"  shift, and go to state 224
    "bool"       shift, and go to state 225
    "void"       shift, and go to state 226
    "string"     shift, and go to state 227
    "auto"       shift, and go to state 228
    "int"        shift, and go to state 229
    "int2"       shift, and go to state 230
    "int3"       shift, and go to state 231
    "int4"       shift, and go to state 232
    "uint"       shift, and go to state 233
    "bitfield"   shift, and go to state 234
    "uint2"      shift, and go to state 235
    "uint3"      shift, and go to state 236
    "uint4"      shift, and go to state 237
    "float"      shift, and go to state 238
    "float2"     shift, and go to state 239
    "float3"     shift, and go to state 240
    "float4"     shift, and go to state 241
    "range"      shift, and go to state 242
    "urange"     shift, and go to state 243
    "range64"    shift, and go to state 244
    "urange64"   shift, and go to state 245
    "block"      shift, and go to state 246
    "int64"      shift, and go to state 247
    "uint64"     shift, and go to state 248
    "double"     shift, and go to state 249
    "function"   shift, and go to state 250
    "lambda"     shift, and go to state 251
    "int8"       shift, and go to state 252
    "uint8"      shift, and go to state 253
    "int16"      shift, and go to state 254
    "uint16"     shift, and go to state 255
    "tuple"      shift, and go to state 256
    "variant"    shift, and go to state 257
    "::"         shift, and go to state 55
    "$t"         shift, and go to state 258
    "name"       shift, and go to state 56
    '$'          shift, and go to state 259

    name_in_namespace                   go to state 260
    basic_type_declaration              go to state 261
    structure_type_declaration          go to state 262
    auto_type_declaration               go to state 263
    bitfield_type_declaration           go to state 264
    type_declaration_no_options         go to state 265
    type_declaration_no_options_no_dim  go to state 266
    type_declaration                    go to state 653


State 490

  697 type_declaration_no_options_no_dim: "function" '<' $@58 . optional_function_argument_list optional_function_type '>' $@59

    '('  shift, and go to state 324

    $default  reduce using rule 115 (optional_function_argument_list)

    optional_function_argument_list  go to state 654


State 491

  701 type_declaration_no_options_no_dim: "lambda" '<' $@60 . type_declaration '>' $@61

    "type"       shift, and go to state 219
    "array"      shift, and go to state 220
    "table"      shift, and go to state 221
    "typedecl"   shift, and go to state 222
    "iterator"   shift, and go to state 223
    "smart_ptr"  shift, and go to state 224
    "bool"       shift, and go to state 225
    "void"       shift, and go to state 226
    "string"     shift, and go to state 227
    "auto"       shift, and go to state 228
    "int"        shift, and go to state 229
    "int2"       shift, and go to state 230
    "int3"       shift, and go to state 231
    "int4"       shift, and go to state 232
    "uint"       shift, and go to state 233
    "bitfield"   shift, and go to state 234
    "uint2"      shift, and go to state 235
    "uint3"      shift, and go to state 236
    "uint4"      shift, and go to state 237
    "float"      shift, and go to state 238
    "float2"     shift, and go to state 239
    "float3"     shift, and go to state 240
    "float4"     shift, and go to state 241
    "range"      shift, and go to state 242
    "urange"     shift, and go to state 243
    "range64"    shift, and go to state 244
    "urange64"   shift, and go to state 245
    "block"      shift, and go to state 246
    "int64"      shift, and go to state 247
    "uint64"     shift, and go to state 248
    "double"     shift, and go to state 249
    "function"   shift, and go to state 250
    "lambda"     shift, and go to state 251
    "int8"       shift, and go to state 252
    "uint8"      shift, and go to state 253
    "int16"      shift, and go to state 254
    "uint16"     shift, and go to state 255
    "tuple"      shift, and go to state 256
    "variant"    shift, and go to state 257
    "::"         shift, and go to state 55
    "$t"         shift, and go to state 258
    "name"       shift, and go to state 56
    '$'          shift, and go to state 259

    name_in_namespace                   go to state 260
    basic_type_declaration              go to state 261
    structure_type_declaration          go to state 262
    auto_type_declaration               go to state 263
    bitfield_type_declaration           go to state 264
    type_declaration_no_options         go to state 265
    type_declaration_no_options_no_dim  go to state 266
    type_declaration                    go to state 655


State 492

  704 type_declaration_no_options_no_dim: "lambda" '<' $@62 . optional_function_argument_list optional_function_type '>' $@63

    '('  shift, and go to state 324

    $default  reduce using rule 115 (optional_function_argument_list)

    optional_function_argument_list  go to state 656


State 493

  707 type_declaration_no_options_no_dim: "tuple" '<' $@64 . tuple_type_list '>' $@65

    "type"       shift, and go to state 219
    "array"      shift, and go to state 220
    "table"      shift, and go to state 221
    "typedecl"   shift, and go to state 222
    "iterator"   shift, and go to state 223
    "smart_ptr"  shift, and go to state 224
    "bool"       shift, and go to state 225
    "void"       shift, and go to state 226
    "string"     shift, and go to state 227
    "auto"       shift, and go to state 228
    "int"        shift, and go to state 229
    "int2"       shift, and go to state 230
    "int3"       shift, and go to state 231
    "int4"       shift, and go to state 232
    "uint"       shift, and go to state 233
    "bitfield"   shift, and go to state 234
    "uint2"      shift, and go to state 235
    "uint3"      shift, and go to state 236
    "uint4"      shift, and go to state 237
    "float"      shift, and go to state 238
    "float2"     shift, and go to state 239
    "float3"     shift, and go to state 240
    "float4"     shift, and go to state 241
    "range"      shift, and go to state 242
    "urange"     shift, and go to state 243
    "range64"    shift, and go to state 244
    "urange64"   shift, and go to state 245
    "block"      shift, and go to state 246
    "int64"      shift, and go to state 247
    "uint64"     shift, and go to state 248
    "double"     shift, and go to state 249
    "function"   shift, and go to state 250
    "lambda"     shift, and go to state 251
    "int8"       shift, and go to state 252
    "uint8"      shift, and go to state 253
    "int16"      shift, and go to state 254
    "uint16"     shift, and go to state 255
    "tuple"      shift, and go to state 256
    "variant"    shift, and go to state 257
    "::"         shift, and go to state 55
    "$t"         shift, and go to state 258
    "name"       shift, and go to state 511
    '$'          shift, and go to state 259

    name_in_namespace                   go to state 260
    tuple_type                          go to state 657
    tuple_type_list                     go to state 658
    basic_type_declaration              go to state 261
    structure_type_declaration          go to state 262
    auto_type_declaration               go to state 263
    bitfield_type_declaration           go to state 264
    type_declaration_no_options         go to state 265
    type_declaration_no_options_no_dim  go to state 266
    type_declaration                    go to state 516


State 494

  710 type_declaration_no_options_no_dim: "variant" '<' $@66 . variant_type_list '>' $@67

    "name"  shift, and go to state 518

    variant_type       go to state 659
    variant_type_list  go to state 660


State 495

  347 expr_method_call: expr . "->" "name" '(' ')'
  348                 | expr . "->" "name" '(' expr_list ')'
  358 expr_field: expr . '.' "name"
  359           | expr . '.' '.' "name"
  360           | expr . '.' "name" '(' ')'
  361           | expr . '.' "name" '(' expr_list ')'
  362           | expr . '.' basic_type_declaration '(' ')'
  363           | expr . '.' basic_type_declaration '(' expr_list ')'
  366           | expr . '.' $@21 error $@22
  388 expr: expr . "<<" expr
  389     | expr . ">>" expr
  390     | expr . "<<<" expr
  391     | expr . ">>>" expr
  392     | expr . '+' expr
  393     | expr . '-' expr
  394     | expr . '*' expr
  395     | expr . '/' expr
  396     | expr . '%' expr
  397     | expr . '<' expr
  398     | expr . '>' expr
  399     | expr . "==" expr
  400     | expr . "!=" expr
  401     | expr . "<=" expr
  402     | expr . ">=" expr
  403     | expr . '&' expr
  404     | expr . '|' expr
  405     | expr . '^' expr
  406     | expr . "&&" expr
  407     | expr . "||" expr
  408     | expr . "^^" expr
  409     | expr . ".." expr
  412     | expr . "++"
  413     | expr . "--"
  415     | expr . '[' expr ']'
  416     | expr . '.' '[' expr ']'
  417     | expr . "?[" expr ']'
  418     | expr . '.' "?[" expr ']'
  419     | expr . "?." "name"
  420     | expr . '.' "?." "name"
  429     | expr . "??" expr
  430     | expr . '?' expr ':' expr
  433     | expr . "is" "type" '<' $@23 type_declaration_no_options '>' $@24
  434     | expr . "is" basic_type_declaration
  435     | expr . "is" "name"
  436     | expr . "as" "name"
  439     | expr . "as" "type" '<' $@25 type_declaration '>' $@26
  440     | expr . "as" basic_type_declaration
  441     | expr . '?' "as" "name"
  444     | expr . '?' "as" "type" '<' $@27 type_declaration '>' $@28
  445     | expr . '?' "as" basic_type_declaration
  453     | expr . "<|" expr
  454     | expr . "|>" expr
  455     | expr . "|>" basic_type_declaration
  466 expr_mtag: expr . '.' "$f" '(' expr ')'
  467          | expr . "?." "$f" '(' expr ')'
  468          | expr . '.' '.' "$f" '(' expr ')'
  469          | expr . '.' "?." "$f" '(' expr ')'
  470          | expr . "as" "$f" '(' expr ')'
  471          | expr . '?' "as" "$f" '(' expr ')'
  472          | expr . "is" "$f" '(' expr ')'
  629 auto_type_declaration: "$t" '(' expr . ')'

    "is"   shift, and go to state 609
    "as"   shift, and go to state 610
    "<<"   shift, and go to state 611
    ">>"   shift, and go to state 612
    "++"   shift, and go to state 613
    "--"   shift, and go to state 614
    "<="   shift, and go to state 615
    ">="   shift, and go to state 616
    "=="   shift, and go to state 617
    "!="   shift, and go to state 618
    "->"   shift, and go to state 619
    "??"   shift, and go to state 620
    "?."   shift, and go to state 621
    "?["   shift, and go to state 622
    "<|"   shift, and go to state 623
    "|>"   shift, and go to state 624
    "<<<"  shift, and go to state 625
    ">>>"  shift, and go to state 626
    "&&"   shift, and go to state 627
    "||"   shift, and go to state 628
    "^^"   shift, and go to state 629
    ".."   shift, and go to state 630
    '?'    shift, and go to state 631
    '|'    shift, and go to state 632
    '^'    shift, and go to state 633
    '&'    shift, and go to state 634
    '<'    shift, and go to state 635
    '>'    shift, and go to state 636
    '-'    shift, and go to state 637
    '+'    shift, and go to state 638
    '*'    shift, and go to state 639
    '/'    shift, and go to state 640
    '%'    shift, and go to state 641
    '.'    shift, and go to state 642
    '['    shift, and go to state 643
    ')'    shift, and go to state 661


State 496

  658 type_declaration_no_options_no_dim: '$' name_in_namespace '<' . $@43 type_declaration_no_options_list '>' '(' optional_expr_list ')'

    $default  reduce using rule 657 ($@43)

    $@43  go to state 662


State 497

  656 type_declaration_no_options_no_dim: '$' name_in_namespace '(' . optional_expr_list ')'

    "struct"                          shift, and go to state 409
    "class"                           shift, and go to state 410
    "true"                            shift, and go to state 411
    "false"                           shift, and go to state 412
    "new"                             shift, and go to state 413
    "typeinfo"                        shift, and go to state 414
    "type"                            shift, and go to state 415
    "array"                           shift, and go to state 416
    "null"                            shift, and go to state 417
    "table"                           shift, and go to state 418
    "deref"                           shift, and go to state 419
    "cast"                            shift, and go to state 420
    "upcast"                          shift, and go to state 421
    "addr"                            shift, and go to state 422
    "reinterpret"                     shift, and go to state 423
    "unsafe"                          shift, and go to state 424
    "fixed_array"                     shift, and go to state 425
    "default"                         shift, and go to state 426
    "bool"                            shift, and go to state 225
    "void"                            shift, and go to state 226
    "string"                          shift, and go to state 227
    "int"                             shift, and go to state 229
    "int2"                            shift, and go to state 230
    "int3"                            shift, and go to state 231
    "int4"                            shift, and go to state 232
    "uint"                            shift, and go to state 233
    "bitfield"                        shift, and go to state 427
    "uint2"                           shift, and go to state 235
    "uint3"                           shift, and go to state 236
    "uint4"                           shift, and go to state 237
    "float"                           shift, and go to state 238
    "float2"                          shift, and go to state 239
    "float3"                          shift, and go to state 240
    "float4"                          shift, and go to state 241
    "range"                           shift, and go to state 242
    "urange"                          shift, and go to state 243
    "range64"                         shift, and go to state 244
    "urange64"                        shift, and go to state 245
    "int64"                           shift, and go to state 247
    "uint64"                          shift, and go to state 248
    "double"                          shift, and go to state 249
    "int8"                            shift, and go to state 252
    "uint8"                           shift, and go to state 253
    "int16"                           shift, and go to state 254
    "uint16"                          shift, and go to state 255
    "tuple"                           shift, and go to state 428
    "variant"                         shift, and go to state 429
    "generator"                       shift, and go to state 430
    "++"                              shift, and go to state 431
    "--"                              shift, and go to state 432
    "::"                              shift, and go to state 55
    "$$"                              shift, and go to state 433
    "$i"                              shift, and go to state 434
    "$v"                              shift, and go to state 435
    "$b"                              shift, and go to state 436
    "$a"                              shift, and go to state 437
    "$c"                              shift, and go to state 438
    "..."                             shift, and go to state 439
    "integer constant"                shift, and go to state 440
    "long integer constant"           shift, and go to state 441
    "unsigned integer constant"       shift, and go to state 442
    "unsigned long integer constant"  shift, and go to state 443
    "unsigned int8 constant"          shift, and go to state 444
    "floating point constant"         shift, and go to state 445
    "double constant"                 shift, and go to state 446
    "name"                            shift, and go to state 56
    "start of the string"             shift, and go to state 447
    "begin of code block"             shift, and go to state 448
    '-'                               shift, and go to state 449
    '+'                               shift, and go to state 450
    '*'                               shift, and go to state 451
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 452
    '!'                               shift, and go to state 453
    '['                               shift, and go to state 454
    '('                               shift, and go to state 455
    '$'                               shift, and go to state 456
    '@'                               shift, and go to state 457

    $default  reduce using rule 241 (optional_expr_list)

    string_builder          go to state 458
    expr_reader             go to state 459
    expr_call_pipe          go to state 460
    optional_expr_list      go to state 663
    name_in_namespace       go to state 461
    expr_new                go to state 462
    expr_cast               go to state 463
    expr_type_decl          go to state 464
    expr_type_info          go to state 465
    expr_list               go to state 664
    block_or_lambda         go to state 466
    expr_full_block         go to state 467
    expr_numeric_const      go to state 468
    expr_named_call         go to state 469
    expr_method_call        go to state 470
    func_addr_expr          go to state 471
    expr_field              go to state 472
    expr_call               go to state 473
    expr                    go to state 600
    expr_mtag               go to state 475
    basic_type_declaration  go to state 476
    make_decl               go to state 477
    make_struct_decl        go to state 478
    make_tuple_call         go to state 479
    make_dim_decl           go to state 480
    make_table_decl         go to state 481
    array_comprehension     go to state 482


State 498

  668 type_declaration_no_options_no_dim: type_declaration_no_options_no_dim "==" "const" .

    $default  reduce using rule 668 (type_declaration_no_options_no_dim)


State 499

  669 type_declaration_no_options_no_dim: type_declaration_no_options_no_dim "==" '&' .

    $default  reduce using rule 669 (type_declaration_no_options_no_dim)


State 500

  662 type_declaration_no_options_no_dim: type_declaration_no_options_no_dim '-' "const" .

    $default  reduce using rule 662 (type_declaration_no_options_no_dim)


State 501

  664 type_declaration_no_options_no_dim: type_declaration_no_options_no_dim '-' '&' .

    $default  reduce using rule 664 (type_declaration_no_options_no_dim)


State 502

  659 type_declaration_no_options_no_dim: type_declaration_no_options_no_dim '-' '[' . ']'

    ']'  shift, and go to state 665


State 503

  667 type_declaration_no_options_no_dim: type_declaration_no_options_no_dim '-' '#' .

    $default  reduce using rule 667 (type_declaration_no_options_no_dim)


State 504

  643 dim_list: '[' ']' .

    $default  reduce using rule 643 (dim_list)


State 505

  347 expr_method_call: expr . "->" "name" '(' ')'
  348                 | expr . "->" "name" '(' expr_list ')'
  358 expr_field: expr . '.' "name"
  359           | expr . '.' '.' "name"
  360           | expr . '.' "name" '(' ')'
  361           | expr . '.' "name" '(' expr_list ')'
  362           | expr . '.' basic_type_declaration '(' ')'
  363           | expr . '.' basic_type_declaration '(' expr_list ')'
  366           | expr . '.' $@21 error $@22
  388 expr: expr . "<<" expr
  389     | expr . ">>" expr
  390     | expr . "<<<" expr
  391     | expr . ">>>" expr
  392     | expr . '+' expr
  393     | expr . '-' expr
  394     | expr . '*' expr
  395     | expr . '/' expr
  396     | expr . '%' expr
  397     | expr . '<' expr
  398     | expr . '>' expr
  399     | expr . "==" expr
  400     | expr . "!=" expr
  401     | expr . "<=" expr
  402     | expr . ">=" expr
  403     | expr . '&' expr
  404     | expr . '|' expr
  405     | expr . '^' expr
  406     | expr . "&&" expr
  407     | expr . "||" expr
  408     | expr . "^^" expr
  409     | expr . ".." expr
  412     | expr . "++"
  413     | expr . "--"
  415     | expr . '[' expr ']'
  416     | expr . '.' '[' expr ']'
  417     | expr . "?[" expr ']'
  418     | expr . '.' "?[" expr ']'
  419     | expr . "?." "name"
  420     | expr . '.' "?." "name"
  429     | expr . "??" expr
  430     | expr . '?' expr ':' expr
  433     | expr . "is" "type" '<' $@23 type_declaration_no_options '>' $@24
  434     | expr . "is" basic_type_declaration
  435     | expr . "is" "name"
  436     | expr . "as" "name"
  439     | expr . "as" "type" '<' $@25 type_declaration '>' $@26
  440     | expr . "as" basic_type_declaration
  441     | expr . '?' "as" "name"
  444     | expr . '?' "as" "type" '<' $@27 type_declaration '>' $@28
  445     | expr . '?' "as" basic_type_declaration
  453     | expr . "<|" expr
  454     | expr . "|>" expr
  455     | expr . "|>" basic_type_declaration
  466 expr_mtag: expr . '.' "$f" '(' expr ')'
  467          | expr . "?." "$f" '(' expr ')'
  468          | expr . '.' '.' "$f" '(' expr ')'
  469          | expr . '.' "?." "$f" '(' expr ')'
  470          | expr . "as" "$f" '(' expr ')'
  471          | expr . '?' "as" "$f" '(' expr ')'
  472          | expr . "is" "$f" '(' expr ')'
  642 dim_list: '[' expr . ']'

    "is"   shift, and go to state 609
    "as"   shift, and go to state 610
    "<<"   shift, and go to state 611
    ">>"   shift, and go to state 612
    "++"   shift, and go to state 613
    "--"   shift, and go to state 614
    "<="   shift, and go to state 615
    ">="   shift, and go to state 616
    "=="   shift, and go to state 617
    "!="   shift, and go to state 618
    "->"   shift, and go to state 619
    "??"   shift, and go to state 620
    "?."   shift, and go to state 621
    "?["   shift, and go to state 622
    "<|"   shift, and go to state 623
    "|>"   shift, and go to state 624
    "<<<"  shift, and go to state 625
    ">>>"  shift, and go to state 626
    "&&"   shift, and go to state 627
    "||"   shift, and go to state 628
    "^^"   shift, and go to state 629
    ".."   shift, and go to state 630
    '?'    shift, and go to state 631
    '|'    shift, and go to state 632
    '^'    shift, and go to state 633
    '&'    shift, and go to state 634
    '<'    shift, and go to state 635
    '>'    shift, and go to state 636
    '-'    shift, and go to state 637
    '+'    shift, and go to state 638
    '*'    shift, and go to state 639
    '/'    shift, and go to state 640
    '%'    shift, and go to state 641
    '.'    shift, and go to state 642
    '['    shift, and go to state 643
    ']'    shift, and go to state 666


State 506

  644 dim_list: dim_list '[' . expr ']'
  645         | dim_list '[' . ']'

    "struct"                          shift, and go to state 409
    "class"                           shift, and go to state 410
    "true"                            shift, and go to state 411
    "false"                           shift, and go to state 412
    "new"                             shift, and go to state 413
    "typeinfo"                        shift, and go to state 414
    "type"                            shift, and go to state 415
    "array"                           shift, and go to state 416
    "null"                            shift, and go to state 417
    "table"                           shift, and go to state 418
    "deref"                           shift, and go to state 419
    "cast"                            shift, and go to state 420
    "upcast"                          shift, and go to state 421
    "addr"                            shift, and go to state 422
    "reinterpret"                     shift, and go to state 423
    "unsafe"                          shift, and go to state 424
    "fixed_array"                     shift, and go to state 425
    "default"                         shift, and go to state 426
    "bool"                            shift, and go to state 225
    "void"                            shift, and go to state 226
    "string"                          shift, and go to state 227
    "int"                             shift, and go to state 229
    "int2"                            shift, and go to state 230
    "int3"                            shift, and go to state 231
    "int4"                            shift, and go to state 232
    "uint"                            shift, and go to state 233
    "bitfield"                        shift, and go to state 427
    "uint2"                           shift, and go to state 235
    "uint3"                           shift, and go to state 236
    "uint4"                           shift, and go to state 237
    "float"                           shift, and go to state 238
    "float2"                          shift, and go to state 239
    "float3"                          shift, and go to state 240
    "float4"                          shift, and go to state 241
    "range"                           shift, and go to state 242
    "urange"                          shift, and go to state 243
    "range64"                         shift, and go to state 244
    "urange64"                        shift, and go to state 245
    "int64"                           shift, and go to state 247
    "uint64"                          shift, and go to state 248
    "double"                          shift, and go to state 249
    "int8"                            shift, and go to state 252
    "uint8"                           shift, and go to state 253
    "int16"                           shift, and go to state 254
    "uint16"                          shift, and go to state 255
    "tuple"                           shift, and go to state 428
    "variant"                         shift, and go to state 429
    "generator"                       shift, and go to state 430
    "++"                              shift, and go to state 431
    "--"                              shift, and go to state 432
    "::"                              shift, and go to state 55
    "$$"                              shift, and go to state 433
    "$i"                              shift, and go to state 434
    "$v"                              shift, and go to state 435
    "$b"                              shift, and go to state 436
    "$a"                              shift, and go to state 437
    "$c"                              shift, and go to state 438
    "..."                             shift, and go to state 439
    "integer constant"                shift, and go to state 440
    "long integer constant"           shift, and go to state 441
    "unsigned integer constant"       shift, and go to state 442
    "unsigned long integer constant"  shift, and go to state 443
    "unsigned int8 constant"          shift, and go to state 444
    "floating point constant"         shift, and go to state 445
    "double constant"                 shift, and go to state 446
    "name"                            shift, and go to state 56
    "start of the string"             shift, and go to state 447
    "begin of code block"             shift, and go to state 448
    '-'                               shift, and go to state 449
    '+'                               shift, and go to state 450
    '*'                               shift, and go to state 451
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 452
    '!'                               shift, and go to state 453
    '['                               shift, and go to state 454
    ']'                               shift, and go to state 667
    '('                               shift, and go to state 455
    '$'                               shift, and go to state 456
    '@'                               shift, and go to state 457

    string_builder          go to state 458
    expr_reader             go to state 459
    expr_call_pipe          go to state 460
    name_in_namespace       go to state 461
    expr_new                go to state 462
    expr_cast               go to state 463
    expr_type_decl          go to state 464
    expr_type_info          go to state 465
    block_or_lambda         go to state 466
    expr_full_block         go to state 467
    expr_numeric_const      go to state 468
    expr_named_call         go to state 469
    expr_method_call        go to state 470
    func_addr_expr          go to state 471
    expr_field              go to state 472
    expr_call               go to state 473
    expr                    go to state 668
    expr_mtag               go to state 475
    basic_type_declaration  go to state 476
    make_decl               go to state 477
    make_struct_decl        go to state 478
    make_tuple_call         go to state 479
    make_dim_decl           go to state 480
    make_table_decl         go to state 481
    array_comprehension     go to state 482


State 507

  713 type_declaration: type_declaration '|' '#' .

    $default  reduce using rule 713 (type_declaration)


State 508

  712 type_declaration: type_declaration '|' type_declaration_no_options .

    $default  reduce using rule 712 (type_declaration)


State 509

  634 bitfield_alias_bits: bitfield_alias_bits ',' . "name"
  794 optional_comma: ',' .

    "name"  shift, and go to state 669

    $default  reduce using rule 794 (optional_comma)


State 510

  725 bitfield_alias_declaration: "bitfield" optional_public_or_private_alias "name" $@74 "begin of code block" $@75 bitfield_alias_bits optional_comma . $@76 "end of code block"

    $default  reduce using rule 724 ($@76)

    $@76  go to state 670


State 511

  247 name_in_namespace: "name" .
  248                  | "name" . "::" "name"
  499 tuple_type: "name" . ':' type_declaration

    "::"  shift, and go to state 95
    ':'   shift, and go to state 671

    $default  reduce using rule 247 (name_in_namespace)


State 512

  639 c_or_s: "end of expression" .

    $default  reduce using rule 639 (c_or_s)


State 513

  638 c_or_s: ',' .

    $default  reduce using rule 638 (c_or_s)


State 514

  504 tuple_alias_type_list: tuple_alias_type_list tuple_type . c_or_s

    "end of expression"  shift, and go to state 512
    ','                  shift, and go to state 513

    c_or_s  go to state 672


State 515

  503 tuple_alias_type_list: tuple_alias_type_list c_or_s .

    $default  reduce using rule 503 (tuple_alias_type_list)


State 516

  498 tuple_type: type_declaration .
  712 type_declaration: type_declaration . '|' type_declaration_no_options
  713                 | type_declaration . '|' '#'

    '|'  shift, and go to state 375

    $default  reduce using rule 498 (tuple_type)


State 517

  717 tuple_alias_declaration: "tuple" optional_public_or_private_alias "name" $@68 "begin of code block" $@69 tuple_alias_type_list $@70 . "end of code block"

    "end of code block"  shift, and go to state 673


State 518

  505 variant_type: "name" . ':' type_declaration

    ':'  shift, and go to state 674


State 519

  510 variant_alias_type_list: variant_alias_type_list variant_type . c_or_s

    "end of expression"  shift, and go to state 512
    ','                  shift, and go to state 513

    c_or_s  go to state 675


State 520

  509 variant_alias_type_list: variant_alias_type_list c_or_s .

    $default  reduce using rule 509 (variant_alias_type_list)


State 521

  721 variant_alias_declaration: "variant" optional_public_or_private_alias "name" $@71 "begin of code block" $@72 variant_alias_type_list $@73 . "end of code block"

    "end of code block"  shift, and go to state 676


State 522

  179 function_name: "operator" '?' "as" "name" .

    $default  reduce using rule 179 (function_name)


State 523

  169 function_name: "operator" '.' "name" ":=" .

    $default  reduce using rule 169 (function_name)


State 524

  495 function_argument_declaration: "$a" '(' . expr ')'

    "struct"                          shift, and go to state 409
    "class"                           shift, and go to state 410
    "true"                            shift, and go to state 411
    "false"                           shift, and go to state 412
    "new"                             shift, and go to state 413
    "typeinfo"                        shift, and go to state 414
    "type"                            shift, and go to state 415
    "array"                           shift, and go to state 416
    "null"                            shift, and go to state 417
    "table"                           shift, and go to state 418
    "deref"                           shift, and go to state 419
    "cast"                            shift, and go to state 420
    "upcast"                          shift, and go to state 421
    "addr"                            shift, and go to state 422
    "reinterpret"                     shift, and go to state 423
    "unsafe"                          shift, and go to state 424
    "fixed_array"                     shift, and go to state 425
    "default"                         shift, and go to state 426
    "bool"                            shift, and go to state 225
    "void"                            shift, and go to state 226
    "string"                          shift, and go to state 227
    "int"                             shift, and go to state 229
    "int2"                            shift, and go to state 230
    "int3"                            shift, and go to state 231
    "int4"                            shift, and go to state 232
    "uint"                            shift, and go to state 233
    "bitfield"                        shift, and go to state 427
    "uint2"                           shift, and go to state 235
    "uint3"                           shift, and go to state 236
    "uint4"                           shift, and go to state 237
    "float"                           shift, and go to state 238
    "float2"                          shift, and go to state 239
    "float3"                          shift, and go to state 240
    "float4"                          shift, and go to state 241
    "range"                           shift, and go to state 242
    "urange"                          shift, and go to state 243
    "range64"                         shift, and go to state 244
    "urange64"                        shift, and go to state 245
    "int64"                           shift, and go to state 247
    "uint64"                          shift, and go to state 248
    "double"                          shift, and go to state 249
    "int8"                            shift, and go to state 252
    "uint8"                           shift, and go to state 253
    "int16"                           shift, and go to state 254
    "uint16"                          shift, and go to state 255
    "tuple"                           shift, and go to state 428
    "variant"                         shift, and go to state 429
    "generator"                       shift, and go to state 430
    "++"                              shift, and go to state 431
    "--"                              shift, and go to state 432
    "::"                              shift, and go to state 55
    "$$"                              shift, and go to state 433
    "$i"                              shift, and go to state 434
    "$v"                              shift, and go to state 435
    "$b"                              shift, and go to state 436
    "$a"                              shift, and go to state 437
    "$c"                              shift, and go to state 438
    "..."                             shift, and go to state 439
    "integer constant"                shift, and go to state 440
    "long integer constant"           shift, and go to state 441
    "unsigned integer constant"       shift, and go to state 442
    "unsigned long integer constant"  shift, and go to state 443
    "unsigned int8 constant"          shift, and go to state 444
    "floating point constant"         shift, and go to state 445
    "double constant"                 shift, and go to state 446
    "name"                            shift, and go to state 56
    "start of the string"             shift, and go to state 447
    "begin of code block"             shift, and go to state 448
    '-'                               shift, and go to state 449
    '+'                               shift, and go to state 450
    '*'                               shift, and go to state 451
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 452
    '!'                               shift, and go to state 453
    '['                               shift, and go to state 454
    '('                               shift, and go to state 455
    '$'                               shift, and go to state 456
    '@'                               shift, and go to state 457

    string_builder          go to state 458
    expr_reader             go to state 459
    expr_call_pipe          go to state 460
    name_in_namespace       go to state 461
    expr_new                go to state 462
    expr_cast               go to state 463
    expr_type_decl          go to state 464
    expr_type_info          go to state 465
    block_or_lambda         go to state 466
    expr_full_block         go to state 467
    expr_numeric_const      go to state 468
    expr_named_call         go to state 469
    expr_method_call        go to state 470
    func_addr_expr          go to state 471
    expr_field              go to state 472
    expr_call               go to state 473
    expr                    go to state 677
    expr_mtag               go to state 475
    basic_type_declaration  go to state 476
    make_decl               go to state 477
    make_struct_decl        go to state 478
    make_tuple_call         go to state 479
    make_dim_decl           go to state 480
    make_table_decl         go to state 481
    array_comprehension     go to state 482


State 525

  270 kwd_let_var_or_nothing: "let" .

    $default  reduce using rule 270 (kwd_let_var_or_nothing)


State 526

  271 kwd_let_var_or_nothing: "var" .

    $default  reduce using rule 271 (kwd_let_var_or_nothing)


State 527

  494 function_argument_declaration: optional_field_annotation kwd_let_var_or_nothing . variable_declaration

    "$i"    shift, and go to state 678
    "name"  shift, and go to state 679

    variable_declaration         go to state 680
    variable_name_with_pos_list  go to state 681


State 528

  497 function_argument_list: function_argument_list "end of expression" . function_argument_declaration

    "$a"  shift, and go to state 387
    '@'   shift, and go to state 211

    $default  reduce using rule 474 (optional_field_annotation)

    metadata_argument_list         go to state 212
    optional_field_annotation      go to state 389
    function_argument_declaration  go to state 682


State 529

  117 optional_function_argument_list: '(' function_argument_list ')' .

    $default  reduce using rule 117 (optional_function_argument_list)


State 530

  119 optional_function_type: ':' type_declaration .
  712 type_declaration: type_declaration . '|' type_declaration_no_options
  713                 | type_declaration . '|' '#'

    '|'  shift, and go to state 375

    $default  reduce using rule 119 (optional_function_type)


State 531

  218 expression_block: $@5 "begin of code block" expressions . $@6 "end of code block" expression_block_finally
  239 expressions: expressions . expression_any
  240            | expressions . error

    error                             shift, and go to state 683
    "struct"                          shift, and go to state 409
    "class"                           shift, and go to state 410
    "let"                             shift, and go to state 3
    "while"                           shift, and go to state 684
    "if"                              shift, and go to state 685
    "static_if"                       shift, and go to state 686
    "for"                             shift, and go to state 687
    "true"                            shift, and go to state 411
    "false"                           shift, and go to state 412
    "new"                             shift, and go to state 413
    "typeinfo"                        shift, and go to state 414
    "type"                            shift, and go to state 415
    "array"                           shift, and go to state 416
    "return"                          shift, and go to state 688
    "null"                            shift, and go to state 417
    "break"                           shift, and go to state 689
    "try"                             shift, and go to state 690
    "table"                           shift, and go to state 418
    "delete"                          shift, and go to state 691
    "deref"                           shift, and go to state 419
    "with"                            shift, and go to state 692
    "assume"                          shift, and go to state 693
    "cast"                            shift, and go to state 420
    "upcast"                          shift, and go to state 421
    "var"                             shift, and go to state 8
    "addr"                            shift, and go to state 422
    "continue"                        shift, and go to state 694
    "pass"                            shift, and go to state 695
    "reinterpret"                     shift, and go to state 423
    "label"                           shift, and go to state 696
    "goto"                            shift, and go to state 697
    "unsafe"                          shift, and go to state 698
    "fixed_array"                     shift, and go to state 425
    "default"                         shift, and go to state 426
    "bool"                            shift, and go to state 225
    "void"                            shift, and go to state 226
    "string"                          shift, and go to state 227
    "int"                             shift, and go to state 229
    "int2"                            shift, and go to state 230
    "int3"                            shift, and go to state 231
    "int4"                            shift, and go to state 232
    "uint"                            shift, and go to state 233
    "bitfield"                        shift, and go to state 427
    "uint2"                           shift, and go to state 235
    "uint3"                           shift, and go to state 236
    "uint4"                           shift, and go to state 237
    "float"                           shift, and go to state 238
    "float2"                          shift, and go to state 239
    "float3"                          shift, and go to state 240
    "float4"                          shift, and go to state 241
    "range"                           shift, and go to state 242
    "urange"                          shift, and go to state 243
    "range64"                         shift, and go to state 244
    "urange64"                        shift, and go to state 245
    "int64"                           shift, and go to state 247
    "uint64"                          shift, and go to state 248
    "double"                          shift, and go to state 249
    "int8"                            shift, and go to state 252
    "uint8"                           shift, and go to state 253
    "int16"                           shift, and go to state 254
    "uint16"                          shift, and go to state 255
    "tuple"                           shift, and go to state 428
    "variant"                         shift, and go to state 429
    "generator"                       shift, and go to state 430
    "yield"                           shift, and go to state 699
    "++"                              shift, and go to state 431
    "--"                              shift, and go to state 432
    "::"                              shift, and go to state 55
    "$$"                              shift, and go to state 433
    "$i"                              shift, and go to state 434
    "$v"                              shift, and go to state 435
    "$b"                              shift, and go to state 436
    "$a"                              shift, and go to state 437
    "$c"                              shift, and go to state 438
    "..."                             shift, and go to state 439
    "integer constant"                shift, and go to state 440
    "long integer constant"           shift, and go to state 441
    "unsigned integer constant"       shift, and go to state 442
    "unsigned long integer constant"  shift, and go to state 443
    "unsigned int8 constant"          shift, and go to state 444
    "floating point constant"         shift, and go to state 445
    "double constant"                 shift, and go to state 446
    "name"                            shift, and go to state 56
    "start of the string"             shift, and go to state 447
    "begin of code block"             shift, and go to state 448
    "end of expression"               shift, and go to state 700
    '-'                               shift, and go to state 449
    '+'                               shift, and go to state 450
    '*'                               shift, and go to state 451
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 452
    '!'                               shift, and go to state 453
    '['                               shift, and go to state 454
    '('                               shift, and go to state 455
    '$'                               shift, and go to state 456
    '@'                               shift, and go to state 457

    "end of code block"  reduce using rule 217 ($@6)

    string_builder           go to state 458
    expr_reader              go to state 459
    expression_label         go to state 701
    expression_goto          go to state 702
    if_or_static_if          go to state 703
    expression_if_one_liner  go to state 704
    expression_if_then_else  go to state 705
    expression_for_loop      go to state 706
    expression_unsafe        go to state 707
    expression_while_loop    go to state 708
    expression_with          go to state 709
    expression_with_alias    go to state 710
    $@6                      go to state 711
    expr_call_pipe           go to state 460
    expression_any           go to state 712
    name_in_namespace        go to state 461
    expression_delete        go to state 713
    expr_new                 go to state 462
    expression_break         go to state 714
    expression_continue      go to state 715
    expression_return        go to state 716
    expression_yield         go to state 717
    expression_try_catch     go to state 718
    kwd_let                  go to state 719
    expression_let           go to state 720
    expr_cast                go to state 463
    expr_type_decl           go to state 464
    expr_type_info           go to state 465
    block_or_lambda          go to state 466
    expr_full_block          go to state 467
    expr_numeric_const       go to state 468
    expr_assign              go to state 721
    expr_named_call          go to state 469
    expr_method_call         go to state 470
    func_addr_expr           go to state 471
    expr_field               go to state 472
    expr_call                go to state 473
    expr                     go to state 722
    expr_mtag                go to state 475
    basic_type_declaration   go to state 476
    make_decl                go to state 477
    make_struct_decl         go to state 478
    make_tuple_call          go to state 479
    make_dim_decl            go to state 480
    make_table_decl          go to state 481
    array_comprehension      go to state 482


State 532

  551 enum_expression: "name" .
  552                | "name" . '=' expr

    '='  shift, and go to state 723

    $default  reduce using rule 551 (enum_expression)


State 533

  554 enum_list: enum_expression .

    $default  reduce using rule 554 (enum_list)


State 534

  555 enum_list: enum_list . ',' enum_expression
  570 enum_declaration: optional_annotation_list "enum" optional_public_or_private_enum enum_name optional_enum_basic_type_declaration "begin of code block" $@35 enum_list . optional_comma $@36 "end of code block"

    ','  shift, and go to state 724

    $default  reduce using rule 793 (optional_comma)

    optional_comma  go to state 725


State 535

  572 optional_structure_parent: ':' name_in_namespace .

    $default  reduce using rule 572 (optional_structure_parent)


State 536

  489 struct_variable_declaration_list: struct_variable_declaration_list . $@29 structure_variable_declaration "end of expression"
  491                                 | struct_variable_declaration_list . optional_annotation_list "def" optional_public_or_private_member_variable "abstract" optional_constant $@30 function_declaration_header "end of expression"
  493                                 | struct_variable_declaration_list . optional_annotation_list "def" optional_public_or_private_member_variable optional_static_member_variable optional_override optional_constant $@31 function_declaration_header expression_block
  582 optional_struct_variable_declaration_list: "begin of code block" struct_variable_declaration_list . "end of code block"

    "end of code block"  shift, and go to state 726
    '['                  shift, and go to state 15

    "def"     reduce using rule 113 (optional_annotation_list)
    $default  reduce using rule 488 ($@29)

    optional_annotation_list  go to state 727
    $@29                      go to state 728


State 537

  524 let_variable_name_with_pos_list: "$i" . '(' expr ')'

    '('  shift, and go to state 729


State 538

  523 let_variable_name_with_pos_list: "name" .
  525                                | "name" . "aka" "name"

    "aka"  shift, and go to state 730

    $default  reduce using rule 523 (let_variable_name_with_pos_list)


State 539

  526 let_variable_name_with_pos_list: let_variable_name_with_pos_list . ',' "name"
  527                                | let_variable_name_with_pos_list . ',' "name" "aka" "name"
  533 let_variable_declaration: let_variable_name_with_pos_list . ':' type_declaration_no_options "end of expression"
  534                         | let_variable_name_with_pos_list . ':' type_declaration_no_options copy_or_move_or_clone expr "end of expression"
  535                         | let_variable_name_with_pos_list . optional_ref copy_or_move_or_clone expr "end of expression"

    ','  shift, and go to state 731
    ':'  shift, and go to state 732
    '&'  shift, and go to state 404

    $default  reduce using rule 521 (optional_ref)

    optional_ref  go to state 733


State 540

  547 global_variable_declaration_list: global_variable_declaration_list $@32 optional_field_annotation let_variable_declaration .

    $default  reduce using rule 547 (global_variable_declaration_list)


State 541

  529 global_let_variable_name_with_pos_list: global_let_variable_name_with_pos_list ',' "name" .

    $default  reduce using rule 529 (global_let_variable_name_with_pos_list)


State 542

  536 global_let_variable_declaration: global_let_variable_name_with_pos_list ':' type_declaration_no_options . "end of expression"
  537                                | global_let_variable_name_with_pos_list ':' type_declaration_no_options . copy_or_move_or_clone expr "end of expression"

    "<-"                 shift, and go to state 543
    ":="                 shift, and go to state 544
    "end of expression"  shift, and go to state 734
    '='                  shift, and go to state 545

    copy_or_move_or_clone  go to state 735


State 543

  519 copy_or_move_or_clone: "<-" .

    $default  reduce using rule 519 (copy_or_move_or_clone)


State 544

  520 copy_or_move_or_clone: ":=" .

    $default  reduce using rule 520 (copy_or_move_or_clone)


State 545

  518 copy_or_move_or_clone: '=' .

    $default  reduce using rule 518 (copy_or_move_or_clone)


State 546

  538 global_let_variable_declaration: global_let_variable_name_with_pos_list optional_ref copy_or_move_or_clone . expr "end of expression"

    "struct"                          shift, and go to state 409
    "class"                           shift, and go to state 410
    "true"                            shift, and go to state 411
    "false"                           shift, and go to state 412
    "new"                             shift, and go to state 413
    "typeinfo"                        shift, and go to state 414
    "type"                            shift, and go to state 415
    "array"                           shift, and go to state 416
    "null"                            shift, and go to state 417
    "table"                           shift, and go to state 418
    "deref"                           shift, and go to state 419
    "cast"                            shift, and go to state 420
    "upcast"                          shift, and go to state 421
    "addr"                            shift, and go to state 422
    "reinterpret"                     shift, and go to state 423
    "unsafe"                          shift, and go to state 424
    "fixed_array"                     shift, and go to state 425
    "default"                         shift, and go to state 426
    "bool"                            shift, and go to state 225
    "void"                            shift, and go to state 226
    "string"                          shift, and go to state 227
    "int"                             shift, and go to state 229
    "int2"                            shift, and go to state 230
    "int3"                            shift, and go to state 231
    "int4"                            shift, and go to state 232
    "uint"                            shift, and go to state 233
    "bitfield"                        shift, and go to state 427
    "uint2"                           shift, and go to state 235
    "uint3"                           shift, and go to state 236
    "uint4"                           shift, and go to state 237
    "float"                           shift, and go to state 238
    "float2"                          shift, and go to state 239
    "float3"                          shift, and go to state 240
    "float4"                          shift, and go to state 241
    "range"                           shift, and go to state 242
    "urange"                          shift, and go to state 243
    "range64"                         shift, and go to state 244
    "urange64"                        shift, and go to state 245
    "int64"                           shift, and go to state 247
    "uint64"                          shift, and go to state 248
    "double"                          shift, and go to state 249
    "int8"                            shift, and go to state 252
    "uint8"                           shift, and go to state 253
    "int16"                           shift, and go to state 254
    "uint16"                          shift, and go to state 255
    "tuple"                           shift, and go to state 428
    "variant"                         shift, and go to state 429
    "generator"                       shift, and go to state 430
    "++"                              shift, and go to state 431
    "--"                              shift, and go to state 432
    "::"                              shift, and go to state 55
    "$$"                              shift, and go to state 433
    "$i"                              shift, and go to state 434
    "$v"                              shift, and go to state 435
    "$b"                              shift, and go to state 436
    "$a"                              shift, and go to state 437
    "$c"                              shift, and go to state 438
    "..."                             shift, and go to state 439
    "integer constant"                shift, and go to state 440
    "long integer constant"           shift, and go to state 441
    "unsigned integer constant"       shift, and go to state 442
    "unsigned long integer constant"  shift, and go to state 443
    "unsigned int8 constant"          shift, and go to state 444
    "floating point constant"         shift, and go to state 445
    "double constant"                 shift, and go to state 446
    "name"                            shift, and go to state 56
    "start of the string"             shift, and go to state 447
    "begin of code block"             shift, and go to state 448
    '-'                               shift, and go to state 449
    '+'                               shift, and go to state 450
    '*'                               shift, and go to state 451
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 452
    '!'                               shift, and go to state 453
    '['                               shift, and go to state 454
    '('                               shift, and go to state 455
    '$'                               shift, and go to state 456
    '@'                               shift, and go to state 457

    string_builder          go to state 458
    expr_reader             go to state 459
    expr_call_pipe          go to state 460
    name_in_namespace       go to state 461
    expr_new                go to state 462
    expr_cast               go to state 463
    expr_type_decl          go to state 464
    expr_type_info          go to state 465
    block_or_lambda         go to state 466
    expr_full_block         go to state 467
    expr_numeric_const      go to state 468
    expr_named_call         go to state 469
    expr_method_call        go to state 470
    func_addr_expr          go to state 471
    expr_field              go to state 472
    expr_call               go to state 473
    expr                    go to state 736
    expr_mtag               go to state 475
    basic_type_declaration  go to state 476
    make_decl               go to state 477
    make_struct_decl        go to state 478
    make_tuple_call         go to state 479
    make_dim_decl           go to state 480
    make_table_decl         go to state 481
    array_comprehension     go to state 482


State 547

  654 type_declaration_no_options_no_dim: "type" '<' $@41 type_declaration . '>' $@42
  712 type_declaration: type_declaration . '|' type_declaration_no_options
  713                 | type_declaration . '|' '#'

    '|'  shift, and go to state 375
    '>'  shift, and go to state 737


State 548

  677 type_declaration_no_options_no_dim: "array" '<' $@46 type_declaration . '>' $@47
  712 type_declaration: type_declaration . '|' type_declaration_no_options
  713                 | type_declaration . '|' '#'

    '|'  shift, and go to state 375
    '>'  shift, and go to state 738


State 549

  680 type_declaration_no_options_no_dim: "table" '<' $@48 table_type_pair . '>' $@49

    '>'  shift, and go to state 739


State 550

  640 table_type_pair: type_declaration .
  641                | type_declaration . c_or_s type_declaration
  712 type_declaration: type_declaration . '|' type_declaration_no_options
  713                 | type_declaration . '|' '#'

    "end of expression"  shift, and go to state 512
    ','                  shift, and go to state 513
    '|'                  shift, and go to state 375

    $default  reduce using rule 640 (table_type_pair)

    c_or_s  go to state 740


State 551

  751 make_struct_decl: "struct" '<' . $@77 type_declaration_no_options '>' $@78 '(' use_initializer optional_make_struct_dim_decl ')'

    $default  reduce using rule 749 ($@77)

    $@77  go to state 741


State 552

  754 make_struct_decl: "class" '<' . $@79 type_declaration_no_options '>' $@80 '(' use_initializer optional_make_struct_dim_decl ')'

    $default  reduce using rule 752 ($@79)

    $@79  go to state 742


State 553

  254 new_type_declaration: '<' . $@7 type_declaration '>' $@8

    $default  reduce using rule 252 ($@7)

    $@7  go to state 743


State 554

  256 expr_new: "new" new_type_declaration .
  257         | "new" new_type_declaration . '(' use_initializer ')'
  258         | "new" new_type_declaration . '(' expr_list ')'
  259         | "new" new_type_declaration . '(' make_struct_single ')'
  260         | "new" new_type_declaration . '(' "uninitialized" make_struct_single ')'

    '('  shift, and go to state 744

    $default  reduce using rule 256 (expr_new)


State 555

  255 new_type_declaration: structure_type_declaration .

    $default  reduce using rule 255 (new_type_declaration)


State 556

  261 expr_new: "new" make_decl .

    $default  reduce using rule 261 (expr_new)


State 557

  296 expr_type_info: "typeinfo" name_in_namespace . '(' expr ')'
  297               | "typeinfo" name_in_namespace . '<' "name" '>' '(' expr ')'
  298               | "typeinfo" name_in_namespace . '<' "name" c_or_s "name" '>' '(' expr ')'

    '<'  shift, and go to state 745
    '('  shift, and go to state 746


State 558

  295 expr_type_decl: "type" '<' . $@15 type_declaration '>' $@16

    $default  reduce using rule 293 ($@15)

    $@15  go to state 747


State 559

  770 make_dim_decl: "array" "struct" . '<' $@87 type_declaration_no_options '>' $@88 '(' use_initializer optional_make_struct_dim_decl ')'

    '<'  shift, and go to state 748


State 560

  773 make_dim_decl: "array" "tuple" . '<' $@89 type_declaration_no_options '>' $@90 '(' use_initializer optional_make_struct_dim_decl ')'

    '<'  shift, and go to state 749


State 561

  776 make_dim_decl: "array" "variant" . '<' $@91 type_declaration_no_options '>' $@92 '(' make_variant_dim ')'

    '<'  shift, and go to state 750


State 562

  780 make_dim_decl: "array" '<' . $@93 type_declaration_no_options '>' $@94 '(' optional_expr_list ')'

    $default  reduce using rule 778 ($@93)

    $@93  go to state 751


State 563

  777 make_dim_decl: "array" '(' . expr_list optional_comma ')'

    "struct"                          shift, and go to state 409
    "class"                           shift, and go to state 410
    "true"                            shift, and go to state 411
    "false"                           shift, and go to state 412
    "new"                             shift, and go to state 413
    "typeinfo"                        shift, and go to state 414
    "type"                            shift, and go to state 415
    "array"                           shift, and go to state 416
    "null"                            shift, and go to state 417
    "table"                           shift, and go to state 418
    "deref"                           shift, and go to state 419
    "cast"                            shift, and go to state 420
    "upcast"                          shift, and go to state 421
    "addr"                            shift, and go to state 422
    "reinterpret"                     shift, and go to state 423
    "unsafe"                          shift, and go to state 424
    "fixed_array"                     shift, and go to state 425
    "default"                         shift, and go to state 426
    "bool"                            shift, and go to state 225
    "void"                            shift, and go to state 226
    "string"                          shift, and go to state 227
    "int"                             shift, and go to state 229
    "int2"                            shift, and go to state 230
    "int3"                            shift, and go to state 231
    "int4"                            shift, and go to state 232
    "uint"                            shift, and go to state 233
    "bitfield"                        shift, and go to state 427
    "uint2"                           shift, and go to state 235
    "uint3"                           shift, and go to state 236
    "uint4"                           shift, and go to state 237
    "float"                           shift, and go to state 238
    "float2"                          shift, and go to state 239
    "float3"                          shift, and go to state 240
    "float4"                          shift, and go to state 241
    "range"                           shift, and go to state 242
    "urange"                          shift, and go to state 243
    "range64"                         shift, and go to state 244
    "urange64"                        shift, and go to state 245
    "int64"                           shift, and go to state 247
    "uint64"                          shift, and go to state 248
    "double"                          shift, and go to state 249
    "int8"                            shift, and go to state 252
    "uint8"                           shift, and go to state 253
    "int16"                           shift, and go to state 254
    "uint16"                          shift, and go to state 255
    "tuple"                           shift, and go to state 428
    "variant"                         shift, and go to state 429
    "generator"                       shift, and go to state 430
    "++"                              shift, and go to state 431
    "--"                              shift, and go to state 432
    "::"                              shift, and go to state 55
    "$$"                              shift, and go to state 433
    "$i"                              shift, and go to state 434
    "$v"                              shift, and go to state 435
    "$b"                              shift, and go to state 436
    "$a"                              shift, and go to state 437
    "$c"                              shift, and go to state 438
    "..."                             shift, and go to state 439
    "integer constant"                shift, and go to state 440
    "long integer constant"           shift, and go to state 441
    "unsigned integer constant"       shift, and go to state 442
    "unsigned long integer constant"  shift, and go to state 443
    "unsigned int8 constant"          shift, and go to state 444
    "floating point constant"         shift, and go to state 445
    "double constant"                 shift, and go to state 446
    "name"                            shift, and go to state 56
    "start of the string"             shift, and go to state 447
    "begin of code block"             shift, and go to state 448
    '-'                               shift, and go to state 449
    '+'                               shift, and go to state 450
    '*'                               shift, and go to state 451
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 452
    '!'                               shift, and go to state 453
    '['                               shift, and go to state 454
    '('                               shift, and go to state 455
    '$'                               shift, and go to state 456
    '@'                               shift, and go to state 457

    string_builder          go to state 458
    expr_reader             go to state 459
    expr_call_pipe          go to state 460
    name_in_namespace       go to state 461
    expr_new                go to state 462
    expr_cast               go to state 463
    expr_type_decl          go to state 464
    expr_type_info          go to state 465
    expr_list               go to state 752
    block_or_lambda         go to state 466
    expr_full_block         go to state 467
    expr_numeric_const      go to state 468
    expr_named_call         go to state 469
    expr_method_call        go to state 470
    func_addr_expr          go to state 471
    expr_field              go to state 472
    expr_call               go to state 473
    expr                    go to state 600
    expr_mtag               go to state 475
    basic_type_declaration  go to state 476
    make_decl               go to state 477
    make_struct_decl        go to state 478
    make_tuple_call         go to state 479
    make_dim_decl           go to state 480
    make_table_decl         go to state 481
    array_comprehension     go to state 482


State 564

  789 make_table_decl: "table" '<' . type_declaration_no_options '>' '(' optional_expr_map_tuple_list ')'
  790                | "table" '<' . type_declaration_no_options c_or_s type_declaration_no_options '>' '(' optional_expr_map_tuple_list ')'

    "type"       shift, and go to state 219
    "array"      shift, and go to state 220
    "table"      shift, and go to state 221
    "typedecl"   shift, and go to state 222
    "iterator"   shift, and go to state 223
    "smart_ptr"  shift, and go to state 224
    "bool"       shift, and go to state 225
    "void"       shift, and go to state 226
    "string"     shift, and go to state 227
    "auto"       shift, and go to state 228
    "int"        shift, and go to state 229
    "int2"       shift, and go to state 230
    "int3"       shift, and go to state 231
    "int4"       shift, and go to state 232
    "uint"       shift, and go to state 233
    "bitfield"   shift, and go to state 234
    "uint2"      shift, and go to state 235
    "uint3"      shift, and go to state 236
    "uint4"      shift, and go to state 237
    "float"      shift, and go to state 238
    "float2"     shift, and go to state 239
    "float3"     shift, and go to state 240
    "float4"     shift, and go to state 241
    "range"      shift, and go to state 242
    "urange"     shift, and go to state 243
    "range64"    shift, and go to state 244
    "urange64"   shift, and go to state 245
    "block"      shift, and go to state 246
    "int64"      shift, and go to state 247
    "uint64"     shift, and go to state 248
    "double"     shift, and go to state 249
    "function"   shift, and go to state 250
    "lambda"     shift, and go to state 251
    "int8"       shift, and go to state 252
    "uint8"      shift, and go to state 253
    "int16"      shift, and go to state 254
    "uint16"     shift, and go to state 255
    "tuple"      shift, and go to state 256
    "variant"    shift, and go to state 257
    "::"         shift, and go to state 55
    "$t"         shift, and go to state 258
    "name"       shift, and go to state 56
    '$'          shift, and go to state 259

    name_in_namespace                   go to state 260
    basic_type_declaration              go to state 261
    structure_type_declaration          go to state 262
    auto_type_declaration               go to state 263
    bitfield_type_declaration           go to state 264
    type_declaration_no_options         go to state 753
    type_declaration_no_options_no_dim  go to state 266


State 565

  788 make_table_decl: "table" '(' . expr_map_tuple_list optional_comma ')'

    "struct"                          shift, and go to state 409
    "class"                           shift, and go to state 410
    "true"                            shift, and go to state 411
    "false"                           shift, and go to state 412
    "new"                             shift, and go to state 413
    "typeinfo"                        shift, and go to state 414
    "type"                            shift, and go to state 415
    "array"                           shift, and go to state 416
    "null"                            shift, and go to state 417
    "table"                           shift, and go to state 418
    "deref"                           shift, and go to state 419
    "cast"                            shift, and go to state 420
    "upcast"                          shift, and go to state 421
    "addr"                            shift, and go to state 422
    "reinterpret"                     shift, and go to state 423
    "unsafe"                          shift, and go to state 424
    "fixed_array"                     shift, and go to state 425
    "default"                         shift, and go to state 426
    "bool"                            shift, and go to state 225
    "void"                            shift, and go to state 226
    "string"                          shift, and go to state 227
    "int"                             shift, and go to state 229
    "int2"                            shift, and go to state 230
    "int3"                            shift, and go to state 231
    "int4"                            shift, and go to state 232
    "uint"                            shift, and go to state 233
    "bitfield"                        shift, and go to state 427
    "uint2"                           shift, and go to state 235
    "uint3"                           shift, and go to state 236
    "uint4"                           shift, and go to state 237
    "float"                           shift, and go to state 238
    "float2"                          shift, and go to state 239
    "float3"                          shift, and go to state 240
    "float4"                          shift, and go to state 241
    "range"                           shift, and go to state 242
    "urange"                          shift, and go to state 243
    "range64"                         shift, and go to state 244
    "urange64"                        shift, and go to state 245
    "int64"                           shift, and go to state 247
    "uint64"                          shift, and go to state 248
    "double"                          shift, and go to state 249
    "int8"                            shift, and go to state 252
    "uint8"                           shift, and go to state 253
    "int16"                           shift, and go to state 254
    "uint16"                          shift, and go to state 255
    "tuple"                           shift, and go to state 428
    "variant"                         shift, and go to state 429
    "generator"                       shift, and go to state 430
    "++"                              shift, and go to state 431
    "--"                              shift, and go to state 432
    "::"                              shift, and go to state 55
    "$$"                              shift, and go to state 433
    "$i"                              shift, and go to state 434
    "$v"                              shift, and go to state 435
    "$b"                              shift, and go to state 436
    "$a"                              shift, and go to state 437
    "$c"                              shift, and go to state 438
    "..."                             shift, and go to state 439
    "integer constant"                shift, and go to state 440
    "long integer constant"           shift, and go to state 441
    "unsigned integer constant"       shift, and go to state 442
    "unsigned long integer constant"  shift, and go to state 443
    "unsigned int8 constant"          shift, and go to state 444
    "floating point constant"         shift, and go to state 445
    "double constant"                 shift, and go to state 446
    "name"                            shift, and go to state 56
    "start of the string"             shift, and go to state 447
    "begin of code block"             shift, and go to state 448
    '-'                               shift, and go to state 449
    '+'                               shift, and go to state 450
    '*'                               shift, and go to state 451
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 452
    '!'                               shift, and go to state 453
    '['                               shift, and go to state 454
    '('                               shift, and go to state 455
    '$'                               shift, and go to state 456
    '@'                               shift, and go to state 457

    string_builder          go to state 458
    expr_reader             go to state 459
    expr_call_pipe          go to state 460
    name_in_namespace       go to state 461
    expr_new                go to state 462
    expr_cast               go to state 463
    expr_type_decl          go to state 464
    expr_type_info          go to state 465
    block_or_lambda         go to state 466
    expr_full_block         go to state 467
    expr_numeric_const      go to state 468
    expr_named_call         go to state 469
    expr_method_call        go to state 470
    func_addr_expr          go to state 471
    expr_field              go to state 472
    expr_call               go to state 473
    expr                    go to state 589
    expr_mtag               go to state 475
    basic_type_declaration  go to state 476
    make_decl               go to state 477
    make_struct_decl        go to state 478
    make_map_tuple          go to state 590
    make_tuple_call         go to state 479
    make_dim_decl           go to state 480
    expr_map_tuple_list     go to state 754
    make_table_decl         go to state 481
    array_comprehension     go to state 482


State 566

  424 expr: "deref" '(' . expr ')'

    "struct"                          shift, and go to state 409
    "class"                           shift, and go to state 410
    "true"                            shift, and go to state 411
    "false"                           shift, and go to state 412
    "new"                             shift, and go to state 413
    "typeinfo"                        shift, and go to state 414
    "type"                            shift, and go to state 415
    "array"                           shift, and go to state 416
    "null"                            shift, and go to state 417
    "table"                           shift, and go to state 418
    "deref"                           shift, and go to state 419
    "cast"                            shift, and go to state 420
    "upcast"                          shift, and go to state 421
    "addr"                            shift, and go to state 422
    "reinterpret"                     shift, and go to state 423
    "unsafe"                          shift, and go to state 424
    "fixed_array"                     shift, and go to state 425
    "default"                         shift, and go to state 426
    "bool"                            shift, and go to state 225
    "void"                            shift, and go to state 226
    "string"                          shift, and go to state 227
    "int"                             shift, and go to state 229
    "int2"                            shift, and go to state 230
    "int3"                            shift, and go to state 231
    "int4"                            shift, and go to state 232
    "uint"                            shift, and go to state 233
    "bitfield"                        shift, and go to state 427
    "uint2"                           shift, and go to state 235
    "uint3"                           shift, and go to state 236
    "uint4"                           shift, and go to state 237
    "float"                           shift, and go to state 238
    "float2"                          shift, and go to state 239
    "float3"                          shift, and go to state 240
    "float4"                          shift, and go to state 241
    "range"                           shift, and go to state 242
    "urange"                          shift, and go to state 243
    "range64"                         shift, and go to state 244
    "urange64"                        shift, and go to state 245
    "int64"                           shift, and go to state 247
    "uint64"                          shift, and go to state 248
    "double"                          shift, and go to state 249
    "int8"                            shift, and go to state 252
    "uint8"                           shift, and go to state 253
    "int16"                           shift, and go to state 254
    "uint16"                          shift, and go to state 255
    "tuple"                           shift, and go to state 428
    "variant"                         shift, and go to state 429
    "generator"                       shift, and go to state 430
    "++"                              shift, and go to state 431
    "--"                              shift, and go to state 432
    "::"                              shift, and go to state 55
    "$$"                              shift, and go to state 433
    "$i"                              shift, and go to state 434
    "$v"                              shift, and go to state 435
    "$b"                              shift, and go to state 436
    "$a"                              shift, and go to state 437
    "$c"                              shift, and go to state 438
    "..."                             shift, and go to state 439
    "integer constant"                shift, and go to state 440
    "long integer constant"           shift, and go to state 441
    "unsigned integer constant"       shift, and go to state 442
    "unsigned long integer constant"  shift, and go to state 443
    "unsigned int8 constant"          shift, and go to state 444
    "floating point constant"         shift, and go to state 445
    "double constant"                 shift, and go to state 446
    "name"                            shift, and go to state 56
    "start of the string"             shift, and go to state 447
    "begin of code block"             shift, and go to state 448
    '-'                               shift, and go to state 449
    '+'                               shift, and go to state 450
    '*'                               shift, and go to state 451
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 452
    '!'                               shift, and go to state 453
    '['                               shift, and go to state 454
    '('                               shift, and go to state 455
    '$'                               shift, and go to state 456
    '@'                               shift, and go to state 457

    string_builder          go to state 458
    expr_reader             go to state 459
    expr_call_pipe          go to state 460
    name_in_namespace       go to state 461
    expr_new                go to state 462
    expr_cast               go to state 463
    expr_type_decl          go to state 464
    expr_type_info          go to state 465
    block_or_lambda         go to state 466
    expr_full_block         go to state 467
    expr_numeric_const      go to state 468
    expr_named_call         go to state 469
    expr_method_call        go to state 470
    func_addr_expr          go to state 471
    expr_field              go to state 472
    expr_call               go to state 473
    expr                    go to state 755
    expr_mtag               go to state 475
    basic_type_declaration  go to state 476
    make_decl               go to state 477
    make_struct_decl        go to state 478
    make_tuple_call         go to state 479
    make_dim_decl           go to state 480
    make_table_decl         go to state 481
    array_comprehension     go to state 482


State 567

  286 expr_cast: "cast" '<' . $@9 type_declaration_no_options '>' $@10 expr

    $default  reduce using rule 284 ($@9)

    $@9  go to state 756


State 568

  289 expr_cast: "upcast" '<' . $@11 type_declaration_no_options '>' $@12 expr

    $default  reduce using rule 287 ($@11)

    $@11  go to state 757


State 569

  425 expr: "addr" '(' . expr ')'

    "struct"                          shift, and go to state 409
    "class"                           shift, and go to state 410
    "true"                            shift, and go to state 411
    "false"                           shift, and go to state 412
    "new"                             shift, and go to state 413
    "typeinfo"                        shift, and go to state 414
    "type"                            shift, and go to state 415
    "array"                           shift, and go to state 416
    "null"                            shift, and go to state 417
    "table"                           shift, and go to state 418
    "deref"                           shift, and go to state 419
    "cast"                            shift, and go to state 420
    "upcast"                          shift, and go to state 421
    "addr"                            shift, and go to state 422
    "reinterpret"                     shift, and go to state 423
    "unsafe"                          shift, and go to state 424
    "fixed_array"                     shift, and go to state 425
    "default"                         shift, and go to state 426
    "bool"                            shift, and go to state 225
    "void"                            shift, and go to state 226
    "string"                          shift, and go to state 227
    "int"                             shift, and go to state 229
    "int2"                            shift, and go to state 230
    "int3"                            shift, and go to state 231
    "int4"                            shift, and go to state 232
    "uint"                            shift, and go to state 233
    "bitfield"                        shift, and go to state 427
    "uint2"                           shift, and go to state 235
    "uint3"                           shift, and go to state 236
    "uint4"                           shift, and go to state 237
    "float"                           shift, and go to state 238
    "float2"                          shift, and go to state 239
    "float3"                          shift, and go to state 240
    "float4"                          shift, and go to state 241
    "range"                           shift, and go to state 242
    "urange"                          shift, and go to state 243
    "range64"                         shift, and go to state 244
    "urange64"                        shift, and go to state 245
    "int64"                           shift, and go to state 247
    "uint64"                          shift, and go to state 248
    "double"                          shift, and go to state 249
    "int8"                            shift, and go to state 252
    "uint8"                           shift, and go to state 253
    "int16"                           shift, and go to state 254
    "uint16"                          shift, and go to state 255
    "tuple"                           shift, and go to state 428
    "variant"                         shift, and go to state 429
    "generator"                       shift, and go to state 430
    "++"                              shift, and go to state 431
    "--"                              shift, and go to state 432
    "::"                              shift, and go to state 55
    "$$"                              shift, and go to state 433
    "$i"                              shift, and go to state 434
    "$v"                              shift, and go to state 435
    "$b"                              shift, and go to state 436
    "$a"                              shift, and go to state 437
    "$c"                              shift, and go to state 438
    "..."                             shift, and go to state 439
    "integer constant"                shift, and go to state 440
    "long integer constant"           shift, and go to state 441
    "unsigned integer constant"       shift, and go to state 442
    "unsigned long integer constant"  shift, and go to state 443
    "unsigned int8 constant"          shift, and go to state 444
    "floating point constant"         shift, and go to state 445
    "double constant"                 shift, and go to state 446
    "name"                            shift, and go to state 56
    "start of the string"             shift, and go to state 447
    "begin of code block"             shift, and go to state 448
    '-'                               shift, and go to state 449
    '+'                               shift, and go to state 450
    '*'                               shift, and go to state 451
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 452
    '!'                               shift, and go to state 453
    '['                               shift, and go to state 454
    '('                               shift, and go to state 455
    '$'                               shift, and go to state 456
    '@'                               shift, and go to state 457

    string_builder          go to state 458
    expr_reader             go to state 459
    expr_call_pipe          go to state 460
    name_in_namespace       go to state 461
    expr_new                go to state 462
    expr_cast               go to state 463
    expr_type_decl          go to state 464
    expr_type_info          go to state 465
    block_or_lambda         go to state 466
    expr_full_block         go to state 467
    expr_numeric_const      go to state 468
    expr_named_call         go to state 469
    expr_method_call        go to state 470
    func_addr_expr          go to state 471
    expr_field              go to state 472
    expr_call               go to state 473
    expr                    go to state 758
    expr_mtag               go to state 475
    basic_type_declaration  go to state 476
    make_decl               go to state 477
    make_struct_decl        go to state 478
    make_tuple_call         go to state 479
    make_dim_decl           go to state 480
    make_table_decl         go to state 481
    array_comprehension     go to state 482


State 570

  292 expr_cast: "reinterpret" '<' . $@13 type_declaration_no_options '>' $@14 expr

    $default  reduce using rule 290 ($@13)

    $@13  go to state 759


State 571

  457 expr: "unsafe" '(' . expr ')'

    "struct"                          shift, and go to state 409
    "class"                           shift, and go to state 410
    "true"                            shift, and go to state 411
    "false"                           shift, and go to state 412
    "new"                             shift, and go to state 413
    "typeinfo"                        shift, and go to state 414
    "type"                            shift, and go to state 415
    "array"                           shift, and go to state 416
    "null"                            shift, and go to state 417
    "table"                           shift, and go to state 418
    "deref"                           shift, and go to state 419
    "cast"                            shift, and go to state 420
    "upcast"                          shift, and go to state 421
    "addr"                            shift, and go to state 422
    "reinterpret"                     shift, and go to state 423
    "unsafe"                          shift, and go to state 424
    "fixed_array"                     shift, and go to state 425
    "default"                         shift, and go to state 426
    "bool"                            shift, and go to state 225
    "void"                            shift, and go to state 226
    "string"                          shift, and go to state 227
    "int"                             shift, and go to state 229
    "int2"                            shift, and go to state 230
    "int3"                            shift, and go to state 231
    "int4"                            shift, and go to state 232
    "uint"                            shift, and go to state 233
    "bitfield"                        shift, and go to state 427
    "uint2"                           shift, and go to state 235
    "uint3"                           shift, and go to state 236
    "uint4"                           shift, and go to state 237
    "float"                           shift, and go to state 238
    "float2"                          shift, and go to state 239
    "float3"                          shift, and go to state 240
    "float4"                          shift, and go to state 241
    "range"                           shift, and go to state 242
    "urange"                          shift, and go to state 243
    "range64"                         shift, and go to state 244
    "urange64"                        shift, and go to state 245
    "int64"                           shift, and go to state 247
    "uint64"                          shift, and go to state 248
    "double"                          shift, and go to state 249
    "int8"                            shift, and go to state 252
    "uint8"                           shift, and go to state 253
    "int16"                           shift, and go to state 254
    "uint16"                          shift, and go to state 255
    "tuple"                           shift, and go to state 428
    "variant"                         shift, and go to state 429
    "generator"                       shift, and go to state 430
    "++"                              shift, and go to state 431
    "--"                              shift, and go to state 432
    "::"                              shift, and go to state 55
    "$$"                              shift, and go to state 433
    "$i"                              shift, and go to state 434
    "$v"                              shift, and go to state 435
    "$b"                              shift, and go to state 436
    "$a"                              shift, and go to state 437
    "$c"                              shift, and go to state 438
    "..."                             shift, and go to state 439
    "integer constant"                shift, and go to state 440
    "long integer constant"           shift, and go to state 441
    "unsigned integer constant"       shift, and go to state 442
    "unsigned long integer constant"  shift, and go to state 443
    "unsigned int8 constant"          shift, and go to state 444
    "floating point constant"         shift, and go to state 445
    "double constant"                 shift, and go to state 446
    "name"                            shift, and go to state 56
    "start of the string"             shift, and go to state 447
    "begin of code block"             shift, and go to state 448
    '-'                               shift, and go to state 449
    '+'                               shift, and go to state 450
    '*'                               shift, and go to state 451
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 452
    '!'                               shift, and go to state 453
    '['                               shift, and go to state 454
    '('                               shift, and go to state 455
    '$'                               shift, and go to state 456
    '@'                               shift, and go to state 457

    string_builder          go to state 458
    expr_reader             go to state 459
    expr_call_pipe          go to state 460
    name_in_namespace       go to state 461
    expr_new                go to state 462
    expr_cast               go to state 463
    expr_type_decl          go to state 464
    expr_type_info          go to state 465
    block_or_lambda         go to state 466
    expr_full_block         go to state 467
    expr_numeric_const      go to state 468
    expr_named_call         go to state 469
    expr_method_call        go to state 470
    func_addr_expr          go to state 471
    expr_field              go to state 472
    expr_call               go to state 473
    expr                    go to state 760
    expr_mtag               go to state 475
    basic_type_declaration  go to state 476
    make_decl               go to state 477
    make_struct_decl        go to state 478
    make_tuple_call         go to state 479
    make_dim_decl           go to state 480
    make_table_decl         go to state 481
    array_comprehension     go to state 482


State 572

  784 make_dim_decl: "fixed_array" '<' . $@95 type_declaration_no_options '>' $@96 '(' expr_list optional_comma ')'

    $default  reduce using rule 782 ($@95)

    $@95  go to state 761


State 573

  781 make_dim_decl: "fixed_array" '(' . expr_list optional_comma ')'

    "struct"                          shift, and go to state 409
    "class"                           shift, and go to state 410
    "true"                            shift, and go to state 411
    "false"                           shift, and go to state 412
    "new"                             shift, and go to state 413
    "typeinfo"                        shift, and go to state 414
    "type"                            shift, and go to state 415
    "array"                           shift, and go to state 416
    "null"                            shift, and go to state 417
    "table"                           shift, and go to state 418
    "deref"                           shift, and go to state 419
    "cast"                            shift, and go to state 420
    "upcast"                          shift, and go to state 421
    "addr"                            shift, and go to state 422
    "reinterpret"                     shift, and go to state 423
    "unsafe"                          shift, and go to state 424
    "fixed_array"                     shift, and go to state 425
    "default"                         shift, and go to state 426
    "bool"                            shift, and go to state 225
    "void"                            shift, and go to state 226
    "string"                          shift, and go to state 227
    "int"                             shift, and go to state 229
    "int2"                            shift, and go to state 230
    "int3"                            shift, and go to state 231
    "int4"                            shift, and go to state 232
    "uint"                            shift, and go to state 233
    "bitfield"                        shift, and go to state 427
    "uint2"                           shift, and go to state 235
    "uint3"                           shift, and go to state 236
    "uint4"                           shift, and go to state 237
    "float"                           shift, and go to state 238
    "float2"                          shift, and go to state 239
    "float3"                          shift, and go to state 240
    "float4"                          shift, and go to state 241
    "range"                           shift, and go to state 242
    "urange"                          shift, and go to state 243
    "range64"                         shift, and go to state 244
    "urange64"                        shift, and go to state 245
    "int64"                           shift, and go to state 247
    "uint64"                          shift, and go to state 248
    "double"                          shift, and go to state 249
    "int8"                            shift, and go to state 252
    "uint8"                           shift, and go to state 253
    "int16"                           shift, and go to state 254
    "uint16"                          shift, and go to state 255
    "tuple"                           shift, and go to state 428
    "variant"                         shift, and go to state 429
    "generator"                       shift, and go to state 430
    "++"                              shift, and go to state 431
    "--"                              shift, and go to state 432
    "::"                              shift, and go to state 55
    "$$"                              shift, and go to state 433
    "$i"                              shift, and go to state 434
    "$v"                              shift, and go to state 435
    "$b"                              shift, and go to state 436
    "$a"                              shift, and go to state 437
    "$c"                              shift, and go to state 438
    "..."                             shift, and go to state 439
    "integer constant"                shift, and go to state 440
    "long integer constant"           shift, and go to state 441
    "unsigned integer constant"       shift, and go to state 442
    "unsigned long integer constant"  shift, and go to state 443
    "unsigned int8 constant"          shift, and go to state 444
    "floating point constant"         shift, and go to state 445
    "double constant"                 shift, and go to state 446
    "name"                            shift, and go to state 56
    "start of the string"             shift, and go to state 447
    "begin of code block"             shift, and go to state 448
    '-'                               shift, and go to state 449
    '+'                               shift, and go to state 450
    '*'                               shift, and go to state 451
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 452
    '!'                               shift, and go to state 453
    '['                               shift, and go to state 454
    '('                               shift, and go to state 455
    '$'                               shift, and go to state 456
    '@'                               shift, and go to state 457

    string_builder          go to state 458
    expr_reader             go to state 459
    expr_call_pipe          go to state 460
    name_in_namespace       go to state 461
    expr_new                go to state 462
    expr_cast               go to state 463
    expr_type_decl          go to state 464
    expr_type_info          go to state 465
    expr_list               go to state 762
    block_or_lambda         go to state 466
    expr_full_block         go to state 467
    expr_numeric_const      go to state 468
    expr_named_call         go to state 469
    expr_method_call        go to state 470
    func_addr_expr          go to state 471
    expr_field              go to state 472
    expr_call               go to state 473
    expr                    go to state 600
    expr_mtag               go to state 475
    basic_type_declaration  go to state 476
    make_decl               go to state 477
    make_struct_decl        go to state 478
    make_tuple_call         go to state 479
    make_dim_decl           go to state 480
    make_table_decl         go to state 481
    array_comprehension     go to state 482


State 574

  760 make_struct_decl: "default" '<' . $@83 type_declaration_no_options '>' $@84 use_initializer

    $default  reduce using rule 758 ($@83)

    $@83  go to state 763


State 575

  766 make_tuple_call: "tuple" '<' . $@85 type_declaration_no_options '>' $@86 '(' use_initializer optional_make_struct_dim_decl ')'

    $default  reduce using rule 764 ($@85)

    $@85  go to state 764


State 576

  763 make_tuple_call: "tuple" '(' . expr_list optional_comma ')'

    "struct"                          shift, and go to state 409
    "class"                           shift, and go to state 410
    "true"                            shift, and go to state 411
    "false"                           shift, and go to state 412
    "new"                             shift, and go to state 413
    "typeinfo"                        shift, and go to state 414
    "type"                            shift, and go to state 415
    "array"                           shift, and go to state 416
    "null"                            shift, and go to state 417
    "table"                           shift, and go to state 418
    "deref"                           shift, and go to state 419
    "cast"                            shift, and go to state 420
    "upcast"                          shift, and go to state 421
    "addr"                            shift, and go to state 422
    "reinterpret"                     shift, and go to state 423
    "unsafe"                          shift, and go to state 424
    "fixed_array"                     shift, and go to state 425
    "default"                         shift, and go to state 426
    "bool"                            shift, and go to state 225
    "void"                            shift, and go to state 226
    "string"                          shift, and go to state 227
    "int"                             shift, and go to state 229
    "int2"                            shift, and go to state 230
    "int3"                            shift, and go to state 231
    "int4"                            shift, and go to state 232
    "uint"                            shift, and go to state 233
    "bitfield"                        shift, and go to state 427
    "uint2"                           shift, and go to state 235
    "uint3"                           shift, and go to state 236
    "uint4"                           shift, and go to state 237
    "float"                           shift, and go to state 238
    "float2"                          shift, and go to state 239
    "float3"                          shift, and go to state 240
    "float4"                          shift, and go to state 241
    "range"                           shift, and go to state 242
    "urange"                          shift, and go to state 243
    "range64"                         shift, and go to state 244
    "urange64"                        shift, and go to state 245
    "int64"                           shift, and go to state 247
    "uint64"                          shift, and go to state 248
    "double"                          shift, and go to state 249
    "int8"                            shift, and go to state 252
    "uint8"                           shift, and go to state 253
    "int16"                           shift, and go to state 254
    "uint16"                          shift, and go to state 255
    "tuple"                           shift, and go to state 428
    "variant"                         shift, and go to state 429
    "generator"                       shift, and go to state 430
    "++"                              shift, and go to state 431
    "--"                              shift, and go to state 432
    "::"                              shift, and go to state 55
    "$$"                              shift, and go to state 433
    "$i"                              shift, and go to state 434
    "$v"                              shift, and go to state 435
    "$b"                              shift, and go to state 436
    "$a"                              shift, and go to state 437
    "$c"                              shift, and go to state 438
    "..."                             shift, and go to state 439
    "integer constant"                shift, and go to state 440
    "long integer constant"           shift, and go to state 441
    "unsigned integer constant"       shift, and go to state 442
    "unsigned long integer constant"  shift, and go to state 443
    "unsigned int8 constant"          shift, and go to state 444
    "floating point constant"         shift, and go to state 445
    "double constant"                 shift, and go to state 446
    "name"                            shift, and go to state 56
    "start of the string"             shift, and go to state 447
    "begin of code block"             shift, and go to state 448
    '-'                               shift, and go to state 449
    '+'                               shift, and go to state 450
    '*'                               shift, and go to state 451
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 452
    '!'                               shift, and go to state 453
    '['                               shift, and go to state 454
    '('                               shift, and go to state 455
    '$'                               shift, and go to state 456
    '@'                               shift, and go to state 457

    string_builder          go to state 458
    expr_reader             go to state 459
    expr_call_pipe          go to state 460
    name_in_namespace       go to state 461
    expr_new                go to state 462
    expr_cast               go to state 463
    expr_type_decl          go to state 464
    expr_type_info          go to state 465
    expr_list               go to state 765
    block_or_lambda         go to state 466
    expr_full_block         go to state 467
    expr_numeric_const      go to state 468
    expr_named_call         go to state 469
    expr_method_call        go to state 470
    func_addr_expr          go to state 471
    expr_field              go to state 472
    expr_call               go to state 473
    expr                    go to state 600
    expr_mtag               go to state 475
    basic_type_declaration  go to state 476
    make_decl               go to state 477
    make_struct_decl        go to state 478
    make_tuple_call         go to state 479
    make_dim_decl           go to state 480
    make_table_decl         go to state 481
    array_comprehension     go to state 482


State 577

  757 make_struct_decl: "variant" '<' . $@81 type_declaration_no_options '>' $@82 '(' make_variant_dim ')'

    $default  reduce using rule 755 ($@81)

    $@81  go to state 766


State 578

  426 expr: "generator" '<' . type_declaration_no_options '>' optional_capture_list '(' ')'
  427     | "generator" '<' . type_declaration_no_options '>' optional_capture_list '(' expr ')'
  428     | "generator" '<' . type_declaration_no_options '>' optional_capture_list expression_block

    "type"       shift, and go to state 219
    "array"      shift, and go to state 220
    "table"      shift, and go to state 221
    "typedecl"   shift, and go to state 222
    "iterator"   shift, and go to state 223
    "smart_ptr"  shift, and go to state 224
    "bool"       shift, and go to state 225
    "void"       shift, and go to state 226
    "string"     shift, and go to state 227
    "auto"       shift, and go to state 228
    "int"        shift, and go to state 229
    "int2"       shift, and go to state 230
    "int3"       shift, and go to state 231
    "int4"       shift, and go to state 232
    "uint"       shift, and go to state 233
    "bitfield"   shift, and go to state 234
    "uint2"      shift, and go to state 235
    "uint3"      shift, and go to state 236
    "uint4"      shift, and go to state 237
    "float"      shift, and go to state 238
    "float2"     shift, and go to state 239
    "float3"     shift, and go to state 240
    "float4"     shift, and go to state 241
    "range"      shift, and go to state 242
    "urange"     shift, and go to state 243
    "range64"    shift, and go to state 244
    "urange64"   shift, and go to state 245
    "block"      shift, and go to state 246
    "int64"      shift, and go to state 247
    "uint64"     shift, and go to state 248
    "double"     shift, and go to state 249
    "function"   shift, and go to state 250
    "lambda"     shift, and go to state 251
    "int8"       shift, and go to state 252
    "uint8"      shift, and go to state 253
    "int16"      shift, and go to state 254
    "uint16"     shift, and go to state 255
    "tuple"      shift, and go to state 256
    "variant"    shift, and go to state 257
    "::"         shift, and go to state 55
    "$t"         shift, and go to state 258
    "name"       shift, and go to state 56
    '$'          shift, and go to state 259

    name_in_namespace                   go to state 260
    basic_type_declaration              go to state 261
    structure_type_declaration          go to state 262
    auto_type_declaration               go to state 263
    bitfield_type_declaration           go to state 264
    type_declaration_no_options         go to state 767
    type_declaration_no_options_no_dim  go to state 266


State 579

  347 expr_method_call: expr . "->" "name" '(' ')'
  348                 | expr . "->" "name" '(' expr_list ')'
  358 expr_field: expr . '.' "name"
  359           | expr . '.' '.' "name"
  360           | expr . '.' "name" '(' ')'
  361           | expr . '.' "name" '(' expr_list ')'
  362           | expr . '.' basic_type_declaration '(' ')'
  363           | expr . '.' basic_type_declaration '(' expr_list ')'
  366           | expr . '.' $@21 error $@22
  388 expr: expr . "<<" expr
  389     | expr . ">>" expr
  390     | expr . "<<<" expr
  391     | expr . ">>>" expr
  392     | expr . '+' expr
  393     | expr . '-' expr
  394     | expr . '*' expr
  395     | expr . '/' expr
  396     | expr . '%' expr
  397     | expr . '<' expr
  398     | expr . '>' expr
  399     | expr . "==" expr
  400     | expr . "!=" expr
  401     | expr . "<=" expr
  402     | expr . ">=" expr
  403     | expr . '&' expr
  404     | expr . '|' expr
  405     | expr . '^' expr
  406     | expr . "&&" expr
  407     | expr . "||" expr
  408     | expr . "^^" expr
  409     | expr . ".." expr
  410     | "++" expr .
  412     | expr . "++"
  413     | expr . "--"
  415     | expr . '[' expr ']'
  416     | expr . '.' '[' expr ']'
  417     | expr . "?[" expr ']'
  418     | expr . '.' "?[" expr ']'
  419     | expr . "?." "name"
  420     | expr . '.' "?." "name"
  429     | expr . "??" expr
  430     | expr . '?' expr ':' expr
  433     | expr . "is" "type" '<' $@23 type_declaration_no_options '>' $@24
  434     | expr . "is" basic_type_declaration
  435     | expr . "is" "name"
  436     | expr . "as" "name"
  439     | expr . "as" "type" '<' $@25 type_declaration '>' $@26
  440     | expr . "as" basic_type_declaration
  441     | expr . '?' "as" "name"
  444     | expr . '?' "as" "type" '<' $@27 type_declaration '>' $@28
  445     | expr . '?' "as" basic_type_declaration
  453     | expr . "<|" expr
  454     | expr . "|>" expr
  455     | expr . "|>" basic_type_declaration
  466 expr_mtag: expr . '.' "$f" '(' expr ')'
  467          | expr . "?." "$f" '(' expr ')'
  468          | expr . '.' '.' "$f" '(' expr ')'
  469          | expr . '.' "?." "$f" '(' expr ')'
  470          | expr . "as" "$f" '(' expr ')'
  471          | expr . '?' "as" "$f" '(' expr ')'
  472          | expr . "is" "$f" '(' expr ')'

    "is"  shift, and go to state 609
    "as"  shift, and go to state 610
    "++"  shift, and go to state 613
    "--"  shift, and go to state 614
    "->"  shift, and go to state 619
    "?."  shift, and go to state 621
    "?["  shift, and go to state 622
    "<|"  shift, and go to state 623
    "|>"  shift, and go to state 624
    '.'   shift, and go to state 642
    '['   shift, and go to state 643

    $default  reduce using rule 410 (expr)


State 580

  347 expr_method_call: expr . "->" "name" '(' ')'
  348                 | expr . "->" "name" '(' expr_list ')'
  358 expr_field: expr . '.' "name"
  359           | expr . '.' '.' "name"
  360           | expr . '.' "name" '(' ')'
  361           | expr . '.' "name" '(' expr_list ')'
  362           | expr . '.' basic_type_declaration '(' ')'
  363           | expr . '.' basic_type_declaration '(' expr_list ')'
  366           | expr . '.' $@21 error $@22
  388 expr: expr . "<<" expr
  389     | expr . ">>" expr
  390     | expr . "<<<" expr
  391     | expr . ">>>" expr
  392     | expr . '+' expr
  393     | expr . '-' expr
  394     | expr . '*' expr
  395     | expr . '/' expr
  396     | expr . '%' expr
  397     | expr . '<' expr
  398     | expr . '>' expr
  399     | expr . "==" expr
  400     | expr . "!=" expr
  401     | expr . "<=" expr
  402     | expr . ">=" expr
  403     | expr . '&' expr
  404     | expr . '|' expr
  405     | expr . '^' expr
  406     | expr . "&&" expr
  407     | expr . "||" expr
  408     | expr . "^^" expr
  409     | expr . ".." expr
  411     | "--" expr .
  412     | expr . "++"
  413     | expr . "--"
  415     | expr . '[' expr ']'
  416     | expr . '.' '[' expr ']'
  417     | expr . "?[" expr ']'
  418     | expr . '.' "?[" expr ']'
  419     | expr . "?." "name"
  420     | expr . '.' "?." "name"
  429     | expr . "??" expr
  430     | expr . '?' expr ':' expr
  433     | expr . "is" "type" '<' $@23 type_declaration_no_options '>' $@24
  434     | expr . "is" basic_type_declaration
  435     | expr . "is" "name"
  436     | expr . "as" "name"
  439     | expr . "as" "type" '<' $@25 type_declaration '>' $@26
  440     | expr . "as" basic_type_declaration
  441     | expr . '?' "as" "name"
  444     | expr . '?' "as" "type" '<' $@27 type_declaration '>' $@28
  445     | expr . '?' "as" basic_type_declaration
  453     | expr . "<|" expr
  454     | expr . "|>" expr
  455     | expr . "|>" basic_type_declaration
  466 expr_mtag: expr . '.' "$f" '(' expr ')'
  467          | expr . "?." "$f" '(' expr ')'
  468          | expr . '.' '.' "$f" '(' expr ')'
  469          | expr . '.' "?." "$f" '(' expr ')'
  470          | expr . "as" "$f" '(' expr ')'
  471          | expr . '?' "as" "$f" '(' expr ')'
  472          | expr . "is" "$f" '(' expr ')'

    "is"  shift, and go to state 609
    "as"  shift, and go to state 610
    "++"  shift, and go to state 613
    "--"  shift, and go to state 614
    "->"  shift, and go to state 619
    "?."  shift, and go to state 621
    "?["  shift, and go to state 622
    "<|"  shift, and go to state 623
    "|>"  shift, and go to state 624
    '.'   shift, and go to state 642
    '['   shift, and go to state 643

    $default  reduce using rule 411 (expr)


State 581

  458 expr_mtag: "$$" '(' . expr ')'

    "struct"                          shift, and go to state 409
    "class"                           shift, and go to state 410
    "true"                            shift, and go to state 411
    "false"                           shift, and go to state 412
    "new"                             shift, and go to state 413
    "typeinfo"                        shift, and go to state 414
    "type"                            shift, and go to state 415
    "array"                           shift, and go to state 416
    "null"                            shift, and go to state 417
    "table"                           shift, and go to state 418
    "deref"                           shift, and go to state 419
    "cast"                            shift, and go to state 420
    "upcast"                          shift, and go to state 421
    "addr"                            shift, and go to state 422
    "reinterpret"                     shift, and go to state 423
    "unsafe"                          shift, and go to state 424
    "fixed_array"                     shift, and go to state 425
    "default"                         shift, and go to state 426
    "bool"                            shift, and go to state 225
    "void"                            shift, and go to state 226
    "string"                          shift, and go to state 227
    "int"                             shift, and go to state 229
    "int2"                            shift, and go to state 230
    "int3"                            shift, and go to state 231
    "int4"                            shift, and go to state 232
    "uint"                            shift, and go to state 233
    "bitfield"                        shift, and go to state 427
    "uint2"                           shift, and go to state 235
    "uint3"                           shift, and go to state 236
    "uint4"                           shift, and go to state 237
    "float"                           shift, and go to state 238
    "float2"                          shift, and go to state 239
    "float3"                          shift, and go to state 240
    "float4"                          shift, and go to state 241
    "range"                           shift, and go to state 242
    "urange"                          shift, and go to state 243
    "range64"                         shift, and go to state 244
    "urange64"                        shift, and go to state 245
    "int64"                           shift, and go to state 247
    "uint64"                          shift, and go to state 248
    "double"                          shift, and go to state 249
    "int8"                            shift, and go to state 252
    "uint8"                           shift, and go to state 253
    "int16"                           shift, and go to state 254
    "uint16"                          shift, and go to state 255
    "tuple"                           shift, and go to state 428
    "variant"                         shift, and go to state 429
    "generator"                       shift, and go to state 430
    "++"                              shift, and go to state 431
    "--"                              shift, and go to state 432
    "::"                              shift, and go to state 55
    "$$"                              shift, and go to state 433
    "$i"                              shift, and go to state 434
    "$v"                              shift, and go to state 435
    "$b"                              shift, and go to state 436
    "$a"                              shift, and go to state 437
    "$c"                              shift, and go to state 438
    "..."                             shift, and go to state 439
    "integer constant"                shift, and go to state 440
    "long integer constant"           shift, and go to state 441
    "unsigned integer constant"       shift, and go to state 442
    "unsigned long integer constant"  shift, and go to state 443
    "unsigned int8 constant"          shift, and go to state 444
    "floating point constant"         shift, and go to state 445
    "double constant"                 shift, and go to state 446
    "name"                            shift, and go to state 56
    "start of the string"             shift, and go to state 447
    "begin of code block"             shift, and go to state 448
    '-'                               shift, and go to state 449
    '+'                               shift, and go to state 450
    '*'                               shift, and go to state 451
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 452
    '!'                               shift, and go to state 453
    '['                               shift, and go to state 454
    '('                               shift, and go to state 455
    '$'                               shift, and go to state 456
    '@'                               shift, and go to state 457

    string_builder          go to state 458
    expr_reader             go to state 459
    expr_call_pipe          go to state 460
    name_in_namespace       go to state 461
    expr_new                go to state 462
    expr_cast               go to state 463
    expr_type_decl          go to state 464
    expr_type_info          go to state 465
    block_or_lambda         go to state 466
    expr_full_block         go to state 467
    expr_numeric_const      go to state 468
    expr_named_call         go to state 469
    expr_method_call        go to state 470
    func_addr_expr          go to state 471
    expr_field              go to state 472
    expr_call               go to state 473
    expr                    go to state 768
    expr_mtag               go to state 475
    basic_type_declaration  go to state 476
    make_decl               go to state 477
    make_struct_decl        go to state 478
    make_tuple_call         go to state 479
    make_dim_decl           go to state 480
    make_table_decl         go to state 481
    array_comprehension     go to state 482


State 582

  459 expr_mtag: "$i" '(' . expr ')'

    "struct"                          shift, and go to state 409
    "class"                           shift, and go to state 410
    "true"                            shift, and go to state 411
    "false"                           shift, and go to state 412
    "new"                             shift, and go to state 413
    "typeinfo"                        shift, and go to state 414
    "type"                            shift, and go to state 415
    "array"                           shift, and go to state 416
    "null"                            shift, and go to state 417
    "table"                           shift, and go to state 418
    "deref"                           shift, and go to state 419
    "cast"                            shift, and go to state 420
    "upcast"                          shift, and go to state 421
    "addr"                            shift, and go to state 422
    "reinterpret"                     shift, and go to state 423
    "unsafe"                          shift, and go to state 424
    "fixed_array"                     shift, and go to state 425
    "default"                         shift, and go to state 426
    "bool"                            shift, and go to state 225
    "void"                            shift, and go to state 226
    "string"                          shift, and go to state 227
    "int"                             shift, and go to state 229
    "int2"                            shift, and go to state 230
    "int3"                            shift, and go to state 231
    "int4"                            shift, and go to state 232
    "uint"                            shift, and go to state 233
    "bitfield"                        shift, and go to state 427
    "uint2"                           shift, and go to state 235
    "uint3"                           shift, and go to state 236
    "uint4"                           shift, and go to state 237
    "float"                           shift, and go to state 238
    "float2"                          shift, and go to state 239
    "float3"                          shift, and go to state 240
    "float4"                          shift, and go to state 241
    "range"                           shift, and go to state 242
    "urange"                          shift, and go to state 243
    "range64"                         shift, and go to state 244
    "urange64"                        shift, and go to state 245
    "int64"                           shift, and go to state 247
    "uint64"                          shift, and go to state 248
    "double"                          shift, and go to state 249
    "int8"                            shift, and go to state 252
    "uint8"                           shift, and go to state 253
    "int16"                           shift, and go to state 254
    "uint16"                          shift, and go to state 255
    "tuple"                           shift, and go to state 428
    "variant"                         shift, and go to state 429
    "generator"                       shift, and go to state 430
    "++"                              shift, and go to state 431
    "--"                              shift, and go to state 432
    "::"                              shift, and go to state 55
    "$$"                              shift, and go to state 433
    "$i"                              shift, and go to state 434
    "$v"                              shift, and go to state 435
    "$b"                              shift, and go to state 436
    "$a"                              shift, and go to state 437
    "$c"                              shift, and go to state 438
    "..."                             shift, and go to state 439
    "integer constant"                shift, and go to state 440
    "long integer constant"           shift, and go to state 441
    "unsigned integer constant"       shift, and go to state 442
    "unsigned long integer constant"  shift, and go to state 443
    "unsigned int8 constant"          shift, and go to state 444
    "floating point constant"         shift, and go to state 445
    "double constant"                 shift, and go to state 446
    "name"                            shift, and go to state 56
    "start of the string"             shift, and go to state 447
    "begin of code block"             shift, and go to state 448
    '-'                               shift, and go to state 449
    '+'                               shift, and go to state 450
    '*'                               shift, and go to state 451
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 452
    '!'                               shift, and go to state 453
    '['                               shift, and go to state 454
    '('                               shift, and go to state 455
    '$'                               shift, and go to state 456
    '@'                               shift, and go to state 457

    string_builder          go to state 458
    expr_reader             go to state 459
    expr_call_pipe          go to state 460
    name_in_namespace       go to state 461
    expr_new                go to state 462
    expr_cast               go to state 463
    expr_type_decl          go to state 464
    expr_type_info          go to state 465
    block_or_lambda         go to state 466
    expr_full_block         go to state 467
    expr_numeric_const      go to state 468
    expr_named_call         go to state 469
    expr_method_call        go to state 470
    func_addr_expr          go to state 471
    expr_field              go to state 472
    expr_call               go to state 473
    expr                    go to state 769
    expr_mtag               go to state 475
    basic_type_declaration  go to state 476
    make_decl               go to state 477
    make_struct_decl        go to state 478
    make_tuple_call         go to state 479
    make_dim_decl           go to state 480
    make_table_decl         go to state 481
    array_comprehension     go to state 482


State 583

  460 expr_mtag: "$v" '(' . expr ')'

    "struct"                          shift, and go to state 409
    "class"                           shift, and go to state 410
    "true"                            shift, and go to state 411
    "false"                           shift, and go to state 412
    "new"                             shift, and go to state 413
    "typeinfo"                        shift, and go to state 414
    "type"                            shift, and go to state 415
    "array"                           shift, and go to state 416
    "null"                            shift, and go to state 417
    "table"                           shift, and go to state 418
    "deref"                           shift, and go to state 419
    "cast"                            shift, and go to state 420
    "upcast"                          shift, and go to state 421
    "addr"                            shift, and go to state 422
    "reinterpret"                     shift, and go to state 423
    "unsafe"                          shift, and go to state 424
    "fixed_array"                     shift, and go to state 425
    "default"                         shift, and go to state 426
    "bool"                            shift, and go to state 225
    "void"                            shift, and go to state 226
    "string"                          shift, and go to state 227
    "int"                             shift, and go to state 229
    "int2"                            shift, and go to state 230
    "int3"                            shift, and go to state 231
    "int4"                            shift, and go to state 232
    "uint"                            shift, and go to state 233
    "bitfield"                        shift, and go to state 427
    "uint2"                           shift, and go to state 235
    "uint3"                           shift, and go to state 236
    "uint4"                           shift, and go to state 237
    "float"                           shift, and go to state 238
    "float2"                          shift, and go to state 239
    "float3"                          shift, and go to state 240
    "float4"                          shift, and go to state 241
    "range"                           shift, and go to state 242
    "urange"                          shift, and go to state 243
    "range64"                         shift, and go to state 244
    "urange64"                        shift, and go to state 245
    "int64"                           shift, and go to state 247
    "uint64"                          shift, and go to state 248
    "double"                          shift, and go to state 249
    "int8"                            shift, and go to state 252
    "uint8"                           shift, and go to state 253
    "int16"                           shift, and go to state 254
    "uint16"                          shift, and go to state 255
    "tuple"                           shift, and go to state 428
    "variant"                         shift, and go to state 429
    "generator"                       shift, and go to state 430
    "++"                              shift, and go to state 431
    "--"                              shift, and go to state 432
    "::"                              shift, and go to state 55
    "$$"                              shift, and go to state 433
    "$i"                              shift, and go to state 434
    "$v"                              shift, and go to state 435
    "$b"                              shift, and go to state 436
    "$a"                              shift, and go to state 437
    "$c"                              shift, and go to state 438
    "..."                             shift, and go to state 439
    "integer constant"                shift, and go to state 440
    "long integer constant"           shift, and go to state 441
    "unsigned integer constant"       shift, and go to state 442
    "unsigned long integer constant"  shift, and go to state 443
    "unsigned int8 constant"          shift, and go to state 444
    "floating point constant"         shift, and go to state 445
    "double constant"                 shift, and go to state 446
    "name"                            shift, and go to state 56
    "start of the string"             shift, and go to state 447
    "begin of code block"             shift, and go to state 448
    '-'                               shift, and go to state 449
    '+'                               shift, and go to state 450
    '*'                               shift, and go to state 451
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 452
    '!'                               shift, and go to state 453
    '['                               shift, and go to state 454
    '('                               shift, and go to state 455
    '$'                               shift, and go to state 456
    '@'                               shift, and go to state 457

    string_builder          go to state 458
    expr_reader             go to state 459
    expr_call_pipe          go to state 460
    name_in_namespace       go to state 461
    expr_new                go to state 462
    expr_cast               go to state 463
    expr_type_decl          go to state 464
    expr_type_info          go to state 465
    block_or_lambda         go to state 466
    expr_full_block         go to state 467
    expr_numeric_const      go to state 468
    expr_named_call         go to state 469
    expr_method_call        go to state 470
    func_addr_expr          go to state 471
    expr_field              go to state 472
    expr_call               go to state 473
    expr                    go to state 770
    expr_mtag               go to state 475
    basic_type_declaration  go to state 476
    make_decl               go to state 477
    make_struct_decl        go to state 478
    make_tuple_call         go to state 479
    make_dim_decl           go to state 480
    make_table_decl         go to state 481
    array_comprehension     go to state 482


State 584

  461 expr_mtag: "$b" '(' . expr ')'

    "struct"                          shift, and go to state 409
    "class"                           shift, and go to state 410
    "true"                            shift, and go to state 411
    "false"                           shift, and go to state 412
    "new"                             shift, and go to state 413
    "typeinfo"                        shift, and go to state 414
    "type"                            shift, and go to state 415
    "array"                           shift, and go to state 416
    "null"                            shift, and go to state 417
    "table"                           shift, and go to state 418
    "deref"                           shift, and go to state 419
    "cast"                            shift, and go to state 420
    "upcast"                          shift, and go to state 421
    "addr"                            shift, and go to state 422
    "reinterpret"                     shift, and go to state 423
    "unsafe"                          shift, and go to state 424
    "fixed_array"                     shift, and go to state 425
    "default"                         shift, and go to state 426
    "bool"                            shift, and go to state 225
    "void"                            shift, and go to state 226
    "string"                          shift, and go to state 227
    "int"                             shift, and go to state 229
    "int2"                            shift, and go to state 230
    "int3"                            shift, and go to state 231
    "int4"                            shift, and go to state 232
    "uint"                            shift, and go to state 233
    "bitfield"                        shift, and go to state 427
    "uint2"                           shift, and go to state 235
    "uint3"                           shift, and go to state 236
    "uint4"                           shift, and go to state 237
    "float"                           shift, and go to state 238
    "float2"                          shift, and go to state 239
    "float3"                          shift, and go to state 240
    "float4"                          shift, and go to state 241
    "range"                           shift, and go to state 242
    "urange"                          shift, and go to state 243
    "range64"                         shift, and go to state 244
    "urange64"                        shift, and go to state 245
    "int64"                           shift, and go to state 247
    "uint64"                          shift, and go to state 248
    "double"                          shift, and go to state 249
    "int8"                            shift, and go to state 252
    "uint8"                           shift, and go to state 253
    "int16"                           shift, and go to state 254
    "uint16"                          shift, and go to state 255
    "tuple"                           shift, and go to state 428
    "variant"                         shift, and go to state 429
    "generator"                       shift, and go to state 430
    "++"                              shift, and go to state 431
    "--"                              shift, and go to state 432
    "::"                              shift, and go to state 55
    "$$"                              shift, and go to state 433
    "$i"                              shift, and go to state 434
    "$v"                              shift, and go to state 435
    "$b"                              shift, and go to state 436
    "$a"                              shift, and go to state 437
    "$c"                              shift, and go to state 438
    "..."                             shift, and go to state 439
    "integer constant"                shift, and go to state 440
    "long integer constant"           shift, and go to state 441
    "unsigned integer constant"       shift, and go to state 442
    "unsigned long integer constant"  shift, and go to state 443
    "unsigned int8 constant"          shift, and go to state 444
    "floating point constant"         shift, and go to state 445
    "double constant"                 shift, and go to state 446
    "name"                            shift, and go to state 56
    "start of the string"             shift, and go to state 447
    "begin of code block"             shift, and go to state 448
    '-'                               shift, and go to state 449
    '+'                               shift, and go to state 450
    '*'                               shift, and go to state 451
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 452
    '!'                               shift, and go to state 453
    '['                               shift, and go to state 454
    '('                               shift, and go to state 455
    '$'                               shift, and go to state 456
    '@'                               shift, and go to state 457

    string_builder          go to state 458
    expr_reader             go to state 459
    expr_call_pipe          go to state 460
    name_in_namespace       go to state 461
    expr_new                go to state 462
    expr_cast               go to state 463
    expr_type_decl          go to state 464
    expr_type_info          go to state 465
    block_or_lambda         go to state 466
    expr_full_block         go to state 467
    expr_numeric_const      go to state 468
    expr_named_call         go to state 469
    expr_method_call        go to state 470
    func_addr_expr          go to state 471
    expr_field              go to state 472
    expr_call               go to state 473
    expr                    go to state 771
    expr_mtag               go to state 475
    basic_type_declaration  go to state 476
    make_decl               go to state 477
    make_struct_decl        go to state 478
    make_tuple_call         go to state 479
    make_dim_decl           go to state 480
    make_table_decl         go to state 481
    array_comprehension     go to state 482


State 585

  462 expr_mtag: "$a" '(' . expr ')'

    "struct"                          shift, and go to state 409
    "class"                           shift, and go to state 410
    "true"                            shift, and go to state 411
    "false"                           shift, and go to state 412
    "new"                             shift, and go to state 413
    "typeinfo"                        shift, and go to state 414
    "type"                            shift, and go to state 415
    "array"                           shift, and go to state 416
    "null"                            shift, and go to state 417
    "table"                           shift, and go to state 418
    "deref"                           shift, and go to state 419
    "cast"                            shift, and go to state 420
    "upcast"                          shift, and go to state 421
    "addr"                            shift, and go to state 422
    "reinterpret"                     shift, and go to state 423
    "unsafe"                          shift, and go to state 424
    "fixed_array"                     shift, and go to state 425
    "default"                         shift, and go to state 426
    "bool"                            shift, and go to state 225
    "void"                            shift, and go to state 226
    "string"                          shift, and go to state 227
    "int"                             shift, and go to state 229
    "int2"                            shift, and go to state 230
    "int3"                            shift, and go to state 231
    "int4"                            shift, and go to state 232
    "uint"                            shift, and go to state 233
    "bitfield"                        shift, and go to state 427
    "uint2"                           shift, and go to state 235
    "uint3"                           shift, and go to state 236
    "uint4"                           shift, and go to state 237
    "float"                           shift, and go to state 238
    "float2"                          shift, and go to state 239
    "float3"                          shift, and go to state 240
    "float4"                          shift, and go to state 241
    "range"                           shift, and go to state 242
    "urange"                          shift, and go to state 243
    "range64"                         shift, and go to state 244
    "urange64"                        shift, and go to state 245
    "int64"                           shift, and go to state 247
    "uint64"                          shift, and go to state 248
    "double"                          shift, and go to state 249
    "int8"                            shift, and go to state 252
    "uint8"                           shift, and go to state 253
    "int16"                           shift, and go to state 254
    "uint16"                          shift, and go to state 255
    "tuple"                           shift, and go to state 428
    "variant"                         shift, and go to state 429
    "generator"                       shift, and go to state 430
    "++"                              shift, and go to state 431
    "--"                              shift, and go to state 432
    "::"                              shift, and go to state 55
    "$$"                              shift, and go to state 433
    "$i"                              shift, and go to state 434
    "$v"                              shift, and go to state 435
    "$b"                              shift, and go to state 436
    "$a"                              shift, and go to state 437
    "$c"                              shift, and go to state 438
    "..."                             shift, and go to state 439
    "integer constant"                shift, and go to state 440
    "long integer constant"           shift, and go to state 441
    "unsigned integer constant"       shift, and go to state 442
    "unsigned long integer constant"  shift, and go to state 443
    "unsigned int8 constant"          shift, and go to state 444
    "floating point constant"         shift, and go to state 445
    "double constant"                 shift, and go to state 446
    "name"                            shift, and go to state 56
    "start of the string"             shift, and go to state 447
    "begin of code block"             shift, and go to state 448
    '-'                               shift, and go to state 449
    '+'                               shift, and go to state 450
    '*'                               shift, and go to state 451
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 452
    '!'                               shift, and go to state 453
    '['                               shift, and go to state 454
    '('                               shift, and go to state 455
    '$'                               shift, and go to state 456
    '@'                               shift, and go to state 457

    string_builder          go to state 458
    expr_reader             go to state 459
    expr_call_pipe          go to state 460
    name_in_namespace       go to state 461
    expr_new                go to state 462
    expr_cast               go to state 463
    expr_type_decl          go to state 464
    expr_type_info          go to state 465
    block_or_lambda         go to state 466
    expr_full_block         go to state 467
    expr_numeric_const      go to state 468
    expr_named_call         go to state 469
    expr_method_call        go to state 470
    func_addr_expr          go to state 471
    expr_field              go to state 472
    expr_call               go to state 473
    expr                    go to state 772
    expr_mtag               go to state 475
    basic_type_declaration  go to state 476
    make_decl               go to state 477
    make_struct_decl        go to state 478
    make_tuple_call         go to state 479
    make_dim_decl           go to state 480
    make_table_decl         go to state 481
    array_comprehension     go to state 482


State 586

  464 expr_mtag: "$c" '(' . expr ')' '(' ')'
  465          | "$c" '(' . expr ')' '(' expr_list ')'

    "struct"                          shift, and go to state 409
    "class"                           shift, and go to state 410
    "true"                            shift, and go to state 411
    "false"                           shift, and go to state 412
    "new"                             shift, and go to state 413
    "typeinfo"                        shift, and go to state 414
    "type"                            shift, and go to state 415
    "array"                           shift, and go to state 416
    "null"                            shift, and go to state 417
    "table"                           shift, and go to state 418
    "deref"                           shift, and go to state 419
    "cast"                            shift, and go to state 420
    "upcast"                          shift, and go to state 421
    "addr"                            shift, and go to state 422
    "reinterpret"                     shift, and go to state 423
    "unsafe"                          shift, and go to state 424
    "fixed_array"                     shift, and go to state 425
    "default"                         shift, and go to state 426
    "bool"                            shift, and go to state 225
    "void"                            shift, and go to state 226
    "string"                          shift, and go to state 227
    "int"                             shift, and go to state 229
    "int2"                            shift, and go to state 230
    "int3"                            shift, and go to state 231
    "int4"                            shift, and go to state 232
    "uint"                            shift, and go to state 233
    "bitfield"                        shift, and go to state 427
    "uint2"                           shift, and go to state 235
    "uint3"                           shift, and go to state 236
    "uint4"                           shift, and go to state 237
    "float"                           shift, and go to state 238
    "float2"                          shift, and go to state 239
    "float3"                          shift, and go to state 240
    "float4"                          shift, and go to state 241
    "range"                           shift, and go to state 242
    "urange"                          shift, and go to state 243
    "range64"                         shift, and go to state 244
    "urange64"                        shift, and go to state 245
    "int64"                           shift, and go to state 247
    "uint64"                          shift, and go to state 248
    "double"                          shift, and go to state 249
    "int8"                            shift, and go to state 252
    "uint8"                           shift, and go to state 253
    "int16"                           shift, and go to state 254
    "uint16"                          shift, and go to state 255
    "tuple"                           shift, and go to state 428
    "variant"                         shift, and go to state 429
    "generator"                       shift, and go to state 430
    "++"                              shift, and go to state 431
    "--"                              shift, and go to state 432
    "::"                              shift, and go to state 55
    "$$"                              shift, and go to state 433
    "$i"                              shift, and go to state 434
    "$v"                              shift, and go to state 435
    "$b"                              shift, and go to state 436
    "$a"                              shift, and go to state 437
    "$c"                              shift, and go to state 438
    "..."                             shift, and go to state 439
    "integer constant"                shift, and go to state 440
    "long integer constant"           shift, and go to state 441
    "unsigned integer constant"       shift, and go to state 442
    "unsigned long integer constant"  shift, and go to state 443
    "unsigned int8 constant"          shift, and go to state 444
    "floating point constant"         shift, and go to state 445
    "double constant"                 shift, and go to state 446
    "name"                            shift, and go to state 56
    "start of the string"             shift, and go to state 447
    "begin of code block"             shift, and go to state 448
    '-'                               shift, and go to state 449
    '+'                               shift, and go to state 450
    '*'                               shift, and go to state 451
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 452
    '!'                               shift, and go to state 453
    '['                               shift, and go to state 454
    '('                               shift, and go to state 455
    '$'                               shift, and go to state 456
    '@'                               shift, and go to state 457

    string_builder          go to state 458
    expr_reader             go to state 459
    expr_call_pipe          go to state 460
    name_in_namespace       go to state 461
    expr_new                go to state 462
    expr_cast               go to state 463
    expr_type_decl          go to state 464
    expr_type_info          go to state 465
    block_or_lambda         go to state 466
    expr_full_block         go to state 467
    expr_numeric_const      go to state 468
    expr_named_call         go to state 469
    expr_method_call        go to state 470
    func_addr_expr          go to state 471
    expr_field              go to state 472
    expr_call               go to state 473
    expr                    go to state 773
    expr_mtag               go to state 475
    basic_type_declaration  go to state 476
    make_decl               go to state 477
    make_struct_decl        go to state 478
    make_tuple_call         go to state 479
    make_dim_decl           go to state 480
    make_table_decl         go to state 481
    array_comprehension     go to state 482


State 587

   30 string_builder_body: string_builder_body . character_sequence
   31                    | string_builder_body . "{" expr "}"
   32 string_builder: "start of the string" string_builder_body . "end of the string"

    STRING_CHARACTER      shift, and go to state 155
    STRING_CHARACTER_ESC  shift, and go to state 156
    "end of the string"   shift, and go to state 774
    "{"                   shift, and go to state 775

    character_sequence  go to state 776


State 588

  797 array_comprehension: "begin of code block" "for" . '(' variable_name_with_pos_list "in" expr_list ')' "end of expression" make_map_tuple array_comprehension_where "end of code block"

    '('  shift, and go to state 777


State 589

  347 expr_method_call: expr . "->" "name" '(' ')'
  348                 | expr . "->" "name" '(' expr_list ')'
  358 expr_field: expr . '.' "name"
  359           | expr . '.' '.' "name"
  360           | expr . '.' "name" '(' ')'
  361           | expr . '.' "name" '(' expr_list ')'
  362           | expr . '.' basic_type_declaration '(' ')'
  363           | expr . '.' basic_type_declaration '(' expr_list ')'
  366           | expr . '.' $@21 error $@22
  388 expr: expr . "<<" expr
  389     | expr . ">>" expr
  390     | expr . "<<<" expr
  391     | expr . ">>>" expr
  392     | expr . '+' expr
  393     | expr . '-' expr
  394     | expr . '*' expr
  395     | expr . '/' expr
  396     | expr . '%' expr
  397     | expr . '<' expr
  398     | expr . '>' expr
  399     | expr . "==" expr
  400     | expr . "!=" expr
  401     | expr . "<=" expr
  402     | expr . ">=" expr
  403     | expr . '&' expr
  404     | expr . '|' expr
  405     | expr . '^' expr
  406     | expr . "&&" expr
  407     | expr . "||" expr
  408     | expr . "^^" expr
  409     | expr . ".." expr
  412     | expr . "++"
  413     | expr . "--"
  415     | expr . '[' expr ']'
  416     | expr . '.' '[' expr ']'
  417     | expr . "?[" expr ']'
  418     | expr . '.' "?[" expr ']'
  419     | expr . "?." "name"
  420     | expr . '.' "?." "name"
  429     | expr . "??" expr
  430     | expr . '?' expr ':' expr
  433     | expr . "is" "type" '<' $@23 type_declaration_no_options '>' $@24
  434     | expr . "is" basic_type_declaration
  435     | expr . "is" "name"
  436     | expr . "as" "name"
  439     | expr . "as" "type" '<' $@25 type_declaration '>' $@26
  440     | expr . "as" basic_type_declaration
  441     | expr . '?' "as" "name"
  444     | expr . '?' "as" "type" '<' $@27 type_declaration '>' $@28
  445     | expr . '?' "as" basic_type_declaration
  453     | expr . "<|" expr
  454     | expr . "|>" expr
  455     | expr . "|>" basic_type_declaration
  466 expr_mtag: expr . '.' "$f" '(' expr ')'
  467          | expr . "?." "$f" '(' expr ')'
  468          | expr . '.' '.' "$f" '(' expr ')'
  469          | expr . '.' "?." "$f" '(' expr ')'
  470          | expr . "as" "$f" '(' expr ')'
  471          | expr . '?' "as" "$f" '(' expr ')'
  472          | expr . "is" "$f" '(' expr ')'
  761 make_map_tuple: expr . "=>" expr
  762               | expr .

    "is"   shift, and go to state 609
    "as"   shift, and go to state 610
    "<<"   shift, and go to state 611
    ">>"   shift, and go to state 612
    "++"   shift, and go to state 613
    "--"   shift, and go to state 614
    "<="   shift, and go to state 615
    ">="   shift, and go to state 616
    "=="   shift, and go to state 617
    "!="   shift, and go to state 618
    "->"   shift, and go to state 619
    "??"   shift, and go to state 620
    "?."   shift, and go to state 621
    "?["   shift, and go to state 622
    "<|"   shift, and go to state 623
    "|>"   shift, and go to state 624
    "<<<"  shift, and go to state 625
    ">>>"  shift, and go to state 626
    "=>"   shift, and go to state 778
    "&&"   shift, and go to state 627
    "||"   shift, and go to state 628
    "^^"   shift, and go to state 629
    ".."   shift, and go to state 630
    '?'    shift, and go to state 631
    '|'    shift, and go to state 632
    '^'    shift, and go to state 633
    '&'    shift, and go to state 634
    '<'    shift, and go to state 635
    '>'    shift, and go to state 636
    '-'    shift, and go to state 637
    '+'    shift, and go to state 638
    '*'    shift, and go to state 639
    '/'    shift, and go to state 640
    '%'    shift, and go to state 641
    '.'    shift, and go to state 642
    '['    shift, and go to state 643

    $default  reduce using rule 762 (make_map_tuple)


State 590

  785 expr_map_tuple_list: make_map_tuple .

    $default  reduce using rule 785 (expr_map_tuple_list)


State 591

  786 expr_map_tuple_list: expr_map_tuple_list . ',' make_map_tuple
  787 make_table_decl: "begin of code block" expr_map_tuple_list . optional_comma "end of code block"

    ','  shift, and go to state 779

    $default  reduce using rule 793 (optional_comma)

    optional_comma  go to state 780


State 592

  347 expr_method_call: expr . "->" "name" '(' ')'
  348                 | expr . "->" "name" '(' expr_list ')'
  358 expr_field: expr . '.' "name"
  359           | expr . '.' '.' "name"
  360           | expr . '.' "name" '(' ')'
  361           | expr . '.' "name" '(' expr_list ')'
  362           | expr . '.' basic_type_declaration '(' ')'
  363           | expr . '.' basic_type_declaration '(' expr_list ')'
  366           | expr . '.' $@21 error $@22
  387 expr: '-' expr .
  388     | expr . "<<" expr
  389     | expr . ">>" expr
  390     | expr . "<<<" expr
  391     | expr . ">>>" expr
  392     | expr . '+' expr
  393     | expr . '-' expr
  394     | expr . '*' expr
  395     | expr . '/' expr
  396     | expr . '%' expr
  397     | expr . '<' expr
  398     | expr . '>' expr
  399     | expr . "==" expr
  400     | expr . "!=" expr
  401     | expr . "<=" expr
  402     | expr . ">=" expr
  403     | expr . '&' expr
  404     | expr . '|' expr
  405     | expr . '^' expr
  406     | expr . "&&" expr
  407     | expr . "||" expr
  408     | expr . "^^" expr
  409     | expr . ".." expr
  412     | expr . "++"
  413     | expr . "--"
  415     | expr . '[' expr ']'
  416     | expr . '.' '[' expr ']'
  417     | expr . "?[" expr ']'
  418     | expr . '.' "?[" expr ']'
  419     | expr . "?." "name"
  420     | expr . '.' "?." "name"
  429     | expr . "??" expr
  430     | expr . '?' expr ':' expr
  433     | expr . "is" "type" '<' $@23 type_declaration_no_options '>' $@24
  434     | expr . "is" basic_type_declaration
  435     | expr . "is" "name"
  436     | expr . "as" "name"
  439     | expr . "as" "type" '<' $@25 type_declaration '>' $@26
  440     | expr . "as" basic_type_declaration
  441     | expr . '?' "as" "name"
  444     | expr . '?' "as" "type" '<' $@27 type_declaration '>' $@28
  445     | expr . '?' "as" basic_type_declaration
  453     | expr . "<|" expr
  454     | expr . "|>" expr
  455     | expr . "|>" basic_type_declaration
  466 expr_mtag: expr . '.' "$f" '(' expr ')'
  467          | expr . "?." "$f" '(' expr ')'
  468          | expr . '.' '.' "$f" '(' expr ')'
  469          | expr . '.' "?." "$f" '(' expr ')'
  470          | expr . "as" "$f" '(' expr ')'
  471          | expr . '?' "as" "$f" '(' expr ')'
  472          | expr . "is" "$f" '(' expr ')'

    "is"  shift, and go to state 609
    "as"  shift, and go to state 610
    "++"  shift, and go to state 613
    "--"  shift, and go to state 614
    "->"  shift, and go to state 619
    "?."  shift, and go to state 621
    "?["  shift, and go to state 622
    "<|"  shift, and go to state 623
    "|>"  shift, and go to state 624
    '.'   shift, and go to state 642
    '['   shift, and go to state 643

    $default  reduce using rule 387 (expr)


State 593

  347 expr_method_call: expr . "->" "name" '(' ')'
  348                 | expr . "->" "name" '(' expr_list ')'
  358 expr_field: expr . '.' "name"
  359           | expr . '.' '.' "name"
  360           | expr . '.' "name" '(' ')'
  361           | expr . '.' "name" '(' expr_list ')'
  362           | expr . '.' basic_type_declaration '(' ')'
  363           | expr . '.' basic_type_declaration '(' expr_list ')'
  366           | expr . '.' $@21 error $@22
  386 expr: '+' expr .
  388     | expr . "<<" expr
  389     | expr . ">>" expr
  390     | expr . "<<<" expr
  391     | expr . ">>>" expr
  392     | expr . '+' expr
  393     | expr . '-' expr
  394     | expr . '*' expr
  395     | expr . '/' expr
  396     | expr . '%' expr
  397     | expr . '<' expr
  398     | expr . '>' expr
  399     | expr . "==" expr
  400     | expr . "!=" expr
  401     | expr . "<=" expr
  402     | expr . ">=" expr
  403     | expr . '&' expr
  404     | expr . '|' expr
  405     | expr . '^' expr
  406     | expr . "&&" expr
  407     | expr . "||" expr
  408     | expr . "^^" expr
  409     | expr . ".." expr
  412     | expr . "++"
  413     | expr . "--"
  415     | expr . '[' expr ']'
  416     | expr . '.' '[' expr ']'
  417     | expr . "?[" expr ']'
  418     | expr . '.' "?[" expr ']'
  419     | expr . "?." "name"
  420     | expr . '.' "?." "name"
  429     | expr . "??" expr
  430     | expr . '?' expr ':' expr
  433     | expr . "is" "type" '<' $@23 type_declaration_no_options '>' $@24
  434     | expr . "is" basic_type_declaration
  435     | expr . "is" "name"
  436     | expr . "as" "name"
  439     | expr . "as" "type" '<' $@25 type_declaration '>' $@26
  440     | expr . "as" basic_type_declaration
  441     | expr . '?' "as" "name"
  444     | expr . '?' "as" "type" '<' $@27 type_declaration '>' $@28
  445     | expr . '?' "as" basic_type_declaration
  453     | expr . "<|" expr
  454     | expr . "|>" expr
  455     | expr . "|>" basic_type_declaration
  466 expr_mtag: expr . '.' "$f" '(' expr ')'
  467          | expr . "?." "$f" '(' expr ')'
  468          | expr . '.' '.' "$f" '(' expr ')'
  469          | expr . '.' "?." "$f" '(' expr ')'
  470          | expr . "as" "$f" '(' expr ')'
  471          | expr . '?' "as" "$f" '(' expr ')'
  472          | expr . "is" "$f" '(' expr ')'

    "is"  shift, and go to state 609
    "as"  shift, and go to state 610
    "++"  shift, and go to state 613
    "--"  shift, and go to state 614
    "->"  shift, and go to state 619
    "?."  shift, and go to state 621
    "?["  shift, and go to state 622
    "<|"  shift, and go to state 623
    "|>"  shift, and go to state 624
    '.'   shift, and go to state 642
    '['   shift, and go to state 643

    $default  reduce using rule 386 (expr)


State 594

  347 expr_method_call: expr . "->" "name" '(' ')'
  348                 | expr . "->" "name" '(' expr_list ')'
  358 expr_field: expr . '.' "name"
  359           | expr . '.' '.' "name"
  360           | expr . '.' "name" '(' ')'
  361           | expr . '.' "name" '(' expr_list ')'
  362           | expr . '.' basic_type_declaration '(' ')'
  363           | expr . '.' basic_type_declaration '(' expr_list ')'
  366           | expr . '.' $@21 error $@22
  388 expr: expr . "<<" expr
  389     | expr . ">>" expr
  390     | expr . "<<<" expr
  391     | expr . ">>>" expr
  392     | expr . '+' expr
  393     | expr . '-' expr
  394     | expr . '*' expr
  395     | expr . '/' expr
  396     | expr . '%' expr
  397     | expr . '<' expr
  398     | expr . '>' expr
  399     | expr . "==" expr
  400     | expr . "!=" expr
  401     | expr . "<=" expr
  402     | expr . ">=" expr
  403     | expr . '&' expr
  404     | expr . '|' expr
  405     | expr . '^' expr
  406     | expr . "&&" expr
  407     | expr . "||" expr
  408     | expr . "^^" expr
  409     | expr . ".." expr
  412     | expr . "++"
  413     | expr . "--"
  415     | expr . '[' expr ']'
  416     | expr . '.' '[' expr ']'
  417     | expr . "?[" expr ']'
  418     | expr . '.' "?[" expr ']'
  419     | expr . "?." "name"
  420     | expr . '.' "?." "name"
  423     | '*' expr .
  429     | expr . "??" expr
  430     | expr . '?' expr ':' expr
  433     | expr . "is" "type" '<' $@23 type_declaration_no_options '>' $@24
  434     | expr . "is" basic_type_declaration
  435     | expr . "is" "name"
  436     | expr . "as" "name"
  439     | expr . "as" "type" '<' $@25 type_declaration '>' $@26
  440     | expr . "as" basic_type_declaration
  441     | expr . '?' "as" "name"
  444     | expr . '?' "as" "type" '<' $@27 type_declaration '>' $@28
  445     | expr . '?' "as" basic_type_declaration
  453     | expr . "<|" expr
  454     | expr . "|>" expr
  455     | expr . "|>" basic_type_declaration
  466 expr_mtag: expr . '.' "$f" '(' expr ')'
  467          | expr . "?." "$f" '(' expr ')'
  468          | expr . '.' '.' "$f" '(' expr ')'
  469          | expr . '.' "?." "$f" '(' expr ')'
  470          | expr . "as" "$f" '(' expr ')'
  471          | expr . '?' "as" "$f" '(' expr ')'
  472          | expr . "is" "$f" '(' expr ')'

    "?."  shift, and go to state 621
    "?["  shift, and go to state 622
    '.'   shift, and go to state 642
    '['   shift, and go to state 643

    $default  reduce using rule 423 (expr)


State 595

  347 expr_method_call: expr . "->" "name" '(' ')'
  348                 | expr . "->" "name" '(' expr_list ')'
  358 expr_field: expr . '.' "name"
  359           | expr . '.' '.' "name"
  360           | expr . '.' "name" '(' ')'
  361           | expr . '.' "name" '(' expr_list ')'
  362           | expr . '.' basic_type_declaration '(' ')'
  363           | expr . '.' basic_type_declaration '(' expr_list ')'
  366           | expr . '.' $@21 error $@22
  385 expr: '~' expr .
  388     | expr . "<<" expr
  389     | expr . ">>" expr
  390     | expr . "<<<" expr
  391     | expr . ">>>" expr
  392     | expr . '+' expr
  393     | expr . '-' expr
  394     | expr . '*' expr
  395     | expr . '/' expr
  396     | expr . '%' expr
  397     | expr . '<' expr
  398     | expr . '>' expr
  399     | expr . "==" expr
  400     | expr . "!=" expr
  401     | expr . "<=" expr
  402     | expr . ">=" expr
  403     | expr . '&' expr
  404     | expr . '|' expr
  405     | expr . '^' expr
  406     | expr . "&&" expr
  407     | expr . "||" expr
  408     | expr . "^^" expr
  409     | expr . ".." expr
  412     | expr . "++"
  413     | expr . "--"
  415     | expr . '[' expr ']'
  416     | expr . '.' '[' expr ']'
  417     | expr . "?[" expr ']'
  418     | expr . '.' "?[" expr ']'
  419     | expr . "?." "name"
  420     | expr . '.' "?." "name"
  429     | expr . "??" expr
  430     | expr . '?' expr ':' expr
  433     | expr . "is" "type" '<' $@23 type_declaration_no_options '>' $@24
  434     | expr . "is" basic_type_declaration
  435     | expr . "is" "name"
  436     | expr . "as" "name"
  439     | expr . "as" "type" '<' $@25 type_declaration '>' $@26
  440     | expr . "as" basic_type_declaration
  441     | expr . '?' "as" "name"
  444     | expr . '?' "as" "type" '<' $@27 type_declaration '>' $@28
  445     | expr . '?' "as" basic_type_declaration
  453     | expr . "<|" expr
  454     | expr . "|>" expr
  455     | expr . "|>" basic_type_declaration
  466 expr_mtag: expr . '.' "$f" '(' expr ')'
  467          | expr . "?." "$f" '(' expr ')'
  468          | expr . '.' '.' "$f" '(' expr ')'
  469          | expr . '.' "?." "$f" '(' expr ')'
  470          | expr . "as" "$f" '(' expr ')'
  471          | expr . '?' "as" "$f" '(' expr ')'
  472          | expr . "is" "$f" '(' expr ')'

    "is"  shift, and go to state 609
    "as"  shift, and go to state 610
    "++"  shift, and go to state 613
    "--"  shift, and go to state 614
    "->"  shift, and go to state 619
    "?."  shift, and go to state 621
    "?["  shift, and go to state 622
    "<|"  shift, and go to state 623
    "|>"  shift, and go to state 624
    '.'   shift, and go to state 642
    '['   shift, and go to state 643

    $default  reduce using rule 385 (expr)


State 596

  347 expr_method_call: expr . "->" "name" '(' ')'
  348                 | expr . "->" "name" '(' expr_list ')'
  358 expr_field: expr . '.' "name"
  359           | expr . '.' '.' "name"
  360           | expr . '.' "name" '(' ')'
  361           | expr . '.' "name" '(' expr_list ')'
  362           | expr . '.' basic_type_declaration '(' ')'
  363           | expr . '.' basic_type_declaration '(' expr_list ')'
  366           | expr . '.' $@21 error $@22
  384 expr: '!' expr .
  388     | expr . "<<" expr
  389     | expr . ">>" expr
  390     | expr . "<<<" expr
  391     | expr . ">>>" expr
  392     | expr . '+' expr
  393     | expr . '-' expr
  394     | expr . '*' expr
  395     | expr . '/' expr
  396     | expr . '%' expr
  397     | expr . '<' expr
  398     | expr . '>' expr
  399     | expr . "==" expr
  400     | expr . "!=" expr
  401     | expr . "<=" expr
  402     | expr . ">=" expr
  403     | expr . '&' expr
  404     | expr . '|' expr
  405     | expr . '^' expr
  406     | expr . "&&" expr
  407     | expr . "||" expr
  408     | expr . "^^" expr
  409     | expr . ".." expr
  412     | expr . "++"
  413     | expr . "--"
  415     | expr . '[' expr ']'
  416     | expr . '.' '[' expr ']'
  417     | expr . "?[" expr ']'
  418     | expr . '.' "?[" expr ']'
  419     | expr . "?." "name"
  420     | expr . '.' "?." "name"
  429     | expr . "??" expr
  430     | expr . '?' expr ':' expr
  433     | expr . "is" "type" '<' $@23 type_declaration_no_options '>' $@24
  434     | expr . "is" basic_type_declaration
  435     | expr . "is" "name"
  436     | expr . "as" "name"
  439     | expr . "as" "type" '<' $@25 type_declaration '>' $@26
  440     | expr . "as" basic_type_declaration
  441     | expr . '?' "as" "name"
  444     | expr . '?' "as" "type" '<' $@27 type_declaration '>' $@28
  445     | expr . '?' "as" basic_type_declaration
  453     | expr . "<|" expr
  454     | expr . "|>" expr
  455     | expr . "|>" basic_type_declaration
  466 expr_mtag: expr . '.' "$f" '(' expr ')'
  467          | expr . "?." "$f" '(' expr ')'
  468          | expr . '.' '.' "$f" '(' expr ')'
  469          | expr . '.' "?." "$f" '(' expr ')'
  470          | expr . "as" "$f" '(' expr ')'
  471          | expr . '?' "as" "$f" '(' expr ')'
  472          | expr . "is" "$f" '(' expr ')'

    "is"  shift, and go to state 609
    "as"  shift, and go to state 610
    "++"  shift, and go to state 613
    "--"  shift, and go to state 614
    "->"  shift, and go to state 619
    "?."  shift, and go to state 621
    "?["  shift, and go to state 622
    "<|"  shift, and go to state 623
    "|>"  shift, and go to state 624
    '.'   shift, and go to state 642
    '['   shift, and go to state 643

    $default  reduce using rule 384 (expr)


State 597

  795 array_comprehension: '[' "for" . '(' variable_name_with_pos_list "in" expr_list ')' "end of expression" expr array_comprehension_where ']'

    '('  shift, and go to state 781


State 598

  796 array_comprehension: '[' "iterator" . "for" '(' variable_name_with_pos_list "in" expr_list ')' "end of expression" expr array_comprehension_where ']'

    "for"  shift, and go to state 782


State 599

  300 expr_list: expr_list . ',' expr
  767 make_dim_decl: '[' expr_list . optional_comma ']'

    ','  shift, and go to state 783

    $default  reduce using rule 793 (optional_comma)

    optional_comma  go to state 784


State 600

  299 expr_list: expr .
  347 expr_method_call: expr . "->" "name" '(' ')'
  348                 | expr . "->" "name" '(' expr_list ')'
  358 expr_field: expr . '.' "name"
  359           | expr . '.' '.' "name"
  360           | expr . '.' "name" '(' ')'
  361           | expr . '.' "name" '(' expr_list ')'
  362           | expr . '.' basic_type_declaration '(' ')'
  363           | expr . '.' basic_type_declaration '(' expr_list ')'
  366           | expr . '.' $@21 error $@22
  388 expr: expr . "<<" expr
  389     | expr . ">>" expr
  390     | expr . "<<<" expr
  391     | expr . ">>>" expr
  392     | expr . '+' expr
  393     | expr . '-' expr
  394     | expr . '*' expr
  395     | expr . '/' expr
  396     | expr . '%' expr
  397     | expr . '<' expr
  398     | expr . '>' expr
  399     | expr . "==" expr
  400     | expr . "!=" expr
  401     | expr . "<=" expr
  402     | expr . ">=" expr
  403     | expr . '&' expr
  404     | expr . '|' expr
  405     | expr . '^' expr
  406     | expr . "&&" expr
  407     | expr . "||" expr
  408     | expr . "^^" expr
  409     | expr . ".." expr
  412     | expr . "++"
  413     | expr . "--"
  415     | expr . '[' expr ']'
  416     | expr . '.' '[' expr ']'
  417     | expr . "?[" expr ']'
  418     | expr . '.' "?[" expr ']'
  419     | expr . "?." "name"
  420     | expr . '.' "?." "name"
  429     | expr . "??" expr
  430     | expr . '?' expr ':' expr
  433     | expr . "is" "type" '<' $@23 type_declaration_no_options '>' $@24
  434     | expr . "is" basic_type_declaration
  435     | expr . "is" "name"
  436     | expr . "as" "name"
  439     | expr . "as" "type" '<' $@25 type_declaration '>' $@26
  440     | expr . "as" basic_type_declaration
  441     | expr . '?' "as" "name"
  444     | expr . '?' "as" "type" '<' $@27 type_declaration '>' $@28
  445     | expr . '?' "as" basic_type_declaration
  453     | expr . "<|" expr
  454     | expr . "|>" expr
  455     | expr . "|>" basic_type_declaration
  466 expr_mtag: expr . '.' "$f" '(' expr ')'
  467          | expr . "?." "$f" '(' expr ')'
  468          | expr . '.' '.' "$f" '(' expr ')'
  469          | expr . '.' "?." "$f" '(' expr ')'
  470          | expr . "as" "$f" '(' expr ')'
  471          | expr . '?' "as" "$f" '(' expr ')'
  472          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 609
    "as"   shift, and go to state 610
    "<<"   shift, and go to state 611
    ">>"   shift, and go to state 612
    "++"   shift, and go to state 613
    "--"   shift, and go to state 614
    "<="   shift, and go to state 615
    ">="   shift, and go to state 616
    "=="   shift, and go to state 617
    "!="   shift, and go to state 618
    "->"   shift, and go to state 619
    "??"   shift, and go to state 620
    "?."   shift, and go to state 621
    "?["   shift, and go to state 622
    "<|"   shift, and go to state 623
    "|>"   shift, and go to state 624
    "<<<"  shift, and go to state 625
    ">>>"  shift, and go to state 626
    "&&"   shift, and go to state 627
    "||"   shift, and go to state 628
    "^^"   shift, and go to state 629
    ".."   shift, and go to state 630
    '?'    shift, and go to state 631
    '|'    shift, and go to state 632
    '^'    shift, and go to state 633
    '&'    shift, and go to state 634
    '<'    shift, and go to state 635
    '>'    shift, and go to state 636
    '-'    shift, and go to state 637
    '+'    shift, and go to state 638
    '*'    shift, and go to state 639
    '/'    shift, and go to state 640
    '%'    shift, and go to state 641
    '.'    shift, and go to state 642
    '['    shift, and go to state 643

    $default  reduce using rule 299 (expr_list)


State 601

  300 expr_list: expr_list . ',' expr
  414 expr: '(' expr_list . optional_comma ')'

    ','  shift, and go to state 783

    $default  reduce using rule 793 (optional_comma)

    optional_comma  go to state 785


State 602

  306 block_or_lambda: '@' '@' .
  351 func_addr_expr: '@' '@' . func_addr_name
  354               | '@' '@' . '<' $@17 type_declaration_no_options '>' $@18 func_addr_name
  357               | '@' '@' . '<' $@19 optional_function_argument_list optional_function_type '>' $@20 func_addr_name
  473 expr_mtag: '@' '@' . "$c" '(' expr ')'

    "::"    shift, and go to state 55
    "$i"    shift, and go to state 786
    "$c"    shift, and go to state 787
    "name"  shift, and go to state 56
    '<'     shift, and go to state 788

    $default  reduce using rule 306 (block_or_lambda)

    name_in_namespace  go to state 789
    func_addr_name     go to state 790


State 603

  345 expr_named_call: name_in_namespace '(' . '[' make_struct_fields ']' ')'
  346                | name_in_namespace '(' . expr_list ',' '[' make_struct_fields ']' ')'
  367 expr_call: name_in_namespace '(' . ')'
  368          | name_in_namespace '(' . "uninitialized" ')'
  369          | name_in_namespace '(' . make_struct_single ')'
  370          | name_in_namespace '(' . "uninitialized" make_struct_single ')'
  371          | name_in_namespace '(' . expr_list ')'

    "struct"                          shift, and go to state 409
    "class"                           shift, and go to state 410
    "true"                            shift, and go to state 411
    "false"                           shift, and go to state 412
    "new"                             shift, and go to state 413
    "typeinfo"                        shift, and go to state 414
    "type"                            shift, and go to state 415
    "array"                           shift, and go to state 416
    "null"                            shift, and go to state 417
    "table"                           shift, and go to state 418
    "deref"                           shift, and go to state 419
    "cast"                            shift, and go to state 420
    "upcast"                          shift, and go to state 421
    "addr"                            shift, and go to state 422
    "reinterpret"                     shift, and go to state 423
    "unsafe"                          shift, and go to state 424
    "fixed_array"                     shift, and go to state 425
    "default"                         shift, and go to state 426
    "uninitialized"                   shift, and go to state 791
    "bool"                            shift, and go to state 225
    "void"                            shift, and go to state 226
    "string"                          shift, and go to state 227
    "int"                             shift, and go to state 229
    "int2"                            shift, and go to state 230
    "int3"                            shift, and go to state 231
    "int4"                            shift, and go to state 232
    "uint"                            shift, and go to state 233
    "bitfield"                        shift, and go to state 427
    "uint2"                           shift, and go to state 235
    "uint3"                           shift, and go to state 236
    "uint4"                           shift, and go to state 237
    "float"                           shift, and go to state 238
    "float2"                          shift, and go to state 239
    "float3"                          shift, and go to state 240
    "float4"                          shift, and go to state 241
    "range"                           shift, and go to state 242
    "urange"                          shift, and go to state 243
    "range64"                         shift, and go to state 244
    "urange64"                        shift, and go to state 245
    "int64"                           shift, and go to state 247
    "uint64"                          shift, and go to state 248
    "double"                          shift, and go to state 249
    "int8"                            shift, and go to state 252
    "uint8"                           shift, and go to state 253
    "int16"                           shift, and go to state 254
    "uint16"                          shift, and go to state 255
    "tuple"                           shift, and go to state 428
    "variant"                         shift, and go to state 429
    "generator"                       shift, and go to state 430
    "++"                              shift, and go to state 431
    "--"                              shift, and go to state 432
    "::"                              shift, and go to state 55
    "$$"                              shift, and go to state 433
    "$i"                              shift, and go to state 434
    "$v"                              shift, and go to state 435
    "$b"                              shift, and go to state 436
    "$a"                              shift, and go to state 437
    "$c"                              shift, and go to state 438
    "$f"                              shift, and go to state 792
    "..."                             shift, and go to state 439
    "integer constant"                shift, and go to state 440
    "long integer constant"           shift, and go to state 441
    "unsigned integer constant"       shift, and go to state 442
    "unsigned long integer constant"  shift, and go to state 443
    "unsigned int8 constant"          shift, and go to state 444
    "floating point constant"         shift, and go to state 445
    "double constant"                 shift, and go to state 446
    "name"                            shift, and go to state 793
    "start of the string"             shift, and go to state 447
    "begin of code block"             shift, and go to state 448
    '-'                               shift, and go to state 449
    '+'                               shift, and go to state 450
    '*'                               shift, and go to state 451
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 452
    '!'                               shift, and go to state 453
    '['                               shift, and go to state 794
    '('                               shift, and go to state 455
    ')'                               shift, and go to state 795
    '$'                               shift, and go to state 456
    '@'                               shift, and go to state 457

    string_builder          go to state 458
    expr_reader             go to state 459
    expr_call_pipe          go to state 460
    name_in_namespace       go to state 461
    expr_new                go to state 462
    expr_cast               go to state 463
    expr_type_decl          go to state 464
    expr_type_info          go to state 465
    expr_list               go to state 796
    block_or_lambda         go to state 466
    expr_full_block         go to state 467
    expr_numeric_const      go to state 468
    expr_named_call         go to state 469
    expr_method_call        go to state 470
    func_addr_expr          go to state 471
    expr_field              go to state 472
    expr_call               go to state 473
    expr                    go to state 600
    expr_mtag               go to state 475
    basic_type_declaration  go to state 476
    make_decl               go to state 477
    make_struct_fields      go to state 797
    make_struct_single      go to state 798
    make_struct_decl        go to state 478
    make_tuple_call         go to state 479
    make_dim_decl           go to state 480
    make_table_decl         go to state 481
    array_comprehension     go to state 482


State 604

  316 expr_full_block: block_or_lambda optional_annotation_list . optional_capture_list optional_function_argument_list optional_function_type block_or_simple_block

    "capture"  shift, and go to state 799

    $default  reduce using rule 314 (optional_capture_list)

    optional_capture_list  go to state 800


State 605

  318 expr_full_block_assumed_piped: "begin of code block" . expressions "end of code block"

    $default  reduce using rule 238 (expressions)

    expressions  go to state 801


State 606

  305 block_or_lambda: '@' .
  306                | '@' . '@'

    '@'  shift, and go to state 802

    $default  reduce using rule 305 (block_or_lambda)


State 607

  317 expr_full_block_assumed_piped: block_or_lambda . optional_annotation_list optional_capture_list optional_function_argument_list optional_function_type expression_block

    '['  shift, and go to state 15

    $default  reduce using rule 113 (optional_annotation_list)

    optional_annotation_list  go to state 803


State 608

  219 expr_call_pipe: expr_call expr_full_block_assumed_piped .

    $default  reduce using rule 219 (expr_call_pipe)


State 609

  433 expr: expr "is" . "type" '<' $@23 type_declaration_no_options '>' $@24
  434     | expr "is" . basic_type_declaration
  435     | expr "is" . "name"
  472 expr_mtag: expr "is" . "$f" '(' expr ')'

    "type"      shift, and go to state 804
    "bool"      shift, and go to state 225
    "void"      shift, and go to state 226
    "string"    shift, and go to state 227
    "int"       shift, and go to state 229
    "int2"      shift, and go to state 230
    "int3"      shift, and go to state 231
    "int4"      shift, and go to state 232
    "uint"      shift, and go to state 233
    "bitfield"  shift, and go to state 427
    "uint2"     shift, and go to state 235
    "uint3"     shift, and go to state 236
    "uint4"     shift, and go to state 237
    "float"     shift, and go to state 238
    "float2"    shift, and go to state 239
    "float3"    shift, and go to state 240
    "float4"    shift, and go to state 241
    "range"     shift, and go to state 242
    "urange"    shift, and go to state 243
    "range64"   shift, and go to state 244
    "urange64"  shift, and go to state 245
    "int64"     shift, and go to state 247
    "uint64"    shift, and go to state 248
    "double"    shift, and go to state 249
    "int8"      shift, and go to state 252
    "uint8"     shift, and go to state 253
    "int16"     shift, and go to state 254
    "uint16"    shift, and go to state 255
    "$f"        shift, and go to state 805
    "name"      shift, and go to state 806

    basic_type_declaration  go to state 807


State 610

  436 expr: expr "as" . "name"
  439     | expr "as" . "type" '<' $@25 type_declaration '>' $@26
  440     | expr "as" . basic_type_declaration
  470 expr_mtag: expr "as" . "$f" '(' expr ')'

    "type"      shift, and go to state 808
    "bool"      shift, and go to state 225
    "void"      shift, and go to state 226
    "string"    shift, and go to state 227
    "int"       shift, and go to state 229
    "int2"      shift, and go to state 230
    "int3"      shift, and go to state 231
    "int4"      shift, and go to state 232
    "uint"      shift, and go to state 233
    "bitfield"  shift, and go to state 427
    "uint2"     shift, and go to state 235
    "uint3"     shift, and go to state 236
    "uint4"     shift, and go to state 237
    "float"     shift, and go to state 238
    "float2"    shift, and go to state 239
    "float3"    shift, and go to state 240
    "float4"    shift, and go to state 241
    "range"     shift, and go to state 242
    "urange"    shift, and go to state 243
    "range64"   shift, and go to state 244
    "urange64"  shift, and go to state 245
    "int64"     shift, and go to state 247
    "uint64"    shift, and go to state 248
    "double"    shift, and go to state 249
    "int8"      shift, and go to state 252
    "uint8"     shift, and go to state 253
    "int16"     shift, and go to state 254
    "uint16"    shift, and go to state 255
    "$f"        shift, and go to state 809
    "name"      shift, and go to state 810

    basic_type_declaration  go to state 811


State 611

  388 expr: expr "<<" . expr

    "struct"                          shift, and go to state 409
    "class"                           shift, and go to state 410
    "true"                            shift, and go to state 411
    "false"                           shift, and go to state 412
    "new"                             shift, and go to state 413
    "typeinfo"                        shift, and go to state 414
    "type"                            shift, and go to state 415
    "array"                           shift, and go to state 416
    "null"                            shift, and go to state 417
    "table"                           shift, and go to state 418
    "deref"                           shift, and go to state 419
    "cast"                            shift, and go to state 420
    "upcast"                          shift, and go to state 421
    "addr"                            shift, and go to state 422
    "reinterpret"                     shift, and go to state 423
    "unsafe"                          shift, and go to state 424
    "fixed_array"                     shift, and go to state 425
    "default"                         shift, and go to state 426
    "bool"                            shift, and go to state 225
    "void"                            shift, and go to state 226
    "string"                          shift, and go to state 227
    "int"                             shift, and go to state 229
    "int2"                            shift, and go to state 230
    "int3"                            shift, and go to state 231
    "int4"                            shift, and go to state 232
    "uint"                            shift, and go to state 233
    "bitfield"                        shift, and go to state 427
    "uint2"                           shift, and go to state 235
    "uint3"                           shift, and go to state 236
    "uint4"                           shift, and go to state 237
    "float"                           shift, and go to state 238
    "float2"                          shift, and go to state 239
    "float3"                          shift, and go to state 240
    "float4"                          shift, and go to state 241
    "range"                           shift, and go to state 242
    "urange"                          shift, and go to state 243
    "range64"                         shift, and go to state 244
    "urange64"                        shift, and go to state 245
    "int64"                           shift, and go to state 247
    "uint64"                          shift, and go to state 248
    "double"                          shift, and go to state 249
    "int8"                            shift, and go to state 252
    "uint8"                           shift, and go to state 253
    "int16"                           shift, and go to state 254
    "uint16"                          shift, and go to state 255
    "tuple"                           shift, and go to state 428
    "variant"                         shift, and go to state 429
    "generator"                       shift, and go to state 430
    "++"                              shift, and go to state 431
    "--"                              shift, and go to state 432
    "::"                              shift, and go to state 55
    "$$"                              shift, and go to state 433
    "$i"                              shift, and go to state 434
    "$v"                              shift, and go to state 435
    "$b"                              shift, and go to state 436
    "$a"                              shift, and go to state 437
    "$c"                              shift, and go to state 438
    "..."                             shift, and go to state 439
    "integer constant"                shift, and go to state 440
    "long integer constant"           shift, and go to state 441
    "unsigned integer constant"       shift, and go to state 442
    "unsigned long integer constant"  shift, and go to state 443
    "unsigned int8 constant"          shift, and go to state 444
    "floating point constant"         shift, and go to state 445
    "double constant"                 shift, and go to state 446
    "name"                            shift, and go to state 56
    "start of the string"             shift, and go to state 447
    "begin of code block"             shift, and go to state 448
    '-'                               shift, and go to state 449
    '+'                               shift, and go to state 450
    '*'                               shift, and go to state 451
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 452
    '!'                               shift, and go to state 453
    '['                               shift, and go to state 454
    '('                               shift, and go to state 455
    '$'                               shift, and go to state 456
    '@'                               shift, and go to state 457

    string_builder          go to state 458
    expr_reader             go to state 459
    expr_call_pipe          go to state 460
    name_in_namespace       go to state 461
    expr_new                go to state 462
    expr_cast               go to state 463
    expr_type_decl          go to state 464
    expr_type_info          go to state 465
    block_or_lambda         go to state 466
    expr_full_block         go to state 467
    expr_numeric_const      go to state 468
    expr_named_call         go to state 469
    expr_method_call        go to state 470
    func_addr_expr          go to state 471
    expr_field              go to state 472
    expr_call               go to state 473
    expr                    go to state 812
    expr_mtag               go to state 475
    basic_type_declaration  go to state 476
    make_decl               go to state 477
    make_struct_decl        go to state 478
    make_tuple_call         go to state 479
    make_dim_decl           go to state 480
    make_table_decl         go to state 481
    array_comprehension     go to state 482


State 612

  389 expr: expr ">>" . expr

    "struct"                          shift, and go to state 409
    "class"                           shift, and go to state 410
    "true"                            shift, and go to state 411
    "false"                           shift, and go to state 412
    "new"                             shift, and go to state 413
    "typeinfo"                        shift, and go to state 414
    "type"                            shift, and go to state 415
    "array"                           shift, and go to state 416
    "null"                            shift, and go to state 417
    "table"                           shift, and go to state 418
    "deref"                           shift, and go to state 419
    "cast"                            shift, and go to state 420
    "upcast"                          shift, and go to state 421
    "addr"                            shift, and go to state 422
    "reinterpret"                     shift, and go to state 423
    "unsafe"                          shift, and go to state 424
    "fixed_array"                     shift, and go to state 425
    "default"                         shift, and go to state 426
    "bool"                            shift, and go to state 225
    "void"                            shift, and go to state 226
    "string"                          shift, and go to state 227
    "int"                             shift, and go to state 229
    "int2"                            shift, and go to state 230
    "int3"                            shift, and go to state 231
    "int4"                            shift, and go to state 232
    "uint"                            shift, and go to state 233
    "bitfield"                        shift, and go to state 427
    "uint2"                           shift, and go to state 235
    "uint3"                           shift, and go to state 236
    "uint4"                           shift, and go to state 237
    "float"                           shift, and go to state 238
    "float2"                          shift, and go to state 239
    "float3"                          shift, and go to state 240
    "float4"                          shift, and go to state 241
    "range"                           shift, and go to state 242
    "urange"                          shift, and go to state 243
    "range64"                         shift, and go to state 244
    "urange64"                        shift, and go to state 245
    "int64"                           shift, and go to state 247
    "uint64"                          shift, and go to state 248
    "double"                          shift, and go to state 249
    "int8"                            shift, and go to state 252
    "uint8"                           shift, and go to state 253
    "int16"                           shift, and go to state 254
    "uint16"                          shift, and go to state 255
    "tuple"                           shift, and go to state 428
    "variant"                         shift, and go to state 429
    "generator"                       shift, and go to state 430
    "++"                              shift, and go to state 431
    "--"                              shift, and go to state 432
    "::"                              shift, and go to state 55
    "$$"                              shift, and go to state 433
    "$i"                              shift, and go to state 434
    "$v"                              shift, and go to state 435
    "$b"                              shift, and go to state 436
    "$a"                              shift, and go to state 437
    "$c"                              shift, and go to state 438
    "..."                             shift, and go to state 439
    "integer constant"                shift, and go to state 440
    "long integer constant"           shift, and go to state 441
    "unsigned integer constant"       shift, and go to state 442
    "unsigned long integer constant"  shift, and go to state 443
    "unsigned int8 constant"          shift, and go to state 444
    "floating point constant"         shift, and go to state 445
    "double constant"                 shift, and go to state 446
    "name"                            shift, and go to state 56
    "start of the string"             shift, and go to state 447
    "begin of code block"             shift, and go to state 448
    '-'                               shift, and go to state 449
    '+'                               shift, and go to state 450
    '*'                               shift, and go to state 451
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 452
    '!'                               shift, and go to state 453
    '['                               shift, and go to state 454
    '('                               shift, and go to state 455
    '$'                               shift, and go to state 456
    '@'                               shift, and go to state 457

    string_builder          go to state 458
    expr_reader             go to state 459
    expr_call_pipe          go to state 460
    name_in_namespace       go to state 461
    expr_new                go to state 462
    expr_cast               go to state 463
    expr_type_decl          go to state 464
    expr_type_info          go to state 465
    block_or_lambda         go to state 466
    expr_full_block         go to state 467
    expr_numeric_const      go to state 468
    expr_named_call         go to state 469
    expr_method_call        go to state 470
    func_addr_expr          go to state 471
    expr_field              go to state 472
    expr_call               go to state 473
    expr                    go to state 813
    expr_mtag               go to state 475
    basic_type_declaration  go to state 476
    make_decl               go to state 477
    make_struct_decl        go to state 478
    make_tuple_call         go to state 479
    make_dim_decl           go to state 480
    make_table_decl         go to state 481
    array_comprehension     go to state 482


State 613

  412 expr: expr "++" .

    $default  reduce using rule 412 (expr)


State 614

  413 expr: expr "--" .

    $default  reduce using rule 413 (expr)


State 615

  401 expr: expr "<=" . expr

    "struct"                          shift, and go to state 409
    "class"                           shift, and go to state 410
    "true"                            shift, and go to state 411
    "false"                           shift, and go to state 412
    "new"                             shift, and go to state 413
    "typeinfo"                        shift, and go to state 414
    "type"                            shift, and go to state 415
    "array"                           shift, and go to state 416
    "null"                            shift, and go to state 417
    "table"                           shift, and go to state 418
    "deref"                           shift, and go to state 419
    "cast"                            shift, and go to state 420
    "upcast"                          shift, and go to state 421
    "addr"                            shift, and go to state 422
    "reinterpret"                     shift, and go to state 423
    "unsafe"                          shift, and go to state 424
    "fixed_array"                     shift, and go to state 425
    "default"                         shift, and go to state 426
    "bool"                            shift, and go to state 225
    "void"                            shift, and go to state 226
    "string"                          shift, and go to state 227
    "int"                             shift, and go to state 229
    "int2"                            shift, and go to state 230
    "int3"                            shift, and go to state 231
    "int4"                            shift, and go to state 232
    "uint"                            shift, and go to state 233
    "bitfield"                        shift, and go to state 427
    "uint2"                           shift, and go to state 235
    "uint3"                           shift, and go to state 236
    "uint4"                           shift, and go to state 237
    "float"                           shift, and go to state 238
    "float2"                          shift, and go to state 239
    "float3"                          shift, and go to state 240
    "float4"                          shift, and go to state 241
    "range"                           shift, and go to state 242
    "urange"                          shift, and go to state 243
    "range64"                         shift, and go to state 244
    "urange64"                        shift, and go to state 245
    "int64"                           shift, and go to state 247
    "uint64"                          shift, and go to state 248
    "double"                          shift, and go to state 249
    "int8"                            shift, and go to state 252
    "uint8"                           shift, and go to state 253
    "int16"                           shift, and go to state 254
    "uint16"                          shift, and go to state 255
    "tuple"                           shift, and go to state 428
    "variant"                         shift, and go to state 429
    "generator"                       shift, and go to state 430
    "++"                              shift, and go to state 431
    "--"                              shift, and go to state 432
    "::"                              shift, and go to state 55
    "$$"                              shift, and go to state 433
    "$i"                              shift, and go to state 434
    "$v"                              shift, and go to state 435
    "$b"                              shift, and go to state 436
    "$a"                              shift, and go to state 437
    "$c"                              shift, and go to state 438
    "..."                             shift, and go to state 439
    "integer constant"                shift, and go to state 440
    "long integer constant"           shift, and go to state 441
    "unsigned integer constant"       shift, and go to state 442
    "unsigned long integer constant"  shift, and go to state 443
    "unsigned int8 constant"          shift, and go to state 444
    "floating point constant"         shift, and go to state 445
    "double constant"                 shift, and go to state 446
    "name"                            shift, and go to state 56
    "start of the string"             shift, and go to state 447
    "begin of code block"             shift, and go to state 448
    '-'                               shift, and go to state 449
    '+'                               shift, and go to state 450
    '*'                               shift, and go to state 451
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 452
    '!'                               shift, and go to state 453
    '['                               shift, and go to state 454
    '('                               shift, and go to state 455
    '$'                               shift, and go to state 456
    '@'                               shift, and go to state 457

    string_builder          go to state 458
    expr_reader             go to state 459
    expr_call_pipe          go to state 460
    name_in_namespace       go to state 461
    expr_new                go to state 462
    expr_cast               go to state 463
    expr_type_decl          go to state 464
    expr_type_info          go to state 465
    block_or_lambda         go to state 466
    expr_full_block         go to state 467
    expr_numeric_const      go to state 468
    expr_named_call         go to state 469
    expr_method_call        go to state 470
    func_addr_expr          go to state 471
    expr_field              go to state 472
    expr_call               go to state 473
    expr                    go to state 814
    expr_mtag               go to state 475
    basic_type_declaration  go to state 476
    make_decl               go to state 477
    make_struct_decl        go to state 478
    make_tuple_call         go to state 479
    make_dim_decl           go to state 480
    make_table_decl         go to state 481
    array_comprehension     go to state 482


State 616

  402 expr: expr ">=" . expr

    "struct"                          shift, and go to state 409
    "class"                           shift, and go to state 410
    "true"                            shift, and go to state 411
    "false"                           shift, and go to state 412
    "new"                             shift, and go to state 413
    "typeinfo"                        shift, and go to state 414
    "type"                            shift, and go to state 415
    "array"                           shift, and go to state 416
    "null"                            shift, and go to state 417
    "table"                           shift, and go to state 418
    "deref"                           shift, and go to state 419
    "cast"                            shift, and go to state 420
    "upcast"                          shift, and go to state 421
    "addr"                            shift, and go to state 422
    "reinterpret"                     shift, and go to state 423
    "unsafe"                          shift, and go to state 424
    "fixed_array"                     shift, and go to state 425
    "default"                         shift, and go to state 426
    "bool"                            shift, and go to state 225
    "void"                            shift, and go to state 226
    "string"                          shift, and go to state 227
    "int"                             shift, and go to state 229
    "int2"                            shift, and go to state 230
    "int3"                            shift, and go to state 231
    "int4"                            shift, and go to state 232
    "uint"                            shift, and go to state 233
    "bitfield"                        shift, and go to state 427
    "uint2"                           shift, and go to state 235
    "uint3"                           shift, and go to state 236
    "uint4"                           shift, and go to state 237
    "float"                           shift, and go to state 238
    "float2"                          shift, and go to state 239
    "float3"                          shift, and go to state 240
    "float4"                          shift, and go to state 241
    "range"                           shift, and go to state 242
    "urange"                          shift, and go to state 243
    "range64"                         shift, and go to state 244
    "urange64"                        shift, and go to state 245
    "int64"                           shift, and go to state 247
    "uint64"                          shift, and go to state 248
    "double"                          shift, and go to state 249
    "int8"                            shift, and go to state 252
    "uint8"                           shift, and go to state 253
    "int16"                           shift, and go to state 254
    "uint16"                          shift, and go to state 255
    "tuple"                           shift, and go to state 428
    "variant"                         shift, and go to state 429
    "generator"                       shift, and go to state 430
    "++"                              shift, and go to state 431
    "--"                              shift, and go to state 432
    "::"                              shift, and go to state 55
    "$$"                              shift, and go to state 433
    "$i"                              shift, and go to state 434
    "$v"                              shift, and go to state 435
    "$b"                              shift, and go to state 436
    "$a"                              shift, and go to state 437
    "$c"                              shift, and go to state 438
    "..."                             shift, and go to state 439
    "integer constant"                shift, and go to state 440
    "long integer constant"           shift, and go to state 441
    "unsigned integer constant"       shift, and go to state 442
    "unsigned long integer constant"  shift, and go to state 443
    "unsigned int8 constant"          shift, and go to state 444
    "floating point constant"         shift, and go to state 445
    "double constant"                 shift, and go to state 446
    "name"                            shift, and go to state 56
    "start of the string"             shift, and go to state 447
    "begin of code block"             shift, and go to state 448
    '-'                               shift, and go to state 449
    '+'                               shift, and go to state 450
    '*'                               shift, and go to state 451
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 452
    '!'                               shift, and go to state 453
    '['                               shift, and go to state 454
    '('                               shift, and go to state 455
    '$'                               shift, and go to state 456
    '@'                               shift, and go to state 457

    string_builder          go to state 458
    expr_reader             go to state 459
    expr_call_pipe          go to state 460
    name_in_namespace       go to state 461
    expr_new                go to state 462
    expr_cast               go to state 463
    expr_type_decl          go to state 464
    expr_type_info          go to state 465
    block_or_lambda         go to state 466
    expr_full_block         go to state 467
    expr_numeric_const      go to state 468
    expr_named_call         go to state 469
    expr_method_call        go to state 470
    func_addr_expr          go to state 471
    expr_field              go to state 472
    expr_call               go to state 473
    expr                    go to state 815
    expr_mtag               go to state 475
    basic_type_declaration  go to state 476
    make_decl               go to state 477
    make_struct_decl        go to state 478
    make_tuple_call         go to state 479
    make_dim_decl           go to state 480
    make_table_decl         go to state 481
    array_comprehension     go to state 482


State 617

  399 expr: expr "==" . expr

    "struct"                          shift, and go to state 409
    "class"                           shift, and go to state 410
    "true"                            shift, and go to state 411
    "false"                           shift, and go to state 412
    "new"                             shift, and go to state 413
    "typeinfo"                        shift, and go to state 414
    "type"                            shift, and go to state 415
    "array"                           shift, and go to state 416
    "null"                            shift, and go to state 417
    "table"                           shift, and go to state 418
    "deref"                           shift, and go to state 419
    "cast"                            shift, and go to state 420
    "upcast"                          shift, and go to state 421
    "addr"                            shift, and go to state 422
    "reinterpret"                     shift, and go to state 423
    "unsafe"                          shift, and go to state 424
    "fixed_array"                     shift, and go to state 425
    "default"                         shift, and go to state 426
    "bool"                            shift, and go to state 225
    "void"                            shift, and go to state 226
    "string"                          shift, and go to state 227
    "int"                             shift, and go to state 229
    "int2"                            shift, and go to state 230
    "int3"                            shift, and go to state 231
    "int4"                            shift, and go to state 232
    "uint"                            shift, and go to state 233
    "bitfield"                        shift, and go to state 427
    "uint2"                           shift, and go to state 235
    "uint3"                           shift, and go to state 236
    "uint4"                           shift, and go to state 237
    "float"                           shift, and go to state 238
    "float2"                          shift, and go to state 239
    "float3"                          shift, and go to state 240
    "float4"                          shift, and go to state 241
    "range"                           shift, and go to state 242
    "urange"                          shift, and go to state 243
    "range64"                         shift, and go to state 244
    "urange64"                        shift, and go to state 245
    "int64"                           shift, and go to state 247
    "uint64"                          shift, and go to state 248
    "double"                          shift, and go to state 249
    "int8"                            shift, and go to state 252
    "uint8"                           shift, and go to state 253
    "int16"                           shift, and go to state 254
    "uint16"                          shift, and go to state 255
    "tuple"                           shift, and go to state 428
    "variant"                         shift, and go to state 429
    "generator"                       shift, and go to state 430
    "++"                              shift, and go to state 431
    "--"                              shift, and go to state 432
    "::"                              shift, and go to state 55
    "$$"                              shift, and go to state 433
    "$i"                              shift, and go to state 434
    "$v"                              shift, and go to state 435
    "$b"                              shift, and go to state 436
    "$a"                              shift, and go to state 437
    "$c"                              shift, and go to state 438
    "..."                             shift, and go to state 439
    "integer constant"                shift, and go to state 440
    "long integer constant"           shift, and go to state 441
    "unsigned integer constant"       shift, and go to state 442
    "unsigned long integer constant"  shift, and go to state 443
    "unsigned int8 constant"          shift, and go to state 444
    "floating point constant"         shift, and go to state 445
    "double constant"                 shift, and go to state 446
    "name"                            shift, and go to state 56
    "start of the string"             shift, and go to state 447
    "begin of code block"             shift, and go to state 448
    '-'                               shift, and go to state 449
    '+'                               shift, and go to state 450
    '*'                               shift, and go to state 451
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 452
    '!'                               shift, and go to state 453
    '['                               shift, and go to state 454
    '('                               shift, and go to state 455
    '$'                               shift, and go to state 456
    '@'                               shift, and go to state 457

    string_builder          go to state 458
    expr_reader             go to state 459
    expr_call_pipe          go to state 460
    name_in_namespace       go to state 461
    expr_new                go to state 462
    expr_cast               go to state 463
    expr_type_decl          go to state 464
    expr_type_info          go to state 465
    block_or_lambda         go to state 466
    expr_full_block         go to state 467
    expr_numeric_const      go to state 468
    expr_named_call         go to state 469
    expr_method_call        go to state 470
    func_addr_expr          go to state 471
    expr_field              go to state 472
    expr_call               go to state 473
    expr                    go to state 816
    expr_mtag               go to state 475
    basic_type_declaration  go to state 476
    make_decl               go to state 477
    make_struct_decl        go to state 478
    make_tuple_call         go to state 479
    make_dim_decl           go to state 480
    make_table_decl         go to state 481
    array_comprehension     go to state 482


State 618

  400 expr: expr "!=" . expr

    "struct"                          shift, and go to state 409
    "class"                           shift, and go to state 410
    "true"                            shift, and go to state 411
    "false"                           shift, and go to state 412
    "new"                             shift, and go to state 413
    "typeinfo"                        shift, and go to state 414
    "type"                            shift, and go to state 415
    "array"                           shift, and go to state 416
    "null"                            shift, and go to state 417
    "table"                           shift, and go to state 418
    "deref"                           shift, and go to state 419
    "cast"                            shift, and go to state 420
    "upcast"                          shift, and go to state 421
    "addr"                            shift, and go to state 422
    "reinterpret"                     shift, and go to state 423
    "unsafe"                          shift, and go to state 424
    "fixed_array"                     shift, and go to state 425
    "default"                         shift, and go to state 426
    "bool"                            shift, and go to state 225
    "void"                            shift, and go to state 226
    "string"                          shift, and go to state 227
    "int"                             shift, and go to state 229
    "int2"                            shift, and go to state 230
    "int3"                            shift, and go to state 231
    "int4"                            shift, and go to state 232
    "uint"                            shift, and go to state 233
    "bitfield"                        shift, and go to state 427
    "uint2"                           shift, and go to state 235
    "uint3"                           shift, and go to state 236
    "uint4"                           shift, and go to state 237
    "float"                           shift, and go to state 238
    "float2"                          shift, and go to state 239
    "float3"                          shift, and go to state 240
    "float4"                          shift, and go to state 241
    "range"                           shift, and go to state 242
    "urange"                          shift, and go to state 243
    "range64"                         shift, and go to state 244
    "urange64"                        shift, and go to state 245
    "int64"                           shift, and go to state 247
    "uint64"                          shift, and go to state 248
    "double"                          shift, and go to state 249
    "int8"                            shift, and go to state 252
    "uint8"                           shift, and go to state 253
    "int16"                           shift, and go to state 254
    "uint16"                          shift, and go to state 255
    "tuple"                           shift, and go to state 428
    "variant"                         shift, and go to state 429
    "generator"                       shift, and go to state 430
    "++"                              shift, and go to state 431
    "--"                              shift, and go to state 432
    "::"                              shift, and go to state 55
    "$$"                              shift, and go to state 433
    "$i"                              shift, and go to state 434
    "$v"                              shift, and go to state 435
    "$b"                              shift, and go to state 436
    "$a"                              shift, and go to state 437
    "$c"                              shift, and go to state 438
    "..."                             shift, and go to state 439
    "integer constant"                shift, and go to state 440
    "long integer constant"           shift, and go to state 441
    "unsigned integer constant"       shift, and go to state 442
    "unsigned long integer constant"  shift, and go to state 443
    "unsigned int8 constant"          shift, and go to state 444
    "floating point constant"         shift, and go to state 445
    "double constant"                 shift, and go to state 446
    "name"                            shift, and go to state 56
    "start of the string"             shift, and go to state 447
    "begin of code block"             shift, and go to state 448
    '-'                               shift, and go to state 449
    '+'                               shift, and go to state 450
    '*'                               shift, and go to state 451
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 452
    '!'                               shift, and go to state 453
    '['                               shift, and go to state 454
    '('                               shift, and go to state 455
    '$'                               shift, and go to state 456
    '@'                               shift, and go to state 457

    string_builder          go to state 458
    expr_reader             go to state 459
    expr_call_pipe          go to state 460
    name_in_namespace       go to state 461
    expr_new                go to state 462
    expr_cast               go to state 463
    expr_type_decl          go to state 464
    expr_type_info          go to state 465
    block_or_lambda         go to state 466
    expr_full_block         go to state 467
    expr_numeric_const      go to state 468
    expr_named_call         go to state 469
    expr_method_call        go to state 470
    func_addr_expr          go to state 471
    expr_field              go to state 472
    expr_call               go to state 473
    expr                    go to state 817
    expr_mtag               go to state 475
    basic_type_declaration  go to state 476
    make_decl               go to state 477
    make_struct_decl        go to state 478
    make_tuple_call         go to state 479
    make_dim_decl           go to state 480
    make_table_decl         go to state 481
    array_comprehension     go to state 482


State 619

  347 expr_method_call: expr "->" . "name" '(' ')'
  348                 | expr "->" . "name" '(' expr_list ')'

    "name"  shift, and go to state 818


State 620

  429 expr: expr "??" . expr

    "struct"                          shift, and go to state 409
    "class"                           shift, and go to state 410
    "true"                            shift, and go to state 411
    "false"                           shift, and go to state 412
    "new"                             shift, and go to state 413
    "typeinfo"                        shift, and go to state 414
    "type"                            shift, and go to state 415
    "array"                           shift, and go to state 416
    "null"                            shift, and go to state 417
    "table"                           shift, and go to state 418
    "deref"                           shift, and go to state 419
    "cast"                            shift, and go to state 420
    "upcast"                          shift, and go to state 421
    "addr"                            shift, and go to state 422
    "reinterpret"                     shift, and go to state 423
    "unsafe"                          shift, and go to state 424
    "fixed_array"                     shift, and go to state 425
    "default"                         shift, and go to state 426
    "bool"                            shift, and go to state 225
    "void"                            shift, and go to state 226
    "string"                          shift, and go to state 227
    "int"                             shift, and go to state 229
    "int2"                            shift, and go to state 230
    "int3"                            shift, and go to state 231
    "int4"                            shift, and go to state 232
    "uint"                            shift, and go to state 233
    "bitfield"                        shift, and go to state 427
    "uint2"                           shift, and go to state 235
    "uint3"                           shift, and go to state 236
    "uint4"                           shift, and go to state 237
    "float"                           shift, and go to state 238
    "float2"                          shift, and go to state 239
    "float3"                          shift, and go to state 240
    "float4"                          shift, and go to state 241
    "range"                           shift, and go to state 242
    "urange"                          shift, and go to state 243
    "range64"                         shift, and go to state 244
    "urange64"                        shift, and go to state 245
    "int64"                           shift, and go to state 247
    "uint64"                          shift, and go to state 248
    "double"                          shift, and go to state 249
    "int8"                            shift, and go to state 252
    "uint8"                           shift, and go to state 253
    "int16"                           shift, and go to state 254
    "uint16"                          shift, and go to state 255
    "tuple"                           shift, and go to state 428
    "variant"                         shift, and go to state 429
    "generator"                       shift, and go to state 430
    "++"                              shift, and go to state 431
    "--"                              shift, and go to state 432
    "::"                              shift, and go to state 55
    "$$"                              shift, and go to state 433
    "$i"                              shift, and go to state 434
    "$v"                              shift, and go to state 435
    "$b"                              shift, and go to state 436
    "$a"                              shift, and go to state 437
    "$c"                              shift, and go to state 438
    "..."                             shift, and go to state 439
    "integer constant"                shift, and go to state 440
    "long integer constant"           shift, and go to state 441
    "unsigned integer constant"       shift, and go to state 442
    "unsigned long integer constant"  shift, and go to state 443
    "unsigned int8 constant"          shift, and go to state 444
    "floating point constant"         shift, and go to state 445
    "double constant"                 shift, and go to state 446
    "name"                            shift, and go to state 56
    "start of the string"             shift, and go to state 447
    "begin of code block"             shift, and go to state 448
    '-'                               shift, and go to state 449
    '+'                               shift, and go to state 450
    '*'                               shift, and go to state 451
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 452
    '!'                               shift, and go to state 453
    '['                               shift, and go to state 454
    '('                               shift, and go to state 455
    '$'                               shift, and go to state 456
    '@'                               shift, and go to state 457

    string_builder          go to state 458
    expr_reader             go to state 459
    expr_call_pipe          go to state 460
    name_in_namespace       go to state 461
    expr_new                go to state 462
    expr_cast               go to state 463
    expr_type_decl          go to state 464
    expr_type_info          go to state 465
    block_or_lambda         go to state 466
    expr_full_block         go to state 467
    expr_numeric_const      go to state 468
    expr_named_call         go to state 469
    expr_method_call        go to state 470
    func_addr_expr          go to state 471
    expr_field              go to state 472
    expr_call               go to state 473
    expr                    go to state 819
    expr_mtag               go to state 475
    basic_type_declaration  go to state 476
    make_decl               go to state 477
    make_struct_decl        go to state 478
    make_tuple_call         go to state 479
    make_dim_decl           go to state 480
    make_table_decl         go to state 481
    array_comprehension     go to state 482


State 621

  419 expr: expr "?." . "name"
  467 expr_mtag: expr "?." . "$f" '(' expr ')'

    "$f"    shift, and go to state 820
    "name"  shift, and go to state 821


State 622

  417 expr: expr "?[" . expr ']'

    "struct"                          shift, and go to state 409
    "class"                           shift, and go to state 410
    "true"                            shift, and go to state 411
    "false"                           shift, and go to state 412
    "new"                             shift, and go to state 413
    "typeinfo"                        shift, and go to state 414
    "type"                            shift, and go to state 415
    "array"                           shift, and go to state 416
    "null"                            shift, and go to state 417
    "table"                           shift, and go to state 418
    "deref"                           shift, and go to state 419
    "cast"                            shift, and go to state 420
    "upcast"                          shift, and go to state 421
    "addr"                            shift, and go to state 422
    "reinterpret"                     shift, and go to state 423
    "unsafe"                          shift, and go to state 424
    "fixed_array"                     shift, and go to state 425
    "default"                         shift, and go to state 426
    "bool"                            shift, and go to state 225
    "void"                            shift, and go to state 226
    "string"                          shift, and go to state 227
    "int"                             shift, and go to state 229
    "int2"                            shift, and go to state 230
    "int3"                            shift, and go to state 231
    "int4"                            shift, and go to state 232
    "uint"                            shift, and go to state 233
    "bitfield"                        shift, and go to state 427
    "uint2"                           shift, and go to state 235
    "uint3"                           shift, and go to state 236
    "uint4"                           shift, and go to state 237
    "float"                           shift, and go to state 238
    "float2"                          shift, and go to state 239
    "float3"                          shift, and go to state 240
    "float4"                          shift, and go to state 241
    "range"                           shift, and go to state 242
    "urange"                          shift, and go to state 243
    "range64"                         shift, and go to state 244
    "urange64"                        shift, and go to state 245
    "int64"                           shift, and go to state 247
    "uint64"                          shift, and go to state 248
    "double"                          shift, and go to state 249
    "int8"                            shift, and go to state 252
    "uint8"                           shift, and go to state 253
    "int16"                           shift, and go to state 254
    "uint16"                          shift, and go to state 255
    "tuple"                           shift, and go to state 428
    "variant"                         shift, and go to state 429
    "generator"                       shift, and go to state 430
    "++"                              shift, and go to state 431
    "--"                              shift, and go to state 432
    "::"                              shift, and go to state 55
    "$$"                              shift, and go to state 433
    "$i"                              shift, and go to state 434
    "$v"                              shift, and go to state 435
    "$b"                              shift, and go to state 436
    "$a"                              shift, and go to state 437
    "$c"                              shift, and go to state 438
    "..."                             shift, and go to state 439
    "integer constant"                shift, and go to state 440
    "long integer constant"           shift, and go to state 441
    "unsigned integer constant"       shift, and go to state 442
    "unsigned long integer constant"  shift, and go to state 443
    "unsigned int8 constant"          shift, and go to state 444
    "floating point constant"         shift, and go to state 445
    "double constant"                 shift, and go to state 446
    "name"                            shift, and go to state 56
    "start of the string"             shift, and go to state 447
    "begin of code block"             shift, and go to state 448
    '-'                               shift, and go to state 449
    '+'                               shift, and go to state 450
    '*'                               shift, and go to state 451
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 452
    '!'                               shift, and go to state 453
    '['                               shift, and go to state 454
    '('                               shift, and go to state 455
    '$'                               shift, and go to state 456
    '@'                               shift, and go to state 457

    string_builder          go to state 458
    expr_reader             go to state 459
    expr_call_pipe          go to state 460
    name_in_namespace       go to state 461
    expr_new                go to state 462
    expr_cast               go to state 463
    expr_type_decl          go to state 464
    expr_type_info          go to state 465
    block_or_lambda         go to state 466
    expr_full_block         go to state 467
    expr_numeric_const      go to state 468
    expr_named_call         go to state 469
    expr_method_call        go to state 470
    func_addr_expr          go to state 471
    expr_field              go to state 472
    expr_call               go to state 473
    expr                    go to state 822
    expr_mtag               go to state 475
    basic_type_declaration  go to state 476
    make_decl               go to state 477
    make_struct_decl        go to state 478
    make_tuple_call         go to state 479
    make_dim_decl           go to state 480
    make_table_decl         go to state 481
    array_comprehension     go to state 482


State 623

  453 expr: expr "<|" . expr

    "struct"                          shift, and go to state 409
    "class"                           shift, and go to state 410
    "true"                            shift, and go to state 411
    "false"                           shift, and go to state 412
    "new"                             shift, and go to state 413
    "typeinfo"                        shift, and go to state 414
    "type"                            shift, and go to state 415
    "array"                           shift, and go to state 416
    "null"                            shift, and go to state 417
    "table"                           shift, and go to state 418
    "deref"                           shift, and go to state 419
    "cast"                            shift, and go to state 420
    "upcast"                          shift, and go to state 421
    "addr"                            shift, and go to state 422
    "reinterpret"                     shift, and go to state 423
    "unsafe"                          shift, and go to state 424
    "fixed_array"                     shift, and go to state 425
    "default"                         shift, and go to state 426
    "bool"                            shift, and go to state 225
    "void"                            shift, and go to state 226
    "string"                          shift, and go to state 227
    "int"                             shift, and go to state 229
    "int2"                            shift, and go to state 230
    "int3"                            shift, and go to state 231
    "int4"                            shift, and go to state 232
    "uint"                            shift, and go to state 233
    "bitfield"                        shift, and go to state 427
    "uint2"                           shift, and go to state 235
    "uint3"                           shift, and go to state 236
    "uint4"                           shift, and go to state 237
    "float"                           shift, and go to state 238
    "float2"                          shift, and go to state 239
    "float3"                          shift, and go to state 240
    "float4"                          shift, and go to state 241
    "range"                           shift, and go to state 242
    "urange"                          shift, and go to state 243
    "range64"                         shift, and go to state 244
    "urange64"                        shift, and go to state 245
    "int64"                           shift, and go to state 247
    "uint64"                          shift, and go to state 248
    "double"                          shift, and go to state 249
    "int8"                            shift, and go to state 252
    "uint8"                           shift, and go to state 253
    "int16"                           shift, and go to state 254
    "uint16"                          shift, and go to state 255
    "tuple"                           shift, and go to state 428
    "variant"                         shift, and go to state 429
    "generator"                       shift, and go to state 430
    "++"                              shift, and go to state 431
    "--"                              shift, and go to state 432
    "::"                              shift, and go to state 55
    "$$"                              shift, and go to state 433
    "$i"                              shift, and go to state 434
    "$v"                              shift, and go to state 435
    "$b"                              shift, and go to state 436
    "$a"                              shift, and go to state 437
    "$c"                              shift, and go to state 438
    "..."                             shift, and go to state 439
    "integer constant"                shift, and go to state 440
    "long integer constant"           shift, and go to state 441
    "unsigned integer constant"       shift, and go to state 442
    "unsigned long integer constant"  shift, and go to state 443
    "unsigned int8 constant"          shift, and go to state 444
    "floating point constant"         shift, and go to state 445
    "double constant"                 shift, and go to state 446
    "name"                            shift, and go to state 56
    "start of the string"             shift, and go to state 447
    "begin of code block"             shift, and go to state 448
    '-'                               shift, and go to state 449
    '+'                               shift, and go to state 450
    '*'                               shift, and go to state 451
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 452
    '!'                               shift, and go to state 453
    '['                               shift, and go to state 454
    '('                               shift, and go to state 455
    '$'                               shift, and go to state 456
    '@'                               shift, and go to state 457

    string_builder          go to state 458
    expr_reader             go to state 459
    expr_call_pipe          go to state 460
    name_in_namespace       go to state 461
    expr_new                go to state 462
    expr_cast               go to state 463
    expr_type_decl          go to state 464
    expr_type_info          go to state 465
    block_or_lambda         go to state 466
    expr_full_block         go to state 467
    expr_numeric_const      go to state 468
    expr_named_call         go to state 469
    expr_method_call        go to state 470
    func_addr_expr          go to state 471
    expr_field              go to state 472
    expr_call               go to state 473
    expr                    go to state 823
    expr_mtag               go to state 475
    basic_type_declaration  go to state 476
    make_decl               go to state 477
    make_struct_decl        go to state 478
    make_tuple_call         go to state 479
    make_dim_decl           go to state 480
    make_table_decl         go to state 481
    array_comprehension     go to state 482


State 624

  454 expr: expr "|>" . expr
  455     | expr "|>" . basic_type_declaration

    "struct"                          shift, and go to state 409
    "class"                           shift, and go to state 410
    "true"                            shift, and go to state 411
    "false"                           shift, and go to state 412
    "new"                             shift, and go to state 413
    "typeinfo"                        shift, and go to state 414
    "type"                            shift, and go to state 415
    "array"                           shift, and go to state 416
    "null"                            shift, and go to state 417
    "table"                           shift, and go to state 418
    "deref"                           shift, and go to state 419
    "cast"                            shift, and go to state 420
    "upcast"                          shift, and go to state 421
    "addr"                            shift, and go to state 422
    "reinterpret"                     shift, and go to state 423
    "unsafe"                          shift, and go to state 424
    "fixed_array"                     shift, and go to state 425
    "default"                         shift, and go to state 426
    "bool"                            shift, and go to state 225
    "void"                            shift, and go to state 226
    "string"                          shift, and go to state 227
    "int"                             shift, and go to state 229
    "int2"                            shift, and go to state 230
    "int3"                            shift, and go to state 231
    "int4"                            shift, and go to state 232
    "uint"                            shift, and go to state 233
    "bitfield"                        shift, and go to state 427
    "uint2"                           shift, and go to state 235
    "uint3"                           shift, and go to state 236
    "uint4"                           shift, and go to state 237
    "float"                           shift, and go to state 238
    "float2"                          shift, and go to state 239
    "float3"                          shift, and go to state 240
    "float4"                          shift, and go to state 241
    "range"                           shift, and go to state 242
    "urange"                          shift, and go to state 243
    "range64"                         shift, and go to state 244
    "urange64"                        shift, and go to state 245
    "int64"                           shift, and go to state 247
    "uint64"                          shift, and go to state 248
    "double"                          shift, and go to state 249
    "int8"                            shift, and go to state 252
    "uint8"                           shift, and go to state 253
    "int16"                           shift, and go to state 254
    "uint16"                          shift, and go to state 255
    "tuple"                           shift, and go to state 428
    "variant"                         shift, and go to state 429
    "generator"                       shift, and go to state 430
    "++"                              shift, and go to state 431
    "--"                              shift, and go to state 432
    "::"                              shift, and go to state 55
    "$$"                              shift, and go to state 433
    "$i"                              shift, and go to state 434
    "$v"                              shift, and go to state 435
    "$b"                              shift, and go to state 436
    "$a"                              shift, and go to state 437
    "$c"                              shift, and go to state 438
    "..."                             shift, and go to state 439
    "integer constant"                shift, and go to state 440
    "long integer constant"           shift, and go to state 441
    "unsigned integer constant"       shift, and go to state 442
    "unsigned long integer constant"  shift, and go to state 443
    "unsigned int8 constant"          shift, and go to state 444
    "floating point constant"         shift, and go to state 445
    "double constant"                 shift, and go to state 446
    "name"                            shift, and go to state 56
    "start of the string"             shift, and go to state 447
    "begin of code block"             shift, and go to state 448
    '-'                               shift, and go to state 449
    '+'                               shift, and go to state 450
    '*'                               shift, and go to state 451
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 452
    '!'                               shift, and go to state 453
    '['                               shift, and go to state 454
    '('                               shift, and go to state 455
    '$'                               shift, and go to state 456
    '@'                               shift, and go to state 457

    string_builder          go to state 458
    expr_reader             go to state 459
    expr_call_pipe          go to state 460
    name_in_namespace       go to state 461
    expr_new                go to state 462
    expr_cast               go to state 463
    expr_type_decl          go to state 464
    expr_type_info          go to state 465
    block_or_lambda         go to state 466
    expr_full_block         go to state 467
    expr_numeric_const      go to state 468
    expr_named_call         go to state 469
    expr_method_call        go to state 470
    func_addr_expr          go to state 471
    expr_field              go to state 472
    expr_call               go to state 473
    expr                    go to state 824
    expr_mtag               go to state 475
    basic_type_declaration  go to state 825
    make_decl               go to state 477
    make_struct_decl        go to state 478
    make_tuple_call         go to state 479
    make_dim_decl           go to state 480
    make_table_decl         go to state 481
    array_comprehension     go to state 482


State 625

  390 expr: expr "<<<" . expr

    "struct"                          shift, and go to state 409
    "class"                           shift, and go to state 410
    "true"                            shift, and go to state 411
    "false"                           shift, and go to state 412
    "new"                             shift, and go to state 413
    "typeinfo"                        shift, and go to state 414
    "type"                            shift, and go to state 415
    "array"                           shift, and go to state 416
    "null"                            shift, and go to state 417
    "table"                           shift, and go to state 418
    "deref"                           shift, and go to state 419
    "cast"                            shift, and go to state 420
    "upcast"                          shift, and go to state 421
    "addr"                            shift, and go to state 422
    "reinterpret"                     shift, and go to state 423
    "unsafe"                          shift, and go to state 424
    "fixed_array"                     shift, and go to state 425
    "default"                         shift, and go to state 426
    "bool"                            shift, and go to state 225
    "void"                            shift, and go to state 226
    "string"                          shift, and go to state 227
    "int"                             shift, and go to state 229
    "int2"                            shift, and go to state 230
    "int3"                            shift, and go to state 231
    "int4"                            shift, and go to state 232
    "uint"                            shift, and go to state 233
    "bitfield"                        shift, and go to state 427
    "uint2"                           shift, and go to state 235
    "uint3"                           shift, and go to state 236
    "uint4"                           shift, and go to state 237
    "float"                           shift, and go to state 238
    "float2"                          shift, and go to state 239
    "float3"                          shift, and go to state 240
    "float4"                          shift, and go to state 241
    "range"                           shift, and go to state 242
    "urange"                          shift, and go to state 243
    "range64"                         shift, and go to state 244
    "urange64"                        shift, and go to state 245
    "int64"                           shift, and go to state 247
    "uint64"                          shift, and go to state 248
    "double"                          shift, and go to state 249
    "int8"                            shift, and go to state 252
    "uint8"                           shift, and go to state 253
    "int16"                           shift, and go to state 254
    "uint16"                          shift, and go to state 255
    "tuple"                           shift, and go to state 428
    "variant"                         shift, and go to state 429
    "generator"                       shift, and go to state 430
    "++"                              shift, and go to state 431
    "--"                              shift, and go to state 432
    "::"                              shift, and go to state 55
    "$$"                              shift, and go to state 433
    "$i"                              shift, and go to state 434
    "$v"                              shift, and go to state 435
    "$b"                              shift, and go to state 436
    "$a"                              shift, and go to state 437
    "$c"                              shift, and go to state 438
    "..."                             shift, and go to state 439
    "integer constant"                shift, and go to state 440
    "long integer constant"           shift, and go to state 441
    "unsigned integer constant"       shift, and go to state 442
    "unsigned long integer constant"  shift, and go to state 443
    "unsigned int8 constant"          shift, and go to state 444
    "floating point constant"         shift, and go to state 445
    "double constant"                 shift, and go to state 446
    "name"                            shift, and go to state 56
    "start of the string"             shift, and go to state 447
    "begin of code block"             shift, and go to state 448
    '-'                               shift, and go to state 449
    '+'                               shift, and go to state 450
    '*'                               shift, and go to state 451
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 452
    '!'                               shift, and go to state 453
    '['                               shift, and go to state 454
    '('                               shift, and go to state 455
    '$'                               shift, and go to state 456
    '@'                               shift, and go to state 457

    string_builder          go to state 458
    expr_reader             go to state 459
    expr_call_pipe          go to state 460
    name_in_namespace       go to state 461
    expr_new                go to state 462
    expr_cast               go to state 463
    expr_type_decl          go to state 464
    expr_type_info          go to state 465
    block_or_lambda         go to state 466
    expr_full_block         go to state 467
    expr_numeric_const      go to state 468
    expr_named_call         go to state 469
    expr_method_call        go to state 470
    func_addr_expr          go to state 471
    expr_field              go to state 472
    expr_call               go to state 473
    expr                    go to state 826
    expr_mtag               go to state 475
    basic_type_declaration  go to state 476
    make_decl               go to state 477
    make_struct_decl        go to state 478
    make_tuple_call         go to state 479
    make_dim_decl           go to state 480
    make_table_decl         go to state 481
    array_comprehension     go to state 482


State 626

  391 expr: expr ">>>" . expr

    "struct"                          shift, and go to state 409
    "class"                           shift, and go to state 410
    "true"                            shift, and go to state 411
    "false"                           shift, and go to state 412
    "new"                             shift, and go to state 413
    "typeinfo"                        shift, and go to state 414
    "type"                            shift, and go to state 415
    "array"                           shift, and go to state 416
    "null"                            shift, and go to state 417
    "table"                           shift, and go to state 418
    "deref"                           shift, and go to state 419
    "cast"                            shift, and go to state 420
    "upcast"                          shift, and go to state 421
    "addr"                            shift, and go to state 422
    "reinterpret"                     shift, and go to state 423
    "unsafe"                          shift, and go to state 424
    "fixed_array"                     shift, and go to state 425
    "default"                         shift, and go to state 426
    "bool"                            shift, and go to state 225
    "void"                            shift, and go to state 226
    "string"                          shift, and go to state 227
    "int"                             shift, and go to state 229
    "int2"                            shift, and go to state 230
    "int3"                            shift, and go to state 231
    "int4"                            shift, and go to state 232
    "uint"                            shift, and go to state 233
    "bitfield"                        shift, and go to state 427
    "uint2"                           shift, and go to state 235
    "uint3"                           shift, and go to state 236
    "uint4"                           shift, and go to state 237
    "float"                           shift, and go to state 238
    "float2"                          shift, and go to state 239
    "float3"                          shift, and go to state 240
    "float4"                          shift, and go to state 241
    "range"                           shift, and go to state 242
    "urange"                          shift, and go to state 243
    "range64"                         shift, and go to state 244
    "urange64"                        shift, and go to state 245
    "int64"                           shift, and go to state 247
    "uint64"                          shift, and go to state 248
    "double"                          shift, and go to state 249
    "int8"                            shift, and go to state 252
    "uint8"                           shift, and go to state 253
    "int16"                           shift, and go to state 254
    "uint16"                          shift, and go to state 255
    "tuple"                           shift, and go to state 428
    "variant"                         shift, and go to state 429
    "generator"                       shift, and go to state 430
    "++"                              shift, and go to state 431
    "--"                              shift, and go to state 432
    "::"                              shift, and go to state 55
    "$$"                              shift, and go to state 433
    "$i"                              shift, and go to state 434
    "$v"                              shift, and go to state 435
    "$b"                              shift, and go to state 436
    "$a"                              shift, and go to state 437
    "$c"                              shift, and go to state 438
    "..."                             shift, and go to state 439
    "integer constant"                shift, and go to state 440
    "long integer constant"           shift, and go to state 441
    "unsigned integer constant"       shift, and go to state 442
    "unsigned long integer constant"  shift, and go to state 443
    "unsigned int8 constant"          shift, and go to state 444
    "floating point constant"         shift, and go to state 445
    "double constant"                 shift, and go to state 446
    "name"                            shift, and go to state 56
    "start of the string"             shift, and go to state 447
    "begin of code block"             shift, and go to state 448
    '-'                               shift, and go to state 449
    '+'                               shift, and go to state 450
    '*'                               shift, and go to state 451
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 452
    '!'                               shift, and go to state 453
    '['                               shift, and go to state 454
    '('                               shift, and go to state 455
    '$'                               shift, and go to state 456
    '@'                               shift, and go to state 457

    string_builder          go to state 458
    expr_reader             go to state 459
    expr_call_pipe          go to state 460
    name_in_namespace       go to state 461
    expr_new                go to state 462
    expr_cast               go to state 463
    expr_type_decl          go to state 464
    expr_type_info          go to state 465
    block_or_lambda         go to state 466
    expr_full_block         go to state 467
    expr_numeric_const      go to state 468
    expr_named_call         go to state 469
    expr_method_call        go to state 470
    func_addr_expr          go to state 471
    expr_field              go to state 472
    expr_call               go to state 473
    expr                    go to state 827
    expr_mtag               go to state 475
    basic_type_declaration  go to state 476
    make_decl               go to state 477
    make_struct_decl        go to state 478
    make_tuple_call         go to state 479
    make_dim_decl           go to state 480
    make_table_decl         go to state 481
    array_comprehension     go to state 482


State 627

  406 expr: expr "&&" . expr

    "struct"                          shift, and go to state 409
    "class"                           shift, and go to state 410
    "true"                            shift, and go to state 411
    "false"                           shift, and go to state 412
    "new"                             shift, and go to state 413
    "typeinfo"                        shift, and go to state 414
    "type"                            shift, and go to state 415
    "array"                           shift, and go to state 416
    "null"                            shift, and go to state 417
    "table"                           shift, and go to state 418
    "deref"                           shift, and go to state 419
    "cast"                            shift, and go to state 420
    "upcast"                          shift, and go to state 421
    "addr"                            shift, and go to state 422
    "reinterpret"                     shift, and go to state 423
    "unsafe"                          shift, and go to state 424
    "fixed_array"                     shift, and go to state 425
    "default"                         shift, and go to state 426
    "bool"                            shift, and go to state 225
    "void"                            shift, and go to state 226
    "string"                          shift, and go to state 227
    "int"                             shift, and go to state 229
    "int2"                            shift, and go to state 230
    "int3"                            shift, and go to state 231
    "int4"                            shift, and go to state 232
    "uint"                            shift, and go to state 233
    "bitfield"                        shift, and go to state 427
    "uint2"                           shift, and go to state 235
    "uint3"                           shift, and go to state 236
    "uint4"                           shift, and go to state 237
    "float"                           shift, and go to state 238
    "float2"                          shift, and go to state 239
    "float3"                          shift, and go to state 240
    "float4"                          shift, and go to state 241
    "range"                           shift, and go to state 242
    "urange"                          shift, and go to state 243
    "range64"                         shift, and go to state 244
    "urange64"                        shift, and go to state 245
    "int64"                           shift, and go to state 247
    "uint64"                          shift, and go to state 248
    "double"                          shift, and go to state 249
    "int8"                            shift, and go to state 252
    "uint8"                           shift, and go to state 253
    "int16"                           shift, and go to state 254
    "uint16"                          shift, and go to state 255
    "tuple"                           shift, and go to state 428
    "variant"                         shift, and go to state 429
    "generator"                       shift, and go to state 430
    "++"                              shift, and go to state 431
    "--"                              shift, and go to state 432
    "::"                              shift, and go to state 55
    "$$"                              shift, and go to state 433
    "$i"                              shift, and go to state 434
    "$v"                              shift, and go to state 435
    "$b"                              shift, and go to state 436
    "$a"                              shift, and go to state 437
    "$c"                              shift, and go to state 438
    "..."                             shift, and go to state 439
    "integer constant"                shift, and go to state 440
    "long integer constant"           shift, and go to state 441
    "unsigned integer constant"       shift, and go to state 442
    "unsigned long integer constant"  shift, and go to state 443
    "unsigned int8 constant"          shift, and go to state 444
    "floating point constant"         shift, and go to state 445
    "double constant"                 shift, and go to state 446
    "name"                            shift, and go to state 56
    "start of the string"             shift, and go to state 447
    "begin of code block"             shift, and go to state 448
    '-'                               shift, and go to state 449
    '+'                               shift, and go to state 450
    '*'                               shift, and go to state 451
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 452
    '!'                               shift, and go to state 453
    '['                               shift, and go to state 454
    '('                               shift, and go to state 455
    '$'                               shift, and go to state 456
    '@'                               shift, and go to state 457

    string_builder          go to state 458
    expr_reader             go to state 459
    expr_call_pipe          go to state 460
    name_in_namespace       go to state 461
    expr_new                go to state 462
    expr_cast               go to state 463
    expr_type_decl          go to state 464
    expr_type_info          go to state 465
    block_or_lambda         go to state 466
    expr_full_block         go to state 467
    expr_numeric_const      go to state 468
    expr_named_call         go to state 469
    expr_method_call        go to state 470
    func_addr_expr          go to state 471
    expr_field              go to state 472
    expr_call               go to state 473
    expr                    go to state 828
    expr_mtag               go to state 475
    basic_type_declaration  go to state 476
    make_decl               go to state 477
    make_struct_decl        go to state 478
    make_tuple_call         go to state 479
    make_dim_decl           go to state 480
    make_table_decl         go to state 481
    array_comprehension     go to state 482


State 628

  407 expr: expr "||" . expr

    "struct"                          shift, and go to state 409
    "class"                           shift, and go to state 410
    "true"                            shift, and go to state 411
    "false"                           shift, and go to state 412
    "new"                             shift, and go to state 413
    "typeinfo"                        shift, and go to state 414
    "type"                            shift, and go to state 415
    "array"                           shift, and go to state 416
    "null"                            shift, and go to state 417
    "table"                           shift, and go to state 418
    "deref"                           shift, and go to state 419
    "cast"                            shift, and go to state 420
    "upcast"                          shift, and go to state 421
    "addr"                            shift, and go to state 422
    "reinterpret"                     shift, and go to state 423
    "unsafe"                          shift, and go to state 424
    "fixed_array"                     shift, and go to state 425
    "default"                         shift, and go to state 426
    "bool"                            shift, and go to state 225
    "void"                            shift, and go to state 226
    "string"                          shift, and go to state 227
    "int"                             shift, and go to state 229
    "int2"                            shift, and go to state 230
    "int3"                            shift, and go to state 231
    "int4"                            shift, and go to state 232
    "uint"                            shift, and go to state 233
    "bitfield"                        shift, and go to state 427
    "uint2"                           shift, and go to state 235
    "uint3"                           shift, and go to state 236
    "uint4"                           shift, and go to state 237
    "float"                           shift, and go to state 238
    "float2"                          shift, and go to state 239
    "float3"                          shift, and go to state 240
    "float4"                          shift, and go to state 241
    "range"                           shift, and go to state 242
    "urange"                          shift, and go to state 243
    "range64"                         shift, and go to state 244
    "urange64"                        shift, and go to state 245
    "int64"                           shift, and go to state 247
    "uint64"                          shift, and go to state 248
    "double"                          shift, and go to state 249
    "int8"                            shift, and go to state 252
    "uint8"                           shift, and go to state 253
    "int16"                           shift, and go to state 254
    "uint16"                          shift, and go to state 255
    "tuple"                           shift, and go to state 428
    "variant"                         shift, and go to state 429
    "generator"                       shift, and go to state 430
    "++"                              shift, and go to state 431
    "--"                              shift, and go to state 432
    "::"                              shift, and go to state 55
    "$$"                              shift, and go to state 433
    "$i"                              shift, and go to state 434
    "$v"                              shift, and go to state 435
    "$b"                              shift, and go to state 436
    "$a"                              shift, and go to state 437
    "$c"                              shift, and go to state 438
    "..."                             shift, and go to state 439
    "integer constant"                shift, and go to state 440
    "long integer constant"           shift, and go to state 441
    "unsigned integer constant"       shift, and go to state 442
    "unsigned long integer constant"  shift, and go to state 443
    "unsigned int8 constant"          shift, and go to state 444
    "floating point constant"         shift, and go to state 445
    "double constant"                 shift, and go to state 446
    "name"                            shift, and go to state 56
    "start of the string"             shift, and go to state 447
    "begin of code block"             shift, and go to state 448
    '-'                               shift, and go to state 449
    '+'                               shift, and go to state 450
    '*'                               shift, and go to state 451
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 452
    '!'                               shift, and go to state 453
    '['                               shift, and go to state 454
    '('                               shift, and go to state 455
    '$'                               shift, and go to state 456
    '@'                               shift, and go to state 457

    string_builder          go to state 458
    expr_reader             go to state 459
    expr_call_pipe          go to state 460
    name_in_namespace       go to state 461
    expr_new                go to state 462
    expr_cast               go to state 463
    expr_type_decl          go to state 464
    expr_type_info          go to state 465
    block_or_lambda         go to state 466
    expr_full_block         go to state 467
    expr_numeric_const      go to state 468
    expr_named_call         go to state 469
    expr_method_call        go to state 470
    func_addr_expr          go to state 471
    expr_field              go to state 472
    expr_call               go to state 473
    expr                    go to state 829
    expr_mtag               go to state 475
    basic_type_declaration  go to state 476
    make_decl               go to state 477
    make_struct_decl        go to state 478
    make_tuple_call         go to state 479
    make_dim_decl           go to state 480
    make_table_decl         go to state 481
    array_comprehension     go to state 482


State 629

  408 expr: expr "^^" . expr

    "struct"                          shift, and go to state 409
    "class"                           shift, and go to state 410
    "true"                            shift, and go to state 411
    "false"                           shift, and go to state 412
    "new"                             shift, and go to state 413
    "typeinfo"                        shift, and go to state 414
    "type"                            shift, and go to state 415
    "array"                           shift, and go to state 416
    "null"                            shift, and go to state 417
    "table"                           shift, and go to state 418
    "deref"                           shift, and go to state 419
    "cast"                            shift, and go to state 420
    "upcast"                          shift, and go to state 421
    "addr"                            shift, and go to state 422
    "reinterpret"                     shift, and go to state 423
    "unsafe"                          shift, and go to state 424
    "fixed_array"                     shift, and go to state 425
    "default"                         shift, and go to state 426
    "bool"                            shift, and go to state 225
    "void"                            shift, and go to state 226
    "string"                          shift, and go to state 227
    "int"                             shift, and go to state 229
    "int2"                            shift, and go to state 230
    "int3"                            shift, and go to state 231
    "int4"                            shift, and go to state 232
    "uint"                            shift, and go to state 233
    "bitfield"                        shift, and go to state 427
    "uint2"                           shift, and go to state 235
    "uint3"                           shift, and go to state 236
    "uint4"                           shift, and go to state 237
    "float"                           shift, and go to state 238
    "float2"                          shift, and go to state 239
    "float3"                          shift, and go to state 240
    "float4"                          shift, and go to state 241
    "range"                           shift, and go to state 242
    "urange"                          shift, and go to state 243
    "range64"                         shift, and go to state 244
    "urange64"                        shift, and go to state 245
    "int64"                           shift, and go to state 247
    "uint64"                          shift, and go to state 248
    "double"                          shift, and go to state 249
    "int8"                            shift, and go to state 252
    "uint8"                           shift, and go to state 253
    "int16"                           shift, and go to state 254
    "uint16"                          shift, and go to state 255
    "tuple"                           shift, and go to state 428
    "variant"                         shift, and go to state 429
    "generator"                       shift, and go to state 430
    "++"                              shift, and go to state 431
    "--"                              shift, and go to state 432
    "::"                              shift, and go to state 55
    "$$"                              shift, and go to state 433
    "$i"                              shift, and go to state 434
    "$v"                              shift, and go to state 435
    "$b"                              shift, and go to state 436
    "$a"                              shift, and go to state 437
    "$c"                              shift, and go to state 438
    "..."                             shift, and go to state 439
    "integer constant"                shift, and go to state 440
    "long integer constant"           shift, and go to state 441
    "unsigned integer constant"       shift, and go to state 442
    "unsigned long integer constant"  shift, and go to state 443
    "unsigned int8 constant"          shift, and go to state 444
    "floating point constant"         shift, and go to state 445
    "double constant"                 shift, and go to state 446
    "name"                            shift, and go to state 56
    "start of the string"             shift, and go to state 447
    "begin of code block"             shift, and go to state 448
    '-'                               shift, and go to state 449
    '+'                               shift, and go to state 450
    '*'                               shift, and go to state 451
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 452
    '!'                               shift, and go to state 453
    '['                               shift, and go to state 454
    '('                               shift, and go to state 455
    '$'                               shift, and go to state 456
    '@'                               shift, and go to state 457

    string_builder          go to state 458
    expr_reader             go to state 459
    expr_call_pipe          go to state 460
    name_in_namespace       go to state 461
    expr_new                go to state 462
    expr_cast               go to state 463
    expr_type_decl          go to state 464
    expr_type_info          go to state 465
    block_or_lambda         go to state 466
    expr_full_block         go to state 467
    expr_numeric_const      go to state 468
    expr_named_call         go to state 469
    expr_method_call        go to state 470
    func_addr_expr          go to state 471
    expr_field              go to state 472
    expr_call               go to state 473
    expr                    go to state 830
    expr_mtag               go to state 475
    basic_type_declaration  go to state 476
    make_decl               go to state 477
    make_struct_decl        go to state 478
    make_tuple_call         go to state 479
    make_dim_decl           go to state 480
    make_table_decl         go to state 481
    array_comprehension     go to state 482


State 630

  409 expr: expr ".." . expr

    "struct"                          shift, and go to state 409
    "class"                           shift, and go to state 410
    "true"                            shift, and go to state 411
    "false"                           shift, and go to state 412
    "new"                             shift, and go to state 413
    "typeinfo"                        shift, and go to state 414
    "type"                            shift, and go to state 415
    "array"                           shift, and go to state 416
    "null"                            shift, and go to state 417
    "table"                           shift, and go to state 418
    "deref"                           shift, and go to state 419
    "cast"                            shift, and go to state 420
    "upcast"                          shift, and go to state 421
    "addr"                            shift, and go to state 422
    "reinterpret"                     shift, and go to state 423
    "unsafe"                          shift, and go to state 424
    "fixed_array"                     shift, and go to state 425
    "default"                         shift, and go to state 426
    "bool"                            shift, and go to state 225
    "void"                            shift, and go to state 226
    "string"                          shift, and go to state 227
    "int"                             shift, and go to state 229
    "int2"                            shift, and go to state 230
    "int3"                            shift, and go to state 231
    "int4"                            shift, and go to state 232
    "uint"                            shift, and go to state 233
    "bitfield"                        shift, and go to state 427
    "uint2"                           shift, and go to state 235
    "uint3"                           shift, and go to state 236
    "uint4"                           shift, and go to state 237
    "float"                           shift, and go to state 238
    "float2"                          shift, and go to state 239
    "float3"                          shift, and go to state 240
    "float4"                          shift, and go to state 241
    "range"                           shift, and go to state 242
    "urange"                          shift, and go to state 243
    "range64"                         shift, and go to state 244
    "urange64"                        shift, and go to state 245
    "int64"                           shift, and go to state 247
    "uint64"                          shift, and go to state 248
    "double"                          shift, and go to state 249
    "int8"                            shift, and go to state 252
    "uint8"                           shift, and go to state 253
    "int16"                           shift, and go to state 254
    "uint16"                          shift, and go to state 255
    "tuple"                           shift, and go to state 428
    "variant"                         shift, and go to state 429
    "generator"                       shift, and go to state 430
    "++"                              shift, and go to state 431
    "--"                              shift, and go to state 432
    "::"                              shift, and go to state 55
    "$$"                              shift, and go to state 433
    "$i"                              shift, and go to state 434
    "$v"                              shift, and go to state 435
    "$b"                              shift, and go to state 436
    "$a"                              shift, and go to state 437
    "$c"                              shift, and go to state 438
    "..."                             shift, and go to state 439
    "integer constant"                shift, and go to state 440
    "long integer constant"           shift, and go to state 441
    "unsigned integer constant"       shift, and go to state 442
    "unsigned long integer constant"  shift, and go to state 443
    "unsigned int8 constant"          shift, and go to state 444
    "floating point constant"         shift, and go to state 445
    "double constant"                 shift, and go to state 446
    "name"                            shift, and go to state 56
    "start of the string"             shift, and go to state 447
    "begin of code block"             shift, and go to state 448
    '-'                               shift, and go to state 449
    '+'                               shift, and go to state 450
    '*'                               shift, and go to state 451
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 452
    '!'                               shift, and go to state 453
    '['                               shift, and go to state 454
    '('                               shift, and go to state 455
    '$'                               shift, and go to state 456
    '@'                               shift, and go to state 457

    string_builder          go to state 458
    expr_reader             go to state 459
    expr_call_pipe          go to state 460
    name_in_namespace       go to state 461
    expr_new                go to state 462
    expr_cast               go to state 463
    expr_type_decl          go to state 464
    expr_type_info          go to state 465
    block_or_lambda         go to state 466
    expr_full_block         go to state 467
    expr_numeric_const      go to state 468
    expr_named_call         go to state 469
    expr_method_call        go to state 470
    func_addr_expr          go to state 471
    expr_field              go to state 472
    expr_call               go to state 473
    expr                    go to state 831
    expr_mtag               go to state 475
    basic_type_declaration  go to state 476
    make_decl               go to state 477
    make_struct_decl        go to state 478
    make_tuple_call         go to state 479
    make_dim_decl           go to state 480
    make_table_decl         go to state 481
    array_comprehension     go to state 482


State 631

  430 expr: expr '?' . expr ':' expr
  441     | expr '?' . "as" "name"
  444     | expr '?' . "as" "type" '<' $@27 type_declaration '>' $@28
  445     | expr '?' . "as" basic_type_declaration
  471 expr_mtag: expr '?' . "as" "$f" '(' expr ')'

    "struct"                          shift, and go to state 409
    "class"                           shift, and go to state 410
    "true"                            shift, and go to state 411
    "false"                           shift, and go to state 412
    "new"                             shift, and go to state 413
    "typeinfo"                        shift, and go to state 414
    "type"                            shift, and go to state 415
    "as"                              shift, and go to state 832
    "array"                           shift, and go to state 416
    "null"                            shift, and go to state 417
    "table"                           shift, and go to state 418
    "deref"                           shift, and go to state 419
    "cast"                            shift, and go to state 420
    "upcast"                          shift, and go to state 421
    "addr"                            shift, and go to state 422
    "reinterpret"                     shift, and go to state 423
    "unsafe"                          shift, and go to state 424
    "fixed_array"                     shift, and go to state 425
    "default"                         shift, and go to state 426
    "bool"                            shift, and go to state 225
    "void"                            shift, and go to state 226
    "string"                          shift, and go to state 227
    "int"                             shift, and go to state 229
    "int2"                            shift, and go to state 230
    "int3"                            shift, and go to state 231
    "int4"                            shift, and go to state 232
    "uint"                            shift, and go to state 233
    "bitfield"                        shift, and go to state 427
    "uint2"                           shift, and go to state 235
    "uint3"                           shift, and go to state 236
    "uint4"                           shift, and go to state 237
    "float"                           shift, and go to state 238
    "float2"                          shift, and go to state 239
    "float3"                          shift, and go to state 240
    "float4"                          shift, and go to state 241
    "range"                           shift, and go to state 242
    "urange"                          shift, and go to state 243
    "range64"                         shift, and go to state 244
    "urange64"                        shift, and go to state 245
    "int64"                           shift, and go to state 247
    "uint64"                          shift, and go to state 248
    "double"                          shift, and go to state 249
    "int8"                            shift, and go to state 252
    "uint8"                           shift, and go to state 253
    "int16"                           shift, and go to state 254
    "uint16"                          shift, and go to state 255
    "tuple"                           shift, and go to state 428
    "variant"                         shift, and go to state 429
    "generator"                       shift, and go to state 430
    "++"                              shift, and go to state 431
    "--"                              shift, and go to state 432
    "::"                              shift, and go to state 55
    "$$"                              shift, and go to state 433
    "$i"                              shift, and go to state 434
    "$v"                              shift, and go to state 435
    "$b"                              shift, and go to state 436
    "$a"                              shift, and go to state 437
    "$c"                              shift, and go to state 438
    "..."                             shift, and go to state 439
    "integer constant"                shift, and go to state 440
    "long integer constant"           shift, and go to state 441
    "unsigned integer constant"       shift, and go to state 442
    "unsigned long integer constant"  shift, and go to state 443
    "unsigned int8 constant"          shift, and go to state 444
    "floating point constant"         shift, and go to state 445
    "double constant"                 shift, and go to state 446
    "name"                            shift, and go to state 56
    "start of the string"             shift, and go to state 447
    "begin of code block"             shift, and go to state 448
    '-'                               shift, and go to state 449
    '+'                               shift, and go to state 450
    '*'                               shift, and go to state 451
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 452
    '!'                               shift, and go to state 453
    '['                               shift, and go to state 454
    '('                               shift, and go to state 455
    '$'                               shift, and go to state 456
    '@'                               shift, and go to state 457

    string_builder          go to state 458
    expr_reader             go to state 459
    expr_call_pipe          go to state 460
    name_in_namespace       go to state 461
    expr_new                go to state 462
    expr_cast               go to state 463
    expr_type_decl          go to state 464
    expr_type_info          go to state 465
    block_or_lambda         go to state 466
    expr_full_block         go to state 467
    expr_numeric_const      go to state 468
    expr_named_call         go to state 469
    expr_method_call        go to state 470
    func_addr_expr          go to state 471
    expr_field              go to state 472
    expr_call               go to state 473
    expr                    go to state 833
    expr_mtag               go to state 475
    basic_type_declaration  go to state 476
    make_decl               go to state 477
    make_struct_decl        go to state 478
    make_tuple_call         go to state 479
    make_dim_decl           go to state 480
    make_table_decl         go to state 481
    array_comprehension     go to state 482


State 632

  404 expr: expr '|' . expr

    "struct"                          shift, and go to state 409
    "class"                           shift, and go to state 410
    "true"                            shift, and go to state 411
    "false"                           shift, and go to state 412
    "new"                             shift, and go to state 413
    "typeinfo"                        shift, and go to state 414
    "type"                            shift, and go to state 415
    "array"                           shift, and go to state 416
    "null"                            shift, and go to state 417
    "table"                           shift, and go to state 418
    "deref"                           shift, and go to state 419
    "cast"                            shift, and go to state 420
    "upcast"                          shift, and go to state 421
    "addr"                            shift, and go to state 422
    "reinterpret"                     shift, and go to state 423
    "unsafe"                          shift, and go to state 424
    "fixed_array"                     shift, and go to state 425
    "default"                         shift, and go to state 426
    "bool"                            shift, and go to state 225
    "void"                            shift, and go to state 226
    "string"                          shift, and go to state 227
    "int"                             shift, and go to state 229
    "int2"                            shift, and go to state 230
    "int3"                            shift, and go to state 231
    "int4"                            shift, and go to state 232
    "uint"                            shift, and go to state 233
    "bitfield"                        shift, and go to state 427
    "uint2"                           shift, and go to state 235
    "uint3"                           shift, and go to state 236
    "uint4"                           shift, and go to state 237
    "float"                           shift, and go to state 238
    "float2"                          shift, and go to state 239
    "float3"                          shift, and go to state 240
    "float4"                          shift, and go to state 241
    "range"                           shift, and go to state 242
    "urange"                          shift, and go to state 243
    "range64"                         shift, and go to state 244
    "urange64"                        shift, and go to state 245
    "int64"                           shift, and go to state 247
    "uint64"                          shift, and go to state 248
    "double"                          shift, and go to state 249
    "int8"                            shift, and go to state 252
    "uint8"                           shift, and go to state 253
    "int16"                           shift, and go to state 254
    "uint16"                          shift, and go to state 255
    "tuple"                           shift, and go to state 428
    "variant"                         shift, and go to state 429
    "generator"                       shift, and go to state 430
    "++"                              shift, and go to state 431
    "--"                              shift, and go to state 432
    "::"                              shift, and go to state 55
    "$$"                              shift, and go to state 433
    "$i"                              shift, and go to state 434
    "$v"                              shift, and go to state 435
    "$b"                              shift, and go to state 436
    "$a"                              shift, and go to state 437
    "$c"                              shift, and go to state 438
    "..."                             shift, and go to state 439
    "integer constant"                shift, and go to state 440
    "long integer constant"           shift, and go to state 441
    "unsigned integer constant"       shift, and go to state 442
    "unsigned long integer constant"  shift, and go to state 443
    "unsigned int8 constant"          shift, and go to state 444
    "floating point constant"         shift, and go to state 445
    "double constant"                 shift, and go to state 446
    "name"                            shift, and go to state 56
    "start of the string"             shift, and go to state 447
    "begin of code block"             shift, and go to state 448
    '-'                               shift, and go to state 449
    '+'                               shift, and go to state 450
    '*'                               shift, and go to state 451
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 452
    '!'                               shift, and go to state 453
    '['                               shift, and go to state 454
    '('                               shift, and go to state 455
    '$'                               shift, and go to state 456
    '@'                               shift, and go to state 457

    string_builder          go to state 458
    expr_reader             go to state 459
    expr_call_pipe          go to state 460
    name_in_namespace       go to state 461
    expr_new                go to state 462
    expr_cast               go to state 463
    expr_type_decl          go to state 464
    expr_type_info          go to state 465
    block_or_lambda         go to state 466
    expr_full_block         go to state 467
    expr_numeric_const      go to state 468
    expr_named_call         go to state 469
    expr_method_call        go to state 470
    func_addr_expr          go to state 471
    expr_field              go to state 472
    expr_call               go to state 473
    expr                    go to state 834
    expr_mtag               go to state 475
    basic_type_declaration  go to state 476
    make_decl               go to state 477
    make_struct_decl        go to state 478
    make_tuple_call         go to state 479
    make_dim_decl           go to state 480
    make_table_decl         go to state 481
    array_comprehension     go to state 482


State 633

  405 expr: expr '^' . expr

    "struct"                          shift, and go to state 409
    "class"                           shift, and go to state 410
    "true"                            shift, and go to state 411
    "false"                           shift, and go to state 412
    "new"                             shift, and go to state 413
    "typeinfo"                        shift, and go to state 414
    "type"                            shift, and go to state 415
    "array"                           shift, and go to state 416
    "null"                            shift, and go to state 417
    "table"                           shift, and go to state 418
    "deref"                           shift, and go to state 419
    "cast"                            shift, and go to state 420
    "upcast"                          shift, and go to state 421
    "addr"                            shift, and go to state 422
    "reinterpret"                     shift, and go to state 423
    "unsafe"                          shift, and go to state 424
    "fixed_array"                     shift, and go to state 425
    "default"                         shift, and go to state 426
    "bool"                            shift, and go to state 225
    "void"                            shift, and go to state 226
    "string"                          shift, and go to state 227
    "int"                             shift, and go to state 229
    "int2"                            shift, and go to state 230
    "int3"                            shift, and go to state 231
    "int4"                            shift, and go to state 232
    "uint"                            shift, and go to state 233
    "bitfield"                        shift, and go to state 427
    "uint2"                           shift, and go to state 235
    "uint3"                           shift, and go to state 236
    "uint4"                           shift, and go to state 237
    "float"                           shift, and go to state 238
    "float2"                          shift, and go to state 239
    "float3"                          shift, and go to state 240
    "float4"                          shift, and go to state 241
    "range"                           shift, and go to state 242
    "urange"                          shift, and go to state 243
    "range64"                         shift, and go to state 244
    "urange64"                        shift, and go to state 245
    "int64"                           shift, and go to state 247
    "uint64"                          shift, and go to state 248
    "double"                          shift, and go to state 249
    "int8"                            shift, and go to state 252
    "uint8"                           shift, and go to state 253
    "int16"                           shift, and go to state 254
    "uint16"                          shift, and go to state 255
    "tuple"                           shift, and go to state 428
    "variant"                         shift, and go to state 429
    "generator"                       shift, and go to state 430
    "++"                              shift, and go to state 431
    "--"                              shift, and go to state 432
    "::"                              shift, and go to state 55
    "$$"                              shift, and go to state 433
    "$i"                              shift, and go to state 434
    "$v"                              shift, and go to state 435
    "$b"                              shift, and go to state 436
    "$a"                              shift, and go to state 437
    "$c"                              shift, and go to state 438
    "..."                             shift, and go to state 439
    "integer constant"                shift, and go to state 440
    "long integer constant"           shift, and go to state 441
    "unsigned integer constant"       shift, and go to state 442
    "unsigned long integer constant"  shift, and go to state 443
    "unsigned int8 constant"          shift, and go to state 444
    "floating point constant"         shift, and go to state 445
    "double constant"                 shift, and go to state 446
    "name"                            shift, and go to state 56
    "start of the string"             shift, and go to state 447
    "begin of code block"             shift, and go to state 448
    '-'                               shift, and go to state 449
    '+'                               shift, and go to state 450
    '*'                               shift, and go to state 451
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 452
    '!'                               shift, and go to state 453
    '['                               shift, and go to state 454
    '('                               shift, and go to state 455
    '$'                               shift, and go to state 456
    '@'                               shift, and go to state 457

    string_builder          go to state 458
    expr_reader             go to state 459
    expr_call_pipe          go to state 460
    name_in_namespace       go to state 461
    expr_new                go to state 462
    expr_cast               go to state 463
    expr_type_decl          go to state 464
    expr_type_info          go to state 465
    block_or_lambda         go to state 466
    expr_full_block         go to state 467
    expr_numeric_const      go to state 468
    expr_named_call         go to state 469
    expr_method_call        go to state 470
    func_addr_expr          go to state 471
    expr_field              go to state 472
    expr_call               go to state 473
    expr                    go to state 835
    expr_mtag               go to state 475
    basic_type_declaration  go to state 476
    make_decl               go to state 477
    make_struct_decl        go to state 478
    make_tuple_call         go to state 479
    make_dim_decl           go to state 480
    make_table_decl         go to state 481
    array_comprehension     go to state 482


State 634

  403 expr: expr '&' . expr

    "struct"                          shift, and go to state 409
    "class"                           shift, and go to state 410
    "true"                            shift, and go to state 411
    "false"                           shift, and go to state 412
    "new"                             shift, and go to state 413
    "typeinfo"                        shift, and go to state 414
    "type"                            shift, and go to state 415
    "array"                           shift, and go to state 416
    "null"                            shift, and go to state 417
    "table"                           shift, and go to state 418
    "deref"                           shift, and go to state 419
    "cast"                            shift, and go to state 420
    "upcast"                          shift, and go to state 421
    "addr"                            shift, and go to state 422
    "reinterpret"                     shift, and go to state 423
    "unsafe"                          shift, and go to state 424
    "fixed_array"                     shift, and go to state 425
    "default"                         shift, and go to state 426
    "bool"                            shift, and go to state 225
    "void"                            shift, and go to state 226
    "string"                          shift, and go to state 227
    "int"                             shift, and go to state 229
    "int2"                            shift, and go to state 230
    "int3"                            shift, and go to state 231
    "int4"                            shift, and go to state 232
    "uint"                            shift, and go to state 233
    "bitfield"                        shift, and go to state 427
    "uint2"                           shift, and go to state 235
    "uint3"                           shift, and go to state 236
    "uint4"                           shift, and go to state 237
    "float"                           shift, and go to state 238
    "float2"                          shift, and go to state 239
    "float3"                          shift, and go to state 240
    "float4"                          shift, and go to state 241
    "range"                           shift, and go to state 242
    "urange"                          shift, and go to state 243
    "range64"                         shift, and go to state 244
    "urange64"                        shift, and go to state 245
    "int64"                           shift, and go to state 247
    "uint64"                          shift, and go to state 248
    "double"                          shift, and go to state 249
    "int8"                            shift, and go to state 252
    "uint8"                           shift, and go to state 253
    "int16"                           shift, and go to state 254
    "uint16"                          shift, and go to state 255
    "tuple"                           shift, and go to state 428
    "variant"                         shift, and go to state 429
    "generator"                       shift, and go to state 430
    "++"                              shift, and go to state 431
    "--"                              shift, and go to state 432
    "::"                              shift, and go to state 55
    "$$"                              shift, and go to state 433
    "$i"                              shift, and go to state 434
    "$v"                              shift, and go to state 435
    "$b"                              shift, and go to state 436
    "$a"                              shift, and go to state 437
    "$c"                              shift, and go to state 438
    "..."                             shift, and go to state 439
    "integer constant"                shift, and go to state 440
    "long integer constant"           shift, and go to state 441
    "unsigned integer constant"       shift, and go to state 442
    "unsigned long integer constant"  shift, and go to state 443
    "unsigned int8 constant"          shift, and go to state 444
    "floating point constant"         shift, and go to state 445
    "double constant"                 shift, and go to state 446
    "name"                            shift, and go to state 56
    "start of the string"             shift, and go to state 447
    "begin of code block"             shift, and go to state 448
    '-'                               shift, and go to state 449
    '+'                               shift, and go to state 450
    '*'                               shift, and go to state 451
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 452
    '!'                               shift, and go to state 453
    '['                               shift, and go to state 454
    '('                               shift, and go to state 455
    '$'                               shift, and go to state 456
    '@'                               shift, and go to state 457

    string_builder          go to state 458
    expr_reader             go to state 459
    expr_call_pipe          go to state 460
    name_in_namespace       go to state 461
    expr_new                go to state 462
    expr_cast               go to state 463
    expr_type_decl          go to state 464
    expr_type_info          go to state 465
    block_or_lambda         go to state 466
    expr_full_block         go to state 467
    expr_numeric_const      go to state 468
    expr_named_call         go to state 469
    expr_method_call        go to state 470
    func_addr_expr          go to state 471
    expr_field              go to state 472
    expr_call               go to state 473
    expr                    go to state 836
    expr_mtag               go to state 475
    basic_type_declaration  go to state 476
    make_decl               go to state 477
    make_struct_decl        go to state 478
    make_tuple_call         go to state 479
    make_dim_decl           go to state 480
    make_table_decl         go to state 481
    array_comprehension     go to state 482


State 635

  397 expr: expr '<' . expr

    "struct"                          shift, and go to state 409
    "class"                           shift, and go to state 410
    "true"                            shift, and go to state 411
    "false"                           shift, and go to state 412
    "new"                             shift, and go to state 413
    "typeinfo"                        shift, and go to state 414
    "type"                            shift, and go to state 415
    "array"                           shift, and go to state 416
    "null"                            shift, and go to state 417
    "table"                           shift, and go to state 418
    "deref"                           shift, and go to state 419
    "cast"                            shift, and go to state 420
    "upcast"                          shift, and go to state 421
    "addr"                            shift, and go to state 422
    "reinterpret"                     shift, and go to state 423
    "unsafe"                          shift, and go to state 424
    "fixed_array"                     shift, and go to state 425
    "default"                         shift, and go to state 426
    "bool"                            shift, and go to state 225
    "void"                            shift, and go to state 226
    "string"                          shift, and go to state 227
    "int"                             shift, and go to state 229
    "int2"                            shift, and go to state 230
    "int3"                            shift, and go to state 231
    "int4"                            shift, and go to state 232
    "uint"                            shift, and go to state 233
    "bitfield"                        shift, and go to state 427
    "uint2"                           shift, and go to state 235
    "uint3"                           shift, and go to state 236
    "uint4"                           shift, and go to state 237
    "float"                           shift, and go to state 238
    "float2"                          shift, and go to state 239
    "float3"                          shift, and go to state 240
    "float4"                          shift, and go to state 241
    "range"                           shift, and go to state 242
    "urange"                          shift, and go to state 243
    "range64"                         shift, and go to state 244
    "urange64"                        shift, and go to state 245
    "int64"                           shift, and go to state 247
    "uint64"                          shift, and go to state 248
    "double"                          shift, and go to state 249
    "int8"                            shift, and go to state 252
    "uint8"                           shift, and go to state 253
    "int16"                           shift, and go to state 254
    "uint16"                          shift, and go to state 255
    "tuple"                           shift, and go to state 428
    "variant"                         shift, and go to state 429
    "generator"                       shift, and go to state 430
    "++"                              shift, and go to state 431
    "--"                              shift, and go to state 432
    "::"                              shift, and go to state 55
    "$$"                              shift, and go to state 433
    "$i"                              shift, and go to state 434
    "$v"                              shift, and go to state 435
    "$b"                              shift, and go to state 436
    "$a"                              shift, and go to state 437
    "$c"                              shift, and go to state 438
    "..."                             shift, and go to state 439
    "integer constant"                shift, and go to state 440
    "long integer constant"           shift, and go to state 441
    "unsigned integer constant"       shift, and go to state 442
    "unsigned long integer constant"  shift, and go to state 443
    "unsigned int8 constant"          shift, and go to state 444
    "floating point constant"         shift, and go to state 445
    "double constant"                 shift, and go to state 446
    "name"                            shift, and go to state 56
    "start of the string"             shift, and go to state 447
    "begin of code block"             shift, and go to state 448
    '-'                               shift, and go to state 449
    '+'                               shift, and go to state 450
    '*'                               shift, and go to state 451
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 452
    '!'                               shift, and go to state 453
    '['                               shift, and go to state 454
    '('                               shift, and go to state 455
    '$'                               shift, and go to state 456
    '@'                               shift, and go to state 457

    string_builder          go to state 458
    expr_reader             go to state 459
    expr_call_pipe          go to state 460
    name_in_namespace       go to state 461
    expr_new                go to state 462
    expr_cast               go to state 463
    expr_type_decl          go to state 464
    expr_type_info          go to state 465
    block_or_lambda         go to state 466
    expr_full_block         go to state 467
    expr_numeric_const      go to state 468
    expr_named_call         go to state 469
    expr_method_call        go to state 470
    func_addr_expr          go to state 471
    expr_field              go to state 472
    expr_call               go to state 473
    expr                    go to state 837
    expr_mtag               go to state 475
    basic_type_declaration  go to state 476
    make_decl               go to state 477
    make_struct_decl        go to state 478
    make_tuple_call         go to state 479
    make_dim_decl           go to state 480
    make_table_decl         go to state 481
    array_comprehension     go to state 482


State 636

  398 expr: expr '>' . expr

    "struct"                          shift, and go to state 409
    "class"                           shift, and go to state 410
    "true"                            shift, and go to state 411
    "false"                           shift, and go to state 412
    "new"                             shift, and go to state 413
    "typeinfo"                        shift, and go to state 414
    "type"                            shift, and go to state 415
    "array"                           shift, and go to state 416
    "null"                            shift, and go to state 417
    "table"                           shift, and go to state 418
    "deref"                           shift, and go to state 419
    "cast"                            shift, and go to state 420
    "upcast"                          shift, and go to state 421
    "addr"                            shift, and go to state 422
    "reinterpret"                     shift, and go to state 423
    "unsafe"                          shift, and go to state 424
    "fixed_array"                     shift, and go to state 425
    "default"                         shift, and go to state 426
    "bool"                            shift, and go to state 225
    "void"                            shift, and go to state 226
    "string"                          shift, and go to state 227
    "int"                             shift, and go to state 229
    "int2"                            shift, and go to state 230
    "int3"                            shift, and go to state 231
    "int4"                            shift, and go to state 232
    "uint"                            shift, and go to state 233
    "bitfield"                        shift, and go to state 427
    "uint2"                           shift, and go to state 235
    "uint3"                           shift, and go to state 236
    "uint4"                           shift, and go to state 237
    "float"                           shift, and go to state 238
    "float2"                          shift, and go to state 239
    "float3"                          shift, and go to state 240
    "float4"                          shift, and go to state 241
    "range"                           shift, and go to state 242
    "urange"                          shift, and go to state 243
    "range64"                         shift, and go to state 244
    "urange64"                        shift, and go to state 245
    "int64"                           shift, and go to state 247
    "uint64"                          shift, and go to state 248
    "double"                          shift, and go to state 249
    "int8"                            shift, and go to state 252
    "uint8"                           shift, and go to state 253
    "int16"                           shift, and go to state 254
    "uint16"                          shift, and go to state 255
    "tuple"                           shift, and go to state 428
    "variant"                         shift, and go to state 429
    "generator"                       shift, and go to state 430
    "++"                              shift, and go to state 431
    "--"                              shift, and go to state 432
    "::"                              shift, and go to state 55
    "$$"                              shift, and go to state 433
    "$i"                              shift, and go to state 434
    "$v"                              shift, and go to state 435
    "$b"                              shift, and go to state 436
    "$a"                              shift, and go to state 437
    "$c"                              shift, and go to state 438
    "..."                             shift, and go to state 439
    "integer constant"                shift, and go to state 440
    "long integer constant"           shift, and go to state 441
    "unsigned integer constant"       shift, and go to state 442
    "unsigned long integer constant"  shift, and go to state 443
    "unsigned int8 constant"          shift, and go to state 444
    "floating point constant"         shift, and go to state 445
    "double constant"                 shift, and go to state 446
    "name"                            shift, and go to state 56
    "start of the string"             shift, and go to state 447
    "begin of code block"             shift, and go to state 448
    '-'                               shift, and go to state 449
    '+'                               shift, and go to state 450
    '*'                               shift, and go to state 451
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 452
    '!'                               shift, and go to state 453
    '['                               shift, and go to state 454
    '('                               shift, and go to state 455
    '$'                               shift, and go to state 456
    '@'                               shift, and go to state 457

    string_builder          go to state 458
    expr_reader             go to state 459
    expr_call_pipe          go to state 460
    name_in_namespace       go to state 461
    expr_new                go to state 462
    expr_cast               go to state 463
    expr_type_decl          go to state 464
    expr_type_info          go to state 465
    block_or_lambda         go to state 466
    expr_full_block         go to state 467
    expr_numeric_const      go to state 468
    expr_named_call         go to state 469
    expr_method_call        go to state 470
    func_addr_expr          go to state 471
    expr_field              go to state 472
    expr_call               go to state 473
    expr                    go to state 838
    expr_mtag               go to state 475
    basic_type_declaration  go to state 476
    make_decl               go to state 477
    make_struct_decl        go to state 478
    make_tuple_call         go to state 479
    make_dim_decl           go to state 480
    make_table_decl         go to state 481
    array_comprehension     go to state 482


State 637

  393 expr: expr '-' . expr

    "struct"                          shift, and go to state 409
    "class"                           shift, and go to state 410
    "true"                            shift, and go to state 411
    "false"                           shift, and go to state 412
    "new"                             shift, and go to state 413
    "typeinfo"                        shift, and go to state 414
    "type"                            shift, and go to state 415
    "array"                           shift, and go to state 416
    "null"                            shift, and go to state 417
    "table"                           shift, and go to state 418
    "deref"                           shift, and go to state 419
    "cast"                            shift, and go to state 420
    "upcast"                          shift, and go to state 421
    "addr"                            shift, and go to state 422
    "reinterpret"                     shift, and go to state 423
    "unsafe"                          shift, and go to state 424
    "fixed_array"                     shift, and go to state 425
    "default"                         shift, and go to state 426
    "bool"                            shift, and go to state 225
    "void"                            shift, and go to state 226
    "string"                          shift, and go to state 227
    "int"                             shift, and go to state 229
    "int2"                            shift, and go to state 230
    "int3"                            shift, and go to state 231
    "int4"                            shift, and go to state 232
    "uint"                            shift, and go to state 233
    "bitfield"                        shift, and go to state 427
    "uint2"                           shift, and go to state 235
    "uint3"                           shift, and go to state 236
    "uint4"                           shift, and go to state 237
    "float"                           shift, and go to state 238
    "float2"                          shift, and go to state 239
    "float3"                          shift, and go to state 240
    "float4"                          shift, and go to state 241
    "range"                           shift, and go to state 242
    "urange"                          shift, and go to state 243
    "range64"                         shift, and go to state 244
    "urange64"                        shift, and go to state 245
    "int64"                           shift, and go to state 247
    "uint64"                          shift, and go to state 248
    "double"                          shift, and go to state 249
    "int8"                            shift, and go to state 252
    "uint8"                           shift, and go to state 253
    "int16"                           shift, and go to state 254
    "uint16"                          shift, and go to state 255
    "tuple"                           shift, and go to state 428
    "variant"                         shift, and go to state 429
    "generator"                       shift, and go to state 430
    "++"                              shift, and go to state 431
    "--"                              shift, and go to state 432
    "::"                              shift, and go to state 55
    "$$"                              shift, and go to state 433
    "$i"                              shift, and go to state 434
    "$v"                              shift, and go to state 435
    "$b"                              shift, and go to state 436
    "$a"                              shift, and go to state 437
    "$c"                              shift, and go to state 438
    "..."                             shift, and go to state 439
    "integer constant"                shift, and go to state 440
    "long integer constant"           shift, and go to state 441
    "unsigned integer constant"       shift, and go to state 442
    "unsigned long integer constant"  shift, and go to state 443
    "unsigned int8 constant"          shift, and go to state 444
    "floating point constant"         shift, and go to state 445
    "double constant"                 shift, and go to state 446
    "name"                            shift, and go to state 56
    "start of the string"             shift, and go to state 447
    "begin of code block"             shift, and go to state 448
    '-'                               shift, and go to state 449
    '+'                               shift, and go to state 450
    '*'                               shift, and go to state 451
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 452
    '!'                               shift, and go to state 453
    '['                               shift, and go to state 454
    '('                               shift, and go to state 455
    '$'                               shift, and go to state 456
    '@'                               shift, and go to state 457

    string_builder          go to state 458
    expr_reader             go to state 459
    expr_call_pipe          go to state 460
    name_in_namespace       go to state 461
    expr_new                go to state 462
    expr_cast               go to state 463
    expr_type_decl          go to state 464
    expr_type_info          go to state 465
    block_or_lambda         go to state 466
    expr_full_block         go to state 467
    expr_numeric_const      go to state 468
    expr_named_call         go to state 469
    expr_method_call        go to state 470
    func_addr_expr          go to state 471
    expr_field              go to state 472
    expr_call               go to state 473
    expr                    go to state 839
    expr_mtag               go to state 475
    basic_type_declaration  go to state 476
    make_decl               go to state 477
    make_struct_decl        go to state 478
    make_tuple_call         go to state 479
    make_dim_decl           go to state 480
    make_table_decl         go to state 481
    array_comprehension     go to state 482


State 638

  392 expr: expr '+' . expr

    "struct"                          shift, and go to state 409
    "class"                           shift, and go to state 410
    "true"                            shift, and go to state 411
    "false"                           shift, and go to state 412
    "new"                             shift, and go to state 413
    "typeinfo"                        shift, and go to state 414
    "type"                            shift, and go to state 415
    "array"                           shift, and go to state 416
    "null"                            shift, and go to state 417
    "table"                           shift, and go to state 418
    "deref"                           shift, and go to state 419
    "cast"                            shift, and go to state 420
    "upcast"                          shift, and go to state 421
    "addr"                            shift, and go to state 422
    "reinterpret"                     shift, and go to state 423
    "unsafe"                          shift, and go to state 424
    "fixed_array"                     shift, and go to state 425
    "default"                         shift, and go to state 426
    "bool"                            shift, and go to state 225
    "void"                            shift, and go to state 226
    "string"                          shift, and go to state 227
    "int"                             shift, and go to state 229
    "int2"                            shift, and go to state 230
    "int3"                            shift, and go to state 231
    "int4"                            shift, and go to state 232
    "uint"                            shift, and go to state 233
    "bitfield"                        shift, and go to state 427
    "uint2"                           shift, and go to state 235
    "uint3"                           shift, and go to state 236
    "uint4"                           shift, and go to state 237
    "float"                           shift, and go to state 238
    "float2"                          shift, and go to state 239
    "float3"                          shift, and go to state 240
    "float4"                          shift, and go to state 241
    "range"                           shift, and go to state 242
    "urange"                          shift, and go to state 243
    "range64"                         shift, and go to state 244
    "urange64"                        shift, and go to state 245
    "int64"                           shift, and go to state 247
    "uint64"                          shift, and go to state 248
    "double"                          shift, and go to state 249
    "int8"                            shift, and go to state 252
    "uint8"                           shift, and go to state 253
    "int16"                           shift, and go to state 254
    "uint16"                          shift, and go to state 255
    "tuple"                           shift, and go to state 428
    "variant"                         shift, and go to state 429
    "generator"                       shift, and go to state 430
    "++"                              shift, and go to state 431
    "--"                              shift, and go to state 432
    "::"                              shift, and go to state 55
    "$$"                              shift, and go to state 433
    "$i"                              shift, and go to state 434
    "$v"                              shift, and go to state 435
    "$b"                              shift, and go to state 436
    "$a"                              shift, and go to state 437
    "$c"                              shift, and go to state 438
    "..."                             shift, and go to state 439
    "integer constant"                shift, and go to state 440
    "long integer constant"           shift, and go to state 441
    "unsigned integer constant"       shift, and go to state 442
    "unsigned long integer constant"  shift, and go to state 443
    "unsigned int8 constant"          shift, and go to state 444
    "floating point constant"         shift, and go to state 445
    "double constant"                 shift, and go to state 446
    "name"                            shift, and go to state 56
    "start of the string"             shift, and go to state 447
    "begin of code block"             shift, and go to state 448
    '-'                               shift, and go to state 449
    '+'                               shift, and go to state 450
    '*'                               shift, and go to state 451
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 452
    '!'                               shift, and go to state 453
    '['                               shift, and go to state 454
    '('                               shift, and go to state 455
    '$'                               shift, and go to state 456
    '@'                               shift, and go to state 457

    string_builder          go to state 458
    expr_reader             go to state 459
    expr_call_pipe          go to state 460
    name_in_namespace       go to state 461
    expr_new                go to state 462
    expr_cast               go to state 463
    expr_type_decl          go to state 464
    expr_type_info          go to state 465
    block_or_lambda         go to state 466
    expr_full_block         go to state 467
    expr_numeric_const      go to state 468
    expr_named_call         go to state 469
    expr_method_call        go to state 470
    func_addr_expr          go to state 471
    expr_field              go to state 472
    expr_call               go to state 473
    expr                    go to state 840
    expr_mtag               go to state 475
    basic_type_declaration  go to state 476
    make_decl               go to state 477
    make_struct_decl        go to state 478
    make_tuple_call         go to state 479
    make_dim_decl           go to state 480
    make_table_decl         go to state 481
    array_comprehension     go to state 482


State 639

  394 expr: expr '*' . expr

    "struct"                          shift, and go to state 409
    "class"                           shift, and go to state 410
    "true"                            shift, and go to state 411
    "false"                           shift, and go to state 412
    "new"                             shift, and go to state 413
    "typeinfo"                        shift, and go to state 414
    "type"                            shift, and go to state 415
    "array"                           shift, and go to state 416
    "null"                            shift, and go to state 417
    "table"                           shift, and go to state 418
    "deref"                           shift, and go to state 419
    "cast"                            shift, and go to state 420
    "upcast"                          shift, and go to state 421
    "addr"                            shift, and go to state 422
    "reinterpret"                     shift, and go to state 423
    "unsafe"                          shift, and go to state 424
    "fixed_array"                     shift, and go to state 425
    "default"                         shift, and go to state 426
    "bool"                            shift, and go to state 225
    "void"                            shift, and go to state 226
    "string"                          shift, and go to state 227
    "int"                             shift, and go to state 229
    "int2"                            shift, and go to state 230
    "int3"                            shift, and go to state 231
    "int4"                            shift, and go to state 232
    "uint"                            shift, and go to state 233
    "bitfield"                        shift, and go to state 427
    "uint2"                           shift, and go to state 235
    "uint3"                           shift, and go to state 236
    "uint4"                           shift, and go to state 237
    "float"                           shift, and go to state 238
    "float2"                          shift, and go to state 239
    "float3"                          shift, and go to state 240
    "float4"                          shift, and go to state 241
    "range"                           shift, and go to state 242
    "urange"                          shift, and go to state 243
    "range64"                         shift, and go to state 244
    "urange64"                        shift, and go to state 245
    "int64"                           shift, and go to state 247
    "uint64"                          shift, and go to state 248
    "double"                          shift, and go to state 249
    "int8"                            shift, and go to state 252
    "uint8"                           shift, and go to state 253
    "int16"                           shift, and go to state 254
    "uint16"                          shift, and go to state 255
    "tuple"                           shift, and go to state 428
    "variant"                         shift, and go to state 429
    "generator"                       shift, and go to state 430
    "++"                              shift, and go to state 431
    "--"                              shift, and go to state 432
    "::"                              shift, and go to state 55
    "$$"                              shift, and go to state 433
    "$i"                              shift, and go to state 434
    "$v"                              shift, and go to state 435
    "$b"                              shift, and go to state 436
    "$a"                              shift, and go to state 437
    "$c"                              shift, and go to state 438
    "..."                             shift, and go to state 439
    "integer constant"                shift, and go to state 440
    "long integer constant"           shift, and go to state 441
    "unsigned integer constant"       shift, and go to state 442
    "unsigned long integer constant"  shift, and go to state 443
    "unsigned int8 constant"          shift, and go to state 444
    "floating point constant"         shift, and go to state 445
    "double constant"                 shift, and go to state 446
    "name"                            shift, and go to state 56
    "start of the string"             shift, and go to state 447
    "begin of code block"             shift, and go to state 448
    '-'                               shift, and go to state 449
    '+'                               shift, and go to state 450
    '*'                               shift, and go to state 451
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 452
    '!'                               shift, and go to state 453
    '['                               shift, and go to state 454
    '('                               shift, and go to state 455
    '$'                               shift, and go to state 456
    '@'                               shift, and go to state 457

    string_builder          go to state 458
    expr_reader             go to state 459
    expr_call_pipe          go to state 460
    name_in_namespace       go to state 461
    expr_new                go to state 462
    expr_cast               go to state 463
    expr_type_decl          go to state 464
    expr_type_info          go to state 465
    block_or_lambda         go to state 466
    expr_full_block         go to state 467
    expr_numeric_const      go to state 468
    expr_named_call         go to state 469
    expr_method_call        go to state 470
    func_addr_expr          go to state 471
    expr_field              go to state 472
    expr_call               go to state 473
    expr                    go to state 841
    expr_mtag               go to state 475
    basic_type_declaration  go to state 476
    make_decl               go to state 477
    make_struct_decl        go to state 478
    make_tuple_call         go to state 479
    make_dim_decl           go to state 480
    make_table_decl         go to state 481
    array_comprehension     go to state 482


State 640

  395 expr: expr '/' . expr

    "struct"                          shift, and go to state 409
    "class"                           shift, and go to state 410
    "true"                            shift, and go to state 411
    "false"                           shift, and go to state 412
    "new"                             shift, and go to state 413
    "typeinfo"                        shift, and go to state 414
    "type"                            shift, and go to state 415
    "array"                           shift, and go to state 416
    "null"                            shift, and go to state 417
    "table"                           shift, and go to state 418
    "deref"                           shift, and go to state 419
    "cast"                            shift, and go to state 420
    "upcast"                          shift, and go to state 421
    "addr"                            shift, and go to state 422
    "reinterpret"                     shift, and go to state 423
    "unsafe"                          shift, and go to state 424
    "fixed_array"                     shift, and go to state 425
    "default"                         shift, and go to state 426
    "bool"                            shift, and go to state 225
    "void"                            shift, and go to state 226
    "string"                          shift, and go to state 227
    "int"                             shift, and go to state 229
    "int2"                            shift, and go to state 230
    "int3"                            shift, and go to state 231
    "int4"                            shift, and go to state 232
    "uint"                            shift, and go to state 233
    "bitfield"                        shift, and go to state 427
    "uint2"                           shift, and go to state 235
    "uint3"                           shift, and go to state 236
    "uint4"                           shift, and go to state 237
    "float"                           shift, and go to state 238
    "float2"                          shift, and go to state 239
    "float3"                          shift, and go to state 240
    "float4"                          shift, and go to state 241
    "range"                           shift, and go to state 242
    "urange"                          shift, and go to state 243
    "range64"                         shift, and go to state 244
    "urange64"                        shift, and go to state 245
    "int64"                           shift, and go to state 247
    "uint64"                          shift, and go to state 248
    "double"                          shift, and go to state 249
    "int8"                            shift, and go to state 252
    "uint8"                           shift, and go to state 253
    "int16"                           shift, and go to state 254
    "uint16"                          shift, and go to state 255
    "tuple"                           shift, and go to state 428
    "variant"                         shift, and go to state 429
    "generator"                       shift, and go to state 430
    "++"                              shift, and go to state 431
    "--"                              shift, and go to state 432
    "::"                              shift, and go to state 55
    "$$"                              shift, and go to state 433
    "$i"                              shift, and go to state 434
    "$v"                              shift, and go to state 435
    "$b"                              shift, and go to state 436
    "$a"                              shift, and go to state 437
    "$c"                              shift, and go to state 438
    "..."                             shift, and go to state 439
    "integer constant"                shift, and go to state 440
    "long integer constant"           shift, and go to state 441
    "unsigned integer constant"       shift, and go to state 442
    "unsigned long integer constant"  shift, and go to state 443
    "unsigned int8 constant"          shift, and go to state 444
    "floating point constant"         shift, and go to state 445
    "double constant"                 shift, and go to state 446
    "name"                            shift, and go to state 56
    "start of the string"             shift, and go to state 447
    "begin of code block"             shift, and go to state 448
    '-'                               shift, and go to state 449
    '+'                               shift, and go to state 450
    '*'                               shift, and go to state 451
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 452
    '!'                               shift, and go to state 453
    '['                               shift, and go to state 454
    '('                               shift, and go to state 455
    '$'                               shift, and go to state 456
    '@'                               shift, and go to state 457

    string_builder          go to state 458
    expr_reader             go to state 459
    expr_call_pipe          go to state 460
    name_in_namespace       go to state 461
    expr_new                go to state 462
    expr_cast               go to state 463
    expr_type_decl          go to state 464
    expr_type_info          go to state 465
    block_or_lambda         go to state 466
    expr_full_block         go to state 467
    expr_numeric_const      go to state 468
    expr_named_call         go to state 469
    expr_method_call        go to state 470
    func_addr_expr          go to state 471
    expr_field              go to state 472
    expr_call               go to state 473
    expr                    go to state 842
    expr_mtag               go to state 475
    basic_type_declaration  go to state 476
    make_decl               go to state 477
    make_struct_decl        go to state 478
    make_tuple_call         go to state 479
    make_dim_decl           go to state 480
    make_table_decl         go to state 481
    array_comprehension     go to state 482


State 641

  396 expr: expr '%' . expr

    "struct"                          shift, and go to state 409
    "class"                           shift, and go to state 410
    "true"                            shift, and go to state 411
    "false"                           shift, and go to state 412
    "new"                             shift, and go to state 413
    "typeinfo"                        shift, and go to state 414
    "type"                            shift, and go to state 415
    "array"                           shift, and go to state 416
    "null"                            shift, and go to state 417
    "table"                           shift, and go to state 418
    "deref"                           shift, and go to state 419
    "cast"                            shift, and go to state 420
    "upcast"                          shift, and go to state 421
    "addr"                            shift, and go to state 422
    "reinterpret"                     shift, and go to state 423
    "unsafe"                          shift, and go to state 424
    "fixed_array"                     shift, and go to state 425
    "default"                         shift, and go to state 426
    "bool"                            shift, and go to state 225
    "void"                            shift, and go to state 226
    "string"                          shift, and go to state 227
    "int"                             shift, and go to state 229
    "int2"                            shift, and go to state 230
    "int3"                            shift, and go to state 231
    "int4"                            shift, and go to state 232
    "uint"                            shift, and go to state 233
    "bitfield"                        shift, and go to state 427
    "uint2"                           shift, and go to state 235
    "uint3"                           shift, and go to state 236
    "uint4"                           shift, and go to state 237
    "float"                           shift, and go to state 238
    "float2"                          shift, and go to state 239
    "float3"                          shift, and go to state 240
    "float4"                          shift, and go to state 241
    "range"                           shift, and go to state 242
    "urange"                          shift, and go to state 243
    "range64"                         shift, and go to state 244
    "urange64"                        shift, and go to state 245
    "int64"                           shift, and go to state 247
    "uint64"                          shift, and go to state 248
    "double"                          shift, and go to state 249
    "int8"                            shift, and go to state 252
    "uint8"                           shift, and go to state 253
    "int16"                           shift, and go to state 254
    "uint16"                          shift, and go to state 255
    "tuple"                           shift, and go to state 428
    "variant"                         shift, and go to state 429
    "generator"                       shift, and go to state 430
    "++"                              shift, and go to state 431
    "--"                              shift, and go to state 432
    "::"                              shift, and go to state 55
    "$$"                              shift, and go to state 433
    "$i"                              shift, and go to state 434
    "$v"                              shift, and go to state 435
    "$b"                              shift, and go to state 436
    "$a"                              shift, and go to state 437
    "$c"                              shift, and go to state 438
    "..."                             shift, and go to state 439
    "integer constant"                shift, and go to state 440
    "long integer constant"           shift, and go to state 441
    "unsigned integer constant"       shift, and go to state 442
    "unsigned long integer constant"  shift, and go to state 443
    "unsigned int8 constant"          shift, and go to state 444
    "floating point constant"         shift, and go to state 445
    "double constant"                 shift, and go to state 446
    "name"                            shift, and go to state 56
    "start of the string"             shift, and go to state 447
    "begin of code block"             shift, and go to state 448
    '-'                               shift, and go to state 449
    '+'                               shift, and go to state 450
    '*'                               shift, and go to state 451
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 452
    '!'                               shift, and go to state 453
    '['                               shift, and go to state 454
    '('                               shift, and go to state 455
    '$'                               shift, and go to state 456
    '@'                               shift, and go to state 457

    string_builder          go to state 458
    expr_reader             go to state 459
    expr_call_pipe          go to state 460
    name_in_namespace       go to state 461
    expr_new                go to state 462
    expr_cast               go to state 463
    expr_type_decl          go to state 464
    expr_type_info          go to state 465
    block_or_lambda         go to state 466
    expr_full_block         go to state 467
    expr_numeric_const      go to state 468
    expr_named_call         go to state 469
    expr_method_call        go to state 470
    func_addr_expr          go to state 471
    expr_field              go to state 472
    expr_call               go to state 473
    expr                    go to state 843
    expr_mtag               go to state 475
    basic_type_declaration  go to state 476
    make_decl               go to state 477
    make_struct_decl        go to state 478
    make_tuple_call         go to state 479
    make_dim_decl           go to state 480
    make_table_decl         go to state 481
    array_comprehension     go to state 482


State 642

  358 expr_field: expr '.' . "name"
  359           | expr '.' . '.' "name"
  360           | expr '.' . "name" '(' ')'
  361           | expr '.' . "name" '(' expr_list ')'
  362           | expr '.' . basic_type_declaration '(' ')'
  363           | expr '.' . basic_type_declaration '(' expr_list ')'
  366           | expr '.' . $@21 error $@22
  416 expr: expr '.' . '[' expr ']'
  418     | expr '.' . "?[" expr ']'
  420     | expr '.' . "?." "name"
  466 expr_mtag: expr '.' . "$f" '(' expr ')'
  468          | expr '.' . '.' "$f" '(' expr ')'
  469          | expr '.' . "?." "$f" '(' expr ')'

    "bool"      shift, and go to state 225
    "void"      shift, and go to state 226
    "string"    shift, and go to state 227
    "int"       shift, and go to state 229
    "int2"      shift, and go to state 230
    "int3"      shift, and go to state 231
    "int4"      shift, and go to state 232
    "uint"      shift, and go to state 233
    "bitfield"  shift, and go to state 427
    "uint2"     shift, and go to state 235
    "uint3"     shift, and go to state 236
    "uint4"     shift, and go to state 237
    "float"     shift, and go to state 238
    "float2"    shift, and go to state 239
    "float3"    shift, and go to state 240
    "float4"    shift, and go to state 241
    "range"     shift, and go to state 242
    "urange"    shift, and go to state 243
    "range64"   shift, and go to state 244
    "urange64"  shift, and go to state 245
    "int64"     shift, and go to state 247
    "uint64"    shift, and go to state 248
    "double"    shift, and go to state 249
    "int8"      shift, and go to state 252
    "uint8"     shift, and go to state 253
    "int16"     shift, and go to state 254
    "uint16"    shift, and go to state 255
    "?."        shift, and go to state 844
    "?["        shift, and go to state 845
    "$f"        shift, and go to state 846
    "name"      shift, and go to state 847
    '.'         shift, and go to state 848
    '['         shift, and go to state 849

    $default  reduce using rule 364 ($@21)

    $@21                    go to state 850
    basic_type_declaration  go to state 851


State 643

  415 expr: expr '[' . expr ']'

    "struct"                          shift, and go to state 409
    "class"                           shift, and go to state 410
    "true"                            shift, and go to state 411
    "false"                           shift, and go to state 412
    "new"                             shift, and go to state 413
    "typeinfo"                        shift, and go to state 414
    "type"                            shift, and go to state 415
    "array"                           shift, and go to state 416
    "null"                            shift, and go to state 417
    "table"                           shift, and go to state 418
    "deref"                           shift, and go to state 419
    "cast"                            shift, and go to state 420
    "upcast"                          shift, and go to state 421
    "addr"                            shift, and go to state 422
    "reinterpret"                     shift, and go to state 423
    "unsafe"                          shift, and go to state 424
    "fixed_array"                     shift, and go to state 425
    "default"                         shift, and go to state 426
    "bool"                            shift, and go to state 225
    "void"                            shift, and go to state 226
    "string"                          shift, and go to state 227
    "int"                             shift, and go to state 229
    "int2"                            shift, and go to state 230
    "int3"                            shift, and go to state 231
    "int4"                            shift, and go to state 232
    "uint"                            shift, and go to state 233
    "bitfield"                        shift, and go to state 427
    "uint2"                           shift, and go to state 235
    "uint3"                           shift, and go to state 236
    "uint4"                           shift, and go to state 237
    "float"                           shift, and go to state 238
    "float2"                          shift, and go to state 239
    "float3"                          shift, and go to state 240
    "float4"                          shift, and go to state 241
    "range"                           shift, and go to state 242
    "urange"                          shift, and go to state 243
    "range64"                         shift, and go to state 244
    "urange64"                        shift, and go to state 245
    "int64"                           shift, and go to state 247
    "uint64"                          shift, and go to state 248
    "double"                          shift, and go to state 249
    "int8"                            shift, and go to state 252
    "uint8"                           shift, and go to state 253
    "int16"                           shift, and go to state 254
    "uint16"                          shift, and go to state 255
    "tuple"                           shift, and go to state 428
    "variant"                         shift, and go to state 429
    "generator"                       shift, and go to state 430
    "++"                              shift, and go to state 431
    "--"                              shift, and go to state 432
    "::"                              shift, and go to state 55
    "$$"                              shift, and go to state 433
    "$i"                              shift, and go to state 434
    "$v"                              shift, and go to state 435
    "$b"                              shift, and go to state 436
    "$a"                              shift, and go to state 437
    "$c"                              shift, and go to state 438
    "..."                             shift, and go to state 439
    "integer constant"                shift, and go to state 440
    "long integer constant"           shift, and go to state 441
    "unsigned integer constant"       shift, and go to state 442
    "unsigned long integer constant"  shift, and go to state 443
    "unsigned int8 constant"          shift, and go to state 444
    "floating point constant"         shift, and go to state 445
    "double constant"                 shift, and go to state 446
    "name"                            shift, and go to state 56
    "start of the string"             shift, and go to state 447
    "begin of code block"             shift, and go to state 448
    '-'                               shift, and go to state 449
    '+'                               shift, and go to state 450
    '*'                               shift, and go to state 451
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 452
    '!'                               shift, and go to state 453
    '['                               shift, and go to state 454
    '('                               shift, and go to state 455
    '$'                               shift, and go to state 456
    '@'                               shift, and go to state 457

    string_builder          go to state 458
    expr_reader             go to state 459
    expr_call_pipe          go to state 460
    name_in_namespace       go to state 461
    expr_new                go to state 462
    expr_cast               go to state 463
    expr_type_decl          go to state 464
    expr_type_info          go to state 465
    block_or_lambda         go to state 466
    expr_full_block         go to state 467
    expr_numeric_const      go to state 468
    expr_named_call         go to state 469
    expr_method_call        go to state 470
    func_addr_expr          go to state 471
    expr_field              go to state 472
    expr_call               go to state 473
    expr                    go to state 852
    expr_mtag               go to state 475
    basic_type_declaration  go to state 476
    make_decl               go to state 477
    make_struct_decl        go to state 478
    make_tuple_call         go to state 479
    make_dim_decl           go to state 480
    make_table_decl         go to state 481
    array_comprehension     go to state 482


State 644

  655 type_declaration_no_options_no_dim: "typedecl" '(' expr ')' .

    $default  reduce using rule 655 (type_declaration_no_options_no_dim)


State 645

  372 expr_call: basic_type_declaration '(' . ')'
  373          | basic_type_declaration '(' . expr_list ')'

    "struct"                          shift, and go to state 409
    "class"                           shift, and go to state 410
    "true"                            shift, and go to state 411
    "false"                           shift, and go to state 412
    "new"                             shift, and go to state 413
    "typeinfo"                        shift, and go to state 414
    "type"                            shift, and go to state 415
    "array"                           shift, and go to state 416
    "null"                            shift, and go to state 417
    "table"                           shift, and go to state 418
    "deref"                           shift, and go to state 419
    "cast"                            shift, and go to state 420
    "upcast"                          shift, and go to state 421
    "addr"                            shift, and go to state 422
    "reinterpret"                     shift, and go to state 423
    "unsafe"                          shift, and go to state 424
    "fixed_array"                     shift, and go to state 425
    "default"                         shift, and go to state 426
    "bool"                            shift, and go to state 225
    "void"                            shift, and go to state 226
    "string"                          shift, and go to state 227
    "int"                             shift, and go to state 229
    "int2"                            shift, and go to state 230
    "int3"                            shift, and go to state 231
    "int4"                            shift, and go to state 232
    "uint"                            shift, and go to state 233
    "bitfield"                        shift, and go to state 427
    "uint2"                           shift, and go to state 235
    "uint3"                           shift, and go to state 236
    "uint4"                           shift, and go to state 237
    "float"                           shift, and go to state 238
    "float2"                          shift, and go to state 239
    "float3"                          shift, and go to state 240
    "float4"                          shift, and go to state 241
    "range"                           shift, and go to state 242
    "urange"                          shift, and go to state 243
    "range64"                         shift, and go to state 244
    "urange64"                        shift, and go to state 245
    "int64"                           shift, and go to state 247
    "uint64"                          shift, and go to state 248
    "double"                          shift, and go to state 249
    "int8"                            shift, and go to state 252
    "uint8"                           shift, and go to state 253
    "int16"                           shift, and go to state 254
    "uint16"                          shift, and go to state 255
    "tuple"                           shift, and go to state 428
    "variant"                         shift, and go to state 429
    "generator"                       shift, and go to state 430
    "++"                              shift, and go to state 431
    "--"                              shift, and go to state 432
    "::"                              shift, and go to state 55
    "$$"                              shift, and go to state 433
    "$i"                              shift, and go to state 434
    "$v"                              shift, and go to state 435
    "$b"                              shift, and go to state 436
    "$a"                              shift, and go to state 437
    "$c"                              shift, and go to state 438
    "..."                             shift, and go to state 439
    "integer constant"                shift, and go to state 440
    "long integer constant"           shift, and go to state 441
    "unsigned integer constant"       shift, and go to state 442
    "unsigned long integer constant"  shift, and go to state 443
    "unsigned int8 constant"          shift, and go to state 444
    "floating point constant"         shift, and go to state 445
    "double constant"                 shift, and go to state 446
    "name"                            shift, and go to state 56
    "start of the string"             shift, and go to state 447
    "begin of code block"             shift, and go to state 448
    '-'                               shift, and go to state 449
    '+'                               shift, and go to state 450
    '*'                               shift, and go to state 451
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 452
    '!'                               shift, and go to state 453
    '['                               shift, and go to state 454
    '('                               shift, and go to state 455
    ')'                               shift, and go to state 853
    '$'                               shift, and go to state 456
    '@'                               shift, and go to state 457

    string_builder          go to state 458
    expr_reader             go to state 459
    expr_call_pipe          go to state 460
    name_in_namespace       go to state 461
    expr_new                go to state 462
    expr_cast               go to state 463
    expr_type_decl          go to state 464
    expr_type_info          go to state 465
    expr_list               go to state 854
    block_or_lambda         go to state 466
    expr_full_block         go to state 467
    expr_numeric_const      go to state 468
    expr_named_call         go to state 469
    expr_method_call        go to state 470
    func_addr_expr          go to state 471
    expr_field              go to state 472
    expr_call               go to state 473
    expr                    go to state 600
    expr_mtag               go to state 475
    basic_type_declaration  go to state 476
    make_decl               go to state 477
    make_struct_decl        go to state 478
    make_tuple_call         go to state 479
    make_dim_decl           go to state 480
    make_table_decl         go to state 481
    array_comprehension     go to state 482


State 646

  683 type_declaration_no_options_no_dim: "iterator" '<' $@50 type_declaration . '>' $@51
  712 type_declaration: type_declaration . '|' type_declaration_no_options
  713                 | type_declaration . '|' '#'

    '|'  shift, and go to state 375
    '>'  shift, and go to state 855


State 647

  673 type_declaration_no_options_no_dim: "smart_ptr" '<' $@44 type_declaration . '>' $@45
  712 type_declaration: type_declaration . '|' type_declaration_no_options
  713                 | type_declaration . '|' '#'

    '|'  shift, and go to state 375
    '>'  shift, and go to state 856


State 648

  628 auto_type_declaration: "auto" '(' "name" ')' .

    $default  reduce using rule 628 (auto_type_declaration)


State 649

  630 bitfield_bits: "name" .

    $default  reduce using rule 630 (bitfield_bits)


State 650

  631 bitfield_bits: bitfield_bits . "end of expression" "name"
  637 bitfield_type_declaration: "bitfield" '<' $@39 bitfield_bits . '>' $@40

    "end of expression"  shift, and go to state 857
    '>'                  shift, and go to state 858


State 651

  687 type_declaration_no_options_no_dim: "block" '<' $@52 type_declaration . '>' $@53
  712 type_declaration: type_declaration . '|' type_declaration_no_options
  713                 | type_declaration . '|' '#'

    '|'  shift, and go to state 375
    '>'  shift, and go to state 859


State 652

  690 type_declaration_no_options_no_dim: "block" '<' $@54 optional_function_argument_list . optional_function_type '>' $@55

    ':'  shift, and go to state 392

    $default  reduce using rule 118 (optional_function_type)

    optional_function_type  go to state 860


State 653

  694 type_declaration_no_options_no_dim: "function" '<' $@56 type_declaration . '>' $@57
  712 type_declaration: type_declaration . '|' type_declaration_no_options
  713                 | type_declaration . '|' '#'

    '|'  shift, and go to state 375
    '>'  shift, and go to state 861


State 654

  697 type_declaration_no_options_no_dim: "function" '<' $@58 optional_function_argument_list . optional_function_type '>' $@59

    ':'  shift, and go to state 392

    $default  reduce using rule 118 (optional_function_type)

    optional_function_type  go to state 862


State 655

  701 type_declaration_no_options_no_dim: "lambda" '<' $@60 type_declaration . '>' $@61
  712 type_declaration: type_declaration . '|' type_declaration_no_options
  713                 | type_declaration . '|' '#'

    '|'  shift, and go to state 375
    '>'  shift, and go to state 863


State 656

  704 type_declaration_no_options_no_dim: "lambda" '<' $@62 optional_function_argument_list . optional_function_type '>' $@63

    ':'  shift, and go to state 392

    $default  reduce using rule 118 (optional_function_type)

    optional_function_type  go to state 864


State 657

  500 tuple_type_list: tuple_type .

    $default  reduce using rule 500 (tuple_type_list)


State 658

  501 tuple_type_list: tuple_type_list . c_or_s tuple_type
  707 type_declaration_no_options_no_dim: "tuple" '<' $@64 tuple_type_list . '>' $@65

    "end of expression"  shift, and go to state 512
    ','                  shift, and go to state 513
    '>'                  shift, and go to state 865

    c_or_s  go to state 866


State 659

  506 variant_type_list: variant_type .

    $default  reduce using rule 506 (variant_type_list)


State 660

  507 variant_type_list: variant_type_list . c_or_s variant_type
  710 type_declaration_no_options_no_dim: "variant" '<' $@66 variant_type_list . '>' $@67

    "end of expression"  shift, and go to state 512
    ','                  shift, and go to state 513
    '>'                  shift, and go to state 867

    c_or_s  go to state 868


State 661

  629 auto_type_declaration: "$t" '(' expr ')' .

    $default  reduce using rule 629 (auto_type_declaration)


State 662

  658 type_declaration_no_options_no_dim: '$' name_in_namespace '<' $@43 . type_declaration_no_options_list '>' '(' optional_expr_list ')'

    "type"       shift, and go to state 219
    "array"      shift, and go to state 220
    "table"      shift, and go to state 221
    "typedecl"   shift, and go to state 222
    "iterator"   shift, and go to state 223
    "smart_ptr"  shift, and go to state 224
    "bool"       shift, and go to state 225
    "void"       shift, and go to state 226
    "string"     shift, and go to state 227
    "auto"       shift, and go to state 228
    "int"        shift, and go to state 229
    "int2"       shift, and go to state 230
    "int3"       shift, and go to state 231
    "int4"       shift, and go to state 232
    "uint"       shift, and go to state 233
    "bitfield"   shift, and go to state 234
    "uint2"      shift, and go to state 235
    "uint3"      shift, and go to state 236
    "uint4"      shift, and go to state 237
    "float"      shift, and go to state 238
    "float2"     shift, and go to state 239
    "float3"     shift, and go to state 240
    "float4"     shift, and go to state 241
    "range"      shift, and go to state 242
    "urange"     shift, and go to state 243
    "range64"    shift, and go to state 244
    "urange64"   shift, and go to state 245
    "block"      shift, and go to state 246
    "int64"      shift, and go to state 247
    "uint64"     shift, and go to state 248
    "double"     shift, and go to state 249
    "function"   shift, and go to state 250
    "lambda"     shift, and go to state 251
    "int8"       shift, and go to state 252
    "uint8"      shift, and go to state 253
    "int16"      shift, and go to state 254
    "uint16"     shift, and go to state 255
    "tuple"      shift, and go to state 256
    "variant"    shift, and go to state 257
    "::"         shift, and go to state 55
    "$t"         shift, and go to state 258
    "name"       shift, and go to state 56
    '$'          shift, and go to state 259

    type_declaration_no_options_list    go to state 869
    name_in_namespace                   go to state 260
    basic_type_declaration              go to state 261
    structure_type_declaration          go to state 262
    auto_type_declaration               go to state 263
    bitfield_type_declaration           go to state 264
    type_declaration_no_options         go to state 265
    type_declaration_no_options_no_dim  go to state 266
    type_declaration                    go to state 870


State 663

  656 type_declaration_no_options_no_dim: '$' name_in_namespace '(' optional_expr_list . ')'

    ')'  shift, and go to state 871


State 664

  242 optional_expr_list: expr_list . optional_comma
  300 expr_list: expr_list . ',' expr

    ','  shift, and go to state 783

    $default  reduce using rule 793 (optional_comma)

    optional_comma  go to state 872


State 665

  659 type_declaration_no_options_no_dim: type_declaration_no_options_no_dim '-' '[' ']' .

    $default  reduce using rule 659 (type_declaration_no_options_no_dim)


State 666

  642 dim_list: '[' expr ']' .

    $default  reduce using rule 642 (dim_list)


State 667

  645 dim_list: dim_list '[' ']' .

    $default  reduce using rule 645 (dim_list)


State 668

  347 expr_method_call: expr . "->" "name" '(' ')'
  348                 | expr . "->" "name" '(' expr_list ')'
  358 expr_field: expr . '.' "name"
  359           | expr . '.' '.' "name"
  360           | expr . '.' "name" '(' ')'
  361           | expr . '.' "name" '(' expr_list ')'
  362           | expr . '.' basic_type_declaration '(' ')'
  363           | expr . '.' basic_type_declaration '(' expr_list ')'
  366           | expr . '.' $@21 error $@22
  388 expr: expr . "<<" expr
  389     | expr . ">>" expr
  390     | expr . "<<<" expr
  391     | expr . ">>>" expr
  392     | expr . '+' expr
  393     | expr . '-' expr
  394     | expr . '*' expr
  395     | expr . '/' expr
  396     | expr . '%' expr
  397     | expr . '<' expr
  398     | expr . '>' expr
  399     | expr . "==" expr
  400     | expr . "!=" expr
  401     | expr . "<=" expr
  402     | expr . ">=" expr
  403     | expr . '&' expr
  404     | expr . '|' expr
  405     | expr . '^' expr
  406     | expr . "&&" expr
  407     | expr . "||" expr
  408     | expr . "^^" expr
  409     | expr . ".." expr
  412     | expr . "++"
  413     | expr . "--"
  415     | expr . '[' expr ']'
  416     | expr . '.' '[' expr ']'
  417     | expr . "?[" expr ']'
  418     | expr . '.' "?[" expr ']'
  419     | expr . "?." "name"
  420     | expr . '.' "?." "name"
  429     | expr . "??" expr
  430     | expr . '?' expr ':' expr
  433     | expr . "is" "type" '<' $@23 type_declaration_no_options '>' $@24
  434     | expr . "is" basic_type_declaration
  435     | expr . "is" "name"
  436     | expr . "as" "name"
  439     | expr . "as" "type" '<' $@25 type_declaration '>' $@26
  440     | expr . "as" basic_type_declaration
  441     | expr . '?' "as" "name"
  444     | expr . '?' "as" "type" '<' $@27 type_declaration '>' $@28
  445     | expr . '?' "as" basic_type_declaration
  453     | expr . "<|" expr
  454     | expr . "|>" expr
  455     | expr . "|>" basic_type_declaration
  466 expr_mtag: expr . '.' "$f" '(' expr ')'
  467          | expr . "?." "$f" '(' expr ')'
  468          | expr . '.' '.' "$f" '(' expr ')'
  469          | expr . '.' "?." "$f" '(' expr ')'
  470          | expr . "as" "$f" '(' expr ')'
  471          | expr . '?' "as" "$f" '(' expr ')'
  472          | expr . "is" "$f" '(' expr ')'
  644 dim_list: dim_list '[' expr . ']'

    "is"   shift, and go to state 609
    "as"   shift, and go to state 610
    "<<"   shift, and go to state 611
    ">>"   shift, and go to state 612
    "++"   shift, and go to state 613
    "--"   shift, and go to state 614
    "<="   shift, and go to state 615
    ">="   shift, and go to state 616
    "=="   shift, and go to state 617
    "!="   shift, and go to state 618
    "->"   shift, and go to state 619
    "??"   shift, and go to state 620
    "?."   shift, and go to state 621
    "?["   shift, and go to state 622
    "<|"   shift, and go to state 623
    "|>"   shift, and go to state 624
    "<<<"  shift, and go to state 625
    ">>>"  shift, and go to state 626
    "&&"   shift, and go to state 627
    "||"   shift, and go to state 628
    "^^"   shift, and go to state 629
    ".."   shift, and go to state 630
    '?'    shift, and go to state 631
    '|'    shift, and go to state 632
    '^'    shift, and go to state 633
    '&'    shift, and go to state 634
    '<'    shift, and go to state 635
    '>'    shift, and go to state 636
    '-'    shift, and go to state 637
    '+'    shift, and go to state 638
    '*'    shift, and go to state 639
    '/'    shift, and go to state 640
    '%'    shift, and go to state 641
    '.'    shift, and go to state 642
    '['    shift, and go to state 643
    ']'    shift, and go to state 873


State 669

  634 bitfield_alias_bits: bitfield_alias_bits ',' "name" .

    $default  reduce using rule 634 (bitfield_alias_bits)


State 670

  725 bitfield_alias_declaration: "bitfield" optional_public_or_private_alias "name" $@74 "begin of code block" $@75 bitfield_alias_bits optional_comma $@76 . "end of code block"

    "end of code block"  shift, and go to state 874


State 671

  499 tuple_type: "name" ':' . type_declaration

    "type"       shift, and go to state 219
    "array"      shift, and go to state 220
    "table"      shift, and go to state 221
    "typedecl"   shift, and go to state 222
    "iterator"   shift, and go to state 223
    "smart_ptr"  shift, and go to state 224
    "bool"       shift, and go to state 225
    "void"       shift, and go to state 226
    "string"     shift, and go to state 227
    "auto"       shift, and go to state 228
    "int"        shift, and go to state 229
    "int2"       shift, and go to state 230
    "int3"       shift, and go to state 231
    "int4"       shift, and go to state 232
    "uint"       shift, and go to state 233
    "bitfield"   shift, and go to state 234
    "uint2"      shift, and go to state 235
    "uint3"      shift, and go to state 236
    "uint4"      shift, and go to state 237
    "float"      shift, and go to state 238
    "float2"     shift, and go to state 239
    "float3"     shift, and go to state 240
    "float4"     shift, and go to state 241
    "range"      shift, and go to state 242
    "urange"     shift, and go to state 243
    "range64"    shift, and go to state 244
    "urange64"   shift, and go to state 245
    "block"      shift, and go to state 246
    "int64"      shift, and go to state 247
    "uint64"     shift, and go to state 248
    "double"     shift, and go to state 249
    "function"   shift, and go to state 250
    "lambda"     shift, and go to state 251
    "int8"       shift, and go to state 252
    "uint8"      shift, and go to state 253
    "int16"      shift, and go to state 254
    "uint16"     shift, and go to state 255
    "tuple"      shift, and go to state 256
    "variant"    shift, and go to state 257
    "::"         shift, and go to state 55
    "$t"         shift, and go to state 258
    "name"       shift, and go to state 56
    '$'          shift, and go to state 259

    name_in_namespace                   go to state 260
    basic_type_declaration              go to state 261
    structure_type_declaration          go to state 262
    auto_type_declaration               go to state 263
    bitfield_type_declaration           go to state 264
    type_declaration_no_options         go to state 265
    type_declaration_no_options_no_dim  go to state 266
    type_declaration                    go to state 875


State 672

  504 tuple_alias_type_list: tuple_alias_type_list tuple_type c_or_s .

    $default  reduce using rule 504 (tuple_alias_type_list)


State 673

  717 tuple_alias_declaration: "tuple" optional_public_or_private_alias "name" $@68 "begin of code block" $@69 tuple_alias_type_list $@70 "end of code block" .

    $default  reduce using rule 717 (tuple_alias_declaration)


State 674

  505 variant_type: "name" ':' . type_declaration

    "type"       shift, and go to state 219
    "array"      shift, and go to state 220
    "table"      shift, and go to state 221
    "typedecl"   shift, and go to state 222
    "iterator"   shift, and go to state 223
    "smart_ptr"  shift, and go to state 224
    "bool"       shift, and go to state 225
    "void"       shift, and go to state 226
    "string"     shift, and go to state 227
    "auto"       shift, and go to state 228
    "int"        shift, and go to state 229
    "int2"       shift, and go to state 230
    "int3"       shift, and go to state 231
    "int4"       shift, and go to state 232
    "uint"       shift, and go to state 233
    "bitfield"   shift, and go to state 234
    "uint2"      shift, and go to state 235
    "uint3"      shift, and go to state 236
    "uint4"      shift, and go to state 237
    "float"      shift, and go to state 238
    "float2"     shift, and go to state 239
    "float3"     shift, and go to state 240
    "float4"     shift, and go to state 241
    "range"      shift, and go to state 242
    "urange"     shift, and go to state 243
    "range64"    shift, and go to state 244
    "urange64"   shift, and go to state 245
    "block"      shift, and go to state 246
    "int64"      shift, and go to state 247
    "uint64"     shift, and go to state 248
    "double"     shift, and go to state 249
    "function"   shift, and go to state 250
    "lambda"     shift, and go to state 251
    "int8"       shift, and go to state 252
    "uint8"      shift, and go to state 253
    "int16"      shift, and go to state 254
    "uint16"     shift, and go to state 255
    "tuple"      shift, and go to state 256
    "variant"    shift, and go to state 257
    "::"         shift, and go to state 55
    "$t"         shift, and go to state 258
    "name"       shift, and go to state 56
    '$'          shift, and go to state 259

    name_in_namespace                   go to state 260
    basic_type_declaration              go to state 261
    structure_type_declaration          go to state 262
    auto_type_declaration               go to state 263
    bitfield_type_declaration           go to state 264
    type_declaration_no_options         go to state 265
    type_declaration_no_options_no_dim  go to state 266
    type_declaration                    go to state 876


State 675

  510 variant_alias_type_list: variant_alias_type_list variant_type c_or_s .

    $default  reduce using rule 510 (variant_alias_type_list)


State 676

  721 variant_alias_declaration: "variant" optional_public_or_private_alias "name" $@71 "begin of code block" $@72 variant_alias_type_list $@73 "end of code block" .

    $default  reduce using rule 721 (variant_alias_declaration)


State 677

  347 expr_method_call: expr . "->" "name" '(' ')'
  348                 | expr . "->" "name" '(' expr_list ')'
  358 expr_field: expr . '.' "name"
  359           | expr . '.' '.' "name"
  360           | expr . '.' "name" '(' ')'
  361           | expr . '.' "name" '(' expr_list ')'
  362           | expr . '.' basic_type_declaration '(' ')'
  363           | expr . '.' basic_type_declaration '(' expr_list ')'
  366           | expr . '.' $@21 error $@22
  388 expr: expr . "<<" expr
  389     | expr . ">>" expr
  390     | expr . "<<<" expr
  391     | expr . ">>>" expr
  392     | expr . '+' expr
  393     | expr . '-' expr
  394     | expr . '*' expr
  395     | expr . '/' expr
  396     | expr . '%' expr
  397     | expr . '<' expr
  398     | expr . '>' expr
  399     | expr . "==" expr
  400     | expr . "!=" expr
  401     | expr . "<=" expr
  402     | expr . ">=" expr
  403     | expr . '&' expr
  404     | expr . '|' expr
  405     | expr . '^' expr
  406     | expr . "&&" expr
  407     | expr . "||" expr
  408     | expr . "^^" expr
  409     | expr . ".." expr
  412     | expr . "++"
  413     | expr . "--"
  415     | expr . '[' expr ']'
  416     | expr . '.' '[' expr ']'
  417     | expr . "?[" expr ']'
  418     | expr . '.' "?[" expr ']'
  419     | expr . "?." "name"
  420     | expr . '.' "?." "name"
  429     | expr . "??" expr
  430     | expr . '?' expr ':' expr
  433     | expr . "is" "type" '<' $@23 type_declaration_no_options '>' $@24
  434     | expr . "is" basic_type_declaration
  435     | expr . "is" "name"
  436     | expr . "as" "name"
  439     | expr . "as" "type" '<' $@25 type_declaration '>' $@26
  440     | expr . "as" basic_type_declaration
  441     | expr . '?' "as" "name"
  444     | expr . '?' "as" "type" '<' $@27 type_declaration '>' $@28
  445     | expr . '?' "as" basic_type_declaration
  453     | expr . "<|" expr
  454     | expr . "|>" expr
  455     | expr . "|>" basic_type_declaration
  466 expr_mtag: expr . '.' "$f" '(' expr ')'
  467          | expr . "?." "$f" '(' expr ')'
  468          | expr . '.' '.' "$f" '(' expr ')'
  469          | expr . '.' "?." "$f" '(' expr ')'
  470          | expr . "as" "$f" '(' expr ')'
  471          | expr . '?' "as" "$f" '(' expr ')'
  472          | expr . "is" "$f" '(' expr ')'
  495 function_argument_declaration: "$a" '(' expr . ')'

    "is"   shift, and go to state 609
    "as"   shift, and go to state 610
    "<<"   shift, and go to state 611
    ">>"   shift, and go to state 612
    "++"   shift, and go to state 613
    "--"   shift, and go to state 614
    "<="   shift, and go to state 615
    ">="   shift, and go to state 616
    "=="   shift, and go to state 617
    "!="   shift, and go to state 618
    "->"   shift, and go to state 619
    "??"   shift, and go to state 620
    "?."   shift, and go to state 621
    "?["   shift, and go to state 622
    "<|"   shift, and go to state 623
    "|>"   shift, and go to state 624
    "<<<"  shift, and go to state 625
    ">>>"  shift, and go to state 626
    "&&"   shift, and go to state 627
    "||"   shift, and go to state 628
    "^^"   shift, and go to state 629
    ".."   shift, and go to state 630
    '?'    shift, and go to state 631
    '|'    shift, and go to state 632
    '^'    shift, and go to state 633
    '&'    shift, and go to state 634
    '<'    shift, and go to state 635
    '>'    shift, and go to state 636
    '-'    shift, and go to state 637
    '+'    shift, and go to state 638
    '*'    shift, and go to state 639
    '/'    shift, and go to state 640
    '%'    shift, and go to state 641
    '.'    shift, and go to state 642
    '['    shift, and go to state 643
    ')'    shift, and go to state 877


State 678

  587 variable_name_with_pos_list: "$i" . '(' expr ')'

    '('  shift, and go to state 878


State 679

  586 variable_name_with_pos_list: "name" .
  588                            | "name" . "aka" "name"

    "aka"  shift, and go to state 879

    $default  reduce using rule 586 (variable_name_with_pos_list)


State 680

  494 function_argument_declaration: optional_field_annotation kwd_let_var_or_nothing variable_declaration .

    $default  reduce using rule 494 (function_argument_declaration)


State 681

  513 variable_declaration: variable_name_with_pos_list .
  514                     | variable_name_with_pos_list . '&'
  515                     | variable_name_with_pos_list . ':' type_declaration
  516                     | variable_name_with_pos_list . ':' type_declaration copy_or_move expr
  517                     | variable_name_with_pos_list . copy_or_move expr
  589 variable_name_with_pos_list: variable_name_with_pos_list . ',' "name"
  590                            | variable_name_with_pos_list . ',' "name" "aka" "name"

    "<-"  shift, and go to state 880
    ','   shift, and go to state 881
    '='   shift, and go to state 882
    ':'   shift, and go to state 883
    '&'   shift, and go to state 884

    $default  reduce using rule 513 (variable_declaration)

    copy_or_move  go to state 885


State 682

  497 function_argument_list: function_argument_list "end of expression" function_argument_declaration .

    $default  reduce using rule 497 (function_argument_list)


State 683

  240 expressions: expressions error .

    $default  reduce using rule 240 (expressions)


State 684

   73 expression_while_loop: "while" . '(' expr ')' expression_block

    '('  shift, and go to state 886


State 685

   60 if_or_static_if: "if" .

    $default  reduce using rule 60 (if_or_static_if)


State 686

   61 if_or_static_if: "static_if" .

    $default  reduce using rule 61 (if_or_static_if)


State 687

   71 expression_for_loop: "for" . '(' variable_name_with_pos_list "in" expr_list ')' expression_block

    '('  shift, and go to state 887


State 688

  264 expression_return: "return" .
  265                  | "return" . expr
  266                  | "return" . "<-" expr

    "struct"                          shift, and go to state 409
    "class"                           shift, and go to state 410
    "true"                            shift, and go to state 411
    "false"                           shift, and go to state 412
    "new"                             shift, and go to state 413
    "typeinfo"                        shift, and go to state 414
    "type"                            shift, and go to state 415
    "array"                           shift, and go to state 416
    "null"                            shift, and go to state 417
    "table"                           shift, and go to state 418
    "deref"                           shift, and go to state 419
    "cast"                            shift, and go to state 420
    "upcast"                          shift, and go to state 421
    "addr"                            shift, and go to state 422
    "reinterpret"                     shift, and go to state 423
    "unsafe"                          shift, and go to state 424
    "fixed_array"                     shift, and go to state 425
    "default"                         shift, and go to state 426
    "bool"                            shift, and go to state 225
    "void"                            shift, and go to state 226
    "string"                          shift, and go to state 227
    "int"                             shift, and go to state 229
    "int2"                            shift, and go to state 230
    "int3"                            shift, and go to state 231
    "int4"                            shift, and go to state 232
    "uint"                            shift, and go to state 233
    "bitfield"                        shift, and go to state 427
    "uint2"                           shift, and go to state 235
    "uint3"                           shift, and go to state 236
    "uint4"                           shift, and go to state 237
    "float"                           shift, and go to state 238
    "float2"                          shift, and go to state 239
    "float3"                          shift, and go to state 240
    "float4"                          shift, and go to state 241
    "range"                           shift, and go to state 242
    "urange"                          shift, and go to state 243
    "range64"                         shift, and go to state 244
    "urange64"                        shift, and go to state 245
    "int64"                           shift, and go to state 247
    "uint64"                          shift, and go to state 248
    "double"                          shift, and go to state 249
    "int8"                            shift, and go to state 252
    "uint8"                           shift, and go to state 253
    "int16"                           shift, and go to state 254
    "uint16"                          shift, and go to state 255
    "tuple"                           shift, and go to state 428
    "variant"                         shift, and go to state 429
    "generator"                       shift, and go to state 430
    "++"                              shift, and go to state 431
    "--"                              shift, and go to state 432
    "<-"                              shift, and go to state 888
    "::"                              shift, and go to state 55
    "$$"                              shift, and go to state 433
    "$i"                              shift, and go to state 434
    "$v"                              shift, and go to state 435
    "$b"                              shift, and go to state 436
    "$a"                              shift, and go to state 437
    "$c"                              shift, and go to state 438
    "..."                             shift, and go to state 439
    "integer constant"                shift, and go to state 440
    "long integer constant"           shift, and go to state 441
    "unsigned integer constant"       shift, and go to state 442
    "unsigned long integer constant"  shift, and go to state 443
    "unsigned int8 constant"          shift, and go to state 444
    "floating point constant"         shift, and go to state 445
    "double constant"                 shift, and go to state 446
    "name"                            shift, and go to state 56
    "start of the string"             shift, and go to state 447
    "begin of code block"             shift, and go to state 448
    '-'                               shift, and go to state 449
    '+'                               shift, and go to state 450
    '*'                               shift, and go to state 451
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 452
    '!'                               shift, and go to state 453
    '['                               shift, and go to state 454
    '('                               shift, and go to state 455
    '$'                               shift, and go to state 456
    '@'                               shift, and go to state 457

    $default  reduce using rule 264 (expression_return)

    string_builder          go to state 458
    expr_reader             go to state 459
    expr_call_pipe          go to state 460
    name_in_namespace       go to state 461
    expr_new                go to state 462
    expr_cast               go to state 463
    expr_type_decl          go to state 464
    expr_type_info          go to state 465
    block_or_lambda         go to state 466
    expr_full_block         go to state 467
    expr_numeric_const      go to state 468
    expr_named_call         go to state 469
    expr_method_call        go to state 470
    func_addr_expr          go to state 471
    expr_field              go to state 472
    expr_call               go to state 473
    expr                    go to state 889
    expr_mtag               go to state 475
    basic_type_declaration  go to state 476
    make_decl               go to state 477
    make_struct_decl        go to state 478
    make_tuple_call         go to state 479
    make_dim_decl           go to state 480
    make_table_decl         go to state 481
    array_comprehension     go to state 482


State 689

  262 expression_break: "break" .

    $default  reduce using rule 262 (expression_break)


State 690

  269 expression_try_catch: "try" . expression_block "recover" expression_block

    $default  reduce using rule 216 ($@5)

    expression_block  go to state 890
    $@5               go to state 327


State 691

  250 expression_delete: "delete" . expr
  251                  | "delete" . "explicit" expr

    "struct"                          shift, and go to state 409
    "class"                           shift, and go to state 410
    "true"                            shift, and go to state 411
    "false"                           shift, and go to state 412
    "new"                             shift, and go to state 413
    "typeinfo"                        shift, and go to state 414
    "type"                            shift, and go to state 415
    "array"                           shift, and go to state 416
    "null"                            shift, and go to state 417
    "table"                           shift, and go to state 418
    "deref"                           shift, and go to state 419
    "cast"                            shift, and go to state 420
    "upcast"                          shift, and go to state 421
    "addr"                            shift, and go to state 422
    "reinterpret"                     shift, and go to state 423
    "explicit"                        shift, and go to state 891
    "unsafe"                          shift, and go to state 424
    "fixed_array"                     shift, and go to state 425
    "default"                         shift, and go to state 426
    "bool"                            shift, and go to state 225
    "void"                            shift, and go to state 226
    "string"                          shift, and go to state 227
    "int"                             shift, and go to state 229
    "int2"                            shift, and go to state 230
    "int3"                            shift, and go to state 231
    "int4"                            shift, and go to state 232
    "uint"                            shift, and go to state 233
    "bitfield"                        shift, and go to state 427
    "uint2"                           shift, and go to state 235
    "uint3"                           shift, and go to state 236
    "uint4"                           shift, and go to state 237
    "float"                           shift, and go to state 238
    "float2"                          shift, and go to state 239
    "float3"                          shift, and go to state 240
    "float4"                          shift, and go to state 241
    "range"                           shift, and go to state 242
    "urange"                          shift, and go to state 243
    "range64"                         shift, and go to state 244
    "urange64"                        shift, and go to state 245
    "int64"                           shift, and go to state 247
    "uint64"                          shift, and go to state 248
    "double"                          shift, and go to state 249
    "int8"                            shift, and go to state 252
    "uint8"                           shift, and go to state 253
    "int16"                           shift, and go to state 254
    "uint16"                          shift, and go to state 255
    "tuple"                           shift, and go to state 428
    "variant"                         shift, and go to state 429
    "generator"                       shift, and go to state 430
    "++"                              shift, and go to state 431
    "--"                              shift, and go to state 432
    "::"                              shift, and go to state 55
    "$$"                              shift, and go to state 433
    "$i"                              shift, and go to state 434
    "$v"                              shift, and go to state 435
    "$b"                              shift, and go to state 436
    "$a"                              shift, and go to state 437
    "$c"                              shift, and go to state 438
    "..."                             shift, and go to state 439
    "integer constant"                shift, and go to state 440
    "long integer constant"           shift, and go to state 441
    "unsigned integer constant"       shift, and go to state 442
    "unsigned long integer constant"  shift, and go to state 443
    "unsigned int8 constant"          shift, and go to state 444
    "floating point constant"         shift, and go to state 445
    "double constant"                 shift, and go to state 446
    "name"                            shift, and go to state 56
    "start of the string"             shift, and go to state 447
    "begin of code block"             shift, and go to state 448
    '-'                               shift, and go to state 449
    '+'                               shift, and go to state 450
    '*'                               shift, and go to state 451
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 452
    '!'                               shift, and go to state 453
    '['                               shift, and go to state 454
    '('                               shift, and go to state 455
    '$'                               shift, and go to state 456
    '@'                               shift, and go to state 457

    string_builder          go to state 458
    expr_reader             go to state 459
    expr_call_pipe          go to state 460
    name_in_namespace       go to state 461
    expr_new                go to state 462
    expr_cast               go to state 463
    expr_type_decl          go to state 464
    expr_type_info          go to state 465
    block_or_lambda         go to state 466
    expr_full_block         go to state 467
    expr_numeric_const      go to state 468
    expr_named_call         go to state 469
    expr_method_call        go to state 470
    func_addr_expr          go to state 471
    expr_field              go to state 472
    expr_call               go to state 473
    expr                    go to state 892
    expr_mtag               go to state 475
    basic_type_declaration  go to state 476
    make_decl               go to state 477
    make_struct_decl        go to state 478
    make_tuple_call         go to state 479
    make_dim_decl           go to state 480
    make_table_decl         go to state 481
    array_comprehension     go to state 482


State 692

   74 expression_with: "with" . '(' expr ')' expression_block

    '('  shift, and go to state 893


State 693

   75 expression_with_alias: "assume" . "name" '=' expr

    "name"  shift, and go to state 894


State 694

  263 expression_continue: "continue" .

    $default  reduce using rule 263 (expression_continue)


State 695

  237 expression_any: "pass" . "end of expression"

    "end of expression"  shift, and go to state 895


State 696

   52 expression_label: "label" . "integer constant" ':'

    "integer constant"  shift, and go to state 896


State 697

   53 expression_goto: "goto" . "label" "integer constant"
   54                | "goto" . expr

    "struct"                          shift, and go to state 409
    "class"                           shift, and go to state 410
    "true"                            shift, and go to state 411
    "false"                           shift, and go to state 412
    "new"                             shift, and go to state 413
    "typeinfo"                        shift, and go to state 414
    "type"                            shift, and go to state 415
    "array"                           shift, and go to state 416
    "null"                            shift, and go to state 417
    "table"                           shift, and go to state 418
    "deref"                           shift, and go to state 419
    "cast"                            shift, and go to state 420
    "upcast"                          shift, and go to state 421
    "addr"                            shift, and go to state 422
    "reinterpret"                     shift, and go to state 423
    "label"                           shift, and go to state 897
    "unsafe"                          shift, and go to state 424
    "fixed_array"                     shift, and go to state 425
    "default"                         shift, and go to state 426
    "bool"                            shift, and go to state 225
    "void"                            shift, and go to state 226
    "string"                          shift, and go to state 227
    "int"                             shift, and go to state 229
    "int2"                            shift, and go to state 230
    "int3"                            shift, and go to state 231
    "int4"                            shift, and go to state 232
    "uint"                            shift, and go to state 233
    "bitfield"                        shift, and go to state 427
    "uint2"                           shift, and go to state 235
    "uint3"                           shift, and go to state 236
    "uint4"                           shift, and go to state 237
    "float"                           shift, and go to state 238
    "float2"                          shift, and go to state 239
    "float3"                          shift, and go to state 240
    "float4"                          shift, and go to state 241
    "range"                           shift, and go to state 242
    "urange"                          shift, and go to state 243
    "range64"                         shift, and go to state 244
    "urange64"                        shift, and go to state 245
    "int64"                           shift, and go to state 247
    "uint64"                          shift, and go to state 248
    "double"                          shift, and go to state 249
    "int8"                            shift, and go to state 252
    "uint8"                           shift, and go to state 253
    "int16"                           shift, and go to state 254
    "uint16"                          shift, and go to state 255
    "tuple"                           shift, and go to state 428
    "variant"                         shift, and go to state 429
    "generator"                       shift, and go to state 430
    "++"                              shift, and go to state 431
    "--"                              shift, and go to state 432
    "::"                              shift, and go to state 55
    "$$"                              shift, and go to state 433
    "$i"                              shift, and go to state 434
    "$v"                              shift, and go to state 435
    "$b"                              shift, and go to state 436
    "$a"                              shift, and go to state 437
    "$c"                              shift, and go to state 438
    "..."                             shift, and go to state 439
    "integer constant"                shift, and go to state 440
    "long integer constant"           shift, and go to state 441
    "unsigned integer constant"       shift, and go to state 442
    "unsigned long integer constant"  shift, and go to state 443
    "unsigned int8 constant"          shift, and go to state 444
    "floating point constant"         shift, and go to state 445
    "double constant"                 shift, and go to state 446
    "name"                            shift, and go to state 56
    "start of the string"             shift, and go to state 447
    "begin of code block"             shift, and go to state 448
    '-'                               shift, and go to state 449
    '+'                               shift, and go to state 450
    '*'                               shift, and go to state 451
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 452
    '!'                               shift, and go to state 453
    '['                               shift, and go to state 454
    '('                               shift, and go to state 455
    '$'                               shift, and go to state 456
    '@'                               shift, and go to state 457

    string_builder          go to state 458
    expr_reader             go to state 459
    expr_call_pipe          go to state 460
    name_in_namespace       go to state 461
    expr_new                go to state 462
    expr_cast               go to state 463
    expr_type_decl          go to state 464
    expr_type_info          go to state 465
    block_or_lambda         go to state 466
    expr_full_block         go to state 467
    expr_numeric_const      go to state 468
    expr_named_call         go to state 469
    expr_method_call        go to state 470
    func_addr_expr          go to state 471
    expr_field              go to state 472
    expr_call               go to state 473
    expr                    go to state 898
    expr_mtag               go to state 475
    basic_type_declaration  go to state 476
    make_decl               go to state 477
    make_struct_decl        go to state 478
    make_tuple_call         go to state 479
    make_dim_decl           go to state 480
    make_table_decl         go to state 481
    array_comprehension     go to state 482


State 698

   72 expression_unsafe: "unsafe" . expression_block
  457 expr: "unsafe" . '(' expr ')'

    '('  shift, and go to state 571

    $default  reduce using rule 216 ($@5)

    expression_block  go to state 899
    $@5               go to state 327


State 699

  267 expression_yield: "yield" . expr
  268                 | "yield" . "<-" expr

    "struct"                          shift, and go to state 409
    "class"                           shift, and go to state 410
    "true"                            shift, and go to state 411
    "false"                           shift, and go to state 412
    "new"                             shift, and go to state 413
    "typeinfo"                        shift, and go to state 414
    "type"                            shift, and go to state 415
    "array"                           shift, and go to state 416
    "null"                            shift, and go to state 417
    "table"                           shift, and go to state 418
    "deref"                           shift, and go to state 419
    "cast"                            shift, and go to state 420
    "upcast"                          shift, and go to state 421
    "addr"                            shift, and go to state 422
    "reinterpret"                     shift, and go to state 423
    "unsafe"                          shift, and go to state 424
    "fixed_array"                     shift, and go to state 425
    "default"                         shift, and go to state 426
    "bool"                            shift, and go to state 225
    "void"                            shift, and go to state 226
    "string"                          shift, and go to state 227
    "int"                             shift, and go to state 229
    "int2"                            shift, and go to state 230
    "int3"                            shift, and go to state 231
    "int4"                            shift, and go to state 232
    "uint"                            shift, and go to state 233
    "bitfield"                        shift, and go to state 427
    "uint2"                           shift, and go to state 235
    "uint3"                           shift, and go to state 236
    "uint4"                           shift, and go to state 237
    "float"                           shift, and go to state 238
    "float2"                          shift, and go to state 239
    "float3"                          shift, and go to state 240
    "float4"                          shift, and go to state 241
    "range"                           shift, and go to state 242
    "urange"                          shift, and go to state 243
    "range64"                         shift, and go to state 244
    "urange64"                        shift, and go to state 245
    "int64"                           shift, and go to state 247
    "uint64"                          shift, and go to state 248
    "double"                          shift, and go to state 249
    "int8"                            shift, and go to state 252
    "uint8"                           shift, and go to state 253
    "int16"                           shift, and go to state 254
    "uint16"                          shift, and go to state 255
    "tuple"                           shift, and go to state 428
    "variant"                         shift, and go to state 429
    "generator"                       shift, and go to state 430
    "++"                              shift, and go to state 431
    "--"                              shift, and go to state 432
    "<-"                              shift, and go to state 900
    "::"                              shift, and go to state 55
    "$$"                              shift, and go to state 433
    "$i"                              shift, and go to state 434
    "$v"                              shift, and go to state 435
    "$b"                              shift, and go to state 436
    "$a"                              shift, and go to state 437
    "$c"                              shift, and go to state 438
    "..."                             shift, and go to state 439
    "integer constant"                shift, and go to state 440
    "long integer constant"           shift, and go to state 441
    "unsigned integer constant"       shift, and go to state 442
    "unsigned long integer constant"  shift, and go to state 443
    "unsigned int8 constant"          shift, and go to state 444
    "floating point constant"         shift, and go to state 445
    "double constant"                 shift, and go to state 446
    "name"                            shift, and go to state 56
    "start of the string"             shift, and go to state 447
    "begin of code block"             shift, and go to state 448
    '-'                               shift, and go to state 449
    '+'                               shift, and go to state 450
    '*'                               shift, and go to state 451
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 452
    '!'                               shift, and go to state 453
    '['                               shift, and go to state 454
    '('                               shift, and go to state 455
    '$'                               shift, and go to state 456
    '@'                               shift, and go to state 457

    string_builder          go to state 458
    expr_reader             go to state 459
    expr_call_pipe          go to state 460
    name_in_namespace       go to state 461
    expr_new                go to state 462
    expr_cast               go to state 463
    expr_type_decl          go to state 464
    expr_type_info          go to state 465
    block_or_lambda         go to state 466
    expr_full_block         go to state 467
    expr_numeric_const      go to state 468
    expr_named_call         go to state 469
    expr_method_call        go to state 470
    func_addr_expr          go to state 471
    expr_field              go to state 472
    expr_call               go to state 473
    expr                    go to state 901
    expr_mtag               go to state 475
    basic_type_declaration  go to state 476
    make_decl               go to state 477
    make_struct_decl        go to state 478
    make_tuple_call         go to state 479
    make_dim_decl           go to state 480
    make_table_decl         go to state 481
    array_comprehension     go to state 482


State 700

  220 expression_any: "end of expression" .

    $default  reduce using rule 220 (expression_any)


State 701

  235 expression_any: expression_label . "end of expression"

    "end of expression"  shift, and go to state 902


State 702

  236 expression_any: expression_goto . "end of expression"

    "end of expression"  shift, and go to state 903


State 703

   69 expression_if_then_else: if_or_static_if . '(' expr ')' expression_block expression_else

    '('  shift, and go to state 904


State 704

   70 expression_if_then_else: expression_if_one_liner . "if" '(' expr ')' expression_else_one_liner "end of expression"

    "if"  shift, and go to state 905


State 705

  233 expression_any: expression_if_then_else .

    $default  reduce using rule 233 (expression_any)


State 706

  228 expression_any: expression_for_loop .

    $default  reduce using rule 228 (expression_any)


State 707

  225 expression_any: expression_unsafe .

    $default  reduce using rule 225 (expression_any)


State 708

  224 expression_any: expression_while_loop .

    $default  reduce using rule 224 (expression_any)


State 709

  226 expression_any: expression_with .

    $default  reduce using rule 226 (expression_any)


State 710

  227 expression_any: expression_with_alias . "end of expression"

    "end of expression"  shift, and go to state 906


State 711

  218 expression_block: $@5 "begin of code block" expressions $@6 . "end of code block" expression_block_finally

    "end of code block"  shift, and go to state 907


State 712

  239 expressions: expressions expression_any .

    $default  reduce using rule 239 (expressions)


State 713

  222 expression_any: expression_delete . "end of expression"

    "end of expression"  shift, and go to state 908


State 714

   67 expression_if_one_liner: expression_break .
  229 expression_any: expression_break . "end of expression"

    "end of expression"  shift, and go to state 909

    $default  reduce using rule 67 (expression_if_one_liner)


State 715

   68 expression_if_one_liner: expression_continue .
  230 expression_any: expression_continue . "end of expression"

    "end of expression"  shift, and go to state 910

    $default  reduce using rule 68 (expression_if_one_liner)


State 716

   65 expression_if_one_liner: expression_return .
  231 expression_any: expression_return . "end of expression"

    "end of expression"  shift, and go to state 911

    $default  reduce using rule 65 (expression_if_one_liner)


State 717

   66 expression_if_one_liner: expression_yield .
  232 expression_any: expression_yield . "end of expression"

    "end of expression"  shift, and go to state 912

    $default  reduce using rule 66 (expression_if_one_liner)


State 718

  234 expression_any: expression_try_catch .

    $default  reduce using rule 234 (expression_any)


State 719

  281 expression_let: kwd_let . optional_in_scope let_variable_declaration
  282               | kwd_let . optional_in_scope tuple_expansion_variable_declaration
  283               | kwd_let . optional_in_scope "begin of code block" variable_declaration_list "end of code block"

    "inscope"  shift, and go to state 913

    $default  reduce using rule 276 (optional_in_scope)

    optional_in_scope  go to state 914


State 720

  223 expression_any: expression_let .

    $default  reduce using rule 223 (expression_any)


State 721

  221 expression_any: expr_assign . "end of expression"

    "end of expression"  shift, and go to state 915


State 722

   64 expression_if_one_liner: expr .
  326 expr_assign: expr .
  327            | expr . '=' expr
  328            | expr . "<-" expr
  329            | expr . ":=" expr
  330            | expr . "&=" expr
  331            | expr . "|=" expr
  332            | expr . "^=" expr
  333            | expr . "&&=" expr
  334            | expr . "||=" expr
  335            | expr . "^^=" expr
  336            | expr . "+=" expr
  337            | expr . "-=" expr
  338            | expr . "*=" expr
  339            | expr . "/=" expr
  340            | expr . "%=" expr
  341            | expr . "<<=" expr
  342            | expr . ">>=" expr
  343            | expr . "<<<=" expr
  344            | expr . ">>>=" expr
  347 expr_method_call: expr . "->" "name" '(' ')'
  348                 | expr . "->" "name" '(' expr_list ')'
  358 expr_field: expr . '.' "name"
  359           | expr . '.' '.' "name"
  360           | expr . '.' "name" '(' ')'
  361           | expr . '.' "name" '(' expr_list ')'
  362           | expr . '.' basic_type_declaration '(' ')'
  363           | expr . '.' basic_type_declaration '(' expr_list ')'
  366           | expr . '.' $@21 error $@22
  388 expr: expr . "<<" expr
  389     | expr . ">>" expr
  390     | expr . "<<<" expr
  391     | expr . ">>>" expr
  392     | expr . '+' expr
  393     | expr . '-' expr
  394     | expr . '*' expr
  395     | expr . '/' expr
  396     | expr . '%' expr
  397     | expr . '<' expr
  398     | expr . '>' expr
  399     | expr . "==" expr
  400     | expr . "!=" expr
  401     | expr . "<=" expr
  402     | expr . ">=" expr
  403     | expr . '&' expr
  404     | expr . '|' expr
  405     | expr . '^' expr
  406     | expr . "&&" expr
  407     | expr . "||" expr
  408     | expr . "^^" expr
  409     | expr . ".." expr
  412     | expr . "++"
  413     | expr . "--"
  415     | expr . '[' expr ']'
  416     | expr . '.' '[' expr ']'
  417     | expr . "?[" expr ']'
  418     | expr . '.' "?[" expr ']'
  419     | expr . "?." "name"
  420     | expr . '.' "?." "name"
  429     | expr . "??" expr
  430     | expr . '?' expr ':' expr
  433     | expr . "is" "type" '<' $@23 type_declaration_no_options '>' $@24
  434     | expr . "is" basic_type_declaration
  435     | expr . "is" "name"
  436     | expr . "as" "name"
  439     | expr . "as" "type" '<' $@25 type_declaration '>' $@26
  440     | expr . "as" basic_type_declaration
  441     | expr . '?' "as" "name"
  444     | expr . '?' "as" "type" '<' $@27 type_declaration '>' $@28
  445     | expr . '?' "as" basic_type_declaration
  453     | expr . "<|" expr
  454     | expr . "|>" expr
  455     | expr . "|>" basic_type_declaration
  466 expr_mtag: expr . '.' "$f" '(' expr ')'
  467          | expr . "?." "$f" '(' expr ')'
  468          | expr . '.' '.' "$f" '(' expr ')'
  469          | expr . '.' "?." "$f" '(' expr ')'
  470          | expr . "as" "$f" '(' expr ')'
  471          | expr . '?' "as" "$f" '(' expr ')'
  472          | expr . "is" "$f" '(' expr ')'

    "is"    shift, and go to state 609
    "as"    shift, and go to state 610
    "+="    shift, and go to state 916
    "-="    shift, and go to state 917
    "/="    shift, and go to state 918
    "*="    shift, and go to state 919
    "%="    shift, and go to state 920
    "&="    shift, and go to state 921
    "|="    shift, and go to state 922
    "^="    shift, and go to state 923
    "<<"    shift, and go to state 611
    ">>"    shift, and go to state 612
    "++"    shift, and go to state 613
    "--"    shift, and go to state 614
    "<="    shift, and go to state 615
    "<<="   shift, and go to state 924
    ">>="   shift, and go to state 925
    ">="    shift, and go to state 616
    "=="    shift, and go to state 617
    "!="    shift, and go to state 618
    "->"    shift, and go to state 619
    "<-"    shift, and go to state 926
    "??"    shift, and go to state 620
    "?."    shift, and go to state 621
    "?["    shift, and go to state 622
    "<|"    shift, and go to state 623
    "|>"    shift, and go to state 624
    ":="    shift, and go to state 927
    "<<<"   shift, and go to state 625
    ">>>"   shift, and go to state 626
    "<<<="  shift, and go to state 928
    ">>>="  shift, and go to state 929
    "&&"    shift, and go to state 627
    "||"    shift, and go to state 628
    "^^"    shift, and go to state 629
    "&&="   shift, and go to state 930
    "||="   shift, and go to state 931
    "^^="   shift, and go to state 932
    ".."    shift, and go to state 630
    '='     shift, and go to state 933
    '?'     shift, and go to state 631
    '|'     shift, and go to state 632
    '^'     shift, and go to state 633
    '&'     shift, and go to state 634
    '<'     shift, and go to state 635
    '>'     shift, and go to state 636
    '-'     shift, and go to state 637
    '+'     shift, and go to state 638
    '*'     shift, and go to state 639
    '/'     shift, and go to state 640
    '%'     shift, and go to state 641
    '.'     shift, and go to state 642
    '['     shift, and go to state 643

    "end of expression"  reduce using rule 326 (expr_assign)
    $default             reduce using rule 64 (expression_if_one_liner)


State 723

  552 enum_expression: "name" '=' . expr

    "struct"                          shift, and go to state 409
    "class"                           shift, and go to state 410
    "true"                            shift, and go to state 411
    "false"                           shift, and go to state 412
    "new"                             shift, and go to state 413
    "typeinfo"                        shift, and go to state 414
    "type"                            shift, and go to state 415
    "array"                           shift, and go to state 416
    "null"                            shift, and go to state 417
    "table"                           shift, and go to state 418
    "deref"                           shift, and go to state 419
    "cast"                            shift, and go to state 420
    "upcast"                          shift, and go to state 421
    "addr"                            shift, and go to state 422
    "reinterpret"                     shift, and go to state 423
    "unsafe"                          shift, and go to state 424
    "fixed_array"                     shift, and go to state 425
    "default"                         shift, and go to state 426
    "bool"                            shift, and go to state 225
    "void"                            shift, and go to state 226
    "string"                          shift, and go to state 227
    "int"                             shift, and go to state 229
    "int2"                            shift, and go to state 230
    "int3"                            shift, and go to state 231
    "int4"                            shift, and go to state 232
    "uint"                            shift, and go to state 233
    "bitfield"                        shift, and go to state 427
    "uint2"                           shift, and go to state 235
    "uint3"                           shift, and go to state 236
    "uint4"                           shift, and go to state 237
    "float"                           shift, and go to state 238
    "float2"                          shift, and go to state 239
    "float3"                          shift, and go to state 240
    "float4"                          shift, and go to state 241
    "range"                           shift, and go to state 242
    "urange"                          shift, and go to state 243
    "range64"                         shift, and go to state 244
    "urange64"                        shift, and go to state 245
    "int64"                           shift, and go to state 247
    "uint64"                          shift, and go to state 248
    "double"                          shift, and go to state 249
    "int8"                            shift, and go to state 252
    "uint8"                           shift, and go to state 253
    "int16"                           shift, and go to state 254
    "uint16"                          shift, and go to state 255
    "tuple"                           shift, and go to state 428
    "variant"                         shift, and go to state 429
    "generator"                       shift, and go to state 430
    "++"                              shift, and go to state 431
    "--"                              shift, and go to state 432
    "::"                              shift, and go to state 55
    "$$"                              shift, and go to state 433
    "$i"                              shift, and go to state 434
    "$v"                              shift, and go to state 435
    "$b"                              shift, and go to state 436
    "$a"                              shift, and go to state 437
    "$c"                              shift, and go to state 438
    "..."                             shift, and go to state 439
    "integer constant"                shift, and go to state 440
    "long integer constant"           shift, and go to state 441
    "unsigned integer constant"       shift, and go to state 442
    "unsigned long integer constant"  shift, and go to state 443
    "unsigned int8 constant"          shift, and go to state 444
    "floating point constant"         shift, and go to state 445
    "double constant"                 shift, and go to state 446
    "name"                            shift, and go to state 56
    "start of the string"             shift, and go to state 447
    "begin of code block"             shift, and go to state 448
    '-'                               shift, and go to state 449
    '+'                               shift, and go to state 450
    '*'                               shift, and go to state 451
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 452
    '!'                               shift, and go to state 453
    '['                               shift, and go to state 454
    '('                               shift, and go to state 455
    '$'                               shift, and go to state 456
    '@'                               shift, and go to state 457

    string_builder          go to state 458
    expr_reader             go to state 459
    expr_call_pipe          go to state 460
    name_in_namespace       go to state 461
    expr_new                go to state 462
    expr_cast               go to state 463
    expr_type_decl          go to state 464
    expr_type_info          go to state 465
    block_or_lambda         go to state 466
    expr_full_block         go to state 467
    expr_numeric_const      go to state 468
    expr_named_call         go to state 469
    expr_method_call        go to state 470
    func_addr_expr          go to state 471
    expr_field              go to state 472
    expr_call               go to state 473
    expr                    go to state 934
    expr_mtag               go to state 475
    basic_type_declaration  go to state 476
    make_decl               go to state 477
    make_struct_decl        go to state 478
    make_tuple_call         go to state 479
    make_dim_decl           go to state 480
    make_table_decl         go to state 481
    array_comprehension     go to state 482


State 724

  555 enum_list: enum_list ',' . enum_expression
  794 optional_comma: ',' .

    "name"  shift, and go to state 532

    $default  reduce using rule 794 (optional_comma)

    enum_expression  go to state 935


State 725

  570 enum_declaration: optional_annotation_list "enum" optional_public_or_private_enum enum_name optional_enum_basic_type_declaration "begin of code block" $@35 enum_list optional_comma . $@36 "end of code block"

    $default  reduce using rule 569 ($@36)

    $@36  go to state 936


State 726

  582 optional_struct_variable_declaration_list: "begin of code block" struct_variable_declaration_list "end of code block" .

    $default  reduce using rule 582 (optional_struct_variable_declaration_list)


State 727

  491 struct_variable_declaration_list: struct_variable_declaration_list optional_annotation_list . "def" optional_public_or_private_member_variable "abstract" optional_constant $@30 function_declaration_header "end of expression"
  493                                 | struct_variable_declaration_list optional_annotation_list . "def" optional_public_or_private_member_variable optional_static_member_variable optional_override optional_constant $@31 function_declaration_header expression_block

    "def"  shift, and go to state 937


State 728

  489 struct_variable_declaration_list: struct_variable_declaration_list $@29 . structure_variable_declaration "end of expression"

    '@'  shift, and go to state 211

    $default  reduce using rule 474 (optional_field_annotation)

    metadata_argument_list          go to state 212
    optional_field_annotation       go to state 938
    structure_variable_declaration  go to state 939


State 729

  524 let_variable_name_with_pos_list: "$i" '(' . expr ')'

    "struct"                          shift, and go to state 409
    "class"                           shift, and go to state 410
    "true"                            shift, and go to state 411
    "false"                           shift, and go to state 412
    "new"                             shift, and go to state 413
    "typeinfo"                        shift, and go to state 414
    "type"                            shift, and go to state 415
    "array"                           shift, and go to state 416
    "null"                            shift, and go to state 417
    "table"                           shift, and go to state 418
    "deref"                           shift, and go to state 419
    "cast"                            shift, and go to state 420
    "upcast"                          shift, and go to state 421
    "addr"                            shift, and go to state 422
    "reinterpret"                     shift, and go to state 423
    "unsafe"                          shift, and go to state 424
    "fixed_array"                     shift, and go to state 425
    "default"                         shift, and go to state 426
    "bool"                            shift, and go to state 225
    "void"                            shift, and go to state 226
    "string"                          shift, and go to state 227
    "int"                             shift, and go to state 229
    "int2"                            shift, and go to state 230
    "int3"                            shift, and go to state 231
    "int4"                            shift, and go to state 232
    "uint"                            shift, and go to state 233
    "bitfield"                        shift, and go to state 427
    "uint2"                           shift, and go to state 235
    "uint3"                           shift, and go to state 236
    "uint4"                           shift, and go to state 237
    "float"                           shift, and go to state 238
    "float2"                          shift, and go to state 239
    "float3"                          shift, and go to state 240
    "float4"                          shift, and go to state 241
    "range"                           shift, and go to state 242
    "urange"                          shift, and go to state 243
    "range64"                         shift, and go to state 244
    "urange64"                        shift, and go to state 245
    "int64"                           shift, and go to state 247
    "uint64"                          shift, and go to state 248
    "double"                          shift, and go to state 249
    "int8"                            shift, and go to state 252
    "uint8"                           shift, and go to state 253
    "int16"                           shift, and go to state 254
    "uint16"                          shift, and go to state 255
    "tuple"                           shift, and go to state 428
    "variant"                         shift, and go to state 429
    "generator"                       shift, and go to state 430
    "++"                              shift, and go to state 431
    "--"                              shift, and go to state 432
    "::"                              shift, and go to state 55
    "$$"                              shift, and go to state 433
    "$i"                              shift, and go to state 434
    "$v"                              shift, and go to state 435
    "$b"                              shift, and go to state 436
    "$a"                              shift, and go to state 437
    "$c"                              shift, and go to state 438
    "..."                             shift, and go to state 439
    "integer constant"                shift, and go to state 440
    "long integer constant"           shift, and go to state 441
    "unsigned integer constant"       shift, and go to state 442
    "unsigned long integer constant"  shift, and go to state 443
    "unsigned int8 constant"          shift, and go to state 444
    "floating point constant"         shift, and go to state 445
    "double constant"                 shift, and go to state 446
    "name"                            shift, and go to state 56
    "start of the string"             shift, and go to state 447
    "begin of code block"             shift, and go to state 448
    '-'                               shift, and go to state 449
    '+'                               shift, and go to state 450
    '*'                               shift, and go to state 451
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 452
    '!'                               shift, and go to state 453
    '['                               shift, and go to state 454
    '('                               shift, and go to state 455
    '$'                               shift, and go to state 456
    '@'                               shift, and go to state 457

    string_builder          go to state 458
    expr_reader             go to state 459
    expr_call_pipe          go to state 460
    name_in_namespace       go to state 461
    expr_new                go to state 462
    expr_cast               go to state 463
    expr_type_decl          go to state 464
    expr_type_info          go to state 465
    block_or_lambda         go to state 466
    expr_full_block         go to state 467
    expr_numeric_const      go to state 468
    expr_named_call         go to state 469
    expr_method_call        go to state 470
    func_addr_expr          go to state 471
    expr_field              go to state 472
    expr_call               go to state 473
    expr                    go to state 940
    expr_mtag               go to state 475
    basic_type_declaration  go to state 476
    make_decl               go to state 477
    make_struct_decl        go to state 478
    make_tuple_call         go to state 479
    make_dim_decl           go to state 480
    make_table_decl         go to state 481
    array_comprehension     go to state 482


State 730

  525 let_variable_name_with_pos_list: "name" "aka" . "name"

    "name"  shift, and go to state 941


State 731

  526 let_variable_name_with_pos_list: let_variable_name_with_pos_list ',' . "name"
  527                                | let_variable_name_with_pos_list ',' . "name" "aka" "name"

    "name"  shift, and go to state 942


State 732

  533 let_variable_declaration: let_variable_name_with_pos_list ':' . type_declaration_no_options "end of expression"
  534                         | let_variable_name_with_pos_list ':' . type_declaration_no_options copy_or_move_or_clone expr "end of expression"

    "type"       shift, and go to state 219
    "array"      shift, and go to state 220
    "table"      shift, and go to state 221
    "typedecl"   shift, and go to state 222
    "iterator"   shift, and go to state 223
    "smart_ptr"  shift, and go to state 224
    "bool"       shift, and go to state 225
    "void"       shift, and go to state 226
    "string"     shift, and go to state 227
    "auto"       shift, and go to state 228
    "int"        shift, and go to state 229
    "int2"       shift, and go to state 230
    "int3"       shift, and go to state 231
    "int4"       shift, and go to state 232
    "uint"       shift, and go to state 233
    "bitfield"   shift, and go to state 234
    "uint2"      shift, and go to state 235
    "uint3"      shift, and go to state 236
    "uint4"      shift, and go to state 237
    "float"      shift, and go to state 238
    "float2"     shift, and go to state 239
    "float3"     shift, and go to state 240
    "float4"     shift, and go to state 241
    "range"      shift, and go to state 242
    "urange"     shift, and go to state 243
    "range64"    shift, and go to state 244
    "urange64"   shift, and go to state 245
    "block"      shift, and go to state 246
    "int64"      shift, and go to state 247
    "uint64"     shift, and go to state 248
    "double"     shift, and go to state 249
    "function"   shift, and go to state 250
    "lambda"     shift, and go to state 251
    "int8"       shift, and go to state 252
    "uint8"      shift, and go to state 253
    "int16"      shift, and go to state 254
    "uint16"     shift, and go to state 255
    "tuple"      shift, and go to state 256
    "variant"    shift, and go to state 257
    "::"         shift, and go to state 55
    "$t"         shift, and go to state 258
    "name"       shift, and go to state 56
    '$'          shift, and go to state 259

    name_in_namespace                   go to state 260
    basic_type_declaration              go to state 261
    structure_type_declaration          go to state 262
    auto_type_declaration               go to state 263
    bitfield_type_declaration           go to state 264
    type_declaration_no_options         go to state 943
    type_declaration_no_options_no_dim  go to state 266


State 733

  535 let_variable_declaration: let_variable_name_with_pos_list optional_ref . copy_or_move_or_clone expr "end of expression"

    "<-"  shift, and go to state 543
    ":="  shift, and go to state 544
    '='   shift, and go to state 545

    copy_or_move_or_clone  go to state 944


State 734

  536 global_let_variable_declaration: global_let_variable_name_with_pos_list ':' type_declaration_no_options "end of expression" .

    $default  reduce using rule 536 (global_let_variable_declaration)


State 735

  537 global_let_variable_declaration: global_let_variable_name_with_pos_list ':' type_declaration_no_options copy_or_move_or_clone . expr "end of expression"

    "struct"                          shift, and go to state 409
    "class"                           shift, and go to state 410
    "true"                            shift, and go to state 411
    "false"                           shift, and go to state 412
    "new"                             shift, and go to state 413
    "typeinfo"                        shift, and go to state 414
    "type"                            shift, and go to state 415
    "array"                           shift, and go to state 416
    "null"                            shift, and go to state 417
    "table"                           shift, and go to state 418
    "deref"                           shift, and go to state 419
    "cast"                            shift, and go to state 420
    "upcast"                          shift, and go to state 421
    "addr"                            shift, and go to state 422
    "reinterpret"                     shift, and go to state 423
    "unsafe"                          shift, and go to state 424
    "fixed_array"                     shift, and go to state 425
    "default"                         shift, and go to state 426
    "bool"                            shift, and go to state 225
    "void"                            shift, and go to state 226
    "string"                          shift, and go to state 227
    "int"                             shift, and go to state 229
    "int2"                            shift, and go to state 230
    "int3"                            shift, and go to state 231
    "int4"                            shift, and go to state 232
    "uint"                            shift, and go to state 233
    "bitfield"                        shift, and go to state 427
    "uint2"                           shift, and go to state 235
    "uint3"                           shift, and go to state 236
    "uint4"                           shift, and go to state 237
    "float"                           shift, and go to state 238
    "float2"                          shift, and go to state 239
    "float3"                          shift, and go to state 240
    "float4"                          shift, and go to state 241
    "range"                           shift, and go to state 242
    "urange"                          shift, and go to state 243
    "range64"                         shift, and go to state 244
    "urange64"                        shift, and go to state 245
    "int64"                           shift, and go to state 247
    "uint64"                          shift, and go to state 248
    "double"                          shift, and go to state 249
    "int8"                            shift, and go to state 252
    "uint8"                           shift, and go to state 253
    "int16"                           shift, and go to state 254
    "uint16"                          shift, and go to state 255
    "tuple"                           shift, and go to state 428
    "variant"                         shift, and go to state 429
    "generator"                       shift, and go to state 430
    "++"                              shift, and go to state 431
    "--"                              shift, and go to state 432
    "::"                              shift, and go to state 55
    "$$"                              shift, and go to state 433
    "$i"                              shift, and go to state 434
    "$v"                              shift, and go to state 435
    "$b"                              shift, and go to state 436
    "$a"                              shift, and go to state 437
    "$c"                              shift, and go to state 438
    "..."                             shift, and go to state 439
    "integer constant"                shift, and go to state 440
    "long integer constant"           shift, and go to state 441
    "unsigned integer constant"       shift, and go to state 442
    "unsigned long integer constant"  shift, and go to state 443
    "unsigned int8 constant"          shift, and go to state 444
    "floating point constant"         shift, and go to state 445
    "double constant"                 shift, and go to state 446
    "name"                            shift, and go to state 56
    "start of the string"             shift, and go to state 447
    "begin of code block"             shift, and go to state 448
    '-'                               shift, and go to state 449
    '+'                               shift, and go to state 450
    '*'                               shift, and go to state 451
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 452
    '!'                               shift, and go to state 453
    '['                               shift, and go to state 454
    '('                               shift, and go to state 455
    '$'                               shift, and go to state 456
    '@'                               shift, and go to state 457

    string_builder          go to state 458
    expr_reader             go to state 459
    expr_call_pipe          go to state 460
    name_in_namespace       go to state 461
    expr_new                go to state 462
    expr_cast               go to state 463
    expr_type_decl          go to state 464
    expr_type_info          go to state 465
    block_or_lambda         go to state 466
    expr_full_block         go to state 467
    expr_numeric_const      go to state 468
    expr_named_call         go to state 469
    expr_method_call        go to state 470
    func_addr_expr          go to state 471
    expr_field              go to state 472
    expr_call               go to state 473
    expr                    go to state 945
    expr_mtag               go to state 475
    basic_type_declaration  go to state 476
    make_decl               go to state 477
    make_struct_decl        go to state 478
    make_tuple_call         go to state 479
    make_dim_decl           go to state 480
    make_table_decl         go to state 481
    array_comprehension     go to state 482


State 736

  347 expr_method_call: expr . "->" "name" '(' ')'
  348                 | expr . "->" "name" '(' expr_list ')'
  358 expr_field: expr . '.' "name"
  359           | expr . '.' '.' "name"
  360           | expr . '.' "name" '(' ')'
  361           | expr . '.' "name" '(' expr_list ')'
  362           | expr . '.' basic_type_declaration '(' ')'
  363           | expr . '.' basic_type_declaration '(' expr_list ')'
  366           | expr . '.' $@21 error $@22
  388 expr: expr . "<<" expr
  389     | expr . ">>" expr
  390     | expr . "<<<" expr
  391     | expr . ">>>" expr
  392     | expr . '+' expr
  393     | expr . '-' expr
  394     | expr . '*' expr
  395     | expr . '/' expr
  396     | expr . '%' expr
  397     | expr . '<' expr
  398     | expr . '>' expr
  399     | expr . "==" expr
  400     | expr . "!=" expr
  401     | expr . "<=" expr
  402     | expr . ">=" expr
  403     | expr . '&' expr
  404     | expr . '|' expr
  405     | expr . '^' expr
  406     | expr . "&&" expr
  407     | expr . "||" expr
  408     | expr . "^^" expr
  409     | expr . ".." expr
  412     | expr . "++"
  413     | expr . "--"
  415     | expr . '[' expr ']'
  416     | expr . '.' '[' expr ']'
  417     | expr . "?[" expr ']'
  418     | expr . '.' "?[" expr ']'
  419     | expr . "?." "name"
  420     | expr . '.' "?." "name"
  429     | expr . "??" expr
  430     | expr . '?' expr ':' expr
  433     | expr . "is" "type" '<' $@23 type_declaration_no_options '>' $@24
  434     | expr . "is" basic_type_declaration
  435     | expr . "is" "name"
  436     | expr . "as" "name"
  439     | expr . "as" "type" '<' $@25 type_declaration '>' $@26
  440     | expr . "as" basic_type_declaration
  441     | expr . '?' "as" "name"
  444     | expr . '?' "as" "type" '<' $@27 type_declaration '>' $@28
  445     | expr . '?' "as" basic_type_declaration
  453     | expr . "<|" expr
  454     | expr . "|>" expr
  455     | expr . "|>" basic_type_declaration
  466 expr_mtag: expr . '.' "$f" '(' expr ')'
  467          | expr . "?." "$f" '(' expr ')'
  468          | expr . '.' '.' "$f" '(' expr ')'
  469          | expr . '.' "?." "$f" '(' expr ')'
  470          | expr . "as" "$f" '(' expr ')'
  471          | expr . '?' "as" "$f" '(' expr ')'
  472          | expr . "is" "$f" '(' expr ')'
  538 global_let_variable_declaration: global_let_variable_name_with_pos_list optional_ref copy_or_move_or_clone expr . "end of expression"

    "is"                 shift, and go to state 609
    "as"                 shift, and go to state 610
    "<<"                 shift, and go to state 611
    ">>"                 shift, and go to state 612
    "++"                 shift, and go to state 613
    "--"                 shift, and go to state 614
    "<="                 shift, and go to state 615
    ">="                 shift, and go to state 616
    "=="                 shift, and go to state 617
    "!="                 shift, and go to state 618
    "->"                 shift, and go to state 619
    "??"                 shift, and go to state 620
    "?."                 shift, and go to state 621
    "?["                 shift, and go to state 622
    "<|"                 shift, and go to state 623
    "|>"                 shift, and go to state 624
    "<<<"                shift, and go to state 625
    ">>>"                shift, and go to state 626
    "&&"                 shift, and go to state 627
    "||"                 shift, and go to state 628
    "^^"                 shift, and go to state 629
    ".."                 shift, and go to state 630
    "end of expression"  shift, and go to state 946
    '?'                  shift, and go to state 631
    '|'                  shift, and go to state 632
    '^'                  shift, and go to state 633
    '&'                  shift, and go to state 634
    '<'                  shift, and go to state 635
    '>'                  shift, and go to state 636
    '-'                  shift, and go to state 637
    '+'                  shift, and go to state 638
    '*'                  shift, and go to state 639
    '/'                  shift, and go to state 640
    '%'                  shift, and go to state 641
    '.'                  shift, and go to state 642
    '['                  shift, and go to state 643


State 737

  654 type_declaration_no_options_no_dim: "type" '<' $@41 type_declaration '>' . $@42

    $default  reduce using rule 653 ($@42)

    $@42  go to state 947


State 738

  677 type_declaration_no_options_no_dim: "array" '<' $@46 type_declaration '>' . $@47

    $default  reduce using rule 676 ($@47)

    $@47  go to state 948


State 739

  680 type_declaration_no_options_no_dim: "table" '<' $@48 table_type_pair '>' . $@49

    $default  reduce using rule 679 ($@49)

    $@49  go to state 949


State 740

  641 table_type_pair: type_declaration c_or_s . type_declaration

    "type"       shift, and go to state 219
    "array"      shift, and go to state 220
    "table"      shift, and go to state 221
    "typedecl"   shift, and go to state 222
    "iterator"   shift, and go to state 223
    "smart_ptr"  shift, and go to state 224
    "bool"       shift, and go to state 225
    "void"       shift, and go to state 226
    "string"     shift, and go to state 227
    "auto"       shift, and go to state 228
    "int"        shift, and go to state 229
    "int2"       shift, and go to state 230
    "int3"       shift, and go to state 231
    "int4"       shift, and go to state 232
    "uint"       shift, and go to state 233
    "bitfield"   shift, and go to state 234
    "uint2"      shift, and go to state 235
    "uint3"      shift, and go to state 236
    "uint4"      shift, and go to state 237
    "float"      shift, and go to state 238
    "float2"     shift, and go to state 239
    "float3"     shift, and go to state 240
    "float4"     shift, and go to state 241
    "range"      shift, and go to state 242
    "urange"     shift, and go to state 243
    "range64"    shift, and go to state 244
    "urange64"   shift, and go to state 245
    "block"      shift, and go to state 246
    "int64"      shift, and go to state 247
    "uint64"     shift, and go to state 248
    "double"     shift, and go to state 249
    "function"   shift, and go to state 250
    "lambda"     shift, and go to state 251
    "int8"       shift, and go to state 252
    "uint8"      shift, and go to state 253
    "int16"      shift, and go to state 254
    "uint16"     shift, and go to state 255
    "tuple"      shift, and go to state 256
    "variant"    shift, and go to state 257
    "::"         shift, and go to state 55
    "$t"         shift, and go to state 258
    "name"       shift, and go to state 56
    '$'          shift, and go to state 259

    name_in_namespace                   go to state 260
    basic_type_declaration              go to state 261
    structure_type_declaration          go to state 262
    auto_type_declaration               go to state 263
    bitfield_type_declaration           go to state 264
    type_declaration_no_options         go to state 265
    type_declaration_no_options_no_dim  go to state 266
    type_declaration                    go to state 950


State 741

  751 make_struct_decl: "struct" '<' $@77 . type_declaration_no_options '>' $@78 '(' use_initializer optional_make_struct_dim_decl ')'

    "type"       shift, and go to state 219
    "array"      shift, and go to state 220
    "table"      shift, and go to state 221
    "typedecl"   shift, and go to state 222
    "iterator"   shift, and go to state 223
    "smart_ptr"  shift, and go to state 224
    "bool"       shift, and go to state 225
    "void"       shift, and go to state 226
    "string"     shift, and go to state 227
    "auto"       shift, and go to state 228
    "int"        shift, and go to state 229
    "int2"       shift, and go to state 230
    "int3"       shift, and go to state 231
    "int4"       shift, and go to state 232
    "uint"       shift, and go to state 233
    "bitfield"   shift, and go to state 234
    "uint2"      shift, and go to state 235
    "uint3"      shift, and go to state 236
    "uint4"      shift, and go to state 237
    "float"      shift, and go to state 238
    "float2"     shift, and go to state 239
    "float3"     shift, and go to state 240
    "float4"     shift, and go to state 241
    "range"      shift, and go to state 242
    "urange"     shift, and go to state 243
    "range64"    shift, and go to state 244
    "urange64"   shift, and go to state 245
    "block"      shift, and go to state 246
    "int64"      shift, and go to state 247
    "uint64"     shift, and go to state 248
    "double"     shift, and go to state 249
    "function"   shift, and go to state 250
    "lambda"     shift, and go to state 251
    "int8"       shift, and go to state 252
    "uint8"      shift, and go to state 253
    "int16"      shift, and go to state 254
    "uint16"     shift, and go to state 255
    "tuple"      shift, and go to state 256
    "variant"    shift, and go to state 257
    "::"         shift, and go to state 55
    "$t"         shift, and go to state 258
    "name"       shift, and go to state 56
    '$'          shift, and go to state 259

    name_in_namespace                   go to state 260
    basic_type_declaration              go to state 261
    structure_type_declaration          go to state 262
    auto_type_declaration               go to state 263
    bitfield_type_declaration           go to state 264
    type_declaration_no_options         go to state 951
    type_declaration_no_options_no_dim  go to state 266


State 742

  754 make_struct_decl: "class" '<' $@79 . type_declaration_no_options '>' $@80 '(' use_initializer optional_make_struct_dim_decl ')'

    "type"       shift, and go to state 219
    "array"      shift, and go to state 220
    "table"      shift, and go to state 221
    "typedecl"   shift, and go to state 222
    "iterator"   shift, and go to state 223
    "smart_ptr"  shift, and go to state 224
    "bool"       shift, and go to state 225
    "void"       shift, and go to state 226
    "string"     shift, and go to state 227
    "auto"       shift, and go to state 228
    "int"        shift, and go to state 229
    "int2"       shift, and go to state 230
    "int3"       shift, and go to state 231
    "int4"       shift, and go to state 232
    "uint"       shift, and go to state 233
    "bitfield"   shift, and go to state 234
    "uint2"      shift, and go to state 235
    "uint3"      shift, and go to state 236
    "uint4"      shift, and go to state 237
    "float"      shift, and go to state 238
    "float2"     shift, and go to state 239
    "float3"     shift, and go to state 240
    "float4"     shift, and go to state 241
    "range"      shift, and go to state 242
    "urange"     shift, and go to state 243
    "range64"    shift, and go to state 244
    "urange64"   shift, and go to state 245
    "block"      shift, and go to state 246
    "int64"      shift, and go to state 247
    "uint64"     shift, and go to state 248
    "double"     shift, and go to state 249
    "function"   shift, and go to state 250
    "lambda"     shift, and go to state 251
    "int8"       shift, and go to state 252
    "uint8"      shift, and go to state 253
    "int16"      shift, and go to state 254
    "uint16"     shift, and go to state 255
    "tuple"      shift, and go to state 256
    "variant"    shift, and go to state 257
    "::"         shift, and go to state 55
    "$t"         shift, and go to state 258
    "name"       shift, and go to state 56
    '$'          shift, and go to state 259

    name_in_namespace                   go to state 260
    basic_type_declaration              go to state 261
    structure_type_declaration          go to state 262
    auto_type_declaration               go to state 263
    bitfield_type_declaration           go to state 264
    type_declaration_no_options         go to state 952
    type_declaration_no_options_no_dim  go to state 266


State 743

  254 new_type_declaration: '<' $@7 . type_declaration '>' $@8

    "type"       shift, and go to state 219
    "array"      shift, and go to state 220
    "table"      shift, and go to state 221
    "typedecl"   shift, and go to state 222
    "iterator"   shift, and go to state 223
    "smart_ptr"  shift, and go to state 224
    "bool"       shift, and go to state 225
    "void"       shift, and go to state 226
    "string"     shift, and go to state 227
    "auto"       shift, and go to state 228
    "int"        shift, and go to state 229
    "int2"       shift, and go to state 230
    "int3"       shift, and go to state 231
    "int4"       shift, and go to state 232
    "uint"       shift, and go to state 233
    "bitfield"   shift, and go to state 234
    "uint2"      shift, and go to state 235
    "uint3"      shift, and go to state 236
    "uint4"      shift, and go to state 237
    "float"      shift, and go to state 238
    "float2"     shift, and go to state 239
    "float3"     shift, and go to state 240
    "float4"     shift, and go to state 241
    "range"      shift, and go to state 242
    "urange"     shift, and go to state 243
    "range64"    shift, and go to state 244
    "urange64"   shift, and go to state 245
    "block"      shift, and go to state 246
    "int64"      shift, and go to state 247
    "uint64"     shift, and go to state 248
    "double"     shift, and go to state 249
    "function"   shift, and go to state 250
    "lambda"     shift, and go to state 251
    "int8"       shift, and go to state 252
    "uint8"      shift, and go to state 253
    "int16"      shift, and go to state 254
    "uint16"     shift, and go to state 255
    "tuple"      shift, and go to state 256
    "variant"    shift, and go to state 257
    "::"         shift, and go to state 55
    "$t"         shift, and go to state 258
    "name"       shift, and go to state 56
    '$'          shift, and go to state 259

    name_in_namespace                   go to state 260
    basic_type_declaration              go to state 261
    structure_type_declaration          go to state 262
    auto_type_declaration               go to state 263
    bitfield_type_declaration           go to state 264
    type_declaration_no_options         go to state 265
    type_declaration_no_options_no_dim  go to state 266
    type_declaration                    go to state 953


State 744

  257 expr_new: "new" new_type_declaration '(' . use_initializer ')'
  258         | "new" new_type_declaration '(' . expr_list ')'
  259         | "new" new_type_declaration '(' . make_struct_single ')'
  260         | "new" new_type_declaration '(' . "uninitialized" make_struct_single ')'

    "struct"                          shift, and go to state 409
    "class"                           shift, and go to state 410
    "true"                            shift, and go to state 411
    "false"                           shift, and go to state 412
    "new"                             shift, and go to state 413
    "typeinfo"                        shift, and go to state 414
    "type"                            shift, and go to state 415
    "array"                           shift, and go to state 416
    "null"                            shift, and go to state 417
    "table"                           shift, and go to state 418
    "deref"                           shift, and go to state 419
    "cast"                            shift, and go to state 420
    "upcast"                          shift, and go to state 421
    "addr"                            shift, and go to state 422
    "reinterpret"                     shift, and go to state 423
    "unsafe"                          shift, and go to state 424
    "fixed_array"                     shift, and go to state 425
    "default"                         shift, and go to state 426
    "uninitialized"                   shift, and go to state 954
    "bool"                            shift, and go to state 225
    "void"                            shift, and go to state 226
    "string"                          shift, and go to state 227
    "int"                             shift, and go to state 229
    "int2"                            shift, and go to state 230
    "int3"                            shift, and go to state 231
    "int4"                            shift, and go to state 232
    "uint"                            shift, and go to state 233
    "bitfield"                        shift, and go to state 427
    "uint2"                           shift, and go to state 235
    "uint3"                           shift, and go to state 236
    "uint4"                           shift, and go to state 237
    "float"                           shift, and go to state 238
    "float2"                          shift, and go to state 239
    "float3"                          shift, and go to state 240
    "float4"                          shift, and go to state 241
    "range"                           shift, and go to state 242
    "urange"                          shift, and go to state 243
    "range64"                         shift, and go to state 244
    "urange64"                        shift, and go to state 245
    "int64"                           shift, and go to state 247
    "uint64"                          shift, and go to state 248
    "double"                          shift, and go to state 249
    "int8"                            shift, and go to state 252
    "uint8"                           shift, and go to state 253
    "int16"                           shift, and go to state 254
    "uint16"                          shift, and go to state 255
    "tuple"                           shift, and go to state 428
    "variant"                         shift, and go to state 429
    "generator"                       shift, and go to state 430
    "++"                              shift, and go to state 431
    "--"                              shift, and go to state 432
    "::"                              shift, and go to state 55
    "$$"                              shift, and go to state 433
    "$i"                              shift, and go to state 434
    "$v"                              shift, and go to state 435
    "$b"                              shift, and go to state 436
    "$a"                              shift, and go to state 437
    "$c"                              shift, and go to state 438
    "$f"                              shift, and go to state 792
    "..."                             shift, and go to state 439
    "integer constant"                shift, and go to state 440
    "long integer constant"           shift, and go to state 441
    "unsigned integer constant"       shift, and go to state 442
    "unsigned long integer constant"  shift, and go to state 443
    "unsigned int8 constant"          shift, and go to state 444
    "floating point constant"         shift, and go to state 445
    "double constant"                 shift, and go to state 446
    "name"                            shift, and go to state 793
    "start of the string"             shift, and go to state 447
    "begin of code block"             shift, and go to state 448
    '-'                               shift, and go to state 449
    '+'                               shift, and go to state 450
    '*'                               shift, and go to state 451
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 452
    '!'                               shift, and go to state 453
    '['                               shift, and go to state 454
    '('                               shift, and go to state 455
    '$'                               shift, and go to state 456
    '@'                               shift, and go to state 457

    $default  reduce using rule 747 (use_initializer)

    string_builder          go to state 458
    expr_reader             go to state 459
    expr_call_pipe          go to state 460
    name_in_namespace       go to state 461
    expr_new                go to state 462
    expr_cast               go to state 463
    expr_type_decl          go to state 464
    expr_type_info          go to state 465
    expr_list               go to state 955
    block_or_lambda         go to state 466
    expr_full_block         go to state 467
    expr_numeric_const      go to state 468
    expr_named_call         go to state 469
    expr_method_call        go to state 470
    func_addr_expr          go to state 471
    expr_field              go to state 472
    expr_call               go to state 473
    expr                    go to state 600
    expr_mtag               go to state 475
    basic_type_declaration  go to state 476
    make_decl               go to state 477
    make_struct_fields      go to state 797
    make_struct_single      go to state 956
    use_initializer         go to state 957
    make_struct_decl        go to state 478
    make_tuple_call         go to state 479
    make_dim_decl           go to state 480
    make_table_decl         go to state 481
    array_comprehension     go to state 482


State 745

  297 expr_type_info: "typeinfo" name_in_namespace '<' . "name" '>' '(' expr ')'
  298               | "typeinfo" name_in_namespace '<' . "name" c_or_s "name" '>' '(' expr ')'

    "name"  shift, and go to state 958


State 746

  296 expr_type_info: "typeinfo" name_in_namespace '(' . expr ')'

    "struct"                          shift, and go to state 409
    "class"                           shift, and go to state 410
    "true"                            shift, and go to state 411
    "false"                           shift, and go to state 412
    "new"                             shift, and go to state 413
    "typeinfo"                        shift, and go to state 414
    "type"                            shift, and go to state 415
    "array"                           shift, and go to state 416
    "null"                            shift, and go to state 417
    "table"                           shift, and go to state 418
    "deref"                           shift, and go to state 419
    "cast"                            shift, and go to state 420
    "upcast"                          shift, and go to state 421
    "addr"                            shift, and go to state 422
    "reinterpret"                     shift, and go to state 423
    "unsafe"                          shift, and go to state 424
    "fixed_array"                     shift, and go to state 425
    "default"                         shift, and go to state 426
    "bool"                            shift, and go to state 225
    "void"                            shift, and go to state 226
    "string"                          shift, and go to state 227
    "int"                             shift, and go to state 229
    "int2"                            shift, and go to state 230
    "int3"                            shift, and go to state 231
    "int4"                            shift, and go to state 232
    "uint"                            shift, and go to state 233
    "bitfield"                        shift, and go to state 427
    "uint2"                           shift, and go to state 235
    "uint3"                           shift, and go to state 236
    "uint4"                           shift, and go to state 237
    "float"                           shift, and go to state 238
    "float2"                          shift, and go to state 239
    "float3"                          shift, and go to state 240
    "float4"                          shift, and go to state 241
    "range"                           shift, and go to state 242
    "urange"                          shift, and go to state 243
    "range64"                         shift, and go to state 244
    "urange64"                        shift, and go to state 245
    "int64"                           shift, and go to state 247
    "uint64"                          shift, and go to state 248
    "double"                          shift, and go to state 249
    "int8"                            shift, and go to state 252
    "uint8"                           shift, and go to state 253
    "int16"                           shift, and go to state 254
    "uint16"                          shift, and go to state 255
    "tuple"                           shift, and go to state 428
    "variant"                         shift, and go to state 429
    "generator"                       shift, and go to state 430
    "++"                              shift, and go to state 431
    "--"                              shift, and go to state 432
    "::"                              shift, and go to state 55
    "$$"                              shift, and go to state 433
    "$i"                              shift, and go to state 434
    "$v"                              shift, and go to state 435
    "$b"                              shift, and go to state 436
    "$a"                              shift, and go to state 437
    "$c"                              shift, and go to state 438
    "..."                             shift, and go to state 439
    "integer constant"                shift, and go to state 440
    "long integer constant"           shift, and go to state 441
    "unsigned integer constant"       shift, and go to state 442
    "unsigned long integer constant"  shift, and go to state 443
    "unsigned int8 constant"          shift, and go to state 444
    "floating point constant"         shift, and go to state 445
    "double constant"                 shift, and go to state 446
    "name"                            shift, and go to state 56
    "start of the string"             shift, and go to state 447
    "begin of code block"             shift, and go to state 448
    '-'                               shift, and go to state 449
    '+'                               shift, and go to state 450
    '*'                               shift, and go to state 451
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 452
    '!'                               shift, and go to state 453
    '['                               shift, and go to state 454
    '('                               shift, and go to state 455
    '$'                               shift, and go to state 456
    '@'                               shift, and go to state 457

    string_builder          go to state 458
    expr_reader             go to state 459
    expr_call_pipe          go to state 460
    name_in_namespace       go to state 461
    expr_new                go to state 462
    expr_cast               go to state 463
    expr_type_decl          go to state 464
    expr_type_info          go to state 465
    block_or_lambda         go to state 466
    expr_full_block         go to state 467
    expr_numeric_const      go to state 468
    expr_named_call         go to state 469
    expr_method_call        go to state 470
    func_addr_expr          go to state 471
    expr_field              go to state 472
    expr_call               go to state 473
    expr                    go to state 959
    expr_mtag               go to state 475
    basic_type_declaration  go to state 476
    make_decl               go to state 477
    make_struct_decl        go to state 478
    make_tuple_call         go to state 479
    make_dim_decl           go to state 480
    make_table_decl         go to state 481
    array_comprehension     go to state 482


State 747

  295 expr_type_decl: "type" '<' $@15 . type_declaration '>' $@16

    "type"       shift, and go to state 219
    "array"      shift, and go to state 220
    "table"      shift, and go to state 221
    "typedecl"   shift, and go to state 222
    "iterator"   shift, and go to state 223
    "smart_ptr"  shift, and go to state 224
    "bool"       shift, and go to state 225
    "void"       shift, and go to state 226
    "string"     shift, and go to state 227
    "auto"       shift, and go to state 228
    "int"        shift, and go to state 229
    "int2"       shift, and go to state 230
    "int3"       shift, and go to state 231
    "int4"       shift, and go to state 232
    "uint"       shift, and go to state 233
    "bitfield"   shift, and go to state 234
    "uint2"      shift, and go to state 235
    "uint3"      shift, and go to state 236
    "uint4"      shift, and go to state 237
    "float"      shift, and go to state 238
    "float2"     shift, and go to state 239
    "float3"     shift, and go to state 240
    "float4"     shift, and go to state 241
    "range"      shift, and go to state 242
    "urange"     shift, and go to state 243
    "range64"    shift, and go to state 244
    "urange64"   shift, and go to state 245
    "block"      shift, and go to state 246
    "int64"      shift, and go to state 247
    "uint64"     shift, and go to state 248
    "double"     shift, and go to state 249
    "function"   shift, and go to state 250
    "lambda"     shift, and go to state 251
    "int8"       shift, and go to state 252
    "uint8"      shift, and go to state 253
    "int16"      shift, and go to state 254
    "uint16"     shift, and go to state 255
    "tuple"      shift, and go to state 256
    "variant"    shift, and go to state 257
    "::"         shift, and go to state 55
    "$t"         shift, and go to state 258
    "name"       shift, and go to state 56
    '$'          shift, and go to state 259

    name_in_namespace                   go to state 260
    basic_type_declaration              go to state 261
    structure_type_declaration          go to state 262
    auto_type_declaration               go to state 263
    bitfield_type_declaration           go to state 264
    type_declaration_no_options         go to state 265
    type_declaration_no_options_no_dim  go to state 266
    type_declaration                    go to state 960


State 748

  770 make_dim_decl: "array" "struct" '<' . $@87 type_declaration_no_options '>' $@88 '(' use_initializer optional_make_struct_dim_decl ')'

    $default  reduce using rule 768 ($@87)

    $@87  go to state 961


State 749

  773 make_dim_decl: "array" "tuple" '<' . $@89 type_declaration_no_options '>' $@90 '(' use_initializer optional_make_struct_dim_decl ')'

    $default  reduce using rule 771 ($@89)

    $@89  go to state 962


State 750

  776 make_dim_decl: "array" "variant" '<' . $@91 type_declaration_no_options '>' $@92 '(' make_variant_dim ')'

    $default  reduce using rule 774 ($@91)

    $@91  go to state 963


State 751

  780 make_dim_decl: "array" '<' $@93 . type_declaration_no_options '>' $@94 '(' optional_expr_list ')'

    "type"       shift, and go to state 219
    "array"      shift, and go to state 220
    "table"      shift, and go to state 221
    "typedecl"   shift, and go to state 222
    "iterator"   shift, and go to state 223
    "smart_ptr"  shift, and go to state 224
    "bool"       shift, and go to state 225
    "void"       shift, and go to state 226
    "string"     shift, and go to state 227
    "auto"       shift, and go to state 228
    "int"        shift, and go to state 229
    "int2"       shift, and go to state 230
    "int3"       shift, and go to state 231
    "int4"       shift, and go to state 232
    "uint"       shift, and go to state 233
    "bitfield"   shift, and go to state 234
    "uint2"      shift, and go to state 235
    "uint3"      shift, and go to state 236
    "uint4"      shift, and go to state 237
    "float"      shift, and go to state 238
    "float2"     shift, and go to state 239
    "float3"     shift, and go to state 240
    "float4"     shift, and go to state 241
    "range"      shift, and go to state 242
    "urange"     shift, and go to state 243
    "range64"    shift, and go to state 244
    "urange64"   shift, and go to state 245
    "block"      shift, and go to state 246
    "int64"      shift, and go to state 247
    "uint64"     shift, and go to state 248
    "double"     shift, and go to state 249
    "function"   shift, and go to state 250
    "lambda"     shift, and go to state 251
    "int8"       shift, and go to state 252
    "uint8"      shift, and go to state 253
    "int16"      shift, and go to state 254
    "uint16"     shift, and go to state 255
    "tuple"      shift, and go to state 256
    "variant"    shift, and go to state 257
    "::"         shift, and go to state 55
    "$t"         shift, and go to state 258
    "name"       shift, and go to state 56
    '$'          shift, and go to state 259

    name_in_namespace                   go to state 260
    basic_type_declaration              go to state 261
    structure_type_declaration          go to state 262
    auto_type_declaration               go to state 263
    bitfield_type_declaration           go to state 264
    type_declaration_no_options         go to state 964
    type_declaration_no_options_no_dim  go to state 266


State 752

  300 expr_list: expr_list . ',' expr
  777 make_dim_decl: "array" '(' expr_list . optional_comma ')'

    ','  shift, and go to state 783

    $default  reduce using rule 793 (optional_comma)

    optional_comma  go to state 965


State 753

  789 make_table_decl: "table" '<' type_declaration_no_options . '>' '(' optional_expr_map_tuple_list ')'
  790                | "table" '<' type_declaration_no_options . c_or_s type_declaration_no_options '>' '(' optional_expr_map_tuple_list ')'

    "end of expression"  shift, and go to state 512
    ','                  shift, and go to state 513
    '>'                  shift, and go to state 966

    c_or_s  go to state 967


State 754

  786 expr_map_tuple_list: expr_map_tuple_list . ',' make_map_tuple
  788 make_table_decl: "table" '(' expr_map_tuple_list . optional_comma ')'

    ','  shift, and go to state 779

    $default  reduce using rule 793 (optional_comma)

    optional_comma  go to state 968


State 755

  347 expr_method_call: expr . "->" "name" '(' ')'
  348                 | expr . "->" "name" '(' expr_list ')'
  358 expr_field: expr . '.' "name"
  359           | expr . '.' '.' "name"
  360           | expr . '.' "name" '(' ')'
  361           | expr . '.' "name" '(' expr_list ')'
  362           | expr . '.' basic_type_declaration '(' ')'
  363           | expr . '.' basic_type_declaration '(' expr_list ')'
  366           | expr . '.' $@21 error $@22
  388 expr: expr . "<<" expr
  389     | expr . ">>" expr
  390     | expr . "<<<" expr
  391     | expr . ">>>" expr
  392     | expr . '+' expr
  393     | expr . '-' expr
  394     | expr . '*' expr
  395     | expr . '/' expr
  396     | expr . '%' expr
  397     | expr . '<' expr
  398     | expr . '>' expr
  399     | expr . "==" expr
  400     | expr . "!=" expr
  401     | expr . "<=" expr
  402     | expr . ">=" expr
  403     | expr . '&' expr
  404     | expr . '|' expr
  405     | expr . '^' expr
  406     | expr . "&&" expr
  407     | expr . "||" expr
  408     | expr . "^^" expr
  409     | expr . ".." expr
  412     | expr . "++"
  413     | expr . "--"
  415     | expr . '[' expr ']'
  416     | expr . '.' '[' expr ']'
  417     | expr . "?[" expr ']'
  418     | expr . '.' "?[" expr ']'
  419     | expr . "?." "name"
  420     | expr . '.' "?." "name"
  424     | "deref" '(' expr . ')'
  429     | expr . "??" expr
  430     | expr . '?' expr ':' expr
  433     | expr . "is" "type" '<' $@23 type_declaration_no_options '>' $@24
  434     | expr . "is" basic_type_declaration
  435     | expr . "is" "name"
  436     | expr . "as" "name"
  439     | expr . "as" "type" '<' $@25 type_declaration '>' $@26
  440     | expr . "as" basic_type_declaration
  441     | expr . '?' "as" "name"
  444     | expr . '?' "as" "type" '<' $@27 type_declaration '>' $@28
  445     | expr . '?' "as" basic_type_declaration
  453     | expr . "<|" expr
  454     | expr . "|>" expr
  455     | expr . "|>" basic_type_declaration
  466 expr_mtag: expr . '.' "$f" '(' expr ')'
  467          | expr . "?." "$f" '(' expr ')'
  468          | expr . '.' '.' "$f" '(' expr ')'
  469          | expr . '.' "?." "$f" '(' expr ')'
  470          | expr . "as" "$f" '(' expr ')'
  471          | expr . '?' "as" "$f" '(' expr ')'
  472          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 609
    "as"   shift, and go to state 610
    "<<"   shift, and go to state 611
    ">>"   shift, and go to state 612
    "++"   shift, and go to state 613
    "--"   shift, and go to state 614
    "<="   shift, and go to state 615
    ">="   shift, and go to state 616
    "=="   shift, and go to state 617
    "!="   shift, and go to state 618
    "->"   shift, and go to state 619
    "??"   shift, and go to state 620
    "?."   shift, and go to state 621
    "?["   shift, and go to state 622
    "<|"   shift, and go to state 623
    "|>"   shift, and go to state 624
    "<<<"  shift, and go to state 625
    ">>>"  shift, and go to state 626
    "&&"   shift, and go to state 627
    "||"   shift, and go to state 628
    "^^"   shift, and go to state 629
    ".."   shift, and go to state 630
    '?'    shift, and go to state 631
    '|'    shift, and go to state 632
    '^'    shift, and go to state 633
    '&'    shift, and go to state 634
    '<'    shift, and go to state 635
    '>'    shift, and go to state 636
    '-'    shift, and go to state 637
    '+'    shift, and go to state 638
    '*'    shift, and go to state 639
    '/'    shift, and go to state 640
    '%'    shift, and go to state 641
    '.'    shift, and go to state 642
    '['    shift, and go to state 643
    ')'    shift, and go to state 969


State 756

  286 expr_cast: "cast" '<' $@9 . type_declaration_no_options '>' $@10 expr

    "type"       shift, and go to state 219
    "array"      shift, and go to state 220
    "table"      shift, and go to state 221
    "typedecl"   shift, and go to state 222
    "iterator"   shift, and go to state 223
    "smart_ptr"  shift, and go to state 224
    "bool"       shift, and go to state 225
    "void"       shift, and go to state 226
    "string"     shift, and go to state 227
    "auto"       shift, and go to state 228
    "int"        shift, and go to state 229
    "int2"       shift, and go to state 230
    "int3"       shift, and go to state 231
    "int4"       shift, and go to state 232
    "uint"       shift, and go to state 233
    "bitfield"   shift, and go to state 234
    "uint2"      shift, and go to state 235
    "uint3"      shift, and go to state 236
    "uint4"      shift, and go to state 237
    "float"      shift, and go to state 238
    "float2"     shift, and go to state 239
    "float3"     shift, and go to state 240
    "float4"     shift, and go to state 241
    "range"      shift, and go to state 242
    "urange"     shift, and go to state 243
    "range64"    shift, and go to state 244
    "urange64"   shift, and go to state 245
    "block"      shift, and go to state 246
    "int64"      shift, and go to state 247
    "uint64"     shift, and go to state 248
    "double"     shift, and go to state 249
    "function"   shift, and go to state 250
    "lambda"     shift, and go to state 251
    "int8"       shift, and go to state 252
    "uint8"      shift, and go to state 253
    "int16"      shift, and go to state 254
    "uint16"     shift, and go to state 255
    "tuple"      shift, and go to state 256
    "variant"    shift, and go to state 257
    "::"         shift, and go to state 55
    "$t"         shift, and go to state 258
    "name"       shift, and go to state 56
    '$'          shift, and go to state 259

    name_in_namespace                   go to state 260
    basic_type_declaration              go to state 261
    structure_type_declaration          go to state 262
    auto_type_declaration               go to state 263
    bitfield_type_declaration           go to state 264
    type_declaration_no_options         go to state 970
    type_declaration_no_options_no_dim  go to state 266


State 757

  289 expr_cast: "upcast" '<' $@11 . type_declaration_no_options '>' $@12 expr

    "type"       shift, and go to state 219
    "array"      shift, and go to state 220
    "table"      shift, and go to state 221
    "typedecl"   shift, and go to state 222
    "iterator"   shift, and go to state 223
    "smart_ptr"  shift, and go to state 224
    "bool"       shift, and go to state 225
    "void"       shift, and go to state 226
    "string"     shift, and go to state 227
    "auto"       shift, and go to state 228
    "int"        shift, and go to state 229
    "int2"       shift, and go to state 230
    "int3"       shift, and go to state 231
    "int4"       shift, and go to state 232
    "uint"       shift, and go to state 233
    "bitfield"   shift, and go to state 234
    "uint2"      shift, and go to state 235
    "uint3"      shift, and go to state 236
    "uint4"      shift, and go to state 237
    "float"      shift, and go to state 238
    "float2"     shift, and go to state 239
    "float3"     shift, and go to state 240
    "float4"     shift, and go to state 241
    "range"      shift, and go to state 242
    "urange"     shift, and go to state 243
    "range64"    shift, and go to state 244
    "urange64"   shift, and go to state 245
    "block"      shift, and go to state 246
    "int64"      shift, and go to state 247
    "uint64"     shift, and go to state 248
    "double"     shift, and go to state 249
    "function"   shift, and go to state 250
    "lambda"     shift, and go to state 251
    "int8"       shift, and go to state 252
    "uint8"      shift, and go to state 253
    "int16"      shift, and go to state 254
    "uint16"     shift, and go to state 255
    "tuple"      shift, and go to state 256
    "variant"    shift, and go to state 257
    "::"         shift, and go to state 55
    "$t"         shift, and go to state 258
    "name"       shift, and go to state 56
    '$'          shift, and go to state 259

    name_in_namespace                   go to state 260
    basic_type_declaration              go to state 261
    structure_type_declaration          go to state 262
    auto_type_declaration               go to state 263
    bitfield_type_declaration           go to state 264
    type_declaration_no_options         go to state 971
    type_declaration_no_options_no_dim  go to state 266


State 758

  347 expr_method_call: expr . "->" "name" '(' ')'
  348                 | expr . "->" "name" '(' expr_list ')'
  358 expr_field: expr . '.' "name"
  359           | expr . '.' '.' "name"
  360           | expr . '.' "name" '(' ')'
  361           | expr . '.' "name" '(' expr_list ')'
  362           | expr . '.' basic_type_declaration '(' ')'
  363           | expr . '.' basic_type_declaration '(' expr_list ')'
  366           | expr . '.' $@21 error $@22
  388 expr: expr . "<<" expr
  389     | expr . ">>" expr
  390     | expr . "<<<" expr
  391     | expr . ">>>" expr
  392     | expr . '+' expr
  393     | expr . '-' expr
  394     | expr . '*' expr
  395     | expr . '/' expr
  396     | expr . '%' expr
  397     | expr . '<' expr
  398     | expr . '>' expr
  399     | expr . "==" expr
  400     | expr . "!=" expr
  401     | expr . "<=" expr
  402     | expr . ">=" expr
  403     | expr . '&' expr
  404     | expr . '|' expr
  405     | expr . '^' expr
  406     | expr . "&&" expr
  407     | expr . "||" expr
  408     | expr . "^^" expr
  409     | expr . ".." expr
  412     | expr . "++"
  413     | expr . "--"
  415     | expr . '[' expr ']'
  416     | expr . '.' '[' expr ']'
  417     | expr . "?[" expr ']'
  418     | expr . '.' "?[" expr ']'
  419     | expr . "?." "name"
  420     | expr . '.' "?." "name"
  425     | "addr" '(' expr . ')'
  429     | expr . "??" expr
  430     | expr . '?' expr ':' expr
  433     | expr . "is" "type" '<' $@23 type_declaration_no_options '>' $@24
  434     | expr . "is" basic_type_declaration
  435     | expr . "is" "name"
  436     | expr . "as" "name"
  439     | expr . "as" "type" '<' $@25 type_declaration '>' $@26
  440     | expr . "as" basic_type_declaration
  441     | expr . '?' "as" "name"
  444     | expr . '?' "as" "type" '<' $@27 type_declaration '>' $@28
  445     | expr . '?' "as" basic_type_declaration
  453     | expr . "<|" expr
  454     | expr . "|>" expr
  455     | expr . "|>" basic_type_declaration
  466 expr_mtag: expr . '.' "$f" '(' expr ')'
  467          | expr . "?." "$f" '(' expr ')'
  468          | expr . '.' '.' "$f" '(' expr ')'
  469          | expr . '.' "?." "$f" '(' expr ')'
  470          | expr . "as" "$f" '(' expr ')'
  471          | expr . '?' "as" "$f" '(' expr ')'
  472          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 609
    "as"   shift, and go to state 610
    "<<"   shift, and go to state 611
    ">>"   shift, and go to state 612
    "++"   shift, and go to state 613
    "--"   shift, and go to state 614
    "<="   shift, and go to state 615
    ">="   shift, and go to state 616
    "=="   shift, and go to state 617
    "!="   shift, and go to state 618
    "->"   shift, and go to state 619
    "??"   shift, and go to state 620
    "?."   shift, and go to state 621
    "?["   shift, and go to state 622
    "<|"   shift, and go to state 623
    "|>"   shift, and go to state 624
    "<<<"  shift, and go to state 625
    ">>>"  shift, and go to state 626
    "&&"   shift, and go to state 627
    "||"   shift, and go to state 628
    "^^"   shift, and go to state 629
    ".."   shift, and go to state 630
    '?'    shift, and go to state 631
    '|'    shift, and go to state 632
    '^'    shift, and go to state 633
    '&'    shift, and go to state 634
    '<'    shift, and go to state 635
    '>'    shift, and go to state 636
    '-'    shift, and go to state 637
    '+'    shift, and go to state 638
    '*'    shift, and go to state 639
    '/'    shift, and go to state 640
    '%'    shift, and go to state 641
    '.'    shift, and go to state 642
    '['    shift, and go to state 643
    ')'    shift, and go to state 972


State 759

  292 expr_cast: "reinterpret" '<' $@13 . type_declaration_no_options '>' $@14 expr

    "type"       shift, and go to state 219
    "array"      shift, and go to state 220
    "table"      shift, and go to state 221
    "typedecl"   shift, and go to state 222
    "iterator"   shift, and go to state 223
    "smart_ptr"  shift, and go to state 224
    "bool"       shift, and go to state 225
    "void"       shift, and go to state 226
    "string"     shift, and go to state 227
    "auto"       shift, and go to state 228
    "int"        shift, and go to state 229
    "int2"       shift, and go to state 230
    "int3"       shift, and go to state 231
    "int4"       shift, and go to state 232
    "uint"       shift, and go to state 233
    "bitfield"   shift, and go to state 234
    "uint2"      shift, and go to state 235
    "uint3"      shift, and go to state 236
    "uint4"      shift, and go to state 237
    "float"      shift, and go to state 238
    "float2"     shift, and go to state 239
    "float3"     shift, and go to state 240
    "float4"     shift, and go to state 241
    "range"      shift, and go to state 242
    "urange"     shift, and go to state 243
    "range64"    shift, and go to state 244
    "urange64"   shift, and go to state 245
    "block"      shift, and go to state 246
    "int64"      shift, and go to state 247
    "uint64"     shift, and go to state 248
    "double"     shift, and go to state 249
    "function"   shift, and go to state 250
    "lambda"     shift, and go to state 251
    "int8"       shift, and go to state 252
    "uint8"      shift, and go to state 253
    "int16"      shift, and go to state 254
    "uint16"     shift, and go to state 255
    "tuple"      shift, and go to state 256
    "variant"    shift, and go to state 257
    "::"         shift, and go to state 55
    "$t"         shift, and go to state 258
    "name"       shift, and go to state 56
    '$'          shift, and go to state 259

    name_in_namespace                   go to state 260
    basic_type_declaration              go to state 261
    structure_type_declaration          go to state 262
    auto_type_declaration               go to state 263
    bitfield_type_declaration           go to state 264
    type_declaration_no_options         go to state 973
    type_declaration_no_options_no_dim  go to state 266


State 760

  347 expr_method_call: expr . "->" "name" '(' ')'
  348                 | expr . "->" "name" '(' expr_list ')'
  358 expr_field: expr . '.' "name"
  359           | expr . '.' '.' "name"
  360           | expr . '.' "name" '(' ')'
  361           | expr . '.' "name" '(' expr_list ')'
  362           | expr . '.' basic_type_declaration '(' ')'
  363           | expr . '.' basic_type_declaration '(' expr_list ')'
  366           | expr . '.' $@21 error $@22
  388 expr: expr . "<<" expr
  389     | expr . ">>" expr
  390     | expr . "<<<" expr
  391     | expr . ">>>" expr
  392     | expr . '+' expr
  393     | expr . '-' expr
  394     | expr . '*' expr
  395     | expr . '/' expr
  396     | expr . '%' expr
  397     | expr . '<' expr
  398     | expr . '>' expr
  399     | expr . "==" expr
  400     | expr . "!=" expr
  401     | expr . "<=" expr
  402     | expr . ">=" expr
  403     | expr . '&' expr
  404     | expr . '|' expr
  405     | expr . '^' expr
  406     | expr . "&&" expr
  407     | expr . "||" expr
  408     | expr . "^^" expr
  409     | expr . ".." expr
  412     | expr . "++"
  413     | expr . "--"
  415     | expr . '[' expr ']'
  416     | expr . '.' '[' expr ']'
  417     | expr . "?[" expr ']'
  418     | expr . '.' "?[" expr ']'
  419     | expr . "?." "name"
  420     | expr . '.' "?." "name"
  429     | expr . "??" expr
  430     | expr . '?' expr ':' expr
  433     | expr . "is" "type" '<' $@23 type_declaration_no_options '>' $@24
  434     | expr . "is" basic_type_declaration
  435     | expr . "is" "name"
  436     | expr . "as" "name"
  439     | expr . "as" "type" '<' $@25 type_declaration '>' $@26
  440     | expr . "as" basic_type_declaration
  441     | expr . '?' "as" "name"
  444     | expr . '?' "as" "type" '<' $@27 type_declaration '>' $@28
  445     | expr . '?' "as" basic_type_declaration
  453     | expr . "<|" expr
  454     | expr . "|>" expr
  455     | expr . "|>" basic_type_declaration
  457     | "unsafe" '(' expr . ')'
  466 expr_mtag: expr . '.' "$f" '(' expr ')'
  467          | expr . "?." "$f" '(' expr ')'
  468          | expr . '.' '.' "$f" '(' expr ')'
  469          | expr . '.' "?." "$f" '(' expr ')'
  470          | expr . "as" "$f" '(' expr ')'
  471          | expr . '?' "as" "$f" '(' expr ')'
  472          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 609
    "as"   shift, and go to state 610
    "<<"   shift, and go to state 611
    ">>"   shift, and go to state 612
    "++"   shift, and go to state 613
    "--"   shift, and go to state 614
    "<="   shift, and go to state 615
    ">="   shift, and go to state 616
    "=="   shift, and go to state 617
    "!="   shift, and go to state 618
    "->"   shift, and go to state 619
    "??"   shift, and go to state 620
    "?."   shift, and go to state 621
    "?["   shift, and go to state 622
    "<|"   shift, and go to state 623
    "|>"   shift, and go to state 624
    "<<<"  shift, and go to state 625
    ">>>"  shift, and go to state 626
    "&&"   shift, and go to state 627
    "||"   shift, and go to state 628
    "^^"   shift, and go to state 629
    ".."   shift, and go to state 630
    '?'    shift, and go to state 631
    '|'    shift, and go to state 632
    '^'    shift, and go to state 633
    '&'    shift, and go to state 634
    '<'    shift, and go to state 635
    '>'    shift, and go to state 636
    '-'    shift, and go to state 637
    '+'    shift, and go to state 638
    '*'    shift, and go to state 639
    '/'    shift, and go to state 640
    '%'    shift, and go to state 641
    '.'    shift, and go to state 642
    '['    shift, and go to state 643
    ')'    shift, and go to state 974


State 761

  784 make_dim_decl: "fixed_array" '<' $@95 . type_declaration_no_options '>' $@96 '(' expr_list optional_comma ')'

    "type"       shift, and go to state 219
    "array"      shift, and go to state 220
    "table"      shift, and go to state 221
    "typedecl"   shift, and go to state 222
    "iterator"   shift, and go to state 223
    "smart_ptr"  shift, and go to state 224
    "bool"       shift, and go to state 225
    "void"       shift, and go to state 226
    "string"     shift, and go to state 227
    "auto"       shift, and go to state 228
    "int"        shift, and go to state 229
    "int2"       shift, and go to state 230
    "int3"       shift, and go to state 231
    "int4"       shift, and go to state 232
    "uint"       shift, and go to state 233
    "bitfield"   shift, and go to state 234
    "uint2"      shift, and go to state 235
    "uint3"      shift, and go to state 236
    "uint4"      shift, and go to state 237
    "float"      shift, and go to state 238
    "float2"     shift, and go to state 239
    "float3"     shift, and go to state 240
    "float4"     shift, and go to state 241
    "range"      shift, and go to state 242
    "urange"     shift, and go to state 243
    "range64"    shift, and go to state 244
    "urange64"   shift, and go to state 245
    "block"      shift, and go to state 246
    "int64"      shift, and go to state 247
    "uint64"     shift, and go to state 248
    "double"     shift, and go to state 249
    "function"   shift, and go to state 250
    "lambda"     shift, and go to state 251
    "int8"       shift, and go to state 252
    "uint8"      shift, and go to state 253
    "int16"      shift, and go to state 254
    "uint16"     shift, and go to state 255
    "tuple"      shift, and go to state 256
    "variant"    shift, and go to state 257
    "::"         shift, and go to state 55
    "$t"         shift, and go to state 258
    "name"       shift, and go to state 56
    '$'          shift, and go to state 259

    name_in_namespace                   go to state 260
    basic_type_declaration              go to state 261
    structure_type_declaration          go to state 262
    auto_type_declaration               go to state 263
    bitfield_type_declaration           go to state 264
    type_declaration_no_options         go to state 975
    type_declaration_no_options_no_dim  go to state 266


State 762

  300 expr_list: expr_list . ',' expr
  781 make_dim_decl: "fixed_array" '(' expr_list . optional_comma ')'

    ','  shift, and go to state 783

    $default  reduce using rule 793 (optional_comma)

    optional_comma  go to state 976


State 763

  760 make_struct_decl: "default" '<' $@83 . type_declaration_no_options '>' $@84 use_initializer

    "type"       shift, and go to state 219
    "array"      shift, and go to state 220
    "table"      shift, and go to state 221
    "typedecl"   shift, and go to state 222
    "iterator"   shift, and go to state 223
    "smart_ptr"  shift, and go to state 224
    "bool"       shift, and go to state 225
    "void"       shift, and go to state 226
    "string"     shift, and go to state 227
    "auto"       shift, and go to state 228
    "int"        shift, and go to state 229
    "int2"       shift, and go to state 230
    "int3"       shift, and go to state 231
    "int4"       shift, and go to state 232
    "uint"       shift, and go to state 233
    "bitfield"   shift, and go to state 234
    "uint2"      shift, and go to state 235
    "uint3"      shift, and go to state 236
    "uint4"      shift, and go to state 237
    "float"      shift, and go to state 238
    "float2"     shift, and go to state 239
    "float3"     shift, and go to state 240
    "float4"     shift, and go to state 241
    "range"      shift, and go to state 242
    "urange"     shift, and go to state 243
    "range64"    shift, and go to state 244
    "urange64"   shift, and go to state 245
    "block"      shift, and go to state 246
    "int64"      shift, and go to state 247
    "uint64"     shift, and go to state 248
    "double"     shift, and go to state 249
    "function"   shift, and go to state 250
    "lambda"     shift, and go to state 251
    "int8"       shift, and go to state 252
    "uint8"      shift, and go to state 253
    "int16"      shift, and go to state 254
    "uint16"     shift, and go to state 255
    "tuple"      shift, and go to state 256
    "variant"    shift, and go to state 257
    "::"         shift, and go to state 55
    "$t"         shift, and go to state 258
    "name"       shift, and go to state 56
    '$'          shift, and go to state 259

    name_in_namespace                   go to state 260
    basic_type_declaration              go to state 261
    structure_type_declaration          go to state 262
    auto_type_declaration               go to state 263
    bitfield_type_declaration           go to state 264
    type_declaration_no_options         go to state 977
    type_declaration_no_options_no_dim  go to state 266


State 764

  766 make_tuple_call: "tuple" '<' $@85 . type_declaration_no_options '>' $@86 '(' use_initializer optional_make_struct_dim_decl ')'

    "type"       shift, and go to state 219
    "array"      shift, and go to state 220
    "table"      shift, and go to state 221
    "typedecl"   shift, and go to state 222
    "iterator"   shift, and go to state 223
    "smart_ptr"  shift, and go to state 224
    "bool"       shift, and go to state 225
    "void"       shift, and go to state 226
    "string"     shift, and go to state 227
    "auto"       shift, and go to state 228
    "int"        shift, and go to state 229
    "int2"       shift, and go to state 230
    "int3"       shift, and go to state 231
    "int4"       shift, and go to state 232
    "uint"       shift, and go to state 233
    "bitfield"   shift, and go to state 234
    "uint2"      shift, and go to state 235
    "uint3"      shift, and go to state 236
    "uint4"      shift, and go to state 237
    "float"      shift, and go to state 238
    "float2"     shift, and go to state 239
    "float3"     shift, and go to state 240
    "float4"     shift, and go to state 241
    "range"      shift, and go to state 242
    "urange"     shift, and go to state 243
    "range64"    shift, and go to state 244
    "urange64"   shift, and go to state 245
    "block"      shift, and go to state 246
    "int64"      shift, and go to state 247
    "uint64"     shift, and go to state 248
    "double"     shift, and go to state 249
    "function"   shift, and go to state 250
    "lambda"     shift, and go to state 251
    "int8"       shift, and go to state 252
    "uint8"      shift, and go to state 253
    "int16"      shift, and go to state 254
    "uint16"     shift, and go to state 255
    "tuple"      shift, and go to state 256
    "variant"    shift, and go to state 257
    "::"         shift, and go to state 55
    "$t"         shift, and go to state 258
    "name"       shift, and go to state 56
    '$'          shift, and go to state 259

    name_in_namespace                   go to state 260
    basic_type_declaration              go to state 261
    structure_type_declaration          go to state 262
    auto_type_declaration               go to state 263
    bitfield_type_declaration           go to state 264
    type_declaration_no_options         go to state 978
    type_declaration_no_options_no_dim  go to state 266


State 765

  300 expr_list: expr_list . ',' expr
  763 make_tuple_call: "tuple" '(' expr_list . optional_comma ')'

    ','  shift, and go to state 783

    $default  reduce using rule 793 (optional_comma)

    optional_comma  go to state 979


State 766

  757 make_struct_decl: "variant" '<' $@81 . type_declaration_no_options '>' $@82 '(' make_variant_dim ')'

    "type"       shift, and go to state 219
    "array"      shift, and go to state 220
    "table"      shift, and go to state 221
    "typedecl"   shift, and go to state 222
    "iterator"   shift, and go to state 223
    "smart_ptr"  shift, and go to state 224
    "bool"       shift, and go to state 225
    "void"       shift, and go to state 226
    "string"     shift, and go to state 227
    "auto"       shift, and go to state 228
    "int"        shift, and go to state 229
    "int2"       shift, and go to state 230
    "int3"       shift, and go to state 231
    "int4"       shift, and go to state 232
    "uint"       shift, and go to state 233
    "bitfield"   shift, and go to state 234
    "uint2"      shift, and go to state 235
    "uint3"      shift, and go to state 236
    "uint4"      shift, and go to state 237
    "float"      shift, and go to state 238
    "float2"     shift, and go to state 239
    "float3"     shift, and go to state 240
    "float4"     shift, and go to state 241
    "range"      shift, and go to state 242
    "urange"     shift, and go to state 243
    "range64"    shift, and go to state 244
    "urange64"   shift, and go to state 245
    "block"      shift, and go to state 246
    "int64"      shift, and go to state 247
    "uint64"     shift, and go to state 248
    "double"     shift, and go to state 249
    "function"   shift, and go to state 250
    "lambda"     shift, and go to state 251
    "int8"       shift, and go to state 252
    "uint8"      shift, and go to state 253
    "int16"      shift, and go to state 254
    "uint16"     shift, and go to state 255
    "tuple"      shift, and go to state 256
    "variant"    shift, and go to state 257
    "::"         shift, and go to state 55
    "$t"         shift, and go to state 258
    "name"       shift, and go to state 56
    '$'          shift, and go to state 259

    name_in_namespace                   go to state 260
    basic_type_declaration              go to state 261
    structure_type_declaration          go to state 262
    auto_type_declaration               go to state 263
    bitfield_type_declaration           go to state 264
    type_declaration_no_options         go to state 980
    type_declaration_no_options_no_dim  go to state 266


State 767

  426 expr: "generator" '<' type_declaration_no_options . '>' optional_capture_list '(' ')'
  427     | "generator" '<' type_declaration_no_options . '>' optional_capture_list '(' expr ')'
  428     | "generator" '<' type_declaration_no_options . '>' optional_capture_list expression_block

    '>'  shift, and go to state 981


State 768

  347 expr_method_call: expr . "->" "name" '(' ')'
  348                 | expr . "->" "name" '(' expr_list ')'
  358 expr_field: expr . '.' "name"
  359           | expr . '.' '.' "name"
  360           | expr . '.' "name" '(' ')'
  361           | expr . '.' "name" '(' expr_list ')'
  362           | expr . '.' basic_type_declaration '(' ')'
  363           | expr . '.' basic_type_declaration '(' expr_list ')'
  366           | expr . '.' $@21 error $@22
  388 expr: expr . "<<" expr
  389     | expr . ">>" expr
  390     | expr . "<<<" expr
  391     | expr . ">>>" expr
  392     | expr . '+' expr
  393     | expr . '-' expr
  394     | expr . '*' expr
  395     | expr . '/' expr
  396     | expr . '%' expr
  397     | expr . '<' expr
  398     | expr . '>' expr
  399     | expr . "==" expr
  400     | expr . "!=" expr
  401     | expr . "<=" expr
  402     | expr . ">=" expr
  403     | expr . '&' expr
  404     | expr . '|' expr
  405     | expr . '^' expr
  406     | expr . "&&" expr
  407     | expr . "||" expr
  408     | expr . "^^" expr
  409     | expr . ".." expr
  412     | expr . "++"
  413     | expr . "--"
  415     | expr . '[' expr ']'
  416     | expr . '.' '[' expr ']'
  417     | expr . "?[" expr ']'
  418     | expr . '.' "?[" expr ']'
  419     | expr . "?." "name"
  420     | expr . '.' "?." "name"
  429     | expr . "??" expr
  430     | expr . '?' expr ':' expr
  433     | expr . "is" "type" '<' $@23 type_declaration_no_options '>' $@24
  434     | expr . "is" basic_type_declaration
  435     | expr . "is" "name"
  436     | expr . "as" "name"
  439     | expr . "as" "type" '<' $@25 type_declaration '>' $@26
  440     | expr . "as" basic_type_declaration
  441     | expr . '?' "as" "name"
  444     | expr . '?' "as" "type" '<' $@27 type_declaration '>' $@28
  445     | expr . '?' "as" basic_type_declaration
  453     | expr . "<|" expr
  454     | expr . "|>" expr
  455     | expr . "|>" basic_type_declaration
  458 expr_mtag: "$$" '(' expr . ')'
  466          | expr . '.' "$f" '(' expr ')'
  467          | expr . "?." "$f" '(' expr ')'
  468          | expr . '.' '.' "$f" '(' expr ')'
  469          | expr . '.' "?." "$f" '(' expr ')'
  470          | expr . "as" "$f" '(' expr ')'
  471          | expr . '?' "as" "$f" '(' expr ')'
  472          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 609
    "as"   shift, and go to state 610
    "<<"   shift, and go to state 611
    ">>"   shift, and go to state 612
    "++"   shift, and go to state 613
    "--"   shift, and go to state 614
    "<="   shift, and go to state 615
    ">="   shift, and go to state 616
    "=="   shift, and go to state 617
    "!="   shift, and go to state 618
    "->"   shift, and go to state 619
    "??"   shift, and go to state 620
    "?."   shift, and go to state 621
    "?["   shift, and go to state 622
    "<|"   shift, and go to state 623
    "|>"   shift, and go to state 624
    "<<<"  shift, and go to state 625
    ">>>"  shift, and go to state 626
    "&&"   shift, and go to state 627
    "||"   shift, and go to state 628
    "^^"   shift, and go to state 629
    ".."   shift, and go to state 630
    '?'    shift, and go to state 631
    '|'    shift, and go to state 632
    '^'    shift, and go to state 633
    '&'    shift, and go to state 634
    '<'    shift, and go to state 635
    '>'    shift, and go to state 636
    '-'    shift, and go to state 637
    '+'    shift, and go to state 638
    '*'    shift, and go to state 639
    '/'    shift, and go to state 640
    '%'    shift, and go to state 641
    '.'    shift, and go to state 642
    '['    shift, and go to state 643
    ')'    shift, and go to state 982


State 769

  347 expr_method_call: expr . "->" "name" '(' ')'
  348                 | expr . "->" "name" '(' expr_list ')'
  358 expr_field: expr . '.' "name"
  359           | expr . '.' '.' "name"
  360           | expr . '.' "name" '(' ')'
  361           | expr . '.' "name" '(' expr_list ')'
  362           | expr . '.' basic_type_declaration '(' ')'
  363           | expr . '.' basic_type_declaration '(' expr_list ')'
  366           | expr . '.' $@21 error $@22
  388 expr: expr . "<<" expr
  389     | expr . ">>" expr
  390     | expr . "<<<" expr
  391     | expr . ">>>" expr
  392     | expr . '+' expr
  393     | expr . '-' expr
  394     | expr . '*' expr
  395     | expr . '/' expr
  396     | expr . '%' expr
  397     | expr . '<' expr
  398     | expr . '>' expr
  399     | expr . "==" expr
  400     | expr . "!=" expr
  401     | expr . "<=" expr
  402     | expr . ">=" expr
  403     | expr . '&' expr
  404     | expr . '|' expr
  405     | expr . '^' expr
  406     | expr . "&&" expr
  407     | expr . "||" expr
  408     | expr . "^^" expr
  409     | expr . ".." expr
  412     | expr . "++"
  413     | expr . "--"
  415     | expr . '[' expr ']'
  416     | expr . '.' '[' expr ']'
  417     | expr . "?[" expr ']'
  418     | expr . '.' "?[" expr ']'
  419     | expr . "?." "name"
  420     | expr . '.' "?." "name"
  429     | expr . "??" expr
  430     | expr . '?' expr ':' expr
  433     | expr . "is" "type" '<' $@23 type_declaration_no_options '>' $@24
  434     | expr . "is" basic_type_declaration
  435     | expr . "is" "name"
  436     | expr . "as" "name"
  439     | expr . "as" "type" '<' $@25 type_declaration '>' $@26
  440     | expr . "as" basic_type_declaration
  441     | expr . '?' "as" "name"
  444     | expr . '?' "as" "type" '<' $@27 type_declaration '>' $@28
  445     | expr . '?' "as" basic_type_declaration
  453     | expr . "<|" expr
  454     | expr . "|>" expr
  455     | expr . "|>" basic_type_declaration
  459 expr_mtag: "$i" '(' expr . ')'
  466          | expr . '.' "$f" '(' expr ')'
  467          | expr . "?." "$f" '(' expr ')'
  468          | expr . '.' '.' "$f" '(' expr ')'
  469          | expr . '.' "?." "$f" '(' expr ')'
  470          | expr . "as" "$f" '(' expr ')'
  471          | expr . '?' "as" "$f" '(' expr ')'
  472          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 609
    "as"   shift, and go to state 610
    "<<"   shift, and go to state 611
    ">>"   shift, and go to state 612
    "++"   shift, and go to state 613
    "--"   shift, and go to state 614
    "<="   shift, and go to state 615
    ">="   shift, and go to state 616
    "=="   shift, and go to state 617
    "!="   shift, and go to state 618
    "->"   shift, and go to state 619
    "??"   shift, and go to state 620
    "?."   shift, and go to state 621
    "?["   shift, and go to state 622
    "<|"   shift, and go to state 623
    "|>"   shift, and go to state 624
    "<<<"  shift, and go to state 625
    ">>>"  shift, and go to state 626
    "&&"   shift, and go to state 627
    "||"   shift, and go to state 628
    "^^"   shift, and go to state 629
    ".."   shift, and go to state 630
    '?'    shift, and go to state 631
    '|'    shift, and go to state 632
    '^'    shift, and go to state 633
    '&'    shift, and go to state 634
    '<'    shift, and go to state 635
    '>'    shift, and go to state 636
    '-'    shift, and go to state 637
    '+'    shift, and go to state 638
    '*'    shift, and go to state 639
    '/'    shift, and go to state 640
    '%'    shift, and go to state 641
    '.'    shift, and go to state 642
    '['    shift, and go to state 643
    ')'    shift, and go to state 983


State 770

  347 expr_method_call: expr . "->" "name" '(' ')'
  348                 | expr . "->" "name" '(' expr_list ')'
  358 expr_field: expr . '.' "name"
  359           | expr . '.' '.' "name"
  360           | expr . '.' "name" '(' ')'
  361           | expr . '.' "name" '(' expr_list ')'
  362           | expr . '.' basic_type_declaration '(' ')'
  363           | expr . '.' basic_type_declaration '(' expr_list ')'
  366           | expr . '.' $@21 error $@22
  388 expr: expr . "<<" expr
  389     | expr . ">>" expr
  390     | expr . "<<<" expr
  391     | expr . ">>>" expr
  392     | expr . '+' expr
  393     | expr . '-' expr
  394     | expr . '*' expr
  395     | expr . '/' expr
  396     | expr . '%' expr
  397     | expr . '<' expr
  398     | expr . '>' expr
  399     | expr . "==" expr
  400     | expr . "!=" expr
  401     | expr . "<=" expr
  402     | expr . ">=" expr
  403     | expr . '&' expr
  404     | expr . '|' expr
  405     | expr . '^' expr
  406     | expr . "&&" expr
  407     | expr . "||" expr
  408     | expr . "^^" expr
  409     | expr . ".." expr
  412     | expr . "++"
  413     | expr . "--"
  415     | expr . '[' expr ']'
  416     | expr . '.' '[' expr ']'
  417     | expr . "?[" expr ']'
  418     | expr . '.' "?[" expr ']'
  419     | expr . "?." "name"
  420     | expr . '.' "?." "name"
  429     | expr . "??" expr
  430     | expr . '?' expr ':' expr
  433     | expr . "is" "type" '<' $@23 type_declaration_no_options '>' $@24
  434     | expr . "is" basic_type_declaration
  435     | expr . "is" "name"
  436     | expr . "as" "name"
  439     | expr . "as" "type" '<' $@25 type_declaration '>' $@26
  440     | expr . "as" basic_type_declaration
  441     | expr . '?' "as" "name"
  444     | expr . '?' "as" "type" '<' $@27 type_declaration '>' $@28
  445     | expr . '?' "as" basic_type_declaration
  453     | expr . "<|" expr
  454     | expr . "|>" expr
  455     | expr . "|>" basic_type_declaration
  460 expr_mtag: "$v" '(' expr . ')'
  466          | expr . '.' "$f" '(' expr ')'
  467          | expr . "?." "$f" '(' expr ')'
  468          | expr . '.' '.' "$f" '(' expr ')'
  469          | expr . '.' "?." "$f" '(' expr ')'
  470          | expr . "as" "$f" '(' expr ')'
  471          | expr . '?' "as" "$f" '(' expr ')'
  472          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 609
    "as"   shift, and go to state 610
    "<<"   shift, and go to state 611
    ">>"   shift, and go to state 612
    "++"   shift, and go to state 613
    "--"   shift, and go to state 614
    "<="   shift, and go to state 615
    ">="   shift, and go to state 616
    "=="   shift, and go to state 617
    "!="   shift, and go to state 618
    "->"   shift, and go to state 619
    "??"   shift, and go to state 620
    "?."   shift, and go to state 621
    "?["   shift, and go to state 622
    "<|"   shift, and go to state 623
    "|>"   shift, and go to state 624
    "<<<"  shift, and go to state 625
    ">>>"  shift, and go to state 626
    "&&"   shift, and go to state 627
    "||"   shift, and go to state 628
    "^^"   shift, and go to state 629
    ".."   shift, and go to state 630
    '?'    shift, and go to state 631
    '|'    shift, and go to state 632
    '^'    shift, and go to state 633
    '&'    shift, and go to state 634
    '<'    shift, and go to state 635
    '>'    shift, and go to state 636
    '-'    shift, and go to state 637
    '+'    shift, and go to state 638
    '*'    shift, and go to state 639
    '/'    shift, and go to state 640
    '%'    shift, and go to state 641
    '.'    shift, and go to state 642
    '['    shift, and go to state 643
    ')'    shift, and go to state 984


State 771

  347 expr_method_call: expr . "->" "name" '(' ')'
  348                 | expr . "->" "name" '(' expr_list ')'
  358 expr_field: expr . '.' "name"
  359           | expr . '.' '.' "name"
  360           | expr . '.' "name" '(' ')'
  361           | expr . '.' "name" '(' expr_list ')'
  362           | expr . '.' basic_type_declaration '(' ')'
  363           | expr . '.' basic_type_declaration '(' expr_list ')'
  366           | expr . '.' $@21 error $@22
  388 expr: expr . "<<" expr
  389     | expr . ">>" expr
  390     | expr . "<<<" expr
  391     | expr . ">>>" expr
  392     | expr . '+' expr
  393     | expr . '-' expr
  394     | expr . '*' expr
  395     | expr . '/' expr
  396     | expr . '%' expr
  397     | expr . '<' expr
  398     | expr . '>' expr
  399     | expr . "==" expr
  400     | expr . "!=" expr
  401     | expr . "<=" expr
  402     | expr . ">=" expr
  403     | expr . '&' expr
  404     | expr . '|' expr
  405     | expr . '^' expr
  406     | expr . "&&" expr
  407     | expr . "||" expr
  408     | expr . "^^" expr
  409     | expr . ".." expr
  412     | expr . "++"
  413     | expr . "--"
  415     | expr . '[' expr ']'
  416     | expr . '.' '[' expr ']'
  417     | expr . "?[" expr ']'
  418     | expr . '.' "?[" expr ']'
  419     | expr . "?." "name"
  420     | expr . '.' "?." "name"
  429     | expr . "??" expr
  430     | expr . '?' expr ':' expr
  433     | expr . "is" "type" '<' $@23 type_declaration_no_options '>' $@24
  434     | expr . "is" basic_type_declaration
  435     | expr . "is" "name"
  436     | expr . "as" "name"
  439     | expr . "as" "type" '<' $@25 type_declaration '>' $@26
  440     | expr . "as" basic_type_declaration
  441     | expr . '?' "as" "name"
  444     | expr . '?' "as" "type" '<' $@27 type_declaration '>' $@28
  445     | expr . '?' "as" basic_type_declaration
  453     | expr . "<|" expr
  454     | expr . "|>" expr
  455     | expr . "|>" basic_type_declaration
  461 expr_mtag: "$b" '(' expr . ')'
  466          | expr . '.' "$f" '(' expr ')'
  467          | expr . "?." "$f" '(' expr ')'
  468          | expr . '.' '.' "$f" '(' expr ')'
  469          | expr . '.' "?." "$f" '(' expr ')'
  470          | expr . "as" "$f" '(' expr ')'
  471          | expr . '?' "as" "$f" '(' expr ')'
  472          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 609
    "as"   shift, and go to state 610
    "<<"   shift, and go to state 611
    ">>"   shift, and go to state 612
    "++"   shift, and go to state 613
    "--"   shift, and go to state 614
    "<="   shift, and go to state 615
    ">="   shift, and go to state 616
    "=="   shift, and go to state 617
    "!="   shift, and go to state 618
    "->"   shift, and go to state 619
    "??"   shift, and go to state 620
    "?."   shift, and go to state 621
    "?["   shift, and go to state 622
    "<|"   shift, and go to state 623
    "|>"   shift, and go to state 624
    "<<<"  shift, and go to state 625
    ">>>"  shift, and go to state 626
    "&&"   shift, and go to state 627
    "||"   shift, and go to state 628
    "^^"   shift, and go to state 629
    ".."   shift, and go to state 630
    '?'    shift, and go to state 631
    '|'    shift, and go to state 632
    '^'    shift, and go to state 633
    '&'    shift, and go to state 634
    '<'    shift, and go to state 635
    '>'    shift, and go to state 636
    '-'    shift, and go to state 637
    '+'    shift, and go to state 638
    '*'    shift, and go to state 639
    '/'    shift, and go to state 640
    '%'    shift, and go to state 641
    '.'    shift, and go to state 642
    '['    shift, and go to state 643
    ')'    shift, and go to state 985


State 772

  347 expr_method_call: expr . "->" "name" '(' ')'
  348                 | expr . "->" "name" '(' expr_list ')'
  358 expr_field: expr . '.' "name"
  359           | expr . '.' '.' "name"
  360           | expr . '.' "name" '(' ')'
  361           | expr . '.' "name" '(' expr_list ')'
  362           | expr . '.' basic_type_declaration '(' ')'
  363           | expr . '.' basic_type_declaration '(' expr_list ')'
  366           | expr . '.' $@21 error $@22
  388 expr: expr . "<<" expr
  389     | expr . ">>" expr
  390     | expr . "<<<" expr
  391     | expr . ">>>" expr
  392     | expr . '+' expr
  393     | expr . '-' expr
  394     | expr . '*' expr
  395     | expr . '/' expr
  396     | expr . '%' expr
  397     | expr . '<' expr
  398     | expr . '>' expr
  399     | expr . "==" expr
  400     | expr . "!=" expr
  401     | expr . "<=" expr
  402     | expr . ">=" expr
  403     | expr . '&' expr
  404     | expr . '|' expr
  405     | expr . '^' expr
  406     | expr . "&&" expr
  407     | expr . "||" expr
  408     | expr . "^^" expr
  409     | expr . ".." expr
  412     | expr . "++"
  413     | expr . "--"
  415     | expr . '[' expr ']'
  416     | expr . '.' '[' expr ']'
  417     | expr . "?[" expr ']'
  418     | expr . '.' "?[" expr ']'
  419     | expr . "?." "name"
  420     | expr . '.' "?." "name"
  429     | expr . "??" expr
  430     | expr . '?' expr ':' expr
  433     | expr . "is" "type" '<' $@23 type_declaration_no_options '>' $@24
  434     | expr . "is" basic_type_declaration
  435     | expr . "is" "name"
  436     | expr . "as" "name"
  439     | expr . "as" "type" '<' $@25 type_declaration '>' $@26
  440     | expr . "as" basic_type_declaration
  441     | expr . '?' "as" "name"
  444     | expr . '?' "as" "type" '<' $@27 type_declaration '>' $@28
  445     | expr . '?' "as" basic_type_declaration
  453     | expr . "<|" expr
  454     | expr . "|>" expr
  455     | expr . "|>" basic_type_declaration
  462 expr_mtag: "$a" '(' expr . ')'
  466          | expr . '.' "$f" '(' expr ')'
  467          | expr . "?." "$f" '(' expr ')'
  468          | expr . '.' '.' "$f" '(' expr ')'
  469          | expr . '.' "?." "$f" '(' expr ')'
  470          | expr . "as" "$f" '(' expr ')'
  471          | expr . '?' "as" "$f" '(' expr ')'
  472          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 609
    "as"   shift, and go to state 610
    "<<"   shift, and go to state 611
    ">>"   shift, and go to state 612
    "++"   shift, and go to state 613
    "--"   shift, and go to state 614
    "<="   shift, and go to state 615
    ">="   shift, and go to state 616
    "=="   shift, and go to state 617
    "!="   shift, and go to state 618
    "->"   shift, and go to state 619
    "??"   shift, and go to state 620
    "?."   shift, and go to state 621
    "?["   shift, and go to state 622
    "<|"   shift, and go to state 623
    "|>"   shift, and go to state 624
    "<<<"  shift, and go to state 625
    ">>>"  shift, and go to state 626
    "&&"   shift, and go to state 627
    "||"   shift, and go to state 628
    "^^"   shift, and go to state 629
    ".."   shift, and go to state 630
    '?'    shift, and go to state 631
    '|'    shift, and go to state 632
    '^'    shift, and go to state 633
    '&'    shift, and go to state 634
    '<'    shift, and go to state 635
    '>'    shift, and go to state 636
    '-'    shift, and go to state 637
    '+'    shift, and go to state 638
    '*'    shift, and go to state 639
    '/'    shift, and go to state 640
    '%'    shift, and go to state 641
    '.'    shift, and go to state 642
    '['    shift, and go to state 643
    ')'    shift, and go to state 986


State 773

  347 expr_method_call: expr . "->" "name" '(' ')'
  348                 | expr . "->" "name" '(' expr_list ')'
  358 expr_field: expr . '.' "name"
  359           | expr . '.' '.' "name"
  360           | expr . '.' "name" '(' ')'
  361           | expr . '.' "name" '(' expr_list ')'
  362           | expr . '.' basic_type_declaration '(' ')'
  363           | expr . '.' basic_type_declaration '(' expr_list ')'
  366           | expr . '.' $@21 error $@22
  388 expr: expr . "<<" expr
  389     | expr . ">>" expr
  390     | expr . "<<<" expr
  391     | expr . ">>>" expr
  392     | expr . '+' expr
  393     | expr . '-' expr
  394     | expr . '*' expr
  395     | expr . '/' expr
  396     | expr . '%' expr
  397     | expr . '<' expr
  398     | expr . '>' expr
  399     | expr . "==" expr
  400     | expr . "!=" expr
  401     | expr . "<=" expr
  402     | expr . ">=" expr
  403     | expr . '&' expr
  404     | expr . '|' expr
  405     | expr . '^' expr
  406     | expr . "&&" expr
  407     | expr . "||" expr
  408     | expr . "^^" expr
  409     | expr . ".." expr
  412     | expr . "++"
  413     | expr . "--"
  415     | expr . '[' expr ']'
  416     | expr . '.' '[' expr ']'
  417     | expr . "?[" expr ']'
  418     | expr . '.' "?[" expr ']'
  419     | expr . "?." "name"
  420     | expr . '.' "?." "name"
  429     | expr . "??" expr
  430     | expr . '?' expr ':' expr
  433     | expr . "is" "type" '<' $@23 type_declaration_no_options '>' $@24
  434     | expr . "is" basic_type_declaration
  435     | expr . "is" "name"
  436     | expr . "as" "name"
  439     | expr . "as" "type" '<' $@25 type_declaration '>' $@26
  440     | expr . "as" basic_type_declaration
  441     | expr . '?' "as" "name"
  444     | expr . '?' "as" "type" '<' $@27 type_declaration '>' $@28
  445     | expr . '?' "as" basic_type_declaration
  453     | expr . "<|" expr
  454     | expr . "|>" expr
  455     | expr . "|>" basic_type_declaration
  464 expr_mtag: "$c" '(' expr . ')' '(' ')'
  465          | "$c" '(' expr . ')' '(' expr_list ')'
  466          | expr . '.' "$f" '(' expr ')'
  467          | expr . "?." "$f" '(' expr ')'
  468          | expr . '.' '.' "$f" '(' expr ')'
  469          | expr . '.' "?." "$f" '(' expr ')'
  470          | expr . "as" "$f" '(' expr ')'
  471          | expr . '?' "as" "$f" '(' expr ')'
  472          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 609
    "as"   shift, and go to state 610
    "<<"   shift, and go to state 611
    ">>"   shift, and go to state 612
    "++"   shift, and go to state 613
    "--"   shift, and go to state 614
    "<="   shift, and go to state 615
    ">="   shift, and go to state 616
    "=="   shift, and go to state 617
    "!="   shift, and go to state 618
    "->"   shift, and go to state 619
    "??"   shift, and go to state 620
    "?."   shift, and go to state 621
    "?["   shift, and go to state 622
    "<|"   shift, and go to state 623
    "|>"   shift, and go to state 624
    "<<<"  shift, and go to state 625
    ">>>"  shift, and go to state 626
    "&&"   shift, and go to state 627
    "||"   shift, and go to state 628
    "^^"   shift, and go to state 629
    ".."   shift, and go to state 630
    '?'    shift, and go to state 631
    '|'    shift, and go to state 632
    '^'    shift, and go to state 633
    '&'    shift, and go to state 634
    '<'    shift, and go to state 635
    '>'    shift, and go to state 636
    '-'    shift, and go to state 637
    '+'    shift, and go to state 638
    '*'    shift, and go to state 639
    '/'    shift, and go to state 640
    '%'    shift, and go to state 641
    '.'    shift, and go to state 642
    '['    shift, and go to state 643
    ')'    shift, and go to state 987


State 774

   32 string_builder: "start of the string" string_builder_body "end of the string" .

    $default  reduce using rule 32 (string_builder)


State 775

   31 string_builder_body: string_builder_body "{" . expr "}"

    "struct"                          shift, and go to state 409
    "class"                           shift, and go to state 410
    "true"                            shift, and go to state 411
    "false"                           shift, and go to state 412
    "new"                             shift, and go to state 413
    "typeinfo"                        shift, and go to state 414
    "type"                            shift, and go to state 415
    "array"                           shift, and go to state 416
    "null"                            shift, and go to state 417
    "table"                           shift, and go to state 418
    "deref"                           shift, and go to state 419
    "cast"                            shift, and go to state 420
    "upcast"                          shift, and go to state 421
    "addr"                            shift, and go to state 422
    "reinterpret"                     shift, and go to state 423
    "unsafe"                          shift, and go to state 424
    "fixed_array"                     shift, and go to state 425
    "default"                         shift, and go to state 426
    "bool"                            shift, and go to state 225
    "void"                            shift, and go to state 226
    "string"                          shift, and go to state 227
    "int"                             shift, and go to state 229
    "int2"                            shift, and go to state 230
    "int3"                            shift, and go to state 231
    "int4"                            shift, and go to state 232
    "uint"                            shift, and go to state 233
    "bitfield"                        shift, and go to state 427
    "uint2"                           shift, and go to state 235
    "uint3"                           shift, and go to state 236
    "uint4"                           shift, and go to state 237
    "float"                           shift, and go to state 238
    "float2"                          shift, and go to state 239
    "float3"                          shift, and go to state 240
    "float4"                          shift, and go to state 241
    "range"                           shift, and go to state 242
    "urange"                          shift, and go to state 243
    "range64"                         shift, and go to state 244
    "urange64"                        shift, and go to state 245
    "int64"                           shift, and go to state 247
    "uint64"                          shift, and go to state 248
    "double"                          shift, and go to state 249
    "int8"                            shift, and go to state 252
    "uint8"                           shift, and go to state 253
    "int16"                           shift, and go to state 254
    "uint16"                          shift, and go to state 255
    "tuple"                           shift, and go to state 428
    "variant"                         shift, and go to state 429
    "generator"                       shift, and go to state 430
    "++"                              shift, and go to state 431
    "--"                              shift, and go to state 432
    "::"                              shift, and go to state 55
    "$$"                              shift, and go to state 433
    "$i"                              shift, and go to state 434
    "$v"                              shift, and go to state 435
    "$b"                              shift, and go to state 436
    "$a"                              shift, and go to state 437
    "$c"                              shift, and go to state 438
    "..."                             shift, and go to state 439
    "integer constant"                shift, and go to state 440
    "long integer constant"           shift, and go to state 441
    "unsigned integer constant"       shift, and go to state 442
    "unsigned long integer constant"  shift, and go to state 443
    "unsigned int8 constant"          shift, and go to state 444
    "floating point constant"         shift, and go to state 445
    "double constant"                 shift, and go to state 446
    "name"                            shift, and go to state 56
    "start of the string"             shift, and go to state 447
    "begin of code block"             shift, and go to state 448
    '-'                               shift, and go to state 449
    '+'                               shift, and go to state 450
    '*'                               shift, and go to state 451
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 452
    '!'                               shift, and go to state 453
    '['                               shift, and go to state 454
    '('                               shift, and go to state 455
    '$'                               shift, and go to state 456
    '@'                               shift, and go to state 457

    string_builder          go to state 458
    expr_reader             go to state 459
    expr_call_pipe          go to state 460
    name_in_namespace       go to state 461
    expr_new                go to state 462
    expr_cast               go to state 463
    expr_type_decl          go to state 464
    expr_type_info          go to state 465
    block_or_lambda         go to state 466
    expr_full_block         go to state 467
    expr_numeric_const      go to state 468
    expr_named_call         go to state 469
    expr_method_call        go to state 470
    func_addr_expr          go to state 471
    expr_field              go to state 472
    expr_call               go to state 473
    expr                    go to state 988
    expr_mtag               go to state 475
    basic_type_declaration  go to state 476
    make_decl               go to state 477
    make_struct_decl        go to state 478
    make_tuple_call         go to state 479
    make_dim_decl           go to state 480
    make_table_decl         go to state 481
    array_comprehension     go to state 482


State 776

   25 character_sequence: character_sequence . STRING_CHARACTER
   26                   | character_sequence . STRING_CHARACTER_ESC
   30 string_builder_body: string_builder_body character_sequence .

    STRING_CHARACTER      shift, and go to state 214
    STRING_CHARACTER_ESC  shift, and go to state 215

    $default  reduce using rule 30 (string_builder_body)


State 777

  797 array_comprehension: "begin of code block" "for" '(' . variable_name_with_pos_list "in" expr_list ')' "end of expression" make_map_tuple array_comprehension_where "end of code block"

    "$i"    shift, and go to state 678
    "name"  shift, and go to state 679

    variable_name_with_pos_list  go to state 989


State 778

  761 make_map_tuple: expr "=>" . expr

    "struct"                          shift, and go to state 409
    "class"                           shift, and go to state 410
    "true"                            shift, and go to state 411
    "false"                           shift, and go to state 412
    "new"                             shift, and go to state 413
    "typeinfo"                        shift, and go to state 414
    "type"                            shift, and go to state 415
    "array"                           shift, and go to state 416
    "null"                            shift, and go to state 417
    "table"                           shift, and go to state 418
    "deref"                           shift, and go to state 419
    "cast"                            shift, and go to state 420
    "upcast"                          shift, and go to state 421
    "addr"                            shift, and go to state 422
    "reinterpret"                     shift, and go to state 423
    "unsafe"                          shift, and go to state 424
    "fixed_array"                     shift, and go to state 425
    "default"                         shift, and go to state 426
    "bool"                            shift, and go to state 225
    "void"                            shift, and go to state 226
    "string"                          shift, and go to state 227
    "int"                             shift, and go to state 229
    "int2"                            shift, and go to state 230
    "int3"                            shift, and go to state 231
    "int4"                            shift, and go to state 232
    "uint"                            shift, and go to state 233
    "bitfield"                        shift, and go to state 427
    "uint2"                           shift, and go to state 235
    "uint3"                           shift, and go to state 236
    "uint4"                           shift, and go to state 237
    "float"                           shift, and go to state 238
    "float2"                          shift, and go to state 239
    "float3"                          shift, and go to state 240
    "float4"                          shift, and go to state 241
    "range"                           shift, and go to state 242
    "urange"                          shift, and go to state 243
    "range64"                         shift, and go to state 244
    "urange64"                        shift, and go to state 245
    "int64"                           shift, and go to state 247
    "uint64"                          shift, and go to state 248
    "double"                          shift, and go to state 249
    "int8"                            shift, and go to state 252
    "uint8"                           shift, and go to state 253
    "int16"                           shift, and go to state 254
    "uint16"                          shift, and go to state 255
    "tuple"                           shift, and go to state 428
    "variant"                         shift, and go to state 429
    "generator"                       shift, and go to state 430
    "++"                              shift, and go to state 431
    "--"                              shift, and go to state 432
    "::"                              shift, and go to state 55
    "$$"                              shift, and go to state 433
    "$i"                              shift, and go to state 434
    "$v"                              shift, and go to state 435
    "$b"                              shift, and go to state 436
    "$a"                              shift, and go to state 437
    "$c"                              shift, and go to state 438
    "..."                             shift, and go to state 439
    "integer constant"                shift, and go to state 440
    "long integer constant"           shift, and go to state 441
    "unsigned integer constant"       shift, and go to state 442
    "unsigned long integer constant"  shift, and go to state 443
    "unsigned int8 constant"          shift, and go to state 444
    "floating point constant"         shift, and go to state 445
    "double constant"                 shift, and go to state 446
    "name"                            shift, and go to state 56
    "start of the string"             shift, and go to state 447
    "begin of code block"             shift, and go to state 448
    '-'                               shift, and go to state 449
    '+'                               shift, and go to state 450
    '*'                               shift, and go to state 451
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 452
    '!'                               shift, and go to state 453
    '['                               shift, and go to state 454
    '('                               shift, and go to state 455
    '$'                               shift, and go to state 456
    '@'                               shift, and go to state 457

    string_builder          go to state 458
    expr_reader             go to state 459
    expr_call_pipe          go to state 460
    name_in_namespace       go to state 461
    expr_new                go to state 462
    expr_cast               go to state 463
    expr_type_decl          go to state 464
    expr_type_info          go to state 465
    block_or_lambda         go to state 466
    expr_full_block         go to state 467
    expr_numeric_const      go to state 468
    expr_named_call         go to state 469
    expr_method_call        go to state 470
    func_addr_expr          go to state 471
    expr_field              go to state 472
    expr_call               go to state 473
    expr                    go to state 990
    expr_mtag               go to state 475
    basic_type_declaration  go to state 476
    make_decl               go to state 477
    make_struct_decl        go to state 478
    make_tuple_call         go to state 479
    make_dim_decl           go to state 480
    make_table_decl         go to state 481
    array_comprehension     go to state 482


State 779

  786 expr_map_tuple_list: expr_map_tuple_list ',' . make_map_tuple
  794 optional_comma: ',' .

    "struct"                          shift, and go to state 409
    "class"                           shift, and go to state 410
    "true"                            shift, and go to state 411
    "false"                           shift, and go to state 412
    "new"                             shift, and go to state 413
    "typeinfo"                        shift, and go to state 414
    "type"                            shift, and go to state 415
    "array"                           shift, and go to state 416
    "null"                            shift, and go to state 417
    "table"                           shift, and go to state 418
    "deref"                           shift, and go to state 419
    "cast"                            shift, and go to state 420
    "upcast"                          shift, and go to state 421
    "addr"                            shift, and go to state 422
    "reinterpret"                     shift, and go to state 423
    "unsafe"                          shift, and go to state 424
    "fixed_array"                     shift, and go to state 425
    "default"                         shift, and go to state 426
    "bool"                            shift, and go to state 225
    "void"                            shift, and go to state 226
    "string"                          shift, and go to state 227
    "int"                             shift, and go to state 229
    "int2"                            shift, and go to state 230
    "int3"                            shift, and go to state 231
    "int4"                            shift, and go to state 232
    "uint"                            shift, and go to state 233
    "bitfield"                        shift, and go to state 427
    "uint2"                           shift, and go to state 235
    "uint3"                           shift, and go to state 236
    "uint4"                           shift, and go to state 237
    "float"                           shift, and go to state 238
    "float2"                          shift, and go to state 239
    "float3"                          shift, and go to state 240
    "float4"                          shift, and go to state 241
    "range"                           shift, and go to state 242
    "urange"                          shift, and go to state 243
    "range64"                         shift, and go to state 244
    "urange64"                        shift, and go to state 245
    "int64"                           shift, and go to state 247
    "uint64"                          shift, and go to state 248
    "double"                          shift, and go to state 249
    "int8"                            shift, and go to state 252
    "uint8"                           shift, and go to state 253
    "int16"                           shift, and go to state 254
    "uint16"                          shift, and go to state 255
    "tuple"                           shift, and go to state 428
    "variant"                         shift, and go to state 429
    "generator"                       shift, and go to state 430
    "++"                              shift, and go to state 431
    "--"                              shift, and go to state 432
    "::"                              shift, and go to state 55
    "$$"                              shift, and go to state 433
    "$i"                              shift, and go to state 434
    "$v"                              shift, and go to state 435
    "$b"                              shift, and go to state 436
    "$a"                              shift, and go to state 437
    "$c"                              shift, and go to state 438
    "..."                             shift, and go to state 439
    "integer constant"                shift, and go to state 440
    "long integer constant"           shift, and go to state 441
    "unsigned integer constant"       shift, and go to state 442
    "unsigned long integer constant"  shift, and go to state 443
    "unsigned int8 constant"          shift, and go to state 444
    "floating point constant"         shift, and go to state 445
    "double constant"                 shift, and go to state 446
    "name"                            shift, and go to state 56
    "start of the string"             shift, and go to state 447
    "begin of code block"             shift, and go to state 448
    '-'                               shift, and go to state 449
    '+'                               shift, and go to state 450
    '*'                               shift, and go to state 451
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 452
    '!'                               shift, and go to state 453
    '['                               shift, and go to state 454
    '('                               shift, and go to state 455
    '$'                               shift, and go to state 456
    '@'                               shift, and go to state 457

    $default  reduce using rule 794 (optional_comma)

    string_builder          go to state 458
    expr_reader             go to state 459
    expr_call_pipe          go to state 460
    name_in_namespace       go to state 461
    expr_new                go to state 462
    expr_cast               go to state 463
    expr_type_decl          go to state 464
    expr_type_info          go to state 465
    block_or_lambda         go to state 466
    expr_full_block         go to state 467
    expr_numeric_const      go to state 468
    expr_named_call         go to state 469
    expr_method_call        go to state 470
    func_addr_expr          go to state 471
    expr_field              go to state 472
    expr_call               go to state 473
    expr                    go to state 589
    expr_mtag               go to state 475
    basic_type_declaration  go to state 476
    make_decl               go to state 477
    make_struct_decl        go to state 478
    make_map_tuple          go to state 991
    make_tuple_call         go to state 479
    make_dim_decl           go to state 480
    make_table_decl         go to state 481
    array_comprehension     go to state 482


State 780

  787 make_table_decl: "begin of code block" expr_map_tuple_list optional_comma . "end of code block"

    "end of code block"  shift, and go to state 992


State 781

  795 array_comprehension: '[' "for" '(' . variable_name_with_pos_list "in" expr_list ')' "end of expression" expr array_comprehension_where ']'

    "$i"    shift, and go to state 678
    "name"  shift, and go to state 679

    variable_name_with_pos_list  go to state 993


State 782

  796 array_comprehension: '[' "iterator" "for" . '(' variable_name_with_pos_list "in" expr_list ')' "end of expression" expr array_comprehension_where ']'

    '('  shift, and go to state 994


State 783

  300 expr_list: expr_list ',' . expr
  794 optional_comma: ',' .

    "struct"                          shift, and go to state 409
    "class"                           shift, and go to state 410
    "true"                            shift, and go to state 411
    "false"                           shift, and go to state 412
    "new"                             shift, and go to state 413
    "typeinfo"                        shift, and go to state 414
    "type"                            shift, and go to state 415
    "array"                           shift, and go to state 416
    "null"                            shift, and go to state 417
    "table"                           shift, and go to state 418
    "deref"                           shift, and go to state 419
    "cast"                            shift, and go to state 420
    "upcast"                          shift, and go to state 421
    "addr"                            shift, and go to state 422
    "reinterpret"                     shift, and go to state 423
    "unsafe"                          shift, and go to state 424
    "fixed_array"                     shift, and go to state 425
    "default"                         shift, and go to state 426
    "bool"                            shift, and go to state 225
    "void"                            shift, and go to state 226
    "string"                          shift, and go to state 227
    "int"                             shift, and go to state 229
    "int2"                            shift, and go to state 230
    "int3"                            shift, and go to state 231
    "int4"                            shift, and go to state 232
    "uint"                            shift, and go to state 233
    "bitfield"                        shift, and go to state 427
    "uint2"                           shift, and go to state 235
    "uint3"                           shift, and go to state 236
    "uint4"                           shift, and go to state 237
    "float"                           shift, and go to state 238
    "float2"                          shift, and go to state 239
    "float3"                          shift, and go to state 240
    "float4"                          shift, and go to state 241
    "range"                           shift, and go to state 242
    "urange"                          shift, and go to state 243
    "range64"                         shift, and go to state 244
    "urange64"                        shift, and go to state 245
    "int64"                           shift, and go to state 247
    "uint64"                          shift, and go to state 248
    "double"                          shift, and go to state 249
    "int8"                            shift, and go to state 252
    "uint8"                           shift, and go to state 253
    "int16"                           shift, and go to state 254
    "uint16"                          shift, and go to state 255
    "tuple"                           shift, and go to state 428
    "variant"                         shift, and go to state 429
    "generator"                       shift, and go to state 430
    "++"                              shift, and go to state 431
    "--"                              shift, and go to state 432
    "::"                              shift, and go to state 55
    "$$"                              shift, and go to state 433
    "$i"                              shift, and go to state 434
    "$v"                              shift, and go to state 435
    "$b"                              shift, and go to state 436
    "$a"                              shift, and go to state 437
    "$c"                              shift, and go to state 438
    "..."                             shift, and go to state 439
    "integer constant"                shift, and go to state 440
    "long integer constant"           shift, and go to state 441
    "unsigned integer constant"       shift, and go to state 442
    "unsigned long integer constant"  shift, and go to state 443
    "unsigned int8 constant"          shift, and go to state 444
    "floating point constant"         shift, and go to state 445
    "double constant"                 shift, and go to state 446
    "name"                            shift, and go to state 56
    "start of the string"             shift, and go to state 447
    "begin of code block"             shift, and go to state 448
    '-'                               shift, and go to state 449
    '+'                               shift, and go to state 450
    '*'                               shift, and go to state 451
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 452
    '!'                               shift, and go to state 453
    '['                               shift, and go to state 454
    '('                               shift, and go to state 455
    '$'                               shift, and go to state 456
    '@'                               shift, and go to state 457

    $default  reduce using rule 794 (optional_comma)

    string_builder          go to state 458
    expr_reader             go to state 459
    expr_call_pipe          go to state 460
    name_in_namespace       go to state 461
    expr_new                go to state 462
    expr_cast               go to state 463
    expr_type_decl          go to state 464
    expr_type_info          go to state 465
    block_or_lambda         go to state 466
    expr_full_block         go to state 467
    expr_numeric_const      go to state 468
    expr_named_call         go to state 469
    expr_method_call        go to state 470
    func_addr_expr          go to state 471
    expr_field              go to state 472
    expr_call               go to state 473
    expr                    go to state 995
    expr_mtag               go to state 475
    basic_type_declaration  go to state 476
    make_decl               go to state 477
    make_struct_decl        go to state 478
    make_tuple_call         go to state 479
    make_dim_decl           go to state 480
    make_table_decl         go to state 481
    array_comprehension     go to state 482


State 784

  767 make_dim_decl: '[' expr_list optional_comma . ']'

    ']'  shift, and go to state 996


State 785

  414 expr: '(' expr_list optional_comma . ')'

    ')'  shift, and go to state 997


State 786

  350 func_addr_name: "$i" . '(' expr ')'

    '('  shift, and go to state 998


State 787

  473 expr_mtag: '@' '@' "$c" . '(' expr ')'

    '('  shift, and go to state 999


State 788

  354 func_addr_expr: '@' '@' '<' . $@17 type_declaration_no_options '>' $@18 func_addr_name
  357               | '@' '@' '<' . $@19 optional_function_argument_list optional_function_type '>' $@20 func_addr_name

    ':'       reduce using rule 355 ($@19)
    '>'       reduce using rule 355 ($@19)
    '('       reduce using rule 355 ($@19)
    $default  reduce using rule 352 ($@17)

    $@17  go to state 1000
    $@19  go to state 1001


State 789

  349 func_addr_name: name_in_namespace .

    $default  reduce using rule 349 (func_addr_name)


State 790

  351 func_addr_expr: '@' '@' func_addr_name .

    $default  reduce using rule 351 (func_addr_expr)


State 791

  368 expr_call: name_in_namespace '(' "uninitialized" . ')'
  370          | name_in_namespace '(' "uninitialized" . make_struct_single ')'

    "$f"    shift, and go to state 792
    "name"  shift, and go to state 1002
    ')'     shift, and go to state 1003

    make_struct_fields  go to state 797
    make_struct_single  go to state 1004


State 792

  735 make_struct_fields: "$f" . '(' expr ')' copy_or_move expr
  736                   | "$f" . '(' expr ')' ":=" expr

    '('  shift, and go to state 1005


State 793

  247 name_in_namespace: "name" .
  248                  | "name" . "::" "name"
  731 make_struct_fields: "name" . copy_or_move expr
  732                   | "name" . ":=" expr

    "<-"  shift, and go to state 880
    ":="  shift, and go to state 1006
    "::"  shift, and go to state 95
    '='   shift, and go to state 882

    $default  reduce using rule 247 (name_in_namespace)

    copy_or_move  go to state 1007


State 794

  345 expr_named_call: name_in_namespace '(' '[' . make_struct_fields ']' ')'
  767 make_dim_decl: '[' . expr_list optional_comma ']'
  795 array_comprehension: '[' . "for" '(' variable_name_with_pos_list "in" expr_list ')' "end of expression" expr array_comprehension_where ']'
  796                    | '[' . "iterator" "for" '(' variable_name_with_pos_list "in" expr_list ')' "end of expression" expr array_comprehension_where ']'

    "struct"                          shift, and go to state 409
    "class"                           shift, and go to state 410
    "for"                             shift, and go to state 597
    "true"                            shift, and go to state 411
    "false"                           shift, and go to state 412
    "new"                             shift, and go to state 413
    "typeinfo"                        shift, and go to state 414
    "type"                            shift, and go to state 415
    "array"                           shift, and go to state 416
    "null"                            shift, and go to state 417
    "table"                           shift, and go to state 418
    "deref"                           shift, and go to state 419
    "cast"                            shift, and go to state 420
    "upcast"                          shift, and go to state 421
    "iterator"                        shift, and go to state 598
    "addr"                            shift, and go to state 422
    "reinterpret"                     shift, and go to state 423
    "unsafe"                          shift, and go to state 424
    "fixed_array"                     shift, and go to state 425
    "default"                         shift, and go to state 426
    "bool"                            shift, and go to state 225
    "void"                            shift, and go to state 226
    "string"                          shift, and go to state 227
    "int"                             shift, and go to state 229
    "int2"                            shift, and go to state 230
    "int3"                            shift, and go to state 231
    "int4"                            shift, and go to state 232
    "uint"                            shift, and go to state 233
    "bitfield"                        shift, and go to state 427
    "uint2"                           shift, and go to state 235
    "uint3"                           shift, and go to state 236
    "uint4"                           shift, and go to state 237
    "float"                           shift, and go to state 238
    "float2"                          shift, and go to state 239
    "float3"                          shift, and go to state 240
    "float4"                          shift, and go to state 241
    "range"                           shift, and go to state 242
    "urange"                          shift, and go to state 243
    "range64"                         shift, and go to state 244
    "urange64"                        shift, and go to state 245
    "int64"                           shift, and go to state 247
    "uint64"                          shift, and go to state 248
    "double"                          shift, and go to state 249
    "int8"                            shift, and go to state 252
    "uint8"                           shift, and go to state 253
    "int16"                           shift, and go to state 254
    "uint16"                          shift, and go to state 255
    "tuple"                           shift, and go to state 428
    "variant"                         shift, and go to state 429
    "generator"                       shift, and go to state 430
    "++"                              shift, and go to state 431
    "--"                              shift, and go to state 432
    "::"                              shift, and go to state 55
    "$$"                              shift, and go to state 433
    "$i"                              shift, and go to state 434
    "$v"                              shift, and go to state 435
    "$b"                              shift, and go to state 436
    "$a"                              shift, and go to state 437
    "$c"                              shift, and go to state 438
    "$f"                              shift, and go to state 792
    "..."                             shift, and go to state 439
    "integer constant"                shift, and go to state 440
    "long integer constant"           shift, and go to state 441
    "unsigned integer constant"       shift, and go to state 442
    "unsigned long integer constant"  shift, and go to state 443
    "unsigned int8 constant"          shift, and go to state 444
    "floating point constant"         shift, and go to state 445
    "double constant"                 shift, and go to state 446
    "name"                            shift, and go to state 793
    "start of the string"             shift, and go to state 447
    "begin of code block"             shift, and go to state 448
    '-'                               shift, and go to state 449
    '+'                               shift, and go to state 450
    '*'                               shift, and go to state 451
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 452
    '!'                               shift, and go to state 453
    '['                               shift, and go to state 454
    '('                               shift, and go to state 455
    '$'                               shift, and go to state 456
    '@'                               shift, and go to state 457

    string_builder          go to state 458
    expr_reader             go to state 459
    expr_call_pipe          go to state 460
    name_in_namespace       go to state 461
    expr_new                go to state 462
    expr_cast               go to state 463
    expr_type_decl          go to state 464
    expr_type_info          go to state 465
    expr_list               go to state 599
    block_or_lambda         go to state 466
    expr_full_block         go to state 467
    expr_numeric_const      go to state 468
    expr_named_call         go to state 469
    expr_method_call        go to state 470
    func_addr_expr          go to state 471
    expr_field              go to state 472
    expr_call               go to state 473
    expr                    go to state 600
    expr_mtag               go to state 475
    basic_type_declaration  go to state 476
    make_decl               go to state 477
    make_struct_fields      go to state 1008
    make_struct_decl        go to state 478
    make_tuple_call         go to state 479
    make_dim_decl           go to state 480
    make_table_decl         go to state 481
    array_comprehension     go to state 482


State 795

  367 expr_call: name_in_namespace '(' ')' .

    $default  reduce using rule 367 (expr_call)


State 796

  300 expr_list: expr_list . ',' expr
  346 expr_named_call: name_in_namespace '(' expr_list . ',' '[' make_struct_fields ']' ')'
  371 expr_call: name_in_namespace '(' expr_list . ')'

    ','  shift, and go to state 1009
    ')'  shift, and go to state 1010


State 797

  733 make_struct_fields: make_struct_fields . ',' "name" copy_or_move expr
  734                   | make_struct_fields . ',' "name" ":=" expr
  737                   | make_struct_fields . ',' "$f" '(' expr ')' copy_or_move expr
  738                   | make_struct_fields . ',' "$f" '(' expr ')' ":=" expr
  740 make_struct_single: make_struct_fields .

    ','  shift, and go to state 1011

    $default  reduce using rule 740 (make_struct_single)


State 798

  369 expr_call: name_in_namespace '(' make_struct_single . ')'

    ')'  shift, and go to state 1012


State 799

  315 optional_capture_list: "capture" . '(' capture_list ')'

    '('  shift, and go to state 1013


State 800

  316 expr_full_block: block_or_lambda optional_annotation_list optional_capture_list . optional_function_argument_list optional_function_type block_or_simple_block

    '('  shift, and go to state 324

    $default  reduce using rule 115 (optional_function_argument_list)

    optional_function_argument_list  go to state 1014


State 801

  239 expressions: expressions . expression_any
  240            | expressions . error
  318 expr_full_block_assumed_piped: "begin of code block" expressions . "end of code block"

    error                             shift, and go to state 683
    "struct"                          shift, and go to state 409
    "class"                           shift, and go to state 410
    "let"                             shift, and go to state 3
    "while"                           shift, and go to state 684
    "if"                              shift, and go to state 685
    "static_if"                       shift, and go to state 686
    "for"                             shift, and go to state 687
    "true"                            shift, and go to state 411
    "false"                           shift, and go to state 412
    "new"                             shift, and go to state 413
    "typeinfo"                        shift, and go to state 414
    "type"                            shift, and go to state 415
    "array"                           shift, and go to state 416
    "return"                          shift, and go to state 688
    "null"                            shift, and go to state 417
    "break"                           shift, and go to state 689
    "try"                             shift, and go to state 690
    "table"                           shift, and go to state 418
    "delete"                          shift, and go to state 691
    "deref"                           shift, and go to state 419
    "with"                            shift, and go to state 692
    "assume"                          shift, and go to state 693
    "cast"                            shift, and go to state 420
    "upcast"                          shift, and go to state 421
    "var"                             shift, and go to state 8
    "addr"                            shift, and go to state 422
    "continue"                        shift, and go to state 694
    "pass"                            shift, and go to state 695
    "reinterpret"                     shift, and go to state 423
    "label"                           shift, and go to state 696
    "goto"                            shift, and go to state 697
    "unsafe"                          shift, and go to state 698
    "fixed_array"                     shift, and go to state 425
    "default"                         shift, and go to state 426
    "bool"                            shift, and go to state 225
    "void"                            shift, and go to state 226
    "string"                          shift, and go to state 227
    "int"                             shift, and go to state 229
    "int2"                            shift, and go to state 230
    "int3"                            shift, and go to state 231
    "int4"                            shift, and go to state 232
    "uint"                            shift, and go to state 233
    "bitfield"                        shift, and go to state 427
    "uint2"                           shift, and go to state 235
    "uint3"                           shift, and go to state 236
    "uint4"                           shift, and go to state 237
    "float"                           shift, and go to state 238
    "float2"                          shift, and go to state 239
    "float3"                          shift, and go to state 240
    "float4"                          shift, and go to state 241
    "range"                           shift, and go to state 242
    "urange"                          shift, and go to state 243
    "range64"                         shift, and go to state 244
    "urange64"                        shift, and go to state 245
    "int64"                           shift, and go to state 247
    "uint64"                          shift, and go to state 248
    "double"                          shift, and go to state 249
    "int8"                            shift, and go to state 252
    "uint8"                           shift, and go to state 253
    "int16"                           shift, and go to state 254
    "uint16"                          shift, and go to state 255
    "tuple"                           shift, and go to state 428
    "variant"                         shift, and go to state 429
    "generator"                       shift, and go to state 430
    "yield"                           shift, and go to state 699
    "++"                              shift, and go to state 431
    "--"                              shift, and go to state 432
    "::"                              shift, and go to state 55
    "$$"                              shift, and go to state 433
    "$i"                              shift, and go to state 434
    "$v"                              shift, and go to state 435
    "$b"                              shift, and go to state 436
    "$a"                              shift, and go to state 437
    "$c"                              shift, and go to state 438
    "..."                             shift, and go to state 439
    "integer constant"                shift, and go to state 440
    "long integer constant"           shift, and go to state 441
    "unsigned integer constant"       shift, and go to state 442
    "unsigned long integer constant"  shift, and go to state 443
    "unsigned int8 constant"          shift, and go to state 444
    "floating point constant"         shift, and go to state 445
    "double constant"                 shift, and go to state 446
    "name"                            shift, and go to state 56
    "start of the string"             shift, and go to state 447
    "begin of code block"             shift, and go to state 448
    "end of code block"               shift, and go to state 1015
    "end of expression"               shift, and go to state 700
    '-'                               shift, and go to state 449
    '+'                               shift, and go to state 450
    '*'                               shift, and go to state 451
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 452
    '!'                               shift, and go to state 453
    '['                               shift, and go to state 454
    '('                               shift, and go to state 455
    '$'                               shift, and go to state 456
    '@'                               shift, and go to state 457

    string_builder           go to state 458
    expr_reader              go to state 459
    expression_label         go to state 701
    expression_goto          go to state 702
    if_or_static_if          go to state 703
    expression_if_one_liner  go to state 704
    expression_if_then_else  go to state 705
    expression_for_loop      go to state 706
    expression_unsafe        go to state 707
    expression_while_loop    go to state 708
    expression_with          go to state 709
    expression_with_alias    go to state 710
    expr_call_pipe           go to state 460
    expression_any           go to state 712
    name_in_namespace        go to state 461
    expression_delete        go to state 713
    expr_new                 go to state 462
    expression_break         go to state 714
    expression_continue      go to state 715
    expression_return        go to state 716
    expression_yield         go to state 717
    expression_try_catch     go to state 718
    kwd_let                  go to state 719
    expression_let           go to state 720
    expr_cast                go to state 463
    expr_type_decl           go to state 464
    expr_type_info           go to state 465
    block_or_lambda          go to state 466
    expr_full_block          go to state 467
    expr_numeric_const       go to state 468
    expr_assign              go to state 721
    expr_named_call          go to state 469
    expr_method_call         go to state 470
    func_addr_expr           go to state 471
    expr_field               go to state 472
    expr_call                go to state 473
    expr                     go to state 722
    expr_mtag                go to state 475
    basic_type_declaration   go to state 476
    make_decl                go to state 477
    make_struct_decl         go to state 478
    make_tuple_call          go to state 479
    make_dim_decl            go to state 480
    make_table_decl          go to state 481
    array_comprehension      go to state 482


State 802

  306 block_or_lambda: '@' '@' .

    $default  reduce using rule 306 (block_or_lambda)


State 803

  317 expr_full_block_assumed_piped: block_or_lambda optional_annotation_list . optional_capture_list optional_function_argument_list optional_function_type expression_block

    "capture"  shift, and go to state 799

    $default  reduce using rule 314 (optional_capture_list)

    optional_capture_list  go to state 1016


State 804

  433 expr: expr "is" "type" . '<' $@23 type_declaration_no_options '>' $@24

    '<'  shift, and go to state 1017


State 805

  472 expr_mtag: expr "is" "$f" . '(' expr ')'

    '('  shift, and go to state 1018


State 806

  435 expr: expr "is" "name" .

    $default  reduce using rule 435 (expr)


State 807

  434 expr: expr "is" basic_type_declaration .

    $default  reduce using rule 434 (expr)


State 808

  439 expr: expr "as" "type" . '<' $@25 type_declaration '>' $@26

    '<'  shift, and go to state 1019


State 809

  470 expr_mtag: expr "as" "$f" . '(' expr ')'

    '('  shift, and go to state 1020


State 810

  436 expr: expr "as" "name" .

    $default  reduce using rule 436 (expr)


State 811

  440 expr: expr "as" basic_type_declaration .

    $default  reduce using rule 440 (expr)


State 812

  347 expr_method_call: expr . "->" "name" '(' ')'
  348                 | expr . "->" "name" '(' expr_list ')'
  358 expr_field: expr . '.' "name"
  359           | expr . '.' '.' "name"
  360           | expr . '.' "name" '(' ')'
  361           | expr . '.' "name" '(' expr_list ')'
  362           | expr . '.' basic_type_declaration '(' ')'
  363           | expr . '.' basic_type_declaration '(' expr_list ')'
  366           | expr . '.' $@21 error $@22
  388 expr: expr . "<<" expr
  388     | expr "<<" expr .
  389     | expr . ">>" expr
  390     | expr . "<<<" expr
  391     | expr . ">>>" expr
  392     | expr . '+' expr
  393     | expr . '-' expr
  394     | expr . '*' expr
  395     | expr . '/' expr
  396     | expr . '%' expr
  397     | expr . '<' expr
  398     | expr . '>' expr
  399     | expr . "==" expr
  400     | expr . "!=" expr
  401     | expr . "<=" expr
  402     | expr . ">=" expr
  403     | expr . '&' expr
  404     | expr . '|' expr
  405     | expr . '^' expr
  406     | expr . "&&" expr
  407     | expr . "||" expr
  408     | expr . "^^" expr
  409     | expr . ".." expr
  412     | expr . "++"
  413     | expr . "--"
  415     | expr . '[' expr ']'
  416     | expr . '.' '[' expr ']'
  417     | expr . "?[" expr ']'
  418     | expr . '.' "?[" expr ']'
  419     | expr . "?." "name"
  420     | expr . '.' "?." "name"
  429     | expr . "??" expr
  430     | expr . '?' expr ':' expr
  433     | expr . "is" "type" '<' $@23 type_declaration_no_options '>' $@24
  434     | expr . "is" basic_type_declaration
  435     | expr . "is" "name"
  436     | expr . "as" "name"
  439     | expr . "as" "type" '<' $@25 type_declaration '>' $@26
  440     | expr . "as" basic_type_declaration
  441     | expr . '?' "as" "name"
  444     | expr . '?' "as" "type" '<' $@27 type_declaration '>' $@28
  445     | expr . '?' "as" basic_type_declaration
  453     | expr . "<|" expr
  454     | expr . "|>" expr
  455     | expr . "|>" basic_type_declaration
  466 expr_mtag: expr . '.' "$f" '(' expr ')'
  467          | expr . "?." "$f" '(' expr ')'
  468          | expr . '.' '.' "$f" '(' expr ')'
  469          | expr . '.' "?." "$f" '(' expr ')'
  470          | expr . "as" "$f" '(' expr ')'
  471          | expr . '?' "as" "$f" '(' expr ')'
  472          | expr . "is" "$f" '(' expr ')'

    "is"  shift, and go to state 609
    "as"  shift, and go to state 610
    "++"  shift, and go to state 613
    "--"  shift, and go to state 614
    "->"  shift, and go to state 619
    "??"  shift, and go to state 620
    "?."  shift, and go to state 621
    "?["  shift, and go to state 622
    "<|"  shift, and go to state 623
    "|>"  shift, and go to state 624
    '-'   shift, and go to state 637
    '+'   shift, and go to state 638
    '*'   shift, and go to state 639
    '/'   shift, and go to state 640
    '%'   shift, and go to state 641
    '.'   shift, and go to state 642
    '['   shift, and go to state 643

    $default  reduce using rule 388 (expr)


State 813

  347 expr_method_call: expr . "->" "name" '(' ')'
  348                 | expr . "->" "name" '(' expr_list ')'
  358 expr_field: expr . '.' "name"
  359           | expr . '.' '.' "name"
  360           | expr . '.' "name" '(' ')'
  361           | expr . '.' "name" '(' expr_list ')'
  362           | expr . '.' basic_type_declaration '(' ')'
  363           | expr . '.' basic_type_declaration '(' expr_list ')'
  366           | expr . '.' $@21 error $@22
  388 expr: expr . "<<" expr
  389     | expr . ">>" expr
  389     | expr ">>" expr .
  390     | expr . "<<<" expr
  391     | expr . ">>>" expr
  392     | expr . '+' expr
  393     | expr . '-' expr
  394     | expr . '*' expr
  395     | expr . '/' expr
  396     | expr . '%' expr
  397     | expr . '<' expr
  398     | expr . '>' expr
  399     | expr . "==" expr
  400     | expr . "!=" expr
  401     | expr . "<=" expr
  402     | expr . ">=" expr
  403     | expr . '&' expr
  404     | expr . '|' expr
  405     | expr . '^' expr
  406     | expr . "&&" expr
  407     | expr . "||" expr
  408     | expr . "^^" expr
  409     | expr . ".." expr
  412     | expr . "++"
  413     | expr . "--"
  415     | expr . '[' expr ']'
  416     | expr . '.' '[' expr ']'
  417     | expr . "?[" expr ']'
  418     | expr . '.' "?[" expr ']'
  419     | expr . "?." "name"
  420     | expr . '.' "?." "name"
  429     | expr . "??" expr
  430     | expr . '?' expr ':' expr
  433     | expr . "is" "type" '<' $@23 type_declaration_no_options '>' $@24
  434     | expr . "is" basic_type_declaration
  435     | expr . "is" "name"
  436     | expr . "as" "name"
  439     | expr . "as" "type" '<' $@25 type_declaration '>' $@26
  440     | expr . "as" basic_type_declaration
  441     | expr . '?' "as" "name"
  444     | expr . '?' "as" "type" '<' $@27 type_declaration '>' $@28
  445     | expr . '?' "as" basic_type_declaration
  453     | expr . "<|" expr
  454     | expr . "|>" expr
  455     | expr . "|>" basic_type_declaration
  466 expr_mtag: expr . '.' "$f" '(' expr ')'
  467          | expr . "?." "$f" '(' expr ')'
  468          | expr . '.' '.' "$f" '(' expr ')'
  469          | expr . '.' "?." "$f" '(' expr ')'
  470          | expr . "as" "$f" '(' expr ')'
  471          | expr . '?' "as" "$f" '(' expr ')'
  472          | expr . "is" "$f" '(' expr ')'

    "is"  shift, and go to state 609
    "as"  shift, and go to state 610
    "++"  shift, and go to state 613
    "--"  shift, and go to state 614
    "->"  shift, and go to state 619
    "??"  shift, and go to state 620
    "?."  shift, and go to state 621
    "?["  shift, and go to state 622
    "<|"  shift, and go to state 623
    "|>"  shift, and go to state 624
    '-'   shift, and go to state 637
    '+'   shift, and go to state 638
    '*'   shift, and go to state 639
    '/'   shift, and go to state 640
    '%'   shift, and go to state 641
    '.'   shift, and go to state 642
    '['   shift, and go to state 643

    $default  reduce using rule 389 (expr)


State 814

  347 expr_method_call: expr . "->" "name" '(' ')'
  348                 | expr . "->" "name" '(' expr_list ')'
  358 expr_field: expr . '.' "name"
  359           | expr . '.' '.' "name"
  360           | expr . '.' "name" '(' ')'
  361           | expr . '.' "name" '(' expr_list ')'
  362           | expr . '.' basic_type_declaration '(' ')'
  363           | expr . '.' basic_type_declaration '(' expr_list ')'
  366           | expr . '.' $@21 error $@22
  388 expr: expr . "<<" expr
  389     | expr . ">>" expr
  390     | expr . "<<<" expr
  391     | expr . ">>>" expr
  392     | expr . '+' expr
  393     | expr . '-' expr
  394     | expr . '*' expr
  395     | expr . '/' expr
  396     | expr . '%' expr
  397     | expr . '<' expr
  398     | expr . '>' expr
  399     | expr . "==" expr
  400     | expr . "!=" expr
  401     | expr . "<=" expr
  401     | expr "<=" expr .
  402     | expr . ">=" expr
  403     | expr . '&' expr
  404     | expr . '|' expr
  405     | expr . '^' expr
  406     | expr . "&&" expr
  407     | expr . "||" expr
  408     | expr . "^^" expr
  409     | expr . ".." expr
  412     | expr . "++"
  413     | expr . "--"
  415     | expr . '[' expr ']'
  416     | expr . '.' '[' expr ']'
  417     | expr . "?[" expr ']'
  418     | expr . '.' "?[" expr ']'
  419     | expr . "?." "name"
  420     | expr . '.' "?." "name"
  429     | expr . "??" expr
  430     | expr . '?' expr ':' expr
  433     | expr . "is" "type" '<' $@23 type_declaration_no_options '>' $@24
  434     | expr . "is" basic_type_declaration
  435     | expr . "is" "name"
  436     | expr . "as" "name"
  439     | expr . "as" "type" '<' $@25 type_declaration '>' $@26
  440     | expr . "as" basic_type_declaration
  441     | expr . '?' "as" "name"
  444     | expr . '?' "as" "type" '<' $@27 type_declaration '>' $@28
  445     | expr . '?' "as" basic_type_declaration
  453     | expr . "<|" expr
  454     | expr . "|>" expr
  455     | expr . "|>" basic_type_declaration
  466 expr_mtag: expr . '.' "$f" '(' expr ')'
  467          | expr . "?." "$f" '(' expr ')'
  468          | expr . '.' '.' "$f" '(' expr ')'
  469          | expr . '.' "?." "$f" '(' expr ')'
  470          | expr . "as" "$f" '(' expr ')'
  471          | expr . '?' "as" "$f" '(' expr ')'
  472          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 609
    "as"   shift, and go to state 610
    "<<"   shift, and go to state 611
    ">>"   shift, and go to state 612
    "++"   shift, and go to state 613
    "--"   shift, and go to state 614
    "->"   shift, and go to state 619
    "??"   shift, and go to state 620
    "?."   shift, and go to state 621
    "?["   shift, and go to state 622
    "<|"   shift, and go to state 623
    "|>"   shift, and go to state 624
    "<<<"  shift, and go to state 625
    ">>>"  shift, and go to state 626
    '-'    shift, and go to state 637
    '+'    shift, and go to state 638
    '*'    shift, and go to state 639
    '/'    shift, and go to state 640
    '%'    shift, and go to state 641
    '.'    shift, and go to state 642
    '['    shift, and go to state 643

    $default  reduce using rule 401 (expr)


State 815

  347 expr_method_call: expr . "->" "name" '(' ')'
  348                 | expr . "->" "name" '(' expr_list ')'
  358 expr_field: expr . '.' "name"
  359           | expr . '.' '.' "name"
  360           | expr . '.' "name" '(' ')'
  361           | expr . '.' "name" '(' expr_list ')'
  362           | expr . '.' basic_type_declaration '(' ')'
  363           | expr . '.' basic_type_declaration '(' expr_list ')'
  366           | expr . '.' $@21 error $@22
  388 expr: expr . "<<" expr
  389     | expr . ">>" expr
  390     | expr . "<<<" expr
  391     | expr . ">>>" expr
  392     | expr . '+' expr
  393     | expr . '-' expr
  394     | expr . '*' expr
  395     | expr . '/' expr
  396     | expr . '%' expr
  397     | expr . '<' expr
  398     | expr . '>' expr
  399     | expr . "==" expr
  400     | expr . "!=" expr
  401     | expr . "<=" expr
  402     | expr . ">=" expr
  402     | expr ">=" expr .
  403     | expr . '&' expr
  404     | expr . '|' expr
  405     | expr . '^' expr
  406     | expr . "&&" expr
  407     | expr . "||" expr
  408     | expr . "^^" expr
  409     | expr . ".." expr
  412     | expr . "++"
  413     | expr . "--"
  415     | expr . '[' expr ']'
  416     | expr . '.' '[' expr ']'
  417     | expr . "?[" expr ']'
  418     | expr . '.' "?[" expr ']'
  419     | expr . "?." "name"
  420     | expr . '.' "?." "name"
  429     | expr . "??" expr
  430     | expr . '?' expr ':' expr
  433     | expr . "is" "type" '<' $@23 type_declaration_no_options '>' $@24
  434     | expr . "is" basic_type_declaration
  435     | expr . "is" "name"
  436     | expr . "as" "name"
  439     | expr . "as" "type" '<' $@25 type_declaration '>' $@26
  440     | expr . "as" basic_type_declaration
  441     | expr . '?' "as" "name"
  444     | expr . '?' "as" "type" '<' $@27 type_declaration '>' $@28
  445     | expr . '?' "as" basic_type_declaration
  453     | expr . "<|" expr
  454     | expr . "|>" expr
  455     | expr . "|>" basic_type_declaration
  466 expr_mtag: expr . '.' "$f" '(' expr ')'
  467          | expr . "?." "$f" '(' expr ')'
  468          | expr . '.' '.' "$f" '(' expr ')'
  469          | expr . '.' "?." "$f" '(' expr ')'
  470          | expr . "as" "$f" '(' expr ')'
  471          | expr . '?' "as" "$f" '(' expr ')'
  472          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 609
    "as"   shift, and go to state 610
    "<<"   shift, and go to state 611
    ">>"   shift, and go to state 612
    "++"   shift, and go to state 613
    "--"   shift, and go to state 614
    "->"   shift, and go to state 619
    "??"   shift, and go to state 620
    "?."   shift, and go to state 621
    "?["   shift, and go to state 622
    "<|"   shift, and go to state 623
    "|>"   shift, and go to state 624
    "<<<"  shift, and go to state 625
    ">>>"  shift, and go to state 626
    '-'    shift, and go to state 637
    '+'    shift, and go to state 638
    '*'    shift, and go to state 639
    '/'    shift, and go to state 640
    '%'    shift, and go to state 641
    '.'    shift, and go to state 642
    '['    shift, and go to state 643

    $default  reduce using rule 402 (expr)


State 816

  347 expr_method_call: expr . "->" "name" '(' ')'
  348                 | expr . "->" "name" '(' expr_list ')'
  358 expr_field: expr . '.' "name"
  359           | expr . '.' '.' "name"
  360           | expr . '.' "name" '(' ')'
  361           | expr . '.' "name" '(' expr_list ')'
  362           | expr . '.' basic_type_declaration '(' ')'
  363           | expr . '.' basic_type_declaration '(' expr_list ')'
  366           | expr . '.' $@21 error $@22
  388 expr: expr . "<<" expr
  389     | expr . ">>" expr
  390     | expr . "<<<" expr
  391     | expr . ">>>" expr
  392     | expr . '+' expr
  393     | expr . '-' expr
  394     | expr . '*' expr
  395     | expr . '/' expr
  396     | expr . '%' expr
  397     | expr . '<' expr
  398     | expr . '>' expr
  399     | expr . "==" expr
  399     | expr "==" expr .
  400     | expr . "!=" expr
  401     | expr . "<=" expr
  402     | expr . ">=" expr
  403     | expr . '&' expr
  404     | expr . '|' expr
  405     | expr . '^' expr
  406     | expr . "&&" expr
  407     | expr . "||" expr
  408     | expr . "^^" expr
  409     | expr . ".." expr
  412     | expr . "++"
  413     | expr . "--"
  415     | expr . '[' expr ']'
  416     | expr . '.' '[' expr ']'
  417     | expr . "?[" expr ']'
  418     | expr . '.' "?[" expr ']'
  419     | expr . "?." "name"
  420     | expr . '.' "?." "name"
  429     | expr . "??" expr
  430     | expr . '?' expr ':' expr
  433     | expr . "is" "type" '<' $@23 type_declaration_no_options '>' $@24
  434     | expr . "is" basic_type_declaration
  435     | expr . "is" "name"
  436     | expr . "as" "name"
  439     | expr . "as" "type" '<' $@25 type_declaration '>' $@26
  440     | expr . "as" basic_type_declaration
  441     | expr . '?' "as" "name"
  444     | expr . '?' "as" "type" '<' $@27 type_declaration '>' $@28
  445     | expr . '?' "as" basic_type_declaration
  453     | expr . "<|" expr
  454     | expr . "|>" expr
  455     | expr . "|>" basic_type_declaration
  466 expr_mtag: expr . '.' "$f" '(' expr ')'
  467          | expr . "?." "$f" '(' expr ')'
  468          | expr . '.' '.' "$f" '(' expr ')'
  469          | expr . '.' "?." "$f" '(' expr ')'
  470          | expr . "as" "$f" '(' expr ')'
  471          | expr . '?' "as" "$f" '(' expr ')'
  472          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 609
    "as"   shift, and go to state 610
    "<<"   shift, and go to state 611
    ">>"   shift, and go to state 612
    "++"   shift, and go to state 613
    "--"   shift, and go to state 614
    "<="   shift, and go to state 615
    ">="   shift, and go to state 616
    "->"   shift, and go to state 619
    "??"   shift, and go to state 620
    "?."   shift, and go to state 621
    "?["   shift, and go to state 622
    "<|"   shift, and go to state 623
    "|>"   shift, and go to state 624
    "<<<"  shift, and go to state 625
    ">>>"  shift, and go to state 626
    '<'    shift, and go to state 635
    '>'    shift, and go to state 636
    '-'    shift, and go to state 637
    '+'    shift, and go to state 638
    '*'    shift, and go to state 639
    '/'    shift, and go to state 640
    '%'    shift, and go to state 641
    '.'    shift, and go to state 642
    '['    shift, and go to state 643

    $default  reduce using rule 399 (expr)


State 817

  347 expr_method_call: expr . "->" "name" '(' ')'
  348                 | expr . "->" "name" '(' expr_list ')'
  358 expr_field: expr . '.' "name"
  359           | expr . '.' '.' "name"
  360           | expr . '.' "name" '(' ')'
  361           | expr . '.' "name" '(' expr_list ')'
  362           | expr . '.' basic_type_declaration '(' ')'
  363           | expr . '.' basic_type_declaration '(' expr_list ')'
  366           | expr . '.' $@21 error $@22
  388 expr: expr . "<<" expr
  389     | expr . ">>" expr
  390     | expr . "<<<" expr
  391     | expr . ">>>" expr
  392     | expr . '+' expr
  393     | expr . '-' expr
  394     | expr . '*' expr
  395     | expr . '/' expr
  396     | expr . '%' expr
  397     | expr . '<' expr
  398     | expr . '>' expr
  399     | expr . "==" expr
  400     | expr . "!=" expr
  400     | expr "!=" expr .
  401     | expr . "<=" expr
  402     | expr . ">=" expr
  403     | expr . '&' expr
  404     | expr . '|' expr
  405     | expr . '^' expr
  406     | expr . "&&" expr
  407     | expr . "||" expr
  408     | expr . "^^" expr
  409     | expr . ".." expr
  412     | expr . "++"
  413     | expr . "--"
  415     | expr . '[' expr ']'
  416     | expr . '.' '[' expr ']'
  417     | expr . "?[" expr ']'
  418     | expr . '.' "?[" expr ']'
  419     | expr . "?." "name"
  420     | expr . '.' "?." "name"
  429     | expr . "??" expr
  430     | expr . '?' expr ':' expr
  433     | expr . "is" "type" '<' $@23 type_declaration_no_options '>' $@24
  434     | expr . "is" basic_type_declaration
  435     | expr . "is" "name"
  436     | expr . "as" "name"
  439     | expr . "as" "type" '<' $@25 type_declaration '>' $@26
  440     | expr . "as" basic_type_declaration
  441     | expr . '?' "as" "name"
  444     | expr . '?' "as" "type" '<' $@27 type_declaration '>' $@28
  445     | expr . '?' "as" basic_type_declaration
  453     | expr . "<|" expr
  454     | expr . "|>" expr
  455     | expr . "|>" basic_type_declaration
  466 expr_mtag: expr . '.' "$f" '(' expr ')'
  467          | expr . "?." "$f" '(' expr ')'
  468          | expr . '.' '.' "$f" '(' expr ')'
  469          | expr . '.' "?." "$f" '(' expr ')'
  470          | expr . "as" "$f" '(' expr ')'
  471          | expr . '?' "as" "$f" '(' expr ')'
  472          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 609
    "as"   shift, and go to state 610
    "<<"   shift, and go to state 611
    ">>"   shift, and go to state 612
    "++"   shift, and go to state 613
    "--"   shift, and go to state 614
    "<="   shift, and go to state 615
    ">="   shift, and go to state 616
    "->"   shift, and go to state 619
    "??"   shift, and go to state 620
    "?."   shift, and go to state 621
    "?["   shift, and go to state 622
    "<|"   shift, and go to state 623
    "|>"   shift, and go to state 624
    "<<<"  shift, and go to state 625
    ">>>"  shift, and go to state 626
    '<'    shift, and go to state 635
    '>'    shift, and go to state 636
    '-'    shift, and go to state 637
    '+'    shift, and go to state 638
    '*'    shift, and go to state 639
    '/'    shift, and go to state 640
    '%'    shift, and go to state 641
    '.'    shift, and go to state 642
    '['    shift, and go to state 643

    $default  reduce using rule 400 (expr)


State 818

  347 expr_method_call: expr "->" "name" . '(' ')'
  348                 | expr "->" "name" . '(' expr_list ')'

    '('  shift, and go to state 1021


State 819

  347 expr_method_call: expr . "->" "name" '(' ')'
  348                 | expr . "->" "name" '(' expr_list ')'
  358 expr_field: expr . '.' "name"
  359           | expr . '.' '.' "name"
  360           | expr . '.' "name" '(' ')'
  361           | expr . '.' "name" '(' expr_list ')'
  362           | expr . '.' basic_type_declaration '(' ')'
  363           | expr . '.' basic_type_declaration '(' expr_list ')'
  366           | expr . '.' $@21 error $@22
  388 expr: expr . "<<" expr
  389     | expr . ">>" expr
  390     | expr . "<<<" expr
  391     | expr . ">>>" expr
  392     | expr . '+' expr
  393     | expr . '-' expr
  394     | expr . '*' expr
  395     | expr . '/' expr
  396     | expr . '%' expr
  397     | expr . '<' expr
  398     | expr . '>' expr
  399     | expr . "==" expr
  400     | expr . "!=" expr
  401     | expr . "<=" expr
  402     | expr . ">=" expr
  403     | expr . '&' expr
  404     | expr . '|' expr
  405     | expr . '^' expr
  406     | expr . "&&" expr
  407     | expr . "||" expr
  408     | expr . "^^" expr
  409     | expr . ".." expr
  412     | expr . "++"
  413     | expr . "--"
  415     | expr . '[' expr ']'
  416     | expr . '.' '[' expr ']'
  417     | expr . "?[" expr ']'
  418     | expr . '.' "?[" expr ']'
  419     | expr . "?." "name"
  420     | expr . '.' "?." "name"
  429     | expr . "??" expr
  429     | expr "??" expr .
  430     | expr . '?' expr ':' expr
  433     | expr . "is" "type" '<' $@23 type_declaration_no_options '>' $@24
  434     | expr . "is" basic_type_declaration
  435     | expr . "is" "name"
  436     | expr . "as" "name"
  439     | expr . "as" "type" '<' $@25 type_declaration '>' $@26
  440     | expr . "as" basic_type_declaration
  441     | expr . '?' "as" "name"
  444     | expr . '?' "as" "type" '<' $@27 type_declaration '>' $@28
  445     | expr . '?' "as" basic_type_declaration
  453     | expr . "<|" expr
  454     | expr . "|>" expr
  455     | expr . "|>" basic_type_declaration
  466 expr_mtag: expr . '.' "$f" '(' expr ')'
  467          | expr . "?." "$f" '(' expr ')'
  468          | expr . '.' '.' "$f" '(' expr ')'
  469          | expr . '.' "?." "$f" '(' expr ')'
  470          | expr . "as" "$f" '(' expr ')'
  471          | expr . '?' "as" "$f" '(' expr ')'
  472          | expr . "is" "$f" '(' expr ')'

    "is"  shift, and go to state 609
    "as"  shift, and go to state 610
    "++"  shift, and go to state 613
    "--"  shift, and go to state 614
    "->"  shift, and go to state 619
    "??"  shift, and go to state 620
    "?."  shift, and go to state 621
    "?["  shift, and go to state 622
    "<|"  shift, and go to state 623
    "|>"  shift, and go to state 624
    '.'   shift, and go to state 642
    '['   shift, and go to state 643

    $default  reduce using rule 429 (expr)


State 820

  467 expr_mtag: expr "?." "$f" . '(' expr ')'

    '('  shift, and go to state 1022


State 821

  419 expr: expr "?." "name" .

    $default  reduce using rule 419 (expr)


State 822

  347 expr_method_call: expr . "->" "name" '(' ')'
  348                 | expr . "->" "name" '(' expr_list ')'
  358 expr_field: expr . '.' "name"
  359           | expr . '.' '.' "name"
  360           | expr . '.' "name" '(' ')'
  361           | expr . '.' "name" '(' expr_list ')'
  362           | expr . '.' basic_type_declaration '(' ')'
  363           | expr . '.' basic_type_declaration '(' expr_list ')'
  366           | expr . '.' $@21 error $@22
  388 expr: expr . "<<" expr
  389     | expr . ">>" expr
  390     | expr . "<<<" expr
  391     | expr . ">>>" expr
  392     | expr . '+' expr
  393     | expr . '-' expr
  394     | expr . '*' expr
  395     | expr . '/' expr
  396     | expr . '%' expr
  397     | expr . '<' expr
  398     | expr . '>' expr
  399     | expr . "==" expr
  400     | expr . "!=" expr
  401     | expr . "<=" expr
  402     | expr . ">=" expr
  403     | expr . '&' expr
  404     | expr . '|' expr
  405     | expr . '^' expr
  406     | expr . "&&" expr
  407     | expr . "||" expr
  408     | expr . "^^" expr
  409     | expr . ".." expr
  412     | expr . "++"
  413     | expr . "--"
  415     | expr . '[' expr ']'
  416     | expr . '.' '[' expr ']'
  417     | expr . "?[" expr ']'
  417     | expr "?[" expr . ']'
  418     | expr . '.' "?[" expr ']'
  419     | expr . "?." "name"
  420     | expr . '.' "?." "name"
  429     | expr . "??" expr
  430     | expr . '?' expr ':' expr
  433     | expr . "is" "type" '<' $@23 type_declaration_no_options '>' $@24
  434     | expr . "is" basic_type_declaration
  435     | expr . "is" "name"
  436     | expr . "as" "name"
  439     | expr . "as" "type" '<' $@25 type_declaration '>' $@26
  440     | expr . "as" basic_type_declaration
  441     | expr . '?' "as" "name"
  444     | expr . '?' "as" "type" '<' $@27 type_declaration '>' $@28
  445     | expr . '?' "as" basic_type_declaration
  453     | expr . "<|" expr
  454     | expr . "|>" expr
  455     | expr . "|>" basic_type_declaration
  466 expr_mtag: expr . '.' "$f" '(' expr ')'
  467          | expr . "?." "$f" '(' expr ')'
  468          | expr . '.' '.' "$f" '(' expr ')'
  469          | expr . '.' "?." "$f" '(' expr ')'
  470          | expr . "as" "$f" '(' expr ')'
  471          | expr . '?' "as" "$f" '(' expr ')'
  472          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 609
    "as"   shift, and go to state 610
    "<<"   shift, and go to state 611
    ">>"   shift, and go to state 612
    "++"   shift, and go to state 613
    "--"   shift, and go to state 614
    "<="   shift, and go to state 615
    ">="   shift, and go to state 616
    "=="   shift, and go to state 617
    "!="   shift, and go to state 618
    "->"   shift, and go to state 619
    "??"   shift, and go to state 620
    "?."   shift, and go to state 621
    "?["   shift, and go to state 622
    "<|"   shift, and go to state 623
    "|>"   shift, and go to state 624
    "<<<"  shift, and go to state 625
    ">>>"  shift, and go to state 626
    "&&"   shift, and go to state 627
    "||"   shift, and go to state 628
    "^^"   shift, and go to state 629
    ".."   shift, and go to state 630
    '?'    shift, and go to state 631
    '|'    shift, and go to state 632
    '^'    shift, and go to state 633
    '&'    shift, and go to state 634
    '<'    shift, and go to state 635
    '>'    shift, and go to state 636
    '-'    shift, and go to state 637
    '+'    shift, and go to state 638
    '*'    shift, and go to state 639
    '/'    shift, and go to state 640
    '%'    shift, and go to state 641
    '.'    shift, and go to state 642
    '['    shift, and go to state 643
    ']'    shift, and go to state 1023


State 823

  347 expr_method_call: expr . "->" "name" '(' ')'
  348                 | expr . "->" "name" '(' expr_list ')'
  358 expr_field: expr . '.' "name"
  359           | expr . '.' '.' "name"
  360           | expr . '.' "name" '(' ')'
  361           | expr . '.' "name" '(' expr_list ')'
  362           | expr . '.' basic_type_declaration '(' ')'
  363           | expr . '.' basic_type_declaration '(' expr_list ')'
  366           | expr . '.' $@21 error $@22
  388 expr: expr . "<<" expr
  389     | expr . ">>" expr
  390     | expr . "<<<" expr
  391     | expr . ">>>" expr
  392     | expr . '+' expr
  393     | expr . '-' expr
  394     | expr . '*' expr
  395     | expr . '/' expr
  396     | expr . '%' expr
  397     | expr . '<' expr
  398     | expr . '>' expr
  399     | expr . "==" expr
  400     | expr . "!=" expr
  401     | expr . "<=" expr
  402     | expr . ">=" expr
  403     | expr . '&' expr
  404     | expr . '|' expr
  405     | expr . '^' expr
  406     | expr . "&&" expr
  407     | expr . "||" expr
  408     | expr . "^^" expr
  409     | expr . ".." expr
  412     | expr . "++"
  413     | expr . "--"
  415     | expr . '[' expr ']'
  416     | expr . '.' '[' expr ']'
  417     | expr . "?[" expr ']'
  418     | expr . '.' "?[" expr ']'
  419     | expr . "?." "name"
  420     | expr . '.' "?." "name"
  429     | expr . "??" expr
  430     | expr . '?' expr ':' expr
  433     | expr . "is" "type" '<' $@23 type_declaration_no_options '>' $@24
  434     | expr . "is" basic_type_declaration
  435     | expr . "is" "name"
  436     | expr . "as" "name"
  439     | expr . "as" "type" '<' $@25 type_declaration '>' $@26
  440     | expr . "as" basic_type_declaration
  441     | expr . '?' "as" "name"
  444     | expr . '?' "as" "type" '<' $@27 type_declaration '>' $@28
  445     | expr . '?' "as" basic_type_declaration
  453     | expr . "<|" expr
  453     | expr "<|" expr .
  454     | expr . "|>" expr
  455     | expr . "|>" basic_type_declaration
  466 expr_mtag: expr . '.' "$f" '(' expr ')'
  467          | expr . "?." "$f" '(' expr ')'
  468          | expr . '.' '.' "$f" '(' expr ')'
  469          | expr . '.' "?." "$f" '(' expr ')'
  470          | expr . "as" "$f" '(' expr ')'
  471          | expr . '?' "as" "$f" '(' expr ')'
  472          | expr . "is" "$f" '(' expr ')'

    "->"  shift, and go to state 619
    "?."  shift, and go to state 621
    "?["  shift, and go to state 622
    '.'   shift, and go to state 642
    '['   shift, and go to state 643

    $default  reduce using rule 453 (expr)


State 824

  347 expr_method_call: expr . "->" "name" '(' ')'
  348                 | expr . "->" "name" '(' expr_list ')'
  358 expr_field: expr . '.' "name"
  359           | expr . '.' '.' "name"
  360           | expr . '.' "name" '(' ')'
  361           | expr . '.' "name" '(' expr_list ')'
  362           | expr . '.' basic_type_declaration '(' ')'
  363           | expr . '.' basic_type_declaration '(' expr_list ')'
  366           | expr . '.' $@21 error $@22
  388 expr: expr . "<<" expr
  389     | expr . ">>" expr
  390     | expr . "<<<" expr
  391     | expr . ">>>" expr
  392     | expr . '+' expr
  393     | expr . '-' expr
  394     | expr . '*' expr
  395     | expr . '/' expr
  396     | expr . '%' expr
  397     | expr . '<' expr
  398     | expr . '>' expr
  399     | expr . "==" expr
  400     | expr . "!=" expr
  401     | expr . "<=" expr
  402     | expr . ">=" expr
  403     | expr . '&' expr
  404     | expr . '|' expr
  405     | expr . '^' expr
  406     | expr . "&&" expr
  407     | expr . "||" expr
  408     | expr . "^^" expr
  409     | expr . ".." expr
  412     | expr . "++"
  413     | expr . "--"
  415     | expr . '[' expr ']'
  416     | expr . '.' '[' expr ']'
  417     | expr . "?[" expr ']'
  418     | expr . '.' "?[" expr ']'
  419     | expr . "?." "name"
  420     | expr . '.' "?." "name"
  429     | expr . "??" expr
  430     | expr . '?' expr ':' expr
  433     | expr . "is" "type" '<' $@23 type_declaration_no_options '>' $@24
  434     | expr . "is" basic_type_declaration
  435     | expr . "is" "name"
  436     | expr . "as" "name"
  439     | expr . "as" "type" '<' $@25 type_declaration '>' $@26
  440     | expr . "as" basic_type_declaration
  441     | expr . '?' "as" "name"
  444     | expr . '?' "as" "type" '<' $@27 type_declaration '>' $@28
  445     | expr . '?' "as" basic_type_declaration
  453     | expr . "<|" expr
  454     | expr . "|>" expr
  454     | expr "|>" expr .
  455     | expr . "|>" basic_type_declaration
  466 expr_mtag: expr . '.' "$f" '(' expr ')'
  467          | expr . "?." "$f" '(' expr ')'
  468          | expr . '.' '.' "$f" '(' expr ')'
  469          | expr . '.' "?." "$f" '(' expr ')'
  470          | expr . "as" "$f" '(' expr ')'
  471          | expr . '?' "as" "$f" '(' expr ')'
  472          | expr . "is" "$f" '(' expr ')'

    "->"  shift, and go to state 619
    "?."  shift, and go to state 621
    "?["  shift, and go to state 622
    '.'   shift, and go to state 642
    '['   shift, and go to state 643

    $default  reduce using rule 454 (expr)


State 825

  372 expr_call: basic_type_declaration . '(' ')'
  373          | basic_type_declaration . '(' expr_list ')'
  455 expr: expr "|>" basic_type_declaration .

    '('  shift, and go to state 645

    $default  reduce using rule 455 (expr)


State 826

  347 expr_method_call: expr . "->" "name" '(' ')'
  348                 | expr . "->" "name" '(' expr_list ')'
  358 expr_field: expr . '.' "name"
  359           | expr . '.' '.' "name"
  360           | expr . '.' "name" '(' ')'
  361           | expr . '.' "name" '(' expr_list ')'
  362           | expr . '.' basic_type_declaration '(' ')'
  363           | expr . '.' basic_type_declaration '(' expr_list ')'
  366           | expr . '.' $@21 error $@22
  388 expr: expr . "<<" expr
  389     | expr . ">>" expr
  390     | expr . "<<<" expr
  390     | expr "<<<" expr .
  391     | expr . ">>>" expr
  392     | expr . '+' expr
  393     | expr . '-' expr
  394     | expr . '*' expr
  395     | expr . '/' expr
  396     | expr . '%' expr
  397     | expr . '<' expr
  398     | expr . '>' expr
  399     | expr . "==" expr
  400     | expr . "!=" expr
  401     | expr . "<=" expr
  402     | expr . ">=" expr
  403     | expr . '&' expr
  404     | expr . '|' expr
  405     | expr . '^' expr
  406     | expr . "&&" expr
  407     | expr . "||" expr
  408     | expr . "^^" expr
  409     | expr . ".." expr
  412     | expr . "++"
  413     | expr . "--"
  415     | expr . '[' expr ']'
  416     | expr . '.' '[' expr ']'
  417     | expr . "?[" expr ']'
  418     | expr . '.' "?[" expr ']'
  419     | expr . "?." "name"
  420     | expr . '.' "?." "name"
  429     | expr . "??" expr
  430     | expr . '?' expr ':' expr
  433     | expr . "is" "type" '<' $@23 type_declaration_no_options '>' $@24
  434     | expr . "is" basic_type_declaration
  435     | expr . "is" "name"
  436     | expr . "as" "name"
  439     | expr . "as" "type" '<' $@25 type_declaration '>' $@26
  440     | expr . "as" basic_type_declaration
  441     | expr . '?' "as" "name"
  444     | expr . '?' "as" "type" '<' $@27 type_declaration '>' $@28
  445     | expr . '?' "as" basic_type_declaration
  453     | expr . "<|" expr
  454     | expr . "|>" expr
  455     | expr . "|>" basic_type_declaration
  466 expr_mtag: expr . '.' "$f" '(' expr ')'
  467          | expr . "?." "$f" '(' expr ')'
  468          | expr . '.' '.' "$f" '(' expr ')'
  469          | expr . '.' "?." "$f" '(' expr ')'
  470          | expr . "as" "$f" '(' expr ')'
  471          | expr . '?' "as" "$f" '(' expr ')'
  472          | expr . "is" "$f" '(' expr ')'

    "is"  shift, and go to state 609
    "as"  shift, and go to state 610
    "++"  shift, and go to state 613
    "--"  shift, and go to state 614
    "->"  shift, and go to state 619
    "??"  shift, and go to state 620
    "?."  shift, and go to state 621
    "?["  shift, and go to state 622
    "<|"  shift, and go to state 623
    "|>"  shift, and go to state 624
    '-'   shift, and go to state 637
    '+'   shift, and go to state 638
    '*'   shift, and go to state 639
    '/'   shift, and go to state 640
    '%'   shift, and go to state 641
    '.'   shift, and go to state 642
    '['   shift, and go to state 643

    $default  reduce using rule 390 (expr)


State 827

  347 expr_method_call: expr . "->" "name" '(' ')'
  348                 | expr . "->" "name" '(' expr_list ')'
  358 expr_field: expr . '.' "name"
  359           | expr . '.' '.' "name"
  360           | expr . '.' "name" '(' ')'
  361           | expr . '.' "name" '(' expr_list ')'
  362           | expr . '.' basic_type_declaration '(' ')'
  363           | expr . '.' basic_type_declaration '(' expr_list ')'
  366           | expr . '.' $@21 error $@22
  388 expr: expr . "<<" expr
  389     | expr . ">>" expr
  390     | expr . "<<<" expr
  391     | expr . ">>>" expr
  391     | expr ">>>" expr .
  392     | expr . '+' expr
  393     | expr . '-' expr
  394     | expr . '*' expr
  395     | expr . '/' expr
  396     | expr . '%' expr
  397     | expr . '<' expr
  398     | expr . '>' expr
  399     | expr . "==" expr
  400     | expr . "!=" expr
  401     | expr . "<=" expr
  402     | expr . ">=" expr
  403     | expr . '&' expr
  404     | expr . '|' expr
  405     | expr . '^' expr
  406     | expr . "&&" expr
  407     | expr . "||" expr
  408     | expr . "^^" expr
  409     | expr . ".." expr
  412     | expr . "++"
  413     | expr . "--"
  415     | expr . '[' expr ']'
  416     | expr . '.' '[' expr ']'
  417     | expr . "?[" expr ']'
  418     | expr . '.' "?[" expr ']'
  419     | expr . "?." "name"
  420     | expr . '.' "?." "name"
  429     | expr . "??" expr
  430     | expr . '?' expr ':' expr
  433     | expr . "is" "type" '<' $@23 type_declaration_no_options '>' $@24
  434     | expr . "is" basic_type_declaration
  435     | expr . "is" "name"
  436     | expr . "as" "name"
  439     | expr . "as" "type" '<' $@25 type_declaration '>' $@26
  440     | expr . "as" basic_type_declaration
  441     | expr . '?' "as" "name"
  444     | expr . '?' "as" "type" '<' $@27 type_declaration '>' $@28
  445     | expr . '?' "as" basic_type_declaration
  453     | expr . "<|" expr
  454     | expr . "|>" expr
  455     | expr . "|>" basic_type_declaration
  466 expr_mtag: expr . '.' "$f" '(' expr ')'
  467          | expr . "?." "$f" '(' expr ')'
  468          | expr . '.' '.' "$f" '(' expr ')'
  469          | expr . '.' "?." "$f" '(' expr ')'
  470          | expr . "as" "$f" '(' expr ')'
  471          | expr . '?' "as" "$f" '(' expr ')'
  472          | expr . "is" "$f" '(' expr ')'

    "is"  shift, and go to state 609
    "as"  shift, and go to state 610
    "++"  shift, and go to state 613
    "--"  shift, and go to state 614
    "->"  shift, and go to state 619
    "??"  shift, and go to state 620
    "?."  shift, and go to state 621
    "?["  shift, and go to state 622
    "<|"  shift, and go to state 623
    "|>"  shift, and go to state 624
    '-'   shift, and go to state 637
    '+'   shift, and go to state 638
    '*'   shift, and go to state 639
    '/'   shift, and go to state 640
    '%'   shift, and go to state 641
    '.'   shift, and go to state 642
    '['   shift, and go to state 643

    $default  reduce using rule 391 (expr)


State 828

  347 expr_method_call: expr . "->" "name" '(' ')'
  348                 | expr . "->" "name" '(' expr_list ')'
  358 expr_field: expr . '.' "name"
  359           | expr . '.' '.' "name"
  360           | expr . '.' "name" '(' ')'
  361           | expr . '.' "name" '(' expr_list ')'
  362           | expr . '.' basic_type_declaration '(' ')'
  363           | expr . '.' basic_type_declaration '(' expr_list ')'
  366           | expr . '.' $@21 error $@22
  388 expr: expr . "<<" expr
  389     | expr . ">>" expr
  390     | expr . "<<<" expr
  391     | expr . ">>>" expr
  392     | expr . '+' expr
  393     | expr . '-' expr
  394     | expr . '*' expr
  395     | expr . '/' expr
  396     | expr . '%' expr
  397     | expr . '<' expr
  398     | expr . '>' expr
  399     | expr . "==" expr
  400     | expr . "!=" expr
  401     | expr . "<=" expr
  402     | expr . ">=" expr
  403     | expr . '&' expr
  404     | expr . '|' expr
  405     | expr . '^' expr
  406     | expr . "&&" expr
  406     | expr "&&" expr .
  407     | expr . "||" expr
  408     | expr . "^^" expr
  409     | expr . ".." expr
  412     | expr . "++"
  413     | expr . "--"
  415     | expr . '[' expr ']'
  416     | expr . '.' '[' expr ']'
  417     | expr . "?[" expr ']'
  418     | expr . '.' "?[" expr ']'
  419     | expr . "?." "name"
  420     | expr . '.' "?." "name"
  429     | expr . "??" expr
  430     | expr . '?' expr ':' expr
  433     | expr . "is" "type" '<' $@23 type_declaration_no_options '>' $@24
  434     | expr . "is" basic_type_declaration
  435     | expr . "is" "name"
  436     | expr . "as" "name"
  439     | expr . "as" "type" '<' $@25 type_declaration '>' $@26
  440     | expr . "as" basic_type_declaration
  441     | expr . '?' "as" "name"
  444     | expr . '?' "as" "type" '<' $@27 type_declaration '>' $@28
  445     | expr . '?' "as" basic_type_declaration
  453     | expr . "<|" expr
  454     | expr . "|>" expr
  455     | expr . "|>" basic_type_declaration
  466 expr_mtag: expr . '.' "$f" '(' expr ')'
  467          | expr . "?." "$f" '(' expr ')'
  468          | expr . '.' '.' "$f" '(' expr ')'
  469          | expr . '.' "?." "$f" '(' expr ')'
  470          | expr . "as" "$f" '(' expr ')'
  471          | expr . '?' "as" "$f" '(' expr ')'
  472          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 609
    "as"   shift, and go to state 610
    "<<"   shift, and go to state 611
    ">>"   shift, and go to state 612
    "++"   shift, and go to state 613
    "--"   shift, and go to state 614
    "<="   shift, and go to state 615
    ">="   shift, and go to state 616
    "=="   shift, and go to state 617
    "!="   shift, and go to state 618
    "->"   shift, and go to state 619
    "??"   shift, and go to state 620
    "?."   shift, and go to state 621
    "?["   shift, and go to state 622
    "<|"   shift, and go to state 623
    "|>"   shift, and go to state 624
    "<<<"  shift, and go to state 625
    ">>>"  shift, and go to state 626
    '|'    shift, and go to state 632
    '^'    shift, and go to state 633
    '&'    shift, and go to state 634
    '<'    shift, and go to state 635
    '>'    shift, and go to state 636
    '-'    shift, and go to state 637
    '+'    shift, and go to state 638
    '*'    shift, and go to state 639
    '/'    shift, and go to state 640
    '%'    shift, and go to state 641
    '.'    shift, and go to state 642
    '['    shift, and go to state 643

    $default  reduce using rule 406 (expr)


State 829

  347 expr_method_call: expr . "->" "name" '(' ')'
  348                 | expr . "->" "name" '(' expr_list ')'
  358 expr_field: expr . '.' "name"
  359           | expr . '.' '.' "name"
  360           | expr . '.' "name" '(' ')'
  361           | expr . '.' "name" '(' expr_list ')'
  362           | expr . '.' basic_type_declaration '(' ')'
  363           | expr . '.' basic_type_declaration '(' expr_list ')'
  366           | expr . '.' $@21 error $@22
  388 expr: expr . "<<" expr
  389     | expr . ">>" expr
  390     | expr . "<<<" expr
  391     | expr . ">>>" expr
  392     | expr . '+' expr
  393     | expr . '-' expr
  394     | expr . '*' expr
  395     | expr . '/' expr
  396     | expr . '%' expr
  397     | expr . '<' expr
  398     | expr . '>' expr
  399     | expr . "==" expr
  400     | expr . "!=" expr
  401     | expr . "<=" expr
  402     | expr . ">=" expr
  403     | expr . '&' expr
  404     | expr . '|' expr
  405     | expr . '^' expr
  406     | expr . "&&" expr
  407     | expr . "||" expr
  407     | expr "||" expr .
  408     | expr . "^^" expr
  409     | expr . ".." expr
  412     | expr . "++"
  413     | expr . "--"
  415     | expr . '[' expr ']'
  416     | expr . '.' '[' expr ']'
  417     | expr . "?[" expr ']'
  418     | expr . '.' "?[" expr ']'
  419     | expr . "?." "name"
  420     | expr . '.' "?." "name"
  429     | expr . "??" expr
  430     | expr . '?' expr ':' expr
  433     | expr . "is" "type" '<' $@23 type_declaration_no_options '>' $@24
  434     | expr . "is" basic_type_declaration
  435     | expr . "is" "name"
  436     | expr . "as" "name"
  439     | expr . "as" "type" '<' $@25 type_declaration '>' $@26
  440     | expr . "as" basic_type_declaration
  441     | expr . '?' "as" "name"
  444     | expr . '?' "as" "type" '<' $@27 type_declaration '>' $@28
  445     | expr . '?' "as" basic_type_declaration
  453     | expr . "<|" expr
  454     | expr . "|>" expr
  455     | expr . "|>" basic_type_declaration
  466 expr_mtag: expr . '.' "$f" '(' expr ')'
  467          | expr . "?." "$f" '(' expr ')'
  468          | expr . '.' '.' "$f" '(' expr ')'
  469          | expr . '.' "?." "$f" '(' expr ')'
  470          | expr . "as" "$f" '(' expr ')'
  471          | expr . '?' "as" "$f" '(' expr ')'
  472          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 609
    "as"   shift, and go to state 610
    "<<"   shift, and go to state 611
    ">>"   shift, and go to state 612
    "++"   shift, and go to state 613
    "--"   shift, and go to state 614
    "<="   shift, and go to state 615
    ">="   shift, and go to state 616
    "=="   shift, and go to state 617
    "!="   shift, and go to state 618
    "->"   shift, and go to state 619
    "??"   shift, and go to state 620
    "?."   shift, and go to state 621
    "?["   shift, and go to state 622
    "<|"   shift, and go to state 623
    "|>"   shift, and go to state 624
    "<<<"  shift, and go to state 625
    ">>>"  shift, and go to state 626
    "&&"   shift, and go to state 627
    "^^"   shift, and go to state 629
    '|'    shift, and go to state 632
    '^'    shift, and go to state 633
    '&'    shift, and go to state 634
    '<'    shift, and go to state 635
    '>'    shift, and go to state 636
    '-'    shift, and go to state 637
    '+'    shift, and go to state 638
    '*'    shift, and go to state 639
    '/'    shift, and go to state 640
    '%'    shift, and go to state 641
    '.'    shift, and go to state 642
    '['    shift, and go to state 643

    $default  reduce using rule 407 (expr)


State 830

  347 expr_method_call: expr . "->" "name" '(' ')'
  348                 | expr . "->" "name" '(' expr_list ')'
  358 expr_field: expr . '.' "name"
  359           | expr . '.' '.' "name"
  360           | expr . '.' "name" '(' ')'
  361           | expr . '.' "name" '(' expr_list ')'
  362           | expr . '.' basic_type_declaration '(' ')'
  363           | expr . '.' basic_type_declaration '(' expr_list ')'
  366           | expr . '.' $@21 error $@22
  388 expr: expr . "<<" expr
  389     | expr . ">>" expr
  390     | expr . "<<<" expr
  391     | expr . ">>>" expr
  392     | expr . '+' expr
  393     | expr . '-' expr
  394     | expr . '*' expr
  395     | expr . '/' expr
  396     | expr . '%' expr
  397     | expr . '<' expr
  398     | expr . '>' expr
  399     | expr . "==" expr
  400     | expr . "!=" expr
  401     | expr . "<=" expr
  402     | expr . ">=" expr
  403     | expr . '&' expr
  404     | expr . '|' expr
  405     | expr . '^' expr
  406     | expr . "&&" expr
  407     | expr . "||" expr
  408     | expr . "^^" expr
  408     | expr "^^" expr .
  409     | expr . ".." expr
  412     | expr . "++"
  413     | expr . "--"
  415     | expr . '[' expr ']'
  416     | expr . '.' '[' expr ']'
  417     | expr . "?[" expr ']'
  418     | expr . '.' "?[" expr ']'
  419     | expr . "?." "name"
  420     | expr . '.' "?." "name"
  429     | expr . "??" expr
  430     | expr . '?' expr ':' expr
  433     | expr . "is" "type" '<' $@23 type_declaration_no_options '>' $@24
  434     | expr . "is" basic_type_declaration
  435     | expr . "is" "name"
  436     | expr . "as" "name"
  439     | expr . "as" "type" '<' $@25 type_declaration '>' $@26
  440     | expr . "as" basic_type_declaration
  441     | expr . '?' "as" "name"
  444     | expr . '?' "as" "type" '<' $@27 type_declaration '>' $@28
  445     | expr . '?' "as" basic_type_declaration
  453     | expr . "<|" expr
  454     | expr . "|>" expr
  455     | expr . "|>" basic_type_declaration
  466 expr_mtag: expr . '.' "$f" '(' expr ')'
  467          | expr . "?." "$f" '(' expr ')'
  468          | expr . '.' '.' "$f" '(' expr ')'
  469          | expr . '.' "?." "$f" '(' expr ')'
  470          | expr . "as" "$f" '(' expr ')'
  471          | expr . '?' "as" "$f" '(' expr ')'
  472          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 609
    "as"   shift, and go to state 610
    "<<"   shift, and go to state 611
    ">>"   shift, and go to state 612
    "++"   shift, and go to state 613
    "--"   shift, and go to state 614
    "<="   shift, and go to state 615
    ">="   shift, and go to state 616
    "=="   shift, and go to state 617
    "!="   shift, and go to state 618
    "->"   shift, and go to state 619
    "??"   shift, and go to state 620
    "?."   shift, and go to state 621
    "?["   shift, and go to state 622
    "<|"   shift, and go to state 623
    "|>"   shift, and go to state 624
    "<<<"  shift, and go to state 625
    ">>>"  shift, and go to state 626
    "&&"   shift, and go to state 627
    '|'    shift, and go to state 632
    '^'    shift, and go to state 633
    '&'    shift, and go to state 634
    '<'    shift, and go to state 635
    '>'    shift, and go to state 636
    '-'    shift, and go to state 637
    '+'    shift, and go to state 638
    '*'    shift, and go to state 639
    '/'    shift, and go to state 640
    '%'    shift, and go to state 641
    '.'    shift, and go to state 642
    '['    shift, and go to state 643

    $default  reduce using rule 408 (expr)


State 831

  347 expr_method_call: expr . "->" "name" '(' ')'
  348                 | expr . "->" "name" '(' expr_list ')'
  358 expr_field: expr . '.' "name"
  359           | expr . '.' '.' "name"
  360           | expr . '.' "name" '(' ')'
  361           | expr . '.' "name" '(' expr_list ')'
  362           | expr . '.' basic_type_declaration '(' ')'
  363           | expr . '.' basic_type_declaration '(' expr_list ')'
  366           | expr . '.' $@21 error $@22
  388 expr: expr . "<<" expr
  389     | expr . ">>" expr
  390     | expr . "<<<" expr
  391     | expr . ">>>" expr
  392     | expr . '+' expr
  393     | expr . '-' expr
  394     | expr . '*' expr
  395     | expr . '/' expr
  396     | expr . '%' expr
  397     | expr . '<' expr
  398     | expr . '>' expr
  399     | expr . "==" expr
  400     | expr . "!=" expr
  401     | expr . "<=" expr
  402     | expr . ">=" expr
  403     | expr . '&' expr
  404     | expr . '|' expr
  405     | expr . '^' expr
  406     | expr . "&&" expr
  407     | expr . "||" expr
  408     | expr . "^^" expr
  409     | expr . ".." expr
  409     | expr ".." expr .
  412     | expr . "++"
  413     | expr . "--"
  415     | expr . '[' expr ']'
  416     | expr . '.' '[' expr ']'
  417     | expr . "?[" expr ']'
  418     | expr . '.' "?[" expr ']'
  419     | expr . "?." "name"
  420     | expr . '.' "?." "name"
  429     | expr . "??" expr
  430     | expr . '?' expr ':' expr
  433     | expr . "is" "type" '<' $@23 type_declaration_no_options '>' $@24
  434     | expr . "is" basic_type_declaration
  435     | expr . "is" "name"
  436     | expr . "as" "name"
  439     | expr . "as" "type" '<' $@25 type_declaration '>' $@26
  440     | expr . "as" basic_type_declaration
  441     | expr . '?' "as" "name"
  444     | expr . '?' "as" "type" '<' $@27 type_declaration '>' $@28
  445     | expr . '?' "as" basic_type_declaration
  453     | expr . "<|" expr
  454     | expr . "|>" expr
  455     | expr . "|>" basic_type_declaration
  466 expr_mtag: expr . '.' "$f" '(' expr ')'
  467          | expr . "?." "$f" '(' expr ')'
  468          | expr . '.' '.' "$f" '(' expr ')'
  469          | expr . '.' "?." "$f" '(' expr ')'
  470          | expr . "as" "$f" '(' expr ')'
  471          | expr . '?' "as" "$f" '(' expr ')'
  472          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 609
    "as"   shift, and go to state 610
    "<<"   shift, and go to state 611
    ">>"   shift, and go to state 612
    "++"   shift, and go to state 613
    "--"   shift, and go to state 614
    "<="   shift, and go to state 615
    ">="   shift, and go to state 616
    "=="   shift, and go to state 617
    "!="   shift, and go to state 618
    "->"   shift, and go to state 619
    "??"   shift, and go to state 620
    "?."   shift, and go to state 621
    "?["   shift, and go to state 622
    "<|"   shift, and go to state 623
    "|>"   shift, and go to state 624
    "<<<"  shift, and go to state 625
    ">>>"  shift, and go to state 626
    "&&"   shift, and go to state 627
    "||"   shift, and go to state 628
    "^^"   shift, and go to state 629
    '?'    shift, and go to state 631
    '|'    shift, and go to state 632
    '^'    shift, and go to state 633
    '&'    shift, and go to state 634
    '<'    shift, and go to state 635
    '>'    shift, and go to state 636
    '-'    shift, and go to state 637
    '+'    shift, and go to state 638
    '*'    shift, and go to state 639
    '/'    shift, and go to state 640
    '%'    shift, and go to state 641
    '.'    shift, and go to state 642
    '['    shift, and go to state 643

    ".."  error (nonassociative)

    $default  reduce using rule 409 (expr)


State 832

  441 expr: expr '?' "as" . "name"
  444     | expr '?' "as" . "type" '<' $@27 type_declaration '>' $@28
  445     | expr '?' "as" . basic_type_declaration
  471 expr_mtag: expr '?' "as" . "$f" '(' expr ')'

    "type"      shift, and go to state 1024
    "bool"      shift, and go to state 225
    "void"      shift, and go to state 226
    "string"    shift, and go to state 227
    "int"       shift, and go to state 229
    "int2"      shift, and go to state 230
    "int3"      shift, and go to state 231
    "int4"      shift, and go to state 232
    "uint"      shift, and go to state 233
    "bitfield"  shift, and go to state 427
    "uint2"     shift, and go to state 235
    "uint3"     shift, and go to state 236
    "uint4"     shift, and go to state 237
    "float"     shift, and go to state 238
    "float2"    shift, and go to state 239
    "float3"    shift, and go to state 240
    "float4"    shift, and go to state 241
    "range"     shift, and go to state 242
    "urange"    shift, and go to state 243
    "range64"   shift, and go to state 244
    "urange64"  shift, and go to state 245
    "int64"     shift, and go to state 247
    "uint64"    shift, and go to state 248
    "double"    shift, and go to state 249
    "int8"      shift, and go to state 252
    "uint8"     shift, and go to state 253
    "int16"     shift, and go to state 254
    "uint16"    shift, and go to state 255
    "$f"        shift, and go to state 1025
    "name"      shift, and go to state 1026

    basic_type_declaration  go to state 1027


State 833

  347 expr_method_call: expr . "->" "name" '(' ')'
  348                 | expr . "->" "name" '(' expr_list ')'
  358 expr_field: expr . '.' "name"
  359           | expr . '.' '.' "name"
  360           | expr . '.' "name" '(' ')'
  361           | expr . '.' "name" '(' expr_list ')'
  362           | expr . '.' basic_type_declaration '(' ')'
  363           | expr . '.' basic_type_declaration '(' expr_list ')'
  366           | expr . '.' $@21 error $@22
  388 expr: expr . "<<" expr
  389     | expr . ">>" expr
  390     | expr . "<<<" expr
  391     | expr . ">>>" expr
  392     | expr . '+' expr
  393     | expr . '-' expr
  394     | expr . '*' expr
  395     | expr . '/' expr
  396     | expr . '%' expr
  397     | expr . '<' expr
  398     | expr . '>' expr
  399     | expr . "==" expr
  400     | expr . "!=" expr
  401     | expr . "<=" expr
  402     | expr . ">=" expr
  403     | expr . '&' expr
  404     | expr . '|' expr
  405     | expr . '^' expr
  406     | expr . "&&" expr
  407     | expr . "||" expr
  408     | expr . "^^" expr
  409     | expr . ".." expr
  412     | expr . "++"
  413     | expr . "--"
  415     | expr . '[' expr ']'
  416     | expr . '.' '[' expr ']'
  417     | expr . "?[" expr ']'
  418     | expr . '.' "?[" expr ']'
  419     | expr . "?." "name"
  420     | expr . '.' "?." "name"
  429     | expr . "??" expr
  430     | expr . '?' expr ':' expr
  430     | expr '?' expr . ':' expr
  433     | expr . "is" "type" '<' $@23 type_declaration_no_options '>' $@24
  434     | expr . "is" basic_type_declaration
  435     | expr . "is" "name"
  436     | expr . "as" "name"
  439     | expr . "as" "type" '<' $@25 type_declaration '>' $@26
  440     | expr . "as" basic_type_declaration
  441     | expr . '?' "as" "name"
  444     | expr . '?' "as" "type" '<' $@27 type_declaration '>' $@28
  445     | expr . '?' "as" basic_type_declaration
  453     | expr . "<|" expr
  454     | expr . "|>" expr
  455     | expr . "|>" basic_type_declaration
  466 expr_mtag: expr . '.' "$f" '(' expr ')'
  467          | expr . "?." "$f" '(' expr ')'
  468          | expr . '.' '.' "$f" '(' expr ')'
  469          | expr . '.' "?." "$f" '(' expr ')'
  470          | expr . "as" "$f" '(' expr ')'
  471          | expr . '?' "as" "$f" '(' expr ')'
  472          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 609
    "as"   shift, and go to state 610
    "<<"   shift, and go to state 611
    ">>"   shift, and go to state 612
    "++"   shift, and go to state 613
    "--"   shift, and go to state 614
    "<="   shift, and go to state 615
    ">="   shift, and go to state 616
    "=="   shift, and go to state 617
    "!="   shift, and go to state 618
    "->"   shift, and go to state 619
    "??"   shift, and go to state 620
    "?."   shift, and go to state 621
    "?["   shift, and go to state 622
    "<|"   shift, and go to state 623
    "|>"   shift, and go to state 624
    "<<<"  shift, and go to state 625
    ">>>"  shift, and go to state 626
    "&&"   shift, and go to state 627
    "||"   shift, and go to state 628
    "^^"   shift, and go to state 629
    ".."   shift, and go to state 630
    '?'    shift, and go to state 631
    ':'    shift, and go to state 1028
    '|'    shift, and go to state 632
    '^'    shift, and go to state 633
    '&'    shift, and go to state 634
    '<'    shift, and go to state 635
    '>'    shift, and go to state 636
    '-'    shift, and go to state 637
    '+'    shift, and go to state 638
    '*'    shift, and go to state 639
    '/'    shift, and go to state 640
    '%'    shift, and go to state 641
    '.'    shift, and go to state 642
    '['    shift, and go to state 643


State 834

  347 expr_method_call: expr . "->" "name" '(' ')'
  348                 | expr . "->" "name" '(' expr_list ')'
  358 expr_field: expr . '.' "name"
  359           | expr . '.' '.' "name"
  360           | expr . '.' "name" '(' ')'
  361           | expr . '.' "name" '(' expr_list ')'
  362           | expr . '.' basic_type_declaration '(' ')'
  363           | expr . '.' basic_type_declaration '(' expr_list ')'
  366           | expr . '.' $@21 error $@22
  388 expr: expr . "<<" expr
  389     | expr . ">>" expr
  390     | expr . "<<<" expr
  391     | expr . ">>>" expr
  392     | expr . '+' expr
  393     | expr . '-' expr
  394     | expr . '*' expr
  395     | expr . '/' expr
  396     | expr . '%' expr
  397     | expr . '<' expr
  398     | expr . '>' expr
  399     | expr . "==" expr
  400     | expr . "!=" expr
  401     | expr . "<=" expr
  402     | expr . ">=" expr
  403     | expr . '&' expr
  404     | expr . '|' expr
  404     | expr '|' expr .
  405     | expr . '^' expr
  406     | expr . "&&" expr
  407     | expr . "||" expr
  408     | expr . "^^" expr
  409     | expr . ".." expr
  412     | expr . "++"
  413     | expr . "--"
  415     | expr . '[' expr ']'
  416     | expr . '.' '[' expr ']'
  417     | expr . "?[" expr ']'
  418     | expr . '.' "?[" expr ']'
  419     | expr . "?." "name"
  420     | expr . '.' "?." "name"
  429     | expr . "??" expr
  430     | expr . '?' expr ':' expr
  433     | expr . "is" "type" '<' $@23 type_declaration_no_options '>' $@24
  434     | expr . "is" basic_type_declaration
  435     | expr . "is" "name"
  436     | expr . "as" "name"
  439     | expr . "as" "type" '<' $@25 type_declaration '>' $@26
  440     | expr . "as" basic_type_declaration
  441     | expr . '?' "as" "name"
  444     | expr . '?' "as" "type" '<' $@27 type_declaration '>' $@28
  445     | expr . '?' "as" basic_type_declaration
  453     | expr . "<|" expr
  454     | expr . "|>" expr
  455     | expr . "|>" basic_type_declaration
  466 expr_mtag: expr . '.' "$f" '(' expr ')'
  467          | expr . "?." "$f" '(' expr ')'
  468          | expr . '.' '.' "$f" '(' expr ')'
  469          | expr . '.' "?." "$f" '(' expr ')'
  470          | expr . "as" "$f" '(' expr ')'
  471          | expr . '?' "as" "$f" '(' expr ')'
  472          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 609
    "as"   shift, and go to state 610
    "<<"   shift, and go to state 611
    ">>"   shift, and go to state 612
    "++"   shift, and go to state 613
    "--"   shift, and go to state 614
    "<="   shift, and go to state 615
    ">="   shift, and go to state 616
    "=="   shift, and go to state 617
    "!="   shift, and go to state 618
    "->"   shift, and go to state 619
    "??"   shift, and go to state 620
    "?."   shift, and go to state 621
    "?["   shift, and go to state 622
    "<|"   shift, and go to state 623
    "|>"   shift, and go to state 624
    "<<<"  shift, and go to state 625
    ">>>"  shift, and go to state 626
    '^'    shift, and go to state 633
    '&'    shift, and go to state 634
    '<'    shift, and go to state 635
    '>'    shift, and go to state 636
    '-'    shift, and go to state 637
    '+'    shift, and go to state 638
    '*'    shift, and go to state 639
    '/'    shift, and go to state 640
    '%'    shift, and go to state 641
    '.'    shift, and go to state 642
    '['    shift, and go to state 643

    $default  reduce using rule 404 (expr)


State 835

  347 expr_method_call: expr . "->" "name" '(' ')'
  348                 | expr . "->" "name" '(' expr_list ')'
  358 expr_field: expr . '.' "name"
  359           | expr . '.' '.' "name"
  360           | expr . '.' "name" '(' ')'
  361           | expr . '.' "name" '(' expr_list ')'
  362           | expr . '.' basic_type_declaration '(' ')'
  363           | expr . '.' basic_type_declaration '(' expr_list ')'
  366           | expr . '.' $@21 error $@22
  388 expr: expr . "<<" expr
  389     | expr . ">>" expr
  390     | expr . "<<<" expr
  391     | expr . ">>>" expr
  392     | expr . '+' expr
  393     | expr . '-' expr
  394     | expr . '*' expr
  395     | expr . '/' expr
  396     | expr . '%' expr
  397     | expr . '<' expr
  398     | expr . '>' expr
  399     | expr . "==" expr
  400     | expr . "!=" expr
  401     | expr . "<=" expr
  402     | expr . ">=" expr
  403     | expr . '&' expr
  404     | expr . '|' expr
  405     | expr . '^' expr
  405     | expr '^' expr .
  406     | expr . "&&" expr
  407     | expr . "||" expr
  408     | expr . "^^" expr
  409     | expr . ".." expr
  412     | expr . "++"
  413     | expr . "--"
  415     | expr . '[' expr ']'
  416     | expr . '.' '[' expr ']'
  417     | expr . "?[" expr ']'
  418     | expr . '.' "?[" expr ']'
  419     | expr . "?." "name"
  420     | expr . '.' "?." "name"
  429     | expr . "??" expr
  430     | expr . '?' expr ':' expr
  433     | expr . "is" "type" '<' $@23 type_declaration_no_options '>' $@24
  434     | expr . "is" basic_type_declaration
  435     | expr . "is" "name"
  436     | expr . "as" "name"
  439     | expr . "as" "type" '<' $@25 type_declaration '>' $@26
  440     | expr . "as" basic_type_declaration
  441     | expr . '?' "as" "name"
  444     | expr . '?' "as" "type" '<' $@27 type_declaration '>' $@28
  445     | expr . '?' "as" basic_type_declaration
  453     | expr . "<|" expr
  454     | expr . "|>" expr
  455     | expr . "|>" basic_type_declaration
  466 expr_mtag: expr . '.' "$f" '(' expr ')'
  467          | expr . "?." "$f" '(' expr ')'
  468          | expr . '.' '.' "$f" '(' expr ')'
  469          | expr . '.' "?." "$f" '(' expr ')'
  470          | expr . "as" "$f" '(' expr ')'
  471          | expr . '?' "as" "$f" '(' expr ')'
  472          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 609
    "as"   shift, and go to state 610
    "<<"   shift, and go to state 611
    ">>"   shift, and go to state 612
    "++"   shift, and go to state 613
    "--"   shift, and go to state 614
    "<="   shift, and go to state 615
    ">="   shift, and go to state 616
    "=="   shift, and go to state 617
    "!="   shift, and go to state 618
    "->"   shift, and go to state 619
    "??"   shift, and go to state 620
    "?."   shift, and go to state 621
    "?["   shift, and go to state 622
    "<|"   shift, and go to state 623
    "|>"   shift, and go to state 624
    "<<<"  shift, and go to state 625
    ">>>"  shift, and go to state 626
    '&'    shift, and go to state 634
    '<'    shift, and go to state 635
    '>'    shift, and go to state 636
    '-'    shift, and go to state 637
    '+'    shift, and go to state 638
    '*'    shift, and go to state 639
    '/'    shift, and go to state 640
    '%'    shift, and go to state 641
    '.'    shift, and go to state 642
    '['    shift, and go to state 643

    $default  reduce using rule 405 (expr)


State 836

  347 expr_method_call: expr . "->" "name" '(' ')'
  348                 | expr . "->" "name" '(' expr_list ')'
  358 expr_field: expr . '.' "name"
  359           | expr . '.' '.' "name"
  360           | expr . '.' "name" '(' ')'
  361           | expr . '.' "name" '(' expr_list ')'
  362           | expr . '.' basic_type_declaration '(' ')'
  363           | expr . '.' basic_type_declaration '(' expr_list ')'
  366           | expr . '.' $@21 error $@22
  388 expr: expr . "<<" expr
  389     | expr . ">>" expr
  390     | expr . "<<<" expr
  391     | expr . ">>>" expr
  392     | expr . '+' expr
  393     | expr . '-' expr
  394     | expr . '*' expr
  395     | expr . '/' expr
  396     | expr . '%' expr
  397     | expr . '<' expr
  398     | expr . '>' expr
  399     | expr . "==" expr
  400     | expr . "!=" expr
  401     | expr . "<=" expr
  402     | expr . ">=" expr
  403     | expr . '&' expr
  403     | expr '&' expr .
  404     | expr . '|' expr
  405     | expr . '^' expr
  406     | expr . "&&" expr
  407     | expr . "||" expr
  408     | expr . "^^" expr
  409     | expr . ".." expr
  412     | expr . "++"
  413     | expr . "--"
  415     | expr . '[' expr ']'
  416     | expr . '.' '[' expr ']'
  417     | expr . "?[" expr ']'
  418     | expr . '.' "?[" expr ']'
  419     | expr . "?." "name"
  420     | expr . '.' "?." "name"
  429     | expr . "??" expr
  430     | expr . '?' expr ':' expr
  433     | expr . "is" "type" '<' $@23 type_declaration_no_options '>' $@24
  434     | expr . "is" basic_type_declaration
  435     | expr . "is" "name"
  436     | expr . "as" "name"
  439     | expr . "as" "type" '<' $@25 type_declaration '>' $@26
  440     | expr . "as" basic_type_declaration
  441     | expr . '?' "as" "name"
  444     | expr . '?' "as" "type" '<' $@27 type_declaration '>' $@28
  445     | expr . '?' "as" basic_type_declaration
  453     | expr . "<|" expr
  454     | expr . "|>" expr
  455     | expr . "|>" basic_type_declaration
  466 expr_mtag: expr . '.' "$f" '(' expr ')'
  467          | expr . "?." "$f" '(' expr ')'
  468          | expr . '.' '.' "$f" '(' expr ')'
  469          | expr . '.' "?." "$f" '(' expr ')'
  470          | expr . "as" "$f" '(' expr ')'
  471          | expr . '?' "as" "$f" '(' expr ')'
  472          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 609
    "as"   shift, and go to state 610
    "<<"   shift, and go to state 611
    ">>"   shift, and go to state 612
    "++"   shift, and go to state 613
    "--"   shift, and go to state 614
    "<="   shift, and go to state 615
    ">="   shift, and go to state 616
    "=="   shift, and go to state 617
    "!="   shift, and go to state 618
    "->"   shift, and go to state 619
    "??"   shift, and go to state 620
    "?."   shift, and go to state 621
    "?["   shift, and go to state 622
    "<|"   shift, and go to state 623
    "|>"   shift, and go to state 624
    "<<<"  shift, and go to state 625
    ">>>"  shift, and go to state 626
    '<'    shift, and go to state 635
    '>'    shift, and go to state 636
    '-'    shift, and go to state 637
    '+'    shift, and go to state 638
    '*'    shift, and go to state 639
    '/'    shift, and go to state 640
    '%'    shift, and go to state 641
    '.'    shift, and go to state 642
    '['    shift, and go to state 643

    $default  reduce using rule 403 (expr)


State 837

  347 expr_method_call: expr . "->" "name" '(' ')'
  348                 | expr . "->" "name" '(' expr_list ')'
  358 expr_field: expr . '.' "name"
  359           | expr . '.' '.' "name"
  360           | expr . '.' "name" '(' ')'
  361           | expr . '.' "name" '(' expr_list ')'
  362           | expr . '.' basic_type_declaration '(' ')'
  363           | expr . '.' basic_type_declaration '(' expr_list ')'
  366           | expr . '.' $@21 error $@22
  388 expr: expr . "<<" expr
  389     | expr . ">>" expr
  390     | expr . "<<<" expr
  391     | expr . ">>>" expr
  392     | expr . '+' expr
  393     | expr . '-' expr
  394     | expr . '*' expr
  395     | expr . '/' expr
  396     | expr . '%' expr
  397     | expr . '<' expr
  397     | expr '<' expr .
  398     | expr . '>' expr
  399     | expr . "==" expr
  400     | expr . "!=" expr
  401     | expr . "<=" expr
  402     | expr . ">=" expr
  403     | expr . '&' expr
  404     | expr . '|' expr
  405     | expr . '^' expr
  406     | expr . "&&" expr
  407     | expr . "||" expr
  408     | expr . "^^" expr
  409     | expr . ".." expr
  412     | expr . "++"
  413     | expr . "--"
  415     | expr . '[' expr ']'
  416     | expr . '.' '[' expr ']'
  417     | expr . "?[" expr ']'
  418     | expr . '.' "?[" expr ']'
  419     | expr . "?." "name"
  420     | expr . '.' "?." "name"
  429     | expr . "??" expr
  430     | expr . '?' expr ':' expr
  433     | expr . "is" "type" '<' $@23 type_declaration_no_options '>' $@24
  434     | expr . "is" basic_type_declaration
  435     | expr . "is" "name"
  436     | expr . "as" "name"
  439     | expr . "as" "type" '<' $@25 type_declaration '>' $@26
  440     | expr . "as" basic_type_declaration
  441     | expr . '?' "as" "name"
  444     | expr . '?' "as" "type" '<' $@27 type_declaration '>' $@28
  445     | expr . '?' "as" basic_type_declaration
  453     | expr . "<|" expr
  454     | expr . "|>" expr
  455     | expr . "|>" basic_type_declaration
  466 expr_mtag: expr . '.' "$f" '(' expr ')'
  467          | expr . "?." "$f" '(' expr ')'
  468          | expr . '.' '.' "$f" '(' expr ')'
  469          | expr . '.' "?." "$f" '(' expr ')'
  470          | expr . "as" "$f" '(' expr ')'
  471          | expr . '?' "as" "$f" '(' expr ')'
  472          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 609
    "as"   shift, and go to state 610
    "<<"   shift, and go to state 611
    ">>"   shift, and go to state 612
    "++"   shift, and go to state 613
    "--"   shift, and go to state 614
    "->"   shift, and go to state 619
    "??"   shift, and go to state 620
    "?."   shift, and go to state 621
    "?["   shift, and go to state 622
    "<|"   shift, and go to state 623
    "|>"   shift, and go to state 624
    "<<<"  shift, and go to state 625
    ">>>"  shift, and go to state 626
    '-'    shift, and go to state 637
    '+'    shift, and go to state 638
    '*'    shift, and go to state 639
    '/'    shift, and go to state 640
    '%'    shift, and go to state 641
    '.'    shift, and go to state 642
    '['    shift, and go to state 643

    $default  reduce using rule 397 (expr)


State 838

  347 expr_method_call: expr . "->" "name" '(' ')'
  348                 | expr . "->" "name" '(' expr_list ')'
  358 expr_field: expr . '.' "name"
  359           | expr . '.' '.' "name"
  360           | expr . '.' "name" '(' ')'
  361           | expr . '.' "name" '(' expr_list ')'
  362           | expr . '.' basic_type_declaration '(' ')'
  363           | expr . '.' basic_type_declaration '(' expr_list ')'
  366           | expr . '.' $@21 error $@22
  388 expr: expr . "<<" expr
  389     | expr . ">>" expr
  390     | expr . "<<<" expr
  391     | expr . ">>>" expr
  392     | expr . '+' expr
  393     | expr . '-' expr
  394     | expr . '*' expr
  395     | expr . '/' expr
  396     | expr . '%' expr
  397     | expr . '<' expr
  398     | expr . '>' expr
  398     | expr '>' expr .
  399     | expr . "==" expr
  400     | expr . "!=" expr
  401     | expr . "<=" expr
  402     | expr . ">=" expr
  403     | expr . '&' expr
  404     | expr . '|' expr
  405     | expr . '^' expr
  406     | expr . "&&" expr
  407     | expr . "||" expr
  408     | expr . "^^" expr
  409     | expr . ".." expr
  412     | expr . "++"
  413     | expr . "--"
  415     | expr . '[' expr ']'
  416     | expr . '.' '[' expr ']'
  417     | expr . "?[" expr ']'
  418     | expr . '.' "?[" expr ']'
  419     | expr . "?." "name"
  420     | expr . '.' "?." "name"
  429     | expr . "??" expr
  430     | expr . '?' expr ':' expr
  433     | expr . "is" "type" '<' $@23 type_declaration_no_options '>' $@24
  434     | expr . "is" basic_type_declaration
  435     | expr . "is" "name"
  436     | expr . "as" "name"
  439     | expr . "as" "type" '<' $@25 type_declaration '>' $@26
  440     | expr . "as" basic_type_declaration
  441     | expr . '?' "as" "name"
  444     | expr . '?' "as" "type" '<' $@27 type_declaration '>' $@28
  445     | expr . '?' "as" basic_type_declaration
  453     | expr . "<|" expr
  454     | expr . "|>" expr
  455     | expr . "|>" basic_type_declaration
  466 expr_mtag: expr . '.' "$f" '(' expr ')'
  467          | expr . "?." "$f" '(' expr ')'
  468          | expr . '.' '.' "$f" '(' expr ')'
  469          | expr . '.' "?." "$f" '(' expr ')'
  470          | expr . "as" "$f" '(' expr ')'
  471          | expr . '?' "as" "$f" '(' expr ')'
  472          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 609
    "as"   shift, and go to state 610
    "<<"   shift, and go to state 611
    ">>"   shift, and go to state 612
    "++"   shift, and go to state 613
    "--"   shift, and go to state 614
    "->"   shift, and go to state 619
    "??"   shift, and go to state 620
    "?."   shift, and go to state 621
    "?["   shift, and go to state 622
    "<|"   shift, and go to state 623
    "|>"   shift, and go to state 624
    "<<<"  shift, and go to state 625
    ">>>"  shift, and go to state 626
    '-'    shift, and go to state 637
    '+'    shift, and go to state 638
    '*'    shift, and go to state 639
    '/'    shift, and go to state 640
    '%'    shift, and go to state 641
    '.'    shift, and go to state 642
    '['    shift, and go to state 643

    $default  reduce using rule 398 (expr)


State 839

  347 expr_method_call: expr . "->" "name" '(' ')'
  348                 | expr . "->" "name" '(' expr_list ')'
  358 expr_field: expr . '.' "name"
  359           | expr . '.' '.' "name"
  360           | expr . '.' "name" '(' ')'
  361           | expr . '.' "name" '(' expr_list ')'
  362           | expr . '.' basic_type_declaration '(' ')'
  363           | expr . '.' basic_type_declaration '(' expr_list ')'
  366           | expr . '.' $@21 error $@22
  388 expr: expr . "<<" expr
  389     | expr . ">>" expr
  390     | expr . "<<<" expr
  391     | expr . ">>>" expr
  392     | expr . '+' expr
  393     | expr . '-' expr
  393     | expr '-' expr .
  394     | expr . '*' expr
  395     | expr . '/' expr
  396     | expr . '%' expr
  397     | expr . '<' expr
  398     | expr . '>' expr
  399     | expr . "==" expr
  400     | expr . "!=" expr
  401     | expr . "<=" expr
  402     | expr . ">=" expr
  403     | expr . '&' expr
  404     | expr . '|' expr
  405     | expr . '^' expr
  406     | expr . "&&" expr
  407     | expr . "||" expr
  408     | expr . "^^" expr
  409     | expr . ".." expr
  412     | expr . "++"
  413     | expr . "--"
  415     | expr . '[' expr ']'
  416     | expr . '.' '[' expr ']'
  417     | expr . "?[" expr ']'
  418     | expr . '.' "?[" expr ']'
  419     | expr . "?." "name"
  420     | expr . '.' "?." "name"
  429     | expr . "??" expr
  430     | expr . '?' expr ':' expr
  433     | expr . "is" "type" '<' $@23 type_declaration_no_options '>' $@24
  434     | expr . "is" basic_type_declaration
  435     | expr . "is" "name"
  436     | expr . "as" "name"
  439     | expr . "as" "type" '<' $@25 type_declaration '>' $@26
  440     | expr . "as" basic_type_declaration
  441     | expr . '?' "as" "name"
  444     | expr . '?' "as" "type" '<' $@27 type_declaration '>' $@28
  445     | expr . '?' "as" basic_type_declaration
  453     | expr . "<|" expr
  454     | expr . "|>" expr
  455     | expr . "|>" basic_type_declaration
  466 expr_mtag: expr . '.' "$f" '(' expr ')'
  467          | expr . "?." "$f" '(' expr ')'
  468          | expr . '.' '.' "$f" '(' expr ')'
  469          | expr . '.' "?." "$f" '(' expr ')'
  470          | expr . "as" "$f" '(' expr ')'
  471          | expr . '?' "as" "$f" '(' expr ')'
  472          | expr . "is" "$f" '(' expr ')'

    "is"  shift, and go to state 609
    "as"  shift, and go to state 610
    "++"  shift, and go to state 613
    "--"  shift, and go to state 614
    "->"  shift, and go to state 619
    "??"  shift, and go to state 620
    "?."  shift, and go to state 621
    "?["  shift, and go to state 622
    "<|"  shift, and go to state 623
    "|>"  shift, and go to state 624
    '*'   shift, and go to state 639
    '/'   shift, and go to state 640
    '%'   shift, and go to state 641
    '.'   shift, and go to state 642
    '['   shift, and go to state 643

    $default  reduce using rule 393 (expr)


State 840

  347 expr_method_call: expr . "->" "name" '(' ')'
  348                 | expr . "->" "name" '(' expr_list ')'
  358 expr_field: expr . '.' "name"
  359           | expr . '.' '.' "name"
  360           | expr . '.' "name" '(' ')'
  361           | expr . '.' "name" '(' expr_list ')'
  362           | expr . '.' basic_type_declaration '(' ')'
  363           | expr . '.' basic_type_declaration '(' expr_list ')'
  366           | expr . '.' $@21 error $@22
  388 expr: expr . "<<" expr
  389     | expr . ">>" expr
  390     | expr . "<<<" expr
  391     | expr . ">>>" expr
  392     | expr . '+' expr
  392     | expr '+' expr .
  393     | expr . '-' expr
  394     | expr . '*' expr
  395     | expr . '/' expr
  396     | expr . '%' expr
  397     | expr . '<' expr
  398     | expr . '>' expr
  399     | expr . "==" expr
  400     | expr . "!=" expr
  401     | expr . "<=" expr
  402     | expr . ">=" expr
  403     | expr . '&' expr
  404     | expr . '|' expr
  405     | expr . '^' expr
  406     | expr . "&&" expr
  407     | expr . "||" expr
  408     | expr . "^^" expr
  409     | expr . ".." expr
  412     | expr . "++"
  413     | expr . "--"
  415     | expr . '[' expr ']'
  416     | expr . '.' '[' expr ']'
  417     | expr . "?[" expr ']'
  418     | expr . '.' "?[" expr ']'
  419     | expr . "?." "name"
  420     | expr . '.' "?." "name"
  429     | expr . "??" expr
  430     | expr . '?' expr ':' expr
  433     | expr . "is" "type" '<' $@23 type_declaration_no_options '>' $@24
  434     | expr . "is" basic_type_declaration
  435     | expr . "is" "name"
  436     | expr . "as" "name"
  439     | expr . "as" "type" '<' $@25 type_declaration '>' $@26
  440     | expr . "as" basic_type_declaration
  441     | expr . '?' "as" "name"
  444     | expr . '?' "as" "type" '<' $@27 type_declaration '>' $@28
  445     | expr . '?' "as" basic_type_declaration
  453     | expr . "<|" expr
  454     | expr . "|>" expr
  455     | expr . "|>" basic_type_declaration
  466 expr_mtag: expr . '.' "$f" '(' expr ')'
  467          | expr . "?." "$f" '(' expr ')'
  468          | expr . '.' '.' "$f" '(' expr ')'
  469          | expr . '.' "?." "$f" '(' expr ')'
  470          | expr . "as" "$f" '(' expr ')'
  471          | expr . '?' "as" "$f" '(' expr ')'
  472          | expr . "is" "$f" '(' expr ')'

    "is"  shift, and go to state 609
    "as"  shift, and go to state 610
    "++"  shift, and go to state 613
    "--"  shift, and go to state 614
    "->"  shift, and go to state 619
    "??"  shift, and go to state 620
    "?."  shift, and go to state 621
    "?["  shift, and go to state 622
    "<|"  shift, and go to state 623
    "|>"  shift, and go to state 624
    '*'   shift, and go to state 639
    '/'   shift, and go to state 640
    '%'   shift, and go to state 641
    '.'   shift, and go to state 642
    '['   shift, and go to state 643

    $default  reduce using rule 392 (expr)


State 841

  347 expr_method_call: expr . "->" "name" '(' ')'
  348                 | expr . "->" "name" '(' expr_list ')'
  358 expr_field: expr . '.' "name"
  359           | expr . '.' '.' "name"
  360           | expr . '.' "name" '(' ')'
  361           | expr . '.' "name" '(' expr_list ')'
  362           | expr . '.' basic_type_declaration '(' ')'
  363           | expr . '.' basic_type_declaration '(' expr_list ')'
  366           | expr . '.' $@21 error $@22
  388 expr: expr . "<<" expr
  389     | expr . ">>" expr
  390     | expr . "<<<" expr
  391     | expr . ">>>" expr
  392     | expr . '+' expr
  393     | expr . '-' expr
  394     | expr . '*' expr
  394     | expr '*' expr .
  395     | expr . '/' expr
  396     | expr . '%' expr
  397     | expr . '<' expr
  398     | expr . '>' expr
  399     | expr . "==" expr
  400     | expr . "!=" expr
  401     | expr . "<=" expr
  402     | expr . ">=" expr
  403     | expr . '&' expr
  404     | expr . '|' expr
  405     | expr . '^' expr
  406     | expr . "&&" expr
  407     | expr . "||" expr
  408     | expr . "^^" expr
  409     | expr . ".." expr
  412     | expr . "++"
  413     | expr . "--"
  415     | expr . '[' expr ']'
  416     | expr . '.' '[' expr ']'
  417     | expr . "?[" expr ']'
  418     | expr . '.' "?[" expr ']'
  419     | expr . "?." "name"
  420     | expr . '.' "?." "name"
  429     | expr . "??" expr
  430     | expr . '?' expr ':' expr
  433     | expr . "is" "type" '<' $@23 type_declaration_no_options '>' $@24
  434     | expr . "is" basic_type_declaration
  435     | expr . "is" "name"
  436     | expr . "as" "name"
  439     | expr . "as" "type" '<' $@25 type_declaration '>' $@26
  440     | expr . "as" basic_type_declaration
  441     | expr . '?' "as" "name"
  444     | expr . '?' "as" "type" '<' $@27 type_declaration '>' $@28
  445     | expr . '?' "as" basic_type_declaration
  453     | expr . "<|" expr
  454     | expr . "|>" expr
  455     | expr . "|>" basic_type_declaration
  466 expr_mtag: expr . '.' "$f" '(' expr ')'
  467          | expr . "?." "$f" '(' expr ')'
  468          | expr . '.' '.' "$f" '(' expr ')'
  469          | expr . '.' "?." "$f" '(' expr ')'
  470          | expr . "as" "$f" '(' expr ')'
  471          | expr . '?' "as" "$f" '(' expr ')'
  472          | expr . "is" "$f" '(' expr ')'

    "is"  shift, and go to state 609
    "as"  shift, and go to state 610
    "++"  shift, and go to state 613
    "--"  shift, and go to state 614
    "->"  shift, and go to state 619
    "??"  shift, and go to state 620
    "?."  shift, and go to state 621
    "?["  shift, and go to state 622
    "<|"  shift, and go to state 623
    "|>"  shift, and go to state 624
    '.'   shift, and go to state 642
    '['   shift, and go to state 643

    $default  reduce using rule 394 (expr)


State 842

  347 expr_method_call: expr . "->" "name" '(' ')'
  348                 | expr . "->" "name" '(' expr_list ')'
  358 expr_field: expr . '.' "name"
  359           | expr . '.' '.' "name"
  360           | expr . '.' "name" '(' ')'
  361           | expr . '.' "name" '(' expr_list ')'
  362           | expr . '.' basic_type_declaration '(' ')'
  363           | expr . '.' basic_type_declaration '(' expr_list ')'
  366           | expr . '.' $@21 error $@22
  388 expr: expr . "<<" expr
  389     | expr . ">>" expr
  390     | expr . "<<<" expr
  391     | expr . ">>>" expr
  392     | expr . '+' expr
  393     | expr . '-' expr
  394     | expr . '*' expr
  395     | expr . '/' expr
  395     | expr '/' expr .
  396     | expr . '%' expr
  397     | expr . '<' expr
  398     | expr . '>' expr
  399     | expr . "==" expr
  400     | expr . "!=" expr
  401     | expr . "<=" expr
  402     | expr . ">=" expr
  403     | expr . '&' expr
  404     | expr . '|' expr
  405     | expr . '^' expr
  406     | expr . "&&" expr
  407     | expr . "||" expr
  408     | expr . "^^" expr
  409     | expr . ".." expr
  412     | expr . "++"
  413     | expr . "--"
  415     | expr . '[' expr ']'
  416     | expr . '.' '[' expr ']'
  417     | expr . "?[" expr ']'
  418     | expr . '.' "?[" expr ']'
  419     | expr . "?." "name"
  420     | expr . '.' "?." "name"
  429     | expr . "??" expr
  430     | expr . '?' expr ':' expr
  433     | expr . "is" "type" '<' $@23 type_declaration_no_options '>' $@24
  434     | expr . "is" basic_type_declaration
  435     | expr . "is" "name"
  436     | expr . "as" "name"
  439     | expr . "as" "type" '<' $@25 type_declaration '>' $@26
  440     | expr . "as" basic_type_declaration
  441     | expr . '?' "as" "name"
  444     | expr . '?' "as" "type" '<' $@27 type_declaration '>' $@28
  445     | expr . '?' "as" basic_type_declaration
  453     | expr . "<|" expr
  454     | expr . "|>" expr
  455     | expr . "|>" basic_type_declaration
  466 expr_mtag: expr . '.' "$f" '(' expr ')'
  467          | expr . "?." "$f" '(' expr ')'
  468          | expr . '.' '.' "$f" '(' expr ')'
  469          | expr . '.' "?." "$f" '(' expr ')'
  470          | expr . "as" "$f" '(' expr ')'
  471          | expr . '?' "as" "$f" '(' expr ')'
  472          | expr . "is" "$f" '(' expr ')'

    "is"  shift, and go to state 609
    "as"  shift, and go to state 610
    "++"  shift, and go to state 613
    "--"  shift, and go to state 614
    "->"  shift, and go to state 619
    "??"  shift, and go to state 620
    "?."  shift, and go to state 621
    "?["  shift, and go to state 622
    "<|"  shift, and go to state 623
    "|>"  shift, and go to state 624
    '.'   shift, and go to state 642
    '['   shift, and go to state 643

    $default  reduce using rule 395 (expr)


State 843

  347 expr_method_call: expr . "->" "name" '(' ')'
  348                 | expr . "->" "name" '(' expr_list ')'
  358 expr_field: expr . '.' "name"
  359           | expr . '.' '.' "name"
  360           | expr . '.' "name" '(' ')'
  361           | expr . '.' "name" '(' expr_list ')'
  362           | expr . '.' basic_type_declaration '(' ')'
  363           | expr . '.' basic_type_declaration '(' expr_list ')'
  366           | expr . '.' $@21 error $@22
  388 expr: expr . "<<" expr
  389     | expr . ">>" expr
  390     | expr . "<<<" expr
  391     | expr . ">>>" expr
  392     | expr . '+' expr
  393     | expr . '-' expr
  394     | expr . '*' expr
  395     | expr . '/' expr
  396     | expr . '%' expr
  396     | expr '%' expr .
  397     | expr . '<' expr
  398     | expr . '>' expr
  399     | expr . "==" expr
  400     | expr . "!=" expr
  401     | expr . "<=" expr
  402     | expr . ">=" expr
  403     | expr . '&' expr
  404     | expr . '|' expr
  405     | expr . '^' expr
  406     | expr . "&&" expr
  407     | expr . "||" expr
  408     | expr . "^^" expr
  409     | expr . ".." expr
  412     | expr . "++"
  413     | expr . "--"
  415     | expr . '[' expr ']'
  416     | expr . '.' '[' expr ']'
  417     | expr . "?[" expr ']'
  418     | expr . '.' "?[" expr ']'
  419     | expr . "?." "name"
  420     | expr . '.' "?." "name"
  429     | expr . "??" expr
  430     | expr . '?' expr ':' expr
  433     | expr . "is" "type" '<' $@23 type_declaration_no_options '>' $@24
  434     | expr . "is" basic_type_declaration
  435     | expr . "is" "name"
  436     | expr . "as" "name"
  439     | expr . "as" "type" '<' $@25 type_declaration '>' $@26
  440     | expr . "as" basic_type_declaration
  441     | expr . '?' "as" "name"
  444     | expr . '?' "as" "type" '<' $@27 type_declaration '>' $@28
  445     | expr . '?' "as" basic_type_declaration
  453     | expr . "<|" expr
  454     | expr . "|>" expr
  455     | expr . "|>" basic_type_declaration
  466 expr_mtag: expr . '.' "$f" '(' expr ')'
  467          | expr . "?." "$f" '(' expr ')'
  468          | expr . '.' '.' "$f" '(' expr ')'
  469          | expr . '.' "?." "$f" '(' expr ')'
  470          | expr . "as" "$f" '(' expr ')'
  471          | expr . '?' "as" "$f" '(' expr ')'
  472          | expr . "is" "$f" '(' expr ')'

    "is"  shift, and go to state 609
    "as"  shift, and go to state 610
    "++"  shift, and go to state 613
    "--"  shift, and go to state 614
    "->"  shift, and go to state 619
    "??"  shift, and go to state 620
    "?."  shift, and go to state 621
    "?["  shift, and go to state 622
    "<|"  shift, and go to state 623
    "|>"  shift, and go to state 624
    '.'   shift, and go to state 642
    '['   shift, and go to state 643

    $default  reduce using rule 396 (expr)


State 844

  420 expr: expr '.' "?." . "name"
  469 expr_mtag: expr '.' "?." . "$f" '(' expr ')'

    "$f"    shift, and go to state 1029
    "name"  shift, and go to state 1030


State 845

  418 expr: expr '.' "?[" . expr ']'

    "struct"                          shift, and go to state 409
    "class"                           shift, and go to state 410
    "true"                            shift, and go to state 411
    "false"                           shift, and go to state 412
    "new"                             shift, and go to state 413
    "typeinfo"                        shift, and go to state 414
    "type"                            shift, and go to state 415
    "array"                           shift, and go to state 416
    "null"                            shift, and go to state 417
    "table"                           shift, and go to state 418
    "deref"                           shift, and go to state 419
    "cast"                            shift, and go to state 420
    "upcast"                          shift, and go to state 421
    "addr"                            shift, and go to state 422
    "reinterpret"                     shift, and go to state 423
    "unsafe"                          shift, and go to state 424
    "fixed_array"                     shift, and go to state 425
    "default"                         shift, and go to state 426
    "bool"                            shift, and go to state 225
    "void"                            shift, and go to state 226
    "string"                          shift, and go to state 227
    "int"                             shift, and go to state 229
    "int2"                            shift, and go to state 230
    "int3"                            shift, and go to state 231
    "int4"                            shift, and go to state 232
    "uint"                            shift, and go to state 233
    "bitfield"                        shift, and go to state 427
    "uint2"                           shift, and go to state 235
    "uint3"                           shift, and go to state 236
    "uint4"                           shift, and go to state 237
    "float"                           shift, and go to state 238
    "float2"                          shift, and go to state 239
    "float3"                          shift, and go to state 240
    "float4"                          shift, and go to state 241
    "range"                           shift, and go to state 242
    "urange"                          shift, and go to state 243
    "range64"                         shift, and go to state 244
    "urange64"                        shift, and go to state 245
    "int64"                           shift, and go to state 247
    "uint64"                          shift, and go to state 248
    "double"                          shift, and go to state 249
    "int8"                            shift, and go to state 252
    "uint8"                           shift, and go to state 253
    "int16"                           shift, and go to state 254
    "uint16"                          shift, and go to state 255
    "tuple"                           shift, and go to state 428
    "variant"                         shift, and go to state 429
    "generator"                       shift, and go to state 430
    "++"                              shift, and go to state 431
    "--"                              shift, and go to state 432
    "::"                              shift, and go to state 55
    "$$"                              shift, and go to state 433
    "$i"                              shift, and go to state 434
    "$v"                              shift, and go to state 435
    "$b"                              shift, and go to state 436
    "$a"                              shift, and go to state 437
    "$c"                              shift, and go to state 438
    "..."                             shift, and go to state 439
    "integer constant"                shift, and go to state 440
    "long integer constant"           shift, and go to state 441
    "unsigned integer constant"       shift, and go to state 442
    "unsigned long integer constant"  shift, and go to state 443
    "unsigned int8 constant"          shift, and go to state 444
    "floating point constant"         shift, and go to state 445
    "double constant"                 shift, and go to state 446
    "name"                            shift, and go to state 56
    "start of the string"             shift, and go to state 447
    "begin of code block"             shift, and go to state 448
    '-'                               shift, and go to state 449
    '+'                               shift, and go to state 450
    '*'                               shift, and go to state 451
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 452
    '!'                               shift, and go to state 453
    '['                               shift, and go to state 454
    '('                               shift, and go to state 455
    '$'                               shift, and go to state 456
    '@'                               shift, and go to state 457

    string_builder          go to state 458
    expr_reader             go to state 459
    expr_call_pipe          go to state 460
    name_in_namespace       go to state 461
    expr_new                go to state 462
    expr_cast               go to state 463
    expr_type_decl          go to state 464
    expr_type_info          go to state 465
    block_or_lambda         go to state 466
    expr_full_block         go to state 467
    expr_numeric_const      go to state 468
    expr_named_call         go to state 469
    expr_method_call        go to state 470
    func_addr_expr          go to state 471
    expr_field              go to state 472
    expr_call               go to state 473
    expr                    go to state 1031
    expr_mtag               go to state 475
    basic_type_declaration  go to state 476
    make_decl               go to state 477
    make_struct_decl        go to state 478
    make_tuple_call         go to state 479
    make_dim_decl           go to state 480
    make_table_decl         go to state 481
    array_comprehension     go to state 482


State 846

  466 expr_mtag: expr '.' "$f" . '(' expr ')'

    '('  shift, and go to state 1032


State 847

  358 expr_field: expr '.' "name" .
  360           | expr '.' "name" . '(' ')'
  361           | expr '.' "name" . '(' expr_list ')'

    '('  shift, and go to state 1033

    $default  reduce using rule 358 (expr_field)


State 848

  359 expr_field: expr '.' '.' . "name"
  468 expr_mtag: expr '.' '.' . "$f" '(' expr ')'

    "$f"    shift, and go to state 1034
    "name"  shift, and go to state 1035


State 849

  416 expr: expr '.' '[' . expr ']'

    "struct"                          shift, and go to state 409
    "class"                           shift, and go to state 410
    "true"                            shift, and go to state 411
    "false"                           shift, and go to state 412
    "new"                             shift, and go to state 413
    "typeinfo"                        shift, and go to state 414
    "type"                            shift, and go to state 415
    "array"                           shift, and go to state 416
    "null"                            shift, and go to state 417
    "table"                           shift, and go to state 418
    "deref"                           shift, and go to state 419
    "cast"                            shift, and go to state 420
    "upcast"                          shift, and go to state 421
    "addr"                            shift, and go to state 422
    "reinterpret"                     shift, and go to state 423
    "unsafe"                          shift, and go to state 424
    "fixed_array"                     shift, and go to state 425
    "default"                         shift, and go to state 426
    "bool"                            shift, and go to state 225
    "void"                            shift, and go to state 226
    "string"                          shift, and go to state 227
    "int"                             shift, and go to state 229
    "int2"                            shift, and go to state 230
    "int3"                            shift, and go to state 231
    "int4"                            shift, and go to state 232
    "uint"                            shift, and go to state 233
    "bitfield"                        shift, and go to state 427
    "uint2"                           shift, and go to state 235
    "uint3"                           shift, and go to state 236
    "uint4"                           shift, and go to state 237
    "float"                           shift, and go to state 238
    "float2"                          shift, and go to state 239
    "float3"                          shift, and go to state 240
    "float4"                          shift, and go to state 241
    "range"                           shift, and go to state 242
    "urange"                          shift, and go to state 243
    "range64"                         shift, and go to state 244
    "urange64"                        shift, and go to state 245
    "int64"                           shift, and go to state 247
    "uint64"                          shift, and go to state 248
    "double"                          shift, and go to state 249
    "int8"                            shift, and go to state 252
    "uint8"                           shift, and go to state 253
    "int16"                           shift, and go to state 254
    "uint16"                          shift, and go to state 255
    "tuple"                           shift, and go to state 428
    "variant"                         shift, and go to state 429
    "generator"                       shift, and go to state 430
    "++"                              shift, and go to state 431
    "--"                              shift, and go to state 432
    "::"                              shift, and go to state 55
    "$$"                              shift, and go to state 433
    "$i"                              shift, and go to state 434
    "$v"                              shift, and go to state 435
    "$b"                              shift, and go to state 436
    "$a"                              shift, and go to state 437
    "$c"                              shift, and go to state 438
    "..."                             shift, and go to state 439
    "integer constant"                shift, and go to state 440
    "long integer constant"           shift, and go to state 441
    "unsigned integer constant"       shift, and go to state 442
    "unsigned long integer constant"  shift, and go to state 443
    "unsigned int8 constant"          shift, and go to state 444
    "floating point constant"         shift, and go to state 445
    "double constant"                 shift, and go to state 446
    "name"                            shift, and go to state 56
    "start of the string"             shift, and go to state 447
    "begin of code block"             shift, and go to state 448
    '-'                               shift, and go to state 449
    '+'                               shift, and go to state 450
    '*'                               shift, and go to state 451
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 452
    '!'                               shift, and go to state 453
    '['                               shift, and go to state 454
    '('                               shift, and go to state 455
    '$'                               shift, and go to state 456
    '@'                               shift, and go to state 457

    string_builder          go to state 458
    expr_reader             go to state 459
    expr_call_pipe          go to state 460
    name_in_namespace       go to state 461
    expr_new                go to state 462
    expr_cast               go to state 463
    expr_type_decl          go to state 464
    expr_type_info          go to state 465
    block_or_lambda         go to state 466
    expr_full_block         go to state 467
    expr_numeric_const      go to state 468
    expr_named_call         go to state 469
    expr_method_call        go to state 470
    func_addr_expr          go to state 471
    expr_field              go to state 472
    expr_call               go to state 473
    expr                    go to state 1036
    expr_mtag               go to state 475
    basic_type_declaration  go to state 476
    make_decl               go to state 477
    make_struct_decl        go to state 478
    make_tuple_call         go to state 479
    make_dim_decl           go to state 480
    make_table_decl         go to state 481
    array_comprehension     go to state 482


State 850

  366 expr_field: expr '.' $@21 . error $@22

    error  shift, and go to state 1037


State 851

  362 expr_field: expr '.' basic_type_declaration . '(' ')'
  363           | expr '.' basic_type_declaration . '(' expr_list ')'

    '('  shift, and go to state 1038


State 852

  347 expr_method_call: expr . "->" "name" '(' ')'
  348                 | expr . "->" "name" '(' expr_list ')'
  358 expr_field: expr . '.' "name"
  359           | expr . '.' '.' "name"
  360           | expr . '.' "name" '(' ')'
  361           | expr . '.' "name" '(' expr_list ')'
  362           | expr . '.' basic_type_declaration '(' ')'
  363           | expr . '.' basic_type_declaration '(' expr_list ')'
  366           | expr . '.' $@21 error $@22
  388 expr: expr . "<<" expr
  389     | expr . ">>" expr
  390     | expr . "<<<" expr
  391     | expr . ">>>" expr
  392     | expr . '+' expr
  393     | expr . '-' expr
  394     | expr . '*' expr
  395     | expr . '/' expr
  396     | expr . '%' expr
  397     | expr . '<' expr
  398     | expr . '>' expr
  399     | expr . "==" expr
  400     | expr . "!=" expr
  401     | expr . "<=" expr
  402     | expr . ">=" expr
  403     | expr . '&' expr
  404     | expr . '|' expr
  405     | expr . '^' expr
  406     | expr . "&&" expr
  407     | expr . "||" expr
  408     | expr . "^^" expr
  409     | expr . ".." expr
  412     | expr . "++"
  413     | expr . "--"
  415     | expr . '[' expr ']'
  415     | expr '[' expr . ']'
  416     | expr . '.' '[' expr ']'
  417     | expr . "?[" expr ']'
  418     | expr . '.' "?[" expr ']'
  419     | expr . "?." "name"
  420     | expr . '.' "?." "name"
  429     | expr . "??" expr
  430     | expr . '?' expr ':' expr
  433     | expr . "is" "type" '<' $@23 type_declaration_no_options '>' $@24
  434     | expr . "is" basic_type_declaration
  435     | expr . "is" "name"
  436     | expr . "as" "name"
  439     | expr . "as" "type" '<' $@25 type_declaration '>' $@26
  440     | expr . "as" basic_type_declaration
  441     | expr . '?' "as" "name"
  444     | expr . '?' "as" "type" '<' $@27 type_declaration '>' $@28
  445     | expr . '?' "as" basic_type_declaration
  453     | expr . "<|" expr
  454     | expr . "|>" expr
  455     | expr . "|>" basic_type_declaration
  466 expr_mtag: expr . '.' "$f" '(' expr ')'
  467          | expr . "?." "$f" '(' expr ')'
  468          | expr . '.' '.' "$f" '(' expr ')'
  469          | expr . '.' "?." "$f" '(' expr ')'
  470          | expr . "as" "$f" '(' expr ')'
  471          | expr . '?' "as" "$f" '(' expr ')'
  472          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 609
    "as"   shift, and go to state 610
    "<<"   shift, and go to state 611
    ">>"   shift, and go to state 612
    "++"   shift, and go to state 613
    "--"   shift, and go to state 614
    "<="   shift, and go to state 615
    ">="   shift, and go to state 616
    "=="   shift, and go to state 617
    "!="   shift, and go to state 618
    "->"   shift, and go to state 619
    "??"   shift, and go to state 620
    "?."   shift, and go to state 621
    "?["   shift, and go to state 622
    "<|"   shift, and go to state 623
    "|>"   shift, and go to state 624
    "<<<"  shift, and go to state 625
    ">>>"  shift, and go to state 626
    "&&"   shift, and go to state 627
    "||"   shift, and go to state 628
    "^^"   shift, and go to state 629
    ".."   shift, and go to state 630
    '?'    shift, and go to state 631
    '|'    shift, and go to state 632
    '^'    shift, and go to state 633
    '&'    shift, and go to state 634
    '<'    shift, and go to state 635
    '>'    shift, and go to state 636
    '-'    shift, and go to state 637
    '+'    shift, and go to state 638
    '*'    shift, and go to state 639
    '/'    shift, and go to state 640
    '%'    shift, and go to state 641
    '.'    shift, and go to state 642
    '['    shift, and go to state 643
    ']'    shift, and go to state 1039


State 853

  372 expr_call: basic_type_declaration '(' ')' .

    $default  reduce using rule 372 (expr_call)


State 854

  300 expr_list: expr_list . ',' expr
  373 expr_call: basic_type_declaration '(' expr_list . ')'

    ','  shift, and go to state 1040
    ')'  shift, and go to state 1041


State 855

  683 type_declaration_no_options_no_dim: "iterator" '<' $@50 type_declaration '>' . $@51

    $default  reduce using rule 682 ($@51)

    $@51  go to state 1042


State 856

  673 type_declaration_no_options_no_dim: "smart_ptr" '<' $@44 type_declaration '>' . $@45

    $default  reduce using rule 672 ($@45)

    $@45  go to state 1043


State 857

  631 bitfield_bits: bitfield_bits "end of expression" . "name"

    "name"  shift, and go to state 1044


State 858

  637 bitfield_type_declaration: "bitfield" '<' $@39 bitfield_bits '>' . $@40

    $default  reduce using rule 636 ($@40)

    $@40  go to state 1045


State 859

  687 type_declaration_no_options_no_dim: "block" '<' $@52 type_declaration '>' . $@53

    $default  reduce using rule 686 ($@53)

    $@53  go to state 1046


State 860

  690 type_declaration_no_options_no_dim: "block" '<' $@54 optional_function_argument_list optional_function_type . '>' $@55

    '>'  shift, and go to state 1047


State 861

  694 type_declaration_no_options_no_dim: "function" '<' $@56 type_declaration '>' . $@57

    $default  reduce using rule 693 ($@57)

    $@57  go to state 1048


State 862

  697 type_declaration_no_options_no_dim: "function" '<' $@58 optional_function_argument_list optional_function_type . '>' $@59

    '>'  shift, and go to state 1049


State 863

  701 type_declaration_no_options_no_dim: "lambda" '<' $@60 type_declaration '>' . $@61

    $default  reduce using rule 700 ($@61)

    $@61  go to state 1050


State 864

  704 type_declaration_no_options_no_dim: "lambda" '<' $@62 optional_function_argument_list optional_function_type . '>' $@63

    '>'  shift, and go to state 1051


State 865

  707 type_declaration_no_options_no_dim: "tuple" '<' $@64 tuple_type_list '>' . $@65

    $default  reduce using rule 706 ($@65)

    $@65  go to state 1052


State 866

  501 tuple_type_list: tuple_type_list c_or_s . tuple_type

    "type"       shift, and go to state 219
    "array"      shift, and go to state 220
    "table"      shift, and go to state 221
    "typedecl"   shift, and go to state 222
    "iterator"   shift, and go to state 223
    "smart_ptr"  shift, and go to state 224
    "bool"       shift, and go to state 225
    "void"       shift, and go to state 226
    "string"     shift, and go to state 227
    "auto"       shift, and go to state 228
    "int"        shift, and go to state 229
    "int2"       shift, and go to state 230
    "int3"       shift, and go to state 231
    "int4"       shift, and go to state 232
    "uint"       shift, and go to state 233
    "bitfield"   shift, and go to state 234
    "uint2"      shift, and go to state 235
    "uint3"      shift, and go to state 236
    "uint4"      shift, and go to state 237
    "float"      shift, and go to state 238
    "float2"     shift, and go to state 239
    "float3"     shift, and go to state 240
    "float4"     shift, and go to state 241
    "range"      shift, and go to state 242
    "urange"     shift, and go to state 243
    "range64"    shift, and go to state 244
    "urange64"   shift, and go to state 245
    "block"      shift, and go to state 246
    "int64"      shift, and go to state 247
    "uint64"     shift, and go to state 248
    "double"     shift, and go to state 249
    "function"   shift, and go to state 250
    "lambda"     shift, and go to state 251
    "int8"       shift, and go to state 252
    "uint8"      shift, and go to state 253
    "int16"      shift, and go to state 254
    "uint16"     shift, and go to state 255
    "tuple"      shift, and go to state 256
    "variant"    shift, and go to state 257
    "::"         shift, and go to state 55
    "$t"         shift, and go to state 258
    "name"       shift, and go to state 511
    '$'          shift, and go to state 259

    name_in_namespace                   go to state 260
    tuple_type                          go to state 1053
    basic_type_declaration              go to state 261
    structure_type_declaration          go to state 262
    auto_type_declaration               go to state 263
    bitfield_type_declaration           go to state 264
    type_declaration_no_options         go to state 265
    type_declaration_no_options_no_dim  go to state 266
    type_declaration                    go to state 516


State 867

  710 type_declaration_no_options_no_dim: "variant" '<' $@66 variant_type_list '>' . $@67

    $default  reduce using rule 709 ($@67)

    $@67  go to state 1054


State 868

  507 variant_type_list: variant_type_list c_or_s . variant_type

    "name"  shift, and go to state 518

    variant_type  go to state 1055


State 869

  246 type_declaration_no_options_list: type_declaration_no_options_list . c_or_s type_declaration
  658 type_declaration_no_options_no_dim: '$' name_in_namespace '<' $@43 type_declaration_no_options_list . '>' '(' optional_expr_list ')'

    "end of expression"  shift, and go to state 512
    ','                  shift, and go to state 513
    '>'                  shift, and go to state 1056

    c_or_s  go to state 1057


State 870

  245 type_declaration_no_options_list: type_declaration .
  712 type_declaration: type_declaration . '|' type_declaration_no_options
  713                 | type_declaration . '|' '#'

    '|'  shift, and go to state 375

    $default  reduce using rule 245 (type_declaration_no_options_list)


State 871

  656 type_declaration_no_options_no_dim: '$' name_in_namespace '(' optional_expr_list ')' .

    $default  reduce using rule 656 (type_declaration_no_options_no_dim)


State 872

  242 optional_expr_list: expr_list optional_comma .

    $default  reduce using rule 242 (optional_expr_list)


State 873

  644 dim_list: dim_list '[' expr ']' .

    $default  reduce using rule 644 (dim_list)


State 874

  725 bitfield_alias_declaration: "bitfield" optional_public_or_private_alias "name" $@74 "begin of code block" $@75 bitfield_alias_bits optional_comma $@76 "end of code block" .

    $default  reduce using rule 725 (bitfield_alias_declaration)


State 875

  499 tuple_type: "name" ':' type_declaration .
  712 type_declaration: type_declaration . '|' type_declaration_no_options
  713                 | type_declaration . '|' '#'

    '|'  shift, and go to state 375

    $default  reduce using rule 499 (tuple_type)


State 876

  505 variant_type: "name" ':' type_declaration .
  712 type_declaration: type_declaration . '|' type_declaration_no_options
  713                 | type_declaration . '|' '#'

    '|'  shift, and go to state 375

    $default  reduce using rule 505 (variant_type)


State 877

  495 function_argument_declaration: "$a" '(' expr ')' .

    $default  reduce using rule 495 (function_argument_declaration)


State 878

  587 variable_name_with_pos_list: "$i" '(' . expr ')'

    "struct"                          shift, and go to state 409
    "class"                           shift, and go to state 410
    "true"                            shift, and go to state 411
    "false"                           shift, and go to state 412
    "new"                             shift, and go to state 413
    "typeinfo"                        shift, and go to state 414
    "type"                            shift, and go to state 415
    "array"                           shift, and go to state 416
    "null"                            shift, and go to state 417
    "table"                           shift, and go to state 418
    "deref"                           shift, and go to state 419
    "cast"                            shift, and go to state 420
    "upcast"                          shift, and go to state 421
    "addr"                            shift, and go to state 422
    "reinterpret"                     shift, and go to state 423
    "unsafe"                          shift, and go to state 424
    "fixed_array"                     shift, and go to state 425
    "default"                         shift, and go to state 426
    "bool"                            shift, and go to state 225
    "void"                            shift, and go to state 226
    "string"                          shift, and go to state 227
    "int"                             shift, and go to state 229
    "int2"                            shift, and go to state 230
    "int3"                            shift, and go to state 231
    "int4"                            shift, and go to state 232
    "uint"                            shift, and go to state 233
    "bitfield"                        shift, and go to state 427
    "uint2"                           shift, and go to state 235
    "uint3"                           shift, and go to state 236
    "uint4"                           shift, and go to state 237
    "float"                           shift, and go to state 238
    "float2"                          shift, and go to state 239
    "float3"                          shift, and go to state 240
    "float4"                          shift, and go to state 241
    "range"                           shift, and go to state 242
    "urange"                          shift, and go to state 243
    "range64"                         shift, and go to state 244
    "urange64"                        shift, and go to state 245
    "int64"                           shift, and go to state 247
    "uint64"                          shift, and go to state 248
    "double"                          shift, and go to state 249
    "int8"                            shift, and go to state 252
    "uint8"                           shift, and go to state 253
    "int16"                           shift, and go to state 254
    "uint16"                          shift, and go to state 255
    "tuple"                           shift, and go to state 428
    "variant"                         shift, and go to state 429
    "generator"                       shift, and go to state 430
    "++"                              shift, and go to state 431
    "--"                              shift, and go to state 432
    "::"                              shift, and go to state 55
    "$$"                              shift, and go to state 433
    "$i"                              shift, and go to state 434
    "$v"                              shift, and go to state 435
    "$b"                              shift, and go to state 436
    "$a"                              shift, and go to state 437
    "$c"                              shift, and go to state 438
    "..."                             shift, and go to state 439
    "integer constant"                shift, and go to state 440
    "long integer constant"           shift, and go to state 441
    "unsigned integer constant"       shift, and go to state 442
    "unsigned long integer constant"  shift, and go to state 443
    "unsigned int8 constant"          shift, and go to state 444
    "floating point constant"         shift, and go to state 445
    "double constant"                 shift, and go to state 446
    "name"                            shift, and go to state 56
    "start of the string"             shift, and go to state 447
    "begin of code block"             shift, and go to state 448
    '-'                               shift, and go to state 449
    '+'                               shift, and go to state 450
    '*'                               shift, and go to state 451
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 452
    '!'                               shift, and go to state 453
    '['                               shift, and go to state 454
    '('                               shift, and go to state 455
    '$'                               shift, and go to state 456
    '@'                               shift, and go to state 457

    string_builder          go to state 458
    expr_reader             go to state 459
    expr_call_pipe          go to state 460
    name_in_namespace       go to state 461
    expr_new                go to state 462
    expr_cast               go to state 463
    expr_type_decl          go to state 464
    expr_type_info          go to state 465
    block_or_lambda         go to state 466
    expr_full_block         go to state 467
    expr_numeric_const      go to state 468
    expr_named_call         go to state 469
    expr_method_call        go to state 470
    func_addr_expr          go to state 471
    expr_field              go to state 472
    expr_call               go to state 473
    expr                    go to state 1058
    expr_mtag               go to state 475
    basic_type_declaration  go to state 476
    make_decl               go to state 477
    make_struct_decl        go to state 478
    make_tuple_call         go to state 479
    make_dim_decl           go to state 480
    make_table_decl         go to state 481
    array_comprehension     go to state 482


State 879

  588 variable_name_with_pos_list: "name" "aka" . "name"

    "name"  shift, and go to state 1059


State 880

  512 copy_or_move: "<-" .

    $default  reduce using rule 512 (copy_or_move)


State 881

  589 variable_name_with_pos_list: variable_name_with_pos_list ',' . "name"
  590                            | variable_name_with_pos_list ',' . "name" "aka" "name"

    "name"  shift, and go to state 1060


State 882

  511 copy_or_move: '=' .

    $default  reduce using rule 511 (copy_or_move)


State 883

  515 variable_declaration: variable_name_with_pos_list ':' . type_declaration
  516                     | variable_name_with_pos_list ':' . type_declaration copy_or_move expr

    "type"       shift, and go to state 219
    "array"      shift, and go to state 220
    "table"      shift, and go to state 221
    "typedecl"   shift, and go to state 222
    "iterator"   shift, and go to state 223
    "smart_ptr"  shift, and go to state 224
    "bool"       shift, and go to state 225
    "void"       shift, and go to state 226
    "string"     shift, and go to state 227
    "auto"       shift, and go to state 228
    "int"        shift, and go to state 229
    "int2"       shift, and go to state 230
    "int3"       shift, and go to state 231
    "int4"       shift, and go to state 232
    "uint"       shift, and go to state 233
    "bitfield"   shift, and go to state 234
    "uint2"      shift, and go to state 235
    "uint3"      shift, and go to state 236
    "uint4"      shift, and go to state 237
    "float"      shift, and go to state 238
    "float2"     shift, and go to state 239
    "float3"     shift, and go to state 240
    "float4"     shift, and go to state 241
    "range"      shift, and go to state 242
    "urange"     shift, and go to state 243
    "range64"    shift, and go to state 244
    "urange64"   shift, and go to state 245
    "block"      shift, and go to state 246
    "int64"      shift, and go to state 247
    "uint64"     shift, and go to state 248
    "double"     shift, and go to state 249
    "function"   shift, and go to state 250
    "lambda"     shift, and go to state 251
    "int8"       shift, and go to state 252
    "uint8"      shift, and go to state 253
    "int16"      shift, and go to state 254
    "uint16"     shift, and go to state 255
    "tuple"      shift, and go to state 256
    "variant"    shift, and go to state 257
    "::"         shift, and go to state 55
    "$t"         shift, and go to state 258
    "name"       shift, and go to state 56
    '$'          shift, and go to state 259

    name_in_namespace                   go to state 260
    basic_type_declaration              go to state 261
    structure_type_declaration          go to state 262
    auto_type_declaration               go to state 263
    bitfield_type_declaration           go to state 264
    type_declaration_no_options         go to state 265
    type_declaration_no_options_no_dim  go to state 266
    type_declaration                    go to state 1061


State 884

  514 variable_declaration: variable_name_with_pos_list '&' .

    $default  reduce using rule 514 (variable_declaration)


State 885

  517 variable_declaration: variable_name_with_pos_list copy_or_move . expr

    "struct"                          shift, and go to state 409
    "class"                           shift, and go to state 410
    "true"                            shift, and go to state 411
    "false"                           shift, and go to state 412
    "new"                             shift, and go to state 413
    "typeinfo"                        shift, and go to state 414
    "type"                            shift, and go to state 415
    "array"                           shift, and go to state 416
    "null"                            shift, and go to state 417
    "table"                           shift, and go to state 418
    "deref"                           shift, and go to state 419
    "cast"                            shift, and go to state 420
    "upcast"                          shift, and go to state 421
    "addr"                            shift, and go to state 422
    "reinterpret"                     shift, and go to state 423
    "unsafe"                          shift, and go to state 424
    "fixed_array"                     shift, and go to state 425
    "default"                         shift, and go to state 426
    "bool"                            shift, and go to state 225
    "void"                            shift, and go to state 226
    "string"                          shift, and go to state 227
    "int"                             shift, and go to state 229
    "int2"                            shift, and go to state 230
    "int3"                            shift, and go to state 231
    "int4"                            shift, and go to state 232
    "uint"                            shift, and go to state 233
    "bitfield"                        shift, and go to state 427
    "uint2"                           shift, and go to state 235
    "uint3"                           shift, and go to state 236
    "uint4"                           shift, and go to state 237
    "float"                           shift, and go to state 238
    "float2"                          shift, and go to state 239
    "float3"                          shift, and go to state 240
    "float4"                          shift, and go to state 241
    "range"                           shift, and go to state 242
    "urange"                          shift, and go to state 243
    "range64"                         shift, and go to state 244
    "urange64"                        shift, and go to state 245
    "int64"                           shift, and go to state 247
    "uint64"                          shift, and go to state 248
    "double"                          shift, and go to state 249
    "int8"                            shift, and go to state 252
    "uint8"                           shift, and go to state 253
    "int16"                           shift, and go to state 254
    "uint16"                          shift, and go to state 255
    "tuple"                           shift, and go to state 428
    "variant"                         shift, and go to state 429
    "generator"                       shift, and go to state 430
    "++"                              shift, and go to state 431
    "--"                              shift, and go to state 432
    "::"                              shift, and go to state 55
    "$$"                              shift, and go to state 433
    "$i"                              shift, and go to state 434
    "$v"                              shift, and go to state 435
    "$b"                              shift, and go to state 436
    "$a"                              shift, and go to state 437
    "$c"                              shift, and go to state 438
    "..."                             shift, and go to state 439
    "integer constant"                shift, and go to state 440
    "long integer constant"           shift, and go to state 441
    "unsigned integer constant"       shift, and go to state 442
    "unsigned long integer constant"  shift, and go to state 443
    "unsigned int8 constant"          shift, and go to state 444
    "floating point constant"         shift, and go to state 445
    "double constant"                 shift, and go to state 446
    "name"                            shift, and go to state 56
    "start of the string"             shift, and go to state 447
    "begin of code block"             shift, and go to state 448
    '-'                               shift, and go to state 449
    '+'                               shift, and go to state 450
    '*'                               shift, and go to state 451
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 452
    '!'                               shift, and go to state 453
    '['                               shift, and go to state 454
    '('                               shift, and go to state 455
    '$'                               shift, and go to state 456
    '@'                               shift, and go to state 457

    string_builder          go to state 458
    expr_reader             go to state 459
    expr_call_pipe          go to state 460
    name_in_namespace       go to state 461
    expr_new                go to state 462
    expr_cast               go to state 463
    expr_type_decl          go to state 464
    expr_type_info          go to state 465
    block_or_lambda         go to state 466
    expr_full_block         go to state 467
    expr_numeric_const      go to state 468
    expr_named_call         go to state 469
    expr_method_call        go to state 470
    func_addr_expr          go to state 471
    expr_field              go to state 472
    expr_call               go to state 473
    expr                    go to state 1062
    expr_mtag               go to state 475
    basic_type_declaration  go to state 476
    make_decl               go to state 477
    make_struct_decl        go to state 478
    make_tuple_call         go to state 479
    make_dim_decl           go to state 480
    make_table_decl         go to state 481
    array_comprehension     go to state 482


State 886

   73 expression_while_loop: "while" '(' . expr ')' expression_block

    "struct"                          shift, and go to state 409
    "class"                           shift, and go to state 410
    "true"                            shift, and go to state 411
    "false"                           shift, and go to state 412
    "new"                             shift, and go to state 413
    "typeinfo"                        shift, and go to state 414
    "type"                            shift, and go to state 415
    "array"                           shift, and go to state 416
    "null"                            shift, and go to state 417
    "table"                           shift, and go to state 418
    "deref"                           shift, and go to state 419
    "cast"                            shift, and go to state 420
    "upcast"                          shift, and go to state 421
    "addr"                            shift, and go to state 422
    "reinterpret"                     shift, and go to state 423
    "unsafe"                          shift, and go to state 424
    "fixed_array"                     shift, and go to state 425
    "default"                         shift, and go to state 426
    "bool"                            shift, and go to state 225
    "void"                            shift, and go to state 226
    "string"                          shift, and go to state 227
    "int"                             shift, and go to state 229
    "int2"                            shift, and go to state 230
    "int3"                            shift, and go to state 231
    "int4"                            shift, and go to state 232
    "uint"                            shift, and go to state 233
    "bitfield"                        shift, and go to state 427
    "uint2"                           shift, and go to state 235
    "uint3"                           shift, and go to state 236
    "uint4"                           shift, and go to state 237
    "float"                           shift, and go to state 238
    "float2"                          shift, and go to state 239
    "float3"                          shift, and go to state 240
    "float4"                          shift, and go to state 241
    "range"                           shift, and go to state 242
    "urange"                          shift, and go to state 243
    "range64"                         shift, and go to state 244
    "urange64"                        shift, and go to state 245
    "int64"                           shift, and go to state 247
    "uint64"                          shift, and go to state 248
    "double"                          shift, and go to state 249
    "int8"                            shift, and go to state 252
    "uint8"                           shift, and go to state 253
    "int16"                           shift, and go to state 254
    "uint16"                          shift, and go to state 255
    "tuple"                           shift, and go to state 428
    "variant"                         shift, and go to state 429
    "generator"                       shift, and go to state 430
    "++"                              shift, and go to state 431
    "--"                              shift, and go to state 432
    "::"                              shift, and go to state 55
    "$$"                              shift, and go to state 433
    "$i"                              shift, and go to state 434
    "$v"                              shift, and go to state 435
    "$b"                              shift, and go to state 436
    "$a"                              shift, and go to state 437
    "$c"                              shift, and go to state 438
    "..."                             shift, and go to state 439
    "integer constant"                shift, and go to state 440
    "long integer constant"           shift, and go to state 441
    "unsigned integer constant"       shift, and go to state 442
    "unsigned long integer constant"  shift, and go to state 443
    "unsigned int8 constant"          shift, and go to state 444
    "floating point constant"         shift, and go to state 445
    "double constant"                 shift, and go to state 446
    "name"                            shift, and go to state 56
    "start of the string"             shift, and go to state 447
    "begin of code block"             shift, and go to state 448
    '-'                               shift, and go to state 449
    '+'                               shift, and go to state 450
    '*'                               shift, and go to state 451
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 452
    '!'                               shift, and go to state 453
    '['                               shift, and go to state 454
    '('                               shift, and go to state 455
    '$'                               shift, and go to state 456
    '@'                               shift, and go to state 457

    string_builder          go to state 458
    expr_reader             go to state 459
    expr_call_pipe          go to state 460
    name_in_namespace       go to state 461
    expr_new                go to state 462
    expr_cast               go to state 463
    expr_type_decl          go to state 464
    expr_type_info          go to state 465
    block_or_lambda         go to state 466
    expr_full_block         go to state 467
    expr_numeric_const      go to state 468
    expr_named_call         go to state 469
    expr_method_call        go to state 470
    func_addr_expr          go to state 471
    expr_field              go to state 472
    expr_call               go to state 473
    expr                    go to state 1063
    expr_mtag               go to state 475
    basic_type_declaration  go to state 476
    make_decl               go to state 477
    make_struct_decl        go to state 478
    make_tuple_call         go to state 479
    make_dim_decl           go to state 480
    make_table_decl         go to state 481
    array_comprehension     go to state 482


State 887

   71 expression_for_loop: "for" '(' . variable_name_with_pos_list "in" expr_list ')' expression_block

    "$i"    shift, and go to state 678
    "name"  shift, and go to state 679

    variable_name_with_pos_list  go to state 1064


State 888

  266 expression_return: "return" "<-" . expr

    "struct"                          shift, and go to state 409
    "class"                           shift, and go to state 410
    "true"                            shift, and go to state 411
    "false"                           shift, and go to state 412
    "new"                             shift, and go to state 413
    "typeinfo"                        shift, and go to state 414
    "type"                            shift, and go to state 415
    "array"                           shift, and go to state 416
    "null"                            shift, and go to state 417
    "table"                           shift, and go to state 418
    "deref"                           shift, and go to state 419
    "cast"                            shift, and go to state 420
    "upcast"                          shift, and go to state 421
    "addr"                            shift, and go to state 422
    "reinterpret"                     shift, and go to state 423
    "unsafe"                          shift, and go to state 424
    "fixed_array"                     shift, and go to state 425
    "default"                         shift, and go to state 426
    "bool"                            shift, and go to state 225
    "void"                            shift, and go to state 226
    "string"                          shift, and go to state 227
    "int"                             shift, and go to state 229
    "int2"                            shift, and go to state 230
    "int3"                            shift, and go to state 231
    "int4"                            shift, and go to state 232
    "uint"                            shift, and go to state 233
    "bitfield"                        shift, and go to state 427
    "uint2"                           shift, and go to state 235
    "uint3"                           shift, and go to state 236
    "uint4"                           shift, and go to state 237
    "float"                           shift, and go to state 238
    "float2"                          shift, and go to state 239
    "float3"                          shift, and go to state 240
    "float4"                          shift, and go to state 241
    "range"                           shift, and go to state 242
    "urange"                          shift, and go to state 243
    "range64"                         shift, and go to state 244
    "urange64"                        shift, and go to state 245
    "int64"                           shift, and go to state 247
    "uint64"                          shift, and go to state 248
    "double"                          shift, and go to state 249
    "int8"                            shift, and go to state 252
    "uint8"                           shift, and go to state 253
    "int16"                           shift, and go to state 254
    "uint16"                          shift, and go to state 255
    "tuple"                           shift, and go to state 428
    "variant"                         shift, and go to state 429
    "generator"                       shift, and go to state 430
    "++"                              shift, and go to state 431
    "--"                              shift, and go to state 432
    "::"                              shift, and go to state 55
    "$$"                              shift, and go to state 433
    "$i"                              shift, and go to state 434
    "$v"                              shift, and go to state 435
    "$b"                              shift, and go to state 436
    "$a"                              shift, and go to state 437
    "$c"                              shift, and go to state 438
    "..."                             shift, and go to state 439
    "integer constant"                shift, and go to state 440
    "long integer constant"           shift, and go to state 441
    "unsigned integer constant"       shift, and go to state 442
    "unsigned long integer constant"  shift, and go to state 443
    "unsigned int8 constant"          shift, and go to state 444
    "floating point constant"         shift, and go to state 445
    "double constant"                 shift, and go to state 446
    "name"                            shift, and go to state 56
    "start of the string"             shift, and go to state 447
    "begin of code block"             shift, and go to state 448
    '-'                               shift, and go to state 449
    '+'                               shift, and go to state 450
    '*'                               shift, and go to state 451
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 452
    '!'                               shift, and go to state 453
    '['                               shift, and go to state 454
    '('                               shift, and go to state 455
    '$'                               shift, and go to state 456
    '@'                               shift, and go to state 457

    string_builder          go to state 458
    expr_reader             go to state 459
    expr_call_pipe          go to state 460
    name_in_namespace       go to state 461
    expr_new                go to state 462
    expr_cast               go to state 463
    expr_type_decl          go to state 464
    expr_type_info          go to state 465
    block_or_lambda         go to state 466
    expr_full_block         go to state 467
    expr_numeric_const      go to state 468
    expr_named_call         go to state 469
    expr_method_call        go to state 470
    func_addr_expr          go to state 471
    expr_field              go to state 472
    expr_call               go to state 473
    expr                    go to state 1065
    expr_mtag               go to state 475
    basic_type_declaration  go to state 476
    make_decl               go to state 477
    make_struct_decl        go to state 478
    make_tuple_call         go to state 479
    make_dim_decl           go to state 480
    make_table_decl         go to state 481
    array_comprehension     go to state 482


State 889

  265 expression_return: "return" expr .
  347 expr_method_call: expr . "->" "name" '(' ')'
  348                 | expr . "->" "name" '(' expr_list ')'
  358 expr_field: expr . '.' "name"
  359           | expr . '.' '.' "name"
  360           | expr . '.' "name" '(' ')'
  361           | expr . '.' "name" '(' expr_list ')'
  362           | expr . '.' basic_type_declaration '(' ')'
  363           | expr . '.' basic_type_declaration '(' expr_list ')'
  366           | expr . '.' $@21 error $@22
  388 expr: expr . "<<" expr
  389     | expr . ">>" expr
  390     | expr . "<<<" expr
  391     | expr . ">>>" expr
  392     | expr . '+' expr
  393     | expr . '-' expr
  394     | expr . '*' expr
  395     | expr . '/' expr
  396     | expr . '%' expr
  397     | expr . '<' expr
  398     | expr . '>' expr
  399     | expr . "==" expr
  400     | expr . "!=" expr
  401     | expr . "<=" expr
  402     | expr . ">=" expr
  403     | expr . '&' expr
  404     | expr . '|' expr
  405     | expr . '^' expr
  406     | expr . "&&" expr
  407     | expr . "||" expr
  408     | expr . "^^" expr
  409     | expr . ".." expr
  412     | expr . "++"
  413     | expr . "--"
  415     | expr . '[' expr ']'
  416     | expr . '.' '[' expr ']'
  417     | expr . "?[" expr ']'
  418     | expr . '.' "?[" expr ']'
  419     | expr . "?." "name"
  420     | expr . '.' "?." "name"
  429     | expr . "??" expr
  430     | expr . '?' expr ':' expr
  433     | expr . "is" "type" '<' $@23 type_declaration_no_options '>' $@24
  434     | expr . "is" basic_type_declaration
  435     | expr . "is" "name"
  436     | expr . "as" "name"
  439     | expr . "as" "type" '<' $@25 type_declaration '>' $@26
  440     | expr . "as" basic_type_declaration
  441     | expr . '?' "as" "name"
  444     | expr . '?' "as" "type" '<' $@27 type_declaration '>' $@28
  445     | expr . '?' "as" basic_type_declaration
  453     | expr . "<|" expr
  454     | expr . "|>" expr
  455     | expr . "|>" basic_type_declaration
  466 expr_mtag: expr . '.' "$f" '(' expr ')'
  467          | expr . "?." "$f" '(' expr ')'
  468          | expr . '.' '.' "$f" '(' expr ')'
  469          | expr . '.' "?." "$f" '(' expr ')'
  470          | expr . "as" "$f" '(' expr ')'
  471          | expr . '?' "as" "$f" '(' expr ')'
  472          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 609
    "as"   shift, and go to state 610
    "<<"   shift, and go to state 611
    ">>"   shift, and go to state 612
    "++"   shift, and go to state 613
    "--"   shift, and go to state 614
    "<="   shift, and go to state 615
    ">="   shift, and go to state 616
    "=="   shift, and go to state 617
    "!="   shift, and go to state 618
    "->"   shift, and go to state 619
    "??"   shift, and go to state 620
    "?."   shift, and go to state 621
    "?["   shift, and go to state 622
    "<|"   shift, and go to state 623
    "|>"   shift, and go to state 624
    "<<<"  shift, and go to state 625
    ">>>"  shift, and go to state 626
    "&&"   shift, and go to state 627
    "||"   shift, and go to state 628
    "^^"   shift, and go to state 629
    ".."   shift, and go to state 630
    '?'    shift, and go to state 631
    '|'    shift, and go to state 632
    '^'    shift, and go to state 633
    '&'    shift, and go to state 634
    '<'    shift, and go to state 635
    '>'    shift, and go to state 636
    '-'    shift, and go to state 637
    '+'    shift, and go to state 638
    '*'    shift, and go to state 639
    '/'    shift, and go to state 640
    '%'    shift, and go to state 641
    '.'    shift, and go to state 642
    '['    shift, and go to state 643

    $default  reduce using rule 265 (expression_return)


State 890

  269 expression_try_catch: "try" expression_block . "recover" expression_block

    "recover"  shift, and go to state 1066


State 891

  251 expression_delete: "delete" "explicit" . expr

    "struct"                          shift, and go to state 409
    "class"                           shift, and go to state 410
    "true"                            shift, and go to state 411
    "false"                           shift, and go to state 412
    "new"                             shift, and go to state 413
    "typeinfo"                        shift, and go to state 414
    "type"                            shift, and go to state 415
    "array"                           shift, and go to state 416
    "null"                            shift, and go to state 417
    "table"                           shift, and go to state 418
    "deref"                           shift, and go to state 419
    "cast"                            shift, and go to state 420
    "upcast"                          shift, and go to state 421
    "addr"                            shift, and go to state 422
    "reinterpret"                     shift, and go to state 423
    "unsafe"                          shift, and go to state 424
    "fixed_array"                     shift, and go to state 425
    "default"                         shift, and go to state 426
    "bool"                            shift, and go to state 225
    "void"                            shift, and go to state 226
    "string"                          shift, and go to state 227
    "int"                             shift, and go to state 229
    "int2"                            shift, and go to state 230
    "int3"                            shift, and go to state 231
    "int4"                            shift, and go to state 232
    "uint"                            shift, and go to state 233
    "bitfield"                        shift, and go to state 427
    "uint2"                           shift, and go to state 235
    "uint3"                           shift, and go to state 236
    "uint4"                           shift, and go to state 237
    "float"                           shift, and go to state 238
    "float2"                          shift, and go to state 239
    "float3"                          shift, and go to state 240
    "float4"                          shift, and go to state 241
    "range"                           shift, and go to state 242
    "urange"                          shift, and go to state 243
    "range64"                         shift, and go to state 244
    "urange64"                        shift, and go to state 245
    "int64"                           shift, and go to state 247
    "uint64"                          shift, and go to state 248
    "double"                          shift, and go to state 249
    "int8"                            shift, and go to state 252
    "uint8"                           shift, and go to state 253
    "int16"                           shift, and go to state 254
    "uint16"                          shift, and go to state 255
    "tuple"                           shift, and go to state 428
    "variant"                         shift, and go to state 429
    "generator"                       shift, and go to state 430
    "++"                              shift, and go to state 431
    "--"                              shift, and go to state 432
    "::"                              shift, and go to state 55
    "$$"                              shift, and go to state 433
    "$i"                              shift, and go to state 434
    "$v"                              shift, and go to state 435
    "$b"                              shift, and go to state 436
    "$a"                              shift, and go to state 437
    "$c"                              shift, and go to state 438
    "..."                             shift, and go to state 439
    "integer constant"                shift, and go to state 440
    "long integer constant"           shift, and go to state 441
    "unsigned integer constant"       shift, and go to state 442
    "unsigned long integer constant"  shift, and go to state 443
    "unsigned int8 constant"          shift, and go to state 444
    "floating point constant"         shift, and go to state 445
    "double constant"                 shift, and go to state 446
    "name"                            shift, and go to state 56
    "start of the string"             shift, and go to state 447
    "begin of code block"             shift, and go to state 448
    '-'                               shift, and go to state 449
    '+'                               shift, and go to state 450
    '*'                               shift, and go to state 451
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 452
    '!'                               shift, and go to state 453
    '['                               shift, and go to state 454
    '('                               shift, and go to state 455
    '$'                               shift, and go to state 456
    '@'                               shift, and go to state 457

    string_builder          go to state 458
    expr_reader             go to state 459
    expr_call_pipe          go to state 460
    name_in_namespace       go to state 461
    expr_new                go to state 462
    expr_cast               go to state 463
    expr_type_decl          go to state 464
    expr_type_info          go to state 465
    block_or_lambda         go to state 466
    expr_full_block         go to state 467
    expr_numeric_const      go to state 468
    expr_named_call         go to state 469
    expr_method_call        go to state 470
    func_addr_expr          go to state 471
    expr_field              go to state 472
    expr_call               go to state 473
    expr                    go to state 1067
    expr_mtag               go to state 475
    basic_type_declaration  go to state 476
    make_decl               go to state 477
    make_struct_decl        go to state 478
    make_tuple_call         go to state 479
    make_dim_decl           go to state 480
    make_table_decl         go to state 481
    array_comprehension     go to state 482


State 892

  250 expression_delete: "delete" expr .
  347 expr_method_call: expr . "->" "name" '(' ')'
  348                 | expr . "->" "name" '(' expr_list ')'
  358 expr_field: expr . '.' "name"
  359           | expr . '.' '.' "name"
  360           | expr . '.' "name" '(' ')'
  361           | expr . '.' "name" '(' expr_list ')'
  362           | expr . '.' basic_type_declaration '(' ')'
  363           | expr . '.' basic_type_declaration '(' expr_list ')'
  366           | expr . '.' $@21 error $@22
  388 expr: expr . "<<" expr
  389     | expr . ">>" expr
  390     | expr . "<<<" expr
  391     | expr . ">>>" expr
  392     | expr . '+' expr
  393     | expr . '-' expr
  394     | expr . '*' expr
  395     | expr . '/' expr
  396     | expr . '%' expr
  397     | expr . '<' expr
  398     | expr . '>' expr
  399     | expr . "==" expr
  400     | expr . "!=" expr
  401     | expr . "<=" expr
  402     | expr . ">=" expr
  403     | expr . '&' expr
  404     | expr . '|' expr
  405     | expr . '^' expr
  406     | expr . "&&" expr
  407     | expr . "||" expr
  408     | expr . "^^" expr
  409     | expr . ".." expr
  412     | expr . "++"
  413     | expr . "--"
  415     | expr . '[' expr ']'
  416     | expr . '.' '[' expr ']'
  417     | expr . "?[" expr ']'
  418     | expr . '.' "?[" expr ']'
  419     | expr . "?." "name"
  420     | expr . '.' "?." "name"
  429     | expr . "??" expr
  430     | expr . '?' expr ':' expr
  433     | expr . "is" "type" '<' $@23 type_declaration_no_options '>' $@24
  434     | expr . "is" basic_type_declaration
  435     | expr . "is" "name"
  436     | expr . "as" "name"
  439     | expr . "as" "type" '<' $@25 type_declaration '>' $@26
  440     | expr . "as" basic_type_declaration
  441     | expr . '?' "as" "name"
  444     | expr . '?' "as" "type" '<' $@27 type_declaration '>' $@28
  445     | expr . '?' "as" basic_type_declaration
  453     | expr . "<|" expr
  454     | expr . "|>" expr
  455     | expr . "|>" basic_type_declaration
  466 expr_mtag: expr . '.' "$f" '(' expr ')'
  467          | expr . "?." "$f" '(' expr ')'
  468          | expr . '.' '.' "$f" '(' expr ')'
  469          | expr . '.' "?." "$f" '(' expr ')'
  470          | expr . "as" "$f" '(' expr ')'
  471          | expr . '?' "as" "$f" '(' expr ')'
  472          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 609
    "as"   shift, and go to state 610
    "<<"   shift, and go to state 611
    ">>"   shift, and go to state 612
    "++"   shift, and go to state 613
    "--"   shift, and go to state 614
    "<="   shift, and go to state 615
    ">="   shift, and go to state 616
    "=="   shift, and go to state 617
    "!="   shift, and go to state 618
    "->"   shift, and go to state 619
    "??"   shift, and go to state 620
    "?."   shift, and go to state 621
    "?["   shift, and go to state 622
    "<|"   shift, and go to state 623
    "|>"   shift, and go to state 624
    "<<<"  shift, and go to state 625
    ">>>"  shift, and go to state 626
    "&&"   shift, and go to state 627
    "||"   shift, and go to state 628
    "^^"   shift, and go to state 629
    ".."   shift, and go to state 630
    '?'    shift, and go to state 631
    '|'    shift, and go to state 632
    '^'    shift, and go to state 633
    '&'    shift, and go to state 634
    '<'    shift, and go to state 635
    '>'    shift, and go to state 636
    '-'    shift, and go to state 637
    '+'    shift, and go to state 638
    '*'    shift, and go to state 639
    '/'    shift, and go to state 640
    '%'    shift, and go to state 641
    '.'    shift, and go to state 642
    '['    shift, and go to state 643

    $default  reduce using rule 250 (expression_delete)


State 893

   74 expression_with: "with" '(' . expr ')' expression_block

    "struct"                          shift, and go to state 409
    "class"                           shift, and go to state 410
    "true"                            shift, and go to state 411
    "false"                           shift, and go to state 412
    "new"                             shift, and go to state 413
    "typeinfo"                        shift, and go to state 414
    "type"                            shift, and go to state 415
    "array"                           shift, and go to state 416
    "null"                            shift, and go to state 417
    "table"                           shift, and go to state 418
    "deref"                           shift, and go to state 419
    "cast"                            shift, and go to state 420
    "upcast"                          shift, and go to state 421
    "addr"                            shift, and go to state 422
    "reinterpret"                     shift, and go to state 423
    "unsafe"                          shift, and go to state 424
    "fixed_array"                     shift, and go to state 425
    "default"                         shift, and go to state 426
    "bool"                            shift, and go to state 225
    "void"                            shift, and go to state 226
    "string"                          shift, and go to state 227
    "int"                             shift, and go to state 229
    "int2"                            shift, and go to state 230
    "int3"                            shift, and go to state 231
    "int4"                            shift, and go to state 232
    "uint"                            shift, and go to state 233
    "bitfield"                        shift, and go to state 427
    "uint2"                           shift, and go to state 235
    "uint3"                           shift, and go to state 236
    "uint4"                           shift, and go to state 237
    "float"                           shift, and go to state 238
    "float2"                          shift, and go to state 239
    "float3"                          shift, and go to state 240
    "float4"                          shift, and go to state 241
    "range"                           shift, and go to state 242
    "urange"                          shift, and go to state 243
    "range64"                         shift, and go to state 244
    "urange64"                        shift, and go to state 245
    "int64"                           shift, and go to state 247
    "uint64"                          shift, and go to state 248
    "double"                          shift, and go to state 249
    "int8"                            shift, and go to state 252
    "uint8"                           shift, and go to state 253
    "int16"                           shift, and go to state 254
    "uint16"                          shift, and go to state 255
    "tuple"                           shift, and go to state 428
    "variant"                         shift, and go to state 429
    "generator"                       shift, and go to state 430
    "++"                              shift, and go to state 431
    "--"                              shift, and go to state 432
    "::"                              shift, and go to state 55
    "$$"                              shift, and go to state 433
    "$i"                              shift, and go to state 434
    "$v"                              shift, and go to state 435
    "$b"                              shift, and go to state 436
    "$a"                              shift, and go to state 437
    "$c"                              shift, and go to state 438
    "..."                             shift, and go to state 439
    "integer constant"                shift, and go to state 440
    "long integer constant"           shift, and go to state 441
    "unsigned integer constant"       shift, and go to state 442
    "unsigned long integer constant"  shift, and go to state 443
    "unsigned int8 constant"          shift, and go to state 444
    "floating point constant"         shift, and go to state 445
    "double constant"                 shift, and go to state 446
    "name"                            shift, and go to state 56
    "start of the string"             shift, and go to state 447
    "begin of code block"             shift, and go to state 448
    '-'                               shift, and go to state 449
    '+'                               shift, and go to state 450
    '*'                               shift, and go to state 451
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 452
    '!'                               shift, and go to state 453
    '['                               shift, and go to state 454
    '('                               shift, and go to state 455
    '$'                               shift, and go to state 456
    '@'                               shift, and go to state 457

    string_builder          go to state 458
    expr_reader             go to state 459
    expr_call_pipe          go to state 460
    name_in_namespace       go to state 461
    expr_new                go to state 462
    expr_cast               go to state 463
    expr_type_decl          go to state 464
    expr_type_info          go to state 465
    block_or_lambda         go to state 466
    expr_full_block         go to state 467
    expr_numeric_const      go to state 468
    expr_named_call         go to state 469
    expr_method_call        go to state 470
    func_addr_expr          go to state 471
    expr_field              go to state 472
    expr_call               go to state 473
    expr                    go to state 1068
    expr_mtag               go to state 475
    basic_type_declaration  go to state 476
    make_decl               go to state 477
    make_struct_decl        go to state 478
    make_tuple_call         go to state 479
    make_dim_decl           go to state 480
    make_table_decl         go to state 481
    array_comprehension     go to state 482


State 894

   75 expression_with_alias: "assume" "name" . '=' expr

    '='  shift, and go to state 1069


State 895

  237 expression_any: "pass" "end of expression" .

    $default  reduce using rule 237 (expression_any)


State 896

   52 expression_label: "label" "integer constant" . ':'

    ':'  shift, and go to state 1070


State 897

   53 expression_goto: "goto" "label" . "integer constant"

    "integer constant"  shift, and go to state 1071


State 898

   54 expression_goto: "goto" expr .
  347 expr_method_call: expr . "->" "name" '(' ')'
  348                 | expr . "->" "name" '(' expr_list ')'
  358 expr_field: expr . '.' "name"
  359           | expr . '.' '.' "name"
  360           | expr . '.' "name" '(' ')'
  361           | expr . '.' "name" '(' expr_list ')'
  362           | expr . '.' basic_type_declaration '(' ')'
  363           | expr . '.' basic_type_declaration '(' expr_list ')'
  366           | expr . '.' $@21 error $@22
  388 expr: expr . "<<" expr
  389     | expr . ">>" expr
  390     | expr . "<<<" expr
  391     | expr . ">>>" expr
  392     | expr . '+' expr
  393     | expr . '-' expr
  394     | expr . '*' expr
  395     | expr . '/' expr
  396     | expr . '%' expr
  397     | expr . '<' expr
  398     | expr . '>' expr
  399     | expr . "==" expr
  400     | expr . "!=" expr
  401     | expr . "<=" expr
  402     | expr . ">=" expr
  403     | expr . '&' expr
  404     | expr . '|' expr
  405     | expr . '^' expr
  406     | expr . "&&" expr
  407     | expr . "||" expr
  408     | expr . "^^" expr
  409     | expr . ".." expr
  412     | expr . "++"
  413     | expr . "--"
  415     | expr . '[' expr ']'
  416     | expr . '.' '[' expr ']'
  417     | expr . "?[" expr ']'
  418     | expr . '.' "?[" expr ']'
  419     | expr . "?." "name"
  420     | expr . '.' "?." "name"
  429     | expr . "??" expr
  430     | expr . '?' expr ':' expr
  433     | expr . "is" "type" '<' $@23 type_declaration_no_options '>' $@24
  434     | expr . "is" basic_type_declaration
  435     | expr . "is" "name"
  436     | expr . "as" "name"
  439     | expr . "as" "type" '<' $@25 type_declaration '>' $@26
  440     | expr . "as" basic_type_declaration
  441     | expr . '?' "as" "name"
  444     | expr . '?' "as" "type" '<' $@27 type_declaration '>' $@28
  445     | expr . '?' "as" basic_type_declaration
  453     | expr . "<|" expr
  454     | expr . "|>" expr
  455     | expr . "|>" basic_type_declaration
  466 expr_mtag: expr . '.' "$f" '(' expr ')'
  467          | expr . "?." "$f" '(' expr ')'
  468          | expr . '.' '.' "$f" '(' expr ')'
  469          | expr . '.' "?." "$f" '(' expr ')'
  470          | expr . "as" "$f" '(' expr ')'
  471          | expr . '?' "as" "$f" '(' expr ')'
  472          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 609
    "as"   shift, and go to state 610
    "<<"   shift, and go to state 611
    ">>"   shift, and go to state 612
    "++"   shift, and go to state 613
    "--"   shift, and go to state 614
    "<="   shift, and go to state 615
    ">="   shift, and go to state 616
    "=="   shift, and go to state 617
    "!="   shift, and go to state 618
    "->"   shift, and go to state 619
    "??"   shift, and go to state 620
    "?."   shift, and go to state 621
    "?["   shift, and go to state 622
    "<|"   shift, and go to state 623
    "|>"   shift, and go to state 624
    "<<<"  shift, and go to state 625
    ">>>"  shift, and go to state 626
    "&&"   shift, and go to state 627
    "||"   shift, and go to state 628
    "^^"   shift, and go to state 629
    ".."   shift, and go to state 630
    '?'    shift, and go to state 631
    '|'    shift, and go to state 632
    '^'    shift, and go to state 633
    '&'    shift, and go to state 634
    '<'    shift, and go to state 635
    '>'    shift, and go to state 636
    '-'    shift, and go to state 637
    '+'    shift, and go to state 638
    '*'    shift, and go to state 639
    '/'    shift, and go to state 640
    '%'    shift, and go to state 641
    '.'    shift, and go to state 642
    '['    shift, and go to state 643

    $default  reduce using rule 54 (expression_goto)


State 899

   72 expression_unsafe: "unsafe" expression_block .

    $default  reduce using rule 72 (expression_unsafe)


State 900

  268 expression_yield: "yield" "<-" . expr

    "struct"                          shift, and go to state 409
    "class"                           shift, and go to state 410
    "true"                            shift, and go to state 411
    "false"                           shift, and go to state 412
    "new"                             shift, and go to state 413
    "typeinfo"                        shift, and go to state 414
    "type"                            shift, and go to state 415
    "array"                           shift, and go to state 416
    "null"                            shift, and go to state 417
    "table"                           shift, and go to state 418
    "deref"                           shift, and go to state 419
    "cast"                            shift, and go to state 420
    "upcast"                          shift, and go to state 421
    "addr"                            shift, and go to state 422
    "reinterpret"                     shift, and go to state 423
    "unsafe"                          shift, and go to state 424
    "fixed_array"                     shift, and go to state 425
    "default"                         shift, and go to state 426
    "bool"                            shift, and go to state 225
    "void"                            shift, and go to state 226
    "string"                          shift, and go to state 227
    "int"                             shift, and go to state 229
    "int2"                            shift, and go to state 230
    "int3"                            shift, and go to state 231
    "int4"                            shift, and go to state 232
    "uint"                            shift, and go to state 233
    "bitfield"                        shift, and go to state 427
    "uint2"                           shift, and go to state 235
    "uint3"                           shift, and go to state 236
    "uint4"                           shift, and go to state 237
    "float"                           shift, and go to state 238
    "float2"                          shift, and go to state 239
    "float3"                          shift, and go to state 240
    "float4"                          shift, and go to state 241
    "range"                           shift, and go to state 242
    "urange"                          shift, and go to state 243
    "range64"                         shift, and go to state 244
    "urange64"                        shift, and go to state 245
    "int64"                           shift, and go to state 247
    "uint64"                          shift, and go to state 248
    "double"                          shift, and go to state 249
    "int8"                            shift, and go to state 252
    "uint8"                           shift, and go to state 253
    "int16"                           shift, and go to state 254
    "uint16"                          shift, and go to state 255
    "tuple"                           shift, and go to state 428
    "variant"                         shift, and go to state 429
    "generator"                       shift, and go to state 430
    "++"                              shift, and go to state 431
    "--"                              shift, and go to state 432
    "::"                              shift, and go to state 55
    "$$"                              shift, and go to state 433
    "$i"                              shift, and go to state 434
    "$v"                              shift, and go to state 435
    "$b"                              shift, and go to state 436
    "$a"                              shift, and go to state 437
    "$c"                              shift, and go to state 438
    "..."                             shift, and go to state 439
    "integer constant"                shift, and go to state 440
    "long integer constant"           shift, and go to state 441
    "unsigned integer constant"       shift, and go to state 442
    "unsigned long integer constant"  shift, and go to state 443
    "unsigned int8 constant"          shift, and go to state 444
    "floating point constant"         shift, and go to state 445
    "double constant"                 shift, and go to state 446
    "name"                            shift, and go to state 56
    "start of the string"             shift, and go to state 447
    "begin of code block"             shift, and go to state 448
    '-'                               shift, and go to state 449
    '+'                               shift, and go to state 450
    '*'                               shift, and go to state 451
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 452
    '!'                               shift, and go to state 453
    '['                               shift, and go to state 454
    '('                               shift, and go to state 455
    '$'                               shift, and go to state 456
    '@'                               shift, and go to state 457

    string_builder          go to state 458
    expr_reader             go to state 459
    expr_call_pipe          go to state 460
    name_in_namespace       go to state 461
    expr_new                go to state 462
    expr_cast               go to state 463
    expr_type_decl          go to state 464
    expr_type_info          go to state 465
    block_or_lambda         go to state 466
    expr_full_block         go to state 467
    expr_numeric_const      go to state 468
    expr_named_call         go to state 469
    expr_method_call        go to state 470
    func_addr_expr          go to state 471
    expr_field              go to state 472
    expr_call               go to state 473
    expr                    go to state 1072
    expr_mtag               go to state 475
    basic_type_declaration  go to state 476
    make_decl               go to state 477
    make_struct_decl        go to state 478
    make_tuple_call         go to state 479
    make_dim_decl           go to state 480
    make_table_decl         go to state 481
    array_comprehension     go to state 482


State 901

  267 expression_yield: "yield" expr .
  347 expr_method_call: expr . "->" "name" '(' ')'
  348                 | expr . "->" "name" '(' expr_list ')'
  358 expr_field: expr . '.' "name"
  359           | expr . '.' '.' "name"
  360           | expr . '.' "name" '(' ')'
  361           | expr . '.' "name" '(' expr_list ')'
  362           | expr . '.' basic_type_declaration '(' ')'
  363           | expr . '.' basic_type_declaration '(' expr_list ')'
  366           | expr . '.' $@21 error $@22
  388 expr: expr . "<<" expr
  389     | expr . ">>" expr
  390     | expr . "<<<" expr
  391     | expr . ">>>" expr
  392     | expr . '+' expr
  393     | expr . '-' expr
  394     | expr . '*' expr
  395     | expr . '/' expr
  396     | expr . '%' expr
  397     | expr . '<' expr
  398     | expr . '>' expr
  399     | expr . "==" expr
  400     | expr . "!=" expr
  401     | expr . "<=" expr
  402     | expr . ">=" expr
  403     | expr . '&' expr
  404     | expr . '|' expr
  405     | expr . '^' expr
  406     | expr . "&&" expr
  407     | expr . "||" expr
  408     | expr . "^^" expr
  409     | expr . ".." expr
  412     | expr . "++"
  413     | expr . "--"
  415     | expr . '[' expr ']'
  416     | expr . '.' '[' expr ']'
  417     | expr . "?[" expr ']'
  418     | expr . '.' "?[" expr ']'
  419     | expr . "?." "name"
  420     | expr . '.' "?." "name"
  429     | expr . "??" expr
  430     | expr . '?' expr ':' expr
  433     | expr . "is" "type" '<' $@23 type_declaration_no_options '>' $@24
  434     | expr . "is" basic_type_declaration
  435     | expr . "is" "name"
  436     | expr . "as" "name"
  439     | expr . "as" "type" '<' $@25 type_declaration '>' $@26
  440     | expr . "as" basic_type_declaration
  441     | expr . '?' "as" "name"
  444     | expr . '?' "as" "type" '<' $@27 type_declaration '>' $@28
  445     | expr . '?' "as" basic_type_declaration
  453     | expr . "<|" expr
  454     | expr . "|>" expr
  455     | expr . "|>" basic_type_declaration
  466 expr_mtag: expr . '.' "$f" '(' expr ')'
  467          | expr . "?." "$f" '(' expr ')'
  468          | expr . '.' '.' "$f" '(' expr ')'
  469          | expr . '.' "?." "$f" '(' expr ')'
  470          | expr . "as" "$f" '(' expr ')'
  471          | expr . '?' "as" "$f" '(' expr ')'
  472          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 609
    "as"   shift, and go to state 610
    "<<"   shift, and go to state 611
    ">>"   shift, and go to state 612
    "++"   shift, and go to state 613
    "--"   shift, and go to state 614
    "<="   shift, and go to state 615
    ">="   shift, and go to state 616
    "=="   shift, and go to state 617
    "!="   shift, and go to state 618
    "->"   shift, and go to state 619
    "??"   shift, and go to state 620
    "?."   shift, and go to state 621
    "?["   shift, and go to state 622
    "<|"   shift, and go to state 623
    "|>"   shift, and go to state 624
    "<<<"  shift, and go to state 625
    ">>>"  shift, and go to state 626
    "&&"   shift, and go to state 627
    "||"   shift, and go to state 628
    "^^"   shift, and go to state 629
    ".."   shift, and go to state 630
    '?'    shift, and go to state 631
    '|'    shift, and go to state 632
    '^'    shift, and go to state 633
    '&'    shift, and go to state 634
    '<'    shift, and go to state 635
    '>'    shift, and go to state 636
    '-'    shift, and go to state 637
    '+'    shift, and go to state 638
    '*'    shift, and go to state 639
    '/'    shift, and go to state 640
    '%'    shift, and go to state 641
    '.'    shift, and go to state 642
    '['    shift, and go to state 643

    $default  reduce using rule 267 (expression_yield)


State 902

  235 expression_any: expression_label "end of expression" .

    $default  reduce using rule 235 (expression_any)


State 903

  236 expression_any: expression_goto "end of expression" .

    $default  reduce using rule 236 (expression_any)


State 904

   69 expression_if_then_else: if_or_static_if '(' . expr ')' expression_block expression_else

    "struct"                          shift, and go to state 409
    "class"                           shift, and go to state 410
    "true"                            shift, and go to state 411
    "false"                           shift, and go to state 412
    "new"                             shift, and go to state 413
    "typeinfo"                        shift, and go to state 414
    "type"                            shift, and go to state 415
    "array"                           shift, and go to state 416
    "null"                            shift, and go to state 417
    "table"                           shift, and go to state 418
    "deref"                           shift, and go to state 419
    "cast"                            shift, and go to state 420
    "upcast"                          shift, and go to state 421
    "addr"                            shift, and go to state 422
    "reinterpret"                     shift, and go to state 423
    "unsafe"                          shift, and go to state 424
    "fixed_array"                     shift, and go to state 425
    "default"                         shift, and go to state 426
    "bool"                            shift, and go to state 225
    "void"                            shift, and go to state 226
    "string"                          shift, and go to state 227
    "int"                             shift, and go to state 229
    "int2"                            shift, and go to state 230
    "int3"                            shift, and go to state 231
    "int4"                            shift, and go to state 232
    "uint"                            shift, and go to state 233
    "bitfield"                        shift, and go to state 427
    "uint2"                           shift, and go to state 235
    "uint3"                           shift, and go to state 236
    "uint4"                           shift, and go to state 237
    "float"                           shift, and go to state 238
    "float2"                          shift, and go to state 239
    "float3"                          shift, and go to state 240
    "float4"                          shift, and go to state 241
    "range"                           shift, and go to state 242
    "urange"                          shift, and go to state 243
    "range64"                         shift, and go to state 244
    "urange64"                        shift, and go to state 245
    "int64"                           shift, and go to state 247
    "uint64"                          shift, and go to state 248
    "double"                          shift, and go to state 249
    "int8"                            shift, and go to state 252
    "uint8"                           shift, and go to state 253
    "int16"                           shift, and go to state 254
    "uint16"                          shift, and go to state 255
    "tuple"                           shift, and go to state 428
    "variant"                         shift, and go to state 429
    "generator"                       shift, and go to state 430
    "++"                              shift, and go to state 431
    "--"                              shift, and go to state 432
    "::"                              shift, and go to state 55
    "$$"                              shift, and go to state 433
    "$i"                              shift, and go to state 434
    "$v"                              shift, and go to state 435
    "$b"                              shift, and go to state 436
    "$a"                              shift, and go to state 437
    "$c"                              shift, and go to state 438
    "..."                             shift, and go to state 439
    "integer constant"                shift, and go to state 440
    "long integer constant"           shift, and go to state 441
    "unsigned integer constant"       shift, and go to state 442
    "unsigned long integer constant"  shift, and go to state 443
    "unsigned int8 constant"          shift, and go to state 444
    "floating point constant"         shift, and go to state 445
    "double constant"                 shift, and go to state 446
    "name"                            shift, and go to state 56
    "start of the string"             shift, and go to state 447
    "begin of code block"             shift, and go to state 448
    '-'                               shift, and go to state 449
    '+'                               shift, and go to state 450
    '*'                               shift, and go to state 451
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 452
    '!'                               shift, and go to state 453
    '['                               shift, and go to state 454
    '('                               shift, and go to state 455
    '$'                               shift, and go to state 456
    '@'                               shift, and go to state 457

    string_builder          go to state 458
    expr_reader             go to state 459
    expr_call_pipe          go to state 460
    name_in_namespace       go to state 461
    expr_new                go to state 462
    expr_cast               go to state 463
    expr_type_decl          go to state 464
    expr_type_info          go to state 465
    block_or_lambda         go to state 466
    expr_full_block         go to state 467
    expr_numeric_const      go to state 468
    expr_named_call         go to state 469
    expr_method_call        go to state 470
    func_addr_expr          go to state 471
    expr_field              go to state 472
    expr_call               go to state 473
    expr                    go to state 1073
    expr_mtag               go to state 475
    basic_type_declaration  go to state 476
    make_decl               go to state 477
    make_struct_decl        go to state 478
    make_tuple_call         go to state 479
    make_dim_decl           go to state 480
    make_table_decl         go to state 481
    array_comprehension     go to state 482


State 905

   70 expression_if_then_else: expression_if_one_liner "if" . '(' expr ')' expression_else_one_liner "end of expression"

    '('  shift, and go to state 1074


State 906

  227 expression_any: expression_with_alias "end of expression" .

    $default  reduce using rule 227 (expression_any)


State 907

  218 expression_block: $@5 "begin of code block" expressions $@6 "end of code block" . expression_block_finally

    "finally"  shift, and go to state 1075

    $default  reduce using rule 212 (expression_block_finally)

    expression_block_finally  go to state 1076


State 908

  222 expression_any: expression_delete "end of expression" .

    $default  reduce using rule 222 (expression_any)


State 909

  229 expression_any: expression_break "end of expression" .

    $default  reduce using rule 229 (expression_any)


State 910

  230 expression_any: expression_continue "end of expression" .

    $default  reduce using rule 230 (expression_any)


State 911

  231 expression_any: expression_return "end of expression" .

    $default  reduce using rule 231 (expression_any)


State 912

  232 expression_any: expression_yield "end of expression" .

    $default  reduce using rule 232 (expression_any)


State 913

  275 optional_in_scope: "inscope" .

    $default  reduce using rule 275 (optional_in_scope)


State 914

  281 expression_let: kwd_let optional_in_scope . let_variable_declaration
  282               | kwd_let optional_in_scope . tuple_expansion_variable_declaration
  283               | kwd_let optional_in_scope . "begin of code block" variable_declaration_list "end of code block"

    "$i"                   shift, and go to state 537
    "name"                 shift, and go to state 538
    "begin of code block"  shift, and go to state 1077
    '('                    shift, and go to state 1078

    tuple_expansion_variable_declaration  go to state 1079
    let_variable_name_with_pos_list       go to state 539
    let_variable_declaration              go to state 1080


State 915

  221 expression_any: expr_assign "end of expression" .

    $default  reduce using rule 221 (expression_any)


State 916

  336 expr_assign: expr "+=" . expr

    "struct"                          shift, and go to state 409
    "class"                           shift, and go to state 410
    "true"                            shift, and go to state 411
    "false"                           shift, and go to state 412
    "new"                             shift, and go to state 413
    "typeinfo"                        shift, and go to state 414
    "type"                            shift, and go to state 415
    "array"                           shift, and go to state 416
    "null"                            shift, and go to state 417
    "table"                           shift, and go to state 418
    "deref"                           shift, and go to state 419
    "cast"                            shift, and go to state 420
    "upcast"                          shift, and go to state 421
    "addr"                            shift, and go to state 422
    "reinterpret"                     shift, and go to state 423
    "unsafe"                          shift, and go to state 424
    "fixed_array"                     shift, and go to state 425
    "default"                         shift, and go to state 426
    "bool"                            shift, and go to state 225
    "void"                            shift, and go to state 226
    "string"                          shift, and go to state 227
    "int"                             shift, and go to state 229
    "int2"                            shift, and go to state 230
    "int3"                            shift, and go to state 231
    "int4"                            shift, and go to state 232
    "uint"                            shift, and go to state 233
    "bitfield"                        shift, and go to state 427
    "uint2"                           shift, and go to state 235
    "uint3"                           shift, and go to state 236
    "uint4"                           shift, and go to state 237
    "float"                           shift, and go to state 238
    "float2"                          shift, and go to state 239
    "float3"                          shift, and go to state 240
    "float4"                          shift, and go to state 241
    "range"                           shift, and go to state 242
    "urange"                          shift, and go to state 243
    "range64"                         shift, and go to state 244
    "urange64"                        shift, and go to state 245
    "int64"                           shift, and go to state 247
    "uint64"                          shift, and go to state 248
    "double"                          shift, and go to state 249
    "int8"                            shift, and go to state 252
    "uint8"                           shift, and go to state 253
    "int16"                           shift, and go to state 254
    "uint16"                          shift, and go to state 255
    "tuple"                           shift, and go to state 428
    "variant"                         shift, and go to state 429
    "generator"                       shift, and go to state 430
    "++"                              shift, and go to state 431
    "--"                              shift, and go to state 432
    "::"                              shift, and go to state 55
    "$$"                              shift, and go to state 433
    "$i"                              shift, and go to state 434
    "$v"                              shift, and go to state 435
    "$b"                              shift, and go to state 436
    "$a"                              shift, and go to state 437
    "$c"                              shift, and go to state 438
    "..."                             shift, and go to state 439
    "integer constant"                shift, and go to state 440
    "long integer constant"           shift, and go to state 441
    "unsigned integer constant"       shift, and go to state 442
    "unsigned long integer constant"  shift, and go to state 443
    "unsigned int8 constant"          shift, and go to state 444
    "floating point constant"         shift, and go to state 445
    "double constant"                 shift, and go to state 446
    "name"                            shift, and go to state 56
    "start of the string"             shift, and go to state 447
    "begin of code block"             shift, and go to state 448
    '-'                               shift, and go to state 449
    '+'                               shift, and go to state 450
    '*'                               shift, and go to state 451
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 452
    '!'                               shift, and go to state 453
    '['                               shift, and go to state 454
    '('                               shift, and go to state 455
    '$'                               shift, and go to state 456
    '@'                               shift, and go to state 457

    string_builder          go to state 458
    expr_reader             go to state 459
    expr_call_pipe          go to state 460
    name_in_namespace       go to state 461
    expr_new                go to state 462
    expr_cast               go to state 463
    expr_type_decl          go to state 464
    expr_type_info          go to state 465
    block_or_lambda         go to state 466
    expr_full_block         go to state 467
    expr_numeric_const      go to state 468
    expr_named_call         go to state 469
    expr_method_call        go to state 470
    func_addr_expr          go to state 471
    expr_field              go to state 472
    expr_call               go to state 473
    expr                    go to state 1081
    expr_mtag               go to state 475
    basic_type_declaration  go to state 476
    make_decl               go to state 477
    make_struct_decl        go to state 478
    make_tuple_call         go to state 479
    make_dim_decl           go to state 480
    make_table_decl         go to state 481
    array_comprehension     go to state 482


State 917

  337 expr_assign: expr "-=" . expr

    "struct"                          shift, and go to state 409
    "class"                           shift, and go to state 410
    "true"                            shift, and go to state 411
    "false"                           shift, and go to state 412
    "new"                             shift, and go to state 413
    "typeinfo"                        shift, and go to state 414
    "type"                            shift, and go to state 415
    "array"                           shift, and go to state 416
    "null"                            shift, and go to state 417
    "table"                           shift, and go to state 418
    "deref"                           shift, and go to state 419
    "cast"                            shift, and go to state 420
    "upcast"                          shift, and go to state 421
    "addr"                            shift, and go to state 422
    "reinterpret"                     shift, and go to state 423
    "unsafe"                          shift, and go to state 424
    "fixed_array"                     shift, and go to state 425
    "default"                         shift, and go to state 426
    "bool"                            shift, and go to state 225
    "void"                            shift, and go to state 226
    "string"                          shift, and go to state 227
    "int"                             shift, and go to state 229
    "int2"                            shift, and go to state 230
    "int3"                            shift, and go to state 231
    "int4"                            shift, and go to state 232
    "uint"                            shift, and go to state 233
    "bitfield"                        shift, and go to state 427
    "uint2"                           shift, and go to state 235
    "uint3"                           shift, and go to state 236
    "uint4"                           shift, and go to state 237
    "float"                           shift, and go to state 238
    "float2"                          shift, and go to state 239
    "float3"                          shift, and go to state 240
    "float4"                          shift, and go to state 241
    "range"                           shift, and go to state 242
    "urange"                          shift, and go to state 243
    "range64"                         shift, and go to state 244
    "urange64"                        shift, and go to state 245
    "int64"                           shift, and go to state 247
    "uint64"                          shift, and go to state 248
    "double"                          shift, and go to state 249
    "int8"                            shift, and go to state 252
    "uint8"                           shift, and go to state 253
    "int16"                           shift, and go to state 254
    "uint16"                          shift, and go to state 255
    "tuple"                           shift, and go to state 428
    "variant"                         shift, and go to state 429
    "generator"                       shift, and go to state 430
    "++"                              shift, and go to state 431
    "--"                              shift, and go to state 432
    "::"                              shift, and go to state 55
    "$$"                              shift, and go to state 433
    "$i"                              shift, and go to state 434
    "$v"                              shift, and go to state 435
    "$b"                              shift, and go to state 436
    "$a"                              shift, and go to state 437
    "$c"                              shift, and go to state 438
    "..."                             shift, and go to state 439
    "integer constant"                shift, and go to state 440
    "long integer constant"           shift, and go to state 441
    "unsigned integer constant"       shift, and go to state 442
    "unsigned long integer constant"  shift, and go to state 443
    "unsigned int8 constant"          shift, and go to state 444
    "floating point constant"         shift, and go to state 445
    "double constant"                 shift, and go to state 446
    "name"                            shift, and go to state 56
    "start of the string"             shift, and go to state 447
    "begin of code block"             shift, and go to state 448
    '-'                               shift, and go to state 449
    '+'                               shift, and go to state 450
    '*'                               shift, and go to state 451
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 452
    '!'                               shift, and go to state 453
    '['                               shift, and go to state 454
    '('                               shift, and go to state 455
    '$'                               shift, and go to state 456
    '@'                               shift, and go to state 457

    string_builder          go to state 458
    expr_reader             go to state 459
    expr_call_pipe          go to state 460
    name_in_namespace       go to state 461
    expr_new                go to state 462
    expr_cast               go to state 463
    expr_type_decl          go to state 464
    expr_type_info          go to state 465
    block_or_lambda         go to state 466
    expr_full_block         go to state 467
    expr_numeric_const      go to state 468
    expr_named_call         go to state 469
    expr_method_call        go to state 470
    func_addr_expr          go to state 471
    expr_field              go to state 472
    expr_call               go to state 473
    expr                    go to state 1082
    expr_mtag               go to state 475
    basic_type_declaration  go to state 476
    make_decl               go to state 477
    make_struct_decl        go to state 478
    make_tuple_call         go to state 479
    make_dim_decl           go to state 480
    make_table_decl         go to state 481
    array_comprehension     go to state 482


State 918

  339 expr_assign: expr "/=" . expr

    "struct"                          shift, and go to state 409
    "class"                           shift, and go to state 410
    "true"                            shift, and go to state 411
    "false"                           shift, and go to state 412
    "new"                             shift, and go to state 413
    "typeinfo"                        shift, and go to state 414
    "type"                            shift, and go to state 415
    "array"                           shift, and go to state 416
    "null"                            shift, and go to state 417
    "table"                           shift, and go to state 418
    "deref"                           shift, and go to state 419
    "cast"                            shift, and go to state 420
    "upcast"                          shift, and go to state 421
    "addr"                            shift, and go to state 422
    "reinterpret"                     shift, and go to state 423
    "unsafe"                          shift, and go to state 424
    "fixed_array"                     shift, and go to state 425
    "default"                         shift, and go to state 426
    "bool"                            shift, and go to state 225
    "void"                            shift, and go to state 226
    "string"                          shift, and go to state 227
    "int"                             shift, and go to state 229
    "int2"                            shift, and go to state 230
    "int3"                            shift, and go to state 231
    "int4"                            shift, and go to state 232
    "uint"                            shift, and go to state 233
    "bitfield"                        shift, and go to state 427
    "uint2"                           shift, and go to state 235
    "uint3"                           shift, and go to state 236
    "uint4"                           shift, and go to state 237
    "float"                           shift, and go to state 238
    "float2"                          shift, and go to state 239
    "float3"                          shift, and go to state 240
    "float4"                          shift, and go to state 241
    "range"                           shift, and go to state 242
    "urange"                          shift, and go to state 243
    "range64"                         shift, and go to state 244
    "urange64"                        shift, and go to state 245
    "int64"                           shift, and go to state 247
    "uint64"                          shift, and go to state 248
    "double"                          shift, and go to state 249
    "int8"                            shift, and go to state 252
    "uint8"                           shift, and go to state 253
    "int16"                           shift, and go to state 254
    "uint16"                          shift, and go to state 255
    "tuple"                           shift, and go to state 428
    "variant"                         shift, and go to state 429
    "generator"                       shift, and go to state 430
    "++"                              shift, and go to state 431
    "--"                              shift, and go to state 432
    "::"                              shift, and go to state 55
    "$$"                              shift, and go to state 433
    "$i"                              shift, and go to state 434
    "$v"                              shift, and go to state 435
    "$b"                              shift, and go to state 436
    "$a"                              shift, and go to state 437
    "$c"                              shift, and go to state 438
    "..."                             shift, and go to state 439
    "integer constant"                shift, and go to state 440
    "long integer constant"           shift, and go to state 441
    "unsigned integer constant"       shift, and go to state 442
    "unsigned long integer constant"  shift, and go to state 443
    "unsigned int8 constant"          shift, and go to state 444
    "floating point constant"         shift, and go to state 445
    "double constant"                 shift, and go to state 446
    "name"                            shift, and go to state 56
    "start of the string"             shift, and go to state 447
    "begin of code block"             shift, and go to state 448
    '-'                               shift, and go to state 449
    '+'                               shift, and go to state 450
    '*'                               shift, and go to state 451
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 452
    '!'                               shift, and go to state 453
    '['                               shift, and go to state 454
    '('                               shift, and go to state 455
    '$'                               shift, and go to state 456
    '@'                               shift, and go to state 457

    string_builder          go to state 458
    expr_reader             go to state 459
    expr_call_pipe          go to state 460
    name_in_namespace       go to state 461
    expr_new                go to state 462
    expr_cast               go to state 463
    expr_type_decl          go to state 464
    expr_type_info          go to state 465
    block_or_lambda         go to state 466
    expr_full_block         go to state 467
    expr_numeric_const      go to state 468
    expr_named_call         go to state 469
    expr_method_call        go to state 470
    func_addr_expr          go to state 471
    expr_field              go to state 472
    expr_call               go to state 473
    expr                    go to state 1083
    expr_mtag               go to state 475
    basic_type_declaration  go to state 476
    make_decl               go to state 477
    make_struct_decl        go to state 478
    make_tuple_call         go to state 479
    make_dim_decl           go to state 480
    make_table_decl         go to state 481
    array_comprehension     go to state 482


State 919

  338 expr_assign: expr "*=" . expr

    "struct"                          shift, and go to state 409
    "class"                           shift, and go to state 410
    "true"                            shift, and go to state 411
    "false"                           shift, and go to state 412
    "new"                             shift, and go to state 413
    "typeinfo"                        shift, and go to state 414
    "type"                            shift, and go to state 415
    "array"                           shift, and go to state 416
    "null"                            shift, and go to state 417
    "table"                           shift, and go to state 418
    "deref"                           shift, and go to state 419
    "cast"                            shift, and go to state 420
    "upcast"                          shift, and go to state 421
    "addr"                            shift, and go to state 422
    "reinterpret"                     shift, and go to state 423
    "unsafe"                          shift, and go to state 424
    "fixed_array"                     shift, and go to state 425
    "default"                         shift, and go to state 426
    "bool"                            shift, and go to state 225
    "void"                            shift, and go to state 226
    "string"                          shift, and go to state 227
    "int"                             shift, and go to state 229
    "int2"                            shift, and go to state 230
    "int3"                            shift, and go to state 231
    "int4"                            shift, and go to state 232
    "uint"                            shift, and go to state 233
    "bitfield"                        shift, and go to state 427
    "uint2"                           shift, and go to state 235
    "uint3"                           shift, and go to state 236
    "uint4"                           shift, and go to state 237
    "float"                           shift, and go to state 238
    "float2"                          shift, and go to state 239
    "float3"                          shift, and go to state 240
    "float4"                          shift, and go to state 241
    "range"                           shift, and go to state 242
    "urange"                          shift, and go to state 243
    "range64"                         shift, and go to state 244
    "urange64"                        shift, and go to state 245
    "int64"                           shift, and go to state 247
    "uint64"                          shift, and go to state 248
    "double"                          shift, and go to state 249
    "int8"                            shift, and go to state 252
    "uint8"                           shift, and go to state 253
    "int16"                           shift, and go to state 254
    "uint16"                          shift, and go to state 255
    "tuple"                           shift, and go to state 428
    "variant"                         shift, and go to state 429
    "generator"                       shift, and go to state 430
    "++"                              shift, and go to state 431
    "--"                              shift, and go to state 432
    "::"                              shift, and go to state 55
    "$$"                              shift, and go to state 433
    "$i"                              shift, and go to state 434
    "$v"                              shift, and go to state 435
    "$b"                              shift, and go to state 436
    "$a"                              shift, and go to state 437
    "$c"                              shift, and go to state 438
    "..."                             shift, and go to state 439
    "integer constant"                shift, and go to state 440
    "long integer constant"           shift, and go to state 441
    "unsigned integer constant"       shift, and go to state 442
    "unsigned long integer constant"  shift, and go to state 443
    "unsigned int8 constant"          shift, and go to state 444
    "floating point constant"         shift, and go to state 445
    "double constant"                 shift, and go to state 446
    "name"                            shift, and go to state 56
    "start of the string"             shift, and go to state 447
    "begin of code block"             shift, and go to state 448
    '-'                               shift, and go to state 449
    '+'                               shift, and go to state 450
    '*'                               shift, and go to state 451
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 452
    '!'                               shift, and go to state 453
    '['                               shift, and go to state 454
    '('                               shift, and go to state 455
    '$'                               shift, and go to state 456
    '@'                               shift, and go to state 457

    string_builder          go to state 458
    expr_reader             go to state 459
    expr_call_pipe          go to state 460
    name_in_namespace       go to state 461
    expr_new                go to state 462
    expr_cast               go to state 463
    expr_type_decl          go to state 464
    expr_type_info          go to state 465
    block_or_lambda         go to state 466
    expr_full_block         go to state 467
    expr_numeric_const      go to state 468
    expr_named_call         go to state 469
    expr_method_call        go to state 470
    func_addr_expr          go to state 471
    expr_field              go to state 472
    expr_call               go to state 473
    expr                    go to state 1084
    expr_mtag               go to state 475
    basic_type_declaration  go to state 476
    make_decl               go to state 477
    make_struct_decl        go to state 478
    make_tuple_call         go to state 479
    make_dim_decl           go to state 480
    make_table_decl         go to state 481
    array_comprehension     go to state 482


State 920

  340 expr_assign: expr "%=" . expr

    "struct"                          shift, and go to state 409
    "class"                           shift, and go to state 410
    "true"                            shift, and go to state 411
    "false"                           shift, and go to state 412
    "new"                             shift, and go to state 413
    "typeinfo"                        shift, and go to state 414
    "type"                            shift, and go to state 415
    "array"                           shift, and go to state 416
    "null"                            shift, and go to state 417
    "table"                           shift, and go to state 418
    "deref"                           shift, and go to state 419
    "cast"                            shift, and go to state 420
    "upcast"                          shift, and go to state 421
    "addr"                            shift, and go to state 422
    "reinterpret"                     shift, and go to state 423
    "unsafe"                          shift, and go to state 424
    "fixed_array"                     shift, and go to state 425
    "default"                         shift, and go to state 426
    "bool"                            shift, and go to state 225
    "void"                            shift, and go to state 226
    "string"                          shift, and go to state 227
    "int"                             shift, and go to state 229
    "int2"                            shift, and go to state 230
    "int3"                            shift, and go to state 231
    "int4"                            shift, and go to state 232
    "uint"                            shift, and go to state 233
    "bitfield"                        shift, and go to state 427
    "uint2"                           shift, and go to state 235
    "uint3"                           shift, and go to state 236
    "uint4"                           shift, and go to state 237
    "float"                           shift, and go to state 238
    "float2"                          shift, and go to state 239
    "float3"                          shift, and go to state 240
    "float4"                          shift, and go to state 241
    "range"                           shift, and go to state 242
    "urange"                          shift, and go to state 243
    "range64"                         shift, and go to state 244
    "urange64"                        shift, and go to state 245
    "int64"                           shift, and go to state 247
    "uint64"                          shift, and go to state 248
    "double"                          shift, and go to state 249
    "int8"                            shift, and go to state 252
    "uint8"                           shift, and go to state 253
    "int16"                           shift, and go to state 254
    "uint16"                          shift, and go to state 255
    "tuple"                           shift, and go to state 428
    "variant"                         shift, and go to state 429
    "generator"                       shift, and go to state 430
    "++"                              shift, and go to state 431
    "--"                              shift, and go to state 432
    "::"                              shift, and go to state 55
    "$$"                              shift, and go to state 433
    "$i"                              shift, and go to state 434
    "$v"                              shift, and go to state 435
    "$b"                              shift, and go to state 436
    "$a"                              shift, and go to state 437
    "$c"                              shift, and go to state 438
    "..."                             shift, and go to state 439
    "integer constant"                shift, and go to state 440
    "long integer constant"           shift, and go to state 441
    "unsigned integer constant"       shift, and go to state 442
    "unsigned long integer constant"  shift, and go to state 443
    "unsigned int8 constant"          shift, and go to state 444
    "floating point constant"         shift, and go to state 445
    "double constant"                 shift, and go to state 446
    "name"                            shift, and go to state 56
    "start of the string"             shift, and go to state 447
    "begin of code block"             shift, and go to state 448
    '-'                               shift, and go to state 449
    '+'                               shift, and go to state 450
    '*'                               shift, and go to state 451
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 452
    '!'                               shift, and go to state 453
    '['                               shift, and go to state 454
    '('                               shift, and go to state 455
    '$'                               shift, and go to state 456
    '@'                               shift, and go to state 457

    string_builder          go to state 458
    expr_reader             go to state 459
    expr_call_pipe          go to state 460
    name_in_namespace       go to state 461
    expr_new                go to state 462
    expr_cast               go to state 463
    expr_type_decl          go to state 464
    expr_type_info          go to state 465
    block_or_lambda         go to state 466
    expr_full_block         go to state 467
    expr_numeric_const      go to state 468
    expr_named_call         go to state 469
    expr_method_call        go to state 470
    func_addr_expr          go to state 471
    expr_field              go to state 472
    expr_call               go to state 473
    expr                    go to state 1085
    expr_mtag               go to state 475
    basic_type_declaration  go to state 476
    make_decl               go to state 477
    make_struct_decl        go to state 478
    make_tuple_call         go to state 479
    make_dim_decl           go to state 480
    make_table_decl         go to state 481
    array_comprehension     go to state 482


State 921

  330 expr_assign: expr "&=" . expr

    "struct"                          shift, and go to state 409
    "class"                           shift, and go to state 410
    "true"                            shift, and go to state 411
    "false"                           shift, and go to state 412
    "new"                             shift, and go to state 413
    "typeinfo"                        shift, and go to state 414
    "type"                            shift, and go to state 415
    "array"                           shift, and go to state 416
    "null"                            shift, and go to state 417
    "table"                           shift, and go to state 418
    "deref"                           shift, and go to state 419
    "cast"                            shift, and go to state 420
    "upcast"                          shift, and go to state 421
    "addr"                            shift, and go to state 422
    "reinterpret"                     shift, and go to state 423
    "unsafe"                          shift, and go to state 424
    "fixed_array"                     shift, and go to state 425
    "default"                         shift, and go to state 426
    "bool"                            shift, and go to state 225
    "void"                            shift, and go to state 226
    "string"                          shift, and go to state 227
    "int"                             shift, and go to state 229
    "int2"                            shift, and go to state 230
    "int3"                            shift, and go to state 231
    "int4"                            shift, and go to state 232
    "uint"                            shift, and go to state 233
    "bitfield"                        shift, and go to state 427
    "uint2"                           shift, and go to state 235
    "uint3"                           shift, and go to state 236
    "uint4"                           shift, and go to state 237
    "float"                           shift, and go to state 238
    "float2"                          shift, and go to state 239
    "float3"                          shift, and go to state 240
    "float4"                          shift, and go to state 241
    "range"                           shift, and go to state 242
    "urange"                          shift, and go to state 243
    "range64"                         shift, and go to state 244
    "urange64"                        shift, and go to state 245
    "int64"                           shift, and go to state 247
    "uint64"                          shift, and go to state 248
    "double"                          shift, and go to state 249
    "int8"                            shift, and go to state 252
    "uint8"                           shift, and go to state 253
    "int16"                           shift, and go to state 254
    "uint16"                          shift, and go to state 255
    "tuple"                           shift, and go to state 428
    "variant"                         shift, and go to state 429
    "generator"                       shift, and go to state 430
    "++"                              shift, and go to state 431
    "--"                              shift, and go to state 432
    "::"                              shift, and go to state 55
    "$$"                              shift, and go to state 433
    "$i"                              shift, and go to state 434
    "$v"                              shift, and go to state 435
    "$b"                              shift, and go to state 436
    "$a"                              shift, and go to state 437
    "$c"                              shift, and go to state 438
    "..."                             shift, and go to state 439
    "integer constant"                shift, and go to state 440
    "long integer constant"           shift, and go to state 441
    "unsigned integer constant"       shift, and go to state 442
    "unsigned long integer constant"  shift, and go to state 443
    "unsigned int8 constant"          shift, and go to state 444
    "floating point constant"         shift, and go to state 445
    "double constant"                 shift, and go to state 446
    "name"                            shift, and go to state 56
    "start of the string"             shift, and go to state 447
    "begin of code block"             shift, and go to state 448
    '-'                               shift, and go to state 449
    '+'                               shift, and go to state 450
    '*'                               shift, and go to state 451
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 452
    '!'                               shift, and go to state 453
    '['                               shift, and go to state 454
    '('                               shift, and go to state 455
    '$'                               shift, and go to state 456
    '@'                               shift, and go to state 457

    string_builder          go to state 458
    expr_reader             go to state 459
    expr_call_pipe          go to state 460
    name_in_namespace       go to state 461
    expr_new                go to state 462
    expr_cast               go to state 463
    expr_type_decl          go to state 464
    expr_type_info          go to state 465
    block_or_lambda         go to state 466
    expr_full_block         go to state 467
    expr_numeric_const      go to state 468
    expr_named_call         go to state 469
    expr_method_call        go to state 470
    func_addr_expr          go to state 471
    expr_field              go to state 472
    expr_call               go to state 473
    expr                    go to state 1086
    expr_mtag               go to state 475
    basic_type_declaration  go to state 476
    make_decl               go to state 477
    make_struct_decl        go to state 478
    make_tuple_call         go to state 479
    make_dim_decl           go to state 480
    make_table_decl         go to state 481
    array_comprehension     go to state 482


State 922

  331 expr_assign: expr "|=" . expr

    "struct"                          shift, and go to state 409
    "class"                           shift, and go to state 410
    "true"                            shift, and go to state 411
    "false"                           shift, and go to state 412
    "new"                             shift, and go to state 413
    "typeinfo"                        shift, and go to state 414
    "type"                            shift, and go to state 415
    "array"                           shift, and go to state 416
    "null"                            shift, and go to state 417
    "table"                           shift, and go to state 418
    "deref"                           shift, and go to state 419
    "cast"                            shift, and go to state 420
    "upcast"                          shift, and go to state 421
    "addr"                            shift, and go to state 422
    "reinterpret"                     shift, and go to state 423
    "unsafe"                          shift, and go to state 424
    "fixed_array"                     shift, and go to state 425
    "default"                         shift, and go to state 426
    "bool"                            shift, and go to state 225
    "void"                            shift, and go to state 226
    "string"                          shift, and go to state 227
    "int"                             shift, and go to state 229
    "int2"                            shift, and go to state 230
    "int3"                            shift, and go to state 231
    "int4"                            shift, and go to state 232
    "uint"                            shift, and go to state 233
    "bitfield"                        shift, and go to state 427
    "uint2"                           shift, and go to state 235
    "uint3"                           shift, and go to state 236
    "uint4"                           shift, and go to state 237
    "float"                           shift, and go to state 238
    "float2"                          shift, and go to state 239
    "float3"                          shift, and go to state 240
    "float4"                          shift, and go to state 241
    "range"                           shift, and go to state 242
    "urange"                          shift, and go to state 243
    "range64"                         shift, and go to state 244
    "urange64"                        shift, and go to state 245
    "int64"                           shift, and go to state 247
    "uint64"                          shift, and go to state 248
    "double"                          shift, and go to state 249
    "int8"                            shift, and go to state 252
    "uint8"                           shift, and go to state 253
    "int16"                           shift, and go to state 254
    "uint16"                          shift, and go to state 255
    "tuple"                           shift, and go to state 428
    "variant"                         shift, and go to state 429
    "generator"                       shift, and go to state 430
    "++"                              shift, and go to state 431
    "--"                              shift, and go to state 432
    "::"                              shift, and go to state 55
    "$$"                              shift, and go to state 433
    "$i"                              shift, and go to state 434
    "$v"                              shift, and go to state 435
    "$b"                              shift, and go to state 436
    "$a"                              shift, and go to state 437
    "$c"                              shift, and go to state 438
    "..."                             shift, and go to state 439
    "integer constant"                shift, and go to state 440
    "long integer constant"           shift, and go to state 441
    "unsigned integer constant"       shift, and go to state 442
    "unsigned long integer constant"  shift, and go to state 443
    "unsigned int8 constant"          shift, and go to state 444
    "floating point constant"         shift, and go to state 445
    "double constant"                 shift, and go to state 446
    "name"                            shift, and go to state 56
    "start of the string"             shift, and go to state 447
    "begin of code block"             shift, and go to state 448
    '-'                               shift, and go to state 449
    '+'                               shift, and go to state 450
    '*'                               shift, and go to state 451
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 452
    '!'                               shift, and go to state 453
    '['                               shift, and go to state 454
    '('                               shift, and go to state 455
    '$'                               shift, and go to state 456
    '@'                               shift, and go to state 457

    string_builder          go to state 458
    expr_reader             go to state 459
    expr_call_pipe          go to state 460
    name_in_namespace       go to state 461
    expr_new                go to state 462
    expr_cast               go to state 463
    expr_type_decl          go to state 464
    expr_type_info          go to state 465
    block_or_lambda         go to state 466
    expr_full_block         go to state 467
    expr_numeric_const      go to state 468
    expr_named_call         go to state 469
    expr_method_call        go to state 470
    func_addr_expr          go to state 471
    expr_field              go to state 472
    expr_call               go to state 473
    expr                    go to state 1087
    expr_mtag               go to state 475
    basic_type_declaration  go to state 476
    make_decl               go to state 477
    make_struct_decl        go to state 478
    make_tuple_call         go to state 479
    make_dim_decl           go to state 480
    make_table_decl         go to state 481
    array_comprehension     go to state 482


State 923

  332 expr_assign: expr "^=" . expr

    "struct"                          shift, and go to state 409
    "class"                           shift, and go to state 410
    "true"                            shift, and go to state 411
    "false"                           shift, and go to state 412
    "new"                             shift, and go to state 413
    "typeinfo"                        shift, and go to state 414
    "type"                            shift, and go to state 415
    "array"                           shift, and go to state 416
    "null"                            shift, and go to state 417
    "table"                           shift, and go to state 418
    "deref"                           shift, and go to state 419
    "cast"                            shift, and go to state 420
    "upcast"                          shift, and go to state 421
    "addr"                            shift, and go to state 422
    "reinterpret"                     shift, and go to state 423
    "unsafe"                          shift, and go to state 424
    "fixed_array"                     shift, and go to state 425
    "default"                         shift, and go to state 426
    "bool"                            shift, and go to state 225
    "void"                            shift, and go to state 226
    "string"                          shift, and go to state 227
    "int"                             shift, and go to state 229
    "int2"                            shift, and go to state 230
    "int3"                            shift, and go to state 231
    "int4"                            shift, and go to state 232
    "uint"                            shift, and go to state 233
    "bitfield"                        shift, and go to state 427
    "uint2"                           shift, and go to state 235
    "uint3"                           shift, and go to state 236
    "uint4"                           shift, and go to state 237
    "float"                           shift, and go to state 238
    "float2"                          shift, and go to state 239
    "float3"                          shift, and go to state 240
    "float4"                          shift, and go to state 241
    "range"                           shift, and go to state 242
    "urange"                          shift, and go to state 243
    "range64"                         shift, and go to state 244
    "urange64"                        shift, and go to state 245
    "int64"                           shift, and go to state 247
    "uint64"                          shift, and go to state 248
    "double"                          shift, and go to state 249
    "int8"                            shift, and go to state 252
    "uint8"                           shift, and go to state 253
    "int16"                           shift, and go to state 254
    "uint16"                          shift, and go to state 255
    "tuple"                           shift, and go to state 428
    "variant"                         shift, and go to state 429
    "generator"                       shift, and go to state 430
    "++"                              shift, and go to state 431
    "--"                              shift, and go to state 432
    "::"                              shift, and go to state 55
    "$$"                              shift, and go to state 433
    "$i"                              shift, and go to state 434
    "$v"                              shift, and go to state 435
    "$b"                              shift, and go to state 436
    "$a"                              shift, and go to state 437
    "$c"                              shift, and go to state 438
    "..."                             shift, and go to state 439
    "integer constant"                shift, and go to state 440
    "long integer constant"           shift, and go to state 441
    "unsigned integer constant"       shift, and go to state 442
    "unsigned long integer constant"  shift, and go to state 443
    "unsigned int8 constant"          shift, and go to state 444
    "floating point constant"         shift, and go to state 445
    "double constant"                 shift, and go to state 446
    "name"                            shift, and go to state 56
    "start of the string"             shift, and go to state 447
    "begin of code block"             shift, and go to state 448
    '-'                               shift, and go to state 449
    '+'                               shift, and go to state 450
    '*'                               shift, and go to state 451
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 452
    '!'                               shift, and go to state 453
    '['                               shift, and go to state 454
    '('                               shift, and go to state 455
    '$'                               shift, and go to state 456
    '@'                               shift, and go to state 457

    string_builder          go to state 458
    expr_reader             go to state 459
    expr_call_pipe          go to state 460
    name_in_namespace       go to state 461
    expr_new                go to state 462
    expr_cast               go to state 463
    expr_type_decl          go to state 464
    expr_type_info          go to state 465
    block_or_lambda         go to state 466
    expr_full_block         go to state 467
    expr_numeric_const      go to state 468
    expr_named_call         go to state 469
    expr_method_call        go to state 470
    func_addr_expr          go to state 471
    expr_field              go to state 472
    expr_call               go to state 473
    expr                    go to state 1088
    expr_mtag               go to state 475
    basic_type_declaration  go to state 476
    make_decl               go to state 477
    make_struct_decl        go to state 478
    make_tuple_call         go to state 479
    make_dim_decl           go to state 480
    make_table_decl         go to state 481
    array_comprehension     go to state 482


State 924

  341 expr_assign: expr "<<=" . expr

    "struct"                          shift, and go to state 409
    "class"                           shift, and go to state 410
    "true"                            shift, and go to state 411
    "false"                           shift, and go to state 412
    "new"                             shift, and go to state 413
    "typeinfo"                        shift, and go to state 414
    "type"                            shift, and go to state 415
    "array"                           shift, and go to state 416
    "null"                            shift, and go to state 417
    "table"                           shift, and go to state 418
    "deref"                           shift, and go to state 419
    "cast"                            shift, and go to state 420
    "upcast"                          shift, and go to state 421
    "addr"                            shift, and go to state 422
    "reinterpret"                     shift, and go to state 423
    "unsafe"                          shift, and go to state 424
    "fixed_array"                     shift, and go to state 425
    "default"                         shift, and go to state 426
    "bool"                            shift, and go to state 225
    "void"                            shift, and go to state 226
    "string"                          shift, and go to state 227
    "int"                             shift, and go to state 229
    "int2"                            shift, and go to state 230
    "int3"                            shift, and go to state 231
    "int4"                            shift, and go to state 232
    "uint"                            shift, and go to state 233
    "bitfield"                        shift, and go to state 427
    "uint2"                           shift, and go to state 235
    "uint3"                           shift, and go to state 236
    "uint4"                           shift, and go to state 237
    "float"                           shift, and go to state 238
    "float2"                          shift, and go to state 239
    "float3"                          shift, and go to state 240
    "float4"                          shift, and go to state 241
    "range"                           shift, and go to state 242
    "urange"                          shift, and go to state 243
    "range64"                         shift, and go to state 244
    "urange64"                        shift, and go to state 245
    "int64"                           shift, and go to state 247
    "uint64"                          shift, and go to state 248
    "double"                          shift, and go to state 249
    "int8"                            shift, and go to state 252
    "uint8"                           shift, and go to state 253
    "int16"                           shift, and go to state 254
    "uint16"                          shift, and go to state 255
    "tuple"                           shift, and go to state 428
    "variant"                         shift, and go to state 429
    "generator"                       shift, and go to state 430
    "++"                              shift, and go to state 431
    "--"                              shift, and go to state 432
    "::"                              shift, and go to state 55
    "$$"                              shift, and go to state 433
    "$i"                              shift, and go to state 434
    "$v"                              shift, and go to state 435
    "$b"                              shift, and go to state 436
    "$a"                              shift, and go to state 437
    "$c"                              shift, and go to state 438
    "..."                             shift, and go to state 439
    "integer constant"                shift, and go to state 440
    "long integer constant"           shift, and go to state 441
    "unsigned integer constant"       shift, and go to state 442
    "unsigned long integer constant"  shift, and go to state 443
    "unsigned int8 constant"          shift, and go to state 444
    "floating point constant"         shift, and go to state 445
    "double constant"                 shift, and go to state 446
    "name"                            shift, and go to state 56
    "start of the string"             shift, and go to state 447
    "begin of code block"             shift, and go to state 448
    '-'                               shift, and go to state 449
    '+'                               shift, and go to state 450
    '*'                               shift, and go to state 451
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 452
    '!'                               shift, and go to state 453
    '['                               shift, and go to state 454
    '('                               shift, and go to state 455
    '$'                               shift, and go to state 456
    '@'                               shift, and go to state 457

    string_builder          go to state 458
    expr_reader             go to state 459
    expr_call_pipe          go to state 460
    name_in_namespace       go to state 461
    expr_new                go to state 462
    expr_cast               go to state 463
    expr_type_decl          go to state 464
    expr_type_info          go to state 465
    block_or_lambda         go to state 466
    expr_full_block         go to state 467
    expr_numeric_const      go to state 468
    expr_named_call         go to state 469
    expr_method_call        go to state 470
    func_addr_expr          go to state 471
    expr_field              go to state 472
    expr_call               go to state 473
    expr                    go to state 1089
    expr_mtag               go to state 475
    basic_type_declaration  go to state 476
    make_decl               go to state 477
    make_struct_decl        go to state 478
    make_tuple_call         go to state 479
    make_dim_decl           go to state 480
    make_table_decl         go to state 481
    array_comprehension     go to state 482


State 925

  342 expr_assign: expr ">>=" . expr

    "struct"                          shift, and go to state 409
    "class"                           shift, and go to state 410
    "true"                            shift, and go to state 411
    "false"                           shift, and go to state 412
    "new"                             shift, and go to state 413
    "typeinfo"                        shift, and go to state 414
    "type"                            shift, and go to state 415
    "array"                           shift, and go to state 416
    "null"                            shift, and go to state 417
    "table"                           shift, and go to state 418
    "deref"                           shift, and go to state 419
    "cast"                            shift, and go to state 420
    "upcast"                          shift, and go to state 421
    "addr"                            shift, and go to state 422
    "reinterpret"                     shift, and go to state 423
    "unsafe"                          shift, and go to state 424
    "fixed_array"                     shift, and go to state 425
    "default"                         shift, and go to state 426
    "bool"                            shift, and go to state 225
    "void"                            shift, and go to state 226
    "string"                          shift, and go to state 227
    "int"                             shift, and go to state 229
    "int2"                            shift, and go to state 230
    "int3"                            shift, and go to state 231
    "int4"                            shift, and go to state 232
    "uint"                            shift, and go to state 233
    "bitfield"                        shift, and go to state 427
    "uint2"                           shift, and go to state 235
    "uint3"                           shift, and go to state 236
    "uint4"                           shift, and go to state 237
    "float"                           shift, and go to state 238
    "float2"                          shift, and go to state 239
    "float3"                          shift, and go to state 240
    "float4"                          shift, and go to state 241
    "range"                           shift, and go to state 242
    "urange"                          shift, and go to state 243
    "range64"                         shift, and go to state 244
    "urange64"                        shift, and go to state 245
    "int64"                           shift, and go to state 247
    "uint64"                          shift, and go to state 248
    "double"                          shift, and go to state 249
    "int8"                            shift, and go to state 252
    "uint8"                           shift, and go to state 253
    "int16"                           shift, and go to state 254
    "uint16"                          shift, and go to state 255
    "tuple"                           shift, and go to state 428
    "variant"                         shift, and go to state 429
    "generator"                       shift, and go to state 430
    "++"                              shift, and go to state 431
    "--"                              shift, and go to state 432
    "::"                              shift, and go to state 55
    "$$"                              shift, and go to state 433
    "$i"                              shift, and go to state 434
    "$v"                              shift, and go to state 435
    "$b"                              shift, and go to state 436
    "$a"                              shift, and go to state 437
    "$c"                              shift, and go to state 438
    "..."                             shift, and go to state 439
    "integer constant"                shift, and go to state 440
    "long integer constant"           shift, and go to state 441
    "unsigned integer constant"       shift, and go to state 442
    "unsigned long integer constant"  shift, and go to state 443
    "unsigned int8 constant"          shift, and go to state 444
    "floating point constant"         shift, and go to state 445
    "double constant"                 shift, and go to state 446
    "name"                            shift, and go to state 56
    "start of the string"             shift, and go to state 447
    "begin of code block"             shift, and go to state 448
    '-'                               shift, and go to state 449
    '+'                               shift, and go to state 450
    '*'                               shift, and go to state 451
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 452
    '!'                               shift, and go to state 453
    '['                               shift, and go to state 454
    '('                               shift, and go to state 455
    '$'                               shift, and go to state 456
    '@'                               shift, and go to state 457

    string_builder          go to state 458
    expr_reader             go to state 459
    expr_call_pipe          go to state 460
    name_in_namespace       go to state 461
    expr_new                go to state 462
    expr_cast               go to state 463
    expr_type_decl          go to state 464
    expr_type_info          go to state 465
    block_or_lambda         go to state 466
    expr_full_block         go to state 467
    expr_numeric_const      go to state 468
    expr_named_call         go to state 469
    expr_method_call        go to state 470
    func_addr_expr          go to state 471
    expr_field              go to state 472
    expr_call               go to state 473
    expr                    go to state 1090
    expr_mtag               go to state 475
    basic_type_declaration  go to state 476
    make_decl               go to state 477
    make_struct_decl        go to state 478
    make_tuple_call         go to state 479
    make_dim_decl           go to state 480
    make_table_decl         go to state 481
    array_comprehension     go to state 482


State 926

  328 expr_assign: expr "<-" . expr

    "struct"                          shift, and go to state 409
    "class"                           shift, and go to state 410
    "true"                            shift, and go to state 411
    "false"                           shift, and go to state 412
    "new"                             shift, and go to state 413
    "typeinfo"                        shift, and go to state 414
    "type"                            shift, and go to state 415
    "array"                           shift, and go to state 416
    "null"                            shift, and go to state 417
    "table"                           shift, and go to state 418
    "deref"                           shift, and go to state 419
    "cast"                            shift, and go to state 420
    "upcast"                          shift, and go to state 421
    "addr"                            shift, and go to state 422
    "reinterpret"                     shift, and go to state 423
    "unsafe"                          shift, and go to state 424
    "fixed_array"                     shift, and go to state 425
    "default"                         shift, and go to state 426
    "bool"                            shift, and go to state 225
    "void"                            shift, and go to state 226
    "string"                          shift, and go to state 227
    "int"                             shift, and go to state 229
    "int2"                            shift, and go to state 230
    "int3"                            shift, and go to state 231
    "int4"                            shift, and go to state 232
    "uint"                            shift, and go to state 233
    "bitfield"                        shift, and go to state 427
    "uint2"                           shift, and go to state 235
    "uint3"                           shift, and go to state 236
    "uint4"                           shift, and go to state 237
    "float"                           shift, and go to state 238
    "float2"                          shift, and go to state 239
    "float3"                          shift, and go to state 240
    "float4"                          shift, and go to state 241
    "range"                           shift, and go to state 242
    "urange"                          shift, and go to state 243
    "range64"                         shift, and go to state 244
    "urange64"                        shift, and go to state 245
    "int64"                           shift, and go to state 247
    "uint64"                          shift, and go to state 248
    "double"                          shift, and go to state 249
    "int8"                            shift, and go to state 252
    "uint8"                           shift, and go to state 253
    "int16"                           shift, and go to state 254
    "uint16"                          shift, and go to state 255
    "tuple"                           shift, and go to state 428
    "variant"                         shift, and go to state 429
    "generator"                       shift, and go to state 430
    "++"                              shift, and go to state 431
    "--"                              shift, and go to state 432
    "::"                              shift, and go to state 55
    "$$"                              shift, and go to state 433
    "$i"                              shift, and go to state 434
    "$v"                              shift, and go to state 435
    "$b"                              shift, and go to state 436
    "$a"                              shift, and go to state 437
    "$c"                              shift, and go to state 438
    "..."                             shift, and go to state 439
    "integer constant"                shift, and go to state 440
    "long integer constant"           shift, and go to state 441
    "unsigned integer constant"       shift, and go to state 442
    "unsigned long integer constant"  shift, and go to state 443
    "unsigned int8 constant"          shift, and go to state 444
    "floating point constant"         shift, and go to state 445
    "double constant"                 shift, and go to state 446
    "name"                            shift, and go to state 56
    "start of the string"             shift, and go to state 447
    "begin of code block"             shift, and go to state 448
    '-'                               shift, and go to state 449
    '+'                               shift, and go to state 450
    '*'                               shift, and go to state 451
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 452
    '!'                               shift, and go to state 453
    '['                               shift, and go to state 454
    '('                               shift, and go to state 455
    '$'                               shift, and go to state 456
    '@'                               shift, and go to state 457

    string_builder          go to state 458
    expr_reader             go to state 459
    expr_call_pipe          go to state 460
    name_in_namespace       go to state 461
    expr_new                go to state 462
    expr_cast               go to state 463
    expr_type_decl          go to state 464
    expr_type_info          go to state 465
    block_or_lambda         go to state 466
    expr_full_block         go to state 467
    expr_numeric_const      go to state 468
    expr_named_call         go to state 469
    expr_method_call        go to state 470
    func_addr_expr          go to state 471
    expr_field              go to state 472
    expr_call               go to state 473
    expr                    go to state 1091
    expr_mtag               go to state 475
    basic_type_declaration  go to state 476
    make_decl               go to state 477
    make_struct_decl        go to state 478
    make_tuple_call         go to state 479
    make_dim_decl           go to state 480
    make_table_decl         go to state 481
    array_comprehension     go to state 482


State 927

  329 expr_assign: expr ":=" . expr

    "struct"                          shift, and go to state 409
    "class"                           shift, and go to state 410
    "true"                            shift, and go to state 411
    "false"                           shift, and go to state 412
    "new"                             shift, and go to state 413
    "typeinfo"                        shift, and go to state 414
    "type"                            shift, and go to state 415
    "array"                           shift, and go to state 416
    "null"                            shift, and go to state 417
    "table"                           shift, and go to state 418
    "deref"                           shift, and go to state 419
    "cast"                            shift, and go to state 420
    "upcast"                          shift, and go to state 421
    "addr"                            shift, and go to state 422
    "reinterpret"                     shift, and go to state 423
    "unsafe"                          shift, and go to state 424
    "fixed_array"                     shift, and go to state 425
    "default"                         shift, and go to state 426
    "bool"                            shift, and go to state 225
    "void"                            shift, and go to state 226
    "string"                          shift, and go to state 227
    "int"                             shift, and go to state 229
    "int2"                            shift, and go to state 230
    "int3"                            shift, and go to state 231
    "int4"                            shift, and go to state 232
    "uint"                            shift, and go to state 233
    "bitfield"                        shift, and go to state 427
    "uint2"                           shift, and go to state 235
    "uint3"                           shift, and go to state 236
    "uint4"                           shift, and go to state 237
    "float"                           shift, and go to state 238
    "float2"                          shift, and go to state 239
    "float3"                          shift, and go to state 240
    "float4"                          shift, and go to state 241
    "range"                           shift, and go to state 242
    "urange"                          shift, and go to state 243
    "range64"                         shift, and go to state 244
    "urange64"                        shift, and go to state 245
    "int64"                           shift, and go to state 247
    "uint64"                          shift, and go to state 248
    "double"                          shift, and go to state 249
    "int8"                            shift, and go to state 252
    "uint8"                           shift, and go to state 253
    "int16"                           shift, and go to state 254
    "uint16"                          shift, and go to state 255
    "tuple"                           shift, and go to state 428
    "variant"                         shift, and go to state 429
    "generator"                       shift, and go to state 430
    "++"                              shift, and go to state 431
    "--"                              shift, and go to state 432
    "::"                              shift, and go to state 55
    "$$"                              shift, and go to state 433
    "$i"                              shift, and go to state 434
    "$v"                              shift, and go to state 435
    "$b"                              shift, and go to state 436
    "$a"                              shift, and go to state 437
    "$c"                              shift, and go to state 438
    "..."                             shift, and go to state 439
    "integer constant"                shift, and go to state 440
    "long integer constant"           shift, and go to state 441
    "unsigned integer constant"       shift, and go to state 442
    "unsigned long integer constant"  shift, and go to state 443
    "unsigned int8 constant"          shift, and go to state 444
    "floating point constant"         shift, and go to state 445
    "double constant"                 shift, and go to state 446
    "name"                            shift, and go to state 56
    "start of the string"             shift, and go to state 447
    "begin of code block"             shift, and go to state 448
    '-'                               shift, and go to state 449
    '+'                               shift, and go to state 450
    '*'                               shift, and go to state 451
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 452
    '!'                               shift, and go to state 453
    '['                               shift, and go to state 454
    '('                               shift, and go to state 455
    '$'                               shift, and go to state 456
    '@'                               shift, and go to state 457

    string_builder          go to state 458
    expr_reader             go to state 459
    expr_call_pipe          go to state 460
    name_in_namespace       go to state 461
    expr_new                go to state 462
    expr_cast               go to state 463
    expr_type_decl          go to state 464
    expr_type_info          go to state 465
    block_or_lambda         go to state 466
    expr_full_block         go to state 467
    expr_numeric_const      go to state 468
    expr_named_call         go to state 469
    expr_method_call        go to state 470
    func_addr_expr          go to state 471
    expr_field              go to state 472
    expr_call               go to state 473
    expr                    go to state 1092
    expr_mtag               go to state 475
    basic_type_declaration  go to state 476
    make_decl               go to state 477
    make_struct_decl        go to state 478
    make_tuple_call         go to state 479
    make_dim_decl           go to state 480
    make_table_decl         go to state 481
    array_comprehension     go to state 482


State 928

  343 expr_assign: expr "<<<=" . expr

    "struct"                          shift, and go to state 409
    "class"                           shift, and go to state 410
    "true"                            shift, and go to state 411
    "false"                           shift, and go to state 412
    "new"                             shift, and go to state 413
    "typeinfo"                        shift, and go to state 414
    "type"                            shift, and go to state 415
    "array"                           shift, and go to state 416
    "null"                            shift, and go to state 417
    "table"                           shift, and go to state 418
    "deref"                           shift, and go to state 419
    "cast"                            shift, and go to state 420
    "upcast"                          shift, and go to state 421
    "addr"                            shift, and go to state 422
    "reinterpret"                     shift, and go to state 423
    "unsafe"                          shift, and go to state 424
    "fixed_array"                     shift, and go to state 425
    "default"                         shift, and go to state 426
    "bool"                            shift, and go to state 225
    "void"                            shift, and go to state 226
    "string"                          shift, and go to state 227
    "int"                             shift, and go to state 229
    "int2"                            shift, and go to state 230
    "int3"                            shift, and go to state 231
    "int4"                            shift, and go to state 232
    "uint"                            shift, and go to state 233
    "bitfield"                        shift, and go to state 427
    "uint2"                           shift, and go to state 235
    "uint3"                           shift, and go to state 236
    "uint4"                           shift, and go to state 237
    "float"                           shift, and go to state 238
    "float2"                          shift, and go to state 239
    "float3"                          shift, and go to state 240
    "float4"                          shift, and go to state 241
    "range"                           shift, and go to state 242
    "urange"                          shift, and go to state 243
    "range64"                         shift, and go to state 244
    "urange64"                        shift, and go to state 245
    "int64"                           shift, and go to state 247
    "uint64"                          shift, and go to state 248
    "double"                          shift, and go to state 249
    "int8"                            shift, and go to state 252
    "uint8"                           shift, and go to state 253
    "int16"                           shift, and go to state 254
    "uint16"                          shift, and go to state 255
    "tuple"                           shift, and go to state 428
    "variant"                         shift, and go to state 429
    "generator"                       shift, and go to state 430
    "++"                              shift, and go to state 431
    "--"                              shift, and go to state 432
    "::"                              shift, and go to state 55
    "$$"                              shift, and go to state 433
    "$i"                              shift, and go to state 434
    "$v"                              shift, and go to state 435
    "$b"                              shift, and go to state 436
    "$a"                              shift, and go to state 437
    "$c"                              shift, and go to state 438
    "..."                             shift, and go to state 439
    "integer constant"                shift, and go to state 440
    "long integer constant"           shift, and go to state 441
    "unsigned integer constant"       shift, and go to state 442
    "unsigned long integer constant"  shift, and go to state 443
    "unsigned int8 constant"          shift, and go to state 444
    "floating point constant"         shift, and go to state 445
    "double constant"                 shift, and go to state 446
    "name"                            shift, and go to state 56
    "start of the string"             shift, and go to state 447
    "begin of code block"             shift, and go to state 448
    '-'                               shift, and go to state 449
    '+'                               shift, and go to state 450
    '*'                               shift, and go to state 451
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 452
    '!'                               shift, and go to state 453
    '['                               shift, and go to state 454
    '('                               shift, and go to state 455
    '$'                               shift, and go to state 456
    '@'                               shift, and go to state 457

    string_builder          go to state 458
    expr_reader             go to state 459
    expr_call_pipe          go to state 460
    name_in_namespace       go to state 461
    expr_new                go to state 462
    expr_cast               go to state 463
    expr_type_decl          go to state 464
    expr_type_info          go to state 465
    block_or_lambda         go to state 466
    expr_full_block         go to state 467
    expr_numeric_const      go to state 468
    expr_named_call         go to state 469
    expr_method_call        go to state 470
    func_addr_expr          go to state 471
    expr_field              go to state 472
    expr_call               go to state 473
    expr                    go to state 1093
    expr_mtag               go to state 475
    basic_type_declaration  go to state 476
    make_decl               go to state 477
    make_struct_decl        go to state 478
    make_tuple_call         go to state 479
    make_dim_decl           go to state 480
    make_table_decl         go to state 481
    array_comprehension     go to state 482


State 929

  344 expr_assign: expr ">>>=" . expr

    "struct"                          shift, and go to state 409
    "class"                           shift, and go to state 410
    "true"                            shift, and go to state 411
    "false"                           shift, and go to state 412
    "new"                             shift, and go to state 413
    "typeinfo"                        shift, and go to state 414
    "type"                            shift, and go to state 415
    "array"                           shift, and go to state 416
    "null"                            shift, and go to state 417
    "table"                           shift, and go to state 418
    "deref"                           shift, and go to state 419
    "cast"                            shift, and go to state 420
    "upcast"                          shift, and go to state 421
    "addr"                            shift, and go to state 422
    "reinterpret"                     shift, and go to state 423
    "unsafe"                          shift, and go to state 424
    "fixed_array"                     shift, and go to state 425
    "default"                         shift, and go to state 426
    "bool"                            shift, and go to state 225
    "void"                            shift, and go to state 226
    "string"                          shift, and go to state 227
    "int"                             shift, and go to state 229
    "int2"                            shift, and go to state 230
    "int3"                            shift, and go to state 231
    "int4"                            shift, and go to state 232
    "uint"                            shift, and go to state 233
    "bitfield"                        shift, and go to state 427
    "uint2"                           shift, and go to state 235
    "uint3"                           shift, and go to state 236
    "uint4"                           shift, and go to state 237
    "float"                           shift, and go to state 238
    "float2"                          shift, and go to state 239
    "float3"                          shift, and go to state 240
    "float4"                          shift, and go to state 241
    "range"                           shift, and go to state 242
    "urange"                          shift, and go to state 243
    "range64"                         shift, and go to state 244
    "urange64"                        shift, and go to state 245
    "int64"                           shift, and go to state 247
    "uint64"                          shift, and go to state 248
    "double"                          shift, and go to state 249
    "int8"                            shift, and go to state 252
    "uint8"                           shift, and go to state 253
    "int16"                           shift, and go to state 254
    "uint16"                          shift, and go to state 255
    "tuple"                           shift, and go to state 428
    "variant"                         shift, and go to state 429
    "generator"                       shift, and go to state 430
    "++"                              shift, and go to state 431
    "--"                              shift, and go to state 432
    "::"                              shift, and go to state 55
    "$$"                              shift, and go to state 433
    "$i"                              shift, and go to state 434
    "$v"                              shift, and go to state 435
    "$b"                              shift, and go to state 436
    "$a"                              shift, and go to state 437
    "$c"                              shift, and go to state 438
    "..."                             shift, and go to state 439
    "integer constant"                shift, and go to state 440
    "long integer constant"           shift, and go to state 441
    "unsigned integer constant"       shift, and go to state 442
    "unsigned long integer constant"  shift, and go to state 443
    "unsigned int8 constant"          shift, and go to state 444
    "floating point constant"         shift, and go to state 445
    "double constant"                 shift, and go to state 446
    "name"                            shift, and go to state 56
    "start of the string"             shift, and go to state 447
    "begin of code block"             shift, and go to state 448
    '-'                               shift, and go to state 449
    '+'                               shift, and go to state 450
    '*'                               shift, and go to state 451
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 452
    '!'                               shift, and go to state 453
    '['                               shift, and go to state 454
    '('                               shift, and go to state 455
    '$'                               shift, and go to state 456
    '@'                               shift, and go to state 457

    string_builder          go to state 458
    expr_reader             go to state 459
    expr_call_pipe          go to state 460
    name_in_namespace       go to state 461
    expr_new                go to state 462
    expr_cast               go to state 463
    expr_type_decl          go to state 464
    expr_type_info          go to state 465
    block_or_lambda         go to state 466
    expr_full_block         go to state 467
    expr_numeric_const      go to state 468
    expr_named_call         go to state 469
    expr_method_call        go to state 470
    func_addr_expr          go to state 471
    expr_field              go to state 472
    expr_call               go to state 473
    expr                    go to state 1094
    expr_mtag               go to state 475
    basic_type_declaration  go to state 476
    make_decl               go to state 477
    make_struct_decl        go to state 478
    make_tuple_call         go to state 479
    make_dim_decl           go to state 480
    make_table_decl         go to state 481
    array_comprehension     go to state 482


State 930

  333 expr_assign: expr "&&=" . expr

    "struct"                          shift, and go to state 409
    "class"                           shift, and go to state 410
    "true"                            shift, and go to state 411
    "false"                           shift, and go to state 412
    "new"                             shift, and go to state 413
    "typeinfo"                        shift, and go to state 414
    "type"                            shift, and go to state 415
    "array"                           shift, and go to state 416
    "null"                            shift, and go to state 417
    "table"                           shift, and go to state 418
    "deref"                           shift, and go to state 419
    "cast"                            shift, and go to state 420
    "upcast"                          shift, and go to state 421
    "addr"                            shift, and go to state 422
    "reinterpret"                     shift, and go to state 423
    "unsafe"                          shift, and go to state 424
    "fixed_array"                     shift, and go to state 425
    "default"                         shift, and go to state 426
    "bool"                            shift, and go to state 225
    "void"                            shift, and go to state 226
    "string"                          shift, and go to state 227
    "int"                             shift, and go to state 229
    "int2"                            shift, and go to state 230
    "int3"                            shift, and go to state 231
    "int4"                            shift, and go to state 232
    "uint"                            shift, and go to state 233
    "bitfield"                        shift, and go to state 427
    "uint2"                           shift, and go to state 235
    "uint3"                           shift, and go to state 236
    "uint4"                           shift, and go to state 237
    "float"                           shift, and go to state 238
    "float2"                          shift, and go to state 239
    "float3"                          shift, and go to state 240
    "float4"                          shift, and go to state 241
    "range"                           shift, and go to state 242
    "urange"                          shift, and go to state 243
    "range64"                         shift, and go to state 244
    "urange64"                        shift, and go to state 245
    "int64"                           shift, and go to state 247
    "uint64"                          shift, and go to state 248
    "double"                          shift, and go to state 249
    "int8"                            shift, and go to state 252
    "uint8"                           shift, and go to state 253
    "int16"                           shift, and go to state 254
    "uint16"                          shift, and go to state 255
    "tuple"                           shift, and go to state 428
    "variant"                         shift, and go to state 429
    "generator"                       shift, and go to state 430
    "++"                              shift, and go to state 431
    "--"                              shift, and go to state 432
    "::"                              shift, and go to state 55
    "$$"                              shift, and go to state 433
    "$i"                              shift, and go to state 434
    "$v"                              shift, and go to state 435
    "$b"                              shift, and go to state 436
    "$a"                              shift, and go to state 437
    "$c"                              shift, and go to state 438
    "..."                             shift, and go to state 439
    "integer constant"                shift, and go to state 440
    "long integer constant"           shift, and go to state 441
    "unsigned integer constant"       shift, and go to state 442
    "unsigned long integer constant"  shift, and go to state 443
    "unsigned int8 constant"          shift, and go to state 444
    "floating point constant"         shift, and go to state 445
    "double constant"                 shift, and go to state 446
    "name"                            shift, and go to state 56
    "start of the string"             shift, and go to state 447
    "begin of code block"             shift, and go to state 448
    '-'                               shift, and go to state 449
    '+'                               shift, and go to state 450
    '*'                               shift, and go to state 451
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 452
    '!'                               shift, and go to state 453
    '['                               shift, and go to state 454
    '('                               shift, and go to state 455
    '$'                               shift, and go to state 456
    '@'                               shift, and go to state 457

    string_builder          go to state 458
    expr_reader             go to state 459
    expr_call_pipe          go to state 460
    name_in_namespace       go to state 461
    expr_new                go to state 462
    expr_cast               go to state 463
    expr_type_decl          go to state 464
    expr_type_info          go to state 465
    block_or_lambda         go to state 466
    expr_full_block         go to state 467
    expr_numeric_const      go to state 468
    expr_named_call         go to state 469
    expr_method_call        go to state 470
    func_addr_expr          go to state 471
    expr_field              go to state 472
    expr_call               go to state 473
    expr                    go to state 1095
    expr_mtag               go to state 475
    basic_type_declaration  go to state 476
    make_decl               go to state 477
    make_struct_decl        go to state 478
    make_tuple_call         go to state 479
    make_dim_decl           go to state 480
    make_table_decl         go to state 481
    array_comprehension     go to state 482


State 931

  334 expr_assign: expr "||=" . expr

    "struct"                          shift, and go to state 409
    "class"                           shift, and go to state 410
    "true"                            shift, and go to state 411
    "false"                           shift, and go to state 412
    "new"                             shift, and go to state 413
    "typeinfo"                        shift, and go to state 414
    "type"                            shift, and go to state 415
    "array"                           shift, and go to state 416
    "null"                            shift, and go to state 417
    "table"                           shift, and go to state 418
    "deref"                           shift, and go to state 419
    "cast"                            shift, and go to state 420
    "upcast"                          shift, and go to state 421
    "addr"                            shift, and go to state 422
    "reinterpret"                     shift, and go to state 423
    "unsafe"                          shift, and go to state 424
    "fixed_array"                     shift, and go to state 425
    "default"                         shift, and go to state 426
    "bool"                            shift, and go to state 225
    "void"                            shift, and go to state 226
    "string"                          shift, and go to state 227
    "int"                             shift, and go to state 229
    "int2"                            shift, and go to state 230
    "int3"                            shift, and go to state 231
    "int4"                            shift, and go to state 232
    "uint"                            shift, and go to state 233
    "bitfield"                        shift, and go to state 427
    "uint2"                           shift, and go to state 235
    "uint3"                           shift, and go to state 236
    "uint4"                           shift, and go to state 237
    "float"                           shift, and go to state 238
    "float2"                          shift, and go to state 239
    "float3"                          shift, and go to state 240
    "float4"                          shift, and go to state 241
    "range"                           shift, and go to state 242
    "urange"                          shift, and go to state 243
    "range64"                         shift, and go to state 244
    "urange64"                        shift, and go to state 245
    "int64"                           shift, and go to state 247
    "uint64"                          shift, and go to state 248
    "double"                          shift, and go to state 249
    "int8"                            shift, and go to state 252
    "uint8"                           shift, and go to state 253
    "int16"                           shift, and go to state 254
    "uint16"                          shift, and go to state 255
    "tuple"                           shift, and go to state 428
    "variant"                         shift, and go to state 429
    "generator"                       shift, and go to state 430
    "++"                              shift, and go to state 431
    "--"                              shift, and go to state 432
    "::"                              shift, and go to state 55
    "$$"                              shift, and go to state 433
    "$i"                              shift, and go to state 434
    "$v"                              shift, and go to state 435
    "$b"                              shift, and go to state 436
    "$a"                              shift, and go to state 437
    "$c"                              shift, and go to state 438
    "..."                             shift, and go to state 439
    "integer constant"                shift, and go to state 440
    "long integer constant"           shift, and go to state 441
    "unsigned integer constant"       shift, and go to state 442
    "unsigned long integer constant"  shift, and go to state 443
    "unsigned int8 constant"          shift, and go to state 444
    "floating point constant"         shift, and go to state 445
    "double constant"                 shift, and go to state 446
    "name"                            shift, and go to state 56
    "start of the string"             shift, and go to state 447
    "begin of code block"             shift, and go to state 448
    '-'                               shift, and go to state 449
    '+'                               shift, and go to state 450
    '*'                               shift, and go to state 451
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 452
    '!'                               shift, and go to state 453
    '['                               shift, and go to state 454
    '('                               shift, and go to state 455
    '$'                               shift, and go to state 456
    '@'                               shift, and go to state 457

    string_builder          go to state 458
    expr_reader             go to state 459
    expr_call_pipe          go to state 460
    name_in_namespace       go to state 461
    expr_new                go to state 462
    expr_cast               go to state 463
    expr_type_decl          go to state 464
    expr_type_info          go to state 465
    block_or_lambda         go to state 466
    expr_full_block         go to state 467
    expr_numeric_const      go to state 468
    expr_named_call         go to state 469
    expr_method_call        go to state 470
    func_addr_expr          go to state 471
    expr_field              go to state 472
    expr_call               go to state 473
    expr                    go to state 1096
    expr_mtag               go to state 475
    basic_type_declaration  go to state 476
    make_decl               go to state 477
    make_struct_decl        go to state 478
    make_tuple_call         go to state 479
    make_dim_decl           go to state 480
    make_table_decl         go to state 481
    array_comprehension     go to state 482


State 932

  335 expr_assign: expr "^^=" . expr

    "struct"                          shift, and go to state 409
    "class"                           shift, and go to state 410
    "true"                            shift, and go to state 411
    "false"                           shift, and go to state 412
    "new"                             shift, and go to state 413
    "typeinfo"                        shift, and go to state 414
    "type"                            shift, and go to state 415
    "array"                           shift, and go to state 416
    "null"                            shift, and go to state 417
    "table"                           shift, and go to state 418
    "deref"                           shift, and go to state 419
    "cast"                            shift, and go to state 420
    "upcast"                          shift, and go to state 421
    "addr"                            shift, and go to state 422
    "reinterpret"                     shift, and go to state 423
    "unsafe"                          shift, and go to state 424
    "fixed_array"                     shift, and go to state 425
    "default"                         shift, and go to state 426
    "bool"                            shift, and go to state 225
    "void"                            shift, and go to state 226
    "string"                          shift, and go to state 227
    "int"                             shift, and go to state 229
    "int2"                            shift, and go to state 230
    "int3"                            shift, and go to state 231
    "int4"                            shift, and go to state 232
    "uint"                            shift, and go to state 233
    "bitfield"                        shift, and go to state 427
    "uint2"                           shift, and go to state 235
    "uint3"                           shift, and go to state 236
    "uint4"                           shift, and go to state 237
    "float"                           shift, and go to state 238
    "float2"                          shift, and go to state 239
    "float3"                          shift, and go to state 240
    "float4"                          shift, and go to state 241
    "range"                           shift, and go to state 242
    "urange"                          shift, and go to state 243
    "range64"                         shift, and go to state 244
    "urange64"                        shift, and go to state 245
    "int64"                           shift, and go to state 247
    "uint64"                          shift, and go to state 248
    "double"                          shift, and go to state 249
    "int8"                            shift, and go to state 252
    "uint8"                           shift, and go to state 253
    "int16"                           shift, and go to state 254
    "uint16"                          shift, and go to state 255
    "tuple"                           shift, and go to state 428
    "variant"                         shift, and go to state 429
    "generator"                       shift, and go to state 430
    "++"                              shift, and go to state 431
    "--"                              shift, and go to state 432
    "::"                              shift, and go to state 55
    "$$"                              shift, and go to state 433
    "$i"                              shift, and go to state 434
    "$v"                              shift, and go to state 435
    "$b"                              shift, and go to state 436
    "$a"                              shift, and go to state 437
    "$c"                              shift, and go to state 438
    "..."                             shift, and go to state 439
    "integer constant"                shift, and go to state 440
    "long integer constant"           shift, and go to state 441
    "unsigned integer constant"       shift, and go to state 442
    "unsigned long integer constant"  shift, and go to state 443
    "unsigned int8 constant"          shift, and go to state 444
    "floating point constant"         shift, and go to state 445
    "double constant"                 shift, and go to state 446
    "name"                            shift, and go to state 56
    "start of the string"             shift, and go to state 447
    "begin of code block"             shift, and go to state 448
    '-'                               shift, and go to state 449
    '+'                               shift, and go to state 450
    '*'                               shift, and go to state 451
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 452
    '!'                               shift, and go to state 453
    '['                               shift, and go to state 454
    '('                               shift, and go to state 455
    '$'                               shift, and go to state 456
    '@'                               shift, and go to state 457

    string_builder          go to state 458
    expr_reader             go to state 459
    expr_call_pipe          go to state 460
    name_in_namespace       go to state 461
    expr_new                go to state 462
    expr_cast               go to state 463
    expr_type_decl          go to state 464
    expr_type_info          go to state 465
    block_or_lambda         go to state 466
    expr_full_block         go to state 467
    expr_numeric_const      go to state 468
    expr_named_call         go to state 469
    expr_method_call        go to state 470
    func_addr_expr          go to state 471
    expr_field              go to state 472
    expr_call               go to state 473
    expr                    go to state 1097
    expr_mtag               go to state 475
    basic_type_declaration  go to state 476
    make_decl               go to state 477
    make_struct_decl        go to state 478
    make_tuple_call         go to state 479
    make_dim_decl           go to state 480
    make_table_decl         go to state 481
    array_comprehension     go to state 482


State 933

  327 expr_assign: expr '=' . expr

    "struct"                          shift, and go to state 409
    "class"                           shift, and go to state 410
    "true"                            shift, and go to state 411
    "false"                           shift, and go to state 412
    "new"                             shift, and go to state 413
    "typeinfo"                        shift, and go to state 414
    "type"                            shift, and go to state 415
    "array"                           shift, and go to state 416
    "null"                            shift, and go to state 417
    "table"                           shift, and go to state 418
    "deref"                           shift, and go to state 419
    "cast"                            shift, and go to state 420
    "upcast"                          shift, and go to state 421
    "addr"                            shift, and go to state 422
    "reinterpret"                     shift, and go to state 423
    "unsafe"                          shift, and go to state 424
    "fixed_array"                     shift, and go to state 425
    "default"                         shift, and go to state 426
    "bool"                            shift, and go to state 225
    "void"                            shift, and go to state 226
    "string"                          shift, and go to state 227
    "int"                             shift, and go to state 229
    "int2"                            shift, and go to state 230
    "int3"                            shift, and go to state 231
    "int4"                            shift, and go to state 232
    "uint"                            shift, and go to state 233
    "bitfield"                        shift, and go to state 427
    "uint2"                           shift, and go to state 235
    "uint3"                           shift, and go to state 236
    "uint4"                           shift, and go to state 237
    "float"                           shift, and go to state 238
    "float2"                          shift, and go to state 239
    "float3"                          shift, and go to state 240
    "float4"                          shift, and go to state 241
    "range"                           shift, and go to state 242
    "urange"                          shift, and go to state 243
    "range64"                         shift, and go to state 244
    "urange64"                        shift, and go to state 245
    "int64"                           shift, and go to state 247
    "uint64"                          shift, and go to state 248
    "double"                          shift, and go to state 249
    "int8"                            shift, and go to state 252
    "uint8"                           shift, and go to state 253
    "int16"                           shift, and go to state 254
    "uint16"                          shift, and go to state 255
    "tuple"                           shift, and go to state 428
    "variant"                         shift, and go to state 429
    "generator"                       shift, and go to state 430
    "++"                              shift, and go to state 431
    "--"                              shift, and go to state 432
    "::"                              shift, and go to state 55
    "$$"                              shift, and go to state 433
    "$i"                              shift, and go to state 434
    "$v"                              shift, and go to state 435
    "$b"                              shift, and go to state 436
    "$a"                              shift, and go to state 437
    "$c"                              shift, and go to state 438
    "..."                             shift, and go to state 439
    "integer constant"                shift, and go to state 440
    "long integer constant"           shift, and go to state 441
    "unsigned integer constant"       shift, and go to state 442
    "unsigned long integer constant"  shift, and go to state 443
    "unsigned int8 constant"          shift, and go to state 444
    "floating point constant"         shift, and go to state 445
    "double constant"                 shift, and go to state 446
    "name"                            shift, and go to state 56
    "start of the string"             shift, and go to state 447
    "begin of code block"             shift, and go to state 448
    '-'                               shift, and go to state 449
    '+'                               shift, and go to state 450
    '*'                               shift, and go to state 451
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 452
    '!'                               shift, and go to state 453
    '['                               shift, and go to state 454
    '('                               shift, and go to state 455
    '$'                               shift, and go to state 456
    '@'                               shift, and go to state 457

    string_builder          go to state 458
    expr_reader             go to state 459
    expr_call_pipe          go to state 460
    name_in_namespace       go to state 461
    expr_new                go to state 462
    expr_cast               go to state 463
    expr_type_decl          go to state 464
    expr_type_info          go to state 465
    block_or_lambda         go to state 466
    expr_full_block         go to state 467
    expr_numeric_const      go to state 468
    expr_named_call         go to state 469
    expr_method_call        go to state 470
    func_addr_expr          go to state 471
    expr_field              go to state 472
    expr_call               go to state 473
    expr                    go to state 1098
    expr_mtag               go to state 475
    basic_type_declaration  go to state 476
    make_decl               go to state 477
    make_struct_decl        go to state 478
    make_tuple_call         go to state 479
    make_dim_decl           go to state 480
    make_table_decl         go to state 481
    array_comprehension     go to state 482


State 934

  347 expr_method_call: expr . "->" "name" '(' ')'
  348                 | expr . "->" "name" '(' expr_list ')'
  358 expr_field: expr . '.' "name"
  359           | expr . '.' '.' "name"
  360           | expr . '.' "name" '(' ')'
  361           | expr . '.' "name" '(' expr_list ')'
  362           | expr . '.' basic_type_declaration '(' ')'
  363           | expr . '.' basic_type_declaration '(' expr_list ')'
  366           | expr . '.' $@21 error $@22
  388 expr: expr . "<<" expr
  389     | expr . ">>" expr
  390     | expr . "<<<" expr
  391     | expr . ">>>" expr
  392     | expr . '+' expr
  393     | expr . '-' expr
  394     | expr . '*' expr
  395     | expr . '/' expr
  396     | expr . '%' expr
  397     | expr . '<' expr
  398     | expr . '>' expr
  399     | expr . "==" expr
  400     | expr . "!=" expr
  401     | expr . "<=" expr
  402     | expr . ">=" expr
  403     | expr . '&' expr
  404     | expr . '|' expr
  405     | expr . '^' expr
  406     | expr . "&&" expr
  407     | expr . "||" expr
  408     | expr . "^^" expr
  409     | expr . ".." expr
  412     | expr . "++"
  413     | expr . "--"
  415     | expr . '[' expr ']'
  416     | expr . '.' '[' expr ']'
  417     | expr . "?[" expr ']'
  418     | expr . '.' "?[" expr ']'
  419     | expr . "?." "name"
  420     | expr . '.' "?." "name"
  429     | expr . "??" expr
  430     | expr . '?' expr ':' expr
  433     | expr . "is" "type" '<' $@23 type_declaration_no_options '>' $@24
  434     | expr . "is" basic_type_declaration
  435     | expr . "is" "name"
  436     | expr . "as" "name"
  439     | expr . "as" "type" '<' $@25 type_declaration '>' $@26
  440     | expr . "as" basic_type_declaration
  441     | expr . '?' "as" "name"
  444     | expr . '?' "as" "type" '<' $@27 type_declaration '>' $@28
  445     | expr . '?' "as" basic_type_declaration
  453     | expr . "<|" expr
  454     | expr . "|>" expr
  455     | expr . "|>" basic_type_declaration
  466 expr_mtag: expr . '.' "$f" '(' expr ')'
  467          | expr . "?." "$f" '(' expr ')'
  468          | expr . '.' '.' "$f" '(' expr ')'
  469          | expr . '.' "?." "$f" '(' expr ')'
  470          | expr . "as" "$f" '(' expr ')'
  471          | expr . '?' "as" "$f" '(' expr ')'
  472          | expr . "is" "$f" '(' expr ')'
  552 enum_expression: "name" '=' expr .

    "is"   shift, and go to state 609
    "as"   shift, and go to state 610
    "<<"   shift, and go to state 611
    ">>"   shift, and go to state 612
    "++"   shift, and go to state 613
    "--"   shift, and go to state 614
    "<="   shift, and go to state 615
    ">="   shift, and go to state 616
    "=="   shift, and go to state 617
    "!="   shift, and go to state 618
    "->"   shift, and go to state 619
    "??"   shift, and go to state 620
    "?."   shift, and go to state 621
    "?["   shift, and go to state 622
    "<|"   shift, and go to state 623
    "|>"   shift, and go to state 624
    "<<<"  shift, and go to state 625
    ">>>"  shift, and go to state 626
    "&&"   shift, and go to state 627
    "||"   shift, and go to state 628
    "^^"   shift, and go to state 629
    ".."   shift, and go to state 630
    '?'    shift, and go to state 631
    '|'    shift, and go to state 632
    '^'    shift, and go to state 633
    '&'    shift, and go to state 634
    '<'    shift, and go to state 635
    '>'    shift, and go to state 636
    '-'    shift, and go to state 637
    '+'    shift, and go to state 638
    '*'    shift, and go to state 639
    '/'    shift, and go to state 640
    '%'    shift, and go to state 641
    '.'    shift, and go to state 642
    '['    shift, and go to state 643

    $default  reduce using rule 552 (enum_expression)


State 935

  555 enum_list: enum_list ',' enum_expression .

    $default  reduce using rule 555 (enum_list)


State 936

  570 enum_declaration: optional_annotation_list "enum" optional_public_or_private_enum enum_name optional_enum_basic_type_declaration "begin of code block" $@35 enum_list optional_comma $@36 . "end of code block"

    "end of code block"  shift, and go to state 1099


State 937

  491 struct_variable_declaration_list: struct_variable_declaration_list optional_annotation_list "def" . optional_public_or_private_member_variable "abstract" optional_constant $@30 function_declaration_header "end of expression"
  493                                 | struct_variable_declaration_list optional_annotation_list "def" . optional_public_or_private_member_variable optional_static_member_variable optional_override optional_constant $@31 function_declaration_header expression_block

    "public"   shift, and go to state 1100
    "private"  shift, and go to state 1101

    $default  reduce using rule 481 (optional_public_or_private_member_variable)

    optional_public_or_private_member_variable  go to state 1102


State 938

  486 structure_variable_declaration: optional_field_annotation . optional_static_member_variable optional_override optional_public_or_private_member_variable variable_declaration

    "static"  shift, and go to state 1103

    $default  reduce using rule 484 (optional_static_member_variable)

    optional_static_member_variable  go to state 1104


State 939

  489 struct_variable_declaration_list: struct_variable_declaration_list $@29 structure_variable_declaration . "end of expression"

    "end of expression"  shift, and go to state 1105


State 940

  347 expr_method_call: expr . "->" "name" '(' ')'
  348                 | expr . "->" "name" '(' expr_list ')'
  358 expr_field: expr . '.' "name"
  359           | expr . '.' '.' "name"
  360           | expr . '.' "name" '(' ')'
  361           | expr . '.' "name" '(' expr_list ')'
  362           | expr . '.' basic_type_declaration '(' ')'
  363           | expr . '.' basic_type_declaration '(' expr_list ')'
  366           | expr . '.' $@21 error $@22
  388 expr: expr . "<<" expr
  389     | expr . ">>" expr
  390     | expr . "<<<" expr
  391     | expr . ">>>" expr
  392     | expr . '+' expr
  393     | expr . '-' expr
  394     | expr . '*' expr
  395     | expr . '/' expr
  396     | expr . '%' expr
  397     | expr . '<' expr
  398     | expr . '>' expr
  399     | expr . "==" expr
  400     | expr . "!=" expr
  401     | expr . "<=" expr
  402     | expr . ">=" expr
  403     | expr . '&' expr
  404     | expr . '|' expr
  405     | expr . '^' expr
  406     | expr . "&&" expr
  407     | expr . "||" expr
  408     | expr . "^^" expr
  409     | expr . ".." expr
  412     | expr . "++"
  413     | expr . "--"
  415     | expr . '[' expr ']'
  416     | expr . '.' '[' expr ']'
  417     | expr . "?[" expr ']'
  418     | expr . '.' "?[" expr ']'
  419     | expr . "?." "name"
  420     | expr . '.' "?." "name"
  429     | expr . "??" expr
  430     | expr . '?' expr ':' expr
  433     | expr . "is" "type" '<' $@23 type_declaration_no_options '>' $@24
  434     | expr . "is" basic_type_declaration
  435     | expr . "is" "name"
  436     | expr . "as" "name"
  439     | expr . "as" "type" '<' $@25 type_declaration '>' $@26
  440     | expr . "as" basic_type_declaration
  441     | expr . '?' "as" "name"
  444     | expr . '?' "as" "type" '<' $@27 type_declaration '>' $@28
  445     | expr . '?' "as" basic_type_declaration
  453     | expr . "<|" expr
  454     | expr . "|>" expr
  455     | expr . "|>" basic_type_declaration
  466 expr_mtag: expr . '.' "$f" '(' expr ')'
  467          | expr . "?." "$f" '(' expr ')'
  468          | expr . '.' '.' "$f" '(' expr ')'
  469          | expr . '.' "?." "$f" '(' expr ')'
  470          | expr . "as" "$f" '(' expr ')'
  471          | expr . '?' "as" "$f" '(' expr ')'
  472          | expr . "is" "$f" '(' expr ')'
  524 let_variable_name_with_pos_list: "$i" '(' expr . ')'

    "is"   shift, and go to state 609
    "as"   shift, and go to state 610
    "<<"   shift, and go to state 611
    ">>"   shift, and go to state 612
    "++"   shift, and go to state 613
    "--"   shift, and go to state 614
    "<="   shift, and go to state 615
    ">="   shift, and go to state 616
    "=="   shift, and go to state 617
    "!="   shift, and go to state 618
    "->"   shift, and go to state 619
    "??"   shift, and go to state 620
    "?."   shift, and go to state 621
    "?["   shift, and go to state 622
    "<|"   shift, and go to state 623
    "|>"   shift, and go to state 624
    "<<<"  shift, and go to state 625
    ">>>"  shift, and go to state 626
    "&&"   shift, and go to state 627
    "||"   shift, and go to state 628
    "^^"   shift, and go to state 629
    ".."   shift, and go to state 630
    '?'    shift, and go to state 631
    '|'    shift, and go to state 632
    '^'    shift, and go to state 633
    '&'    shift, and go to state 634
    '<'    shift, and go to state 635
    '>'    shift, and go to state 636
    '-'    shift, and go to state 637
    '+'    shift, and go to state 638
    '*'    shift, and go to state 639
    '/'    shift, and go to state 640
    '%'    shift, and go to state 641
    '.'    shift, and go to state 642
    '['    shift, and go to state 643
    ')'    shift, and go to state 1106


State 941

  525 let_variable_name_with_pos_list: "name" "aka" "name" .

    $default  reduce using rule 525 (let_variable_name_with_pos_list)


State 942

  526 let_variable_name_with_pos_list: let_variable_name_with_pos_list ',' "name" .
  527                                | let_variable_name_with_pos_list ',' "name" . "aka" "name"

    "aka"  shift, and go to state 1107

    $default  reduce using rule 526 (let_variable_name_with_pos_list)


State 943

  533 let_variable_declaration: let_variable_name_with_pos_list ':' type_declaration_no_options . "end of expression"
  534                         | let_variable_name_with_pos_list ':' type_declaration_no_options . copy_or_move_or_clone expr "end of expression"

    "<-"                 shift, and go to state 543
    ":="                 shift, and go to state 544
    "end of expression"  shift, and go to state 1108
    '='                  shift, and go to state 545

    copy_or_move_or_clone  go to state 1109


State 944

  535 let_variable_declaration: let_variable_name_with_pos_list optional_ref copy_or_move_or_clone . expr "end of expression"

    "struct"                          shift, and go to state 409
    "class"                           shift, and go to state 410
    "true"                            shift, and go to state 411
    "false"                           shift, and go to state 412
    "new"                             shift, and go to state 413
    "typeinfo"                        shift, and go to state 414
    "type"                            shift, and go to state 415
    "array"                           shift, and go to state 416
    "null"                            shift, and go to state 417
    "table"                           shift, and go to state 418
    "deref"                           shift, and go to state 419
    "cast"                            shift, and go to state 420
    "upcast"                          shift, and go to state 421
    "addr"                            shift, and go to state 422
    "reinterpret"                     shift, and go to state 423
    "unsafe"                          shift, and go to state 424
    "fixed_array"                     shift, and go to state 425
    "default"                         shift, and go to state 426
    "bool"                            shift, and go to state 225
    "void"                            shift, and go to state 226
    "string"                          shift, and go to state 227
    "int"                             shift, and go to state 229
    "int2"                            shift, and go to state 230
    "int3"                            shift, and go to state 231
    "int4"                            shift, and go to state 232
    "uint"                            shift, and go to state 233
    "bitfield"                        shift, and go to state 427
    "uint2"                           shift, and go to state 235
    "uint3"                           shift, and go to state 236
    "uint4"                           shift, and go to state 237
    "float"                           shift, and go to state 238
    "float2"                          shift, and go to state 239
    "float3"                          shift, and go to state 240
    "float4"                          shift, and go to state 241
    "range"                           shift, and go to state 242
    "urange"                          shift, and go to state 243
    "range64"                         shift, and go to state 244
    "urange64"                        shift, and go to state 245
    "int64"                           shift, and go to state 247
    "uint64"                          shift, and go to state 248
    "double"                          shift, and go to state 249
    "int8"                            shift, and go to state 252
    "uint8"                           shift, and go to state 253
    "int16"                           shift, and go to state 254
    "uint16"                          shift, and go to state 255
    "tuple"                           shift, and go to state 428
    "variant"                         shift, and go to state 429
    "generator"                       shift, and go to state 430
    "++"                              shift, and go to state 431
    "--"                              shift, and go to state 432
    "::"                              shift, and go to state 55
    "$$"                              shift, and go to state 433
    "$i"                              shift, and go to state 434
    "$v"                              shift, and go to state 435
    "$b"                              shift, and go to state 436
    "$a"                              shift, and go to state 437
    "$c"                              shift, and go to state 438
    "..."                             shift, and go to state 439
    "integer constant"                shift, and go to state 440
    "long integer constant"           shift, and go to state 441
    "unsigned integer constant"       shift, and go to state 442
    "unsigned long integer constant"  shift, and go to state 443
    "unsigned int8 constant"          shift, and go to state 444
    "floating point constant"         shift, and go to state 445
    "double constant"                 shift, and go to state 446
    "name"                            shift, and go to state 56
    "start of the string"             shift, and go to state 447
    "begin of code block"             shift, and go to state 448
    '-'                               shift, and go to state 449
    '+'                               shift, and go to state 450
    '*'                               shift, and go to state 451
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 452
    '!'                               shift, and go to state 453
    '['                               shift, and go to state 454
    '('                               shift, and go to state 455
    '$'                               shift, and go to state 456
    '@'                               shift, and go to state 457

    string_builder          go to state 458
    expr_reader             go to state 459
    expr_call_pipe          go to state 460
    name_in_namespace       go to state 461
    expr_new                go to state 462
    expr_cast               go to state 463
    expr_type_decl          go to state 464
    expr_type_info          go to state 465
    block_or_lambda         go to state 466
    expr_full_block         go to state 467
    expr_numeric_const      go to state 468
    expr_named_call         go to state 469
    expr_method_call        go to state 470
    func_addr_expr          go to state 471
    expr_field              go to state 472
    expr_call               go to state 473
    expr                    go to state 1110
    expr_mtag               go to state 475
    basic_type_declaration  go to state 476
    make_decl               go to state 477
    make_struct_decl        go to state 478
    make_tuple_call         go to state 479
    make_dim_decl           go to state 480
    make_table_decl         go to state 481
    array_comprehension     go to state 482


State 945

  347 expr_method_call: expr . "->" "name" '(' ')'
  348                 | expr . "->" "name" '(' expr_list ')'
  358 expr_field: expr . '.' "name"
  359           | expr . '.' '.' "name"
  360           | expr . '.' "name" '(' ')'
  361           | expr . '.' "name" '(' expr_list ')'
  362           | expr . '.' basic_type_declaration '(' ')'
  363           | expr . '.' basic_type_declaration '(' expr_list ')'
  366           | expr . '.' $@21 error $@22
  388 expr: expr . "<<" expr
  389     | expr . ">>" expr
  390     | expr . "<<<" expr
  391     | expr . ">>>" expr
  392     | expr . '+' expr
  393     | expr . '-' expr
  394     | expr . '*' expr
  395     | expr . '/' expr
  396     | expr . '%' expr
  397     | expr . '<' expr
  398     | expr . '>' expr
  399     | expr . "==" expr
  400     | expr . "!=" expr
  401     | expr . "<=" expr
  402     | expr . ">=" expr
  403     | expr . '&' expr
  404     | expr . '|' expr
  405     | expr . '^' expr
  406     | expr . "&&" expr
  407     | expr . "||" expr
  408     | expr . "^^" expr
  409     | expr . ".." expr
  412     | expr . "++"
  413     | expr . "--"
  415     | expr . '[' expr ']'
  416     | expr . '.' '[' expr ']'
  417     | expr . "?[" expr ']'
  418     | expr . '.' "?[" expr ']'
  419     | expr . "?." "name"
  420     | expr . '.' "?." "name"
  429     | expr . "??" expr
  430     | expr . '?' expr ':' expr
  433     | expr . "is" "type" '<' $@23 type_declaration_no_options '>' $@24
  434     | expr . "is" basic_type_declaration
  435     | expr . "is" "name"
  436     | expr . "as" "name"
  439     | expr . "as" "type" '<' $@25 type_declaration '>' $@26
  440     | expr . "as" basic_type_declaration
  441     | expr . '?' "as" "name"
  444     | expr . '?' "as" "type" '<' $@27 type_declaration '>' $@28
  445     | expr . '?' "as" basic_type_declaration
  453     | expr . "<|" expr
  454     | expr . "|>" expr
  455     | expr . "|>" basic_type_declaration
  466 expr_mtag: expr . '.' "$f" '(' expr ')'
  467          | expr . "?." "$f" '(' expr ')'
  468          | expr . '.' '.' "$f" '(' expr ')'
  469          | expr . '.' "?." "$f" '(' expr ')'
  470          | expr . "as" "$f" '(' expr ')'
  471          | expr . '?' "as" "$f" '(' expr ')'
  472          | expr . "is" "$f" '(' expr ')'
  537 global_let_variable_declaration: global_let_variable_name_with_pos_list ':' type_declaration_no_options copy_or_move_or_clone expr . "end of expression"

    "is"                 shift, and go to state 609
    "as"                 shift, and go to state 610
    "<<"                 shift, and go to state 611
    ">>"                 shift, and go to state 612
    "++"                 shift, and go to state 613
    "--"                 shift, and go to state 614
    "<="                 shift, and go to state 615
    ">="                 shift, and go to state 616
    "=="                 shift, and go to state 617
    "!="                 shift, and go to state 618
    "->"                 shift, and go to state 619
    "??"                 shift, and go to state 620
    "?."                 shift, and go to state 621
    "?["                 shift, and go to state 622
    "<|"                 shift, and go to state 623
    "|>"                 shift, and go to state 624
    "<<<"                shift, and go to state 625
    ">>>"                shift, and go to state 626
    "&&"                 shift, and go to state 627
    "||"                 shift, and go to state 628
    "^^"                 shift, and go to state 629
    ".."                 shift, and go to state 630
    "end of expression"  shift, and go to state 1111
    '?'                  shift, and go to state 631
    '|'                  shift, and go to state 632
    '^'                  shift, and go to state 633
    '&'                  shift, and go to state 634
    '<'                  shift, and go to state 635
    '>'                  shift, and go to state 636
    '-'                  shift, and go to state 637
    '+'                  shift, and go to state 638
    '*'                  shift, and go to state 639
    '/'                  shift, and go to state 640
    '%'                  shift, and go to state 641
    '.'                  shift, and go to state 642
    '['                  shift, and go to state 643


State 946

  538 global_let_variable_declaration: global_let_variable_name_with_pos_list optional_ref copy_or_move_or_clone expr "end of expression" .

    $default  reduce using rule 538 (global_let_variable_declaration)


State 947

  654 type_declaration_no_options_no_dim: "type" '<' $@41 type_declaration '>' $@42 .

    $default  reduce using rule 654 (type_declaration_no_options_no_dim)


State 948

  677 type_declaration_no_options_no_dim: "array" '<' $@46 type_declaration '>' $@47 .

    $default  reduce using rule 677 (type_declaration_no_options_no_dim)


State 949

  680 type_declaration_no_options_no_dim: "table" '<' $@48 table_type_pair '>' $@49 .

    $default  reduce using rule 680 (type_declaration_no_options_no_dim)


State 950

  641 table_type_pair: type_declaration c_or_s type_declaration .
  712 type_declaration: type_declaration . '|' type_declaration_no_options
  713                 | type_declaration . '|' '#'

    '|'  shift, and go to state 375

    $default  reduce using rule 641 (table_type_pair)


State 951

  751 make_struct_decl: "struct" '<' $@77 type_declaration_no_options . '>' $@78 '(' use_initializer optional_make_struct_dim_decl ')'

    '>'  shift, and go to state 1112


State 952

  754 make_struct_decl: "class" '<' $@79 type_declaration_no_options . '>' $@80 '(' use_initializer optional_make_struct_dim_decl ')'

    '>'  shift, and go to state 1113


State 953

  254 new_type_declaration: '<' $@7 type_declaration . '>' $@8
  712 type_declaration: type_declaration . '|' type_declaration_no_options
  713                 | type_declaration . '|' '#'

    '|'  shift, and go to state 375
    '>'  shift, and go to state 1114


State 954

  260 expr_new: "new" new_type_declaration '(' "uninitialized" . make_struct_single ')'
  748 use_initializer: "uninitialized" .

    "$f"    shift, and go to state 792
    "name"  shift, and go to state 1002

    $default  reduce using rule 748 (use_initializer)

    make_struct_fields  go to state 797
    make_struct_single  go to state 1115


State 955

  258 expr_new: "new" new_type_declaration '(' expr_list . ')'
  300 expr_list: expr_list . ',' expr

    ','  shift, and go to state 1040
    ')'  shift, and go to state 1116


State 956

  259 expr_new: "new" new_type_declaration '(' make_struct_single . ')'

    ')'  shift, and go to state 1117


State 957

  257 expr_new: "new" new_type_declaration '(' use_initializer . ')'

    ')'  shift, and go to state 1118


State 958

  297 expr_type_info: "typeinfo" name_in_namespace '<' "name" . '>' '(' expr ')'
  298               | "typeinfo" name_in_namespace '<' "name" . c_or_s "name" '>' '(' expr ')'

    "end of expression"  shift, and go to state 512
    ','                  shift, and go to state 513
    '>'                  shift, and go to state 1119

    c_or_s  go to state 1120


State 959

  296 expr_type_info: "typeinfo" name_in_namespace '(' expr . ')'
  347 expr_method_call: expr . "->" "name" '(' ')'
  348                 | expr . "->" "name" '(' expr_list ')'
  358 expr_field: expr . '.' "name"
  359           | expr . '.' '.' "name"
  360           | expr . '.' "name" '(' ')'
  361           | expr . '.' "name" '(' expr_list ')'
  362           | expr . '.' basic_type_declaration '(' ')'
  363           | expr . '.' basic_type_declaration '(' expr_list ')'
  366           | expr . '.' $@21 error $@22
  388 expr: expr . "<<" expr
  389     | expr . ">>" expr
  390     | expr . "<<<" expr
  391     | expr . ">>>" expr
  392     | expr . '+' expr
  393     | expr . '-' expr
  394     | expr . '*' expr
  395     | expr . '/' expr
  396     | expr . '%' expr
  397     | expr . '<' expr
  398     | expr . '>' expr
  399     | expr . "==" expr
  400     | expr . "!=" expr
  401     | expr . "<=" expr
  402     | expr . ">=" expr
  403     | expr . '&' expr
  404     | expr . '|' expr
  405     | expr . '^' expr
  406     | expr . "&&" expr
  407     | expr . "||" expr
  408     | expr . "^^" expr
  409     | expr . ".." expr
  412     | expr . "++"
  413     | expr . "--"
  415     | expr . '[' expr ']'
  416     | expr . '.' '[' expr ']'
  417     | expr . "?[" expr ']'
  418     | expr . '.' "?[" expr ']'
  419     | expr . "?." "name"
  420     | expr . '.' "?." "name"
  429     | expr . "??" expr
  430     | expr . '?' expr ':' expr
  433     | expr . "is" "type" '<' $@23 type_declaration_no_options '>' $@24
  434     | expr . "is" basic_type_declaration
  435     | expr . "is" "name"
  436     | expr . "as" "name"
  439     | expr . "as" "type" '<' $@25 type_declaration '>' $@26
  440     | expr . "as" basic_type_declaration
  441     | expr . '?' "as" "name"
  444     | expr . '?' "as" "type" '<' $@27 type_declaration '>' $@28
  445     | expr . '?' "as" basic_type_declaration
  453     | expr . "<|" expr
  454     | expr . "|>" expr
  455     | expr . "|>" basic_type_declaration
  466 expr_mtag: expr . '.' "$f" '(' expr ')'
  467          | expr . "?." "$f" '(' expr ')'
  468          | expr . '.' '.' "$f" '(' expr ')'
  469          | expr . '.' "?." "$f" '(' expr ')'
  470          | expr . "as" "$f" '(' expr ')'
  471          | expr . '?' "as" "$f" '(' expr ')'
  472          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 609
    "as"   shift, and go to state 610
    "<<"   shift, and go to state 611
    ">>"   shift, and go to state 612
    "++"   shift, and go to state 613
    "--"   shift, and go to state 614
    "<="   shift, and go to state 615
    ">="   shift, and go to state 616
    "=="   shift, and go to state 617
    "!="   shift, and go to state 618
    "->"   shift, and go to state 619
    "??"   shift, and go to state 620
    "?."   shift, and go to state 621
    "?["   shift, and go to state 622
    "<|"   shift, and go to state 623
    "|>"   shift, and go to state 624
    "<<<"  shift, and go to state 625
    ">>>"  shift, and go to state 626
    "&&"   shift, and go to state 627
    "||"   shift, and go to state 628
    "^^"   shift, and go to state 629
    ".."   shift, and go to state 630
    '?'    shift, and go to state 631
    '|'    shift, and go to state 632
    '^'    shift, and go to state 633
    '&'    shift, and go to state 634
    '<'    shift, and go to state 635
    '>'    shift, and go to state 636
    '-'    shift, and go to state 637
    '+'    shift, and go to state 638
    '*'    shift, and go to state 639
    '/'    shift, and go to state 640
    '%'    shift, and go to state 641
    '.'    shift, and go to state 642
    '['    shift, and go to state 643
    ')'    shift, and go to state 1121


State 960

  295 expr_type_decl: "type" '<' $@15 type_declaration . '>' $@16
  712 type_declaration: type_declaration . '|' type_declaration_no_options
  713                 | type_declaration . '|' '#'

    '|'  shift, and go to state 375
    '>'  shift, and go to state 1122


State 961

  770 make_dim_decl: "array" "struct" '<' $@87 . type_declaration_no_options '>' $@88 '(' use_initializer optional_make_struct_dim_decl ')'

    "type"       shift, and go to state 219
    "array"      shift, and go to state 220
    "table"      shift, and go to state 221
    "typedecl"   shift, and go to state 222
    "iterator"   shift, and go to state 223
    "smart_ptr"  shift, and go to state 224
    "bool"       shift, and go to state 225
    "void"       shift, and go to state 226
    "string"     shift, and go to state 227
    "auto"       shift, and go to state 228
    "int"        shift, and go to state 229
    "int2"       shift, and go to state 230
    "int3"       shift, and go to state 231
    "int4"       shift, and go to state 232
    "uint"       shift, and go to state 233
    "bitfield"   shift, and go to state 234
    "uint2"      shift, and go to state 235
    "uint3"      shift, and go to state 236
    "uint4"      shift, and go to state 237
    "float"      shift, and go to state 238
    "float2"     shift, and go to state 239
    "float3"     shift, and go to state 240
    "float4"     shift, and go to state 241
    "range"      shift, and go to state 242
    "urange"     shift, and go to state 243
    "range64"    shift, and go to state 244
    "urange64"   shift, and go to state 245
    "block"      shift, and go to state 246
    "int64"      shift, and go to state 247
    "uint64"     shift, and go to state 248
    "double"     shift, and go to state 249
    "function"   shift, and go to state 250
    "lambda"     shift, and go to state 251
    "int8"       shift, and go to state 252
    "uint8"      shift, and go to state 253
    "int16"      shift, and go to state 254
    "uint16"     shift, and go to state 255
    "tuple"      shift, and go to state 256
    "variant"    shift, and go to state 257
    "::"         shift, and go to state 55
    "$t"         shift, and go to state 258
    "name"       shift, and go to state 56
    '$'          shift, and go to state 259

    name_in_namespace                   go to state 260
    basic_type_declaration              go to state 261
    structure_type_declaration          go to state 262
    auto_type_declaration               go to state 263
    bitfield_type_declaration           go to state 264
    type_declaration_no_options         go to state 1123
    type_declaration_no_options_no_dim  go to state 266


State 962

  773 make_dim_decl: "array" "tuple" '<' $@89 . type_declaration_no_options '>' $@90 '(' use_initializer optional_make_struct_dim_decl ')'

    "type"       shift, and go to state 219
    "array"      shift, and go to state 220
    "table"      shift, and go to state 221
    "typedecl"   shift, and go to state 222
    "iterator"   shift, and go to state 223
    "smart_ptr"  shift, and go to state 224
    "bool"       shift, and go to state 225
    "void"       shift, and go to state 226
    "string"     shift, and go to state 227
    "auto"       shift, and go to state 228
    "int"        shift, and go to state 229
    "int2"       shift, and go to state 230
    "int3"       shift, and go to state 231
    "int4"       shift, and go to state 232
    "uint"       shift, and go to state 233
    "bitfield"   shift, and go to state 234
    "uint2"      shift, and go to state 235
    "uint3"      shift, and go to state 236
    "uint4"      shift, and go to state 237
    "float"      shift, and go to state 238
    "float2"     shift, and go to state 239
    "float3"     shift, and go to state 240
    "float4"     shift, and go to state 241
    "range"      shift, and go to state 242
    "urange"     shift, and go to state 243
    "range64"    shift, and go to state 244
    "urange64"   shift, and go to state 245
    "block"      shift, and go to state 246
    "int64"      shift, and go to state 247
    "uint64"     shift, and go to state 248
    "double"     shift, and go to state 249
    "function"   shift, and go to state 250
    "lambda"     shift, and go to state 251
    "int8"       shift, and go to state 252
    "uint8"      shift, and go to state 253
    "int16"      shift, and go to state 254
    "uint16"     shift, and go to state 255
    "tuple"      shift, and go to state 256
    "variant"    shift, and go to state 257
    "::"         shift, and go to state 55
    "$t"         shift, and go to state 258
    "name"       shift, and go to state 56
    '$'          shift, and go to state 259

    name_in_namespace                   go to state 260
    basic_type_declaration              go to state 261
    structure_type_declaration          go to state 262
    auto_type_declaration               go to state 263
    bitfield_type_declaration           go to state 264
    type_declaration_no_options         go to state 1124
    type_declaration_no_options_no_dim  go to state 266


State 963

  776 make_dim_decl: "array" "variant" '<' $@91 . type_declaration_no_options '>' $@92 '(' make_variant_dim ')'

    "type"       shift, and go to state 219
    "array"      shift, and go to state 220
    "table"      shift, and go to state 221
    "typedecl"   shift, and go to state 222
    "iterator"   shift, and go to state 223
    "smart_ptr"  shift, and go to state 224
    "bool"       shift, and go to state 225
    "void"       shift, and go to state 226
    "string"     shift, and go to state 227
    "auto"       shift, and go to state 228
    "int"        shift, and go to state 229
    "int2"       shift, and go to state 230
    "int3"       shift, and go to state 231
    "int4"       shift, and go to state 232
    "uint"       shift, and go to state 233
    "bitfield"   shift, and go to state 234
    "uint2"      shift, and go to state 235
    "uint3"      shift, and go to state 236
    "uint4"      shift, and go to state 237
    "float"      shift, and go to state 238
    "float2"     shift, and go to state 239
    "float3"     shift, and go to state 240
    "float4"     shift, and go to state 241
    "range"      shift, and go to state 242
    "urange"     shift, and go to state 243
    "range64"    shift, and go to state 244
    "urange64"   shift, and go to state 245
    "block"      shift, and go to state 246
    "int64"      shift, and go to state 247
    "uint64"     shift, and go to state 248
    "double"     shift, and go to state 249
    "function"   shift, and go to state 250
    "lambda"     shift, and go to state 251
    "int8"       shift, and go to state 252
    "uint8"      shift, and go to state 253
    "int16"      shift, and go to state 254
    "uint16"     shift, and go to state 255
    "tuple"      shift, and go to state 256
    "variant"    shift, and go to state 257
    "::"         shift, and go to state 55
    "$t"         shift, and go to state 258
    "name"       shift, and go to state 56
    '$'          shift, and go to state 259

    name_in_namespace                   go to state 260
    basic_type_declaration              go to state 261
    structure_type_declaration          go to state 262
    auto_type_declaration               go to state 263
    bitfield_type_declaration           go to state 264
    type_declaration_no_options         go to state 1125
    type_declaration_no_options_no_dim  go to state 266


State 964

  780 make_dim_decl: "array" '<' $@93 type_declaration_no_options . '>' $@94 '(' optional_expr_list ')'

    '>'  shift, and go to state 1126


State 965

  777 make_dim_decl: "array" '(' expr_list optional_comma . ')'

    ')'  shift, and go to state 1127


State 966

  789 make_table_decl: "table" '<' type_declaration_no_options '>' . '(' optional_expr_map_tuple_list ')'

    '('  shift, and go to state 1128


State 967

  790 make_table_decl: "table" '<' type_declaration_no_options c_or_s . type_declaration_no_options '>' '(' optional_expr_map_tuple_list ')'

    "type"       shift, and go to state 219
    "array"      shift, and go to state 220
    "table"      shift, and go to state 221
    "typedecl"   shift, and go to state 222
    "iterator"   shift, and go to state 223
    "smart_ptr"  shift, and go to state 224
    "bool"       shift, and go to state 225
    "void"       shift, and go to state 226
    "string"     shift, and go to state 227
    "auto"       shift, and go to state 228
    "int"        shift, and go to state 229
    "int2"       shift, and go to state 230
    "int3"       shift, and go to state 231
    "int4"       shift, and go to state 232
    "uint"       shift, and go to state 233
    "bitfield"   shift, and go to state 234
    "uint2"      shift, and go to state 235
    "uint3"      shift, and go to state 236
    "uint4"      shift, and go to state 237
    "float"      shift, and go to state 238
    "float2"     shift, and go to state 239
    "float3"     shift, and go to state 240
    "float4"     shift, and go to state 241
    "range"      shift, and go to state 242
    "urange"     shift, and go to state 243
    "range64"    shift, and go to state 244
    "urange64"   shift, and go to state 245
    "block"      shift, and go to state 246
    "int64"      shift, and go to state 247
    "uint64"     shift, and go to state 248
    "double"     shift, and go to state 249
    "function"   shift, and go to state 250
    "lambda"     shift, and go to state 251
    "int8"       shift, and go to state 252
    "uint8"      shift, and go to state 253
    "int16"      shift, and go to state 254
    "uint16"     shift, and go to state 255
    "tuple"      shift, and go to state 256
    "variant"    shift, and go to state 257
    "::"         shift, and go to state 55
    "$t"         shift, and go to state 258
    "name"       shift, and go to state 56
    '$'          shift, and go to state 259

    name_in_namespace                   go to state 260
    basic_type_declaration              go to state 261
    structure_type_declaration          go to state 262
    auto_type_declaration               go to state 263
    bitfield_type_declaration           go to state 264
    type_declaration_no_options         go to state 1129
    type_declaration_no_options_no_dim  go to state 266


State 968

  788 make_table_decl: "table" '(' expr_map_tuple_list optional_comma . ')'

    ')'  shift, and go to state 1130


State 969

  424 expr: "deref" '(' expr ')' .

    $default  reduce using rule 424 (expr)


State 970

  286 expr_cast: "cast" '<' $@9 type_declaration_no_options . '>' $@10 expr

    '>'  shift, and go to state 1131


State 971

  289 expr_cast: "upcast" '<' $@11 type_declaration_no_options . '>' $@12 expr

    '>'  shift, and go to state 1132


State 972

  425 expr: "addr" '(' expr ')' .

    $default  reduce using rule 425 (expr)


State 973

  292 expr_cast: "reinterpret" '<' $@13 type_declaration_no_options . '>' $@14 expr

    '>'  shift, and go to state 1133


State 974

  457 expr: "unsafe" '(' expr ')' .

    $default  reduce using rule 457 (expr)


State 975

  784 make_dim_decl: "fixed_array" '<' $@95 type_declaration_no_options . '>' $@96 '(' expr_list optional_comma ')'

    '>'  shift, and go to state 1134


State 976

  781 make_dim_decl: "fixed_array" '(' expr_list optional_comma . ')'

    ')'  shift, and go to state 1135


State 977

  760 make_struct_decl: "default" '<' $@83 type_declaration_no_options . '>' $@84 use_initializer

    '>'  shift, and go to state 1136


State 978

  766 make_tuple_call: "tuple" '<' $@85 type_declaration_no_options . '>' $@86 '(' use_initializer optional_make_struct_dim_decl ')'

    '>'  shift, and go to state 1137


State 979

  763 make_tuple_call: "tuple" '(' expr_list optional_comma . ')'

    ')'  shift, and go to state 1138


State 980

  757 make_struct_decl: "variant" '<' $@81 type_declaration_no_options . '>' $@82 '(' make_variant_dim ')'

    '>'  shift, and go to state 1139


State 981

  426 expr: "generator" '<' type_declaration_no_options '>' . optional_capture_list '(' ')'
  427     | "generator" '<' type_declaration_no_options '>' . optional_capture_list '(' expr ')'
  428     | "generator" '<' type_declaration_no_options '>' . optional_capture_list expression_block

    "capture"  shift, and go to state 799

    $default  reduce using rule 314 (optional_capture_list)

    optional_capture_list  go to state 1140


State 982

  458 expr_mtag: "$$" '(' expr ')' .

    $default  reduce using rule 458 (expr_mtag)


State 983

  459 expr_mtag: "$i" '(' expr ')' .

    $default  reduce using rule 459 (expr_mtag)


State 984

  460 expr_mtag: "$v" '(' expr ')' .

    $default  reduce using rule 460 (expr_mtag)


State 985

  461 expr_mtag: "$b" '(' expr ')' .

    $default  reduce using rule 461 (expr_mtag)


State 986

  462 expr_mtag: "$a" '(' expr ')' .

    $default  reduce using rule 462 (expr_mtag)


State 987

  464 expr_mtag: "$c" '(' expr ')' . '(' ')'
  465          | "$c" '(' expr ')' . '(' expr_list ')'

    '('  shift, and go to state 1141


State 988

   31 string_builder_body: string_builder_body "{" expr . "}"
  347 expr_method_call: expr . "->" "name" '(' ')'
  348                 | expr . "->" "name" '(' expr_list ')'
  358 expr_field: expr . '.' "name"
  359           | expr . '.' '.' "name"
  360           | expr . '.' "name" '(' ')'
  361           | expr . '.' "name" '(' expr_list ')'
  362           | expr . '.' basic_type_declaration '(' ')'
  363           | expr . '.' basic_type_declaration '(' expr_list ')'
  366           | expr . '.' $@21 error $@22
  388 expr: expr . "<<" expr
  389     | expr . ">>" expr
  390     | expr . "<<<" expr
  391     | expr . ">>>" expr
  392     | expr . '+' expr
  393     | expr . '-' expr
  394     | expr . '*' expr
  395     | expr . '/' expr
  396     | expr . '%' expr
  397     | expr . '<' expr
  398     | expr . '>' expr
  399     | expr . "==" expr
  400     | expr . "!=" expr
  401     | expr . "<=" expr
  402     | expr . ">=" expr
  403     | expr . '&' expr
  404     | expr . '|' expr
  405     | expr . '^' expr
  406     | expr . "&&" expr
  407     | expr . "||" expr
  408     | expr . "^^" expr
  409     | expr . ".." expr
  412     | expr . "++"
  413     | expr . "--"
  415     | expr . '[' expr ']'
  416     | expr . '.' '[' expr ']'
  417     | expr . "?[" expr ']'
  418     | expr . '.' "?[" expr ']'
  419     | expr . "?." "name"
  420     | expr . '.' "?." "name"
  429     | expr . "??" expr
  430     | expr . '?' expr ':' expr
  433     | expr . "is" "type" '<' $@23 type_declaration_no_options '>' $@24
  434     | expr . "is" basic_type_declaration
  435     | expr . "is" "name"
  436     | expr . "as" "name"
  439     | expr . "as" "type" '<' $@25 type_declaration '>' $@26
  440     | expr . "as" basic_type_declaration
  441     | expr . '?' "as" "name"
  444     | expr . '?' "as" "type" '<' $@27 type_declaration '>' $@28
  445     | expr . '?' "as" basic_type_declaration
  453     | expr . "<|" expr
  454     | expr . "|>" expr
  455     | expr . "|>" basic_type_declaration
  466 expr_mtag: expr . '.' "$f" '(' expr ')'
  467          | expr . "?." "$f" '(' expr ')'
  468          | expr . '.' '.' "$f" '(' expr ')'
  469          | expr . '.' "?." "$f" '(' expr ')'
  470          | expr . "as" "$f" '(' expr ')'
  471          | expr . '?' "as" "$f" '(' expr ')'
  472          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 609
    "as"   shift, and go to state 610
    "<<"   shift, and go to state 611
    ">>"   shift, and go to state 612
    "++"   shift, and go to state 613
    "--"   shift, and go to state 614
    "<="   shift, and go to state 615
    ">="   shift, and go to state 616
    "=="   shift, and go to state 617
    "!="   shift, and go to state 618
    "->"   shift, and go to state 619
    "??"   shift, and go to state 620
    "?."   shift, and go to state 621
    "?["   shift, and go to state 622
    "<|"   shift, and go to state 623
    "|>"   shift, and go to state 624
    "<<<"  shift, and go to state 625
    ">>>"  shift, and go to state 626
    "&&"   shift, and go to state 627
    "||"   shift, and go to state 628
    "^^"   shift, and go to state 629
    ".."   shift, and go to state 630
    "}"    shift, and go to state 1142
    '?'    shift, and go to state 631
    '|'    shift, and go to state 632
    '^'    shift, and go to state 633
    '&'    shift, and go to state 634
    '<'    shift, and go to state 635
    '>'    shift, and go to state 636
    '-'    shift, and go to state 637
    '+'    shift, and go to state 638
    '*'    shift, and go to state 639
    '/'    shift, and go to state 640
    '%'    shift, and go to state 641
    '.'    shift, and go to state 642
    '['    shift, and go to state 643


State 989

  589 variable_name_with_pos_list: variable_name_with_pos_list . ',' "name"
  590                            | variable_name_with_pos_list . ',' "name" "aka" "name"
  797 array_comprehension: "begin of code block" "for" '(' variable_name_with_pos_list . "in" expr_list ')' "end of expression" make_map_tuple array_comprehension_where "end of code block"

    "in"  shift, and go to state 1143
    ','   shift, and go to state 881


State 990

  347 expr_method_call: expr . "->" "name" '(' ')'
  348                 | expr . "->" "name" '(' expr_list ')'
  358 expr_field: expr . '.' "name"
  359           | expr . '.' '.' "name"
  360           | expr . '.' "name" '(' ')'
  361           | expr . '.' "name" '(' expr_list ')'
  362           | expr . '.' basic_type_declaration '(' ')'
  363           | expr . '.' basic_type_declaration '(' expr_list ')'
  366           | expr . '.' $@21 error $@22
  388 expr: expr . "<<" expr
  389     | expr . ">>" expr
  390     | expr . "<<<" expr
  391     | expr . ">>>" expr
  392     | expr . '+' expr
  393     | expr . '-' expr
  394     | expr . '*' expr
  395     | expr . '/' expr
  396     | expr . '%' expr
  397     | expr . '<' expr
  398     | expr . '>' expr
  399     | expr . "==" expr
  400     | expr . "!=" expr
  401     | expr . "<=" expr
  402     | expr . ">=" expr
  403     | expr . '&' expr
  404     | expr . '|' expr
  405     | expr . '^' expr
  406     | expr . "&&" expr
  407     | expr . "||" expr
  408     | expr . "^^" expr
  409     | expr . ".." expr
  412     | expr . "++"
  413     | expr . "--"
  415     | expr . '[' expr ']'
  416     | expr . '.' '[' expr ']'
  417     | expr . "?[" expr ']'
  418     | expr . '.' "?[" expr ']'
  419     | expr . "?." "name"
  420     | expr . '.' "?." "name"
  429     | expr . "??" expr
  430     | expr . '?' expr ':' expr
  433     | expr . "is" "type" '<' $@23 type_declaration_no_options '>' $@24
  434     | expr . "is" basic_type_declaration
  435     | expr . "is" "name"
  436     | expr . "as" "name"
  439     | expr . "as" "type" '<' $@25 type_declaration '>' $@26
  440     | expr . "as" basic_type_declaration
  441     | expr . '?' "as" "name"
  444     | expr . '?' "as" "type" '<' $@27 type_declaration '>' $@28
  445     | expr . '?' "as" basic_type_declaration
  453     | expr . "<|" expr
  454     | expr . "|>" expr
  455     | expr . "|>" basic_type_declaration
  466 expr_mtag: expr . '.' "$f" '(' expr ')'
  467          | expr . "?." "$f" '(' expr ')'
  468          | expr . '.' '.' "$f" '(' expr ')'
  469          | expr . '.' "?." "$f" '(' expr ')'
  470          | expr . "as" "$f" '(' expr ')'
  471          | expr . '?' "as" "$f" '(' expr ')'
  472          | expr . "is" "$f" '(' expr ')'
  761 make_map_tuple: expr "=>" expr .

    "is"   shift, and go to state 609
    "as"   shift, and go to state 610
    "<<"   shift, and go to state 611
    ">>"   shift, and go to state 612
    "++"   shift, and go to state 613
    "--"   shift, and go to state 614
    "<="   shift, and go to state 615
    ">="   shift, and go to state 616
    "=="   shift, and go to state 617
    "!="   shift, and go to state 618
    "->"   shift, and go to state 619
    "??"   shift, and go to state 620
    "?."   shift, and go to state 621
    "?["   shift, and go to state 622
    "<|"   shift, and go to state 623
    "|>"   shift, and go to state 624
    "<<<"  shift, and go to state 625
    ">>>"  shift, and go to state 626
    "&&"   shift, and go to state 627
    "||"   shift, and go to state 628
    "^^"   shift, and go to state 629
    ".."   shift, and go to state 630
    '?'    shift, and go to state 631
    '|'    shift, and go to state 632
    '^'    shift, and go to state 633
    '&'    shift, and go to state 634
    '<'    shift, and go to state 635
    '>'    shift, and go to state 636
    '-'    shift, and go to state 637
    '+'    shift, and go to state 638
    '*'    shift, and go to state 639
    '/'    shift, and go to state 640
    '%'    shift, and go to state 641
    '.'    shift, and go to state 642
    '['    shift, and go to state 643

    $default  reduce using rule 761 (make_map_tuple)


State 991

  786 expr_map_tuple_list: expr_map_tuple_list ',' make_map_tuple .

    $default  reduce using rule 786 (expr_map_tuple_list)


State 992

  787 make_table_decl: "begin of code block" expr_map_tuple_list optional_comma "end of code block" .

    $default  reduce using rule 787 (make_table_decl)


State 993

  589 variable_name_with_pos_list: variable_name_with_pos_list . ',' "name"
  590                            | variable_name_with_pos_list . ',' "name" "aka" "name"
  795 array_comprehension: '[' "for" '(' variable_name_with_pos_list . "in" expr_list ')' "end of expression" expr array_comprehension_where ']'

    "in"  shift, and go to state 1144
    ','   shift, and go to state 881


State 994

  796 array_comprehension: '[' "iterator" "for" '(' . variable_name_with_pos_list "in" expr_list ')' "end of expression" expr array_comprehension_where ']'

    "$i"    shift, and go to state 678
    "name"  shift, and go to state 679

    variable_name_with_pos_list  go to state 1145


State 995

  300 expr_list: expr_list ',' expr .
  347 expr_method_call: expr . "->" "name" '(' ')'
  348                 | expr . "->" "name" '(' expr_list ')'
  358 expr_field: expr . '.' "name"
  359           | expr . '.' '.' "name"
  360           | expr . '.' "name" '(' ')'
  361           | expr . '.' "name" '(' expr_list ')'
  362           | expr . '.' basic_type_declaration '(' ')'
  363           | expr . '.' basic_type_declaration '(' expr_list ')'
  366           | expr . '.' $@21 error $@22
  388 expr: expr . "<<" expr
  389     | expr . ">>" expr
  390     | expr . "<<<" expr
  391     | expr . ">>>" expr
  392     | expr . '+' expr
  393     | expr . '-' expr
  394     | expr . '*' expr
  395     | expr . '/' expr
  396     | expr . '%' expr
  397     | expr . '<' expr
  398     | expr . '>' expr
  399     | expr . "==" expr
  400     | expr . "!=" expr
  401     | expr . "<=" expr
  402     | expr . ">=" expr
  403     | expr . '&' expr
  404     | expr . '|' expr
  405     | expr . '^' expr
  406     | expr . "&&" expr
  407     | expr . "||" expr
  408     | expr . "^^" expr
  409     | expr . ".." expr
  412     | expr . "++"
  413     | expr . "--"
  415     | expr . '[' expr ']'
  416     | expr . '.' '[' expr ']'
  417     | expr . "?[" expr ']'
  418     | expr . '.' "?[" expr ']'
  419     | expr . "?." "name"
  420     | expr . '.' "?." "name"
  429     | expr . "??" expr
  430     | expr . '?' expr ':' expr
  433     | expr . "is" "type" '<' $@23 type_declaration_no_options '>' $@24
  434     | expr . "is" basic_type_declaration
  435     | expr . "is" "name"
  436     | expr . "as" "name"
  439     | expr . "as" "type" '<' $@25 type_declaration '>' $@26
  440     | expr . "as" basic_type_declaration
  441     | expr . '?' "as" "name"
  444     | expr . '?' "as" "type" '<' $@27 type_declaration '>' $@28
  445     | expr . '?' "as" basic_type_declaration
  453     | expr . "<|" expr
  454     | expr . "|>" expr
  455     | expr . "|>" basic_type_declaration
  466 expr_mtag: expr . '.' "$f" '(' expr ')'
  467          | expr . "?." "$f" '(' expr ')'
  468          | expr . '.' '.' "$f" '(' expr ')'
  469          | expr . '.' "?." "$f" '(' expr ')'
  470          | expr . "as" "$f" '(' expr ')'
  471          | expr . '?' "as" "$f" '(' expr ')'
  472          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 609
    "as"   shift, and go to state 610
    "<<"   shift, and go to state 611
    ">>"   shift, and go to state 612
    "++"   shift, and go to state 613
    "--"   shift, and go to state 614
    "<="   shift, and go to state 615
    ">="   shift, and go to state 616
    "=="   shift, and go to state 617
    "!="   shift, and go to state 618
    "->"   shift, and go to state 619
    "??"   shift, and go to state 620
    "?."   shift, and go to state 621
    "?["   shift, and go to state 622
    "<|"   shift, and go to state 623
    "|>"   shift, and go to state 624
    "<<<"  shift, and go to state 625
    ">>>"  shift, and go to state 626
    "&&"   shift, and go to state 627
    "||"   shift, and go to state 628
    "^^"   shift, and go to state 629
    ".."   shift, and go to state 630
    '?'    shift, and go to state 631
    '|'    shift, and go to state 632
    '^'    shift, and go to state 633
    '&'    shift, and go to state 634
    '<'    shift, and go to state 635
    '>'    shift, and go to state 636
    '-'    shift, and go to state 637
    '+'    shift, and go to state 638
    '*'    shift, and go to state 639
    '/'    shift, and go to state 640
    '%'    shift, and go to state 641
    '.'    shift, and go to state 642
    '['    shift, and go to state 643

    $default  reduce using rule 300 (expr_list)


State 996

  767 make_dim_decl: '[' expr_list optional_comma ']' .

    $default  reduce using rule 767 (make_dim_decl)


State 997

  414 expr: '(' expr_list optional_comma ')' .

    $default  reduce using rule 414 (expr)


State 998

  350 func_addr_name: "$i" '(' . expr ')'

    "struct"                          shift, and go to state 409
    "class"                           shift, and go to state 410
    "true"                            shift, and go to state 411
    "false"                           shift, and go to state 412
    "new"                             shift, and go to state 413
    "typeinfo"                        shift, and go to state 414
    "type"                            shift, and go to state 415
    "array"                           shift, and go to state 416
    "null"                            shift, and go to state 417
    "table"                           shift, and go to state 418
    "deref"                           shift, and go to state 419
    "cast"                            shift, and go to state 420
    "upcast"                          shift, and go to state 421
    "addr"                            shift, and go to state 422
    "reinterpret"                     shift, and go to state 423
    "unsafe"                          shift, and go to state 424
    "fixed_array"                     shift, and go to state 425
    "default"                         shift, and go to state 426
    "bool"                            shift, and go to state 225
    "void"                            shift, and go to state 226
    "string"                          shift, and go to state 227
    "int"                             shift, and go to state 229
    "int2"                            shift, and go to state 230
    "int3"                            shift, and go to state 231
    "int4"                            shift, and go to state 232
    "uint"                            shift, and go to state 233
    "bitfield"                        shift, and go to state 427
    "uint2"                           shift, and go to state 235
    "uint3"                           shift, and go to state 236
    "uint4"                           shift, and go to state 237
    "float"                           shift, and go to state 238
    "float2"                          shift, and go to state 239
    "float3"                          shift, and go to state 240
    "float4"                          shift, and go to state 241
    "range"                           shift, and go to state 242
    "urange"                          shift, and go to state 243
    "range64"                         shift, and go to state 244
    "urange64"                        shift, and go to state 245
    "int64"                           shift, and go to state 247
    "uint64"                          shift, and go to state 248
    "double"                          shift, and go to state 249
    "int8"                            shift, and go to state 252
    "uint8"                           shift, and go to state 253
    "int16"                           shift, and go to state 254
    "uint16"                          shift, and go to state 255
    "tuple"                           shift, and go to state 428
    "variant"                         shift, and go to state 429
    "generator"                       shift, and go to state 430
    "++"                              shift, and go to state 431
    "--"                              shift, and go to state 432
    "::"                              shift, and go to state 55
    "$$"                              shift, and go to state 433
    "$i"                              shift, and go to state 434
    "$v"                              shift, and go to state 435
    "$b"                              shift, and go to state 436
    "$a"                              shift, and go to state 437
    "$c"                              shift, and go to state 438
    "..."                             shift, and go to state 439
    "integer constant"                shift, and go to state 440
    "long integer constant"           shift, and go to state 441
    "unsigned integer constant"       shift, and go to state 442
    "unsigned long integer constant"  shift, and go to state 443
    "unsigned int8 constant"          shift, and go to state 444
    "floating point constant"         shift, and go to state 445
    "double constant"                 shift, and go to state 446
    "name"                            shift, and go to state 56
    "start of the string"             shift, and go to state 447
    "begin of code block"             shift, and go to state 448
    '-'                               shift, and go to state 449
    '+'                               shift, and go to state 450
    '*'                               shift, and go to state 451
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 452
    '!'                               shift, and go to state 453
    '['                               shift, and go to state 454
    '('                               shift, and go to state 455
    '$'                               shift, and go to state 456
    '@'                               shift, and go to state 457

    string_builder          go to state 458
    expr_reader             go to state 459
    expr_call_pipe          go to state 460
    name_in_namespace       go to state 461
    expr_new                go to state 462
    expr_cast               go to state 463
    expr_type_decl          go to state 464
    expr_type_info          go to state 465
    block_or_lambda         go to state 466
    expr_full_block         go to state 467
    expr_numeric_const      go to state 468
    expr_named_call         go to state 469
    expr_method_call        go to state 470
    func_addr_expr          go to state 471
    expr_field              go to state 472
    expr_call               go to state 473
    expr                    go to state 1146
    expr_mtag               go to state 475
    basic_type_declaration  go to state 476
    make_decl               go to state 477
    make_struct_decl        go to state 478
    make_tuple_call         go to state 479
    make_dim_decl           go to state 480
    make_table_decl         go to state 481
    array_comprehension     go to state 482


State 999

  473 expr_mtag: '@' '@' "$c" '(' . expr ')'

    "struct"                          shift, and go to state 409
    "class"                           shift, and go to state 410
    "true"                            shift, and go to state 411
    "false"                           shift, and go to state 412
    "new"                             shift, and go to state 413
    "typeinfo"                        shift, and go to state 414
    "type"                            shift, and go to state 415
    "array"                           shift, and go to state 416
    "null"                            shift, and go to state 417
    "table"                           shift, and go to state 418
    "deref"                           shift, and go to state 419
    "cast"                            shift, and go to state 420
    "upcast"                          shift, and go to state 421
    "addr"                            shift, and go to state 422
    "reinterpret"                     shift, and go to state 423
    "unsafe"                          shift, and go to state 424
    "fixed_array"                     shift, and go to state 425
    "default"                         shift, and go to state 426
    "bool"                            shift, and go to state 225
    "void"                            shift, and go to state 226
    "string"                          shift, and go to state 227
    "int"                             shift, and go to state 229
    "int2"                            shift, and go to state 230
    "int3"                            shift, and go to state 231
    "int4"                            shift, and go to state 232
    "uint"                            shift, and go to state 233
    "bitfield"                        shift, and go to state 427
    "uint2"                           shift, and go to state 235
    "uint3"                           shift, and go to state 236
    "uint4"                           shift, and go to state 237
    "float"                           shift, and go to state 238
    "float2"                          shift, and go to state 239
    "float3"                          shift, and go to state 240
    "float4"                          shift, and go to state 241
    "range"                           shift, and go to state 242
    "urange"                          shift, and go to state 243
    "range64"                         shift, and go to state 244
    "urange64"                        shift, and go to state 245
    "int64"                           shift, and go to state 247
    "uint64"                          shift, and go to state 248
    "double"                          shift, and go to state 249
    "int8"                            shift, and go to state 252
    "uint8"                           shift, and go to state 253
    "int16"                           shift, and go to state 254
    "uint16"                          shift, and go to state 255
    "tuple"                           shift, and go to state 428
    "variant"                         shift, and go to state 429
    "generator"                       shift, and go to state 430
    "++"                              shift, and go to state 431
    "--"                              shift, and go to state 432
    "::"                              shift, and go to state 55
    "$$"                              shift, and go to state 433
    "$i"                              shift, and go to state 434
    "$v"                              shift, and go to state 435
    "$b"                              shift, and go to state 436
    "$a"                              shift, and go to state 437
    "$c"                              shift, and go to state 438
    "..."                             shift, and go to state 439
    "integer constant"                shift, and go to state 440
    "long integer constant"           shift, and go to state 441
    "unsigned integer constant"       shift, and go to state 442
    "unsigned long integer constant"  shift, and go to state 443
    "unsigned int8 constant"          shift, and go to state 444
    "floating point constant"         shift, and go to state 445
    "double constant"                 shift, and go to state 446
    "name"                            shift, and go to state 56
    "start of the string"             shift, and go to state 447
    "begin of code block"             shift, and go to state 448
    '-'                               shift, and go to state 449
    '+'                               shift, and go to state 450
    '*'                               shift, and go to state 451
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 452
    '!'                               shift, and go to state 453
    '['                               shift, and go to state 454
    '('                               shift, and go to state 455
    '$'                               shift, and go to state 456
    '@'                               shift, and go to state 457

    string_builder          go to state 458
    expr_reader             go to state 459
    expr_call_pipe          go to state 460
    name_in_namespace       go to state 461
    expr_new                go to state 462
    expr_cast               go to state 463
    expr_type_decl          go to state 464
    expr_type_info          go to state 465
    block_or_lambda         go to state 466
    expr_full_block         go to state 467
    expr_numeric_const      go to state 468
    expr_named_call         go to state 469
    expr_method_call        go to state 470
    func_addr_expr          go to state 471
    expr_field              go to state 472
    expr_call               go to state 473
    expr                    go to state 1147
    expr_mtag               go to state 475
    basic_type_declaration  go to state 476
    make_decl               go to state 477
    make_struct_decl        go to state 478
    make_tuple_call         go to state 479
    make_dim_decl           go to state 480
    make_table_decl         go to state 481
    array_comprehension     go to state 482


State 1000

  354 func_addr_expr: '@' '@' '<' $@17 . type_declaration_no_options '>' $@18 func_addr_name

    "type"       shift, and go to state 219
    "array"      shift, and go to state 220
    "table"      shift, and go to state 221
    "typedecl"   shift, and go to state 222
    "iterator"   shift, and go to state 223
    "smart_ptr"  shift, and go to state 224
    "bool"       shift, and go to state 225
    "void"       shift, and go to state 226
    "string"     shift, and go to state 227
    "auto"       shift, and go to state 228
    "int"        shift, and go to state 229
    "int2"       shift, and go to state 230
    "int3"       shift, and go to state 231
    "int4"       shift, and go to state 232
    "uint"       shift, and go to state 233
    "bitfield"   shift, and go to state 234
    "uint2"      shift, and go to state 235
    "uint3"      shift, and go to state 236
    "uint4"      shift, and go to state 237
    "float"      shift, and go to state 238
    "float2"     shift, and go to state 239
    "float3"     shift, and go to state 240
    "float4"     shift, and go to state 241
    "range"      shift, and go to state 242
    "urange"     shift, and go to state 243
    "range64"    shift, and go to state 244
    "urange64"   shift, and go to state 245
    "block"      shift, and go to state 246
    "int64"      shift, and go to state 247
    "uint64"     shift, and go to state 248
    "double"     shift, and go to state 249
    "function"   shift, and go to state 250
    "lambda"     shift, and go to state 251
    "int8"       shift, and go to state 252
    "uint8"      shift, and go to state 253
    "int16"      shift, and go to state 254
    "uint16"     shift, and go to state 255
    "tuple"      shift, and go to state 256
    "variant"    shift, and go to state 257
    "::"         shift, and go to state 55
    "$t"         shift, and go to state 258
    "name"       shift, and go to state 56
    '$'          shift, and go to state 259

    name_in_namespace                   go to state 260
    basic_type_declaration              go to state 261
    structure_type_declaration          go to state 262
    auto_type_declaration               go to state 263
    bitfield_type_declaration           go to state 264
    type_declaration_no_options         go to state 1148
    type_declaration_no_options_no_dim  go to state 266


State 1001

  357 func_addr_expr: '@' '@' '<' $@19 . optional_function_argument_list optional_function_type '>' $@20 func_addr_name

    '('  shift, and go to state 324

    $default  reduce using rule 115 (optional_function_argument_list)

    optional_function_argument_list  go to state 1149


State 1002

  731 make_struct_fields: "name" . copy_or_move expr
  732                   | "name" . ":=" expr

    "<-"  shift, and go to state 880
    ":="  shift, and go to state 1006
    '='   shift, and go to state 882

    copy_or_move  go to state 1007


State 1003

  368 expr_call: name_in_namespace '(' "uninitialized" ')' .

    $default  reduce using rule 368 (expr_call)


State 1004

  370 expr_call: name_in_namespace '(' "uninitialized" make_struct_single . ')'

    ')'  shift, and go to state 1150


State 1005

  735 make_struct_fields: "$f" '(' . expr ')' copy_or_move expr
  736                   | "$f" '(' . expr ')' ":=" expr

    "struct"                          shift, and go to state 409
    "class"                           shift, and go to state 410
    "true"                            shift, and go to state 411
    "false"                           shift, and go to state 412
    "new"                             shift, and go to state 413
    "typeinfo"                        shift, and go to state 414
    "type"                            shift, and go to state 415
    "array"                           shift, and go to state 416
    "null"                            shift, and go to state 417
    "table"                           shift, and go to state 418
    "deref"                           shift, and go to state 419
    "cast"                            shift, and go to state 420
    "upcast"                          shift, and go to state 421
    "addr"                            shift, and go to state 422
    "reinterpret"                     shift, and go to state 423
    "unsafe"                          shift, and go to state 424
    "fixed_array"                     shift, and go to state 425
    "default"                         shift, and go to state 426
    "bool"                            shift, and go to state 225
    "void"                            shift, and go to state 226
    "string"                          shift, and go to state 227
    "int"                             shift, and go to state 229
    "int2"                            shift, and go to state 230
    "int3"                            shift, and go to state 231
    "int4"                            shift, and go to state 232
    "uint"                            shift, and go to state 233
    "bitfield"                        shift, and go to state 427
    "uint2"                           shift, and go to state 235
    "uint3"                           shift, and go to state 236
    "uint4"                           shift, and go to state 237
    "float"                           shift, and go to state 238
    "float2"                          shift, and go to state 239
    "float3"                          shift, and go to state 240
    "float4"                          shift, and go to state 241
    "range"                           shift, and go to state 242
    "urange"                          shift, and go to state 243
    "range64"                         shift, and go to state 244
    "urange64"                        shift, and go to state 245
    "int64"                           shift, and go to state 247
    "uint64"                          shift, and go to state 248
    "double"                          shift, and go to state 249
    "int8"                            shift, and go to state 252
    "uint8"                           shift, and go to state 253
    "int16"                           shift, and go to state 254
    "uint16"                          shift, and go to state 255
    "tuple"                           shift, and go to state 428
    "variant"                         shift, and go to state 429
    "generator"                       shift, and go to state 430
    "++"                              shift, and go to state 431
    "--"                              shift, and go to state 432
    "::"                              shift, and go to state 55
    "$$"                              shift, and go to state 433
    "$i"                              shift, and go to state 434
    "$v"                              shift, and go to state 435
    "$b"                              shift, and go to state 436
    "$a"                              shift, and go to state 437
    "$c"                              shift, and go to state 438
    "..."                             shift, and go to state 439
    "integer constant"                shift, and go to state 440
    "long integer constant"           shift, and go to state 441
    "unsigned integer constant"       shift, and go to state 442
    "unsigned long integer constant"  shift, and go to state 443
    "unsigned int8 constant"          shift, and go to state 444
    "floating point constant"         shift, and go to state 445
    "double constant"                 shift, and go to state 446
    "name"                            shift, and go to state 56
    "start of the string"             shift, and go to state 447
    "begin of code block"             shift, and go to state 448
    '-'                               shift, and go to state 449
    '+'                               shift, and go to state 450
    '*'                               shift, and go to state 451
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 452
    '!'                               shift, and go to state 453
    '['                               shift, and go to state 454
    '('                               shift, and go to state 455
    '$'                               shift, and go to state 456
    '@'                               shift, and go to state 457

    string_builder          go to state 458
    expr_reader             go to state 459
    expr_call_pipe          go to state 460
    name_in_namespace       go to state 461
    expr_new                go to state 462
    expr_cast               go to state 463
    expr_type_decl          go to state 464
    expr_type_info          go to state 465
    block_or_lambda         go to state 466
    expr_full_block         go to state 467
    expr_numeric_const      go to state 468
    expr_named_call         go to state 469
    expr_method_call        go to state 470
    func_addr_expr          go to state 471
    expr_field              go to state 472
    expr_call               go to state 473
    expr                    go to state 1151
    expr_mtag               go to state 475
    basic_type_declaration  go to state 476
    make_decl               go to state 477
    make_struct_decl        go to state 478
    make_tuple_call         go to state 479
    make_dim_decl           go to state 480
    make_table_decl         go to state 481
    array_comprehension     go to state 482


State 1006

  732 make_struct_fields: "name" ":=" . expr

    "struct"                          shift, and go to state 409
    "class"                           shift, and go to state 410
    "true"                            shift, and go to state 411
    "false"                           shift, and go to state 412
    "new"                             shift, and go to state 413
    "typeinfo"                        shift, and go to state 414
    "type"                            shift, and go to state 415
    "array"                           shift, and go to state 416
    "null"                            shift, and go to state 417
    "table"                           shift, and go to state 418
    "deref"                           shift, and go to state 419
    "cast"                            shift, and go to state 420
    "upcast"                          shift, and go to state 421
    "addr"                            shift, and go to state 422
    "reinterpret"                     shift, and go to state 423
    "unsafe"                          shift, and go to state 424
    "fixed_array"                     shift, and go to state 425
    "default"                         shift, and go to state 426
    "bool"                            shift, and go to state 225
    "void"                            shift, and go to state 226
    "string"                          shift, and go to state 227
    "int"                             shift, and go to state 229
    "int2"                            shift, and go to state 230
    "int3"                            shift, and go to state 231
    "int4"                            shift, and go to state 232
    "uint"                            shift, and go to state 233
    "bitfield"                        shift, and go to state 427
    "uint2"                           shift, and go to state 235
    "uint3"                           shift, and go to state 236
    "uint4"                           shift, and go to state 237
    "float"                           shift, and go to state 238
    "float2"                          shift, and go to state 239
    "float3"                          shift, and go to state 240
    "float4"                          shift, and go to state 241
    "range"                           shift, and go to state 242
    "urange"                          shift, and go to state 243
    "range64"                         shift, and go to state 244
    "urange64"                        shift, and go to state 245
    "int64"                           shift, and go to state 247
    "uint64"                          shift, and go to state 248
    "double"                          shift, and go to state 249
    "int8"                            shift, and go to state 252
    "uint8"                           shift, and go to state 253
    "int16"                           shift, and go to state 254
    "uint16"                          shift, and go to state 255
    "tuple"                           shift, and go to state 428
    "variant"                         shift, and go to state 429
    "generator"                       shift, and go to state 430
    "++"                              shift, and go to state 431
    "--"                              shift, and go to state 432
    "::"                              shift, and go to state 55
    "$$"                              shift, and go to state 433
    "$i"                              shift, and go to state 434
    "$v"                              shift, and go to state 435
    "$b"                              shift, and go to state 436
    "$a"                              shift, and go to state 437
    "$c"                              shift, and go to state 438
    "..."                             shift, and go to state 439
    "integer constant"                shift, and go to state 440
    "long integer constant"           shift, and go to state 441
    "unsigned integer constant"       shift, and go to state 442
    "unsigned long integer constant"  shift, and go to state 443
    "unsigned int8 constant"          shift, and go to state 444
    "floating point constant"         shift, and go to state 445
    "double constant"                 shift, and go to state 446
    "name"                            shift, and go to state 56
    "start of the string"             shift, and go to state 447
    "begin of code block"             shift, and go to state 448
    '-'                               shift, and go to state 449
    '+'                               shift, and go to state 450
    '*'                               shift, and go to state 451
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 452
    '!'                               shift, and go to state 453
    '['                               shift, and go to state 454
    '('                               shift, and go to state 455
    '$'                               shift, and go to state 456
    '@'                               shift, and go to state 457

    string_builder          go to state 458
    expr_reader             go to state 459
    expr_call_pipe          go to state 460
    name_in_namespace       go to state 461
    expr_new                go to state 462
    expr_cast               go to state 463
    expr_type_decl          go to state 464
    expr_type_info          go to state 465
    block_or_lambda         go to state 466
    expr_full_block         go to state 467
    expr_numeric_const      go to state 468
    expr_named_call         go to state 469
    expr_method_call        go to state 470
    func_addr_expr          go to state 471
    expr_field              go to state 472
    expr_call               go to state 473
    expr                    go to state 1152
    expr_mtag               go to state 475
    basic_type_declaration  go to state 476
    make_decl               go to state 477
    make_struct_decl        go to state 478
    make_tuple_call         go to state 479
    make_dim_decl           go to state 480
    make_table_decl         go to state 481
    array_comprehension     go to state 482


State 1007

  731 make_struct_fields: "name" copy_or_move . expr

    "struct"                          shift, and go to state 409
    "class"                           shift, and go to state 410
    "true"                            shift, and go to state 411
    "false"                           shift, and go to state 412
    "new"                             shift, and go to state 413
    "typeinfo"                        shift, and go to state 414
    "type"                            shift, and go to state 415
    "array"                           shift, and go to state 416
    "null"                            shift, and go to state 417
    "table"                           shift, and go to state 418
    "deref"                           shift, and go to state 419
    "cast"                            shift, and go to state 420
    "upcast"                          shift, and go to state 421
    "addr"                            shift, and go to state 422
    "reinterpret"                     shift, and go to state 423
    "unsafe"                          shift, and go to state 424
    "fixed_array"                     shift, and go to state 425
    "default"                         shift, and go to state 426
    "bool"                            shift, and go to state 225
    "void"                            shift, and go to state 226
    "string"                          shift, and go to state 227
    "int"                             shift, and go to state 229
    "int2"                            shift, and go to state 230
    "int3"                            shift, and go to state 231
    "int4"                            shift, and go to state 232
    "uint"                            shift, and go to state 233
    "bitfield"                        shift, and go to state 427
    "uint2"                           shift, and go to state 235
    "uint3"                           shift, and go to state 236
    "uint4"                           shift, and go to state 237
    "float"                           shift, and go to state 238
    "float2"                          shift, and go to state 239
    "float3"                          shift, and go to state 240
    "float4"                          shift, and go to state 241
    "range"                           shift, and go to state 242
    "urange"                          shift, and go to state 243
    "range64"                         shift, and go to state 244
    "urange64"                        shift, and go to state 245
    "int64"                           shift, and go to state 247
    "uint64"                          shift, and go to state 248
    "double"                          shift, and go to state 249
    "int8"                            shift, and go to state 252
    "uint8"                           shift, and go to state 253
    "int16"                           shift, and go to state 254
    "uint16"                          shift, and go to state 255
    "tuple"                           shift, and go to state 428
    "variant"                         shift, and go to state 429
    "generator"                       shift, and go to state 430
    "++"                              shift, and go to state 431
    "--"                              shift, and go to state 432
    "::"                              shift, and go to state 55
    "$$"                              shift, and go to state 433
    "$i"                              shift, and go to state 434
    "$v"                              shift, and go to state 435
    "$b"                              shift, and go to state 436
    "$a"                              shift, and go to state 437
    "$c"                              shift, and go to state 438
    "..."                             shift, and go to state 439
    "integer constant"                shift, and go to state 440
    "long integer constant"           shift, and go to state 441
    "unsigned integer constant"       shift, and go to state 442
    "unsigned long integer constant"  shift, and go to state 443
    "unsigned int8 constant"          shift, and go to state 444
    "floating point constant"         shift, and go to state 445
    "double constant"                 shift, and go to state 446
    "name"                            shift, and go to state 56
    "start of the string"             shift, and go to state 447
    "begin of code block"             shift, and go to state 448
    '-'                               shift, and go to state 449
    '+'                               shift, and go to state 450
    '*'                               shift, and go to state 451
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 452
    '!'                               shift, and go to state 453
    '['                               shift, and go to state 454
    '('                               shift, and go to state 455
    '$'                               shift, and go to state 456
    '@'                               shift, and go to state 457

    string_builder          go to state 458
    expr_reader             go to state 459
    expr_call_pipe          go to state 460
    name_in_namespace       go to state 461
    expr_new                go to state 462
    expr_cast               go to state 463
    expr_type_decl          go to state 464
    expr_type_info          go to state 465
    block_or_lambda         go to state 466
    expr_full_block         go to state 467
    expr_numeric_const      go to state 468
    expr_named_call         go to state 469
    expr_method_call        go to state 470
    func_addr_expr          go to state 471
    expr_field              go to state 472
    expr_call               go to state 473
    expr                    go to state 1153
    expr_mtag               go to state 475
    basic_type_declaration  go to state 476
    make_decl               go to state 477
    make_struct_decl        go to state 478
    make_tuple_call         go to state 479
    make_dim_decl           go to state 480
    make_table_decl         go to state 481
    array_comprehension     go to state 482


State 1008

  345 expr_named_call: name_in_namespace '(' '[' make_struct_fields . ']' ')'
  733 make_struct_fields: make_struct_fields . ',' "name" copy_or_move expr
  734                   | make_struct_fields . ',' "name" ":=" expr
  737                   | make_struct_fields . ',' "$f" '(' expr ')' copy_or_move expr
  738                   | make_struct_fields . ',' "$f" '(' expr ')' ":=" expr

    ','  shift, and go to state 1011
    ']'  shift, and go to state 1154


State 1009

  300 expr_list: expr_list ',' . expr
  346 expr_named_call: name_in_namespace '(' expr_list ',' . '[' make_struct_fields ']' ')'

    "struct"                          shift, and go to state 409
    "class"                           shift, and go to state 410
    "true"                            shift, and go to state 411
    "false"                           shift, and go to state 412
    "new"                             shift, and go to state 413
    "typeinfo"                        shift, and go to state 414
    "type"                            shift, and go to state 415
    "array"                           shift, and go to state 416
    "null"                            shift, and go to state 417
    "table"                           shift, and go to state 418
    "deref"                           shift, and go to state 419
    "cast"                            shift, and go to state 420
    "upcast"                          shift, and go to state 421
    "addr"                            shift, and go to state 422
    "reinterpret"                     shift, and go to state 423
    "unsafe"                          shift, and go to state 424
    "fixed_array"                     shift, and go to state 425
    "default"                         shift, and go to state 426
    "bool"                            shift, and go to state 225
    "void"                            shift, and go to state 226
    "string"                          shift, and go to state 227
    "int"                             shift, and go to state 229
    "int2"                            shift, and go to state 230
    "int3"                            shift, and go to state 231
    "int4"                            shift, and go to state 232
    "uint"                            shift, and go to state 233
    "bitfield"                        shift, and go to state 427
    "uint2"                           shift, and go to state 235
    "uint3"                           shift, and go to state 236
    "uint4"                           shift, and go to state 237
    "float"                           shift, and go to state 238
    "float2"                          shift, and go to state 239
    "float3"                          shift, and go to state 240
    "float4"                          shift, and go to state 241
    "range"                           shift, and go to state 242
    "urange"                          shift, and go to state 243
    "range64"                         shift, and go to state 244
    "urange64"                        shift, and go to state 245
    "int64"                           shift, and go to state 247
    "uint64"                          shift, and go to state 248
    "double"                          shift, and go to state 249
    "int8"                            shift, and go to state 252
    "uint8"                           shift, and go to state 253
    "int16"                           shift, and go to state 254
    "uint16"                          shift, and go to state 255
    "tuple"                           shift, and go to state 428
    "variant"                         shift, and go to state 429
    "generator"                       shift, and go to state 430
    "++"                              shift, and go to state 431
    "--"                              shift, and go to state 432
    "::"                              shift, and go to state 55
    "$$"                              shift, and go to state 433
    "$i"                              shift, and go to state 434
    "$v"                              shift, and go to state 435
    "$b"                              shift, and go to state 436
    "$a"                              shift, and go to state 437
    "$c"                              shift, and go to state 438
    "..."                             shift, and go to state 439
    "integer constant"                shift, and go to state 440
    "long integer constant"           shift, and go to state 441
    "unsigned integer constant"       shift, and go to state 442
    "unsigned long integer constant"  shift, and go to state 443
    "unsigned int8 constant"          shift, and go to state 444
    "floating point constant"         shift, and go to state 445
    "double constant"                 shift, and go to state 446
    "name"                            shift, and go to state 56
    "start of the string"             shift, and go to state 447
    "begin of code block"             shift, and go to state 448
    '-'                               shift, and go to state 449
    '+'                               shift, and go to state 450
    '*'                               shift, and go to state 451
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 452
    '!'                               shift, and go to state 453
    '['                               shift, and go to state 1155
    '('                               shift, and go to state 455
    '$'                               shift, and go to state 456
    '@'                               shift, and go to state 457

    string_builder          go to state 458
    expr_reader             go to state 459
    expr_call_pipe          go to state 460
    name_in_namespace       go to state 461
    expr_new                go to state 462
    expr_cast               go to state 463
    expr_type_decl          go to state 464
    expr_type_info          go to state 465
    block_or_lambda         go to state 466
    expr_full_block         go to state 467
    expr_numeric_const      go to state 468
    expr_named_call         go to state 469
    expr_method_call        go to state 470
    func_addr_expr          go to state 471
    expr_field              go to state 472
    expr_call               go to state 473
    expr                    go to state 995
    expr_mtag               go to state 475
    basic_type_declaration  go to state 476
    make_decl               go to state 477
    make_struct_decl        go to state 478
    make_tuple_call         go to state 479
    make_dim_decl           go to state 480
    make_table_decl         go to state 481
    array_comprehension     go to state 482


State 1010

  371 expr_call: name_in_namespace '(' expr_list ')' .

    $default  reduce using rule 371 (expr_call)


State 1011

  733 make_struct_fields: make_struct_fields ',' . "name" copy_or_move expr
  734                   | make_struct_fields ',' . "name" ":=" expr
  737                   | make_struct_fields ',' . "$f" '(' expr ')' copy_or_move expr
  738                   | make_struct_fields ',' . "$f" '(' expr ')' ":=" expr

    "$f"    shift, and go to state 1156
    "name"  shift, and go to state 1157


State 1012

  369 expr_call: name_in_namespace '(' make_struct_single ')' .

    $default  reduce using rule 369 (expr_call)


State 1013

  315 optional_capture_list: "capture" '(' . capture_list ')'

    "<-"    shift, and go to state 1158
    ":="    shift, and go to state 1159
    "name"  shift, and go to state 1160
    '='     shift, and go to state 1161
    '&'     shift, and go to state 1162

    capture_entry  go to state 1163
    capture_list   go to state 1164


State 1014

  316 expr_full_block: block_or_lambda optional_annotation_list optional_capture_list optional_function_argument_list . optional_function_type block_or_simple_block

    ':'  shift, and go to state 392

    $default  reduce using rule 118 (optional_function_type)

    optional_function_type  go to state 1165


State 1015

  318 expr_full_block_assumed_piped: "begin of code block" expressions "end of code block" .

    $default  reduce using rule 318 (expr_full_block_assumed_piped)


State 1016

  317 expr_full_block_assumed_piped: block_or_lambda optional_annotation_list optional_capture_list . optional_function_argument_list optional_function_type expression_block

    '('  shift, and go to state 324

    $default  reduce using rule 115 (optional_function_argument_list)

    optional_function_argument_list  go to state 1166


State 1017

  433 expr: expr "is" "type" '<' . $@23 type_declaration_no_options '>' $@24

    $default  reduce using rule 431 ($@23)

    $@23  go to state 1167


State 1018

  472 expr_mtag: expr "is" "$f" '(' . expr ')'

    "struct"                          shift, and go to state 409
    "class"                           shift, and go to state 410
    "true"                            shift, and go to state 411
    "false"                           shift, and go to state 412
    "new"                             shift, and go to state 413
    "typeinfo"                        shift, and go to state 414
    "type"                            shift, and go to state 415
    "array"                           shift, and go to state 416
    "null"                            shift, and go to state 417
    "table"                           shift, and go to state 418
    "deref"                           shift, and go to state 419
    "cast"                            shift, and go to state 420
    "upcast"                          shift, and go to state 421
    "addr"                            shift, and go to state 422
    "reinterpret"                     shift, and go to state 423
    "unsafe"                          shift, and go to state 424
    "fixed_array"                     shift, and go to state 425
    "default"                         shift, and go to state 426
    "bool"                            shift, and go to state 225
    "void"                            shift, and go to state 226
    "string"                          shift, and go to state 227
    "int"                             shift, and go to state 229
    "int2"                            shift, and go to state 230
    "int3"                            shift, and go to state 231
    "int4"                            shift, and go to state 232
    "uint"                            shift, and go to state 233
    "bitfield"                        shift, and go to state 427
    "uint2"                           shift, and go to state 235
    "uint3"                           shift, and go to state 236
    "uint4"                           shift, and go to state 237
    "float"                           shift, and go to state 238
    "float2"                          shift, and go to state 239
    "float3"                          shift, and go to state 240
    "float4"                          shift, and go to state 241
    "range"                           shift, and go to state 242
    "urange"                          shift, and go to state 243
    "range64"                         shift, and go to state 244
    "urange64"                        shift, and go to state 245
    "int64"                           shift, and go to state 247
    "uint64"                          shift, and go to state 248
    "double"                          shift, and go to state 249
    "int8"                            shift, and go to state 252
    "uint8"                           shift, and go to state 253
    "int16"                           shift, and go to state 254
    "uint16"                          shift, and go to state 255
    "tuple"                           shift, and go to state 428
    "variant"                         shift, and go to state 429
    "generator"                       shift, and go to state 430
    "++"                              shift, and go to state 431
    "--"                              shift, and go to state 432
    "::"                              shift, and go to state 55
    "$$"                              shift, and go to state 433
    "$i"                              shift, and go to state 434
    "$v"                              shift, and go to state 435
    "$b"                              shift, and go to state 436
    "$a"                              shift, and go to state 437
    "$c"                              shift, and go to state 438
    "..."                             shift, and go to state 439
    "integer constant"                shift, and go to state 440
    "long integer constant"           shift, and go to state 441
    "unsigned integer constant"       shift, and go to state 442
    "unsigned long integer constant"  shift, and go to state 443
    "unsigned int8 constant"          shift, and go to state 444
    "floating point constant"         shift, and go to state 445
    "double constant"                 shift, and go to state 446
    "name"                            shift, and go to state 56
    "start of the string"             shift, and go to state 447
    "begin of code block"             shift, and go to state 448
    '-'                               shift, and go to state 449
    '+'                               shift, and go to state 450
    '*'                               shift, and go to state 451
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 452
    '!'                               shift, and go to state 453
    '['                               shift, and go to state 454
    '('                               shift, and go to state 455
    '$'                               shift, and go to state 456
    '@'                               shift, and go to state 457

    string_builder          go to state 458
    expr_reader             go to state 459
    expr_call_pipe          go to state 460
    name_in_namespace       go to state 461
    expr_new                go to state 462
    expr_cast               go to state 463
    expr_type_decl          go to state 464
    expr_type_info          go to state 465
    block_or_lambda         go to state 466
    expr_full_block         go to state 467
    expr_numeric_const      go to state 468
    expr_named_call         go to state 469
    expr_method_call        go to state 470
    func_addr_expr          go to state 471
    expr_field              go to state 472
    expr_call               go to state 473
    expr                    go to state 1168
    expr_mtag               go to state 475
    basic_type_declaration  go to state 476
    make_decl               go to state 477
    make_struct_decl        go to state 478
    make_tuple_call         go to state 479
    make_dim_decl           go to state 480
    make_table_decl         go to state 481
    array_comprehension     go to state 482


State 1019

  439 expr: expr "as" "type" '<' . $@25 type_declaration '>' $@26

    $default  reduce using rule 437 ($@25)

    $@25  go to state 1169


State 1020

  470 expr_mtag: expr "as" "$f" '(' . expr ')'

    "struct"                          shift, and go to state 409
    "class"                           shift, and go to state 410
    "true"                            shift, and go to state 411
    "false"                           shift, and go to state 412
    "new"                             shift, and go to state 413
    "typeinfo"                        shift, and go to state 414
    "type"                            shift, and go to state 415
    "array"                           shift, and go to state 416
    "null"                            shift, and go to state 417
    "table"                           shift, and go to state 418
    "deref"                           shift, and go to state 419
    "cast"                            shift, and go to state 420
    "upcast"                          shift, and go to state 421
    "addr"                            shift, and go to state 422
    "reinterpret"                     shift, and go to state 423
    "unsafe"                          shift, and go to state 424
    "fixed_array"                     shift, and go to state 425
    "default"                         shift, and go to state 426
    "bool"                            shift, and go to state 225
    "void"                            shift, and go to state 226
    "string"                          shift, and go to state 227
    "int"                             shift, and go to state 229
    "int2"                            shift, and go to state 230
    "int3"                            shift, and go to state 231
    "int4"                            shift, and go to state 232
    "uint"                            shift, and go to state 233
    "bitfield"                        shift, and go to state 427
    "uint2"                           shift, and go to state 235
    "uint3"                           shift, and go to state 236
    "uint4"                           shift, and go to state 237
    "float"                           shift, and go to state 238
    "float2"                          shift, and go to state 239
    "float3"                          shift, and go to state 240
    "float4"                          shift, and go to state 241
    "range"                           shift, and go to state 242
    "urange"                          shift, and go to state 243
    "range64"                         shift, and go to state 244
    "urange64"                        shift, and go to state 245
    "int64"                           shift, and go to state 247
    "uint64"                          shift, and go to state 248
    "double"                          shift, and go to state 249
    "int8"                            shift, and go to state 252
    "uint8"                           shift, and go to state 253
    "int16"                           shift, and go to state 254
    "uint16"                          shift, and go to state 255
    "tuple"                           shift, and go to state 428
    "variant"                         shift, and go to state 429
    "generator"                       shift, and go to state 430
    "++"                              shift, and go to state 431
    "--"                              shift, and go to state 432
    "::"                              shift, and go to state 55
    "$$"                              shift, and go to state 433
    "$i"                              shift, and go to state 434
    "$v"                              shift, and go to state 435
    "$b"                              shift, and go to state 436
    "$a"                              shift, and go to state 437
    "$c"                              shift, and go to state 438
    "..."                             shift, and go to state 439
    "integer constant"                shift, and go to state 440
    "long integer constant"           shift, and go to state 441
    "unsigned integer constant"       shift, and go to state 442
    "unsigned long integer constant"  shift, and go to state 443
    "unsigned int8 constant"          shift, and go to state 444
    "floating point constant"         shift, and go to state 445
    "double constant"                 shift, and go to state 446
    "name"                            shift, and go to state 56
    "start of the string"             shift, and go to state 447
    "begin of code block"             shift, and go to state 448
    '-'                               shift, and go to state 449
    '+'                               shift, and go to state 450
    '*'                               shift, and go to state 451
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 452
    '!'                               shift, and go to state 453
    '['                               shift, and go to state 454
    '('                               shift, and go to state 455
    '$'                               shift, and go to state 456
    '@'                               shift, and go to state 457

    string_builder          go to state 458
    expr_reader             go to state 459
    expr_call_pipe          go to state 460
    name_in_namespace       go to state 461
    expr_new                go to state 462
    expr_cast               go to state 463
    expr_type_decl          go to state 464
    expr_type_info          go to state 465
    block_or_lambda         go to state 466
    expr_full_block         go to state 467
    expr_numeric_const      go to state 468
    expr_named_call         go to state 469
    expr_method_call        go to state 470
    func_addr_expr          go to state 471
    expr_field              go to state 472
    expr_call               go to state 473
    expr                    go to state 1170
    expr_mtag               go to state 475
    basic_type_declaration  go to state 476
    make_decl               go to state 477
    make_struct_decl        go to state 478
    make_tuple_call         go to state 479
    make_dim_decl           go to state 480
    make_table_decl         go to state 481
    array_comprehension     go to state 482


State 1021

  347 expr_method_call: expr "->" "name" '(' . ')'
  348                 | expr "->" "name" '(' . expr_list ')'

    "struct"                          shift, and go to state 409
    "class"                           shift, and go to state 410
    "true"                            shift, and go to state 411
    "false"                           shift, and go to state 412
    "new"                             shift, and go to state 413
    "typeinfo"                        shift, and go to state 414
    "type"                            shift, and go to state 415
    "array"                           shift, and go to state 416
    "null"                            shift, and go to state 417
    "table"                           shift, and go to state 418
    "deref"                           shift, and go to state 419
    "cast"                            shift, and go to state 420
    "upcast"                          shift, and go to state 421
    "addr"                            shift, and go to state 422
    "reinterpret"                     shift, and go to state 423
    "unsafe"                          shift, and go to state 424
    "fixed_array"                     shift, and go to state 425
    "default"                         shift, and go to state 426
    "bool"                            shift, and go to state 225
    "void"                            shift, and go to state 226
    "string"                          shift, and go to state 227
    "int"                             shift, and go to state 229
    "int2"                            shift, and go to state 230
    "int3"                            shift, and go to state 231
    "int4"                            shift, and go to state 232
    "uint"                            shift, and go to state 233
    "bitfield"                        shift, and go to state 427
    "uint2"                           shift, and go to state 235
    "uint3"                           shift, and go to state 236
    "uint4"                           shift, and go to state 237
    "float"                           shift, and go to state 238
    "float2"                          shift, and go to state 239
    "float3"                          shift, and go to state 240
    "float4"                          shift, and go to state 241
    "range"                           shift, and go to state 242
    "urange"                          shift, and go to state 243
    "range64"                         shift, and go to state 244
    "urange64"                        shift, and go to state 245
    "int64"                           shift, and go to state 247
    "uint64"                          shift, and go to state 248
    "double"                          shift, and go to state 249
    "int8"                            shift, and go to state 252
    "uint8"                           shift, and go to state 253
    "int16"                           shift, and go to state 254
    "uint16"                          shift, and go to state 255
    "tuple"                           shift, and go to state 428
    "variant"                         shift, and go to state 429
    "generator"                       shift, and go to state 430
    "++"                              shift, and go to state 431
    "--"                              shift, and go to state 432
    "::"                              shift, and go to state 55
    "$$"                              shift, and go to state 433
    "$i"                              shift, and go to state 434
    "$v"                              shift, and go to state 435
    "$b"                              shift, and go to state 436
    "$a"                              shift, and go to state 437
    "$c"                              shift, and go to state 438
    "..."                             shift, and go to state 439
    "integer constant"                shift, and go to state 440
    "long integer constant"           shift, and go to state 441
    "unsigned integer constant"       shift, and go to state 442
    "unsigned long integer constant"  shift, and go to state 443
    "unsigned int8 constant"          shift, and go to state 444
    "floating point constant"         shift, and go to state 445
    "double constant"                 shift, and go to state 446
    "name"                            shift, and go to state 56
    "start of the string"             shift, and go to state 447
    "begin of code block"             shift, and go to state 448
    '-'                               shift, and go to state 449
    '+'                               shift, and go to state 450
    '*'                               shift, and go to state 451
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 452
    '!'                               shift, and go to state 453
    '['                               shift, and go to state 454
    '('                               shift, and go to state 455
    ')'                               shift, and go to state 1171
    '$'                               shift, and go to state 456
    '@'                               shift, and go to state 457

    string_builder          go to state 458
    expr_reader             go to state 459
    expr_call_pipe          go to state 460
    name_in_namespace       go to state 461
    expr_new                go to state 462
    expr_cast               go to state 463
    expr_type_decl          go to state 464
    expr_type_info          go to state 465
    expr_list               go to state 1172
    block_or_lambda         go to state 466
    expr_full_block         go to state 467
    expr_numeric_const      go to state 468
    expr_named_call         go to state 469
    expr_method_call        go to state 470
    func_addr_expr          go to state 471
    expr_field              go to state 472
    expr_call               go to state 473
    expr                    go to state 600
    expr_mtag               go to state 475
    basic_type_declaration  go to state 476
    make_decl               go to state 477
    make_struct_decl        go to state 478
    make_tuple_call         go to state 479
    make_dim_decl           go to state 480
    make_table_decl         go to state 481
    array_comprehension     go to state 482


State 1022

  467 expr_mtag: expr "?." "$f" '(' . expr ')'

    "struct"                          shift, and go to state 409
    "class"                           shift, and go to state 410
    "true"                            shift, and go to state 411
    "false"                           shift, and go to state 412
    "new"                             shift, and go to state 413
    "typeinfo"                        shift, and go to state 414
    "type"                            shift, and go to state 415
    "array"                           shift, and go to state 416
    "null"                            shift, and go to state 417
    "table"                           shift, and go to state 418
    "deref"                           shift, and go to state 419
    "cast"                            shift, and go to state 420
    "upcast"                          shift, and go to state 421
    "addr"                            shift, and go to state 422
    "reinterpret"                     shift, and go to state 423
    "unsafe"                          shift, and go to state 424
    "fixed_array"                     shift, and go to state 425
    "default"                         shift, and go to state 426
    "bool"                            shift, and go to state 225
    "void"                            shift, and go to state 226
    "string"                          shift, and go to state 227
    "int"                             shift, and go to state 229
    "int2"                            shift, and go to state 230
    "int3"                            shift, and go to state 231
    "int4"                            shift, and go to state 232
    "uint"                            shift, and go to state 233
    "bitfield"                        shift, and go to state 427
    "uint2"                           shift, and go to state 235
    "uint3"                           shift, and go to state 236
    "uint4"                           shift, and go to state 237
    "float"                           shift, and go to state 238
    "float2"                          shift, and go to state 239
    "float3"                          shift, and go to state 240
    "float4"                          shift, and go to state 241
    "range"                           shift, and go to state 242
    "urange"                          shift, and go to state 243
    "range64"                         shift, and go to state 244
    "urange64"                        shift, and go to state 245
    "int64"                           shift, and go to state 247
    "uint64"                          shift, and go to state 248
    "double"                          shift, and go to state 249
    "int8"                            shift, and go to state 252
    "uint8"                           shift, and go to state 253
    "int16"                           shift, and go to state 254
    "uint16"                          shift, and go to state 255
    "tuple"                           shift, and go to state 428
    "variant"                         shift, and go to state 429
    "generator"                       shift, and go to state 430
    "++"                              shift, and go to state 431
    "--"                              shift, and go to state 432
    "::"                              shift, and go to state 55
    "$$"                              shift, and go to state 433
    "$i"                              shift, and go to state 434
    "$v"                              shift, and go to state 435
    "$b"                              shift, and go to state 436
    "$a"                              shift, and go to state 437
    "$c"                              shift, and go to state 438
    "..."                             shift, and go to state 439
    "integer constant"                shift, and go to state 440
    "long integer constant"           shift, and go to state 441
    "unsigned integer constant"       shift, and go to state 442
    "unsigned long integer constant"  shift, and go to state 443
    "unsigned int8 constant"          shift, and go to state 444
    "floating point constant"         shift, and go to state 445
    "double constant"                 shift, and go to state 446
    "name"                            shift, and go to state 56
    "start of the string"             shift, and go to state 447
    "begin of code block"             shift, and go to state 448
    '-'                               shift, and go to state 449
    '+'                               shift, and go to state 450
    '*'                               shift, and go to state 451
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 452
    '!'                               shift, and go to state 453
    '['                               shift, and go to state 454
    '('                               shift, and go to state 455
    '$'                               shift, and go to state 456
    '@'                               shift, and go to state 457

    string_builder          go to state 458
    expr_reader             go to state 459
    expr_call_pipe          go to state 460
    name_in_namespace       go to state 461
    expr_new                go to state 462
    expr_cast               go to state 463
    expr_type_decl          go to state 464
    expr_type_info          go to state 465
    block_or_lambda         go to state 466
    expr_full_block         go to state 467
    expr_numeric_const      go to state 468
    expr_named_call         go to state 469
    expr_method_call        go to state 470
    func_addr_expr          go to state 471
    expr_field              go to state 472
    expr_call               go to state 473
    expr                    go to state 1173
    expr_mtag               go to state 475
    basic_type_declaration  go to state 476
    make_decl               go to state 477
    make_struct_decl        go to state 478
    make_tuple_call         go to state 479
    make_dim_decl           go to state 480
    make_table_decl         go to state 481
    array_comprehension     go to state 482


State 1023

  417 expr: expr "?[" expr ']' .

    $default  reduce using rule 417 (expr)


State 1024

  444 expr: expr '?' "as" "type" . '<' $@27 type_declaration '>' $@28

    '<'  shift, and go to state 1174


State 1025

  471 expr_mtag: expr '?' "as" "$f" . '(' expr ')'

    '('  shift, and go to state 1175


State 1026

  441 expr: expr '?' "as" "name" .

    $default  reduce using rule 441 (expr)


State 1027

  445 expr: expr '?' "as" basic_type_declaration .

    $default  reduce using rule 445 (expr)


State 1028

  430 expr: expr '?' expr ':' . expr

    "struct"                          shift, and go to state 409
    "class"                           shift, and go to state 410
    "true"                            shift, and go to state 411
    "false"                           shift, and go to state 412
    "new"                             shift, and go to state 413
    "typeinfo"                        shift, and go to state 414
    "type"                            shift, and go to state 415
    "array"                           shift, and go to state 416
    "null"                            shift, and go to state 417
    "table"                           shift, and go to state 418
    "deref"                           shift, and go to state 419
    "cast"                            shift, and go to state 420
    "upcast"                          shift, and go to state 421
    "addr"                            shift, and go to state 422
    "reinterpret"                     shift, and go to state 423
    "unsafe"                          shift, and go to state 424
    "fixed_array"                     shift, and go to state 425
    "default"                         shift, and go to state 426
    "bool"                            shift, and go to state 225
    "void"                            shift, and go to state 226
    "string"                          shift, and go to state 227
    "int"                             shift, and go to state 229
    "int2"                            shift, and go to state 230
    "int3"                            shift, and go to state 231
    "int4"                            shift, and go to state 232
    "uint"                            shift, and go to state 233
    "bitfield"                        shift, and go to state 427
    "uint2"                           shift, and go to state 235
    "uint3"                           shift, and go to state 236
    "uint4"                           shift, and go to state 237
    "float"                           shift, and go to state 238
    "float2"                          shift, and go to state 239
    "float3"                          shift, and go to state 240
    "float4"                          shift, and go to state 241
    "range"                           shift, and go to state 242
    "urange"                          shift, and go to state 243
    "range64"                         shift, and go to state 244
    "urange64"                        shift, and go to state 245
    "int64"                           shift, and go to state 247
    "uint64"                          shift, and go to state 248
    "double"                          shift, and go to state 249
    "int8"                            shift, and go to state 252
    "uint8"                           shift, and go to state 253
    "int16"                           shift, and go to state 254
    "uint16"                          shift, and go to state 255
    "tuple"                           shift, and go to state 428
    "variant"                         shift, and go to state 429
    "generator"                       shift, and go to state 430
    "++"                              shift, and go to state 431
    "--"                              shift, and go to state 432
    "::"                              shift, and go to state 55
    "$$"                              shift, and go to state 433
    "$i"                              shift, and go to state 434
    "$v"                              shift, and go to state 435
    "$b"                              shift, and go to state 436
    "$a"                              shift, and go to state 437
    "$c"                              shift, and go to state 438
    "..."                             shift, and go to state 439
    "integer constant"                shift, and go to state 440
    "long integer constant"           shift, and go to state 441
    "unsigned integer constant"       shift, and go to state 442
    "unsigned long integer constant"  shift, and go to state 443
    "unsigned int8 constant"          shift, and go to state 444
    "floating point constant"         shift, and go to state 445
    "double constant"                 shift, and go to state 446
    "name"                            shift, and go to state 56
    "start of the string"             shift, and go to state 447
    "begin of code block"             shift, and go to state 448
    '-'                               shift, and go to state 449
    '+'                               shift, and go to state 450
    '*'                               shift, and go to state 451
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 452
    '!'                               shift, and go to state 453
    '['                               shift, and go to state 454
    '('                               shift, and go to state 455
    '$'                               shift, and go to state 456
    '@'                               shift, and go to state 457

    string_builder          go to state 458
    expr_reader             go to state 459
    expr_call_pipe          go to state 460
    name_in_namespace       go to state 461
    expr_new                go to state 462
    expr_cast               go to state 463
    expr_type_decl          go to state 464
    expr_type_info          go to state 465
    block_or_lambda         go to state 466
    expr_full_block         go to state 467
    expr_numeric_const      go to state 468
    expr_named_call         go to state 469
    expr_method_call        go to state 470
    func_addr_expr          go to state 471
    expr_field              go to state 472
    expr_call               go to state 473
    expr                    go to state 1176
    expr_mtag               go to state 475
    basic_type_declaration  go to state 476
    make_decl               go to state 477
    make_struct_decl        go to state 478
    make_tuple_call         go to state 479
    make_dim_decl           go to state 480
    make_table_decl         go to state 481
    array_comprehension     go to state 482


State 1029

  469 expr_mtag: expr '.' "?." "$f" . '(' expr ')'

    '('  shift, and go to state 1177


State 1030

  420 expr: expr '.' "?." "name" .

    $default  reduce using rule 420 (expr)


State 1031

  347 expr_method_call: expr . "->" "name" '(' ')'
  348                 | expr . "->" "name" '(' expr_list ')'
  358 expr_field: expr . '.' "name"
  359           | expr . '.' '.' "name"
  360           | expr . '.' "name" '(' ')'
  361           | expr . '.' "name" '(' expr_list ')'
  362           | expr . '.' basic_type_declaration '(' ')'
  363           | expr . '.' basic_type_declaration '(' expr_list ')'
  366           | expr . '.' $@21 error $@22
  388 expr: expr . "<<" expr
  389     | expr . ">>" expr
  390     | expr . "<<<" expr
  391     | expr . ">>>" expr
  392     | expr . '+' expr
  393     | expr . '-' expr
  394     | expr . '*' expr
  395     | expr . '/' expr
  396     | expr . '%' expr
  397     | expr . '<' expr
  398     | expr . '>' expr
  399     | expr . "==" expr
  400     | expr . "!=" expr
  401     | expr . "<=" expr
  402     | expr . ">=" expr
  403     | expr . '&' expr
  404     | expr . '|' expr
  405     | expr . '^' expr
  406     | expr . "&&" expr
  407     | expr . "||" expr
  408     | expr . "^^" expr
  409     | expr . ".." expr
  412     | expr . "++"
  413     | expr . "--"
  415     | expr . '[' expr ']'
  416     | expr . '.' '[' expr ']'
  417     | expr . "?[" expr ']'
  418     | expr . '.' "?[" expr ']'
  418     | expr '.' "?[" expr . ']'
  419     | expr . "?." "name"
  420     | expr . '.' "?." "name"
  429     | expr . "??" expr
  430     | expr . '?' expr ':' expr
  433     | expr . "is" "type" '<' $@23 type_declaration_no_options '>' $@24
  434     | expr . "is" basic_type_declaration
  435     | expr . "is" "name"
  436     | expr . "as" "name"
  439     | expr . "as" "type" '<' $@25 type_declaration '>' $@26
  440     | expr . "as" basic_type_declaration
  441     | expr . '?' "as" "name"
  444     | expr . '?' "as" "type" '<' $@27 type_declaration '>' $@28
  445     | expr . '?' "as" basic_type_declaration
  453     | expr . "<|" expr
  454     | expr . "|>" expr
  455     | expr . "|>" basic_type_declaration
  466 expr_mtag: expr . '.' "$f" '(' expr ')'
  467          | expr . "?." "$f" '(' expr ')'
  468          | expr . '.' '.' "$f" '(' expr ')'
  469          | expr . '.' "?." "$f" '(' expr ')'
  470          | expr . "as" "$f" '(' expr ')'
  471          | expr . '?' "as" "$f" '(' expr ')'
  472          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 609
    "as"   shift, and go to state 610
    "<<"   shift, and go to state 611
    ">>"   shift, and go to state 612
    "++"   shift, and go to state 613
    "--"   shift, and go to state 614
    "<="   shift, and go to state 615
    ">="   shift, and go to state 616
    "=="   shift, and go to state 617
    "!="   shift, and go to state 618
    "->"   shift, and go to state 619
    "??"   shift, and go to state 620
    "?."   shift, and go to state 621
    "?["   shift, and go to state 622
    "<|"   shift, and go to state 623
    "|>"   shift, and go to state 624
    "<<<"  shift, and go to state 625
    ">>>"  shift, and go to state 626
    "&&"   shift, and go to state 627
    "||"   shift, and go to state 628
    "^^"   shift, and go to state 629
    ".."   shift, and go to state 630
    '?'    shift, and go to state 631
    '|'    shift, and go to state 632
    '^'    shift, and go to state 633
    '&'    shift, and go to state 634
    '<'    shift, and go to state 635
    '>'    shift, and go to state 636
    '-'    shift, and go to state 637
    '+'    shift, and go to state 638
    '*'    shift, and go to state 639
    '/'    shift, and go to state 640
    '%'    shift, and go to state 641
    '.'    shift, and go to state 642
    '['    shift, and go to state 643
    ']'    shift, and go to state 1178


State 1032

  466 expr_mtag: expr '.' "$f" '(' . expr ')'

    "struct"                          shift, and go to state 409
    "class"                           shift, and go to state 410
    "true"                            shift, and go to state 411
    "false"                           shift, and go to state 412
    "new"                             shift, and go to state 413
    "typeinfo"                        shift, and go to state 414
    "type"                            shift, and go to state 415
    "array"                           shift, and go to state 416
    "null"                            shift, and go to state 417
    "table"                           shift, and go to state 418
    "deref"                           shift, and go to state 419
    "cast"                            shift, and go to state 420
    "upcast"                          shift, and go to state 421
    "addr"                            shift, and go to state 422
    "reinterpret"                     shift, and go to state 423
    "unsafe"                          shift, and go to state 424
    "fixed_array"                     shift, and go to state 425
    "default"                         shift, and go to state 426
    "bool"                            shift, and go to state 225
    "void"                            shift, and go to state 226
    "string"                          shift, and go to state 227
    "int"                             shift, and go to state 229
    "int2"                            shift, and go to state 230
    "int3"                            shift, and go to state 231
    "int4"                            shift, and go to state 232
    "uint"                            shift, and go to state 233
    "bitfield"                        shift, and go to state 427
    "uint2"                           shift, and go to state 235
    "uint3"                           shift, and go to state 236
    "uint4"                           shift, and go to state 237
    "float"                           shift, and go to state 238
    "float2"                          shift, and go to state 239
    "float3"                          shift, and go to state 240
    "float4"                          shift, and go to state 241
    "range"                           shift, and go to state 242
    "urange"                          shift, and go to state 243
    "range64"                         shift, and go to state 244
    "urange64"                        shift, and go to state 245
    "int64"                           shift, and go to state 247
    "uint64"                          shift, and go to state 248
    "double"                          shift, and go to state 249
    "int8"                            shift, and go to state 252
    "uint8"                           shift, and go to state 253
    "int16"                           shift, and go to state 254
    "uint16"                          shift, and go to state 255
    "tuple"                           shift, and go to state 428
    "variant"                         shift, and go to state 429
    "generator"                       shift, and go to state 430
    "++"                              shift, and go to state 431
    "--"                              shift, and go to state 432
    "::"                              shift, and go to state 55
    "$$"                              shift, and go to state 433
    "$i"                              shift, and go to state 434
    "$v"                              shift, and go to state 435
    "$b"                              shift, and go to state 436
    "$a"                              shift, and go to state 437
    "$c"                              shift, and go to state 438
    "..."                             shift, and go to state 439
    "integer constant"                shift, and go to state 440
    "long integer constant"           shift, and go to state 441
    "unsigned integer constant"       shift, and go to state 442
    "unsigned long integer constant"  shift, and go to state 443
    "unsigned int8 constant"          shift, and go to state 444
    "floating point constant"         shift, and go to state 445
    "double constant"                 shift, and go to state 446
    "name"                            shift, and go to state 56
    "start of the string"             shift, and go to state 447
    "begin of code block"             shift, and go to state 448
    '-'                               shift, and go to state 449
    '+'                               shift, and go to state 450
    '*'                               shift, and go to state 451
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 452
    '!'                               shift, and go to state 453
    '['                               shift, and go to state 454
    '('                               shift, and go to state 455
    '$'                               shift, and go to state 456
    '@'                               shift, and go to state 457

    string_builder          go to state 458
    expr_reader             go to state 459
    expr_call_pipe          go to state 460
    name_in_namespace       go to state 461
    expr_new                go to state 462
    expr_cast               go to state 463
    expr_type_decl          go to state 464
    expr_type_info          go to state 465
    block_or_lambda         go to state 466
    expr_full_block         go to state 467
    expr_numeric_const      go to state 468
    expr_named_call         go to state 469
    expr_method_call        go to state 470
    func_addr_expr          go to state 471
    expr_field              go to state 472
    expr_call               go to state 473
    expr                    go to state 1179
    expr_mtag               go to state 475
    basic_type_declaration  go to state 476
    make_decl               go to state 477
    make_struct_decl        go to state 478
    make_tuple_call         go to state 479
    make_dim_decl           go to state 480
    make_table_decl         go to state 481
    array_comprehension     go to state 482


State 1033

  360 expr_field: expr '.' "name" '(' . ')'
  361           | expr '.' "name" '(' . expr_list ')'

    "struct"                          shift, and go to state 409
    "class"                           shift, and go to state 410
    "true"                            shift, and go to state 411
    "false"                           shift, and go to state 412
    "new"                             shift, and go to state 413
    "typeinfo"                        shift, and go to state 414
    "type"                            shift, and go to state 415
    "array"                           shift, and go to state 416
    "null"                            shift, and go to state 417
    "table"                           shift, and go to state 418
    "deref"                           shift, and go to state 419
    "cast"                            shift, and go to state 420
    "upcast"                          shift, and go to state 421
    "addr"                            shift, and go to state 422
    "reinterpret"                     shift, and go to state 423
    "unsafe"                          shift, and go to state 424
    "fixed_array"                     shift, and go to state 425
    "default"                         shift, and go to state 426
    "bool"                            shift, and go to state 225
    "void"                            shift, and go to state 226
    "string"                          shift, and go to state 227
    "int"                             shift, and go to state 229
    "int2"                            shift, and go to state 230
    "int3"                            shift, and go to state 231
    "int4"                            shift, and go to state 232
    "uint"                            shift, and go to state 233
    "bitfield"                        shift, and go to state 427
    "uint2"                           shift, and go to state 235
    "uint3"                           shift, and go to state 236
    "uint4"                           shift, and go to state 237
    "float"                           shift, and go to state 238
    "float2"                          shift, and go to state 239
    "float3"                          shift, and go to state 240
    "float4"                          shift, and go to state 241
    "range"                           shift, and go to state 242
    "urange"                          shift, and go to state 243
    "range64"                         shift, and go to state 244
    "urange64"                        shift, and go to state 245
    "int64"                           shift, and go to state 247
    "uint64"                          shift, and go to state 248
    "double"                          shift, and go to state 249
    "int8"                            shift, and go to state 252
    "uint8"                           shift, and go to state 253
    "int16"                           shift, and go to state 254
    "uint16"                          shift, and go to state 255
    "tuple"                           shift, and go to state 428
    "variant"                         shift, and go to state 429
    "generator"                       shift, and go to state 430
    "++"                              shift, and go to state 431
    "--"                              shift, and go to state 432
    "::"                              shift, and go to state 55
    "$$"                              shift, and go to state 433
    "$i"                              shift, and go to state 434
    "$v"                              shift, and go to state 435
    "$b"                              shift, and go to state 436
    "$a"                              shift, and go to state 437
    "$c"                              shift, and go to state 438
    "..."                             shift, and go to state 439
    "integer constant"                shift, and go to state 440
    "long integer constant"           shift, and go to state 441
    "unsigned integer constant"       shift, and go to state 442
    "unsigned long integer constant"  shift, and go to state 443
    "unsigned int8 constant"          shift, and go to state 444
    "floating point constant"         shift, and go to state 445
    "double constant"                 shift, and go to state 446
    "name"                            shift, and go to state 56
    "start of the string"             shift, and go to state 447
    "begin of code block"             shift, and go to state 448
    '-'                               shift, and go to state 449
    '+'                               shift, and go to state 450
    '*'                               shift, and go to state 451
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 452
    '!'                               shift, and go to state 453
    '['                               shift, and go to state 454
    '('                               shift, and go to state 455
    ')'                               shift, and go to state 1180
    '$'                               shift, and go to state 456
    '@'                               shift, and go to state 457

    string_builder          go to state 458
    expr_reader             go to state 459
    expr_call_pipe          go to state 460
    name_in_namespace       go to state 461
    expr_new                go to state 462
    expr_cast               go to state 463
    expr_type_decl          go to state 464
    expr_type_info          go to state 465
    expr_list               go to state 1181
    block_or_lambda         go to state 466
    expr_full_block         go to state 467
    expr_numeric_const      go to state 468
    expr_named_call         go to state 469
    expr_method_call        go to state 470
    func_addr_expr          go to state 471
    expr_field              go to state 472
    expr_call               go to state 473
    expr                    go to state 600
    expr_mtag               go to state 475
    basic_type_declaration  go to state 476
    make_decl               go to state 477
    make_struct_decl        go to state 478
    make_tuple_call         go to state 479
    make_dim_decl           go to state 480
    make_table_decl         go to state 481
    array_comprehension     go to state 482


State 1034

  468 expr_mtag: expr '.' '.' "$f" . '(' expr ')'

    '('  shift, and go to state 1182


State 1035

  359 expr_field: expr '.' '.' "name" .

    $default  reduce using rule 359 (expr_field)


State 1036

  347 expr_method_call: expr . "->" "name" '(' ')'
  348                 | expr . "->" "name" '(' expr_list ')'
  358 expr_field: expr . '.' "name"
  359           | expr . '.' '.' "name"
  360           | expr . '.' "name" '(' ')'
  361           | expr . '.' "name" '(' expr_list ')'
  362           | expr . '.' basic_type_declaration '(' ')'
  363           | expr . '.' basic_type_declaration '(' expr_list ')'
  366           | expr . '.' $@21 error $@22
  388 expr: expr . "<<" expr
  389     | expr . ">>" expr
  390     | expr . "<<<" expr
  391     | expr . ">>>" expr
  392     | expr . '+' expr
  393     | expr . '-' expr
  394     | expr . '*' expr
  395     | expr . '/' expr
  396     | expr . '%' expr
  397     | expr . '<' expr
  398     | expr . '>' expr
  399     | expr . "==" expr
  400     | expr . "!=" expr
  401     | expr . "<=" expr
  402     | expr . ">=" expr
  403     | expr . '&' expr
  404     | expr . '|' expr
  405     | expr . '^' expr
  406     | expr . "&&" expr
  407     | expr . "||" expr
  408     | expr . "^^" expr
  409     | expr . ".." expr
  412     | expr . "++"
  413     | expr . "--"
  415     | expr . '[' expr ']'
  416     | expr . '.' '[' expr ']'
  416     | expr '.' '[' expr . ']'
  417     | expr . "?[" expr ']'
  418     | expr . '.' "?[" expr ']'
  419     | expr . "?." "name"
  420     | expr . '.' "?." "name"
  429     | expr . "??" expr
  430     | expr . '?' expr ':' expr
  433     | expr . "is" "type" '<' $@23 type_declaration_no_options '>' $@24
  434     | expr . "is" basic_type_declaration
  435     | expr . "is" "name"
  436     | expr . "as" "name"
  439     | expr . "as" "type" '<' $@25 type_declaration '>' $@26
  440     | expr . "as" basic_type_declaration
  441     | expr . '?' "as" "name"
  444     | expr . '?' "as" "type" '<' $@27 type_declaration '>' $@28
  445     | expr . '?' "as" basic_type_declaration
  453     | expr . "<|" expr
  454     | expr . "|>" expr
  455     | expr . "|>" basic_type_declaration
  466 expr_mtag: expr . '.' "$f" '(' expr ')'
  467          | expr . "?." "$f" '(' expr ')'
  468          | expr . '.' '.' "$f" '(' expr ')'
  469          | expr . '.' "?." "$f" '(' expr ')'
  470          | expr . "as" "$f" '(' expr ')'
  471          | expr . '?' "as" "$f" '(' expr ')'
  472          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 609
    "as"   shift, and go to state 610
    "<<"   shift, and go to state 611
    ">>"   shift, and go to state 612
    "++"   shift, and go to state 613
    "--"   shift, and go to state 614
    "<="   shift, and go to state 615
    ">="   shift, and go to state 616
    "=="   shift, and go to state 617
    "!="   shift, and go to state 618
    "->"   shift, and go to state 619
    "??"   shift, and go to state 620
    "?."   shift, and go to state 621
    "?["   shift, and go to state 622
    "<|"   shift, and go to state 623
    "|>"   shift, and go to state 624
    "<<<"  shift, and go to state 625
    ">>>"  shift, and go to state 626
    "&&"   shift, and go to state 627
    "||"   shift, and go to state 628
    "^^"   shift, and go to state 629
    ".."   shift, and go to state 630
    '?'    shift, and go to state 631
    '|'    shift, and go to state 632
    '^'    shift, and go to state 633
    '&'    shift, and go to state 634
    '<'    shift, and go to state 635
    '>'    shift, and go to state 636
    '-'    shift, and go to state 637
    '+'    shift, and go to state 638
    '*'    shift, and go to state 639
    '/'    shift, and go to state 640
    '%'    shift, and go to state 641
    '.'    shift, and go to state 642
    '['    shift, and go to state 643
    ']'    shift, and go to state 1183


State 1037

  366 expr_field: expr '.' $@21 error . $@22

    $default  reduce using rule 365 ($@22)

    $@22  go to state 1184


State 1038

  362 expr_field: expr '.' basic_type_declaration '(' . ')'
  363           | expr '.' basic_type_declaration '(' . expr_list ')'

    "struct"                          shift, and go to state 409
    "class"                           shift, and go to state 410
    "true"                            shift, and go to state 411
    "false"                           shift, and go to state 412
    "new"                             shift, and go to state 413
    "typeinfo"                        shift, and go to state 414
    "type"                            shift, and go to state 415
    "array"                           shift, and go to state 416
    "null"                            shift, and go to state 417
    "table"                           shift, and go to state 418
    "deref"                           shift, and go to state 419
    "cast"                            shift, and go to state 420
    "upcast"                          shift, and go to state 421
    "addr"                            shift, and go to state 422
    "reinterpret"                     shift, and go to state 423
    "unsafe"                          shift, and go to state 424
    "fixed_array"                     shift, and go to state 425
    "default"                         shift, and go to state 426
    "bool"                            shift, and go to state 225
    "void"                            shift, and go to state 226
    "string"                          shift, and go to state 227
    "int"                             shift, and go to state 229
    "int2"                            shift, and go to state 230
    "int3"                            shift, and go to state 231
    "int4"                            shift, and go to state 232
    "uint"                            shift, and go to state 233
    "bitfield"                        shift, and go to state 427
    "uint2"                           shift, and go to state 235
    "uint3"                           shift, and go to state 236
    "uint4"                           shift, and go to state 237
    "float"                           shift, and go to state 238
    "float2"                          shift, and go to state 239
    "float3"                          shift, and go to state 240
    "float4"                          shift, and go to state 241
    "range"                           shift, and go to state 242
    "urange"                          shift, and go to state 243
    "range64"                         shift, and go to state 244
    "urange64"                        shift, and go to state 245
    "int64"                           shift, and go to state 247
    "uint64"                          shift, and go to state 248
    "double"                          shift, and go to state 249
    "int8"                            shift, and go to state 252
    "uint8"                           shift, and go to state 253
    "int16"                           shift, and go to state 254
    "uint16"                          shift, and go to state 255
    "tuple"                           shift, and go to state 428
    "variant"                         shift, and go to state 429
    "generator"                       shift, and go to state 430
    "++"                              shift, and go to state 431
    "--"                              shift, and go to state 432
    "::"                              shift, and go to state 55
    "$$"                              shift, and go to state 433
    "$i"                              shift, and go to state 434
    "$v"                              shift, and go to state 435
    "$b"                              shift, and go to state 436
    "$a"                              shift, and go to state 437
    "$c"                              shift, and go to state 438
    "..."                             shift, and go to state 439
    "integer constant"                shift, and go to state 440
    "long integer constant"           shift, and go to state 441
    "unsigned integer constant"       shift, and go to state 442
    "unsigned long integer constant"  shift, and go to state 443
    "unsigned int8 constant"          shift, and go to state 444
    "floating point constant"         shift, and go to state 445
    "double constant"                 shift, and go to state 446
    "name"                            shift, and go to state 56
    "start of the string"             shift, and go to state 447
    "begin of code block"             shift, and go to state 448
    '-'                               shift, and go to state 449
    '+'                               shift, and go to state 450
    '*'                               shift, and go to state 451
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 452
    '!'                               shift, and go to state 453
    '['                               shift, and go to state 454
    '('                               shift, and go to state 455
    ')'                               shift, and go to state 1185
    '$'                               shift, and go to state 456
    '@'                               shift, and go to state 457

    string_builder          go to state 458
    expr_reader             go to state 459
    expr_call_pipe          go to state 460
    name_in_namespace       go to state 461
    expr_new                go to state 462
    expr_cast               go to state 463
    expr_type_decl          go to state 464
    expr_type_info          go to state 465
    expr_list               go to state 1186
    block_or_lambda         go to state 466
    expr_full_block         go to state 467
    expr_numeric_const      go to state 468
    expr_named_call         go to state 469
    expr_method_call        go to state 470
    func_addr_expr          go to state 471
    expr_field              go to state 472
    expr_call               go to state 473
    expr                    go to state 600
    expr_mtag               go to state 475
    basic_type_declaration  go to state 476
    make_decl               go to state 477
    make_struct_decl        go to state 478
    make_tuple_call         go to state 479
    make_dim_decl           go to state 480
    make_table_decl         go to state 481
    array_comprehension     go to state 482


State 1039

  415 expr: expr '[' expr ']' .

    $default  reduce using rule 415 (expr)


State 1040

  300 expr_list: expr_list ',' . expr

    "struct"                          shift, and go to state 409
    "class"                           shift, and go to state 410
    "true"                            shift, and go to state 411
    "false"                           shift, and go to state 412
    "new"                             shift, and go to state 413
    "typeinfo"                        shift, and go to state 414
    "type"                            shift, and go to state 415
    "array"                           shift, and go to state 416
    "null"                            shift, and go to state 417
    "table"                           shift, and go to state 418
    "deref"                           shift, and go to state 419
    "cast"                            shift, and go to state 420
    "upcast"                          shift, and go to state 421
    "addr"                            shift, and go to state 422
    "reinterpret"                     shift, and go to state 423
    "unsafe"                          shift, and go to state 424
    "fixed_array"                     shift, and go to state 425
    "default"                         shift, and go to state 426
    "bool"                            shift, and go to state 225
    "void"                            shift, and go to state 226
    "string"                          shift, and go to state 227
    "int"                             shift, and go to state 229
    "int2"                            shift, and go to state 230
    "int3"                            shift, and go to state 231
    "int4"                            shift, and go to state 232
    "uint"                            shift, and go to state 233
    "bitfield"                        shift, and go to state 427
    "uint2"                           shift, and go to state 235
    "uint3"                           shift, and go to state 236
    "uint4"                           shift, and go to state 237
    "float"                           shift, and go to state 238
    "float2"                          shift, and go to state 239
    "float3"                          shift, and go to state 240
    "float4"                          shift, and go to state 241
    "range"                           shift, and go to state 242
    "urange"                          shift, and go to state 243
    "range64"                         shift, and go to state 244
    "urange64"                        shift, and go to state 245
    "int64"                           shift, and go to state 247
    "uint64"                          shift, and go to state 248
    "double"                          shift, and go to state 249
    "int8"                            shift, and go to state 252
    "uint8"                           shift, and go to state 253
    "int16"                           shift, and go to state 254
    "uint16"                          shift, and go to state 255
    "tuple"                           shift, and go to state 428
    "variant"                         shift, and go to state 429
    "generator"                       shift, and go to state 430
    "++"                              shift, and go to state 431
    "--"                              shift, and go to state 432
    "::"                              shift, and go to state 55
    "$$"                              shift, and go to state 433
    "$i"                              shift, and go to state 434
    "$v"                              shift, and go to state 435
    "$b"                              shift, and go to state 436
    "$a"                              shift, and go to state 437
    "$c"                              shift, and go to state 438
    "..."                             shift, and go to state 439
    "integer constant"                shift, and go to state 440
    "long integer constant"           shift, and go to state 441
    "unsigned integer constant"       shift, and go to state 442
    "unsigned long integer constant"  shift, and go to state 443
    "unsigned int8 constant"          shift, and go to state 444
    "floating point constant"         shift, and go to state 445
    "double constant"                 shift, and go to state 446
    "name"                            shift, and go to state 56
    "start of the string"             shift, and go to state 447
    "begin of code block"             shift, and go to state 448
    '-'                               shift, and go to state 449
    '+'                               shift, and go to state 450
    '*'                               shift, and go to state 451
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 452
    '!'                               shift, and go to state 453
    '['                               shift, and go to state 454
    '('                               shift, and go to state 455
    '$'                               shift, and go to state 456
    '@'                               shift, and go to state 457

    string_builder          go to state 458
    expr_reader             go to state 459
    expr_call_pipe          go to state 460
    name_in_namespace       go to state 461
    expr_new                go to state 462
    expr_cast               go to state 463
    expr_type_decl          go to state 464
    expr_type_info          go to state 465
    block_or_lambda         go to state 466
    expr_full_block         go to state 467
    expr_numeric_const      go to state 468
    expr_named_call         go to state 469
    expr_method_call        go to state 470
    func_addr_expr          go to state 471
    expr_field              go to state 472
    expr_call               go to state 473
    expr                    go to state 995
    expr_mtag               go to state 475
    basic_type_declaration  go to state 476
    make_decl               go to state 477
    make_struct_decl        go to state 478
    make_tuple_call         go to state 479
    make_dim_decl           go to state 480
    make_table_decl         go to state 481
    array_comprehension     go to state 482


State 1041

  373 expr_call: basic_type_declaration '(' expr_list ')' .

    $default  reduce using rule 373 (expr_call)


State 1042

  683 type_declaration_no_options_no_dim: "iterator" '<' $@50 type_declaration '>' $@51 .

    $default  reduce using rule 683 (type_declaration_no_options_no_dim)


State 1043

  673 type_declaration_no_options_no_dim: "smart_ptr" '<' $@44 type_declaration '>' $@45 .

    $default  reduce using rule 673 (type_declaration_no_options_no_dim)


State 1044

  631 bitfield_bits: bitfield_bits "end of expression" "name" .

    $default  reduce using rule 631 (bitfield_bits)


State 1045

  637 bitfield_type_declaration: "bitfield" '<' $@39 bitfield_bits '>' $@40 .

    $default  reduce using rule 637 (bitfield_type_declaration)


State 1046

  687 type_declaration_no_options_no_dim: "block" '<' $@52 type_declaration '>' $@53 .

    $default  reduce using rule 687 (type_declaration_no_options_no_dim)


State 1047

  690 type_declaration_no_options_no_dim: "block" '<' $@54 optional_function_argument_list optional_function_type '>' . $@55

    $default  reduce using rule 689 ($@55)

    $@55  go to state 1187


State 1048

  694 type_declaration_no_options_no_dim: "function" '<' $@56 type_declaration '>' $@57 .

    $default  reduce using rule 694 (type_declaration_no_options_no_dim)


State 1049

  697 type_declaration_no_options_no_dim: "function" '<' $@58 optional_function_argument_list optional_function_type '>' . $@59

    $default  reduce using rule 696 ($@59)

    $@59  go to state 1188


State 1050

  701 type_declaration_no_options_no_dim: "lambda" '<' $@60 type_declaration '>' $@61 .

    $default  reduce using rule 701 (type_declaration_no_options_no_dim)


State 1051

  704 type_declaration_no_options_no_dim: "lambda" '<' $@62 optional_function_argument_list optional_function_type '>' . $@63

    $default  reduce using rule 703 ($@63)

    $@63  go to state 1189


State 1052

  707 type_declaration_no_options_no_dim: "tuple" '<' $@64 tuple_type_list '>' $@65 .

    $default  reduce using rule 707 (type_declaration_no_options_no_dim)


State 1053

  501 tuple_type_list: tuple_type_list c_or_s tuple_type .

    $default  reduce using rule 501 (tuple_type_list)


State 1054

  710 type_declaration_no_options_no_dim: "variant" '<' $@66 variant_type_list '>' $@67 .

    $default  reduce using rule 710 (type_declaration_no_options_no_dim)


State 1055

  507 variant_type_list: variant_type_list c_or_s variant_type .

    $default  reduce using rule 507 (variant_type_list)


State 1056

  658 type_declaration_no_options_no_dim: '$' name_in_namespace '<' $@43 type_declaration_no_options_list '>' . '(' optional_expr_list ')'

    '('  shift, and go to state 1190


State 1057

  246 type_declaration_no_options_list: type_declaration_no_options_list c_or_s . type_declaration

    "type"       shift, and go to state 219
    "array"      shift, and go to state 220
    "table"      shift, and go to state 221
    "typedecl"   shift, and go to state 222
    "iterator"   shift, and go to state 223
    "smart_ptr"  shift, and go to state 224
    "bool"       shift, and go to state 225
    "void"       shift, and go to state 226
    "string"     shift, and go to state 227
    "auto"       shift, and go to state 228
    "int"        shift, and go to state 229
    "int2"       shift, and go to state 230
    "int3"       shift, and go to state 231
    "int4"       shift, and go to state 232
    "uint"       shift, and go to state 233
    "bitfield"   shift, and go to state 234
    "uint2"      shift, and go to state 235
    "uint3"      shift, and go to state 236
    "uint4"      shift, and go to state 237
    "float"      shift, and go to state 238
    "float2"     shift, and go to state 239
    "float3"     shift, and go to state 240
    "float4"     shift, and go to state 241
    "range"      shift, and go to state 242
    "urange"     shift, and go to state 243
    "range64"    shift, and go to state 244
    "urange64"   shift, and go to state 245
    "block"      shift, and go to state 246
    "int64"      shift, and go to state 247
    "uint64"     shift, and go to state 248
    "double"     shift, and go to state 249
    "function"   shift, and go to state 250
    "lambda"     shift, and go to state 251
    "int8"       shift, and go to state 252
    "uint8"      shift, and go to state 253
    "int16"      shift, and go to state 254
    "uint16"     shift, and go to state 255
    "tuple"      shift, and go to state 256
    "variant"    shift, and go to state 257
    "::"         shift, and go to state 55
    "$t"         shift, and go to state 258
    "name"       shift, and go to state 56
    '$'          shift, and go to state 259

    name_in_namespace                   go to state 260
    basic_type_declaration              go to state 261
    structure_type_declaration          go to state 262
    auto_type_declaration               go to state 263
    bitfield_type_declaration           go to state 264
    type_declaration_no_options         go to state 265
    type_declaration_no_options_no_dim  go to state 266
    type_declaration                    go to state 1191


State 1058

  347 expr_method_call: expr . "->" "name" '(' ')'
  348                 | expr . "->" "name" '(' expr_list ')'
  358 expr_field: expr . '.' "name"
  359           | expr . '.' '.' "name"
  360           | expr . '.' "name" '(' ')'
  361           | expr . '.' "name" '(' expr_list ')'
  362           | expr . '.' basic_type_declaration '(' ')'
  363           | expr . '.' basic_type_declaration '(' expr_list ')'
  366           | expr . '.' $@21 error $@22
  388 expr: expr . "<<" expr
  389     | expr . ">>" expr
  390     | expr . "<<<" expr
  391     | expr . ">>>" expr
  392     | expr . '+' expr
  393     | expr . '-' expr
  394     | expr . '*' expr
  395     | expr . '/' expr
  396     | expr . '%' expr
  397     | expr . '<' expr
  398     | expr . '>' expr
  399     | expr . "==" expr
  400     | expr . "!=" expr
  401     | expr . "<=" expr
  402     | expr . ">=" expr
  403     | expr . '&' expr
  404     | expr . '|' expr
  405     | expr . '^' expr
  406     | expr . "&&" expr
  407     | expr . "||" expr
  408     | expr . "^^" expr
  409     | expr . ".." expr
  412     | expr . "++"
  413     | expr . "--"
  415     | expr . '[' expr ']'
  416     | expr . '.' '[' expr ']'
  417     | expr . "?[" expr ']'
  418     | expr . '.' "?[" expr ']'
  419     | expr . "?." "name"
  420     | expr . '.' "?." "name"
  429     | expr . "??" expr
  430     | expr . '?' expr ':' expr
  433     | expr . "is" "type" '<' $@23 type_declaration_no_options '>' $@24
  434     | expr . "is" basic_type_declaration
  435     | expr . "is" "name"
  436     | expr . "as" "name"
  439     | expr . "as" "type" '<' $@25 type_declaration '>' $@26
  440     | expr . "as" basic_type_declaration
  441     | expr . '?' "as" "name"
  444     | expr . '?' "as" "type" '<' $@27 type_declaration '>' $@28
  445     | expr . '?' "as" basic_type_declaration
  453     | expr . "<|" expr
  454     | expr . "|>" expr
  455     | expr . "|>" basic_type_declaration
  466 expr_mtag: expr . '.' "$f" '(' expr ')'
  467          | expr . "?." "$f" '(' expr ')'
  468          | expr . '.' '.' "$f" '(' expr ')'
  469          | expr . '.' "?." "$f" '(' expr ')'
  470          | expr . "as" "$f" '(' expr ')'
  471          | expr . '?' "as" "$f" '(' expr ')'
  472          | expr . "is" "$f" '(' expr ')'
  587 variable_name_with_pos_list: "$i" '(' expr . ')'

    "is"   shift, and go to state 609
    "as"   shift, and go to state 610
    "<<"   shift, and go to state 611
    ">>"   shift, and go to state 612
    "++"   shift, and go to state 613
    "--"   shift, and go to state 614
    "<="   shift, and go to state 615
    ">="   shift, and go to state 616
    "=="   shift, and go to state 617
    "!="   shift, and go to state 618
    "->"   shift, and go to state 619
    "??"   shift, and go to state 620
    "?."   shift, and go to state 621
    "?["   shift, and go to state 622
    "<|"   shift, and go to state 623
    "|>"   shift, and go to state 624
    "<<<"  shift, and go to state 625
    ">>>"  shift, and go to state 626
    "&&"   shift, and go to state 627
    "||"   shift, and go to state 628
    "^^"   shift, and go to state 629
    ".."   shift, and go to state 630
    '?'    shift, and go to state 631
    '|'    shift, and go to state 632
    '^'    shift, and go to state 633
    '&'    shift, and go to state 634
    '<'    shift, and go to state 635
    '>'    shift, and go to state 636
    '-'    shift, and go to state 637
    '+'    shift, and go to state 638
    '*'    shift, and go to state 639
    '/'    shift, and go to state 640
    '%'    shift, and go to state 641
    '.'    shift, and go to state 642
    '['    shift, and go to state 643
    ')'    shift, and go to state 1192


State 1059

  588 variable_name_with_pos_list: "name" "aka" "name" .

    $default  reduce using rule 588 (variable_name_with_pos_list)


State 1060

  589 variable_name_with_pos_list: variable_name_with_pos_list ',' "name" .
  590                            | variable_name_with_pos_list ',' "name" . "aka" "name"

    "aka"  shift, and go to state 1193

    $default  reduce using rule 589 (variable_name_with_pos_list)


State 1061

  515 variable_declaration: variable_name_with_pos_list ':' type_declaration .
  516                     | variable_name_with_pos_list ':' type_declaration . copy_or_move expr
  712 type_declaration: type_declaration . '|' type_declaration_no_options
  713                 | type_declaration . '|' '#'

    "<-"  shift, and go to state 880
    '='   shift, and go to state 882
    '|'   shift, and go to state 375

    $default  reduce using rule 515 (variable_declaration)

    copy_or_move  go to state 1194


State 1062

  347 expr_method_call: expr . "->" "name" '(' ')'
  348                 | expr . "->" "name" '(' expr_list ')'
  358 expr_field: expr . '.' "name"
  359           | expr . '.' '.' "name"
  360           | expr . '.' "name" '(' ')'
  361           | expr . '.' "name" '(' expr_list ')'
  362           | expr . '.' basic_type_declaration '(' ')'
  363           | expr . '.' basic_type_declaration '(' expr_list ')'
  366           | expr . '.' $@21 error $@22
  388 expr: expr . "<<" expr
  389     | expr . ">>" expr
  390     | expr . "<<<" expr
  391     | expr . ">>>" expr
  392     | expr . '+' expr
  393     | expr . '-' expr
  394     | expr . '*' expr
  395     | expr . '/' expr
  396     | expr . '%' expr
  397     | expr . '<' expr
  398     | expr . '>' expr
  399     | expr . "==" expr
  400     | expr . "!=" expr
  401     | expr . "<=" expr
  402     | expr . ">=" expr
  403     | expr . '&' expr
  404     | expr . '|' expr
  405     | expr . '^' expr
  406     | expr . "&&" expr
  407     | expr . "||" expr
  408     | expr . "^^" expr
  409     | expr . ".." expr
  412     | expr . "++"
  413     | expr . "--"
  415     | expr . '[' expr ']'
  416     | expr . '.' '[' expr ']'
  417     | expr . "?[" expr ']'
  418     | expr . '.' "?[" expr ']'
  419     | expr . "?." "name"
  420     | expr . '.' "?." "name"
  429     | expr . "??" expr
  430     | expr . '?' expr ':' expr
  433     | expr . "is" "type" '<' $@23 type_declaration_no_options '>' $@24
  434     | expr . "is" basic_type_declaration
  435     | expr . "is" "name"
  436     | expr . "as" "name"
  439     | expr . "as" "type" '<' $@25 type_declaration '>' $@26
  440     | expr . "as" basic_type_declaration
  441     | expr . '?' "as" "name"
  444     | expr . '?' "as" "type" '<' $@27 type_declaration '>' $@28
  445     | expr . '?' "as" basic_type_declaration
  453     | expr . "<|" expr
  454     | expr . "|>" expr
  455     | expr . "|>" basic_type_declaration
  466 expr_mtag: expr . '.' "$f" '(' expr ')'
  467          | expr . "?." "$f" '(' expr ')'
  468          | expr . '.' '.' "$f" '(' expr ')'
  469          | expr . '.' "?." "$f" '(' expr ')'
  470          | expr . "as" "$f" '(' expr ')'
  471          | expr . '?' "as" "$f" '(' expr ')'
  472          | expr . "is" "$f" '(' expr ')'
  517 variable_declaration: variable_name_with_pos_list copy_or_move expr .

    "is"   shift, and go to state 609
    "as"   shift, and go to state 610
    "<<"   shift, and go to state 611
    ">>"   shift, and go to state 612
    "++"   shift, and go to state 613
    "--"   shift, and go to state 614
    "<="   shift, and go to state 615
    ">="   shift, and go to state 616
    "=="   shift, and go to state 617
    "!="   shift, and go to state 618
    "->"   shift, and go to state 619
    "??"   shift, and go to state 620
    "?."   shift, and go to state 621
    "?["   shift, and go to state 622
    "<|"   shift, and go to state 623
    "|>"   shift, and go to state 624
    "<<<"  shift, and go to state 625
    ">>>"  shift, and go to state 626
    "&&"   shift, and go to state 627
    "||"   shift, and go to state 628
    "^^"   shift, and go to state 629
    ".."   shift, and go to state 630
    '?'    shift, and go to state 631
    '|'    shift, and go to state 632
    '^'    shift, and go to state 633
    '&'    shift, and go to state 634
    '<'    shift, and go to state 635
    '>'    shift, and go to state 636
    '-'    shift, and go to state 637
    '+'    shift, and go to state 638
    '*'    shift, and go to state 639
    '/'    shift, and go to state 640
    '%'    shift, and go to state 641
    '.'    shift, and go to state 642
    '['    shift, and go to state 643

    $default  reduce using rule 517 (variable_declaration)


State 1063

   73 expression_while_loop: "while" '(' expr . ')' expression_block
  347 expr_method_call: expr . "->" "name" '(' ')'
  348                 | expr . "->" "name" '(' expr_list ')'
  358 expr_field: expr . '.' "name"
  359           | expr . '.' '.' "name"
  360           | expr . '.' "name" '(' ')'
  361           | expr . '.' "name" '(' expr_list ')'
  362           | expr . '.' basic_type_declaration '(' ')'
  363           | expr . '.' basic_type_declaration '(' expr_list ')'
  366           | expr . '.' $@21 error $@22
  388 expr: expr . "<<" expr
  389     | expr . ">>" expr
  390     | expr . "<<<" expr
  391     | expr . ">>>" expr
  392     | expr . '+' expr
  393     | expr . '-' expr
  394     | expr . '*' expr
  395     | expr . '/' expr
  396     | expr . '%' expr
  397     | expr . '<' expr
  398     | expr . '>' expr
  399     | expr . "==" expr
  400     | expr . "!=" expr
  401     | expr . "<=" expr
  402     | expr . ">=" expr
  403     | expr . '&' expr
  404     | expr . '|' expr
  405     | expr . '^' expr
  406     | expr . "&&" expr
  407     | expr . "||" expr
  408     | expr . "^^" expr
  409     | expr . ".." expr
  412     | expr . "++"
  413     | expr . "--"
  415     | expr . '[' expr ']'
  416     | expr . '.' '[' expr ']'
  417     | expr . "?[" expr ']'
  418     | expr . '.' "?[" expr ']'
  419     | expr . "?." "name"
  420     | expr . '.' "?." "name"
  429     | expr . "??" expr
  430     | expr . '?' expr ':' expr
  433     | expr . "is" "type" '<' $@23 type_declaration_no_options '>' $@24
  434     | expr . "is" basic_type_declaration
  435     | expr . "is" "name"
  436     | expr . "as" "name"
  439     | expr . "as" "type" '<' $@25 type_declaration '>' $@26
  440     | expr . "as" basic_type_declaration
  441     | expr . '?' "as" "name"
  444     | expr . '?' "as" "type" '<' $@27 type_declaration '>' $@28
  445     | expr . '?' "as" basic_type_declaration
  453     | expr . "<|" expr
  454     | expr . "|>" expr
  455     | expr . "|>" basic_type_declaration
  466 expr_mtag: expr . '.' "$f" '(' expr ')'
  467          | expr . "?." "$f" '(' expr ')'
  468          | expr . '.' '.' "$f" '(' expr ')'
  469          | expr . '.' "?." "$f" '(' expr ')'
  470          | expr . "as" "$f" '(' expr ')'
  471          | expr . '?' "as" "$f" '(' expr ')'
  472          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 609
    "as"   shift, and go to state 610
    "<<"   shift, and go to state 611
    ">>"   shift, and go to state 612
    "++"   shift, and go to state 613
    "--"   shift, and go to state 614
    "<="   shift, and go to state 615
    ">="   shift, and go to state 616
    "=="   shift, and go to state 617
    "!="   shift, and go to state 618
    "->"   shift, and go to state 619
    "??"   shift, and go to state 620
    "?."   shift, and go to state 621
    "?["   shift, and go to state 622
    "<|"   shift, and go to state 623
    "|>"   shift, and go to state 624
    "<<<"  shift, and go to state 625
    ">>>"  shift, and go to state 626
    "&&"   shift, and go to state 627
    "||"   shift, and go to state 628
    "^^"   shift, and go to state 629
    ".."   shift, and go to state 630
    '?'    shift, and go to state 631
    '|'    shift, and go to state 632
    '^'    shift, and go to state 633
    '&'    shift, and go to state 634
    '<'    shift, and go to state 635
    '>'    shift, and go to state 636
    '-'    shift, and go to state 637
    '+'    shift, and go to state 638
    '*'    shift, and go to state 639
    '/'    shift, and go to state 640
    '%'    shift, and go to state 641
    '.'    shift, and go to state 642
    '['    shift, and go to state 643
    ')'    shift, and go to state 1195


State 1064

   71 expression_for_loop: "for" '(' variable_name_with_pos_list . "in" expr_list ')' expression_block
  589 variable_name_with_pos_list: variable_name_with_pos_list . ',' "name"
  590                            | variable_name_with_pos_list . ',' "name" "aka" "name"

    "in"  shift, and go to state 1196
    ','   shift, and go to state 881


State 1065

  266 expression_return: "return" "<-" expr .
  347 expr_method_call: expr . "->" "name" '(' ')'
  348                 | expr . "->" "name" '(' expr_list ')'
  358 expr_field: expr . '.' "name"
  359           | expr . '.' '.' "name"
  360           | expr . '.' "name" '(' ')'
  361           | expr . '.' "name" '(' expr_list ')'
  362           | expr . '.' basic_type_declaration '(' ')'
  363           | expr . '.' basic_type_declaration '(' expr_list ')'
  366           | expr . '.' $@21 error $@22
  388 expr: expr . "<<" expr
  389     | expr . ">>" expr
  390     | expr . "<<<" expr
  391     | expr . ">>>" expr
  392     | expr . '+' expr
  393     | expr . '-' expr
  394     | expr . '*' expr
  395     | expr . '/' expr
  396     | expr . '%' expr
  397     | expr . '<' expr
  398     | expr . '>' expr
  399     | expr . "==" expr
  400     | expr . "!=" expr
  401     | expr . "<=" expr
  402     | expr . ">=" expr
  403     | expr . '&' expr
  404     | expr . '|' expr
  405     | expr . '^' expr
  406     | expr . "&&" expr
  407     | expr . "||" expr
  408     | expr . "^^" expr
  409     | expr . ".." expr
  412     | expr . "++"
  413     | expr . "--"
  415     | expr . '[' expr ']'
  416     | expr . '.' '[' expr ']'
  417     | expr . "?[" expr ']'
  418     | expr . '.' "?[" expr ']'
  419     | expr . "?." "name"
  420     | expr . '.' "?." "name"
  429     | expr . "??" expr
  430     | expr . '?' expr ':' expr
  433     | expr . "is" "type" '<' $@23 type_declaration_no_options '>' $@24
  434     | expr . "is" basic_type_declaration
  435     | expr . "is" "name"
  436     | expr . "as" "name"
  439     | expr . "as" "type" '<' $@25 type_declaration '>' $@26
  440     | expr . "as" basic_type_declaration
  441     | expr . '?' "as" "name"
  444     | expr . '?' "as" "type" '<' $@27 type_declaration '>' $@28
  445     | expr . '?' "as" basic_type_declaration
  453     | expr . "<|" expr
  454     | expr . "|>" expr
  455     | expr . "|>" basic_type_declaration
  466 expr_mtag: expr . '.' "$f" '(' expr ')'
  467          | expr . "?." "$f" '(' expr ')'
  468          | expr . '.' '.' "$f" '(' expr ')'
  469          | expr . '.' "?." "$f" '(' expr ')'
  470          | expr . "as" "$f" '(' expr ')'
  471          | expr . '?' "as" "$f" '(' expr ')'
  472          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 609
    "as"   shift, and go to state 610
    "<<"   shift, and go to state 611
    ">>"   shift, and go to state 612
    "++"   shift, and go to state 613
    "--"   shift, and go to state 614
    "<="   shift, and go to state 615
    ">="   shift, and go to state 616
    "=="   shift, and go to state 617
    "!="   shift, and go to state 618
    "->"   shift, and go to state 619
    "??"   shift, and go to state 620
    "?."   shift, and go to state 621
    "?["   shift, and go to state 622
    "<|"   shift, and go to state 623
    "|>"   shift, and go to state 624
    "<<<"  shift, and go to state 625
    ">>>"  shift, and go to state 626
    "&&"   shift, and go to state 627
    "||"   shift, and go to state 628
    "^^"   shift, and go to state 629
    ".."   shift, and go to state 630
    '?'    shift, and go to state 631
    '|'    shift, and go to state 632
    '^'    shift, and go to state 633
    '&'    shift, and go to state 634
    '<'    shift, and go to state 635
    '>'    shift, and go to state 636
    '-'    shift, and go to state 637
    '+'    shift, and go to state 638
    '*'    shift, and go to state 639
    '/'    shift, and go to state 640
    '%'    shift, and go to state 641
    '.'    shift, and go to state 642
    '['    shift, and go to state 643

    $default  reduce using rule 266 (expression_return)


State 1066

  269 expression_try_catch: "try" expression_block "recover" . expression_block

    $default  reduce using rule 216 ($@5)

    expression_block  go to state 1197
    $@5               go to state 327


State 1067

  251 expression_delete: "delete" "explicit" expr .
  347 expr_method_call: expr . "->" "name" '(' ')'
  348                 | expr . "->" "name" '(' expr_list ')'
  358 expr_field: expr . '.' "name"
  359           | expr . '.' '.' "name"
  360           | expr . '.' "name" '(' ')'
  361           | expr . '.' "name" '(' expr_list ')'
  362           | expr . '.' basic_type_declaration '(' ')'
  363           | expr . '.' basic_type_declaration '(' expr_list ')'
  366           | expr . '.' $@21 error $@22
  388 expr: expr . "<<" expr
  389     | expr . ">>" expr
  390     | expr . "<<<" expr
  391     | expr . ">>>" expr
  392     | expr . '+' expr
  393     | expr . '-' expr
  394     | expr . '*' expr
  395     | expr . '/' expr
  396     | expr . '%' expr
  397     | expr . '<' expr
  398     | expr . '>' expr
  399     | expr . "==" expr
  400     | expr . "!=" expr
  401     | expr . "<=" expr
  402     | expr . ">=" expr
  403     | expr . '&' expr
  404     | expr . '|' expr
  405     | expr . '^' expr
  406     | expr . "&&" expr
  407     | expr . "||" expr
  408     | expr . "^^" expr
  409     | expr . ".." expr
  412     | expr . "++"
  413     | expr . "--"
  415     | expr . '[' expr ']'
  416     | expr . '.' '[' expr ']'
  417     | expr . "?[" expr ']'
  418     | expr . '.' "?[" expr ']'
  419     | expr . "?." "name"
  420     | expr . '.' "?." "name"
  429     | expr . "??" expr
  430     | expr . '?' expr ':' expr
  433     | expr . "is" "type" '<' $@23 type_declaration_no_options '>' $@24
  434     | expr . "is" basic_type_declaration
  435     | expr . "is" "name"
  436     | expr . "as" "name"
  439     | expr . "as" "type" '<' $@25 type_declaration '>' $@26
  440     | expr . "as" basic_type_declaration
  441     | expr . '?' "as" "name"
  444     | expr . '?' "as" "type" '<' $@27 type_declaration '>' $@28
  445     | expr . '?' "as" basic_type_declaration
  453     | expr . "<|" expr
  454     | expr . "|>" expr
  455     | expr . "|>" basic_type_declaration
  466 expr_mtag: expr . '.' "$f" '(' expr ')'
  467          | expr . "?." "$f" '(' expr ')'
  468          | expr . '.' '.' "$f" '(' expr ')'
  469          | expr . '.' "?." "$f" '(' expr ')'
  470          | expr . "as" "$f" '(' expr ')'
  471          | expr . '?' "as" "$f" '(' expr ')'
  472          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 609
    "as"   shift, and go to state 610
    "<<"   shift, and go to state 611
    ">>"   shift, and go to state 612
    "++"   shift, and go to state 613
    "--"   shift, and go to state 614
    "<="   shift, and go to state 615
    ">="   shift, and go to state 616
    "=="   shift, and go to state 617
    "!="   shift, and go to state 618
    "->"   shift, and go to state 619
    "??"   shift, and go to state 620
    "?."   shift, and go to state 621
    "?["   shift, and go to state 622
    "<|"   shift, and go to state 623
    "|>"   shift, and go to state 624
    "<<<"  shift, and go to state 625
    ">>>"  shift, and go to state 626
    "&&"   shift, and go to state 627
    "||"   shift, and go to state 628
    "^^"   shift, and go to state 629
    ".."   shift, and go to state 630
    '?'    shift, and go to state 631
    '|'    shift, and go to state 632
    '^'    shift, and go to state 633
    '&'    shift, and go to state 634
    '<'    shift, and go to state 635
    '>'    shift, and go to state 636
    '-'    shift, and go to state 637
    '+'    shift, and go to state 638
    '*'    shift, and go to state 639
    '/'    shift, and go to state 640
    '%'    shift, and go to state 641
    '.'    shift, and go to state 642
    '['    shift, and go to state 643

    $default  reduce using rule 251 (expression_delete)


State 1068

   74 expression_with: "with" '(' expr . ')' expression_block
  347 expr_method_call: expr . "->" "name" '(' ')'
  348                 | expr . "->" "name" '(' expr_list ')'
  358 expr_field: expr . '.' "name"
  359           | expr . '.' '.' "name"
  360           | expr . '.' "name" '(' ')'
  361           | expr . '.' "name" '(' expr_list ')'
  362           | expr . '.' basic_type_declaration '(' ')'
  363           | expr . '.' basic_type_declaration '(' expr_list ')'
  366           | expr . '.' $@21 error $@22
  388 expr: expr . "<<" expr
  389     | expr . ">>" expr
  390     | expr . "<<<" expr
  391     | expr . ">>>" expr
  392     | expr . '+' expr
  393     | expr . '-' expr
  394     | expr . '*' expr
  395     | expr . '/' expr
  396     | expr . '%' expr
  397     | expr . '<' expr
  398     | expr . '>' expr
  399     | expr . "==" expr
  400     | expr . "!=" expr
  401     | expr . "<=" expr
  402     | expr . ">=" expr
  403     | expr . '&' expr
  404     | expr . '|' expr
  405     | expr . '^' expr
  406     | expr . "&&" expr
  407     | expr . "||" expr
  408     | expr . "^^" expr
  409     | expr . ".." expr
  412     | expr . "++"
  413     | expr . "--"
  415     | expr . '[' expr ']'
  416     | expr . '.' '[' expr ']'
  417     | expr . "?[" expr ']'
  418     | expr . '.' "?[" expr ']'
  419     | expr . "?." "name"
  420     | expr . '.' "?." "name"
  429     | expr . "??" expr
  430     | expr . '?' expr ':' expr
  433     | expr . "is" "type" '<' $@23 type_declaration_no_options '>' $@24
  434     | expr . "is" basic_type_declaration
  435     | expr . "is" "name"
  436     | expr . "as" "name"
  439     | expr . "as" "type" '<' $@25 type_declaration '>' $@26
  440     | expr . "as" basic_type_declaration
  441     | expr . '?' "as" "name"
  444     | expr . '?' "as" "type" '<' $@27 type_declaration '>' $@28
  445     | expr . '?' "as" basic_type_declaration
  453     | expr . "<|" expr
  454     | expr . "|>" expr
  455     | expr . "|>" basic_type_declaration
  466 expr_mtag: expr . '.' "$f" '(' expr ')'
  467          | expr . "?." "$f" '(' expr ')'
  468          | expr . '.' '.' "$f" '(' expr ')'
  469          | expr . '.' "?." "$f" '(' expr ')'
  470          | expr . "as" "$f" '(' expr ')'
  471          | expr . '?' "as" "$f" '(' expr ')'
  472          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 609
    "as"   shift, and go to state 610
    "<<"   shift, and go to state 611
    ">>"   shift, and go to state 612
    "++"   shift, and go to state 613
    "--"   shift, and go to state 614
    "<="   shift, and go to state 615
    ">="   shift, and go to state 616
    "=="   shift, and go to state 617
    "!="   shift, and go to state 618
    "->"   shift, and go to state 619
    "??"   shift, and go to state 620
    "?."   shift, and go to state 621
    "?["   shift, and go to state 622
    "<|"   shift, and go to state 623
    "|>"   shift, and go to state 624
    "<<<"  shift, and go to state 625
    ">>>"  shift, and go to state 626
    "&&"   shift, and go to state 627
    "||"   shift, and go to state 628
    "^^"   shift, and go to state 629
    ".."   shift, and go to state 630
    '?'    shift, and go to state 631
    '|'    shift, and go to state 632
    '^'    shift, and go to state 633
    '&'    shift, and go to state 634
    '<'    shift, and go to state 635
    '>'    shift, and go to state 636
    '-'    shift, and go to state 637
    '+'    shift, and go to state 638
    '*'    shift, and go to state 639
    '/'    shift, and go to state 640
    '%'    shift, and go to state 641
    '.'    shift, and go to state 642
    '['    shift, and go to state 643
    ')'    shift, and go to state 1198


State 1069

   75 expression_with_alias: "assume" "name" '=' . expr

    "struct"                          shift, and go to state 409
    "class"                           shift, and go to state 410
    "true"                            shift, and go to state 411
    "false"                           shift, and go to state 412
    "new"                             shift, and go to state 413
    "typeinfo"                        shift, and go to state 414
    "type"                            shift, and go to state 415
    "array"                           shift, and go to state 416
    "null"                            shift, and go to state 417
    "table"                           shift, and go to state 418
    "deref"                           shift, and go to state 419
    "cast"                            shift, and go to state 420
    "upcast"                          shift, and go to state 421
    "addr"                            shift, and go to state 422
    "reinterpret"                     shift, and go to state 423
    "unsafe"                          shift, and go to state 424
    "fixed_array"                     shift, and go to state 425
    "default"                         shift, and go to state 426
    "bool"                            shift, and go to state 225
    "void"                            shift, and go to state 226
    "string"                          shift, and go to state 227
    "int"                             shift, and go to state 229
    "int2"                            shift, and go to state 230
    "int3"                            shift, and go to state 231
    "int4"                            shift, and go to state 232
    "uint"                            shift, and go to state 233
    "bitfield"                        shift, and go to state 427
    "uint2"                           shift, and go to state 235
    "uint3"                           shift, and go to state 236
    "uint4"                           shift, and go to state 237
    "float"                           shift, and go to state 238
    "float2"                          shift, and go to state 239
    "float3"                          shift, and go to state 240
    "float4"                          shift, and go to state 241
    "range"                           shift, and go to state 242
    "urange"                          shift, and go to state 243
    "range64"                         shift, and go to state 244
    "urange64"                        shift, and go to state 245
    "int64"                           shift, and go to state 247
    "uint64"                          shift, and go to state 248
    "double"                          shift, and go to state 249
    "int8"                            shift, and go to state 252
    "uint8"                           shift, and go to state 253
    "int16"                           shift, and go to state 254
    "uint16"                          shift, and go to state 255
    "tuple"                           shift, and go to state 428
    "variant"                         shift, and go to state 429
    "generator"                       shift, and go to state 430
    "++"                              shift, and go to state 431
    "--"                              shift, and go to state 432
    "::"                              shift, and go to state 55
    "$$"                              shift, and go to state 433
    "$i"                              shift, and go to state 434
    "$v"                              shift, and go to state 435
    "$b"                              shift, and go to state 436
    "$a"                              shift, and go to state 437
    "$c"                              shift, and go to state 438
    "..."                             shift, and go to state 439
    "integer constant"                shift, and go to state 440
    "long integer constant"           shift, and go to state 441
    "unsigned integer constant"       shift, and go to state 442
    "unsigned long integer constant"  shift, and go to state 443
    "unsigned int8 constant"          shift, and go to state 444
    "floating point constant"         shift, and go to state 445
    "double constant"                 shift, and go to state 446
    "name"                            shift, and go to state 56
    "start of the string"             shift, and go to state 447
    "begin of code block"             shift, and go to state 448
    '-'                               shift, and go to state 449
    '+'                               shift, and go to state 450
    '*'                               shift, and go to state 451
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 452
    '!'                               shift, and go to state 453
    '['                               shift, and go to state 454
    '('                               shift, and go to state 455
    '$'                               shift, and go to state 456
    '@'                               shift, and go to state 457

    string_builder          go to state 458
    expr_reader             go to state 459
    expr_call_pipe          go to state 460
    name_in_namespace       go to state 461
    expr_new                go to state 462
    expr_cast               go to state 463
    expr_type_decl          go to state 464
    expr_type_info          go to state 465
    block_or_lambda         go to state 466
    expr_full_block         go to state 467
    expr_numeric_const      go to state 468
    expr_named_call         go to state 469
    expr_method_call        go to state 470
    func_addr_expr          go to state 471
    expr_field              go to state 472
    expr_call               go to state 473
    expr                    go to state 1199
    expr_mtag               go to state 475
    basic_type_declaration  go to state 476
    make_decl               go to state 477
    make_struct_decl        go to state 478
    make_tuple_call         go to state 479
    make_dim_decl           go to state 480
    make_table_decl         go to state 481
    array_comprehension     go to state 482


State 1070

   52 expression_label: "label" "integer constant" ':' .

    $default  reduce using rule 52 (expression_label)


State 1071

   53 expression_goto: "goto" "label" "integer constant" .

    $default  reduce using rule 53 (expression_goto)


State 1072

  268 expression_yield: "yield" "<-" expr .
  347 expr_method_call: expr . "->" "name" '(' ')'
  348                 | expr . "->" "name" '(' expr_list ')'
  358 expr_field: expr . '.' "name"
  359           | expr . '.' '.' "name"
  360           | expr . '.' "name" '(' ')'
  361           | expr . '.' "name" '(' expr_list ')'
  362           | expr . '.' basic_type_declaration '(' ')'
  363           | expr . '.' basic_type_declaration '(' expr_list ')'
  366           | expr . '.' $@21 error $@22
  388 expr: expr . "<<" expr
  389     | expr . ">>" expr
  390     | expr . "<<<" expr
  391     | expr . ">>>" expr
  392     | expr . '+' expr
  393     | expr . '-' expr
  394     | expr . '*' expr
  395     | expr . '/' expr
  396     | expr . '%' expr
  397     | expr . '<' expr
  398     | expr . '>' expr
  399     | expr . "==" expr
  400     | expr . "!=" expr
  401     | expr . "<=" expr
  402     | expr . ">=" expr
  403     | expr . '&' expr
  404     | expr . '|' expr
  405     | expr . '^' expr
  406     | expr . "&&" expr
  407     | expr . "||" expr
  408     | expr . "^^" expr
  409     | expr . ".." expr
  412     | expr . "++"
  413     | expr . "--"
  415     | expr . '[' expr ']'
  416     | expr . '.' '[' expr ']'
  417     | expr . "?[" expr ']'
  418     | expr . '.' "?[" expr ']'
  419     | expr . "?." "name"
  420     | expr . '.' "?." "name"
  429     | expr . "??" expr
  430     | expr . '?' expr ':' expr
  433     | expr . "is" "type" '<' $@23 type_declaration_no_options '>' $@24
  434     | expr . "is" basic_type_declaration
  435     | expr . "is" "name"
  436     | expr . "as" "name"
  439     | expr . "as" "type" '<' $@25 type_declaration '>' $@26
  440     | expr . "as" basic_type_declaration
  441     | expr . '?' "as" "name"
  444     | expr . '?' "as" "type" '<' $@27 type_declaration '>' $@28
  445     | expr . '?' "as" basic_type_declaration
  453     | expr . "<|" expr
  454     | expr . "|>" expr
  455     | expr . "|>" basic_type_declaration
  466 expr_mtag: expr . '.' "$f" '(' expr ')'
  467          | expr . "?." "$f" '(' expr ')'
  468          | expr . '.' '.' "$f" '(' expr ')'
  469          | expr . '.' "?." "$f" '(' expr ')'
  470          | expr . "as" "$f" '(' expr ')'
  471          | expr . '?' "as" "$f" '(' expr ')'
  472          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 609
    "as"   shift, and go to state 610
    "<<"   shift, and go to state 611
    ">>"   shift, and go to state 612
    "++"   shift, and go to state 613
    "--"   shift, and go to state 614
    "<="   shift, and go to state 615
    ">="   shift, and go to state 616
    "=="   shift, and go to state 617
    "!="   shift, and go to state 618
    "->"   shift, and go to state 619
    "??"   shift, and go to state 620
    "?."   shift, and go to state 621
    "?["   shift, and go to state 622
    "<|"   shift, and go to state 623
    "|>"   shift, and go to state 624
    "<<<"  shift, and go to state 625
    ">>>"  shift, and go to state 626
    "&&"   shift, and go to state 627
    "||"   shift, and go to state 628
    "^^"   shift, and go to state 629
    ".."   shift, and go to state 630
    '?'    shift, and go to state 631
    '|'    shift, and go to state 632
    '^'    shift, and go to state 633
    '&'    shift, and go to state 634
    '<'    shift, and go to state 635
    '>'    shift, and go to state 636
    '-'    shift, and go to state 637
    '+'    shift, and go to state 638
    '*'    shift, and go to state 639
    '/'    shift, and go to state 640
    '%'    shift, and go to state 641
    '.'    shift, and go to state 642
    '['    shift, and go to state 643

    $default  reduce using rule 268 (expression_yield)


State 1073

   69 expression_if_then_else: if_or_static_if '(' expr . ')' expression_block expression_else
  347 expr_method_call: expr . "->" "name" '(' ')'
  348                 | expr . "->" "name" '(' expr_list ')'
  358 expr_field: expr . '.' "name"
  359           | expr . '.' '.' "name"
  360           | expr . '.' "name" '(' ')'
  361           | expr . '.' "name" '(' expr_list ')'
  362           | expr . '.' basic_type_declaration '(' ')'
  363           | expr . '.' basic_type_declaration '(' expr_list ')'
  366           | expr . '.' $@21 error $@22
  388 expr: expr . "<<" expr
  389     | expr . ">>" expr
  390     | expr . "<<<" expr
  391     | expr . ">>>" expr
  392     | expr . '+' expr
  393     | expr . '-' expr
  394     | expr . '*' expr
  395     | expr . '/' expr
  396     | expr . '%' expr
  397     | expr . '<' expr
  398     | expr . '>' expr
  399     | expr . "==" expr
  400     | expr . "!=" expr
  401     | expr . "<=" expr
  402     | expr . ">=" expr
  403     | expr . '&' expr
  404     | expr . '|' expr
  405     | expr . '^' expr
  406     | expr . "&&" expr
  407     | expr . "||" expr
  408     | expr . "^^" expr
  409     | expr . ".." expr
  412     | expr . "++"
  413     | expr . "--"
  415     | expr . '[' expr ']'
  416     | expr . '.' '[' expr ']'
  417     | expr . "?[" expr ']'
  418     | expr . '.' "?[" expr ']'
  419     | expr . "?." "name"
  420     | expr . '.' "?." "name"
  429     | expr . "??" expr
  430     | expr . '?' expr ':' expr
  433     | expr . "is" "type" '<' $@23 type_declaration_no_options '>' $@24
  434     | expr . "is" basic_type_declaration
  435     | expr . "is" "name"
  436     | expr . "as" "name"
  439     | expr . "as" "type" '<' $@25 type_declaration '>' $@26
  440     | expr . "as" basic_type_declaration
  441     | expr . '?' "as" "name"
  444     | expr . '?' "as" "type" '<' $@27 type_declaration '>' $@28
  445     | expr . '?' "as" basic_type_declaration
  453     | expr . "<|" expr
  454     | expr . "|>" expr
  455     | expr . "|>" basic_type_declaration
  466 expr_mtag: expr . '.' "$f" '(' expr ')'
  467          | expr . "?." "$f" '(' expr ')'
  468          | expr . '.' '.' "$f" '(' expr ')'
  469          | expr . '.' "?." "$f" '(' expr ')'
  470          | expr . "as" "$f" '(' expr ')'
  471          | expr . '?' "as" "$f" '(' expr ')'
  472          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 609
    "as"   shift, and go to state 610
    "<<"   shift, and go to state 611
    ">>"   shift, and go to state 612
    "++"   shift, and go to state 613
    "--"   shift, and go to state 614
    "<="   shift, and go to state 615
    ">="   shift, and go to state 616
    "=="   shift, and go to state 617
    "!="   shift, and go to state 618
    "->"   shift, and go to state 619
    "??"   shift, and go to state 620
    "?."   shift, and go to state 621
    "?["   shift, and go to state 622
    "<|"   shift, and go to state 623
    "|>"   shift, and go to state 624
    "<<<"  shift, and go to state 625
    ">>>"  shift, and go to state 626
    "&&"   shift, and go to state 627
    "||"   shift, and go to state 628
    "^^"   shift, and go to state 629
    ".."   shift, and go to state 630
    '?'    shift, and go to state 631
    '|'    shift, and go to state 632
    '^'    shift, and go to state 633
    '&'    shift, and go to state 634
    '<'    shift, and go to state 635
    '>'    shift, and go to state 636
    '-'    shift, and go to state 637
    '+'    shift, and go to state 638
    '*'    shift, and go to state 639
    '/'    shift, and go to state 640
    '%'    shift, and go to state 641
    '.'    shift, and go to state 642
    '['    shift, and go to state 643
    ')'    shift, and go to state 1200


State 1074

   70 expression_if_then_else: expression_if_one_liner "if" '(' . expr ')' expression_else_one_liner "end of expression"

    "struct"                          shift, and go to state 409
    "class"                           shift, and go to state 410
    "true"                            shift, and go to state 411
    "false"                           shift, and go to state 412
    "new"                             shift, and go to state 413
    "typeinfo"                        shift, and go to state 414
    "type"                            shift, and go to state 415
    "array"                           shift, and go to state 416
    "null"                            shift, and go to state 417
    "table"                           shift, and go to state 418
    "deref"                           shift, and go to state 419
    "cast"                            shift, and go to state 420
    "upcast"                          shift, and go to state 421
    "addr"                            shift, and go to state 422
    "reinterpret"                     shift, and go to state 423
    "unsafe"                          shift, and go to state 424
    "fixed_array"                     shift, and go to state 425
    "default"                         shift, and go to state 426
    "bool"                            shift, and go to state 225
    "void"                            shift, and go to state 226
    "string"                          shift, and go to state 227
    "int"                             shift, and go to state 229
    "int2"                            shift, and go to state 230
    "int3"                            shift, and go to state 231
    "int4"                            shift, and go to state 232
    "uint"                            shift, and go to state 233
    "bitfield"                        shift, and go to state 427
    "uint2"                           shift, and go to state 235
    "uint3"                           shift, and go to state 236
    "uint4"                           shift, and go to state 237
    "float"                           shift, and go to state 238
    "float2"                          shift, and go to state 239
    "float3"                          shift, and go to state 240
    "float4"                          shift, and go to state 241
    "range"                           shift, and go to state 242
    "urange"                          shift, and go to state 243
    "range64"                         shift, and go to state 244
    "urange64"                        shift, and go to state 245
    "int64"                           shift, and go to state 247
    "uint64"                          shift, and go to state 248
    "double"                          shift, and go to state 249
    "int8"                            shift, and go to state 252
    "uint8"                           shift, and go to state 253
    "int16"                           shift, and go to state 254
    "uint16"                          shift, and go to state 255
    "tuple"                           shift, and go to state 428
    "variant"                         shift, and go to state 429
    "generator"                       shift, and go to state 430
    "++"                              shift, and go to state 431
    "--"                              shift, and go to state 432
    "::"                              shift, and go to state 55
    "$$"                              shift, and go to state 433
    "$i"                              shift, and go to state 434
    "$v"                              shift, and go to state 435
    "$b"                              shift, and go to state 436
    "$a"                              shift, and go to state 437
    "$c"                              shift, and go to state 438
    "..."                             shift, and go to state 439
    "integer constant"                shift, and go to state 440
    "long integer constant"           shift, and go to state 441
    "unsigned integer constant"       shift, and go to state 442
    "unsigned long integer constant"  shift, and go to state 443
    "unsigned int8 constant"          shift, and go to state 444
    "floating point constant"         shift, and go to state 445
    "double constant"                 shift, and go to state 446
    "name"                            shift, and go to state 56
    "start of the string"             shift, and go to state 447
    "begin of code block"             shift, and go to state 448
    '-'                               shift, and go to state 449
    '+'                               shift, and go to state 450
    '*'                               shift, and go to state 451
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 452
    '!'                               shift, and go to state 453
    '['                               shift, and go to state 454
    '('                               shift, and go to state 455
    '$'                               shift, and go to state 456
    '@'                               shift, and go to state 457

    string_builder          go to state 458
    expr_reader             go to state 459
    expr_call_pipe          go to state 460
    name_in_namespace       go to state 461
    expr_new                go to state 462
    expr_cast               go to state 463
    expr_type_decl          go to state 464
    expr_type_info          go to state 465
    block_or_lambda         go to state 466
    expr_full_block         go to state 467
    expr_numeric_const      go to state 468
    expr_named_call         go to state 469
    expr_method_call        go to state 470
    func_addr_expr          go to state 471
    expr_field              go to state 472
    expr_call               go to state 473
    expr                    go to state 1201
    expr_mtag               go to state 475
    basic_type_declaration  go to state 476
    make_decl               go to state 477
    make_struct_decl        go to state 478
    make_tuple_call         go to state 479
    make_dim_decl           go to state 480
    make_table_decl         go to state 481
    array_comprehension     go to state 482


State 1075

  215 expression_block_finally: "finally" . $@3 "begin of code block" expressions $@4 "end of code block"

    $default  reduce using rule 213 ($@3)

    $@3  go to state 1202


State 1076

  218 expression_block: $@5 "begin of code block" expressions $@6 "end of code block" expression_block_finally .

    $default  reduce using rule 218 (expression_block)


State 1077

  283 expression_let: kwd_let optional_in_scope "begin of code block" . variable_declaration_list "end of code block"

    $default  reduce using rule 530 (variable_declaration_list)

    variable_declaration_list  go to state 1203


State 1078

  279 tuple_expansion_variable_declaration: '(' . tuple_expansion ')' ':' type_declaration_no_options copy_or_move_or_clone expr "end of expression"
  280                                     | '(' . tuple_expansion ')' optional_ref copy_or_move_or_clone expr "end of expression"

    "name"  shift, and go to state 1204

    tuple_expansion  go to state 1205


State 1079

  282 expression_let: kwd_let optional_in_scope tuple_expansion_variable_declaration .

    $default  reduce using rule 282 (expression_let)


State 1080

  281 expression_let: kwd_let optional_in_scope let_variable_declaration .

    $default  reduce using rule 281 (expression_let)


State 1081

  336 expr_assign: expr "+=" expr .
  347 expr_method_call: expr . "->" "name" '(' ')'
  348                 | expr . "->" "name" '(' expr_list ')'
  358 expr_field: expr . '.' "name"
  359           | expr . '.' '.' "name"
  360           | expr . '.' "name" '(' ')'
  361           | expr . '.' "name" '(' expr_list ')'
  362           | expr . '.' basic_type_declaration '(' ')'
  363           | expr . '.' basic_type_declaration '(' expr_list ')'
  366           | expr . '.' $@21 error $@22
  388 expr: expr . "<<" expr
  389     | expr . ">>" expr
  390     | expr . "<<<" expr
  391     | expr . ">>>" expr
  392     | expr . '+' expr
  393     | expr . '-' expr
  394     | expr . '*' expr
  395     | expr . '/' expr
  396     | expr . '%' expr
  397     | expr . '<' expr
  398     | expr . '>' expr
  399     | expr . "==" expr
  400     | expr . "!=" expr
  401     | expr . "<=" expr
  402     | expr . ">=" expr
  403     | expr . '&' expr
  404     | expr . '|' expr
  405     | expr . '^' expr
  406     | expr . "&&" expr
  407     | expr . "||" expr
  408     | expr . "^^" expr
  409     | expr . ".." expr
  412     | expr . "++"
  413     | expr . "--"
  415     | expr . '[' expr ']'
  416     | expr . '.' '[' expr ']'
  417     | expr . "?[" expr ']'
  418     | expr . '.' "?[" expr ']'
  419     | expr . "?." "name"
  420     | expr . '.' "?." "name"
  429     | expr . "??" expr
  430     | expr . '?' expr ':' expr
  433     | expr . "is" "type" '<' $@23 type_declaration_no_options '>' $@24
  434     | expr . "is" basic_type_declaration
  435     | expr . "is" "name"
  436     | expr . "as" "name"
  439     | expr . "as" "type" '<' $@25 type_declaration '>' $@26
  440     | expr . "as" basic_type_declaration
  441     | expr . '?' "as" "name"
  444     | expr . '?' "as" "type" '<' $@27 type_declaration '>' $@28
  445     | expr . '?' "as" basic_type_declaration
  453     | expr . "<|" expr
  454     | expr . "|>" expr
  455     | expr . "|>" basic_type_declaration
  466 expr_mtag: expr . '.' "$f" '(' expr ')'
  467          | expr . "?." "$f" '(' expr ')'
  468          | expr . '.' '.' "$f" '(' expr ')'
  469          | expr . '.' "?." "$f" '(' expr ')'
  470          | expr . "as" "$f" '(' expr ')'
  471          | expr . '?' "as" "$f" '(' expr ')'
  472          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 609
    "as"   shift, and go to state 610
    "<<"   shift, and go to state 611
    ">>"   shift, and go to state 612
    "++"   shift, and go to state 613
    "--"   shift, and go to state 614
    "<="   shift, and go to state 615
    ">="   shift, and go to state 616
    "=="   shift, and go to state 617
    "!="   shift, and go to state 618
    "->"   shift, and go to state 619
    "??"   shift, and go to state 620
    "?."   shift, and go to state 621
    "?["   shift, and go to state 622
    "<|"   shift, and go to state 623
    "|>"   shift, and go to state 624
    "<<<"  shift, and go to state 625
    ">>>"  shift, and go to state 626
    "&&"   shift, and go to state 627
    "||"   shift, and go to state 628
    "^^"   shift, and go to state 629
    ".."   shift, and go to state 630
    '?'    shift, and go to state 631
    '|'    shift, and go to state 632
    '^'    shift, and go to state 633
    '&'    shift, and go to state 634
    '<'    shift, and go to state 635
    '>'    shift, and go to state 636
    '-'    shift, and go to state 637
    '+'    shift, and go to state 638
    '*'    shift, and go to state 639
    '/'    shift, and go to state 640
    '%'    shift, and go to state 641
    '.'    shift, and go to state 642
    '['    shift, and go to state 643

    $default  reduce using rule 336 (expr_assign)


State 1082

  337 expr_assign: expr "-=" expr .
  347 expr_method_call: expr . "->" "name" '(' ')'
  348                 | expr . "->" "name" '(' expr_list ')'
  358 expr_field: expr . '.' "name"
  359           | expr . '.' '.' "name"
  360           | expr . '.' "name" '(' ')'
  361           | expr . '.' "name" '(' expr_list ')'
  362           | expr . '.' basic_type_declaration '(' ')'
  363           | expr . '.' basic_type_declaration '(' expr_list ')'
  366           | expr . '.' $@21 error $@22
  388 expr: expr . "<<" expr
  389     | expr . ">>" expr
  390     | expr . "<<<" expr
  391     | expr . ">>>" expr
  392     | expr . '+' expr
  393     | expr . '-' expr
  394     | expr . '*' expr
  395     | expr . '/' expr
  396     | expr . '%' expr
  397     | expr . '<' expr
  398     | expr . '>' expr
  399     | expr . "==" expr
  400     | expr . "!=" expr
  401     | expr . "<=" expr
  402     | expr . ">=" expr
  403     | expr . '&' expr
  404     | expr . '|' expr
  405     | expr . '^' expr
  406     | expr . "&&" expr
  407     | expr . "||" expr
  408     | expr . "^^" expr
  409     | expr . ".." expr
  412     | expr . "++"
  413     | expr . "--"
  415     | expr . '[' expr ']'
  416     | expr . '.' '[' expr ']'
  417     | expr . "?[" expr ']'
  418     | expr . '.' "?[" expr ']'
  419     | expr . "?." "name"
  420     | expr . '.' "?." "name"
  429     | expr . "??" expr
  430     | expr . '?' expr ':' expr
  433     | expr . "is" "type" '<' $@23 type_declaration_no_options '>' $@24
  434     | expr . "is" basic_type_declaration
  435     | expr . "is" "name"
  436     | expr . "as" "name"
  439     | expr . "as" "type" '<' $@25 type_declaration '>' $@26
  440     | expr . "as" basic_type_declaration
  441     | expr . '?' "as" "name"
  444     | expr . '?' "as" "type" '<' $@27 type_declaration '>' $@28
  445     | expr . '?' "as" basic_type_declaration
  453     | expr . "<|" expr
  454     | expr . "|>" expr
  455     | expr . "|>" basic_type_declaration
  466 expr_mtag: expr . '.' "$f" '(' expr ')'
  467          | expr . "?." "$f" '(' expr ')'
  468          | expr . '.' '.' "$f" '(' expr ')'
  469          | expr . '.' "?." "$f" '(' expr ')'
  470          | expr . "as" "$f" '(' expr ')'
  471          | expr . '?' "as" "$f" '(' expr ')'
  472          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 609
    "as"   shift, and go to state 610
    "<<"   shift, and go to state 611
    ">>"   shift, and go to state 612
    "++"   shift, and go to state 613
    "--"   shift, and go to state 614
    "<="   shift, and go to state 615
    ">="   shift, and go to state 616
    "=="   shift, and go to state 617
    "!="   shift, and go to state 618
    "->"   shift, and go to state 619
    "??"   shift, and go to state 620
    "?."   shift, and go to state 621
    "?["   shift, and go to state 622
    "<|"   shift, and go to state 623
    "|>"   shift, and go to state 624
    "<<<"  shift, and go to state 625
    ">>>"  shift, and go to state 626
    "&&"   shift, and go to state 627
    "||"   shift, and go to state 628
    "^^"   shift, and go to state 629
    ".."   shift, and go to state 630
    '?'    shift, and go to state 631
    '|'    shift, and go to state 632
    '^'    shift, and go to state 633
    '&'    shift, and go to state 634
    '<'    shift, and go to state 635
    '>'    shift, and go to state 636
    '-'    shift, and go to state 637
    '+'    shift, and go to state 638
    '*'    shift, and go to state 639
    '/'    shift, and go to state 640
    '%'    shift, and go to state 641
    '.'    shift, and go to state 642
    '['    shift, and go to state 643

    $default  reduce using rule 337 (expr_assign)


State 1083

  339 expr_assign: expr "/=" expr .
  347 expr_method_call: expr . "->" "name" '(' ')'
  348                 | expr . "->" "name" '(' expr_list ')'
  358 expr_field: expr . '.' "name"
  359           | expr . '.' '.' "name"
  360           | expr . '.' "name" '(' ')'
  361           | expr . '.' "name" '(' expr_list ')'
  362           | expr . '.' basic_type_declaration '(' ')'
  363           | expr . '.' basic_type_declaration '(' expr_list ')'
  366           | expr . '.' $@21 error $@22
  388 expr: expr . "<<" expr
  389     | expr . ">>" expr
  390     | expr . "<<<" expr
  391     | expr . ">>>" expr
  392     | expr . '+' expr
  393     | expr . '-' expr
  394     | expr . '*' expr
  395     | expr . '/' expr
  396     | expr . '%' expr
  397     | expr . '<' expr
  398     | expr . '>' expr
  399     | expr . "==" expr
  400     | expr . "!=" expr
  401     | expr . "<=" expr
  402     | expr . ">=" expr
  403     | expr . '&' expr
  404     | expr . '|' expr
  405     | expr . '^' expr
  406     | expr . "&&" expr
  407     | expr . "||" expr
  408     | expr . "^^" expr
  409     | expr . ".." expr
  412     | expr . "++"
  413     | expr . "--"
  415     | expr . '[' expr ']'
  416     | expr . '.' '[' expr ']'
  417     | expr . "?[" expr ']'
  418     | expr . '.' "?[" expr ']'
  419     | expr . "?." "name"
  420     | expr . '.' "?." "name"
  429     | expr . "??" expr
  430     | expr . '?' expr ':' expr
  433     | expr . "is" "type" '<' $@23 type_declaration_no_options '>' $@24
  434     | expr . "is" basic_type_declaration
  435     | expr . "is" "name"
  436     | expr . "as" "name"
  439     | expr . "as" "type" '<' $@25 type_declaration '>' $@26
  440     | expr . "as" basic_type_declaration
  441     | expr . '?' "as" "name"
  444     | expr . '?' "as" "type" '<' $@27 type_declaration '>' $@28
  445     | expr . '?' "as" basic_type_declaration
  453     | expr . "<|" expr
  454     | expr . "|>" expr
  455     | expr . "|>" basic_type_declaration
  466 expr_mtag: expr . '.' "$f" '(' expr ')'
  467          | expr . "?." "$f" '(' expr ')'
  468          | expr . '.' '.' "$f" '(' expr ')'
  469          | expr . '.' "?." "$f" '(' expr ')'
  470          | expr . "as" "$f" '(' expr ')'
  471          | expr . '?' "as" "$f" '(' expr ')'
  472          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 609
    "as"   shift, and go to state 610
    "<<"   shift, and go to state 611
    ">>"   shift, and go to state 612
    "++"   shift, and go to state 613
    "--"   shift, and go to state 614
    "<="   shift, and go to state 615
    ">="   shift, and go to state 616
    "=="   shift, and go to state 617
    "!="   shift, and go to state 618
    "->"   shift, and go to state 619
    "??"   shift, and go to state 620
    "?."   shift, and go to state 621
    "?["   shift, and go to state 622
    "<|"   shift, and go to state 623
    "|>"   shift, and go to state 624
    "<<<"  shift, and go to state 625
    ">>>"  shift, and go to state 626
    "&&"   shift, and go to state 627
    "||"   shift, and go to state 628
    "^^"   shift, and go to state 629
    ".."   shift, and go to state 630
    '?'    shift, and go to state 631
    '|'    shift, and go to state 632
    '^'    shift, and go to state 633
    '&'    shift, and go to state 634
    '<'    shift, and go to state 635
    '>'    shift, and go to state 636
    '-'    shift, and go to state 637
    '+'    shift, and go to state 638
    '*'    shift, and go to state 639
    '/'    shift, and go to state 640
    '%'    shift, and go to state 641
    '.'    shift, and go to state 642
    '['    shift, and go to state 643

    $default  reduce using rule 339 (expr_assign)


State 1084

  338 expr_assign: expr "*=" expr .
  347 expr_method_call: expr . "->" "name" '(' ')'
  348                 | expr . "->" "name" '(' expr_list ')'
  358 expr_field: expr . '.' "name"
  359           | expr . '.' '.' "name"
  360           | expr . '.' "name" '(' ')'
  361           | expr . '.' "name" '(' expr_list ')'
  362           | expr . '.' basic_type_declaration '(' ')'
  363           | expr . '.' basic_type_declaration '(' expr_list ')'
  366           | expr . '.' $@21 error $@22
  388 expr: expr . "<<" expr
  389     | expr . ">>" expr
  390     | expr . "<<<" expr
  391     | expr . ">>>" expr
  392     | expr . '+' expr
  393     | expr . '-' expr
  394     | expr . '*' expr
  395     | expr . '/' expr
  396     | expr . '%' expr
  397     | expr . '<' expr
  398     | expr . '>' expr
  399     | expr . "==" expr
  400     | expr . "!=" expr
  401     | expr . "<=" expr
  402     | expr . ">=" expr
  403     | expr . '&' expr
  404     | expr . '|' expr
  405     | expr . '^' expr
  406     | expr . "&&" expr
  407     | expr . "||" expr
  408     | expr . "^^" expr
  409     | expr . ".." expr
  412     | expr . "++"
  413     | expr . "--"
  415     | expr . '[' expr ']'
  416     | expr . '.' '[' expr ']'
  417     | expr . "?[" expr ']'
  418     | expr . '.' "?[" expr ']'
  419     | expr . "?." "name"
  420     | expr . '.' "?." "name"
  429     | expr . "??" expr
  430     | expr . '?' expr ':' expr
  433     | expr . "is" "type" '<' $@23 type_declaration_no_options '>' $@24
  434     | expr . "is" basic_type_declaration
  435     | expr . "is" "name"
  436     | expr . "as" "name"
  439     | expr . "as" "type" '<' $@25 type_declaration '>' $@26
  440     | expr . "as" basic_type_declaration
  441     | expr . '?' "as" "name"
  444     | expr . '?' "as" "type" '<' $@27 type_declaration '>' $@28
  445     | expr . '?' "as" basic_type_declaration
  453     | expr . "<|" expr
  454     | expr . "|>" expr
  455     | expr . "|>" basic_type_declaration
  466 expr_mtag: expr . '.' "$f" '(' expr ')'
  467          | expr . "?." "$f" '(' expr ')'
  468          | expr . '.' '.' "$f" '(' expr ')'
  469          | expr . '.' "?." "$f" '(' expr ')'
  470          | expr . "as" "$f" '(' expr ')'
  471          | expr . '?' "as" "$f" '(' expr ')'
  472          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 609
    "as"   shift, and go to state 610
    "<<"   shift, and go to state 611
    ">>"   shift, and go to state 612
    "++"   shift, and go to state 613
    "--"   shift, and go to state 614
    "<="   shift, and go to state 615
    ">="   shift, and go to state 616
    "=="   shift, and go to state 617
    "!="   shift, and go to state 618
    "->"   shift, and go to state 619
    "??"   shift, and go to state 620
    "?."   shift, and go to state 621
    "?["   shift, and go to state 622
    "<|"   shift, and go to state 623
    "|>"   shift, and go to state 624
    "<<<"  shift, and go to state 625
    ">>>"  shift, and go to state 626
    "&&"   shift, and go to state 627
    "||"   shift, and go to state 628
    "^^"   shift, and go to state 629
    ".."   shift, and go to state 630
    '?'    shift, and go to state 631
    '|'    shift, and go to state 632
    '^'    shift, and go to state 633
    '&'    shift, and go to state 634
    '<'    shift, and go to state 635
    '>'    shift, and go to state 636
    '-'    shift, and go to state 637
    '+'    shift, and go to state 638
    '*'    shift, and go to state 639
    '/'    shift, and go to state 640
    '%'    shift, and go to state 641
    '.'    shift, and go to state 642
    '['    shift, and go to state 643

    $default  reduce using rule 338 (expr_assign)


State 1085

  340 expr_assign: expr "%=" expr .
  347 expr_method_call: expr . "->" "name" '(' ')'
  348                 | expr . "->" "name" '(' expr_list ')'
  358 expr_field: expr . '.' "name"
  359           | expr . '.' '.' "name"
  360           | expr . '.' "name" '(' ')'
  361           | expr . '.' "name" '(' expr_list ')'
  362           | expr . '.' basic_type_declaration '(' ')'
  363           | expr . '.' basic_type_declaration '(' expr_list ')'
  366           | expr . '.' $@21 error $@22
  388 expr: expr . "<<" expr
  389     | expr . ">>" expr
  390     | expr . "<<<" expr
  391     | expr . ">>>" expr
  392     | expr . '+' expr
  393     | expr . '-' expr
  394     | expr . '*' expr
  395     | expr . '/' expr
  396     | expr . '%' expr
  397     | expr . '<' expr
  398     | expr . '>' expr
  399     | expr . "==" expr
  400     | expr . "!=" expr
  401     | expr . "<=" expr
  402     | expr . ">=" expr
  403     | expr . '&' expr
  404     | expr . '|' expr
  405     | expr . '^' expr
  406     | expr . "&&" expr
  407     | expr . "||" expr
  408     | expr . "^^" expr
  409     | expr . ".." expr
  412     | expr . "++"
  413     | expr . "--"
  415     | expr . '[' expr ']'
  416     | expr . '.' '[' expr ']'
  417     | expr . "?[" expr ']'
  418     | expr . '.' "?[" expr ']'
  419     | expr . "?." "name"
  420     | expr . '.' "?." "name"
  429     | expr . "??" expr
  430     | expr . '?' expr ':' expr
  433     | expr . "is" "type" '<' $@23 type_declaration_no_options '>' $@24
  434     | expr . "is" basic_type_declaration
  435     | expr . "is" "name"
  436     | expr . "as" "name"
  439     | expr . "as" "type" '<' $@25 type_declaration '>' $@26
  440     | expr . "as" basic_type_declaration
  441     | expr . '?' "as" "name"
  444     | expr . '?' "as" "type" '<' $@27 type_declaration '>' $@28
  445     | expr . '?' "as" basic_type_declaration
  453     | expr . "<|" expr
  454     | expr . "|>" expr
  455     | expr . "|>" basic_type_declaration
  466 expr_mtag: expr . '.' "$f" '(' expr ')'
  467          | expr . "?." "$f" '(' expr ')'
  468          | expr . '.' '.' "$f" '(' expr ')'
  469          | expr . '.' "?." "$f" '(' expr ')'
  470          | expr . "as" "$f" '(' expr ')'
  471          | expr . '?' "as" "$f" '(' expr ')'
  472          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 609
    "as"   shift, and go to state 610
    "<<"   shift, and go to state 611
    ">>"   shift, and go to state 612
    "++"   shift, and go to state 613
    "--"   shift, and go to state 614
    "<="   shift, and go to state 615
    ">="   shift, and go to state 616
    "=="   shift, and go to state 617
    "!="   shift, and go to state 618
    "->"   shift, and go to state 619
    "??"   shift, and go to state 620
    "?."   shift, and go to state 621
    "?["   shift, and go to state 622
    "<|"   shift, and go to state 623
    "|>"   shift, and go to state 624
    "<<<"  shift, and go to state 625
    ">>>"  shift, and go to state 626
    "&&"   shift, and go to state 627
    "||"   shift, and go to state 628
    "^^"   shift, and go to state 629
    ".."   shift, and go to state 630
    '?'    shift, and go to state 631
    '|'    shift, and go to state 632
    '^'    shift, and go to state 633
    '&'    shift, and go to state 634
    '<'    shift, and go to state 635
    '>'    shift, and go to state 636
    '-'    shift, and go to state 637
    '+'    shift, and go to state 638
    '*'    shift, and go to state 639
    '/'    shift, and go to state 640
    '%'    shift, and go to state 641
    '.'    shift, and go to state 642
    '['    shift, and go to state 643

    $default  reduce using rule 340 (expr_assign)


State 1086

  330 expr_assign: expr "&=" expr .
  347 expr_method_call: expr . "->" "name" '(' ')'
  348                 | expr . "->" "name" '(' expr_list ')'
  358 expr_field: expr . '.' "name"
  359           | expr . '.' '.' "name"
  360           | expr . '.' "name" '(' ')'
  361           | expr . '.' "name" '(' expr_list ')'
  362           | expr . '.' basic_type_declaration '(' ')'
  363           | expr . '.' basic_type_declaration '(' expr_list ')'
  366           | expr . '.' $@21 error $@22
  388 expr: expr . "<<" expr
  389     | expr . ">>" expr
  390     | expr . "<<<" expr
  391     | expr . ">>>" expr
  392     | expr . '+' expr
  393     | expr . '-' expr
  394     | expr . '*' expr
  395     | expr . '/' expr
  396     | expr . '%' expr
  397     | expr . '<' expr
  398     | expr . '>' expr
  399     | expr . "==" expr
  400     | expr . "!=" expr
  401     | expr . "<=" expr
  402     | expr . ">=" expr
  403     | expr . '&' expr
  404     | expr . '|' expr
  405     | expr . '^' expr
  406     | expr . "&&" expr
  407     | expr . "||" expr
  408     | expr . "^^" expr
  409     | expr . ".." expr
  412     | expr . "++"
  413     | expr . "--"
  415     | expr . '[' expr ']'
  416     | expr . '.' '[' expr ']'
  417     | expr . "?[" expr ']'
  418     | expr . '.' "?[" expr ']'
  419     | expr . "?." "name"
  420     | expr . '.' "?." "name"
  429     | expr . "??" expr
  430     | expr . '?' expr ':' expr
  433     | expr . "is" "type" '<' $@23 type_declaration_no_options '>' $@24
  434     | expr . "is" basic_type_declaration
  435     | expr . "is" "name"
  436     | expr . "as" "name"
  439     | expr . "as" "type" '<' $@25 type_declaration '>' $@26
  440     | expr . "as" basic_type_declaration
  441     | expr . '?' "as" "name"
  444     | expr . '?' "as" "type" '<' $@27 type_declaration '>' $@28
  445     | expr . '?' "as" basic_type_declaration
  453     | expr . "<|" expr
  454     | expr . "|>" expr
  455     | expr . "|>" basic_type_declaration
  466 expr_mtag: expr . '.' "$f" '(' expr ')'
  467          | expr . "?." "$f" '(' expr ')'
  468          | expr . '.' '.' "$f" '(' expr ')'
  469          | expr . '.' "?." "$f" '(' expr ')'
  470          | expr . "as" "$f" '(' expr ')'
  471          | expr . '?' "as" "$f" '(' expr ')'
  472          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 609
    "as"   shift, and go to state 610
    "<<"   shift, and go to state 611
    ">>"   shift, and go to state 612
    "++"   shift, and go to state 613
    "--"   shift, and go to state 614
    "<="   shift, and go to state 615
    ">="   shift, and go to state 616
    "=="   shift, and go to state 617
    "!="   shift, and go to state 618
    "->"   shift, and go to state 619
    "??"   shift, and go to state 620
    "?."   shift, and go to state 621
    "?["   shift, and go to state 622
    "<|"   shift, and go to state 623
    "|>"   shift, and go to state 624
    "<<<"  shift, and go to state 625
    ">>>"  shift, and go to state 626
    "&&"   shift, and go to state 627
    "||"   shift, and go to state 628
    "^^"   shift, and go to state 629
    ".."   shift, and go to state 630
    '?'    shift, and go to state 631
    '|'    shift, and go to state 632
    '^'    shift, and go to state 633
    '&'    shift, and go to state 634
    '<'    shift, and go to state 635
    '>'    shift, and go to state 636
    '-'    shift, and go to state 637
    '+'    shift, and go to state 638
    '*'    shift, and go to state 639
    '/'    shift, and go to state 640
    '%'    shift, and go to state 641
    '.'    shift, and go to state 642
    '['    shift, and go to state 643

    $default  reduce using rule 330 (expr_assign)


State 1087

  331 expr_assign: expr "|=" expr .
  347 expr_method_call: expr . "->" "name" '(' ')'
  348                 | expr . "->" "name" '(' expr_list ')'
  358 expr_field: expr . '.' "name"
  359           | expr . '.' '.' "name"
  360           | expr . '.' "name" '(' ')'
  361           | expr . '.' "name" '(' expr_list ')'
  362           | expr . '.' basic_type_declaration '(' ')'
  363           | expr . '.' basic_type_declaration '(' expr_list ')'
  366           | expr . '.' $@21 error $@22
  388 expr: expr . "<<" expr
  389     | expr . ">>" expr
  390     | expr . "<<<" expr
  391     | expr . ">>>" expr
  392     | expr . '+' expr
  393     | expr . '-' expr
  394     | expr . '*' expr
  395     | expr . '/' expr
  396     | expr . '%' expr
  397     | expr . '<' expr
  398     | expr . '>' expr
  399     | expr . "==" expr
  400     | expr . "!=" expr
  401     | expr . "<=" expr
  402     | expr . ">=" expr
  403     | expr . '&' expr
  404     | expr . '|' expr
  405     | expr . '^' expr
  406     | expr . "&&" expr
  407     | expr . "||" expr
  408     | expr . "^^" expr
  409     | expr . ".." expr
  412     | expr . "++"
  413     | expr . "--"
  415     | expr . '[' expr ']'
  416     | expr . '.' '[' expr ']'
  417     | expr . "?[" expr ']'
  418     | expr . '.' "?[" expr ']'
  419     | expr . "?." "name"
  420     | expr . '.' "?." "name"
  429     | expr . "??" expr
  430     | expr . '?' expr ':' expr
  433     | expr . "is" "type" '<' $@23 type_declaration_no_options '>' $@24
  434     | expr . "is" basic_type_declaration
  435     | expr . "is" "name"
  436     | expr . "as" "name"
  439     | expr . "as" "type" '<' $@25 type_declaration '>' $@26
  440     | expr . "as" basic_type_declaration
  441     | expr . '?' "as" "name"
  444     | expr . '?' "as" "type" '<' $@27 type_declaration '>' $@28
  445     | expr . '?' "as" basic_type_declaration
  453     | expr . "<|" expr
  454     | expr . "|>" expr
  455     | expr . "|>" basic_type_declaration
  466 expr_mtag: expr . '.' "$f" '(' expr ')'
  467          | expr . "?." "$f" '(' expr ')'
  468          | expr . '.' '.' "$f" '(' expr ')'
  469          | expr . '.' "?." "$f" '(' expr ')'
  470          | expr . "as" "$f" '(' expr ')'
  471          | expr . '?' "as" "$f" '(' expr ')'
  472          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 609
    "as"   shift, and go to state 610
    "<<"   shift, and go to state 611
    ">>"   shift, and go to state 612
    "++"   shift, and go to state 613
    "--"   shift, and go to state 614
    "<="   shift, and go to state 615
    ">="   shift, and go to state 616
    "=="   shift, and go to state 617
    "!="   shift, and go to state 618
    "->"   shift, and go to state 619
    "??"   shift, and go to state 620
    "?."   shift, and go to state 621
    "?["   shift, and go to state 622
    "<|"   shift, and go to state 623
    "|>"   shift, and go to state 624
    "<<<"  shift, and go to state 625
    ">>>"  shift, and go to state 626
    "&&"   shift, and go to state 627
    "||"   shift, and go to state 628
    "^^"   shift, and go to state 629
    ".."   shift, and go to state 630
    '?'    shift, and go to state 631
    '|'    shift, and go to state 632
    '^'    shift, and go to state 633
    '&'    shift, and go to state 634
    '<'    shift, and go to state 635
    '>'    shift, and go to state 636
    '-'    shift, and go to state 637
    '+'    shift, and go to state 638
    '*'    shift, and go to state 639
    '/'    shift, and go to state 640
    '%'    shift, and go to state 641
    '.'    shift, and go to state 642
    '['    shift, and go to state 643

    $default  reduce using rule 331 (expr_assign)


State 1088

  332 expr_assign: expr "^=" expr .
  347 expr_method_call: expr . "->" "name" '(' ')'
  348                 | expr . "->" "name" '(' expr_list ')'
  358 expr_field: expr . '.' "name"
  359           | expr . '.' '.' "name"
  360           | expr . '.' "name" '(' ')'
  361           | expr . '.' "name" '(' expr_list ')'
  362           | expr . '.' basic_type_declaration '(' ')'
  363           | expr . '.' basic_type_declaration '(' expr_list ')'
  366           | expr . '.' $@21 error $@22
  388 expr: expr . "<<" expr
  389     | expr . ">>" expr
  390     | expr . "<<<" expr
  391     | expr . ">>>" expr
  392     | expr . '+' expr
  393     | expr . '-' expr
  394     | expr . '*' expr
  395     | expr . '/' expr
  396     | expr . '%' expr
  397     | expr . '<' expr
  398     | expr . '>' expr
  399     | expr . "==" expr
  400     | expr . "!=" expr
  401     | expr . "<=" expr
  402     | expr . ">=" expr
  403     | expr . '&' expr
  404     | expr . '|' expr
  405     | expr . '^' expr
  406     | expr . "&&" expr
  407     | expr . "||" expr
  408     | expr . "^^" expr
  409     | expr . ".." expr
  412     | expr . "++"
  413     | expr . "--"
  415     | expr . '[' expr ']'
  416     | expr . '.' '[' expr ']'
  417     | expr . "?[" expr ']'
  418     | expr . '.' "?[" expr ']'
  419     | expr . "?." "name"
  420     | expr . '.' "?." "name"
  429     | expr . "??" expr
  430     | expr . '?' expr ':' expr
  433     | expr . "is" "type" '<' $@23 type_declaration_no_options '>' $@24
  434     | expr . "is" basic_type_declaration
  435     | expr . "is" "name"
  436     | expr . "as" "name"
  439     | expr . "as" "type" '<' $@25 type_declaration '>' $@26
  440     | expr . "as" basic_type_declaration
  441     | expr . '?' "as" "name"
  444     | expr . '?' "as" "type" '<' $@27 type_declaration '>' $@28
  445     | expr . '?' "as" basic_type_declaration
  453     | expr . "<|" expr
  454     | expr . "|>" expr
  455     | expr . "|>" basic_type_declaration
  466 expr_mtag: expr . '.' "$f" '(' expr ')'
  467          | expr . "?." "$f" '(' expr ')'
  468          | expr . '.' '.' "$f" '(' expr ')'
  469          | expr . '.' "?." "$f" '(' expr ')'
  470          | expr . "as" "$f" '(' expr ')'
  471          | expr . '?' "as" "$f" '(' expr ')'
  472          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 609
    "as"   shift, and go to state 610
    "<<"   shift, and go to state 611
    ">>"   shift, and go to state 612
    "++"   shift, and go to state 613
    "--"   shift, and go to state 614
    "<="   shift, and go to state 615
    ">="   shift, and go to state 616
    "=="   shift, and go to state 617
    "!="   shift, and go to state 618
    "->"   shift, and go to state 619
    "??"   shift, and go to state 620
    "?."   shift, and go to state 621
    "?["   shift, and go to state 622
    "<|"   shift, and go to state 623
    "|>"   shift, and go to state 624
    "<<<"  shift, and go to state 625
    ">>>"  shift, and go to state 626
    "&&"   shift, and go to state 627
    "||"   shift, and go to state 628
    "^^"   shift, and go to state 629
    ".."   shift, and go to state 630
    '?'    shift, and go to state 631
    '|'    shift, and go to state 632
    '^'    shift, and go to state 633
    '&'    shift, and go to state 634
    '<'    shift, and go to state 635
    '>'    shift, and go to state 636
    '-'    shift, and go to state 637
    '+'    shift, and go to state 638
    '*'    shift, and go to state 639
    '/'    shift, and go to state 640
    '%'    shift, and go to state 641
    '.'    shift, and go to state 642
    '['    shift, and go to state 643

    $default  reduce using rule 332 (expr_assign)


State 1089

  341 expr_assign: expr "<<=" expr .
  347 expr_method_call: expr . "->" "name" '(' ')'
  348                 | expr . "->" "name" '(' expr_list ')'
  358 expr_field: expr . '.' "name"
  359           | expr . '.' '.' "name"
  360           | expr . '.' "name" '(' ')'
  361           | expr . '.' "name" '(' expr_list ')'
  362           | expr . '.' basic_type_declaration '(' ')'
  363           | expr . '.' basic_type_declaration '(' expr_list ')'
  366           | expr . '.' $@21 error $@22
  388 expr: expr . "<<" expr
  389     | expr . ">>" expr
  390     | expr . "<<<" expr
  391     | expr . ">>>" expr
  392     | expr . '+' expr
  393     | expr . '-' expr
  394     | expr . '*' expr
  395     | expr . '/' expr
  396     | expr . '%' expr
  397     | expr . '<' expr
  398     | expr . '>' expr
  399     | expr . "==" expr
  400     | expr . "!=" expr
  401     | expr . "<=" expr
  402     | expr . ">=" expr
  403     | expr . '&' expr
  404     | expr . '|' expr
  405     | expr . '^' expr
  406     | expr . "&&" expr
  407     | expr . "||" expr
  408     | expr . "^^" expr
  409     | expr . ".." expr
  412     | expr . "++"
  413     | expr . "--"
  415     | expr . '[' expr ']'
  416     | expr . '.' '[' expr ']'
  417     | expr . "?[" expr ']'
  418     | expr . '.' "?[" expr ']'
  419     | expr . "?." "name"
  420     | expr . '.' "?." "name"
  429     | expr . "??" expr
  430     | expr . '?' expr ':' expr
  433     | expr . "is" "type" '<' $@23 type_declaration_no_options '>' $@24
  434     | expr . "is" basic_type_declaration
  435     | expr . "is" "name"
  436     | expr . "as" "name"
  439     | expr . "as" "type" '<' $@25 type_declaration '>' $@26
  440     | expr . "as" basic_type_declaration
  441     | expr . '?' "as" "name"
  444     | expr . '?' "as" "type" '<' $@27 type_declaration '>' $@28
  445     | expr . '?' "as" basic_type_declaration
  453     | expr . "<|" expr
  454     | expr . "|>" expr
  455     | expr . "|>" basic_type_declaration
  466 expr_mtag: expr . '.' "$f" '(' expr ')'
  467          | expr . "?." "$f" '(' expr ')'
  468          | expr . '.' '.' "$f" '(' expr ')'
  469          | expr . '.' "?." "$f" '(' expr ')'
  470          | expr . "as" "$f" '(' expr ')'
  471          | expr . '?' "as" "$f" '(' expr ')'
  472          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 609
    "as"   shift, and go to state 610
    "<<"   shift, and go to state 611
    ">>"   shift, and go to state 612
    "++"   shift, and go to state 613
    "--"   shift, and go to state 614
    "<="   shift, and go to state 615
    ">="   shift, and go to state 616
    "=="   shift, and go to state 617
    "!="   shift, and go to state 618
    "->"   shift, and go to state 619
    "??"   shift, and go to state 620
    "?."   shift, and go to state 621
    "?["   shift, and go to state 622
    "<|"   shift, and go to state 623
    "|>"   shift, and go to state 624
    "<<<"  shift, and go to state 625
    ">>>"  shift, and go to state 626
    "&&"   shift, and go to state 627
    "||"   shift, and go to state 628
    "^^"   shift, and go to state 629
    ".."   shift, and go to state 630
    '?'    shift, and go to state 631
    '|'    shift, and go to state 632
    '^'    shift, and go to state 633
    '&'    shift, and go to state 634
    '<'    shift, and go to state 635
    '>'    shift, and go to state 636
    '-'    shift, and go to state 637
    '+'    shift, and go to state 638
    '*'    shift, and go to state 639
    '/'    shift, and go to state 640
    '%'    shift, and go to state 641
    '.'    shift, and go to state 642
    '['    shift, and go to state 643

    $default  reduce using rule 341 (expr_assign)


State 1090

  342 expr_assign: expr ">>=" expr .
  347 expr_method_call: expr . "->" "name" '(' ')'
  348                 | expr . "->" "name" '(' expr_list ')'
  358 expr_field: expr . '.' "name"
  359           | expr . '.' '.' "name"
  360           | expr . '.' "name" '(' ')'
  361           | expr . '.' "name" '(' expr_list ')'
  362           | expr . '.' basic_type_declaration '(' ')'
  363           | expr . '.' basic_type_declaration '(' expr_list ')'
  366           | expr . '.' $@21 error $@22
  388 expr: expr . "<<" expr
  389     | expr . ">>" expr
  390     | expr . "<<<" expr
  391     | expr . ">>>" expr
  392     | expr . '+' expr
  393     | expr . '-' expr
  394     | expr . '*' expr
  395     | expr . '/' expr
  396     | expr . '%' expr
  397     | expr . '<' expr
  398     | expr . '>' expr
  399     | expr . "==" expr
  400     | expr . "!=" expr
  401     | expr . "<=" expr
  402     | expr . ">=" expr
  403     | expr . '&' expr
  404     | expr . '|' expr
  405     | expr . '^' expr
  406     | expr . "&&" expr
  407     | expr . "||" expr
  408     | expr . "^^" expr
  409     | expr . ".." expr
  412     | expr . "++"
  413     | expr . "--"
  415     | expr . '[' expr ']'
  416     | expr . '.' '[' expr ']'
  417     | expr . "?[" expr ']'
  418     | expr . '.' "?[" expr ']'
  419     | expr . "?." "name"
  420     | expr . '.' "?." "name"
  429     | expr . "??" expr
  430     | expr . '?' expr ':' expr
  433     | expr . "is" "type" '<' $@23 type_declaration_no_options '>' $@24
  434     | expr . "is" basic_type_declaration
  435     | expr . "is" "name"
  436     | expr . "as" "name"
  439     | expr . "as" "type" '<' $@25 type_declaration '>' $@26
  440     | expr . "as" basic_type_declaration
  441     | expr . '?' "as" "name"
  444     | expr . '?' "as" "type" '<' $@27 type_declaration '>' $@28
  445     | expr . '?' "as" basic_type_declaration
  453     | expr . "<|" expr
  454     | expr . "|>" expr
  455     | expr . "|>" basic_type_declaration
  466 expr_mtag: expr . '.' "$f" '(' expr ')'
  467          | expr . "?." "$f" '(' expr ')'
  468          | expr . '.' '.' "$f" '(' expr ')'
  469          | expr . '.' "?." "$f" '(' expr ')'
  470          | expr . "as" "$f" '(' expr ')'
  471          | expr . '?' "as" "$f" '(' expr ')'
  472          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 609
    "as"   shift, and go to state 610
    "<<"   shift, and go to state 611
    ">>"   shift, and go to state 612
    "++"   shift, and go to state 613
    "--"   shift, and go to state 614
    "<="   shift, and go to state 615
    ">="   shift, and go to state 616
    "=="   shift, and go to state 617
    "!="   shift, and go to state 618
    "->"   shift, and go to state 619
    "??"   shift, and go to state 620
    "?."   shift, and go to state 621
    "?["   shift, and go to state 622
    "<|"   shift, and go to state 623
    "|>"   shift, and go to state 624
    "<<<"  shift, and go to state 625
    ">>>"  shift, and go to state 626
    "&&"   shift, and go to state 627
    "||"   shift, and go to state 628
    "^^"   shift, and go to state 629
    ".."   shift, and go to state 630
    '?'    shift, and go to state 631
    '|'    shift, and go to state 632
    '^'    shift, and go to state 633
    '&'    shift, and go to state 634
    '<'    shift, and go to state 635
    '>'    shift, and go to state 636
    '-'    shift, and go to state 637
    '+'    shift, and go to state 638
    '*'    shift, and go to state 639
    '/'    shift, and go to state 640
    '%'    shift, and go to state 641
    '.'    shift, and go to state 642
    '['    shift, and go to state 643

    $default  reduce using rule 342 (expr_assign)


State 1091

  328 expr_assign: expr "<-" expr .
  347 expr_method_call: expr . "->" "name" '(' ')'
  348                 | expr . "->" "name" '(' expr_list ')'
  358 expr_field: expr . '.' "name"
  359           | expr . '.' '.' "name"
  360           | expr . '.' "name" '(' ')'
  361           | expr . '.' "name" '(' expr_list ')'
  362           | expr . '.' basic_type_declaration '(' ')'
  363           | expr . '.' basic_type_declaration '(' expr_list ')'
  366           | expr . '.' $@21 error $@22
  388 expr: expr . "<<" expr
  389     | expr . ">>" expr
  390     | expr . "<<<" expr
  391     | expr . ">>>" expr
  392     | expr . '+' expr
  393     | expr . '-' expr
  394     | expr . '*' expr
  395     | expr . '/' expr
  396     | expr . '%' expr
  397     | expr . '<' expr
  398     | expr . '>' expr
  399     | expr . "==" expr
  400     | expr . "!=" expr
  401     | expr . "<=" expr
  402     | expr . ">=" expr
  403     | expr . '&' expr
  404     | expr . '|' expr
  405     | expr . '^' expr
  406     | expr . "&&" expr
  407     | expr . "||" expr
  408     | expr . "^^" expr
  409     | expr . ".." expr
  412     | expr . "++"
  413     | expr . "--"
  415     | expr . '[' expr ']'
  416     | expr . '.' '[' expr ']'
  417     | expr . "?[" expr ']'
  418     | expr . '.' "?[" expr ']'
  419     | expr . "?." "name"
  420     | expr . '.' "?." "name"
  429     | expr . "??" expr
  430     | expr . '?' expr ':' expr
  433     | expr . "is" "type" '<' $@23 type_declaration_no_options '>' $@24
  434     | expr . "is" basic_type_declaration
  435     | expr . "is" "name"
  436     | expr . "as" "name"
  439     | expr . "as" "type" '<' $@25 type_declaration '>' $@26
  440     | expr . "as" basic_type_declaration
  441     | expr . '?' "as" "name"
  444     | expr . '?' "as" "type" '<' $@27 type_declaration '>' $@28
  445     | expr . '?' "as" basic_type_declaration
  453     | expr . "<|" expr
  454     | expr . "|>" expr
  455     | expr . "|>" basic_type_declaration
  466 expr_mtag: expr . '.' "$f" '(' expr ')'
  467          | expr . "?." "$f" '(' expr ')'
  468          | expr . '.' '.' "$f" '(' expr ')'
  469          | expr . '.' "?." "$f" '(' expr ')'
  470          | expr . "as" "$f" '(' expr ')'
  471          | expr . '?' "as" "$f" '(' expr ')'
  472          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 609
    "as"   shift, and go to state 610
    "<<"   shift, and go to state 611
    ">>"   shift, and go to state 612
    "++"   shift, and go to state 613
    "--"   shift, and go to state 614
    "<="   shift, and go to state 615
    ">="   shift, and go to state 616
    "=="   shift, and go to state 617
    "!="   shift, and go to state 618
    "->"   shift, and go to state 619
    "??"   shift, and go to state 620
    "?."   shift, and go to state 621
    "?["   shift, and go to state 622
    "<|"   shift, and go to state 623
    "|>"   shift, and go to state 624
    "<<<"  shift, and go to state 625
    ">>>"  shift, and go to state 626
    "&&"   shift, and go to state 627
    "||"   shift, and go to state 628
    "^^"   shift, and go to state 629
    ".."   shift, and go to state 630
    '?'    shift, and go to state 631
    '|'    shift, and go to state 632
    '^'    shift, and go to state 633
    '&'    shift, and go to state 634
    '<'    shift, and go to state 635
    '>'    shift, and go to state 636
    '-'    shift, and go to state 637
    '+'    shift, and go to state 638
    '*'    shift, and go to state 639
    '/'    shift, and go to state 640
    '%'    shift, and go to state 641
    '.'    shift, and go to state 642
    '['    shift, and go to state 643

    $default  reduce using rule 328 (expr_assign)


State 1092

  329 expr_assign: expr ":=" expr .
  347 expr_method_call: expr . "->" "name" '(' ')'
  348                 | expr . "->" "name" '(' expr_list ')'
  358 expr_field: expr . '.' "name"
  359           | expr . '.' '.' "name"
  360           | expr . '.' "name" '(' ')'
  361           | expr . '.' "name" '(' expr_list ')'
  362           | expr . '.' basic_type_declaration '(' ')'
  363           | expr . '.' basic_type_declaration '(' expr_list ')'
  366           | expr . '.' $@21 error $@22
  388 expr: expr . "<<" expr
  389     | expr . ">>" expr
  390     | expr . "<<<" expr
  391     | expr . ">>>" expr
  392     | expr . '+' expr
  393     | expr . '-' expr
  394     | expr . '*' expr
  395     | expr . '/' expr
  396     | expr . '%' expr
  397     | expr . '<' expr
  398     | expr . '>' expr
  399     | expr . "==" expr
  400     | expr . "!=" expr
  401     | expr . "<=" expr
  402     | expr . ">=" expr
  403     | expr . '&' expr
  404     | expr . '|' expr
  405     | expr . '^' expr
  406     | expr . "&&" expr
  407     | expr . "||" expr
  408     | expr . "^^" expr
  409     | expr . ".." expr
  412     | expr . "++"
  413     | expr . "--"
  415     | expr . '[' expr ']'
  416     | expr . '.' '[' expr ']'
  417     | expr . "?[" expr ']'
  418     | expr . '.' "?[" expr ']'
  419     | expr . "?." "name"
  420     | expr . '.' "?." "name"
  429     | expr . "??" expr
  430     | expr . '?' expr ':' expr
  433     | expr . "is" "type" '<' $@23 type_declaration_no_options '>' $@24
  434     | expr . "is" basic_type_declaration
  435     | expr . "is" "name"
  436     | expr . "as" "name"
  439     | expr . "as" "type" '<' $@25 type_declaration '>' $@26
  440     | expr . "as" basic_type_declaration
  441     | expr . '?' "as" "name"
  444     | expr . '?' "as" "type" '<' $@27 type_declaration '>' $@28
  445     | expr . '?' "as" basic_type_declaration
  453     | expr . "<|" expr
  454     | expr . "|>" expr
  455     | expr . "|>" basic_type_declaration
  466 expr_mtag: expr . '.' "$f" '(' expr ')'
  467          | expr . "?." "$f" '(' expr ')'
  468          | expr . '.' '.' "$f" '(' expr ')'
  469          | expr . '.' "?." "$f" '(' expr ')'
  470          | expr . "as" "$f" '(' expr ')'
  471          | expr . '?' "as" "$f" '(' expr ')'
  472          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 609
    "as"   shift, and go to state 610
    "<<"   shift, and go to state 611
    ">>"   shift, and go to state 612
    "++"   shift, and go to state 613
    "--"   shift, and go to state 614
    "<="   shift, and go to state 615
    ">="   shift, and go to state 616
    "=="   shift, and go to state 617
    "!="   shift, and go to state 618
    "->"   shift, and go to state 619
    "??"   shift, and go to state 620
    "?."   shift, and go to state 621
    "?["   shift, and go to state 622
    "<|"   shift, and go to state 623
    "|>"   shift, and go to state 624
    "<<<"  shift, and go to state 625
    ">>>"  shift, and go to state 626
    "&&"   shift, and go to state 627
    "||"   shift, and go to state 628
    "^^"   shift, and go to state 629
    ".."   shift, and go to state 630
    '?'    shift, and go to state 631
    '|'    shift, and go to state 632
    '^'    shift, and go to state 633
    '&'    shift, and go to state 634
    '<'    shift, and go to state 635
    '>'    shift, and go to state 636
    '-'    shift, and go to state 637
    '+'    shift, and go to state 638
    '*'    shift, and go to state 639
    '/'    shift, and go to state 640
    '%'    shift, and go to state 641
    '.'    shift, and go to state 642
    '['    shift, and go to state 643

    $default  reduce using rule 329 (expr_assign)


State 1093

  343 expr_assign: expr "<<<=" expr .
  347 expr_method_call: expr . "->" "name" '(' ')'
  348                 | expr . "->" "name" '(' expr_list ')'
  358 expr_field: expr . '.' "name"
  359           | expr . '.' '.' "name"
  360           | expr . '.' "name" '(' ')'
  361           | expr . '.' "name" '(' expr_list ')'
  362           | expr . '.' basic_type_declaration '(' ')'
  363           | expr . '.' basic_type_declaration '(' expr_list ')'
  366           | expr . '.' $@21 error $@22
  388 expr: expr . "<<" expr
  389     | expr . ">>" expr
  390     | expr . "<<<" expr
  391     | expr . ">>>" expr
  392     | expr . '+' expr
  393     | expr . '-' expr
  394     | expr . '*' expr
  395     | expr . '/' expr
  396     | expr . '%' expr
  397     | expr . '<' expr
  398     | expr . '>' expr
  399     | expr . "==" expr
  400     | expr . "!=" expr
  401     | expr . "<=" expr
  402     | expr . ">=" expr
  403     | expr . '&' expr
  404     | expr . '|' expr
  405     | expr . '^' expr
  406     | expr . "&&" expr
  407     | expr . "||" expr
  408     | expr . "^^" expr
  409     | expr . ".." expr
  412     | expr . "++"
  413     | expr . "--"
  415     | expr . '[' expr ']'
  416     | expr . '.' '[' expr ']'
  417     | expr . "?[" expr ']'
  418     | expr . '.' "?[" expr ']'
  419     | expr . "?." "name"
  420     | expr . '.' "?." "name"
  429     | expr . "??" expr
  430     | expr . '?' expr ':' expr
  433     | expr . "is" "type" '<' $@23 type_declaration_no_options '>' $@24
  434     | expr . "is" basic_type_declaration
  435     | expr . "is" "name"
  436     | expr . "as" "name"
  439     | expr . "as" "type" '<' $@25 type_declaration '>' $@26
  440     | expr . "as" basic_type_declaration
  441     | expr . '?' "as" "name"
  444     | expr . '?' "as" "type" '<' $@27 type_declaration '>' $@28
  445     | expr . '?' "as" basic_type_declaration
  453     | expr . "<|" expr
  454     | expr . "|>" expr
  455     | expr . "|>" basic_type_declaration
  466 expr_mtag: expr . '.' "$f" '(' expr ')'
  467          | expr . "?." "$f" '(' expr ')'
  468          | expr . '.' '.' "$f" '(' expr ')'
  469          | expr . '.' "?." "$f" '(' expr ')'
  470          | expr . "as" "$f" '(' expr ')'
  471          | expr . '?' "as" "$f" '(' expr ')'
  472          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 609
    "as"   shift, and go to state 610
    "<<"   shift, and go to state 611
    ">>"   shift, and go to state 612
    "++"   shift, and go to state 613
    "--"   shift, and go to state 614
    "<="   shift, and go to state 615
    ">="   shift, and go to state 616
    "=="   shift, and go to state 617
    "!="   shift, and go to state 618
    "->"   shift, and go to state 619
    "??"   shift, and go to state 620
    "?."   shift, and go to state 621
    "?["   shift, and go to state 622
    "<|"   shift, and go to state 623
    "|>"   shift, and go to state 624
    "<<<"  shift, and go to state 625
    ">>>"  shift, and go to state 626
    "&&"   shift, and go to state 627
    "||"   shift, and go to state 628
    "^^"   shift, and go to state 629
    ".."   shift, and go to state 630
    '?'    shift, and go to state 631
    '|'    shift, and go to state 632
    '^'    shift, and go to state 633
    '&'    shift, and go to state 634
    '<'    shift, and go to state 635
    '>'    shift, and go to state 636
    '-'    shift, and go to state 637
    '+'    shift, and go to state 638
    '*'    shift, and go to state 639
    '/'    shift, and go to state 640
    '%'    shift, and go to state 641
    '.'    shift, and go to state 642
    '['    shift, and go to state 643

    $default  reduce using rule 343 (expr_assign)


State 1094

  344 expr_assign: expr ">>>=" expr .
  347 expr_method_call: expr . "->" "name" '(' ')'
  348                 | expr . "->" "name" '(' expr_list ')'
  358 expr_field: expr . '.' "name"
  359           | expr . '.' '.' "name"
  360           | expr . '.' "name" '(' ')'
  361           | expr . '.' "name" '(' expr_list ')'
  362           | expr . '.' basic_type_declaration '(' ')'
  363           | expr . '.' basic_type_declaration '(' expr_list ')'
  366           | expr . '.' $@21 error $@22
  388 expr: expr . "<<" expr
  389     | expr . ">>" expr
  390     | expr . "<<<" expr
  391     | expr . ">>>" expr
  392     | expr . '+' expr
  393     | expr . '-' expr
  394     | expr . '*' expr
  395     | expr . '/' expr
  396     | expr . '%' expr
  397     | expr . '<' expr
  398     | expr . '>' expr
  399     | expr . "==" expr
  400     | expr . "!=" expr
  401     | expr . "<=" expr
  402     | expr . ">=" expr
  403     | expr . '&' expr
  404     | expr . '|' expr
  405     | expr . '^' expr
  406     | expr . "&&" expr
  407     | expr . "||" expr
  408     | expr . "^^" expr
  409     | expr . ".." expr
  412     | expr . "++"
  413     | expr . "--"
  415     | expr . '[' expr ']'
  416     | expr . '.' '[' expr ']'
  417     | expr . "?[" expr ']'
  418     | expr . '.' "?[" expr ']'
  419     | expr . "?." "name"
  420     | expr . '.' "?." "name"
  429     | expr . "??" expr
  430     | expr . '?' expr ':' expr
  433     | expr . "is" "type" '<' $@23 type_declaration_no_options '>' $@24
  434     | expr . "is" basic_type_declaration
  435     | expr . "is" "name"
  436     | expr . "as" "name"
  439     | expr . "as" "type" '<' $@25 type_declaration '>' $@26
  440     | expr . "as" basic_type_declaration
  441     | expr . '?' "as" "name"
  444     | expr . '?' "as" "type" '<' $@27 type_declaration '>' $@28
  445     | expr . '?' "as" basic_type_declaration
  453     | expr . "<|" expr
  454     | expr . "|>" expr
  455     | expr . "|>" basic_type_declaration
  466 expr_mtag: expr . '.' "$f" '(' expr ')'
  467          | expr . "?." "$f" '(' expr ')'
  468          | expr . '.' '.' "$f" '(' expr ')'
  469          | expr . '.' "?." "$f" '(' expr ')'
  470          | expr . "as" "$f" '(' expr ')'
  471          | expr . '?' "as" "$f" '(' expr ')'
  472          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 609
    "as"   shift, and go to state 610
    "<<"   shift, and go to state 611
    ">>"   shift, and go to state 612
    "++"   shift, and go to state 613
    "--"   shift, and go to state 614
    "<="   shift, and go to state 615
    ">="   shift, and go to state 616
    "=="   shift, and go to state 617
    "!="   shift, and go to state 618
    "->"   shift, and go to state 619
    "??"   shift, and go to state 620
    "?."   shift, and go to state 621
    "?["   shift, and go to state 622
    "<|"   shift, and go to state 623
    "|>"   shift, and go to state 624
    "<<<"  shift, and go to state 625
    ">>>"  shift, and go to state 626
    "&&"   shift, and go to state 627
    "||"   shift, and go to state 628
    "^^"   shift, and go to state 629
    ".."   shift, and go to state 630
    '?'    shift, and go to state 631
    '|'    shift, and go to state 632
    '^'    shift, and go to state 633
    '&'    shift, and go to state 634
    '<'    shift, and go to state 635
    '>'    shift, and go to state 636
    '-'    shift, and go to state 637
    '+'    shift, and go to state 638
    '*'    shift, and go to state 639
    '/'    shift, and go to state 640
    '%'    shift, and go to state 641
    '.'    shift, and go to state 642
    '['    shift, and go to state 643

    $default  reduce using rule 344 (expr_assign)


State 1095

  333 expr_assign: expr "&&=" expr .
  347 expr_method_call: expr . "->" "name" '(' ')'
  348                 | expr . "->" "name" '(' expr_list ')'
  358 expr_field: expr . '.' "name"
  359           | expr . '.' '.' "name"
  360           | expr . '.' "name" '(' ')'
  361           | expr . '.' "name" '(' expr_list ')'
  362           | expr . '.' basic_type_declaration '(' ')'
  363           | expr . '.' basic_type_declaration '(' expr_list ')'
  366           | expr . '.' $@21 error $@22
  388 expr: expr . "<<" expr
  389     | expr . ">>" expr
  390     | expr . "<<<" expr
  391     | expr . ">>>" expr
  392     | expr . '+' expr
  393     | expr . '-' expr
  394     | expr . '*' expr
  395     | expr . '/' expr
  396     | expr . '%' expr
  397     | expr . '<' expr
  398     | expr . '>' expr
  399     | expr . "==" expr
  400     | expr . "!=" expr
  401     | expr . "<=" expr
  402     | expr . ">=" expr
  403     | expr . '&' expr
  404     | expr . '|' expr
  405     | expr . '^' expr
  406     | expr . "&&" expr
  407     | expr . "||" expr
  408     | expr . "^^" expr
  409     | expr . ".." expr
  412     | expr . "++"
  413     | expr . "--"
  415     | expr . '[' expr ']'
  416     | expr . '.' '[' expr ']'
  417     | expr . "?[" expr ']'
  418     | expr . '.' "?[" expr ']'
  419     | expr . "?." "name"
  420     | expr . '.' "?." "name"
  429     | expr . "??" expr
  430     | expr . '?' expr ':' expr
  433     | expr . "is" "type" '<' $@23 type_declaration_no_options '>' $@24
  434     | expr . "is" basic_type_declaration
  435     | expr . "is" "name"
  436     | expr . "as" "name"
  439     | expr . "as" "type" '<' $@25 type_declaration '>' $@26
  440     | expr . "as" basic_type_declaration
  441     | expr . '?' "as" "name"
  444     | expr . '?' "as" "type" '<' $@27 type_declaration '>' $@28
  445     | expr . '?' "as" basic_type_declaration
  453     | expr . "<|" expr
  454     | expr . "|>" expr
  455     | expr . "|>" basic_type_declaration
  466 expr_mtag: expr . '.' "$f" '(' expr ')'
  467          | expr . "?." "$f" '(' expr ')'
  468          | expr . '.' '.' "$f" '(' expr ')'
  469          | expr . '.' "?." "$f" '(' expr ')'
  470          | expr . "as" "$f" '(' expr ')'
  471          | expr . '?' "as" "$f" '(' expr ')'
  472          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 609
    "as"   shift, and go to state 610
    "<<"   shift, and go to state 611
    ">>"   shift, and go to state 612
    "++"   shift, and go to state 613
    "--"   shift, and go to state 614
    "<="   shift, and go to state 615
    ">="   shift, and go to state 616
    "=="   shift, and go to state 617
    "!="   shift, and go to state 618
    "->"   shift, and go to state 619
    "??"   shift, and go to state 620
    "?."   shift, and go to state 621
    "?["   shift, and go to state 622
    "<|"   shift, and go to state 623
    "|>"   shift, and go to state 624
    "<<<"  shift, and go to state 625
    ">>>"  shift, and go to state 626
    "&&"   shift, and go to state 627
    "||"   shift, and go to state 628
    "^^"   shift, and go to state 629
    ".."   shift, and go to state 630
    '?'    shift, and go to state 631
    '|'    shift, and go to state 632
    '^'    shift, and go to state 633
    '&'    shift, and go to state 634
    '<'    shift, and go to state 635
    '>'    shift, and go to state 636
    '-'    shift, and go to state 637
    '+'    shift, and go to state 638
    '*'    shift, and go to state 639
    '/'    shift, and go to state 640
    '%'    shift, and go to state 641
    '.'    shift, and go to state 642
    '['    shift, and go to state 643

    $default  reduce using rule 333 (expr_assign)


State 1096

  334 expr_assign: expr "||=" expr .
  347 expr_method_call: expr . "->" "name" '(' ')'
  348                 | expr . "->" "name" '(' expr_list ')'
  358 expr_field: expr . '.' "name"
  359           | expr . '.' '.' "name"
  360           | expr . '.' "name" '(' ')'
  361           | expr . '.' "name" '(' expr_list ')'
  362           | expr . '.' basic_type_declaration '(' ')'
  363           | expr . '.' basic_type_declaration '(' expr_list ')'
  366           | expr . '.' $@21 error $@22
  388 expr: expr . "<<" expr
  389     | expr . ">>" expr
  390     | expr . "<<<" expr
  391     | expr . ">>>" expr
  392     | expr . '+' expr
  393     | expr . '-' expr
  394     | expr . '*' expr
  395     | expr . '/' expr
  396     | expr . '%' expr
  397     | expr . '<' expr
  398     | expr . '>' expr
  399     | expr . "==" expr
  400     | expr . "!=" expr
  401     | expr . "<=" expr
  402     | expr . ">=" expr
  403     | expr . '&' expr
  404     | expr . '|' expr
  405     | expr . '^' expr
  406     | expr . "&&" expr
  407     | expr . "||" expr
  408     | expr . "^^" expr
  409     | expr . ".." expr
  412     | expr . "++"
  413     | expr . "--"
  415     | expr . '[' expr ']'
  416     | expr . '.' '[' expr ']'
  417     | expr . "?[" expr ']'
  418     | expr . '.' "?[" expr ']'
  419     | expr . "?." "name"
  420     | expr . '.' "?." "name"
  429     | expr . "??" expr
  430     | expr . '?' expr ':' expr
  433     | expr . "is" "type" '<' $@23 type_declaration_no_options '>' $@24
  434     | expr . "is" basic_type_declaration
  435     | expr . "is" "name"
  436     | expr . "as" "name"
  439     | expr . "as" "type" '<' $@25 type_declaration '>' $@26
  440     | expr . "as" basic_type_declaration
  441     | expr . '?' "as" "name"
  444     | expr . '?' "as" "type" '<' $@27 type_declaration '>' $@28
  445     | expr . '?' "as" basic_type_declaration
  453     | expr . "<|" expr
  454     | expr . "|>" expr
  455     | expr . "|>" basic_type_declaration
  466 expr_mtag: expr . '.' "$f" '(' expr ')'
  467          | expr . "?." "$f" '(' expr ')'
  468          | expr . '.' '.' "$f" '(' expr ')'
  469          | expr . '.' "?." "$f" '(' expr ')'
  470          | expr . "as" "$f" '(' expr ')'
  471          | expr . '?' "as" "$f" '(' expr ')'
  472          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 609
    "as"   shift, and go to state 610
    "<<"   shift, and go to state 611
    ">>"   shift, and go to state 612
    "++"   shift, and go to state 613
    "--"   shift, and go to state 614
    "<="   shift, and go to state 615
    ">="   shift, and go to state 616
    "=="   shift, and go to state 617
    "!="   shift, and go to state 618
    "->"   shift, and go to state 619
    "??"   shift, and go to state 620
    "?."   shift, and go to state 621
    "?["   shift, and go to state 622
    "<|"   shift, and go to state 623
    "|>"   shift, and go to state 624
    "<<<"  shift, and go to state 625
    ">>>"  shift, and go to state 626
    "&&"   shift, and go to state 627
    "||"   shift, and go to state 628
    "^^"   shift, and go to state 629
    ".."   shift, and go to state 630
    '?'    shift, and go to state 631
    '|'    shift, and go to state 632
    '^'    shift, and go to state 633
    '&'    shift, and go to state 634
    '<'    shift, and go to state 635
    '>'    shift, and go to state 636
    '-'    shift, and go to state 637
    '+'    shift, and go to state 638
    '*'    shift, and go to state 639
    '/'    shift, and go to state 640
    '%'    shift, and go to state 641
    '.'    shift, and go to state 642
    '['    shift, and go to state 643

    $default  reduce using rule 334 (expr_assign)


State 1097

  335 expr_assign: expr "^^=" expr .
  347 expr_method_call: expr . "->" "name" '(' ')'
  348                 | expr . "->" "name" '(' expr_list ')'
  358 expr_field: expr . '.' "name"
  359           | expr . '.' '.' "name"
  360           | expr . '.' "name" '(' ')'
  361           | expr . '.' "name" '(' expr_list ')'
  362           | expr . '.' basic_type_declaration '(' ')'
  363           | expr . '.' basic_type_declaration '(' expr_list ')'
  366           | expr . '.' $@21 error $@22
  388 expr: expr . "<<" expr
  389     | expr . ">>" expr
  390     | expr . "<<<" expr
  391     | expr . ">>>" expr
  392     | expr . '+' expr
  393     | expr . '-' expr
  394     | expr . '*' expr
  395     | expr . '/' expr
  396     | expr . '%' expr
  397     | expr . '<' expr
  398     | expr . '>' expr
  399     | expr . "==" expr
  400     | expr . "!=" expr
  401     | expr . "<=" expr
  402     | expr . ">=" expr
  403     | expr . '&' expr
  404     | expr . '|' expr
  405     | expr . '^' expr
  406     | expr . "&&" expr
  407     | expr . "||" expr
  408     | expr . "^^" expr
  409     | expr . ".." expr
  412     | expr . "++"
  413     | expr . "--"
  415     | expr . '[' expr ']'
  416     | expr . '.' '[' expr ']'
  417     | expr . "?[" expr ']'
  418     | expr . '.' "?[" expr ']'
  419     | expr . "?." "name"
  420     | expr . '.' "?." "name"
  429     | expr . "??" expr
  430     | expr . '?' expr ':' expr
  433     | expr . "is" "type" '<' $@23 type_declaration_no_options '>' $@24
  434     | expr . "is" basic_type_declaration
  435     | expr . "is" "name"
  436     | expr . "as" "name"
  439     | expr . "as" "type" '<' $@25 type_declaration '>' $@26
  440     | expr . "as" basic_type_declaration
  441     | expr . '?' "as" "name"
  444     | expr . '?' "as" "type" '<' $@27 type_declaration '>' $@28
  445     | expr . '?' "as" basic_type_declaration
  453     | expr . "<|" expr
  454     | expr . "|>" expr
  455     | expr . "|>" basic_type_declaration
  466 expr_mtag: expr . '.' "$f" '(' expr ')'
  467          | expr . "?." "$f" '(' expr ')'
  468          | expr . '.' '.' "$f" '(' expr ')'
  469          | expr . '.' "?." "$f" '(' expr ')'
  470          | expr . "as" "$f" '(' expr ')'
  471          | expr . '?' "as" "$f" '(' expr ')'
  472          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 609
    "as"   shift, and go to state 610
    "<<"   shift, and go to state 611
    ">>"   shift, and go to state 612
    "++"   shift, and go to state 613
    "--"   shift, and go to state 614
    "<="   shift, and go to state 615
    ">="   shift, and go to state 616
    "=="   shift, and go to state 617
    "!="   shift, and go to state 618
    "->"   shift, and go to state 619
    "??"   shift, and go to state 620
    "?."   shift, and go to state 621
    "?["   shift, and go to state 622
    "<|"   shift, and go to state 623
    "|>"   shift, and go to state 624
    "<<<"  shift, and go to state 625
    ">>>"  shift, and go to state 626
    "&&"   shift, and go to state 627
    "||"   shift, and go to state 628
    "^^"   shift, and go to state 629
    ".."   shift, and go to state 630
    '?'    shift, and go to state 631
    '|'    shift, and go to state 632
    '^'    shift, and go to state 633
    '&'    shift, and go to state 634
    '<'    shift, and go to state 635
    '>'    shift, and go to state 636
    '-'    shift, and go to state 637
    '+'    shift, and go to state 638
    '*'    shift, and go to state 639
    '/'    shift, and go to state 640
    '%'    shift, and go to state 641
    '.'    shift, and go to state 642
    '['    shift, and go to state 643

    $default  reduce using rule 335 (expr_assign)


State 1098

  327 expr_assign: expr '=' expr .
  347 expr_method_call: expr . "->" "name" '(' ')'
  348                 | expr . "->" "name" '(' expr_list ')'
  358 expr_field: expr . '.' "name"
  359           | expr . '.' '.' "name"
  360           | expr . '.' "name" '(' ')'
  361           | expr . '.' "name" '(' expr_list ')'
  362           | expr . '.' basic_type_declaration '(' ')'
  363           | expr . '.' basic_type_declaration '(' expr_list ')'
  366           | expr . '.' $@21 error $@22
  388 expr: expr . "<<" expr
  389     | expr . ">>" expr
  390     | expr . "<<<" expr
  391     | expr . ">>>" expr
  392     | expr . '+' expr
  393     | expr . '-' expr
  394     | expr . '*' expr
  395     | expr . '/' expr
  396     | expr . '%' expr
  397     | expr . '<' expr
  398     | expr . '>' expr
  399     | expr . "==" expr
  400     | expr . "!=" expr
  401     | expr . "<=" expr
  402     | expr . ">=" expr
  403     | expr . '&' expr
  404     | expr . '|' expr
  405     | expr . '^' expr
  406     | expr . "&&" expr
  407     | expr . "||" expr
  408     | expr . "^^" expr
  409     | expr . ".." expr
  412     | expr . "++"
  413     | expr . "--"
  415     | expr . '[' expr ']'
  416     | expr . '.' '[' expr ']'
  417     | expr . "?[" expr ']'
  418     | expr . '.' "?[" expr ']'
  419     | expr . "?." "name"
  420     | expr . '.' "?." "name"
  429     | expr . "??" expr
  430     | expr . '?' expr ':' expr
  433     | expr . "is" "type" '<' $@23 type_declaration_no_options '>' $@24
  434     | expr . "is" basic_type_declaration
  435     | expr . "is" "name"
  436     | expr . "as" "name"
  439     | expr . "as" "type" '<' $@25 type_declaration '>' $@26
  440     | expr . "as" basic_type_declaration
  441     | expr . '?' "as" "name"
  444     | expr . '?' "as" "type" '<' $@27 type_declaration '>' $@28
  445     | expr . '?' "as" basic_type_declaration
  453     | expr . "<|" expr
  454     | expr . "|>" expr
  455     | expr . "|>" basic_type_declaration
  466 expr_mtag: expr . '.' "$f" '(' expr ')'
  467          | expr . "?." "$f" '(' expr ')'
  468          | expr . '.' '.' "$f" '(' expr ')'
  469          | expr . '.' "?." "$f" '(' expr ')'
  470          | expr . "as" "$f" '(' expr ')'
  471          | expr . '?' "as" "$f" '(' expr ')'
  472          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 609
    "as"   shift, and go to state 610
    "<<"   shift, and go to state 611
    ">>"   shift, and go to state 612
    "++"   shift, and go to state 613
    "--"   shift, and go to state 614
    "<="   shift, and go to state 615
    ">="   shift, and go to state 616
    "=="   shift, and go to state 617
    "!="   shift, and go to state 618
    "->"   shift, and go to state 619
    "??"   shift, and go to state 620
    "?."   shift, and go to state 621
    "?["   shift, and go to state 622
    "<|"   shift, and go to state 623
    "|>"   shift, and go to state 624
    "<<<"  shift, and go to state 625
    ">>>"  shift, and go to state 626
    "&&"   shift, and go to state 627
    "||"   shift, and go to state 628
    "^^"   shift, and go to state 629
    ".."   shift, and go to state 630
    '?'    shift, and go to state 631
    '|'    shift, and go to state 632
    '^'    shift, and go to state 633
    '&'    shift, and go to state 634
    '<'    shift, and go to state 635
    '>'    shift, and go to state 636
    '-'    shift, and go to state 637
    '+'    shift, and go to state 638
    '*'    shift, and go to state 639
    '/'    shift, and go to state 640
    '%'    shift, and go to state 641
    '.'    shift, and go to state 642
    '['    shift, and go to state 643

    $default  reduce using rule 327 (expr_assign)


State 1099

  570 enum_declaration: optional_annotation_list "enum" optional_public_or_private_enum enum_name optional_enum_basic_type_declaration "begin of code block" $@35 enum_list optional_comma $@36 "end of code block" .

    $default  reduce using rule 570 (enum_declaration)


State 1100

  482 optional_public_or_private_member_variable: "public" .

    $default  reduce using rule 482 (optional_public_or_private_member_variable)


State 1101

  483 optional_public_or_private_member_variable: "private" .

    $default  reduce using rule 483 (optional_public_or_private_member_variable)


State 1102

  491 struct_variable_declaration_list: struct_variable_declaration_list optional_annotation_list "def" optional_public_or_private_member_variable . "abstract" optional_constant $@30 function_declaration_header "end of expression"
  493                                 | struct_variable_declaration_list optional_annotation_list "def" optional_public_or_private_member_variable . optional_static_member_variable optional_override optional_constant $@31 function_declaration_header expression_block

    "abstract"  shift, and go to state 1206
    "static"    shift, and go to state 1103

    $default  reduce using rule 484 (optional_static_member_variable)

    optional_static_member_variable  go to state 1207


State 1103

  485 optional_static_member_variable: "static" .

    $default  reduce using rule 485 (optional_static_member_variable)


State 1104

  486 structure_variable_declaration: optional_field_annotation optional_static_member_variable . optional_override optional_public_or_private_member_variable variable_declaration

    "override"  shift, and go to state 1208
    "sealed"    shift, and go to state 1209

    $default  reduce using rule 476 (optional_override)

    optional_override  go to state 1210


State 1105

  489 struct_variable_declaration_list: struct_variable_declaration_list $@29 structure_variable_declaration "end of expression" .

    $default  reduce using rule 489 (struct_variable_declaration_list)


State 1106

  524 let_variable_name_with_pos_list: "$i" '(' expr ')' .

    $default  reduce using rule 524 (let_variable_name_with_pos_list)


State 1107

  527 let_variable_name_with_pos_list: let_variable_name_with_pos_list ',' "name" "aka" . "name"

    "name"  shift, and go to state 1211


State 1108

  533 let_variable_declaration: let_variable_name_with_pos_list ':' type_declaration_no_options "end of expression" .

    $default  reduce using rule 533 (let_variable_declaration)


State 1109

  534 let_variable_declaration: let_variable_name_with_pos_list ':' type_declaration_no_options copy_or_move_or_clone . expr "end of expression"

    "struct"                          shift, and go to state 409
    "class"                           shift, and go to state 410
    "true"                            shift, and go to state 411
    "false"                           shift, and go to state 412
    "new"                             shift, and go to state 413
    "typeinfo"                        shift, and go to state 414
    "type"                            shift, and go to state 415
    "array"                           shift, and go to state 416
    "null"                            shift, and go to state 417
    "table"                           shift, and go to state 418
    "deref"                           shift, and go to state 419
    "cast"                            shift, and go to state 420
    "upcast"                          shift, and go to state 421
    "addr"                            shift, and go to state 422
    "reinterpret"                     shift, and go to state 423
    "unsafe"                          shift, and go to state 424
    "fixed_array"                     shift, and go to state 425
    "default"                         shift, and go to state 426
    "bool"                            shift, and go to state 225
    "void"                            shift, and go to state 226
    "string"                          shift, and go to state 227
    "int"                             shift, and go to state 229
    "int2"                            shift, and go to state 230
    "int3"                            shift, and go to state 231
    "int4"                            shift, and go to state 232
    "uint"                            shift, and go to state 233
    "bitfield"                        shift, and go to state 427
    "uint2"                           shift, and go to state 235
    "uint3"                           shift, and go to state 236
    "uint4"                           shift, and go to state 237
    "float"                           shift, and go to state 238
    "float2"                          shift, and go to state 239
    "float3"                          shift, and go to state 240
    "float4"                          shift, and go to state 241
    "range"                           shift, and go to state 242
    "urange"                          shift, and go to state 243
    "range64"                         shift, and go to state 244
    "urange64"                        shift, and go to state 245
    "int64"                           shift, and go to state 247
    "uint64"                          shift, and go to state 248
    "double"                          shift, and go to state 249
    "int8"                            shift, and go to state 252
    "uint8"                           shift, and go to state 253
    "int16"                           shift, and go to state 254
    "uint16"                          shift, and go to state 255
    "tuple"                           shift, and go to state 428
    "variant"                         shift, and go to state 429
    "generator"                       shift, and go to state 430
    "++"                              shift, and go to state 431
    "--"                              shift, and go to state 432
    "::"                              shift, and go to state 55
    "$$"                              shift, and go to state 433
    "$i"                              shift, and go to state 434
    "$v"                              shift, and go to state 435
    "$b"                              shift, and go to state 436
    "$a"                              shift, and go to state 437
    "$c"                              shift, and go to state 438
    "..."                             shift, and go to state 439
    "integer constant"                shift, and go to state 440
    "long integer constant"           shift, and go to state 441
    "unsigned integer constant"       shift, and go to state 442
    "unsigned long integer constant"  shift, and go to state 443
    "unsigned int8 constant"          shift, and go to state 444
    "floating point constant"         shift, and go to state 445
    "double constant"                 shift, and go to state 446
    "name"                            shift, and go to state 56
    "start of the string"             shift, and go to state 447
    "begin of code block"             shift, and go to state 448
    '-'                               shift, and go to state 449
    '+'                               shift, and go to state 450
    '*'                               shift, and go to state 451
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 452
    '!'                               shift, and go to state 453
    '['                               shift, and go to state 454
    '('                               shift, and go to state 455
    '$'                               shift, and go to state 456
    '@'                               shift, and go to state 457

    string_builder          go to state 458
    expr_reader             go to state 459
    expr_call_pipe          go to state 460
    name_in_namespace       go to state 461
    expr_new                go to state 462
    expr_cast               go to state 463
    expr_type_decl          go to state 464
    expr_type_info          go to state 465
    block_or_lambda         go to state 466
    expr_full_block         go to state 467
    expr_numeric_const      go to state 468
    expr_named_call         go to state 469
    expr_method_call        go to state 470
    func_addr_expr          go to state 471
    expr_field              go to state 472
    expr_call               go to state 473
    expr                    go to state 1212
    expr_mtag               go to state 475
    basic_type_declaration  go to state 476
    make_decl               go to state 477
    make_struct_decl        go to state 478
    make_tuple_call         go to state 479
    make_dim_decl           go to state 480
    make_table_decl         go to state 481
    array_comprehension     go to state 482


State 1110

  347 expr_method_call: expr . "->" "name" '(' ')'
  348                 | expr . "->" "name" '(' expr_list ')'
  358 expr_field: expr . '.' "name"
  359           | expr . '.' '.' "name"
  360           | expr . '.' "name" '(' ')'
  361           | expr . '.' "name" '(' expr_list ')'
  362           | expr . '.' basic_type_declaration '(' ')'
  363           | expr . '.' basic_type_declaration '(' expr_list ')'
  366           | expr . '.' $@21 error $@22
  388 expr: expr . "<<" expr
  389     | expr . ">>" expr
  390     | expr . "<<<" expr
  391     | expr . ">>>" expr
  392     | expr . '+' expr
  393     | expr . '-' expr
  394     | expr . '*' expr
  395     | expr . '/' expr
  396     | expr . '%' expr
  397     | expr . '<' expr
  398     | expr . '>' expr
  399     | expr . "==" expr
  400     | expr . "!=" expr
  401     | expr . "<=" expr
  402     | expr . ">=" expr
  403     | expr . '&' expr
  404     | expr . '|' expr
  405     | expr . '^' expr
  406     | expr . "&&" expr
  407     | expr . "||" expr
  408     | expr . "^^" expr
  409     | expr . ".." expr
  412     | expr . "++"
  413     | expr . "--"
  415     | expr . '[' expr ']'
  416     | expr . '.' '[' expr ']'
  417     | expr . "?[" expr ']'
  418     | expr . '.' "?[" expr ']'
  419     | expr . "?." "name"
  420     | expr . '.' "?." "name"
  429     | expr . "??" expr
  430     | expr . '?' expr ':' expr
  433     | expr . "is" "type" '<' $@23 type_declaration_no_options '>' $@24
  434     | expr . "is" basic_type_declaration
  435     | expr . "is" "name"
  436     | expr . "as" "name"
  439     | expr . "as" "type" '<' $@25 type_declaration '>' $@26
  440     | expr . "as" basic_type_declaration
  441     | expr . '?' "as" "name"
  444     | expr . '?' "as" "type" '<' $@27 type_declaration '>' $@28
  445     | expr . '?' "as" basic_type_declaration
  453     | expr . "<|" expr
  454     | expr . "|>" expr
  455     | expr . "|>" basic_type_declaration
  466 expr_mtag: expr . '.' "$f" '(' expr ')'
  467          | expr . "?." "$f" '(' expr ')'
  468          | expr . '.' '.' "$f" '(' expr ')'
  469          | expr . '.' "?." "$f" '(' expr ')'
  470          | expr . "as" "$f" '(' expr ')'
  471          | expr . '?' "as" "$f" '(' expr ')'
  472          | expr . "is" "$f" '(' expr ')'
  535 let_variable_declaration: let_variable_name_with_pos_list optional_ref copy_or_move_or_clone expr . "end of expression"

    "is"                 shift, and go to state 609
    "as"                 shift, and go to state 610
    "<<"                 shift, and go to state 611
    ">>"                 shift, and go to state 612
    "++"                 shift, and go to state 613
    "--"                 shift, and go to state 614
    "<="                 shift, and go to state 615
    ">="                 shift, and go to state 616
    "=="                 shift, and go to state 617
    "!="                 shift, and go to state 618
    "->"                 shift, and go to state 619
    "??"                 shift, and go to state 620
    "?."                 shift, and go to state 621
    "?["                 shift, and go to state 622
    "<|"                 shift, and go to state 623
    "|>"                 shift, and go to state 624
    "<<<"                shift, and go to state 625
    ">>>"                shift, and go to state 626
    "&&"                 shift, and go to state 627
    "||"                 shift, and go to state 628
    "^^"                 shift, and go to state 629
    ".."                 shift, and go to state 630
    "end of expression"  shift, and go to state 1213
    '?'                  shift, and go to state 631
    '|'                  shift, and go to state 632
    '^'                  shift, and go to state 633
    '&'                  shift, and go to state 634
    '<'                  shift, and go to state 635
    '>'                  shift, and go to state 636
    '-'                  shift, and go to state 637
    '+'                  shift, and go to state 638
    '*'                  shift, and go to state 639
    '/'                  shift, and go to state 640
    '%'                  shift, and go to state 641
    '.'                  shift, and go to state 642
    '['                  shift, and go to state 643


State 1111

  537 global_let_variable_declaration: global_let_variable_name_with_pos_list ':' type_declaration_no_options copy_or_move_or_clone expr "end of expression" .

    $default  reduce using rule 537 (global_let_variable_declaration)


State 1112

  751 make_struct_decl: "struct" '<' $@77 type_declaration_no_options '>' . $@78 '(' use_initializer optional_make_struct_dim_decl ')'

    $default  reduce using rule 750 ($@78)

    $@78  go to state 1214


State 1113

  754 make_struct_decl: "class" '<' $@79 type_declaration_no_options '>' . $@80 '(' use_initializer optional_make_struct_dim_decl ')'

    $default  reduce using rule 753 ($@80)

    $@80  go to state 1215


State 1114

  254 new_type_declaration: '<' $@7 type_declaration '>' . $@8

    $default  reduce using rule 253 ($@8)

    $@8  go to state 1216


State 1115

  260 expr_new: "new" new_type_declaration '(' "uninitialized" make_struct_single . ')'

    ')'  shift, and go to state 1217


State 1116

  258 expr_new: "new" new_type_declaration '(' expr_list ')' .

    $default  reduce using rule 258 (expr_new)


State 1117

  259 expr_new: "new" new_type_declaration '(' make_struct_single ')' .

    $default  reduce using rule 259 (expr_new)


State 1118

  257 expr_new: "new" new_type_declaration '(' use_initializer ')' .

    $default  reduce using rule 257 (expr_new)


State 1119

  297 expr_type_info: "typeinfo" name_in_namespace '<' "name" '>' . '(' expr ')'

    '('  shift, and go to state 1218


State 1120

  298 expr_type_info: "typeinfo" name_in_namespace '<' "name" c_or_s . "name" '>' '(' expr ')'

    "name"  shift, and go to state 1219


State 1121

  296 expr_type_info: "typeinfo" name_in_namespace '(' expr ')' .

    $default  reduce using rule 296 (expr_type_info)


State 1122

  295 expr_type_decl: "type" '<' $@15 type_declaration '>' . $@16

    $default  reduce using rule 294 ($@16)

    $@16  go to state 1220


State 1123

  770 make_dim_decl: "array" "struct" '<' $@87 type_declaration_no_options . '>' $@88 '(' use_initializer optional_make_struct_dim_decl ')'

    '>'  shift, and go to state 1221


State 1124

  773 make_dim_decl: "array" "tuple" '<' $@89 type_declaration_no_options . '>' $@90 '(' use_initializer optional_make_struct_dim_decl ')'

    '>'  shift, and go to state 1222


State 1125

  776 make_dim_decl: "array" "variant" '<' $@91 type_declaration_no_options . '>' $@92 '(' make_variant_dim ')'

    '>'  shift, and go to state 1223


State 1126

  780 make_dim_decl: "array" '<' $@93 type_declaration_no_options '>' . $@94 '(' optional_expr_list ')'

    $default  reduce using rule 779 ($@94)

    $@94  go to state 1224


State 1127

  777 make_dim_decl: "array" '(' expr_list optional_comma ')' .

    $default  reduce using rule 777 (make_dim_decl)


State 1128

  789 make_table_decl: "table" '<' type_declaration_no_options '>' '(' . optional_expr_map_tuple_list ')'

    "struct"                          shift, and go to state 409
    "class"                           shift, and go to state 410
    "true"                            shift, and go to state 411
    "false"                           shift, and go to state 412
    "new"                             shift, and go to state 413
    "typeinfo"                        shift, and go to state 414
    "type"                            shift, and go to state 415
    "array"                           shift, and go to state 416
    "null"                            shift, and go to state 417
    "table"                           shift, and go to state 418
    "deref"                           shift, and go to state 419
    "cast"                            shift, and go to state 420
    "upcast"                          shift, and go to state 421
    "addr"                            shift, and go to state 422
    "reinterpret"                     shift, and go to state 423
    "unsafe"                          shift, and go to state 424
    "fixed_array"                     shift, and go to state 425
    "default"                         shift, and go to state 426
    "bool"                            shift, and go to state 225
    "void"                            shift, and go to state 226
    "string"                          shift, and go to state 227
    "int"                             shift, and go to state 229
    "int2"                            shift, and go to state 230
    "int3"                            shift, and go to state 231
    "int4"                            shift, and go to state 232
    "uint"                            shift, and go to state 233
    "bitfield"                        shift, and go to state 427
    "uint2"                           shift, and go to state 235
    "uint3"                           shift, and go to state 236
    "uint4"                           shift, and go to state 237
    "float"                           shift, and go to state 238
    "float2"                          shift, and go to state 239
    "float3"                          shift, and go to state 240
    "float4"                          shift, and go to state 241
    "range"                           shift, and go to state 242
    "urange"                          shift, and go to state 243
    "range64"                         shift, and go to state 244
    "urange64"                        shift, and go to state 245
    "int64"                           shift, and go to state 247
    "uint64"                          shift, and go to state 248
    "double"                          shift, and go to state 249
    "int8"                            shift, and go to state 252
    "uint8"                           shift, and go to state 253
    "int16"                           shift, and go to state 254
    "uint16"                          shift, and go to state 255
    "tuple"                           shift, and go to state 428
    "variant"                         shift, and go to state 429
    "generator"                       shift, and go to state 430
    "++"                              shift, and go to state 431
    "--"                              shift, and go to state 432
    "::"                              shift, and go to state 55
    "$$"                              shift, and go to state 433
    "$i"                              shift, and go to state 434
    "$v"                              shift, and go to state 435
    "$b"                              shift, and go to state 436
    "$a"                              shift, and go to state 437
    "$c"                              shift, and go to state 438
    "..."                             shift, and go to state 439
    "integer constant"                shift, and go to state 440
    "long integer constant"           shift, and go to state 441
    "unsigned integer constant"       shift, and go to state 442
    "unsigned long integer constant"  shift, and go to state 443
    "unsigned int8 constant"          shift, and go to state 444
    "floating point constant"         shift, and go to state 445
    "double constant"                 shift, and go to state 446
    "name"                            shift, and go to state 56
    "start of the string"             shift, and go to state 447
    "begin of code block"             shift, and go to state 448
    '-'                               shift, and go to state 449
    '+'                               shift, and go to state 450
    '*'                               shift, and go to state 451
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 452
    '!'                               shift, and go to state 453
    '['                               shift, and go to state 454
    '('                               shift, and go to state 455
    '$'                               shift, and go to state 456
    '@'                               shift, and go to state 457

    $default  reduce using rule 243 (optional_expr_map_tuple_list)

    string_builder                go to state 458
    expr_reader                   go to state 459
    expr_call_pipe                go to state 460
    optional_expr_map_tuple_list  go to state 1225
    name_in_namespace             go to state 461
    expr_new                      go to state 462
    expr_cast                     go to state 463
    expr_type_decl                go to state 464
    expr_type_info                go to state 465
    block_or_lambda               go to state 466
    expr_full_block               go to state 467
    expr_numeric_const            go to state 468
    expr_named_call               go to state 469
    expr_method_call              go to state 470
    func_addr_expr                go to state 471
    expr_field                    go to state 472
    expr_call                     go to state 473
    expr                          go to state 589
    expr_mtag                     go to state 475
    basic_type_declaration        go to state 476
    make_decl                     go to state 477
    make_struct_decl              go to state 478
    make_map_tuple                go to state 590
    make_tuple_call               go to state 479
    make_dim_decl                 go to state 480
    expr_map_tuple_list           go to state 1226
    make_table_decl               go to state 481
    array_comprehension           go to state 482


State 1129

  790 make_table_decl: "table" '<' type_declaration_no_options c_or_s type_declaration_no_options . '>' '(' optional_expr_map_tuple_list ')'

    '>'  shift, and go to state 1227


State 1130

  788 make_table_decl: "table" '(' expr_map_tuple_list optional_comma ')' .

    $default  reduce using rule 788 (make_table_decl)


State 1131

  286 expr_cast: "cast" '<' $@9 type_declaration_no_options '>' . $@10 expr

    $default  reduce using rule 285 ($@10)

    $@10  go to state 1228


State 1132

  289 expr_cast: "upcast" '<' $@11 type_declaration_no_options '>' . $@12 expr

    $default  reduce using rule 288 ($@12)

    $@12  go to state 1229


State 1133

  292 expr_cast: "reinterpret" '<' $@13 type_declaration_no_options '>' . $@14 expr

    $default  reduce using rule 291 ($@14)

    $@14  go to state 1230


State 1134

  784 make_dim_decl: "fixed_array" '<' $@95 type_declaration_no_options '>' . $@96 '(' expr_list optional_comma ')'

    $default  reduce using rule 783 ($@96)

    $@96  go to state 1231


State 1135

  781 make_dim_decl: "fixed_array" '(' expr_list optional_comma ')' .

    $default  reduce using rule 781 (make_dim_decl)


State 1136

  760 make_struct_decl: "default" '<' $@83 type_declaration_no_options '>' . $@84 use_initializer

    $default  reduce using rule 759 ($@84)

    $@84  go to state 1232


State 1137

  766 make_tuple_call: "tuple" '<' $@85 type_declaration_no_options '>' . $@86 '(' use_initializer optional_make_struct_dim_decl ')'

    $default  reduce using rule 765 ($@86)

    $@86  go to state 1233


State 1138

  763 make_tuple_call: "tuple" '(' expr_list optional_comma ')' .

    $default  reduce using rule 763 (make_tuple_call)


State 1139

  757 make_struct_decl: "variant" '<' $@81 type_declaration_no_options '>' . $@82 '(' make_variant_dim ')'

    $default  reduce using rule 756 ($@82)

    $@82  go to state 1234


State 1140

  426 expr: "generator" '<' type_declaration_no_options '>' optional_capture_list . '(' ')'
  427     | "generator" '<' type_declaration_no_options '>' optional_capture_list . '(' expr ')'
  428     | "generator" '<' type_declaration_no_options '>' optional_capture_list . expression_block

    '('  shift, and go to state 1235

    $default  reduce using rule 216 ($@5)

    expression_block  go to state 1236
    $@5               go to state 327


State 1141

  464 expr_mtag: "$c" '(' expr ')' '(' . ')'
  465          | "$c" '(' expr ')' '(' . expr_list ')'

    "struct"                          shift, and go to state 409
    "class"                           shift, and go to state 410
    "true"                            shift, and go to state 411
    "false"                           shift, and go to state 412
    "new"                             shift, and go to state 413
    "typeinfo"                        shift, and go to state 414
    "type"                            shift, and go to state 415
    "array"                           shift, and go to state 416
    "null"                            shift, and go to state 417
    "table"                           shift, and go to state 418
    "deref"                           shift, and go to state 419
    "cast"                            shift, and go to state 420
    "upcast"                          shift, and go to state 421
    "addr"                            shift, and go to state 422
    "reinterpret"                     shift, and go to state 423
    "unsafe"                          shift, and go to state 424
    "fixed_array"                     shift, and go to state 425
    "default"                         shift, and go to state 426
    "bool"                            shift, and go to state 225
    "void"                            shift, and go to state 226
    "string"                          shift, and go to state 227
    "int"                             shift, and go to state 229
    "int2"                            shift, and go to state 230
    "int3"                            shift, and go to state 231
    "int4"                            shift, and go to state 232
    "uint"                            shift, and go to state 233
    "bitfield"                        shift, and go to state 427
    "uint2"                           shift, and go to state 235
    "uint3"                           shift, and go to state 236
    "uint4"                           shift, and go to state 237
    "float"                           shift, and go to state 238
    "float2"                          shift, and go to state 239
    "float3"                          shift, and go to state 240
    "float4"                          shift, and go to state 241
    "range"                           shift, and go to state 242
    "urange"                          shift, and go to state 243
    "range64"                         shift, and go to state 244
    "urange64"                        shift, and go to state 245
    "int64"                           shift, and go to state 247
    "uint64"                          shift, and go to state 248
    "double"                          shift, and go to state 249
    "int8"                            shift, and go to state 252
    "uint8"                           shift, and go to state 253
    "int16"                           shift, and go to state 254
    "uint16"                          shift, and go to state 255
    "tuple"                           shift, and go to state 428
    "variant"                         shift, and go to state 429
    "generator"                       shift, and go to state 430
    "++"                              shift, and go to state 431
    "--"                              shift, and go to state 432
    "::"                              shift, and go to state 55
    "$$"                              shift, and go to state 433
    "$i"                              shift, and go to state 434
    "$v"                              shift, and go to state 435
    "$b"                              shift, and go to state 436
    "$a"                              shift, and go to state 437
    "$c"                              shift, and go to state 438
    "..."                             shift, and go to state 439
    "integer constant"                shift, and go to state 440
    "long integer constant"           shift, and go to state 441
    "unsigned integer constant"       shift, and go to state 442
    "unsigned long integer constant"  shift, and go to state 443
    "unsigned int8 constant"          shift, and go to state 444
    "floating point constant"         shift, and go to state 445
    "double constant"                 shift, and go to state 446
    "name"                            shift, and go to state 56
    "start of the string"             shift, and go to state 447
    "begin of code block"             shift, and go to state 448
    '-'                               shift, and go to state 449
    '+'                               shift, and go to state 450
    '*'                               shift, and go to state 451
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 452
    '!'                               shift, and go to state 453
    '['                               shift, and go to state 454
    '('                               shift, and go to state 455
    ')'                               shift, and go to state 1237
    '$'                               shift, and go to state 456
    '@'                               shift, and go to state 457

    string_builder          go to state 458
    expr_reader             go to state 459
    expr_call_pipe          go to state 460
    name_in_namespace       go to state 461
    expr_new                go to state 462
    expr_cast               go to state 463
    expr_type_decl          go to state 464
    expr_type_info          go to state 465
    expr_list               go to state 1238
    block_or_lambda         go to state 466
    expr_full_block         go to state 467
    expr_numeric_const      go to state 468
    expr_named_call         go to state 469
    expr_method_call        go to state 470
    func_addr_expr          go to state 471
    expr_field              go to state 472
    expr_call               go to state 473
    expr                    go to state 600
    expr_mtag               go to state 475
    basic_type_declaration  go to state 476
    make_decl               go to state 477
    make_struct_decl        go to state 478
    make_tuple_call         go to state 479
    make_dim_decl           go to state 480
    make_table_decl         go to state 481
    array_comprehension     go to state 482


State 1142

   31 string_builder_body: string_builder_body "{" expr "}" .

    $default  reduce using rule 31 (string_builder_body)


State 1143

  797 array_comprehension: "begin of code block" "for" '(' variable_name_with_pos_list "in" . expr_list ')' "end of expression" make_map_tuple array_comprehension_where "end of code block"

    "struct"                          shift, and go to state 409
    "class"                           shift, and go to state 410
    "true"                            shift, and go to state 411
    "false"                           shift, and go to state 412
    "new"                             shift, and go to state 413
    "typeinfo"                        shift, and go to state 414
    "type"                            shift, and go to state 415
    "array"                           shift, and go to state 416
    "null"                            shift, and go to state 417
    "table"                           shift, and go to state 418
    "deref"                           shift, and go to state 419
    "cast"                            shift, and go to state 420
    "upcast"                          shift, and go to state 421
    "addr"                            shift, and go to state 422
    "reinterpret"                     shift, and go to state 423
    "unsafe"                          shift, and go to state 424
    "fixed_array"                     shift, and go to state 425
    "default"                         shift, and go to state 426
    "bool"                            shift, and go to state 225
    "void"                            shift, and go to state 226
    "string"                          shift, and go to state 227
    "int"                             shift, and go to state 229
    "int2"                            shift, and go to state 230
    "int3"                            shift, and go to state 231
    "int4"                            shift, and go to state 232
    "uint"                            shift, and go to state 233
    "bitfield"                        shift, and go to state 427
    "uint2"                           shift, and go to state 235
    "uint3"                           shift, and go to state 236
    "uint4"                           shift, and go to state 237
    "float"                           shift, and go to state 238
    "float2"                          shift, and go to state 239
    "float3"                          shift, and go to state 240
    "float4"                          shift, and go to state 241
    "range"                           shift, and go to state 242
    "urange"                          shift, and go to state 243
    "range64"                         shift, and go to state 244
    "urange64"                        shift, and go to state 245
    "int64"                           shift, and go to state 247
    "uint64"                          shift, and go to state 248
    "double"                          shift, and go to state 249
    "int8"                            shift, and go to state 252
    "uint8"                           shift, and go to state 253
    "int16"                           shift, and go to state 254
    "uint16"                          shift, and go to state 255
    "tuple"                           shift, and go to state 428
    "variant"                         shift, and go to state 429
    "generator"                       shift, and go to state 430
    "++"                              shift, and go to state 431
    "--"                              shift, and go to state 432
    "::"                              shift, and go to state 55
    "$$"                              shift, and go to state 433
    "$i"                              shift, and go to state 434
    "$v"                              shift, and go to state 435
    "$b"                              shift, and go to state 436
    "$a"                              shift, and go to state 437
    "$c"                              shift, and go to state 438
    "..."                             shift, and go to state 439
    "integer constant"                shift, and go to state 440
    "long integer constant"           shift, and go to state 441
    "unsigned integer constant"       shift, and go to state 442
    "unsigned long integer constant"  shift, and go to state 443
    "unsigned int8 constant"          shift, and go to state 444
    "floating point constant"         shift, and go to state 445
    "double constant"                 shift, and go to state 446
    "name"                            shift, and go to state 56
    "start of the string"             shift, and go to state 447
    "begin of code block"             shift, and go to state 448
    '-'                               shift, and go to state 449
    '+'                               shift, and go to state 450
    '*'                               shift, and go to state 451
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 452
    '!'                               shift, and go to state 453
    '['                               shift, and go to state 454
    '('                               shift, and go to state 455
    '$'                               shift, and go to state 456
    '@'                               shift, and go to state 457

    string_builder          go to state 458
    expr_reader             go to state 459
    expr_call_pipe          go to state 460
    name_in_namespace       go to state 461
    expr_new                go to state 462
    expr_cast               go to state 463
    expr_type_decl          go to state 464
    expr_type_info          go to state 465
    expr_list               go to state 1239
    block_or_lambda         go to state 466
    expr_full_block         go to state 467
    expr_numeric_const      go to state 468
    expr_named_call         go to state 469
    expr_method_call        go to state 470
    func_addr_expr          go to state 471
    expr_field              go to state 472
    expr_call               go to state 473
    expr                    go to state 600
    expr_mtag               go to state 475
    basic_type_declaration  go to state 476
    make_decl               go to state 477
    make_struct_decl        go to state 478
    make_tuple_call         go to state 479
    make_dim_decl           go to state 480
    make_table_decl         go to state 481
    array_comprehension     go to state 482


State 1144

  795 array_comprehension: '[' "for" '(' variable_name_with_pos_list "in" . expr_list ')' "end of expression" expr array_comprehension_where ']'

    "struct"                          shift, and go to state 409
    "class"                           shift, and go to state 410
    "true"                            shift, and go to state 411
    "false"                           shift, and go to state 412
    "new"                             shift, and go to state 413
    "typeinfo"                        shift, and go to state 414
    "type"                            shift, and go to state 415
    "array"                           shift, and go to state 416
    "null"                            shift, and go to state 417
    "table"                           shift, and go to state 418
    "deref"                           shift, and go to state 419
    "cast"                            shift, and go to state 420
    "upcast"                          shift, and go to state 421
    "addr"                            shift, and go to state 422
    "reinterpret"                     shift, and go to state 423
    "unsafe"                          shift, and go to state 424
    "fixed_array"                     shift, and go to state 425
    "default"                         shift, and go to state 426
    "bool"                            shift, and go to state 225
    "void"                            shift, and go to state 226
    "string"                          shift, and go to state 227
    "int"                             shift, and go to state 229
    "int2"                            shift, and go to state 230
    "int3"                            shift, and go to state 231
    "int4"                            shift, and go to state 232
    "uint"                            shift, and go to state 233
    "bitfield"                        shift, and go to state 427
    "uint2"                           shift, and go to state 235
    "uint3"                           shift, and go to state 236
    "uint4"                           shift, and go to state 237
    "float"                           shift, and go to state 238
    "float2"                          shift, and go to state 239
    "float3"                          shift, and go to state 240
    "float4"                          shift, and go to state 241
    "range"                           shift, and go to state 242
    "urange"                          shift, and go to state 243
    "range64"                         shift, and go to state 244
    "urange64"                        shift, and go to state 245
    "int64"                           shift, and go to state 247
    "uint64"                          shift, and go to state 248
    "double"                          shift, and go to state 249
    "int8"                            shift, and go to state 252
    "uint8"                           shift, and go to state 253
    "int16"                           shift, and go to state 254
    "uint16"                          shift, and go to state 255
    "tuple"                           shift, and go to state 428
    "variant"                         shift, and go to state 429
    "generator"                       shift, and go to state 430
    "++"                              shift, and go to state 431
    "--"                              shift, and go to state 432
    "::"                              shift, and go to state 55
    "$$"                              shift, and go to state 433
    "$i"                              shift, and go to state 434
    "$v"                              shift, and go to state 435
    "$b"                              shift, and go to state 436
    "$a"                              shift, and go to state 437
    "$c"                              shift, and go to state 438
    "..."                             shift, and go to state 439
    "integer constant"                shift, and go to state 440
    "long integer constant"           shift, and go to state 441
    "unsigned integer constant"       shift, and go to state 442
    "unsigned long integer constant"  shift, and go to state 443
    "unsigned int8 constant"          shift, and go to state 444
    "floating point constant"         shift, and go to state 445
    "double constant"                 shift, and go to state 446
    "name"                            shift, and go to state 56
    "start of the string"             shift, and go to state 447
    "begin of code block"             shift, and go to state 448
    '-'                               shift, and go to state 449
    '+'                               shift, and go to state 450
    '*'                               shift, and go to state 451
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 452
    '!'                               shift, and go to state 453
    '['                               shift, and go to state 454
    '('                               shift, and go to state 455
    '$'                               shift, and go to state 456
    '@'                               shift, and go to state 457

    string_builder          go to state 458
    expr_reader             go to state 459
    expr_call_pipe          go to state 460
    name_in_namespace       go to state 461
    expr_new                go to state 462
    expr_cast               go to state 463
    expr_type_decl          go to state 464
    expr_type_info          go to state 465
    expr_list               go to state 1240
    block_or_lambda         go to state 466
    expr_full_block         go to state 467
    expr_numeric_const      go to state 468
    expr_named_call         go to state 469
    expr_method_call        go to state 470
    func_addr_expr          go to state 471
    expr_field              go to state 472
    expr_call               go to state 473
    expr                    go to state 600
    expr_mtag               go to state 475
    basic_type_declaration  go to state 476
    make_decl               go to state 477
    make_struct_decl        go to state 478
    make_tuple_call         go to state 479
    make_dim_decl           go to state 480
    make_table_decl         go to state 481
    array_comprehension     go to state 482


State 1145

  589 variable_name_with_pos_list: variable_name_with_pos_list . ',' "name"
  590                            | variable_name_with_pos_list . ',' "name" "aka" "name"
  796 array_comprehension: '[' "iterator" "for" '(' variable_name_with_pos_list . "in" expr_list ')' "end of expression" expr array_comprehension_where ']'

    "in"  shift, and go to state 1241
    ','   shift, and go to state 881


State 1146

  347 expr_method_call: expr . "->" "name" '(' ')'
  348                 | expr . "->" "name" '(' expr_list ')'
  350 func_addr_name: "$i" '(' expr . ')'
  358 expr_field: expr . '.' "name"
  359           | expr . '.' '.' "name"
  360           | expr . '.' "name" '(' ')'
  361           | expr . '.' "name" '(' expr_list ')'
  362           | expr . '.' basic_type_declaration '(' ')'
  363           | expr . '.' basic_type_declaration '(' expr_list ')'
  366           | expr . '.' $@21 error $@22
  388 expr: expr . "<<" expr
  389     | expr . ">>" expr
  390     | expr . "<<<" expr
  391     | expr . ">>>" expr
  392     | expr . '+' expr
  393     | expr . '-' expr
  394     | expr . '*' expr
  395     | expr . '/' expr
  396     | expr . '%' expr
  397     | expr . '<' expr
  398     | expr . '>' expr
  399     | expr . "==" expr
  400     | expr . "!=" expr
  401     | expr . "<=" expr
  402     | expr . ">=" expr
  403     | expr . '&' expr
  404     | expr . '|' expr
  405     | expr . '^' expr
  406     | expr . "&&" expr
  407     | expr . "||" expr
  408     | expr . "^^" expr
  409     | expr . ".." expr
  412     | expr . "++"
  413     | expr . "--"
  415     | expr . '[' expr ']'
  416     | expr . '.' '[' expr ']'
  417     | expr . "?[" expr ']'
  418     | expr . '.' "?[" expr ']'
  419     | expr . "?." "name"
  420     | expr . '.' "?." "name"
  429     | expr . "??" expr
  430     | expr . '?' expr ':' expr
  433     | expr . "is" "type" '<' $@23 type_declaration_no_options '>' $@24
  434     | expr . "is" basic_type_declaration
  435     | expr . "is" "name"
  436     | expr . "as" "name"
  439     | expr . "as" "type" '<' $@25 type_declaration '>' $@26
  440     | expr . "as" basic_type_declaration
  441     | expr . '?' "as" "name"
  444     | expr . '?' "as" "type" '<' $@27 type_declaration '>' $@28
  445     | expr . '?' "as" basic_type_declaration
  453     | expr . "<|" expr
  454     | expr . "|>" expr
  455     | expr . "|>" basic_type_declaration
  466 expr_mtag: expr . '.' "$f" '(' expr ')'
  467          | expr . "?." "$f" '(' expr ')'
  468          | expr . '.' '.' "$f" '(' expr ')'
  469          | expr . '.' "?." "$f" '(' expr ')'
  470          | expr . "as" "$f" '(' expr ')'
  471          | expr . '?' "as" "$f" '(' expr ')'
  472          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 609
    "as"   shift, and go to state 610
    "<<"   shift, and go to state 611
    ">>"   shift, and go to state 612
    "++"   shift, and go to state 613
    "--"   shift, and go to state 614
    "<="   shift, and go to state 615
    ">="   shift, and go to state 616
    "=="   shift, and go to state 617
    "!="   shift, and go to state 618
    "->"   shift, and go to state 619
    "??"   shift, and go to state 620
    "?."   shift, and go to state 621
    "?["   shift, and go to state 622
    "<|"   shift, and go to state 623
    "|>"   shift, and go to state 624
    "<<<"  shift, and go to state 625
    ">>>"  shift, and go to state 626
    "&&"   shift, and go to state 627
    "||"   shift, and go to state 628
    "^^"   shift, and go to state 629
    ".."   shift, and go to state 630
    '?'    shift, and go to state 631
    '|'    shift, and go to state 632
    '^'    shift, and go to state 633
    '&'    shift, and go to state 634
    '<'    shift, and go to state 635
    '>'    shift, and go to state 636
    '-'    shift, and go to state 637
    '+'    shift, and go to state 638
    '*'    shift, and go to state 639
    '/'    shift, and go to state 640
    '%'    shift, and go to state 641
    '.'    shift, and go to state 642
    '['    shift, and go to state 643
    ')'    shift, and go to state 1242


State 1147

  347 expr_method_call: expr . "->" "name" '(' ')'
  348                 | expr . "->" "name" '(' expr_list ')'
  358 expr_field: expr . '.' "name"
  359           | expr . '.' '.' "name"
  360           | expr . '.' "name" '(' ')'
  361           | expr . '.' "name" '(' expr_list ')'
  362           | expr . '.' basic_type_declaration '(' ')'
  363           | expr . '.' basic_type_declaration '(' expr_list ')'
  366           | expr . '.' $@21 error $@22
  388 expr: expr . "<<" expr
  389     | expr . ">>" expr
  390     | expr . "<<<" expr
  391     | expr . ">>>" expr
  392     | expr . '+' expr
  393     | expr . '-' expr
  394     | expr . '*' expr
  395     | expr . '/' expr
  396     | expr . '%' expr
  397     | expr . '<' expr
  398     | expr . '>' expr
  399     | expr . "==" expr
  400     | expr . "!=" expr
  401     | expr . "<=" expr
  402     | expr . ">=" expr
  403     | expr . '&' expr
  404     | expr . '|' expr
  405     | expr . '^' expr
  406     | expr . "&&" expr
  407     | expr . "||" expr
  408     | expr . "^^" expr
  409     | expr . ".." expr
  412     | expr . "++"
  413     | expr . "--"
  415     | expr . '[' expr ']'
  416     | expr . '.' '[' expr ']'
  417     | expr . "?[" expr ']'
  418     | expr . '.' "?[" expr ']'
  419     | expr . "?." "name"
  420     | expr . '.' "?." "name"
  429     | expr . "??" expr
  430     | expr . '?' expr ':' expr
  433     | expr . "is" "type" '<' $@23 type_declaration_no_options '>' $@24
  434     | expr . "is" basic_type_declaration
  435     | expr . "is" "name"
  436     | expr . "as" "name"
  439     | expr . "as" "type" '<' $@25 type_declaration '>' $@26
  440     | expr . "as" basic_type_declaration
  441     | expr . '?' "as" "name"
  444     | expr . '?' "as" "type" '<' $@27 type_declaration '>' $@28
  445     | expr . '?' "as" basic_type_declaration
  453     | expr . "<|" expr
  454     | expr . "|>" expr
  455     | expr . "|>" basic_type_declaration
  466 expr_mtag: expr . '.' "$f" '(' expr ')'
  467          | expr . "?." "$f" '(' expr ')'
  468          | expr . '.' '.' "$f" '(' expr ')'
  469          | expr . '.' "?." "$f" '(' expr ')'
  470          | expr . "as" "$f" '(' expr ')'
  471          | expr . '?' "as" "$f" '(' expr ')'
  472          | expr . "is" "$f" '(' expr ')'
  473          | '@' '@' "$c" '(' expr . ')'

    "is"   shift, and go to state 609
    "as"   shift, and go to state 610
    "<<"   shift, and go to state 611
    ">>"   shift, and go to state 612
    "++"   shift, and go to state 613
    "--"   shift, and go to state 614
    "<="   shift, and go to state 615
    ">="   shift, and go to state 616
    "=="   shift, and go to state 617
    "!="   shift, and go to state 618
    "->"   shift, and go to state 619
    "??"   shift, and go to state 620
    "?."   shift, and go to state 621
    "?["   shift, and go to state 622
    "<|"   shift, and go to state 623
    "|>"   shift, and go to state 624
    "<<<"  shift, and go to state 625
    ">>>"  shift, and go to state 626
    "&&"   shift, and go to state 627
    "||"   shift, and go to state 628
    "^^"   shift, and go to state 629
    ".."   shift, and go to state 630
    '?'    shift, and go to state 631
    '|'    shift, and go to state 632
    '^'    shift, and go to state 633
    '&'    shift, and go to state 634
    '<'    shift, and go to state 635
    '>'    shift, and go to state 636
    '-'    shift, and go to state 637
    '+'    shift, and go to state 638
    '*'    shift, and go to state 639
    '/'    shift, and go to state 640
    '%'    shift, and go to state 641
    '.'    shift, and go to state 642
    '['    shift, and go to state 643
    ')'    shift, and go to state 1243


State 1148

  354 func_addr_expr: '@' '@' '<' $@17 type_declaration_no_options . '>' $@18 func_addr_name

    '>'  shift, and go to state 1244


State 1149

  357 func_addr_expr: '@' '@' '<' $@19 optional_function_argument_list . optional_function_type '>' $@20 func_addr_name

    ':'  shift, and go to state 392

    $default  reduce using rule 118 (optional_function_type)

    optional_function_type  go to state 1245


State 1150

  370 expr_call: name_in_namespace '(' "uninitialized" make_struct_single ')' .

    $default  reduce using rule 370 (expr_call)


State 1151

  347 expr_method_call: expr . "->" "name" '(' ')'
  348                 | expr . "->" "name" '(' expr_list ')'
  358 expr_field: expr . '.' "name"
  359           | expr . '.' '.' "name"
  360           | expr . '.' "name" '(' ')'
  361           | expr . '.' "name" '(' expr_list ')'
  362           | expr . '.' basic_type_declaration '(' ')'
  363           | expr . '.' basic_type_declaration '(' expr_list ')'
  366           | expr . '.' $@21 error $@22
  388 expr: expr . "<<" expr
  389     | expr . ">>" expr
  390     | expr . "<<<" expr
  391     | expr . ">>>" expr
  392     | expr . '+' expr
  393     | expr . '-' expr
  394     | expr . '*' expr
  395     | expr . '/' expr
  396     | expr . '%' expr
  397     | expr . '<' expr
  398     | expr . '>' expr
  399     | expr . "==" expr
  400     | expr . "!=" expr
  401     | expr . "<=" expr
  402     | expr . ">=" expr
  403     | expr . '&' expr
  404     | expr . '|' expr
  405     | expr . '^' expr
  406     | expr . "&&" expr
  407     | expr . "||" expr
  408     | expr . "^^" expr
  409     | expr . ".." expr
  412     | expr . "++"
  413     | expr . "--"
  415     | expr . '[' expr ']'
  416     | expr . '.' '[' expr ']'
  417     | expr . "?[" expr ']'
  418     | expr . '.' "?[" expr ']'
  419     | expr . "?." "name"
  420     | expr . '.' "?." "name"
  429     | expr . "??" expr
  430     | expr . '?' expr ':' expr
  433     | expr . "is" "type" '<' $@23 type_declaration_no_options '>' $@24
  434     | expr . "is" basic_type_declaration
  435     | expr . "is" "name"
  436     | expr . "as" "name"
  439     | expr . "as" "type" '<' $@25 type_declaration '>' $@26
  440     | expr . "as" basic_type_declaration
  441     | expr . '?' "as" "name"
  444     | expr . '?' "as" "type" '<' $@27 type_declaration '>' $@28
  445     | expr . '?' "as" basic_type_declaration
  453     | expr . "<|" expr
  454     | expr . "|>" expr
  455     | expr . "|>" basic_type_declaration
  466 expr_mtag: expr . '.' "$f" '(' expr ')'
  467          | expr . "?." "$f" '(' expr ')'
  468          | expr . '.' '.' "$f" '(' expr ')'
  469          | expr . '.' "?." "$f" '(' expr ')'
  470          | expr . "as" "$f" '(' expr ')'
  471          | expr . '?' "as" "$f" '(' expr ')'
  472          | expr . "is" "$f" '(' expr ')'
  735 make_struct_fields: "$f" '(' expr . ')' copy_or_move expr
  736                   | "$f" '(' expr . ')' ":=" expr

    "is"   shift, and go to state 609
    "as"   shift, and go to state 610
    "<<"   shift, and go to state 611
    ">>"   shift, and go to state 612
    "++"   shift, and go to state 613
    "--"   shift, and go to state 614
    "<="   shift, and go to state 615
    ">="   shift, and go to state 616
    "=="   shift, and go to state 617
    "!="   shift, and go to state 618
    "->"   shift, and go to state 619
    "??"   shift, and go to state 620
    "?."   shift, and go to state 621
    "?["   shift, and go to state 622
    "<|"   shift, and go to state 623
    "|>"   shift, and go to state 624
    "<<<"  shift, and go to state 625
    ">>>"  shift, and go to state 626
    "&&"   shift, and go to state 627
    "||"   shift, and go to state 628
    "^^"   shift, and go to state 629
    ".."   shift, and go to state 630
    '?'    shift, and go to state 631
    '|'    shift, and go to state 632
    '^'    shift, and go to state 633
    '&'    shift, and go to state 634
    '<'    shift, and go to state 635
    '>'    shift, and go to state 636
    '-'    shift, and go to state 637
    '+'    shift, and go to state 638
    '*'    shift, and go to state 639
    '/'    shift, and go to state 640
    '%'    shift, and go to state 641
    '.'    shift, and go to state 642
    '['    shift, and go to state 643
    ')'    shift, and go to state 1246


State 1152

  347 expr_method_call: expr . "->" "name" '(' ')'
  348                 | expr . "->" "name" '(' expr_list ')'
  358 expr_field: expr . '.' "name"
  359           | expr . '.' '.' "name"
  360           | expr . '.' "name" '(' ')'
  361           | expr . '.' "name" '(' expr_list ')'
  362           | expr . '.' basic_type_declaration '(' ')'
  363           | expr . '.' basic_type_declaration '(' expr_list ')'
  366           | expr . '.' $@21 error $@22
  388 expr: expr . "<<" expr
  389     | expr . ">>" expr
  390     | expr . "<<<" expr
  391     | expr . ">>>" expr
  392     | expr . '+' expr
  393     | expr . '-' expr
  394     | expr . '*' expr
  395     | expr . '/' expr
  396     | expr . '%' expr
  397     | expr . '<' expr
  398     | expr . '>' expr
  399     | expr . "==" expr
  400     | expr . "!=" expr
  401     | expr . "<=" expr
  402     | expr . ">=" expr
  403     | expr . '&' expr
  404     | expr . '|' expr
  405     | expr . '^' expr
  406     | expr . "&&" expr
  407     | expr . "||" expr
  408     | expr . "^^" expr
  409     | expr . ".." expr
  412     | expr . "++"
  413     | expr . "--"
  415     | expr . '[' expr ']'
  416     | expr . '.' '[' expr ']'
  417     | expr . "?[" expr ']'
  418     | expr . '.' "?[" expr ']'
  419     | expr . "?." "name"
  420     | expr . '.' "?." "name"
  429     | expr . "??" expr
  430     | expr . '?' expr ':' expr
  433     | expr . "is" "type" '<' $@23 type_declaration_no_options '>' $@24
  434     | expr . "is" basic_type_declaration
  435     | expr . "is" "name"
  436     | expr . "as" "name"
  439     | expr . "as" "type" '<' $@25 type_declaration '>' $@26
  440     | expr . "as" basic_type_declaration
  441     | expr . '?' "as" "name"
  444     | expr . '?' "as" "type" '<' $@27 type_declaration '>' $@28
  445     | expr . '?' "as" basic_type_declaration
  453     | expr . "<|" expr
  454     | expr . "|>" expr
  455     | expr . "|>" basic_type_declaration
  466 expr_mtag: expr . '.' "$f" '(' expr ')'
  467          | expr . "?." "$f" '(' expr ')'
  468          | expr . '.' '.' "$f" '(' expr ')'
  469          | expr . '.' "?." "$f" '(' expr ')'
  470          | expr . "as" "$f" '(' expr ')'
  471          | expr . '?' "as" "$f" '(' expr ')'
  472          | expr . "is" "$f" '(' expr ')'
  732 make_struct_fields: "name" ":=" expr .

    "is"   shift, and go to state 609
    "as"   shift, and go to state 610
    "<<"   shift, and go to state 611
    ">>"   shift, and go to state 612
    "++"   shift, and go to state 613
    "--"   shift, and go to state 614
    "<="   shift, and go to state 615
    ">="   shift, and go to state 616
    "=="   shift, and go to state 617
    "!="   shift, and go to state 618
    "->"   shift, and go to state 619
    "??"   shift, and go to state 620
    "?."   shift, and go to state 621
    "?["   shift, and go to state 622
    "<|"   shift, and go to state 623
    "|>"   shift, and go to state 624
    "<<<"  shift, and go to state 625
    ">>>"  shift, and go to state 626
    "&&"   shift, and go to state 627
    "||"   shift, and go to state 628
    "^^"   shift, and go to state 629
    ".."   shift, and go to state 630
    '?'    shift, and go to state 631
    '|'    shift, and go to state 632
    '^'    shift, and go to state 633
    '&'    shift, and go to state 634
    '<'    shift, and go to state 635
    '>'    shift, and go to state 636
    '-'    shift, and go to state 637
    '+'    shift, and go to state 638
    '*'    shift, and go to state 639
    '/'    shift, and go to state 640
    '%'    shift, and go to state 641
    '.'    shift, and go to state 642
    '['    shift, and go to state 643

    $default  reduce using rule 732 (make_struct_fields)


State 1153

  347 expr_method_call: expr . "->" "name" '(' ')'
  348                 | expr . "->" "name" '(' expr_list ')'
  358 expr_field: expr . '.' "name"
  359           | expr . '.' '.' "name"
  360           | expr . '.' "name" '(' ')'
  361           | expr . '.' "name" '(' expr_list ')'
  362           | expr . '.' basic_type_declaration '(' ')'
  363           | expr . '.' basic_type_declaration '(' expr_list ')'
  366           | expr . '.' $@21 error $@22
  388 expr: expr . "<<" expr
  389     | expr . ">>" expr
  390     | expr . "<<<" expr
  391     | expr . ">>>" expr
  392     | expr . '+' expr
  393     | expr . '-' expr
  394     | expr . '*' expr
  395     | expr . '/' expr
  396     | expr . '%' expr
  397     | expr . '<' expr
  398     | expr . '>' expr
  399     | expr . "==" expr
  400     | expr . "!=" expr
  401     | expr . "<=" expr
  402     | expr . ">=" expr
  403     | expr . '&' expr
  404     | expr . '|' expr
  405     | expr . '^' expr
  406     | expr . "&&" expr
  407     | expr . "||" expr
  408     | expr . "^^" expr
  409     | expr . ".." expr
  412     | expr . "++"
  413     | expr . "--"
  415     | expr . '[' expr ']'
  416     | expr . '.' '[' expr ']'
  417     | expr . "?[" expr ']'
  418     | expr . '.' "?[" expr ']'
  419     | expr . "?." "name"
  420     | expr . '.' "?." "name"
  429     | expr . "??" expr
  430     | expr . '?' expr ':' expr
  433     | expr . "is" "type" '<' $@23 type_declaration_no_options '>' $@24
  434     | expr . "is" basic_type_declaration
  435     | expr . "is" "name"
  436     | expr . "as" "name"
  439     | expr . "as" "type" '<' $@25 type_declaration '>' $@26
  440     | expr . "as" basic_type_declaration
  441     | expr . '?' "as" "name"
  444     | expr . '?' "as" "type" '<' $@27 type_declaration '>' $@28
  445     | expr . '?' "as" basic_type_declaration
  453     | expr . "<|" expr
  454     | expr . "|>" expr
  455     | expr . "|>" basic_type_declaration
  466 expr_mtag: expr . '.' "$f" '(' expr ')'
  467          | expr . "?." "$f" '(' expr ')'
  468          | expr . '.' '.' "$f" '(' expr ')'
  469          | expr . '.' "?." "$f" '(' expr ')'
  470          | expr . "as" "$f" '(' expr ')'
  471          | expr . '?' "as" "$f" '(' expr ')'
  472          | expr . "is" "$f" '(' expr ')'
  731 make_struct_fields: "name" copy_or_move expr .

    "is"   shift, and go to state 609
    "as"   shift, and go to state 610
    "<<"   shift, and go to state 611
    ">>"   shift, and go to state 612
    "++"   shift, and go to state 613
    "--"   shift, and go to state 614
    "<="   shift, and go to state 615
    ">="   shift, and go to state 616
    "=="   shift, and go to state 617
    "!="   shift, and go to state 618
    "->"   shift, and go to state 619
    "??"   shift, and go to state 620
    "?."   shift, and go to state 621
    "?["   shift, and go to state 622
    "<|"   shift, and go to state 623
    "|>"   shift, and go to state 624
    "<<<"  shift, and go to state 625
    ">>>"  shift, and go to state 626
    "&&"   shift, and go to state 627
    "||"   shift, and go to state 628
    "^^"   shift, and go to state 629
    ".."   shift, and go to state 630
    '?'    shift, and go to state 631
    '|'    shift, and go to state 632
    '^'    shift, and go to state 633
    '&'    shift, and go to state 634
    '<'    shift, and go to state 635
    '>'    shift, and go to state 636
    '-'    shift, and go to state 637
    '+'    shift, and go to state 638
    '*'    shift, and go to state 639
    '/'    shift, and go to state 640
    '%'    shift, and go to state 641
    '.'    shift, and go to state 642
    '['    shift, and go to state 643

    $default  reduce using rule 731 (make_struct_fields)


State 1154

  345 expr_named_call: name_in_namespace '(' '[' make_struct_fields ']' . ')'

    ')'  shift, and go to state 1247


State 1155

  346 expr_named_call: name_in_namespace '(' expr_list ',' '[' . make_struct_fields ']' ')'
  767 make_dim_decl: '[' . expr_list optional_comma ']'
  795 array_comprehension: '[' . "for" '(' variable_name_with_pos_list "in" expr_list ')' "end of expression" expr array_comprehension_where ']'
  796                    | '[' . "iterator" "for" '(' variable_name_with_pos_list "in" expr_list ')' "end of expression" expr array_comprehension_where ']'

    "struct"                          shift, and go to state 409
    "class"                           shift, and go to state 410
    "for"                             shift, and go to state 597
    "true"                            shift, and go to state 411
    "false"                           shift, and go to state 412
    "new"                             shift, and go to state 413
    "typeinfo"                        shift, and go to state 414
    "type"                            shift, and go to state 415
    "array"                           shift, and go to state 416
    "null"                            shift, and go to state 417
    "table"                           shift, and go to state 418
    "deref"                           shift, and go to state 419
    "cast"                            shift, and go to state 420
    "upcast"                          shift, and go to state 421
    "iterator"                        shift, and go to state 598
    "addr"                            shift, and go to state 422
    "reinterpret"                     shift, and go to state 423
    "unsafe"                          shift, and go to state 424
    "fixed_array"                     shift, and go to state 425
    "default"                         shift, and go to state 426
    "bool"                            shift, and go to state 225
    "void"                            shift, and go to state 226
    "string"                          shift, and go to state 227
    "int"                             shift, and go to state 229
    "int2"                            shift, and go to state 230
    "int3"                            shift, and go to state 231
    "int4"                            shift, and go to state 232
    "uint"                            shift, and go to state 233
    "bitfield"                        shift, and go to state 427
    "uint2"                           shift, and go to state 235
    "uint3"                           shift, and go to state 236
    "uint4"                           shift, and go to state 237
    "float"                           shift, and go to state 238
    "float2"                          shift, and go to state 239
    "float3"                          shift, and go to state 240
    "float4"                          shift, and go to state 241
    "range"                           shift, and go to state 242
    "urange"                          shift, and go to state 243
    "range64"                         shift, and go to state 244
    "urange64"                        shift, and go to state 245
    "int64"                           shift, and go to state 247
    "uint64"                          shift, and go to state 248
    "double"                          shift, and go to state 249
    "int8"                            shift, and go to state 252
    "uint8"                           shift, and go to state 253
    "int16"                           shift, and go to state 254
    "uint16"                          shift, and go to state 255
    "tuple"                           shift, and go to state 428
    "variant"                         shift, and go to state 429
    "generator"                       shift, and go to state 430
    "++"                              shift, and go to state 431
    "--"                              shift, and go to state 432
    "::"                              shift, and go to state 55
    "$$"                              shift, and go to state 433
    "$i"                              shift, and go to state 434
    "$v"                              shift, and go to state 435
    "$b"                              shift, and go to state 436
    "$a"                              shift, and go to state 437
    "$c"                              shift, and go to state 438
    "$f"                              shift, and go to state 792
    "..."                             shift, and go to state 439
    "integer constant"                shift, and go to state 440
    "long integer constant"           shift, and go to state 441
    "unsigned integer constant"       shift, and go to state 442
    "unsigned long integer constant"  shift, and go to state 443
    "unsigned int8 constant"          shift, and go to state 444
    "floating point constant"         shift, and go to state 445
    "double constant"                 shift, and go to state 446
    "name"                            shift, and go to state 793
    "start of the string"             shift, and go to state 447
    "begin of code block"             shift, and go to state 448
    '-'                               shift, and go to state 449
    '+'                               shift, and go to state 450
    '*'                               shift, and go to state 451
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 452
    '!'                               shift, and go to state 453
    '['                               shift, and go to state 454
    '('                               shift, and go to state 455
    '$'                               shift, and go to state 456
    '@'                               shift, and go to state 457

    string_builder          go to state 458
    expr_reader             go to state 459
    expr_call_pipe          go to state 460
    name_in_namespace       go to state 461
    expr_new                go to state 462
    expr_cast               go to state 463
    expr_type_decl          go to state 464
    expr_type_info          go to state 465
    expr_list               go to state 599
    block_or_lambda         go to state 466
    expr_full_block         go to state 467
    expr_numeric_const      go to state 468
    expr_named_call         go to state 469
    expr_method_call        go to state 470
    func_addr_expr          go to state 471
    expr_field              go to state 472
    expr_call               go to state 473
    expr                    go to state 600
    expr_mtag               go to state 475
    basic_type_declaration  go to state 476
    make_decl               go to state 477
    make_struct_fields      go to state 1248
    make_struct_decl        go to state 478
    make_tuple_call         go to state 479
    make_dim_decl           go to state 480
    make_table_decl         go to state 481
    array_comprehension     go to state 482


State 1156

  737 make_struct_fields: make_struct_fields ',' "$f" . '(' expr ')' copy_or_move expr
  738                   | make_struct_fields ',' "$f" . '(' expr ')' ":=" expr

    '('  shift, and go to state 1249


State 1157

  733 make_struct_fields: make_struct_fields ',' "name" . copy_or_move expr
  734                   | make_struct_fields ',' "name" . ":=" expr

    "<-"  shift, and go to state 880
    ":="  shift, and go to state 1250
    '='   shift, and go to state 882

    copy_or_move  go to state 1251


State 1158

  309 capture_entry: "<-" . "name"

    "name"  shift, and go to state 1252


State 1159

  310 capture_entry: ":=" . "name"

    "name"  shift, and go to state 1253


State 1160

  311 capture_entry: "name" . '(' "name" ')'

    '('  shift, and go to state 1254


State 1161

  308 capture_entry: '=' . "name"

    "name"  shift, and go to state 1255


State 1162

  307 capture_entry: '&' . "name"

    "name"  shift, and go to state 1256


State 1163

  312 capture_list: capture_entry .

    $default  reduce using rule 312 (capture_list)


State 1164

  313 capture_list: capture_list . ',' capture_entry
  315 optional_capture_list: "capture" '(' capture_list . ')'

    ','  shift, and go to state 1257
    ')'  shift, and go to state 1258


State 1165

  316 expr_full_block: block_or_lambda optional_annotation_list optional_capture_list optional_function_argument_list optional_function_type . block_or_simple_block

    "=>"  shift, and go to state 1259

    $default  reduce using rule 216 ($@5)

    expression_block       go to state 1260
    $@5                    go to state 327
    block_or_simple_block  go to state 1261


State 1166

  317 expr_full_block_assumed_piped: block_or_lambda optional_annotation_list optional_capture_list optional_function_argument_list . optional_function_type expression_block

    ':'  shift, and go to state 392

    $default  reduce using rule 118 (optional_function_type)

    optional_function_type  go to state 1262


State 1167

  433 expr: expr "is" "type" '<' $@23 . type_declaration_no_options '>' $@24

    "type"       shift, and go to state 219
    "array"      shift, and go to state 220
    "table"      shift, and go to state 221
    "typedecl"   shift, and go to state 222
    "iterator"   shift, and go to state 223
    "smart_ptr"  shift, and go to state 224
    "bool"       shift, and go to state 225
    "void"       shift, and go to state 226
    "string"     shift, and go to state 227
    "auto"       shift, and go to state 228
    "int"        shift, and go to state 229
    "int2"       shift, and go to state 230
    "int3"       shift, and go to state 231
    "int4"       shift, and go to state 232
    "uint"       shift, and go to state 233
    "bitfield"   shift, and go to state 234
    "uint2"      shift, and go to state 235
    "uint3"      shift, and go to state 236
    "uint4"      shift, and go to state 237
    "float"      shift, and go to state 238
    "float2"     shift, and go to state 239
    "float3"     shift, and go to state 240
    "float4"     shift, and go to state 241
    "range"      shift, and go to state 242
    "urange"     shift, and go to state 243
    "range64"    shift, and go to state 244
    "urange64"   shift, and go to state 245
    "block"      shift, and go to state 246
    "int64"      shift, and go to state 247
    "uint64"     shift, and go to state 248
    "double"     shift, and go to state 249
    "function"   shift, and go to state 250
    "lambda"     shift, and go to state 251
    "int8"       shift, and go to state 252
    "uint8"      shift, and go to state 253
    "int16"      shift, and go to state 254
    "uint16"     shift, and go to state 255
    "tuple"      shift, and go to state 256
    "variant"    shift, and go to state 257
    "::"         shift, and go to state 55
    "$t"         shift, and go to state 258
    "name"       shift, and go to state 56
    '$'          shift, and go to state 259

    name_in_namespace                   go to state 260
    basic_type_declaration              go to state 261
    structure_type_declaration          go to state 262
    auto_type_declaration               go to state 263
    bitfield_type_declaration           go to state 264
    type_declaration_no_options         go to state 1263
    type_declaration_no_options_no_dim  go to state 266


State 1168

  347 expr_method_call: expr . "->" "name" '(' ')'
  348                 | expr . "->" "name" '(' expr_list ')'
  358 expr_field: expr . '.' "name"
  359           | expr . '.' '.' "name"
  360           | expr . '.' "name" '(' ')'
  361           | expr . '.' "name" '(' expr_list ')'
  362           | expr . '.' basic_type_declaration '(' ')'
  363           | expr . '.' basic_type_declaration '(' expr_list ')'
  366           | expr . '.' $@21 error $@22
  388 expr: expr . "<<" expr
  389     | expr . ">>" expr
  390     | expr . "<<<" expr
  391     | expr . ">>>" expr
  392     | expr . '+' expr
  393     | expr . '-' expr
  394     | expr . '*' expr
  395     | expr . '/' expr
  396     | expr . '%' expr
  397     | expr . '<' expr
  398     | expr . '>' expr
  399     | expr . "==" expr
  400     | expr . "!=" expr
  401     | expr . "<=" expr
  402     | expr . ">=" expr
  403     | expr . '&' expr
  404     | expr . '|' expr
  405     | expr . '^' expr
  406     | expr . "&&" expr
  407     | expr . "||" expr
  408     | expr . "^^" expr
  409     | expr . ".." expr
  412     | expr . "++"
  413     | expr . "--"
  415     | expr . '[' expr ']'
  416     | expr . '.' '[' expr ']'
  417     | expr . "?[" expr ']'
  418     | expr . '.' "?[" expr ']'
  419     | expr . "?." "name"
  420     | expr . '.' "?." "name"
  429     | expr . "??" expr
  430     | expr . '?' expr ':' expr
  433     | expr . "is" "type" '<' $@23 type_declaration_no_options '>' $@24
  434     | expr . "is" basic_type_declaration
  435     | expr . "is" "name"
  436     | expr . "as" "name"
  439     | expr . "as" "type" '<' $@25 type_declaration '>' $@26
  440     | expr . "as" basic_type_declaration
  441     | expr . '?' "as" "name"
  444     | expr . '?' "as" "type" '<' $@27 type_declaration '>' $@28
  445     | expr . '?' "as" basic_type_declaration
  453     | expr . "<|" expr
  454     | expr . "|>" expr
  455     | expr . "|>" basic_type_declaration
  466 expr_mtag: expr . '.' "$f" '(' expr ')'
  467          | expr . "?." "$f" '(' expr ')'
  468          | expr . '.' '.' "$f" '(' expr ')'
  469          | expr . '.' "?." "$f" '(' expr ')'
  470          | expr . "as" "$f" '(' expr ')'
  471          | expr . '?' "as" "$f" '(' expr ')'
  472          | expr . "is" "$f" '(' expr ')'
  472          | expr "is" "$f" '(' expr . ')'

    "is"   shift, and go to state 609
    "as"   shift, and go to state 610
    "<<"   shift, and go to state 611
    ">>"   shift, and go to state 612
    "++"   shift, and go to state 613
    "--"   shift, and go to state 614
    "<="   shift, and go to state 615
    ">="   shift, and go to state 616
    "=="   shift, and go to state 617
    "!="   shift, and go to state 618
    "->"   shift, and go to state 619
    "??"   shift, and go to state 620
    "?."   shift, and go to state 621
    "?["   shift, and go to state 622
    "<|"   shift, and go to state 623
    "|>"   shift, and go to state 624
    "<<<"  shift, and go to state 625
    ">>>"  shift, and go to state 626
    "&&"   shift, and go to state 627
    "||"   shift, and go to state 628
    "^^"   shift, and go to state 629
    ".."   shift, and go to state 630
    '?'    shift, and go to state 631
    '|'    shift, and go to state 632
    '^'    shift, and go to state 633
    '&'    shift, and go to state 634
    '<'    shift, and go to state 635
    '>'    shift, and go to state 636
    '-'    shift, and go to state 637
    '+'    shift, and go to state 638
    '*'    shift, and go to state 639
    '/'    shift, and go to state 640
    '%'    shift, and go to state 641
    '.'    shift, and go to state 642
    '['    shift, and go to state 643
    ')'    shift, and go to state 1264


State 1169

  439 expr: expr "as" "type" '<' $@25 . type_declaration '>' $@26

    "type"       shift, and go to state 219
    "array"      shift, and go to state 220
    "table"      shift, and go to state 221
    "typedecl"   shift, and go to state 222
    "iterator"   shift, and go to state 223
    "smart_ptr"  shift, and go to state 224
    "bool"       shift, and go to state 225
    "void"       shift, and go to state 226
    "string"     shift, and go to state 227
    "auto"       shift, and go to state 228
    "int"        shift, and go to state 229
    "int2"       shift, and go to state 230
    "int3"       shift, and go to state 231
    "int4"       shift, and go to state 232
    "uint"       shift, and go to state 233
    "bitfield"   shift, and go to state 234
    "uint2"      shift, and go to state 235
    "uint3"      shift, and go to state 236
    "uint4"      shift, and go to state 237
    "float"      shift, and go to state 238
    "float2"     shift, and go to state 239
    "float3"     shift, and go to state 240
    "float4"     shift, and go to state 241
    "range"      shift, and go to state 242
    "urange"     shift, and go to state 243
    "range64"    shift, and go to state 244
    "urange64"   shift, and go to state 245
    "block"      shift, and go to state 246
    "int64"      shift, and go to state 247
    "uint64"     shift, and go to state 248
    "double"     shift, and go to state 249
    "function"   shift, and go to state 250
    "lambda"     shift, and go to state 251
    "int8"       shift, and go to state 252
    "uint8"      shift, and go to state 253
    "int16"      shift, and go to state 254
    "uint16"     shift, and go to state 255
    "tuple"      shift, and go to state 256
    "variant"    shift, and go to state 257
    "::"         shift, and go to state 55
    "$t"         shift, and go to state 258
    "name"       shift, and go to state 56
    '$'          shift, and go to state 259

    name_in_namespace                   go to state 260
    basic_type_declaration              go to state 261
    structure_type_declaration          go to state 262
    auto_type_declaration               go to state 263
    bitfield_type_declaration           go to state 264
    type_declaration_no_options         go to state 265
    type_declaration_no_options_no_dim  go to state 266
    type_declaration                    go to state 1265


State 1170

  347 expr_method_call: expr . "->" "name" '(' ')'
  348                 | expr . "->" "name" '(' expr_list ')'
  358 expr_field: expr . '.' "name"
  359           | expr . '.' '.' "name"
  360           | expr . '.' "name" '(' ')'
  361           | expr . '.' "name" '(' expr_list ')'
  362           | expr . '.' basic_type_declaration '(' ')'
  363           | expr . '.' basic_type_declaration '(' expr_list ')'
  366           | expr . '.' $@21 error $@22
  388 expr: expr . "<<" expr
  389     | expr . ">>" expr
  390     | expr . "<<<" expr
  391     | expr . ">>>" expr
  392     | expr . '+' expr
  393     | expr . '-' expr
  394     | expr . '*' expr
  395     | expr . '/' expr
  396     | expr . '%' expr
  397     | expr . '<' expr
  398     | expr . '>' expr
  399     | expr . "==" expr
  400     | expr . "!=" expr
  401     | expr . "<=" expr
  402     | expr . ">=" expr
  403     | expr . '&' expr
  404     | expr . '|' expr
  405     | expr . '^' expr
  406     | expr . "&&" expr
  407     | expr . "||" expr
  408     | expr . "^^" expr
  409     | expr . ".." expr
  412     | expr . "++"
  413     | expr . "--"
  415     | expr . '[' expr ']'
  416     | expr . '.' '[' expr ']'
  417     | expr . "?[" expr ']'
  418     | expr . '.' "?[" expr ']'
  419     | expr . "?." "name"
  420     | expr . '.' "?." "name"
  429     | expr . "??" expr
  430     | expr . '?' expr ':' expr
  433     | expr . "is" "type" '<' $@23 type_declaration_no_options '>' $@24
  434     | expr . "is" basic_type_declaration
  435     | expr . "is" "name"
  436     | expr . "as" "name"
  439     | expr . "as" "type" '<' $@25 type_declaration '>' $@26
  440     | expr . "as" basic_type_declaration
  441     | expr . '?' "as" "name"
  444     | expr . '?' "as" "type" '<' $@27 type_declaration '>' $@28
  445     | expr . '?' "as" basic_type_declaration
  453     | expr . "<|" expr
  454     | expr . "|>" expr
  455     | expr . "|>" basic_type_declaration
  466 expr_mtag: expr . '.' "$f" '(' expr ')'
  467          | expr . "?." "$f" '(' expr ')'
  468          | expr . '.' '.' "$f" '(' expr ')'
  469          | expr . '.' "?." "$f" '(' expr ')'
  470          | expr . "as" "$f" '(' expr ')'
  470          | expr "as" "$f" '(' expr . ')'
  471          | expr . '?' "as" "$f" '(' expr ')'
  472          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 609
    "as"   shift, and go to state 610
    "<<"   shift, and go to state 611
    ">>"   shift, and go to state 612
    "++"   shift, and go to state 613
    "--"   shift, and go to state 614
    "<="   shift, and go to state 615
    ">="   shift, and go to state 616
    "=="   shift, and go to state 617
    "!="   shift, and go to state 618
    "->"   shift, and go to state 619
    "??"   shift, and go to state 620
    "?."   shift, and go to state 621
    "?["   shift, and go to state 622
    "<|"   shift, and go to state 623
    "|>"   shift, and go to state 624
    "<<<"  shift, and go to state 625
    ">>>"  shift, and go to state 626
    "&&"   shift, and go to state 627
    "||"   shift, and go to state 628
    "^^"   shift, and go to state 629
    ".."   shift, and go to state 630
    '?'    shift, and go to state 631
    '|'    shift, and go to state 632
    '^'    shift, and go to state 633
    '&'    shift, and go to state 634
    '<'    shift, and go to state 635
    '>'    shift, and go to state 636
    '-'    shift, and go to state 637
    '+'    shift, and go to state 638
    '*'    shift, and go to state 639
    '/'    shift, and go to state 640
    '%'    shift, and go to state 641
    '.'    shift, and go to state 642
    '['    shift, and go to state 643
    ')'    shift, and go to state 1266


State 1171

  347 expr_method_call: expr "->" "name" '(' ')' .

    $default  reduce using rule 347 (expr_method_call)


State 1172

  300 expr_list: expr_list . ',' expr
  348 expr_method_call: expr "->" "name" '(' expr_list . ')'

    ','  shift, and go to state 1040
    ')'  shift, and go to state 1267


State 1173

  347 expr_method_call: expr . "->" "name" '(' ')'
  348                 | expr . "->" "name" '(' expr_list ')'
  358 expr_field: expr . '.' "name"
  359           | expr . '.' '.' "name"
  360           | expr . '.' "name" '(' ')'
  361           | expr . '.' "name" '(' expr_list ')'
  362           | expr . '.' basic_type_declaration '(' ')'
  363           | expr . '.' basic_type_declaration '(' expr_list ')'
  366           | expr . '.' $@21 error $@22
  388 expr: expr . "<<" expr
  389     | expr . ">>" expr
  390     | expr . "<<<" expr
  391     | expr . ">>>" expr
  392     | expr . '+' expr
  393     | expr . '-' expr
  394     | expr . '*' expr
  395     | expr . '/' expr
  396     | expr . '%' expr
  397     | expr . '<' expr
  398     | expr . '>' expr
  399     | expr . "==" expr
  400     | expr . "!=" expr
  401     | expr . "<=" expr
  402     | expr . ">=" expr
  403     | expr . '&' expr
  404     | expr . '|' expr
  405     | expr . '^' expr
  406     | expr . "&&" expr
  407     | expr . "||" expr
  408     | expr . "^^" expr
  409     | expr . ".." expr
  412     | expr . "++"
  413     | expr . "--"
  415     | expr . '[' expr ']'
  416     | expr . '.' '[' expr ']'
  417     | expr . "?[" expr ']'
  418     | expr . '.' "?[" expr ']'
  419     | expr . "?." "name"
  420     | expr . '.' "?." "name"
  429     | expr . "??" expr
  430     | expr . '?' expr ':' expr
  433     | expr . "is" "type" '<' $@23 type_declaration_no_options '>' $@24
  434     | expr . "is" basic_type_declaration
  435     | expr . "is" "name"
  436     | expr . "as" "name"
  439     | expr . "as" "type" '<' $@25 type_declaration '>' $@26
  440     | expr . "as" basic_type_declaration
  441     | expr . '?' "as" "name"
  444     | expr . '?' "as" "type" '<' $@27 type_declaration '>' $@28
  445     | expr . '?' "as" basic_type_declaration
  453     | expr . "<|" expr
  454     | expr . "|>" expr
  455     | expr . "|>" basic_type_declaration
  466 expr_mtag: expr . '.' "$f" '(' expr ')'
  467          | expr . "?." "$f" '(' expr ')'
  467          | expr "?." "$f" '(' expr . ')'
  468          | expr . '.' '.' "$f" '(' expr ')'
  469          | expr . '.' "?." "$f" '(' expr ')'
  470          | expr . "as" "$f" '(' expr ')'
  471          | expr . '?' "as" "$f" '(' expr ')'
  472          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 609
    "as"   shift, and go to state 610
    "<<"   shift, and go to state 611
    ">>"   shift, and go to state 612
    "++"   shift, and go to state 613
    "--"   shift, and go to state 614
    "<="   shift, and go to state 615
    ">="   shift, and go to state 616
    "=="   shift, and go to state 617
    "!="   shift, and go to state 618
    "->"   shift, and go to state 619
    "??"   shift, and go to state 620
    "?."   shift, and go to state 621
    "?["   shift, and go to state 622
    "<|"   shift, and go to state 623
    "|>"   shift, and go to state 624
    "<<<"  shift, and go to state 625
    ">>>"  shift, and go to state 626
    "&&"   shift, and go to state 627
    "||"   shift, and go to state 628
    "^^"   shift, and go to state 629
    ".."   shift, and go to state 630
    '?'    shift, and go to state 631
    '|'    shift, and go to state 632
    '^'    shift, and go to state 633
    '&'    shift, and go to state 634
    '<'    shift, and go to state 635
    '>'    shift, and go to state 636
    '-'    shift, and go to state 637
    '+'    shift, and go to state 638
    '*'    shift, and go to state 639
    '/'    shift, and go to state 640
    '%'    shift, and go to state 641
    '.'    shift, and go to state 642
    '['    shift, and go to state 643
    ')'    shift, and go to state 1268


State 1174

  444 expr: expr '?' "as" "type" '<' . $@27 type_declaration '>' $@28

    $default  reduce using rule 442 ($@27)

    $@27  go to state 1269


State 1175

  471 expr_mtag: expr '?' "as" "$f" '(' . expr ')'

    "struct"                          shift, and go to state 409
    "class"                           shift, and go to state 410
    "true"                            shift, and go to state 411
    "false"                           shift, and go to state 412
    "new"                             shift, and go to state 413
    "typeinfo"                        shift, and go to state 414
    "type"                            shift, and go to state 415
    "array"                           shift, and go to state 416
    "null"                            shift, and go to state 417
    "table"                           shift, and go to state 418
    "deref"                           shift, and go to state 419
    "cast"                            shift, and go to state 420
    "upcast"                          shift, and go to state 421
    "addr"                            shift, and go to state 422
    "reinterpret"                     shift, and go to state 423
    "unsafe"                          shift, and go to state 424
    "fixed_array"                     shift, and go to state 425
    "default"                         shift, and go to state 426
    "bool"                            shift, and go to state 225
    "void"                            shift, and go to state 226
    "string"                          shift, and go to state 227
    "int"                             shift, and go to state 229
    "int2"                            shift, and go to state 230
    "int3"                            shift, and go to state 231
    "int4"                            shift, and go to state 232
    "uint"                            shift, and go to state 233
    "bitfield"                        shift, and go to state 427
    "uint2"                           shift, and go to state 235
    "uint3"                           shift, and go to state 236
    "uint4"                           shift, and go to state 237
    "float"                           shift, and go to state 238
    "float2"                          shift, and go to state 239
    "float3"                          shift, and go to state 240
    "float4"                          shift, and go to state 241
    "range"                           shift, and go to state 242
    "urange"                          shift, and go to state 243
    "range64"                         shift, and go to state 244
    "urange64"                        shift, and go to state 245
    "int64"                           shift, and go to state 247
    "uint64"                          shift, and go to state 248
    "double"                          shift, and go to state 249
    "int8"                            shift, and go to state 252
    "uint8"                           shift, and go to state 253
    "int16"                           shift, and go to state 254
    "uint16"                          shift, and go to state 255
    "tuple"                           shift, and go to state 428
    "variant"                         shift, and go to state 429
    "generator"                       shift, and go to state 430
    "++"                              shift, and go to state 431
    "--"                              shift, and go to state 432
    "::"                              shift, and go to state 55
    "$$"                              shift, and go to state 433
    "$i"                              shift, and go to state 434
    "$v"                              shift, and go to state 435
    "$b"                              shift, and go to state 436
    "$a"                              shift, and go to state 437
    "$c"                              shift, and go to state 438
    "..."                             shift, and go to state 439
    "integer constant"                shift, and go to state 440
    "long integer constant"           shift, and go to state 441
    "unsigned integer constant"       shift, and go to state 442
    "unsigned long integer constant"  shift, and go to state 443
    "unsigned int8 constant"          shift, and go to state 444
    "floating point constant"         shift, and go to state 445
    "double constant"                 shift, and go to state 446
    "name"                            shift, and go to state 56
    "start of the string"             shift, and go to state 447
    "begin of code block"             shift, and go to state 448
    '-'                               shift, and go to state 449
    '+'                               shift, and go to state 450
    '*'                               shift, and go to state 451
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 452
    '!'                               shift, and go to state 453
    '['                               shift, and go to state 454
    '('                               shift, and go to state 455
    '$'                               shift, and go to state 456
    '@'                               shift, and go to state 457

    string_builder          go to state 458
    expr_reader             go to state 459
    expr_call_pipe          go to state 460
    name_in_namespace       go to state 461
    expr_new                go to state 462
    expr_cast               go to state 463
    expr_type_decl          go to state 464
    expr_type_info          go to state 465
    block_or_lambda         go to state 466
    expr_full_block         go to state 467
    expr_numeric_const      go to state 468
    expr_named_call         go to state 469
    expr_method_call        go to state 470
    func_addr_expr          go to state 471
    expr_field              go to state 472
    expr_call               go to state 473
    expr                    go to state 1270
    expr_mtag               go to state 475
    basic_type_declaration  go to state 476
    make_decl               go to state 477
    make_struct_decl        go to state 478
    make_tuple_call         go to state 479
    make_dim_decl           go to state 480
    make_table_decl         go to state 481
    array_comprehension     go to state 482


State 1176

  347 expr_method_call: expr . "->" "name" '(' ')'
  348                 | expr . "->" "name" '(' expr_list ')'
  358 expr_field: expr . '.' "name"
  359           | expr . '.' '.' "name"
  360           | expr . '.' "name" '(' ')'
  361           | expr . '.' "name" '(' expr_list ')'
  362           | expr . '.' basic_type_declaration '(' ')'
  363           | expr . '.' basic_type_declaration '(' expr_list ')'
  366           | expr . '.' $@21 error $@22
  388 expr: expr . "<<" expr
  389     | expr . ">>" expr
  390     | expr . "<<<" expr
  391     | expr . ">>>" expr
  392     | expr . '+' expr
  393     | expr . '-' expr
  394     | expr . '*' expr
  395     | expr . '/' expr
  396     | expr . '%' expr
  397     | expr . '<' expr
  398     | expr . '>' expr
  399     | expr . "==" expr
  400     | expr . "!=" expr
  401     | expr . "<=" expr
  402     | expr . ">=" expr
  403     | expr . '&' expr
  404     | expr . '|' expr
  405     | expr . '^' expr
  406     | expr . "&&" expr
  407     | expr . "||" expr
  408     | expr . "^^" expr
  409     | expr . ".." expr
  412     | expr . "++"
  413     | expr . "--"
  415     | expr . '[' expr ']'
  416     | expr . '.' '[' expr ']'
  417     | expr . "?[" expr ']'
  418     | expr . '.' "?[" expr ']'
  419     | expr . "?." "name"
  420     | expr . '.' "?." "name"
  429     | expr . "??" expr
  430     | expr . '?' expr ':' expr
  430     | expr '?' expr ':' expr .
  433     | expr . "is" "type" '<' $@23 type_declaration_no_options '>' $@24
  434     | expr . "is" basic_type_declaration
  435     | expr . "is" "name"
  436     | expr . "as" "name"
  439     | expr . "as" "type" '<' $@25 type_declaration '>' $@26
  440     | expr . "as" basic_type_declaration
  441     | expr . '?' "as" "name"
  444     | expr . '?' "as" "type" '<' $@27 type_declaration '>' $@28
  445     | expr . '?' "as" basic_type_declaration
  453     | expr . "<|" expr
  454     | expr . "|>" expr
  455     | expr . "|>" basic_type_declaration
  466 expr_mtag: expr . '.' "$f" '(' expr ')'
  467          | expr . "?." "$f" '(' expr ')'
  468          | expr . '.' '.' "$f" '(' expr ')'
  469          | expr . '.' "?." "$f" '(' expr ')'
  470          | expr . "as" "$f" '(' expr ')'
  471          | expr . '?' "as" "$f" '(' expr ')'
  472          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 609
    "as"   shift, and go to state 610
    "<<"   shift, and go to state 611
    ">>"   shift, and go to state 612
    "++"   shift, and go to state 613
    "--"   shift, and go to state 614
    "<="   shift, and go to state 615
    ">="   shift, and go to state 616
    "=="   shift, and go to state 617
    "!="   shift, and go to state 618
    "->"   shift, and go to state 619
    "??"   shift, and go to state 620
    "?."   shift, and go to state 621
    "?["   shift, and go to state 622
    "<|"   shift, and go to state 623
    "|>"   shift, and go to state 624
    "<<<"  shift, and go to state 625
    ">>>"  shift, and go to state 626
    "&&"   shift, and go to state 627
    "||"   shift, and go to state 628
    "^^"   shift, and go to state 629
    '?'    shift, and go to state 631
    '|'    shift, and go to state 632
    '^'    shift, and go to state 633
    '&'    shift, and go to state 634
    '<'    shift, and go to state 635
    '>'    shift, and go to state 636
    '-'    shift, and go to state 637
    '+'    shift, and go to state 638
    '*'    shift, and go to state 639
    '/'    shift, and go to state 640
    '%'    shift, and go to state 641
    '.'    shift, and go to state 642
    '['    shift, and go to state 643

    $default  reduce using rule 430 (expr)


State 1177

  469 expr_mtag: expr '.' "?." "$f" '(' . expr ')'

    "struct"                          shift, and go to state 409
    "class"                           shift, and go to state 410
    "true"                            shift, and go to state 411
    "false"                           shift, and go to state 412
    "new"                             shift, and go to state 413
    "typeinfo"                        shift, and go to state 414
    "type"                            shift, and go to state 415
    "array"                           shift, and go to state 416
    "null"                            shift, and go to state 417
    "table"                           shift, and go to state 418
    "deref"                           shift, and go to state 419
    "cast"                            shift, and go to state 420
    "upcast"                          shift, and go to state 421
    "addr"                            shift, and go to state 422
    "reinterpret"                     shift, and go to state 423
    "unsafe"                          shift, and go to state 424
    "fixed_array"                     shift, and go to state 425
    "default"                         shift, and go to state 426
    "bool"                            shift, and go to state 225
    "void"                            shift, and go to state 226
    "string"                          shift, and go to state 227
    "int"                             shift, and go to state 229
    "int2"                            shift, and go to state 230
    "int3"                            shift, and go to state 231
    "int4"                            shift, and go to state 232
    "uint"                            shift, and go to state 233
    "bitfield"                        shift, and go to state 427
    "uint2"                           shift, and go to state 235
    "uint3"                           shift, and go to state 236
    "uint4"                           shift, and go to state 237
    "float"                           shift, and go to state 238
    "float2"                          shift, and go to state 239
    "float3"                          shift, and go to state 240
    "float4"                          shift, and go to state 241
    "range"                           shift, and go to state 242
    "urange"                          shift, and go to state 243
    "range64"                         shift, and go to state 244
    "urange64"                        shift, and go to state 245
    "int64"                           shift, and go to state 247
    "uint64"                          shift, and go to state 248
    "double"                          shift, and go to state 249
    "int8"                            shift, and go to state 252
    "uint8"                           shift, and go to state 253
    "int16"                           shift, and go to state 254
    "uint16"                          shift, and go to state 255
    "tuple"                           shift, and go to state 428
    "variant"                         shift, and go to state 429
    "generator"                       shift, and go to state 430
    "++"                              shift, and go to state 431
    "--"                              shift, and go to state 432
    "::"                              shift, and go to state 55
    "$$"                              shift, and go to state 433
    "$i"                              shift, and go to state 434
    "$v"                              shift, and go to state 435
    "$b"                              shift, and go to state 436
    "$a"                              shift, and go to state 437
    "$c"                              shift, and go to state 438
    "..."                             shift, and go to state 439
    "integer constant"                shift, and go to state 440
    "long integer constant"           shift, and go to state 441
    "unsigned integer constant"       shift, and go to state 442
    "unsigned long integer constant"  shift, and go to state 443
    "unsigned int8 constant"          shift, and go to state 444
    "floating point constant"         shift, and go to state 445
    "double constant"                 shift, and go to state 446
    "name"                            shift, and go to state 56
    "start of the string"             shift, and go to state 447
    "begin of code block"             shift, and go to state 448
    '-'                               shift, and go to state 449
    '+'                               shift, and go to state 450
    '*'                               shift, and go to state 451
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 452
    '!'                               shift, and go to state 453
    '['                               shift, and go to state 454
    '('                               shift, and go to state 455
    '$'                               shift, and go to state 456
    '@'                               shift, and go to state 457

    string_builder          go to state 458
    expr_reader             go to state 459
    expr_call_pipe          go to state 460
    name_in_namespace       go to state 461
    expr_new                go to state 462
    expr_cast               go to state 463
    expr_type_decl          go to state 464
    expr_type_info          go to state 465
    block_or_lambda         go to state 466
    expr_full_block         go to state 467
    expr_numeric_const      go to state 468
    expr_named_call         go to state 469
    expr_method_call        go to state 470
    func_addr_expr          go to state 471
    expr_field              go to state 472
    expr_call               go to state 473
    expr                    go to state 1271
    expr_mtag               go to state 475
    basic_type_declaration  go to state 476
    make_decl               go to state 477
    make_struct_decl        go to state 478
    make_tuple_call         go to state 479
    make_dim_decl           go to state 480
    make_table_decl         go to state 481
    array_comprehension     go to state 482


State 1178

  418 expr: expr '.' "?[" expr ']' .

    $default  reduce using rule 418 (expr)


State 1179

  347 expr_method_call: expr . "->" "name" '(' ')'
  348                 | expr . "->" "name" '(' expr_list ')'
  358 expr_field: expr . '.' "name"
  359           | expr . '.' '.' "name"
  360           | expr . '.' "name" '(' ')'
  361           | expr . '.' "name" '(' expr_list ')'
  362           | expr . '.' basic_type_declaration '(' ')'
  363           | expr . '.' basic_type_declaration '(' expr_list ')'
  366           | expr . '.' $@21 error $@22
  388 expr: expr . "<<" expr
  389     | expr . ">>" expr
  390     | expr . "<<<" expr
  391     | expr . ">>>" expr
  392     | expr . '+' expr
  393     | expr . '-' expr
  394     | expr . '*' expr
  395     | expr . '/' expr
  396     | expr . '%' expr
  397     | expr . '<' expr
  398     | expr . '>' expr
  399     | expr . "==" expr
  400     | expr . "!=" expr
  401     | expr . "<=" expr
  402     | expr . ">=" expr
  403     | expr . '&' expr
  404     | expr . '|' expr
  405     | expr . '^' expr
  406     | expr . "&&" expr
  407     | expr . "||" expr
  408     | expr . "^^" expr
  409     | expr . ".." expr
  412     | expr . "++"
  413     | expr . "--"
  415     | expr . '[' expr ']'
  416     | expr . '.' '[' expr ']'
  417     | expr . "?[" expr ']'
  418     | expr . '.' "?[" expr ']'
  419     | expr . "?." "name"
  420     | expr . '.' "?." "name"
  429     | expr . "??" expr
  430     | expr . '?' expr ':' expr
  433     | expr . "is" "type" '<' $@23 type_declaration_no_options '>' $@24
  434     | expr . "is" basic_type_declaration
  435     | expr . "is" "name"
  436     | expr . "as" "name"
  439     | expr . "as" "type" '<' $@25 type_declaration '>' $@26
  440     | expr . "as" basic_type_declaration
  441     | expr . '?' "as" "name"
  444     | expr . '?' "as" "type" '<' $@27 type_declaration '>' $@28
  445     | expr . '?' "as" basic_type_declaration
  453     | expr . "<|" expr
  454     | expr . "|>" expr
  455     | expr . "|>" basic_type_declaration
  466 expr_mtag: expr . '.' "$f" '(' expr ')'
  466          | expr '.' "$f" '(' expr . ')'
  467          | expr . "?." "$f" '(' expr ')'
  468          | expr . '.' '.' "$f" '(' expr ')'
  469          | expr . '.' "?." "$f" '(' expr ')'
  470          | expr . "as" "$f" '(' expr ')'
  471          | expr . '?' "as" "$f" '(' expr ')'
  472          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 609
    "as"   shift, and go to state 610
    "<<"   shift, and go to state 611
    ">>"   shift, and go to state 612
    "++"   shift, and go to state 613
    "--"   shift, and go to state 614
    "<="   shift, and go to state 615
    ">="   shift, and go to state 616
    "=="   shift, and go to state 617
    "!="   shift, and go to state 618
    "->"   shift, and go to state 619
    "??"   shift, and go to state 620
    "?."   shift, and go to state 621
    "?["   shift, and go to state 622
    "<|"   shift, and go to state 623
    "|>"   shift, and go to state 624
    "<<<"  shift, and go to state 625
    ">>>"  shift, and go to state 626
    "&&"   shift, and go to state 627
    "||"   shift, and go to state 628
    "^^"   shift, and go to state 629
    ".."   shift, and go to state 630
    '?'    shift, and go to state 631
    '|'    shift, and go to state 632
    '^'    shift, and go to state 633
    '&'    shift, and go to state 634
    '<'    shift, and go to state 635
    '>'    shift, and go to state 636
    '-'    shift, and go to state 637
    '+'    shift, and go to state 638
    '*'    shift, and go to state 639
    '/'    shift, and go to state 640
    '%'    shift, and go to state 641
    '.'    shift, and go to state 642
    '['    shift, and go to state 643
    ')'    shift, and go to state 1272


State 1180

  360 expr_field: expr '.' "name" '(' ')' .

    $default  reduce using rule 360 (expr_field)


State 1181

  300 expr_list: expr_list . ',' expr
  361 expr_field: expr '.' "name" '(' expr_list . ')'

    ','  shift, and go to state 1040
    ')'  shift, and go to state 1273


State 1182

  468 expr_mtag: expr '.' '.' "$f" '(' . expr ')'

    "struct"                          shift, and go to state 409
    "class"                           shift, and go to state 410
    "true"                            shift, and go to state 411
    "false"                           shift, and go to state 412
    "new"                             shift, and go to state 413
    "typeinfo"                        shift, and go to state 414
    "type"                            shift, and go to state 415
    "array"                           shift, and go to state 416
    "null"                            shift, and go to state 417
    "table"                           shift, and go to state 418
    "deref"                           shift, and go to state 419
    "cast"                            shift, and go to state 420
    "upcast"                          shift, and go to state 421
    "addr"                            shift, and go to state 422
    "reinterpret"                     shift, and go to state 423
    "unsafe"                          shift, and go to state 424
    "fixed_array"                     shift, and go to state 425
    "default"                         shift, and go to state 426
    "bool"                            shift, and go to state 225
    "void"                            shift, and go to state 226
    "string"                          shift, and go to state 227
    "int"                             shift, and go to state 229
    "int2"                            shift, and go to state 230
    "int3"                            shift, and go to state 231
    "int4"                            shift, and go to state 232
    "uint"                            shift, and go to state 233
    "bitfield"                        shift, and go to state 427
    "uint2"                           shift, and go to state 235
    "uint3"                           shift, and go to state 236
    "uint4"                           shift, and go to state 237
    "float"                           shift, and go to state 238
    "float2"                          shift, and go to state 239
    "float3"                          shift, and go to state 240
    "float4"                          shift, and go to state 241
    "range"                           shift, and go to state 242
    "urange"                          shift, and go to state 243
    "range64"                         shift, and go to state 244
    "urange64"                        shift, and go to state 245
    "int64"                           shift, and go to state 247
    "uint64"                          shift, and go to state 248
    "double"                          shift, and go to state 249
    "int8"                            shift, and go to state 252
    "uint8"                           shift, and go to state 253
    "int16"                           shift, and go to state 254
    "uint16"                          shift, and go to state 255
    "tuple"                           shift, and go to state 428
    "variant"                         shift, and go to state 429
    "generator"                       shift, and go to state 430
    "++"                              shift, and go to state 431
    "--"                              shift, and go to state 432
    "::"                              shift, and go to state 55
    "$$"                              shift, and go to state 433
    "$i"                              shift, and go to state 434
    "$v"                              shift, and go to state 435
    "$b"                              shift, and go to state 436
    "$a"                              shift, and go to state 437
    "$c"                              shift, and go to state 438
    "..."                             shift, and go to state 439
    "integer constant"                shift, and go to state 440
    "long integer constant"           shift, and go to state 441
    "unsigned integer constant"       shift, and go to state 442
    "unsigned long integer constant"  shift, and go to state 443
    "unsigned int8 constant"          shift, and go to state 444
    "floating point constant"         shift, and go to state 445
    "double constant"                 shift, and go to state 446
    "name"                            shift, and go to state 56
    "start of the string"             shift, and go to state 447
    "begin of code block"             shift, and go to state 448
    '-'                               shift, and go to state 449
    '+'                               shift, and go to state 450
    '*'                               shift, and go to state 451
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 452
    '!'                               shift, and go to state 453
    '['                               shift, and go to state 454
    '('                               shift, and go to state 455
    '$'                               shift, and go to state 456
    '@'                               shift, and go to state 457

    string_builder          go to state 458
    expr_reader             go to state 459
    expr_call_pipe          go to state 460
    name_in_namespace       go to state 461
    expr_new                go to state 462
    expr_cast               go to state 463
    expr_type_decl          go to state 464
    expr_type_info          go to state 465
    block_or_lambda         go to state 466
    expr_full_block         go to state 467
    expr_numeric_const      go to state 468
    expr_named_call         go to state 469
    expr_method_call        go to state 470
    func_addr_expr          go to state 471
    expr_field              go to state 472
    expr_call               go to state 473
    expr                    go to state 1274
    expr_mtag               go to state 475
    basic_type_declaration  go to state 476
    make_decl               go to state 477
    make_struct_decl        go to state 478
    make_tuple_call         go to state 479
    make_dim_decl           go to state 480
    make_table_decl         go to state 481
    array_comprehension     go to state 482


State 1183

  416 expr: expr '.' '[' expr ']' .

    $default  reduce using rule 416 (expr)


State 1184

  366 expr_field: expr '.' $@21 error $@22 .

    $default  reduce using rule 366 (expr_field)


State 1185

  362 expr_field: expr '.' basic_type_declaration '(' ')' .

    $default  reduce using rule 362 (expr_field)


State 1186

  300 expr_list: expr_list . ',' expr
  363 expr_field: expr '.' basic_type_declaration '(' expr_list . ')'

    ','  shift, and go to state 1040
    ')'  shift, and go to state 1275


State 1187

  690 type_declaration_no_options_no_dim: "block" '<' $@54 optional_function_argument_list optional_function_type '>' $@55 .

    $default  reduce using rule 690 (type_declaration_no_options_no_dim)


State 1188

  697 type_declaration_no_options_no_dim: "function" '<' $@58 optional_function_argument_list optional_function_type '>' $@59 .

    $default  reduce using rule 697 (type_declaration_no_options_no_dim)


State 1189

  704 type_declaration_no_options_no_dim: "lambda" '<' $@62 optional_function_argument_list optional_function_type '>' $@63 .

    $default  reduce using rule 704 (type_declaration_no_options_no_dim)


State 1190

  658 type_declaration_no_options_no_dim: '$' name_in_namespace '<' $@43 type_declaration_no_options_list '>' '(' . optional_expr_list ')'

    "struct"                          shift, and go to state 409
    "class"                           shift, and go to state 410
    "true"                            shift, and go to state 411
    "false"                           shift, and go to state 412
    "new"                             shift, and go to state 413
    "typeinfo"                        shift, and go to state 414
    "type"                            shift, and go to state 415
    "array"                           shift, and go to state 416
    "null"                            shift, and go to state 417
    "table"                           shift, and go to state 418
    "deref"                           shift, and go to state 419
    "cast"                            shift, and go to state 420
    "upcast"                          shift, and go to state 421
    "addr"                            shift, and go to state 422
    "reinterpret"                     shift, and go to state 423
    "unsafe"                          shift, and go to state 424
    "fixed_array"                     shift, and go to state 425
    "default"                         shift, and go to state 426
    "bool"                            shift, and go to state 225
    "void"                            shift, and go to state 226
    "string"                          shift, and go to state 227
    "int"                             shift, and go to state 229
    "int2"                            shift, and go to state 230
    "int3"                            shift, and go to state 231
    "int4"                            shift, and go to state 232
    "uint"                            shift, and go to state 233
    "bitfield"                        shift, and go to state 427
    "uint2"                           shift, and go to state 235
    "uint3"                           shift, and go to state 236
    "uint4"                           shift, and go to state 237
    "float"                           shift, and go to state 238
    "float2"                          shift, and go to state 239
    "float3"                          shift, and go to state 240
    "float4"                          shift, and go to state 241
    "range"                           shift, and go to state 242
    "urange"                          shift, and go to state 243
    "range64"                         shift, and go to state 244
    "urange64"                        shift, and go to state 245
    "int64"                           shift, and go to state 247
    "uint64"                          shift, and go to state 248
    "double"                          shift, and go to state 249
    "int8"                            shift, and go to state 252
    "uint8"                           shift, and go to state 253
    "int16"                           shift, and go to state 254
    "uint16"                          shift, and go to state 255
    "tuple"                           shift, and go to state 428
    "variant"                         shift, and go to state 429
    "generator"                       shift, and go to state 430
    "++"                              shift, and go to state 431
    "--"                              shift, and go to state 432
    "::"                              shift, and go to state 55
    "$$"                              shift, and go to state 433
    "$i"                              shift, and go to state 434
    "$v"                              shift, and go to state 435
    "$b"                              shift, and go to state 436
    "$a"                              shift, and go to state 437
    "$c"                              shift, and go to state 438
    "..."                             shift, and go to state 439
    "integer constant"                shift, and go to state 440
    "long integer constant"           shift, and go to state 441
    "unsigned integer constant"       shift, and go to state 442
    "unsigned long integer constant"  shift, and go to state 443
    "unsigned int8 constant"          shift, and go to state 444
    "floating point constant"         shift, and go to state 445
    "double constant"                 shift, and go to state 446
    "name"                            shift, and go to state 56
    "start of the string"             shift, and go to state 447
    "begin of code block"             shift, and go to state 448
    '-'                               shift, and go to state 449
    '+'                               shift, and go to state 450
    '*'                               shift, and go to state 451
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 452
    '!'                               shift, and go to state 453
    '['                               shift, and go to state 454
    '('                               shift, and go to state 455
    '$'                               shift, and go to state 456
    '@'                               shift, and go to state 457

    $default  reduce using rule 241 (optional_expr_list)

    string_builder          go to state 458
    expr_reader             go to state 459
    expr_call_pipe          go to state 460
    optional_expr_list      go to state 1276
    name_in_namespace       go to state 461
    expr_new                go to state 462
    expr_cast               go to state 463
    expr_type_decl          go to state 464
    expr_type_info          go to state 465
    expr_list               go to state 664
    block_or_lambda         go to state 466
    expr_full_block         go to state 467
    expr_numeric_const      go to state 468
    expr_named_call         go to state 469
    expr_method_call        go to state 470
    func_addr_expr          go to state 471
    expr_field              go to state 472
    expr_call               go to state 473
    expr                    go to state 600
    expr_mtag               go to state 475
    basic_type_declaration  go to state 476
    make_decl               go to state 477
    make_struct_decl        go to state 478
    make_tuple_call         go to state 479
    make_dim_decl           go to state 480
    make_table_decl         go to state 481
    array_comprehension     go to state 482


State 1191

  246 type_declaration_no_options_list: type_declaration_no_options_list c_or_s type_declaration .
  712 type_declaration: type_declaration . '|' type_declaration_no_options
  713                 | type_declaration . '|' '#'

    '|'  shift, and go to state 375

    $default  reduce using rule 246 (type_declaration_no_options_list)


State 1192

  587 variable_name_with_pos_list: "$i" '(' expr ')' .

    $default  reduce using rule 587 (variable_name_with_pos_list)


State 1193

  590 variable_name_with_pos_list: variable_name_with_pos_list ',' "name" "aka" . "name"

    "name"  shift, and go to state 1277


State 1194

  516 variable_declaration: variable_name_with_pos_list ':' type_declaration copy_or_move . expr

    "struct"                          shift, and go to state 409
    "class"                           shift, and go to state 410
    "true"                            shift, and go to state 411
    "false"                           shift, and go to state 412
    "new"                             shift, and go to state 413
    "typeinfo"                        shift, and go to state 414
    "type"                            shift, and go to state 415
    "array"                           shift, and go to state 416
    "null"                            shift, and go to state 417
    "table"                           shift, and go to state 418
    "deref"                           shift, and go to state 419
    "cast"                            shift, and go to state 420
    "upcast"                          shift, and go to state 421
    "addr"                            shift, and go to state 422
    "reinterpret"                     shift, and go to state 423
    "unsafe"                          shift, and go to state 424
    "fixed_array"                     shift, and go to state 425
    "default"                         shift, and go to state 426
    "bool"                            shift, and go to state 225
    "void"                            shift, and go to state 226
    "string"                          shift, and go to state 227
    "int"                             shift, and go to state 229
    "int2"                            shift, and go to state 230
    "int3"                            shift, and go to state 231
    "int4"                            shift, and go to state 232
    "uint"                            shift, and go to state 233
    "bitfield"                        shift, and go to state 427
    "uint2"                           shift, and go to state 235
    "uint3"                           shift, and go to state 236
    "uint4"                           shift, and go to state 237
    "float"                           shift, and go to state 238
    "float2"                          shift, and go to state 239
    "float3"                          shift, and go to state 240
    "float4"                          shift, and go to state 241
    "range"                           shift, and go to state 242
    "urange"                          shift, and go to state 243
    "range64"                         shift, and go to state 244
    "urange64"                        shift, and go to state 245
    "int64"                           shift, and go to state 247
    "uint64"                          shift, and go to state 248
    "double"                          shift, and go to state 249
    "int8"                            shift, and go to state 252
    "uint8"                           shift, and go to state 253
    "int16"                           shift, and go to state 254
    "uint16"                          shift, and go to state 255
    "tuple"                           shift, and go to state 428
    "variant"                         shift, and go to state 429
    "generator"                       shift, and go to state 430
    "++"                              shift, and go to state 431
    "--"                              shift, and go to state 432
    "::"                              shift, and go to state 55
    "$$"                              shift, and go to state 433
    "$i"                              shift, and go to state 434
    "$v"                              shift, and go to state 435
    "$b"                              shift, and go to state 436
    "$a"                              shift, and go to state 437
    "$c"                              shift, and go to state 438
    "..."                             shift, and go to state 439
    "integer constant"                shift, and go to state 440
    "long integer constant"           shift, and go to state 441
    "unsigned integer constant"       shift, and go to state 442
    "unsigned long integer constant"  shift, and go to state 443
    "unsigned int8 constant"          shift, and go to state 444
    "floating point constant"         shift, and go to state 445
    "double constant"                 shift, and go to state 446
    "name"                            shift, and go to state 56
    "start of the string"             shift, and go to state 447
    "begin of code block"             shift, and go to state 448
    '-'                               shift, and go to state 449
    '+'                               shift, and go to state 450
    '*'                               shift, and go to state 451
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 452
    '!'                               shift, and go to state 453
    '['                               shift, and go to state 454
    '('                               shift, and go to state 455
    '$'                               shift, and go to state 456
    '@'                               shift, and go to state 457

    string_builder          go to state 458
    expr_reader             go to state 459
    expr_call_pipe          go to state 460
    name_in_namespace       go to state 461
    expr_new                go to state 462
    expr_cast               go to state 463
    expr_type_decl          go to state 464
    expr_type_info          go to state 465
    block_or_lambda         go to state 466
    expr_full_block         go to state 467
    expr_numeric_const      go to state 468
    expr_named_call         go to state 469
    expr_method_call        go to state 470
    func_addr_expr          go to state 471
    expr_field              go to state 472
    expr_call               go to state 473
    expr                    go to state 1278
    expr_mtag               go to state 475
    basic_type_declaration  go to state 476
    make_decl               go to state 477
    make_struct_decl        go to state 478
    make_tuple_call         go to state 479
    make_dim_decl           go to state 480
    make_table_decl         go to state 481
    array_comprehension     go to state 482


State 1195

   73 expression_while_loop: "while" '(' expr ')' . expression_block

    $default  reduce using rule 216 ($@5)

    expression_block  go to state 1279
    $@5               go to state 327


State 1196

   71 expression_for_loop: "for" '(' variable_name_with_pos_list "in" . expr_list ')' expression_block

    "struct"                          shift, and go to state 409
    "class"                           shift, and go to state 410
    "true"                            shift, and go to state 411
    "false"                           shift, and go to state 412
    "new"                             shift, and go to state 413
    "typeinfo"                        shift, and go to state 414
    "type"                            shift, and go to state 415
    "array"                           shift, and go to state 416
    "null"                            shift, and go to state 417
    "table"                           shift, and go to state 418
    "deref"                           shift, and go to state 419
    "cast"                            shift, and go to state 420
    "upcast"                          shift, and go to state 421
    "addr"                            shift, and go to state 422
    "reinterpret"                     shift, and go to state 423
    "unsafe"                          shift, and go to state 424
    "fixed_array"                     shift, and go to state 425
    "default"                         shift, and go to state 426
    "bool"                            shift, and go to state 225
    "void"                            shift, and go to state 226
    "string"                          shift, and go to state 227
    "int"                             shift, and go to state 229
    "int2"                            shift, and go to state 230
    "int3"                            shift, and go to state 231
    "int4"                            shift, and go to state 232
    "uint"                            shift, and go to state 233
    "bitfield"                        shift, and go to state 427
    "uint2"                           shift, and go to state 235
    "uint3"                           shift, and go to state 236
    "uint4"                           shift, and go to state 237
    "float"                           shift, and go to state 238
    "float2"                          shift, and go to state 239
    "float3"                          shift, and go to state 240
    "float4"                          shift, and go to state 241
    "range"                           shift, and go to state 242
    "urange"                          shift, and go to state 243
    "range64"                         shift, and go to state 244
    "urange64"                        shift, and go to state 245
    "int64"                           shift, and go to state 247
    "uint64"                          shift, and go to state 248
    "double"                          shift, and go to state 249
    "int8"                            shift, and go to state 252
    "uint8"                           shift, and go to state 253
    "int16"                           shift, and go to state 254
    "uint16"                          shift, and go to state 255
    "tuple"                           shift, and go to state 428
    "variant"                         shift, and go to state 429
    "generator"                       shift, and go to state 430
    "++"                              shift, and go to state 431
    "--"                              shift, and go to state 432
    "::"                              shift, and go to state 55
    "$$"                              shift, and go to state 433
    "$i"                              shift, and go to state 434
    "$v"                              shift, and go to state 435
    "$b"                              shift, and go to state 436
    "$a"                              shift, and go to state 437
    "$c"                              shift, and go to state 438
    "..."                             shift, and go to state 439
    "integer constant"                shift, and go to state 440
    "long integer constant"           shift, and go to state 441
    "unsigned integer constant"       shift, and go to state 442
    "unsigned long integer constant"  shift, and go to state 443
    "unsigned int8 constant"          shift, and go to state 444
    "floating point constant"         shift, and go to state 445
    "double constant"                 shift, and go to state 446
    "name"                            shift, and go to state 56
    "start of the string"             shift, and go to state 447
    "begin of code block"             shift, and go to state 448
    '-'                               shift, and go to state 449
    '+'                               shift, and go to state 450
    '*'                               shift, and go to state 451
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 452
    '!'                               shift, and go to state 453
    '['                               shift, and go to state 454
    '('                               shift, and go to state 455
    '$'                               shift, and go to state 456
    '@'                               shift, and go to state 457

    string_builder          go to state 458
    expr_reader             go to state 459
    expr_call_pipe          go to state 460
    name_in_namespace       go to state 461
    expr_new                go to state 462
    expr_cast               go to state 463
    expr_type_decl          go to state 464
    expr_type_info          go to state 465
    expr_list               go to state 1280
    block_or_lambda         go to state 466
    expr_full_block         go to state 467
    expr_numeric_const      go to state 468
    expr_named_call         go to state 469
    expr_method_call        go to state 470
    func_addr_expr          go to state 471
    expr_field              go to state 472
    expr_call               go to state 473
    expr                    go to state 600
    expr_mtag               go to state 475
    basic_type_declaration  go to state 476
    make_decl               go to state 477
    make_struct_decl        go to state 478
    make_tuple_call         go to state 479
    make_dim_decl           go to state 480
    make_table_decl         go to state 481
    array_comprehension     go to state 482


State 1197

  269 expression_try_catch: "try" expression_block "recover" expression_block .

    $default  reduce using rule 269 (expression_try_catch)


State 1198

   74 expression_with: "with" '(' expr ')' . expression_block

    $default  reduce using rule 216 ($@5)

    expression_block  go to state 1281
    $@5               go to state 327


State 1199

   75 expression_with_alias: "assume" "name" '=' expr .
  347 expr_method_call: expr . "->" "name" '(' ')'
  348                 | expr . "->" "name" '(' expr_list ')'
  358 expr_field: expr . '.' "name"
  359           | expr . '.' '.' "name"
  360           | expr . '.' "name" '(' ')'
  361           | expr . '.' "name" '(' expr_list ')'
  362           | expr . '.' basic_type_declaration '(' ')'
  363           | expr . '.' basic_type_declaration '(' expr_list ')'
  366           | expr . '.' $@21 error $@22
  388 expr: expr . "<<" expr
  389     | expr . ">>" expr
  390     | expr . "<<<" expr
  391     | expr . ">>>" expr
  392     | expr . '+' expr
  393     | expr . '-' expr
  394     | expr . '*' expr
  395     | expr . '/' expr
  396     | expr . '%' expr
  397     | expr . '<' expr
  398     | expr . '>' expr
  399     | expr . "==" expr
  400     | expr . "!=" expr
  401     | expr . "<=" expr
  402     | expr . ">=" expr
  403     | expr . '&' expr
  404     | expr . '|' expr
  405     | expr . '^' expr
  406     | expr . "&&" expr
  407     | expr . "||" expr
  408     | expr . "^^" expr
  409     | expr . ".." expr
  412     | expr . "++"
  413     | expr . "--"
  415     | expr . '[' expr ']'
  416     | expr . '.' '[' expr ']'
  417     | expr . "?[" expr ']'
  418     | expr . '.' "?[" expr ']'
  419     | expr . "?." "name"
  420     | expr . '.' "?." "name"
  429     | expr . "??" expr
  430     | expr . '?' expr ':' expr
  433     | expr . "is" "type" '<' $@23 type_declaration_no_options '>' $@24
  434     | expr . "is" basic_type_declaration
  435     | expr . "is" "name"
  436     | expr . "as" "name"
  439     | expr . "as" "type" '<' $@25 type_declaration '>' $@26
  440     | expr . "as" basic_type_declaration
  441     | expr . '?' "as" "name"
  444     | expr . '?' "as" "type" '<' $@27 type_declaration '>' $@28
  445     | expr . '?' "as" basic_type_declaration
  453     | expr . "<|" expr
  454     | expr . "|>" expr
  455     | expr . "|>" basic_type_declaration
  466 expr_mtag: expr . '.' "$f" '(' expr ')'
  467          | expr . "?." "$f" '(' expr ')'
  468          | expr . '.' '.' "$f" '(' expr ')'
  469          | expr . '.' "?." "$f" '(' expr ')'
  470          | expr . "as" "$f" '(' expr ')'
  471          | expr . '?' "as" "$f" '(' expr ')'
  472          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 609
    "as"   shift, and go to state 610
    "<<"   shift, and go to state 611
    ">>"   shift, and go to state 612
    "++"   shift, and go to state 613
    "--"   shift, and go to state 614
    "<="   shift, and go to state 615
    ">="   shift, and go to state 616
    "=="   shift, and go to state 617
    "!="   shift, and go to state 618
    "->"   shift, and go to state 619
    "??"   shift, and go to state 620
    "?."   shift, and go to state 621
    "?["   shift, and go to state 622
    "<|"   shift, and go to state 623
    "|>"   shift, and go to state 624
    "<<<"  shift, and go to state 625
    ">>>"  shift, and go to state 626
    "&&"   shift, and go to state 627
    "||"   shift, and go to state 628
    "^^"   shift, and go to state 629
    ".."   shift, and go to state 630
    '?'    shift, and go to state 631
    '|'    shift, and go to state 632
    '^'    shift, and go to state 633
    '&'    shift, and go to state 634
    '<'    shift, and go to state 635
    '>'    shift, and go to state 636
    '-'    shift, and go to state 637
    '+'    shift, and go to state 638
    '*'    shift, and go to state 639
    '/'    shift, and go to state 640
    '%'    shift, and go to state 641
    '.'    shift, and go to state 642
    '['    shift, and go to state 643

    $default  reduce using rule 75 (expression_with_alias)


State 1200

   69 expression_if_then_else: if_or_static_if '(' expr ')' . expression_block expression_else

    $default  reduce using rule 216 ($@5)

    expression_block  go to state 1282
    $@5               go to state 327


State 1201

   70 expression_if_then_else: expression_if_one_liner "if" '(' expr . ')' expression_else_one_liner "end of expression"
  347 expr_method_call: expr . "->" "name" '(' ')'
  348                 | expr . "->" "name" '(' expr_list ')'
  358 expr_field: expr . '.' "name"
  359           | expr . '.' '.' "name"
  360           | expr . '.' "name" '(' ')'
  361           | expr . '.' "name" '(' expr_list ')'
  362           | expr . '.' basic_type_declaration '(' ')'
  363           | expr . '.' basic_type_declaration '(' expr_list ')'
  366           | expr . '.' $@21 error $@22
  388 expr: expr . "<<" expr
  389     | expr . ">>" expr
  390     | expr . "<<<" expr
  391     | expr . ">>>" expr
  392     | expr . '+' expr
  393     | expr . '-' expr
  394     | expr . '*' expr
  395     | expr . '/' expr
  396     | expr . '%' expr
  397     | expr . '<' expr
  398     | expr . '>' expr
  399     | expr . "==" expr
  400     | expr . "!=" expr
  401     | expr . "<=" expr
  402     | expr . ">=" expr
  403     | expr . '&' expr
  404     | expr . '|' expr
  405     | expr . '^' expr
  406     | expr . "&&" expr
  407     | expr . "||" expr
  408     | expr . "^^" expr
  409     | expr . ".." expr
  412     | expr . "++"
  413     | expr . "--"
  415     | expr . '[' expr ']'
  416     | expr . '.' '[' expr ']'
  417     | expr . "?[" expr ']'
  418     | expr . '.' "?[" expr ']'
  419     | expr . "?." "name"
  420     | expr . '.' "?." "name"
  429     | expr . "??" expr
  430     | expr . '?' expr ':' expr
  433     | expr . "is" "type" '<' $@23 type_declaration_no_options '>' $@24
  434     | expr . "is" basic_type_declaration
  435     | expr . "is" "name"
  436     | expr . "as" "name"
  439     | expr . "as" "type" '<' $@25 type_declaration '>' $@26
  440     | expr . "as" basic_type_declaration
  441     | expr . '?' "as" "name"
  444     | expr . '?' "as" "type" '<' $@27 type_declaration '>' $@28
  445     | expr . '?' "as" basic_type_declaration
  453     | expr . "<|" expr
  454     | expr . "|>" expr
  455     | expr . "|>" basic_type_declaration
  466 expr_mtag: expr . '.' "$f" '(' expr ')'
  467          | expr . "?." "$f" '(' expr ')'
  468          | expr . '.' '.' "$f" '(' expr ')'
  469          | expr . '.' "?." "$f" '(' expr ')'
  470          | expr . "as" "$f" '(' expr ')'
  471          | expr . '?' "as" "$f" '(' expr ')'
  472          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 609
    "as"   shift, and go to state 610
    "<<"   shift, and go to state 611
    ">>"   shift, and go to state 612
    "++"   shift, and go to state 613
    "--"   shift, and go to state 614
    "<="   shift, and go to state 615
    ">="   shift, and go to state 616
    "=="   shift, and go to state 617
    "!="   shift, and go to state 618
    "->"   shift, and go to state 619
    "??"   shift, and go to state 620
    "?."   shift, and go to state 621
    "?["   shift, and go to state 622
    "<|"   shift, and go to state 623
    "|>"   shift, and go to state 624
    "<<<"  shift, and go to state 625
    ">>>"  shift, and go to state 626
    "&&"   shift, and go to state 627
    "||"   shift, and go to state 628
    "^^"   shift, and go to state 629
    ".."   shift, and go to state 630
    '?'    shift, and go to state 631
    '|'    shift, and go to state 632
    '^'    shift, and go to state 633
    '&'    shift, and go to state 634
    '<'    shift, and go to state 635
    '>'    shift, and go to state 636
    '-'    shift, and go to state 637
    '+'    shift, and go to state 638
    '*'    shift, and go to state 639
    '/'    shift, and go to state 640
    '%'    shift, and go to state 641
    '.'    shift, and go to state 642
    '['    shift, and go to state 643
    ')'    shift, and go to state 1283


State 1202

  215 expression_block_finally: "finally" $@3 . "begin of code block" expressions $@4 "end of code block"

    "begin of code block"  shift, and go to state 1284


State 1203

  283 expression_let: kwd_let optional_in_scope "begin of code block" variable_declaration_list . "end of code block"
  531 variable_declaration_list: variable_declaration_list . "end of expression"
  532                          | variable_declaration_list . let_variable_declaration

    "$i"                 shift, and go to state 537
    "name"               shift, and go to state 538
    "end of code block"  shift, and go to state 1285
    "end of expression"  shift, and go to state 1286

    let_variable_name_with_pos_list  go to state 539
    let_variable_declaration         go to state 1287


State 1204

  277 tuple_expansion: "name" .

    $default  reduce using rule 277 (tuple_expansion)


State 1205

  278 tuple_expansion: tuple_expansion . ',' "name"
  279 tuple_expansion_variable_declaration: '(' tuple_expansion . ')' ':' type_declaration_no_options copy_or_move_or_clone expr "end of expression"
  280                                     | '(' tuple_expansion . ')' optional_ref copy_or_move_or_clone expr "end of expression"

    ','  shift, and go to state 1288
    ')'  shift, and go to state 1289


State 1206

  491 struct_variable_declaration_list: struct_variable_declaration_list optional_annotation_list "def" optional_public_or_private_member_variable "abstract" . optional_constant $@30 function_declaration_header "end of expression"

    "const"  shift, and go to state 1290

    $default  reduce using rule 479 (optional_constant)

    optional_constant  go to state 1291


State 1207

  493 struct_variable_declaration_list: struct_variable_declaration_list optional_annotation_list "def" optional_public_or_private_member_variable optional_static_member_variable . optional_override optional_constant $@31 function_declaration_header expression_block

    "override"  shift, and go to state 1208
    "sealed"    shift, and go to state 1209

    $default  reduce using rule 476 (optional_override)

    optional_override  go to state 1292


State 1208

  477 optional_override: "override" .

    $default  reduce using rule 477 (optional_override)


State 1209

  478 optional_override: "sealed" .

    $default  reduce using rule 478 (optional_override)


State 1210

  486 structure_variable_declaration: optional_field_annotation optional_static_member_variable optional_override . optional_public_or_private_member_variable variable_declaration

    "public"   shift, and go to state 1100
    "private"  shift, and go to state 1101

    $default  reduce using rule 481 (optional_public_or_private_member_variable)

    optional_public_or_private_member_variable  go to state 1293


State 1211

  527 let_variable_name_with_pos_list: let_variable_name_with_pos_list ',' "name" "aka" "name" .

    $default  reduce using rule 527 (let_variable_name_with_pos_list)


State 1212

  347 expr_method_call: expr . "->" "name" '(' ')'
  348                 | expr . "->" "name" '(' expr_list ')'
  358 expr_field: expr . '.' "name"
  359           | expr . '.' '.' "name"
  360           | expr . '.' "name" '(' ')'
  361           | expr . '.' "name" '(' expr_list ')'
  362           | expr . '.' basic_type_declaration '(' ')'
  363           | expr . '.' basic_type_declaration '(' expr_list ')'
  366           | expr . '.' $@21 error $@22
  388 expr: expr . "<<" expr
  389     | expr . ">>" expr
  390     | expr . "<<<" expr
  391     | expr . ">>>" expr
  392     | expr . '+' expr
  393     | expr . '-' expr
  394     | expr . '*' expr
  395     | expr . '/' expr
  396     | expr . '%' expr
  397     | expr . '<' expr
  398     | expr . '>' expr
  399     | expr . "==" expr
  400     | expr . "!=" expr
  401     | expr . "<=" expr
  402     | expr . ">=" expr
  403     | expr . '&' expr
  404     | expr . '|' expr
  405     | expr . '^' expr
  406     | expr . "&&" expr
  407     | expr . "||" expr
  408     | expr . "^^" expr
  409     | expr . ".." expr
  412     | expr . "++"
  413     | expr . "--"
  415     | expr . '[' expr ']'
  416     | expr . '.' '[' expr ']'
  417     | expr . "?[" expr ']'
  418     | expr . '.' "?[" expr ']'
  419     | expr . "?." "name"
  420     | expr . '.' "?." "name"
  429     | expr . "??" expr
  430     | expr . '?' expr ':' expr
  433     | expr . "is" "type" '<' $@23 type_declaration_no_options '>' $@24
  434     | expr . "is" basic_type_declaration
  435     | expr . "is" "name"
  436     | expr . "as" "name"
  439     | expr . "as" "type" '<' $@25 type_declaration '>' $@26
  440     | expr . "as" basic_type_declaration
  441     | expr . '?' "as" "name"
  444     | expr . '?' "as" "type" '<' $@27 type_declaration '>' $@28
  445     | expr . '?' "as" basic_type_declaration
  453     | expr . "<|" expr
  454     | expr . "|>" expr
  455     | expr . "|>" basic_type_declaration
  466 expr_mtag: expr . '.' "$f" '(' expr ')'
  467          | expr . "?." "$f" '(' expr ')'
  468          | expr . '.' '.' "$f" '(' expr ')'
  469          | expr . '.' "?." "$f" '(' expr ')'
  470          | expr . "as" "$f" '(' expr ')'
  471          | expr . '?' "as" "$f" '(' expr ')'
  472          | expr . "is" "$f" '(' expr ')'
  534 let_variable_declaration: let_variable_name_with_pos_list ':' type_declaration_no_options copy_or_move_or_clone expr . "end of expression"

    "is"                 shift, and go to state 609
    "as"                 shift, and go to state 610
    "<<"                 shift, and go to state 611
    ">>"                 shift, and go to state 612
    "++"                 shift, and go to state 613
    "--"                 shift, and go to state 614
    "<="                 shift, and go to state 615
    ">="                 shift, and go to state 616
    "=="                 shift, and go to state 617
    "!="                 shift, and go to state 618
    "->"                 shift, and go to state 619
    "??"                 shift, and go to state 620
    "?."                 shift, and go to state 621
    "?["                 shift, and go to state 622
    "<|"                 shift, and go to state 623
    "|>"                 shift, and go to state 624
    "<<<"                shift, and go to state 625
    ">>>"                shift, and go to state 626
    "&&"                 shift, and go to state 627
    "||"                 shift, and go to state 628
    "^^"                 shift, and go to state 629
    ".."                 shift, and go to state 630
    "end of expression"  shift, and go to state 1294
    '?'                  shift, and go to state 631
    '|'                  shift, and go to state 632
    '^'                  shift, and go to state 633
    '&'                  shift, and go to state 634
    '<'                  shift, and go to state 635
    '>'                  shift, and go to state 636
    '-'                  shift, and go to state 637
    '+'                  shift, and go to state 638
    '*'                  shift, and go to state 639
    '/'                  shift, and go to state 640
    '%'                  shift, and go to state 641
    '.'                  shift, and go to state 642
    '['                  shift, and go to state 643


State 1213

  535 let_variable_declaration: let_variable_name_with_pos_list optional_ref copy_or_move_or_clone expr "end of expression" .

    $default  reduce using rule 535 (let_variable_declaration)


State 1214

  751 make_struct_decl: "struct" '<' $@77 type_declaration_no_options '>' $@78 . '(' use_initializer optional_make_struct_dim_decl ')'

    '('  shift, and go to state 1295


State 1215

  754 make_struct_decl: "class" '<' $@79 type_declaration_no_options '>' $@80 . '(' use_initializer optional_make_struct_dim_decl ')'

    '('  shift, and go to state 1296


State 1216

  254 new_type_declaration: '<' $@7 type_declaration '>' $@8 .

    $default  reduce using rule 254 (new_type_declaration)


State 1217

  260 expr_new: "new" new_type_declaration '(' "uninitialized" make_struct_single ')' .

    $default  reduce using rule 260 (expr_new)


State 1218

  297 expr_type_info: "typeinfo" name_in_namespace '<' "name" '>' '(' . expr ')'

    "struct"                          shift, and go to state 409
    "class"                           shift, and go to state 410
    "true"                            shift, and go to state 411
    "false"                           shift, and go to state 412
    "new"                             shift, and go to state 413
    "typeinfo"                        shift, and go to state 414
    "type"                            shift, and go to state 415
    "array"                           shift, and go to state 416
    "null"                            shift, and go to state 417
    "table"                           shift, and go to state 418
    "deref"                           shift, and go to state 419
    "cast"                            shift, and go to state 420
    "upcast"                          shift, and go to state 421
    "addr"                            shift, and go to state 422
    "reinterpret"                     shift, and go to state 423
    "unsafe"                          shift, and go to state 424
    "fixed_array"                     shift, and go to state 425
    "default"                         shift, and go to state 426
    "bool"                            shift, and go to state 225
    "void"                            shift, and go to state 226
    "string"                          shift, and go to state 227
    "int"                             shift, and go to state 229
    "int2"                            shift, and go to state 230
    "int3"                            shift, and go to state 231
    "int4"                            shift, and go to state 232
    "uint"                            shift, and go to state 233
    "bitfield"                        shift, and go to state 427
    "uint2"                           shift, and go to state 235
    "uint3"                           shift, and go to state 236
    "uint4"                           shift, and go to state 237
    "float"                           shift, and go to state 238
    "float2"                          shift, and go to state 239
    "float3"                          shift, and go to state 240
    "float4"                          shift, and go to state 241
    "range"                           shift, and go to state 242
    "urange"                          shift, and go to state 243
    "range64"                         shift, and go to state 244
    "urange64"                        shift, and go to state 245
    "int64"                           shift, and go to state 247
    "uint64"                          shift, and go to state 248
    "double"                          shift, and go to state 249
    "int8"                            shift, and go to state 252
    "uint8"                           shift, and go to state 253
    "int16"                           shift, and go to state 254
    "uint16"                          shift, and go to state 255
    "tuple"                           shift, and go to state 428
    "variant"                         shift, and go to state 429
    "generator"                       shift, and go to state 430
    "++"                              shift, and go to state 431
    "--"                              shift, and go to state 432
    "::"                              shift, and go to state 55
    "$$"                              shift, and go to state 433
    "$i"                              shift, and go to state 434
    "$v"                              shift, and go to state 435
    "$b"                              shift, and go to state 436
    "$a"                              shift, and go to state 437
    "$c"                              shift, and go to state 438
    "..."                             shift, and go to state 439
    "integer constant"                shift, and go to state 440
    "long integer constant"           shift, and go to state 441
    "unsigned integer constant"       shift, and go to state 442
    "unsigned long integer constant"  shift, and go to state 443
    "unsigned int8 constant"          shift, and go to state 444
    "floating point constant"         shift, and go to state 445
    "double constant"                 shift, and go to state 446
    "name"                            shift, and go to state 56
    "start of the string"             shift, and go to state 447
    "begin of code block"             shift, and go to state 448
    '-'                               shift, and go to state 449
    '+'                               shift, and go to state 450
    '*'                               shift, and go to state 451
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 452
    '!'                               shift, and go to state 453
    '['                               shift, and go to state 454
    '('                               shift, and go to state 455
    '$'                               shift, and go to state 456
    '@'                               shift, and go to state 457

    string_builder          go to state 458
    expr_reader             go to state 459
    expr_call_pipe          go to state 460
    name_in_namespace       go to state 461
    expr_new                go to state 462
    expr_cast               go to state 463
    expr_type_decl          go to state 464
    expr_type_info          go to state 465
    block_or_lambda         go to state 466
    expr_full_block         go to state 467
    expr_numeric_const      go to state 468
    expr_named_call         go to state 469
    expr_method_call        go to state 470
    func_addr_expr          go to state 471
    expr_field              go to state 472
    expr_call               go to state 473
    expr                    go to state 1297
    expr_mtag               go to state 475
    basic_type_declaration  go to state 476
    make_decl               go to state 477
    make_struct_decl        go to state 478
    make_tuple_call         go to state 479
    make_dim_decl           go to state 480
    make_table_decl         go to state 481
    array_comprehension     go to state 482


State 1219

  298 expr_type_info: "typeinfo" name_in_namespace '<' "name" c_or_s "name" . '>' '(' expr ')'

    '>'  shift, and go to state 1298


State 1220

  295 expr_type_decl: "type" '<' $@15 type_declaration '>' $@16 .

    $default  reduce using rule 295 (expr_type_decl)


State 1221

  770 make_dim_decl: "array" "struct" '<' $@87 type_declaration_no_options '>' . $@88 '(' use_initializer optional_make_struct_dim_decl ')'

    $default  reduce using rule 769 ($@88)

    $@88  go to state 1299


State 1222

  773 make_dim_decl: "array" "tuple" '<' $@89 type_declaration_no_options '>' . $@90 '(' use_initializer optional_make_struct_dim_decl ')'

    $default  reduce using rule 772 ($@90)

    $@90  go to state 1300


State 1223

  776 make_dim_decl: "array" "variant" '<' $@91 type_declaration_no_options '>' . $@92 '(' make_variant_dim ')'

    $default  reduce using rule 775 ($@92)

    $@92  go to state 1301


State 1224

  780 make_dim_decl: "array" '<' $@93 type_declaration_no_options '>' $@94 . '(' optional_expr_list ')'

    '('  shift, and go to state 1302


State 1225

  789 make_table_decl: "table" '<' type_declaration_no_options '>' '(' optional_expr_map_tuple_list . ')'

    ')'  shift, and go to state 1303


State 1226

  244 optional_expr_map_tuple_list: expr_map_tuple_list . optional_comma
  786 expr_map_tuple_list: expr_map_tuple_list . ',' make_map_tuple

    ','  shift, and go to state 779

    $default  reduce using rule 793 (optional_comma)

    optional_comma  go to state 1304


State 1227

  790 make_table_decl: "table" '<' type_declaration_no_options c_or_s type_declaration_no_options '>' . '(' optional_expr_map_tuple_list ')'

    '('  shift, and go to state 1305


State 1228

  286 expr_cast: "cast" '<' $@9 type_declaration_no_options '>' $@10 . expr

    "struct"                          shift, and go to state 409
    "class"                           shift, and go to state 410
    "true"                            shift, and go to state 411
    "false"                           shift, and go to state 412
    "new"                             shift, and go to state 413
    "typeinfo"                        shift, and go to state 414
    "type"                            shift, and go to state 415
    "array"                           shift, and go to state 416
    "null"                            shift, and go to state 417
    "table"                           shift, and go to state 418
    "deref"                           shift, and go to state 419
    "cast"                            shift, and go to state 420
    "upcast"                          shift, and go to state 421
    "addr"                            shift, and go to state 422
    "reinterpret"                     shift, and go to state 423
    "unsafe"                          shift, and go to state 424
    "fixed_array"                     shift, and go to state 425
    "default"                         shift, and go to state 426
    "bool"                            shift, and go to state 225
    "void"                            shift, and go to state 226
    "string"                          shift, and go to state 227
    "int"                             shift, and go to state 229
    "int2"                            shift, and go to state 230
    "int3"                            shift, and go to state 231
    "int4"                            shift, and go to state 232
    "uint"                            shift, and go to state 233
    "bitfield"                        shift, and go to state 427
    "uint2"                           shift, and go to state 235
    "uint3"                           shift, and go to state 236
    "uint4"                           shift, and go to state 237
    "float"                           shift, and go to state 238
    "float2"                          shift, and go to state 239
    "float3"                          shift, and go to state 240
    "float4"                          shift, and go to state 241
    "range"                           shift, and go to state 242
    "urange"                          shift, and go to state 243
    "range64"                         shift, and go to state 244
    "urange64"                        shift, and go to state 245
    "int64"                           shift, and go to state 247
    "uint64"                          shift, and go to state 248
    "double"                          shift, and go to state 249
    "int8"                            shift, and go to state 252
    "uint8"                           shift, and go to state 253
    "int16"                           shift, and go to state 254
    "uint16"                          shift, and go to state 255
    "tuple"                           shift, and go to state 428
    "variant"                         shift, and go to state 429
    "generator"                       shift, and go to state 430
    "++"                              shift, and go to state 431
    "--"                              shift, and go to state 432
    "::"                              shift, and go to state 55
    "$$"                              shift, and go to state 433
    "$i"                              shift, and go to state 434
    "$v"                              shift, and go to state 435
    "$b"                              shift, and go to state 436
    "$a"                              shift, and go to state 437
    "$c"                              shift, and go to state 438
    "..."                             shift, and go to state 439
    "integer constant"                shift, and go to state 440
    "long integer constant"           shift, and go to state 441
    "unsigned integer constant"       shift, and go to state 442
    "unsigned long integer constant"  shift, and go to state 443
    "unsigned int8 constant"          shift, and go to state 444
    "floating point constant"         shift, and go to state 445
    "double constant"                 shift, and go to state 446
    "name"                            shift, and go to state 56
    "start of the string"             shift, and go to state 447
    "begin of code block"             shift, and go to state 448
    '-'                               shift, and go to state 449
    '+'                               shift, and go to state 450
    '*'                               shift, and go to state 451
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 452
    '!'                               shift, and go to state 453
    '['                               shift, and go to state 454
    '('                               shift, and go to state 455
    '$'                               shift, and go to state 456
    '@'                               shift, and go to state 457

    string_builder          go to state 458
    expr_reader             go to state 459
    expr_call_pipe          go to state 460
    name_in_namespace       go to state 461
    expr_new                go to state 462
    expr_cast               go to state 463
    expr_type_decl          go to state 464
    expr_type_info          go to state 465
    block_or_lambda         go to state 466
    expr_full_block         go to state 467
    expr_numeric_const      go to state 468
    expr_named_call         go to state 469
    expr_method_call        go to state 470
    func_addr_expr          go to state 471
    expr_field              go to state 472
    expr_call               go to state 473
    expr                    go to state 1306
    expr_mtag               go to state 475
    basic_type_declaration  go to state 476
    make_decl               go to state 477
    make_struct_decl        go to state 478
    make_tuple_call         go to state 479
    make_dim_decl           go to state 480
    make_table_decl         go to state 481
    array_comprehension     go to state 482


State 1229

  289 expr_cast: "upcast" '<' $@11 type_declaration_no_options '>' $@12 . expr

    "struct"                          shift, and go to state 409
    "class"                           shift, and go to state 410
    "true"                            shift, and go to state 411
    "false"                           shift, and go to state 412
    "new"                             shift, and go to state 413
    "typeinfo"                        shift, and go to state 414
    "type"                            shift, and go to state 415
    "array"                           shift, and go to state 416
    "null"                            shift, and go to state 417
    "table"                           shift, and go to state 418
    "deref"                           shift, and go to state 419
    "cast"                            shift, and go to state 420
    "upcast"                          shift, and go to state 421
    "addr"                            shift, and go to state 422
    "reinterpret"                     shift, and go to state 423
    "unsafe"                          shift, and go to state 424
    "fixed_array"                     shift, and go to state 425
    "default"                         shift, and go to state 426
    "bool"                            shift, and go to state 225
    "void"                            shift, and go to state 226
    "string"                          shift, and go to state 227
    "int"                             shift, and go to state 229
    "int2"                            shift, and go to state 230
    "int3"                            shift, and go to state 231
    "int4"                            shift, and go to state 232
    "uint"                            shift, and go to state 233
    "bitfield"                        shift, and go to state 427
    "uint2"                           shift, and go to state 235
    "uint3"                           shift, and go to state 236
    "uint4"                           shift, and go to state 237
    "float"                           shift, and go to state 238
    "float2"                          shift, and go to state 239
    "float3"                          shift, and go to state 240
    "float4"                          shift, and go to state 241
    "range"                           shift, and go to state 242
    "urange"                          shift, and go to state 243
    "range64"                         shift, and go to state 244
    "urange64"                        shift, and go to state 245
    "int64"                           shift, and go to state 247
    "uint64"                          shift, and go to state 248
    "double"                          shift, and go to state 249
    "int8"                            shift, and go to state 252
    "uint8"                           shift, and go to state 253
    "int16"                           shift, and go to state 254
    "uint16"                          shift, and go to state 255
    "tuple"                           shift, and go to state 428
    "variant"                         shift, and go to state 429
    "generator"                       shift, and go to state 430
    "++"                              shift, and go to state 431
    "--"                              shift, and go to state 432
    "::"                              shift, and go to state 55
    "$$"                              shift, and go to state 433
    "$i"                              shift, and go to state 434
    "$v"                              shift, and go to state 435
    "$b"                              shift, and go to state 436
    "$a"                              shift, and go to state 437
    "$c"                              shift, and go to state 438
    "..."                             shift, and go to state 439
    "integer constant"                shift, and go to state 440
    "long integer constant"           shift, and go to state 441
    "unsigned integer constant"       shift, and go to state 442
    "unsigned long integer constant"  shift, and go to state 443
    "unsigned int8 constant"          shift, and go to state 444
    "floating point constant"         shift, and go to state 445
    "double constant"                 shift, and go to state 446
    "name"                            shift, and go to state 56
    "start of the string"             shift, and go to state 447
    "begin of code block"             shift, and go to state 448
    '-'                               shift, and go to state 449
    '+'                               shift, and go to state 450
    '*'                               shift, and go to state 451
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 452
    '!'                               shift, and go to state 453
    '['                               shift, and go to state 454
    '('                               shift, and go to state 455
    '$'                               shift, and go to state 456
    '@'                               shift, and go to state 457

    string_builder          go to state 458
    expr_reader             go to state 459
    expr_call_pipe          go to state 460
    name_in_namespace       go to state 461
    expr_new                go to state 462
    expr_cast               go to state 463
    expr_type_decl          go to state 464
    expr_type_info          go to state 465
    block_or_lambda         go to state 466
    expr_full_block         go to state 467
    expr_numeric_const      go to state 468
    expr_named_call         go to state 469
    expr_method_call        go to state 470
    func_addr_expr          go to state 471
    expr_field              go to state 472
    expr_call               go to state 473
    expr                    go to state 1307
    expr_mtag               go to state 475
    basic_type_declaration  go to state 476
    make_decl               go to state 477
    make_struct_decl        go to state 478
    make_tuple_call         go to state 479
    make_dim_decl           go to state 480
    make_table_decl         go to state 481
    array_comprehension     go to state 482


State 1230

  292 expr_cast: "reinterpret" '<' $@13 type_declaration_no_options '>' $@14 . expr

    "struct"                          shift, and go to state 409
    "class"                           shift, and go to state 410
    "true"                            shift, and go to state 411
    "false"                           shift, and go to state 412
    "new"                             shift, and go to state 413
    "typeinfo"                        shift, and go to state 414
    "type"                            shift, and go to state 415
    "array"                           shift, and go to state 416
    "null"                            shift, and go to state 417
    "table"                           shift, and go to state 418
    "deref"                           shift, and go to state 419
    "cast"                            shift, and go to state 420
    "upcast"                          shift, and go to state 421
    "addr"                            shift, and go to state 422
    "reinterpret"                     shift, and go to state 423
    "unsafe"                          shift, and go to state 424
    "fixed_array"                     shift, and go to state 425
    "default"                         shift, and go to state 426
    "bool"                            shift, and go to state 225
    "void"                            shift, and go to state 226
    "string"                          shift, and go to state 227
    "int"                             shift, and go to state 229
    "int2"                            shift, and go to state 230
    "int3"                            shift, and go to state 231
    "int4"                            shift, and go to state 232
    "uint"                            shift, and go to state 233
    "bitfield"                        shift, and go to state 427
    "uint2"                           shift, and go to state 235
    "uint3"                           shift, and go to state 236
    "uint4"                           shift, and go to state 237
    "float"                           shift, and go to state 238
    "float2"                          shift, and go to state 239
    "float3"                          shift, and go to state 240
    "float4"                          shift, and go to state 241
    "range"                           shift, and go to state 242
    "urange"                          shift, and go to state 243
    "range64"                         shift, and go to state 244
    "urange64"                        shift, and go to state 245
    "int64"                           shift, and go to state 247
    "uint64"                          shift, and go to state 248
    "double"                          shift, and go to state 249
    "int8"                            shift, and go to state 252
    "uint8"                           shift, and go to state 253
    "int16"                           shift, and go to state 254
    "uint16"                          shift, and go to state 255
    "tuple"                           shift, and go to state 428
    "variant"                         shift, and go to state 429
    "generator"                       shift, and go to state 430
    "++"                              shift, and go to state 431
    "--"                              shift, and go to state 432
    "::"                              shift, and go to state 55
    "$$"                              shift, and go to state 433
    "$i"                              shift, and go to state 434
    "$v"                              shift, and go to state 435
    "$b"                              shift, and go to state 436
    "$a"                              shift, and go to state 437
    "$c"                              shift, and go to state 438
    "..."                             shift, and go to state 439
    "integer constant"                shift, and go to state 440
    "long integer constant"           shift, and go to state 441
    "unsigned integer constant"       shift, and go to state 442
    "unsigned long integer constant"  shift, and go to state 443
    "unsigned int8 constant"          shift, and go to state 444
    "floating point constant"         shift, and go to state 445
    "double constant"                 shift, and go to state 446
    "name"                            shift, and go to state 56
    "start of the string"             shift, and go to state 447
    "begin of code block"             shift, and go to state 448
    '-'                               shift, and go to state 449
    '+'                               shift, and go to state 450
    '*'                               shift, and go to state 451
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 452
    '!'                               shift, and go to state 453
    '['                               shift, and go to state 454
    '('                               shift, and go to state 455
    '$'                               shift, and go to state 456
    '@'                               shift, and go to state 457

    string_builder          go to state 458
    expr_reader             go to state 459
    expr_call_pipe          go to state 460
    name_in_namespace       go to state 461
    expr_new                go to state 462
    expr_cast               go to state 463
    expr_type_decl          go to state 464
    expr_type_info          go to state 465
    block_or_lambda         go to state 466
    expr_full_block         go to state 467
    expr_numeric_const      go to state 468
    expr_named_call         go to state 469
    expr_method_call        go to state 470
    func_addr_expr          go to state 471
    expr_field              go to state 472
    expr_call               go to state 473
    expr                    go to state 1308
    expr_mtag               go to state 475
    basic_type_declaration  go to state 476
    make_decl               go to state 477
    make_struct_decl        go to state 478
    make_tuple_call         go to state 479
    make_dim_decl           go to state 480
    make_table_decl         go to state 481
    array_comprehension     go to state 482


State 1231

  784 make_dim_decl: "fixed_array" '<' $@95 type_declaration_no_options '>' $@96 . '(' expr_list optional_comma ')'

    '('  shift, and go to state 1309


State 1232

  760 make_struct_decl: "default" '<' $@83 type_declaration_no_options '>' $@84 . use_initializer

    "uninitialized"  shift, and go to state 1310

    $default  reduce using rule 747 (use_initializer)

    use_initializer  go to state 1311


State 1233

  766 make_tuple_call: "tuple" '<' $@85 type_declaration_no_options '>' $@86 . '(' use_initializer optional_make_struct_dim_decl ')'

    '('  shift, and go to state 1312


State 1234

  757 make_struct_decl: "variant" '<' $@81 type_declaration_no_options '>' $@82 . '(' make_variant_dim ')'

    '('  shift, and go to state 1313


State 1235

  426 expr: "generator" '<' type_declaration_no_options '>' optional_capture_list '(' . ')'
  427     | "generator" '<' type_declaration_no_options '>' optional_capture_list '(' . expr ')'

    "struct"                          shift, and go to state 409
    "class"                           shift, and go to state 410
    "true"                            shift, and go to state 411
    "false"                           shift, and go to state 412
    "new"                             shift, and go to state 413
    "typeinfo"                        shift, and go to state 414
    "type"                            shift, and go to state 415
    "array"                           shift, and go to state 416
    "null"                            shift, and go to state 417
    "table"                           shift, and go to state 418
    "deref"                           shift, and go to state 419
    "cast"                            shift, and go to state 420
    "upcast"                          shift, and go to state 421
    "addr"                            shift, and go to state 422
    "reinterpret"                     shift, and go to state 423
    "unsafe"                          shift, and go to state 424
    "fixed_array"                     shift, and go to state 425
    "default"                         shift, and go to state 426
    "bool"                            shift, and go to state 225
    "void"                            shift, and go to state 226
    "string"                          shift, and go to state 227
    "int"                             shift, and go to state 229
    "int2"                            shift, and go to state 230
    "int3"                            shift, and go to state 231
    "int4"                            shift, and go to state 232
    "uint"                            shift, and go to state 233
    "bitfield"                        shift, and go to state 427
    "uint2"                           shift, and go to state 235
    "uint3"                           shift, and go to state 236
    "uint4"                           shift, and go to state 237
    "float"                           shift, and go to state 238
    "float2"                          shift, and go to state 239
    "float3"                          shift, and go to state 240
    "float4"                          shift, and go to state 241
    "range"                           shift, and go to state 242
    "urange"                          shift, and go to state 243
    "range64"                         shift, and go to state 244
    "urange64"                        shift, and go to state 245
    "int64"                           shift, and go to state 247
    "uint64"                          shift, and go to state 248
    "double"                          shift, and go to state 249
    "int8"                            shift, and go to state 252
    "uint8"                           shift, and go to state 253
    "int16"                           shift, and go to state 254
    "uint16"                          shift, and go to state 255
    "tuple"                           shift, and go to state 428
    "variant"                         shift, and go to state 429
    "generator"                       shift, and go to state 430
    "++"                              shift, and go to state 431
    "--"                              shift, and go to state 432
    "::"                              shift, and go to state 55
    "$$"                              shift, and go to state 433
    "$i"                              shift, and go to state 434
    "$v"                              shift, and go to state 435
    "$b"                              shift, and go to state 436
    "$a"                              shift, and go to state 437
    "$c"                              shift, and go to state 438
    "..."                             shift, and go to state 439
    "integer constant"                shift, and go to state 440
    "long integer constant"           shift, and go to state 441
    "unsigned integer constant"       shift, and go to state 442
    "unsigned long integer constant"  shift, and go to state 443
    "unsigned int8 constant"          shift, and go to state 444
    "floating point constant"         shift, and go to state 445
    "double constant"                 shift, and go to state 446
    "name"                            shift, and go to state 56
    "start of the string"             shift, and go to state 447
    "begin of code block"             shift, and go to state 448
    '-'                               shift, and go to state 449
    '+'                               shift, and go to state 450
    '*'                               shift, and go to state 451
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 452
    '!'                               shift, and go to state 453
    '['                               shift, and go to state 454
    '('                               shift, and go to state 455
    ')'                               shift, and go to state 1314
    '$'                               shift, and go to state 456
    '@'                               shift, and go to state 457

    string_builder          go to state 458
    expr_reader             go to state 459
    expr_call_pipe          go to state 460
    name_in_namespace       go to state 461
    expr_new                go to state 462
    expr_cast               go to state 463
    expr_type_decl          go to state 464
    expr_type_info          go to state 465
    block_or_lambda         go to state 466
    expr_full_block         go to state 467
    expr_numeric_const      go to state 468
    expr_named_call         go to state 469
    expr_method_call        go to state 470
    func_addr_expr          go to state 471
    expr_field              go to state 472
    expr_call               go to state 473
    expr                    go to state 1315
    expr_mtag               go to state 475
    basic_type_declaration  go to state 476
    make_decl               go to state 477
    make_struct_decl        go to state 478
    make_tuple_call         go to state 479
    make_dim_decl           go to state 480
    make_table_decl         go to state 481
    array_comprehension     go to state 482


State 1236

  428 expr: "generator" '<' type_declaration_no_options '>' optional_capture_list expression_block .

    $default  reduce using rule 428 (expr)


State 1237

  464 expr_mtag: "$c" '(' expr ')' '(' ')' .

    $default  reduce using rule 464 (expr_mtag)


State 1238

  300 expr_list: expr_list . ',' expr
  465 expr_mtag: "$c" '(' expr ')' '(' expr_list . ')'

    ','  shift, and go to state 1040
    ')'  shift, and go to state 1316


State 1239

  300 expr_list: expr_list . ',' expr
  797 array_comprehension: "begin of code block" "for" '(' variable_name_with_pos_list "in" expr_list . ')' "end of expression" make_map_tuple array_comprehension_where "end of code block"

    ','  shift, and go to state 1040
    ')'  shift, and go to state 1317


State 1240

  300 expr_list: expr_list . ',' expr
  795 array_comprehension: '[' "for" '(' variable_name_with_pos_list "in" expr_list . ')' "end of expression" expr array_comprehension_where ']'

    ','  shift, and go to state 1040
    ')'  shift, and go to state 1318


State 1241

  796 array_comprehension: '[' "iterator" "for" '(' variable_name_with_pos_list "in" . expr_list ')' "end of expression" expr array_comprehension_where ']'

    "struct"                          shift, and go to state 409
    "class"                           shift, and go to state 410
    "true"                            shift, and go to state 411
    "false"                           shift, and go to state 412
    "new"                             shift, and go to state 413
    "typeinfo"                        shift, and go to state 414
    "type"                            shift, and go to state 415
    "array"                           shift, and go to state 416
    "null"                            shift, and go to state 417
    "table"                           shift, and go to state 418
    "deref"                           shift, and go to state 419
    "cast"                            shift, and go to state 420
    "upcast"                          shift, and go to state 421
    "addr"                            shift, and go to state 422
    "reinterpret"                     shift, and go to state 423
    "unsafe"                          shift, and go to state 424
    "fixed_array"                     shift, and go to state 425
    "default"                         shift, and go to state 426
    "bool"                            shift, and go to state 225
    "void"                            shift, and go to state 226
    "string"                          shift, and go to state 227
    "int"                             shift, and go to state 229
    "int2"                            shift, and go to state 230
    "int3"                            shift, and go to state 231
    "int4"                            shift, and go to state 232
    "uint"                            shift, and go to state 233
    "bitfield"                        shift, and go to state 427
    "uint2"                           shift, and go to state 235
    "uint3"                           shift, and go to state 236
    "uint4"                           shift, and go to state 237
    "float"                           shift, and go to state 238
    "float2"                          shift, and go to state 239
    "float3"                          shift, and go to state 240
    "float4"                          shift, and go to state 241
    "range"                           shift, and go to state 242
    "urange"                          shift, and go to state 243
    "range64"                         shift, and go to state 244
    "urange64"                        shift, and go to state 245
    "int64"                           shift, and go to state 247
    "uint64"                          shift, and go to state 248
    "double"                          shift, and go to state 249
    "int8"                            shift, and go to state 252
    "uint8"                           shift, and go to state 253
    "int16"                           shift, and go to state 254
    "uint16"                          shift, and go to state 255
    "tuple"                           shift, and go to state 428
    "variant"                         shift, and go to state 429
    "generator"                       shift, and go to state 430
    "++"                              shift, and go to state 431
    "--"                              shift, and go to state 432
    "::"                              shift, and go to state 55
    "$$"                              shift, and go to state 433
    "$i"                              shift, and go to state 434
    "$v"                              shift, and go to state 435
    "$b"                              shift, and go to state 436
    "$a"                              shift, and go to state 437
    "$c"                              shift, and go to state 438
    "..."                             shift, and go to state 439
    "integer constant"                shift, and go to state 440
    "long integer constant"           shift, and go to state 441
    "unsigned integer constant"       shift, and go to state 442
    "unsigned long integer constant"  shift, and go to state 443
    "unsigned int8 constant"          shift, and go to state 444
    "floating point constant"         shift, and go to state 445
    "double constant"                 shift, and go to state 446
    "name"                            shift, and go to state 56
    "start of the string"             shift, and go to state 447
    "begin of code block"             shift, and go to state 448
    '-'                               shift, and go to state 449
    '+'                               shift, and go to state 450
    '*'                               shift, and go to state 451
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 452
    '!'                               shift, and go to state 453
    '['                               shift, and go to state 454
    '('                               shift, and go to state 455
    '$'                               shift, and go to state 456
    '@'                               shift, and go to state 457

    string_builder          go to state 458
    expr_reader             go to state 459
    expr_call_pipe          go to state 460
    name_in_namespace       go to state 461
    expr_new                go to state 462
    expr_cast               go to state 463
    expr_type_decl          go to state 464
    expr_type_info          go to state 465
    expr_list               go to state 1319
    block_or_lambda         go to state 466
    expr_full_block         go to state 467
    expr_numeric_const      go to state 468
    expr_named_call         go to state 469
    expr_method_call        go to state 470
    func_addr_expr          go to state 471
    expr_field              go to state 472
    expr_call               go to state 473
    expr                    go to state 600
    expr_mtag               go to state 475
    basic_type_declaration  go to state 476
    make_decl               go to state 477
    make_struct_decl        go to state 478
    make_tuple_call         go to state 479
    make_dim_decl           go to state 480
    make_table_decl         go to state 481
    array_comprehension     go to state 482


State 1242

  350 func_addr_name: "$i" '(' expr ')' .

    $default  reduce using rule 350 (func_addr_name)


State 1243

  473 expr_mtag: '@' '@' "$c" '(' expr ')' .

    $default  reduce using rule 473 (expr_mtag)


State 1244

  354 func_addr_expr: '@' '@' '<' $@17 type_declaration_no_options '>' . $@18 func_addr_name

    $default  reduce using rule 353 ($@18)

    $@18  go to state 1320


State 1245

  357 func_addr_expr: '@' '@' '<' $@19 optional_function_argument_list optional_function_type . '>' $@20 func_addr_name

    '>'  shift, and go to state 1321


State 1246

  735 make_struct_fields: "$f" '(' expr ')' . copy_or_move expr
  736                   | "$f" '(' expr ')' . ":=" expr

    "<-"  shift, and go to state 880
    ":="  shift, and go to state 1322
    '='   shift, and go to state 882

    copy_or_move  go to state 1323


State 1247

  345 expr_named_call: name_in_namespace '(' '[' make_struct_fields ']' ')' .

    $default  reduce using rule 345 (expr_named_call)


State 1248

  346 expr_named_call: name_in_namespace '(' expr_list ',' '[' make_struct_fields . ']' ')'
  733 make_struct_fields: make_struct_fields . ',' "name" copy_or_move expr
  734                   | make_struct_fields . ',' "name" ":=" expr
  737                   | make_struct_fields . ',' "$f" '(' expr ')' copy_or_move expr
  738                   | make_struct_fields . ',' "$f" '(' expr ')' ":=" expr

    ','  shift, and go to state 1011
    ']'  shift, and go to state 1324


State 1249

  737 make_struct_fields: make_struct_fields ',' "$f" '(' . expr ')' copy_or_move expr
  738                   | make_struct_fields ',' "$f" '(' . expr ')' ":=" expr

    "struct"                          shift, and go to state 409
    "class"                           shift, and go to state 410
    "true"                            shift, and go to state 411
    "false"                           shift, and go to state 412
    "new"                             shift, and go to state 413
    "typeinfo"                        shift, and go to state 414
    "type"                            shift, and go to state 415
    "array"                           shift, and go to state 416
    "null"                            shift, and go to state 417
    "table"                           shift, and go to state 418
    "deref"                           shift, and go to state 419
    "cast"                            shift, and go to state 420
    "upcast"                          shift, and go to state 421
    "addr"                            shift, and go to state 422
    "reinterpret"                     shift, and go to state 423
    "unsafe"                          shift, and go to state 424
    "fixed_array"                     shift, and go to state 425
    "default"                         shift, and go to state 426
    "bool"                            shift, and go to state 225
    "void"                            shift, and go to state 226
    "string"                          shift, and go to state 227
    "int"                             shift, and go to state 229
    "int2"                            shift, and go to state 230
    "int3"                            shift, and go to state 231
    "int4"                            shift, and go to state 232
    "uint"                            shift, and go to state 233
    "bitfield"                        shift, and go to state 427
    "uint2"                           shift, and go to state 235
    "uint3"                           shift, and go to state 236
    "uint4"                           shift, and go to state 237
    "float"                           shift, and go to state 238
    "float2"                          shift, and go to state 239
    "float3"                          shift, and go to state 240
    "float4"                          shift, and go to state 241
    "range"                           shift, and go to state 242
    "urange"                          shift, and go to state 243
    "range64"                         shift, and go to state 244
    "urange64"                        shift, and go to state 245
    "int64"                           shift, and go to state 247
    "uint64"                          shift, and go to state 248
    "double"                          shift, and go to state 249
    "int8"                            shift, and go to state 252
    "uint8"                           shift, and go to state 253
    "int16"                           shift, and go to state 254
    "uint16"                          shift, and go to state 255
    "tuple"                           shift, and go to state 428
    "variant"                         shift, and go to state 429
    "generator"                       shift, and go to state 430
    "++"                              shift, and go to state 431
    "--"                              shift, and go to state 432
    "::"                              shift, and go to state 55
    "$$"                              shift, and go to state 433
    "$i"                              shift, and go to state 434
    "$v"                              shift, and go to state 435
    "$b"                              shift, and go to state 436
    "$a"                              shift, and go to state 437
    "$c"                              shift, and go to state 438
    "..."                             shift, and go to state 439
    "integer constant"                shift, and go to state 440
    "long integer constant"           shift, and go to state 441
    "unsigned integer constant"       shift, and go to state 442
    "unsigned long integer constant"  shift, and go to state 443
    "unsigned int8 constant"          shift, and go to state 444
    "floating point constant"         shift, and go to state 445
    "double constant"                 shift, and go to state 446
    "name"                            shift, and go to state 56
    "start of the string"             shift, and go to state 447
    "begin of code block"             shift, and go to state 448
    '-'                               shift, and go to state 449
    '+'                               shift, and go to state 450
    '*'                               shift, and go to state 451
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 452
    '!'                               shift, and go to state 453
    '['                               shift, and go to state 454
    '('                               shift, and go to state 455
    '$'                               shift, and go to state 456
    '@'                               shift, and go to state 457

    string_builder          go to state 458
    expr_reader             go to state 459
    expr_call_pipe          go to state 460
    name_in_namespace       go to state 461
    expr_new                go to state 462
    expr_cast               go to state 463
    expr_type_decl          go to state 464
    expr_type_info          go to state 465
    block_or_lambda         go to state 466
    expr_full_block         go to state 467
    expr_numeric_const      go to state 468
    expr_named_call         go to state 469
    expr_method_call        go to state 470
    func_addr_expr          go to state 471
    expr_field              go to state 472
    expr_call               go to state 473
    expr                    go to state 1325
    expr_mtag               go to state 475
    basic_type_declaration  go to state 476
    make_decl               go to state 477
    make_struct_decl        go to state 478
    make_tuple_call         go to state 479
    make_dim_decl           go to state 480
    make_table_decl         go to state 481
    array_comprehension     go to state 482


State 1250

  734 make_struct_fields: make_struct_fields ',' "name" ":=" . expr

    "struct"                          shift, and go to state 409
    "class"                           shift, and go to state 410
    "true"                            shift, and go to state 411
    "false"                           shift, and go to state 412
    "new"                             shift, and go to state 413
    "typeinfo"                        shift, and go to state 414
    "type"                            shift, and go to state 415
    "array"                           shift, and go to state 416
    "null"                            shift, and go to state 417
    "table"                           shift, and go to state 418
    "deref"                           shift, and go to state 419
    "cast"                            shift, and go to state 420
    "upcast"                          shift, and go to state 421
    "addr"                            shift, and go to state 422
    "reinterpret"                     shift, and go to state 423
    "unsafe"                          shift, and go to state 424
    "fixed_array"                     shift, and go to state 425
    "default"                         shift, and go to state 426
    "bool"                            shift, and go to state 225
    "void"                            shift, and go to state 226
    "string"                          shift, and go to state 227
    "int"                             shift, and go to state 229
    "int2"                            shift, and go to state 230
    "int3"                            shift, and go to state 231
    "int4"                            shift, and go to state 232
    "uint"                            shift, and go to state 233
    "bitfield"                        shift, and go to state 427
    "uint2"                           shift, and go to state 235
    "uint3"                           shift, and go to state 236
    "uint4"                           shift, and go to state 237
    "float"                           shift, and go to state 238
    "float2"                          shift, and go to state 239
    "float3"                          shift, and go to state 240
    "float4"                          shift, and go to state 241
    "range"                           shift, and go to state 242
    "urange"                          shift, and go to state 243
    "range64"                         shift, and go to state 244
    "urange64"                        shift, and go to state 245
    "int64"                           shift, and go to state 247
    "uint64"                          shift, and go to state 248
    "double"                          shift, and go to state 249
    "int8"                            shift, and go to state 252
    "uint8"                           shift, and go to state 253
    "int16"                           shift, and go to state 254
    "uint16"                          shift, and go to state 255
    "tuple"                           shift, and go to state 428
    "variant"                         shift, and go to state 429
    "generator"                       shift, and go to state 430
    "++"                              shift, and go to state 431
    "--"                              shift, and go to state 432
    "::"                              shift, and go to state 55
    "$$"                              shift, and go to state 433
    "$i"                              shift, and go to state 434
    "$v"                              shift, and go to state 435
    "$b"                              shift, and go to state 436
    "$a"                              shift, and go to state 437
    "$c"                              shift, and go to state 438
    "..."                             shift, and go to state 439
    "integer constant"                shift, and go to state 440
    "long integer constant"           shift, and go to state 441
    "unsigned integer constant"       shift, and go to state 442
    "unsigned long integer constant"  shift, and go to state 443
    "unsigned int8 constant"          shift, and go to state 444
    "floating point constant"         shift, and go to state 445
    "double constant"                 shift, and go to state 446
    "name"                            shift, and go to state 56
    "start of the string"             shift, and go to state 447
    "begin of code block"             shift, and go to state 448
    '-'                               shift, and go to state 449
    '+'                               shift, and go to state 450
    '*'                               shift, and go to state 451
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 452
    '!'                               shift, and go to state 453
    '['                               shift, and go to state 454
    '('                               shift, and go to state 455
    '$'                               shift, and go to state 456
    '@'                               shift, and go to state 457

    string_builder          go to state 458
    expr_reader             go to state 459
    expr_call_pipe          go to state 460
    name_in_namespace       go to state 461
    expr_new                go to state 462
    expr_cast               go to state 463
    expr_type_decl          go to state 464
    expr_type_info          go to state 465
    block_or_lambda         go to state 466
    expr_full_block         go to state 467
    expr_numeric_const      go to state 468
    expr_named_call         go to state 469
    expr_method_call        go to state 470
    func_addr_expr          go to state 471
    expr_field              go to state 472
    expr_call               go to state 473
    expr                    go to state 1326
    expr_mtag               go to state 475
    basic_type_declaration  go to state 476
    make_decl               go to state 477
    make_struct_decl        go to state 478
    make_tuple_call         go to state 479
    make_dim_decl           go to state 480
    make_table_decl         go to state 481
    array_comprehension     go to state 482


State 1251

  733 make_struct_fields: make_struct_fields ',' "name" copy_or_move . expr

    "struct"                          shift, and go to state 409
    "class"                           shift, and go to state 410
    "true"                            shift, and go to state 411
    "false"                           shift, and go to state 412
    "new"                             shift, and go to state 413
    "typeinfo"                        shift, and go to state 414
    "type"                            shift, and go to state 415
    "array"                           shift, and go to state 416
    "null"                            shift, and go to state 417
    "table"                           shift, and go to state 418
    "deref"                           shift, and go to state 419
    "cast"                            shift, and go to state 420
    "upcast"                          shift, and go to state 421
    "addr"                            shift, and go to state 422
    "reinterpret"                     shift, and go to state 423
    "unsafe"                          shift, and go to state 424
    "fixed_array"                     shift, and go to state 425
    "default"                         shift, and go to state 426
    "bool"                            shift, and go to state 225
    "void"                            shift, and go to state 226
    "string"                          shift, and go to state 227
    "int"                             shift, and go to state 229
    "int2"                            shift, and go to state 230
    "int3"                            shift, and go to state 231
    "int4"                            shift, and go to state 232
    "uint"                            shift, and go to state 233
    "bitfield"                        shift, and go to state 427
    "uint2"                           shift, and go to state 235
    "uint3"                           shift, and go to state 236
    "uint4"                           shift, and go to state 237
    "float"                           shift, and go to state 238
    "float2"                          shift, and go to state 239
    "float3"                          shift, and go to state 240
    "float4"                          shift, and go to state 241
    "range"                           shift, and go to state 242
    "urange"                          shift, and go to state 243
    "range64"                         shift, and go to state 244
    "urange64"                        shift, and go to state 245
    "int64"                           shift, and go to state 247
    "uint64"                          shift, and go to state 248
    "double"                          shift, and go to state 249
    "int8"                            shift, and go to state 252
    "uint8"                           shift, and go to state 253
    "int16"                           shift, and go to state 254
    "uint16"                          shift, and go to state 255
    "tuple"                           shift, and go to state 428
    "variant"                         shift, and go to state 429
    "generator"                       shift, and go to state 430
    "++"                              shift, and go to state 431
    "--"                              shift, and go to state 432
    "::"                              shift, and go to state 55
    "$$"                              shift, and go to state 433
    "$i"                              shift, and go to state 434
    "$v"                              shift, and go to state 435
    "$b"                              shift, and go to state 436
    "$a"                              shift, and go to state 437
    "$c"                              shift, and go to state 438
    "..."                             shift, and go to state 439
    "integer constant"                shift, and go to state 440
    "long integer constant"           shift, and go to state 441
    "unsigned integer constant"       shift, and go to state 442
    "unsigned long integer constant"  shift, and go to state 443
    "unsigned int8 constant"          shift, and go to state 444
    "floating point constant"         shift, and go to state 445
    "double constant"                 shift, and go to state 446
    "name"                            shift, and go to state 56
    "start of the string"             shift, and go to state 447
    "begin of code block"             shift, and go to state 448
    '-'                               shift, and go to state 449
    '+'                               shift, and go to state 450
    '*'                               shift, and go to state 451
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 452
    '!'                               shift, and go to state 453
    '['                               shift, and go to state 454
    '('                               shift, and go to state 455
    '$'                               shift, and go to state 456
    '@'                               shift, and go to state 457

    string_builder          go to state 458
    expr_reader             go to state 459
    expr_call_pipe          go to state 460
    name_in_namespace       go to state 461
    expr_new                go to state 462
    expr_cast               go to state 463
    expr_type_decl          go to state 464
    expr_type_info          go to state 465
    block_or_lambda         go to state 466
    expr_full_block         go to state 467
    expr_numeric_const      go to state 468
    expr_named_call         go to state 469
    expr_method_call        go to state 470
    func_addr_expr          go to state 471
    expr_field              go to state 472
    expr_call               go to state 473
    expr                    go to state 1327
    expr_mtag               go to state 475
    basic_type_declaration  go to state 476
    make_decl               go to state 477
    make_struct_decl        go to state 478
    make_tuple_call         go to state 479
    make_dim_decl           go to state 480
    make_table_decl         go to state 481
    array_comprehension     go to state 482


State 1252

  309 capture_entry: "<-" "name" .

    $default  reduce using rule 309 (capture_entry)


State 1253

  310 capture_entry: ":=" "name" .

    $default  reduce using rule 310 (capture_entry)


State 1254

  311 capture_entry: "name" '(' . "name" ')'

    "name"  shift, and go to state 1328


State 1255

  308 capture_entry: '=' "name" .

    $default  reduce using rule 308 (capture_entry)


State 1256

  307 capture_entry: '&' "name" .

    $default  reduce using rule 307 (capture_entry)


State 1257

  313 capture_list: capture_list ',' . capture_entry

    "<-"    shift, and go to state 1158
    ":="    shift, and go to state 1159
    "name"  shift, and go to state 1160
    '='     shift, and go to state 1161
    '&'     shift, and go to state 1162

    capture_entry  go to state 1329


State 1258

  315 optional_capture_list: "capture" '(' capture_list ')' .

    $default  reduce using rule 315 (optional_capture_list)


State 1259

  302 block_or_simple_block: "=>" . expr
  303                      | "=>" . "<-" expr

    "struct"                          shift, and go to state 409
    "class"                           shift, and go to state 410
    "true"                            shift, and go to state 411
    "false"                           shift, and go to state 412
    "new"                             shift, and go to state 413
    "typeinfo"                        shift, and go to state 414
    "type"                            shift, and go to state 415
    "array"                           shift, and go to state 416
    "null"                            shift, and go to state 417
    "table"                           shift, and go to state 418
    "deref"                           shift, and go to state 419
    "cast"                            shift, and go to state 420
    "upcast"                          shift, and go to state 421
    "addr"                            shift, and go to state 422
    "reinterpret"                     shift, and go to state 423
    "unsafe"                          shift, and go to state 424
    "fixed_array"                     shift, and go to state 425
    "default"                         shift, and go to state 426
    "bool"                            shift, and go to state 225
    "void"                            shift, and go to state 226
    "string"                          shift, and go to state 227
    "int"                             shift, and go to state 229
    "int2"                            shift, and go to state 230
    "int3"                            shift, and go to state 231
    "int4"                            shift, and go to state 232
    "uint"                            shift, and go to state 233
    "bitfield"                        shift, and go to state 427
    "uint2"                           shift, and go to state 235
    "uint3"                           shift, and go to state 236
    "uint4"                           shift, and go to state 237
    "float"                           shift, and go to state 238
    "float2"                          shift, and go to state 239
    "float3"                          shift, and go to state 240
    "float4"                          shift, and go to state 241
    "range"                           shift, and go to state 242
    "urange"                          shift, and go to state 243
    "range64"                         shift, and go to state 244
    "urange64"                        shift, and go to state 245
    "int64"                           shift, and go to state 247
    "uint64"                          shift, and go to state 248
    "double"                          shift, and go to state 249
    "int8"                            shift, and go to state 252
    "uint8"                           shift, and go to state 253
    "int16"                           shift, and go to state 254
    "uint16"                          shift, and go to state 255
    "tuple"                           shift, and go to state 428
    "variant"                         shift, and go to state 429
    "generator"                       shift, and go to state 430
    "++"                              shift, and go to state 431
    "--"                              shift, and go to state 432
    "<-"                              shift, and go to state 1330
    "::"                              shift, and go to state 55
    "$$"                              shift, and go to state 433
    "$i"                              shift, and go to state 434
    "$v"                              shift, and go to state 435
    "$b"                              shift, and go to state 436
    "$a"                              shift, and go to state 437
    "$c"                              shift, and go to state 438
    "..."                             shift, and go to state 439
    "integer constant"                shift, and go to state 440
    "long integer constant"           shift, and go to state 441
    "unsigned integer constant"       shift, and go to state 442
    "unsigned long integer constant"  shift, and go to state 443
    "unsigned int8 constant"          shift, and go to state 444
    "floating point constant"         shift, and go to state 445
    "double constant"                 shift, and go to state 446
    "name"                            shift, and go to state 56
    "start of the string"             shift, and go to state 447
    "begin of code block"             shift, and go to state 448
    '-'                               shift, and go to state 449
    '+'                               shift, and go to state 450
    '*'                               shift, and go to state 451
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 452
    '!'                               shift, and go to state 453
    '['                               shift, and go to state 454
    '('                               shift, and go to state 455
    '$'                               shift, and go to state 456
    '@'                               shift, and go to state 457

    string_builder          go to state 458
    expr_reader             go to state 459
    expr_call_pipe          go to state 460
    name_in_namespace       go to state 461
    expr_new                go to state 462
    expr_cast               go to state 463
    expr_type_decl          go to state 464
    expr_type_info          go to state 465
    block_or_lambda         go to state 466
    expr_full_block         go to state 467
    expr_numeric_const      go to state 468
    expr_named_call         go to state 469
    expr_method_call        go to state 470
    func_addr_expr          go to state 471
    expr_field              go to state 472
    expr_call               go to state 473
    expr                    go to state 1331
    expr_mtag               go to state 475
    basic_type_declaration  go to state 476
    make_decl               go to state 477
    make_struct_decl        go to state 478
    make_tuple_call         go to state 479
    make_dim_decl           go to state 480
    make_table_decl         go to state 481
    array_comprehension     go to state 482


State 1260

  301 block_or_simple_block: expression_block .

    $default  reduce using rule 301 (block_or_simple_block)


State 1261

  316 expr_full_block: block_or_lambda optional_annotation_list optional_capture_list optional_function_argument_list optional_function_type block_or_simple_block .

    $default  reduce using rule 316 (expr_full_block)


State 1262

  317 expr_full_block_assumed_piped: block_or_lambda optional_annotation_list optional_capture_list optional_function_argument_list optional_function_type . expression_block

    $default  reduce using rule 216 ($@5)

    expression_block  go to state 1332
    $@5               go to state 327


State 1263

  433 expr: expr "is" "type" '<' $@23 type_declaration_no_options . '>' $@24

    '>'  shift, and go to state 1333


State 1264

  472 expr_mtag: expr "is" "$f" '(' expr ')' .

    $default  reduce using rule 472 (expr_mtag)


State 1265

  439 expr: expr "as" "type" '<' $@25 type_declaration . '>' $@26
  712 type_declaration: type_declaration . '|' type_declaration_no_options
  713                 | type_declaration . '|' '#'

    '|'  shift, and go to state 375
    '>'  shift, and go to state 1334


State 1266

  470 expr_mtag: expr "as" "$f" '(' expr ')' .

    $default  reduce using rule 470 (expr_mtag)


State 1267

  348 expr_method_call: expr "->" "name" '(' expr_list ')' .

    $default  reduce using rule 348 (expr_method_call)


State 1268

  467 expr_mtag: expr "?." "$f" '(' expr ')' .

    $default  reduce using rule 467 (expr_mtag)


State 1269

  444 expr: expr '?' "as" "type" '<' $@27 . type_declaration '>' $@28

    "type"       shift, and go to state 219
    "array"      shift, and go to state 220
    "table"      shift, and go to state 221
    "typedecl"   shift, and go to state 222
    "iterator"   shift, and go to state 223
    "smart_ptr"  shift, and go to state 224
    "bool"       shift, and go to state 225
    "void"       shift, and go to state 226
    "string"     shift, and go to state 227
    "auto"       shift, and go to state 228
    "int"        shift, and go to state 229
    "int2"       shift, and go to state 230
    "int3"       shift, and go to state 231
    "int4"       shift, and go to state 232
    "uint"       shift, and go to state 233
    "bitfield"   shift, and go to state 234
    "uint2"      shift, and go to state 235
    "uint3"      shift, and go to state 236
    "uint4"      shift, and go to state 237
    "float"      shift, and go to state 238
    "float2"     shift, and go to state 239
    "float3"     shift, and go to state 240
    "float4"     shift, and go to state 241
    "range"      shift, and go to state 242
    "urange"     shift, and go to state 243
    "range64"    shift, and go to state 244
    "urange64"   shift, and go to state 245
    "block"      shift, and go to state 246
    "int64"      shift, and go to state 247
    "uint64"     shift, and go to state 248
    "double"     shift, and go to state 249
    "function"   shift, and go to state 250
    "lambda"     shift, and go to state 251
    "int8"       shift, and go to state 252
    "uint8"      shift, and go to state 253
    "int16"      shift, and go to state 254
    "uint16"     shift, and go to state 255
    "tuple"      shift, and go to state 256
    "variant"    shift, and go to state 257
    "::"         shift, and go to state 55
    "$t"         shift, and go to state 258
    "name"       shift, and go to state 56
    '$'          shift, and go to state 259

    name_in_namespace                   go to state 260
    basic_type_declaration              go to state 261
    structure_type_declaration          go to state 262
    auto_type_declaration               go to state 263
    bitfield_type_declaration           go to state 264
    type_declaration_no_options         go to state 265
    type_declaration_no_options_no_dim  go to state 266
    type_declaration                    go to state 1335


State 1270

  347 expr_method_call: expr . "->" "name" '(' ')'
  348                 | expr . "->" "name" '(' expr_list ')'
  358 expr_field: expr . '.' "name"
  359           | expr . '.' '.' "name"
  360           | expr . '.' "name" '(' ')'
  361           | expr . '.' "name" '(' expr_list ')'
  362           | expr . '.' basic_type_declaration '(' ')'
  363           | expr . '.' basic_type_declaration '(' expr_list ')'
  366           | expr . '.' $@21 error $@22
  388 expr: expr . "<<" expr
  389     | expr . ">>" expr
  390     | expr . "<<<" expr
  391     | expr . ">>>" expr
  392     | expr . '+' expr
  393     | expr . '-' expr
  394     | expr . '*' expr
  395     | expr . '/' expr
  396     | expr . '%' expr
  397     | expr . '<' expr
  398     | expr . '>' expr
  399     | expr . "==" expr
  400     | expr . "!=" expr
  401     | expr . "<=" expr
  402     | expr . ">=" expr
  403     | expr . '&' expr
  404     | expr . '|' expr
  405     | expr . '^' expr
  406     | expr . "&&" expr
  407     | expr . "||" expr
  408     | expr . "^^" expr
  409     | expr . ".." expr
  412     | expr . "++"
  413     | expr . "--"
  415     | expr . '[' expr ']'
  416     | expr . '.' '[' expr ']'
  417     | expr . "?[" expr ']'
  418     | expr . '.' "?[" expr ']'
  419     | expr . "?." "name"
  420     | expr . '.' "?." "name"
  429     | expr . "??" expr
  430     | expr . '?' expr ':' expr
  433     | expr . "is" "type" '<' $@23 type_declaration_no_options '>' $@24
  434     | expr . "is" basic_type_declaration
  435     | expr . "is" "name"
  436     | expr . "as" "name"
  439     | expr . "as" "type" '<' $@25 type_declaration '>' $@26
  440     | expr . "as" basic_type_declaration
  441     | expr . '?' "as" "name"
  444     | expr . '?' "as" "type" '<' $@27 type_declaration '>' $@28
  445     | expr . '?' "as" basic_type_declaration
  453     | expr . "<|" expr
  454     | expr . "|>" expr
  455     | expr . "|>" basic_type_declaration
  466 expr_mtag: expr . '.' "$f" '(' expr ')'
  467          | expr . "?." "$f" '(' expr ')'
  468          | expr . '.' '.' "$f" '(' expr ')'
  469          | expr . '.' "?." "$f" '(' expr ')'
  470          | expr . "as" "$f" '(' expr ')'
  471          | expr . '?' "as" "$f" '(' expr ')'
  471          | expr '?' "as" "$f" '(' expr . ')'
  472          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 609
    "as"   shift, and go to state 610
    "<<"   shift, and go to state 611
    ">>"   shift, and go to state 612
    "++"   shift, and go to state 613
    "--"   shift, and go to state 614
    "<="   shift, and go to state 615
    ">="   shift, and go to state 616
    "=="   shift, and go to state 617
    "!="   shift, and go to state 618
    "->"   shift, and go to state 619
    "??"   shift, and go to state 620
    "?."   shift, and go to state 621
    "?["   shift, and go to state 622
    "<|"   shift, and go to state 623
    "|>"   shift, and go to state 624
    "<<<"  shift, and go to state 625
    ">>>"  shift, and go to state 626
    "&&"   shift, and go to state 627
    "||"   shift, and go to state 628
    "^^"   shift, and go to state 629
    ".."   shift, and go to state 630
    '?'    shift, and go to state 631
    '|'    shift, and go to state 632
    '^'    shift, and go to state 633
    '&'    shift, and go to state 634
    '<'    shift, and go to state 635
    '>'    shift, and go to state 636
    '-'    shift, and go to state 637
    '+'    shift, and go to state 638
    '*'    shift, and go to state 639
    '/'    shift, and go to state 640
    '%'    shift, and go to state 641
    '.'    shift, and go to state 642
    '['    shift, and go to state 643
    ')'    shift, and go to state 1336


State 1271

  347 expr_method_call: expr . "->" "name" '(' ')'
  348                 | expr . "->" "name" '(' expr_list ')'
  358 expr_field: expr . '.' "name"
  359           | expr . '.' '.' "name"
  360           | expr . '.' "name" '(' ')'
  361           | expr . '.' "name" '(' expr_list ')'
  362           | expr . '.' basic_type_declaration '(' ')'
  363           | expr . '.' basic_type_declaration '(' expr_list ')'
  366           | expr . '.' $@21 error $@22
  388 expr: expr . "<<" expr
  389     | expr . ">>" expr
  390     | expr . "<<<" expr
  391     | expr . ">>>" expr
  392     | expr . '+' expr
  393     | expr . '-' expr
  394     | expr . '*' expr
  395     | expr . '/' expr
  396     | expr . '%' expr
  397     | expr . '<' expr
  398     | expr . '>' expr
  399     | expr . "==" expr
  400     | expr . "!=" expr
  401     | expr . "<=" expr
  402     | expr . ">=" expr
  403     | expr . '&' expr
  404     | expr . '|' expr
  405     | expr . '^' expr
  406     | expr . "&&" expr
  407     | expr . "||" expr
  408     | expr . "^^" expr
  409     | expr . ".." expr
  412     | expr . "++"
  413     | expr . "--"
  415     | expr . '[' expr ']'
  416     | expr . '.' '[' expr ']'
  417     | expr . "?[" expr ']'
  418     | expr . '.' "?[" expr ']'
  419     | expr . "?." "name"
  420     | expr . '.' "?." "name"
  429     | expr . "??" expr
  430     | expr . '?' expr ':' expr
  433     | expr . "is" "type" '<' $@23 type_declaration_no_options '>' $@24
  434     | expr . "is" basic_type_declaration
  435     | expr . "is" "name"
  436     | expr . "as" "name"
  439     | expr . "as" "type" '<' $@25 type_declaration '>' $@26
  440     | expr . "as" basic_type_declaration
  441     | expr . '?' "as" "name"
  444     | expr . '?' "as" "type" '<' $@27 type_declaration '>' $@28
  445     | expr . '?' "as" basic_type_declaration
  453     | expr . "<|" expr
  454     | expr . "|>" expr
  455     | expr . "|>" basic_type_declaration
  466 expr_mtag: expr . '.' "$f" '(' expr ')'
  467          | expr . "?." "$f" '(' expr ')'
  468          | expr . '.' '.' "$f" '(' expr ')'
  469          | expr . '.' "?." "$f" '(' expr ')'
  469          | expr '.' "?." "$f" '(' expr . ')'
  470          | expr . "as" "$f" '(' expr ')'
  471          | expr . '?' "as" "$f" '(' expr ')'
  472          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 609
    "as"   shift, and go to state 610
    "<<"   shift, and go to state 611
    ">>"   shift, and go to state 612
    "++"   shift, and go to state 613
    "--"   shift, and go to state 614
    "<="   shift, and go to state 615
    ">="   shift, and go to state 616
    "=="   shift, and go to state 617
    "!="   shift, and go to state 618
    "->"   shift, and go to state 619
    "??"   shift, and go to state 620
    "?."   shift, and go to state 621
    "?["   shift, and go to state 622
    "<|"   shift, and go to state 623
    "|>"   shift, and go to state 624
    "<<<"  shift, and go to state 625
    ">>>"  shift, and go to state 626
    "&&"   shift, and go to state 627
    "||"   shift, and go to state 628
    "^^"   shift, and go to state 629
    ".."   shift, and go to state 630
    '?'    shift, and go to state 631
    '|'    shift, and go to state 632
    '^'    shift, and go to state 633
    '&'    shift, and go to state 634
    '<'    shift, and go to state 635
    '>'    shift, and go to state 636
    '-'    shift, and go to state 637
    '+'    shift, and go to state 638
    '*'    shift, and go to state 639
    '/'    shift, and go to state 640
    '%'    shift, and go to state 641
    '.'    shift, and go to state 642
    '['    shift, and go to state 643
    ')'    shift, and go to state 1337


State 1272

  466 expr_mtag: expr '.' "$f" '(' expr ')' .

    $default  reduce using rule 466 (expr_mtag)


State 1273

  361 expr_field: expr '.' "name" '(' expr_list ')' .

    $default  reduce using rule 361 (expr_field)


State 1274

  347 expr_method_call: expr . "->" "name" '(' ')'
  348                 | expr . "->" "name" '(' expr_list ')'
  358 expr_field: expr . '.' "name"
  359           | expr . '.' '.' "name"
  360           | expr . '.' "name" '(' ')'
  361           | expr . '.' "name" '(' expr_list ')'
  362           | expr . '.' basic_type_declaration '(' ')'
  363           | expr . '.' basic_type_declaration '(' expr_list ')'
  366           | expr . '.' $@21 error $@22
  388 expr: expr . "<<" expr
  389     | expr . ">>" expr
  390     | expr . "<<<" expr
  391     | expr . ">>>" expr
  392     | expr . '+' expr
  393     | expr . '-' expr
  394     | expr . '*' expr
  395     | expr . '/' expr
  396     | expr . '%' expr
  397     | expr . '<' expr
  398     | expr . '>' expr
  399     | expr . "==" expr
  400     | expr . "!=" expr
  401     | expr . "<=" expr
  402     | expr . ">=" expr
  403     | expr . '&' expr
  404     | expr . '|' expr
  405     | expr . '^' expr
  406     | expr . "&&" expr
  407     | expr . "||" expr
  408     | expr . "^^" expr
  409     | expr . ".." expr
  412     | expr . "++"
  413     | expr . "--"
  415     | expr . '[' expr ']'
  416     | expr . '.' '[' expr ']'
  417     | expr . "?[" expr ']'
  418     | expr . '.' "?[" expr ']'
  419     | expr . "?." "name"
  420     | expr . '.' "?." "name"
  429     | expr . "??" expr
  430     | expr . '?' expr ':' expr
  433     | expr . "is" "type" '<' $@23 type_declaration_no_options '>' $@24
  434     | expr . "is" basic_type_declaration
  435     | expr . "is" "name"
  436     | expr . "as" "name"
  439     | expr . "as" "type" '<' $@25 type_declaration '>' $@26
  440     | expr . "as" basic_type_declaration
  441     | expr . '?' "as" "name"
  444     | expr . '?' "as" "type" '<' $@27 type_declaration '>' $@28
  445     | expr . '?' "as" basic_type_declaration
  453     | expr . "<|" expr
  454     | expr . "|>" expr
  455     | expr . "|>" basic_type_declaration
  466 expr_mtag: expr . '.' "$f" '(' expr ')'
  467          | expr . "?." "$f" '(' expr ')'
  468          | expr . '.' '.' "$f" '(' expr ')'
  468          | expr '.' '.' "$f" '(' expr . ')'
  469          | expr . '.' "?." "$f" '(' expr ')'
  470          | expr . "as" "$f" '(' expr ')'
  471          | expr . '?' "as" "$f" '(' expr ')'
  472          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 609
    "as"   shift, and go to state 610
    "<<"   shift, and go to state 611
    ">>"   shift, and go to state 612
    "++"   shift, and go to state 613
    "--"   shift, and go to state 614
    "<="   shift, and go to state 615
    ">="   shift, and go to state 616
    "=="   shift, and go to state 617
    "!="   shift, and go to state 618
    "->"   shift, and go to state 619
    "??"   shift, and go to state 620
    "?."   shift, and go to state 621
    "?["   shift, and go to state 622
    "<|"   shift, and go to state 623
    "|>"   shift, and go to state 624
    "<<<"  shift, and go to state 625
    ">>>"  shift, and go to state 626
    "&&"   shift, and go to state 627
    "||"   shift, and go to state 628
    "^^"   shift, and go to state 629
    ".."   shift, and go to state 630
    '?'    shift, and go to state 631
    '|'    shift, and go to state 632
    '^'    shift, and go to state 633
    '&'    shift, and go to state 634
    '<'    shift, and go to state 635
    '>'    shift, and go to state 636
    '-'    shift, and go to state 637
    '+'    shift, and go to state 638
    '*'    shift, and go to state 639
    '/'    shift, and go to state 640
    '%'    shift, and go to state 641
    '.'    shift, and go to state 642
    '['    shift, and go to state 643
    ')'    shift, and go to state 1338


State 1275

  363 expr_field: expr '.' basic_type_declaration '(' expr_list ')' .

    $default  reduce using rule 363 (expr_field)


State 1276

  658 type_declaration_no_options_no_dim: '$' name_in_namespace '<' $@43 type_declaration_no_options_list '>' '(' optional_expr_list . ')'

    ')'  shift, and go to state 1339


State 1277

  590 variable_name_with_pos_list: variable_name_with_pos_list ',' "name" "aka" "name" .

    $default  reduce using rule 590 (variable_name_with_pos_list)


State 1278

  347 expr_method_call: expr . "->" "name" '(' ')'
  348                 | expr . "->" "name" '(' expr_list ')'
  358 expr_field: expr . '.' "name"
  359           | expr . '.' '.' "name"
  360           | expr . '.' "name" '(' ')'
  361           | expr . '.' "name" '(' expr_list ')'
  362           | expr . '.' basic_type_declaration '(' ')'
  363           | expr . '.' basic_type_declaration '(' expr_list ')'
  366           | expr . '.' $@21 error $@22
  388 expr: expr . "<<" expr
  389     | expr . ">>" expr
  390     | expr . "<<<" expr
  391     | expr . ">>>" expr
  392     | expr . '+' expr
  393     | expr . '-' expr
  394     | expr . '*' expr
  395     | expr . '/' expr
  396     | expr . '%' expr
  397     | expr . '<' expr
  398     | expr . '>' expr
  399     | expr . "==" expr
  400     | expr . "!=" expr
  401     | expr . "<=" expr
  402     | expr . ">=" expr
  403     | expr . '&' expr
  404     | expr . '|' expr
  405     | expr . '^' expr
  406     | expr . "&&" expr
  407     | expr . "||" expr
  408     | expr . "^^" expr
  409     | expr . ".." expr
  412     | expr . "++"
  413     | expr . "--"
  415     | expr . '[' expr ']'
  416     | expr . '.' '[' expr ']'
  417     | expr . "?[" expr ']'
  418     | expr . '.' "?[" expr ']'
  419     | expr . "?." "name"
  420     | expr . '.' "?." "name"
  429     | expr . "??" expr
  430     | expr . '?' expr ':' expr
  433     | expr . "is" "type" '<' $@23 type_declaration_no_options '>' $@24
  434     | expr . "is" basic_type_declaration
  435     | expr . "is" "name"
  436     | expr . "as" "name"
  439     | expr . "as" "type" '<' $@25 type_declaration '>' $@26
  440     | expr . "as" basic_type_declaration
  441     | expr . '?' "as" "name"
  444     | expr . '?' "as" "type" '<' $@27 type_declaration '>' $@28
  445     | expr . '?' "as" basic_type_declaration
  453     | expr . "<|" expr
  454     | expr . "|>" expr
  455     | expr . "|>" basic_type_declaration
  466 expr_mtag: expr . '.' "$f" '(' expr ')'
  467          | expr . "?." "$f" '(' expr ')'
  468          | expr . '.' '.' "$f" '(' expr ')'
  469          | expr . '.' "?." "$f" '(' expr ')'
  470          | expr . "as" "$f" '(' expr ')'
  471          | expr . '?' "as" "$f" '(' expr ')'
  472          | expr . "is" "$f" '(' expr ')'
  516 variable_declaration: variable_name_with_pos_list ':' type_declaration copy_or_move expr .

    "is"   shift, and go to state 609
    "as"   shift, and go to state 610
    "<<"   shift, and go to state 611
    ">>"   shift, and go to state 612
    "++"   shift, and go to state 613
    "--"   shift, and go to state 614
    "<="   shift, and go to state 615
    ">="   shift, and go to state 616
    "=="   shift, and go to state 617
    "!="   shift, and go to state 618
    "->"   shift, and go to state 619
    "??"   shift, and go to state 620
    "?."   shift, and go to state 621
    "?["   shift, and go to state 622
    "<|"   shift, and go to state 623
    "|>"   shift, and go to state 624
    "<<<"  shift, and go to state 625
    ">>>"  shift, and go to state 626
    "&&"   shift, and go to state 627
    "||"   shift, and go to state 628
    "^^"   shift, and go to state 629
    ".."   shift, and go to state 630
    '?'    shift, and go to state 631
    '|'    shift, and go to state 632
    '^'    shift, and go to state 633
    '&'    shift, and go to state 634
    '<'    shift, and go to state 635
    '>'    shift, and go to state 636
    '-'    shift, and go to state 637
    '+'    shift, and go to state 638
    '*'    shift, and go to state 639
    '/'    shift, and go to state 640
    '%'    shift, and go to state 641
    '.'    shift, and go to state 642
    '['    shift, and go to state 643

    $default  reduce using rule 516 (variable_declaration)


State 1279

   73 expression_while_loop: "while" '(' expr ')' expression_block .

    $default  reduce using rule 73 (expression_while_loop)


State 1280

   71 expression_for_loop: "for" '(' variable_name_with_pos_list "in" expr_list . ')' expression_block
  300 expr_list: expr_list . ',' expr

    ','  shift, and go to state 1040
    ')'  shift, and go to state 1340


State 1281

   74 expression_with: "with" '(' expr ')' expression_block .

    $default  reduce using rule 74 (expression_with)


State 1282

   69 expression_if_then_else: if_or_static_if '(' expr ')' expression_block . expression_else

    "else"         shift, and go to state 1341
    "elif"         shift, and go to state 1342
    "static_elif"  shift, and go to state 1343

    $default  reduce using rule 57 (expression_else)

    elif_or_static_elif  go to state 1344
    expression_else      go to state 1345


State 1283

   70 expression_if_then_else: expression_if_one_liner "if" '(' expr ')' . expression_else_one_liner "end of expression"

    "else"  shift, and go to state 1346

    $default  reduce using rule 62 (expression_else_one_liner)

    expression_else_one_liner  go to state 1347


State 1284

  215 expression_block_finally: "finally" $@3 "begin of code block" . expressions $@4 "end of code block"

    $default  reduce using rule 238 (expressions)

    expressions  go to state 1348


State 1285

  283 expression_let: kwd_let optional_in_scope "begin of code block" variable_declaration_list "end of code block" .

    $default  reduce using rule 283 (expression_let)


State 1286

  531 variable_declaration_list: variable_declaration_list "end of expression" .

    $default  reduce using rule 531 (variable_declaration_list)


State 1287

  532 variable_declaration_list: variable_declaration_list let_variable_declaration .

    $default  reduce using rule 532 (variable_declaration_list)


State 1288

  278 tuple_expansion: tuple_expansion ',' . "name"

    "name"  shift, and go to state 1349


State 1289

  279 tuple_expansion_variable_declaration: '(' tuple_expansion ')' . ':' type_declaration_no_options copy_or_move_or_clone expr "end of expression"
  280                                     | '(' tuple_expansion ')' . optional_ref copy_or_move_or_clone expr "end of expression"

    ':'  shift, and go to state 1350
    '&'  shift, and go to state 404

    $default  reduce using rule 521 (optional_ref)

    optional_ref  go to state 1351


State 1290

  480 optional_constant: "const" .

    $default  reduce using rule 480 (optional_constant)


State 1291

  491 struct_variable_declaration_list: struct_variable_declaration_list optional_annotation_list "def" optional_public_or_private_member_variable "abstract" optional_constant . $@30 function_declaration_header "end of expression"

    $default  reduce using rule 490 ($@30)

    $@30  go to state 1352


State 1292

  493 struct_variable_declaration_list: struct_variable_declaration_list optional_annotation_list "def" optional_public_or_private_member_variable optional_static_member_variable optional_override . optional_constant $@31 function_declaration_header expression_block

    "const"  shift, and go to state 1290

    $default  reduce using rule 479 (optional_constant)

    optional_constant  go to state 1353


State 1293

  486 structure_variable_declaration: optional_field_annotation optional_static_member_variable optional_override optional_public_or_private_member_variable . variable_declaration

    "$i"    shift, and go to state 678
    "name"  shift, and go to state 679

    variable_declaration         go to state 1354
    variable_name_with_pos_list  go to state 681


State 1294

  534 let_variable_declaration: let_variable_name_with_pos_list ':' type_declaration_no_options copy_or_move_or_clone expr "end of expression" .

    $default  reduce using rule 534 (let_variable_declaration)


State 1295

  751 make_struct_decl: "struct" '<' $@77 type_declaration_no_options '>' $@78 '(' . use_initializer optional_make_struct_dim_decl ')'

    "uninitialized"  shift, and go to state 1310

    $default  reduce using rule 747 (use_initializer)

    use_initializer  go to state 1355


State 1296

  754 make_struct_decl: "class" '<' $@79 type_declaration_no_options '>' $@80 '(' . use_initializer optional_make_struct_dim_decl ')'

    "uninitialized"  shift, and go to state 1310

    $default  reduce using rule 747 (use_initializer)

    use_initializer  go to state 1356


State 1297

  297 expr_type_info: "typeinfo" name_in_namespace '<' "name" '>' '(' expr . ')'
  347 expr_method_call: expr . "->" "name" '(' ')'
  348                 | expr . "->" "name" '(' expr_list ')'
  358 expr_field: expr . '.' "name"
  359           | expr . '.' '.' "name"
  360           | expr . '.' "name" '(' ')'
  361           | expr . '.' "name" '(' expr_list ')'
  362           | expr . '.' basic_type_declaration '(' ')'
  363           | expr . '.' basic_type_declaration '(' expr_list ')'
  366           | expr . '.' $@21 error $@22
  388 expr: expr . "<<" expr
  389     | expr . ">>" expr
  390     | expr . "<<<" expr
  391     | expr . ">>>" expr
  392     | expr . '+' expr
  393     | expr . '-' expr
  394     | expr . '*' expr
  395     | expr . '/' expr
  396     | expr . '%' expr
  397     | expr . '<' expr
  398     | expr . '>' expr
  399     | expr . "==" expr
  400     | expr . "!=" expr
  401     | expr . "<=" expr
  402     | expr . ">=" expr
  403     | expr . '&' expr
  404     | expr . '|' expr
  405     | expr . '^' expr
  406     | expr . "&&" expr
  407     | expr . "||" expr
  408     | expr . "^^" expr
  409     | expr . ".." expr
  412     | expr . "++"
  413     | expr . "--"
  415     | expr . '[' expr ']'
  416     | expr . '.' '[' expr ']'
  417     | expr . "?[" expr ']'
  418     | expr . '.' "?[" expr ']'
  419     | expr . "?." "name"
  420     | expr . '.' "?." "name"
  429     | expr . "??" expr
  430     | expr . '?' expr ':' expr
  433     | expr . "is" "type" '<' $@23 type_declaration_no_options '>' $@24
  434     | expr . "is" basic_type_declaration
  435     | expr . "is" "name"
  436     | expr . "as" "name"
  439     | expr . "as" "type" '<' $@25 type_declaration '>' $@26
  440     | expr . "as" basic_type_declaration
  441     | expr . '?' "as" "name"
  444     | expr . '?' "as" "type" '<' $@27 type_declaration '>' $@28
  445     | expr . '?' "as" basic_type_declaration
  453     | expr . "<|" expr
  454     | expr . "|>" expr
  455     | expr . "|>" basic_type_declaration
  466 expr_mtag: expr . '.' "$f" '(' expr ')'
  467          | expr . "?." "$f" '(' expr ')'
  468          | expr . '.' '.' "$f" '(' expr ')'
  469          | expr . '.' "?." "$f" '(' expr ')'
  470          | expr . "as" "$f" '(' expr ')'
  471          | expr . '?' "as" "$f" '(' expr ')'
  472          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 609
    "as"   shift, and go to state 610
    "<<"   shift, and go to state 611
    ">>"   shift, and go to state 612
    "++"   shift, and go to state 613
    "--"   shift, and go to state 614
    "<="   shift, and go to state 615
    ">="   shift, and go to state 616
    "=="   shift, and go to state 617
    "!="   shift, and go to state 618
    "->"   shift, and go to state 619
    "??"   shift, and go to state 620
    "?."   shift, and go to state 621
    "?["   shift, and go to state 622
    "<|"   shift, and go to state 623
    "|>"   shift, and go to state 624
    "<<<"  shift, and go to state 625
    ">>>"  shift, and go to state 626
    "&&"   shift, and go to state 627
    "||"   shift, and go to state 628
    "^^"   shift, and go to state 629
    ".."   shift, and go to state 630
    '?'    shift, and go to state 631
    '|'    shift, and go to state 632
    '^'    shift, and go to state 633
    '&'    shift, and go to state 634
    '<'    shift, and go to state 635
    '>'    shift, and go to state 636
    '-'    shift, and go to state 637
    '+'    shift, and go to state 638
    '*'    shift, and go to state 639
    '/'    shift, and go to state 640
    '%'    shift, and go to state 641
    '.'    shift, and go to state 642
    '['    shift, and go to state 643
    ')'    shift, and go to state 1357


State 1298

  298 expr_type_info: "typeinfo" name_in_namespace '<' "name" c_or_s "name" '>' . '(' expr ')'

    '('  shift, and go to state 1358


State 1299

  770 make_dim_decl: "array" "struct" '<' $@87 type_declaration_no_options '>' $@88 . '(' use_initializer optional_make_struct_dim_decl ')'

    '('  shift, and go to state 1359


State 1300

  773 make_dim_decl: "array" "tuple" '<' $@89 type_declaration_no_options '>' $@90 . '(' use_initializer optional_make_struct_dim_decl ')'

    '('  shift, and go to state 1360


State 1301

  776 make_dim_decl: "array" "variant" '<' $@91 type_declaration_no_options '>' $@92 . '(' make_variant_dim ')'

    '('  shift, and go to state 1361


State 1302

  780 make_dim_decl: "array" '<' $@93 type_declaration_no_options '>' $@94 '(' . optional_expr_list ')'

    "struct"                          shift, and go to state 409
    "class"                           shift, and go to state 410
    "true"                            shift, and go to state 411
    "false"                           shift, and go to state 412
    "new"                             shift, and go to state 413
    "typeinfo"                        shift, and go to state 414
    "type"                            shift, and go to state 415
    "array"                           shift, and go to state 416
    "null"                            shift, and go to state 417
    "table"                           shift, and go to state 418
    "deref"                           shift, and go to state 419
    "cast"                            shift, and go to state 420
    "upcast"                          shift, and go to state 421
    "addr"                            shift, and go to state 422
    "reinterpret"                     shift, and go to state 423
    "unsafe"                          shift, and go to state 424
    "fixed_array"                     shift, and go to state 425
    "default"                         shift, and go to state 426
    "bool"                            shift, and go to state 225
    "void"                            shift, and go to state 226
    "string"                          shift, and go to state 227
    "int"                             shift, and go to state 229
    "int2"                            shift, and go to state 230
    "int3"                            shift, and go to state 231
    "int4"                            shift, and go to state 232
    "uint"                            shift, and go to state 233
    "bitfield"                        shift, and go to state 427
    "uint2"                           shift, and go to state 235
    "uint3"                           shift, and go to state 236
    "uint4"                           shift, and go to state 237
    "float"                           shift, and go to state 238
    "float2"                          shift, and go to state 239
    "float3"                          shift, and go to state 240
    "float4"                          shift, and go to state 241
    "range"                           shift, and go to state 242
    "urange"                          shift, and go to state 243
    "range64"                         shift, and go to state 244
    "urange64"                        shift, and go to state 245
    "int64"                           shift, and go to state 247
    "uint64"                          shift, and go to state 248
    "double"                          shift, and go to state 249
    "int8"                            shift, and go to state 252
    "uint8"                           shift, and go to state 253
    "int16"                           shift, and go to state 254
    "uint16"                          shift, and go to state 255
    "tuple"                           shift, and go to state 428
    "variant"                         shift, and go to state 429
    "generator"                       shift, and go to state 430
    "++"                              shift, and go to state 431
    "--"                              shift, and go to state 432
    "::"                              shift, and go to state 55
    "$$"                              shift, and go to state 433
    "$i"                              shift, and go to state 434
    "$v"                              shift, and go to state 435
    "$b"                              shift, and go to state 436
    "$a"                              shift, and go to state 437
    "$c"                              shift, and go to state 438
    "..."                             shift, and go to state 439
    "integer constant"                shift, and go to state 440
    "long integer constant"           shift, and go to state 441
    "unsigned integer constant"       shift, and go to state 442
    "unsigned long integer constant"  shift, and go to state 443
    "unsigned int8 constant"          shift, and go to state 444
    "floating point constant"         shift, and go to state 445
    "double constant"                 shift, and go to state 446
    "name"                            shift, and go to state 56
    "start of the string"             shift, and go to state 447
    "begin of code block"             shift, and go to state 448
    '-'                               shift, and go to state 449
    '+'                               shift, and go to state 450
    '*'                               shift, and go to state 451
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 452
    '!'                               shift, and go to state 453
    '['                               shift, and go to state 454
    '('                               shift, and go to state 455
    '$'                               shift, and go to state 456
    '@'                               shift, and go to state 457

    $default  reduce using rule 241 (optional_expr_list)

    string_builder          go to state 458
    expr_reader             go to state 459
    expr_call_pipe          go to state 460
    optional_expr_list      go to state 1362
    name_in_namespace       go to state 461
    expr_new                go to state 462
    expr_cast               go to state 463
    expr_type_decl          go to state 464
    expr_type_info          go to state 465
    expr_list               go to state 664
    block_or_lambda         go to state 466
    expr_full_block         go to state 467
    expr_numeric_const      go to state 468
    expr_named_call         go to state 469
    expr_method_call        go to state 470
    func_addr_expr          go to state 471
    expr_field              go to state 472
    expr_call               go to state 473
    expr                    go to state 600
    expr_mtag               go to state 475
    basic_type_declaration  go to state 476
    make_decl               go to state 477
    make_struct_decl        go to state 478
    make_tuple_call         go to state 479
    make_dim_decl           go to state 480
    make_table_decl         go to state 481
    array_comprehension     go to state 482


State 1303

  789 make_table_decl: "table" '<' type_declaration_no_options '>' '(' optional_expr_map_tuple_list ')' .

    $default  reduce using rule 789 (make_table_decl)


State 1304

  244 optional_expr_map_tuple_list: expr_map_tuple_list optional_comma .

    $default  reduce using rule 244 (optional_expr_map_tuple_list)


State 1305

  790 make_table_decl: "table" '<' type_declaration_no_options c_or_s type_declaration_no_options '>' '(' . optional_expr_map_tuple_list ')'

    "struct"                          shift, and go to state 409
    "class"                           shift, and go to state 410
    "true"                            shift, and go to state 411
    "false"                           shift, and go to state 412
    "new"                             shift, and go to state 413
    "typeinfo"                        shift, and go to state 414
    "type"                            shift, and go to state 415
    "array"                           shift, and go to state 416
    "null"                            shift, and go to state 417
    "table"                           shift, and go to state 418
    "deref"                           shift, and go to state 419
    "cast"                            shift, and go to state 420
    "upcast"                          shift, and go to state 421
    "addr"                            shift, and go to state 422
    "reinterpret"                     shift, and go to state 423
    "unsafe"                          shift, and go to state 424
    "fixed_array"                     shift, and go to state 425
    "default"                         shift, and go to state 426
    "bool"                            shift, and go to state 225
    "void"                            shift, and go to state 226
    "string"                          shift, and go to state 227
    "int"                             shift, and go to state 229
    "int2"                            shift, and go to state 230
    "int3"                            shift, and go to state 231
    "int4"                            shift, and go to state 232
    "uint"                            shift, and go to state 233
    "bitfield"                        shift, and go to state 427
    "uint2"                           shift, and go to state 235
    "uint3"                           shift, and go to state 236
    "uint4"                           shift, and go to state 237
    "float"                           shift, and go to state 238
    "float2"                          shift, and go to state 239
    "float3"                          shift, and go to state 240
    "float4"                          shift, and go to state 241
    "range"                           shift, and go to state 242
    "urange"                          shift, and go to state 243
    "range64"                         shift, and go to state 244
    "urange64"                        shift, and go to state 245
    "int64"                           shift, and go to state 247
    "uint64"                          shift, and go to state 248
    "double"                          shift, and go to state 249
    "int8"                            shift, and go to state 252
    "uint8"                           shift, and go to state 253
    "int16"                           shift, and go to state 254
    "uint16"                          shift, and go to state 255
    "tuple"                           shift, and go to state 428
    "variant"                         shift, and go to state 429
    "generator"                       shift, and go to state 430
    "++"                              shift, and go to state 431
    "--"                              shift, and go to state 432
    "::"                              shift, and go to state 55
    "$$"                              shift, and go to state 433
    "$i"                              shift, and go to state 434
    "$v"                              shift, and go to state 435
    "$b"                              shift, and go to state 436
    "$a"                              shift, and go to state 437
    "$c"                              shift, and go to state 438
    "..."                             shift, and go to state 439
    "integer constant"                shift, and go to state 440
    "long integer constant"           shift, and go to state 441
    "unsigned integer constant"       shift, and go to state 442
    "unsigned long integer constant"  shift, and go to state 443
    "unsigned int8 constant"          shift, and go to state 444
    "floating point constant"         shift, and go to state 445
    "double constant"                 shift, and go to state 446
    "name"                            shift, and go to state 56
    "start of the string"             shift, and go to state 447
    "begin of code block"             shift, and go to state 448
    '-'                               shift, and go to state 449
    '+'                               shift, and go to state 450
    '*'                               shift, and go to state 451
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 452
    '!'                               shift, and go to state 453
    '['                               shift, and go to state 454
    '('                               shift, and go to state 455
    '$'                               shift, and go to state 456
    '@'                               shift, and go to state 457

    $default  reduce using rule 243 (optional_expr_map_tuple_list)

    string_builder                go to state 458
    expr_reader                   go to state 459
    expr_call_pipe                go to state 460
    optional_expr_map_tuple_list  go to state 1363
    name_in_namespace             go to state 461
    expr_new                      go to state 462
    expr_cast                     go to state 463
    expr_type_decl                go to state 464
    expr_type_info                go to state 465
    block_or_lambda               go to state 466
    expr_full_block               go to state 467
    expr_numeric_const            go to state 468
    expr_named_call               go to state 469
    expr_method_call              go to state 470
    func_addr_expr                go to state 471
    expr_field                    go to state 472
    expr_call                     go to state 473
    expr                          go to state 589
    expr_mtag                     go to state 475
    basic_type_declaration        go to state 476
    make_decl                     go to state 477
    make_struct_decl              go to state 478
    make_map_tuple                go to state 590
    make_tuple_call               go to state 479
    make_dim_decl                 go to state 480
    expr_map_tuple_list           go to state 1226
    make_table_decl               go to state 481
    array_comprehension           go to state 482


State 1306

  286 expr_cast: "cast" '<' $@9 type_declaration_no_options '>' $@10 expr .
  347 expr_method_call: expr . "->" "name" '(' ')'
  348                 | expr . "->" "name" '(' expr_list ')'
  358 expr_field: expr . '.' "name"
  359           | expr . '.' '.' "name"
  360           | expr . '.' "name" '(' ')'
  361           | expr . '.' "name" '(' expr_list ')'
  362           | expr . '.' basic_type_declaration '(' ')'
  363           | expr . '.' basic_type_declaration '(' expr_list ')'
  366           | expr . '.' $@21 error $@22
  388 expr: expr . "<<" expr
  389     | expr . ">>" expr
  390     | expr . "<<<" expr
  391     | expr . ">>>" expr
  392     | expr . '+' expr
  393     | expr . '-' expr
  394     | expr . '*' expr
  395     | expr . '/' expr
  396     | expr . '%' expr
  397     | expr . '<' expr
  398     | expr . '>' expr
  399     | expr . "==" expr
  400     | expr . "!=" expr
  401     | expr . "<=" expr
  402     | expr . ">=" expr
  403     | expr . '&' expr
  404     | expr . '|' expr
  405     | expr . '^' expr
  406     | expr . "&&" expr
  407     | expr . "||" expr
  408     | expr . "^^" expr
  409     | expr . ".." expr
  412     | expr . "++"
  413     | expr . "--"
  415     | expr . '[' expr ']'
  416     | expr . '.' '[' expr ']'
  417     | expr . "?[" expr ']'
  418     | expr . '.' "?[" expr ']'
  419     | expr . "?." "name"
  420     | expr . '.' "?." "name"
  429     | expr . "??" expr
  430     | expr . '?' expr ':' expr
  433     | expr . "is" "type" '<' $@23 type_declaration_no_options '>' $@24
  434     | expr . "is" basic_type_declaration
  435     | expr . "is" "name"
  436     | expr . "as" "name"
  439     | expr . "as" "type" '<' $@25 type_declaration '>' $@26
  440     | expr . "as" basic_type_declaration
  441     | expr . '?' "as" "name"
  444     | expr . '?' "as" "type" '<' $@27 type_declaration '>' $@28
  445     | expr . '?' "as" basic_type_declaration
  453     | expr . "<|" expr
  454     | expr . "|>" expr
  455     | expr . "|>" basic_type_declaration
  466 expr_mtag: expr . '.' "$f" '(' expr ')'
  467          | expr . "?." "$f" '(' expr ')'
  468          | expr . '.' '.' "$f" '(' expr ')'
  469          | expr . '.' "?." "$f" '(' expr ')'
  470          | expr . "as" "$f" '(' expr ')'
  471          | expr . '?' "as" "$f" '(' expr ')'
  472          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 609
    "as"   shift, and go to state 610
    "<<"   shift, and go to state 611
    ">>"   shift, and go to state 612
    "++"   shift, and go to state 613
    "--"   shift, and go to state 614
    "->"   shift, and go to state 619
    "??"   shift, and go to state 620
    "?."   shift, and go to state 621
    "?["   shift, and go to state 622
    "<|"   shift, and go to state 623
    "|>"   shift, and go to state 624
    "<<<"  shift, and go to state 625
    ">>>"  shift, and go to state 626
    '-'    shift, and go to state 637
    '+'    shift, and go to state 638
    '*'    shift, and go to state 639
    '/'    shift, and go to state 640
    '%'    shift, and go to state 641
    '.'    shift, and go to state 642
    '['    shift, and go to state 643

    $default  reduce using rule 286 (expr_cast)


State 1307

  289 expr_cast: "upcast" '<' $@11 type_declaration_no_options '>' $@12 expr .
  347 expr_method_call: expr . "->" "name" '(' ')'
  348                 | expr . "->" "name" '(' expr_list ')'
  358 expr_field: expr . '.' "name"
  359           | expr . '.' '.' "name"
  360           | expr . '.' "name" '(' ')'
  361           | expr . '.' "name" '(' expr_list ')'
  362           | expr . '.' basic_type_declaration '(' ')'
  363           | expr . '.' basic_type_declaration '(' expr_list ')'
  366           | expr . '.' $@21 error $@22
  388 expr: expr . "<<" expr
  389     | expr . ">>" expr
  390     | expr . "<<<" expr
  391     | expr . ">>>" expr
  392     | expr . '+' expr
  393     | expr . '-' expr
  394     | expr . '*' expr
  395     | expr . '/' expr
  396     | expr . '%' expr
  397     | expr . '<' expr
  398     | expr . '>' expr
  399     | expr . "==" expr
  400     | expr . "!=" expr
  401     | expr . "<=" expr
  402     | expr . ">=" expr
  403     | expr . '&' expr
  404     | expr . '|' expr
  405     | expr . '^' expr
  406     | expr . "&&" expr
  407     | expr . "||" expr
  408     | expr . "^^" expr
  409     | expr . ".." expr
  412     | expr . "++"
  413     | expr . "--"
  415     | expr . '[' expr ']'
  416     | expr . '.' '[' expr ']'
  417     | expr . "?[" expr ']'
  418     | expr . '.' "?[" expr ']'
  419     | expr . "?." "name"
  420     | expr . '.' "?." "name"
  429     | expr . "??" expr
  430     | expr . '?' expr ':' expr
  433     | expr . "is" "type" '<' $@23 type_declaration_no_options '>' $@24
  434     | expr . "is" basic_type_declaration
  435     | expr . "is" "name"
  436     | expr . "as" "name"
  439     | expr . "as" "type" '<' $@25 type_declaration '>' $@26
  440     | expr . "as" basic_type_declaration
  441     | expr . '?' "as" "name"
  444     | expr . '?' "as" "type" '<' $@27 type_declaration '>' $@28
  445     | expr . '?' "as" basic_type_declaration
  453     | expr . "<|" expr
  454     | expr . "|>" expr
  455     | expr . "|>" basic_type_declaration
  466 expr_mtag: expr . '.' "$f" '(' expr ')'
  467          | expr . "?." "$f" '(' expr ')'
  468          | expr . '.' '.' "$f" '(' expr ')'
  469          | expr . '.' "?." "$f" '(' expr ')'
  470          | expr . "as" "$f" '(' expr ')'
  471          | expr . '?' "as" "$f" '(' expr ')'
  472          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 609
    "as"   shift, and go to state 610
    "<<"   shift, and go to state 611
    ">>"   shift, and go to state 612
    "++"   shift, and go to state 613
    "--"   shift, and go to state 614
    "->"   shift, and go to state 619
    "??"   shift, and go to state 620
    "?."   shift, and go to state 621
    "?["   shift, and go to state 622
    "<|"   shift, and go to state 623
    "|>"   shift, and go to state 624
    "<<<"  shift, and go to state 625
    ">>>"  shift, and go to state 626
    '-'    shift, and go to state 637
    '+'    shift, and go to state 638
    '*'    shift, and go to state 639
    '/'    shift, and go to state 640
    '%'    shift, and go to state 641
    '.'    shift, and go to state 642
    '['    shift, and go to state 643

    $default  reduce using rule 289 (expr_cast)


State 1308

  292 expr_cast: "reinterpret" '<' $@13 type_declaration_no_options '>' $@14 expr .
  347 expr_method_call: expr . "->" "name" '(' ')'
  348                 | expr . "->" "name" '(' expr_list ')'
  358 expr_field: expr . '.' "name"
  359           | expr . '.' '.' "name"
  360           | expr . '.' "name" '(' ')'
  361           | expr . '.' "name" '(' expr_list ')'
  362           | expr . '.' basic_type_declaration '(' ')'
  363           | expr . '.' basic_type_declaration '(' expr_list ')'
  366           | expr . '.' $@21 error $@22
  388 expr: expr . "<<" expr
  389     | expr . ">>" expr
  390     | expr . "<<<" expr
  391     | expr . ">>>" expr
  392     | expr . '+' expr
  393     | expr . '-' expr
  394     | expr . '*' expr
  395     | expr . '/' expr
  396     | expr . '%' expr
  397     | expr . '<' expr
  398     | expr . '>' expr
  399     | expr . "==" expr
  400     | expr . "!=" expr
  401     | expr . "<=" expr
  402     | expr . ">=" expr
  403     | expr . '&' expr
  404     | expr . '|' expr
  405     | expr . '^' expr
  406     | expr . "&&" expr
  407     | expr . "||" expr
  408     | expr . "^^" expr
  409     | expr . ".." expr
  412     | expr . "++"
  413     | expr . "--"
  415     | expr . '[' expr ']'
  416     | expr . '.' '[' expr ']'
  417     | expr . "?[" expr ']'
  418     | expr . '.' "?[" expr ']'
  419     | expr . "?." "name"
  420     | expr . '.' "?." "name"
  429     | expr . "??" expr
  430     | expr . '?' expr ':' expr
  433     | expr . "is" "type" '<' $@23 type_declaration_no_options '>' $@24
  434     | expr . "is" basic_type_declaration
  435     | expr . "is" "name"
  436     | expr . "as" "name"
  439     | expr . "as" "type" '<' $@25 type_declaration '>' $@26
  440     | expr . "as" basic_type_declaration
  441     | expr . '?' "as" "name"
  444     | expr . '?' "as" "type" '<' $@27 type_declaration '>' $@28
  445     | expr . '?' "as" basic_type_declaration
  453     | expr . "<|" expr
  454     | expr . "|>" expr
  455     | expr . "|>" basic_type_declaration
  466 expr_mtag: expr . '.' "$f" '(' expr ')'
  467          | expr . "?." "$f" '(' expr ')'
  468          | expr . '.' '.' "$f" '(' expr ')'
  469          | expr . '.' "?." "$f" '(' expr ')'
  470          | expr . "as" "$f" '(' expr ')'
  471          | expr . '?' "as" "$f" '(' expr ')'
  472          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 609
    "as"   shift, and go to state 610
    "<<"   shift, and go to state 611
    ">>"   shift, and go to state 612
    "++"   shift, and go to state 613
    "--"   shift, and go to state 614
    "->"   shift, and go to state 619
    "??"   shift, and go to state 620
    "?."   shift, and go to state 621
    "?["   shift, and go to state 622
    "<|"   shift, and go to state 623
    "|>"   shift, and go to state 624
    "<<<"  shift, and go to state 625
    ">>>"  shift, and go to state 626
    '-'    shift, and go to state 637
    '+'    shift, and go to state 638
    '*'    shift, and go to state 639
    '/'    shift, and go to state 640
    '%'    shift, and go to state 641
    '.'    shift, and go to state 642
    '['    shift, and go to state 643

    $default  reduce using rule 292 (expr_cast)


State 1309

  784 make_dim_decl: "fixed_array" '<' $@95 type_declaration_no_options '>' $@96 '(' . expr_list optional_comma ')'

    "struct"                          shift, and go to state 409
    "class"                           shift, and go to state 410
    "true"                            shift, and go to state 411
    "false"                           shift, and go to state 412
    "new"                             shift, and go to state 413
    "typeinfo"                        shift, and go to state 414
    "type"                            shift, and go to state 415
    "array"                           shift, and go to state 416
    "null"                            shift, and go to state 417
    "table"                           shift, and go to state 418
    "deref"                           shift, and go to state 419
    "cast"                            shift, and go to state 420
    "upcast"                          shift, and go to state 421
    "addr"                            shift, and go to state 422
    "reinterpret"                     shift, and go to state 423
    "unsafe"                          shift, and go to state 424
    "fixed_array"                     shift, and go to state 425
    "default"                         shift, and go to state 426
    "bool"                            shift, and go to state 225
    "void"                            shift, and go to state 226
    "string"                          shift, and go to state 227
    "int"                             shift, and go to state 229
    "int2"                            shift, and go to state 230
    "int3"                            shift, and go to state 231
    "int4"                            shift, and go to state 232
    "uint"                            shift, and go to state 233
    "bitfield"                        shift, and go to state 427
    "uint2"                           shift, and go to state 235
    "uint3"                           shift, and go to state 236
    "uint4"                           shift, and go to state 237
    "float"                           shift, and go to state 238
    "float2"                          shift, and go to state 239
    "float3"                          shift, and go to state 240
    "float4"                          shift, and go to state 241
    "range"                           shift, and go to state 242
    "urange"                          shift, and go to state 243
    "range64"                         shift, and go to state 244
    "urange64"                        shift, and go to state 245
    "int64"                           shift, and go to state 247
    "uint64"                          shift, and go to state 248
    "double"                          shift, and go to state 249
    "int8"                            shift, and go to state 252
    "uint8"                           shift, and go to state 253
    "int16"                           shift, and go to state 254
    "uint16"                          shift, and go to state 255
    "tuple"                           shift, and go to state 428
    "variant"                         shift, and go to state 429
    "generator"                       shift, and go to state 430
    "++"                              shift, and go to state 431
    "--"                              shift, and go to state 432
    "::"                              shift, and go to state 55
    "$$"                              shift, and go to state 433
    "$i"                              shift, and go to state 434
    "$v"                              shift, and go to state 435
    "$b"                              shift, and go to state 436
    "$a"                              shift, and go to state 437
    "$c"                              shift, and go to state 438
    "..."                             shift, and go to state 439
    "integer constant"                shift, and go to state 440
    "long integer constant"           shift, and go to state 441
    "unsigned integer constant"       shift, and go to state 442
    "unsigned long integer constant"  shift, and go to state 443
    "unsigned int8 constant"          shift, and go to state 444
    "floating point constant"         shift, and go to state 445
    "double constant"                 shift, and go to state 446
    "name"                            shift, and go to state 56
    "start of the string"             shift, and go to state 447
    "begin of code block"             shift, and go to state 448
    '-'                               shift, and go to state 449
    '+'                               shift, and go to state 450
    '*'                               shift, and go to state 451
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 452
    '!'                               shift, and go to state 453
    '['                               shift, and go to state 454
    '('                               shift, and go to state 455
    '$'                               shift, and go to state 456
    '@'                               shift, and go to state 457

    string_builder          go to state 458
    expr_reader             go to state 459
    expr_call_pipe          go to state 460
    name_in_namespace       go to state 461
    expr_new                go to state 462
    expr_cast               go to state 463
    expr_type_decl          go to state 464
    expr_type_info          go to state 465
    expr_list               go to state 1364
    block_or_lambda         go to state 466
    expr_full_block         go to state 467
    expr_numeric_const      go to state 468
    expr_named_call         go to state 469
    expr_method_call        go to state 470
    func_addr_expr          go to state 471
    expr_field              go to state 472
    expr_call               go to state 473
    expr                    go to state 600
    expr_mtag               go to state 475
    basic_type_declaration  go to state 476
    make_decl               go to state 477
    make_struct_decl        go to state 478
    make_tuple_call         go to state 479
    make_dim_decl           go to state 480
    make_table_decl         go to state 481
    array_comprehension     go to state 482


State 1310

  748 use_initializer: "uninitialized" .

    $default  reduce using rule 748 (use_initializer)


State 1311

  760 make_struct_decl: "default" '<' $@83 type_declaration_no_options '>' $@84 use_initializer .

    $default  reduce using rule 760 (make_struct_decl)


State 1312

  766 make_tuple_call: "tuple" '<' $@85 type_declaration_no_options '>' $@86 '(' . use_initializer optional_make_struct_dim_decl ')'

    "uninitialized"  shift, and go to state 1310

    $default  reduce using rule 747 (use_initializer)

    use_initializer  go to state 1365


State 1313

  757 make_struct_decl: "variant" '<' $@81 type_declaration_no_options '>' $@82 '(' . make_variant_dim ')'

    "$f"    shift, and go to state 792
    "name"  shift, and go to state 1002

    make_struct_fields  go to state 1366
    make_variant_dim    go to state 1367


State 1314

  426 expr: "generator" '<' type_declaration_no_options '>' optional_capture_list '(' ')' .

    $default  reduce using rule 426 (expr)


State 1315

  347 expr_method_call: expr . "->" "name" '(' ')'
  348                 | expr . "->" "name" '(' expr_list ')'
  358 expr_field: expr . '.' "name"
  359           | expr . '.' '.' "name"
  360           | expr . '.' "name" '(' ')'
  361           | expr . '.' "name" '(' expr_list ')'
  362           | expr . '.' basic_type_declaration '(' ')'
  363           | expr . '.' basic_type_declaration '(' expr_list ')'
  366           | expr . '.' $@21 error $@22
  388 expr: expr . "<<" expr
  389     | expr . ">>" expr
  390     | expr . "<<<" expr
  391     | expr . ">>>" expr
  392     | expr . '+' expr
  393     | expr . '-' expr
  394     | expr . '*' expr
  395     | expr . '/' expr
  396     | expr . '%' expr
  397     | expr . '<' expr
  398     | expr . '>' expr
  399     | expr . "==" expr
  400     | expr . "!=" expr
  401     | expr . "<=" expr
  402     | expr . ">=" expr
  403     | expr . '&' expr
  404     | expr . '|' expr
  405     | expr . '^' expr
  406     | expr . "&&" expr
  407     | expr . "||" expr
  408     | expr . "^^" expr
  409     | expr . ".." expr
  412     | expr . "++"
  413     | expr . "--"
  415     | expr . '[' expr ']'
  416     | expr . '.' '[' expr ']'
  417     | expr . "?[" expr ']'
  418     | expr . '.' "?[" expr ']'
  419     | expr . "?." "name"
  420     | expr . '.' "?." "name"
  427     | "generator" '<' type_declaration_no_options '>' optional_capture_list '(' expr . ')'
  429     | expr . "??" expr
  430     | expr . '?' expr ':' expr
  433     | expr . "is" "type" '<' $@23 type_declaration_no_options '>' $@24
  434     | expr . "is" basic_type_declaration
  435     | expr . "is" "name"
  436     | expr . "as" "name"
  439     | expr . "as" "type" '<' $@25 type_declaration '>' $@26
  440     | expr . "as" basic_type_declaration
  441     | expr . '?' "as" "name"
  444     | expr . '?' "as" "type" '<' $@27 type_declaration '>' $@28
  445     | expr . '?' "as" basic_type_declaration
  453     | expr . "<|" expr
  454     | expr . "|>" expr
  455     | expr . "|>" basic_type_declaration
  466 expr_mtag: expr . '.' "$f" '(' expr ')'
  467          | expr . "?." "$f" '(' expr ')'
  468          | expr . '.' '.' "$f" '(' expr ')'
  469          | expr . '.' "?." "$f" '(' expr ')'
  470          | expr . "as" "$f" '(' expr ')'
  471          | expr . '?' "as" "$f" '(' expr ')'
  472          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 609
    "as"   shift, and go to state 610
    "<<"   shift, and go to state 611
    ">>"   shift, and go to state 612
    "++"   shift, and go to state 613
    "--"   shift, and go to state 614
    "<="   shift, and go to state 615
    ">="   shift, and go to state 616
    "=="   shift, and go to state 617
    "!="   shift, and go to state 618
    "->"   shift, and go to state 619
    "??"   shift, and go to state 620
    "?."   shift, and go to state 621
    "?["   shift, and go to state 622
    "<|"   shift, and go to state 623
    "|>"   shift, and go to state 624
    "<<<"  shift, and go to state 625
    ">>>"  shift, and go to state 626
    "&&"   shift, and go to state 627
    "||"   shift, and go to state 628
    "^^"   shift, and go to state 629
    ".."   shift, and go to state 630
    '?'    shift, and go to state 631
    '|'    shift, and go to state 632
    '^'    shift, and go to state 633
    '&'    shift, and go to state 634
    '<'    shift, and go to state 635
    '>'    shift, and go to state 636
    '-'    shift, and go to state 637
    '+'    shift, and go to state 638
    '*'    shift, and go to state 639
    '/'    shift, and go to state 640
    '%'    shift, and go to state 641
    '.'    shift, and go to state 642
    '['    shift, and go to state 643
    ')'    shift, and go to state 1368


State 1316

  465 expr_mtag: "$c" '(' expr ')' '(' expr_list ')' .

    $default  reduce using rule 465 (expr_mtag)


State 1317

  797 array_comprehension: "begin of code block" "for" '(' variable_name_with_pos_list "in" expr_list ')' . "end of expression" make_map_tuple array_comprehension_where "end of code block"

    "end of expression"  shift, and go to state 1369


State 1318

  795 array_comprehension: '[' "for" '(' variable_name_with_pos_list "in" expr_list ')' . "end of expression" expr array_comprehension_where ']'

    "end of expression"  shift, and go to state 1370


State 1319

  300 expr_list: expr_list . ',' expr
  796 array_comprehension: '[' "iterator" "for" '(' variable_name_with_pos_list "in" expr_list . ')' "end of expression" expr array_comprehension_where ']'

    ','  shift, and go to state 1040
    ')'  shift, and go to state 1371


State 1320

  354 func_addr_expr: '@' '@' '<' $@17 type_declaration_no_options '>' $@18 . func_addr_name

    "::"    shift, and go to state 55
    "$i"    shift, and go to state 786
    "name"  shift, and go to state 56

    name_in_namespace  go to state 789
    func_addr_name     go to state 1372


State 1321

  357 func_addr_expr: '@' '@' '<' $@19 optional_function_argument_list optional_function_type '>' . $@20 func_addr_name

    $default  reduce using rule 356 ($@20)

    $@20  go to state 1373


State 1322

  736 make_struct_fields: "$f" '(' expr ')' ":=" . expr

    "struct"                          shift, and go to state 409
    "class"                           shift, and go to state 410
    "true"                            shift, and go to state 411
    "false"                           shift, and go to state 412
    "new"                             shift, and go to state 413
    "typeinfo"                        shift, and go to state 414
    "type"                            shift, and go to state 415
    "array"                           shift, and go to state 416
    "null"                            shift, and go to state 417
    "table"                           shift, and go to state 418
    "deref"                           shift, and go to state 419
    "cast"                            shift, and go to state 420
    "upcast"                          shift, and go to state 421
    "addr"                            shift, and go to state 422
    "reinterpret"                     shift, and go to state 423
    "unsafe"                          shift, and go to state 424
    "fixed_array"                     shift, and go to state 425
    "default"                         shift, and go to state 426
    "bool"                            shift, and go to state 225
    "void"                            shift, and go to state 226
    "string"                          shift, and go to state 227
    "int"                             shift, and go to state 229
    "int2"                            shift, and go to state 230
    "int3"                            shift, and go to state 231
    "int4"                            shift, and go to state 232
    "uint"                            shift, and go to state 233
    "bitfield"                        shift, and go to state 427
    "uint2"                           shift, and go to state 235
    "uint3"                           shift, and go to state 236
    "uint4"                           shift, and go to state 237
    "float"                           shift, and go to state 238
    "float2"                          shift, and go to state 239
    "float3"                          shift, and go to state 240
    "float4"                          shift, and go to state 241
    "range"                           shift, and go to state 242
    "urange"                          shift, and go to state 243
    "range64"                         shift, and go to state 244
    "urange64"                        shift, and go to state 245
    "int64"                           shift, and go to state 247
    "uint64"                          shift, and go to state 248
    "double"                          shift, and go to state 249
    "int8"                            shift, and go to state 252
    "uint8"                           shift, and go to state 253
    "int16"                           shift, and go to state 254
    "uint16"                          shift, and go to state 255
    "tuple"                           shift, and go to state 428
    "variant"                         shift, and go to state 429
    "generator"                       shift, and go to state 430
    "++"                              shift, and go to state 431
    "--"                              shift, and go to state 432
    "::"                              shift, and go to state 55
    "$$"                              shift, and go to state 433
    "$i"                              shift, and go to state 434
    "$v"                              shift, and go to state 435
    "$b"                              shift, and go to state 436
    "$a"                              shift, and go to state 437
    "$c"                              shift, and go to state 438
    "..."                             shift, and go to state 439
    "integer constant"                shift, and go to state 440
    "long integer constant"           shift, and go to state 441
    "unsigned integer constant"       shift, and go to state 442
    "unsigned long integer constant"  shift, and go to state 443
    "unsigned int8 constant"          shift, and go to state 444
    "floating point constant"         shift, and go to state 445
    "double constant"                 shift, and go to state 446
    "name"                            shift, and go to state 56
    "start of the string"             shift, and go to state 447
    "begin of code block"             shift, and go to state 448
    '-'                               shift, and go to state 449
    '+'                               shift, and go to state 450
    '*'                               shift, and go to state 451
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 452
    '!'                               shift, and go to state 453
    '['                               shift, and go to state 454
    '('                               shift, and go to state 455
    '$'                               shift, and go to state 456
    '@'                               shift, and go to state 457

    string_builder          go to state 458
    expr_reader             go to state 459
    expr_call_pipe          go to state 460
    name_in_namespace       go to state 461
    expr_new                go to state 462
    expr_cast               go to state 463
    expr_type_decl          go to state 464
    expr_type_info          go to state 465
    block_or_lambda         go to state 466
    expr_full_block         go to state 467
    expr_numeric_const      go to state 468
    expr_named_call         go to state 469
    expr_method_call        go to state 470
    func_addr_expr          go to state 471
    expr_field              go to state 472
    expr_call               go to state 473
    expr                    go to state 1374
    expr_mtag               go to state 475
    basic_type_declaration  go to state 476
    make_decl               go to state 477
    make_struct_decl        go to state 478
    make_tuple_call         go to state 479
    make_dim_decl           go to state 480
    make_table_decl         go to state 481
    array_comprehension     go to state 482


State 1323

  735 make_struct_fields: "$f" '(' expr ')' copy_or_move . expr

    "struct"                          shift, and go to state 409
    "class"                           shift, and go to state 410
    "true"                            shift, and go to state 411
    "false"                           shift, and go to state 412
    "new"                             shift, and go to state 413
    "typeinfo"                        shift, and go to state 414
    "type"                            shift, and go to state 415
    "array"                           shift, and go to state 416
    "null"                            shift, and go to state 417
    "table"                           shift, and go to state 418
    "deref"                           shift, and go to state 419
    "cast"                            shift, and go to state 420
    "upcast"                          shift, and go to state 421
    "addr"                            shift, and go to state 422
    "reinterpret"                     shift, and go to state 423
    "unsafe"                          shift, and go to state 424
    "fixed_array"                     shift, and go to state 425
    "default"                         shift, and go to state 426
    "bool"                            shift, and go to state 225
    "void"                            shift, and go to state 226
    "string"                          shift, and go to state 227
    "int"                             shift, and go to state 229
    "int2"                            shift, and go to state 230
    "int3"                            shift, and go to state 231
    "int4"                            shift, and go to state 232
    "uint"                            shift, and go to state 233
    "bitfield"                        shift, and go to state 427
    "uint2"                           shift, and go to state 235
    "uint3"                           shift, and go to state 236
    "uint4"                           shift, and go to state 237
    "float"                           shift, and go to state 238
    "float2"                          shift, and go to state 239
    "float3"                          shift, and go to state 240
    "float4"                          shift, and go to state 241
    "range"                           shift, and go to state 242
    "urange"                          shift, and go to state 243
    "range64"                         shift, and go to state 244
    "urange64"                        shift, and go to state 245
    "int64"                           shift, and go to state 247
    "uint64"                          shift, and go to state 248
    "double"                          shift, and go to state 249
    "int8"                            shift, and go to state 252
    "uint8"                           shift, and go to state 253
    "int16"                           shift, and go to state 254
    "uint16"                          shift, and go to state 255
    "tuple"                           shift, and go to state 428
    "variant"                         shift, and go to state 429
    "generator"                       shift, and go to state 430
    "++"                              shift, and go to state 431
    "--"                              shift, and go to state 432
    "::"                              shift, and go to state 55
    "$$"                              shift, and go to state 433
    "$i"                              shift, and go to state 434
    "$v"                              shift, and go to state 435
    "$b"                              shift, and go to state 436
    "$a"                              shift, and go to state 437
    "$c"                              shift, and go to state 438
    "..."                             shift, and go to state 439
    "integer constant"                shift, and go to state 440
    "long integer constant"           shift, and go to state 441
    "unsigned integer constant"       shift, and go to state 442
    "unsigned long integer constant"  shift, and go to state 443
    "unsigned int8 constant"          shift, and go to state 444
    "floating point constant"         shift, and go to state 445
    "double constant"                 shift, and go to state 446
    "name"                            shift, and go to state 56
    "start of the string"             shift, and go to state 447
    "begin of code block"             shift, and go to state 448
    '-'                               shift, and go to state 449
    '+'                               shift, and go to state 450
    '*'                               shift, and go to state 451
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 452
    '!'                               shift, and go to state 453
    '['                               shift, and go to state 454
    '('                               shift, and go to state 455
    '$'                               shift, and go to state 456
    '@'                               shift, and go to state 457

    string_builder          go to state 458
    expr_reader             go to state 459
    expr_call_pipe          go to state 460
    name_in_namespace       go to state 461
    expr_new                go to state 462
    expr_cast               go to state 463
    expr_type_decl          go to state 464
    expr_type_info          go to state 465
    block_or_lambda         go to state 466
    expr_full_block         go to state 467
    expr_numeric_const      go to state 468
    expr_named_call         go to state 469
    expr_method_call        go to state 470
    func_addr_expr          go to state 471
    expr_field              go to state 472
    expr_call               go to state 473
    expr                    go to state 1375
    expr_mtag               go to state 475
    basic_type_declaration  go to state 476
    make_decl               go to state 477
    make_struct_decl        go to state 478
    make_tuple_call         go to state 479
    make_dim_decl           go to state 480
    make_table_decl         go to state 481
    array_comprehension     go to state 482


State 1324

  346 expr_named_call: name_in_namespace '(' expr_list ',' '[' make_struct_fields ']' . ')'

    ')'  shift, and go to state 1376


State 1325

  347 expr_method_call: expr . "->" "name" '(' ')'
  348                 | expr . "->" "name" '(' expr_list ')'
  358 expr_field: expr . '.' "name"
  359           | expr . '.' '.' "name"
  360           | expr . '.' "name" '(' ')'
  361           | expr . '.' "name" '(' expr_list ')'
  362           | expr . '.' basic_type_declaration '(' ')'
  363           | expr . '.' basic_type_declaration '(' expr_list ')'
  366           | expr . '.' $@21 error $@22
  388 expr: expr . "<<" expr
  389     | expr . ">>" expr
  390     | expr . "<<<" expr
  391     | expr . ">>>" expr
  392     | expr . '+' expr
  393     | expr . '-' expr
  394     | expr . '*' expr
  395     | expr . '/' expr
  396     | expr . '%' expr
  397     | expr . '<' expr
  398     | expr . '>' expr
  399     | expr . "==" expr
  400     | expr . "!=" expr
  401     | expr . "<=" expr
  402     | expr . ">=" expr
  403     | expr . '&' expr
  404     | expr . '|' expr
  405     | expr . '^' expr
  406     | expr . "&&" expr
  407     | expr . "||" expr
  408     | expr . "^^" expr
  409     | expr . ".." expr
  412     | expr . "++"
  413     | expr . "--"
  415     | expr . '[' expr ']'
  416     | expr . '.' '[' expr ']'
  417     | expr . "?[" expr ']'
  418     | expr . '.' "?[" expr ']'
  419     | expr . "?." "name"
  420     | expr . '.' "?." "name"
  429     | expr . "??" expr
  430     | expr . '?' expr ':' expr
  433     | expr . "is" "type" '<' $@23 type_declaration_no_options '>' $@24
  434     | expr . "is" basic_type_declaration
  435     | expr . "is" "name"
  436     | expr . "as" "name"
  439     | expr . "as" "type" '<' $@25 type_declaration '>' $@26
  440     | expr . "as" basic_type_declaration
  441     | expr . '?' "as" "name"
  444     | expr . '?' "as" "type" '<' $@27 type_declaration '>' $@28
  445     | expr . '?' "as" basic_type_declaration
  453     | expr . "<|" expr
  454     | expr . "|>" expr
  455     | expr . "|>" basic_type_declaration
  466 expr_mtag: expr . '.' "$f" '(' expr ')'
  467          | expr . "?." "$f" '(' expr ')'
  468          | expr . '.' '.' "$f" '(' expr ')'
  469          | expr . '.' "?." "$f" '(' expr ')'
  470          | expr . "as" "$f" '(' expr ')'
  471          | expr . '?' "as" "$f" '(' expr ')'
  472          | expr . "is" "$f" '(' expr ')'
  737 make_struct_fields: make_struct_fields ',' "$f" '(' expr . ')' copy_or_move expr
  738                   | make_struct_fields ',' "$f" '(' expr . ')' ":=" expr

    "is"   shift, and go to state 609
    "as"   shift, and go to state 610
    "<<"   shift, and go to state 611
    ">>"   shift, and go to state 612
    "++"   shift, and go to state 613
    "--"   shift, and go to state 614
    "<="   shift, and go to state 615
    ">="   shift, and go to state 616
    "=="   shift, and go to state 617
    "!="   shift, and go to state 618
    "->"   shift, and go to state 619
    "??"   shift, and go to state 620
    "?."   shift, and go to state 621
    "?["   shift, and go to state 622
    "<|"   shift, and go to state 623
    "|>"   shift, and go to state 624
    "<<<"  shift, and go to state 625
    ">>>"  shift, and go to state 626
    "&&"   shift, and go to state 627
    "||"   shift, and go to state 628
    "^^"   shift, and go to state 629
    ".."   shift, and go to state 630
    '?'    shift, and go to state 631
    '|'    shift, and go to state 632
    '^'    shift, and go to state 633
    '&'    shift, and go to state 634
    '<'    shift, and go to state 635
    '>'    shift, and go to state 636
    '-'    shift, and go to state 637
    '+'    shift, and go to state 638
    '*'    shift, and go to state 639
    '/'    shift, and go to state 640
    '%'    shift, and go to state 641
    '.'    shift, and go to state 642
    '['    shift, and go to state 643
    ')'    shift, and go to state 1377


State 1326

  347 expr_method_call: expr . "->" "name" '(' ')'
  348                 | expr . "->" "name" '(' expr_list ')'
  358 expr_field: expr . '.' "name"
  359           | expr . '.' '.' "name"
  360           | expr . '.' "name" '(' ')'
  361           | expr . '.' "name" '(' expr_list ')'
  362           | expr . '.' basic_type_declaration '(' ')'
  363           | expr . '.' basic_type_declaration '(' expr_list ')'
  366           | expr . '.' $@21 error $@22
  388 expr: expr . "<<" expr
  389     | expr . ">>" expr
  390     | expr . "<<<" expr
  391     | expr . ">>>" expr
  392     | expr . '+' expr
  393     | expr . '-' expr
  394     | expr . '*' expr
  395     | expr . '/' expr
  396     | expr . '%' expr
  397     | expr . '<' expr
  398     | expr . '>' expr
  399     | expr . "==" expr
  400     | expr . "!=" expr
  401     | expr . "<=" expr
  402     | expr . ">=" expr
  403     | expr . '&' expr
  404     | expr . '|' expr
  405     | expr . '^' expr
  406     | expr . "&&" expr
  407     | expr . "||" expr
  408     | expr . "^^" expr
  409     | expr . ".." expr
  412     | expr . "++"
  413     | expr . "--"
  415     | expr . '[' expr ']'
  416     | expr . '.' '[' expr ']'
  417     | expr . "?[" expr ']'
  418     | expr . '.' "?[" expr ']'
  419     | expr . "?." "name"
  420     | expr . '.' "?." "name"
  429     | expr . "??" expr
  430     | expr . '?' expr ':' expr
  433     | expr . "is" "type" '<' $@23 type_declaration_no_options '>' $@24
  434     | expr . "is" basic_type_declaration
  435     | expr . "is" "name"
  436     | expr . "as" "name"
  439     | expr . "as" "type" '<' $@25 type_declaration '>' $@26
  440     | expr . "as" basic_type_declaration
  441     | expr . '?' "as" "name"
  444     | expr . '?' "as" "type" '<' $@27 type_declaration '>' $@28
  445     | expr . '?' "as" basic_type_declaration
  453     | expr . "<|" expr
  454     | expr . "|>" expr
  455     | expr . "|>" basic_type_declaration
  466 expr_mtag: expr . '.' "$f" '(' expr ')'
  467          | expr . "?." "$f" '(' expr ')'
  468          | expr . '.' '.' "$f" '(' expr ')'
  469          | expr . '.' "?." "$f" '(' expr ')'
  470          | expr . "as" "$f" '(' expr ')'
  471          | expr . '?' "as" "$f" '(' expr ')'
  472          | expr . "is" "$f" '(' expr ')'
  734 make_struct_fields: make_struct_fields ',' "name" ":=" expr .

    "is"   shift, and go to state 609
    "as"   shift, and go to state 610
    "<<"   shift, and go to state 611
    ">>"   shift, and go to state 612
    "++"   shift, and go to state 613
    "--"   shift, and go to state 614
    "<="   shift, and go to state 615
    ">="   shift, and go to state 616
    "=="   shift, and go to state 617
    "!="   shift, and go to state 618
    "->"   shift, and go to state 619
    "??"   shift, and go to state 620
    "?."   shift, and go to state 621
    "?["   shift, and go to state 622
    "<|"   shift, and go to state 623
    "|>"   shift, and go to state 624
    "<<<"  shift, and go to state 625
    ">>>"  shift, and go to state 626
    "&&"   shift, and go to state 627
    "||"   shift, and go to state 628
    "^^"   shift, and go to state 629
    ".."   shift, and go to state 630
    '?'    shift, and go to state 631
    '|'    shift, and go to state 632
    '^'    shift, and go to state 633
    '&'    shift, and go to state 634
    '<'    shift, and go to state 635
    '>'    shift, and go to state 636
    '-'    shift, and go to state 637
    '+'    shift, and go to state 638
    '*'    shift, and go to state 639
    '/'    shift, and go to state 640
    '%'    shift, and go to state 641
    '.'    shift, and go to state 642
    '['    shift, and go to state 643

    $default  reduce using rule 734 (make_struct_fields)


State 1327

  347 expr_method_call: expr . "->" "name" '(' ')'
  348                 | expr . "->" "name" '(' expr_list ')'
  358 expr_field: expr . '.' "name"
  359           | expr . '.' '.' "name"
  360           | expr . '.' "name" '(' ')'
  361           | expr . '.' "name" '(' expr_list ')'
  362           | expr . '.' basic_type_declaration '(' ')'
  363           | expr . '.' basic_type_declaration '(' expr_list ')'
  366           | expr . '.' $@21 error $@22
  388 expr: expr . "<<" expr
  389     | expr . ">>" expr
  390     | expr . "<<<" expr
  391     | expr . ">>>" expr
  392     | expr . '+' expr
  393     | expr . '-' expr
  394     | expr . '*' expr
  395     | expr . '/' expr
  396     | expr . '%' expr
  397     | expr . '<' expr
  398     | expr . '>' expr
  399     | expr . "==" expr
  400     | expr . "!=" expr
  401     | expr . "<=" expr
  402     | expr . ">=" expr
  403     | expr . '&' expr
  404     | expr . '|' expr
  405     | expr . '^' expr
  406     | expr . "&&" expr
  407     | expr . "||" expr
  408     | expr . "^^" expr
  409     | expr . ".." expr
  412     | expr . "++"
  413     | expr . "--"
  415     | expr . '[' expr ']'
  416     | expr . '.' '[' expr ']'
  417     | expr . "?[" expr ']'
  418     | expr . '.' "?[" expr ']'
  419     | expr . "?." "name"
  420     | expr . '.' "?." "name"
  429     | expr . "??" expr
  430     | expr . '?' expr ':' expr
  433     | expr . "is" "type" '<' $@23 type_declaration_no_options '>' $@24
  434     | expr . "is" basic_type_declaration
  435     | expr . "is" "name"
  436     | expr . "as" "name"
  439     | expr . "as" "type" '<' $@25 type_declaration '>' $@26
  440     | expr . "as" basic_type_declaration
  441     | expr . '?' "as" "name"
  444     | expr . '?' "as" "type" '<' $@27 type_declaration '>' $@28
  445     | expr . '?' "as" basic_type_declaration
  453     | expr . "<|" expr
  454     | expr . "|>" expr
  455     | expr . "|>" basic_type_declaration
  466 expr_mtag: expr . '.' "$f" '(' expr ')'
  467          | expr . "?." "$f" '(' expr ')'
  468          | expr . '.' '.' "$f" '(' expr ')'
  469          | expr . '.' "?." "$f" '(' expr ')'
  470          | expr . "as" "$f" '(' expr ')'
  471          | expr . '?' "as" "$f" '(' expr ')'
  472          | expr . "is" "$f" '(' expr ')'
  733 make_struct_fields: make_struct_fields ',' "name" copy_or_move expr .

    "is"   shift, and go to state 609
    "as"   shift, and go to state 610
    "<<"   shift, and go to state 611
    ">>"   shift, and go to state 612
    "++"   shift, and go to state 613
    "--"   shift, and go to state 614
    "<="   shift, and go to state 615
    ">="   shift, and go to state 616
    "=="   shift, and go to state 617
    "!="   shift, and go to state 618
    "->"   shift, and go to state 619
    "??"   shift, and go to state 620
    "?."   shift, and go to state 621
    "?["   shift, and go to state 622
    "<|"   shift, and go to state 623
    "|>"   shift, and go to state 624
    "<<<"  shift, and go to state 625
    ">>>"  shift, and go to state 626
    "&&"   shift, and go to state 627
    "||"   shift, and go to state 628
    "^^"   shift, and go to state 629
    ".."   shift, and go to state 630
    '?'    shift, and go to state 631
    '|'    shift, and go to state 632
    '^'    shift, and go to state 633
    '&'    shift, and go to state 634
    '<'    shift, and go to state 635
    '>'    shift, and go to state 636
    '-'    shift, and go to state 637
    '+'    shift, and go to state 638
    '*'    shift, and go to state 639
    '/'    shift, and go to state 640
    '%'    shift, and go to state 641
    '.'    shift, and go to state 642
    '['    shift, and go to state 643

    $default  reduce using rule 733 (make_struct_fields)


State 1328

  311 capture_entry: "name" '(' "name" . ')'

    ')'  shift, and go to state 1378


State 1329

  313 capture_list: capture_list ',' capture_entry .

    $default  reduce using rule 313 (capture_list)


State 1330

  303 block_or_simple_block: "=>" "<-" . expr

    "struct"                          shift, and go to state 409
    "class"                           shift, and go to state 410
    "true"                            shift, and go to state 411
    "false"                           shift, and go to state 412
    "new"                             shift, and go to state 413
    "typeinfo"                        shift, and go to state 414
    "type"                            shift, and go to state 415
    "array"                           shift, and go to state 416
    "null"                            shift, and go to state 417
    "table"                           shift, and go to state 418
    "deref"                           shift, and go to state 419
    "cast"                            shift, and go to state 420
    "upcast"                          shift, and go to state 421
    "addr"                            shift, and go to state 422
    "reinterpret"                     shift, and go to state 423
    "unsafe"                          shift, and go to state 424
    "fixed_array"                     shift, and go to state 425
    "default"                         shift, and go to state 426
    "bool"                            shift, and go to state 225
    "void"                            shift, and go to state 226
    "string"                          shift, and go to state 227
    "int"                             shift, and go to state 229
    "int2"                            shift, and go to state 230
    "int3"                            shift, and go to state 231
    "int4"                            shift, and go to state 232
    "uint"                            shift, and go to state 233
    "bitfield"                        shift, and go to state 427
    "uint2"                           shift, and go to state 235
    "uint3"                           shift, and go to state 236
    "uint4"                           shift, and go to state 237
    "float"                           shift, and go to state 238
    "float2"                          shift, and go to state 239
    "float3"                          shift, and go to state 240
    "float4"                          shift, and go to state 241
    "range"                           shift, and go to state 242
    "urange"                          shift, and go to state 243
    "range64"                         shift, and go to state 244
    "urange64"                        shift, and go to state 245
    "int64"                           shift, and go to state 247
    "uint64"                          shift, and go to state 248
    "double"                          shift, and go to state 249
    "int8"                            shift, and go to state 252
    "uint8"                           shift, and go to state 253
    "int16"                           shift, and go to state 254
    "uint16"                          shift, and go to state 255
    "tuple"                           shift, and go to state 428
    "variant"                         shift, and go to state 429
    "generator"                       shift, and go to state 430
    "++"                              shift, and go to state 431
    "--"                              shift, and go to state 432
    "::"                              shift, and go to state 55
    "$$"                              shift, and go to state 433
    "$i"                              shift, and go to state 434
    "$v"                              shift, and go to state 435
    "$b"                              shift, and go to state 436
    "$a"                              shift, and go to state 437
    "$c"                              shift, and go to state 438
    "..."                             shift, and go to state 439
    "integer constant"                shift, and go to state 440
    "long integer constant"           shift, and go to state 441
    "unsigned integer constant"       shift, and go to state 442
    "unsigned long integer constant"  shift, and go to state 443
    "unsigned int8 constant"          shift, and go to state 444
    "floating point constant"         shift, and go to state 445
    "double constant"                 shift, and go to state 446
    "name"                            shift, and go to state 56
    "start of the string"             shift, and go to state 447
    "begin of code block"             shift, and go to state 448
    '-'                               shift, and go to state 449
    '+'                               shift, and go to state 450
    '*'                               shift, and go to state 451
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 452
    '!'                               shift, and go to state 453
    '['                               shift, and go to state 454
    '('                               shift, and go to state 455
    '$'                               shift, and go to state 456
    '@'                               shift, and go to state 457

    string_builder          go to state 458
    expr_reader             go to state 459
    expr_call_pipe          go to state 460
    name_in_namespace       go to state 461
    expr_new                go to state 462
    expr_cast               go to state 463
    expr_type_decl          go to state 464
    expr_type_info          go to state 465
    block_or_lambda         go to state 466
    expr_full_block         go to state 467
    expr_numeric_const      go to state 468
    expr_named_call         go to state 469
    expr_method_call        go to state 470
    func_addr_expr          go to state 471
    expr_field              go to state 472
    expr_call               go to state 473
    expr                    go to state 1379
    expr_mtag               go to state 475
    basic_type_declaration  go to state 476
    make_decl               go to state 477
    make_struct_decl        go to state 478
    make_tuple_call         go to state 479
    make_dim_decl           go to state 480
    make_table_decl         go to state 481
    array_comprehension     go to state 482


State 1331

  302 block_or_simple_block: "=>" expr .
  347 expr_method_call: expr . "->" "name" '(' ')'
  348                 | expr . "->" "name" '(' expr_list ')'
  358 expr_field: expr . '.' "name"
  359           | expr . '.' '.' "name"
  360           | expr . '.' "name" '(' ')'
  361           | expr . '.' "name" '(' expr_list ')'
  362           | expr . '.' basic_type_declaration '(' ')'
  363           | expr . '.' basic_type_declaration '(' expr_list ')'
  366           | expr . '.' $@21 error $@22
  388 expr: expr . "<<" expr
  389     | expr . ">>" expr
  390     | expr . "<<<" expr
  391     | expr . ">>>" expr
  392     | expr . '+' expr
  393     | expr . '-' expr
  394     | expr . '*' expr
  395     | expr . '/' expr
  396     | expr . '%' expr
  397     | expr . '<' expr
  398     | expr . '>' expr
  399     | expr . "==" expr
  400     | expr . "!=" expr
  401     | expr . "<=" expr
  402     | expr . ">=" expr
  403     | expr . '&' expr
  404     | expr . '|' expr
  405     | expr . '^' expr
  406     | expr . "&&" expr
  407     | expr . "||" expr
  408     | expr . "^^" expr
  409     | expr . ".." expr
  412     | expr . "++"
  413     | expr . "--"
  415     | expr . '[' expr ']'
  416     | expr . '.' '[' expr ']'
  417     | expr . "?[" expr ']'
  418     | expr . '.' "?[" expr ']'
  419     | expr . "?." "name"
  420     | expr . '.' "?." "name"
  429     | expr . "??" expr
  430     | expr . '?' expr ':' expr
  433     | expr . "is" "type" '<' $@23 type_declaration_no_options '>' $@24
  434     | expr . "is" basic_type_declaration
  435     | expr . "is" "name"
  436     | expr . "as" "name"
  439     | expr . "as" "type" '<' $@25 type_declaration '>' $@26
  440     | expr . "as" basic_type_declaration
  441     | expr . '?' "as" "name"
  444     | expr . '?' "as" "type" '<' $@27 type_declaration '>' $@28
  445     | expr . '?' "as" basic_type_declaration
  453     | expr . "<|" expr
  454     | expr . "|>" expr
  455     | expr . "|>" basic_type_declaration
  466 expr_mtag: expr . '.' "$f" '(' expr ')'
  467          | expr . "?." "$f" '(' expr ')'
  468          | expr . '.' '.' "$f" '(' expr ')'
  469          | expr . '.' "?." "$f" '(' expr ')'
  470          | expr . "as" "$f" '(' expr ')'
  471          | expr . '?' "as" "$f" '(' expr ')'
  472          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 609
    "as"   shift, and go to state 610
    "<<"   shift, and go to state 611
    ">>"   shift, and go to state 612
    "++"   shift, and go to state 613
    "--"   shift, and go to state 614
    "<="   shift, and go to state 615
    ">="   shift, and go to state 616
    "=="   shift, and go to state 617
    "!="   shift, and go to state 618
    "->"   shift, and go to state 619
    "??"   shift, and go to state 620
    "?."   shift, and go to state 621
    "?["   shift, and go to state 622
    "<|"   shift, and go to state 623
    "|>"   shift, and go to state 624
    "<<<"  shift, and go to state 625
    ">>>"  shift, and go to state 626
    "&&"   shift, and go to state 627
    "||"   shift, and go to state 628
    "^^"   shift, and go to state 629
    '?'    shift, and go to state 631
    '|'    shift, and go to state 632
    '^'    shift, and go to state 633
    '&'    shift, and go to state 634
    '<'    shift, and go to state 635
    '>'    shift, and go to state 636
    '-'    shift, and go to state 637
    '+'    shift, and go to state 638
    '*'    shift, and go to state 639
    '/'    shift, and go to state 640
    '%'    shift, and go to state 641
    '.'    shift, and go to state 642
    '['    shift, and go to state 643

    ".."  error (nonassociative)

    $default  reduce using rule 302 (block_or_simple_block)


State 1332

  317 expr_full_block_assumed_piped: block_or_lambda optional_annotation_list optional_capture_list optional_function_argument_list optional_function_type expression_block .

    $default  reduce using rule 317 (expr_full_block_assumed_piped)


State 1333

  433 expr: expr "is" "type" '<' $@23 type_declaration_no_options '>' . $@24

    $default  reduce using rule 432 ($@24)

    $@24  go to state 1380


State 1334

  439 expr: expr "as" "type" '<' $@25 type_declaration '>' . $@26

    $default  reduce using rule 438 ($@26)

    $@26  go to state 1381


State 1335

  444 expr: expr '?' "as" "type" '<' $@27 type_declaration . '>' $@28
  712 type_declaration: type_declaration . '|' type_declaration_no_options
  713                 | type_declaration . '|' '#'

    '|'  shift, and go to state 375
    '>'  shift, and go to state 1382


State 1336

  471 expr_mtag: expr '?' "as" "$f" '(' expr ')' .

    $default  reduce using rule 471 (expr_mtag)


State 1337

  469 expr_mtag: expr '.' "?." "$f" '(' expr ')' .

    $default  reduce using rule 469 (expr_mtag)


State 1338

  468 expr_mtag: expr '.' '.' "$f" '(' expr ')' .

    $default  reduce using rule 468 (expr_mtag)


State 1339

  658 type_declaration_no_options_no_dim: '$' name_in_namespace '<' $@43 type_declaration_no_options_list '>' '(' optional_expr_list ')' .

    $default  reduce using rule 658 (type_declaration_no_options_no_dim)


State 1340

   71 expression_for_loop: "for" '(' variable_name_with_pos_list "in" expr_list ')' . expression_block

    $default  reduce using rule 216 ($@5)

    expression_block  go to state 1383
    $@5               go to state 327


State 1341

   58 expression_else: "else" . expression_block

    $default  reduce using rule 216 ($@5)

    expression_block  go to state 1384
    $@5               go to state 327


State 1342

   55 elif_or_static_elif: "elif" .

    $default  reduce using rule 55 (elif_or_static_elif)


State 1343

   56 elif_or_static_elif: "static_elif" .

    $default  reduce using rule 56 (elif_or_static_elif)


State 1344

   59 expression_else: elif_or_static_elif . '(' expr ')' expression_block expression_else

    '('  shift, and go to state 1385


State 1345

   69 expression_if_then_else: if_or_static_if '(' expr ')' expression_block expression_else .

    $default  reduce using rule 69 (expression_if_then_else)


State 1346

   63 expression_else_one_liner: "else" . expression_if_one_liner

    "struct"                          shift, and go to state 409
    "class"                           shift, and go to state 410
    "true"                            shift, and go to state 411
    "false"                           shift, and go to state 412
    "new"                             shift, and go to state 413
    "typeinfo"                        shift, and go to state 414
    "type"                            shift, and go to state 415
    "array"                           shift, and go to state 416
    "return"                          shift, and go to state 688
    "null"                            shift, and go to state 417
    "break"                           shift, and go to state 689
    "table"                           shift, and go to state 418
    "deref"                           shift, and go to state 419
    "cast"                            shift, and go to state 420
    "upcast"                          shift, and go to state 421
    "addr"                            shift, and go to state 422
    "continue"                        shift, and go to state 694
    "reinterpret"                     shift, and go to state 423
    "unsafe"                          shift, and go to state 424
    "fixed_array"                     shift, and go to state 425
    "default"                         shift, and go to state 426
    "bool"                            shift, and go to state 225
    "void"                            shift, and go to state 226
    "string"                          shift, and go to state 227
    "int"                             shift, and go to state 229
    "int2"                            shift, and go to state 230
    "int3"                            shift, and go to state 231
    "int4"                            shift, and go to state 232
    "uint"                            shift, and go to state 233
    "bitfield"                        shift, and go to state 427
    "uint2"                           shift, and go to state 235
    "uint3"                           shift, and go to state 236
    "uint4"                           shift, and go to state 237
    "float"                           shift, and go to state 238
    "float2"                          shift, and go to state 239
    "float3"                          shift, and go to state 240
    "float4"                          shift, and go to state 241
    "range"                           shift, and go to state 242
    "urange"                          shift, and go to state 243
    "range64"                         shift, and go to state 244
    "urange64"                        shift, and go to state 245
    "int64"                           shift, and go to state 247
    "uint64"                          shift, and go to state 248
    "double"                          shift, and go to state 249
    "int8"                            shift, and go to state 252
    "uint8"                           shift, and go to state 253
    "int16"                           shift, and go to state 254
    "uint16"                          shift, and go to state 255
    "tuple"                           shift, and go to state 428
    "variant"                         shift, and go to state 429
    "generator"                       shift, and go to state 430
    "yield"                           shift, and go to state 699
    "++"                              shift, and go to state 431
    "--"                              shift, and go to state 432
    "::"                              shift, and go to state 55
    "$$"                              shift, and go to state 433
    "$i"                              shift, and go to state 434
    "$v"                              shift, and go to state 435
    "$b"                              shift, and go to state 436
    "$a"                              shift, and go to state 437
    "$c"                              shift, and go to state 438
    "..."                             shift, and go to state 439
    "integer constant"                shift, and go to state 440
    "long integer constant"           shift, and go to state 441
    "unsigned integer constant"       shift, and go to state 442
    "unsigned long integer constant"  shift, and go to state 443
    "unsigned int8 constant"          shift, and go to state 444
    "floating point constant"         shift, and go to state 445
    "double constant"                 shift, and go to state 446
    "name"                            shift, and go to state 56
    "start of the string"             shift, and go to state 447
    "begin of code block"             shift, and go to state 448
    '-'                               shift, and go to state 449
    '+'                               shift, and go to state 450
    '*'                               shift, and go to state 451
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 452
    '!'                               shift, and go to state 453
    '['                               shift, and go to state 454
    '('                               shift, and go to state 455
    '$'                               shift, and go to state 456
    '@'                               shift, and go to state 457

    string_builder           go to state 458
    expr_reader              go to state 459
    expression_if_one_liner  go to state 1386
    expr_call_pipe           go to state 460
    name_in_namespace        go to state 461
    expr_new                 go to state 462
    expression_break         go to state 1387
    expression_continue      go to state 1388
    expression_return        go to state 1389
    expression_yield         go to state 1390
    expr_cast                go to state 463
    expr_type_decl           go to state 464
    expr_type_info           go to state 465
    block_or_lambda          go to state 466
    expr_full_block          go to state 467
    expr_numeric_const       go to state 468
    expr_named_call          go to state 469
    expr_method_call         go to state 470
    func_addr_expr           go to state 471
    expr_field               go to state 472
    expr_call                go to state 473
    expr                     go to state 1391
    expr_mtag                go to state 475
    basic_type_declaration   go to state 476
    make_decl                go to state 477
    make_struct_decl         go to state 478
    make_tuple_call          go to state 479
    make_dim_decl            go to state 480
    make_table_decl          go to state 481
    array_comprehension      go to state 482


State 1347

   70 expression_if_then_else: expression_if_one_liner "if" '(' expr ')' expression_else_one_liner . "end of expression"

    "end of expression"  shift, and go to state 1392


State 1348

  215 expression_block_finally: "finally" $@3 "begin of code block" expressions . $@4 "end of code block"
  239 expressions: expressions . expression_any
  240            | expressions . error

    error                             shift, and go to state 683
    "struct"                          shift, and go to state 409
    "class"                           shift, and go to state 410
    "let"                             shift, and go to state 3
    "while"                           shift, and go to state 684
    "if"                              shift, and go to state 685
    "static_if"                       shift, and go to state 686
    "for"                             shift, and go to state 687
    "true"                            shift, and go to state 411
    "false"                           shift, and go to state 412
    "new"                             shift, and go to state 413
    "typeinfo"                        shift, and go to state 414
    "type"                            shift, and go to state 415
    "array"                           shift, and go to state 416
    "return"                          shift, and go to state 688
    "null"                            shift, and go to state 417
    "break"                           shift, and go to state 689
    "try"                             shift, and go to state 690
    "table"                           shift, and go to state 418
    "delete"                          shift, and go to state 691
    "deref"                           shift, and go to state 419
    "with"                            shift, and go to state 692
    "assume"                          shift, and go to state 693
    "cast"                            shift, and go to state 420
    "upcast"                          shift, and go to state 421
    "var"                             shift, and go to state 8
    "addr"                            shift, and go to state 422
    "continue"                        shift, and go to state 694
    "pass"                            shift, and go to state 695
    "reinterpret"                     shift, and go to state 423
    "label"                           shift, and go to state 696
    "goto"                            shift, and go to state 697
    "unsafe"                          shift, and go to state 698
    "fixed_array"                     shift, and go to state 425
    "default"                         shift, and go to state 426
    "bool"                            shift, and go to state 225
    "void"                            shift, and go to state 226
    "string"                          shift, and go to state 227
    "int"                             shift, and go to state 229
    "int2"                            shift, and go to state 230
    "int3"                            shift, and go to state 231
    "int4"                            shift, and go to state 232
    "uint"                            shift, and go to state 233
    "bitfield"                        shift, and go to state 427
    "uint2"                           shift, and go to state 235
    "uint3"                           shift, and go to state 236
    "uint4"                           shift, and go to state 237
    "float"                           shift, and go to state 238
    "float2"                          shift, and go to state 239
    "float3"                          shift, and go to state 240
    "float4"                          shift, and go to state 241
    "range"                           shift, and go to state 242
    "urange"                          shift, and go to state 243
    "range64"                         shift, and go to state 244
    "urange64"                        shift, and go to state 245
    "int64"                           shift, and go to state 247
    "uint64"                          shift, and go to state 248
    "double"                          shift, and go to state 249
    "int8"                            shift, and go to state 252
    "uint8"                           shift, and go to state 253
    "int16"                           shift, and go to state 254
    "uint16"                          shift, and go to state 255
    "tuple"                           shift, and go to state 428
    "variant"                         shift, and go to state 429
    "generator"                       shift, and go to state 430
    "yield"                           shift, and go to state 699
    "++"                              shift, and go to state 431
    "--"                              shift, and go to state 432
    "::"                              shift, and go to state 55
    "$$"                              shift, and go to state 433
    "$i"                              shift, and go to state 434
    "$v"                              shift, and go to state 435
    "$b"                              shift, and go to state 436
    "$a"                              shift, and go to state 437
    "$c"                              shift, and go to state 438
    "..."                             shift, and go to state 439
    "integer constant"                shift, and go to state 440
    "long integer constant"           shift, and go to state 441
    "unsigned integer constant"       shift, and go to state 442
    "unsigned long integer constant"  shift, and go to state 443
    "unsigned int8 constant"          shift, and go to state 444
    "floating point constant"         shift, and go to state 445
    "double constant"                 shift, and go to state 446
    "name"                            shift, and go to state 56
    "start of the string"             shift, and go to state 447
    "begin of code block"             shift, and go to state 448
    "end of expression"               shift, and go to state 700
    '-'                               shift, and go to state 449
    '+'                               shift, and go to state 450
    '*'                               shift, and go to state 451
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 452
    '!'                               shift, and go to state 453
    '['                               shift, and go to state 454
    '('                               shift, and go to state 455
    '$'                               shift, and go to state 456
    '@'                               shift, and go to state 457

    "end of code block"  reduce using rule 214 ($@4)

    string_builder           go to state 458
    expr_reader              go to state 459
    expression_label         go to state 701
    expression_goto          go to state 702
    if_or_static_if          go to state 703
    expression_if_one_liner  go to state 704
    expression_if_then_else  go to state 705
    expression_for_loop      go to state 706
    expression_unsafe        go to state 707
    expression_while_loop    go to state 708
    expression_with          go to state 709
    expression_with_alias    go to state 710
    $@4                      go to state 1393
    expr_call_pipe           go to state 460
    expression_any           go to state 712
    name_in_namespace        go to state 461
    expression_delete        go to state 713
    expr_new                 go to state 462
    expression_break         go to state 714
    expression_continue      go to state 715
    expression_return        go to state 716
    expression_yield         go to state 717
    expression_try_catch     go to state 718
    kwd_let                  go to state 719
    expression_let           go to state 720
    expr_cast                go to state 463
    expr_type_decl           go to state 464
    expr_type_info           go to state 465
    block_or_lambda          go to state 466
    expr_full_block          go to state 467
    expr_numeric_const       go to state 468
    expr_assign              go to state 721
    expr_named_call          go to state 469
    expr_method_call         go to state 470
    func_addr_expr           go to state 471
    expr_field               go to state 472
    expr_call                go to state 473
    expr                     go to state 722
    expr_mtag                go to state 475
    basic_type_declaration   go to state 476
    make_decl                go to state 477
    make_struct_decl         go to state 478
    make_tuple_call          go to state 479
    make_dim_decl            go to state 480
    make_table_decl          go to state 481
    array_comprehension      go to state 482


State 1349

  278 tuple_expansion: tuple_expansion ',' "name" .

    $default  reduce using rule 278 (tuple_expansion)


State 1350

  279 tuple_expansion_variable_declaration: '(' tuple_expansion ')' ':' . type_declaration_no_options copy_or_move_or_clone expr "end of expression"

    "type"       shift, and go to state 219
    "array"      shift, and go to state 220
    "table"      shift, and go to state 221
    "typedecl"   shift, and go to state 222
    "iterator"   shift, and go to state 223
    "smart_ptr"  shift, and go to state 224
    "bool"       shift, and go to state 225
    "void"       shift, and go to state 226
    "string"     shift, and go to state 227
    "auto"       shift, and go to state 228
    "int"        shift, and go to state 229
    "int2"       shift, and go to state 230
    "int3"       shift, and go to state 231
    "int4"       shift, and go to state 232
    "uint"       shift, and go to state 233
    "bitfield"   shift, and go to state 234
    "uint2"      shift, and go to state 235
    "uint3"      shift, and go to state 236
    "uint4"      shift, and go to state 237
    "float"      shift, and go to state 238
    "float2"     shift, and go to state 239
    "float3"     shift, and go to state 240
    "float4"     shift, and go to state 241
    "range"      shift, and go to state 242
    "urange"     shift, and go to state 243
    "range64"    shift, and go to state 244
    "urange64"   shift, and go to state 245
    "block"      shift, and go to state 246
    "int64"      shift, and go to state 247
    "uint64"     shift, and go to state 248
    "double"     shift, and go to state 249
    "function"   shift, and go to state 250
    "lambda"     shift, and go to state 251
    "int8"       shift, and go to state 252
    "uint8"      shift, and go to state 253
    "int16"      shift, and go to state 254
    "uint16"     shift, and go to state 255
    "tuple"      shift, and go to state 256
    "variant"    shift, and go to state 257
    "::"         shift, and go to state 55
    "$t"         shift, and go to state 258
    "name"       shift, and go to state 56
    '$'          shift, and go to state 259

    name_in_namespace                   go to state 260
    basic_type_declaration              go to state 261
    structure_type_declaration          go to state 262
    auto_type_declaration               go to state 263
    bitfield_type_declaration           go to state 264
    type_declaration_no_options         go to state 1394
    type_declaration_no_options_no_dim  go to state 266


State 1351

  280 tuple_expansion_variable_declaration: '(' tuple_expansion ')' optional_ref . copy_or_move_or_clone expr "end of expression"

    "<-"  shift, and go to state 543
    ":="  shift, and go to state 544
    '='   shift, and go to state 545

    copy_or_move_or_clone  go to state 1395


State 1352

  491 struct_variable_declaration_list: struct_variable_declaration_list optional_annotation_list "def" optional_public_or_private_member_variable "abstract" optional_constant $@30 . function_declaration_header "end of expression"

    "operator"  shift, and go to state 174
    "bool"      shift, and go to state 175
    "string"    shift, and go to state 176
    "int"       shift, and go to state 177
    "int2"      shift, and go to state 178
    "int3"      shift, and go to state 179
    "int4"      shift, and go to state 180
    "uint"      shift, and go to state 181
    "uint2"     shift, and go to state 182
    "uint3"     shift, and go to state 183
    "uint4"     shift, and go to state 184
    "float"     shift, and go to state 185
    "float2"    shift, and go to state 186
    "float3"    shift, and go to state 187
    "float4"    shift, and go to state 188
    "range"     shift, and go to state 189
    "urange"    shift, and go to state 190
    "range64"   shift, and go to state 191
    "urange64"  shift, and go to state 192
    "int64"     shift, and go to state 193
    "uint64"    shift, and go to state 194
    "double"    shift, and go to state 195
    "int8"      shift, and go to state 196
    "uint8"     shift, and go to state 197
    "int16"     shift, and go to state 198
    "uint16"    shift, and go to state 199
    "++"        shift, and go to state 200
    "--"        shift, and go to state 201
    "name"      shift, and go to state 202

    function_name                go to state 203
    function_declaration_header  go to state 1396


State 1353

  493 struct_variable_declaration_list: struct_variable_declaration_list optional_annotation_list "def" optional_public_or_private_member_variable optional_static_member_variable optional_override optional_constant . $@31 function_declaration_header expression_block

    $default  reduce using rule 492 ($@31)

    $@31  go to state 1397


State 1354

  486 structure_variable_declaration: optional_field_annotation optional_static_member_variable optional_override optional_public_or_private_member_variable variable_declaration .

    $default  reduce using rule 486 (structure_variable_declaration)


State 1355

  751 make_struct_decl: "struct" '<' $@77 type_declaration_no_options '>' $@78 '(' use_initializer . optional_make_struct_dim_decl ')'

    "$f"    shift, and go to state 792
    "name"  shift, and go to state 1002
    '('     shift, and go to state 1398

    $default  reduce using rule 746 (optional_make_struct_dim_decl)

    make_struct_fields             go to state 1399
    make_struct_dim_list           go to state 1400
    make_struct_dim_decl           go to state 1401
    optional_make_struct_dim_decl  go to state 1402


State 1356

  754 make_struct_decl: "class" '<' $@79 type_declaration_no_options '>' $@80 '(' use_initializer . optional_make_struct_dim_decl ')'

    "$f"    shift, and go to state 792
    "name"  shift, and go to state 1002
    '('     shift, and go to state 1398

    $default  reduce using rule 746 (optional_make_struct_dim_decl)

    make_struct_fields             go to state 1399
    make_struct_dim_list           go to state 1400
    make_struct_dim_decl           go to state 1401
    optional_make_struct_dim_decl  go to state 1403


State 1357

  297 expr_type_info: "typeinfo" name_in_namespace '<' "name" '>' '(' expr ')' .

    $default  reduce using rule 297 (expr_type_info)


State 1358

  298 expr_type_info: "typeinfo" name_in_namespace '<' "name" c_or_s "name" '>' '(' . expr ')'

    "struct"                          shift, and go to state 409
    "class"                           shift, and go to state 410
    "true"                            shift, and go to state 411
    "false"                           shift, and go to state 412
    "new"                             shift, and go to state 413
    "typeinfo"                        shift, and go to state 414
    "type"                            shift, and go to state 415
    "array"                           shift, and go to state 416
    "null"                            shift, and go to state 417
    "table"                           shift, and go to state 418
    "deref"                           shift, and go to state 419
    "cast"                            shift, and go to state 420
    "upcast"                          shift, and go to state 421
    "addr"                            shift, and go to state 422
    "reinterpret"                     shift, and go to state 423
    "unsafe"                          shift, and go to state 424
    "fixed_array"                     shift, and go to state 425
    "default"                         shift, and go to state 426
    "bool"                            shift, and go to state 225
    "void"                            shift, and go to state 226
    "string"                          shift, and go to state 227
    "int"                             shift, and go to state 229
    "int2"                            shift, and go to state 230
    "int3"                            shift, and go to state 231
    "int4"                            shift, and go to state 232
    "uint"                            shift, and go to state 233
    "bitfield"                        shift, and go to state 427
    "uint2"                           shift, and go to state 235
    "uint3"                           shift, and go to state 236
    "uint4"                           shift, and go to state 237
    "float"                           shift, and go to state 238
    "float2"                          shift, and go to state 239
    "float3"                          shift, and go to state 240
    "float4"                          shift, and go to state 241
    "range"                           shift, and go to state 242
    "urange"                          shift, and go to state 243
    "range64"                         shift, and go to state 244
    "urange64"                        shift, and go to state 245
    "int64"                           shift, and go to state 247
    "uint64"                          shift, and go to state 248
    "double"                          shift, and go to state 249
    "int8"                            shift, and go to state 252
    "uint8"                           shift, and go to state 253
    "int16"                           shift, and go to state 254
    "uint16"                          shift, and go to state 255
    "tuple"                           shift, and go to state 428
    "variant"                         shift, and go to state 429
    "generator"                       shift, and go to state 430
    "++"                              shift, and go to state 431
    "--"                              shift, and go to state 432
    "::"                              shift, and go to state 55
    "$$"                              shift, and go to state 433
    "$i"                              shift, and go to state 434
    "$v"                              shift, and go to state 435
    "$b"                              shift, and go to state 436
    "$a"                              shift, and go to state 437
    "$c"                              shift, and go to state 438
    "..."                             shift, and go to state 439
    "integer constant"                shift, and go to state 440
    "long integer constant"           shift, and go to state 441
    "unsigned integer constant"       shift, and go to state 442
    "unsigned long integer constant"  shift, and go to state 443
    "unsigned int8 constant"          shift, and go to state 444
    "floating point constant"         shift, and go to state 445
    "double constant"                 shift, and go to state 446
    "name"                            shift, and go to state 56
    "start of the string"             shift, and go to state 447
    "begin of code block"             shift, and go to state 448
    '-'                               shift, and go to state 449
    '+'                               shift, and go to state 450
    '*'                               shift, and go to state 451
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 452
    '!'                               shift, and go to state 453
    '['                               shift, and go to state 454
    '('                               shift, and go to state 455
    '$'                               shift, and go to state 456
    '@'                               shift, and go to state 457

    string_builder          go to state 458
    expr_reader             go to state 459
    expr_call_pipe          go to state 460
    name_in_namespace       go to state 461
    expr_new                go to state 462
    expr_cast               go to state 463
    expr_type_decl          go to state 464
    expr_type_info          go to state 465
    block_or_lambda         go to state 466
    expr_full_block         go to state 467
    expr_numeric_const      go to state 468
    expr_named_call         go to state 469
    expr_method_call        go to state 470
    func_addr_expr          go to state 471
    expr_field              go to state 472
    expr_call               go to state 473
    expr                    go to state 1404
    expr_mtag               go to state 475
    basic_type_declaration  go to state 476
    make_decl               go to state 477
    make_struct_decl        go to state 478
    make_tuple_call         go to state 479
    make_dim_decl           go to state 480
    make_table_decl         go to state 481
    array_comprehension     go to state 482


State 1359

  770 make_dim_decl: "array" "struct" '<' $@87 type_declaration_no_options '>' $@88 '(' . use_initializer optional_make_struct_dim_decl ')'

    "uninitialized"  shift, and go to state 1310

    $default  reduce using rule 747 (use_initializer)

    use_initializer  go to state 1405


State 1360

  773 make_dim_decl: "array" "tuple" '<' $@89 type_declaration_no_options '>' $@90 '(' . use_initializer optional_make_struct_dim_decl ')'

    "uninitialized"  shift, and go to state 1310

    $default  reduce using rule 747 (use_initializer)

    use_initializer  go to state 1406


State 1361

  776 make_dim_decl: "array" "variant" '<' $@91 type_declaration_no_options '>' $@92 '(' . make_variant_dim ')'

    "$f"    shift, and go to state 792
    "name"  shift, and go to state 1002

    make_struct_fields  go to state 1366
    make_variant_dim    go to state 1407


State 1362

  780 make_dim_decl: "array" '<' $@93 type_declaration_no_options '>' $@94 '(' optional_expr_list . ')'

    ')'  shift, and go to state 1408


State 1363

  790 make_table_decl: "table" '<' type_declaration_no_options c_or_s type_declaration_no_options '>' '(' optional_expr_map_tuple_list . ')'

    ')'  shift, and go to state 1409


State 1364

  300 expr_list: expr_list . ',' expr
  784 make_dim_decl: "fixed_array" '<' $@95 type_declaration_no_options '>' $@96 '(' expr_list . optional_comma ')'

    ','  shift, and go to state 783

    $default  reduce using rule 793 (optional_comma)

    optional_comma  go to state 1410


State 1365

  766 make_tuple_call: "tuple" '<' $@85 type_declaration_no_options '>' $@86 '(' use_initializer . optional_make_struct_dim_decl ')'

    "$f"    shift, and go to state 792
    "name"  shift, and go to state 1002
    '('     shift, and go to state 1398

    $default  reduce using rule 746 (optional_make_struct_dim_decl)

    make_struct_fields             go to state 1399
    make_struct_dim_list           go to state 1400
    make_struct_dim_decl           go to state 1401
    optional_make_struct_dim_decl  go to state 1411


State 1366

  733 make_struct_fields: make_struct_fields . ',' "name" copy_or_move expr
  734                   | make_struct_fields . ',' "name" ":=" expr
  737                   | make_struct_fields . ',' "$f" '(' expr ')' copy_or_move expr
  738                   | make_struct_fields . ',' "$f" '(' expr ')' ":=" expr
  739 make_variant_dim: make_struct_fields .

    ','  shift, and go to state 1011

    $default  reduce using rule 739 (make_variant_dim)


State 1367

  757 make_struct_decl: "variant" '<' $@81 type_declaration_no_options '>' $@82 '(' make_variant_dim . ')'

    ')'  shift, and go to state 1412


State 1368

  427 expr: "generator" '<' type_declaration_no_options '>' optional_capture_list '(' expr ')' .

    $default  reduce using rule 427 (expr)


State 1369

  797 array_comprehension: "begin of code block" "for" '(' variable_name_with_pos_list "in" expr_list ')' "end of expression" . make_map_tuple array_comprehension_where "end of code block"

    "struct"                          shift, and go to state 409
    "class"                           shift, and go to state 410
    "true"                            shift, and go to state 411
    "false"                           shift, and go to state 412
    "new"                             shift, and go to state 413
    "typeinfo"                        shift, and go to state 414
    "type"                            shift, and go to state 415
    "array"                           shift, and go to state 416
    "null"                            shift, and go to state 417
    "table"                           shift, and go to state 418
    "deref"                           shift, and go to state 419
    "cast"                            shift, and go to state 420
    "upcast"                          shift, and go to state 421
    "addr"                            shift, and go to state 422
    "reinterpret"                     shift, and go to state 423
    "unsafe"                          shift, and go to state 424
    "fixed_array"                     shift, and go to state 425
    "default"                         shift, and go to state 426
    "bool"                            shift, and go to state 225
    "void"                            shift, and go to state 226
    "string"                          shift, and go to state 227
    "int"                             shift, and go to state 229
    "int2"                            shift, and go to state 230
    "int3"                            shift, and go to state 231
    "int4"                            shift, and go to state 232
    "uint"                            shift, and go to state 233
    "bitfield"                        shift, and go to state 427
    "uint2"                           shift, and go to state 235
    "uint3"                           shift, and go to state 236
    "uint4"                           shift, and go to state 237
    "float"                           shift, and go to state 238
    "float2"                          shift, and go to state 239
    "float3"                          shift, and go to state 240
    "float4"                          shift, and go to state 241
    "range"                           shift, and go to state 242
    "urange"                          shift, and go to state 243
    "range64"                         shift, and go to state 244
    "urange64"                        shift, and go to state 245
    "int64"                           shift, and go to state 247
    "uint64"                          shift, and go to state 248
    "double"                          shift, and go to state 249
    "int8"                            shift, and go to state 252
    "uint8"                           shift, and go to state 253
    "int16"                           shift, and go to state 254
    "uint16"                          shift, and go to state 255
    "tuple"                           shift, and go to state 428
    "variant"                         shift, and go to state 429
    "generator"                       shift, and go to state 430
    "++"                              shift, and go to state 431
    "--"                              shift, and go to state 432
    "::"                              shift, and go to state 55
    "$$"                              shift, and go to state 433
    "$i"                              shift, and go to state 434
    "$v"                              shift, and go to state 435
    "$b"                              shift, and go to state 436
    "$a"                              shift, and go to state 437
    "$c"                              shift, and go to state 438
    "..."                             shift, and go to state 439
    "integer constant"                shift, and go to state 440
    "long integer constant"           shift, and go to state 441
    "unsigned integer constant"       shift, and go to state 442
    "unsigned long integer constant"  shift, and go to state 443
    "unsigned int8 constant"          shift, and go to state 444
    "floating point constant"         shift, and go to state 445
    "double constant"                 shift, and go to state 446
    "name"                            shift, and go to state 56
    "start of the string"             shift, and go to state 447
    "begin of code block"             shift, and go to state 448
    '-'                               shift, and go to state 449
    '+'                               shift, and go to state 450
    '*'                               shift, and go to state 451
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 452
    '!'                               shift, and go to state 453
    '['                               shift, and go to state 454
    '('                               shift, and go to state 455
    '$'                               shift, and go to state 456
    '@'                               shift, and go to state 457

    string_builder          go to state 458
    expr_reader             go to state 459
    expr_call_pipe          go to state 460
    name_in_namespace       go to state 461
    expr_new                go to state 462
    expr_cast               go to state 463
    expr_type_decl          go to state 464
    expr_type_info          go to state 465
    block_or_lambda         go to state 466
    expr_full_block         go to state 467
    expr_numeric_const      go to state 468
    expr_named_call         go to state 469
    expr_method_call        go to state 470
    func_addr_expr          go to state 471
    expr_field              go to state 472
    expr_call               go to state 473
    expr                    go to state 589
    expr_mtag               go to state 475
    basic_type_declaration  go to state 476
    make_decl               go to state 477
    make_struct_decl        go to state 478
    make_map_tuple          go to state 1413
    make_tuple_call         go to state 479
    make_dim_decl           go to state 480
    make_table_decl         go to state 481
    array_comprehension     go to state 482


State 1370

  795 array_comprehension: '[' "for" '(' variable_name_with_pos_list "in" expr_list ')' "end of expression" . expr array_comprehension_where ']'

    "struct"                          shift, and go to state 409
    "class"                           shift, and go to state 410
    "true"                            shift, and go to state 411
    "false"                           shift, and go to state 412
    "new"                             shift, and go to state 413
    "typeinfo"                        shift, and go to state 414
    "type"                            shift, and go to state 415
    "array"                           shift, and go to state 416
    "null"                            shift, and go to state 417
    "table"                           shift, and go to state 418
    "deref"                           shift, and go to state 419
    "cast"                            shift, and go to state 420
    "upcast"                          shift, and go to state 421
    "addr"                            shift, and go to state 422
    "reinterpret"                     shift, and go to state 423
    "unsafe"                          shift, and go to state 424
    "fixed_array"                     shift, and go to state 425
    "default"                         shift, and go to state 426
    "bool"                            shift, and go to state 225
    "void"                            shift, and go to state 226
    "string"                          shift, and go to state 227
    "int"                             shift, and go to state 229
    "int2"                            shift, and go to state 230
    "int3"                            shift, and go to state 231
    "int4"                            shift, and go to state 232
    "uint"                            shift, and go to state 233
    "bitfield"                        shift, and go to state 427
    "uint2"                           shift, and go to state 235
    "uint3"                           shift, and go to state 236
    "uint4"                           shift, and go to state 237
    "float"                           shift, and go to state 238
    "float2"                          shift, and go to state 239
    "float3"                          shift, and go to state 240
    "float4"                          shift, and go to state 241
    "range"                           shift, and go to state 242
    "urange"                          shift, and go to state 243
    "range64"                         shift, and go to state 244
    "urange64"                        shift, and go to state 245
    "int64"                           shift, and go to state 247
    "uint64"                          shift, and go to state 248
    "double"                          shift, and go to state 249
    "int8"                            shift, and go to state 252
    "uint8"                           shift, and go to state 253
    "int16"                           shift, and go to state 254
    "uint16"                          shift, and go to state 255
    "tuple"                           shift, and go to state 428
    "variant"                         shift, and go to state 429
    "generator"                       shift, and go to state 430
    "++"                              shift, and go to state 431
    "--"                              shift, and go to state 432
    "::"                              shift, and go to state 55
    "$$"                              shift, and go to state 433
    "$i"                              shift, and go to state 434
    "$v"                              shift, and go to state 435
    "$b"                              shift, and go to state 436
    "$a"                              shift, and go to state 437
    "$c"                              shift, and go to state 438
    "..."                             shift, and go to state 439
    "integer constant"                shift, and go to state 440
    "long integer constant"           shift, and go to state 441
    "unsigned integer constant"       shift, and go to state 442
    "unsigned long integer constant"  shift, and go to state 443
    "unsigned int8 constant"          shift, and go to state 444
    "floating point constant"         shift, and go to state 445
    "double constant"                 shift, and go to state 446
    "name"                            shift, and go to state 56
    "start of the string"             shift, and go to state 447
    "begin of code block"             shift, and go to state 448
    '-'                               shift, and go to state 449
    '+'                               shift, and go to state 450
    '*'                               shift, and go to state 451
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 452
    '!'                               shift, and go to state 453
    '['                               shift, and go to state 454
    '('                               shift, and go to state 455
    '$'                               shift, and go to state 456
    '@'                               shift, and go to state 457

    string_builder          go to state 458
    expr_reader             go to state 459
    expr_call_pipe          go to state 460
    name_in_namespace       go to state 461
    expr_new                go to state 462
    expr_cast               go to state 463
    expr_type_decl          go to state 464
    expr_type_info          go to state 465
    block_or_lambda         go to state 466
    expr_full_block         go to state 467
    expr_numeric_const      go to state 468
    expr_named_call         go to state 469
    expr_method_call        go to state 470
    func_addr_expr          go to state 471
    expr_field              go to state 472
    expr_call               go to state 473
    expr                    go to state 1414
    expr_mtag               go to state 475
    basic_type_declaration  go to state 476
    make_decl               go to state 477
    make_struct_decl        go to state 478
    make_tuple_call         go to state 479
    make_dim_decl           go to state 480
    make_table_decl         go to state 481
    array_comprehension     go to state 482


State 1371

  796 array_comprehension: '[' "iterator" "for" '(' variable_name_with_pos_list "in" expr_list ')' . "end of expression" expr array_comprehension_where ']'

    "end of expression"  shift, and go to state 1415


State 1372

  354 func_addr_expr: '@' '@' '<' $@17 type_declaration_no_options '>' $@18 func_addr_name .

    $default  reduce using rule 354 (func_addr_expr)


State 1373

  357 func_addr_expr: '@' '@' '<' $@19 optional_function_argument_list optional_function_type '>' $@20 . func_addr_name

    "::"    shift, and go to state 55
    "$i"    shift, and go to state 786
    "name"  shift, and go to state 56

    name_in_namespace  go to state 789
    func_addr_name     go to state 1416


State 1374

  347 expr_method_call: expr . "->" "name" '(' ')'
  348                 | expr . "->" "name" '(' expr_list ')'
  358 expr_field: expr . '.' "name"
  359           | expr . '.' '.' "name"
  360           | expr . '.' "name" '(' ')'
  361           | expr . '.' "name" '(' expr_list ')'
  362           | expr . '.' basic_type_declaration '(' ')'
  363           | expr . '.' basic_type_declaration '(' expr_list ')'
  366           | expr . '.' $@21 error $@22
  388 expr: expr . "<<" expr
  389     | expr . ">>" expr
  390     | expr . "<<<" expr
  391     | expr . ">>>" expr
  392     | expr . '+' expr
  393     | expr . '-' expr
  394     | expr . '*' expr
  395     | expr . '/' expr
  396     | expr . '%' expr
  397     | expr . '<' expr
  398     | expr . '>' expr
  399     | expr . "==" expr
  400     | expr . "!=" expr
  401     | expr . "<=" expr
  402     | expr . ">=" expr
  403     | expr . '&' expr
  404     | expr . '|' expr
  405     | expr . '^' expr
  406     | expr . "&&" expr
  407     | expr . "||" expr
  408     | expr . "^^" expr
  409     | expr . ".." expr
  412     | expr . "++"
  413     | expr . "--"
  415     | expr . '[' expr ']'
  416     | expr . '.' '[' expr ']'
  417     | expr . "?[" expr ']'
  418     | expr . '.' "?[" expr ']'
  419     | expr . "?." "name"
  420     | expr . '.' "?." "name"
  429     | expr . "??" expr
  430     | expr . '?' expr ':' expr
  433     | expr . "is" "type" '<' $@23 type_declaration_no_options '>' $@24
  434     | expr . "is" basic_type_declaration
  435     | expr . "is" "name"
  436     | expr . "as" "name"
  439     | expr . "as" "type" '<' $@25 type_declaration '>' $@26
  440     | expr . "as" basic_type_declaration
  441     | expr . '?' "as" "name"
  444     | expr . '?' "as" "type" '<' $@27 type_declaration '>' $@28
  445     | expr . '?' "as" basic_type_declaration
  453     | expr . "<|" expr
  454     | expr . "|>" expr
  455     | expr . "|>" basic_type_declaration
  466 expr_mtag: expr . '.' "$f" '(' expr ')'
  467          | expr . "?." "$f" '(' expr ')'
  468          | expr . '.' '.' "$f" '(' expr ')'
  469          | expr . '.' "?." "$f" '(' expr ')'
  470          | expr . "as" "$f" '(' expr ')'
  471          | expr . '?' "as" "$f" '(' expr ')'
  472          | expr . "is" "$f" '(' expr ')'
  736 make_struct_fields: "$f" '(' expr ')' ":=" expr .

    "is"   shift, and go to state 609
    "as"   shift, and go to state 610
    "<<"   shift, and go to state 611
    ">>"   shift, and go to state 612
    "++"   shift, and go to state 613
    "--"   shift, and go to state 614
    "<="   shift, and go to state 615
    ">="   shift, and go to state 616
    "=="   shift, and go to state 617
    "!="   shift, and go to state 618
    "->"   shift, and go to state 619
    "??"   shift, and go to state 620
    "?."   shift, and go to state 621
    "?["   shift, and go to state 622
    "<|"   shift, and go to state 623
    "|>"   shift, and go to state 624
    "<<<"  shift, and go to state 625
    ">>>"  shift, and go to state 626
    "&&"   shift, and go to state 627
    "||"   shift, and go to state 628
    "^^"   shift, and go to state 629
    ".."   shift, and go to state 630
    '?'    shift, and go to state 631
    '|'    shift, and go to state 632
    '^'    shift, and go to state 633
    '&'    shift, and go to state 634
    '<'    shift, and go to state 635
    '>'    shift, and go to state 636
    '-'    shift, and go to state 637
    '+'    shift, and go to state 638
    '*'    shift, and go to state 639
    '/'    shift, and go to state 640
    '%'    shift, and go to state 641
    '.'    shift, and go to state 642
    '['    shift, and go to state 643

    $default  reduce using rule 736 (make_struct_fields)


State 1375

  347 expr_method_call: expr . "->" "name" '(' ')'
  348                 | expr . "->" "name" '(' expr_list ')'
  358 expr_field: expr . '.' "name"
  359           | expr . '.' '.' "name"
  360           | expr . '.' "name" '(' ')'
  361           | expr . '.' "name" '(' expr_list ')'
  362           | expr . '.' basic_type_declaration '(' ')'
  363           | expr . '.' basic_type_declaration '(' expr_list ')'
  366           | expr . '.' $@21 error $@22
  388 expr: expr . "<<" expr
  389     | expr . ">>" expr
  390     | expr . "<<<" expr
  391     | expr . ">>>" expr
  392     | expr . '+' expr
  393     | expr . '-' expr
  394     | expr . '*' expr
  395     | expr . '/' expr
  396     | expr . '%' expr
  397     | expr . '<' expr
  398     | expr . '>' expr
  399     | expr . "==" expr
  400     | expr . "!=" expr
  401     | expr . "<=" expr
  402     | expr . ">=" expr
  403     | expr . '&' expr
  404     | expr . '|' expr
  405     | expr . '^' expr
  406     | expr . "&&" expr
  407     | expr . "||" expr
  408     | expr . "^^" expr
  409     | expr . ".." expr
  412     | expr . "++"
  413     | expr . "--"
  415     | expr . '[' expr ']'
  416     | expr . '.' '[' expr ']'
  417     | expr . "?[" expr ']'
  418     | expr . '.' "?[" expr ']'
  419     | expr . "?." "name"
  420     | expr . '.' "?." "name"
  429     | expr . "??" expr
  430     | expr . '?' expr ':' expr
  433     | expr . "is" "type" '<' $@23 type_declaration_no_options '>' $@24
  434     | expr . "is" basic_type_declaration
  435     | expr . "is" "name"
  436     | expr . "as" "name"
  439     | expr . "as" "type" '<' $@25 type_declaration '>' $@26
  440     | expr . "as" basic_type_declaration
  441     | expr . '?' "as" "name"
  444     | expr . '?' "as" "type" '<' $@27 type_declaration '>' $@28
  445     | expr . '?' "as" basic_type_declaration
  453     | expr . "<|" expr
  454     | expr . "|>" expr
  455     | expr . "|>" basic_type_declaration
  466 expr_mtag: expr . '.' "$f" '(' expr ')'
  467          | expr . "?." "$f" '(' expr ')'
  468          | expr . '.' '.' "$f" '(' expr ')'
  469          | expr . '.' "?." "$f" '(' expr ')'
  470          | expr . "as" "$f" '(' expr ')'
  471          | expr . '?' "as" "$f" '(' expr ')'
  472          | expr . "is" "$f" '(' expr ')'
  735 make_struct_fields: "$f" '(' expr ')' copy_or_move expr .

    "is"   shift, and go to state 609
    "as"   shift, and go to state 610
    "<<"   shift, and go to state 611
    ">>"   shift, and go to state 612
    "++"   shift, and go to state 613
    "--"   shift, and go to state 614
    "<="   shift, and go to state 615
    ">="   shift, and go to state 616
    "=="   shift, and go to state 617
    "!="   shift, and go to state 618
    "->"   shift, and go to state 619
    "??"   shift, and go to state 620
    "?."   shift, and go to state 621
    "?["   shift, and go to state 622
    "<|"   shift, and go to state 623
    "|>"   shift, and go to state 624
    "<<<"  shift, and go to state 625
    ">>>"  shift, and go to state 626
    "&&"   shift, and go to state 627
    "||"   shift, and go to state 628
    "^^"   shift, and go to state 629
    ".."   shift, and go to state 630
    '?'    shift, and go to state 631
    '|'    shift, and go to state 632
    '^'    shift, and go to state 633
    '&'    shift, and go to state 634
    '<'    shift, and go to state 635
    '>'    shift, and go to state 636
    '-'    shift, and go to state 637
    '+'    shift, and go to state 638
    '*'    shift, and go to state 639
    '/'    shift, and go to state 640
    '%'    shift, and go to state 641
    '.'    shift, and go to state 642
    '['    shift, and go to state 643

    $default  reduce using rule 735 (make_struct_fields)


State 1376

  346 expr_named_call: name_in_namespace '(' expr_list ',' '[' make_struct_fields ']' ')' .

    $default  reduce using rule 346 (expr_named_call)


State 1377

  737 make_struct_fields: make_struct_fields ',' "$f" '(' expr ')' . copy_or_move expr
  738                   | make_struct_fields ',' "$f" '(' expr ')' . ":=" expr

    "<-"  shift, and go to state 880
    ":="  shift, and go to state 1417
    '='   shift, and go to state 882

    copy_or_move  go to state 1418


State 1378

  311 capture_entry: "name" '(' "name" ')' .

    $default  reduce using rule 311 (capture_entry)


State 1379

  303 block_or_simple_block: "=>" "<-" expr .
  347 expr_method_call: expr . "->" "name" '(' ')'
  348                 | expr . "->" "name" '(' expr_list ')'
  358 expr_field: expr . '.' "name"
  359           | expr . '.' '.' "name"
  360           | expr . '.' "name" '(' ')'
  361           | expr . '.' "name" '(' expr_list ')'
  362           | expr . '.' basic_type_declaration '(' ')'
  363           | expr . '.' basic_type_declaration '(' expr_list ')'
  366           | expr . '.' $@21 error $@22
  388 expr: expr . "<<" expr
  389     | expr . ">>" expr
  390     | expr . "<<<" expr
  391     | expr . ">>>" expr
  392     | expr . '+' expr
  393     | expr . '-' expr
  394     | expr . '*' expr
  395     | expr . '/' expr
  396     | expr . '%' expr
  397     | expr . '<' expr
  398     | expr . '>' expr
  399     | expr . "==" expr
  400     | expr . "!=" expr
  401     | expr . "<=" expr
  402     | expr . ">=" expr
  403     | expr . '&' expr
  404     | expr . '|' expr
  405     | expr . '^' expr
  406     | expr . "&&" expr
  407     | expr . "||" expr
  408     | expr . "^^" expr
  409     | expr . ".." expr
  412     | expr . "++"
  413     | expr . "--"
  415     | expr . '[' expr ']'
  416     | expr . '.' '[' expr ']'
  417     | expr . "?[" expr ']'
  418     | expr . '.' "?[" expr ']'
  419     | expr . "?." "name"
  420     | expr . '.' "?." "name"
  429     | expr . "??" expr
  430     | expr . '?' expr ':' expr
  433     | expr . "is" "type" '<' $@23 type_declaration_no_options '>' $@24
  434     | expr . "is" basic_type_declaration
  435     | expr . "is" "name"
  436     | expr . "as" "name"
  439     | expr . "as" "type" '<' $@25 type_declaration '>' $@26
  440     | expr . "as" basic_type_declaration
  441     | expr . '?' "as" "name"
  444     | expr . '?' "as" "type" '<' $@27 type_declaration '>' $@28
  445     | expr . '?' "as" basic_type_declaration
  453     | expr . "<|" expr
  454     | expr . "|>" expr
  455     | expr . "|>" basic_type_declaration
  466 expr_mtag: expr . '.' "$f" '(' expr ')'
  467          | expr . "?." "$f" '(' expr ')'
  468          | expr . '.' '.' "$f" '(' expr ')'
  469          | expr . '.' "?." "$f" '(' expr ')'
  470          | expr . "as" "$f" '(' expr ')'
  471          | expr . '?' "as" "$f" '(' expr ')'
  472          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 609
    "as"   shift, and go to state 610
    "<<"   shift, and go to state 611
    ">>"   shift, and go to state 612
    "++"   shift, and go to state 613
    "--"   shift, and go to state 614
    "<="   shift, and go to state 615
    ">="   shift, and go to state 616
    "=="   shift, and go to state 617
    "!="   shift, and go to state 618
    "->"   shift, and go to state 619
    "??"   shift, and go to state 620
    "?."   shift, and go to state 621
    "?["   shift, and go to state 622
    "<|"   shift, and go to state 623
    "|>"   shift, and go to state 624
    "<<<"  shift, and go to state 625
    ">>>"  shift, and go to state 626
    "&&"   shift, and go to state 627
    "||"   shift, and go to state 628
    "^^"   shift, and go to state 629
    '?'    shift, and go to state 631
    '|'    shift, and go to state 632
    '^'    shift, and go to state 633
    '&'    shift, and go to state 634
    '<'    shift, and go to state 635
    '>'    shift, and go to state 636
    '-'    shift, and go to state 637
    '+'    shift, and go to state 638
    '*'    shift, and go to state 639
    '/'    shift, and go to state 640
    '%'    shift, and go to state 641
    '.'    shift, and go to state 642
    '['    shift, and go to state 643

    $default  reduce using rule 303 (block_or_simple_block)


State 1380

  433 expr: expr "is" "type" '<' $@23 type_declaration_no_options '>' $@24 .

    $default  reduce using rule 433 (expr)


State 1381

  439 expr: expr "as" "type" '<' $@25 type_declaration '>' $@26 .

    $default  reduce using rule 439 (expr)


State 1382

  444 expr: expr '?' "as" "type" '<' $@27 type_declaration '>' . $@28

    $default  reduce using rule 443 ($@28)

    $@28  go to state 1419


State 1383

   71 expression_for_loop: "for" '(' variable_name_with_pos_list "in" expr_list ')' expression_block .

    $default  reduce using rule 71 (expression_for_loop)


State 1384

   58 expression_else: "else" expression_block .

    $default  reduce using rule 58 (expression_else)


State 1385

   59 expression_else: elif_or_static_elif '(' . expr ')' expression_block expression_else

    "struct"                          shift, and go to state 409
    "class"                           shift, and go to state 410
    "true"                            shift, and go to state 411
    "false"                           shift, and go to state 412
    "new"                             shift, and go to state 413
    "typeinfo"                        shift, and go to state 414
    "type"                            shift, and go to state 415
    "array"                           shift, and go to state 416
    "null"                            shift, and go to state 417
    "table"                           shift, and go to state 418
    "deref"                           shift, and go to state 419
    "cast"                            shift, and go to state 420
    "upcast"                          shift, and go to state 421
    "addr"                            shift, and go to state 422
    "reinterpret"                     shift, and go to state 423
    "unsafe"                          shift, and go to state 424
    "fixed_array"                     shift, and go to state 425
    "default"                         shift, and go to state 426
    "bool"                            shift, and go to state 225
    "void"                            shift, and go to state 226
    "string"                          shift, and go to state 227
    "int"                             shift, and go to state 229
    "int2"                            shift, and go to state 230
    "int3"                            shift, and go to state 231
    "int4"                            shift, and go to state 232
    "uint"                            shift, and go to state 233
    "bitfield"                        shift, and go to state 427
    "uint2"                           shift, and go to state 235
    "uint3"                           shift, and go to state 236
    "uint4"                           shift, and go to state 237
    "float"                           shift, and go to state 238
    "float2"                          shift, and go to state 239
    "float3"                          shift, and go to state 240
    "float4"                          shift, and go to state 241
    "range"                           shift, and go to state 242
    "urange"                          shift, and go to state 243
    "range64"                         shift, and go to state 244
    "urange64"                        shift, and go to state 245
    "int64"                           shift, and go to state 247
    "uint64"                          shift, and go to state 248
    "double"                          shift, and go to state 249
    "int8"                            shift, and go to state 252
    "uint8"                           shift, and go to state 253
    "int16"                           shift, and go to state 254
    "uint16"                          shift, and go to state 255
    "tuple"                           shift, and go to state 428
    "variant"                         shift, and go to state 429
    "generator"                       shift, and go to state 430
    "++"                              shift, and go to state 431
    "--"                              shift, and go to state 432
    "::"                              shift, and go to state 55
    "$$"                              shift, and go to state 433
    "$i"                              shift, and go to state 434
    "$v"                              shift, and go to state 435
    "$b"                              shift, and go to state 436
    "$a"                              shift, and go to state 437
    "$c"                              shift, and go to state 438
    "..."                             shift, and go to state 439
    "integer constant"                shift, and go to state 440
    "long integer constant"           shift, and go to state 441
    "unsigned integer constant"       shift, and go to state 442
    "unsigned long integer constant"  shift, and go to state 443
    "unsigned int8 constant"          shift, and go to state 444
    "floating point constant"         shift, and go to state 445
    "double constant"                 shift, and go to state 446
    "name"                            shift, and go to state 56
    "start of the string"             shift, and go to state 447
    "begin of code block"             shift, and go to state 448
    '-'                               shift, and go to state 449
    '+'                               shift, and go to state 450
    '*'                               shift, and go to state 451
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 452
    '!'                               shift, and go to state 453
    '['                               shift, and go to state 454
    '('                               shift, and go to state 455
    '$'                               shift, and go to state 456
    '@'                               shift, and go to state 457

    string_builder          go to state 458
    expr_reader             go to state 459
    expr_call_pipe          go to state 460
    name_in_namespace       go to state 461
    expr_new                go to state 462
    expr_cast               go to state 463
    expr_type_decl          go to state 464
    expr_type_info          go to state 465
    block_or_lambda         go to state 466
    expr_full_block         go to state 467
    expr_numeric_const      go to state 468
    expr_named_call         go to state 469
    expr_method_call        go to state 470
    func_addr_expr          go to state 471
    expr_field              go to state 472
    expr_call               go to state 473
    expr                    go to state 1420
    expr_mtag               go to state 475
    basic_type_declaration  go to state 476
    make_decl               go to state 477
    make_struct_decl        go to state 478
    make_tuple_call         go to state 479
    make_dim_decl           go to state 480
    make_table_decl         go to state 481
    array_comprehension     go to state 482


State 1386

   63 expression_else_one_liner: "else" expression_if_one_liner .

    $default  reduce using rule 63 (expression_else_one_liner)


State 1387

   67 expression_if_one_liner: expression_break .

    $default  reduce using rule 67 (expression_if_one_liner)


State 1388

   68 expression_if_one_liner: expression_continue .

    $default  reduce using rule 68 (expression_if_one_liner)


State 1389

   65 expression_if_one_liner: expression_return .

    $default  reduce using rule 65 (expression_if_one_liner)


State 1390

   66 expression_if_one_liner: expression_yield .

    $default  reduce using rule 66 (expression_if_one_liner)


State 1391

   64 expression_if_one_liner: expr .
  347 expr_method_call: expr . "->" "name" '(' ')'
  348                 | expr . "->" "name" '(' expr_list ')'
  358 expr_field: expr . '.' "name"
  359           | expr . '.' '.' "name"
  360           | expr . '.' "name" '(' ')'
  361           | expr . '.' "name" '(' expr_list ')'
  362           | expr . '.' basic_type_declaration '(' ')'
  363           | expr . '.' basic_type_declaration '(' expr_list ')'
  366           | expr . '.' $@21 error $@22
  388 expr: expr . "<<" expr
  389     | expr . ">>" expr
  390     | expr . "<<<" expr
  391     | expr . ">>>" expr
  392     | expr . '+' expr
  393     | expr . '-' expr
  394     | expr . '*' expr
  395     | expr . '/' expr
  396     | expr . '%' expr
  397     | expr . '<' expr
  398     | expr . '>' expr
  399     | expr . "==" expr
  400     | expr . "!=" expr
  401     | expr . "<=" expr
  402     | expr . ">=" expr
  403     | expr . '&' expr
  404     | expr . '|' expr
  405     | expr . '^' expr
  406     | expr . "&&" expr
  407     | expr . "||" expr
  408     | expr . "^^" expr
  409     | expr . ".." expr
  412     | expr . "++"
  413     | expr . "--"
  415     | expr . '[' expr ']'
  416     | expr . '.' '[' expr ']'
  417     | expr . "?[" expr ']'
  418     | expr . '.' "?[" expr ']'
  419     | expr . "?." "name"
  420     | expr . '.' "?." "name"
  429     | expr . "??" expr
  430     | expr . '?' expr ':' expr
  433     | expr . "is" "type" '<' $@23 type_declaration_no_options '>' $@24
  434     | expr . "is" basic_type_declaration
  435     | expr . "is" "name"
  436     | expr . "as" "name"
  439     | expr . "as" "type" '<' $@25 type_declaration '>' $@26
  440     | expr . "as" basic_type_declaration
  441     | expr . '?' "as" "name"
  444     | expr . '?' "as" "type" '<' $@27 type_declaration '>' $@28
  445     | expr . '?' "as" basic_type_declaration
  453     | expr . "<|" expr
  454     | expr . "|>" expr
  455     | expr . "|>" basic_type_declaration
  466 expr_mtag: expr . '.' "$f" '(' expr ')'
  467          | expr . "?." "$f" '(' expr ')'
  468          | expr . '.' '.' "$f" '(' expr ')'
  469          | expr . '.' "?." "$f" '(' expr ')'
  470          | expr . "as" "$f" '(' expr ')'
  471          | expr . '?' "as" "$f" '(' expr ')'
  472          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 609
    "as"   shift, and go to state 610
    "<<"   shift, and go to state 611
    ">>"   shift, and go to state 612
    "++"   shift, and go to state 613
    "--"   shift, and go to state 614
    "<="   shift, and go to state 615
    ">="   shift, and go to state 616
    "=="   shift, and go to state 617
    "!="   shift, and go to state 618
    "->"   shift, and go to state 619
    "??"   shift, and go to state 620
    "?."   shift, and go to state 621
    "?["   shift, and go to state 622
    "<|"   shift, and go to state 623
    "|>"   shift, and go to state 624
    "<<<"  shift, and go to state 625
    ">>>"  shift, and go to state 626
    "&&"   shift, and go to state 627
    "||"   shift, and go to state 628
    "^^"   shift, and go to state 629
    ".."   shift, and go to state 630
    '?'    shift, and go to state 631
    '|'    shift, and go to state 632
    '^'    shift, and go to state 633
    '&'    shift, and go to state 634
    '<'    shift, and go to state 635
    '>'    shift, and go to state 636
    '-'    shift, and go to state 637
    '+'    shift, and go to state 638
    '*'    shift, and go to state 639
    '/'    shift, and go to state 640
    '%'    shift, and go to state 641
    '.'    shift, and go to state 642
    '['    shift, and go to state 643

    $default  reduce using rule 64 (expression_if_one_liner)


State 1392

   70 expression_if_then_else: expression_if_one_liner "if" '(' expr ')' expression_else_one_liner "end of expression" .

    $default  reduce using rule 70 (expression_if_then_else)


State 1393

  215 expression_block_finally: "finally" $@3 "begin of code block" expressions $@4 . "end of code block"

    "end of code block"  shift, and go to state 1421


State 1394

  279 tuple_expansion_variable_declaration: '(' tuple_expansion ')' ':' type_declaration_no_options . copy_or_move_or_clone expr "end of expression"

    "<-"  shift, and go to state 543
    ":="  shift, and go to state 544
    '='   shift, and go to state 545

    copy_or_move_or_clone  go to state 1422


State 1395

  280 tuple_expansion_variable_declaration: '(' tuple_expansion ')' optional_ref copy_or_move_or_clone . expr "end of expression"

    "struct"                          shift, and go to state 409
    "class"                           shift, and go to state 410
    "true"                            shift, and go to state 411
    "false"                           shift, and go to state 412
    "new"                             shift, and go to state 413
    "typeinfo"                        shift, and go to state 414
    "type"                            shift, and go to state 415
    "array"                           shift, and go to state 416
    "null"                            shift, and go to state 417
    "table"                           shift, and go to state 418
    "deref"                           shift, and go to state 419
    "cast"                            shift, and go to state 420
    "upcast"                          shift, and go to state 421
    "addr"                            shift, and go to state 422
    "reinterpret"                     shift, and go to state 423
    "unsafe"                          shift, and go to state 424
    "fixed_array"                     shift, and go to state 425
    "default"                         shift, and go to state 426
    "bool"                            shift, and go to state 225
    "void"                            shift, and go to state 226
    "string"                          shift, and go to state 227
    "int"                             shift, and go to state 229
    "int2"                            shift, and go to state 230
    "int3"                            shift, and go to state 231
    "int4"                            shift, and go to state 232
    "uint"                            shift, and go to state 233
    "bitfield"                        shift, and go to state 427
    "uint2"                           shift, and go to state 235
    "uint3"                           shift, and go to state 236
    "uint4"                           shift, and go to state 237
    "float"                           shift, and go to state 238
    "float2"                          shift, and go to state 239
    "float3"                          shift, and go to state 240
    "float4"                          shift, and go to state 241
    "range"                           shift, and go to state 242
    "urange"                          shift, and go to state 243
    "range64"                         shift, and go to state 244
    "urange64"                        shift, and go to state 245
    "int64"                           shift, and go to state 247
    "uint64"                          shift, and go to state 248
    "double"                          shift, and go to state 249
    "int8"                            shift, and go to state 252
    "uint8"                           shift, and go to state 253
    "int16"                           shift, and go to state 254
    "uint16"                          shift, and go to state 255
    "tuple"                           shift, and go to state 428
    "variant"                         shift, and go to state 429
    "generator"                       shift, and go to state 430
    "++"                              shift, and go to state 431
    "--"                              shift, and go to state 432
    "::"                              shift, and go to state 55
    "$$"                              shift, and go to state 433
    "$i"                              shift, and go to state 434
    "$v"                              shift, and go to state 435
    "$b"                              shift, and go to state 436
    "$a"                              shift, and go to state 437
    "$c"                              shift, and go to state 438
    "..."                             shift, and go to state 439
    "integer constant"                shift, and go to state 440
    "long integer constant"           shift, and go to state 441
    "unsigned integer constant"       shift, and go to state 442
    "unsigned long integer constant"  shift, and go to state 443
    "unsigned int8 constant"          shift, and go to state 444
    "floating point constant"         shift, and go to state 445
    "double constant"                 shift, and go to state 446
    "name"                            shift, and go to state 56
    "start of the string"             shift, and go to state 447
    "begin of code block"             shift, and go to state 448
    '-'                               shift, and go to state 449
    '+'                               shift, and go to state 450
    '*'                               shift, and go to state 451
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 452
    '!'                               shift, and go to state 453
    '['                               shift, and go to state 454
    '('                               shift, and go to state 455
    '$'                               shift, and go to state 456
    '@'                               shift, and go to state 457

    string_builder          go to state 458
    expr_reader             go to state 459
    expr_call_pipe          go to state 460
    name_in_namespace       go to state 461
    expr_new                go to state 462
    expr_cast               go to state 463
    expr_type_decl          go to state 464
    expr_type_info          go to state 465
    block_or_lambda         go to state 466
    expr_full_block         go to state 467
    expr_numeric_const      go to state 468
    expr_named_call         go to state 469
    expr_method_call        go to state 470
    func_addr_expr          go to state 471
    expr_field              go to state 472
    expr_call               go to state 473
    expr                    go to state 1423
    expr_mtag               go to state 475
    basic_type_declaration  go to state 476
    make_decl               go to state 477
    make_struct_decl        go to state 478
    make_tuple_call         go to state 479
    make_dim_decl           go to state 480
    make_table_decl         go to state 481
    array_comprehension     go to state 482


State 1396

  491 struct_variable_declaration_list: struct_variable_declaration_list optional_annotation_list "def" optional_public_or_private_member_variable "abstract" optional_constant $@30 function_declaration_header . "end of expression"

    "end of expression"  shift, and go to state 1424


State 1397

  493 struct_variable_declaration_list: struct_variable_declaration_list optional_annotation_list "def" optional_public_or_private_member_variable optional_static_member_variable optional_override optional_constant $@31 . function_declaration_header expression_block

    "operator"  shift, and go to state 174
    "bool"      shift, and go to state 175
    "string"    shift, and go to state 176
    "int"       shift, and go to state 177
    "int2"      shift, and go to state 178
    "int3"      shift, and go to state 179
    "int4"      shift, and go to state 180
    "uint"      shift, and go to state 181
    "uint2"     shift, and go to state 182
    "uint3"     shift, and go to state 183
    "uint4"     shift, and go to state 184
    "float"     shift, and go to state 185
    "float2"    shift, and go to state 186
    "float3"    shift, and go to state 187
    "float4"    shift, and go to state 188
    "range"     shift, and go to state 189
    "urange"    shift, and go to state 190
    "range64"   shift, and go to state 191
    "urange64"  shift, and go to state 192
    "int64"     shift, and go to state 193
    "uint64"    shift, and go to state 194
    "double"    shift, and go to state 195
    "int8"      shift, and go to state 196
    "uint8"     shift, and go to state 197
    "int16"     shift, and go to state 198
    "uint16"    shift, and go to state 199
    "++"        shift, and go to state 200
    "--"        shift, and go to state 201
    "name"      shift, and go to state 202

    function_name                go to state 203
    function_declaration_header  go to state 1425


State 1398

  741 make_struct_dim_list: '(' . make_struct_fields ')'

    "$f"    shift, and go to state 792
    "name"  shift, and go to state 1002

    make_struct_fields  go to state 1426


State 1399

  733 make_struct_fields: make_struct_fields . ',' "name" copy_or_move expr
  734                   | make_struct_fields . ',' "name" ":=" expr
  737                   | make_struct_fields . ',' "$f" '(' expr ')' copy_or_move expr
  738                   | make_struct_fields . ',' "$f" '(' expr ')' ":=" expr
  743 make_struct_dim_decl: make_struct_fields .

    ','  shift, and go to state 1011

    $default  reduce using rule 743 (make_struct_dim_decl)


State 1400

  742 make_struct_dim_list: make_struct_dim_list . ',' '(' make_struct_fields ')'
  744 make_struct_dim_decl: make_struct_dim_list . optional_comma

    ','  shift, and go to state 1427

    $default  reduce using rule 793 (optional_comma)

    optional_comma  go to state 1428


State 1401

  745 optional_make_struct_dim_decl: make_struct_dim_decl .

    $default  reduce using rule 745 (optional_make_struct_dim_decl)


State 1402

  751 make_struct_decl: "struct" '<' $@77 type_declaration_no_options '>' $@78 '(' use_initializer optional_make_struct_dim_decl . ')'

    ')'  shift, and go to state 1429


State 1403

  754 make_struct_decl: "class" '<' $@79 type_declaration_no_options '>' $@80 '(' use_initializer optional_make_struct_dim_decl . ')'

    ')'  shift, and go to state 1430


State 1404

  298 expr_type_info: "typeinfo" name_in_namespace '<' "name" c_or_s "name" '>' '(' expr . ')'
  347 expr_method_call: expr . "->" "name" '(' ')'
  348                 | expr . "->" "name" '(' expr_list ')'
  358 expr_field: expr . '.' "name"
  359           | expr . '.' '.' "name"
  360           | expr . '.' "name" '(' ')'
  361           | expr . '.' "name" '(' expr_list ')'
  362           | expr . '.' basic_type_declaration '(' ')'
  363           | expr . '.' basic_type_declaration '(' expr_list ')'
  366           | expr . '.' $@21 error $@22
  388 expr: expr . "<<" expr
  389     | expr . ">>" expr
  390     | expr . "<<<" expr
  391     | expr . ">>>" expr
  392     | expr . '+' expr
  393     | expr . '-' expr
  394     | expr . '*' expr
  395     | expr . '/' expr
  396     | expr . '%' expr
  397     | expr . '<' expr
  398     | expr . '>' expr
  399     | expr . "==" expr
  400     | expr . "!=" expr
  401     | expr . "<=" expr
  402     | expr . ">=" expr
  403     | expr . '&' expr
  404     | expr . '|' expr
  405     | expr . '^' expr
  406     | expr . "&&" expr
  407     | expr . "||" expr
  408     | expr . "^^" expr
  409     | expr . ".." expr
  412     | expr . "++"
  413     | expr . "--"
  415     | expr . '[' expr ']'
  416     | expr . '.' '[' expr ']'
  417     | expr . "?[" expr ']'
  418     | expr . '.' "?[" expr ']'
  419     | expr . "?." "name"
  420     | expr . '.' "?." "name"
  429     | expr . "??" expr
  430     | expr . '?' expr ':' expr
  433     | expr . "is" "type" '<' $@23 type_declaration_no_options '>' $@24
  434     | expr . "is" basic_type_declaration
  435     | expr . "is" "name"
  436     | expr . "as" "name"
  439     | expr . "as" "type" '<' $@25 type_declaration '>' $@26
  440     | expr . "as" basic_type_declaration
  441     | expr . '?' "as" "name"
  444     | expr . '?' "as" "type" '<' $@27 type_declaration '>' $@28
  445     | expr . '?' "as" basic_type_declaration
  453     | expr . "<|" expr
  454     | expr . "|>" expr
  455     | expr . "|>" basic_type_declaration
  466 expr_mtag: expr . '.' "$f" '(' expr ')'
  467          | expr . "?." "$f" '(' expr ')'
  468          | expr . '.' '.' "$f" '(' expr ')'
  469          | expr . '.' "?." "$f" '(' expr ')'
  470          | expr . "as" "$f" '(' expr ')'
  471          | expr . '?' "as" "$f" '(' expr ')'
  472          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 609
    "as"   shift, and go to state 610
    "<<"   shift, and go to state 611
    ">>"   shift, and go to state 612
    "++"   shift, and go to state 613
    "--"   shift, and go to state 614
    "<="   shift, and go to state 615
    ">="   shift, and go to state 616
    "=="   shift, and go to state 617
    "!="   shift, and go to state 618
    "->"   shift, and go to state 619
    "??"   shift, and go to state 620
    "?."   shift, and go to state 621
    "?["   shift, and go to state 622
    "<|"   shift, and go to state 623
    "|>"   shift, and go to state 624
    "<<<"  shift, and go to state 625
    ">>>"  shift, and go to state 626
    "&&"   shift, and go to state 627
    "||"   shift, and go to state 628
    "^^"   shift, and go to state 629
    ".."   shift, and go to state 630
    '?'    shift, and go to state 631
    '|'    shift, and go to state 632
    '^'    shift, and go to state 633
    '&'    shift, and go to state 634
    '<'    shift, and go to state 635
    '>'    shift, and go to state 636
    '-'    shift, and go to state 637
    '+'    shift, and go to state 638
    '*'    shift, and go to state 639
    '/'    shift, and go to state 640
    '%'    shift, and go to state 641
    '.'    shift, and go to state 642
    '['    shift, and go to state 643
    ')'    shift, and go to state 1431


State 1405

  770 make_dim_decl: "array" "struct" '<' $@87 type_declaration_no_options '>' $@88 '(' use_initializer . optional_make_struct_dim_decl ')'

    "$f"    shift, and go to state 792
    "name"  shift, and go to state 1002
    '('     shift, and go to state 1398

    $default  reduce using rule 746 (optional_make_struct_dim_decl)

    make_struct_fields             go to state 1399
    make_struct_dim_list           go to state 1400
    make_struct_dim_decl           go to state 1401
    optional_make_struct_dim_decl  go to state 1432


State 1406

  773 make_dim_decl: "array" "tuple" '<' $@89 type_declaration_no_options '>' $@90 '(' use_initializer . optional_make_struct_dim_decl ')'

    "$f"    shift, and go to state 792
    "name"  shift, and go to state 1002
    '('     shift, and go to state 1398

    $default  reduce using rule 746 (optional_make_struct_dim_decl)

    make_struct_fields             go to state 1399
    make_struct_dim_list           go to state 1400
    make_struct_dim_decl           go to state 1401
    optional_make_struct_dim_decl  go to state 1433


State 1407

  776 make_dim_decl: "array" "variant" '<' $@91 type_declaration_no_options '>' $@92 '(' make_variant_dim . ')'

    ')'  shift, and go to state 1434


State 1408

  780 make_dim_decl: "array" '<' $@93 type_declaration_no_options '>' $@94 '(' optional_expr_list ')' .

    $default  reduce using rule 780 (make_dim_decl)


State 1409

  790 make_table_decl: "table" '<' type_declaration_no_options c_or_s type_declaration_no_options '>' '(' optional_expr_map_tuple_list ')' .

    $default  reduce using rule 790 (make_table_decl)


State 1410

  784 make_dim_decl: "fixed_array" '<' $@95 type_declaration_no_options '>' $@96 '(' expr_list optional_comma . ')'

    ')'  shift, and go to state 1435


State 1411

  766 make_tuple_call: "tuple" '<' $@85 type_declaration_no_options '>' $@86 '(' use_initializer optional_make_struct_dim_decl . ')'

    ')'  shift, and go to state 1436


State 1412

  757 make_struct_decl: "variant" '<' $@81 type_declaration_no_options '>' $@82 '(' make_variant_dim ')' .

    $default  reduce using rule 757 (make_struct_decl)


State 1413

  797 array_comprehension: "begin of code block" "for" '(' variable_name_with_pos_list "in" expr_list ')' "end of expression" make_map_tuple . array_comprehension_where "end of code block"

    "end of expression"  shift, and go to state 1437

    $default  reduce using rule 791 (array_comprehension_where)

    array_comprehension_where  go to state 1438


State 1414

  347 expr_method_call: expr . "->" "name" '(' ')'
  348                 | expr . "->" "name" '(' expr_list ')'
  358 expr_field: expr . '.' "name"
  359           | expr . '.' '.' "name"
  360           | expr . '.' "name" '(' ')'
  361           | expr . '.' "name" '(' expr_list ')'
  362           | expr . '.' basic_type_declaration '(' ')'
  363           | expr . '.' basic_type_declaration '(' expr_list ')'
  366           | expr . '.' $@21 error $@22
  388 expr: expr . "<<" expr
  389     | expr . ">>" expr
  390     | expr . "<<<" expr
  391     | expr . ">>>" expr
  392     | expr . '+' expr
  393     | expr . '-' expr
  394     | expr . '*' expr
  395     | expr . '/' expr
  396     | expr . '%' expr
  397     | expr . '<' expr
  398     | expr . '>' expr
  399     | expr . "==" expr
  400     | expr . "!=" expr
  401     | expr . "<=" expr
  402     | expr . ">=" expr
  403     | expr . '&' expr
  404     | expr . '|' expr
  405     | expr . '^' expr
  406     | expr . "&&" expr
  407     | expr . "||" expr
  408     | expr . "^^" expr
  409     | expr . ".." expr
  412     | expr . "++"
  413     | expr . "--"
  415     | expr . '[' expr ']'
  416     | expr . '.' '[' expr ']'
  417     | expr . "?[" expr ']'
  418     | expr . '.' "?[" expr ']'
  419     | expr . "?." "name"
  420     | expr . '.' "?." "name"
  429     | expr . "??" expr
  430     | expr . '?' expr ':' expr
  433     | expr . "is" "type" '<' $@23 type_declaration_no_options '>' $@24
  434     | expr . "is" basic_type_declaration
  435     | expr . "is" "name"
  436     | expr . "as" "name"
  439     | expr . "as" "type" '<' $@25 type_declaration '>' $@26
  440     | expr . "as" basic_type_declaration
  441     | expr . '?' "as" "name"
  444     | expr . '?' "as" "type" '<' $@27 type_declaration '>' $@28
  445     | expr . '?' "as" basic_type_declaration
  453     | expr . "<|" expr
  454     | expr . "|>" expr
  455     | expr . "|>" basic_type_declaration
  466 expr_mtag: expr . '.' "$f" '(' expr ')'
  467          | expr . "?." "$f" '(' expr ')'
  468          | expr . '.' '.' "$f" '(' expr ')'
  469          | expr . '.' "?." "$f" '(' expr ')'
  470          | expr . "as" "$f" '(' expr ')'
  471          | expr . '?' "as" "$f" '(' expr ')'
  472          | expr . "is" "$f" '(' expr ')'
  795 array_comprehension: '[' "for" '(' variable_name_with_pos_list "in" expr_list ')' "end of expression" expr . array_comprehension_where ']'

    "is"                 shift, and go to state 609
    "as"                 shift, and go to state 610
    "<<"                 shift, and go to state 611
    ">>"                 shift, and go to state 612
    "++"                 shift, and go to state 613
    "--"                 shift, and go to state 614
    "<="                 shift, and go to state 615
    ">="                 shift, and go to state 616
    "=="                 shift, and go to state 617
    "!="                 shift, and go to state 618
    "->"                 shift, and go to state 619
    "??"                 shift, and go to state 620
    "?."                 shift, and go to state 621
    "?["                 shift, and go to state 622
    "<|"                 shift, and go to state 623
    "|>"                 shift, and go to state 624
    "<<<"                shift, and go to state 625
    ">>>"                shift, and go to state 626
    "&&"                 shift, and go to state 627
    "||"                 shift, and go to state 628
    "^^"                 shift, and go to state 629
    ".."                 shift, and go to state 630
    "end of expression"  shift, and go to state 1437
    '?'                  shift, and go to state 631
    '|'                  shift, and go to state 632
    '^'                  shift, and go to state 633
    '&'                  shift, and go to state 634
    '<'                  shift, and go to state 635
    '>'                  shift, and go to state 636
    '-'                  shift, and go to state 637
    '+'                  shift, and go to state 638
    '*'                  shift, and go to state 639
    '/'                  shift, and go to state 640
    '%'                  shift, and go to state 641
    '.'                  shift, and go to state 642
    '['                  shift, and go to state 643

    $default  reduce using rule 791 (array_comprehension_where)

    array_comprehension_where  go to state 1439


State 1415

  796 array_comprehension: '[' "iterator" "for" '(' variable_name_with_pos_list "in" expr_list ')' "end of expression" . expr array_comprehension_where ']'

    "struct"                          shift, and go to state 409
    "class"                           shift, and go to state 410
    "true"                            shift, and go to state 411
    "false"                           shift, and go to state 412
    "new"                             shift, and go to state 413
    "typeinfo"                        shift, and go to state 414
    "type"                            shift, and go to state 415
    "array"                           shift, and go to state 416
    "null"                            shift, and go to state 417
    "table"                           shift, and go to state 418
    "deref"                           shift, and go to state 419
    "cast"                            shift, and go to state 420
    "upcast"                          shift, and go to state 421
    "addr"                            shift, and go to state 422
    "reinterpret"                     shift, and go to state 423
    "unsafe"                          shift, and go to state 424
    "fixed_array"                     shift, and go to state 425
    "default"                         shift, and go to state 426
    "bool"                            shift, and go to state 225
    "void"                            shift, and go to state 226
    "string"                          shift, and go to state 227
    "int"                             shift, and go to state 229
    "int2"                            shift, and go to state 230
    "int3"                            shift, and go to state 231
    "int4"                            shift, and go to state 232
    "uint"                            shift, and go to state 233
    "bitfield"                        shift, and go to state 427
    "uint2"                           shift, and go to state 235
    "uint3"                           shift, and go to state 236
    "uint4"                           shift, and go to state 237
    "float"                           shift, and go to state 238
    "float2"                          shift, and go to state 239
    "float3"                          shift, and go to state 240
    "float4"                          shift, and go to state 241
    "range"                           shift, and go to state 242
    "urange"                          shift, and go to state 243
    "range64"                         shift, and go to state 244
    "urange64"                        shift, and go to state 245
    "int64"                           shift, and go to state 247
    "uint64"                          shift, and go to state 248
    "double"                          shift, and go to state 249
    "int8"                            shift, and go to state 252
    "uint8"                           shift, and go to state 253
    "int16"                           shift, and go to state 254
    "uint16"                          shift, and go to state 255
    "tuple"                           shift, and go to state 428
    "variant"                         shift, and go to state 429
    "generator"                       shift, and go to state 430
    "++"                              shift, and go to state 431
    "--"                              shift, and go to state 432
    "::"                              shift, and go to state 55
    "$$"                              shift, and go to state 433
    "$i"                              shift, and go to state 434
    "$v"                              shift, and go to state 435
    "$b"                              shift, and go to state 436
    "$a"                              shift, and go to state 437
    "$c"                              shift, and go to state 438
    "..."                             shift, and go to state 439
    "integer constant"                shift, and go to state 440
    "long integer constant"           shift, and go to state 441
    "unsigned integer constant"       shift, and go to state 442
    "unsigned long integer constant"  shift, and go to state 443
    "unsigned int8 constant"          shift, and go to state 444
    "floating point constant"         shift, and go to state 445
    "double constant"                 shift, and go to state 446
    "name"                            shift, and go to state 56
    "start of the string"             shift, and go to state 447
    "begin of code block"             shift, and go to state 448
    '-'                               shift, and go to state 449
    '+'                               shift, and go to state 450
    '*'                               shift, and go to state 451
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 452
    '!'                               shift, and go to state 453
    '['                               shift, and go to state 454
    '('                               shift, and go to state 455
    '$'                               shift, and go to state 456
    '@'                               shift, and go to state 457

    string_builder          go to state 458
    expr_reader             go to state 459
    expr_call_pipe          go to state 460
    name_in_namespace       go to state 461
    expr_new                go to state 462
    expr_cast               go to state 463
    expr_type_decl          go to state 464
    expr_type_info          go to state 465
    block_or_lambda         go to state 466
    expr_full_block         go to state 467
    expr_numeric_const      go to state 468
    expr_named_call         go to state 469
    expr_method_call        go to state 470
    func_addr_expr          go to state 471
    expr_field              go to state 472
    expr_call               go to state 473
    expr                    go to state 1440
    expr_mtag               go to state 475
    basic_type_declaration  go to state 476
    make_decl               go to state 477
    make_struct_decl        go to state 478
    make_tuple_call         go to state 479
    make_dim_decl           go to state 480
    make_table_decl         go to state 481
    array_comprehension     go to state 482


State 1416

  357 func_addr_expr: '@' '@' '<' $@19 optional_function_argument_list optional_function_type '>' $@20 func_addr_name .

    $default  reduce using rule 357 (func_addr_expr)


State 1417

  738 make_struct_fields: make_struct_fields ',' "$f" '(' expr ')' ":=" . expr

    "struct"                          shift, and go to state 409
    "class"                           shift, and go to state 410
    "true"                            shift, and go to state 411
    "false"                           shift, and go to state 412
    "new"                             shift, and go to state 413
    "typeinfo"                        shift, and go to state 414
    "type"                            shift, and go to state 415
    "array"                           shift, and go to state 416
    "null"                            shift, and go to state 417
    "table"                           shift, and go to state 418
    "deref"                           shift, and go to state 419
    "cast"                            shift, and go to state 420
    "upcast"                          shift, and go to state 421
    "addr"                            shift, and go to state 422
    "reinterpret"                     shift, and go to state 423
    "unsafe"                          shift, and go to state 424
    "fixed_array"                     shift, and go to state 425
    "default"                         shift, and go to state 426
    "bool"                            shift, and go to state 225
    "void"                            shift, and go to state 226
    "string"                          shift, and go to state 227
    "int"                             shift, and go to state 229
    "int2"                            shift, and go to state 230
    "int3"                            shift, and go to state 231
    "int4"                            shift, and go to state 232
    "uint"                            shift, and go to state 233
    "bitfield"                        shift, and go to state 427
    "uint2"                           shift, and go to state 235
    "uint3"                           shift, and go to state 236
    "uint4"                           shift, and go to state 237
    "float"                           shift, and go to state 238
    "float2"                          shift, and go to state 239
    "float3"                          shift, and go to state 240
    "float4"                          shift, and go to state 241
    "range"                           shift, and go to state 242
    "urange"                          shift, and go to state 243
    "range64"                         shift, and go to state 244
    "urange64"                        shift, and go to state 245
    "int64"                           shift, and go to state 247
    "uint64"                          shift, and go to state 248
    "double"                          shift, and go to state 249
    "int8"                            shift, and go to state 252
    "uint8"                           shift, and go to state 253
    "int16"                           shift, and go to state 254
    "uint16"                          shift, and go to state 255
    "tuple"                           shift, and go to state 428
    "variant"                         shift, and go to state 429
    "generator"                       shift, and go to state 430
    "++"                              shift, and go to state 431
    "--"                              shift, and go to state 432
    "::"                              shift, and go to state 55
    "$$"                              shift, and go to state 433
    "$i"                              shift, and go to state 434
    "$v"                              shift, and go to state 435
    "$b"                              shift, and go to state 436
    "$a"                              shift, and go to state 437
    "$c"                              shift, and go to state 438
    "..."                             shift, and go to state 439
    "integer constant"                shift, and go to state 440
    "long integer constant"           shift, and go to state 441
    "unsigned integer constant"       shift, and go to state 442
    "unsigned long integer constant"  shift, and go to state 443
    "unsigned int8 constant"          shift, and go to state 444
    "floating point constant"         shift, and go to state 445
    "double constant"                 shift, and go to state 446
    "name"                            shift, and go to state 56
    "start of the string"             shift, and go to state 447
    "begin of code block"             shift, and go to state 448
    '-'                               shift, and go to state 449
    '+'                               shift, and go to state 450
    '*'                               shift, and go to state 451
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 452
    '!'                               shift, and go to state 453
    '['                               shift, and go to state 454
    '('                               shift, and go to state 455
    '$'                               shift, and go to state 456
    '@'                               shift, and go to state 457

    string_builder          go to state 458
    expr_reader             go to state 459
    expr_call_pipe          go to state 460
    name_in_namespace       go to state 461
    expr_new                go to state 462
    expr_cast               go to state 463
    expr_type_decl          go to state 464
    expr_type_info          go to state 465
    block_or_lambda         go to state 466
    expr_full_block         go to state 467
    expr_numeric_const      go to state 468
    expr_named_call         go to state 469
    expr_method_call        go to state 470
    func_addr_expr          go to state 471
    expr_field              go to state 472
    expr_call               go to state 473
    expr                    go to state 1441
    expr_mtag               go to state 475
    basic_type_declaration  go to state 476
    make_decl               go to state 477
    make_struct_decl        go to state 478
    make_tuple_call         go to state 479
    make_dim_decl           go to state 480
    make_table_decl         go to state 481
    array_comprehension     go to state 482


State 1418

  737 make_struct_fields: make_struct_fields ',' "$f" '(' expr ')' copy_or_move . expr

    "struct"                          shift, and go to state 409
    "class"                           shift, and go to state 410
    "true"                            shift, and go to state 411
    "false"                           shift, and go to state 412
    "new"                             shift, and go to state 413
    "typeinfo"                        shift, and go to state 414
    "type"                            shift, and go to state 415
    "array"                           shift, and go to state 416
    "null"                            shift, and go to state 417
    "table"                           shift, and go to state 418
    "deref"                           shift, and go to state 419
    "cast"                            shift, and go to state 420
    "upcast"                          shift, and go to state 421
    "addr"                            shift, and go to state 422
    "reinterpret"                     shift, and go to state 423
    "unsafe"                          shift, and go to state 424
    "fixed_array"                     shift, and go to state 425
    "default"                         shift, and go to state 426
    "bool"                            shift, and go to state 225
    "void"                            shift, and go to state 226
    "string"                          shift, and go to state 227
    "int"                             shift, and go to state 229
    "int2"                            shift, and go to state 230
    "int3"                            shift, and go to state 231
    "int4"                            shift, and go to state 232
    "uint"                            shift, and go to state 233
    "bitfield"                        shift, and go to state 427
    "uint2"                           shift, and go to state 235
    "uint3"                           shift, and go to state 236
    "uint4"                           shift, and go to state 237
    "float"                           shift, and go to state 238
    "float2"                          shift, and go to state 239
    "float3"                          shift, and go to state 240
    "float4"                          shift, and go to state 241
    "range"                           shift, and go to state 242
    "urange"                          shift, and go to state 243
    "range64"                         shift, and go to state 244
    "urange64"                        shift, and go to state 245
    "int64"                           shift, and go to state 247
    "uint64"                          shift, and go to state 248
    "double"                          shift, and go to state 249
    "int8"                            shift, and go to state 252
    "uint8"                           shift, and go to state 253
    "int16"                           shift, and go to state 254
    "uint16"                          shift, and go to state 255
    "tuple"                           shift, and go to state 428
    "variant"                         shift, and go to state 429
    "generator"                       shift, and go to state 430
    "++"                              shift, and go to state 431
    "--"                              shift, and go to state 432
    "::"                              shift, and go to state 55
    "$$"                              shift, and go to state 433
    "$i"                              shift, and go to state 434
    "$v"                              shift, and go to state 435
    "$b"                              shift, and go to state 436
    "$a"                              shift, and go to state 437
    "$c"                              shift, and go to state 438
    "..."                             shift, and go to state 439
    "integer constant"                shift, and go to state 440
    "long integer constant"           shift, and go to state 441
    "unsigned integer constant"       shift, and go to state 442
    "unsigned long integer constant"  shift, and go to state 443
    "unsigned int8 constant"          shift, and go to state 444
    "floating point constant"         shift, and go to state 445
    "double constant"                 shift, and go to state 446
    "name"                            shift, and go to state 56
    "start of the string"             shift, and go to state 447
    "begin of code block"             shift, and go to state 448
    '-'                               shift, and go to state 449
    '+'                               shift, and go to state 450
    '*'                               shift, and go to state 451
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 452
    '!'                               shift, and go to state 453
    '['                               shift, and go to state 454
    '('                               shift, and go to state 455
    '$'                               shift, and go to state 456
    '@'                               shift, and go to state 457

    string_builder          go to state 458
    expr_reader             go to state 459
    expr_call_pipe          go to state 460
    name_in_namespace       go to state 461
    expr_new                go to state 462
    expr_cast               go to state 463
    expr_type_decl          go to state 464
    expr_type_info          go to state 465
    block_or_lambda         go to state 466
    expr_full_block         go to state 467
    expr_numeric_const      go to state 468
    expr_named_call         go to state 469
    expr_method_call        go to state 470
    func_addr_expr          go to state 471
    expr_field              go to state 472
    expr_call               go to state 473
    expr                    go to state 1442
    expr_mtag               go to state 475
    basic_type_declaration  go to state 476
    make_decl               go to state 477
    make_struct_decl        go to state 478
    make_tuple_call         go to state 479
    make_dim_decl           go to state 480
    make_table_decl         go to state 481
    array_comprehension     go to state 482


State 1419

  444 expr: expr '?' "as" "type" '<' $@27 type_declaration '>' $@28 .

    $default  reduce using rule 444 (expr)


State 1420

   59 expression_else: elif_or_static_elif '(' expr . ')' expression_block expression_else
  347 expr_method_call: expr . "->" "name" '(' ')'
  348                 | expr . "->" "name" '(' expr_list ')'
  358 expr_field: expr . '.' "name"
  359           | expr . '.' '.' "name"
  360           | expr . '.' "name" '(' ')'
  361           | expr . '.' "name" '(' expr_list ')'
  362           | expr . '.' basic_type_declaration '(' ')'
  363           | expr . '.' basic_type_declaration '(' expr_list ')'
  366           | expr . '.' $@21 error $@22
  388 expr: expr . "<<" expr
  389     | expr . ">>" expr
  390     | expr . "<<<" expr
  391     | expr . ">>>" expr
  392     | expr . '+' expr
  393     | expr . '-' expr
  394     | expr . '*' expr
  395     | expr . '/' expr
  396     | expr . '%' expr
  397     | expr . '<' expr
  398     | expr . '>' expr
  399     | expr . "==" expr
  400     | expr . "!=" expr
  401     | expr . "<=" expr
  402     | expr . ">=" expr
  403     | expr . '&' expr
  404     | expr . '|' expr
  405     | expr . '^' expr
  406     | expr . "&&" expr
  407     | expr . "||" expr
  408     | expr . "^^" expr
  409     | expr . ".." expr
  412     | expr . "++"
  413     | expr . "--"
  415     | expr . '[' expr ']'
  416     | expr . '.' '[' expr ']'
  417     | expr . "?[" expr ']'
  418     | expr . '.' "?[" expr ']'
  419     | expr . "?." "name"
  420     | expr . '.' "?." "name"
  429     | expr . "??" expr
  430     | expr . '?' expr ':' expr
  433     | expr . "is" "type" '<' $@23 type_declaration_no_options '>' $@24
  434     | expr . "is" basic_type_declaration
  435     | expr . "is" "name"
  436     | expr . "as" "name"
  439     | expr . "as" "type" '<' $@25 type_declaration '>' $@26
  440     | expr . "as" basic_type_declaration
  441     | expr . '?' "as" "name"
  444     | expr . '?' "as" "type" '<' $@27 type_declaration '>' $@28
  445     | expr . '?' "as" basic_type_declaration
  453     | expr . "<|" expr
  454     | expr . "|>" expr
  455     | expr . "|>" basic_type_declaration
  466 expr_mtag: expr . '.' "$f" '(' expr ')'
  467          | expr . "?." "$f" '(' expr ')'
  468          | expr . '.' '.' "$f" '(' expr ')'
  469          | expr . '.' "?." "$f" '(' expr ')'
  470          | expr . "as" "$f" '(' expr ')'
  471          | expr . '?' "as" "$f" '(' expr ')'
  472          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 609
    "as"   shift, and go to state 610
    "<<"   shift, and go to state 611
    ">>"   shift, and go to state 612
    "++"   shift, and go to state 613
    "--"   shift, and go to state 614
    "<="   shift, and go to state 615
    ">="   shift, and go to state 616
    "=="   shift, and go to state 617
    "!="   shift, and go to state 618
    "->"   shift, and go to state 619
    "??"   shift, and go to state 620
    "?."   shift, and go to state 621
    "?["   shift, and go to state 622
    "<|"   shift, and go to state 623
    "|>"   shift, and go to state 624
    "<<<"  shift, and go to state 625
    ">>>"  shift, and go to state 626
    "&&"   shift, and go to state 627
    "||"   shift, and go to state 628
    "^^"   shift, and go to state 629
    ".."   shift, and go to state 630
    '?'    shift, and go to state 631
    '|'    shift, and go to state 632
    '^'    shift, and go to state 633
    '&'    shift, and go to state 634
    '<'    shift, and go to state 635
    '>'    shift, and go to state 636
    '-'    shift, and go to state 637
    '+'    shift, and go to state 638
    '*'    shift, and go to state 639
    '/'    shift, and go to state 640
    '%'    shift, and go to state 641
    '.'    shift, and go to state 642
    '['    shift, and go to state 643
    ')'    shift, and go to state 1443


State 1421

  215 expression_block_finally: "finally" $@3 "begin of code block" expressions $@4 "end of code block" .

    $default  reduce using rule 215 (expression_block_finally)


State 1422

  279 tuple_expansion_variable_declaration: '(' tuple_expansion ')' ':' type_declaration_no_options copy_or_move_or_clone . expr "end of expression"

    "struct"                          shift, and go to state 409
    "class"                           shift, and go to state 410
    "true"                            shift, and go to state 411
    "false"                           shift, and go to state 412
    "new"                             shift, and go to state 413
    "typeinfo"                        shift, and go to state 414
    "type"                            shift, and go to state 415
    "array"                           shift, and go to state 416
    "null"                            shift, and go to state 417
    "table"                           shift, and go to state 418
    "deref"                           shift, and go to state 419
    "cast"                            shift, and go to state 420
    "upcast"                          shift, and go to state 421
    "addr"                            shift, and go to state 422
    "reinterpret"                     shift, and go to state 423
    "unsafe"                          shift, and go to state 424
    "fixed_array"                     shift, and go to state 425
    "default"                         shift, and go to state 426
    "bool"                            shift, and go to state 225
    "void"                            shift, and go to state 226
    "string"                          shift, and go to state 227
    "int"                             shift, and go to state 229
    "int2"                            shift, and go to state 230
    "int3"                            shift, and go to state 231
    "int4"                            shift, and go to state 232
    "uint"                            shift, and go to state 233
    "bitfield"                        shift, and go to state 427
    "uint2"                           shift, and go to state 235
    "uint3"                           shift, and go to state 236
    "uint4"                           shift, and go to state 237
    "float"                           shift, and go to state 238
    "float2"                          shift, and go to state 239
    "float3"                          shift, and go to state 240
    "float4"                          shift, and go to state 241
    "range"                           shift, and go to state 242
    "urange"                          shift, and go to state 243
    "range64"                         shift, and go to state 244
    "urange64"                        shift, and go to state 245
    "int64"                           shift, and go to state 247
    "uint64"                          shift, and go to state 248
    "double"                          shift, and go to state 249
    "int8"                            shift, and go to state 252
    "uint8"                           shift, and go to state 253
    "int16"                           shift, and go to state 254
    "uint16"                          shift, and go to state 255
    "tuple"                           shift, and go to state 428
    "variant"                         shift, and go to state 429
    "generator"                       shift, and go to state 430
    "++"                              shift, and go to state 431
    "--"                              shift, and go to state 432
    "::"                              shift, and go to state 55
    "$$"                              shift, and go to state 433
    "$i"                              shift, and go to state 434
    "$v"                              shift, and go to state 435
    "$b"                              shift, and go to state 436
    "$a"                              shift, and go to state 437
    "$c"                              shift, and go to state 438
    "..."                             shift, and go to state 439
    "integer constant"                shift, and go to state 440
    "long integer constant"           shift, and go to state 441
    "unsigned integer constant"       shift, and go to state 442
    "unsigned long integer constant"  shift, and go to state 443
    "unsigned int8 constant"          shift, and go to state 444
    "floating point constant"         shift, and go to state 445
    "double constant"                 shift, and go to state 446
    "name"                            shift, and go to state 56
    "start of the string"             shift, and go to state 447
    "begin of code block"             shift, and go to state 448
    '-'                               shift, and go to state 449
    '+'                               shift, and go to state 450
    '*'                               shift, and go to state 451
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 452
    '!'                               shift, and go to state 453
    '['                               shift, and go to state 454
    '('                               shift, and go to state 455
    '$'                               shift, and go to state 456
    '@'                               shift, and go to state 457

    string_builder          go to state 458
    expr_reader             go to state 459
    expr_call_pipe          go to state 460
    name_in_namespace       go to state 461
    expr_new                go to state 462
    expr_cast               go to state 463
    expr_type_decl          go to state 464
    expr_type_info          go to state 465
    block_or_lambda         go to state 466
    expr_full_block         go to state 467
    expr_numeric_const      go to state 468
    expr_named_call         go to state 469
    expr_method_call        go to state 470
    func_addr_expr          go to state 471
    expr_field              go to state 472
    expr_call               go to state 473
    expr                    go to state 1444
    expr_mtag               go to state 475
    basic_type_declaration  go to state 476
    make_decl               go to state 477
    make_struct_decl        go to state 478
    make_tuple_call         go to state 479
    make_dim_decl           go to state 480
    make_table_decl         go to state 481
    array_comprehension     go to state 482


State 1423

  280 tuple_expansion_variable_declaration: '(' tuple_expansion ')' optional_ref copy_or_move_or_clone expr . "end of expression"
  347 expr_method_call: expr . "->" "name" '(' ')'
  348                 | expr . "->" "name" '(' expr_list ')'
  358 expr_field: expr . '.' "name"
  359           | expr . '.' '.' "name"
  360           | expr . '.' "name" '(' ')'
  361           | expr . '.' "name" '(' expr_list ')'
  362           | expr . '.' basic_type_declaration '(' ')'
  363           | expr . '.' basic_type_declaration '(' expr_list ')'
  366           | expr . '.' $@21 error $@22
  388 expr: expr . "<<" expr
  389     | expr . ">>" expr
  390     | expr . "<<<" expr
  391     | expr . ">>>" expr
  392     | expr . '+' expr
  393     | expr . '-' expr
  394     | expr . '*' expr
  395     | expr . '/' expr
  396     | expr . '%' expr
  397     | expr . '<' expr
  398     | expr . '>' expr
  399     | expr . "==" expr
  400     | expr . "!=" expr
  401     | expr . "<=" expr
  402     | expr . ">=" expr
  403     | expr . '&' expr
  404     | expr . '|' expr
  405     | expr . '^' expr
  406     | expr . "&&" expr
  407     | expr . "||" expr
  408     | expr . "^^" expr
  409     | expr . ".." expr
  412     | expr . "++"
  413     | expr . "--"
  415     | expr . '[' expr ']'
  416     | expr . '.' '[' expr ']'
  417     | expr . "?[" expr ']'
  418     | expr . '.' "?[" expr ']'
  419     | expr . "?." "name"
  420     | expr . '.' "?." "name"
  429     | expr . "??" expr
  430     | expr . '?' expr ':' expr
  433     | expr . "is" "type" '<' $@23 type_declaration_no_options '>' $@24
  434     | expr . "is" basic_type_declaration
  435     | expr . "is" "name"
  436     | expr . "as" "name"
  439     | expr . "as" "type" '<' $@25 type_declaration '>' $@26
  440     | expr . "as" basic_type_declaration
  441     | expr . '?' "as" "name"
  444     | expr . '?' "as" "type" '<' $@27 type_declaration '>' $@28
  445     | expr . '?' "as" basic_type_declaration
  453     | expr . "<|" expr
  454     | expr . "|>" expr
  455     | expr . "|>" basic_type_declaration
  466 expr_mtag: expr . '.' "$f" '(' expr ')'
  467          | expr . "?." "$f" '(' expr ')'
  468          | expr . '.' '.' "$f" '(' expr ')'
  469          | expr . '.' "?." "$f" '(' expr ')'
  470          | expr . "as" "$f" '(' expr ')'
  471          | expr . '?' "as" "$f" '(' expr ')'
  472          | expr . "is" "$f" '(' expr ')'

    "is"                 shift, and go to state 609
    "as"                 shift, and go to state 610
    "<<"                 shift, and go to state 611
    ">>"                 shift, and go to state 612
    "++"                 shift, and go to state 613
    "--"                 shift, and go to state 614
    "<="                 shift, and go to state 615
    ">="                 shift, and go to state 616
    "=="                 shift, and go to state 617
    "!="                 shift, and go to state 618
    "->"                 shift, and go to state 619
    "??"                 shift, and go to state 620
    "?."                 shift, and go to state 621
    "?["                 shift, and go to state 622
    "<|"                 shift, and go to state 623
    "|>"                 shift, and go to state 624
    "<<<"                shift, and go to state 625
    ">>>"                shift, and go to state 626
    "&&"                 shift, and go to state 627
    "||"                 shift, and go to state 628
    "^^"                 shift, and go to state 629
    ".."                 shift, and go to state 630
    "end of expression"  shift, and go to state 1445
    '?'                  shift, and go to state 631
    '|'                  shift, and go to state 632
    '^'                  shift, and go to state 633
    '&'                  shift, and go to state 634
    '<'                  shift, and go to state 635
    '>'                  shift, and go to state 636
    '-'                  shift, and go to state 637
    '+'                  shift, and go to state 638
    '*'                  shift, and go to state 639
    '/'                  shift, and go to state 640
    '%'                  shift, and go to state 641
    '.'                  shift, and go to state 642
    '['                  shift, and go to state 643


State 1424

  491 struct_variable_declaration_list: struct_variable_declaration_list optional_annotation_list "def" optional_public_or_private_member_variable "abstract" optional_constant $@30 function_declaration_header "end of expression" .

    $default  reduce using rule 491 (struct_variable_declaration_list)


State 1425

  493 struct_variable_declaration_list: struct_variable_declaration_list optional_annotation_list "def" optional_public_or_private_member_variable optional_static_member_variable optional_override optional_constant $@31 function_declaration_header . expression_block

    $default  reduce using rule 216 ($@5)

    expression_block  go to state 1446
    $@5               go to state 327


State 1426

  733 make_struct_fields: make_struct_fields . ',' "name" copy_or_move expr
  734                   | make_struct_fields . ',' "name" ":=" expr
  737                   | make_struct_fields . ',' "$f" '(' expr ')' copy_or_move expr
  738                   | make_struct_fields . ',' "$f" '(' expr ')' ":=" expr
  741 make_struct_dim_list: '(' make_struct_fields . ')'

    ','  shift, and go to state 1011
    ')'  shift, and go to state 1447


State 1427

  742 make_struct_dim_list: make_struct_dim_list ',' . '(' make_struct_fields ')'
  794 optional_comma: ',' .

    '('  shift, and go to state 1448

    $default  reduce using rule 794 (optional_comma)


State 1428

  744 make_struct_dim_decl: make_struct_dim_list optional_comma .

    $default  reduce using rule 744 (make_struct_dim_decl)


State 1429

  751 make_struct_decl: "struct" '<' $@77 type_declaration_no_options '>' $@78 '(' use_initializer optional_make_struct_dim_decl ')' .

    $default  reduce using rule 751 (make_struct_decl)


State 1430

  754 make_struct_decl: "class" '<' $@79 type_declaration_no_options '>' $@80 '(' use_initializer optional_make_struct_dim_decl ')' .

    $default  reduce using rule 754 (make_struct_decl)


State 1431

  298 expr_type_info: "typeinfo" name_in_namespace '<' "name" c_or_s "name" '>' '(' expr ')' .

    $default  reduce using rule 298 (expr_type_info)


State 1432

  770 make_dim_decl: "array" "struct" '<' $@87 type_declaration_no_options '>' $@88 '(' use_initializer optional_make_struct_dim_decl . ')'

    ')'  shift, and go to state 1449


State 1433

  773 make_dim_decl: "array" "tuple" '<' $@89 type_declaration_no_options '>' $@90 '(' use_initializer optional_make_struct_dim_decl . ')'

    ')'  shift, and go to state 1450


State 1434

  776 make_dim_decl: "array" "variant" '<' $@91 type_declaration_no_options '>' $@92 '(' make_variant_dim ')' .

    $default  reduce using rule 776 (make_dim_decl)


State 1435

  784 make_dim_decl: "fixed_array" '<' $@95 type_declaration_no_options '>' $@96 '(' expr_list optional_comma ')' .

    $default  reduce using rule 784 (make_dim_decl)


State 1436

  766 make_tuple_call: "tuple" '<' $@85 type_declaration_no_options '>' $@86 '(' use_initializer optional_make_struct_dim_decl ')' .

    $default  reduce using rule 766 (make_tuple_call)


State 1437

  792 array_comprehension_where: "end of expression" . "where" expr

    "where"  shift, and go to state 1451


State 1438

  797 array_comprehension: "begin of code block" "for" '(' variable_name_with_pos_list "in" expr_list ')' "end of expression" make_map_tuple array_comprehension_where . "end of code block"

    "end of code block"  shift, and go to state 1452


State 1439

  795 array_comprehension: '[' "for" '(' variable_name_with_pos_list "in" expr_list ')' "end of expression" expr array_comprehension_where . ']'

    ']'  shift, and go to state 1453


State 1440

  347 expr_method_call: expr . "->" "name" '(' ')'
  348                 | expr . "->" "name" '(' expr_list ')'
  358 expr_field: expr . '.' "name"
  359           | expr . '.' '.' "name"
  360           | expr . '.' "name" '(' ')'
  361           | expr . '.' "name" '(' expr_list ')'
  362           | expr . '.' basic_type_declaration '(' ')'
  363           | expr . '.' basic_type_declaration '(' expr_list ')'
  366           | expr . '.' $@21 error $@22
  388 expr: expr . "<<" expr
  389     | expr . ">>" expr
  390     | expr . "<<<" expr
  391     | expr . ">>>" expr
  392     | expr . '+' expr
  393     | expr . '-' expr
  394     | expr . '*' expr
  395     | expr . '/' expr
  396     | expr . '%' expr
  397     | expr . '<' expr
  398     | expr . '>' expr
  399     | expr . "==" expr
  400     | expr . "!=" expr
  401     | expr . "<=" expr
  402     | expr . ">=" expr
  403     | expr . '&' expr
  404     | expr . '|' expr
  405     | expr . '^' expr
  406     | expr . "&&" expr
  407     | expr . "||" expr
  408     | expr . "^^" expr
  409     | expr . ".." expr
  412     | expr . "++"
  413     | expr . "--"
  415     | expr . '[' expr ']'
  416     | expr . '.' '[' expr ']'
  417     | expr . "?[" expr ']'
  418     | expr . '.' "?[" expr ']'
  419     | expr . "?." "name"
  420     | expr . '.' "?." "name"
  429     | expr . "??" expr
  430     | expr . '?' expr ':' expr
  433     | expr . "is" "type" '<' $@23 type_declaration_no_options '>' $@24
  434     | expr . "is" basic_type_declaration
  435     | expr . "is" "name"
  436     | expr . "as" "name"
  439     | expr . "as" "type" '<' $@25 type_declaration '>' $@26
  440     | expr . "as" basic_type_declaration
  441     | expr . '?' "as" "name"
  444     | expr . '?' "as" "type" '<' $@27 type_declaration '>' $@28
  445     | expr . '?' "as" basic_type_declaration
  453     | expr . "<|" expr
  454     | expr . "|>" expr
  455     | expr . "|>" basic_type_declaration
  466 expr_mtag: expr . '.' "$f" '(' expr ')'
  467          | expr . "?." "$f" '(' expr ')'
  468          | expr . '.' '.' "$f" '(' expr ')'
  469          | expr . '.' "?." "$f" '(' expr ')'
  470          | expr . "as" "$f" '(' expr ')'
  471          | expr . '?' "as" "$f" '(' expr ')'
  472          | expr . "is" "$f" '(' expr ')'
  796 array_comprehension: '[' "iterator" "for" '(' variable_name_with_pos_list "in" expr_list ')' "end of expression" expr . array_comprehension_where ']'

    "is"                 shift, and go to state 609
    "as"                 shift, and go to state 610
    "<<"                 shift, and go to state 611
    ">>"                 shift, and go to state 612
    "++"                 shift, and go to state 613
    "--"                 shift, and go to state 614
    "<="                 shift, and go to state 615
    ">="                 shift, and go to state 616
    "=="                 shift, and go to state 617
    "!="                 shift, and go to state 618
    "->"                 shift, and go to state 619
    "??"                 shift, and go to state 620
    "?."                 shift, and go to state 621
    "?["                 shift, and go to state 622
    "<|"                 shift, and go to state 623
    "|>"                 shift, and go to state 624
    "<<<"                shift, and go to state 625
    ">>>"                shift, and go to state 626
    "&&"                 shift, and go to state 627
    "||"                 shift, and go to state 628
    "^^"                 shift, and go to state 629
    ".."                 shift, and go to state 630
    "end of expression"  shift, and go to state 1437
    '?'                  shift, and go to state 631
    '|'                  shift, and go to state 632
    '^'                  shift, and go to state 633
    '&'                  shift, and go to state 634
    '<'                  shift, and go to state 635
    '>'                  shift, and go to state 636
    '-'                  shift, and go to state 637
    '+'                  shift, and go to state 638
    '*'                  shift, and go to state 639
    '/'                  shift, and go to state 640
    '%'                  shift, and go to state 641
    '.'                  shift, and go to state 642
    '['                  shift, and go to state 643

    $default  reduce using rule 791 (array_comprehension_where)

    array_comprehension_where  go to state 1454


State 1441

  347 expr_method_call: expr . "->" "name" '(' ')'
  348                 | expr . "->" "name" '(' expr_list ')'
  358 expr_field: expr . '.' "name"
  359           | expr . '.' '.' "name"
  360           | expr . '.' "name" '(' ')'
  361           | expr . '.' "name" '(' expr_list ')'
  362           | expr . '.' basic_type_declaration '(' ')'
  363           | expr . '.' basic_type_declaration '(' expr_list ')'
  366           | expr . '.' $@21 error $@22
  388 expr: expr . "<<" expr
  389     | expr . ">>" expr
  390     | expr . "<<<" expr
  391     | expr . ">>>" expr
  392     | expr . '+' expr
  393     | expr . '-' expr
  394     | expr . '*' expr
  395     | expr . '/' expr
  396     | expr . '%' expr
  397     | expr . '<' expr
  398     | expr . '>' expr
  399     | expr . "==" expr
  400     | expr . "!=" expr
  401     | expr . "<=" expr
  402     | expr . ">=" expr
  403     | expr . '&' expr
  404     | expr . '|' expr
  405     | expr . '^' expr
  406     | expr . "&&" expr
  407     | expr . "||" expr
  408     | expr . "^^" expr
  409     | expr . ".." expr
  412     | expr . "++"
  413     | expr . "--"
  415     | expr . '[' expr ']'
  416     | expr . '.' '[' expr ']'
  417     | expr . "?[" expr ']'
  418     | expr . '.' "?[" expr ']'
  419     | expr . "?." "name"
  420     | expr . '.' "?." "name"
  429     | expr . "??" expr
  430     | expr . '?' expr ':' expr
  433     | expr . "is" "type" '<' $@23 type_declaration_no_options '>' $@24
  434     | expr . "is" basic_type_declaration
  435     | expr . "is" "name"
  436     | expr . "as" "name"
  439     | expr . "as" "type" '<' $@25 type_declaration '>' $@26
  440     | expr . "as" basic_type_declaration
  441     | expr . '?' "as" "name"
  444     | expr . '?' "as" "type" '<' $@27 type_declaration '>' $@28
  445     | expr . '?' "as" basic_type_declaration
  453     | expr . "<|" expr
  454     | expr . "|>" expr
  455     | expr . "|>" basic_type_declaration
  466 expr_mtag: expr . '.' "$f" '(' expr ')'
  467          | expr . "?." "$f" '(' expr ')'
  468          | expr . '.' '.' "$f" '(' expr ')'
  469          | expr . '.' "?." "$f" '(' expr ')'
  470          | expr . "as" "$f" '(' expr ')'
  471          | expr . '?' "as" "$f" '(' expr ')'
  472          | expr . "is" "$f" '(' expr ')'
  738 make_struct_fields: make_struct_fields ',' "$f" '(' expr ')' ":=" expr .

    "is"   shift, and go to state 609
    "as"   shift, and go to state 610
    "<<"   shift, and go to state 611
    ">>"   shift, and go to state 612
    "++"   shift, and go to state 613
    "--"   shift, and go to state 614
    "<="   shift, and go to state 615
    ">="   shift, and go to state 616
    "=="   shift, and go to state 617
    "!="   shift, and go to state 618
    "->"   shift, and go to state 619
    "??"   shift, and go to state 620
    "?."   shift, and go to state 621
    "?["   shift, and go to state 622
    "<|"   shift, and go to state 623
    "|>"   shift, and go to state 624
    "<<<"  shift, and go to state 625
    ">>>"  shift, and go to state 626
    "&&"   shift, and go to state 627
    "||"   shift, and go to state 628
    "^^"   shift, and go to state 629
    ".."   shift, and go to state 630
    '?'    shift, and go to state 631
    '|'    shift, and go to state 632
    '^'    shift, and go to state 633
    '&'    shift, and go to state 634
    '<'    shift, and go to state 635
    '>'    shift, and go to state 636
    '-'    shift, and go to state 637
    '+'    shift, and go to state 638
    '*'    shift, and go to state 639
    '/'    shift, and go to state 640
    '%'    shift, and go to state 641
    '.'    shift, and go to state 642
    '['    shift, and go to state 643

    $default  reduce using rule 738 (make_struct_fields)


State 1442

  347 expr_method_call: expr . "->" "name" '(' ')'
  348                 | expr . "->" "name" '(' expr_list ')'
  358 expr_field: expr . '.' "name"
  359           | expr . '.' '.' "name"
  360           | expr . '.' "name" '(' ')'
  361           | expr . '.' "name" '(' expr_list ')'
  362           | expr . '.' basic_type_declaration '(' ')'
  363           | expr . '.' basic_type_declaration '(' expr_list ')'
  366           | expr . '.' $@21 error $@22
  388 expr: expr . "<<" expr
  389     | expr . ">>" expr
  390     | expr . "<<<" expr
  391     | expr . ">>>" expr
  392     | expr . '+' expr
  393     | expr . '-' expr
  394     | expr . '*' expr
  395     | expr . '/' expr
  396     | expr . '%' expr
  397     | expr . '<' expr
  398     | expr . '>' expr
  399     | expr . "==" expr
  400     | expr . "!=" expr
  401     | expr . "<=" expr
  402     | expr . ">=" expr
  403     | expr . '&' expr
  404     | expr . '|' expr
  405     | expr . '^' expr
  406     | expr . "&&" expr
  407     | expr . "||" expr
  408     | expr . "^^" expr
  409     | expr . ".." expr
  412     | expr . "++"
  413     | expr . "--"
  415     | expr . '[' expr ']'
  416     | expr . '.' '[' expr ']'
  417     | expr . "?[" expr ']'
  418     | expr . '.' "?[" expr ']'
  419     | expr . "?." "name"
  420     | expr . '.' "?." "name"
  429     | expr . "??" expr
  430     | expr . '?' expr ':' expr
  433     | expr . "is" "type" '<' $@23 type_declaration_no_options '>' $@24
  434     | expr . "is" basic_type_declaration
  435     | expr . "is" "name"
  436     | expr . "as" "name"
  439     | expr . "as" "type" '<' $@25 type_declaration '>' $@26
  440     | expr . "as" basic_type_declaration
  441     | expr . '?' "as" "name"
  444     | expr . '?' "as" "type" '<' $@27 type_declaration '>' $@28
  445     | expr . '?' "as" basic_type_declaration
  453     | expr . "<|" expr
  454     | expr . "|>" expr
  455     | expr . "|>" basic_type_declaration
  466 expr_mtag: expr . '.' "$f" '(' expr ')'
  467          | expr . "?." "$f" '(' expr ')'
  468          | expr . '.' '.' "$f" '(' expr ')'
  469          | expr . '.' "?." "$f" '(' expr ')'
  470          | expr . "as" "$f" '(' expr ')'
  471          | expr . '?' "as" "$f" '(' expr ')'
  472          | expr . "is" "$f" '(' expr ')'
  737 make_struct_fields: make_struct_fields ',' "$f" '(' expr ')' copy_or_move expr .

    "is"   shift, and go to state 609
    "as"   shift, and go to state 610
    "<<"   shift, and go to state 611
    ">>"   shift, and go to state 612
    "++"   shift, and go to state 613
    "--"   shift, and go to state 614
    "<="   shift, and go to state 615
    ">="   shift, and go to state 616
    "=="   shift, and go to state 617
    "!="   shift, and go to state 618
    "->"   shift, and go to state 619
    "??"   shift, and go to state 620
    "?."   shift, and go to state 621
    "?["   shift, and go to state 622
    "<|"   shift, and go to state 623
    "|>"   shift, and go to state 624
    "<<<"  shift, and go to state 625
    ">>>"  shift, and go to state 626
    "&&"   shift, and go to state 627
    "||"   shift, and go to state 628
    "^^"   shift, and go to state 629
    ".."   shift, and go to state 630
    '?'    shift, and go to state 631
    '|'    shift, and go to state 632
    '^'    shift, and go to state 633
    '&'    shift, and go to state 634
    '<'    shift, and go to state 635
    '>'    shift, and go to state 636
    '-'    shift, and go to state 637
    '+'    shift, and go to state 638
    '*'    shift, and go to state 639
    '/'    shift, and go to state 640
    '%'    shift, and go to state 641
    '.'    shift, and go to state 642
    '['    shift, and go to state 643

    $default  reduce using rule 737 (make_struct_fields)


State 1443

   59 expression_else: elif_or_static_elif '(' expr ')' . expression_block expression_else

    $default  reduce using rule 216 ($@5)

    expression_block  go to state 1455
    $@5               go to state 327


State 1444

  279 tuple_expansion_variable_declaration: '(' tuple_expansion ')' ':' type_declaration_no_options copy_or_move_or_clone expr . "end of expression"
  347 expr_method_call: expr . "->" "name" '(' ')'
  348                 | expr . "->" "name" '(' expr_list ')'
  358 expr_field: expr . '.' "name"
  359           | expr . '.' '.' "name"
  360           | expr . '.' "name" '(' ')'
  361           | expr . '.' "name" '(' expr_list ')'
  362           | expr . '.' basic_type_declaration '(' ')'
  363           | expr . '.' basic_type_declaration '(' expr_list ')'
  366           | expr . '.' $@21 error $@22
  388 expr: expr . "<<" expr
  389     | expr . ">>" expr
  390     | expr . "<<<" expr
  391     | expr . ">>>" expr
  392     | expr . '+' expr
  393     | expr . '-' expr
  394     | expr . '*' expr
  395     | expr . '/' expr
  396     | expr . '%' expr
  397     | expr . '<' expr
  398     | expr . '>' expr
  399     | expr . "==" expr
  400     | expr . "!=" expr
  401     | expr . "<=" expr
  402     | expr . ">=" expr
  403     | expr . '&' expr
  404     | expr . '|' expr
  405     | expr . '^' expr
  406     | expr . "&&" expr
  407     | expr . "||" expr
  408     | expr . "^^" expr
  409     | expr . ".." expr
  412     | expr . "++"
  413     | expr . "--"
  415     | expr . '[' expr ']'
  416     | expr . '.' '[' expr ']'
  417     | expr . "?[" expr ']'
  418     | expr . '.' "?[" expr ']'
  419     | expr . "?." "name"
  420     | expr . '.' "?." "name"
  429     | expr . "??" expr
  430     | expr . '?' expr ':' expr
  433     | expr . "is" "type" '<' $@23 type_declaration_no_options '>' $@24
  434     | expr . "is" basic_type_declaration
  435     | expr . "is" "name"
  436     | expr . "as" "name"
  439     | expr . "as" "type" '<' $@25 type_declaration '>' $@26
  440     | expr . "as" basic_type_declaration
  441     | expr . '?' "as" "name"
  444     | expr . '?' "as" "type" '<' $@27 type_declaration '>' $@28
  445     | expr . '?' "as" basic_type_declaration
  453     | expr . "<|" expr
  454     | expr . "|>" expr
  455     | expr . "|>" basic_type_declaration
  466 expr_mtag: expr . '.' "$f" '(' expr ')'
  467          | expr . "?." "$f" '(' expr ')'
  468          | expr . '.' '.' "$f" '(' expr ')'
  469          | expr . '.' "?." "$f" '(' expr ')'
  470          | expr . "as" "$f" '(' expr ')'
  471          | expr . '?' "as" "$f" '(' expr ')'
  472          | expr . "is" "$f" '(' expr ')'

    "is"                 shift, and go to state 609
    "as"                 shift, and go to state 610
    "<<"                 shift, and go to state 611
    ">>"                 shift, and go to state 612
    "++"                 shift, and go to state 613
    "--"                 shift, and go to state 614
    "<="                 shift, and go to state 615
    ">="                 shift, and go to state 616
    "=="                 shift, and go to state 617
    "!="                 shift, and go to state 618
    "->"                 shift, and go to state 619
    "??"                 shift, and go to state 620
    "?."                 shift, and go to state 621
    "?["                 shift, and go to state 622
    "<|"                 shift, and go to state 623
    "|>"                 shift, and go to state 624
    "<<<"                shift, and go to state 625
    ">>>"                shift, and go to state 626
    "&&"                 shift, and go to state 627
    "||"                 shift, and go to state 628
    "^^"                 shift, and go to state 629
    ".."                 shift, and go to state 630
    "end of expression"  shift, and go to state 1456
    '?'                  shift, and go to state 631
    '|'                  shift, and go to state 632
    '^'                  shift, and go to state 633
    '&'                  shift, and go to state 634
    '<'                  shift, and go to state 635
    '>'                  shift, and go to state 636
    '-'                  shift, and go to state 637
    '+'                  shift, and go to state 638
    '*'                  shift, and go to state 639
    '/'                  shift, and go to state 640
    '%'                  shift, and go to state 641
    '.'                  shift, and go to state 642
    '['                  shift, and go to state 643


State 1445

  280 tuple_expansion_variable_declaration: '(' tuple_expansion ')' optional_ref copy_or_move_or_clone expr "end of expression" .

    $default  reduce using rule 280 (tuple_expansion_variable_declaration)


State 1446

  493 struct_variable_declaration_list: struct_variable_declaration_list optional_annotation_list "def" optional_public_or_private_member_variable optional_static_member_variable optional_override optional_constant $@31 function_declaration_header expression_block .

    $default  reduce using rule 493 (struct_variable_declaration_list)


State 1447

  741 make_struct_dim_list: '(' make_struct_fields ')' .

    $default  reduce using rule 741 (make_struct_dim_list)


State 1448

  742 make_struct_dim_list: make_struct_dim_list ',' '(' . make_struct_fields ')'

    "$f"    shift, and go to state 792
    "name"  shift, and go to state 1002

    make_struct_fields  go to state 1457


State 1449

  770 make_dim_decl: "array" "struct" '<' $@87 type_declaration_no_options '>' $@88 '(' use_initializer optional_make_struct_dim_decl ')' .

    $default  reduce using rule 770 (make_dim_decl)


State 1450

  773 make_dim_decl: "array" "tuple" '<' $@89 type_declaration_no_options '>' $@90 '(' use_initializer optional_make_struct_dim_decl ')' .

    $default  reduce using rule 773 (make_dim_decl)


State 1451

  792 array_comprehension_where: "end of expression" "where" . expr

    "struct"                          shift, and go to state 409
    "class"                           shift, and go to state 410
    "true"                            shift, and go to state 411
    "false"                           shift, and go to state 412
    "new"                             shift, and go to state 413
    "typeinfo"                        shift, and go to state 414
    "type"                            shift, and go to state 415
    "array"                           shift, and go to state 416
    "null"                            shift, and go to state 417
    "table"                           shift, and go to state 418
    "deref"                           shift, and go to state 419
    "cast"                            shift, and go to state 420
    "upcast"                          shift, and go to state 421
    "addr"                            shift, and go to state 422
    "reinterpret"                     shift, and go to state 423
    "unsafe"                          shift, and go to state 424
    "fixed_array"                     shift, and go to state 425
    "default"                         shift, and go to state 426
    "bool"                            shift, and go to state 225
    "void"                            shift, and go to state 226
    "string"                          shift, and go to state 227
    "int"                             shift, and go to state 229
    "int2"                            shift, and go to state 230
    "int3"                            shift, and go to state 231
    "int4"                            shift, and go to state 232
    "uint"                            shift, and go to state 233
    "bitfield"                        shift, and go to state 427
    "uint2"                           shift, and go to state 235
    "uint3"                           shift, and go to state 236
    "uint4"                           shift, and go to state 237
    "float"                           shift, and go to state 238
    "float2"                          shift, and go to state 239
    "float3"                          shift, and go to state 240
    "float4"                          shift, and go to state 241
    "range"                           shift, and go to state 242
    "urange"                          shift, and go to state 243
    "range64"                         shift, and go to state 244
    "urange64"                        shift, and go to state 245
    "int64"                           shift, and go to state 247
    "uint64"                          shift, and go to state 248
    "double"                          shift, and go to state 249
    "int8"                            shift, and go to state 252
    "uint8"                           shift, and go to state 253
    "int16"                           shift, and go to state 254
    "uint16"                          shift, and go to state 255
    "tuple"                           shift, and go to state 428
    "variant"                         shift, and go to state 429
    "generator"                       shift, and go to state 430
    "++"                              shift, and go to state 431
    "--"                              shift, and go to state 432
    "::"                              shift, and go to state 55
    "$$"                              shift, and go to state 433
    "$i"                              shift, and go to state 434
    "$v"                              shift, and go to state 435
    "$b"                              shift, and go to state 436
    "$a"                              shift, and go to state 437
    "$c"                              shift, and go to state 438
    "..."                             shift, and go to state 439
    "integer constant"                shift, and go to state 440
    "long integer constant"           shift, and go to state 441
    "unsigned integer constant"       shift, and go to state 442
    "unsigned long integer constant"  shift, and go to state 443
    "unsigned int8 constant"          shift, and go to state 444
    "floating point constant"         shift, and go to state 445
    "double constant"                 shift, and go to state 446
    "name"                            shift, and go to state 56
    "start of the string"             shift, and go to state 447
    "begin of code block"             shift, and go to state 448
    '-'                               shift, and go to state 449
    '+'                               shift, and go to state 450
    '*'                               shift, and go to state 451
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 452
    '!'                               shift, and go to state 453
    '['                               shift, and go to state 454
    '('                               shift, and go to state 455
    '$'                               shift, and go to state 456
    '@'                               shift, and go to state 457

    string_builder          go to state 458
    expr_reader             go to state 459
    expr_call_pipe          go to state 460
    name_in_namespace       go to state 461
    expr_new                go to state 462
    expr_cast               go to state 463
    expr_type_decl          go to state 464
    expr_type_info          go to state 465
    block_or_lambda         go to state 466
    expr_full_block         go to state 467
    expr_numeric_const      go to state 468
    expr_named_call         go to state 469
    expr_method_call        go to state 470
    func_addr_expr          go to state 471
    expr_field              go to state 472
    expr_call               go to state 473
    expr                    go to state 1458
    expr_mtag               go to state 475
    basic_type_declaration  go to state 476
    make_decl               go to state 477
    make_struct_decl        go to state 478
    make_tuple_call         go to state 479
    make_dim_decl           go to state 480
    make_table_decl         go to state 481
    array_comprehension     go to state 482


State 1452

  797 array_comprehension: "begin of code block" "for" '(' variable_name_with_pos_list "in" expr_list ')' "end of expression" make_map_tuple array_comprehension_where "end of code block" .

    $default  reduce using rule 797 (array_comprehension)


State 1453

  795 array_comprehension: '[' "for" '(' variable_name_with_pos_list "in" expr_list ')' "end of expression" expr array_comprehension_where ']' .

    $default  reduce using rule 795 (array_comprehension)


State 1454

  796 array_comprehension: '[' "iterator" "for" '(' variable_name_with_pos_list "in" expr_list ')' "end of expression" expr array_comprehension_where . ']'

    ']'  shift, and go to state 1459


State 1455

   59 expression_else: elif_or_static_elif '(' expr ')' expression_block . expression_else

    "else"         shift, and go to state 1341
    "elif"         shift, and go to state 1342
    "static_elif"  shift, and go to state 1343

    $default  reduce using rule 57 (expression_else)

    elif_or_static_elif  go to state 1344
    expression_else      go to state 1460


State 1456

  279 tuple_expansion_variable_declaration: '(' tuple_expansion ')' ':' type_declaration_no_options copy_or_move_or_clone expr "end of expression" .

    $default  reduce using rule 279 (tuple_expansion_variable_declaration)


State 1457

  733 make_struct_fields: make_struct_fields . ',' "name" copy_or_move expr
  734                   | make_struct_fields . ',' "name" ":=" expr
  737                   | make_struct_fields . ',' "$f" '(' expr ')' copy_or_move expr
  738                   | make_struct_fields . ',' "$f" '(' expr ')' ":=" expr
  742 make_struct_dim_list: make_struct_dim_list ',' '(' make_struct_fields . ')'

    ','  shift, and go to state 1011
    ')'  shift, and go to state 1461


State 1458

  347 expr_method_call: expr . "->" "name" '(' ')'
  348                 | expr . "->" "name" '(' expr_list ')'
  358 expr_field: expr . '.' "name"
  359           | expr . '.' '.' "name"
  360           | expr . '.' "name" '(' ')'
  361           | expr . '.' "name" '(' expr_list ')'
  362           | expr . '.' basic_type_declaration '(' ')'
  363           | expr . '.' basic_type_declaration '(' expr_list ')'
  366           | expr . '.' $@21 error $@22
  388 expr: expr . "<<" expr
  389     | expr . ">>" expr
  390     | expr . "<<<" expr
  391     | expr . ">>>" expr
  392     | expr . '+' expr
  393     | expr . '-' expr
  394     | expr . '*' expr
  395     | expr . '/' expr
  396     | expr . '%' expr
  397     | expr . '<' expr
  398     | expr . '>' expr
  399     | expr . "==" expr
  400     | expr . "!=" expr
  401     | expr . "<=" expr
  402     | expr . ">=" expr
  403     | expr . '&' expr
  404     | expr . '|' expr
  405     | expr . '^' expr
  406     | expr . "&&" expr
  407     | expr . "||" expr
  408     | expr . "^^" expr
  409     | expr . ".." expr
  412     | expr . "++"
  413     | expr . "--"
  415     | expr . '[' expr ']'
  416     | expr . '.' '[' expr ']'
  417     | expr . "?[" expr ']'
  418     | expr . '.' "?[" expr ']'
  419     | expr . "?." "name"
  420     | expr . '.' "?." "name"
  429     | expr . "??" expr
  430     | expr . '?' expr ':' expr
  433     | expr . "is" "type" '<' $@23 type_declaration_no_options '>' $@24
  434     | expr . "is" basic_type_declaration
  435     | expr . "is" "name"
  436     | expr . "as" "name"
  439     | expr . "as" "type" '<' $@25 type_declaration '>' $@26
  440     | expr . "as" basic_type_declaration
  441     | expr . '?' "as" "name"
  444     | expr . '?' "as" "type" '<' $@27 type_declaration '>' $@28
  445     | expr . '?' "as" basic_type_declaration
  453     | expr . "<|" expr
  454     | expr . "|>" expr
  455     | expr . "|>" basic_type_declaration
  466 expr_mtag: expr . '.' "$f" '(' expr ')'
  467          | expr . "?." "$f" '(' expr ')'
  468          | expr . '.' '.' "$f" '(' expr ')'
  469          | expr . '.' "?." "$f" '(' expr ')'
  470          | expr . "as" "$f" '(' expr ')'
  471          | expr . '?' "as" "$f" '(' expr ')'
  472          | expr . "is" "$f" '(' expr ')'
  792 array_comprehension_where: "end of expression" "where" expr .

    "is"   shift, and go to state 609
    "as"   shift, and go to state 610
    "<<"   shift, and go to state 611
    ">>"   shift, and go to state 612
    "++"   shift, and go to state 613
    "--"   shift, and go to state 614
    "<="   shift, and go to state 615
    ">="   shift, and go to state 616
    "=="   shift, and go to state 617
    "!="   shift, and go to state 618
    "->"   shift, and go to state 619
    "??"   shift, and go to state 620
    "?."   shift, and go to state 621
    "?["   shift, and go to state 622
    "<|"   shift, and go to state 623
    "|>"   shift, and go to state 624
    "<<<"  shift, and go to state 625
    ">>>"  shift, and go to state 626
    "&&"   shift, and go to state 627
    "||"   shift, and go to state 628
    "^^"   shift, and go to state 629
    ".."   shift, and go to state 630
    '?'    shift, and go to state 631
    '|'    shift, and go to state 632
    '^'    shift, and go to state 633
    '&'    shift, and go to state 634
    '<'    shift, and go to state 635
    '>'    shift, and go to state 636
    '-'    shift, and go to state 637
    '+'    shift, and go to state 638
    '*'    shift, and go to state 639
    '/'    shift, and go to state 640
    '%'    shift, and go to state 641
    '.'    shift, and go to state 642
    '['    shift, and go to state 643

    $default  reduce using rule 792 (array_comprehension_where)


State 1459

  796 array_comprehension: '[' "iterator" "for" '(' variable_name_with_pos_list "in" expr_list ')' "end of expression" expr array_comprehension_where ']' .

    $default  reduce using rule 796 (array_comprehension)


State 1460

   59 expression_else: elif_or_static_elif '(' expr ')' expression_block expression_else .

    $default  reduce using rule 59 (expression_else)


State 1461

  742 make_struct_dim_list: make_struct_dim_list ',' '(' make_struct_fields ')' .

    $default  reduce using rule 742 (make_struct_dim_list)
